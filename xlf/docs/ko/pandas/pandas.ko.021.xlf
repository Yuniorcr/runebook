<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="dc53b11b6029fc49e12f2222615428ae86a0ba0a" translate="yes" xml:space="preserve">
          <source>Overwrite the table with just &lt;code&gt;df2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;df2&lt;/code&gt; 로 테이블을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="bd564db5d5cc358eb0e3523d3e03041739f230d5" translate="yes" xml:space="preserve">
          <source>PASS</source>
          <target state="translated">PASS</target>
        </trans-unit>
        <trans-unit id="afefe3fd6123b1b800495ed2ccd5b2450ea153df" translate="yes" xml:space="preserve">
          <source>PCHIP 1-d monotonic cubic interpolation.</source>
          <target state="translated">PCHIP 1 차원 단조 입방 보간.</target>
        </trans-unit>
        <trans-unit id="a5e69faefcbcaa12ffbc1d58b72bc79aca819f84" translate="yes" xml:space="preserve">
          <source>PERF: Performance improvement</source>
          <target state="translated">PERF : 성능 향상</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="2d20eeb6c18c0976f88e054095263282c77764f7" translate="yes" xml:space="preserve">
          <source>Package overview</source>
          <target state="translated">패키지 개요</target>
        </trans-unit>
        <trans-unit id="9c581182cc5d47ab79186cdfd3a0770f58b0fdd8" translate="yes" xml:space="preserve">
          <source>Pad left and right side of strings in the Series/Index.</source>
          <target state="translated">시리즈 / 인덱스에서 문자열의 왼쪽과 오른쪽을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="8b0d60294be653af634c8d7e3153d5b934cbbf25" translate="yes" xml:space="preserve">
          <source>Pad left side of strings in the Series/Index.</source>
          <target state="translated">시리즈 / 인덱스에서 문자열의 왼쪽을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="f549fb52274f8d8e014d1aa7560f22c296a08229" translate="yes" xml:space="preserve">
          <source>Pad right side of strings in the Series/Index.</source>
          <target state="translated">시리즈 / 인덱스에서 문자열의 오른쪽을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="1991b3f2acf1ce54b3bf0e12ea5e27453cfb7b3c" translate="yes" xml:space="preserve">
          <source>Pad strings in the Series/Index by prepending &amp;lsquo;0&amp;rsquo; character. Equivalent to &lt;code&gt;Series.str.pad(side='left', fillchar='0')&lt;/code&gt;.</source>
          <target state="translated">'0'문자를 앞에 붙여 시리즈 / 인덱스에서 문자열을 채 웁니다. 상당 &lt;code&gt;Series.str.pad(side='left', fillchar='0')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea3b187d4a6d8976189a7f5be22652aeb6a799f0" translate="yes" xml:space="preserve">
          <source>Pad strings in the Series/Index by prepending &amp;lsquo;0&amp;rsquo; characters.</source>
          <target state="translated">'0'문자를 앞에 붙여 시리즈 / 인덱스에서 문자열을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="ba5943ecea801012c3d70542531aa0524b124258" translate="yes" xml:space="preserve">
          <source>Pad strings in the Series/Index up to width.</source>
          <target state="translated">시리즈 / 인덱스의 문자열을 최대 너비까지 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cb63efe816c347b8c164f1dbafe54529ab2a2d21" translate="yes" xml:space="preserve">
          <source>Pairwise correlation is computed between rows or columns of DataFrame with rows or columns of Series or DataFrame. DataFrames are first aligned along both axes before computing the correlations.</source>
          <target state="translated">쌍별 상관 관계는 DataFrame의 행 또는 열과 Series 또는 DataFrame의 행 또는 열간에 계산됩니다. DataFrame은 상관 관계를 계산하기 전에 먼저 두 축을 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="93b91c77531eb0630e8a852bdec87e022d650604" translate="yes" xml:space="preserve">
          <source>Pairwise correlations.</source>
          <target state="translated">쌍별 상관 관계.</target>
        </trans-unit>
        <trans-unit id="7a759ec8891b1d6e9fc1fa3a392ebaade59759ec" translate="yes" xml:space="preserve">
          <source>Pandas (pd) and Numpy (np) are the only two abbreviated imported modules. The rest are kept explicitly imported for newer users.</source>
          <target state="translated">Pandas (pd)와 Numpy (np)는 두 가지 약식 수입 모듈입니다. 나머지는 신규 사용자를 위해 명시 적으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="67554d267b845cdba3187fb29b6cee4779df6667" translate="yes" xml:space="preserve">
          <source>Pandas Data Type</source>
          <target state="translated">팬더 데이터 유형</target>
        </trans-unit>
        <trans-unit id="4a3bb786600cd0ade9e6be2d6716650b16ddad64" translate="yes" xml:space="preserve">
          <source>Pandas DataFrames Tutorial, by Karlijn Willems</source>
          <target state="translated">Karlijn Willems의 Pandas DataFrames Tutorial</target>
        </trans-unit>
        <trans-unit id="0ec91ff235d71e10c150d03de5b9b16a564b4244" translate="yes" xml:space="preserve">
          <source>Pandas DataFrames implement &lt;code&gt;_repr_html_``and ``_repr_latex&lt;/code&gt; methods which are utilized by Jupyter Notebook for displaying (abbreviated) HTML or LaTeX tables. LaTeX output is properly escaped. (Note: HTML tables may or may not be compatible with non-HTML Jupyter output formats.)</source>
          <target state="translated">Pandas DataFrames 는 Jupyter Notebook에서 HTML 또는 LaTeX 테이블을 표시하기 위해 사용하는 _repr_html_`` &lt;code&gt;_repr_html_``and ``_repr_latex&lt;/code&gt; 메서드를 구현 합니다. LaTeX 출력이 올바르게 이스케이프되었습니다. (참고 : HTML 테이블은 HTML이 아닌 Jupyter 출력 형식과 호환되거나 호환되지 않을 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="b7aaa6cbe34abc514d35cd1a91f19127435050d8" translate="yes" xml:space="preserve">
          <source>Pandas ExtensionArray for storing Period data.</source>
          <target state="translated">기간 데이터를 저장하기위한 Pandas ExtensionArray입니다.</target>
        </trans-unit>
        <trans-unit id="1ff28d8c9ac3bc7ba00a2fded0359c25500461e7" translate="yes" xml:space="preserve">
          <source>Pandas ExtensionArray for timedelta data.</source>
          <target state="translated">타임 델타 데이터를위한 Pandas ExtensionArray</target>
        </trans-unit>
        <trans-unit id="e06fcb9ec29bae9c69d1dd14d03773e102c9f21a" translate="yes" xml:space="preserve">
          <source>Pandas ExtensionArray for tz-naive or tz-aware datetime data.</source>
          <target state="translated">tz 순진 또는 tz 인식 날짜 시간 데이터를위한 Pandas ExtensionArray입니다.</target>
        </trans-unit>
        <trans-unit id="93ffc1a51571a3c34da773607940b9487ca9ae42" translate="yes" xml:space="preserve">
          <source>Pandas Series from where to get the samplings for the bootstrapping.</source>
          <target state="translated">부트 스트랩을위한 샘플링을 얻을 수있는 곳에서 팬더 시리즈.</target>
        </trans-unit>
        <trans-unit id="1117859e4b75458d751c0dc54f9be93242c65916" translate="yes" xml:space="preserve">
          <source>Pandas and Python: Top 10, by Manish Amde</source>
          <target state="translated">팬더와 파이썬 : Manish Amde의 Top 10</target>
        </trans-unit>
        <trans-unit id="1e567539af86a1e0ba2f0868a80713c6515b48ab" translate="yes" xml:space="preserve">
          <source>Pandas and third-party libraries can extend NumPy&amp;rsquo;s type system (see &lt;a href=&quot;../development/extending#extending-extension-types&quot;&gt;Extension types&lt;/a&gt;). The top-level &lt;a href=&quot;api/pandas.array#pandas.array&quot;&gt;&lt;code&gt;array()&lt;/code&gt;&lt;/a&gt; method can be used to create a new array, which may be stored in a &lt;a href=&quot;api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;, or as a column in a &lt;a href=&quot;api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">팬더 및 타사 라이브러리는 NumPy의 유형 시스템을 확장 할 수 있습니다 ( &lt;a href=&quot;../development/extending#extending-extension-types&quot;&gt;확장 유형&lt;/a&gt; 참조 ). 최상위 &lt;a href=&quot;api/pandas.array#pandas.array&quot;&gt; &lt;code&gt;array()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 &lt;a href=&quot;api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;api/pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt; 의 열에 저장할 수있는 새 배열을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="027412c0d3010ce57905ba1f975de95237eb5a29" translate="yes" xml:space="preserve">
          <source>Pandas array for interval data that are closed on the same side.</source>
          <target state="translated">같은쪽에 닫힌 간격 데이터에 대한 팬더 배열입니다.</target>
        </trans-unit>
        <trans-unit id="84b8204c5fe53e4d5dc9285fcb8c7eec66fe4194" translate="yes" xml:space="preserve">
          <source>Pandas arrays</source>
          <target state="translated">팬더 배열</target>
        </trans-unit>
        <trans-unit id="d382343d36c32b03ce1d60af61d30d37543f7943" translate="yes" xml:space="preserve">
          <source>Pandas can also export to Stata file format with the &lt;a href=&quot;../../reference/api/pandas.dataframe.to_stata#pandas.DataFrame.to_stata&quot;&gt;&lt;code&gt;DataFrame.to_stata()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Pandas는 &lt;a href=&quot;../../reference/api/pandas.dataframe.to_stata#pandas.DataFrame.to_stata&quot;&gt; &lt;code&gt;DataFrame.to_stata()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 Stata 파일 형식으로 내보낼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc2f5ff67006c67e045c763ef65930b1198e2d87" translate="yes" xml:space="preserve">
          <source>Pandas can also read Stata data sets in &lt;code&gt;.dta&lt;/code&gt; format with the &lt;a href=&quot;../../reference/api/pandas.read_stata#pandas.read_stata&quot;&gt;&lt;code&gt;read_stata()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">팬더는 &lt;a href=&quot;../../reference/api/pandas.read_stata#pandas.read_stata&quot;&gt; &lt;code&gt;read_stata()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 Stata 데이터 세트를 &lt;code&gt;.dta&lt;/code&gt; 형식으로 읽을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="58042b3d0335b7825dc2ac2105cde1b5790779d8" translate="yes" xml:space="preserve">
          <source>Pandas can represent integer data with possibly missing values using &lt;a href=&quot;../reference/api/pandas.arrays.integerarray#pandas.arrays.IntegerArray&quot;&gt;&lt;code&gt;arrays.IntegerArray&lt;/code&gt;&lt;/a&gt;. This is an &lt;a href=&quot;../development/extending#extending-extension-types&quot;&gt;extension types&lt;/a&gt; implemented within pandas. It is not the default dtype for integers, and will not be inferred; you must explicitly pass the dtype into &lt;a href=&quot;../reference/api/pandas.array#pandas.array&quot;&gt;&lt;code&gt;array()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">팬더는 &lt;a href=&quot;../reference/api/pandas.arrays.integerarray#pandas.arrays.IntegerArray&quot;&gt; &lt;code&gt;arrays.IntegerArray&lt;/code&gt; 를&lt;/a&gt; 사용하여 값이 누락 된 정수 데이터를 나타낼 수 있습니다 . 이것은 판다 내에서 구현 되는 &lt;a href=&quot;../development/extending#extending-extension-types&quot;&gt;확장 유형&lt;/a&gt; 입니다. 정수의 기본 dtype이 아니며 유추되지 않습니다. 명시 적으로 dtype을 &lt;a href=&quot;../reference/api/pandas.array#pandas.array&quot;&gt; &lt;code&gt;array()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; 에&lt;/a&gt; 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a62f7339f25afd99887d4814a1f50bccf28a8421" translate="yes" xml:space="preserve">
          <source>Pandas defines a custom data type for representing data that can take only a limited, fixed set of values. The dtype of a &lt;code&gt;Categorical&lt;/code&gt; can be described by a &lt;code&gt;pandas.api.types.CategoricalDtype&lt;/code&gt;.</source>
          <target state="translated">Pandas는 제한된 고정 값 집합 만 사용할 수있는 데이터를 나타내는 사용자 지정 데이터 형식을 정의합니다. (A)의 DTYPE &lt;code&gt;Categorical&lt;/code&gt; a로 설명 될 수 &lt;code&gt;pandas.api.types.CategoricalDtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f178ada8b9c618f3f893a76ae96839888f9af15a" translate="yes" xml:space="preserve">
          <source>Pandas defines an interface for implementing data types and arrays that &lt;em&gt;extend&lt;/em&gt; NumPy&amp;rsquo;s type system. Pandas itself uses the extension system for some types that aren&amp;rsquo;t built into NumPy (categorical, period, interval, datetime with timezone).</source>
          <target state="translated">Pandas는 NumPy의 유형 시스템 을 &lt;em&gt;확장&lt;/em&gt; 하는 데이터 유형 및 배열을 구현하기위한 인터페이스를 정의합니다 . 팬더 자체는 NumPy에 내장되지 않은 일부 유형 (범주, 기간, 간격, 시간대가있는 날짜 / 시간)에 확장 시스템을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5fc42cfba57a298dbecd37b08f0f71019a275415" translate="yes" xml:space="preserve">
          <source>Pandas ecosystem</source>
          <target state="translated">팬더 생태계</target>
        </trans-unit>
        <trans-unit id="4c154e8d4732ae16d34f562feb3533c322c366bf" translate="yes" xml:space="preserve">
          <source>Pandas equivalents for some SQL analytic and aggregate functions</source>
          <target state="translated">일부 SQL 분석 및 집계 함수에 해당하는 팬더</target>
        </trans-unit>
        <trans-unit id="e0f75dab11b539cdc6096b969d1be8b9d25cc08f" translate="yes" xml:space="preserve">
          <source>Pandas has a system for sharing docstrings, with slight variations, between classes. This helps us keep docstrings consistent, while keeping things clear for the user reading. It comes at the cost of some complexity when writing.</source>
          <target state="translated">Pandas에는 클래스간에 약간의 변형이있는 docstring을 공유하는 시스템이 있습니다. 이것은 사용자가 읽을 수 있도록 명확하게 유지하면서 문서 문자열을 일관성있게 유지하는 데 도움이됩니다. 글을 쓸 때 약간의 비용이 듭니다.</target>
        </trans-unit>
        <trans-unit id="9cc570f48bfc23424ff565e5ed74388ee831d746" translate="yes" xml:space="preserve">
          <source>Pandas has many optional dependencies that are only used for specific methods. For example, &lt;a href=&quot;reference/api/pandas.read_hdf#pandas.read_hdf&quot;&gt;&lt;code&gt;pandas.read_hdf()&lt;/code&gt;&lt;/a&gt; requires the &lt;code&gt;pytables&lt;/code&gt; package. If the optional dependency is not installed, pandas will raise an &lt;code&gt;ImportError&lt;/code&gt; when the method requiring that dependency is called.</source>
          <target state="translated">Pandas에는 특정 방법에만 사용되는 많은 선택적 종속성이 있습니다. 예를 들어, &lt;a href=&quot;reference/api/pandas.read_hdf#pandas.read_hdf&quot;&gt; &lt;code&gt;pandas.read_hdf()&lt;/code&gt; &lt;/a&gt; 에는 &lt;code&gt;pytables&lt;/code&gt; 패키지 가 필요합니다 . 선택적 종속성이 설치되지 않은 경우 팬더는 해당 종속성이 필요한 메소드가 호출 될 때 &lt;code&gt;ImportError&lt;/code&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="ae7ba2562df5b5e3dc77c7e58a0f73ea01ea41df" translate="yes" xml:space="preserve">
          <source>Pandas has some helpers for sharing docstrings between related classes, see &lt;a href=&quot;#docstring-sharing&quot;&gt;Sharing docstrings&lt;/a&gt;.</source>
          <target state="translated">Pandas에는 관련 클래스간에 문서 문자열을 공유하기위한 도우미가 있습니다 (문서 문자열 &lt;a href=&quot;#docstring-sharing&quot;&gt;공유 참조)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cbe1b7d7aa8fbef1c1a76bb85c7a924f8b4fbe1" translate="yes" xml:space="preserve">
          <source>Pandas makes no restrictions on how an extension array is created via its &lt;code&gt;__new__&lt;/code&gt; or &lt;code&gt;__init__&lt;/code&gt;, and puts no restrictions on how you store your data. We do require that your array be convertible to a NumPy array, even if this is relatively expensive (as it is for &lt;code&gt;Categorical&lt;/code&gt;).</source>
          <target state="translated">Pandas는 &lt;code&gt;__new__&lt;/code&gt; 또는 &lt;code&gt;__init__&lt;/code&gt; 를 통해 확장 배열을 만드는 방법을 제한하지 않으며 데이터 저장 방법을 제한하지 않습니다. 상대적으로 비싸더라도 ( &lt;code&gt;Categorical&lt;/code&gt; 과 마찬가지로) 배열을 NumPy 배열로 변환 할 수 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c21b8a6779f2f004f79cd9612563cfc6be2ef583" translate="yes" xml:space="preserve">
          <source>Pandas object holding the data.</source>
          <target state="translated">팬더 객체가 데이터를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="d21ccf071e48d1a71fe9e040aa3c12ae1f334e4c" translate="yes" xml:space="preserve">
          <source>Pandas on Ray is an early stage DataFrame library that wraps Pandas and transparently distributes the data and computation. The user does not need to know how many cores their system has, nor do they need to specify how to distribute the data. In fact, users can continue using their previous Pandas notebooks while experiencing a considerable speedup from Pandas on Ray, even on a single machine. Only a modification of the import statement is needed, as we demonstrate below. Once you&amp;rsquo;ve changed your import statement, you&amp;rsquo;re ready to use Pandas on Ray just like you would Pandas.</source>
          <target state="translated">Pandas on Ray는 Pandas를 감싸고 데이터와 계산을 투명하게 배포하는 초기 DataFrame 라이브러리입니다. 사용자는 시스템의 코어 수를 알 필요가 없으며 데이터 배포 방법을 지정할 필요가 없습니다. 실제로, 사용자는 단일 시스템에서도 Pandas on Ray의 상당한 속도 향상을 경험하면서 이전 Pandas 노트북을 계속 사용할 수 있습니다. 아래에서 설명하는 것처럼 import 문의 수정 만 필요합니다. import 문을 변경하면 Pandas와 마찬가지로 Ray on Pandas를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c695451815a9168439fd41c7113d2f9ceeb365cb" translate="yes" xml:space="preserve">
          <source>Pandas provides an interface for defining &lt;a href=&quot;development/extending#extending-extension-types&quot;&gt;extension types&lt;/a&gt; to extend NumPy&amp;rsquo;s type system. The following libraries implement that interface to provide types not found in NumPy or pandas, which work well with pandas&amp;rsquo; data containers.</source>
          <target state="translated">Pandas는 NumPy의 유형 시스템을 확장하기 위해 &lt;a href=&quot;development/extending#extending-extension-types&quot;&gt;확장 유형&lt;/a&gt; 을 정의하기위한 인터페이스를 제공합니다 . 다음 라이브러리는 NumPy 또는 팬더에는없는 팬더의 데이터 컨테이너와 잘 작동하는 유형을 제공하기 위해 해당 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="85607f00e36bb52861c1ab6cf3123a865bc8c845" translate="yes" xml:space="preserve">
          <source>Pandas provides data structures for efficiently storing sparse data. These are not necessarily sparse in the typical &amp;ldquo;mostly 0&amp;rdquo;. Rather, you can view these objects as being &amp;ldquo;compressed&amp;rdquo; where any data matching a specific value (&lt;code&gt;NaN&lt;/code&gt; / missing value, though any value can be chosen, including 0) is omitted. The compressed values are not actually stored in the array.</source>
          <target state="translated">Pandas는 스파 스 데이터를 효율적으로 저장하기위한 데이터 구조를 제공합니다. 이것들은 전형적인&amp;ldquo;대부분 0&amp;rdquo;에서 반드시 희박하지는 않습니다. 오히려 특정 값과 일치하는 데이터 ( &lt;code&gt;NaN&lt;/code&gt; / 결 측값, 0을 포함한 모든 값을 선택할 수 있음)가 생략 된 경우 이러한 객체를 &quot;압축 된&quot;것으로 볼 수 있습니다. 압축 된 값은 실제로 배열에 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3beb2797e48d238a09accd1a262596e9320673d3" translate="yes" xml:space="preserve">
          <source>Pandas provides dtype-specific methods under various accessors. These are separate namespaces within &lt;a href=&quot;api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; that only apply to specific data types.</source>
          <target state="translated">팬더는 다양한 접근 자에서 dtype 관련 메소드를 제공합니다. 이들은 별도의 네임 스페이스입니다.&lt;a href=&quot;api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt;에서 특정 데이터 형식에만 적용입니다.</target>
        </trans-unit>
        <trans-unit id="2b72bc8721e191840e1cd18d9a1fd5764dac266e" translate="yes" xml:space="preserve">
          <source>Pandas replacement for python datetime.datetime object.</source>
          <target state="translated">파이썬 datetime.datetime 객체의 팬더 교체.</target>
        </trans-unit>
        <trans-unit id="3405c54f6e17c647418a358a802bb402c8e3d8d4" translate="yes" xml:space="preserve">
          <source>Pandas represents spans of times as &lt;a href=&quot;api/pandas.period#pandas.Period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">팬더는 시간 범위를 &lt;a href=&quot;api/pandas.period#pandas.Period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="30d85b26efb66d93fc0793f9f0fc137d0b9901a8" translate="yes" xml:space="preserve">
          <source>Pandas uses C extensions (mostly written using Cython) to speed up certain operations. To install pandas from source, you need to compile these C extensions, which means you need a C compiler. This process depends on which platform you&amp;rsquo;re using. Follow the &lt;a href=&quot;https://devguide.python.org/setup/#compile-and-build&quot;&gt;CPython contributing guide&lt;/a&gt; for getting a compiler installed. You don&amp;rsquo;t need to do any of the &lt;code&gt;./configure&lt;/code&gt; or &lt;code&gt;make&lt;/code&gt; steps; you only need to install the compiler.</source>
          <target state="translated">Pandas는 C 확장 (대부분 Cython을 사용하여 작성)을 사용하여 특정 작업의 속도를 높입니다. 소스에서 팬더를 설치하려면 이러한 C 확장을 컴파일해야합니다. 즉, C 컴파일러가 필요합니다. 이 프로세스는 사용중인 플랫폼에 따라 다릅니다. 을 따르지 &lt;a href=&quot;https://devguide.python.org/setup/#compile-and-build&quot;&gt;CPython에 기여 가이드를&lt;/a&gt; 설치 컴파일러를 얻기 위해. &lt;code&gt;./configure&lt;/code&gt; &lt;code&gt;make&lt;/code&gt; 수행 하거나 단계 를 수행 할 필요가 없습니다 . 컴파일러 만 설치하면됩니다.</target>
        </trans-unit>
        <trans-unit id="6b7fd286413c3b291484f82e9a49f424c7d9e24d" translate="yes" xml:space="preserve">
          <source>Pandas uses PyTables for reading and writing HDF5 files, which allows serializing object-dtype data with pickle when using the &amp;ldquo;fixed&amp;rdquo; format. Loading pickled data received from untrusted sources can be unsafe.</source>
          <target state="translated">Pandas는 HDF5 파일을 읽고 쓰는 데 PyTables를 사용합니다.이를 통해 &quot;고정&quot;형식을 사용할 때 피클을 사용하여 object-dtype 데이터를 직렬화 할 수 있습니다. 신뢰할 수없는 출처에서받은 절인 데이터를로드하는 것은 안전하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8776ac2beb997046890a79ee5284e51108765955" translate="yes" xml:space="preserve">
          <source>Pandas uses the following keys in render. Arguments passed in &lt;code&gt;**kwargs&lt;/code&gt; take precedence, so think carefully if you want to override them:</source>
          <target state="translated">Pandas는 다음 키를 렌더링에 사용합니다. &lt;code&gt;**kwargs&lt;/code&gt; 로 전달 된 인수 가 우선하므로이를 무시하려면 신중하게 생각하십시오.</target>
        </trans-unit>
        <trans-unit id="7bde5481a8a1d9a141f8d441bacf2d1d730f594d" translate="yes" xml:space="preserve">
          <source>Pandas will infer an ExtensionArray for some types of data:</source>
          <target state="translated">Pandas는 일부 유형의 데이터에 대해 ExtensionArray를 유추합니다.</target>
        </trans-unit>
        <trans-unit id="2f4bd749ecf708ff53a15e9e7904176bd92ad347" translate="yes" xml:space="preserve">
          <source>Panel</source>
          <target state="translated">Panel</target>
        </trans-unit>
        <trans-unit id="3d839568779777a0feed50be2db506667ad8cf01" translate="yes" xml:space="preserve">
          <source>Parallel Coordinates</source>
          <target state="translated">평행 좌표</target>
        </trans-unit>
        <trans-unit id="f89de2d59a134f9071a9ce11b75c97e6d0eb3a99" translate="yes" xml:space="preserve">
          <source>Parallel coordinates</source>
          <target state="translated">평행 좌표</target>
        </trans-unit>
        <trans-unit id="15389b0ed2975627345c38a8a85efce950f1de02" translate="yes" xml:space="preserve">
          <source>Parallel coordinates charts:</source>
          <target state="translated">평행 좌표 차트 :</target>
        </trans-unit>
        <trans-unit id="2c9ba399be0b8b3478d7ad90be77c805ad533397" translate="yes" xml:space="preserve">
          <source>Parallel coordinates is a plotting technique for plotting multivariate data, see the &lt;a href=&quot;https://en.wikipedia.org/wiki/Parallel_coordinates&quot;&gt;Wikipedia entry&lt;/a&gt; for an introduction. Parallel coordinates allows one to see clusters in data and to estimate other statistics visually. Using parallel coordinates points are represented as connected line segments. Each vertical line represents one attribute. One set of connected line segments represents one data point. Points that tend to cluster will appear closer together.</source>
          <target state="translated">평행 좌표는 다변량 데이터를 플로팅하기위한 플로팅 기술입니다 . 소개 는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Parallel_coordinates&quot;&gt;Wikipedia 항목&lt;/a&gt; 을 참조하세요 . 평행 좌표를 사용하면 데이터의 클러스터를보고 다른 통계를 시각적으로 추정 할 수 있습니다. 평행 좌표를 사용하면 점이 연결된 선분으로 표시됩니다. 각 수직선은 하나의 속성을 나타냅니다. 한 세트의 연결된 선분은 하나의 데이터 포인트를 나타냅니다. 군집하는 경향이있는 점은 서로 더 가깝게 나타납니다.</target>
        </trans-unit>
        <trans-unit id="e0a1fbea9aa14f2586103f6c3cc1f656e915b6cf" translate="yes" xml:space="preserve">
          <source>Parallel coordinates plotting.</source>
          <target state="translated">평행 좌표 플로팅.</target>
        </trans-unit>
        <trans-unit id="f07c7c05560c2f7ed21b064b9e9bcca97d69e43e" translate="yes" xml:space="preserve">
          <source>Parameter is propagated to &amp;lsquo;create_table&amp;rsquo; method of &amp;lsquo;PyTables&amp;rsquo;. If set to False it enables to have the same h5 files (same hashes) independent on creation time.</source>
          <target state="translated">매개 변수는 'PyTables'의 'create_table'메소드로 전파됩니다. False로 설정하면 생성 시간에 관계없이 동일한 h5 파일 (동일한 해시)을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73d6816f753293f57877beeac6dbed4d1fd1465d" translate="yes" xml:space="preserve">
          <source>Parameter needed for compatibility with DataFrame.</source>
          <target state="translated">DataFrame과의 호환성에 필요한 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="511ffd4fb0750e4d75b508a03b761a01f1c67316" translate="yes" xml:space="preserve">
          <source>Parameter types</source>
          <target state="translated">매개 변수 유형</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="cbff42e933b453bd3df4db47add42681c415e7df" translate="yes" xml:space="preserve">
          <source>Parameters &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;lsuffix&lt;/code&gt;, and &lt;code&gt;rsuffix&lt;/code&gt; are not supported when passing a list of &lt;code&gt;DataFrame&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 객체 목록을 전달할 때는 &lt;code&gt;on&lt;/code&gt; , &lt;code&gt;lsuffix&lt;/code&gt; 및 &lt;code&gt;rsuffix&lt;/code&gt; 매개 변수 가 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8a891e13f71bbeeb217dd6285e8c1cc8b544f4f7" translate="yes" xml:space="preserve">
          <source>Parameters like &lt;code&gt;label&lt;/code&gt; are used to manipulate the resulting labels. &lt;code&gt;label&lt;/code&gt; specifies whether the result is labeled with the beginning or the end of the interval.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; 과 같은 매개 변수 는 결과 라벨을 조작하는 데 사용됩니다. &lt;code&gt;label&lt;/code&gt; 은 결과에 간격의 시작 또는 끝으로 레이블이 지정되는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="aad4383029ba4c90363679a5a0d37309fab09af8" translate="yes" xml:space="preserve">
          <source>Parameters that &lt;strong&gt;add&lt;/strong&gt; to the offset (like Timedelta):</source>
          <target state="translated">오프셋에 &lt;strong&gt;추가&lt;/strong&gt; 되는 매개 변수 (예 : Timedelta) :</target>
        </trans-unit>
        <trans-unit id="d65ab62c24068baaa3df36069f69e40f21f98ff8" translate="yes" xml:space="preserve">
          <source>Parameters that &lt;strong&gt;replace&lt;/strong&gt; the offset value:</source>
          <target state="translated">오프셋 값 을 &lt;strong&gt;대체&lt;/strong&gt; 하는 매개 변수 :</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="39623bb907fe4d8050c4f3209dcc42a477562072" translate="yes" xml:space="preserve">
          <source>Parametric offsets</source>
          <target state="translated">파라 메트릭 오프셋</target>
        </trans-unit>
        <trans-unit id="b6d723c4422f1831114918787bf7b07424cb30e7" translate="yes" xml:space="preserve">
          <source>Parquet</source>
          <target state="translated">Parquet</target>
        </trans-unit>
        <trans-unit id="3eff82fbda53acf8c428b63a848c44b6e34d3239" translate="yes" xml:space="preserve">
          <source>Parquet Format</source>
          <target state="translated">쪽모이 세공 형식</target>
        </trans-unit>
        <trans-unit id="729feb17186d7373aa5bc88278ecea961b54cbb0" translate="yes" xml:space="preserve">
          <source>Parquet and feather reading / writing</source>
          <target state="translated">쪽모이 세공 및 깃털 읽기 / 쓰기</target>
        </trans-unit>
        <trans-unit id="3e72b50f5c67e19ed0a9e197691f12696ad71f0c" translate="yes" xml:space="preserve">
          <source>Parquet is designed to faithfully serialize and de-serialize &lt;code&gt;DataFrame&lt;/code&gt; s, supporting all of the pandas dtypes, including extension dtypes such as datetime with tz.</source>
          <target state="translated">Parquet은 &lt;code&gt;DataFrame&lt;/code&gt; 을 충실히 직렬화 및 역 직렬화하도록 설계되었으며 , tz가있는 datetime과 같은 확장 dtype을 포함하여 모든 pandas dtype을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9c86c91bbe93616f9f56639b9aff56c4f806c2de" translate="yes" xml:space="preserve">
          <source>Parquet library to use. If &amp;lsquo;auto&amp;rsquo;, then the option &lt;code&gt;io.parquet.engine&lt;/code&gt; is used. The default &lt;code&gt;io.parquet.engine&lt;/code&gt; behavior is to try &amp;lsquo;pyarrow&amp;rsquo;, falling back to &amp;lsquo;fastparquet&amp;rsquo; if &amp;lsquo;pyarrow&amp;rsquo; is unavailable.</source>
          <target state="translated">사용할 마루 라이브러리. 'auto'인 경우 옵션 &lt;code&gt;io.parquet.engine&lt;/code&gt; 이 사용됩니다. 기본 &lt;code&gt;io.parquet.engine&lt;/code&gt; 작동은 'pyarrow'를 사용할 수없는 경우 'fastarrow'로 돌아가는 'pyarrow'를 시도하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="31829b25d1e2b88afe9823470988636ed7fc5a61" translate="yes" xml:space="preserve">
          <source>Parquet reading / writing</source>
          <target state="translated">쪽모이 세공 읽기 / 쓰기</target>
        </trans-unit>
        <trans-unit id="17e736d4b8965f61b5678b114ab1892f29597675" translate="yes" xml:space="preserve">
          <source>Parquet supports partitioning of data based on the values of one or more columns.</source>
          <target state="translated">Parquet은 하나 이상의 열 값을 기반으로 데이터 분할을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="db212c9f981ee1e56571faca69d752757eba3be6" translate="yes" xml:space="preserve">
          <source>Parse specified sheet(s) into a DataFrame</source>
          <target state="translated">지정된 시트를 DataFrame으로 구문 분석</target>
        </trans-unit>
        <trans-unit id="01a1784338aa62b50b7228aed660bf21bae5074d" translate="yes" xml:space="preserve">
          <source>Parse specified sheet(s) into a DataFrame.</source>
          <target state="translated">지정된 시트를 DataFrame으로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="ac213d95ce81e6cb4b1889184dec7a7b8c49fcc4" translate="yes" xml:space="preserve">
          <source>Parser engine to use. The C engine is faster while the Python engine is currently more feature-complete.</source>
          <target state="translated">사용할 파서 엔진입니다. C 엔진은 더 빠르지 만 Python 엔진은 현재 더 많은 기능을 갖추고 있습니다.</target>
        </trans-unit>
        <trans-unit id="70e9c0030dd35f6d4391f0563caa16a349a7748e" translate="yes" xml:space="preserve">
          <source>Parser engine to use. The C engine is faster while the python engine is currently more feature-complete.</source>
          <target state="translated">사용할 파서 엔진. C 엔진은 더 빠르지 만 파이썬 엔진은 현재 기능이 더 완벽합니다.</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="ddb5a51f5b051a8d071747b2dd6f40f2d0d5a7ce" translate="yes" xml:space="preserve">
          <source>Parsing a CSV with mixed timezones</source>
          <target state="translated">시간대가 혼합 된 CSV 구문 분석</target>
        </trans-unit>
        <trans-unit id="b7c31aef92e4bff80850de2364c5e5e411e64370" translate="yes" xml:space="preserve">
          <source>Parsing a list or array of strings:</source>
          <target state="translated">문자열 목록 또는 배열 구문 분석 :</target>
        </trans-unit>
        <trans-unit id="6e364f31723bcf502b9774b78773cd7328300d87" translate="yes" xml:space="preserve">
          <source>Parsing a single string to a Timedelta:</source>
          <target state="translated">단일 문자열을 Timedelta로 구문 분석 :</target>
        </trans-unit>
        <trans-unit id="e63db20c551c514ac5a69159703008b811c627ce" translate="yes" xml:space="preserve">
          <source>Parsing date components in multi-columns</source>
          <target state="translated">여러 열의 날짜 구성 요소 구문 분석</target>
        </trans-unit>
        <trans-unit id="74a2d092ef6fd5964d7afa0d9c9aef255eea3ef0" translate="yes" xml:space="preserve">
          <source>Parsing date components in multi-columns is faster with a format</source>
          <target state="translated">형식을 사용하면 여러 열의 날짜 구성 요소를 더 빠르게 구문 분석 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee789f410ee0cacfc616fe6973e1cb6f8df3e238" translate="yes" xml:space="preserve">
          <source>Parsing dates</source>
          <target state="translated">날짜 구문 분석</target>
        </trans-unit>
        <trans-unit id="c37dd74b7aa0fd821078bc00dea1bf7924a0ae4d" translate="yes" xml:space="preserve">
          <source>Parsing options</source>
          <target state="translated">파싱 ​​옵션</target>
        </trans-unit>
        <trans-unit id="ac5beba1025b6b8e6be75034da3d30ddd9e39629" translate="yes" xml:space="preserve">
          <source>Parsing specific columns</source>
          <target state="translated">특정 열 구문 분석</target>
        </trans-unit>
        <trans-unit id="a4562b76c1f646a55d536fdf0802d0ddf9b8805e" translate="yes" xml:space="preserve">
          <source>Parsing time series information from various sources and formats</source>
          <target state="translated">다양한 소스 및 형식의 시계열 정보 구문 분석</target>
        </trans-unit>
        <trans-unit id="92928cebb9d2e9a0b772596b27252aabb2e15137" translate="yes" xml:space="preserve">
          <source>Partial indexing with MultiIndex not allowed</source>
          <target state="translated">다중 인덱스를 사용한 부분 인덱싱은 허용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="ceabaa927880f14ca64faa4a743f735ca59004ca" translate="yes" xml:space="preserve">
          <source>Partial selection, the need for sortedness;</source>
          <target state="translated">부분 선택, 분류의 필요성;</target>
        </trans-unit>
        <trans-unit id="37843277b3513765b1d13246e108e54855f079e8" translate="yes" xml:space="preserve">
          <source>Partial string indexing</source>
          <target state="translated">부분 문자열 인덱싱</target>
        </trans-unit>
        <trans-unit id="1ad7b740bffaee82c742ef32973bc8d3faf4bbb0" translate="yes" xml:space="preserve">
          <source>Partial sums and subtotals</source>
          <target state="translated">부분 합계 및 소계</target>
        </trans-unit>
        <trans-unit id="e0c4eccf72d41d398f67be9a330473276bdf5cc6" translate="yes" xml:space="preserve">
          <source>Partitioning Parquet files</source>
          <target state="translated">Parquet 파일 분할</target>
        </trans-unit>
        <trans-unit id="664c8b8feb63b87992a86ebf00ee9e7c26c930bb" translate="yes" xml:space="preserve">
          <source>Pass &amp;ldquo;all&amp;rdquo; as argument to reset all options.</source>
          <target state="translated">모든 옵션을 재설정하려면&amp;ldquo;all&amp;rdquo;을 인수로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="5bb71323a3da1ebc8f109fe9830145e20274ac4c" translate="yes" xml:space="preserve">
          <source>Pass &amp;lsquo;timestamp&amp;rsquo; to convert the resulting index to a</source>
          <target state="translated">'timestamp'를 전달하여 결과 색인을</target>
        </trans-unit>
        <trans-unit id="aea009b82cce32d25c82f5c945fab835ae1e44f6" translate="yes" xml:space="preserve">
          <source>Pass &amp;lsquo;timestamp&amp;rsquo; to convert the resulting index to a &lt;code&gt;DateTimeIndex&lt;/code&gt; or &amp;lsquo;period&amp;rsquo; to convert it to a &lt;code&gt;PeriodIndex&lt;/code&gt;. By default the input representation is retained.</source>
          <target state="translated">결과 인덱스를 &lt;code&gt;DateTimeIndex&lt;/code&gt; 로 변환하려면 'timestamp'를 전달하고 &lt;code&gt;PeriodIndex&lt;/code&gt; 로 변환하려면 'period'를 전달하십시오. . 기본적으로 입력 표현은 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="f60d6f17d7d6fe4b79f453fd5dd2b0e4cf812b90" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;errors='coerce'&lt;/code&gt; to convert unparsable data to &lt;code&gt;NaT&lt;/code&gt; (not a time):</source>
          <target state="translated">패스 &lt;code&gt;errors='coerce'&lt;/code&gt; 로 해석 할 데이터를 변환하는 &lt;code&gt;NaT&lt;/code&gt; (안 시간) :</target>
        </trans-unit>
        <trans-unit id="2508fb204211c76d71cdc81df4a65aa32d6f2410" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;errors='ignore'&lt;/code&gt; to return the original input when unparsable:</source>
          <target state="translated">패스 &lt;code&gt;errors='ignore'&lt;/code&gt; 할 때 해석 할 원래의 입력을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="11adc8e1c23528f6abd23c7a7aee3417cecb341e" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;min_itemsize&lt;/code&gt; on the first table creation to a-priori specify the minimum length of a particular string column. &lt;code&gt;min_itemsize&lt;/code&gt; can be an integer, or a dict mapping a column name to an integer. You can pass &lt;code&gt;values&lt;/code&gt; as a key to allow all &lt;em&gt;indexables&lt;/em&gt; or &lt;em&gt;data_columns&lt;/em&gt; to have this min_itemsize.</source>
          <target state="translated">합격 &lt;code&gt;min_itemsize&lt;/code&gt; 를 특정 문자열 컬럼의 최소 길이를 지정할 연역적으로 첫 번째 테이블 작성에. &lt;code&gt;min_itemsize&lt;/code&gt; 는 정수이거나 열 이름을 정수로 매핑하는 dict 일 수 있습니다. 모든 &lt;em&gt;인덱싱 가능 항목&lt;/em&gt; 또는 &lt;em&gt;data_column이이 min_itemsize&lt;/em&gt; 를 갖도록 &lt;code&gt;values&lt;/code&gt; 을 키로 전달할 수 있습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5e2d91e00b112ef9a3fd595e6f71830228d8580" translate="yes" xml:space="preserve">
          <source>Pass a &lt;code&gt;None&lt;/code&gt; to return a dictionary of all available sheets.</source>
          <target state="translated">패스하지 &lt;code&gt;None&lt;/code&gt; 사용 가능한 모든 시트의 사전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eec5983ef169de5c8307c0331ededa50e9e68956" translate="yes" xml:space="preserve">
          <source>Pass a custom function via &lt;code&gt;apply&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; 통해 사용자 정의 기능을 전달</target>
        </trans-unit>
        <trans-unit id="5eb82af07b189ed2e73b3edc9c8a53bc28cbd5fb" translate="yes" xml:space="preserve">
          <source>Pass a list of either strings or integers, to return a dictionary of specified sheets.</source>
          <target state="translated">지정된 시트의 사전을 반환하려면 문자열 또는 정수 목록을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="4d9e1446f4807b6a4aa8656ad33de0cd4ea484c4" translate="yes" xml:space="preserve">
          <source>Pass a string to refer to the name of a particular sheet in the workbook.</source>
          <target state="translated">통합 문서의 특정 시트 이름을 참조하는 문자열을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="8dea2dd2953e7b2887d7de083afbf0bf6f329ce8" translate="yes" xml:space="preserve">
          <source>Pass along to &lt;code&gt;cond&lt;/code&gt;.</source>
          <target state="translated">에 따라 전달 &lt;code&gt;cond&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="019242bccd4c041cb9d22696f7209f065e044439" translate="yes" xml:space="preserve">
          <source>Pass along to &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">에 따라 전달 &lt;code&gt;func&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="256cd3f97ac17b0b652cc4e5d0e082a0cb4a87ca" translate="yes" xml:space="preserve">
          <source>Pass an integer to refer to the index of a sheet. Indices follow Python convention, beginning at 0.</source>
          <target state="translated">시트의 인덱스를 참조하려면 정수를 전달하십시오. 인덱스는 0부터 시작하는 Python 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="1e71869244a0a589242122a96ed5bdfb7ef52605" translate="yes" xml:space="preserve">
          <source>Pass your style functions into one of the following methods:</source>
          <target state="translated">스타일 함수를 다음 방법 중 하나로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="0de329e8f6acbd733a15298988f39a51685e2559" translate="yes" xml:space="preserve">
          <source>Passed an ordinal, translate and convert to a ts.</source>
          <target state="translated">서수를 전달하고 번역하고 ts로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="08df62baabc213ae9635cc7697f410031930ae15" translate="yes" xml:space="preserve">
          <source>Passed an ordinal, translate and convert to a ts. Note: by definition there cannot be any tz info on the ordinal itself.</source>
          <target state="translated">서수를 전달하고 번역하고 ts로 변환합니다. 참고 : 정의에 따라 서수 자체에 tz 정보가있을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="11a11dda671ef263f19a808dce7e4bdcbcece8c4" translate="yes" xml:space="preserve">
          <source>Passed through to &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.argsort.html#numpy.argsort&quot;&gt;&lt;code&gt;numpy.argsort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.argsort.html#numpy.argsort&quot;&gt; &lt;code&gt;numpy.argsort()&lt;/code&gt; &lt;/a&gt; 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="dcd285c1d11e48a04a9466b223fb2fc249eddab8" translate="yes" xml:space="preserve">
          <source>Passed to</source>
          <target state="translated">전달</target>
        </trans-unit>
        <trans-unit id="145b0d3c2f5ede1a02d43fa53f89418798e20cab" translate="yes" xml:space="preserve">
          <source>Passed to &lt;code&gt;numpy.ndarray.argsort&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;numpy.ndarray.argsort&lt;/code&gt; 로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8389ba8f8edaabc15b1434b0e9f55e520118c67b" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;as_index=False&lt;/code&gt;&lt;strong&gt;will&lt;/strong&gt; return the groups that you are aggregating over, if they are named &lt;em&gt;columns&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;as_index=False&lt;/code&gt; 를 전달하면 이름이 &lt;em&gt;columns&lt;/em&gt; 인 경우 집계중인 그룹 &lt;strong&gt;이&lt;/strong&gt; 반환 &lt;strong&gt;됩니다&lt;/strong&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4c1dfc065b915c72ee509d179a1d37103968376" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;ignore_index=True&lt;/code&gt; will drop all name references.</source>
          <target state="translated">&lt;code&gt;ignore_index=True&lt;/code&gt; 를 전달하면 모든 이름 참조가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="38b63613c4762515682cb3b80d88ea676c582c46" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;index=True&lt;/code&gt; will &lt;em&gt;always&lt;/em&gt; write the index, even if that&amp;rsquo;s not the underlying engine&amp;rsquo;s default behavior.</source>
          <target state="translated">전달 &lt;code&gt;index=True&lt;/code&gt; 됩니다 &lt;em&gt;항상&lt;/em&gt; 그 기본 엔진의 기본 동작 아니더라도, 인덱스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="da4d0c1e743845d75d9921293c2aadfdb0ab716d" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;memory_usage='deep'&lt;/code&gt; will enable a more accurate memory usage report, accounting for the full usage of the contained objects. This is optional as it can be expensive to do this deeper introspection.</source>
          <target state="translated">&lt;code&gt;memory_usage='deep'&lt;/code&gt; 을 전달 하면 포함 된 객체의 전체 사용량을 고려하여보다 정확한 메모리 사용량 보고서가 활성화됩니다. 이 심층적 인 조사를 수행하는 데 비용이 많이들 수 있으므로 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="e7278e4333a814be8384464a99971a684fec8faf" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;min_itemsize={`values`: size}&lt;/code&gt; as a parameter to append will set a larger minimum for the string columns. Storing &lt;code&gt;floats,
strings, ints, bools, datetime64&lt;/code&gt; are currently supported. For string columns, passing &lt;code&gt;nan_rep = 'nan'&lt;/code&gt; to append will change the default nan representation on disk (which converts to/from &lt;code&gt;np.nan&lt;/code&gt;), this defaults to &lt;code&gt;nan&lt;/code&gt;.</source>
          <target state="translated">추가 할 매개 변수로 &lt;code&gt;min_itemsize={`values`: size}&lt;/code&gt; 를 전달 하면 문자열 열에 더 큰 최소값이 설정됩니다. 저장 &lt;code&gt;floats, strings, ints, bools, datetime64&lt;/code&gt; 현재 지원됩니다. 문자열 열의 경우 &lt;code&gt;nan_rep = 'nan'&lt;/code&gt; 을 전달 하여 추가하면 디스크의 기본 nan 표현 ( &lt;code&gt;np.nan&lt;/code&gt; 로 /에서 변환)이 변경되며 기본값은 &lt;code&gt;nan&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="06569f8f58fa8f012b300c4a8311042df7465679" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;result_type='broadcast'&lt;/code&gt; will ensure the same shape result, whether list-like or scalar is returned by the function, and broadcast it along the axis. The resulting column names will be the originals.</source>
          <target state="translated">&lt;code&gt;result_type='broadcast'&lt;/code&gt; 전달 하면 함수에 의해 list-like 또는 스칼라가 반환되는지 여부에 관계없이 동일한 모양 결과가 보장되고 축을 따라 브로드 캐스트됩니다. 결과 열 이름은 원본이됩니다.</target>
        </trans-unit>
        <trans-unit id="ae9a30ca550b88419a8d627aeda72291d99c17a2" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;result_type='expand'&lt;/code&gt; will expand list-like results to columns of a Dataframe</source>
          <target state="translated">&lt;code&gt;result_type='expand'&lt;/code&gt; 를 전달하면 목록과 유사한 결과가 데이터 프레임의 열로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="080c87dfc8a4d0d7abbdbea1542f0a129b2aa203" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;start&lt;/code&gt; time later than &lt;code&gt;end&lt;/code&gt; represents midnight business hour. In this case, business hour exceeds midnight and overlap to the next day. Valid business hours are distinguished by whether it started from valid &lt;code&gt;BusinessDay&lt;/code&gt;.</source>
          <target state="translated">전달 &lt;code&gt;start&lt;/code&gt; 이후에 시간을 &lt;code&gt;end&lt;/code&gt; 심야 영업 시간을 나타냅니다. 이 경우 영업 시간은 자정을 초과하여 다음날과 겹칩니다. 유효한 업무 시간은 유효한 &lt;code&gt;BusinessDay&lt;/code&gt; 에서 시작되었는지 여부에 따라 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="a660bd25d222d646a940de579b0956c88428f6da" translate="yes" xml:space="preserve">
          <source>Passing a &lt;code&gt;lambda&lt;/code&gt; function will yield a &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; named row:</source>
          <target state="translated">&lt;code&gt;lambda&lt;/code&gt; 함수를 전달하면 &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; 라는 행이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="a53989c3822b285b7b280e403dbcc55910c84784" translate="yes" xml:space="preserve">
          <source>Passing a &lt;code&gt;min_itemsize&lt;/code&gt; dict will cause all passed columns to be created as &lt;em&gt;data_columns&lt;/em&gt; automatically.</source>
          <target state="translated">&lt;code&gt;min_itemsize&lt;/code&gt; dict를 전달하면 전달 된 모든 열이 자동 으로 &lt;em&gt;data_columns&lt;/em&gt; 로 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="8af9eba752f00612a7bcb23506ccc2e1068922c9" translate="yes" xml:space="preserve">
          <source>Passing a Series as an input returns a Series with categorical dtype:</source>
          <target state="translated">Series를 입력으로 전달하면 범주 형 dtype을 가진 Series가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cec314999aee075fb7a2c904d1e4b1e1fb343246" translate="yes" xml:space="preserve">
          <source>Passing a Series as an input returns a Series with mapping value. It is used to map numerically to intervals based on bins.</source>
          <target state="translated">Series를 입력으로 전달하면 매핑 값이있는 Series가 반환됩니다. 빈을 기준으로 간격을 숫자로 매핑하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d67872d2859fa345d2aaf950f6890ab4dc7b6365" translate="yes" xml:space="preserve">
          <source>Passing a callable, as opposed to an actual value to be inserted, is useful when you don&amp;rsquo;t have a reference to the DataFrame at hand. This is common when using &lt;code&gt;assign&lt;/code&gt; in a chain of operations. For example, we can limit the DataFrame to just those observations with a Sepal Length greater than 5, calculate the ratio, and plot:</source>
          <target state="translated">삽입 할 실제 값과 달리 콜 러블을 전달하는 것은 DataFrame에 대한 참조가 없을 때 유용합니다. 이것은 일련의 작업에서 &lt;code&gt;assign&lt;/code&gt; 을 사용할 때 일반적 입니다. 예를 들어 DataFrame을 Sepal Length가 5보다 큰 관측치로 제한하고 비율을 계산하고 플로팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fca5088700c36234abb1fe91f066f7acfca177ec" translate="yes" xml:space="preserve">
          <source>Passing a dict of functions will allow selective transforming per column.</source>
          <target state="translated">함수 사전을 전달하면 열당 선택적 변환이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="2af2c167a806fe4c41653ad60b31fc797fcb1e17" translate="yes" xml:space="preserve">
          <source>Passing a dict of lists will generate a MultiIndexed DataFrame with these selective transforms.</source>
          <target state="translated">목록의 사전을 전달하면 이러한 선택적 변환을 사용하여 MultiIndexed DataFrame이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="1b32c4296f9ca0ae578748b61191b838efc54192" translate="yes" xml:space="preserve">
          <source>Passing a dictionary of column names to a scalar or a list of scalars, to &lt;code&gt;DataFrame.agg&lt;/code&gt; allows you to customize which functions are applied to which columns. Note that the results are not in any particular order, you can use an &lt;code&gt;OrderedDict&lt;/code&gt; instead to guarantee ordering.</source>
          <target state="translated">열 이름 사전을 스칼라 또는 스칼라 목록에 전달하여 &lt;code&gt;DataFrame.agg&lt;/code&gt; 로 전달 하면 어떤 함수가 어떤 열에 적용되는지 사용자 지정할 수 있습니다. 결과는 특정 순서가 아닙니다 . 대신 &lt;code&gt;OrderedDict&lt;/code&gt; 를 사용하여 순서를 보장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ddb79acd2a19cb26a7aa29a42a9d2aa8946ee8b6" translate="yes" xml:space="preserve">
          <source>Passing a list of labels or tuples works similar to reindexing:</source>
          <target state="translated">레이블 또는 튜플 목록을 전달하는 것은 재 인덱싱과 유사하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="541b0ec0d86fa8a6c43408c5b10d5ee22d2faa37" translate="yes" xml:space="preserve">
          <source>Passing a list-like will generate a &lt;code&gt;DataFrame&lt;/code&gt; output. You will get a matrix-like output of all of the aggregators. The output will consist of all unique functions. Those that are not noted for a particular column will be &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="translated">list-like를 전달하면 &lt;code&gt;DataFrame&lt;/code&gt; 출력 이 생성됩니다 . 모든 애그리 게이터의 매트릭스와 같은 출력을 얻을 수 있습니다. 출력은 모든 고유 한 기능으로 구성됩니다. 특정 열에 대해 언급되지 않은 항목은 &lt;code&gt;NaN&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="7c6a7bbc86bad0a26799751ec54ac8f893d5f031" translate="yes" xml:space="preserve">
          <source>Passing a named function will yield that name for the row:</source>
          <target state="translated">명명 된 함수를 전달하면 해당 행의 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9b34f142d7f75bfde9f804d058b6fa04e99f53d4" translate="yes" xml:space="preserve">
          <source>Passing a single function to &lt;code&gt;.transform()&lt;/code&gt; with a &lt;code&gt;Series&lt;/code&gt; will yield a single &lt;code&gt;Series&lt;/code&gt; in return.</source>
          <target state="translated">&lt;code&gt;Series&lt;/code&gt; 와 함께 &lt;code&gt;.transform()&lt;/code&gt; 단일 함수를 전달하면 그 대가 로 단일 &lt;code&gt;Series&lt;/code&gt; 가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="1689c3fa1a241e8b51e6068b1547b4bda072306d" translate="yes" xml:space="preserve">
          <source>Passing a single string as &lt;code&gt;s.isin('lama')&lt;/code&gt; will raise an error. Use a list of one element instead:</source>
          <target state="translated">단일 문자열을 &lt;code&gt;s.isin('lama')&lt;/code&gt; 으로 전달 하면 오류가 발생합니다. 대신 하나의 요소 목록을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="20f67183dfa78f39b94f5dc9e5f014d5f982de8e" translate="yes" xml:space="preserve">
          <source>Passing a string representing a lower frequency than &lt;code&gt;PeriodIndex&lt;/code&gt; returns partial sliced data.</source>
          <target state="translated">&lt;code&gt;PeriodIndex&lt;/code&gt; 보다 낮은 빈도를 나타내는 문자열을 전달하면 부분적으로 조각난 데이터가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="acc03aad1892a726154aae3fbbab59db0a179bdd" translate="yes" xml:space="preserve">
          <source>Passing a string to a query by interpolating it into the query expression is not recommended. Simply assign the string of interest to a variable and use that variable in an expression. For example, do this</source>
          <target state="translated">쿼리 식에 보간하여 문자열을 쿼리에 전달하는 것은 권장되지 않습니다. 관심있는 문자열을 변수에 할당하고 해당 변수를 표현식에 사용하기 만하면됩니다. 예를 들어 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="17483dc68b26e198de461453e567057af22b8af1" translate="yes" xml:space="preserve">
          <source>Passing an IntervalIndex for</source>
          <target state="translated">IntervalIndex 전달</target>
        </trans-unit>
        <trans-unit id="9472e37a3bc368737dfb94b6aa8ee74cca07564b" translate="yes" xml:space="preserve">
          <source>Passing an IntervalIndex for &lt;code&gt;bins&lt;/code&gt; results in those categories exactly. Notice that values not covered by the IntervalIndex are set to NaN. 0 is to the left of the first bin (which is closed on the right), and 1.5 falls between two bins.</source>
          <target state="translated">대한 IntervalIndex 전달 &lt;code&gt;bins&lt;/code&gt; 정확히 그 범주에 결과를. IntervalIndex에 포함되지 않은 값은 NaN으로 설정되어 있습니다. 0은 첫 번째 빈의 왼쪽에 있으며 (오른쪽에 닫혀 있음) 1.5는 두 개의 빈 사이에 있습니다.</target>
        </trans-unit>
        <trans-unit id="e92628febe66841c69203c22921a319cb925b992" translate="yes" xml:space="preserve">
          <source>Passing errors=&amp;rsquo;coerce&amp;rsquo; will force an out-of-bounds date to NaT, in addition to forcing non-dates (or non-parseable dates) to NaT.</source>
          <target state="translated">errors = 'coerce'를 전달하면 날짜 이외의 날짜 (또는 구문 분석 할 수없는 날짜)를 NaT로 강제하는 것 외에도 범위를 벗어난 날짜를 NaT로 강제합니다.</target>
        </trans-unit>
        <trans-unit id="ffa2c2171743f72438249c4543e0cafa641c2cda" translate="yes" xml:space="preserve">
          <source>Passing in an integer for &lt;code&gt;usecols&lt;/code&gt; will no longer work. Please pass in a list of ints from 0 to &lt;code&gt;usecols&lt;/code&gt; inclusive instead.</source>
          <target state="translated">&lt;code&gt;usecols&lt;/code&gt; 에 정수를 전달 하면 더 이상 작동하지 않습니다. 0에서 int 목록을 전달하여 대신 &lt;code&gt;usecols&lt;/code&gt; inclusive를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="189fa087558955e14572d2c861453c02432c0c86" translate="yes" xml:space="preserve">
          <source>Passing infer_datetime_format=True can often-times speedup a parsing if its not an ISO8601 format exactly, but in a regular format.</source>
          <target state="translated">infer_datetime_format = True를 전달하면 파싱 속도가 ISO8601 형식이 아니라 정규 형식 인 경우 파싱 속도가 빨라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5702e053179fb8dfb2766c52599bde23e6be61f6" translate="yes" xml:space="preserve">
          <source>Passing multiple functions to a Series will yield a DataFrame. The resulting column names will be the transforming functions.</source>
          <target state="translated">Series에 여러 함수를 전달하면 DataFrame이 생성됩니다. 결과 열 이름은 변환 함수가됩니다.</target>
        </trans-unit>
        <trans-unit id="9034f49e114d3cc8e94f762b5cdeff59117fad48" translate="yes" xml:space="preserve">
          <source>Passing multiple functions will yield a column MultiIndexed DataFrame. The first level will be the original frame column names; the second level will be the names of the transforming functions.</source>
          <target state="translated">여러 함수를 전달하면 MultiIndexed DataFrame 열이 생성됩니다. 첫 번째 수준은 원래 프레임 열 이름입니다. 두 번째 수준은 변형 함수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="299962c91cc73b1d618c12843d9dd0c4cbfd1f15" translate="yes" xml:space="preserve">
          <source>Passing multiplied frequency outputs a sequence of &lt;code&gt;Period&lt;/code&gt; which has multiplied span.</source>
          <target state="translated">곱해진 주파수를 전달하면 곱한 범위가 있는 &lt;code&gt;Period&lt;/code&gt; 시퀀스가 출력 됩니다.</target>
        </trans-unit>
        <trans-unit id="2455000ec98613842c0bf6a9fbcddfab6be0b7a1" translate="yes" xml:space="preserve">
          <source>Passing options to the compression protocol in order to speed up compression:</source>
          <target state="translated">압축 속도를 높이기 위해 압축 프로토콜에 옵션 전달 :</target>
        </trans-unit>
        <trans-unit id="5dbc4b2631580726e4add0ae016dd1abea76f652" translate="yes" xml:space="preserve">
          <source>Passing result_type=&amp;rsquo;expand&amp;rsquo; will expand list-like results to columns of a Dataframe</source>
          <target state="translated">result_type = 'expand'를 전달하면 목록과 같은 결과가 데이터 프레임의 열로 확장됩니다</target>
        </trans-unit>
        <trans-unit id="bc0dd77580696e7789fa25b161cd5e2db08490a6" translate="yes" xml:space="preserve">
          <source>Path in each object to list of records. If not passed, data will be assumed to be an array of records.</source>
          <target state="translated">레코드 목록에 대한 각 개체의 경로입니다. 전달되지 않으면 데이터는 레코드 배열로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="cddbb36c9d5d62f0febd41d9af884c3b8ade99f2" translate="yes" xml:space="preserve">
          <source>Path or paths of directories containing the templates</source>
          <target state="translated">템플릿을 포함하는 디렉토리의 경로</target>
        </trans-unit>
        <trans-unit id="995685d0aa254a94e55d5db3e1c0f20edd4b6323" translate="yes" xml:space="preserve">
          <source>Path or paths of directories containing the templates.</source>
          <target state="translated">템플릿이 포함 된 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="975dadbb9099de2116ac90dca07691db30d6fc1d" translate="yes" xml:space="preserve">
          <source>Path to xls or xlsx file.</source>
          <target state="translated">xls 또는 xlsx 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="6827c3fd66d61c5a721626c8b9571699c0901f10" translate="yes" xml:space="preserve">
          <source>Path to xls or xlsx or ods file.</source>
          <target state="translated">xls, xlsx 또는 ods 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="a34531863a790810792a39bf6f795f78883ec2a4" translate="yes" xml:space="preserve">
          <source>Pattern or regular expression.</source>
          <target state="translated">패턴 또는 정규식.</target>
        </trans-unit>
        <trans-unit id="84aca983ecbbf17f55cf469f34b5772ff613e700" translate="yes" xml:space="preserve">
          <source>Pearson correlation coefficient</source>
          <target state="translated">피어슨 상관 계수</target>
        </trans-unit>
        <trans-unit id="86aa97567cc25ffc2a763c7ee132952dc15b60af" translate="yes" xml:space="preserve">
          <source>Percent change</source>
          <target state="translated">변화율</target>
        </trans-unit>
        <trans-unit id="b3329ba1ab4e6759dd87fbede18bbbe0ac09aab3" translate="yes" xml:space="preserve">
          <source>Percent change over given number of periods.</source>
          <target state="translated">주어진 기간 동안의 변화율.</target>
        </trans-unit>
        <trans-unit id="69daaebf1db83ac4f99153518fb6b2173d75bf63" translate="yes" xml:space="preserve">
          <source>Percentage change between the current and a prior element.</source>
          <target state="translated">현재와 ​​이전 요소 간의 백분율 변화.</target>
        </trans-unit>
        <trans-unit id="34c5a6f18cf335b1c427ebcc82a248208cc618bb" translate="yes" xml:space="preserve">
          <source>Percentage change in French franc, Deutsche Mark, and Italian lira from 1980-01-01 to 1980-03-01.</source>
          <target state="translated">프랑스 프랑, 도이치 마크 및 이탈리아 리라의 비율이 1980 년 1 월 1 일에서 1980 년 3 월 1 일로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="02df581ecc30a3d2e8a62995d955ea0edf69487f" translate="yes" xml:space="preserve">
          <source>Percentage changes within each group.</source>
          <target state="translated">각 그룹 내에서 백분율 변경.</target>
        </trans-unit>
        <trans-unit id="c2274048627e2556d8277c391a2f7d0e79d7c6ec" translate="yes" xml:space="preserve">
          <source>Percentage of change in GOOG and APPL stock volume. Shows computing the percentage change between columns.</source>
          <target state="translated">GOOG 및 APPL 재고량 변화율. 열 사이의 백분율 변화를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b69616fbdd291d887e4f61a1db3d1e3439d7ae19" translate="yes" xml:space="preserve">
          <source>Perform an asof merge (similar to left join but it matches on nearest key rather than equal key).</source>
          <target state="translated">asof 병합을 수행합니다 (왼쪽 조인과 유사하지만 동일한 키가 아닌 가장 가까운 키에서 일치).</target>
        </trans-unit>
        <trans-unit id="f6bddcb3712e433205aeb21d51eabb689fe22569" translate="yes" xml:space="preserve">
          <source>Perform an asof merge.</source>
          <target state="translated">asof 병합을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f1939ac0672b7e7a8897496c013c07cfe0eac773" translate="yes" xml:space="preserve">
          <source>Perform an asof merge. Similar to left join.</source>
          <target state="translated">asof 병합을 수행하십시오. 왼쪽 조인과 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="05957300788e3e7b4cdd620dd8641040968355fd" translate="yes" xml:space="preserve">
          <source>Perform an asof merge. This is similar to a left-join except that we match on nearest key rather than equal keys.</source>
          <target state="translated">asof 병합을 수행하십시오. 이것은 동일한 키가 아닌 가장 가까운 키에서 일치한다는 점을 제외하고 왼쪽 조인과 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="201fbb7f4b6dcc4fe11cba077662ba0d0642e641" translate="yes" xml:space="preserve">
          <source>Perform any type of operations.</source>
          <target state="translated">모든 유형의 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="4ab7cc26300bada61f681ddf1f6e0251ccbdd49e" translate="yes" xml:space="preserve">
          <source>Perform ceil operation on the data to the specified</source>
          <target state="translated">지정된 데이터에 대한 ceil 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="2bb8752a9dce9fdfb9ec0ba134c5bcc5b874adcb" translate="yes" xml:space="preserve">
          <source>Perform ceil operation on the data to the specified &lt;code&gt;freq&lt;/code&gt;.</source>
          <target state="translated">데이터에 대해 지정된 &lt;code&gt;freq&lt;/code&gt; 로 ceil 연산을 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="335e7842ffc312d76c4ff040da84269ebc7aa223" translate="yes" xml:space="preserve">
          <source>Perform column-wise combine with another DataFrame.</source>
          <target state="translated">다른 DataFrame과 열 단위 결합을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="3211441d935a3739c3ea2bfcc63734f59097ac7e" translate="yes" xml:space="preserve">
          <source>Perform elementwise operation on two Series using a given function.</source>
          <target state="translated">주어진 기능을 사용하여 두 시리즈에서 요소 별 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5d764fa4804a495ab122f85fa38442692d6a02d2" translate="yes" xml:space="preserve">
          <source>Perform floor operation on the data to the specified</source>
          <target state="translated">지정된 데이터에 대해 바닥 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="c88c01c8b46a7afa6ef5d14bdbc633bf05b3868e" translate="yes" xml:space="preserve">
          <source>Perform floor operation on the data to the specified &lt;code&gt;freq&lt;/code&gt;.</source>
          <target state="translated">데이터를 지정된 &lt;code&gt;freq&lt;/code&gt; 로 플로어 작업을 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="c90b35dd00eaaabd8ee29440585fd1ab85132b47" translate="yes" xml:space="preserve">
          <source>Perform merge with optional filling/interpolation designed for ordered data like time series data.</source>
          <target state="translated">시계열 데이터와 같은 정렬 된 데이터를 위해 설계된 선택적 채우기 / 보간 옵션으로 병합을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="2f10de21bbecdf1792733b6b43e67137a01c5fef" translate="yes" xml:space="preserve">
          <source>Perform merge with optional filling/interpolation designed for ordered data like time series data. Optionally perform group-wise merge (see examples)</source>
          <target state="translated">시계열 데이터와 같은 정렬 된 데이터를 위해 설계된 선택적 채우기 / 보간 옵션으로 병합을 수행합니다. 선택적으로 그룹 별 병합을 수행합니다 (예 참조).</target>
        </trans-unit>
        <trans-unit id="bc1d0a44b5edec75dfab147f89ea9ec8e0f5a1b6" translate="yes" xml:space="preserve">
          <source>Perform merge with optional filling/interpolation.</source>
          <target state="translated">선택적 채우기 / 보간으로 병합을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="fca00a8c5d1b7306e497fd3c92c9775430ce6d90" translate="yes" xml:space="preserve">
          <source>Perform operation over exponential weighted window.</source>
          <target state="translated">지수 가중 창에서 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7900d23b44b806f50edd4bc2084270edcfb3f34d" translate="yes" xml:space="preserve">
          <source>Perform operations over expanding window.</source>
          <target state="translated">확장 창에서 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="bdcabe3b79def780528a3fb557408717f7d3f04b" translate="yes" xml:space="preserve">
          <source>Perform operations over groups.</source>
          <target state="translated">그룹에 대해 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="44cc937713bd9b03b28111bbf6e86ecc5ac90601" translate="yes" xml:space="preserve">
          <source>Perform operations over resampled bins.</source>
          <target state="translated">재 샘플 된 빈에 대해 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="048d39c32ecc534093da70fab84284c75a347fd0" translate="yes" xml:space="preserve">
          <source>Perform operations over rolling window.</source>
          <target state="translated">롤링 창에서 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="664387e6b4ad81ad26bdcd6b5641827a25c9901b" translate="yes" xml:space="preserve">
          <source>Perform round operation on the data to the specified</source>
          <target state="translated">지정된 데이터에 대해 반올림 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="022e75895791eda49df6eddb877fdf6956610557" translate="yes" xml:space="preserve">
          <source>Perform round operation on the data to the specified &lt;code&gt;freq&lt;/code&gt;.</source>
          <target state="translated">데이터에 대해 지정된 &lt;code&gt;freq&lt;/code&gt; 로 라운드 연산을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="c40f6ba68a65adb4df9f68265246b34693135e4d" translate="yes" xml:space="preserve">
          <source>Perform series-wise operation on two DataFrames using a given function.</source>
          <target state="translated">주어진 함수를 사용하여 두 개의 DataFrame에 대해 일련의 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0e921e40b49d046d8d3dbde74521edf8f9716cea" translate="yes" xml:space="preserve">
          <source>Perform transformation type operations.</source>
          <target state="translated">변환 유형 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="580ee007bd69210d52e4eae2283b2e8798258405" translate="yes" xml:space="preserve">
          <source>Performance comparison of SQL vs HDF5</source>
          <target state="translated">SQL과 HDF5의 성능 비교</target>
        </trans-unit>
        <trans-unit id="0cb883fc85b1fd84aaebb7319c682c586a065641" translate="yes" xml:space="preserve">
          <source>Performance considerations</source>
          <target state="translated">성능 고려 사항</target>
        </trans-unit>
        <trans-unit id="afba84726a65b55e1e5521312c1ddb6d5f4dd086" translate="yes" xml:space="preserve">
          <source>Performance matters and it is worth considering whether your code has introduced performance regressions. &lt;em&gt;pandas&lt;/em&gt; is in the process of migrating to &lt;a href=&quot;https://github.com/spacetelescope/asv&quot;&gt;asv benchmarks&lt;/a&gt; to enable easy monitoring of the performance of critical &lt;em&gt;pandas&lt;/em&gt; operations. These benchmarks are all found in the &lt;code&gt;pandas/asv_bench&lt;/code&gt; directory. asv supports both python2 and python3.</source>
          <target state="translated">성능이 중요하며 코드가 성능 회귀를 도입했는지 여부를 고려해야합니다. &lt;em&gt;팬더&lt;/em&gt; 는 중요한 &lt;em&gt;팬더&lt;/em&gt; 작업 의 성능을 쉽게 모니터링 할 수 있도록 &lt;a href=&quot;https://github.com/spacetelescope/asv&quot;&gt;asv 벤치 마크로&lt;/a&gt; 마이그레이션하는 중입니다. 이 벤치 마크는 모두 &lt;code&gt;pandas/asv_bench&lt;/code&gt; 디렉토리에 있습니다. asv는 python2와 python3을 모두 지원합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e13b868f184c6440ec3a309c0cbab25220276c02" translate="yes" xml:space="preserve">
          <source>Performance of &lt;a href=&quot;../reference/api/pandas.dataframe.query#pandas.DataFrame.query&quot;&gt;&lt;code&gt;query()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.dataframe.query#pandas.DataFrame.query&quot;&gt; &lt;code&gt;query()&lt;/code&gt; &lt;/a&gt; 성능</target>
        </trans-unit>
        <trans-unit id="691747e8e021050dc8655563a837399d41958ce8" translate="yes" xml:space="preserve">
          <source>Performance of query()</source>
          <target state="translated">query ()의 성능</target>
        </trans-unit>
        <trans-unit id="6ca38c0f374180d03b0e5eb68901bc4d48cc93b5" translate="yes" xml:space="preserve">
          <source>Performing a descriptive statistic:</source>
          <target state="translated">기술 통계 수행 :</target>
        </trans-unit>
        <trans-unit id="003aa69e5cfbee1e409009d64a7a0fff1a8f8ffb" translate="yes" xml:space="preserve">
          <source>Performing a rolling minimum with a window size of 3.</source>
          <target state="translated">창 크기가 3 인 롤링 최소 수행</target>
        </trans-unit>
        <trans-unit id="1c43e9d88ab976accd5dcb1be17b55264059ecad" translate="yes" xml:space="preserve">
          <source>Performing arithmetic with a MultiIndex that needs broadcasting</source>
          <target state="translated">브로드 캐스팅이 필요한 MultiIndex로 산술 수행</target>
        </trans-unit>
        <trans-unit id="0702fe11f5600e0bb9e114f22b8fa4ade6c7cb28" translate="yes" xml:space="preserve">
          <source>Performing date and time arithmetic with absolute or relative time increments</source>
          <target state="translated">절대 또는 상대 시간 증분으로 날짜 및 시간 산술 수행</target>
        </trans-unit>
        <trans-unit id="4466aa57aa577e01325f97c61251d813e726a260" translate="yes" xml:space="preserve">
          <source>Performing selection operations on &lt;code&gt;integer&lt;/code&gt; type data can easily upcast the data to &lt;code&gt;floating&lt;/code&gt;. The dtype of the input data will be preserved in cases where &lt;code&gt;nans&lt;/code&gt; are not introduced. See also &lt;a href=&quot;gotchas#gotchas-intna&quot;&gt;Support for integer NA&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;integer&lt;/code&gt; 데이터 에 대한 선택 작업을 수행 하면 데이터를 쉽게 &lt;code&gt;floating&lt;/code&gt; 업 캐스트 할 수 있습니다 . 입력 데이터의 &lt;code&gt;nans&lt;/code&gt; 은 nan 이 도입되지 않은 경우에 유지됩니다 . &lt;a href=&quot;gotchas#gotchas-intna&quot;&gt;정수 NA 지원&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="170a28a9db6d27d7212fc6dc249434a57517e7bc" translate="yes" xml:space="preserve">
          <source>Period</source>
          <target state="translated">Period</target>
        </trans-unit>
        <trans-unit id="db2a616006dafe5807fe4245c3ddd2b97e6b90b7" translate="yes" xml:space="preserve">
          <source>Period (time spans)</source>
          <target state="translated">기간 (시간)</target>
        </trans-unit>
        <trans-unit id="b6183a73c2784a59b584f4de74045312ca3f727b" translate="yes" xml:space="preserve">
          <source>Period Array/Index</source>
          <target state="translated">기간 배열 / 인덱스</target>
        </trans-unit>
        <trans-unit id="0e14dda5471332726e07c47a3905b6fc4af66522" translate="yes" xml:space="preserve">
          <source>Period conversions with anchored frequencies are particularly useful for working with various quarterly data common to economics, business, and other fields. Many organizations define quarters relative to the month in which their fiscal year starts and ends. Thus, first quarter of 2011 could start in 2010 or a few months into 2011. Via anchored frequencies, pandas works for all quarterly frequencies &lt;code&gt;Q-JAN&lt;/code&gt; through &lt;code&gt;Q-DEC&lt;/code&gt;.</source>
          <target state="translated">고정 된 빈도를 사용한 기간 변환은 경제, 비즈니스 및 기타 분야에 공통된 다양한 분기 별 데이터 작업에 특히 유용합니다. 많은 조직에서 회계 연도가 시작되고 끝나는 달을 기준으로 분기를 정의합니다. 따라서 2011 년 1 분기는 2010 년 또는 2011 년으로 몇 달에 시작될 수 있습니다. 고정 된 주파수를 통해 Pandas는 분기 별 주파수 &lt;code&gt;Q-JAN&lt;/code&gt; 에서 &lt;code&gt;Q-DEC&lt;/code&gt; 까지 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="51a2f923252cf13123cc98fda261b654abc2807f" translate="yes" xml:space="preserve">
          <source>Period dtypes</source>
          <target state="translated">기간 dtypes</target>
        </trans-unit>
        <trans-unit id="1980124e1b9f3cd9c7a45c49e0007f605feb6c52" translate="yes" xml:space="preserve">
          <source>Period longer than a day</source>
          <target state="translated">하루보다 긴 기간</target>
        </trans-unit>
        <trans-unit id="9c47a4725dccbf662698238943889d936446b686" translate="yes" xml:space="preserve">
          <source>Period properties</source>
          <target state="translated">기간 속성</target>
        </trans-unit>
        <trans-unit id="80a978407efce71f06781a0be456adef42e15220" translate="yes" xml:space="preserve">
          <source>Period.asfreq()</source>
          <target state="translated">Period.asfreq()</target>
        </trans-unit>
        <trans-unit id="d65daecb919c4419f45b17b3deb3317b3fefa51c" translate="yes" xml:space="preserve">
          <source>Period.day</source>
          <target state="translated">Period.day</target>
        </trans-unit>
        <trans-unit id="95acd3886d63b851b13e869731585f9f773c53cf" translate="yes" xml:space="preserve">
          <source>Period.dayofweek</source>
          <target state="translated">Period.dayofweek</target>
        </trans-unit>
        <trans-unit id="07b0e04ee16ac7a10569f7049adf39246a9cd6b0" translate="yes" xml:space="preserve">
          <source>Period.dayofyear</source>
          <target state="translated">Period.dayofyear</target>
        </trans-unit>
        <trans-unit id="7d66ffa274e02b473c6360d2761e1293a7666efc" translate="yes" xml:space="preserve">
          <source>Period.days_in_month</source>
          <target state="translated">Period.days_in_month</target>
        </trans-unit>
        <trans-unit id="f70ac3e48305915c1bbe165df1b3fee7d9cc9bc2" translate="yes" xml:space="preserve">
          <source>Period.daysinmonth</source>
          <target state="translated">Period.daysinmonth</target>
        </trans-unit>
        <trans-unit id="aaad75f679cc514b904b2bc8bbb8897466524b43" translate="yes" xml:space="preserve">
          <source>Period.end_time</source>
          <target state="translated">Period.end_time</target>
        </trans-unit>
        <trans-unit id="a4456f416e5b6bb6e1d68672ee2b2a57cba34123" translate="yes" xml:space="preserve">
          <source>Period.freq</source>
          <target state="translated">Period.freq</target>
        </trans-unit>
        <trans-unit id="dcbb8c0fe360404ce3c2872e5d289484fb7edfbc" translate="yes" xml:space="preserve">
          <source>Period.freqstr</source>
          <target state="translated">Period.freqstr</target>
        </trans-unit>
        <trans-unit id="ea7d1ea04d5d6ff05c2ed2b5547675b81663a253" translate="yes" xml:space="preserve">
          <source>Period.hour</source>
          <target state="translated">Period.hour</target>
        </trans-unit>
        <trans-unit id="c425cc7b7f8de8dc0cd69c6fb90e5037bfb7506b" translate="yes" xml:space="preserve">
          <source>Period.is_leap_year</source>
          <target state="translated">Period.is_leap_year</target>
        </trans-unit>
        <trans-unit id="9160c93ab457c84b7e550b798c79f1134901189a" translate="yes" xml:space="preserve">
          <source>Period.minute</source>
          <target state="translated">Period.minute</target>
        </trans-unit>
        <trans-unit id="518ac5bbe6b75f7252e0996301df9434fde28076" translate="yes" xml:space="preserve">
          <source>Period.month</source>
          <target state="translated">Period.month</target>
        </trans-unit>
        <trans-unit id="a52ebe24985f98afa868b59635bb6a67c8bce032" translate="yes" xml:space="preserve">
          <source>Period.now()</source>
          <target state="translated">Period.now()</target>
        </trans-unit>
        <trans-unit id="29f91938b5150d66b3955b9c67901cadc4a74ad6" translate="yes" xml:space="preserve">
          <source>Period.ordinal</source>
          <target state="translated">Period.ordinal</target>
        </trans-unit>
        <trans-unit id="86b587e2688c8f39b3be30e129cc9cf4e805c583" translate="yes" xml:space="preserve">
          <source>Period.quarter</source>
          <target state="translated">Period.quarter</target>
        </trans-unit>
        <trans-unit id="89b74e9a88969fbc5ba5831aef9275447c749167" translate="yes" xml:space="preserve">
          <source>Period.qyear</source>
          <target state="translated">Period.qyear</target>
        </trans-unit>
        <trans-unit id="f88618a7e4d88472f37bb3583475fd1518d0edbb" translate="yes" xml:space="preserve">
          <source>Period.second</source>
          <target state="translated">Period.second</target>
        </trans-unit>
        <trans-unit id="43b562d7372e3350c0150139e1befb65b614ed61" translate="yes" xml:space="preserve">
          <source>Period.start_time</source>
          <target state="translated">Period.start_time</target>
        </trans-unit>
        <trans-unit id="d833f6b9cbfb47ea9c1b9cf7316ae389142d28a6" translate="yes" xml:space="preserve">
          <source>Period.strftime()</source>
          <target state="translated">Period.strftime()</target>
        </trans-unit>
        <trans-unit id="cd4786656ee32a933f8cc749a68bf78a7f947804" translate="yes" xml:space="preserve">
          <source>Period.to_timestamp()</source>
          <target state="translated">Period.to_timestamp()</target>
        </trans-unit>
        <trans-unit id="4417bfcb9e76422da18be441427a3170ac7bdd8c" translate="yes" xml:space="preserve">
          <source>Period.week</source>
          <target state="translated">Period.week</target>
        </trans-unit>
        <trans-unit id="bf4ea6ac942aa3ad621575a7e43b2aaabb9f2995" translate="yes" xml:space="preserve">
          <source>Period.weekday</source>
          <target state="translated">Period.weekday</target>
        </trans-unit>
        <trans-unit id="ed866aad118d1f91038a8f03dd6d3829ba757ccd" translate="yes" xml:space="preserve">
          <source>Period.weekofyear</source>
          <target state="translated">Period.weekofyear</target>
        </trans-unit>
        <trans-unit id="75274759c137936c5c878befb6a44ecb1dd6f765" translate="yes" xml:space="preserve">
          <source>Period.year</source>
          <target state="translated">Period.year</target>
        </trans-unit>
        <trans-unit id="58c66627fab8fd507ce511c9e82164d0b87d9f33" translate="yes" xml:space="preserve">
          <source>PeriodArray</source>
          <target state="translated">PeriodArray</target>
        </trans-unit>
        <trans-unit id="31056a8bf25e2c73e59058b479d01cd6a230c777" translate="yes" xml:space="preserve">
          <source>PeriodArray/Index</source>
          <target state="translated">PeriodArray/Index</target>
        </trans-unit>
        <trans-unit id="293c88a4cb583bfc912d44ed76470e49ed0f890c" translate="yes" xml:space="preserve">
          <source>PeriodDtype.freq</source>
          <target state="translated">PeriodDtype.freq</target>
        </trans-unit>
        <trans-unit id="f99cdc932adba0d261c50a1ccf9ec044f73feaa4" translate="yes" xml:space="preserve">
          <source>PeriodDtype[source]</source>
          <target state="translated">PeriodDtype[source]</target>
        </trans-unit>
        <trans-unit id="61a25daafa1f9183b582c0bb51ae12a322dbd769" translate="yes" xml:space="preserve">
          <source>PeriodIndex</source>
          <target state="translated">PeriodIndex</target>
        </trans-unit>
        <trans-unit id="06956d98d3946ea5e70af3b8daad9a02d5baa787" translate="yes" xml:space="preserve">
          <source>PeriodIndex and period_range</source>
          <target state="translated">PeriodIndex 및 period_range</target>
        </trans-unit>
        <trans-unit id="e574fa8cab5b8ff07f8d1a19a6c78797b90a48ec" translate="yes" xml:space="preserve">
          <source>PeriodIndex now supports partial string slicing with non-monotonic indexes.</source>
          <target state="translated">PeriodIndex는 이제 비단 조 인덱스로 부분 문자열 슬라이싱을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4eea14b09a6d33f346c6c3557edcd63435cb70b0" translate="yes" xml:space="preserve">
          <source>PeriodIndex partial string indexing</source>
          <target state="translated">PeriodIndex 부분 문자열 인덱싱</target>
        </trans-unit>
        <trans-unit id="b4aa4fae65b817cbad2635142933bff151c41947" translate="yes" xml:space="preserve">
          <source>PeriodIndex.asfreq()</source>
          <target state="translated">PeriodIndex.asfreq()</target>
        </trans-unit>
        <trans-unit id="46ea833beae375be5bd77e502fd94146c8c3936e" translate="yes" xml:space="preserve">
          <source>PeriodIndex.day</source>
          <target state="translated">PeriodIndex.day</target>
        </trans-unit>
        <trans-unit id="f2013f0759d82f9d0bd84ea8d72e25d2c24cb151" translate="yes" xml:space="preserve">
          <source>PeriodIndex.dayofweek</source>
          <target state="translated">PeriodIndex.dayofweek</target>
        </trans-unit>
        <trans-unit id="5b00be26990bf3a385ad20c81982baa40b92c53e" translate="yes" xml:space="preserve">
          <source>PeriodIndex.dayofyear</source>
          <target state="translated">PeriodIndex.dayofyear</target>
        </trans-unit>
        <trans-unit id="f633583a7e5c103da5464dd54c666554940ab7a9" translate="yes" xml:space="preserve">
          <source>PeriodIndex.days_in_month</source>
          <target state="translated">PeriodIndex.days_in_month</target>
        </trans-unit>
        <trans-unit id="4ed2be5def6773e718d1a9c9dd5cd60673fbc040" translate="yes" xml:space="preserve">
          <source>PeriodIndex.daysinmonth</source>
          <target state="translated">PeriodIndex.daysinmonth</target>
        </trans-unit>
        <trans-unit id="2dcb49e0a9b8ad9fd7e66e06631e869921cf0bef" translate="yes" xml:space="preserve">
          <source>PeriodIndex.end_time</source>
          <target state="translated">PeriodIndex.end_time</target>
        </trans-unit>
        <trans-unit id="6c4d9b089fd048f3b6237ee9ba3c06bf5c3b82dc" translate="yes" xml:space="preserve">
          <source>PeriodIndex.freq</source>
          <target state="translated">PeriodIndex.freq</target>
        </trans-unit>
        <trans-unit id="abc091ca71b2786f20ff973f7b6177fe45d0f2c1" translate="yes" xml:space="preserve">
          <source>PeriodIndex.freqstr</source>
          <target state="translated">PeriodIndex.freqstr</target>
        </trans-unit>
        <trans-unit id="3feaf23583021b77b2c92b179074696d0881a7d0" translate="yes" xml:space="preserve">
          <source>PeriodIndex.hour</source>
          <target state="translated">PeriodIndex.hour</target>
        </trans-unit>
        <trans-unit id="58a001455117bf0cf5e6b79aaf3ee88d88e839d5" translate="yes" xml:space="preserve">
          <source>PeriodIndex.is_leap_year</source>
          <target state="translated">PeriodIndex.is_leap_year</target>
        </trans-unit>
        <trans-unit id="b5b908cfdb33b4ebf51e6edded6c98379b0c2379" translate="yes" xml:space="preserve">
          <source>PeriodIndex.minute</source>
          <target state="translated">PeriodIndex.minute</target>
        </trans-unit>
        <trans-unit id="88ca7090b2b885c3c5c55c44df2fc44c4dedbf2c" translate="yes" xml:space="preserve">
          <source>PeriodIndex.month</source>
          <target state="translated">PeriodIndex.month</target>
        </trans-unit>
        <trans-unit id="03db90f453f33aca36ac265d4f5c70a10354b07b" translate="yes" xml:space="preserve">
          <source>PeriodIndex.quarter</source>
          <target state="translated">PeriodIndex.quarter</target>
        </trans-unit>
        <trans-unit id="7a7576920537e81b883a8f15cb84d9116c92aca1" translate="yes" xml:space="preserve">
          <source>PeriodIndex.qyear</source>
          <target state="translated">PeriodIndex.qyear</target>
        </trans-unit>
        <trans-unit id="5f247c6248930addea78af6da6e221a39abe2d98" translate="yes" xml:space="preserve">
          <source>PeriodIndex.second</source>
          <target state="translated">PeriodIndex.second</target>
        </trans-unit>
        <trans-unit id="3bb05eae9cc7f7acc4831a22aa73ef652757f0c8" translate="yes" xml:space="preserve">
          <source>PeriodIndex.shift</source>
          <target state="translated">PeriodIndex.shift</target>
        </trans-unit>
        <trans-unit id="3407a8c168398fd20abf18f850c325341b2cd9b3" translate="yes" xml:space="preserve">
          <source>PeriodIndex.start_time</source>
          <target state="translated">PeriodIndex.start_time</target>
        </trans-unit>
        <trans-unit id="62f519d0990e6fef52673a6f5a2c95e8cf279f17" translate="yes" xml:space="preserve">
          <source>PeriodIndex.strftime()</source>
          <target state="translated">PeriodIndex.strftime()</target>
        </trans-unit>
        <trans-unit id="60959bdd6ce1d3e8a3e7e866672537fce11dda28" translate="yes" xml:space="preserve">
          <source>PeriodIndex.to_timestamp()</source>
          <target state="translated">PeriodIndex.to_timestamp()</target>
        </trans-unit>
        <trans-unit id="5305d38bb255187e588e96744d68943167ed50e3" translate="yes" xml:space="preserve">
          <source>PeriodIndex.week</source>
          <target state="translated">PeriodIndex.week</target>
        </trans-unit>
        <trans-unit id="690260de6c35e9ddfa4165f0e9c5342b9ec0432a" translate="yes" xml:space="preserve">
          <source>PeriodIndex.weekday</source>
          <target state="translated">PeriodIndex.weekday</target>
        </trans-unit>
        <trans-unit id="2b231f1a4f84e10b10e412df20964ae42bf4ed38" translate="yes" xml:space="preserve">
          <source>PeriodIndex.weekofyear</source>
          <target state="translated">PeriodIndex.weekofyear</target>
        </trans-unit>
        <trans-unit id="f05811e73b2c1900d2154f287000121b6fe27b82" translate="yes" xml:space="preserve">
          <source>PeriodIndex.year</source>
          <target state="translated">PeriodIndex.year</target>
        </trans-unit>
        <trans-unit id="f0ec07209310a2c271f642e94b0bd68621a8c0ae" translate="yes" xml:space="preserve">
          <source>PeriodIndex[source]</source>
          <target state="translated">PeriodIndex[source]</target>
        </trans-unit>
        <trans-unit id="ccb71244ed2c5989f281c04c1f429b6a8205b560" translate="yes" xml:space="preserve">
          <source>Periods are converted to timestamps before serialization, and so have the same behavior of being converted to UTC. In addition, periods will contain and additional field &lt;code&gt;freq&lt;/code&gt; with the period&amp;rsquo;s frequency, e.g. &lt;code&gt;'A-DEC'&lt;/code&gt;.</source>
          <target state="translated">기간은 직렬화 전에 타임 스탬프로 변환되므로 UTC로 변환하는 것과 동일한 동작을합니다. 또한 기간에는 기간의 빈도와 함께 추가 필드 &lt;code&gt;freq&lt;/code&gt; 예 : &lt;code&gt;'A-DEC'&lt;/code&gt; )가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="562ce80e937e5abf9986498043c8d8ae93723c4a" translate="yes" xml:space="preserve">
          <source>Periods to shift for calculating difference, accepts negative values.</source>
          <target state="translated">차이를 계산하기 위해 이동하는 기간은 음수 값을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6ab68ad50eeee8087c38a98f80759d9591da016d" translate="yes" xml:space="preserve">
          <source>Periods to shift for forming percent change.</source>
          <target state="translated">퍼센트 변화를 형성하기 위해 변화하는 기간.</target>
        </trans-unit>
        <trans-unit id="873d0df0dda4a814bc4790e0d442bf3e2419731f" translate="yes" xml:space="preserve">
          <source>Permute the dimensions of a given array.</source>
          <target state="translated">주어진 배열의 차원을 치환합니다.</target>
        </trans-unit>
        <trans-unit id="cd8e453d1dfd4308ab4644db70c2b1d9544f595b" translate="yes" xml:space="preserve">
          <source>Pick between &amp;lsquo;kde&amp;rsquo; and &amp;lsquo;hist&amp;rsquo; for either Kernel Density Estimation or Histogram plot in the diagonal.</source>
          <target state="translated">커널 밀도 추정 또는 대각선의 히스토그램 플롯에 대해 'kde'와 'hist'중에서 선택합니다.</target>
        </trans-unit>
        <trans-unit id="d1a0fd1bbcc9b25b75a3cdcdab8742d01f4d78c7" translate="yes" xml:space="preserve">
          <source>Pickle (serialize) DataFrame object to file.</source>
          <target state="translated">DataFrame 객체를 파일로 피클 (직렬화)합니다.</target>
        </trans-unit>
        <trans-unit id="edad7487b8c954943eadafaa2ff348c52e4aa5e3" translate="yes" xml:space="preserve">
          <source>Pickle (serialize) Series object to file.</source>
          <target state="translated">Series 객체를 파일로 피클 링 (직렬화)합니다.</target>
        </trans-unit>
        <trans-unit id="bf72859f3761d541d03af04121ea0fcf75a518aa" translate="yes" xml:space="preserve">
          <source>Pickle (serialize) object to file.</source>
          <target state="translated">객체를 파일로 피클 링 (직렬화)합니다.</target>
        </trans-unit>
        <trans-unit id="1e451c6df0e9534b87f8f317ad70746e8d408ad1" translate="yes" xml:space="preserve">
          <source>Pickling</source>
          <target state="translated">Pickling</target>
        </trans-unit>
        <trans-unit id="9318d4f63aeffddc47d4520c722ad70f0ec6c63a" translate="yes" xml:space="preserve">
          <source>Pie</source>
          <target state="translated">Pie</target>
        </trans-unit>
        <trans-unit id="90d6dc495940d87c77fbcc3ab8d6386043f80e88" translate="yes" xml:space="preserve">
          <source>Pie plot</source>
          <target state="translated">파이 플롯</target>
        </trans-unit>
        <trans-unit id="26965473b4d2ca2e70969a86010b0a5a9ee09d86" translate="yes" xml:space="preserve">
          <source>Piecewise cubic polynomials (Akima interpolator).</source>
          <target state="translated">조각 입방 다항식 (Akima interpolator).</target>
        </trans-unit>
        <trans-unit id="cd8953893f96db891e18ce640393fc6fcf5b1ba1" translate="yes" xml:space="preserve">
          <source>Piecewise polynomial in the Bernstein basis.</source>
          <target state="translated">번스타인 (Bernstein) 기준의 구간 별 다항식.</target>
        </trans-unit>
        <trans-unit id="e5a7e250b93c135a2e158b16b1d540adf83f6a09" translate="yes" xml:space="preserve">
          <source>Pipe output of DataFrame.info to buffer instead of sys.stdout, get buffer content and writes to a text file:</source>
          <target state="translated">DataFrame.info의 출력을 sys.stdout 대신 버퍼로 파이프하고 버퍼 내용을 가져와 텍스트 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="9c38ea58882ee1fb82ff441ad8d86f4951864dac" translate="yes" xml:space="preserve">
          <source>Piping can also be expressive when you want to deliver a grouped object to some arbitrary function, for example:</source>
          <target state="translated">그룹화 된 개체를 임의의 기능에 전달하려는 경우에도 파이핑을 표현할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a47b399de61841fb3ac3920ac4db41f3e73ebc53" translate="yes" xml:space="preserve">
          <source>Piping function calls</source>
          <target state="translated">파이핑 함수 호출</target>
        </trans-unit>
        <trans-unit id="9fb7e07fc55c6ba2ef45f5a138736c3426228c52" translate="yes" xml:space="preserve">
          <source>Pivot</source>
          <target state="translated">Pivot</target>
        </trans-unit>
        <trans-unit id="c88658f2820a583968f6a85144f9d66fa02d7cd9" translate="yes" xml:space="preserve">
          <source>Pivot a level of the (necessarily hierarchical) index labels</source>
          <target state="translated">(필요한 계층 적) 인덱스 레이블 수준을 피벗하십시오.</target>
        </trans-unit>
        <trans-unit id="f2765dd66d725759a080bd0135dafb744b2bf3b6" translate="yes" xml:space="preserve">
          <source>Pivot a level of the (necessarily hierarchical) index labels, returning a DataFrame having a new level of column labels whose inner-most level consists of the pivoted index labels.</source>
          <target state="translated">(필수적으로 계층 적) 인덱스 레이블의 레벨을 피벗하고 가장 안쪽 레벨이 피벗 된 인덱스 레이블로 구성된 새로운 레벨의 열 레이블이있는 DataFrame을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5ae04afed5045ceda1daad8cccbe275cb1aa7955" translate="yes" xml:space="preserve">
          <source>Pivot a level of the (necessarily hierarchical) index labels.</source>
          <target state="translated">(필요한 계층 적) 인덱스 레이블의 수준을 피벗합니다.</target>
        </trans-unit>
        <trans-unit id="cac07d6af007e41880e9ce20e7df99cbfcf9e581" translate="yes" xml:space="preserve">
          <source>Pivot a level of the column labels (inverse operation from</source>
          <target state="translated">열 레이블의 수준을 피벗합니다 (</target>
        </trans-unit>
        <trans-unit id="1ee3c70c3bb2f62e5a593de782dfddbdbdf27ce0" translate="yes" xml:space="preserve">
          <source>Pivot a level of the column labels (inverse operation from &lt;code&gt;unstack&lt;/code&gt;).</source>
          <target state="translated">열 레이블 레벨을 돌리십시오 ( &lt;code&gt;unstack&lt;/code&gt; 에서 역 연산 ).</target>
        </trans-unit>
        <trans-unit id="16a1bd120ae44dc1dc772aa37490711e99cf9c01" translate="yes" xml:space="preserve">
          <source>Pivot a table based on column values.</source>
          <target state="translated">열 값을 기준으로 테이블을 피벗하십시오.</target>
        </trans-unit>
        <trans-unit id="a841e452e1faa1b33b0e1395bf85897cdae5cdc5" translate="yes" xml:space="preserve">
          <source>Pivot based on the index values instead of a column.</source>
          <target state="translated">열 대신 인덱스 값을 기준으로 피벗합니다.</target>
        </trans-unit>
        <trans-unit id="aa3bebfe50c5a336e0b4935b14a3e4608d41ccb2" translate="yes" xml:space="preserve">
          <source>Pivot tables</source>
          <target state="translated">피벗 테이블</target>
        </trans-unit>
        <trans-unit id="ca8746b1ac1fb6c95ea5cc823a6e5a5bed907e6f" translate="yes" xml:space="preserve">
          <source>Pivot tables:</source>
          <target state="translated">피벗 테이블 :</target>
        </trans-unit>
        <trans-unit id="5d32b75b7e2c6e57580b36ea5a5b57e568128aab" translate="yes" xml:space="preserve">
          <source>Pivot without aggregation that can handle non-numeric data.</source>
          <target state="translated">숫자가 아닌 데이터를 처리 할 수있는 집계가없는 피벗</target>
        </trans-unit>
        <trans-unit id="d7709ce311bfec20fc486fe199af1d379c89d40a" translate="yes" xml:space="preserve">
          <source>Pivoting with multiple aggregations</source>
          <target state="translated">여러 집계로 피벗</target>
        </trans-unit>
        <trans-unit id="1ec21acc1fc65f1a7e3bf8545fe952d2efcdc973" translate="yes" xml:space="preserve">
          <source>Pivoting with single aggregations</source>
          <target state="translated">단일 집계로 피벗</target>
        </trans-unit>
        <trans-unit id="7f326b386bd380033fddaeed0c768bda67a8dd93" translate="yes" xml:space="preserve">
          <source>Place legend on axis subplots.</source>
          <target state="translated">축 서브 플롯에 범례를 배치합니다.</target>
        </trans-unit>
        <trans-unit id="20c375600b20961ea457be8bf150111acc318d76" translate="yes" xml:space="preserve">
          <source>Places NA/NaN in locations having no value in the previous index. A new object is produced unless the new index is equivalent to the current one and &lt;code&gt;copy=False&lt;/code&gt;.</source>
          <target state="translated">이전 색인에 값이없는 위치에 NA / NaN을 배치합니다. 새 인덱스가 현재 인덱스와 &lt;code&gt;copy=False&lt;/code&gt; 않고 copy = False 이면 새 객체가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="572cda0a0f9277f04ee36d8d424c3f311e669d22" translate="yes" xml:space="preserve">
          <source>Plain Cython</source>
          <target state="translated">평범한 사이 톤</target>
        </trans-unit>
        <trans-unit id="4ac117c5cda51af19ef6ab5644181792d3def2ef" translate="yes" xml:space="preserve">
          <source>Plan for dropping Python 2.7</source>
          <target state="translated">Python 2.7 삭제 계획</target>
        </trans-unit>
        <trans-unit id="9f69b846271866e5088626e12e4515f5609aa437" translate="yes" xml:space="preserve">
          <source>Please be aware, that all values in the list should be dataclasses, mixing types in the list would result in a TypeError.</source>
          <target state="translated">목록의 모든 값은 데이터 클래스 여야하며 목록에서 유형을 혼합하면 TypeError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a605663471579597f30feaf7d50f4b001dd8005b" translate="yes" xml:space="preserve">
          <source>Please note that HDF5 &lt;strong&gt;DOES NOT RECLAIM SPACE&lt;/strong&gt; in the h5 files automatically. Thus, repeatedly deleting (or removing nodes) and adding again, &lt;strong&gt;WILL TEND TO INCREASE THE FILE SIZE&lt;/strong&gt;.</source>
          <target state="translated">HDF5 &lt;strong&gt;는&lt;/strong&gt; h5 파일의 &lt;strong&gt;공간&lt;/strong&gt; 을 자동으로 확보 &lt;strong&gt;하지 않습니다&lt;/strong&gt; . 따라서 반복적으로 삭제 (또는 노드 제거)하고 다시 추가 &lt;strong&gt;하면 파일 크기가 증가하는 경향이&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="9db269b682c5e23d90508e495c53e79b5bf546a4" translate="yes" xml:space="preserve">
          <source>Please note that a &lt;code&gt;Series&lt;/code&gt; of type &lt;code&gt;category&lt;/code&gt; with string &lt;code&gt;.categories&lt;/code&gt; has some limitations in comparison to &lt;code&gt;Series&lt;/code&gt; of type string (e.g. you can&amp;rsquo;t add strings to each other: &lt;code&gt;s + &quot; &quot; + s&lt;/code&gt; won&amp;rsquo;t work if &lt;code&gt;s&lt;/code&gt; is a &lt;code&gt;Series&lt;/code&gt; of type &lt;code&gt;category&lt;/code&gt;). Also, &lt;code&gt;.str&lt;/code&gt; methods which operate on elements of type &lt;code&gt;list&lt;/code&gt; are not available on such a &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">참고 &amp;bull; 그래도하시기 바랍니다 &lt;code&gt;Series&lt;/code&gt; 형식의 &lt;code&gt;category&lt;/code&gt; 문자열로 &lt;code&gt;.categories&lt;/code&gt; 가 에 비해 몇 가지 제한 사항이 &lt;code&gt;Series&lt;/code&gt; : String 형의 (당신이 서로 문자열을 추가 할 수 없습니다 예 &lt;code&gt;s + &quot; &quot; + s&lt;/code&gt; 하지 않습니다 작업을하는 경우 &lt;code&gt;s&lt;/code&gt; A는 &lt;code&gt;Series&lt;/code&gt; 의 유형 &lt;code&gt;category&lt;/code&gt; ). 또한 유형 &lt;code&gt;list&lt;/code&gt; 요소에서 작동하는 &lt;code&gt;.str&lt;/code&gt; 메서드는 이러한 &lt;code&gt;Series&lt;/code&gt; 에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="29829d2e5f4488cbd079fac1af4e2b976b5e6da5" translate="yes" xml:space="preserve">
          <source>Please note that only &lt;code&gt;method='linear'&lt;/code&gt; is supported for DataFrame/Series with a MultiIndex.</source>
          <target state="translated">제발에만 있습니다 &lt;code&gt;method='linear'&lt;/code&gt; MultiIndex와 DataFrame / 시리즈 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="fd6746db56f36ca071d2cb37e2af0e2299ec5ec9" translate="yes" xml:space="preserve">
          <source>Please note that precision loss may occur if really large numbers are passed in. Due to the internal limitations of</source>
          <target state="translated">너무 많은 수가 전달되면 정밀도 손실이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="376f0fcbd2904b862cd4d42d0ab3a771959a25c4" translate="yes" xml:space="preserve">
          <source>Please note that precision loss may occur if really large numbers are passed in. Due to the internal limitations of &lt;code&gt;ndarray&lt;/code&gt;, if numbers smaller than &lt;code&gt;-9223372036854775808&lt;/code&gt; (np.iinfo(np.int64).min) or larger than &lt;code&gt;18446744073709551615&lt;/code&gt; (np.iinfo(np.uint64).max) are passed in, it is very likely they will be converted to float so that they can stored in an &lt;code&gt;ndarray&lt;/code&gt;. These warnings apply similarly to &lt;code&gt;Series&lt;/code&gt; since it internally leverages &lt;code&gt;ndarray&lt;/code&gt;.</source>
          <target state="translated">정말 많은 수의 전달되는 경우 그 정밀도 손실이 발생할 수 있습니다. 때문에을의 내부 한계 &lt;code&gt;ndarray&lt;/code&gt; , 만약 숫자보다 작은 &lt;code&gt;-9223372036854775808&lt;/code&gt; (np.iinfo (np.int64) 30 ℃와 pH 5.5 또는 다른 pH) 또는보다 큰 &lt;code&gt;18446744073709551615&lt;/code&gt; (np.iinfo ( np.uint64) .max)가 전달되면 &lt;code&gt;ndarray&lt;/code&gt; 에 저장할 수 있도록 float로 변환 될 가능성이 큽니다 . 이러한 경고는 내부적으로 &lt;code&gt;ndarray&lt;/code&gt; 를 활용 하므로 &lt;code&gt;Series&lt;/code&gt; 와 유사하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1d58484b554cbe74c10e46924bfc5b521501fd42" translate="yes" xml:space="preserve">
          <source>Please note that the &lt;code&gt;NaN&lt;/code&gt; value present in the original dataframe (at index value 2010-01-03) will not be filled by any of the value propagation schemes. This is because filling while reindexing does not look at dataframe values, but only compares the original and desired indexes. If you do want to fill in the &lt;code&gt;NaN&lt;/code&gt; values present in the original dataframe, use the &lt;code&gt;fillna()&lt;/code&gt; method.</source>
          <target state="translated">원래 데이터 프레임에 존재 하는 &lt;code&gt;NaN&lt;/code&gt; 값 (색인 값 2010-01-03)은 값 전파 체계로 채워지지 않습니다. 다시 인덱싱하는 동안 채우면 데이터 프레임 값을 보지 않고 원래 인덱스와 원하는 인덱스 만 비교하기 때문입니다. 원래 데이터 프레임 에있는 &lt;code&gt;NaN&lt;/code&gt; 값 을 채우려면 &lt;code&gt;fillna()&lt;/code&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f001dfcb92c946f07da05b3a0e8c23cf5668ab3" translate="yes" xml:space="preserve">
          <source>Please note that the literal string &amp;lsquo;index&amp;rsquo; as the name of an &lt;a href=&quot;../reference/api/pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; is not round-trippable, nor are any names beginning with &lt;code&gt;'level_'&lt;/code&gt; within a &lt;a href=&quot;../reference/api/pandas.multiindex#pandas.MultiIndex&quot;&gt;&lt;code&gt;MultiIndex&lt;/code&gt;&lt;/a&gt;. These are used by default in &lt;a href=&quot;../reference/api/pandas.dataframe.to_json#pandas.DataFrame.to_json&quot;&gt;&lt;code&gt;DataFrame.to_json()&lt;/code&gt;&lt;/a&gt; to indicate missing values and the subsequent read cannot distinguish the intent.</source>
          <target state="translated">참고의 이름과 리터럴 문자열 '인덱스'하시기 바랍니다 &lt;a href=&quot;../reference/api/pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; 라운드 trippable 아니며, 어떤 이름으로 시작하는 &lt;code&gt;'level_'&lt;/code&gt; 내 &lt;a href=&quot;../reference/api/pandas.multiindex#pandas.MultiIndex&quot;&gt; &lt;code&gt;MultiIndex&lt;/code&gt; &lt;/a&gt; . 이들은 기본적으로 &lt;a href=&quot;../reference/api/pandas.dataframe.to_json#pandas.DataFrame.to_json&quot;&gt; &lt;code&gt;DataFrame.to_json()&lt;/code&gt; &lt;/a&gt; 에서 누락 된 값을 나타 내기 위해 사용되며 후속 읽기는 의도를 구별 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="04de44d472e99fe2cdfe885d92ed9de258799a1f" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;text#text-string-methods&quot;&gt;Vectorized String Methods&lt;/a&gt; for a complete description.</source>
          <target state="translated">자세한 설명은 &lt;a href=&quot;text#text-string-methods&quot;&gt;벡터화 된 문자열 메서드&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c0b524387c6d88887ad861e1680b552fe5a23f9" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;#computation-covariance-caveats&quot;&gt;caveats&lt;/a&gt; associated with this method of calculating correlation matrices in the &lt;a href=&quot;#computation-covariance&quot;&gt;covariance section&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#computation-covariance&quot;&gt;공분산 섹션&lt;/a&gt; 에서 상관 행렬을 계산하는이 방법과 관련된 &lt;a href=&quot;#computation-covariance-caveats&quot;&gt;주의 사항을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c0a7dc9ab3975544462f4aa2fb7100aa2420f8f" translate="yes" xml:space="preserve">
          <source>Please try to maintain backward compatibility. &lt;em&gt;pandas&lt;/em&gt; has lots of users with lots of existing code, so don&amp;rsquo;t break it if at all possible. If you think breakage is required, clearly state why as part of the pull request. Also, be careful when changing method signatures and add deprecation warnings where needed. Also, add the deprecated sphinx directive to the deprecated functions or methods.</source>
          <target state="translated">이전 버전과의 호환성을 유지하십시오. &lt;em&gt;팬더&lt;/em&gt; 에는 기존 코드가 많은 사용자가 많으므로 가능한 경우 중단하지 마십시오. 파손이 필요하다고 생각되면 풀 요청의 일부로 이유를 명시하십시오. 또한 메소드 서명을 변경할 때주의하고 필요한 경우 사용 중단 경고를 추가하십시오. 또한 더 이상 사용되지 않는 스핑크스 지시문을 더 이상 사용되지 않는 함수 또는 메서드에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9eef82bbca8af1fb0ad17e5f5799121b17cdb383" translate="yes" xml:space="preserve">
          <source>Plot DataFrame versus the desired column</source>
          <target state="translated">DataFrame 대 원하는 열 플롯</target>
        </trans-unit>
        <trans-unit id="92048d06dd030c76bfb62f593c711595940328b7" translate="yes" xml:space="preserve">
          <source>Plot Formatting</source>
          <target state="translated">플롯 포맷</target>
        </trans-unit>
        <trans-unit id="37b0f06b8b4fd439da6ead1cb44f3a3c9a4d2ec3" translate="yes" xml:space="preserve">
          <source>Plot Series or DataFrame as lines.</source>
          <target state="translated">Series 또는 DataFrame을 선으로 플로팅합니다.</target>
        </trans-unit>
        <trans-unit id="8a3a2f12aecd9b4f439762ff4c401c3b621a3429" translate="yes" xml:space="preserve">
          <source>Plot Type</source>
          <target state="translated">플롯 유형</target>
        </trans-unit>
        <trans-unit id="f51d1ccee3fca685c6ab8669f086357c73b3a64e" translate="yes" xml:space="preserve">
          <source>Plot a column of the DataFrame to a horizontal bar plot</source>
          <target state="translated">DataFrame의 열을 가로 막대 플롯으로 플로팅</target>
        </trans-unit>
        <trans-unit id="b5c13227f8af72fbc4ef165e0ee4b022b8447c48" translate="yes" xml:space="preserve">
          <source>Plot a histogram using matplotlib.</source>
          <target state="translated">matplotlib을 사용하여 히스토그램을 플로팅합니다.</target>
        </trans-unit>
        <trans-unit id="79efb43c04bffa4d5ed85c766a1822985a1d8db0" translate="yes" xml:space="preserve">
          <source>Plot a multidimensional dataset in 2D.</source>
          <target state="translated">다차원 데이터 셋을 2D로 플로팅합니다.</target>
        </trans-unit>
        <trans-unit id="8af3b341734122f8195f4e97d17179a3f7e34c47" translate="yes" xml:space="preserve">
          <source>Plot a single column.</source>
          <target state="translated">단일 열을 플로팅합니다.</target>
        </trans-unit>
        <trans-unit id="3a71a741c957684f76dbe22f2da1e76aa8328c2f" translate="yes" xml:space="preserve">
          <source>Plot a vertical bar plot using matplotlib.</source>
          <target state="translated">matplotlib을 사용하여 수직 막대 플롯을 플로팅합니다.</target>
        </trans-unit>
        <trans-unit id="1d3bd15f75023888ba7eb094fe02ebeef4799175" translate="yes" xml:space="preserve">
          <source>Plot a whole DataFrame to a horizontal bar plot</source>
          <target state="translated">전체 DataFrame을 가로 막대 플롯으로 플로팅</target>
        </trans-unit>
        <trans-unit id="bcb05736ad34ebb3a6b5eab0a311a03c3d61b425" translate="yes" xml:space="preserve">
          <source>Plot a whole dataframe to a bar plot. Each column is assigned a distinct color, and each row is nested in a group along the horizontal axis.</source>
          <target state="translated">전체 데이터 프레임을 막대 플롯으로 플로팅합니다. 각 열에는 고유 한 색상이 할당되고 각 행은 가로 축을 따라 그룹으로 중첩됩니다.</target>
        </trans-unit>
        <trans-unit id="66f8ebff784608b0154866f92e13d9ab44b607e7" translate="yes" xml:space="preserve">
          <source>Plot clustering visualization.</source>
          <target state="translated">클러스터링 시각화 플롯.</target>
        </trans-unit>
        <trans-unit id="caf0686d5e53982d2e2fbc4cfc1ca8983945e7ac" translate="yes" xml:space="preserve">
          <source>Plot formatting</source>
          <target state="translated">플롯 서식</target>
        </trans-unit>
        <trans-unit id="9d870c0d384157f50cae8ec3d6be1d309dc265bc" translate="yes" xml:space="preserve">
          <source>Plot only selected categories for the DataFrame.</source>
          <target state="translated">DataFrame에 대해 선택된 카테고리 만 플로팅합니다.</target>
        </trans-unit>
        <trans-unit id="f6bb9010dfa418a1dd90f7f4d2441a7c995e7402" translate="yes" xml:space="preserve">
          <source>Plot pandas DataFrame with year over year data</source>
          <target state="translated">전년 대비 데이터로 Pandas DataFrame 플로팅</target>
        </trans-unit>
        <trans-unit id="d4ee5a98c72fdebbf8217b1dcb431c5befe05d1a" translate="yes" xml:space="preserve">
          <source>Plot stacked bar charts for the DataFrame</source>
          <target state="translated">DataFrame에 대한 누적 막대 차트 플로팅</target>
        </trans-unit>
        <trans-unit id="b13e57c24045a0e1b91a17cec15251c33c104b32" translate="yes" xml:space="preserve">
          <source>Plot stacked barh charts for the DataFrame</source>
          <target state="translated">DataFrame에 대한 누적 막대 차트 플로팅</target>
        </trans-unit>
        <trans-unit id="7dfe0d1439de55bc0e0efffa4f0658437316ebe9" translate="yes" xml:space="preserve">
          <source>Plot y versus x as lines and/or markers.</source>
          <target state="translated">y 대 x를 선 및 / 또는 마커로 플로팅합니다.</target>
        </trans-unit>
        <trans-unit id="78ce66c2b26854c8d0237cd4e371bc764bce8420" translate="yes" xml:space="preserve">
          <source>Plotly</source>
          <target state="translated">Plotly</target>
        </trans-unit>
        <trans-unit id="6bf0ba382c4559c265c3749f0c6b7f1ca0cee641" translate="yes" xml:space="preserve">
          <source>Plots in examples</source>
          <target state="translated">예제의 도표</target>
        </trans-unit>
        <trans-unit id="a7a76797a9a3c4c859b66dd1e53ff897ea41774e" translate="yes" xml:space="preserve">
          <source>Plots may also be adorned with &lt;a href=&quot;#visualization-errorbars&quot;&gt;errorbars&lt;/a&gt; or &lt;a href=&quot;#visualization-table&quot;&gt;tables&lt;/a&gt;.</source>
          <target state="translated">플롯은 &lt;a href=&quot;#visualization-errorbars&quot;&gt;오차 막대&lt;/a&gt; 또는 &lt;a href=&quot;#visualization-table&quot;&gt;테이블&lt;/a&gt; 로 장식 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1431a1959fe1196c8f4695eb0b5b4cd6d881195" translate="yes" xml:space="preserve">
          <source>Plotting</source>
          <target state="translated">Plotting</target>
        </trans-unit>
        <trans-unit id="36260f665a78640a7f8d7d5f79c93ff752073ec1" translate="yes" xml:space="preserve">
          <source>Plotting Tools</source>
          <target state="translated">플로팅 도구</target>
        </trans-unit>
        <trans-unit id="8893dd188752341b6277a2ae66af139f5e5e8648" translate="yes" xml:space="preserve">
          <source>Plotting a heatmap</source>
          <target state="translated">히트 맵 플로팅</target>
        </trans-unit>
        <trans-unit id="27deee8169316ac29adee7e1bcf6b0128024f7f5" translate="yes" xml:space="preserve">
          <source>Plotting backends</source>
          <target state="translated">백엔드 플로팅</target>
        </trans-unit>
        <trans-unit id="7b83c174dad9fcaf87029ed70d5e386740364489" translate="yes" xml:space="preserve">
          <source>Plotting directly with matplotlib</source>
          <target state="translated">matplotlib로 직접 플로팅</target>
        </trans-unit>
        <trans-unit id="b1c65bf8d6c2ac3872e527c09d07b21e0b549ca4" translate="yes" xml:space="preserve">
          <source>Plotting methods allow for a handful of plot styles other than the default line plot. These methods can be provided as the &lt;code&gt;kind&lt;/code&gt; keyword argument to &lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt;&lt;code&gt;plot()&lt;/code&gt;&lt;/a&gt;, and include:</source>
          <target state="translated">플로팅 방법을 사용하면 기본 선 플롯 이외의 소수의 플롯 스타일을 사용할 수 있습니다. 이러한 메소드는 &lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt; &lt;code&gt;plot()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;kind&lt;/code&gt; 키워드 인수로 제공 될 수 있으며 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="fb755f03e6fb9e00807453e38c4d307fe2973428" translate="yes" xml:space="preserve">
          <source>Plotting multiple charts in an IPython Jupyter notebook</source>
          <target state="translated">IPython Jupyter 노트북에 여러 차트 그리기</target>
        </trans-unit>
        <trans-unit id="fee96379c89fa4f2dbef509de2c9ec052f58c614" translate="yes" xml:space="preserve">
          <source>Plotting on a secondary y-axis</source>
          <target state="translated">보조 Y 축에 플로팅</target>
        </trans-unit>
        <trans-unit id="0898ca236094ecc07a9f4eb7b9c97b96ef1d8ccb" translate="yes" xml:space="preserve">
          <source>Plotting tables</source>
          <target state="translated">플로팅 테이블</target>
        </trans-unit>
        <trans-unit id="94c85a76ff51feb9217e1797406f8bc8f58b36dd" translate="yes" xml:space="preserve">
          <source>Plotting tools</source>
          <target state="translated">플로팅 도구</target>
        </trans-unit>
        <trans-unit id="afbbabaf91b871c52b88638dff81ddbebedc748f" translate="yes" xml:space="preserve">
          <source>Plotting with error bars</source>
          <target state="translated">오차 막대로 플로팅</target>
        </trans-unit>
        <trans-unit id="d77174b81701b52708f1d811d6b78ccea2c88d7b" translate="yes" xml:space="preserve">
          <source>Plotting with error bars is supported in &lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt;&lt;code&gt;DataFrame.plot()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.series.plot#pandas.Series.plot&quot;&gt;&lt;code&gt;Series.plot()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오차 막대를 사용한 플로팅은 &lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt; &lt;code&gt;DataFrame.plot()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../reference/api/pandas.series.plot#pandas.Series.plot&quot;&gt; &lt;code&gt;Series.plot()&lt;/code&gt; &lt;/a&gt; 에서 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="ebd68b2417316ef031eb2991fc9c42e2135ad1cc" translate="yes" xml:space="preserve">
          <source>Plotting with matplotlib table is now supported in &lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt;&lt;code&gt;DataFrame.plot()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.series.plot#pandas.Series.plot&quot;&gt;&lt;code&gt;Series.plot()&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;table&lt;/code&gt; keyword. The &lt;code&gt;table&lt;/code&gt; keyword can accept &lt;code&gt;bool&lt;/code&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;. The simple way to draw a table is to specify &lt;code&gt;table=True&lt;/code&gt;. Data will be transposed to meet matplotlib&amp;rsquo;s default layout.</source>
          <target state="translated">matplotlib 테이블을 사용한 플로팅은 이제 &lt;code&gt;table&lt;/code&gt; 키워드를 사용하여 &lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt; &lt;code&gt;DataFrame.plot()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../reference/api/pandas.series.plot#pandas.Series.plot&quot;&gt; &lt;code&gt;Series.plot()&lt;/code&gt; &lt;/a&gt; 에서 지원됩니다 . &lt;code&gt;table&lt;/code&gt; 키워드는 받아 들일 수 &lt;code&gt;bool&lt;/code&gt; , &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; . 표를 그리는 간단한 방법은 &lt;code&gt;table=True&lt;/code&gt; 를 지정하는 것입니다 . 데이터는 matplotlib의 기본 레이아웃을 충족하도록 전치됩니다.</target>
        </trans-unit>
        <trans-unit id="09e7a6498104950a190db834a47add4d57ae57fd" translate="yes" xml:space="preserve">
          <source>Plotting with missing data</source>
          <target state="translated">누락 된 데이터로 플로팅</target>
        </trans-unit>
        <trans-unit id="ae778571ab5f19db26fbd4d35752060ae0346cb5" translate="yes" xml:space="preserve">
          <source>Position of element to extract.</source>
          <target state="translated">추출 할 요소의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="4cfee36d5d166e0a0b47e4f12cab4d422e01f485" translate="yes" xml:space="preserve">
          <source>Positional arguments passed into</source>
          <target state="translated">전달 된 위치 인수</target>
        </trans-unit>
        <trans-unit id="0ac9fdcffaddb97266d518d8ad79d3da9655600f" translate="yes" xml:space="preserve">
          <source>Positional arguments passed into &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func&lt;/code&gt; 에 전달 된 위치 인수 .</target>
        </trans-unit>
        <trans-unit id="9e93307c4fc6270bef7acfd91bce830941e4c637" translate="yes" xml:space="preserve">
          <source>Positional arguments passed to func after the series value.</source>
          <target state="translated">위치 값은 계열 값 다음에 func에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="7ea8216e7656f397cc8153d71eeead5f37b84dd5" translate="yes" xml:space="preserve">
          <source>Positional arguments to be passed into func.</source>
          <target state="translated">func에 전달할 위치 인수입니다.</target>
        </trans-unit>
        <trans-unit id="a2ba003bd63fd42e090f5689b5c03b9cc2f072e3" translate="yes" xml:space="preserve">
          <source>Positional arguments to pass to</source>
          <target state="translated">전달할 위치 인수</target>
        </trans-unit>
        <trans-unit id="63d28def01e771de9f98612a5e2ddb91847a7663" translate="yes" xml:space="preserve">
          <source>Positional arguments to pass to &lt;code&gt;func&lt;/code&gt; in addition to the array/series.</source>
          <target state="translated">배열 / 시리즈 외에 &lt;code&gt;func&lt;/code&gt; 에 전달할 위치 인수 .</target>
        </trans-unit>
        <trans-unit id="8ceeb272a25da64988bfd5c5a577b7b668661bd1" translate="yes" xml:space="preserve">
          <source>Positional arguments to pass to &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func&lt;/code&gt; 에 전달할 위치 인수 .</target>
        </trans-unit>
        <trans-unit id="250c39667e95892201046d34e896dbec1ead64d7" translate="yes" xml:space="preserve">
          <source>Positional arguments to pass to func.</source>
          <target state="translated">func에 전달할 위치 인수입니다.</target>
        </trans-unit>
        <trans-unit id="311c23beee48e8cecfdaf5651dad021dd45a5df1" translate="yes" xml:space="preserve">
          <source>Positional-oriented (Python slicing style : exclusive of end)</source>
          <target state="translated">위치 지향 (Python 슬라이싱 스타일 : 끝 제외)</target>
        </trans-unit>
        <trans-unit id="dfb9fca331ff041927ecc3b9a7b3952fedfcde5c" translate="yes" xml:space="preserve">
          <source>Positions of values within the sort order with -1 indicating nan values.</source>
          <target state="translated">정렬 순서 내에서 값의 위치는 nan 값을 나타내는 -1입니다.</target>
        </trans-unit>
        <trans-unit id="5c1969e8c608e827eef60876706540ca3c3c0527" translate="yes" xml:space="preserve">
          <source>Possible arguments are</source>
          <target state="translated">가능한 주장은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a2e8f2c04b5ee7a53e909e9962c70ba49812b305" translate="yes" xml:space="preserve">
          <source>Possible arguments are &lt;code&gt;how&lt;/code&gt;, &lt;code&gt;fill_method&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;kind&lt;/code&gt; and &lt;code&gt;on&lt;/code&gt;, and other arguments of &lt;code&gt;TimeGrouper&lt;/code&gt;.</source>
          <target state="translated">가능한 인수는 &lt;code&gt;how&lt;/code&gt; , &lt;code&gt;fill_method&lt;/code&gt; , &lt;code&gt;limit&lt;/code&gt; , &lt;code&gt;kind&lt;/code&gt; 및 &lt;code&gt;on&lt;/code&gt; 및 &lt;code&gt;TimeGrouper&lt;/code&gt; 의 기타 인수입니다 .</target>
        </trans-unit>
        <trans-unit id="a75660472d44daf40adc859acf6eb4ce063011d1" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;code&gt;progress_bar_type&lt;/code&gt; include:</source>
          <target state="translated">&lt;code&gt;progress_bar_type&lt;/code&gt; 의 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">가능한 값 :</target>
        </trans-unit>
        <trans-unit id="224f1d2db239f9f06edab1addcaf6e4b7e9ee85a" translate="yes" xml:space="preserve">
          <source>Possibly uses styles from &lt;code&gt;Styler.export&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Styler.export&lt;/code&gt; 의 스타일을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="8e34755af93cfe7b0a9b9fdded658b06bebe9a2e" translate="yes" xml:space="preserve">
          <source>PostgreSQL engine for sqlalchemy</source>
          <target state="translated">sqlalchemy 용 PostgreSQL 엔진</target>
        </trans-unit>
        <trans-unit id="b01e5259cb762025ed8dcfc0cbb83f72c446226b" translate="yes" xml:space="preserve">
          <source>Powerful pattern-matching methods are provided as well, but note that pattern-matching generally uses &lt;a href=&quot;https://docs.python.org/3/library/re.html&quot;&gt;regular expressions&lt;/a&gt; by default (and in some cases always uses them).</source>
          <target state="translated">강력한 패턴 일치 방법도 제공되지만 패턴 일치는 일반적으로 기본적 &lt;a href=&quot;https://docs.python.org/3/library/re.html&quot;&gt;으로 정규식&lt;/a&gt; 을 사용하며 경우에 따라 항상 정규식 을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="256dca0060b7be61c6c16f68f764756184829e5a" translate="yes" xml:space="preserve">
          <source>Powerful, flexible &lt;strong&gt;group by&lt;/strong&gt; functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data</source>
          <target state="translated">데이터 집합에 대한 분할 적용 조합 작업을 수행하여 데이터 집계 및 변환을위한 강력하고 유연한 기능별 &lt;strong&gt;그룹&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc270bfe7c5347d4df287a9eb93c3babcf333c80" translate="yes" xml:space="preserve">
          <source>Practical data analysis with Python</source>
          <target state="translated">파이썬으로 실제 데이터 분석</target>
        </trans-unit>
        <trans-unit id="145cf8eda20f002d25adf54fccf45204a9187d42" translate="yes" xml:space="preserve">
          <source>Practice your skills with real data sets and exercises. For more resources, please visit the main &lt;a href=&quot;https://github.com/guipsamora/pandas_exercises&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">실제 데이터 세트 및 연습으로 기술을 연습하십시오. 더 많은 리소스를 원하시면 메인 &lt;a href=&quot;https://github.com/guipsamora/pandas_exercises&quot;&gt;리포지토리&lt;/a&gt; 를 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="translated">Precision</target>
        </trans-unit>
        <trans-unit id="326ef2bdb0e592cbff77fbdb7d17e553232c5bca" translate="yes" xml:space="preserve">
          <source>Precision to round floats to, defaults to pd.options.display.precision.</source>
          <target state="translated">부동 소수점을 반올림 할 정밀도, 기본값은 pd.options.display.precision입니다.</target>
        </trans-unit>
        <trans-unit id="708d7ceb4f2c9767bfefc362e9a80e5d6fd4c00d" translate="yes" xml:space="preserve">
          <source>Prefix column labels with string</source>
          <target state="translated">문자열로 열 레이블 접두사</target>
        </trans-unit>
        <trans-unit id="71add4340a2da7abbf1c62eded9285b88ccf1269" translate="yes" xml:space="preserve">
          <source>Prefix column labels with string &lt;code&gt;prefix&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;prefix&lt;/code&gt; 접두사 열 레이블 .</target>
        </trans-unit>
        <trans-unit id="b81cc9ba1f9df9b7b5dd2991185eb61798a6db82" translate="yes" xml:space="preserve">
          <source>Prefix labels with string</source>
          <target state="translated">문자열로 레이블 접두사</target>
        </trans-unit>
        <trans-unit id="38d0764307be4db73fe4b881b9bd379d7291b659" translate="yes" xml:space="preserve">
          <source>Prefix labels with string &lt;code&gt;prefix&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;prefix&lt;/code&gt; 접두사 레이블 .</target>
        </trans-unit>
        <trans-unit id="14ccee23a0c14b0f9da2f28551351841b1207f17" translate="yes" xml:space="preserve">
          <source>Prefix row labels with string</source>
          <target state="translated">문자열로 행 레이블 접두사</target>
        </trans-unit>
        <trans-unit id="fbdbb6c2bbbfe9d53113e77a1da1cdd393a2ebbf" translate="yes" xml:space="preserve">
          <source>Prefix row labels with string &lt;code&gt;prefix&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;prefix&lt;/code&gt; 접두사 행 레이블 .</target>
        </trans-unit>
        <trans-unit id="ea9ed1e88589a62eeb0a63c0703028748bbfcecd" translate="yes" xml:space="preserve">
          <source>Prefix to add to column numbers when no header, e.g. &amp;lsquo;X&amp;rsquo; for X0, X1, &amp;hellip;</source>
          <target state="translated">헤더가 없을 때 열 번호에 추가 할 접두사 (예 : X0, X1의 경우 'X')</target>
        </trans-unit>
        <trans-unit id="2243e91a930d69d5d71924e16856c7d4eb77ae74" translate="yes" xml:space="preserve">
          <source>Prepending a level to a multiindex</source>
          <target state="translated">다중 인덱스에 레벨 추가</target>
        </trans-unit>
        <trans-unit id="90c57e160d2f5aa1525e2cc828e0405cb8a21dbc" translate="yes" xml:space="preserve">
          <source>Preserve Stata datatypes. If False, numeric data are upcast to pandas default types for foreign data (float64 or int64).</source>
          <target state="translated">Stata 데이터 유형을 유지하십시오. False 인 경우 숫자 데이터는 외부 데이터 (float64 또는 int64)의 팬더 기본 유형으로 업 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="d05622c3a7eb4041e3b3f83ba9bb21c9a3faf69e" translate="yes" xml:space="preserve">
          <source>Preserve string indices:</source>
          <target state="translated">문자열 인덱스 유지 :</target>
        </trans-unit>
        <trans-unit id="47e8fa49a7e435e6f38b6b460f2cc8296b0ebb91" translate="yes" xml:space="preserve">
          <source>Pretty close to how you might write it on paper:</source>
          <target state="translated">종이에 쓰는 방법에 매우 가깝습니다.</target>
        </trans-unit>
        <trans-unit id="73692c09dfe50e0add6d0ce591606f6f20b2ac45" translate="yes" xml:space="preserve">
          <source>Prevent the result from including duplicate index values with the &lt;code&gt;verify_integrity&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;verify_integrity&lt;/code&gt; 옵션으로 결과가 중복 인덱스 값을 포함하지 않도록합니다 .</target>
        </trans-unit>
        <trans-unit id="887df99c6672153943225ccbe6b2d47232ba9eaa" translate="yes" xml:space="preserve">
          <source>Previous behavior</source>
          <target state="translated">이전 행동</target>
        </trans-unit>
        <trans-unit id="d2db7678ae5f7add6d3acf58b96f46f53c76330a" translate="yes" xml:space="preserve">
          <source>Previously this was &amp;ldquo;fname&amp;rdquo;</source>
          <target state="translated">이전에는 &quot;fname&quot;이었습니다.</target>
        </trans-unit>
        <trans-unit id="59b321ef21952e7ff22e8fc3646f8f029be6b1c9" translate="yes" xml:space="preserve">
          <source>Previously, the default argument &lt;code&gt;engine=None&lt;/code&gt; to &lt;a href=&quot;../reference/api/pandas.read_excel#pandas.read_excel&quot;&gt;&lt;code&gt;read_excel()&lt;/code&gt;&lt;/a&gt; would result in using the &lt;code&gt;xlrd&lt;/code&gt; engine in many cases, including new Excel 2007+ (&lt;code&gt;.xlsx&lt;/code&gt;) files. If &lt;a href=&quot;https://openpyxl.readthedocs.io/en/stable/&quot;&gt;openpyxl&lt;/a&gt; is installed, many of these cases will now default to using the &lt;code&gt;openpyxl&lt;/code&gt; engine. See the &lt;a href=&quot;../reference/api/pandas.read_excel#pandas.read_excel&quot;&gt;&lt;code&gt;read_excel()&lt;/code&gt;&lt;/a&gt; documentation for more details.</source>
          <target state="translated">이전에는 &lt;a href=&quot;../reference/api/pandas.read_excel#pandas.read_excel&quot;&gt; &lt;code&gt;read_excel()&lt;/code&gt; &lt;/a&gt; 대한 기본 인수 &lt;code&gt;engine=None&lt;/code&gt; 을 사용하면 새 Excel 2007+ ( &lt;code&gt;.xlsx&lt;/code&gt; ) 파일을 포함하여 대부분의 경우 &lt;code&gt;xlrd&lt;/code&gt; 엔진이 사용되었습니다 . &lt;a href=&quot;https://openpyxl.readthedocs.io/en/stable/&quot;&gt;openpyxl&lt;/a&gt; 이 설치되어 있으면 이러한 경우 대부분이 이제 &lt;code&gt;openpyxl&lt;/code&gt; 엔진 을 사용하도록 기본 설정됩니다 . 자세한 내용은 &lt;a href=&quot;../reference/api/pandas.read_excel#pandas.read_excel&quot;&gt; &lt;code&gt;read_excel()&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f67e5ef9389a3cde3f99b132a881cec1dc4432b2" translate="yes" xml:space="preserve">
          <source>Primary Creation Method</source>
          <target state="translated">기본 생성 방법</target>
        </trans-unit>
        <trans-unit id="da46d208ecdd183e7f616b820078b5b2a98f9205" translate="yes" xml:space="preserve">
          <source>Print DataFrame in Markdown-friendly format.</source>
          <target state="translated">Markdown 친화적 인 형식으로 DataFrame을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="5fd430359866c9fe68d936bce9cc982670475b86" translate="yes" xml:space="preserve">
          <source>Print Series in Markdown-friendly format.</source>
          <target state="translated">Markdown 친화적 인 형식으로 시리즈를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="4b9e10d136ad69542240dff221559d0083d0433b" translate="yes" xml:space="preserve">
          <source>Print a concise summary of a DataFrame.</source>
          <target state="translated">DataFrame의 간단한 요약을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="9c7fbefebb4a24354aa3d25fac0ee945562f85a6" translate="yes" xml:space="preserve">
          <source>Print detailed information on the store.</source>
          <target state="translated">상점에 자세한 정보를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="410daa5bb883cad10020533c4b001bf33094024d" translate="yes" xml:space="preserve">
          <source>Prints a summary of columns count and its dtypes but not per column information:</source>
          <target state="translated">열 정보 및 열 유형별 요약을 인쇄하지만 열 정보 별로는 인쇄하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42611cbce42fa90cdeaee1b86cb10e6e916a3b1e" translate="yes" xml:space="preserve">
          <source>Prints information of all columns:</source>
          <target state="translated">모든 열의 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="4dad50dcea52add54fc4566b0447cb953ade1308" translate="yes" xml:space="preserve">
          <source>Prints the description for one or more registered options.</source>
          <target state="translated">하나 이상의 등록 된 옵션에 대한 설명을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="7e582594cc023582409931762351b567372e316a" translate="yes" xml:space="preserve">
          <source>Prints the names of the indexes.</source>
          <target state="translated">색인 이름을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="a9f4947938be8323364935f194abad552333c29c" translate="yes" xml:space="preserve">
          <source>Prior Version (ms)</source>
          <target state="translated">이전 버전 (ms)</target>
        </trans-unit>
        <trans-unit id="c582083ba515441400f1c7e2c6a5cee489c1fefd" translate="yes" xml:space="preserve">
          <source>Prior to pandas 1.0, &lt;code&gt;object&lt;/code&gt; dtype was the only option. This was unfortunate for many reasons:</source>
          <target state="translated">Pandas 1.0 이전에는 &lt;code&gt;object&lt;/code&gt; dtype이 유일한 옵션이었습니다. 이것은 여러 가지 이유로 불행했습니다.</target>
        </trans-unit>
        <trans-unit id="a53a3713046bdba90ab3baaa73bbd987a76c8aa2" translate="yes" xml:space="preserve">
          <source>Prior to pandas 1.0, string methods were only available on &lt;code&gt;object&lt;/code&gt; -dtype &lt;code&gt;Series&lt;/code&gt;. pandas 1.0 added the &lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt;&lt;code&gt;StringDtype&lt;/code&gt;&lt;/a&gt; which is dedicated to strings. See &lt;a href=&quot;text#text-types&quot;&gt;Text data types&lt;/a&gt; for more.</source>
          <target state="translated">Pandas 1.0 이전에는 문자열 메서드가 &lt;code&gt;object&lt;/code&gt; -dtype &lt;code&gt;Series&lt;/code&gt; 에서만 사용 가능했습니다 . pandas 1.0 은 문자열 전용 &lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt; &lt;code&gt;StringDtype&lt;/code&gt; &lt;/a&gt; 을 추가했습니다 . 자세한 내용은 &lt;a href=&quot;text#text-types&quot;&gt;텍스트 데이터 유형&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="457f60fe8212b6b945a9287d57b14dcfa0f66942" translate="yes" xml:space="preserve">
          <source>Produce output in a csv format for easy pasting into excel.</source>
          <target state="translated">Excel에 쉽게 붙여 넣을 수 있도록 csv 형식으로 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cf6a8228d41efff70b99bd368020e400e3b478e4" translate="yes" xml:space="preserve">
          <source>Produced DataFrame will have same axis length as self.</source>
          <target state="translated">생성 된 DataFrame은 self와 동일한 축 길이를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9d7caa9fc3122e69dcbb3db389d8968af31ab20b" translate="yes" xml:space="preserve">
          <source>Produced Series will have same axis length as self.</source>
          <target state="translated">생산 된 시리즈는 자체와 동일한 축 길이를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="d74e3d3528e7ba3c86e2c736e06cae9a61462aea" translate="yes" xml:space="preserve">
          <source>Product of values</source>
          <target state="translated">가치의 곱</target>
        </trans-unit>
        <trans-unit id="fe3f2f5cb82798fb043e88cbf2868651d533c06e" translate="yes" xml:space="preserve">
          <source>Project governance</source>
          <target state="translated">프로젝트 거버넌스</target>
        </trans-unit>
        <trans-unit id="3b1f45154a0867dd6850a864715ddd3f85b1b4f2" translate="yes" xml:space="preserve">
          <source>Promotion dtype for storing NAs</source>
          <target state="translated">NA 저장을위한 프로모션 dtype</target>
        </trans-unit>
        <trans-unit id="8e00ab4ae9e3fb784a94ea54994cbb840b331295" translate="yes" xml:space="preserve">
          <source>Propagation in arithmetic and comparison operations</source>
          <target state="translated">산술 및 비교 연산의 전파</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="cf2b7ee5f8ed06f88e78dec9461524cef6fbf7a7" translate="yes" xml:space="preserve">
          <source>Property Attributes</source>
          <target state="translated">속성 속성</target>
        </trans-unit>
        <trans-unit id="485375da4a277709a9de10b95a5f2aadb14d30ff" translate="yes" xml:space="preserve">
          <source>Property returning a Styler object containing methods for building a styled HTML representation fo the DataFrame.</source>
          <target state="translated">DataFrame에 스타일이 지정된 HTML 표현을 작성하기위한 메서드가 포함 된 Styler 객체를 반환하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="e7482260ee5066cf1ab4bf6a81ef045917b251bd" translate="yes" xml:space="preserve">
          <source>Provide a window type. If &lt;code&gt;None&lt;/code&gt;, all points are evenly weighted. See the notes below for further information.</source>
          <target state="translated">창 유형을 제공하십시오. 경우 &lt;code&gt;None&lt;/code&gt; , 모든 점 균등 가중된다. 자세한 내용은 아래 참고 사항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8bf1059247f4c788a29c35321ff03abbab543630" translate="yes" xml:space="preserve">
          <source>Provide an API that is pleasing to use interactively and is &amp;ldquo;good enough&amp;rdquo; for many tasks</source>
          <target state="translated">대화식으로 사용하는 것이 좋으며 많은 작업에 &quot;충분한&quot;API를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="fb6a843d951e14a628b03abe41bc72b01473ac2e" translate="yes" xml:space="preserve">
          <source>Provide an encoding for strings.</source>
          <target state="translated">문자열에 대한 인코딩을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="bd288bde617efbe82ce5273ac93fe702a127b702" translate="yes" xml:space="preserve">
          <source>Provide expanding transformations.</source>
          <target state="translated">확장 된 변형을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="1491f414865245a9e80bfccdd7a098798f0a4fd8" translate="yes" xml:space="preserve">
          <source>Provide exponential weighted (EW) functions.</source>
          <target state="translated">지수 가중치 (EW) 함수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="be0a7b7ad221c88635d90bcfdb3996535c4e5d8e" translate="yes" xml:space="preserve">
          <source>Provide exponential weighted functions.</source>
          <target state="translated">지수 가중 함수를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="f7c2566d5e4e8eebf4d19c7909c0fd85dd9e7b65" translate="yes" xml:space="preserve">
          <source>Provide resampling when using a TimeGrouper.</source>
          <target state="translated">TimeGrouper를 사용할 때 리샘플링을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="c0ae0dc7e08e9f6d3415d751d23a68ba5844da25" translate="yes" xml:space="preserve">
          <source>Provide rolling window calculations.</source>
          <target state="translated">롤링 창 계산을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="24619ac266b77a8b219c4b212bd51c3d974960df" translate="yes" xml:space="preserve">
          <source>Provide the foundations for dedicated libraries to build on</source>
          <target state="translated">전용 라이브러리를위한 토대 제공</target>
        </trans-unit>
        <trans-unit id="24322f56a2b8375c0634b2c1ec5fc53fe737408f" translate="yes" xml:space="preserve">
          <source>Provide the rank of values within each group.</source>
          <target state="translated">각 그룹 내에서 값의 순위를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="5fa4b4dae75ae6d8f310a1db360d6ac6ac72c068" translate="yes" xml:space="preserve">
          <source>Provide useful information, important for bug reports.</source>
          <target state="translated">버그 신고에 중요한 유용한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5e1087c76319b08fac06d5ad3f1848b2c3f73144" translate="yes" xml:space="preserve">
          <source>Provided DataFrame to use to fill null values.</source>
          <target state="translated">null 값을 채우는 데 사용할 DataFrame을 제공했습니다.</target>
        </trans-unit>
        <trans-unit id="35e3e0390f795fa838c47a7c6de412ce7d6588f5" translate="yes" xml:space="preserve">
          <source>Provides access to the array scalar view (i.e. a combination of the value and the units) associated with the numpy.timedelta64().view(), including a 64-bit integer representation of the timedelta in nanoseconds (Python int compatible).</source>
          <target state="translated">deltapy.timedelta64 (). view ()와 연관된 배열 스칼라 뷰 (즉, 값과 단위의 조합)에 대한 액세스를 제공하며, 나노초 단위의 타임 델타 64 비트 정수 표현 (Python int 호환 가능).</target>
        </trans-unit>
        <trans-unit id="5fc5b59b45dcbea68dcadf4ea5a6d42606d479ef" translate="yes" xml:space="preserve">
          <source>Provides expanding transformations.</source>
          <target state="translated">확장 된 변환을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="07befa80f4a6f9829a4023e5e71283f6fec76660" translate="yes" xml:space="preserve">
          <source>Provides exponential weighted functions.</source>
          <target state="translated">지수 가중 함수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e3a6724b5e51c3f591c7e74dc4e93be7f6fa44f9" translate="yes" xml:space="preserve">
          <source>Provides rolling window calculations.</source>
          <target state="translated">롤링 창 계산을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5b6fb302ba17466f30eac4d68c48a3b0c2945289" translate="yes" xml:space="preserve">
          <source>Providing a format argument</source>
          <target state="translated">형식 인수 제공</target>
        </trans-unit>
        <trans-unit id="86b5e495bc6fe697d332546283eacd217fcaa4f0" translate="yes" xml:space="preserve">
          <source>Provisional: This is a new feature and still under development. We&amp;rsquo;ll be adding features and possibly making breaking changes in future releases. We&amp;rsquo;d love to hear your feedback.</source>
          <target state="translated">임시 : 이것은 새로운 기능이며 아직 개발 중입니다. 향후 릴리스에서 기능을 추가하고 주요 변경 사항을 적용 할 예정입니다. 우리는 당신의 의견을 듣고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="e6fc91b5f3f146d12c950fdab771b235c4f0caba" translate="yes" xml:space="preserve">
          <source>Pure Python</source>
          <target state="translated">순수한 파이썬</target>
        </trans-unit>
        <trans-unit id="3e23cf5b59a18521703a4814181f01a376ef9eed" translate="yes" xml:space="preserve">
          <source>Purely integer-location based indexing for selection by position.</source>
          <target state="translated">위치 별 선택을위한 순수 정수 위치 기반 인덱싱</target>
        </trans-unit>
        <trans-unit id="c6d7ebfb44a5ab0064f65f739f51e980de59ccbb" translate="yes" xml:space="preserve">
          <source>Purely label-location based indexer for selection by label.</source>
          <target state="translated">레이블 별 선택을위한 순수 레이블 위치 기반 인덱서</target>
        </trans-unit>
        <trans-unit id="2c240a9d6928fbfcafdef504493709d38029b10f" translate="yes" xml:space="preserve">
          <source>Pushing your changes</source>
          <target state="translated">변경 사항 추진</target>
        </trans-unit>
        <trans-unit id="b1a235d6a67659e545898993494097c1e988a399" translate="yes" xml:space="preserve">
          <source>Put single value at passed column and index.</source>
          <target state="translated">전달 된 열 및 인덱스에 단일 값을 넣습니다.</target>
        </trans-unit>
        <trans-unit id="b971179eada0f6c461ba4f0dc97b7256856cd95c" translate="yes" xml:space="preserve">
          <source>Put the first 5 month starts of 2011 into an index.</source>
          <target state="translated">2011 년의 첫 5 개월 시작을 색인에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="060420d26effedba946caafb763382ba028e87c5" translate="yes" xml:space="preserve">
          <source>Puts NaNs at the beginning if</source>
          <target state="translated">다음과 같은 경우 처음에 NaN을 배치</target>
        </trans-unit>
        <trans-unit id="994a521a18e15c34c809408edf4903a574ae5db7" translate="yes" xml:space="preserve">
          <source>Puts NaNs at the beginning if &lt;code&gt;first&lt;/code&gt;; &lt;code&gt;last&lt;/code&gt; puts NaNs at the end.</source>
          <target state="translated">만약 처음에두고하는 NaN을 &lt;code&gt;first&lt;/code&gt; ; &lt;code&gt;last&lt;/code&gt; NaN을 마지막에 놓습니다.</target>
        </trans-unit>
        <trans-unit id="dd4982831287a5c3712e3d6ee36dcad0e2d4f0c4" translate="yes" xml:space="preserve">
          <source>Puts NaNs at the beginning if &lt;code&gt;first&lt;/code&gt;; &lt;code&gt;last&lt;/code&gt; puts NaNs at the end. Not implemented for MultiIndex.</source>
          <target state="translated">만약 처음에두고하는 NaN을 &lt;code&gt;first&lt;/code&gt; ; &lt;code&gt;last&lt;/code&gt; NaN을 마지막에 놓습니다. MultiIndex에는 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="5228630dd05c40752301e2f394afba60d1683270" translate="yes" xml:space="preserve">
          <source>Putting NAs first</source>
          <target state="translated">NA를 최우선</target>
        </trans-unit>
        <trans-unit id="a689e4a4398b4a2f6d8e80fdc9783021e02db228" translate="yes" xml:space="preserve">
          <source>PyDatastream is a Python interface to the &lt;a href=&quot;http://dataworks.thomson.com/Dataworks/Enterprise/1.0/&quot;&gt;Thomson Dataworks Enterprise (DWE/Datastream)&lt;/a&gt; SOAP API to return indexed Pandas DataFrames with financial data. This package requires valid credentials for this API (non free).</source>
          <target state="translated">PyDatastream은 재무 데이터와 함께 색인화 된 Pandas DataFrames를 리턴하기 위해 TWE (Dhomson Dataworks &lt;a href=&quot;http://dataworks.thomson.com/Dataworks/Enterprise/1.0/&quot;&gt;Enterprise)&lt;/a&gt; SOAP API에 대한 Python 인터페이스 입니다. 이 패키지에는이 API에 대한 유효한 자격 증명이 필요합니다 (무료).</target>
        </trans-unit>
        <trans-unit id="89284152169c4e73aa0946dcdb1d87c91013c335" translate="yes" xml:space="preserve">
          <source>PyQt4</source>
          <target state="translated">PyQt4</target>
        </trans-unit>
        <trans-unit id="65afe6543da6882b23f6835444d80a61dbc97232" translate="yes" xml:space="preserve">
          <source>PyQt5</source>
          <target state="translated">PyQt5</target>
        </trans-unit>
        <trans-unit id="aa93a8f3f07def15393ee309e4e886265beae21d" translate="yes" xml:space="preserve">
          <source>PyTables</source>
          <target state="translated">PyTables</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="0b592ef470c7edd03b1847202c8345ac26ddc0fe" translate="yes" xml:space="preserve">
          <source>Python (PEP8 / black)</source>
          <target state="translated">파이썬 (PEP8 / 블랙)</target>
        </trans-unit>
        <trans-unit id="7a21aa1dd5cb80868b6fc18d70af296c25fafb76" translate="yes" xml:space="preserve">
          <source>Python Pickle Format</source>
          <target state="translated">파이썬 피클 형식</target>
        </trans-unit>
        <trans-unit id="aede60261e02acf9cb1e0537e0c9fc5e5855f0da" translate="yes" xml:space="preserve">
          <source>Python Standard Library</source>
          <target state="translated">파이썬 표준 라이브러리</target>
        </trans-unit>
        <trans-unit id="fe8bb7e0a3b6c996b48a73e8a8089a49c4751177" translate="yes" xml:space="preserve">
          <source>Python built-in function returning the length of an object.</source>
          <target state="translated">객체의 길이를 반환하는 파이썬 내장 함수.</target>
        </trans-unit>
        <trans-unit id="d20299b84e1f1a3d9aa1af161690e670c3d254e8" translate="yes" xml:space="preserve">
          <source>Python builtin byte arrays and strings</source>
          <target state="translated">파이썬 내장 바이트 배열과 문자열</target>
        </trans-unit>
        <trans-unit id="9c57d1d0a55035e371141b9236824117d6c11bcd" translate="yes" xml:space="preserve">
          <source>Python builtin numerics</source>
          <target state="translated">파이썬 내장 숫자</target>
        </trans-unit>
        <trans-unit id="bf22fe5872a0ab37096e938bef68dcae28ec12db" translate="yes" xml:space="preserve">
          <source>Python code, a module, function, built-in, type, literal&amp;hellip; (e.g. &lt;code&gt;os&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;numpy.abs&lt;/code&gt;, &lt;code&gt;datetime.date&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="translated">파이썬 코드, 모듈, 함수, 내장, 타입, 리터럴&amp;hellip; (예 : &lt;code&gt;os&lt;/code&gt; , &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;numpy.abs&lt;/code&gt; , &lt;code&gt;datetime.date&lt;/code&gt; , &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="31ac72eddb43fee4c00056f4642c0586c81efc8b" translate="yes" xml:space="preserve">
          <source>Python decorators are applied inside out. So the order is Append then Substitution, even though Substitution comes first in the file.</source>
          <target state="translated">파이썬 데코레이터는 내부에 적용됩니다. 따라서 대체는 파일에서 가장 먼저 나오지만 순서는 Append then Substitution입니다.</target>
        </trans-unit>
        <trans-unit id="2ed56785c4b9eba3c2e9a945cf248bc54ef02b1c" translate="yes" xml:space="preserve">
          <source>Python function or NumPy ufunc to apply.</source>
          <target state="translated">파이썬 함수 또는 NumPy ufunc를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="e8065ef6a45e4f4f258eb0571141334bdfc49e4c" translate="yes" xml:space="preserve">
          <source>Python function, returns a single value from a single value.</source>
          <target state="translated">Python 함수는 단일 값에서 단일 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad9245a5f2a702fc9d8d7805dcd1933132889df3" translate="yes" xml:space="preserve">
          <source>Python standard library string method.</source>
          <target state="translated">파이썬 표준 라이브러리 문자열 방법.</target>
        </trans-unit>
        <trans-unit id="ecaf9845555964cd5fd3669eb039490e8ee39057" translate="yes" xml:space="preserve">
          <source>Python strings prefixed with the &lt;code&gt;r&lt;/code&gt; character such as &lt;code&gt;r'hello world'&lt;/code&gt; are so-called &amp;ldquo;raw&amp;rdquo; strings. They have different semantics regarding backslashes than strings without this prefix. Backslashes in raw strings will be interpreted as an escaped backslash, e.g., &lt;code&gt;r'\' == '\\'&lt;/code&gt;. You should &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#string-literals&quot;&gt;read about them&lt;/a&gt; if this is unclear.</source>
          <target state="translated">&lt;code&gt;r'hello world'&lt;/code&gt; 와 같이 &lt;code&gt;r&lt;/code&gt; 문자가 접두사로 붙은 Python 문자열 은 소위 &quot;원시&quot;문자열입니다. 백 슬래시와 관련하여이 접두사가없는 문자열과 다른 의미를 갖습니다. 원시 문자열의 백 슬래시는 이스케이프 된 백 슬래시로 해석됩니다 (예 : &lt;code&gt;r'\' == '\\'&lt;/code&gt; . 당신은해야 &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#string-literals&quot;&gt;그들에 대해 읽어&lt;/a&gt; 이 불분명합니다.</target>
        </trans-unit>
        <trans-unit id="18c1ddad38320cbcec7938f96d6a8de9ecedc57c" translate="yes" xml:space="preserve">
          <source>Python version support</source>
          <target state="translated">파이썬 버전 지원</target>
        </trans-unit>
        <trans-unit id="ee322b3f8dc7c0d5b43060b31e7fb5f2b18621ab" translate="yes" xml:space="preserve">
          <source>Python write mode, default &amp;lsquo;w&amp;rsquo;.</source>
          <target state="translated">파이썬 쓰기 모드, 기본값은 'w'입니다.</target>
        </trans-unit>
        <trans-unit id="6b063762eb05a7dabd80efd74d34da184b5e5333" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s datetime uses microsecond resolution, which is lower than pandas (nanosecond). The values are truncated.</source>
          <target state="translated">파이썬의 날짜 시간은 팬더 (nanosecond)보다 낮은 마이크로 초 해상도를 사용합니다. 값이 잘립니다.</target>
        </trans-unit>
        <trans-unit id="487e4b236409cc9951499a39f6189f5e1c293b60" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s standard</source>
          <target state="translated">파이썬의 표준</target>
        </trans-unit>
        <trans-unit id="1bcfd258b99aed1a1a987ea014ada99418854ca1" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s standard &lt;code&gt;datetime&lt;/code&gt; library uses a different representation timedelta&amp;rsquo;s. This method converts a Series of pandas Timedeltas to &lt;code&gt;datetime.timedelta&lt;/code&gt; format with the same length as the original Series.</source>
          <target state="translated">파이썬의 표준 &lt;code&gt;datetime&lt;/code&gt; 라이브러리는 다른 표현 타임 델타를 사용합니다. 이 방법은 일련의 팬더 타임 델타를 원래 시리즈와 동일한 길이의 &lt;code&gt;datetime.timedelta&lt;/code&gt; 형식으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="8d7b17319c9e8a9cf2add928d9b6218ecc82c850" translate="yes" xml:space="preserve">
          <source>Q-MAR</source>
          <target state="translated">Q-MAR</target>
        </trans-unit>
        <trans-unit id="5e1e7e60ab0f3524e522a556bffe92134b0aada2" translate="yes" xml:space="preserve">
          <source>QS</source>
          <target state="translated">QS</target>
        </trans-unit>
        <trans-unit id="df06aaa242a7d3577191f7cacadb21525ead4f76" translate="yes" xml:space="preserve">
          <source>QtPandas</source>
          <target state="translated">QtPandas</target>
        </trans-unit>
        <trans-unit id="c84e78418a88f29c7a5cf0b6bb5c24b04faf1b26" translate="yes" xml:space="preserve">
          <source>Quandl</source>
          <target state="translated">Quandl</target>
        </trans-unit>
        <trans-unit id="70d8972dad900e8e582b962cceb8a0d3a1d75f98" translate="yes" xml:space="preserve">
          <source>Quandl API for Python wraps the Quandl REST API to return Pandas DataFrames with timeseries indexes.</source>
          <target state="translated">Python 용 Quandl API는 Quandl REST API를 래핑하여 시계열 인덱스가있는 Pandas DataFrames를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a930d51ff773254251704dc4c1467f1968347ac" translate="yes" xml:space="preserve">
          <source>Quantile of values within each group.</source>
          <target state="translated">각 그룹 내 값의 분위수</target>
        </trans-unit>
        <trans-unit id="3374411c383c97a5040863f6ec4c9b0e8318aba5" translate="yes" xml:space="preserve">
          <source>Quantile to compute. 0 &amp;lt;= quantile &amp;lt;= 1.</source>
          <target state="translated">계산하기위한 Quantile. 0 &amp;lt;= Quantile &amp;lt;= 1.</target>
        </trans-unit>
        <trans-unit id="4d8e6264a72808eae4c61071fcd1c081d21587a5" translate="yes" xml:space="preserve">
          <source>Quantile-based discretization function.</source>
          <target state="translated">Quantile 기반 이산화 기능.</target>
        </trans-unit>
        <trans-unit id="19e6648ea21f538a60e8d3128af751c0837db304" translate="yes" xml:space="preserve">
          <source>Quantile-based discretization function. Discretize variable into equal-sized buckets based on rank or based on sample quantiles. For example 1000 values for 10 quantiles would produce a Categorical object indicating quantile membership for each data point.</source>
          <target state="translated">Quantile 기반 이산화 기능. 순위 또는 샘플 Quantile을 기준으로 변수를 동일한 크기의 버킷으로 분리합니다. 예를 들어 10 Quantile에 대한 1000 개의 값은 각 데이터 포인트에 대한 Quantile 멤버십을 나타내는 범주 형 오브젝트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5d37204be259c80d359d0c86a450d0816a1a0834" translate="yes" xml:space="preserve">
          <source>Quarter as a decimal number [01,04]</source>
          <target state="translated">십진수로서의 쿼터 [01,04]</target>
        </trans-unit>
        <trans-unit id="6ee410b0b24cd0a52ab84940ae9ca44089d436da" translate="yes" xml:space="preserve">
          <source>Quarter of the date: Jan-Mar = 1, Apr-Jun = 2, etc.</source>
          <target state="translated">날짜의 분기 : 1 월 -3 월 = 1, 4 월 -6 월 = 2 등</target>
        </trans-unit>
        <trans-unit id="c92daa39eafd91c82f2ac53ea17cccc90ed2ecce" translate="yes" xml:space="preserve">
          <source>Quarter representation - doesn&amp;rsquo;t call super.</source>
          <target state="translated">분기 표현-슈퍼를 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="862dbf4f7bafef65ffed07969c3427168c5ad11f" translate="yes" xml:space="preserve">
          <source>Quarter value of the period.</source>
          <target state="translated">기간의 분기 값입니다.</target>
        </trans-unit>
        <trans-unit id="3665b09c9fe1520ad4cadf7bbab715ba9314ffce" translate="yes" xml:space="preserve">
          <source>QuarterBegin</source>
          <target state="translated">QuarterBegin</target>
        </trans-unit>
        <trans-unit id="982efabb8d97eaef6108641e3f7c9d1e716f499c" translate="yes" xml:space="preserve">
          <source>QuarterBegin.apply()</source>
          <target state="translated">QuarterBegin.apply()</target>
        </trans-unit>
        <trans-unit id="4e998afbfa8bf52f17e7cd34547b95693b3dcde4" translate="yes" xml:space="preserve">
          <source>QuarterBegin.apply_index()</source>
          <target state="translated">QuarterBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="c66746ce8e50e3bb9ea319a312accb05cad6b59e" translate="yes" xml:space="preserve">
          <source>QuarterBegin.base</source>
          <target state="translated">QuarterBegin.base</target>
        </trans-unit>
        <trans-unit id="28d72bc3fba11bc86fa8606d67b36a844212be5e" translate="yes" xml:space="preserve">
          <source>QuarterBegin.copy()</source>
          <target state="translated">QuarterBegin.copy()</target>
        </trans-unit>
        <trans-unit id="82c2dae2265013fe83574fcc6179bfcaf27bd27f" translate="yes" xml:space="preserve">
          <source>QuarterBegin.freqstr</source>
          <target state="translated">QuarterBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="8de01409840dfd5a34a45ebd19839618cafc3c30" translate="yes" xml:space="preserve">
          <source>QuarterBegin.isAnchored()</source>
          <target state="translated">QuarterBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="f23770c895ace0c95f0ade2c05173ab70dbd93a1" translate="yes" xml:space="preserve">
          <source>QuarterBegin.kwds</source>
          <target state="translated">QuarterBegin.kwds</target>
        </trans-unit>
        <trans-unit id="48b4d41df4829379c81249d618cb763c55d9110b" translate="yes" xml:space="preserve">
          <source>QuarterBegin.name</source>
          <target state="translated">QuarterBegin.name</target>
        </trans-unit>
        <trans-unit id="94348650b452358bc1ab4a30c6e458b472c4c8ea" translate="yes" xml:space="preserve">
          <source>QuarterBegin.nanos</source>
          <target state="translated">QuarterBegin.nanos</target>
        </trans-unit>
        <trans-unit id="f01d2f0047bead155a09c0c9b7cae47d811472b0" translate="yes" xml:space="preserve">
          <source>QuarterBegin.normalize</source>
          <target state="translated">QuarterBegin.normalize</target>
        </trans-unit>
        <trans-unit id="93f8ccff28402cea6840fa219a1ad8f6453574cf" translate="yes" xml:space="preserve">
          <source>QuarterBegin.onOffset()</source>
          <target state="translated">QuarterBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="e3310e4c42072b98885a53051a76b24e2a5fac79" translate="yes" xml:space="preserve">
          <source>QuarterBegin.rollback()</source>
          <target state="translated">QuarterBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="1625144bdc07e45ec8f0637b340386ef10dd4031" translate="yes" xml:space="preserve">
          <source>QuarterBegin.rollforward()</source>
          <target state="translated">QuarterBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="b5730af047933d40a16b8d18f95275b2167e26f1" translate="yes" xml:space="preserve">
          <source>QuarterBegin.rule_code</source>
          <target state="translated">QuarterBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="4f1f8d9497e3ea3f8a4c52484b0041ac7a164be5" translate="yes" xml:space="preserve">
          <source>QuarterEnd</source>
          <target state="translated">QuarterEnd</target>
        </trans-unit>
        <trans-unit id="d9f947a4f3d9c0f929e2b304bd12d9b95d27e103" translate="yes" xml:space="preserve">
          <source>QuarterEnd.apply()</source>
          <target state="translated">QuarterEnd.apply()</target>
        </trans-unit>
        <trans-unit id="0bd5252bb9d5c52d6826b2db0e53eb118bfa09b6" translate="yes" xml:space="preserve">
          <source>QuarterEnd.apply_index()</source>
          <target state="translated">QuarterEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="228c82e90b89e3e75d16f04ff2f080b5185cb821" translate="yes" xml:space="preserve">
          <source>QuarterEnd.base</source>
          <target state="translated">QuarterEnd.base</target>
        </trans-unit>
        <trans-unit id="f3bcb043812b17c7942f9de9abf1b4f9266c565d" translate="yes" xml:space="preserve">
          <source>QuarterEnd.copy()</source>
          <target state="translated">QuarterEnd.copy()</target>
        </trans-unit>
        <trans-unit id="3e1f2ec261aa41e4680378f69fd20170dd4bd388" translate="yes" xml:space="preserve">
          <source>QuarterEnd.freqstr</source>
          <target state="translated">QuarterEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="d6508a12764e7026162a984c656b7832d113fab4" translate="yes" xml:space="preserve">
          <source>QuarterEnd.isAnchored()</source>
          <target state="translated">QuarterEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="9627cb63305583b94ba9960747623a712b39e4d0" translate="yes" xml:space="preserve">
          <source>QuarterEnd.kwds</source>
          <target state="translated">QuarterEnd.kwds</target>
        </trans-unit>
        <trans-unit id="17368d76e19ceea0d4284d3dc45b7b6dd250e434" translate="yes" xml:space="preserve">
          <source>QuarterEnd.name</source>
          <target state="translated">QuarterEnd.name</target>
        </trans-unit>
        <trans-unit id="b86757ba5b437e60c376a6558b2b0aa05a563050" translate="yes" xml:space="preserve">
          <source>QuarterEnd.nanos</source>
          <target state="translated">QuarterEnd.nanos</target>
        </trans-unit>
        <trans-unit id="eb09558d765576d59cfaeff6758a350a2f39beb8" translate="yes" xml:space="preserve">
          <source>QuarterEnd.normalize</source>
          <target state="translated">QuarterEnd.normalize</target>
        </trans-unit>
        <trans-unit id="5bf93d4bc165c8c2dba343a5c41341aa833d4621" translate="yes" xml:space="preserve">
          <source>QuarterEnd.onOffset()</source>
          <target state="translated">QuarterEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="a0543b89c12a0216c1f2636c0b2ffe66765ad2b2" translate="yes" xml:space="preserve">
          <source>QuarterEnd.rollback()</source>
          <target state="translated">QuarterEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="c414ccc0df44649bb8bb4bda891122e9308861c2" translate="yes" xml:space="preserve">
          <source>QuarterEnd.rollforward()</source>
          <target state="translated">QuarterEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="d4effe6b6b376eb9bbed2d339e4cd7a9a0f35eea" translate="yes" xml:space="preserve">
          <source>QuarterEnd.rule_code</source>
          <target state="translated">QuarterEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="b669a02ceae533380f0adf7d5fd9bf7603a7eb3c" translate="yes" xml:space="preserve">
          <source>QuarterOffset</source>
          <target state="translated">QuarterOffset</target>
        </trans-unit>
        <trans-unit id="32d79babd91374db41fb882db3bb1905c1c59ce1" translate="yes" xml:space="preserve">
          <source>QuarterOffset.apply()</source>
          <target state="translated">QuarterOffset.apply()</target>
        </trans-unit>
        <trans-unit id="b32ed481839ff3ba73cc174d051dd9c24515b17e" translate="yes" xml:space="preserve">
          <source>QuarterOffset.apply_index()</source>
          <target state="translated">QuarterOffset.apply_index()</target>
        </trans-unit>
        <trans-unit id="050c9c1a5b37cf8eb49b1aa6dfe758b1899c0d6a" translate="yes" xml:space="preserve">
          <source>QuarterOffset.base</source>
          <target state="translated">QuarterOffset.base</target>
        </trans-unit>
        <trans-unit id="179a373901d0f86747c123f924ede79e83c98a95" translate="yes" xml:space="preserve">
          <source>QuarterOffset.copy()</source>
          <target state="translated">QuarterOffset.copy()</target>
        </trans-unit>
        <trans-unit id="0226af38fdd2a44dc8eae46a109a4ebe9914934a" translate="yes" xml:space="preserve">
          <source>QuarterOffset.freqstr</source>
          <target state="translated">QuarterOffset.freqstr</target>
        </trans-unit>
        <trans-unit id="0eb9b679cbccb8166504aff20697e1dd7882a86a" translate="yes" xml:space="preserve">
          <source>QuarterOffset.isAnchored()</source>
          <target state="translated">QuarterOffset.isAnchored()</target>
        </trans-unit>
        <trans-unit id="966cd33633f8385f3602c8c96e34938db1031361" translate="yes" xml:space="preserve">
          <source>QuarterOffset.kwds</source>
          <target state="translated">QuarterOffset.kwds</target>
        </trans-unit>
        <trans-unit id="ee8e6e6ae04c17c1cfa26c76fdc794a0d01c8e39" translate="yes" xml:space="preserve">
          <source>QuarterOffset.name</source>
          <target state="translated">QuarterOffset.name</target>
        </trans-unit>
        <trans-unit id="0e39d783025497956253f9ef57d35e9c0a3df6fc" translate="yes" xml:space="preserve">
          <source>QuarterOffset.nanos</source>
          <target state="translated">QuarterOffset.nanos</target>
        </trans-unit>
        <trans-unit id="533a79a8538d3561e8cccbcf6a8d7268da2b2eac" translate="yes" xml:space="preserve">
          <source>QuarterOffset.normalize</source>
          <target state="translated">QuarterOffset.normalize</target>
        </trans-unit>
        <trans-unit id="951f9042834901a13e25a26dc33fbff35800bc46" translate="yes" xml:space="preserve">
          <source>QuarterOffset.onOffset()</source>
          <target state="translated">QuarterOffset.onOffset()</target>
        </trans-unit>
        <trans-unit id="10f6f5053080f6ffb9fabe0159c02f3344f0eed1" translate="yes" xml:space="preserve">
          <source>QuarterOffset.rollback()</source>
          <target state="translated">QuarterOffset.rollback()</target>
        </trans-unit>
        <trans-unit id="b1b0428843331e35cdcbb99f82c02e7dff4e37e0" translate="yes" xml:space="preserve">
          <source>QuarterOffset.rollforward()</source>
          <target state="translated">QuarterOffset.rollforward()</target>
        </trans-unit>
        <trans-unit id="8a39d31a84a7224bcf851762726021c44eae825e" translate="yes" xml:space="preserve">
          <source>QuarterOffset.rule_code</source>
          <target state="translated">QuarterOffset.rule_code</target>
        </trans-unit>
        <trans-unit id="51d3fe66757c5037dccb71fb7bfc0694ecb68c6d" translate="yes" xml:space="preserve">
          <source>Query MultiIndex</source>
          <target state="translated">MultiIndex 쿼리</target>
        </trans-unit>
        <trans-unit id="f1f9f020952dff925cdd2a9ae7799c2076df48ca" translate="yes" xml:space="preserve">
          <source>Query config parameters for job processing. For example:</source>
          <target state="translated">작업 처리를위한 구성 매개 변수를 조회하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="93b1cdd775fe87399936655e939eb7aae087379a" translate="yes" xml:space="preserve">
          <source>Query the columns of a DataFrame with a boolean expression.</source>
          <target state="translated">부울 식으로 DataFrame의 열을 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="1fd57d115050da4f135412e5f0fcf370f8889c88" translate="yes" xml:space="preserve">
          <source>Query timedelta64[ns]</source>
          <target state="translated">쿼리 시간 delta64 [ns]</target>
        </trans-unit>
        <trans-unit id="208da78109696e1f0e8edb17719c6baf5dfe015b" translate="yes" xml:space="preserve">
          <source>Query via data columns</source>
          <target state="translated">데이터 열을 통한 쿼리</target>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="translated">Querying</target>
        </trans-unit>
        <trans-unit id="dc0e6b5970cc0bb36b89b0d9a10e684fee8d8b47" translate="yes" xml:space="preserve">
          <source>Querying a table</source>
          <target state="translated">테이블 쿼리</target>
        </trans-unit>
        <trans-unit id="41a823c3ab6fe9ebb4d980ae8481b8bf1c986c0a" translate="yes" xml:space="preserve">
          <source>Querying, filtering, sampling</source>
          <target state="translated">쿼리, 필터링, 샘플링</target>
        </trans-unit>
        <trans-unit id="d6b8b67734d424b3b83060cc39969347714abf46" translate="yes" xml:space="preserve">
          <source>Quick access to date fields via properties such as &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; 등과 같은 속성을 통해 날짜 필드에 빠르게 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8afc1995d3563efc07482a5d4722ff9d94f7f5ed" translate="yes" xml:space="preserve">
          <source>Quick reStructuredText reference</source>
          <target state="translated">빠른 재구성 된 텍스트 참조</target>
        </trans-unit>
        <trans-unit id="6bf2dad97765bc986e6d1b74274d4d486da854e7" translate="yes" xml:space="preserve">
          <source>Quick reference</source>
          <target state="translated">빠른 참조</target>
        </trans-unit>
        <trans-unit id="500c016f410cab769c5b56c96f433e18c751ab32" translate="yes" xml:space="preserve">
          <source>Quickly retrieve single value at passed column and index.</source>
          <target state="translated">전달 된 열 및 인덱스에서 단일 값을 빠르게 검색합니다.</target>
        </trans-unit>
        <trans-unit id="eeb5f7051297d05861040bc214941223508beec6" translate="yes" xml:space="preserve">
          <source>Quickly retrieve single value at passed index label.</source>
          <target state="translated">전달 된 인덱스 레이블에서 단일 값을 빠르게 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b9fe73e932e3c8b813ce628b70eb8d2e8eab3ab9" translate="yes" xml:space="preserve">
          <source>Quickly set single value at passed label.</source>
          <target state="translated">전달 된 레이블에서 단일 값을 빠르게 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="08b3daa03bfba9d280e3ed7f494228a18175ddf1" translate="yes" xml:space="preserve">
          <source>Quotes (and other escape characters) in embedded fields can be handled in any number of ways. One way is to use backslashes; to properly parse this data, you should pass the &lt;code&gt;escapechar&lt;/code&gt; option:</source>
          <target state="translated">포함 된 필드의 따옴표 (및 기타 이스케이프 문자)는 다양한 방법으로 처리 할 수 ​​있습니다. 한 가지 방법은 백 슬래시를 사용하는 것입니다. 이 데이터를 올바르게 구문 분석하려면 &lt;code&gt;escapechar&lt;/code&gt; 옵션을 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="23d3062584bb058990084c2bcfef140d09adb839" translate="yes" xml:space="preserve">
          <source>Quoting and Escape Characters</source>
          <target state="translated">인용 및 이스케이프 문자</target>
        </trans-unit>
        <trans-unit id="8d2e6b9fa89cc31d9c1e2504833058e881d1c855" translate="yes" xml:space="preserve">
          <source>Quoting, compression, and file format</source>
          <target state="translated">인용, 압축 및 파일 형식</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="5b3e3b24ef05df9d1783f20115a950214fee203c" translate="yes" xml:space="preserve">
          <source>R allows for missing values to be included in its &lt;code&gt;levels&lt;/code&gt; (pandas&amp;rsquo; &lt;code&gt;categories&lt;/code&gt;). pandas does not allow &lt;code&gt;NaN&lt;/code&gt; categories, but missing values can still be in the &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">R은 &lt;code&gt;levels&lt;/code&gt; (pandas의 &lt;code&gt;categories&lt;/code&gt; ) 에 누락 된 값을 포함하도록 허용합니다 . 팬더는 허용하지 않습니다 &lt;code&gt;NaN&lt;/code&gt; 범주를하지만, 누락 된 값은 여전히있을 수 있습니다 &lt;code&gt;values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4f485087187c516dd7d4c4accb5a863d9789d4a" translate="yes" xml:space="preserve">
          <source>R makes it easy to access &lt;code&gt;data.frame&lt;/code&gt; columns by name</source>
          <target state="translated">R을 사용하면 이름별로 &lt;code&gt;data.frame&lt;/code&gt; 열에 쉽게 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ac61856ae1002f5ea4baf78373c24d1847a10d0" translate="yes" xml:space="preserve">
          <source>R&amp;rsquo;s &lt;code&gt;levels&lt;/code&gt; are always of type string, while &lt;code&gt;categories&lt;/code&gt; in pandas can be of any dtype.</source>
          <target state="translated">R의 &lt;code&gt;levels&lt;/code&gt; 은 항상 문자열 유형이지만 팬더의 &lt;code&gt;categories&lt;/code&gt; 는 모든 d 유형 이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="faa3d9fb2019346ec9d9e0eee1274360fc2ae7bb" translate="yes" xml:space="preserve">
          <source>R&amp;rsquo;s &lt;code&gt;levels&lt;/code&gt; are named &lt;code&gt;categories&lt;/code&gt;.</source>
          <target state="translated">R의 &lt;code&gt;levels&lt;/code&gt; 은 &lt;code&gt;categories&lt;/code&gt; 로 명명 됩니다 .</target>
        </trans-unit>
        <trans-unit id="828ff806ee2a0c92f88bdafd52de2f465ae29ec8" translate="yes" xml:space="preserve">
          <source>R&amp;rsquo;s shorthand for a subrange of columns (&lt;code&gt;select(df, col1:col3)&lt;/code&gt;) can be approached cleanly in pandas, if you have the list of columns, for example &lt;code&gt;df[cols[1:3]]&lt;/code&gt; or &lt;code&gt;df.drop(cols[1:3])&lt;/code&gt;, but doing this by column name is a bit messy.</source>
          <target state="translated">열 부분 범위 (에 대한 R의 속기 &lt;code&gt;select(df, col1:col3)&lt;/code&gt; ) 당신이 열 목록이있는 경우 예를 들어, 팬더에 완전히 접근 할 수 있습니다 &lt;code&gt;df[cols[1:3]]&lt;/code&gt; 또는 &lt;code&gt;df.drop(cols[1:3])&lt;/code&gt; , 그러나 열 이름으로 이것을하는 것은 약간 지저분합니다.</target>
        </trans-unit>
        <trans-unit id="296060ae07a8cb0c654996534478668d86782b89" translate="yes" xml:space="preserve">
          <source>RadViz</source>
          <target state="translated">RadViz</target>
        </trans-unit>
        <trans-unit id="71c09bde90f307c8b7327726ddb01b65a1426010" translate="yes" xml:space="preserve">
          <source>RadViz allow to project a N-dimensional data set into a 2D space where the influence of each dimension can be interpreted as a balance between the influence of all dimensions.</source>
          <target state="translated">RadViz를 사용하면 각 차원의 영향을 모든 차원의 영향 사이의 균형으로 해석 할 수있는 2 차원 공간에 N 차원 데이터 세트를 투영 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="031505a68e275835bbc142580878596b6e154834" translate="yes" xml:space="preserve">
          <source>RadViz is a way of visualizing multi-variate data. It is based on a simple spring tension minimization algorithm. Basically you set up a bunch of points in a plane. In our case they are equally spaced on a unit circle. Each point represents a single attribute. You then pretend that each sample in the data set is attached to each of these points by a spring, the stiffness of which is proportional to the numerical value of that attribute (they are normalized to unit interval). The point in the plane, where our sample settles to (where the forces acting on our sample are at an equilibrium) is where a dot representing our sample will be drawn. Depending on which class that sample belongs it will be colored differently. See the R package &lt;a href=&quot;https://cran.r-project.org/package=Radviz/&quot;&gt;Radviz&lt;/a&gt; for more information.</source>
          <target state="translated">RadViz는 다변량 데이터를 시각화하는 방법입니다. 간단한 스프링 장력 최소화 알고리즘을 기반으로합니다. 기본적으로 평면에 여러 점을 설정합니다. 우리의 경우에는 단위 원에서 동일한 간격으로 배치됩니다. 각 포인트는 단일 속성을 나타냅니다. 그런 다음 데이터 세트의 각 샘플이 해당 속성의 숫자 값에 비례하는 스프링에 의해 이러한 각 점에 연결되어 있다고 가정합니다 (단위 간격으로 정규화 됨). 샘플이 안정되는 평면의 지점 (샘플에 작용하는 힘이 평형 상태에 있음)은 샘플을 나타내는 점이 그려지는 지점입니다. 샘플이 속한 클래스에 따라 색상이 다르게 표시됩니다. 자세한 내용은 R 패키지 &lt;a href=&quot;https://cran.r-project.org/package=Radviz/&quot;&gt;Radviz&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="94cab360687a24d2262de46560fb146c953b0654" translate="yes" xml:space="preserve">
          <source>Raise an exception, warn, or no action if trying to use chained assignment, The default is warn [default: warn] [currently: warn]</source>
          <target state="translated">연결 할당을 사용하려는 경우 예외 발생, 경고 또는 조치 없음. 기본값은 경고입니다. [기본값 : 경고] [현재 : 경고]</target>
        </trans-unit>
        <trans-unit id="79922918bac2c37822acff3770c870f271ae2785" translate="yes" xml:space="preserve">
          <source>Raised by</source>
          <target state="translated">모금</target>
        </trans-unit>
        <trans-unit id="88904714e3ec389682575134c2348e53e9b0165e" translate="yes" xml:space="preserve">
          <source>Raised by &lt;code&gt;pd.read_csv&lt;/code&gt; and &lt;code&gt;pd.read_table&lt;/code&gt; when it is necessary to change parsers, generally from the default &amp;lsquo;c&amp;rsquo; parser to &amp;lsquo;python&amp;rsquo;.</source>
          <target state="translated">일반적으로 기본 'c'파서에서 'python'으로 파서를 변경해야 할 때 &lt;code&gt;pd.read_csv&lt;/code&gt; 및 &lt;code&gt;pd.read_table&lt;/code&gt; 에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="18c8da74eaae931a653b383932cd856f07135c32" translate="yes" xml:space="preserve">
          <source>Raised for a dtype incompatibility. This can happen whenever</source>
          <target state="translated">dtype 비 호환성 문제로 발생했습니다. 이것은 언제든지 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f05e14f9f00eb909fcaffe4ea4ed5300c987f229" translate="yes" xml:space="preserve">
          <source>Raised for a dtype incompatibility. This can happen whenever &lt;code&gt;read_csv&lt;/code&gt; or &lt;code&gt;read_table&lt;/code&gt; encounter non-uniform dtypes in a column(s) of a given CSV file.</source>
          <target state="translated">dtype 비 호환성을 위해 발생했습니다. &lt;code&gt;read_csv&lt;/code&gt; 또는 &lt;code&gt;read_table&lt;/code&gt; 이 지정된 CSV 파일의 열에서 균일하지 않은 dtype을 발견 할 때마다 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="706934accc751736ceafca5f48b9e906eb3856c1" translate="yes" xml:space="preserve">
          <source>Raised when encountering a timedelta value that cannot be represented as a timedelta64[ns].</source>
          <target state="translated">timedelta64 [ns]로 표현할 수없는 timedelta 값을 만날 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c36d9458e0d1baae7403b5ce642a78b09e4acc7f" translate="yes" xml:space="preserve">
          <source>Raises</source>
          <target state="translated">Raises</target>
        </trans-unit>
        <trans-unit id="34f428c365c67487cb59554c8352fab9abd129f3" translate="yes" xml:space="preserve">
          <source>Raises &lt;code&gt;TypeError&lt;/code&gt; because the categories are ordered and not identical.</source>
          <target state="translated">발생시킵니다 &lt;code&gt;TypeError&lt;/code&gt; 범주의 주문과 동일하지 않기 때문에.</target>
        </trans-unit>
        <trans-unit id="130fd9e3c2bbc4dfa465a627379700a1270ed74d" translate="yes" xml:space="preserve">
          <source>Raises a ValueError if</source>
          <target state="translated">다음과 같은 경우 ValueError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="930c165251c160359ecfe812376626cc736d6f09" translate="yes" xml:space="preserve">
          <source>Raises a ValueError if &lt;code&gt;column&lt;/code&gt; is already contained in the DataFrame, unless &lt;code&gt;allow_duplicates&lt;/code&gt; is set to True.</source>
          <target state="translated">&lt;code&gt;allow_duplicates&lt;/code&gt; 가 True로 설정되어 있지 않으면 &lt;code&gt;column&lt;/code&gt; 이 이미 DataFrame에 포함되어 있으면 ValueError가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="c92a1dce7a5abcb4b14034b7d0e334c3a2aea53a" translate="yes" xml:space="preserve">
          <source>Raises an AssertionError if left and right are not equal. Provides an easy interface to ignore inequality in dtypes, indexes and precision among others.</source>
          <target state="translated">왼쪽과 오른쪽이 같지 않으면 AssertionError를 발생시킵니다. dtypes, 인덱스 및 정밀도의 불평등을 무시할 수있는 쉬운 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="75d5783c7959566139a1b36808eefccca7b59614" translate="yes" xml:space="preserve">
          <source>RangeIndex</source>
          <target state="translated">RangeIndex</target>
        </trans-unit>
        <trans-unit id="84f9191fbfcc701dfd85e1301bfbd934499d1b2a" translate="yes" xml:space="preserve">
          <source>RangeIndex is a memory-saving special case of Int64Index limited to representing monotonic ranges. Using RangeIndex may in some instances improve computing speed.</source>
          <target state="translated">RangeIndex는 단조로운 범위를 나타내는 것으로 제한된 Int64Index의 메모리 절약형 특수 사례입니다. RangeIndex를 사용하면 컴퓨팅 속도가 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e1e285a60bdbb4aee4d6c8ca39d23c349c721bb" translate="yes" xml:space="preserve">
          <source>RangeIndex.from_range()</source>
          <target state="translated">RangeIndex.from_range()</target>
        </trans-unit>
        <trans-unit id="87d4988b27d016dab1b398c30f2ccfbdd0841c81" translate="yes" xml:space="preserve">
          <source>RangeIndex.start</source>
          <target state="translated">RangeIndex.start</target>
        </trans-unit>
        <trans-unit id="88b0bee52ed199d4c28c1c1f7d5a30058944970e" translate="yes" xml:space="preserve">
          <source>RangeIndex.step</source>
          <target state="translated">RangeIndex.step</target>
        </trans-unit>
        <trans-unit id="69ad6fa3fd9dda130818198bb9832c6633d675b2" translate="yes" xml:space="preserve">
          <source>RangeIndex.stop</source>
          <target state="translated">RangeIndex.stop</target>
        </trans-unit>
        <trans-unit id="18b523e0621e64ba2036dbdde64dbc421de4d9f6" translate="yes" xml:space="preserve">
          <source>RangeIndex[source]</source>
          <target state="translated">RangeIndex[source]</target>
        </trans-unit>
        <trans-unit id="980d7723058077dc725b11c839ab34b5a8d87775" translate="yes" xml:space="preserve">
          <source>Ranges are defined by the &lt;code&gt;start_date&lt;/code&gt; and &lt;code&gt;end_date&lt;/code&gt; class attributes of &lt;code&gt;AbstractHolidayCalendar&lt;/code&gt;. The defaults are shown below.</source>
          <target state="translated">범위는 &lt;code&gt;AbstractHolidayCalendar&lt;/code&gt; 의 &lt;code&gt;start_date&lt;/code&gt; 및 &lt;code&gt;end_date&lt;/code&gt; 클래스 속성에 의해 정의됩니다 . 기본값은 아래와 같습니다.</target>
        </trans-unit>
        <trans-unit id="ea6fa2e32ebcccdb8106834c9fccc06d5d54d4e7" translate="yes" xml:space="preserve">
          <source>Rank of values within each group.</source>
          <target state="translated">각 그룹 내 값의 순위입니다.</target>
        </trans-unit>
        <trans-unit id="8a8dd5be905d149762e688fd387f887322e2720b" translate="yes" xml:space="preserve">
          <source>Rather than count values, group them into half-open bins, a convenience for &lt;code&gt;pd.cut&lt;/code&gt;, only works with numeric data.</source>
          <target state="translated">&lt;code&gt;pd.cut&lt;/code&gt; 의 편의를 위해 값을 계산하는 대신 반 열린 빈으로 그룹화하면 숫자 데이터에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b7a4c571608d952459f39297295a7209cd3cdd76" translate="yes" xml:space="preserve">
          <source>Ratio of non-sparse points to total (dense) data points represented in the DataFrame.</source>
          <target state="translated">DataFrame에 표시된 스파 스가 아닌 포인트와 총 (밀도) 데이터 포인트의 비율입니다.</target>
        </trans-unit>
        <trans-unit id="aa0a7b9cddccc257282e929caffbebc310bb42c9" translate="yes" xml:space="preserve">
          <source>Ratio of non-sparse points to total (dense) data points.</source>
          <target state="translated">총 (밀도) 데이터 포인트에 대한 비 희소 포인트의 비율입니다.</target>
        </trans-unit>
        <trans-unit id="7f20c151dbc1bf934779a706a3bed5cc3050d663" translate="yes" xml:space="preserve">
          <source>Ratio to Prior</source>
          <target state="translated">이전 대비 비율</target>
        </trans-unit>
        <trans-unit id="eb23efbb267893b699389ae74854547979d265bd" translate="yes" xml:space="preserve">
          <source>Ray</source>
          <target state="translated">Ray</target>
        </trans-unit>
        <trans-unit id="83f01da646c5bb4822ebfe2d66b9b88bcc321809" translate="yes" xml:space="preserve">
          <source>Read CSV (comma-separated) file into DataFrame.</source>
          <target state="translated">CSV (쉼표로 구분) 파일을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="5f35eec2327a784312abc9ec4093b1b501451290" translate="yes" xml:space="preserve">
          <source>Read CSV (comma-separated) file into a DataFrame.</source>
          <target state="translated">CSV (쉼표로 구분) 파일을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="45707c8011376f509554ba7d73cef40b22890227" translate="yes" xml:space="preserve">
          <source>Read HDF5 file into a DataFrame.</source>
          <target state="translated">HDF5 파일을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="1ebd25e8488f7c7598e6b807c1a5fa0f8567cfaa" translate="yes" xml:space="preserve">
          <source>Read HTML table into a DataFrame.</source>
          <target state="translated">HTML 테이블을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="0a1932f25358cc497f27f944d26e1d39a3c43685" translate="yes" xml:space="preserve">
          <source>Read HTML tables into a &lt;code&gt;list&lt;/code&gt; of &lt;code&gt;DataFrame&lt;/code&gt; objects.</source>
          <target state="translated">HTML 테이블을 &lt;code&gt;DataFrame&lt;/code&gt; 객체 &lt;code&gt;list&lt;/code&gt; 으로 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="69864ed70c4e72b0ee86941d508f66f8d67290d0" translate="yes" xml:space="preserve">
          <source>Read SAS files stored as either XPORT or SAS7BDAT format files.</source>
          <target state="translated">XPORT 또는 SAS7BDAT 형식 파일로 저장된 SAS 파일을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="9d76ac769efc642a0ebdc87db64cd88d6ed39515" translate="yes" xml:space="preserve">
          <source>Read SQL database table into a DataFrame.</source>
          <target state="translated">SQL 데이터베이스 테이블을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="05c75abb032e2e20afab0d17609ef5cf69b8a263" translate="yes" xml:space="preserve">
          <source>Read SQL query into a DataFrame.</source>
          <target state="translated">SQL 쿼리를 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="12566c3002ddb7efd6e615cfd89c295726e15b3c" translate="yes" xml:space="preserve">
          <source>Read SQL query or database table into a DataFrame.</source>
          <target state="translated">SQL 쿼리 또는 데이터베이스 테이블을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="ace933052483e85236e81afd30ac359065ef34f4" translate="yes" xml:space="preserve">
          <source>Read Stata file into DataFrame.</source>
          <target state="translated">Stata 파일을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b65e333cdeea6772730021c7de523883a84293e3" translate="yes" xml:space="preserve">
          <source>Read a DataFrame from Google BigQuery.</source>
          <target state="translated">Google BigQuery에서 DataFrame을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="baceb563f649487b0ec57a64f04381eec5d0cd21" translate="yes" xml:space="preserve">
          <source>Read a DataFrame from a table.</source>
          <target state="translated">테이블에서 DataFrame을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="a3eb8e60646577698223e655a9fe8baf7fa19c63" translate="yes" xml:space="preserve">
          <source>Read a SAS7BDAT file:</source>
          <target state="translated">SAS7BDAT 파일 읽기 :</target>
        </trans-unit>
        <trans-unit id="93cff13bafb0a1b1b898693e0e29735feb7309fd" translate="yes" xml:space="preserve">
          <source>Read a Stata dta file in 10,000 line chunks:</source>
          <target state="translated">10,000 줄 청크로 Stata dta 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="e51ab9d09275223dd8579b61ae5a72eb788c5c3e" translate="yes" xml:space="preserve">
          <source>Read a Stata dta file:</source>
          <target state="translated">Stata dta 파일을 읽으십시오 :</target>
        </trans-unit>
        <trans-unit id="9575ba5a9a613002c70db09afd4156a2fefdbe46" translate="yes" xml:space="preserve">
          <source>Read a URL and match a table that contains specific text:</source>
          <target state="translated">URL을 읽고 특정 텍스트가 포함 된 테이블을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="16b84e909ac9d3ede2a4b715db2c7ae1925dbe0f" translate="yes" xml:space="preserve">
          <source>Read a URL with no options:</source>
          <target state="translated">옵션없이 URL 읽기 :</target>
        </trans-unit>
        <trans-unit id="7bf4db1ec98a543ff7b609b2420f0bed4dcfc688" translate="yes" xml:space="preserve">
          <source>Read a comma-separated values (csv) file into DataFrame.</source>
          <target state="translated">쉼표로 구분 된 값 (csv) 파일을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="4382fb2fb6a5570ad88ff7131626fd25cb7606a1" translate="yes" xml:space="preserve">
          <source>Read a parquet file.</source>
          <target state="translated">쪽모이 세공 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="c07b17e27429aa577645c6464cec6882dc89bf41" translate="yes" xml:space="preserve">
          <source>Read a table of fixed-width formatted lines into DataFrame.</source>
          <target state="translated">고정 너비 형식의 행 표를 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="9b6621e74a9f6ec60ac407926283708dddbc5f3f" translate="yes" xml:space="preserve">
          <source>Read an Excel file into a pandas DataFrame.</source>
          <target state="translated">Excel 파일을 pandas DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="11de53055cd740fe8eb95488679def6a046ab1b0" translate="yes" xml:space="preserve">
          <source>Read an SPSS file:</source>
          <target state="translated">SPSS 파일 읽기 :</target>
        </trans-unit>
        <trans-unit id="18ab7b23d8621100fb4868febe90d6d2f6100d7a" translate="yes" xml:space="preserve">
          <source>Read and write &lt;code&gt;JSON&lt;/code&gt; format files and strings.</source>
          <target state="translated">&lt;code&gt;JSON&lt;/code&gt; 형식 파일과 문자열을 읽고 씁니다 .</target>
        </trans-unit>
        <trans-unit id="a3d7629ad567092af3263ca3b848f8132263a905" translate="yes" xml:space="preserve">
          <source>Read file</source>
          <target state="translated">파일 읽기</target>
        </trans-unit>
        <trans-unit id="36a8b6108a09b0e606a46c3e6570b2658eae9ee4" translate="yes" xml:space="preserve">
          <source>Read file &lt;code&gt;chunksize&lt;/code&gt; lines at a time, returns iterator.</source>
          <target state="translated">한 번에 파일 &lt;code&gt;chunksize&lt;/code&gt; 행을 읽고 반복자를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="646c1c9b8bfc53fbee6e29104370343785b0bad7" translate="yes" xml:space="preserve">
          <source>Read from HDF file.</source>
          <target state="translated">HDF 파일에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="e4042c064f99e63a33ef6c8649f5af6dba1d77f1" translate="yes" xml:space="preserve">
          <source>Read from a feather file.</source>
          <target state="translated">페더 파일에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="f1145b3669d0011aafef0764ed994ea1f6866088" translate="yes" xml:space="preserve">
          <source>Read from a parquet file.</source>
          <target state="translated">마루 파일에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="63018ad1e0cfa5fa4adc0580814716804153d454" translate="yes" xml:space="preserve">
          <source>Read from the store, close it if we opened it.</source>
          <target state="translated">상점에서 읽은 다음 열었 으면 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="35de0d2e7d124b6ee5d90439bfe059c2398f9b0a" translate="yes" xml:space="preserve">
          <source>Read general delimited file into DataFrame.</source>
          <target state="translated">일반 구분 파일을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="2a61261c0b00c785bc8c5a3be77d91b806e8d7e8" translate="yes" xml:space="preserve">
          <source>Read general delimited file into a DataFrame.</source>
          <target state="translated">일반 구분 파일을 DataFrame으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="7ad14c53f3308f9b4fd40ed57a70d4b4220faf60" translate="yes" xml:space="preserve">
          <source>Read in pandas &lt;code&gt;to_html&lt;/code&gt; output (with some loss of floating point precision):</source>
          <target state="translated">pandas &lt;code&gt;to_html&lt;/code&gt; 출력 에서 읽습니다 (부동 소수점 정밀도가 약간 손실 됨).</target>
        </trans-unit>
        <trans-unit id="dfb91dc144dc08d6fbf875776680da6d02af7b0c" translate="yes" xml:space="preserve">
          <source>Read in the content of the file from the above URL and pass it to &lt;code&gt;read_html&lt;/code&gt; as a string:</source>
          <target state="translated">위의 URL에서 파일 내용을 읽고 &lt;code&gt;read_html&lt;/code&gt; 에 문자열로 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="e3fa9f3d16133356205d7cc1be6c6ffd5684f136" translate="yes" xml:space="preserve">
          <source>Read more in the &lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba docs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://numba.pydata.org/&quot;&gt;Numba 문서&lt;/a&gt; 에서 자세히 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="06bea7c4529d5456483a2cd0fc96f672ae80d157" translate="yes" xml:space="preserve">
          <source>Read more in the &lt;a href=&quot;https://numba.pydata.org/&quot;&gt;Numba docs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://numba.pydata.org/&quot;&gt;Numba 문서&lt;/a&gt; 에서 더 많은 것을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="bee247243e95a8689a1cd53daeae07072df38932" translate="yes" xml:space="preserve">
          <source>Read observations from Stata file, converting them into a dataframe</source>
          <target state="translated">Stata 파일에서 관측 값을 읽고 데이터 프레임으로 변환</target>
        </trans-unit>
        <trans-unit id="ec64f333a1e97c6ab0f1097194043238155f47a5" translate="yes" xml:space="preserve">
          <source>Read only certain columns of a parquet file.</source>
          <target state="translated">마루 파일의 특정 열만 읽습니다.</target>
        </trans-unit>
        <trans-unit id="2c0af8aecd2f306dd50d65501f98f5bc6d3c4c66" translate="yes" xml:space="preserve">
          <source>Read text from clipboard and pass to read_csv.</source>
          <target state="translated">클립 보드에서 텍스트를 읽고 read_csv로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="ffe64d7d09bba3a30888c8dde5fdd1556677a8f6" translate="yes" xml:space="preserve">
          <source>Read text from clipboard and pass to read_csv. See read_csv for the full argument list</source>
          <target state="translated">클립 보드에서 텍스트를 읽고 read_csv로 전달하십시오. 전체 인수 목록은 read_csv를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="0127c1264090ef10f85b629f09499086bdc6a962" translate="yes" xml:space="preserve">
          <source>Read text from clipboard and pass to read_table.</source>
          <target state="translated">클립 보드에서 텍스트를 읽고 read_table로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="69cb4892859087c04360067954506c8422968fbf" translate="yes" xml:space="preserve">
          <source>Read text from clipboard into DataFrame.</source>
          <target state="translated">클립 보드에서 DataFrame으로 텍스트를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="55175e69e03608831c8a15565cfabce2d812b1f9" translate="yes" xml:space="preserve">
          <source>Read the file as a json object per line.</source>
          <target state="translated">파일을 한 줄에 json 객체로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="9152553e10658fba7d1a324930f18aea2411d711" translate="yes" xml:space="preserve">
          <source>Read value labels and convert columns to Categorical/Factor variables.</source>
          <target state="translated">값 레이블을 읽고 열을 Categorical / Factor 변수로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="0ce976d8454b414be0a22bcc6fbffbc73054e4a4" translate="yes" xml:space="preserve">
          <source>Read/write API</source>
          <target state="translated">읽기 / 쓰기 API</target>
        </trans-unit>
        <trans-unit id="ac5bbe8292ed1b69e0f95e5bdaa035569a295fd7" translate="yes" xml:space="preserve">
          <source>Reader</source>
          <target state="translated">Reader</target>
        </trans-unit>
        <trans-unit id="ced066586ffa5e6e3755df96e31fa99c0d9b6847" translate="yes" xml:space="preserve">
          <source>Reading / writing for xlsx files</source>
          <target state="translated">xlsx 파일 읽기 / 쓰기</target>
        </trans-unit>
        <trans-unit id="b77d375d8f06f2725ea575c0e667f32448f74591" translate="yes" xml:space="preserve">
          <source>Reading CSV with Unix timestamps and converting to local timezone</source>
          <target state="translated">Unix 타임 스탬프가있는 CSV 읽기 및 현지 시간대로 변환</target>
        </trans-unit>
        <trans-unit id="422ad2bcebcc6494343d6c4949e5cacf972eec34" translate="yes" xml:space="preserve">
          <source>Reading Excel files</source>
          <target state="translated">Excel 파일 읽기</target>
        </trans-unit>
        <trans-unit id="5b4cac085275d906139a8bfc3f11b56aa9468d61" translate="yes" xml:space="preserve">
          <source>Reading HTML content</source>
          <target state="translated">HTML 콘텐츠 읽기</target>
        </trans-unit>
        <trans-unit id="197e4e272054321d12da9f202bed12533a4a914c" translate="yes" xml:space="preserve">
          <source>Reading HTML tables from a server that cannot handle the default request header</source>
          <target state="translated">기본 요청 헤더를 처리 할 수없는 서버에서 HTML 테이블 읽기</target>
        </trans-unit>
        <trans-unit id="3e6d749d5a32ba08a9b42de8e9c0dec9c7063b66" translate="yes" xml:space="preserve">
          <source>Reading JSON</source>
          <target state="translated">JSON 읽기</target>
        </trans-unit>
        <trans-unit id="40795507b3c0a6ac5e815c791ba8b840aa8490f2" translate="yes" xml:space="preserve">
          <source>Reading a &lt;code&gt;MultiIndex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MultiIndex&lt;/code&gt; 읽기</target>
        </trans-unit>
        <trans-unit id="1cc15e446624a3729cc956481adec15c28bccde6" translate="yes" xml:space="preserve">
          <source>Reading a JSON string to pandas object can take a number of parameters. The parser will try to parse a &lt;code&gt;DataFrame&lt;/code&gt; if &lt;code&gt;typ&lt;/code&gt; is not supplied or is &lt;code&gt;None&lt;/code&gt;. To explicitly force &lt;code&gt;Series&lt;/code&gt; parsing, pass &lt;code&gt;typ=series&lt;/code&gt;</source>
          <target state="translated">pandas 객체로 JSON 문자열을 읽으면 여러 매개 변수를 사용할 수 있습니다. 파서는 &lt;code&gt;typ&lt;/code&gt; 가 제공되지 않거나 &lt;code&gt;None&lt;/code&gt; 인 경우 &lt;code&gt;DataFrame&lt;/code&gt; 구문 분석을 시도합니다 . &lt;code&gt;Series&lt;/code&gt; 구문 분석 을 명시 적으로 강제하려면 &lt;code&gt;typ=series&lt;/code&gt; 를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="a9654dfb5004bc31f64643cbf3bc47f9d79dfeb5" translate="yes" xml:space="preserve">
          <source>Reading a MultiIndex</source>
          <target state="translated">MultiIndex 읽기</target>
        </trans-unit>
        <trans-unit id="60d2541ef130e14be2ac995f098e8cd6721444c6" translate="yes" xml:space="preserve">
          <source>Reading a csv chunk-by-chunk</source>
          <target state="translated">csv 청크 단위 읽기</target>
        </trans-unit>
        <trans-unit id="89f61e31a7fcbd4ca7cfaea8ee14f78a2c85feca" translate="yes" xml:space="preserve">
          <source>Reading a file that is compressed but not by &lt;code&gt;gzip/bz2&lt;/code&gt; (the native compressed formats which &lt;code&gt;read_csv&lt;/code&gt; understands). This example shows a &lt;code&gt;WinZipped&lt;/code&gt; file, but is a general application of opening the file within a context manager and using that handle to read. &lt;a href=&quot;https://stackoverflow.com/questions/17789907/pandas-convert-winzipped-csv-file-to-data-frame&quot;&gt;See here&lt;/a&gt;</source>
          <target state="translated">압축되었지만 &lt;code&gt;gzip/bz2&lt;/code&gt; ( &lt;code&gt;read_csv&lt;/code&gt; 가 이해 하는 기본 압축 형식)가 아닌 파일 읽기 . 이 예제는 &lt;code&gt;WinZipped&lt;/code&gt; 파일을 보여 주지만 컨텍스트 관리자 내에서 파일을 열고 해당 핸들을 사용하여 읽는 일반적인 응용 프로그램입니다. &lt;a href=&quot;https://stackoverflow.com/questions/17789907/pandas-convert-winzipped-csv-file-to-data-frame&quot;&gt;여기를 봐&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83e72028a12afcacf2d5a67264b11d94ca3267ae" translate="yes" xml:space="preserve">
          <source>Reading an index with a &lt;code&gt;MultiIndex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MultiIndex&lt;/code&gt; 로 인덱스 읽기</target>
        </trans-unit>
        <trans-unit id="c48bbbedc33f2811d00e524c07a328ef28df12b4" translate="yes" xml:space="preserve">
          <source>Reading an index with a MultiIndex</source>
          <target state="translated">MultiIndex로 인덱스 읽기</target>
        </trans-unit>
        <trans-unit id="d1ca8a5cb8f44272b3409667f0859611de19f0b8" translate="yes" xml:space="preserve">
          <source>Reading and writing to &lt;a href=&quot;io#io-excel&quot;&gt;MS Excel&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;io#io-excel&quot;&gt;MS Excel&lt;/a&gt; 읽기 및 쓰기 .</target>
        </trans-unit>
        <trans-unit id="4994d9b2324cb1ffbf76bfca3bb9a80126487e90" translate="yes" xml:space="preserve">
          <source>Reading and writing to &lt;a href=&quot;io#io-hdf5&quot;&gt;HDFStores&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;io#io-hdf5&quot;&gt;HDFStores&lt;/a&gt; 읽기 및 쓰기 .</target>
        </trans-unit>
        <trans-unit id="3914dfb8305d9d156fa6f540a568964cbaac237d" translate="yes" xml:space="preserve">
          <source>Reading columns with a &lt;code&gt;MultiIndex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MultiIndex&lt;/code&gt; 로 열 읽기</target>
        </trans-unit>
        <trans-unit id="5586b9519eed1cdb7fd5a09b9786a141b16799bf" translate="yes" xml:space="preserve">
          <source>Reading columns with a MultiIndex</source>
          <target state="translated">MultiIndex로 열 읽기</target>
        </trans-unit>
        <trans-unit id="2e2600353af1869d9e164a82e8a681c58b33fd56" translate="yes" xml:space="preserve">
          <source>Reading external data</source>
          <target state="translated">외부 데이터 읽기</target>
        </trans-unit>
        <trans-unit id="23f25379e9755e053c70ecc8dc2443111b6fbe73" translate="yes" xml:space="preserve">
          <source>Reading from HDF file:</source>
          <target state="translated">HDF 파일에서 읽기 :</target>
        </trans-unit>
        <trans-unit id="0cf97fa7c0f1cc295d488869538708193e537e4c" translate="yes" xml:space="preserve">
          <source>Reading from Stata format</source>
          <target state="translated">Stata 형식에서 읽기</target>
        </trans-unit>
        <trans-unit id="ce8682dd1f5bfab835014db0733766614cc86e32" translate="yes" xml:space="preserve">
          <source>Reading from a HDF5 Store.</source>
          <target state="translated">HDF5 스토어에서 읽기.</target>
        </trans-unit>
        <trans-unit id="4c7bc87c0e5960961bdae2d45fec4e613a8cb783" translate="yes" xml:space="preserve">
          <source>Reading from a JSON string:</source>
          <target state="translated">JSON 문자열에서 읽기 :</target>
        </trans-unit>
        <trans-unit id="4404344eb740636b33b838946b2e165e725c7cf5" translate="yes" xml:space="preserve">
          <source>Reading from a csv file.</source>
          <target state="translated">csv 파일에서 읽기.</target>
        </trans-unit>
        <trans-unit id="95bcf633adbf815edf186e3fb8ac37d67ee56f62" translate="yes" xml:space="preserve">
          <source>Reading from a file:</source>
          <target state="translated">파일에서 읽기 :</target>
        </trans-unit>
        <trans-unit id="a26a9f38a0d9b7141f151c904c1edf0397cd8b22" translate="yes" xml:space="preserve">
          <source>Reading from a filelike handle</source>
          <target state="translated">파일 류 핸들에서 읽기</target>
        </trans-unit>
        <trans-unit id="07d62f8c6f343a4704ff1fa1e59ee99a520c5027" translate="yes" xml:space="preserve">
          <source>Reading from an excel file.</source>
          <target state="translated">Excel 파일에서 읽기.</target>
        </trans-unit>
        <trans-unit id="5abfaaa0ca9735eba40580c3bc86609126d1fe3b" translate="yes" xml:space="preserve">
          <source>Reading from and writing to different schema&amp;rsquo;s is supported through the &lt;code&gt;schema&lt;/code&gt; keyword in the &lt;a href=&quot;../reference/api/pandas.read_sql_table#pandas.read_sql_table&quot;&gt;&lt;code&gt;read_sql_table()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.to_sql#pandas.DataFrame.to_sql&quot;&gt;&lt;code&gt;to_sql()&lt;/code&gt;&lt;/a&gt; functions. Note however that this depends on the database flavor (sqlite does not have schema&amp;rsquo;s). For example:</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.read_sql_table#pandas.read_sql_table&quot;&gt; &lt;code&gt;read_sql_table()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../reference/api/pandas.dataframe.to_sql#pandas.DataFrame.to_sql&quot;&gt; &lt;code&gt;to_sql()&lt;/code&gt; &lt;/a&gt; 함수 의 &lt;code&gt;schema&lt;/code&gt; 키워드를 통해 다른 스키마에 대한 읽기 및 쓰기가 지원됩니다 . 그러나 이것은 데이터베이스 특성에 따라 다릅니다 (sqlite에는 스키마가 없음). 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="0191a10d0e6824acb83c4bea24d22f8a95315bb8" translate="yes" xml:space="preserve">
          <source>Reading from databases with SQL</source>
          <target state="translated">SQL로 데이터베이스에서 읽기</target>
        </trans-unit>
        <trans-unit id="0936d29a1eda81e9bea985a4f2cfd116de4674b5" translate="yes" xml:space="preserve">
          <source>Reading in a sequence of files, then providing a global unique index to a store while appending</source>
          <target state="translated">일련의 파일을 읽은 다음 추가하는 동안 저장소에 전역 고유 인덱스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f528c2ce9a88ea635c7cd4c054c0d313c70e0638" translate="yes" xml:space="preserve">
          <source>Reading multiple files to create a single DataFrame</source>
          <target state="translated">단일 DataFrame을 만들기 위해 여러 파일 읽기</target>
        </trans-unit>
        <trans-unit id="51ebfb5cc205baca87d764036d6bd7d037855b21" translate="yes" xml:space="preserve">
          <source>Reading only certain rows of a csv chunk-by-chunk</source>
          <target state="translated">csv chunk-by-chunk의 특정 행만 읽기</target>
        </trans-unit>
        <trans-unit id="8852f92da062ce879b041fd988d96f596bdc8d54" translate="yes" xml:space="preserve">
          <source>Reading tables</source>
          <target state="translated">테이블 읽기</target>
        </trans-unit>
        <trans-unit id="6fb1b99dc601cefe75e2bdad90f1e1b1959bcd27" translate="yes" xml:space="preserve">
          <source>Reading the first few lines of a frame</source>
          <target state="translated">프레임의 처음 몇 줄 읽기</target>
        </trans-unit>
        <trans-unit id="7ee490dbeb0ba8aec172aadc90ac668b97bbf9ab" translate="yes" xml:space="preserve">
          <source>Reading/writing remote files</source>
          <target state="translated">원격 파일 읽기 / 쓰기</target>
        </trans-unit>
        <trans-unit id="88799634c11e6cc80231fb917747811050606d1d" translate="yes" xml:space="preserve">
          <source>Rearrange index levels using input order.</source>
          <target state="translated">입력 순서를 사용하여 색인 레벨을 재 배열하십시오.</target>
        </trans-unit>
        <trans-unit id="7ae9af31ae0d0b9d85dc0d21d4f0148e272d0afd" translate="yes" xml:space="preserve">
          <source>Rearrange index levels using input order. May not drop or duplicate levels.</source>
          <target state="translated">입력 순서를 사용하여 색인 레벨을 재 배열하십시오. 레벨을 삭제하거나 복제 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d771fbda00418350a1e124cee5eb404ada9954a5" translate="yes" xml:space="preserve">
          <source>Rearrange levels using input order.</source>
          <target state="translated">입력 순서를 사용하여 레벨을 재 배열합니다.</target>
        </trans-unit>
        <trans-unit id="a257a2cfb259ef4a6e7071b0dff8e77b5d23210c" translate="yes" xml:space="preserve">
          <source>Rearrange levels using input order. May not drop or duplicate levels</source>
          <target state="translated">입력 순서를 사용하여 레벨을 재 배열합니다. 레벨을 삭제하거나 복제 할 수 없음</target>
        </trans-unit>
        <trans-unit id="fce0eaf35902fee59c46702dd838305bdc328eea" translate="yes" xml:space="preserve">
          <source>Rearrange levels using input order. May not drop or duplicate levels.</source>
          <target state="translated">입력 순서를 사용하여 레벨을 다시 정렬합니다. 레벨을 떨어 뜨리거나 복제 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7a6030b00e9cfe45e446949b1cfa0858c3f076c4" translate="yes" xml:space="preserve">
          <source>Recommended alternative to this method.</source>
          <target state="translated">이 방법의 권장 대안입니다.</target>
        </trans-unit>
        <trans-unit id="da2b55c44410c5fecbbff6de2b22b9f6bbd2ec5b" translate="yes" xml:space="preserve">
          <source>Recommended dependencies</source>
          <target state="translated">권장되는 종속성</target>
        </trans-unit>
        <trans-unit id="075d10a4fd1e6ff913b7082591e459176a7109e3" translate="yes" xml:space="preserve">
          <source>Reconstruct an ExtensionArray after factorization.</source>
          <target state="translated">인수 분해 후 ExtensionArray를 재구성하십시오.</target>
        </trans-unit>
        <trans-unit id="6763c1d40ece2f5c5512c05c26745de945a146fa" translate="yes" xml:space="preserve">
          <source>Reconstructing the level labels</source>
          <target state="translated">레벨 레이블 재구성</target>
        </trans-unit>
        <trans-unit id="e2a2b49707a20955992a96f62fe7fb4096d753ea" translate="yes" xml:space="preserve">
          <source>Reduce the dimensionality of the return type if possible, otherwise return a consistent type.</source>
          <target state="translated">가능하면 리턴 유형의 차원을 줄이십시오. 그렇지 않으면 일관된 유형을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="97e6433c5b1cb63e0c228d3d31284ceeb2186ec4" translate="yes" xml:space="preserve">
          <source>Reducing sum for DataFrame.</source>
          <target state="translated">DataFrame의 합계를 줄입니다.</target>
        </trans-unit>
        <trans-unit id="a0e877e4c8f65be9f1e4b983817e240bf812d03a" translate="yes" xml:space="preserve">
          <source>Reducing sum for Series.</source>
          <target state="translated">시리즈의 합계를 줄입니다.</target>
        </trans-unit>
        <trans-unit id="e7d9fd3cc387e23f29d6813b1fd8debce7e7d7c4" translate="yes" xml:space="preserve">
          <source>Reduction and groupby operations such as &amp;lsquo;sum&amp;rsquo; work as well.</source>
          <target state="translated">'합'과 같은 축소 및 그룹 별 작업도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a704f701b997fe432181eccf219a26332e3b89a8" translate="yes" xml:space="preserve">
          <source>Reduction in the dimensions of the returned object:</source>
          <target state="translated">반환 된 객체의 크기 감소 :</target>
        </trans-unit>
        <trans-unit id="13f317d001ccc49980481cff37ee7c58036a4586" translate="yes" xml:space="preserve">
          <source>Reductions</source>
          <target state="translated">Reductions</target>
        </trans-unit>
        <trans-unit id="ef3880fe64248c4ed3e7a2d1a208b8f642604497" translate="yes" xml:space="preserve">
          <source>Redundant for application on Series, but &amp;lsquo;index&amp;rsquo; can be used instead of &amp;lsquo;labels&amp;rsquo;.</source>
          <target state="translated">시리즈 애플리케이션을 위해 중복되지만 '라벨'대신 '인덱스'를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e8c89c3fca571706d72d64106b38fc7b6c31865" translate="yes" xml:space="preserve">
          <source>Redundant for application on Series, but index can be used instead of labels.</source>
          <target state="translated">Series에 적용하기 위해 중복되지만 레이블 대신 인덱스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1be60d14060649a1bf386e770d6698f25d23ef6" translate="yes" xml:space="preserve">
          <source>Redundant for application on Series.</source>
          <target state="translated">Series에 적용하기 위해 중복됩니다.</target>
        </trans-unit>
        <trans-unit id="99368ae22f642244ec0b0201bb120bd8c7435060" translate="yes" xml:space="preserve">
          <source>Reference SciPy method.</source>
          <target state="translated">참고 SciPy 방법.</target>
        </trans-unit>
        <trans-unit id="72f5dbbd7a62c435fbcef2c3de320818698cb1a6" translate="yes" xml:space="preserve">
          <source>Reference level by number or key.</source>
          <target state="translated">번호 또는 키로 참조 레벨.</target>
        </trans-unit>
        <trans-unit id="42db387425b360d03dbe85e4a7139c4ae0dfc5d3" translate="yes" xml:space="preserve">
          <source>Reference to the underlying data.</source>
          <target state="translated">기본 데이터를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="66dff7f741f24237c60e057348dcf2e76f5d5ef7" translate="yes" xml:space="preserve">
          <source>Reflect the DataFrame over its main diagonal by writing rows as columns and vice-versa. The property &lt;a href=&quot;#pandas.DataFrame.T&quot;&gt;&lt;code&gt;T&lt;/code&gt;&lt;/a&gt; is an accessor to the method &lt;a href=&quot;pandas.dataframe.transpose#pandas.DataFrame.transpose&quot;&gt;&lt;code&gt;transpose()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">행을 열로 쓰거나 그 반대로 행을 작성하여 주 대각선 위에 DataFrame을 반영하십시오. 속성 &lt;a href=&quot;#pandas.DataFrame.T&quot;&gt; &lt;code&gt;T&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;pandas.dataframe.transpose#pandas.DataFrame.transpose&quot;&gt; &lt;code&gt;transpose()&lt;/code&gt; &lt;/a&gt; 메서드에 대한 접근 자 입니다.</target>
        </trans-unit>
        <trans-unit id="09c72e76ba1aef1b6c2c79a779d3157eeb466047" translate="yes" xml:space="preserve">
          <source>Reflect the DataFrame over its main diagonal by writing rows as columns and vice-versa. The property &lt;a href=&quot;pandas.dataframe.t#pandas.DataFrame.T&quot;&gt;&lt;code&gt;T&lt;/code&gt;&lt;/a&gt; is an accessor to the method &lt;a href=&quot;#pandas.DataFrame.transpose&quot;&gt;&lt;code&gt;transpose()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">행을 열로 쓰거나 그 반대로 행을 작성하여 주 대각선 위에 DataFrame을 반영하십시오. 속성 &lt;a href=&quot;pandas.dataframe.t#pandas.DataFrame.T&quot;&gt; &lt;code&gt;T&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;#pandas.DataFrame.transpose&quot;&gt; &lt;code&gt;transpose()&lt;/code&gt; &lt;/a&gt; 메서드에 대한 접근 자 입니다.</target>
        </trans-unit>
        <trans-unit id="12296b9c250f14f69b9b8bf4f7490e6e1806eb33" translate="yes" xml:space="preserve">
          <source>Regaining original data</source>
          <target state="translated">원본 데이터 복구</target>
        </trans-unit>
        <trans-unit id="a11e781c0d9d7a7803de99bc4c3b1ca5fd1bec00" translate="yes" xml:space="preserve">
          <source>Regardless of the approach, you may want to set &lt;code&gt;__array_priority__&lt;/code&gt; if you want your implementation to be called when involved in binary operations with NumPy arrays.</source>
          <target state="translated">접근 방식에 관계없이 NumPy 배열의 이진 연산에 관여 할 때 구현을 호출하려는 경우 &lt;code&gt;__array_priority__&lt;/code&gt; 를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c37985cec57652878c93b1dd61433cd399a01232" translate="yes" xml:space="preserve">
          <source>Regex module flags, e.g. re.IGNORECASE.</source>
          <target state="translated">정규식 모듈 플래그, 예 : re.IGNORECASE.</target>
        </trans-unit>
        <trans-unit id="439b5338a5b0391bca64091517110ef912945abb" translate="yes" xml:space="preserve">
          <source>Regex module flags, e.g. re.IGNORECASE. Cannot be set if</source>
          <target state="translated">정규식 모듈 플래그, 예 : re.IGNORECASE. 다음과 같은 경우 설정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7c89b667ae8f5540eb59063d251987d9019653a4" translate="yes" xml:space="preserve">
          <source>Regex substitution is performed under the hood with &lt;code&gt;re.sub&lt;/code&gt;. The rules for substitution for &lt;code&gt;re.sub&lt;/code&gt; are the same.</source>
          <target state="translated">정규 표현식 대체는 &lt;code&gt;re.sub&lt;/code&gt; 로 후드 아래에서 수행됩니다 . &lt;code&gt;re.sub&lt;/code&gt; 의 대체 규칙 은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0f422bc5d5a46beb099fb2cd85c27df91c2e5388" translate="yes" xml:space="preserve">
          <source>Regexp pattern. All matching keys will have their description displayed.</source>
          <target state="translated">정규식 패턴. 일치하는 모든 키에 대한 설명이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7a8f2c20a670dc03296da4f342def35171ef782e" translate="yes" xml:space="preserve">
          <source>Regexp which should match a single option. Note: partial matches are supported for convenience, but unless you use the full option name (e.g. x.y.z.option_name), your code may break in future versions if new options with similar names are introduced.</source>
          <target state="translated">단일 옵션과 일치해야하는 정규식. 참고 : 편의상 부분 일치가 지원되지만 전체 옵션 이름 (egxyzoption_name)을 사용하지 않으면 유사한 이름의 새 옵션이 도입되면 이후 버전에서 코드가 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5958a87aef60a22e14e465fff150d1a1c3e87a80" translate="yes" xml:space="preserve">
          <source>Register Pandas Formatters and Converters with matplotlib</source>
          <target state="translated">matplotlib를 사용하여 Pandas Formatter 및 변환기 등록</target>
        </trans-unit>
        <trans-unit id="e8c899d326ad81fe59d971423b07d877c67df91e" translate="yes" xml:space="preserve">
          <source>Register a custom accessor on DataFrame objects.</source>
          <target state="translated">DataFrame 개체에 사용자 지정 접근자를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="1e5efa6de43520e33baf26878e68b63b18c8b241" translate="yes" xml:space="preserve">
          <source>Register a custom accessor on Index objects.</source>
          <target state="translated">인덱스 개체에 사용자 지정 접근자를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="949260ff8148d4a5cdff71f23d37ef9990bf2548" translate="yes" xml:space="preserve">
          <source>Register a custom accessor on Series objects.</source>
          <target state="translated">Series 객체에 커스텀 접근자를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="30b30433313ed868171f64e7f540858be480a209" translate="yes" xml:space="preserve">
          <source>Register an ExtensionType with pandas as class decorator.</source>
          <target state="translated">클래스 데코레이터로 pandas를 사용하여 ExtensionType을 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="1002aa5e504d64fce54b15d2cb675b35330ccacc" translate="yes" xml:space="preserve">
          <source>Register custom converters with matplotlib. Set to False to de-register.</source>
          <target state="translated">matplotlib에 사용자 지정 변환기를 등록합니다. 등록을 취소하려면 False로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="63bf9de6ff55199cac4467a7bd9d2dd6111be78c" translate="yes" xml:space="preserve">
          <source>Register pandas formatters and converters with matplotlib.</source>
          <target state="translated">pandas 포맷터 및 변환기를 matplotlib에 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="38e891a4a9c712572dd9ae1e2b8ccc07a08ddc1d" translate="yes" xml:space="preserve">
          <source>Registering custom accessors</source>
          <target state="translated">맞춤 접근 자 등록</target>
        </trans-unit>
        <trans-unit id="92e33cc2e95b8291a84a027af0e1d6e155c8dc1e" translate="yes" xml:space="preserve">
          <source>Regroup columns of a DataFrame according to their sum, and sum the aggregated ones.</source>
          <target state="translated">합계에 따라 DataFrame의 열을 다시 그룹화하고 집계 된 열을 합산합니다.</target>
        </trans-unit>
        <trans-unit id="773df9523c5e5c4d3653870f6f668a082c966750" translate="yes" xml:space="preserve">
          <source>Regrouping by factor</source>
          <target state="translated">요인별로 재 그룹화</target>
        </trans-unit>
        <trans-unit id="4cfc56d37856960e030a57dc2560048bc4ca6a1b" translate="yes" xml:space="preserve">
          <source>Regular expression pattern with capturing groups.</source>
          <target state="translated">캡처 그룹이있는 정규식 패턴.</target>
        </trans-unit>
        <trans-unit id="cbe7177e5d75ec8c91df1c8be22d234143131f04" translate="yes" xml:space="preserve">
          <source>Regular expressions are supported too. For instance, the search for all the strings ending with the word &amp;lsquo;on&amp;rsquo; is shown next:</source>
          <target state="translated">정규식도 지원됩니다. 예를 들어, 단어 'on'으로 끝나는 모든 문자열에 대한 검색이 다음에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="33a1f9b57a7689d50c5043df8cef83e79b87d02b" translate="yes" xml:space="preserve">
          <source>Regular expressions will only substitute on strings, meaning you cannot provide, for example, a regular expression matching floating point numbers and expect the columns in your frame that have a numeric dtype to be matched. However, if those floating point numbers &lt;em&gt;are&lt;/em&gt; strings, then you can do this.</source>
          <target state="translated">정규 표현식은 문자열 만 대체합니다. 예를 들어 부동 소수점 숫자와 일치하는 정규 표현식을 제공 할 수없고 숫자 dtype이있는 프레임의 열이 일치 할 것으로 예상 할 수 없습니다. 그러나 부동 소수점 숫자 &lt;em&gt;가&lt;/em&gt; 문자열 인 경우이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de17f4938c654025cd666f84a52464e68e29b197" translate="yes" xml:space="preserve">
          <source>Regular intervals of time are represented by &lt;code&gt;Period&lt;/code&gt; objects in pandas while sequences of &lt;code&gt;Period&lt;/code&gt; objects are collected in a &lt;code&gt;PeriodIndex&lt;/code&gt;, which can be created with the convenience function &lt;code&gt;period_range&lt;/code&gt;.</source>
          <target state="translated">시간은 일정 간격으로 표시되는 &lt;code&gt;Period&lt;/code&gt; 시퀀스 동안 팬더의 개체 &lt;code&gt;Period&lt;/code&gt; 물체가 수집되어 &lt;code&gt;PeriodIndex&lt;/code&gt; 편리 함수로 생성 될 수 &lt;code&gt;period_range&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="838c7b2282545f935cfcf2eebf8d072cb4f77eff" translate="yes" xml:space="preserve">
          <source>Regular sequences of &lt;code&gt;Period&lt;/code&gt; objects can be collected in a &lt;code&gt;PeriodIndex&lt;/code&gt;, which can be constructed using the &lt;code&gt;period_range&lt;/code&gt; convenience function:</source>
          <target state="translated">&lt;code&gt;period_range&lt;/code&gt; 편의 함수를 사용하여 생성 할 수 있는 &lt;code&gt;PeriodIndex&lt;/code&gt; 에서 정기적 인 &lt;code&gt;Period&lt;/code&gt; 객체 시퀀스를 수집 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9790b276ed46e99cd466bc5606026a5caeffe125" translate="yes" xml:space="preserve">
          <source>Regular table captions can be added in a few ways.</source>
          <target state="translated">규칙적인 테이블 캡션을 몇 가지 방법으로 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3b471ef58562799abe647d1b7a2d3d0e2cfd98d" translate="yes" xml:space="preserve">
          <source>Regularization functions like &lt;code&gt;snap&lt;/code&gt; and very fast &lt;code&gt;asof&lt;/code&gt; logic.</source>
          <target state="translated">정규화 기능과 같은 &lt;code&gt;snap&lt;/code&gt; 및 매우 빠른 &lt;code&gt;asof&lt;/code&gt; 논리.</target>
        </trans-unit>
        <trans-unit id="ebbfe830498612e885adf102a45a389e7bbaec6e" translate="yes" xml:space="preserve">
          <source>Reindexing</source>
          <target state="translated">Reindexing</target>
        </trans-unit>
        <trans-unit id="630a2cb4f37c36d9f153d4971d4c9d94a6576325" translate="yes" xml:space="preserve">
          <source>Reindexing / selection / label manipulation</source>
          <target state="translated">색인 생성 / 선택 / 라벨 조작</target>
        </trans-unit>
        <trans-unit id="42a298cf0528835370ebc891089b867727e58884" translate="yes" xml:space="preserve">
          <source>Reindexing allows you to change/add/delete the index on a specified axis. This returns a copy of the data.</source>
          <target state="translated">재 인덱싱을 사용하면 지정된 축에서 인덱스를 변경 / 추가 / 삭제할 수 있습니다. 이것은 데이터의 복사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e521d0b782352a92f77767944b6dcf7f44f7339" translate="yes" xml:space="preserve">
          <source>Reindexing and altering labels</source>
          <target state="translated">라벨 재색 인 및 변경</target>
        </trans-unit>
        <trans-unit id="fada08c043bacc07de8a68ccc39574d2e97bc789" translate="yes" xml:space="preserve">
          <source>Reindexing methods</source>
          <target state="translated">재색 인화 방법</target>
        </trans-unit>
        <trans-unit id="d59ac70f6e3b77f846c9b98ac5841ef91b04aedc" translate="yes" xml:space="preserve">
          <source>Reindexing operations will return a resulting index based on the type of the passed indexer. Passing a list will return a plain-old &lt;code&gt;Index&lt;/code&gt;; indexing with a &lt;code&gt;Categorical&lt;/code&gt; will return a &lt;code&gt;CategoricalIndex&lt;/code&gt;, indexed according to the categories of the &lt;strong&gt;passed&lt;/strong&gt;&lt;code&gt;Categorical&lt;/code&gt; dtype. This allows one to arbitrarily index these even with values &lt;strong&gt;not&lt;/strong&gt; in the categories, similarly to how you can reindex &lt;strong&gt;any&lt;/strong&gt; pandas index.</source>
          <target state="translated">재 인덱싱 작업은 전달 된 인덱서의 유형에 따라 결과 인덱스를 반환합니다. 목록을 전달하면 평범한 &lt;code&gt;Index&lt;/code&gt; 가 반환됩니다 . 인덱스 A의 &lt;code&gt;Categorical&lt;/code&gt; 반환하며 &lt;code&gt;CategoricalIndex&lt;/code&gt; 의 카테고리에 따라 색인을 &lt;strong&gt;전달 &lt;/strong&gt; &lt;code&gt;Categorical&lt;/code&gt; DTYPE한다. 이것은 이들도 값으로 임의의 인덱스에 1을 허용 &lt;strong&gt;하지&lt;/strong&gt; 다시 색인 할 수있는 방법과 유사하게, 범주에서 &lt;strong&gt;어떤&lt;/strong&gt; 팬더 인덱스를.</target>
        </trans-unit>
        <trans-unit id="0a3ec588108fce00a7654697a168e8eddf54a384" translate="yes" xml:space="preserve">
          <source>Reindexing to align with another object</source>
          <target state="translated">다른 개체에 맞게 다시 인덱싱</target>
        </trans-unit>
        <trans-unit id="90b13960201ea49bd6f583ae27456a5e299584ca" translate="yes" xml:space="preserve">
          <source>Related method on Index, indicating duplicate Index values.</source>
          <target state="translated">중복 인덱스 값을 나타내는 인덱스 관련 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="3612560bb7712c0c0bea28361c37c065099dbb96" translate="yes" xml:space="preserve">
          <source>Related method on Series, indicating duplicate Series values.</source>
          <target state="translated">중복 Series 값을 나타내는 Series 관련 메소드.</target>
        </trans-unit>
        <trans-unit id="8e805499dfc5c9231614fde4ccabb11eec774e5e" translate="yes" xml:space="preserve">
          <source>Related to &lt;code&gt;asfreq&lt;/code&gt; and &lt;code&gt;reindex&lt;/code&gt; is &lt;a href=&quot;../reference/api/pandas.series.fillna#pandas.Series.fillna&quot;&gt;&lt;code&gt;fillna()&lt;/code&gt;&lt;/a&gt;, which is documented in the &lt;a href=&quot;missing_data#missing-data-fillna&quot;&gt;missing data section&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;asfreq&lt;/code&gt; 및 &lt;code&gt;reindex&lt;/code&gt; 와 관련된 것은 &lt;a href=&quot;../reference/api/pandas.series.fillna#pandas.Series.fillna&quot;&gt; &lt;code&gt;fillna()&lt;/code&gt; &lt;/a&gt; 이며 &lt;a href=&quot;missing_data#missing-data-fillna&quot;&gt;누락 된 데이터 섹션에&lt;/a&gt; 문서화되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5186b9f43aa2188212a7db305708c5935abe8782" translate="yes" xml:space="preserve">
          <source>Relative extension of axis range in x and y with respect to (x_max - x_min) or (y_max - y_min).</source>
          <target state="translated">(x_max-x_min) 또는 (y_max-y_min)에 대한 x 및 y 축 범위의 상대적 확장.</target>
        </trans-unit>
        <trans-unit id="28050cafeb20c263deeab5bd57539303af5f3e7b" translate="yes" xml:space="preserve">
          <source>Relative tolerance. Only used when check_exact is False.</source>
          <target state="translated">상대적 공차. check_exact가 False 인 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0ea4af908fe06688dd3fc02035189b08293c5074" translate="yes" xml:space="preserve">
          <source>Release Notes</source>
          <target state="translated">릴리즈 노트</target>
        </trans-unit>
        <trans-unit id="ba6af344c019a5203056d24366f9e4b42cd8ae65" translate="yes" xml:space="preserve">
          <source>Remember that &amp;lsquo;s&amp;rsquo; and &amp;lsquo;e&amp;rsquo; can be used to return the timestamps at the start or end of the period:</source>
          <target state="translated">'s'와 'e'는 기간의 시작 또는 끝에서 타임 스탬프를 반환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4edf83b2839daa388e6385a56b0a62656624cbe1" translate="yes" xml:space="preserve">
          <source>Remember to escape special characters when explicitly using regular expressions.</source>
          <target state="translated">정규식을 명시 적으로 사용할 때는 특수 문자를 피하십시오.</target>
        </trans-unit>
        <trans-unit id="adad1c07015de7d5676aa1606510878c461faa65" translate="yes" xml:space="preserve">
          <source>Remove categories which are not used.</source>
          <target state="translated">사용되지 않는 카테고리를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a77620e45f3cf2985a0539a10b21596f30c58ce7" translate="yes" xml:space="preserve">
          <source>Remove duplicate values from DataFrame.</source>
          <target state="translated">DataFrame에서 중복 값을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="28040be798e2e8951a8b146a96a34dc7c4e3ac3f" translate="yes" xml:space="preserve">
          <source>Remove duplicate values from Index.</source>
          <target state="translated">인덱스에서 중복 값을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="5b53f83f1b6ca4f007b8e7e9ea81f06cb7228868" translate="yes" xml:space="preserve">
          <source>Remove duplicate values from Series.</source>
          <target state="translated">시리즈에서 중복 값을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="1d6f6109c8466bf9b843ec562de7fe0f2550bf21" translate="yes" xml:space="preserve">
          <source>Remove elements of a Series based on specifying the index labels. When using a multi-index, labels on different levels can be removed by specifying the level.</source>
          <target state="translated">인덱스 레이블을 지정하여 시리즈의 요소를 제거하십시오. 다중 색인을 사용하는 경우 수준을 지정하여 다른 수준의 레이블을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88dadc9d2b2de911641b2529baf08e627e7aea87" translate="yes" xml:space="preserve">
          <source>Remove leading and trailing characters in Series/Index.</source>
          <target state="translated">시리즈 / 인덱스에서 선행 및 후행 문자를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="6df9d13ec884393615fbb11efdff4de45c699214" translate="yes" xml:space="preserve">
          <source>Remove leading and trailing characters.</source>
          <target state="translated">선행 및 후행 문자를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="86c4f1ac4ed447f136db561b34368e8524c69c8e" translate="yes" xml:space="preserve">
          <source>Remove leading characters in Series/Index.</source>
          <target state="translated">시리즈 / 인덱스에서 선행 문자를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="08c0372dfb7a61e30e4f8f5d5df8c5f072e9cd5d" translate="yes" xml:space="preserve">
          <source>Remove leading characters.</source>
          <target state="translated">선행 문자를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="070d218a074043fb2a67abae589e8edd54373005" translate="yes" xml:space="preserve">
          <source>Remove missing values.</source>
          <target state="translated">결 측값을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="482a2712e3e954b7c81c59601dd638238824d0d8" translate="yes" xml:space="preserve">
          <source>Remove pandas formatters and converters.</source>
          <target state="translated">Pandas 포맷터 및 변환기를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="0a2c03444bbb20749f0e173e5eec1ca0b07fded6" translate="yes" xml:space="preserve">
          <source>Remove pandas&amp;rsquo; formatters and converters</source>
          <target state="translated">팬더의 포맷터 및 변환기 제거</target>
        </trans-unit>
        <trans-unit id="6b56531de6b340d4d14dc2b038174e544db4d585" translate="yes" xml:space="preserve">
          <source>Remove row labels or move them to new columns.</source>
          <target state="translated">행 레이블을 제거하거나 새 열로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="88178a50705104b0b2836d14a648e4189abcd273" translate="yes" xml:space="preserve">
          <source>Remove rows or columns by specifying label names and corresponding axis, or by specifying directly index or column names. When using a multi-index, labels on different levels can be removed by specifying the level.</source>
          <target state="translated">레이블 이름과 해당 축을 지정하거나 직접 색인 또는 열 이름을 지정하여 행이나 열을 제거하십시오. 다중 색인을 사용하는 경우 수준을 지정하여 다른 수준의 레이블을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01d78245b9248ea3a523242847f695d4ba459b99" translate="yes" xml:space="preserve">
          <source>Remove the specified categories.</source>
          <target state="translated">지정된 카테고리를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="7eaa003816b8b66d373f425363040f4c7a2fdf26" translate="yes" xml:space="preserve">
          <source>Remove trailing characters in Series/Index.</source>
          <target state="translated">시리즈 / 인덱스에서 후행 문자를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="740932613472d760d232777293427da2c62c875a" translate="yes" xml:space="preserve">
          <source>Remove trailing characters.</source>
          <target state="translated">후행 문자를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="62b22e9a92752b8cc6f1ee92cb90839f678494f9" translate="yes" xml:space="preserve">
          <source>Removes all case distinctions in the string.</source>
          <target state="translated">문자열에서 대소 문자 구분을 모두 제거합니다.</target>
        </trans-unit>
        <trans-unit id="2a77a842e7b98f8d5af028c3060d4688205f45d0" translate="yes" xml:space="preserve">
          <source>Removes the custom converters added by &lt;code&gt;register()&lt;/code&gt;. This attempts to set the state of the registry back to the state before pandas registered its own units. Converters for pandas&amp;rsquo; own types like Timestamp and Period are removed completely. Converters for types pandas overwrites, like &lt;code&gt;datetime.datetime&lt;/code&gt;, are restored to their original value.</source>
          <target state="translated">&lt;code&gt;register()&lt;/code&gt; 로 추가 된 사용자 정의 변환기를 제거합니다 . 이것은 판다가 자신의 유닛을 등록하기 전의 상태로 레지스트리의 상태를 다시 설정하려고 시도합니다. 타임 스탬프 및 기간과 같은 팬더 고유 유형의 변환기는 완전히 제거됩니다. &lt;code&gt;datetime.datetime&lt;/code&gt; 과 같이 팬더 덮어 쓰기 유형의 변환기는 원래 값으로 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="8193cd4b4fd6ad0a3ec4145046b10e4f2ef36390" translate="yes" xml:space="preserve">
          <source>Removing categories</source>
          <target state="translated">카테고리 제거</target>
        </trans-unit>
        <trans-unit id="349d28a418691c3fcc3b752aa3b25ed891f41529" translate="yes" xml:space="preserve">
          <source>Removing categories can be done by using the &lt;code&gt;remove_categories()&lt;/code&gt; method. Values which are removed are replaced by &lt;code&gt;np.nan&lt;/code&gt;.:</source>
          <target state="translated">범주 제거는 &lt;code&gt;remove_categories()&lt;/code&gt; 메서드를 사용하여 수행 할 수 있습니다 . 제거 된 값은 &lt;code&gt;np.nan&lt;/code&gt; 으로 대체됩니다 . :</target>
        </trans-unit>
        <trans-unit id="e3ecbc34d88e607bd856308634ca2efaa680c6d6" translate="yes" xml:space="preserve">
          <source>Removing unused categories</source>
          <target state="translated">사용하지 않는 카테고리 제거</target>
        </trans-unit>
        <trans-unit id="8d16d23fbad945beb27df79802b039cb80893f75" translate="yes" xml:space="preserve">
          <source>Removing unused categories can also be done:</source>
          <target state="translated">사용하지 않는 카테고리를 제거 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f65ebf0469fed5b079d73ba367b8b693caee76e4" translate="yes" xml:space="preserve">
          <source>Rename categories.</source>
          <target state="translated">카테고리 이름을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="1af1070d204c413e85e14e1851d014545fc3ef04" translate="yes" xml:space="preserve">
          <source>Rename columns using a mapping:</source>
          <target state="translated">매핑을 사용하여 열 이름을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="168644ae4efb4752e23331bada410c4434a03bcd" translate="yes" xml:space="preserve">
          <source>Rename index using a mapping:</source>
          <target state="translated">맵핑을 사용하여 색인 이름을 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="9a121056c081711844d7a5e962d02bd800ce30f0" translate="yes" xml:space="preserve">
          <source>Rename the categories to more meaningful names (assigning to &lt;a href=&quot;../reference/api/pandas.series.cat.categories#pandas.Series.cat.categories&quot;&gt;&lt;code&gt;Series.cat.categories()&lt;/code&gt;&lt;/a&gt; is in place!).</source>
          <target state="translated">범주를보다 의미있는 이름으로 변경합니다 ( &lt;a href=&quot;../reference/api/pandas.series.cat.categories#pandas.Series.cat.categories&quot;&gt; &lt;code&gt;Series.cat.categories()&lt;/code&gt; &lt;/a&gt; 할당 이 제자리에 있습니다!).</target>
        </trans-unit>
        <trans-unit id="199af55fdeb2fbab3136497d47bced542547ea09" translate="yes" xml:space="preserve">
          <source>Renaming / mapping labels</source>
          <target state="translated">레이블 이름 변경 / 매핑</target>
        </trans-unit>
        <trans-unit id="b53888fb9e9b1082baf4795bb3d6677cdeeb3fd4" translate="yes" xml:space="preserve">
          <source>Renaming categories</source>
          <target state="translated">카테고리 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="b2935dad19423ef839e1056d8940b418d1a99980" translate="yes" xml:space="preserve">
          <source>Renaming categories is done by assigning new values to the &lt;code&gt;Series.cat.categories&lt;/code&gt; property or by using the &lt;code&gt;rename_categories()&lt;/code&gt; method:</source>
          <target state="translated">범주 이름 변경은 &lt;code&gt;Series.cat.categories&lt;/code&gt; 속성에 새 값을 할당 하거나 &lt;code&gt;rename_categories()&lt;/code&gt; 메서드를 사용하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc3a7be54f7fc08bc64f685542fb14bf2c8b7638" translate="yes" xml:space="preserve">
          <source>Renaming names of an &lt;code&gt;Index&lt;/code&gt; or &lt;code&gt;MultiIndex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Index&lt;/code&gt; 또는 &lt;code&gt;MultiIndex&lt;/code&gt; 색인 의 이름 변경</target>
        </trans-unit>
        <trans-unit id="8e7342c974967c490b4df58b81745d7eefaf09d3" translate="yes" xml:space="preserve">
          <source>Renaming names of an Index or MultiIndex</source>
          <target state="translated">색인 또는 다중 색인의 이름 변경</target>
        </trans-unit>
        <trans-unit id="83bcf9e8a4db63cd205cd41eebbb1158c44e122f" translate="yes" xml:space="preserve">
          <source>Render a DataFrame as an HTML table.</source>
          <target state="translated">DataFrame을 HTML 테이블로 렌더링하십시오.</target>
        </trans-unit>
        <trans-unit id="2ad3919667a6119eab3aacaa18e8705c60fcac54" translate="yes" xml:space="preserve">
          <source>Render a DataFrame to a console-friendly tabular output.</source>
          <target state="translated">DataFrame을 콘솔 친화적 인 테이블 형식 출력으로 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="6a867ed8ed7fb3eaa3192813afe10a0a29725747" translate="yes" xml:space="preserve">
          <source>Render a string representation of the Index.</source>
          <target state="translated">인덱스의 캐릭터 라인 표현을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="0d6e8969a6706f302ed6637e764a9efe6745a5a0" translate="yes" xml:space="preserve">
          <source>Render a string representation of the Series.</source>
          <target state="translated">Series의 캐릭터 라인 표현을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="5de2dbd2674e4ea71becfaeedb8c28e215e64c9c" translate="yes" xml:space="preserve">
          <source>Render an object to a LaTeX tabular environment table.</source>
          <target state="translated">LaTeX 테이블 환경 테이블에 객체를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="cd2a08a4b518de7ef58f217534e46bea8004331d" translate="yes" xml:space="preserve">
          <source>Render an object to a tabular environment table. You can splice this into a LaTeX document. Requires usepackage{booktabs}.</source>
          <target state="translated">객체를 테이블 환경 테이블로 렌더링합니다. 이것을 LaTeX 문서에 결합 할 수 있습니다. usepackage {booktabs}가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="125d7e3defa7e753492349bfc5cb9140ece024dd" translate="yes" xml:space="preserve">
          <source>Render object to a LaTeX tabular, longtable, or nested table/tabular.</source>
          <target state="translated">LaTeX 테이블 형식, longtable 또는 중첩 테이블 / 테이블 형식으로 개체를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="85c209120b4246893417b8524f4e9747eaad247c" translate="yes" xml:space="preserve">
          <source>Render the built up styles to HTML.</source>
          <target state="translated">빌드 된 스타일을 HTML로 렌더링하십시오.</target>
        </trans-unit>
        <trans-unit id="dceb6fdba092d2aea5d5fe88c764fef28f3a8345" translate="yes" xml:space="preserve">
          <source>Reorder categories as specified in new_categories.</source>
          <target state="translated">new_categories에 지정된대로 범주를 재정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="b15c9fc3b93679486f5cd6009d900f5cb24dc9b4" translate="yes" xml:space="preserve">
          <source>Reorder categories.</source>
          <target state="translated">범주를 다시 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="e2f0cb2e71fb87212d6842f30c5cc7f57da8e396" translate="yes" xml:space="preserve">
          <source>Reorder the categories and simultaneously add the missing categories (methods under &lt;a href=&quot;../reference/api/pandas.series.cat#pandas.Series.cat&quot;&gt;&lt;code&gt;Series.cat()&lt;/code&gt;&lt;/a&gt; return a new &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; by default).</source>
          <target state="translated">범주를 재정렬하고 동시에 누락 된 범주를 추가합니다 ( &lt;a href=&quot;../reference/api/pandas.series.cat#pandas.Series.cat&quot;&gt; &lt;code&gt;Series.cat()&lt;/code&gt; &lt;/a&gt; 아래의 메서드는 기본적으로 새 &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 를 반환 함 ).</target>
        </trans-unit>
        <trans-unit id="9105a6bc02fc7ee3dc42f3dfde8e5bd8673f89c9" translate="yes" xml:space="preserve">
          <source>Reordering</source>
          <target state="translated">Reordering</target>
        </trans-unit>
        <trans-unit id="3bebe0f0ce9a012d0ca7b5f231afeda504a54fb9" translate="yes" xml:space="preserve">
          <source>Reordering levels with &lt;code&gt;reorder_levels&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reorder_levels&lt;/code&gt; 로 레벨 재정렬</target>
        </trans-unit>
        <trans-unit id="9bf222806fa7ec50a5a99fd24338f7cdd8342de9" translate="yes" xml:space="preserve">
          <source>Reordering levels with reorder_levels</source>
          <target state="translated">reorder_levels로 레벨 재정렬</target>
        </trans-unit>
        <trans-unit id="f920c36713c818a5279846954338d2d25bf0e17c" translate="yes" xml:space="preserve">
          <source>Reordering the &lt;code&gt;categories&lt;/code&gt; changes a future sort.</source>
          <target state="translated">재정렬 &lt;code&gt;categories&lt;/code&gt; 미래의 정렬을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="4bbf0b64d8809737d2c814d4beceb670eb3e4ee7" translate="yes" xml:space="preserve">
          <source>Reordering the categories is possible via the &lt;code&gt;Categorical.reorder_categories()&lt;/code&gt; and the &lt;code&gt;Categorical.set_categories()&lt;/code&gt; methods. For &lt;code&gt;Categorical.reorder_categories()&lt;/code&gt;, all old categories must be included in the new categories and no new categories are allowed. This will necessarily make the sort order the same as the categories order.</source>
          <target state="translated">범주 재정렬은 &lt;code&gt;Categorical.reorder_categories()&lt;/code&gt; 및 &lt;code&gt;Categorical.set_categories()&lt;/code&gt; 메서드 를 통해 가능 합니다. 들어 &lt;code&gt;Categorical.reorder_categories()&lt;/code&gt; , 기존의 모든 범주가 새 범주에 포함되어야하며 새로운 카테고리가 허용되지 않습니다. 이렇게하면 정렬 순서가 범주 순서와 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="99239a8992aff695a9ac48e1f71580c251006a45" translate="yes" xml:space="preserve">
          <source>Reorders the existing data to match a new set of labels</source>
          <target state="translated">새 레이블 세트와 일치하도록 기존 데이터의 순서를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="8896b90b62f0039f0f6ea25bb64999eacab52d65" translate="yes" xml:space="preserve">
          <source>Repeat elements of a ExtensionArray.</source>
          <target state="translated">ExtensionArray의 요소를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="9fa22f45e35c62c226b36ef4a2e81d4e09f8e7de" translate="yes" xml:space="preserve">
          <source>Repeat elements of a Index.</source>
          <target state="translated">인덱스의 요소를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="f75e3d48cc141fe78090b219df5f9a1f70f19476" translate="yes" xml:space="preserve">
          <source>Repeat elements of a Series.</source>
          <target state="translated">시리즈의 요소를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="a7cf7b25a703b308887c7f1d100c4326ef20ac46" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">Replace</target>
        </trans-unit>
        <trans-unit id="8e007b02cf7912cedf572fd92a0dd867df8e481f" translate="yes" xml:space="preserve">
          <source>Replace NaN with this value if the unstack produces missing values.</source>
          <target state="translated">스택 해제가 결 측값을 생성하는 경우 NaN을이 값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="8f9b28b0d2978d9679a4efd22473bee6d3a45949" translate="yes" xml:space="preserve">
          <source>Replace a few different values (list -&amp;gt; list):</source>
          <target state="translated">몇 가지 다른 값 (목록-&amp;gt; 목록)을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="328623486cab31ba95f7d69ea7bdf9535758cca2" translate="yes" xml:space="preserve">
          <source>Replace a positional slice of a string with another value.</source>
          <target state="translated">문자열의 위치 슬라이스를 다른 값으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="ff445f28b72c81893447945cc41583b45c53efd4" translate="yes" xml:space="preserve">
          <source>Replace a slice with a string.</source>
          <target state="translated">슬라이스를 문자열로 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="5d8033a10082aba9bc8ab8301cc1f4cafc31c343" translate="yes" xml:space="preserve">
          <source>Replace all NaN elements in column &amp;lsquo;A&amp;rsquo;, &amp;lsquo;B&amp;rsquo;, &amp;lsquo;C&amp;rsquo;, and &amp;lsquo;D&amp;rsquo;, with 0, 1, 2, and 3 respectively.</source>
          <target state="translated">'A', 'B', 'C'및 'D'열의 모든 NaN 요소를 각각 0, 1, 2 및 3으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="0761da621b2e6baa2baebcfb26102d3331a54bc8" translate="yes" xml:space="preserve">
          <source>Replace all NaN elements with 0s.</source>
          <target state="translated">모든 NaN 요소를 0으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="7cb71fd0409c9d3c6323c5cf70d727fd1c560374" translate="yes" xml:space="preserve">
          <source>Replace each occurrence of pattern/regex in the Series/Index.</source>
          <target state="translated">시리즈 / 인덱스에서 패턴 / 정규식의 각 항목을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="e10ae09914d207de0423adc64c3e16773684708f" translate="yes" xml:space="preserve">
          <source>Replace missing values.</source>
          <target state="translated">결 측값을 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="9a1ab57bb2c2afe66df449ef211bfb271f1abb48" translate="yes" xml:space="preserve">
          <source>Replace occurrences of pattern/regex in the Series/Index with some other string.</source>
          <target state="translated">Series / Index에서 패턴 / 정규식을 다른 문자열로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="8426d81c2f99a158589c66bac7f70259a1833e76" translate="yes" xml:space="preserve">
          <source>Replace occurrences of pattern/regex in the Series/Index with some other string. Equivalent to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt;&lt;code&gt;str.replace()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt;&lt;code&gt;re.sub()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Series / Index에서 패턴 / 정규식을 다른 문자열로 바꿉니다. &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt; &lt;code&gt;str.replace()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt; &lt;code&gt;re.sub()&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="159f0b15c6d9f764cf40bd7c6eb2ff63a18dfd1b" translate="yes" xml:space="preserve">
          <source>Replace occurrences of pattern/regex/string with some other string or the return value of a callable given the occurrence</source>
          <target state="translated">패턴 / 정규식 / 문자열의 발생을 다른 문자열 또는 발생이 주어진 콜 러블의 반환 값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="fd172e5acedf8139547bab42ed01092ba222daac" translate="yes" xml:space="preserve">
          <source>Replace slice in each string with passed value</source>
          <target state="translated">각 문자열의 슬라이스를 전달 된 값으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="14bb1526142f8efe4b0a0e8966260a9c4b7cc8b9" translate="yes" xml:space="preserve">
          <source>Replace the &amp;lsquo;.&amp;rsquo; with &lt;code&gt;NaN&lt;/code&gt; (str -&amp;gt; str):</source>
          <target state="translated">교체 '.' 와 &lt;code&gt;NaN&lt;/code&gt; 이 (캐릭터 -&amp;gt; STR) :</target>
        </trans-unit>
        <trans-unit id="16d0dbcd2ce36a924f8d5424f0d8baca55f21b5e" translate="yes" xml:space="preserve">
          <source>Replace values based on boolean condition.</source>
          <target state="translated">부울 조건에 따라 값을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="4327b9093989e088d7061fb970a88c6ff82bd670" translate="yes" xml:space="preserve">
          <source>Replace values given in</source>
          <target state="translated">주어진 값 바꾸기</target>
        </trans-unit>
        <trans-unit id="508011d4cc2607d6ddd1f4dd5c1f35b21e7da623" translate="yes" xml:space="preserve">
          <source>Replace values given in &lt;code&gt;to_replace&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_replace&lt;/code&gt; 에 제공된 값 을 &lt;code&gt;value&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="60c2c5d0ca49684bb3fb77ee8004929e6f0fd206" translate="yes" xml:space="preserve">
          <source>Replace values where the condition is False.</source>
          <target state="translated">조건이 False 인 값을 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="f97e901740e9563d31be25b146b5552d2734ebd1" translate="yes" xml:space="preserve">
          <source>Replace values where the condition is True.</source>
          <target state="translated">조건이 True 인 값을 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="c84ca6abda992078ff6c8e895a695d9335816c2c" translate="yes" xml:space="preserve">
          <source>Replacement if the condition is False.</source>
          <target state="translated">조건이 False 인 경우 대체합니다.</target>
        </trans-unit>
        <trans-unit id="b9b10ed2807a593cdd894fa6766537eebcf89d14" translate="yes" xml:space="preserve">
          <source>Replacement string or a callable. The callable is passed the regex match object and must return a replacement string to be used. See &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt;&lt;code&gt;re.sub()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">교체 문자열 또는 호출 가능. 콜 러블은 정규식 일치 객체에 전달되며 사용할 대체 문자열을 반환해야합니다. &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt; &lt;code&gt;re.sub()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff64b5ebdf6688c7ec87755a84a992487124d79f" translate="yes" xml:space="preserve">
          <source>Replacing generic values</source>
          <target state="translated">일반 값 바꾸기</target>
        </trans-unit>
        <trans-unit id="6d19797f0bce961471faf8c703c6e4b8a20d9883" translate="yes" xml:space="preserve">
          <source>Replacing more than one value is possible by passing a list.</source>
          <target state="translated">목록을 전달하여 둘 이상의 값을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0b9d7ffc6f2bab96c050add3b0474cce995bef3" translate="yes" xml:space="preserve">
          <source>Replacing some values with mean of the rest of a group</source>
          <target state="translated">일부 값을 나머지 그룹의 평균으로 대체</target>
        </trans-unit>
        <trans-unit id="ea7719f3fe6ac415b2a60923037f6e15ad50c799" translate="yes" xml:space="preserve">
          <source>Represent a categorical variable in classic R / S-plus fashion.</source>
          <target state="translated">고전적인 R / S 플러스 방식으로 범주 형 변수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c37eedc70baa0fef929ad8e2ed859292741dc636" translate="yes" xml:space="preserve">
          <source>Representation for infinity (there is no native representation for infinity in Excel).</source>
          <target state="translated">무한대 표현 (Excel에는 무한대에 대한 기본 표현이 없음).</target>
        </trans-unit>
        <trans-unit id="f4133ccbd80cdfd4e6db708c2692f0f32888523d" translate="yes" xml:space="preserve">
          <source>Representation for missing values. If &lt;code&gt;na_rep&lt;/code&gt; is None, no special formatting is applied.</source>
          <target state="translated">결 측값에 대한 표현. 경우 &lt;code&gt;na_rep&lt;/code&gt; 은 없음입니다, 특별한 서식이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7fdd5536d1b75a8b2ff2c130eb5f140d89fdc72e" translate="yes" xml:space="preserve">
          <source>Representation of a kernel-density estimate using Gaussian kernels. This is the function used internally to estimate the PDF.</source>
          <target state="translated">가우스 커널을 사용한 커널 밀도 추정값 표현. 이것은 PDF를 추정하기 위해 내부적으로 사용되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="88ca3df8c84e36754c83c53f6bdeba63523d3787" translate="yes" xml:space="preserve">
          <source>Representation that is inserted for all missing values:</source>
          <target state="translated">모든 결 측값에 대해 삽입 된 표현 :</target>
        </trans-unit>
        <trans-unit id="87e880e1a214de86743c9c29bda5c3e65f129061" translate="yes" xml:space="preserve">
          <source>Represented internally as int64, and which can be boxed to Timestamp objects that are subclasses of datetime and carry metadata.</source>
          <target state="translated">내부적으로 int64로 표시되며 datetime의 하위 클래스이고 메타 데이터를 전달하는 Timestamp 개체에 박싱 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f027e8328ccf97931f4b29c90abee0946174658f" translate="yes" xml:space="preserve">
          <source>Representing out-of-bounds spans</source>
          <target state="translated">범위를 벗어난 범위를 나타내는</target>
        </trans-unit>
        <trans-unit id="e5938df8e5b770e016fe3525197f196ac5f14c09" translate="yes" xml:space="preserve">
          <source>Represents a duration between two dates or times.</source>
          <target state="translated">두 날짜 또는 시간 사이의 기간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="84e824b5c47043236cf40fab7c9e2c6940ea6431" translate="yes" xml:space="preserve">
          <source>Represents a duration, the difference between two dates or times.</source>
          <target state="translated">두 날짜 또는 시간의 차이 인 지속 시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cca62c2ff95d69c20f74c75c873e89deaa5d43d9" translate="yes" xml:space="preserve">
          <source>Represents a period of time</source>
          <target state="translated">기간을 나타냅니다</target>
        </trans-unit>
        <trans-unit id="c4a6782259b7ce19d8fe43f5d709eceea6bffe3e" translate="yes" xml:space="preserve">
          <source>Represents a period of time.</source>
          <target state="translated">기간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="68444c058ebd2cda893a4541219682371f5e9a9d" translate="yes" xml:space="preserve">
          <source>Represents missing values</source>
          <target state="translated">결 측값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2856923fc32d4273621c0633f5989bfb9b6e881d" translate="yes" xml:space="preserve">
          <source>Require that many non-NA values.</source>
          <target state="translated">비 NA 값이 많이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="47702c9ff5c270ea8878d8032d0c3f5c1da77cf1" translate="yes" xml:space="preserve">
          <source>Requirements for your platform.</source>
          <target state="translated">플랫폼 요구 사항.</target>
        </trans-unit>
        <trans-unit id="207752f870dee5519d8d9e305decb5b9a46ee441" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;\usepackage{booktabs}&lt;/code&gt;. The output can be copy/pasted into a main LaTeX document or read from an external file with &lt;code&gt;\input{table.tex}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;\usepackage{booktabs}&lt;/code&gt; 필요합니다 . 출력은 기본 LaTeX 문서에 복사 / 붙여 넣기하거나 &lt;code&gt;\input{table.tex}&lt;/code&gt; 를 사용하여 외부 파일에서 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ea3e1d946768c83d96bf8665e6b72de8c38f1c6" translate="yes" xml:space="preserve">
          <source>Requires matplotlib.</source>
          <target state="translated">matplotlib가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0d784d5dac3c1111d27082ce0c8e5645dc23bc35" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;https://pypi.org/project/tabulate&quot;&gt;tabulate&lt;/a&gt; package.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/tabulate&quot;&gt;표 형식&lt;/a&gt; 패키지가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="e4c9f4df5f6ce6a7186183ff47bcd3c194294acd" translate="yes" xml:space="preserve">
          <source>Resample a DataFrame.</source>
          <target state="translated">DataFrame을 다시 샘플링하십시오.</target>
        </trans-unit>
        <trans-unit id="d5f71a40ad535b8b81e3790df5871511c2fecaee" translate="yes" xml:space="preserve">
          <source>Resample a Series.</source>
          <target state="translated">시리즈를 다시 샘플링하십시오.</target>
        </trans-unit>
        <trans-unit id="767b6ba62b7ee531c776ed5963173082af316a06" translate="yes" xml:space="preserve">
          <source>Resample a year by quarter using &amp;lsquo;start&amp;rsquo;</source>
          <target state="translated">'시작'을 사용하여 1 년을 분기별로 리샘플링하십시오.</target>
        </trans-unit>
        <trans-unit id="9a08cb52ab28635865a15eb81caa2499d3d48e9e" translate="yes" xml:space="preserve">
          <source>Resample a year by quarter using &amp;lsquo;start&amp;rsquo; &lt;code&gt;convention&lt;/code&gt;. Values are assigned to the first quarter of the period.</source>
          <target state="translated">'시작'를 사용하여 분기별로 년 다시 샘플링 &lt;code&gt;convention&lt;/code&gt; . 기간의 첫 번째 분기에 값이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="3cb90660adb2aea03eb6ff7bcfdf9eb2cec6bb96" translate="yes" xml:space="preserve">
          <source>Resample by month. Values are assigned to the month of the period.</source>
          <target state="translated">월별로 다시 샘플링하십시오. 기간은 월에 값이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="79c04fc88263b588de23b4369c73c8cd3d72d16a" translate="yes" xml:space="preserve">
          <source>Resample by using the nearest value.</source>
          <target state="translated">가장 가까운 값을 사용하여 다시 샘플링하십시오.</target>
        </trans-unit>
        <trans-unit id="fb850501414c960feda399069b225d81f5f7ffe4" translate="yes" xml:space="preserve">
          <source>Resample intraday frame without adding new days</source>
          <target state="translated">새로운 요일을 추가하지 않고 일중 프레임 리샘플링</target>
        </trans-unit>
        <trans-unit id="d50773e1cabf766e6221748e85d85a04731a1af5" translate="yes" xml:space="preserve">
          <source>Resample minute data</source>
          <target state="translated">분 데이터 리샘플링</target>
        </trans-unit>
        <trans-unit id="b155db3071df3dd2d2951dac99c2817dcd8a10aa" translate="yes" xml:space="preserve">
          <source>Resample quarters by month using &amp;lsquo;end&amp;rsquo;</source>
          <target state="translated">'end'를 사용하여 월별로 분기 리샘플링</target>
        </trans-unit>
        <trans-unit id="cf4c0d398045ac5a76de6713cf5d01eb964304b2" translate="yes" xml:space="preserve">
          <source>Resample quarters by month using &amp;lsquo;end&amp;rsquo; &lt;code&gt;convention&lt;/code&gt;. Values are assigned to the last month of the period.</source>
          <target state="translated">'end' &lt;code&gt;convention&lt;/code&gt; 사용하여 분기별로 분기를 다시 샘플링하십시오 . 기간의 마지막 달에 값이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="13b90ca0cdb77346cc84d264078ad108d1bbcd79" translate="yes" xml:space="preserve">
          <source>Resample time-series data.</source>
          <target state="translated">시계열 데이터를 다시 샘플링하십시오.</target>
        </trans-unit>
        <trans-unit id="917c1de52cbedda9cfcd61d200a599ecaa5fd8f4" translate="yes" xml:space="preserve">
          <source>Resample with groupby</source>
          <target state="translated">groupby로 리샘플링</target>
        </trans-unit>
        <trans-unit id="e99aa2e60afc8bfb557372540c1c0aeb55387efe" translate="yes" xml:space="preserve">
          <source>Resampler iterator.</source>
          <target state="translated">리 샘플러 이터레이터.</target>
        </trans-unit>
        <trans-unit id="fa941d878de71a37f2bd31cfc4bbb598d02ee70a" translate="yes" xml:space="preserve">
          <source>Resampler object</source>
          <target state="translated">리 샘플러 객체</target>
        </trans-unit>
        <trans-unit id="e2087fd8bb5718274fa72461b7c142c5059c4610" translate="yes" xml:space="preserve">
          <source>Resampler objects are returned by resample calls: &lt;a href=&quot;api/pandas.dataframe.resample#pandas.DataFrame.resample&quot;&gt;&lt;code&gt;pandas.DataFrame.resample()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/pandas.series.resample#pandas.Series.resample&quot;&gt;&lt;code&gt;pandas.Series.resample()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리 샘플러 객체는 리 샘플 호출 &lt;a href=&quot;api/pandas.dataframe.resample#pandas.DataFrame.resample&quot;&gt; &lt;code&gt;pandas.DataFrame.resample()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;api/pandas.series.resample#pandas.Series.resample&quot;&gt; &lt;code&gt;pandas.Series.resample()&lt;/code&gt; &lt;/a&gt;)에 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="db87b858b309e8806cb35ee1803c85642abd44ff" translate="yes" xml:space="preserve">
          <source>Resampler.__iter__()</source>
          <target state="translated">Resampler.__iter__()</target>
        </trans-unit>
        <trans-unit id="3ca6131b8bbac88fc9e967297000b23ec0d78e2e" translate="yes" xml:space="preserve">
          <source>Resampler.aggregate()</source>
          <target state="translated">Resampler.aggregate()</target>
        </trans-unit>
        <trans-unit id="5fefe4b5f52cc9373fe966267c7d67f237db2a06" translate="yes" xml:space="preserve">
          <source>Resampler.apply()</source>
          <target state="translated">Resampler.apply()</target>
        </trans-unit>
        <trans-unit id="04ac45c2365269d3c97b2a2df309bbb90350894f" translate="yes" xml:space="preserve">
          <source>Resampler.asfreq()</source>
          <target state="translated">Resampler.asfreq()</target>
        </trans-unit>
        <trans-unit id="13f6e651b94d0a79eae4f093a31ab234d1912a9f" translate="yes" xml:space="preserve">
          <source>Resampler.backfill()</source>
          <target state="translated">Resampler.backfill()</target>
        </trans-unit>
        <trans-unit id="169189ff2d4e477e49c6102d8c5d4a3f26bacc33" translate="yes" xml:space="preserve">
          <source>Resampler.bfill()</source>
          <target state="translated">Resampler.bfill()</target>
        </trans-unit>
        <trans-unit id="c2cbbc1e4439ecaa510e5da31ab1149537cde5b7" translate="yes" xml:space="preserve">
          <source>Resampler.count()</source>
          <target state="translated">Resampler.count()</target>
        </trans-unit>
        <trans-unit id="5ca457d948e064a90b48ea2004db805d2e5d0fce" translate="yes" xml:space="preserve">
          <source>Resampler.ffill()</source>
          <target state="translated">Resampler.ffill()</target>
        </trans-unit>
        <trans-unit id="93d0d0eba966341a18b514a62a50e850fc20ca22" translate="yes" xml:space="preserve">
          <source>Resampler.fillna()</source>
          <target state="translated">Resampler.fillna()</target>
        </trans-unit>
        <trans-unit id="5b7916429ab3e3c6e4e4d87bc5e440acccfebeb1" translate="yes" xml:space="preserve">
          <source>Resampler.first()</source>
          <target state="translated">Resampler.first()</target>
        </trans-unit>
        <trans-unit id="e60fa3b4918d3bbd1ccad87bb8fb4a6a2132d637" translate="yes" xml:space="preserve">
          <source>Resampler.get_group()</source>
          <target state="translated">Resampler.get_group()</target>
        </trans-unit>
        <trans-unit id="33745a42c4fe6ed386b5f115e281248b79f845ed" translate="yes" xml:space="preserve">
          <source>Resampler.groups</source>
          <target state="translated">Resampler.groups</target>
        </trans-unit>
        <trans-unit id="b58476db5b74731dad9ede7d3d8f365bbc8864ba" translate="yes" xml:space="preserve">
          <source>Resampler.indices</source>
          <target state="translated">Resampler.indices</target>
        </trans-unit>
        <trans-unit id="4f2f1d6f372d832f3b506254f846154cc20675e1" translate="yes" xml:space="preserve">
          <source>Resampler.interpolate()</source>
          <target state="translated">Resampler.interpolate()</target>
        </trans-unit>
        <trans-unit id="e1a80e99ea0834e4e35989586256c6fc155cb721" translate="yes" xml:space="preserve">
          <source>Resampler.last()</source>
          <target state="translated">Resampler.last()</target>
        </trans-unit>
        <trans-unit id="aeb23b8ec3673c7deb4fb18ffbebe03e6b6865f9" translate="yes" xml:space="preserve">
          <source>Resampler.max()</source>
          <target state="translated">Resampler.max()</target>
        </trans-unit>
        <trans-unit id="ba78554c2a71ca5a34890f68499ce2c28b2ae2b4" translate="yes" xml:space="preserve">
          <source>Resampler.mean()</source>
          <target state="translated">Resampler.mean()</target>
        </trans-unit>
        <trans-unit id="1c513a245f24be70ca57c96ecb6cf0cb578db58c" translate="yes" xml:space="preserve">
          <source>Resampler.median()</source>
          <target state="translated">Resampler.median()</target>
        </trans-unit>
        <trans-unit id="1033947c782b87b9fa1fa7c783d1ed0fa3ca5edd" translate="yes" xml:space="preserve">
          <source>Resampler.min()</source>
          <target state="translated">Resampler.min()</target>
        </trans-unit>
        <trans-unit id="556b0e8fdb7f23b79b5b5218a6fde4734c809e21" translate="yes" xml:space="preserve">
          <source>Resampler.nearest()</source>
          <target state="translated">Resampler.nearest()</target>
        </trans-unit>
        <trans-unit id="d63d133220e0ef49a15b890a978ac2870e62d116" translate="yes" xml:space="preserve">
          <source>Resampler.nunique()</source>
          <target state="translated">Resampler.nunique()</target>
        </trans-unit>
        <trans-unit id="89afdf519a0b3ae62c92367658778ce9a3b8b65c" translate="yes" xml:space="preserve">
          <source>Resampler.ohlc()</source>
          <target state="translated">Resampler.ohlc()</target>
        </trans-unit>
        <trans-unit id="392962b2ef1ca583ab84bead5b79a464212b958f" translate="yes" xml:space="preserve">
          <source>Resampler.pad()</source>
          <target state="translated">Resampler.pad()</target>
        </trans-unit>
        <trans-unit id="53ce85e0d9d73d6ee11723cbbe229f86b2deb255" translate="yes" xml:space="preserve">
          <source>Resampler.pipe()</source>
          <target state="translated">Resampler.pipe()</target>
        </trans-unit>
        <trans-unit id="dd66fee0cfb9df493e339338fa164f9e56f2023f" translate="yes" xml:space="preserve">
          <source>Resampler.prod()</source>
          <target state="translated">Resampler.prod()</target>
        </trans-unit>
        <trans-unit id="7a45a792537244a3eb673aadcddd4017f2f8f894" translate="yes" xml:space="preserve">
          <source>Resampler.quantile()</source>
          <target state="translated">Resampler.quantile()</target>
        </trans-unit>
        <trans-unit id="93d5d18657dafd76a1f245adb3131c79a65ae636" translate="yes" xml:space="preserve">
          <source>Resampler.sem()</source>
          <target state="translated">Resampler.sem()</target>
        </trans-unit>
        <trans-unit id="0b279c5313e84b15dbc63dd30e08c89d47406022" translate="yes" xml:space="preserve">
          <source>Resampler.size()</source>
          <target state="translated">Resampler.size()</target>
        </trans-unit>
        <trans-unit id="804ad0a3893d0b0177acb9987bf99d1607e38b1d" translate="yes" xml:space="preserve">
          <source>Resampler.std()</source>
          <target state="translated">Resampler.std()</target>
        </trans-unit>
        <trans-unit id="31ac20bd54e33957dbc136b6195587c654413598" translate="yes" xml:space="preserve">
          <source>Resampler.sum()</source>
          <target state="translated">Resampler.sum()</target>
        </trans-unit>
        <trans-unit id="3552149786a25b4eed3fe3722d4b5f875371ba42" translate="yes" xml:space="preserve">
          <source>Resampler.transform()</source>
          <target state="translated">Resampler.transform()</target>
        </trans-unit>
        <trans-unit id="c422a10f95e1ef70a704b44a83c38eda318d059d" translate="yes" xml:space="preserve">
          <source>Resampler.var()</source>
          <target state="translated">Resampler.var()</target>
        </trans-unit>
        <trans-unit id="1bf1aa8f2887b625d22d501dbd248dd757431d5b" translate="yes" xml:space="preserve">
          <source>Resampling</source>
          <target state="translated">Resampling</target>
        </trans-unit>
        <trans-unit id="447a4b20a231fc80a4455f1277aa364a22802222" translate="yes" xml:space="preserve">
          <source>Resampling a &lt;code&gt;DataFrame&lt;/code&gt;, the default will be to act on all columns with the same function.</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 을 리샘플링 하면 기본값은 동일한 기능을 가진 모든 열에서 작동하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fdbbc4fd9fbe4cf33cd13104cb69735d1f145473" translate="yes" xml:space="preserve">
          <source>Resampling a DataFrame that has missing values:</source>
          <target state="translated">결 측값이있는 DataFrame 리샘플링 :</target>
        </trans-unit>
        <trans-unit id="7bb52ca3d75a68dab4b2f41ab28071f6a3ece884" translate="yes" xml:space="preserve">
          <source>Resampling a Series:</source>
          <target state="translated">시리즈 리샘플링 :</target>
        </trans-unit>
        <trans-unit id="2a7cfe5db7d740182e0bf0747e982ef08ad0cd9d" translate="yes" xml:space="preserve">
          <source>Resampling or converting a time series to a particular frequency</source>
          <target state="translated">시계열을 특정 빈도로 리샘플링 또는 변환</target>
        </trans-unit>
        <trans-unit id="2d07546d3d06e00e50ceda1d410967af98d7ea45" translate="yes" xml:space="preserve">
          <source>Resampling produces new hypothetical samples (resamples) from already existing observed data or from a model that generates data. These new samples are similar to the pre-existing samples.</source>
          <target state="translated">리샘플링은 이미 존재하는 관찰 된 데이터 또는 데이터를 생성하는 모델에서 새로운 가상 샘플 (리샘플링)을 생성합니다. 이러한 새 샘플은 기존 샘플과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="9f8e117400050e50221303c8a58e6fa061f078b1" translate="yes" xml:space="preserve">
          <source>Resampling with custom periods</source>
          <target state="translated">사용자 지정 기간으로 리샘플링</target>
        </trans-unit>
        <trans-unit id="5e8b9f1971325fb7b975d9141fe03940d9e2f611" translate="yes" xml:space="preserve">
          <source>Reset one or more options to their default value.</source>
          <target state="translated">하나 이상의 옵션을 기본값으로 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="213d80c59a42f8395d5305c285c67a9e37974294" translate="yes" xml:space="preserve">
          <source>Reset the index</source>
          <target state="translated">색인 재설정</target>
        </trans-unit>
        <trans-unit id="64331126f325a2459e00534ae87a7d31311e895b" translate="yes" xml:space="preserve">
          <source>Reset the index of the DataFrame, and use the default one instead. If the DataFrame has a MultiIndex, this method can remove one or more levels.</source>
          <target state="translated">DataFrame의 색인을 재설정하고 대신 기본 색인을 사용하십시오. DataFrame에 MultiIndex가있는 경우이 메서드는 하나 이상의 수준을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5784f8e5a48e912a3a8e2da73a55b09ce4b25f76" translate="yes" xml:space="preserve">
          <source>Reset the index, or a level of it.</source>
          <target state="translated">색인 또는 수준을 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="cef256cbc0b31c662c9e9fd3b3e697703c054e8e" translate="yes" xml:space="preserve">
          <source>Reset the styler, removing any previously applied styles.</source>
          <target state="translated">이전에 적용된 스타일을 제거하고 스타일러를 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="eb2c1bbb94eefbfbc59b607254c87ee8df79e4e5" translate="yes" xml:space="preserve">
          <source>Reset the styler, removing any previously applied styles. Returns None.</source>
          <target state="translated">이전에 적용된 스타일을 제거하고 스타일러를 재설정하십시오. None을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f5d32203cfda7d3008545beddab065535102307" translate="yes" xml:space="preserve">
          <source>Reshape data (produce a &amp;ldquo;pivot&amp;rdquo; table) based on column values. Uses unique values from specified</source>
          <target state="translated">열 값을 기반으로 데이터의 형태를 변경합니다 ( &quot;피벗&quot;테이블 생성). 지정된 고유 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="584fc9a075213fcdc315beb6673c4161ea3276fa" translate="yes" xml:space="preserve">
          <source>Reshape data (produce a &amp;ldquo;pivot&amp;rdquo; table) based on column values. Uses unique values from specified &lt;code&gt;index&lt;/code&gt; / &lt;code&gt;columns&lt;/code&gt; to form axes of the resulting DataFrame. This function does not support data aggregation, multiple values will result in a MultiIndex in the columns. See the &lt;a href=&quot;../../user_guide/reshaping#reshaping&quot;&gt;User Guide&lt;/a&gt; for more on reshaping.</source>
          <target state="translated">열 값을 기준으로 데이터를 재구성합니다 (&amp;ldquo;피벗&amp;rdquo;테이블 생성). 지정된 &lt;code&gt;index&lt;/code&gt; / &lt;code&gt;columns&lt;/code&gt; 고유 값을 사용 하여 결과 DataFrame의 축을 형성합니다. 이 함수는 데이터 집계를 지원하지 않으므로 여러 값을 사용하면 열에 MultiIndex가 생깁니다. 재구성에 대한 자세한 내용은 사용 &lt;a href=&quot;../../user_guide/reshaping#reshaping&quot;&gt;설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54616de2f88202fb4984d6702b6c5da8b9f7c49f" translate="yes" xml:space="preserve">
          <source>Reshape data based on column values.</source>
          <target state="translated">열 값을 기준으로 데이터를 재구성합니다.</target>
        </trans-unit>
        <trans-unit id="873930d2b2eeeaab6f1efc2161a3a65ab574eb08" translate="yes" xml:space="preserve">
          <source>Reshape dataframe from long format to wide format.</source>
          <target state="translated">긴 형식에서 넓은 형식으로 데이터 프레임을 재구성합니다.</target>
        </trans-unit>
        <trans-unit id="308f59eb95fad497669dcfc017c94bc737132916" translate="yes" xml:space="preserve">
          <source>Reshaping</source>
          <target state="translated">Reshaping</target>
        </trans-unit>
        <trans-unit id="c3d58965b97bcc29762668ed095c6d6cde2654d3" translate="yes" xml:space="preserve">
          <source>Reshaping and Comparison operations on a &lt;code&gt;CategoricalIndex&lt;/code&gt; must have the same categories or a &lt;code&gt;TypeError&lt;/code&gt; will be raised.</source>
          <target state="translated">&lt;code&gt;CategoricalIndex&lt;/code&gt; 에 대한 모양 변경 및 비교 작업 은 동일한 범주를 가져야합니다. 그렇지 않으면 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25ec6020061b30b6d06c967615f2232d9d87a45f" translate="yes" xml:space="preserve">
          <source>Reshaping and pivot tables</source>
          <target state="translated">테이블 재구성 및 피벗</target>
        </trans-unit>
        <trans-unit id="a4276e05f10750aaa4d4ed4790c70939fc4ddf66" translate="yes" xml:space="preserve">
          <source>Reshaping by Melt</source>
          <target state="translated">용융에 의한 형태 변경</target>
        </trans-unit>
        <trans-unit id="1b39c11cd28bcec5958f63e9c1ad47b305f89bcd" translate="yes" xml:space="preserve">
          <source>Reshaping by melt</source>
          <target state="translated">용융에 의한 재 형성</target>
        </trans-unit>
        <trans-unit id="aa6e20e85a03ea2a127748b5e2b4c51c5b0fd18d" translate="yes" xml:space="preserve">
          <source>Reshaping by pivoting DataFrame objects</source>
          <target state="translated">DataFrame 객체를 피벗하여 모양 변경</target>
        </trans-unit>
        <trans-unit id="9ee6dba34fd4053681f2e07ad4a0944e7688f8d5" translate="yes" xml:space="preserve">
          <source>Reshaping by stacking and unstacking</source>
          <target state="translated">스태킹 및 언 스태킹으로 형태 변경</target>
        </trans-unit>
        <trans-unit id="5100300a0249f008b4da9f0c964a86e0e4a2f72d" translate="yes" xml:space="preserve">
          <source>Reshaping, sorting</source>
          <target state="translated">변형, 정렬</target>
        </trans-unit>
        <trans-unit id="4b8b66096a52e633d4a9dd0df7f2e4beac62a695" translate="yes" xml:space="preserve">
          <source>Reshaping, sorting, transposing</source>
          <target state="translated">변형, 분류, 조옮김</target>
        </trans-unit>
        <trans-unit id="d032ff9170fbdddba896f93901dcc5fbb16e1c9e" translate="yes" xml:space="preserve">
          <source>Resolution: Return value</source>
          <target state="translated">해상도 : 반환 값</target>
        </trans-unit>
        <trans-unit id="80184e2c580f57b28cfa01d0c2c29d719a654f82" translate="yes" xml:space="preserve">
          <source>Rest of &lt;code&gt;pandas.core.*&lt;/code&gt;</source>
          <target state="translated">나머지 &lt;code&gt;pandas.core.*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="1909d844cd0a54ee56508df1fb05ed27302e78a7" translate="yes" xml:space="preserve">
          <source>Result index will be the union of the two indexes.</source>
          <target state="translated">결과 인덱스는 두 인덱스의 합집합입니다.</target>
        </trans-unit>
        <trans-unit id="f6033c69515c877f39c58f229c53ffda6ac4813c" translate="yes" xml:space="preserve">
          <source>Result of applying &lt;code&gt;func&lt;/code&gt; along the given axis of the DataFrame.</source>
          <target state="translated">DataFrame의 지정된 축을 따라 &lt;code&gt;func&lt;/code&gt; 를 적용한 결과입니다 .</target>
        </trans-unit>
        <trans-unit id="f10cf2a5f49f039c24d0ed5bffc72fab71063636" translate="yes" xml:space="preserve">
          <source>Result of the arithmetic operation.</source>
          <target state="translated">산술 연산의 결과.</target>
        </trans-unit>
        <trans-unit id="94608a9be0b1f277dc1b8fe3c67de0f156c3c608" translate="yes" xml:space="preserve">
          <source>Result of the comparison.</source>
          <target state="translated">비교 결과.</target>
        </trans-unit>
        <trans-unit id="78cd56444f9b491222314412d5942a0127e7ec10" translate="yes" xml:space="preserve">
          <source>Resulting index.</source>
          <target state="translated">결과 색인.</target>
        </trans-unit>
        <trans-unit id="5cbd047ded9c1d04b17a605afc48fafa06b9fdf1" translate="yes" xml:space="preserve">
          <source>Results can include:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0f9cc3fdd86df202a0374af12587fe7337428564" translate="yes" xml:space="preserve">
          <source>Retrieve pandas object stored in file</source>
          <target state="translated">파일에 저장된 팬더 객체 검색</target>
        </trans-unit>
        <trans-unit id="ba277e5c01447d138d458fd7d03bf8d7979a2ccd" translate="yes" xml:space="preserve">
          <source>Retrieve pandas object stored in file, optionally based on where criteria</source>
          <target state="translated">선택적으로 위치 기준에 따라 파일에 저장된 팬더 객체 검색</target>
        </trans-unit>
        <trans-unit id="2e994d85660d84623cf79a0beace77a26caeca52" translate="yes" xml:space="preserve">
          <source>Retrieve pandas object stored in file, optionally based on where criteria.</source>
          <target state="translated">선택적으로 where 기준에 따라 파일에 저장된 pandas 객체를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="08b53bd7048174b024a64a95071f75fbc97e62a3" translate="yes" xml:space="preserve">
          <source>Retrieve pandas object stored in file.</source>
          <target state="translated">파일에 저장된 pandas 객체를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="a8a103fe147f9591bc93cfb4530897bcd61bc14e" translate="yes" xml:space="preserve">
          <source>Retrieve the index labels.</source>
          <target state="translated">색인 레이블을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="a1178c68ea1c56ff0bb7bcb571d0cc8d36a56194" translate="yes" xml:space="preserve">
          <source>Retrieved object from file.</source>
          <target state="translated">파일에서 개체를 검색했습니다.</target>
        </trans-unit>
        <trans-unit id="7d274fac52e73f3c9c0079d9f3551a7f4e5d6a69" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the specified option.</source>
          <target state="translated">지정된 옵션의 값을 얻어 온다.</target>
        </trans-unit>
        <trans-unit id="e373e57d4d753767f6c92cf8a77918dedd8ae2ac" translate="yes" xml:space="preserve">
          <source>Retrieving the column names.</source>
          <target state="translated">열 이름을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="75875a1573a6ffc7fbb9f38b1ff727cf82ecb7d6" translate="yes" xml:space="preserve">
          <source>Return 1 if Series. Otherwise return 2 if DataFrame.</source>
          <target state="translated">Series 인 경우 1을 반환합니다. 그렇지 않으면 DataFrame 인 경우 2를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="090a97e2f30dd61251342fa2aec507615b618bea" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Index&lt;/code&gt; data as an &lt;code&gt;numpy.ndarray&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Index&lt;/code&gt; 데이터를 &lt;code&gt;numpy.ndarray&lt;/code&gt; 로 리턴 하십시오 .</target>
        </trans-unit>
        <trans-unit id="586222d52a5c9d9dc605355282fb238047066167" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;TextFileReader&lt;/code&gt; object for iteration or getting chunks with &lt;code&gt;get_chunk()&lt;/code&gt;.</source>
          <target state="translated">반복을 위해 &lt;code&gt;TextFileReader&lt;/code&gt; 객체를 반환 하거나 &lt;code&gt;get_chunk()&lt;/code&gt; 하여 청크를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d5424ff1681bb7e42e65095e6a758d22e5469bda" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;TextFileReader&lt;/code&gt; object for iteration. See &lt;a href=&quot;#io-chunking&quot;&gt;iterating and chunking&lt;/a&gt; below.</source>
          <target state="translated">반복을 위해 &lt;code&gt;TextFileReader&lt;/code&gt; 객체를 반환 합니다. 아래에서 &lt;a href=&quot;#io-chunking&quot;&gt;반복 및 청킹을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68275f5de5d748515146a308e1b217e4e16a99d3" translate="yes" xml:space="preserve">
          <source>Return Addition of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소 별 추가 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="6e4027b9066b14120d9dd73e9ee11029a0f3a37d" translate="yes" xml:space="preserve">
          <source>Return Addition of series and other, element-wise (binary operator &lt;code&gt;add&lt;/code&gt;).</source>
          <target state="translated">계열 및 기타 요소 별 &lt;code&gt;add&lt;/code&gt; (이항 연산자 add )를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="edfc083bcb12910889a52b1e6a0ad77a1b1c64d2" translate="yes" xml:space="preserve">
          <source>Return Addition of series and other, element-wise (binary operator &lt;code&gt;radd&lt;/code&gt;).</source>
          <target state="translated">계열 및 기타 요소 별 추가 (이진 연산자 &lt;code&gt;radd&lt;/code&gt; )를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="25da91d22d37703afdcacf7571ba243ce9187a33" translate="yes" xml:space="preserve">
          <source>Return DataFrame of dummy/indicator variables for Series.</source>
          <target state="translated">시리즈에 대한 더미 / 인디케이터 변수의 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="85d18a587c45f3747ebdc6a9a61e125f3bbe4112" translate="yes" xml:space="preserve">
          <source>Return DataFrame with counts of unique elements in each position.</source>
          <target state="translated">각 위치에서 고유 한 요소의 개수와 함께 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4280e160a787a8a97118dbe3c573786ddb6946a5" translate="yes" xml:space="preserve">
          <source>Return DataFrame with duplicate rows removed, optionally only considering certain columns.</source>
          <target state="translated">선택적으로 특정 열만 고려하여 중복 행이 제거 된 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d143df17c4e588f4cb3bc7beb96b5ae93f26df21" translate="yes" xml:space="preserve">
          <source>Return DataFrame with duplicate rows removed, optionally only considering certain columns. Indexes, including time indexes are ignored.</source>
          <target state="translated">선택적으로 특정 열만 고려하여 중복 행이 제거 된 DataFrame을 반환합니다. 시간 인덱스를 포함한 인덱스는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="6cbb0462e59cf552d3db6b2cfa982f29b03a55cf" translate="yes" xml:space="preserve">
          <source>Return DataFrame with duplicate rows removed.</source>
          <target state="translated">중복 행이 제거 된 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="493110d65c6ef5a433975fb4e4f7a0a4912a78a0" translate="yes" xml:space="preserve">
          <source>Return DataFrame with labels on given axis omitted where (all or any) data are missing.</source>
          <target state="translated">주어진 축에 레이블이있는 DataFrame을 반환합니다 (모든 또는 일부) 데이터가 누락 된 경우.</target>
        </trans-unit>
        <trans-unit id="7768c819e75741ba737072dc1f6ffaa112aa86d9" translate="yes" xml:space="preserve">
          <source>Return DataFrame with number of distinct observations per group for each column.</source>
          <target state="translated">각 열에 대해 그룹당 별개의 관측치 수가있는 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="86e4133c0c01e0420e36c1e6dbece25998c1b15e" translate="yes" xml:space="preserve">
          <source>Return DataFrame with requested index / column level(s) removed.</source>
          <target state="translated">요청 된 인덱스 / 열 수준이 제거 된 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="22ab0d3bb063cf18086c7edfd2f8a2e1e7093852" translate="yes" xml:space="preserve">
          <source>Return DateOffset object from string or tuple representation or datetime.timedelta object</source>
          <target state="translated">문자열 또는 튜플 표현 또는 datetime.timedelta 객체에서 DateOffset 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f3ff8089bc8636e9e9d5a8a9791afa00cac5d40" translate="yes" xml:space="preserve">
          <source>Return DateOffset object from string or tuple representation or datetime.timedelta object.</source>
          <target state="translated">문자열 또는 튜플 표현 또는 datetime.timedelta 객체에서 DateOffset 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c7f49a59fe1ab1c2c2245c3527a2c8a72f6a6b3" translate="yes" xml:space="preserve">
          <source>Return Datetime Array/Index as object ndarray of datetime.datetime objects</source>
          <target state="translated">datetime.datetime 객체의 ndarray 객체로 Datetime 배열 / 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f18fd279d5dff5c1e9050c5a2664b9581a7fe88e" translate="yes" xml:space="preserve">
          <source>Return Datetime Array/Index as object ndarray of datetime.datetime objects.</source>
          <target state="translated">datetime.datetime 객체의 객체 ndarray로 Datetime 배열 / 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1714fefc67881dfb23a7ebf8a6c9748cdb8945a5" translate="yes" xml:space="preserve">
          <source>Return DatetimeIndex as object.</source>
          <target state="translated">DatetimeIndex를 객체로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1959413fb3b187cd84a6f8abe06c8a9fcc887786" translate="yes" xml:space="preserve">
          <source>Return DatetimeIndex with times to midnight.</source>
          <target state="translated">자정까지 시간이있는 DatetimeIndex를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a06b6086e47a37e662cf2db2b6d1db5f29a7307" translate="yes" xml:space="preserve">
          <source>Return Equal to of series and other, element-wise (binary operator</source>
          <target state="translated">시리즈의 같음 및 기타 요소 별 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="b04b13e85525df33b02e37ab51ae200f88c6f653" translate="yes" xml:space="preserve">
          <source>Return Equal to of series and other, element-wise (binary operator &lt;code&gt;eq&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 (이진 연산자 &lt;code&gt;eq&lt;/code&gt; )과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0eb9a0781dcf2ecec1920223123d822952fc5213" translate="yes" xml:space="preserve">
          <source>Return Exponential power of series and other, element-wise (binary operator</source>
          <target state="translated">급수 및 기타 요소 별 지수 거듭 제곱 반환 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="81a2a2a1ee8ee809b6adcaf04a1ed7b3b71cd8e7" translate="yes" xml:space="preserve">
          <source>Return Exponential power of series and other, element-wise (binary operator &lt;code&gt;pow&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 (이항 연산자 &lt;code&gt;pow&lt;/code&gt; )의 지수 지수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0bb474c5cbaebdeed807dbf4aeba8eceb3bf1037" translate="yes" xml:space="preserve">
          <source>Return Exponential power of series and other, element-wise (binary operator &lt;code&gt;rpow&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 (이진 연산자 &lt;code&gt;rpow&lt;/code&gt; )의 지수 지수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4e03f880e05b7f388523c4f7aa56be763f731143" translate="yes" xml:space="preserve">
          <source>Return ExtensionArray without NA values</source>
          <target state="translated">NA 값이없는 반환 ExtensionArray</target>
        </trans-unit>
        <trans-unit id="3352c5c49acbce68544c3ca7d4c40d103dfbf8f7" translate="yes" xml:space="preserve">
          <source>Return ExtensionArray without NA values.</source>
          <target state="translated">NA 값없이 ExtensionArray를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb7231f982e17a21624e625b5e6f4a6d908c4b5d" translate="yes" xml:space="preserve">
          <source>Return Floating division of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소 별 부동 나누기 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="7789a8f87389cfd677a825d16b2075c4fbe39a03" translate="yes" xml:space="preserve">
          <source>Return Floating division of series and other, element-wise (binary operator &lt;code&gt;rtruediv&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위의 부동 나누기 (이진 연산자 &lt;code&gt;rtruediv&lt;/code&gt; )를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="03fa8c83e9936186e17471080b9ff87a42131b8d" translate="yes" xml:space="preserve">
          <source>Return Floating division of series and other, element-wise (binary operator &lt;code&gt;truediv&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위의 부동 나누기 (2 진 연산자 &lt;code&gt;truediv&lt;/code&gt; )를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="ce698173db8a1afe5303dae70d6078d3bde8c19a" translate="yes" xml:space="preserve">
          <source>Return Greater than of series and other, element-wise (binary operator</source>
          <target state="translated">시리즈보다 큼 및 기타 요소 별 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="46c07e8ceab687c456aeb16ff9050e704465dfd2" translate="yes" xml:space="preserve">
          <source>Return Greater than of series and other, element-wise (binary operator &lt;code&gt;gt&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위 (이진 연산자 &lt;code&gt;gt&lt;/code&gt; ) 보다 큽니다 .</target>
        </trans-unit>
        <trans-unit id="42b6122e1b6b6ade8b64d0bbe9b2eb7ec1358692" translate="yes" xml:space="preserve">
          <source>Return Greater than or equal to of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소 별 (이항 연산자)보다 크거나 같음</target>
        </trans-unit>
        <trans-unit id="bae27836544daf9eb75fc74c1bae73517d96d380" translate="yes" xml:space="preserve">
          <source>Return Greater than or equal to of series and other, element-wise (binary operator &lt;code&gt;ge&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 (이진 연산자 &lt;code&gt;ge&lt;/code&gt; ) 보다 크거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5cc13eb2324aea1758772e2875e17771d4322b5b" translate="yes" xml:space="preserve">
          <source>Return Index or MultiIndex name.</source>
          <target state="translated">Index 또는 MultiIndex 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e3605ff682f89d532d01c44a25fd487daaed1921" translate="yes" xml:space="preserve">
          <source>Return Index with duplicate values removed.</source>
          <target state="translated">중복 값이 ​​제거 된 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5cc109373278ae3e1efb09a78c32e331c3d4ad3d" translate="yes" xml:space="preserve">
          <source>Return Index with duplicates removed.</source>
          <target state="translated">중복이 제거 된 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a3afa0e70cef40eea307a9025bae42b6bd5a88f" translate="yes" xml:space="preserve">
          <source>Return Index with unique values from an Index object.</source>
          <target state="translated">Index 객체에서 고유 한 값으로 Index를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a21b24e9673ec6dedcffd8b8debc74d21b2696cd" translate="yes" xml:space="preserve">
          <source>Return Index without NA/NaN values</source>
          <target state="translated">NA / NaN 값이없는 반환 인덱스</target>
        </trans-unit>
        <trans-unit id="322cb97b9bda902abe82ea8ff0b32f7449c9ecdb" translate="yes" xml:space="preserve">
          <source>Return Index without NA/NaN values.</source>
          <target state="translated">NA / NaN 값없이 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eff5fa6026165d235b1876d9c500e72b289f7ebb" translate="yes" xml:space="preserve">
          <source>Return Integer division and modulo of series and other, element-wise (binary operator</source>
          <target state="translated">정수 나누기 및 시리즈 모듈로 및 기타 요소 별 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="a921b310f6fd0fb15bf9cffca96850d780944275" translate="yes" xml:space="preserve">
          <source>Return Integer division and modulo of series and other, element-wise (binary operator &lt;code&gt;divmod&lt;/code&gt;).</source>
          <target state="translated">정수와 다른 요소 단위의 정수 나누기와 모듈로를 반환합니다 (이진 연산자 &lt;code&gt;divmod&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fde189e469bfe6adace12a6ff628834a15806e8b" translate="yes" xml:space="preserve">
          <source>Return Integer division and modulo of series and other, element-wise (binary operator &lt;code&gt;rdivmod&lt;/code&gt;).</source>
          <target state="translated">정수와 다른 요소 단위의 정수 나누기와 모듈로를 반환합니다 (이진 연산자 &lt;code&gt;rdivmod&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a7e61e8dfcab84426d86ed95b85fc37b573f781d" translate="yes" xml:space="preserve">
          <source>Return Integer division of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소 별 정수 나누기 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="05040f2a024a64be61d242a51127b88090f64d62" translate="yes" xml:space="preserve">
          <source>Return Integer division of series and other, element-wise (binary operator &lt;code&gt;floordiv&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위의 정수 나누기 (이진 연산자 &lt;code&gt;floordiv&lt;/code&gt; )를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6a8a135aa8ab9842b99e28bfd7dcb041108f7eee" translate="yes" xml:space="preserve">
          <source>Return Integer division of series and other, element-wise (binary operator &lt;code&gt;rfloordiv&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위의 정수 나누기를 리턴합니다 (이진 연산자 &lt;code&gt;rfloordiv&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d670adccbd6050314bd521694f41ba2369670797" translate="yes" xml:space="preserve">
          <source>Return JsonReader object for iteration. See the &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#line-delimited-json&quot;&gt;line-delimited json docs&lt;/a&gt; for more information on &lt;code&gt;chunksize&lt;/code&gt;. This can only be passed if &lt;code&gt;lines=True&lt;/code&gt;. If this is None, the file will be read into memory all at once.</source>
          <target state="translated">반복을 위해 JsonReader 객체를 반환합니다. &lt;code&gt;chunksize&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#line-delimited-json&quot;&gt;줄로 구분 된 json 문서&lt;/a&gt; 를 참조하십시오 . &lt;code&gt;lines=True&lt;/code&gt; 인 경우에만 전달할 수 있습니다 . 이것이 None이면 파일을 한 번에 메모리로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="f78062ab02580eeea914a529061941d07b008fee" translate="yes" xml:space="preserve">
          <source>Return JsonReader object for iteration. See the &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#line-delimited-json&quot;&gt;line-delimited json docs&lt;/a&gt; for more information on &lt;code&gt;chunksize&lt;/code&gt;. This can only be passed if</source>
          <target state="translated">반복을 위해 JsonReader 객체를 반환합니다. &lt;code&gt;chunksize&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#line-delimited-json&quot;&gt;줄로 구분 된 json 문서&lt;/a&gt; 를 참조하세요 . 다음 경우에만 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1acdae220b83529b35f80dd7c0634bda294e00c" translate="yes" xml:space="preserve">
          <source>Return Less than of series and other, element-wise (binary operator</source>
          <target state="translated">계열보다 작음 및 기타 요소 별 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="11fccfec4a5aa246f66c57b99cae0c01914dc386" translate="yes" xml:space="preserve">
          <source>Return Less than of series and other, element-wise (binary operator &lt;code&gt;lt&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 (이진 연산자 &lt;code&gt;lt&lt;/code&gt; )보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="34570d2156aebf4acefac3d60e678e96401d91cc" translate="yes" xml:space="preserve">
          <source>Return Less than or equal to of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소별로 작거나 같음 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="ff9303cc843e59fcf3351791320f7cda4a1a6d0a" translate="yes" xml:space="preserve">
          <source>Return Less than or equal to of series and other, element-wise (binary operator &lt;code&gt;le&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 (이진 연산자 &lt;code&gt;le&lt;/code&gt; ) 보다 작거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="855f5ea0550580c01d8c75c0b37e3bbdaeb26fce" translate="yes" xml:space="preserve">
          <source>Return Modulo of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소 별 모듈로 반환 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="b747ae5a7b4775b9a125ea34cdc96e8bcd13b943" translate="yes" xml:space="preserve">
          <source>Return Modulo of series and other, element-wise (binary operator &lt;code&gt;mod&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 (이진 연산자 &lt;code&gt;mod&lt;/code&gt; )의 모듈로를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2a8613e5d4d1fba572f8a849cd1a2640059809ee" translate="yes" xml:space="preserve">
          <source>Return Modulo of series and other, element-wise (binary operator &lt;code&gt;rmod&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위의 모듈로를 반환합니다 (이진 연산자 &lt;code&gt;rmod&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c57cf0476314d66eb23c9e9d93b6410281c09ed3" translate="yes" xml:space="preserve">
          <source>Return Multiplication of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소 별 곱셈을 반환합니다 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="88bfa896134e06bbfe41823e0746536b234e2039" translate="yes" xml:space="preserve">
          <source>Return Multiplication of series and other, element-wise (binary operator &lt;code&gt;mul&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위의 곱셈을 반환합니다 (바이너리 연산자 &lt;code&gt;mul&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1d03486eeae7154f177e453a8d659695c4c25ea3" translate="yes" xml:space="preserve">
          <source>Return Multiplication of series and other, element-wise (binary operator &lt;code&gt;rmul&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 단위의 곱셈을 반환합니다 (이진수 연산자 &lt;code&gt;rmul&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d865d5500ddb62ff8085560226df94481e9a94f6" translate="yes" xml:space="preserve">
          <source>Return Not equal to of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소별로 같지 않음 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="06cc07fa6aa2d5e9a15ff10e3c061750a8545e92" translate="yes" xml:space="preserve">
          <source>Return Not equal to of series and other, element-wise (binary operator &lt;code&gt;ne&lt;/code&gt;).</source>
          <target state="translated">리턴 직렬 및 기타 요소 별 (이진 연산자 &lt;code&gt;ne&lt;/code&gt; ) 과 같지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c95fc892452acc918f2567d0d5a560c494046220" translate="yes" xml:space="preserve">
          <source>Return POSIX timestamp as float.</source>
          <target state="translated">POSIX 타임 스탬프를 float로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a8267a97a89c087e650f4397449a3f1a7e55c65d" translate="yes" xml:space="preserve">
          <source>Return Series as ndarray or ndarray-like depending on the dtype.</source>
          <target state="translated">dtype에 따라 Series를 ndarray 또는 ndarray와 같은 형식으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7e60c0733cb896dc8559eaec7395e3c56393e250" translate="yes" xml:space="preserve">
          <source>Return Series of codes as well as the index.</source>
          <target state="translated">색인뿐만 아니라 일련의 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ed0a72a1041941a0dbb56f27b9b0ef5266f448e" translate="yes" xml:space="preserve">
          <source>Return Series with duplicate values removed.</source>
          <target state="translated">중복 값이 ​​제거 된 시리즈를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01e2cb60c75a7f0f946cfbfde971ba189b2566b3" translate="yes" xml:space="preserve">
          <source>Return Series with number of distinct observations. Can ignore NaN values.</source>
          <target state="translated">별개의 관측치가있는 시리즈를 반환합니다. NaN 값을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f38e6ec838cd9649bc5b440046931967f11fad1f" translate="yes" xml:space="preserve">
          <source>Return Series with specified index labels removed.</source>
          <target state="translated">지정된 색인 레이블이 제거 된 시리즈를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="93e0a388656b213a58d648a0a2e2facf5894ec88" translate="yes" xml:space="preserve">
          <source>Return Series with the data type of each column.</source>
          <target state="translated">각 열의 데이터 유형으로 Series를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d88855c5184858684560c27e2130c8d092605bb2" translate="yes" xml:space="preserve">
          <source>Return Series without null values.</source>
          <target state="translated">null 값없이 Series를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7f39bd9af603ddaee6189cbf9eb66d30d38b0697" translate="yes" xml:space="preserve">
          <source>Return StataReader object for iterations, returns chunks with given number of lines.</source>
          <target state="translated">반복에 대한 StataReader 객체를 반환하고 주어진 줄 수의 청크를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2110bb45916cf4c6e07351a5f91f73b13f069163" translate="yes" xml:space="preserve">
          <source>Return StataReader object.</source>
          <target state="translated">StataReader 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d368872d940dcd0c162f6e099e39676515f938de" translate="yes" xml:space="preserve">
          <source>Return Subtraction of series and other, element-wise (binary operator</source>
          <target state="translated">계열 및 기타 요소 별 빼기 (이항 연산자</target>
        </trans-unit>
        <trans-unit id="a964b10397ba138f3ee96576dc9f1b4f302c2076" translate="yes" xml:space="preserve">
          <source>Return Subtraction of series and other, element-wise (binary operator &lt;code&gt;rsub&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 뺄셈 (2 진 연산자 &lt;code&gt;rsub&lt;/code&gt; )을 뺍니다 .</target>
        </trans-unit>
        <trans-unit id="c010eaee2bc07f187d2f3fcf5fa901782e43325c" translate="yes" xml:space="preserve">
          <source>Return Subtraction of series and other, element-wise (binary operator &lt;code&gt;sub&lt;/code&gt;).</source>
          <target state="translated">직렬 및 기타 요소 별 빼기 (이진수 연산자 &lt;code&gt;sub&lt;/code&gt; )를 뺍니다 .</target>
        </trans-unit>
        <trans-unit id="6938f350b8fedabd397f327dedf9ffbbb00aa472" translate="yes" xml:space="preserve">
          <source>Return TextFileReader object for iteration or getting chunks with &lt;code&gt;get_chunk()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get_chunk()&lt;/code&gt; 로 반복하거나 청크를 얻는 데 필요한 TextFileReader 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="41623bbc2bb03403d87675692faa19b550ffb4b2" translate="yes" xml:space="preserve">
          <source>Return TextFileReader object for iteration. See the &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/io.html#io-chunking&quot;&gt;IO Tools docs&lt;/a&gt; for more information on &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;chunksize&lt;/code&gt;.</source>
          <target state="translated">반복 할 TextFileReader 객체를 반환합니다. &lt;code&gt;iterator&lt;/code&gt; 및 &lt;code&gt;chunksize&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/io.html#io-chunking&quot;&gt;IO Tools 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9cd177e2d8804373ec32ed84ff59388410a96ce" translate="yes" xml:space="preserve">
          <source>Return TextFileReader object for iteration. See the &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/io.html#io-chunking&quot;&gt;IO Tools docs&lt;/a&gt; for more information on &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;chunksize&lt;/code&gt;.</source>
          <target state="translated">반복을 위해 TextFileReader 객체를 반환합니다. &lt;code&gt;iterator&lt;/code&gt; 및 &lt;code&gt;chunksize&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/io.html#io-chunking&quot;&gt;IO 도구 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a08dfb1070e7fbe0879ce1aa976decf9be7a7ca7" translate="yes" xml:space="preserve">
          <source>Return Timedelta Array/Index as object ndarray of datetime.timedelta objects.</source>
          <target state="translated">Timedelta 배열 / 인덱스를 datetime.timedelta 객체의 객체 ndarray로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8535f5194fedee5d016b88dafa2e2043271178a8" translate="yes" xml:space="preserve">
          <source>Return True if all elements are True.</source>
          <target state="translated">모든 요소가 True이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0399ab9a0a0bccfa247cb687d251ef3ac90a585" translate="yes" xml:space="preserve">
          <source>Return True if all values in the group are truthful, else False.</source>
          <target state="translated">그룹의 모든 값이 사실이면 True를, 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f22d5105d44d7daec7b04172592563f080c9ade" translate="yes" xml:space="preserve">
          <source>Return True if any value in the group is truthful, else False.</source>
          <target state="translated">그룹의 값이 진실이면 True를, 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f454e3b7eb3d4895ff5e7c34824301278925a6c" translate="yes" xml:space="preserve">
          <source>Return True if date is first day of month.</source>
          <target state="translated">날짜가 첫날 인 경우 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="406c6d2d08d7b1b49333f44e07516ef3b7df4c52" translate="yes" xml:space="preserve">
          <source>Return True if date is first day of the quarter.</source>
          <target state="translated">날짜가 분기의 첫날이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f8ad73f78a46bb61ce6131e2662d8d0c34e7d968" translate="yes" xml:space="preserve">
          <source>Return True if date is first day of the year.</source>
          <target state="translated">날짜가 연도의 첫날이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9e4d488d57115c96e68afeb0adddb35ac362576f" translate="yes" xml:space="preserve">
          <source>Return True if date is last day of month.</source>
          <target state="translated">날짜가 마지막 날인 경우 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="35b643f44665e31c00656b25f9e9c3b9fd6bac31" translate="yes" xml:space="preserve">
          <source>Return True if date is last day of the quarter.</source>
          <target state="translated">날짜가 분기의 마지막 날이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2a2fd55322d9bb2f53b4d6ce3382893ab190d66" translate="yes" xml:space="preserve">
          <source>Return True if date is last day of the year.</source>
          <target state="translated">날짜가 연말 일이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4dad6176c6b689b5a574e25714e5a951bbad95e2" translate="yes" xml:space="preserve">
          <source>Return True if given object is boolean.</source>
          <target state="translated">주어진 객체가 부울이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bec2b5363ddd905b5b54a9114b90476fb53f2212" translate="yes" xml:space="preserve">
          <source>Return True if given object is complex.</source>
          <target state="translated">주어진 객체가 복잡한 경우 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ac0eb02ff909fc915249aaa5b3304645f836ac0" translate="yes" xml:space="preserve">
          <source>Return True if given object is float.</source>
          <target state="translated">주어진 객체가 float이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36bdf0a1a444ee69d01be7b0acae5cb235e7029d" translate="yes" xml:space="preserve">
          <source>Return True if given object is integer.</source>
          <target state="translated">주어진 객체가 정수이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e6d45ad55fa5f63071ce9f28bf38525b2b0247c9" translate="yes" xml:space="preserve">
          <source>Return True if given object is scalar, False otherwise</source>
          <target state="translated">주어진 객체가 스칼라이면 True를, 그렇지 않으면 False를 반환</target>
        </trans-unit>
        <trans-unit id="c99cf9b578ab39f17342e3385f08ad7093e3ee32" translate="yes" xml:space="preserve">
          <source>Return True if given object is scalar.</source>
          <target state="translated">주어진 객체가 스칼라이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="db33ac0e99f42946d5252a5af896ddd83a1df4ba" translate="yes" xml:space="preserve">
          <source>Return True if given value is scalar.</source>
          <target state="translated">주어진 값이 스칼라이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="74f4cb964eebb664571bcd73adc91fae37a122e4" translate="yes" xml:space="preserve">
          <source>Return True if hash(obj) will succeed, False otherwise.</source>
          <target state="translated">hash (obj)가 성공하면 True를, 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08be0c08201d2220b6185902c925a555a0bedf2f" translate="yes" xml:space="preserve">
          <source>Return True if left and right DataFrames are equal, False otherwise.</source>
          <target state="translated">왼쪽 및 오른쪽 DataFrames가 같으면 True를, 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="94d3918fc0e542f6c2eab9a493e905b743baf0aa" translate="yes" xml:space="preserve">
          <source>Return True if left and right Series are equal, False otherwise.</source>
          <target state="translated">왼쪽과 오른쪽 계열이 같으면 True를, 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1b507a0fa2547a0a800fe4df47c7d5295cfb5a72" translate="yes" xml:space="preserve">
          <source>Return True if one (or more) elements are True.</source>
          <target state="translated">하나 이상의 요소가 True이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bf9a1d8f701884b68f689dc1178706ee6b82a5b5" translate="yes" xml:space="preserve">
          <source>Return True if the IntervalArray is non-overlapping (no Intervals share points) and is either monotonic increasing or monotonic decreasing, else False</source>
          <target state="translated">IntervalArray가 겹치지 않고 (간격 공유 지점이 없음) 단조 증가 또는 단조 감소 인 경우 True를, 그렇지 않으면 False</target>
        </trans-unit>
        <trans-unit id="45621aef81a4f11e168c94357c05fd6b73801399" translate="yes" xml:space="preserve">
          <source>Return True if the IntervalArray is non-overlapping (no Intervals share points) and is either monotonic increasing or monotonic decreasing, else False.</source>
          <target state="translated">IntervalArray가 겹치지 않고 (Intervals 공유 지점 없음) 단조 증가 또는 단조 감소이면 True를 반환하고 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e9a5b7b923c065e40890e4691b39664d33338fb" translate="yes" xml:space="preserve">
          <source>Return True if the IntervalIndex has overlapping intervals, else False.</source>
          <target state="translated">IntervalIndex에 겹치는 간격이 있으면 True를, 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cebce6959f998e3e2e24a13043051940bbdeea4a" translate="yes" xml:space="preserve">
          <source>Return True if the IntervalIndex is non-overlapping (no Intervals share points) and is either monotonic increasing or monotonic decreasing, else False</source>
          <target state="translated">IntervalIndex가 겹치지 않고 (간격 공유 포인트 없음) 단조 증가 또는 단조 감소이면 True를, 그렇지 않으면 False를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="91c0d583b280527e072e6669d90a9837d7c5d12c" translate="yes" xml:space="preserve">
          <source>Return True if the codes are lexicographically sorted</source>
          <target state="translated">코드가 사전 순으로 정렬 된 경우 True를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0c20813959d71acda6b22dcf26bd126c25563b17" translate="yes" xml:space="preserve">
          <source>Return True if the codes are lexicographically sorted.</source>
          <target state="translated">코드가 사전 순으로 정렬 된 경우 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eeec5d9ba727942c6545e05a29a673238f8f3ae5" translate="yes" xml:space="preserve">
          <source>Return True if two arrays have the same shape and elements, False otherwise.</source>
          <target state="translated">두 배열의 모양과 요소가 동일한 경우 True를, 그렇지 않으면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4713202b2ce4b193e4b2cbdc59b5b941f23460cb" translate="yes" xml:space="preserve">
          <source>Return True if year is a leap year.</source>
          <target state="translated">연도가 윤년이면 True를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a0c9a6bf459d70721b9496ca0ff2ccd5192fc629" translate="yes" xml:space="preserve">
          <source>Return UTC DatetimeIndex if True (converting any tz-aware datetime.datetime objects as well).</source>
          <target state="translated">True이면 UTC DatetimeIndex를 반환합니다 (tz 인식 datetime.datetime 객체도 변환).</target>
        </trans-unit>
        <trans-unit id="cfc74041f1e854e04716b1cbc777bb48c004573d" translate="yes" xml:space="preserve">
          <source>Return UTC time tuple, compatible with time.localtime().</source>
          <target state="translated">time.localtime ()과 호환되는 UTC 시간 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7cec4887a1a349eb822a2c26d898074020a0a4a0" translate="yes" xml:space="preserve">
          <source>Return Unicode normal form. Equivalent to &lt;code&gt;unicodedata.normalize&lt;/code&gt;</source>
          <target state="translated">유니 코드 일반 형식을 반환합니다. &lt;code&gt;unicodedata.normalize&lt;/code&gt; 와 동일</target>
        </trans-unit>
        <trans-unit id="273e5efedc72e1d86994d0c410f9a96ef3ac57bf" translate="yes" xml:space="preserve">
          <source>Return Value Type</source>
          <target state="translated">반환 값 타입</target>
        </trans-unit>
        <trans-unit id="ce5055d259e333ca35ef2dd099128e1bcafe7c30" translate="yes" xml:space="preserve">
          <source>Return a (potentially unordered) list of the keys corresponding to the objects stored in the HDFStore.</source>
          <target state="translated">HDFStore에 저장된 객체에 해당하는 키 목록 (잠재적으로 정렬되지 않은)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="74231c007455ac4a7ba0fe32491741a1e423f72d" translate="yes" xml:space="preserve">
          <source>Return a (potentially unordered) list of the keys corresponding to the objects stored in the HDFStore. These are ABSOLUTE path-names (e.g. have the leading &amp;lsquo;/&amp;rsquo;</source>
          <target state="translated">HDFStore에 저장된 객체에 해당하는 키 목록 (잠재적으로 정렬되지 않은)을 반환합니다. 이들은 절대 경로 이름입니다 (예 : 선행 '/'</target>
        </trans-unit>
        <trans-unit id="cc532996765c4537affd77290c12195f30d5f19b" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple containing ISO year, week number, and weekday.</source>
          <target state="translated">ISO 연도, 주 번호 및 요일이 포함 된 3 개의 튜플을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bd3672fd2b09c7453e64a761a34147947e3dda8b" translate="yes" xml:space="preserve">
          <source>Return a DataFrame with components of each Timedelta.</source>
          <target state="translated">각 Timedelta의 구성 요소가 포함 된 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b16c1ff99a3afec1a15b00eeec159bf701c6c5db" translate="yes" xml:space="preserve">
          <source>Return a DataFrame, where the columns are the columns of self, and the values are the quantiles.</source>
          <target state="translated">열이 self의 열이고 값이 분위수 인 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e782cc15bd2c7e356bcaf05260754e50cdd0e675" translate="yes" xml:space="preserve">
          <source>Return a DataFrame, where the coulmns are groupby columns, and the values are its quantiles.</source>
          <target state="translated">열이 그룹 별 열이고 값이 분위수 인 DataFrame을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1871f95658ac3738bcaa46b1dff2200d58565e30" translate="yes" xml:space="preserve">
          <source>Return a Dataframe of the components of the Timedeltas.</source>
          <target state="translated">Timedeltas 구성 요소의 데이터 프레임을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="68fe55a007ebae6f1c35cdf2c951952a259b1aac" translate="yes" xml:space="preserve">
          <source>Return a MultiIndex reshaped to conform to the shapes given by n_repeat and n_shuffle.</source>
          <target state="translated">n_repeat 및 n_shuffle이 제공 한 모양에 맞게 재구성 된 MultiIndex를 반환합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
