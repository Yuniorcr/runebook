<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="90265cd5509975638bd7d7ea5df91b946b82dba8" translate="yes" xml:space="preserve">
          <source>These operations preserve time (hour, minute, etc) information by default. To reset time to midnight, use &lt;code&gt;normalize()&lt;/code&gt; before or after applying the operation (depending on whether you want the time information included in the operation).</source>
          <target state="translated">이러한 작업은 기본적으로 시간 (시, 분 등) 정보를 보존합니다. 시간을 자정으로 재설정하려면 작업을 적용하기 전이나 후에 &lt;code&gt;normalize()&lt;/code&gt; 를 사용 하십시오 (작업에 시간 정보를 포함할지 여부에 따라 다름).</target>
        </trans-unit>
        <trans-unit id="89ee842831bb43f380f4f0a01d1826bce3506640" translate="yes" xml:space="preserve">
          <source>These operations produce a pandas object of the same type as the left-hand-side input that is of dtype &lt;code&gt;bool&lt;/code&gt;. These &lt;code&gt;boolean&lt;/code&gt; objects can be used in indexing operations, see the section on &lt;a href=&quot;indexing#indexing-boolean&quot;&gt;Boolean indexing&lt;/a&gt;.</source>
          <target state="translated">이러한 작업은 dtype &lt;code&gt;bool&lt;/code&gt; 인 왼쪽 입력과 동일한 유형의 pandas 객체를 생성합니다 . 이러한 &lt;code&gt;boolean&lt;/code&gt; 객체는 인덱싱 작업에 사용할 수 있습니다 . &lt;a href=&quot;indexing#indexing-boolean&quot;&gt;부울 인덱싱&lt;/a&gt; 섹션을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="29a2422faf789405f6cc96f9041d35aab11d6b7c" translate="yes" xml:space="preserve">
          <source>These parameters will be passed to &lt;a href=&quot;https://pypi.org/project/tabulate&quot;&gt;tabulate&lt;/a&gt;.</source>
          <target state="translated">이러한 매개 변수는 &lt;a href=&quot;https://pypi.org/project/tabulate&quot;&gt;표로&lt;/a&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="ac3c218381d3c02c7a884419188313ebfc73c5e2" translate="yes" xml:space="preserve">
          <source>These parameters will be passed to DataFrame.to_csv.</source>
          <target state="translated">이 매개 변수는 DataFrame.to_csv로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="cbab4d6c746a29d1c09ce01a835a12e803a0ddbd" translate="yes" xml:space="preserve">
          <source>These parameters will be passed to numpy.all.</source>
          <target state="translated">이 매개 변수는 numpy.all에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="21fd8a1b624db1d374f9c53804aa1a8e6b8ceb3b" translate="yes" xml:space="preserve">
          <source>These parameters will be passed to numpy.any.</source>
          <target state="translated">이 매개 변수는 numpy.any로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="07b74a161db6eaa16221e80f7e36c0e2c2e1bc50" translate="yes" xml:space="preserve">
          <source>These rules are similar to how boolean expressions are used in pandas for indexing.</source>
          <target state="translated">이러한 규칙은 인덱싱을 위해 pandas에서 부울 표현식을 사용하는 방법과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="70dd7a93e731632750af950e145a45732bfe4525" translate="yes" xml:space="preserve">
          <source>These setting rules apply to all of &lt;code&gt;.loc/.iloc&lt;/code&gt;.</source>
          <target state="translated">이러한 설정 규칙은 모든 &lt;code&gt;.loc/.iloc&lt;/code&gt; 에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1ebf2924da12744226d3a52cd3aa262b41f4de82" translate="yes" xml:space="preserve">
          <source>These string methods can then be used to clean up the columns as needed. Here we are removing leading and trailing whitespaces, lower casing all names, and replacing any remaining whitespaces with underscores:</source>
          <target state="translated">그런 다음 이러한 문자열 메서드를 사용하여 필요에 따라 열을 정리할 수 있습니다. 여기에서는 선행 및 후행 공백을 제거하고 모든 이름을 소문자로 처리하고 나머지 공백을 밑줄로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="aacf7e7bff2a91a9e754d0483f60edf4eab5e44a" translate="yes" xml:space="preserve">
          <source>These will both raise errors, as you are trying to compare multiple values.:</source>
          <target state="translated">여러 값을 비교하려고 할 때 둘 다 오류가 발생합니다. :</target>
        </trans-unit>
        <trans-unit id="45a3e04b6549876d8b36c2ce90872576b2aca74c" translate="yes" xml:space="preserve">
          <source>These will split the DataFrame on its index (rows). We could also split by the columns:</source>
          <target state="translated">이것들은 DataFrame을 인덱스 (행)로 분할합니다. 우리는 또한 열로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="627428df0d28db98bd106cfdec011127bab05500" translate="yes" xml:space="preserve">
          <source>They are presented as a session in the Python terminal. &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; is used to present code. &lt;code&gt;&amp;hellip;&lt;/code&gt; is used for code continuing from the previous line. Output is presented immediately after the last line of code generating the output (no blank lines in between). Comments describing the examples can be added with blank lines before and after them.</source>
          <target state="translated">그들은 파이썬 터미널에서 세션으로 제시됩니다. &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 는 코드를 나타내는 데 사용됩니다. &lt;code&gt;&amp;hellip;&lt;/code&gt; 이전 줄에서 계속되는 코드에 사용됩니다. 출력은 출력을 생성하는 마지막 코드 줄 바로 뒤에 표시됩니다 (사이에 빈 줄 없음). 예제를 설명하는 주석은 앞뒤에 빈 줄을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2af05d3af44d17c526b8198923cce6acd2ebafba" translate="yes" xml:space="preserve">
          <source>They may be backed by none, one, or many NumPy arrays. For example, &lt;code&gt;pandas.Categorical&lt;/code&gt; is an extension array backed by two arrays, one for codes and one for categories. An array of IPv6 address may be backed by a NumPy structured array with two fields, one for the lower 64 bits and one for the upper 64 bits. Or they may be backed by some other storage type, like Python lists. Pandas makes no assumptions on how the data are stored, just that it can be converted to a NumPy array. The ExtensionArray interface does not impose any rules on how this data is stored. However, currently, the backing data cannot be stored in attributes called &lt;code&gt;.values&lt;/code&gt; or &lt;code&gt;._values&lt;/code&gt; to ensure full compatibility with pandas internals. But other names as &lt;code&gt;.data&lt;/code&gt;, &lt;code&gt;._data&lt;/code&gt;, &lt;code&gt;._items&lt;/code&gt;, &amp;hellip; can be freely used.</source>
          <target state="translated">NumPy 어레이가 없거나 하나 또는 여러 개로 지원 될 수 있습니다. 예를 들어, &lt;code&gt;pandas.Categorical&lt;/code&gt; 은 두 개의 배열 (코드 용과 범주 용 )로 지원되는 확장 배열입니다. IPv6 주소의 배열은 하위 64 비트에 대한 필드와 상위 64 비트에 대한 필드를 갖는 두 개의 필드를 가진 NumPy 구조화 배열에 의해 지원 될 수 있습니다. 또는 파이썬 목록과 같은 다른 스토리지 유형으로 지원 될 수 있습니다. Pandas는 데이터가 NumPy 배열로 변환 될 수 있다고 저장하는 방법에 대한 가정을하지 않습니다. ExtensionArray 인터페이스는이 데이터 저장 방법에 대한 규칙을 강요하지 않습니다. 그러나 현재 팬더 내부와의 완전한 호환성을 위해 백업 데이터를 &lt;code&gt;.values&lt;/code&gt; 또는 &lt;code&gt;._values&lt;/code&gt; 라는 속성에 저장할 수 없습니다 . 그러나 다른 이름은 &lt;code&gt;.data&lt;/code&gt; 입니다 . &lt;code&gt;._data&lt;/code&gt; , &lt;code&gt;._items&lt;/code&gt; ,&amp;hellip;는 자유롭게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21dd92b75b7b24d19fbf8d81f51694113fc3089a" translate="yes" xml:space="preserve">
          <source>They may be backed by none, one, or many NumPy arrays. For example, &lt;code&gt;pandas.Categorical&lt;/code&gt; is an extension array backed by two arrays, one for codes and one for categories. An array of IPv6 addresses may be backed by a NumPy structured array with two fields, one for the lower 64 bits and one for the upper 64 bits. Or they may be backed by some other storage type, like Python lists.</source>
          <target state="translated">NumPy 어레이가 없거나 하나 또는 여러 개로 지원 될 수 있습니다. 예를 들어, &lt;code&gt;pandas.Categorical&lt;/code&gt; 은 두 개의 배열 (코드 용과 범주 용 )로 지원되는 확장 배열입니다. IPv6 주소의 배열은 하위 64 비트에 대한 필드와 상위 64 비트에 대한 필드를 갖는 두 개의 필드를 가진 NumPy 구조화 배열에 의해 지원 될 수 있습니다. 또는 파이썬 목록과 같은 다른 스토리지 유형으로 지원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="786917075a48c15977c206c149dcd2c59b50eca9" translate="yes" xml:space="preserve">
          <source>Third Party</source>
          <target state="translated">타사</target>
        </trans-unit>
        <trans-unit id="5a97679e77509ef07d0c427ac155a7f685ebbd6b" translate="yes" xml:space="preserve">
          <source>Third moment of a probability density.</source>
          <target state="translated">확률 밀도의 세 번째 순간.</target>
        </trans-unit>
        <trans-unit id="6d0b45bda94d064baa13110ed1b4650ba3e2d71f" translate="yes" xml:space="preserve">
          <source>Third-party libraries may implement arrays or types satisfying this interface as well.</source>
          <target state="translated">타사 라이브러리는이 인터페이스를 만족하는 배열 또는 유형도 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c107e420aa2b6b9f6717df43880dd261cb088b7e" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;http://wavedatalab.github.io/datawithpython&quot;&gt;guide&lt;/a&gt; is an introduction to the data analysis process using the Python data ecosystem and an interesting open dataset. There are four sections covering selected topics as &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/munge.html&quot;&gt;munging data&lt;/a&gt;, &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/aggregate.html&quot;&gt;aggregating data&lt;/a&gt;, &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/visualize.html&quot;&gt;visualizing data&lt;/a&gt; and &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/timeseries.html&quot;&gt;time series&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;http://wavedatalab.github.io/datawithpython&quot;&gt;안내서&lt;/a&gt; 는 Python 데이터 에코 시스템과 흥미로운 공개 데이터 세트를 사용하는 데이터 분석 프로세스를 소개합니다. 로 선택한 주제를 다루는 네 개의 단원으로 구성되어 있습니다 &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/munge.html&quot;&gt;데이터를 munging&lt;/a&gt; , &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/aggregate.html&quot;&gt;데이터를 집계&lt;/a&gt; , &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/visualize.html&quot;&gt;데이터 시각화&lt;/a&gt; 및 &lt;a href=&quot;http://wavedatalab.github.io/datawithpython/timeseries.html&quot;&gt;시계열&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ae71e0767356c8aa111e381cd6eb9140b03e1a7" translate="yes" xml:space="preserve">
          <source>This Python syntax is &lt;strong&gt;not&lt;/strong&gt; allowed:</source>
          <target state="translated">이 Python 구문은 허용 &lt;strong&gt;되지&lt;/strong&gt; 않습니다 :</target>
        </trans-unit>
        <trans-unit id="b004edce6e405d4df99efb517e12898dda8cc4b0" translate="yes" xml:space="preserve">
          <source>This accessor is available only on data with &lt;code&gt;SparseDtype&lt;/code&gt;, and on the &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; class itself for creating a Series with sparse data from a scipy COO matrix with.</source>
          <target state="translated">이 접근은 단지와 데이터를 볼 수 있습니다 &lt;code&gt;SparseDtype&lt;/code&gt; 와의 &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 와 scipy COO 매트릭스에서 스파 스 데이터로 시리즈를 만들기위한 클래스 자체.</target>
        </trans-unit>
        <trans-unit id="8849a328bb33391d4dec9bd3f57345d60b2a9593" translate="yes" xml:space="preserve">
          <source>This also happens in some cases when you supply a NumPy array instead of a &lt;code&gt;Categorical&lt;/code&gt;: using an int array (e.g. &lt;code&gt;np.array([1,2,3,4])&lt;/code&gt;) will exhibit the same behavior, while using a string array (e.g. &lt;code&gt;np.array([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;a&quot;])&lt;/code&gt;) will not.</source>
          <target state="translated">이것은 &lt;code&gt;Categorical&lt;/code&gt; 대신 NumPy 배열을 제공하는 경우에도 발생 합니다. int 배열 (예 : &lt;code&gt;np.array([1,2,3,4])&lt;/code&gt; )을 사용하면 문자열 배열 ( 예를 들어 &lt;code&gt;np.array([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;a&quot;])&lt;/code&gt; )는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f61c90994ce7f4dd6384c99edd02cd5ea46bcc9a" translate="yes" xml:space="preserve">
          <source>This also means that &lt;code&gt;pd.NA&lt;/code&gt; cannot be used in a context where it is evaluated to a boolean, such as &lt;code&gt;if condition: ...&lt;/code&gt; where &lt;code&gt;condition&lt;/code&gt; can potentially be &lt;code&gt;pd.NA&lt;/code&gt;. In such cases, &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt;&lt;code&gt;isna()&lt;/code&gt;&lt;/a&gt; can be used to check for &lt;code&gt;pd.NA&lt;/code&gt; or &lt;code&gt;condition&lt;/code&gt; being &lt;code&gt;pd.NA&lt;/code&gt; can be avoided, for example by filling missing values beforehand.</source>
          <target state="translated">이것은 또한 &lt;code&gt;pd.NA&lt;/code&gt; 가 &lt;code&gt;if condition: ...&lt;/code&gt; 과 같이 부울로 평가되는 컨텍스트에서 사용될 수 없음을 의미합니다 . 여기서 &lt;code&gt;condition&lt;/code&gt; 은 잠재적으로 &lt;code&gt;pd.NA&lt;/code&gt; 일 수 있습니다 . 이러한 경우에 &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt; &lt;code&gt;isna()&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;pd.NA&lt;/code&gt; 를 확인 하거나 &lt;code&gt;pd.NA&lt;/code&gt; 가 되는 &lt;code&gt;condition&lt;/code&gt; 을 피할 수 있습니다 (예 : 누락 된 값을 미리 채움).</target>
        </trans-unit>
        <trans-unit id="77060c0f21898f14afc87a684415c904191bc232" translate="yes" xml:space="preserve">
          <source>This applies to both row and column labels for a &lt;code&gt;DataFrame&lt;/code&gt;</source>
          <target state="translated">이는 &lt;code&gt;DataFrame&lt;/code&gt; 의 행 및 열 레이블 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="52c4a438358f4b542b7273195e2bb0b92aa312a6" translate="yes" xml:space="preserve">
          <source>This applies to row labels as well</source>
          <target state="translated">이것은 행 레이블에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c1e0a4df3ebe24c715a7316827d3fe03572562c9" translate="yes" xml:space="preserve">
          <source>This array can be stored in a &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; like any NumPy array.</source>
          <target state="translated">이 배열은 NumPy 배열과 같은 &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; 에&lt;/a&gt; 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db8e87270b2522b3ee02ceeb48bca1a1b326ca32" translate="yes" xml:space="preserve">
          <source>This attribute can be checked or set with &lt;code&gt;allows_duplicate_labels&lt;/code&gt;, which indicates whether that object can have duplicate labels.</source>
          <target state="translated">이 속성은 개체가 중복 레이블을 가질 수 있는지 여부를 나타내는 &lt;code&gt;allows_duplicate_labels&lt;/code&gt; 로 확인하거나 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50d35539932f070039e75fbf30d9dea602703ae9" translate="yes" xml:space="preserve">
          <source>This attribute returns the day of the year on which the particular date occurs. The return value ranges between 1 to 365 for regular years and 1 to 366 for leap years.</source>
          <target state="translated">이 속성은 특정 날짜가 발생한 연도의 날짜를 반환합니다. 반환 값의 범위는 정규 연도의 경우 1-365, 윤년의 경우 1-366입니다.</target>
        </trans-unit>
        <trans-unit id="3ceb84a1a951ed99a328f5683732006c1051d61b" translate="yes" xml:space="preserve">
          <source>This behavior can be controlled by providing a list of types as &lt;code&gt;include&lt;/code&gt;/&lt;code&gt;exclude&lt;/code&gt; arguments. The special value &lt;code&gt;all&lt;/code&gt; can also be used:</source>
          <target state="translated">이 동작은 &lt;code&gt;include&lt;/code&gt; / &lt;code&gt;exclude&lt;/code&gt; 인수 로 유형 목록을 제공하여 제어 할 수 있습니다 . 특수 값 &lt;code&gt;all&lt;/code&gt; 도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b665be35b494d890eec12e220f1dc1cba84adf73" translate="yes" xml:space="preserve">
          <source>This behavior is now standard as of v0.22.0 and is consistent with the default in &lt;code&gt;numpy&lt;/code&gt;; previously sum/prod of all-NA or empty Series/DataFrames would return NaN. See &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/whatsnew/v0.22.0.html#whatsnew-0220&quot;&gt;v0.22.0 whatsnew&lt;/a&gt; for more.</source>
          <target state="translated">이 동작은 이제 v0.22.0의 표준이며 &lt;code&gt;numpy&lt;/code&gt; 의 기본값과 일치합니다 . 이전에는 모든 NA 또는 빈 Series / DataFrames의 합계 / 프로덕션이 NaN을 반환했습니다. 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/whatsnew/v0.22.0.html#whatsnew-0220&quot;&gt;v0.22.0의 새로운 기능을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a4f305586fbedfdb607819c813f052be788ac80" translate="yes" xml:space="preserve">
          <source>This can also be expressed using &lt;code&gt;.iloc&lt;/code&gt;, by explicitly getting locations on the indexers, and using &lt;em&gt;positional&lt;/em&gt; indexing to select things.</source>
          <target state="translated">이것은 또한 사용하여 표현 될 수 &lt;code&gt;.iloc&lt;/code&gt; 을 명시 적으로 인덱서에 위치를 받고, 및 사용하여 &lt;em&gt;위치&lt;/em&gt; 일을 선택하는 색인.</target>
        </trans-unit>
        <trans-unit id="8a26d702b0b41c0e042fc5a6dc19dfef551357a7" translate="yes" xml:space="preserve">
          <source>This can be a convenient way to extend pandas objects without subclassing them. If you write a custom accessor, make a pull request adding it to our &lt;a href=&quot;../ecosystem#ecosystem&quot;&gt;Pandas ecosystem&lt;/a&gt; page.</source>
          <target state="translated">팬더 객체를 서브 클래 싱하지 않고 확장 할 수있는 편리한 방법입니다. 사용자 정의 접근자를 작성하는 경우 &lt;a href=&quot;../ecosystem#ecosystem&quot;&gt;Pandas 생태계&lt;/a&gt; 페이지에 추가 요청을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="645ca12ebe563c1ea049354b367146f11942b89e" translate="yes" xml:space="preserve">
          <source>This can be controlled with the &lt;code&gt;min_count&lt;/code&gt; parameter</source>
          <target state="translated">이것은 &lt;code&gt;min_count&lt;/code&gt; 매개 변수 로 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a972cf91562ead5a73bdc642f640002075b478ac" translate="yes" xml:space="preserve">
          <source>This can be controlled with the &lt;code&gt;min_count&lt;/code&gt; parameter. For example, if you&amp;rsquo;d like the sum of an empty series to be NaN, pass &lt;code&gt;min_count=1&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;min_count&lt;/code&gt; 매개 변수 로 제어 할 수 있습니다 . 예를 들어, 빈 계열의 합계를 NaN으로하려면 &lt;code&gt;min_count=1&lt;/code&gt; 을 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3e3c85f106c0cc6e801f0fb29cbef6aa9f3affc" translate="yes" xml:space="preserve">
          <source>This can be convenient if you do not want to pass &lt;code&gt;regex=True&lt;/code&gt; every time you want to use a regular expression.</source>
          <target state="translated">&lt;code&gt;regex=True&lt;/code&gt; 을 사용할 때마다 regex = True 를 전달하지 않으려는 경우 편리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6f098eb2afcd07361284cbf0463ec77d2bcaa68" translate="yes" xml:space="preserve">
          <source>This can be done by passsing &amp;lsquo;backend.module&amp;rsquo; as the argument &lt;code&gt;backend&lt;/code&gt; in &lt;code&gt;plot&lt;/code&gt; function. For example:</source>
          <target state="translated">이것은 인수로 'backend.module을'passsing하여 수행 할 수 있습니다 &lt;code&gt;backend&lt;/code&gt; 에서 &lt;code&gt;plot&lt;/code&gt; 기능. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="28a5ab109236a96c14157ab47027e467e88b1f93" translate="yes" xml:space="preserve">
          <source>This can be done during construction by specifying &lt;code&gt;dtype=&quot;category&quot;&lt;/code&gt; in the &lt;code&gt;DataFrame&lt;/code&gt; constructor:</source>
          <target state="translated">이는 &lt;code&gt;DataFrame&lt;/code&gt; 생성자 에서 &lt;code&gt;dtype=&quot;category&quot;&lt;/code&gt; 를 지정하여 생성하는 동안 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fdb96b62089a3fe3cbef045c8d7c6fb2831a07e7" translate="yes" xml:space="preserve">
          <source>This can provide speedups if you are deserialising a large amount of numeric data:</source>
          <target state="translated">이렇게하면 많은 양의 숫자 데이터를 역 직렬화하는 경우 속도가 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dcfe7fa582e3c98e7daadbd6b0a00e6df26ca09" translate="yes" xml:space="preserve">
          <source>This can significantly reduce the time it takes to locally run tests before submitting a pull request.</source>
          <target state="translated">따라서 끌어 오기 요청을 제출하기 전에 로컬로 테스트를 실행하는 데 걸리는 시간이 크게 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="ae59a71eac9bdb48bcbd5032791a55bd96ae6411" translate="yes" xml:space="preserve">
          <source>This case is handled identically to a dict of arrays.</source>
          <target state="translated">이 경우는 배열의 사전과 동일하게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="0da14810815b086a8cebb17d38c2f95117553c0a" translate="yes" xml:space="preserve">
          <source>This changes your working directory to the shiny-new-feature branch. Keep any changes in this branch specific to one bug or feature so it is clear what the branch brings to &lt;em&gt;pandas&lt;/em&gt;. You can have many shiny-new-features and switch in between them using the git checkout command.</source>
          <target state="translated">작업 디렉토리가 반짝이는 새 기능 브랜치로 변경됩니다. 이 브랜치의 변경 사항을 하나의 버그 나 기능과 관련하여 유지하면 브랜치가 &lt;em&gt;팬더&lt;/em&gt; 에게 가져다주는 것이 분명해집니다 . git checkout 명령을 사용하여 여러 가지 새로운 기능을 사용할 수 있고 그 사이를 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25b9aff8eefc546b605be03493ee8149a2bf075d" translate="yes" xml:space="preserve">
          <source>This checks whether an object implements the pandas extension array interface. In pandas, this includes:</source>
          <target state="translated">객체가 pandas 확장 배열 인터페이스를 구현하는지 여부를 확인합니다. 팬더에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e40033ce141993f2680ee35676e37500971071cd" translate="yes" xml:space="preserve">
          <source>This class does not inherit from &amp;lsquo;abc.ABCMeta&amp;rsquo; for performance reasons. Methods and properties required by the interface raise &lt;code&gt;pandas.errors.AbstractMethodError&lt;/code&gt; and no &lt;code&gt;register&lt;/code&gt; method is provided for registering virtual subclasses.</source>
          <target state="translated">이 클래스는 성능상의 이유로 'abc.ABCMeta'에서 상속되지 않습니다. 인터페이스 인상에 필요한 방법 및 특성 &lt;code&gt;pandas.errors.AbstractMethodError&lt;/code&gt; 없이 &lt;code&gt;register&lt;/code&gt; 방법은 가상의 서브 클래스를 등록하기 위해 제공된다.</target>
        </trans-unit>
        <trans-unit id="ba8602ada00477138f8cd047562fadd3af3664b6" translate="yes" xml:space="preserve">
          <source>This class is useful for specifying the type of a &lt;code&gt;Categorical&lt;/code&gt; independent of the values. See &lt;a href=&quot;../../user_guide/categorical#categorical-categoricaldtype&quot;&gt;CategoricalDtype&lt;/a&gt; for more.</source>
          <target state="translated">이 클래스는 값과 관계 없이 &lt;code&gt;Categorical&lt;/code&gt; 유형을 지정하는 데 유용 합니다. 자세한 내용은 &lt;a href=&quot;../../user_guide/categorical#categorical-categoricaldtype&quot;&gt;CategoricalDtype&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0bfe66f05011d9a46d53a21eabf378b87fe94c30" translate="yes" xml:space="preserve">
          <source>This class provides all the array-like functionality. ExtensionArrays are limited to 1 dimension. An ExtensionArray is linked to an ExtensionDtype via the &lt;code&gt;dtype&lt;/code&gt; attribute.</source>
          <target state="translated">이 클래스는 모든 배열과 같은 기능을 제공합니다. ExtensionArray는 1 차원으로 제한됩니다. ExtensionArray는 &lt;code&gt;dtype&lt;/code&gt; 속성을 통해 ExtensionDtype에 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="4234764bf8145806a95a29ef25e69ef423a2065c" translate="yes" xml:space="preserve">
          <source>This command will catch any stylistic errors in your changes specifically, but be beware it may not catch all of them. For example, if you delete the only usage of an imported function, it is stylistically incorrect to import an unused function. However, style-checking the diff will not catch this because the actual import is not part of the diff. Thus, for completeness, you should run this command, though it will take longer:</source>
          <target state="translated">이 명령은 특히 변경 사항의 문체 오류를 포착하지만 모든 오류를 포착하지는 않을 수 있습니다. 예를 들어, 가져온 함수의 사용법 만 삭제하면 사용하지 않는 함수를 가져 오는 것이 문체 적으로 올바르지 않습니다. 그러나 실제 가져 오기가 diff의 일부가 아니기 때문에 diff의 스타일을 검사하면이를 포착 할 수 없습니다. 따라서 완성도를 높이려면이 명령을 실행해야하지만 시간이 더 오래 걸립니다.</target>
        </trans-unit>
        <trans-unit id="2be2d7d89a7ebfbd53122e55efc8f0ff96c5a6e4" translate="yes" xml:space="preserve">
          <source>This constructor is useful if you already have codes and categories/dtype and so do not need the (computation intensive) factorization step, which is usually done on the constructor.</source>
          <target state="translated">이 생성자는 이미 코드와 범주 / dtype을 가지고 있으므로 일반적으로 생성자에서 수행되는 계산 집약적 분해 단계가 필요하지 않은 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ca4bb1584873ae95cb3cd4b90c5a0ec67c6a0bf6" translate="yes" xml:space="preserve">
          <source>This conversion is likewise done column by column:</source>
          <target state="translated">이 변환은 마찬가지로 열 단위로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="7dec02d8d5cabd0f06d7d51530ba08066b6cdf37" translate="yes" xml:space="preserve">
          <source>This converts a datetime-like string</source>
          <target state="translated">날짜 / 시간 같은 문자열을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5791191ae8c804e4b683c9221ba32aa9936950c1" translate="yes" xml:space="preserve">
          <source>This converts a float representing a Unix epoch in units of seconds</source>
          <target state="translated">이것은 유닉스 시대를 나타내는 float를 초 단위로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="90070cf7ec3cc1d2b37c7353dbfadf6e4a1395b2" translate="yes" xml:space="preserve">
          <source>This converts an int representing a Unix-epoch in units of seconds and for a particular timezone</source>
          <target state="translated">이것은 유닉스 시대를 나타내는 int를 초 단위로 그리고 특정 시간대로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="123232260ef147cdb45eee5b8ebd5517d716a78a" translate="yes" xml:space="preserve">
          <source>This creates a parquet file with just the two expected columns, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. If your &lt;code&gt;DataFrame&lt;/code&gt; has a custom index, you won&amp;rsquo;t get it back when you load this file into a &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="translated">이렇게하면 두 개의 예상 열인 &lt;code&gt;a&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 만있는 쪽모이 세공 파일이 생성 됩니다. 귀하의 경우 &lt;code&gt;DataFrame&lt;/code&gt; 는 사용자 정의 인덱스가, 당신은 당신이에이 파일을로드 할 때 백업받지 않습니다 &lt;code&gt;DataFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa27786e269ae3c59089b36a164b220839ab79c0" translate="yes" xml:space="preserve">
          <source>This creates the directory &lt;code&gt;pandas-yourname&lt;/code&gt; and connects your repository to the upstream (main project) &lt;em&gt;pandas&lt;/em&gt; repository.</source>
          <target state="translated">이는 &lt;code&gt;pandas-yourname&lt;/code&gt; 디렉토리를 작성하고 저장소를 업스트림 (주 프로젝트) &lt;em&gt;pandas&lt;/em&gt; 저장소에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cafef2755b3180c5eb4ec93821b554d54605b7ed" translate="yes" xml:space="preserve">
          <source>This default behaviour can be overridden using the &lt;code&gt;result_type&lt;/code&gt;, which accepts three options: &lt;code&gt;reduce&lt;/code&gt;, &lt;code&gt;broadcast&lt;/code&gt;, and &lt;code&gt;expand&lt;/code&gt;. These will determine how list-likes return values expand (or not) to a &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="translated">이 기본 동작은 &lt;code&gt;reduce&lt;/code&gt; , &lt;code&gt;broadcast&lt;/code&gt; , &lt;code&gt;expand&lt;/code&gt; 세 가지 옵션을 허용 하는 &lt;code&gt;result_type&lt;/code&gt; 을 사용하여 재정의 할 수 있습니다 . 이것들은 list-likes 반환 값이 &lt;code&gt;DataFrame&lt;/code&gt; 으로 확장되거나 확장되지 않는 방법을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="db658b59d1d9b2f7bbc528e995b2fa539b153bfb" translate="yes" xml:space="preserve">
          <source>This deliberate decision was made to prevent ambiguities and subtle bugs (many users reported finding bugs when the API change was made to stop &amp;ldquo;falling back&amp;rdquo; on position-based indexing).</source>
          <target state="translated">이 의도적 인 결정은 모호성과 미묘한 버그를 방지하기위한 것입니다 (많은 사용자가 위치 기반 인덱싱에서 &quot;폴백&quot;을 중지하기 위해 API가 변경되었을 때 버그를 발견했다고보고했습니다).</target>
        </trans-unit>
        <trans-unit id="53419c584c2d55c4f954bd27ca0251fd712e4a40" translate="yes" xml:space="preserve">
          <source>This differs from how &lt;code&gt;np.nan&lt;/code&gt; behaves in logical operations. pandas treated &lt;code&gt;np.nan&lt;/code&gt; is &lt;em&gt;always false in the output&lt;/em&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;np.nan&lt;/code&gt; 이 논리 연산에서 작동 하는 방식과 다릅니다 . &lt;code&gt;np.nan&lt;/code&gt; 으로 처리 된 pandas 는 &lt;em&gt;출력에서 항상 false입니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fc40de5d2dffe4b2c35fcdebd0dbe04e22adbe6f" translate="yes" xml:space="preserve">
          <source>This dispatches to get_indexer or get_indexer_non_unique as appropriate.</source>
          <target state="translated">이는 get_indexer 또는 get_indexer_non_unique에 적절하게 디스패치합니다.</target>
        </trans-unit>
        <trans-unit id="a7f0084681a1bdee0076d18ddc3792283f2e069f" translate="yes" xml:space="preserve">
          <source>This dispatches to get_indexer or get_indexer_nonunique as appropriate.</source>
          <target state="translated">이것은 적절하게 get_indexer 또는 get_indexer_nonunique에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="14c2aa1066f2ba47aa41385593090b00a919a0c0" translate="yes" xml:space="preserve">
          <source>This document is written as a Jupyter Notebook, and can be viewed or downloaded &lt;a href=&quot;http://nbviewer.ipython.org/github/pandas-dev/pandas/blob/master/doc/source/style.ipynb&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이 문서는 Jupyter Notebook으로 작성되었으며 &lt;a href=&quot;http://nbviewer.ipython.org/github/pandas-dev/pandas/blob/master/doc/source/style.ipynb&quot;&gt;여기에서&lt;/a&gt; 보거나 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf46649a8b9f11f107035970443f2ba927cd0a38" translate="yes" xml:space="preserve">
          <source>This document is written as a Jupyter Notebook, and can be viewed or downloaded &lt;a href=&quot;https://nbviewer.ipython.org/github/pandas-dev/pandas/blob/master/doc/source/user_guide/style.ipynb&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이 문서는 Jupyter 노트북으로 작성되었으며 &lt;a href=&quot;https://nbviewer.ipython.org/github/pandas-dev/pandas/blob/master/doc/source/user_guide/style.ipynb&quot;&gt;여기에서&lt;/a&gt; 보거나 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1107ee9103e7dd51d7ab70b216935426ff3a1d30" translate="yes" xml:space="preserve">
          <source>This document provides a few recommendations for scaling your analysis to larger datasets. It&amp;rsquo;s a complement to &lt;a href=&quot;enhancingperf#enhancingperf&quot;&gt;Enhancing performance&lt;/a&gt;, which focuses on speeding up analysis for datasets that fit in memory.</source>
          <target state="translated">이 문서는 분석을 더 큰 데이터 세트로 확장하기위한 몇 가지 권장 사항을 제공합니다. 메모리에 맞는 데이터 세트에 대한 분석 속도를 높이는 데 초점을 맞춘 &lt;a href=&quot;enhancingperf#enhancingperf&quot;&gt;성능 향상을&lt;/a&gt; 보완합니다 .</target>
        </trans-unit>
        <trans-unit id="62f108582b86fea00ee642ea87ae338af8431682" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t work because the categories are not the same:</source>
          <target state="translated">카테고리가 동일하지 않기 때문에 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b38c2cd02916e0a31b74857add0b7e99752703c" translate="yes" xml:space="preserve">
          <source>This dtype implements the pandas ExtensionDtype interface.</source>
          <target state="translated">이 dtype은 pandas ExtensionDtype 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="950b78e8eb0701e759bcf30d36f7ce166c5bf51f" translate="yes" xml:space="preserve">
          <source>This enables nice expressions like this:</source>
          <target state="translated">이렇게하면 다음과 같은 멋진 표현이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="25c9280747c310a812ebae48bfb53dbe169f04b3" translate="yes" xml:space="preserve">
          <source>This enables operations like &lt;code&gt;.astype(name)&lt;/code&gt; for the name of the ExtensionDtype.</source>
          <target state="translated">이렇게하면 ExtensionDtype 이름에 &lt;code&gt;.astype(name)&lt;/code&gt; 과 같은 작업이 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="90bbc7ecb542828d01f8c3c69605343a0335da83" translate="yes" xml:space="preserve">
          <source>This error message contains the labels that are duplicated, and the numeric positions of all the duplicates (including the &amp;ldquo;original&amp;rdquo;) in the &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt;</source>
          <target state="translated">이 오류 메시지에는 중복 된 레이블과 &lt;code&gt;Series&lt;/code&gt; 또는 &lt;code&gt;DataFrame&lt;/code&gt; 의 모든 중복 항목 ( &quot;원본&quot;포함)의 숫자 위치가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e804f04cec9369679213c3e57425897ae0e59326" translate="yes" xml:space="preserve">
          <source>This example creates and reads a large CSV file with a column that contains</source>
          <target state="translated">이 예에서는 다음이 포함 된 열이있는 큰 CSV 파일을 만들고 읽습니다.</target>
        </trans-unit>
        <trans-unit id="51de29eb6a67003411932538aff39519be3777da" translate="yes" xml:space="preserve">
          <source>This example creates and reads a large CSV file with a column that contains &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">이 예제는 &lt;code&gt;int&lt;/code&gt; 및 &lt;code&gt;str&lt;/code&gt; 을 포함하는 열이있는 큰 CSV 파일을 작성하고 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="10c0236cad89dbed797da0076f442c08e44fae6d" translate="yes" xml:space="preserve">
          <source>This example draws a basic bootstrap plot for a Series.</source>
          <target state="translated">이 예제는 시리즈에 대한 기본 부트 스트랩 플롯을 그립니다.</target>
        </trans-unit>
        <trans-unit id="80a04a497f04bf69c38dae0187a5a16e45012fdd" translate="yes" xml:space="preserve">
          <source>This example draws a histogram based on the length and width of some animals, displayed in three bins</source>
          <target state="translated">이 예제는 일부 동물의 길이와 너비를 기준으로 히스토그램을 3 개의 빈으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5be5624659b7fd664faf7ccc7e55c65fea85943a" translate="yes" xml:space="preserve">
          <source>This example shows comparing two DataFrames that are equal but with columns of differing dtypes.</source>
          <target state="translated">이 예제에서는 같지만 dtype이 다른 열과 두 개의 DataFrame을 비교하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2b7f39e73cb18602c6357dd83256bd88582d42e4" translate="yes" xml:space="preserve">
          <source>This feature requires version 0.10.0 or later of the &lt;code&gt;pandas-gbq&lt;/code&gt; package. It also requires the &lt;code&gt;google-cloud-bigquery-storage&lt;/code&gt; and &lt;code&gt;fastavro&lt;/code&gt; packages.</source>
          <target state="translated">이 기능에는 &lt;code&gt;pandas-gbq&lt;/code&gt; 패키지 버전 0.10.0 이상이 필요 합니다. 또한 &lt;code&gt;google-cloud-bigquery-storage&lt;/code&gt; 및 &lt;code&gt;fastavro&lt;/code&gt; 패키지가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="71e2ad9b0b3450815143d2767ba902545c3a6297" translate="yes" xml:space="preserve">
          <source>This feature was added in &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/whatsnew/v1.1.0.html#whatsnew-110-dataframe-or-series-comparing&quot;&gt;V1.1.0&lt;/a&gt;.</source>
          <target state="translated">이 기능은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/whatsnew/v1.1.0.html#whatsnew-110-dataframe-or-series-comparing&quot;&gt;V1.1.0&lt;/a&gt; 에서 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4b8d0aafac77f75100febe73e08f0d935abb4320" translate="yes" xml:space="preserve">
          <source>This first example aggregates values by taking the sum.</source>
          <target state="translated">이 첫 번째 예는 합계를 취하여 값을 집계합니다.</target>
        </trans-unit>
        <trans-unit id="8a62aecc420035dc6f65ef40e8f6f10570e0b116" translate="yes" xml:space="preserve">
          <source>This format can be set as an option as well &lt;code&gt;pd.set_option('io.hdf.default_format','table')&lt;/code&gt; to enable &lt;code&gt;put/append/to_hdf&lt;/code&gt; to by default store in the &lt;code&gt;table&lt;/code&gt; format.</source>
          <target state="translated">이 형식은 &lt;code&gt;pd.set_option('io.hdf.default_format','table')&lt;/code&gt; 뿐만 아니라 옵션으로 설정 하여 기본적으로 &lt;code&gt;table&lt;/code&gt; 형식으로 &lt;code&gt;put/append/to_hdf&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de925fbe7cba66a8ca9664b7892cb71f447e93b6" translate="yes" xml:space="preserve">
          <source>This function allows two Series or DataFrames to be compared against each other to see if they have the same shape and elements. NaNs in the same location are considered equal.</source>
          <target state="translated">이 기능을 사용하면 두 개의 Series 또는 DataFrame을 서로 비교하여 동일한 모양과 요소를 갖는지 확인할 수 있습니다. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 같은 위치에있는 NaN은 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="9a7278f934da03c436ff662730b85ac667cb937f" translate="yes" xml:space="preserve">
          <source>This function allows two Series or DataFrames to be compared against each other to see if they have the same shape and elements. NaNs in the same location are considered equal. The column headers do not need to have the same type, but the elements within the columns must be the same dtype.</source>
          <target state="translated">이 함수를 사용하면 두 Series 또는 DataFrame을 서로 비교하여 모양과 요소가 동일한 지 확인할 수 있습니다. 같은 위치에있는 NaN은 동일한 것으로 간주됩니다. 열 헤더는 동일한 유형을 가질 필요는 없지만 열 내의 요소는 동일한 dtype이어야합니다.</target>
        </trans-unit>
        <trans-unit id="30e16146ea218d5ef5aebf96bd656944c4e5ec89" translate="yes" xml:space="preserve">
          <source>This function assumes that the data is sorted, so use at your own peril</source>
          <target state="translated">이 함수는 데이터가 정렬되어 있다고 가정하므로 자신의 위험에 따라 사용하십시오</target>
        </trans-unit>
        <trans-unit id="92fc8d00ac1c736d8a4eab84b78ef9cff6071526" translate="yes" xml:space="preserve">
          <source>This function can be used to style the entire table, columns, rows or specific HTML selectors.</source>
          <target state="translated">이 함수는 전체 테이블, 열, 행 또는 특정 HTML 선택기의 스타일을 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad995119a018c7a8d14af27d9cb3c12d32d09b5f" translate="yes" xml:space="preserve">
          <source>This function cannot be used with all column types. For example, when specifying columns with</source>
          <target state="translated">이 함수는 모든 열 유형에 사용할 수 없습니다. 예를 들어 다음을 사용하여 열을 지정할 때</target>
        </trans-unit>
        <trans-unit id="84a4649793ebcfe190e1dde69e7856803c8018f8" translate="yes" xml:space="preserve">
          <source>This function cannot be used with all column types. For example, when specifying columns with &lt;code&gt;object&lt;/code&gt; or &lt;code&gt;category&lt;/code&gt; dtypes, &lt;code&gt;TypeError&lt;/code&gt; is raised.</source>
          <target state="translated">이 함수는 모든 열 유형에 사용할 수 없습니다. 예를 들어 &lt;code&gt;object&lt;/code&gt; 또는 &lt;code&gt;category&lt;/code&gt; dtypes로 열을 지정 하면 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="af383e74cb46472608263bbad0c530811202d786" translate="yes" xml:space="preserve">
          <source>This function in the pandas-gbq library.</source>
          <target state="translated">이 기능은 pandas-gbq 라이브러리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="28dbf7b53a9fe3cf52ba2c402639f407f83c9079" translate="yes" xml:space="preserve">
          <source>This function is a convenience wrapper around &lt;code&gt;read_sql_table&lt;/code&gt; and &lt;code&gt;read_sql_query&lt;/code&gt; (for backward compatibility). It will delegate to the specific function depending on the provided input. A SQL query will be routed to &lt;code&gt;read_sql_query&lt;/code&gt;, while a database table name will be routed to &lt;code&gt;read_sql_table&lt;/code&gt;. Note that the delegated function might have more specific notes about their functionality not listed here.</source>
          <target state="translated">이 함수는 &lt;code&gt;read_sql_table&lt;/code&gt; 및 &lt;code&gt;read_sql_query&lt;/code&gt; (이전 버전과의 호환성을 위해) 주위의 편리한 래퍼 입니다. 제공된 입력에 따라 특정 기능에 위임합니다. SQL 쿼리는 &lt;code&gt;read_sql_query&lt;/code&gt; 로 라우팅되고 데이터베이스 테이블 이름은 &lt;code&gt;read_sql_table&lt;/code&gt; 로 라우팅됩니다 . 위임 된 함수에는 여기에 나열되지 않은 기능에 대한보다 구체적인 메모가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7673e5ba7fb0a93e29f921c282d4a163204527a7" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;(left &amp;lt;= ser) &amp;amp; (ser &amp;lt;= right)&lt;/code&gt;</source>
          <target state="translated">이 함수는 &lt;code&gt;(left &amp;lt;= ser) &amp;amp; (ser &amp;lt;= right)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d4985ecb24b8b0c8be19147f627b7776d2460cd" translate="yes" xml:space="preserve">
          <source>This function is intended to compare two DataFrames and output any differences. Is is mostly intended for use in unit tests. Additional parameters allow varying the strictness of the equality checks performed.</source>
          <target state="translated">이 함수는 두 개의 DataFrame을 비교하여 차이점을 출력하기위한 것입니다. Is는 주로 단위 테스트에 사용됩니다. 추가 매개 변수를 사용하면 수행 된 동등성 검사의 엄격 성을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45a85b044c5fe432ec1bdedd6e7da75edb7a1dbe" translate="yes" xml:space="preserve">
          <source>This function is internal and should not be exposed in the public API.</source>
          <target state="translated">이 함수는 내부 기능이므로 공개 API에 노출되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b054bdeb09c4387f6beab290e83c10e7b3218b61" translate="yes" xml:space="preserve">
          <source>This function is often used along with discretization functions like &lt;code&gt;cut&lt;/code&gt;:</source>
          <target state="translated">이 함수는 &lt;code&gt;cut&lt;/code&gt; 과 같은 이산화 함수와 함께 자주 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ece71ffa3c13fa661cb9fdbf3c2fca3e9ecaf0a" translate="yes" xml:space="preserve">
          <source>This function is used to count the number of times a particular regex pattern is repeated in each of the string elements of the &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 의 각 문자열 요소에서 특정 정규식 패턴이 반복되는 횟수를 계산하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="390a6a3d35813a6d784af172c671254a7e6d7009" translate="yes" xml:space="preserve">
          <source>This function is useful to massage a DataFrame into a format where one or more columns are identifier variables (</source>
          <target state="translated">이 함수는 하나 이상의 열이 식별자 변수 (</target>
        </trans-unit>
        <trans-unit id="6928a7b14b0af5c2ccafa7ce1e25e9ec4c9c396e" translate="yes" xml:space="preserve">
          <source>This function is useful to massage a DataFrame into a format where one or more columns are identifier variables (&lt;code&gt;id_vars&lt;/code&gt;), while all other columns, considered measured variables (&lt;code&gt;value_vars&lt;/code&gt;), are &amp;ldquo;unpivoted&amp;rdquo; to the row axis, leaving just two non-identifier columns, &amp;lsquo;variable&amp;rsquo; and &amp;lsquo;value&amp;rsquo;.</source>
          <target state="translated">이 함수는 하나 이상의 열이 식별자 변수 ( &lt;code&gt;id_vars&lt;/code&gt; ) 인 형식으로 DataFrame을 마사지하는 데 유용 하지만 측정 변수 ( &lt;code&gt;value_vars&lt;/code&gt; )로 간주되는 다른 모든 열 은 행 축에 대해 &quot; 피벗 해제되지 않음&quot;(비 식별자 제외) '변수'및 '값'열</target>
        </trans-unit>
        <trans-unit id="80efe6b8a4481fb52eda1b582c9e6e79c6386922" translate="yes" xml:space="preserve">
          <source>This function is useful to massage a DataFrame into a format where one or more columns are identifier variables (&lt;code&gt;id_vars&lt;/code&gt;), while all other columns, considered measured variables (&lt;code&gt;value_vars&lt;/code&gt;), are &amp;ldquo;unpivoted&amp;rdquo; to the row axis, leaving just two non-identifier columns, &amp;lsquo;variable&amp;rsquo; and &amp;lsquo;value&amp;rsquo;. .. versionadded:: 0.20.0</source>
          <target state="translated">이 함수는 하나 이상의 열이 식별자 변수 ( &lt;code&gt;id_vars&lt;/code&gt; ) 인 형식으로 DataFrame을 마사지하는 데 유용 하지만 측정 변수 ( &lt;code&gt;value_vars&lt;/code&gt; )로 간주되는 다른 모든 열 은 행 축에 대해 &quot; 피벗 해제 &quot;되어 비 식별자를 두 개만 남겨 둡니다. '변수'및 '값'열 .. 버전 추가 :: 0.20.0</target>
        </trans-unit>
        <trans-unit id="8021234795f5745240d46e7b1e687b3a7c3fd79f" translate="yes" xml:space="preserve">
          <source>This function is useful to plot lines using DataFrame&amp;rsquo;s values as coordinates.</source>
          <target state="translated">이 함수는 DataFrame의 값을 좌표로 사용하여 선을 그리는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="065f774b74be2e4515773ed0450f2dbe902a3063" translate="yes" xml:space="preserve">
          <source>This function modifies the global &lt;code&gt;matplotlib.units.registry&lt;/code&gt; dictionary. Pandas adds custom converters for</source>
          <target state="translated">이 함수는 글로벌 &lt;code&gt;matplotlib.units.registry&lt;/code&gt; 사전을 수정합니다 . Pandas는</target>
        </trans-unit>
        <trans-unit id="38ce19bc178df791004c5a50a648422d36a8e651" translate="yes" xml:space="preserve">
          <source>This function modifies the global &lt;code&gt;matplotlib.units.registry&lt;/code&gt; dictionary. pandas adds custom converters for</source>
          <target state="translated">이 함수는 전역 &lt;code&gt;matplotlib.units.registry&lt;/code&gt; 사전을 수정합니다 . pandas는 사용자 정의 변환기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b162930b7759c083c844cea5c62308d93d40782a" translate="yes" xml:space="preserve">
          <source>This function only applies to elements that are all numeric.</source>
          <target state="translated">이 기능은 모두 숫자 인 요소에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="bae286ac01b6cf840f715daa6c31dcaa4001c11c" translate="yes" xml:space="preserve">
          <source>This function requires either the &lt;a href=&quot;https://pypi.org/project/fastparquet&quot;&gt;fastparquet&lt;/a&gt; or &lt;a href=&quot;https://arrow.apache.org/docs/python/&quot;&gt;pyarrow&lt;/a&gt; library.</source>
          <target state="translated">이 기능에는 &lt;a href=&quot;https://pypi.org/project/fastparquet&quot;&gt;고속 마루&lt;/a&gt; 또는 &lt;a href=&quot;https://arrow.apache.org/docs/python/&quot;&gt;pyarrow&lt;/a&gt; 라이브러리 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="2014ceb32fb8f839a848ccd5d6c62591535ad519" translate="yes" xml:space="preserve">
          <source>This function requires that the elements have the same dtype as their respective elements in the other Series or DataFrame. However, the column labels do not need to have the same type, as long as they are still considered equal.</source>
          <target state="translated">이 함수를 사용하려면 요소가 다른 Series 또는 DataFrame의 각 요소와 동일한 dtype을 가져야합니다. 그러나 열 레이블이 여전히 동일한 것으로 간주되는 한 동일한 유형을 가질 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="1ea4ae09a1d337a8d87959674d6bcc89b838db4d" translate="yes" xml:space="preserve">
          <source>This function requires the &lt;a href=&quot;https://pandas-gbq.readthedocs.io&quot;&gt;pandas-gbq package&lt;/a&gt;.</source>
          <target state="translated">이 기능에는 &lt;a href=&quot;https://pandas-gbq.readthedocs.io&quot;&gt;pandas-gbq 패키지&lt;/a&gt; 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="c3a9d48b8a4681d2791011df60f10306fb9f62ed" translate="yes" xml:space="preserve">
          <source>This function returns a boolean vector containing</source>
          <target state="translated">이 함수는 다음을 포함하는 부울 벡터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a460788da3f64bc3d4ae274a55422721de1b4b5f" translate="yes" xml:space="preserve">
          <source>This function returns a boolean vector containing &lt;code&gt;True&lt;/code&gt; wherever the corresponding Series element is between the boundary values &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;. NA values are treated as &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">이 함수는 해당 Series 요소가 &lt;code&gt;left&lt;/code&gt; 과 &lt;code&gt;right&lt;/code&gt; 경계 값 사이에있을 때 &lt;code&gt;True&lt;/code&gt; 를 포함하는 부울 벡터를 반환합니다 . NA 값은 &lt;code&gt;False&lt;/code&gt; 로 취급됩니다 .</target>
        </trans-unit>
        <trans-unit id="7859a3cb889e8c778d90252d80bd10dc516ef41d" translate="yes" xml:space="preserve">
          <source>This function returns last</source>
          <target state="translated">이 함수는 마지막으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="19842d018e5a10c3366681ceb006429f96166aaa" translate="yes" xml:space="preserve">
          <source>This function returns last &lt;code&gt;n&lt;/code&gt; rows from the object based on position. It is useful for quickly verifying data, for example, after sorting or appending rows.</source>
          <target state="translated">이 함수는 위치를 기준으로 객체에서 마지막 &lt;code&gt;n&lt;/code&gt; 개의 행을 반환합니다 . 예를 들어 행을 정렬하거나 추가 한 후 데이터를 빠르게 확인하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8432e5d0888e3c9fe8cc8c1c13db444625a7dcc7" translate="yes" xml:space="preserve">
          <source>This function returns the first</source>
          <target state="translated">이 함수는 첫 번째를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="567d064855ce8e1942b326b78ecb52d17ab38f79" translate="yes" xml:space="preserve">
          <source>This function returns the first &lt;code&gt;n&lt;/code&gt; rows for the object based on position. It is useful for quickly testing if your object has the right type of data in it.</source>
          <target state="translated">이 함수는 위치에 따라 객체 의 처음 &lt;code&gt;n&lt;/code&gt; 개 행을 반환합니다 . 객체에 올바른 유형의 데이터가 있는지 빠르게 테스트하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ea727e2e4108ec7429d4570dbe75b91ec665241d" translate="yes" xml:space="preserve">
          <source>This function searches for &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; elements and only for &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; rows and &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; elements within each &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; element in the table. &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; stands for &amp;ldquo;table data&amp;rdquo;. This function attempts to properly handle &lt;code&gt;colspan&lt;/code&gt; and &lt;code&gt;rowspan&lt;/code&gt; attributes. If the function has a &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; argument, it is used to construct the header, otherwise the function attempts to find the header within the body (by putting rows with only &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; elements into the header).</source>
          <target state="translated">이 함수는 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 요소를 검색하고 테이블의 각 &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 요소 내에서 &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 행과 &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 요소 만 검색 합니다. &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 는&amp;ldquo;테이블 데이터&amp;rdquo;를 나타냅니다. 이 함수는 &lt;code&gt;colspan&lt;/code&gt; 및 &lt;code&gt;rowspan&lt;/code&gt; 속성 을 올바르게 처리하려고 합니다. 함수에 &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; 인수가 있으면 헤더를 구성하는 데 사용됩니다. 그렇지 않으면 함수는 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 요소 만있는 행을 헤더에 넣어서 본문 내에서 헤더를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="3310acadad3ef64a1eec5c74e0f0ae2c6e3dcc16" translate="yes" xml:space="preserve">
          <source>This function takes a scalar or array-like object and indicates whether values are missing (&lt;code&gt;NaN&lt;/code&gt; in numeric arrays, &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; in object arrays, &lt;code&gt;NaT&lt;/code&gt; in datetimelike).</source>
          <target state="translated">이 함수는 스칼라 또는 객체 어레이 형상을 취하고 값 (누락 여부를 나타내는 &lt;code&gt;NaN&lt;/code&gt; 이를 숫자 어레이에 &lt;code&gt;None&lt;/code&gt; 또는 &lt;code&gt;NaN&lt;/code&gt; 이 객체 어레이에서, &lt;code&gt;NaT&lt;/code&gt; datetimelike에서).</target>
        </trans-unit>
        <trans-unit id="7c5e26033cc8c8b5e7fd8e0fe0dd4ee3dcf1e180" translate="yes" xml:space="preserve">
          <source>This function takes a scalar or array-like object and indicates whether values are valid (not missing, which is &lt;code&gt;NaN&lt;/code&gt; in numeric arrays, &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; in object arrays, &lt;code&gt;NaT&lt;/code&gt; in datetimelike).</source>
          <target state="translated">이 함수는 스칼라 또는 객체 어레이 형상을 취하고 값 (인 누락되지 유효 여부를 나타내는 &lt;code&gt;NaN&lt;/code&gt; 의 숫자 어레이에 &lt;code&gt;None&lt;/code&gt; 또는 &lt;code&gt;NaN&lt;/code&gt; 이 객체 어레이에서, &lt;code&gt;NaT&lt;/code&gt; datetimelike에서).</target>
        </trans-unit>
        <trans-unit id="792d3bc17ce890ab82b9df956d40e75101f10e0c" translate="yes" xml:space="preserve">
          <source>This function uses Fisher&amp;rsquo;s definition of kurtosis without bias.</source>
          <target state="translated">이 함수는 바이어스없이 Fisher의 첨도 정의를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="884b20733c5dd03663efb5465364f27032bf32ff" translate="yes" xml:space="preserve">
          <source>This function uses Pearson&amp;rsquo;s definition of correlation (&lt;a href=&quot;https://en.wikipedia.org/wiki/Pearson_correlation_coefficient&quot;&gt;https://en.wikipedia.org/wiki/Pearson_correlation_coefficient&lt;/a&gt;).</source>
          <target state="translated">이 함수는 Pearson의 상관 관계 정의 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Pearson_correlation_coefficient&quot;&gt;https://en.wikipedia.org/wiki/Pearson_correlation_coefficient&lt;/a&gt; )를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f67f7355a975885363a2f6529c113c950367ec87" translate="yes" xml:space="preserve">
          <source>This function will &lt;em&gt;always&lt;/em&gt; return a list of &lt;a href=&quot;pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt;&lt;em&gt;or&lt;/em&gt; it will fail, e.g., it will &lt;em&gt;not&lt;/em&gt; return an empty list.</source>
          <target state="translated">이 함수는 &lt;em&gt;항상 &lt;/em&gt;&lt;a href=&quot;pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt; 목록을 반환&lt;em&gt; 하거나&lt;/em&gt; 실패합니다 (예 : 빈 목록을 반환 &lt;em&gt;하지 않음)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="79ff3eeb1fb53180d3967759365553afe2e51955" translate="yes" xml:space="preserve">
          <source>This function will return a new Series with a view of the same underlying values in memory, optionally reinterpreted with a new data type. The new data type must preserve the same size in bytes as to not cause index misalignment.</source>
          <target state="translated">이 함수는 메모리에서 동일한 기본 값을 볼 수있는 새 Series를 반환하며, 선택적으로 새 데이터 유형으로 해석됩니다. 새 데이터 유형은 색인 오정렬을 일으키지 않도록 동일한 크기 (바이트)를 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f2dbf95a3b69a10565b6348d980cf5a80373c01" translate="yes" xml:space="preserve">
          <source>This function writes the dataframe as a &lt;a href=&quot;https://parquet.apache.org/&quot;&gt;parquet file&lt;/a&gt;. You can choose different parquet backends, and have the option of compression. See &lt;a href=&quot;../../user_guide/io#io-parquet&quot;&gt;the user guide&lt;/a&gt; for more details.</source>
          <target state="translated">이 함수는 데이터 프레임을 &lt;a href=&quot;https://parquet.apache.org/&quot;&gt;마루 파일&lt;/a&gt; 로 씁니다 . 다른 쪽모이 세공 백엔드를 선택할 수 있으며 압축 옵션이 있습니다. 자세한 내용 &lt;a href=&quot;../../user_guide/io#io-parquet&quot;&gt;은 사용 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="29af460d801c4718dda9b1b9d8b7cbff6d7cd6d2" translate="yes" xml:space="preserve">
          <source>This generator will yield the group path, subgroups and pandas object names for each group.</source>
          <target state="translated">이 생성기는 각 그룹에 대한 그룹 경로, 하위 그룹 및 팬더 객체 이름을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="de1ca960684b62283823a6eabe056e0cb3d96221" translate="yes" xml:space="preserve">
          <source>This generator will yield the group path, subgroups and pandas object names for each group. Any non-pandas PyTables objects that are not a group will be ignored.</source>
          <target state="translated">이 생성기는 각 그룹의 그룹 경로, 하위 그룹 및 팬더 개체 이름을 생성합니다. 그룹이 아닌 팬더가 아닌 PyTables 객체는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1933101f0b9a47b8fc8daa8b908ca084ab7bbdcb" translate="yes" xml:space="preserve">
          <source>This has no effect when &lt;code&gt;join='inner'&lt;/code&gt;, which already preserves the order of the non-concatenation axis.</source>
          <target state="translated">&lt;code&gt;join='inner'&lt;/code&gt; 인 경우에는 영향을 미치지 않으며 이미 연결되지 않은 축의 순서를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="232ce88ea5d2d1717596912063f2948c17603732" translate="yes" xml:space="preserve">
          <source>This however is operating on a copy and will not work.</source>
          <target state="translated">그러나 이것은 사본에서 작동하며 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="090dad24206e677cf8b595f373c722e7ad11cf36" translate="yes" xml:space="preserve">
          <source>This includes:</source>
          <target state="translated">여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6d185514e8b216a493b1dec42c64cbe9c9fefeca" translate="yes" xml:space="preserve">
          <source>This index can back any axis of a pandas object, and the number of &lt;strong&gt;levels&lt;/strong&gt; of the index is up to you:</source>
          <target state="translated">이 색인은 pandas 객체의 모든 축을 백업 할 수 있으며 색인 의 &lt;strong&gt;수준&lt;/strong&gt; 수는 귀하에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb8a89a5b844613f64e8c65af394dfb0e0e8f733" translate="yes" xml:space="preserve">
          <source>This information can be stored in a &lt;code&gt;CategoricalDtype&lt;/code&gt;. The &lt;code&gt;categories&lt;/code&gt; argument is optional, which implies that the actual categories should be inferred from whatever is present in the data when the &lt;a href=&quot;../reference/api/pandas.categorical#pandas.Categorical&quot;&gt;&lt;code&gt;pandas.Categorical&lt;/code&gt;&lt;/a&gt; is created. The categories are assumed to be unordered by default.</source>
          <target state="translated">이 정보는 &lt;code&gt;CategoricalDtype&lt;/code&gt; 에 저장할 수 있습니다 . &lt;code&gt;categories&lt;/code&gt; 인수는 실제 범주는 때 데이터에 존재하는 어떤 추론해야한다는 것을 의미하는, 선택 사항입니다 &lt;a href=&quot;../reference/api/pandas.categorical#pandas.Categorical&quot;&gt; &lt;code&gt;pandas.Categorical&lt;/code&gt; 가&lt;/a&gt; 생성됩니다. 범주는 기본적으로 순서가 지정되지 않은 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="ae55e6ad4406085b8575be8d5a34fc88ee715058" translate="yes" xml:space="preserve">
          <source>This is a dictionary of attributes that you can pass to use to identify the table in the HTML. These are not checked for validity before being passed to lxml or Beautiful Soup. However, these attributes must be valid HTML table attributes to work correctly. For example,</source>
          <target state="translated">HTML에서 테이블을 식별하는 데 사용할 수있는 속성 사전입니다. lxml 또는 Beautiful Soup에 전달되기 전에 유효성을 검사하지 않습니다. 그러나 이러한 속성이 올바르게 작동하려면 유효한 HTML 테이블 속성이어야합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="e6ef473273c07633975be0114217cc1b72647be4" translate="yes" xml:space="preserve">
          <source>This is a generic error raised for errors encountered when functions like</source>
          <target state="translated">이것은 다음과 같은 함수에서 발생하는 오류에 대해 발생하는 일반적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="5055799cfa4983bb6116c1f662628d8631dc4ce8" translate="yes" xml:space="preserve">
          <source>This is a generic error raised for errors encountered when functions like &lt;code&gt;read_csv&lt;/code&gt; or &lt;code&gt;read_html&lt;/code&gt; are parsing contents of a file.</source>
          <target state="translated">&lt;code&gt;read_csv&lt;/code&gt; 또는 &lt;code&gt;read_html&lt;/code&gt; 과 같은 함수 가 파일 내용을 구문 분석 할 때 발생하는 오류에 대해 발생하는 일반적인 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="6442e1efb11702bd4f790de9b75e51a1dc67c4a4" translate="yes" xml:space="preserve">
          <source>This is a guide to many pandas tutorials, geared mainly for new users.</source>
          <target state="translated">이것은 많은 팬더 튜토리얼에 대한 가이드이며 주로 새로운 사용자를 대상으로합니다.</target>
        </trans-unit>
        <trans-unit id="5b10f2c143173bd7a9576d1eb250b77ca9a74d96" translate="yes" xml:space="preserve">
          <source>This is a method on all index types. For example you can do:</source>
          <target state="translated">모든 인덱스 유형에 대한 방법입니다. 예를 들어 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95a05e6a716fbd56337ecaa3caa916fb553df1b9" translate="yes" xml:space="preserve">
          <source>This is a pandas Extension array for boolean data, under the hood represented by 2 numpy arrays: a boolean array with the data and a boolean array with the mask (True indicating missing).</source>
          <target state="translated">이것은 부울 데이터에 대한 pandas 확장 배열로, 2 개의 numpy 배열로 표현됩니다. 데이터가있는 부울 배열과 마스크가있는 부울 배열 (True는 누락을 나타냄)입니다.</target>
        </trans-unit>
        <trans-unit id="8faa86ddbeed73dfb54a3fba438e0e17ecd8b635" translate="yes" xml:space="preserve">
          <source>This is a repository for &lt;em&gt;short and sweet&lt;/em&gt; examples and links for useful pandas recipes. We encourage users to add to this documentation.</source>
          <target state="translated">이것은 &lt;em&gt;짧고 달콤한&lt;/em&gt; 예제를 위한 저장소 이며 유용한 팬더 레시피를위한 링크입니다. 사용자는이 문서를 추가 할 것을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="ee24bd745f1960d739a58607f750d23547406d93" translate="yes" xml:space="preserve">
          <source>This is a short introduction to pandas, geared mainly for new users. You can see more complex recipes in the &lt;a href=&quot;../user_guide/cookbook#cookbook&quot;&gt;Cookbook&lt;/a&gt;.</source>
          <target state="translated">팬더에 대한 짧은 소개이며 주로 새로운 사용자를 대상으로합니다. &lt;a href=&quot;../user_guide/cookbook#cookbook&quot;&gt;요리 책&lt;/a&gt; 에서보다 복잡한 레시피를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95f6fe3698fb0320c0d79681d2985825a53bcc94" translate="yes" xml:space="preserve">
          <source>This is a short introduction to pandas, geared mainly for new users. You can see more complex recipes in the &lt;a href=&quot;cookbook#cookbook&quot;&gt;Cookbook&lt;/a&gt;.</source>
          <target state="translated">이것은 주로 신규 사용자를위한 팬더에 대한 짧은 소개입니다. &lt;a href=&quot;cookbook#cookbook&quot;&gt;요리 책&lt;/a&gt; 에서 더 복잡한 요리법을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd5a85252dcaf716a3cc598ec54a48c85ca3c842" translate="yes" xml:space="preserve">
          <source>This is a shortcut for the slightly more verbose notation &lt;code&gt;df.loc[('bar',),]&lt;/code&gt; (equivalent to &lt;code&gt;df.loc['bar',]&lt;/code&gt; in this example).</source>
          <target state="translated">이것은 약간 더 자세한 표기법 인 &lt;code&gt;df.loc[('bar',),]&lt;/code&gt; ( 이 예에서 &lt;code&gt;df.loc['bar',]&lt;/code&gt; 와 동일 )에 대한 바로 가기입니다 .</target>
        </trans-unit>
        <trans-unit id="48023001e16fc55848768bdc0b462b5608d6c895" translate="yes" xml:space="preserve">
          <source>This is a useful shorthand for boolean indexing based on index values above or below certain thresholds.</source>
          <target state="translated">이는 특정 임계 값 위 또는 아래의 인덱스 값을 기반으로하는 부울 인덱싱에 유용한 축약 형입니다.</target>
        </trans-unit>
        <trans-unit id="6148658a0b6ef471ae0dfdcf0bd5018d8d771bff" translate="yes" xml:space="preserve">
          <source>This is a very specific dtype, so generic ones like</source>
          <target state="translated">이것은 매우 특정한 dtype이므로 다음과 같은 일반적인 것입니다.</target>
        </trans-unit>
        <trans-unit id="3009ad497ec1e86ee8ff3b8cd848c4ff6c508cd6" translate="yes" xml:space="preserve">
          <source>This is a very specific dtype, so generic ones like &lt;code&gt;np.timedelta64&lt;/code&gt; will return False if passed into this function.</source>
          <target state="translated">이것은 매우 구체적인 dtype이므로 np.timedelta64와 같은 일반적인 &lt;code&gt;np.timedelta64&lt;/code&gt; 은이 함수에 전달되면 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7ac6535dd25e95721da98d507071a457d55da295" translate="yes" xml:space="preserve">
          <source>This is allowed to support operations that require that the same DBAPI connection is used for the entire operation.</source>
          <target state="translated">이는 전체 작업에 동일한 DBAPI 연결을 사용해야하는 작업을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="827d0f341dba0b989814698598251dea24c4da18" translate="yes" xml:space="preserve">
          <source>This is also a valid argument to &lt;a href=&quot;../reference/api/pandas.dataframe.append#pandas.DataFrame.append&quot;&gt;&lt;code&gt;DataFrame.append()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">이것은 또한 &lt;a href=&quot;../reference/api/pandas.dataframe.append#pandas.DataFrame.append&quot;&gt; &lt;code&gt;DataFrame.append()&lt;/code&gt; &lt;/a&gt; 대한 유효한 인수입니다 .</target>
        </trans-unit>
        <trans-unit id="714141153177f677aef2d74122e479138e481ee4" translate="yes" xml:space="preserve">
          <source>This is also available on Index</source>
          <target state="translated">이것은 인덱스에서도 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="51b01b1d5f0736caf3474abbacf42d1ddfa4d3de" translate="yes" xml:space="preserve">
          <source>This is an alias method for</source>
          <target state="translated">이것은에 대한 별칭 방법입니다.</target>
        </trans-unit>
        <trans-unit id="4cccb50bc886f959fdaae7ad8b6eea9eaf0e4785" translate="yes" xml:space="preserve">
          <source>This is an alias method for &lt;code&gt;Timedelta.to_timedelta64()&lt;/code&gt;. The dtype and copy parameters are available here only for compatibility. Their values will not affect the return value.</source>
          <target state="translated">&lt;code&gt;Timedelta.to_timedelta64()&lt;/code&gt; 대한 별명 메소드입니다 . dtype 및 copy 매개 변수는 호환성을 위해서만 여기서 사용할 수 있습니다. 해당 값은 반환 값에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7c7f6dda587b53cf9c11789902b18903805aec65" translate="yes" xml:space="preserve">
          <source>This is an alias method for &lt;code&gt;Timestamp.to_datetime64()&lt;/code&gt;. The dtype and copy parameters are available here only for compatibility. Their values will not affect the return value.</source>
          <target state="translated">&lt;code&gt;Timestamp.to_datetime64()&lt;/code&gt; 대한 별명 메소드입니다 . dtype 및 copy 매개 변수는 호환성을 위해서만 여기서 사용할 수 있습니다. 이 값은 반환 값에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="125cc257155e033f378873339cf6a2a9dcb36c7d" translate="yes" xml:space="preserve">
          <source>This is an experimental feature. Currently, many methods fail to propagate the &lt;code&gt;allows_duplicate_labels&lt;/code&gt; value. In future versions it is expected that every method taking or returning one or more DataFrame or Series objects will propagate &lt;code&gt;allows_duplicate_labels&lt;/code&gt;.</source>
          <target state="translated">이것은 실험적인 기능입니다. 현재 많은 메소드가 &lt;code&gt;allows_duplicate_labels&lt;/code&gt; 값 을 전파하지 못합니다 . 향후 버전에서는 하나 이상의 DataFrame 또는 Series 객체를 가져 오거나 반환하는 모든 메서드가 allow_duplicate_labels를 전파 할 것으로 &lt;code&gt;allows_duplicate_labels&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="12734d223c300e75ac5d9b41a5e9b72362216fd7" translate="yes" xml:space="preserve">
          <source>This is an inexhaustive list of projects that build on pandas in order to provide tools in the PyData space. For a list of projects that depend on pandas, see the &lt;a href=&quot;https://libraries.io/pypi/pandas/usage&quot;&gt;libraries.io usage page for pandas&lt;/a&gt; or &lt;a href=&quot;https://pypi.org/search/?q=pandas&quot;&gt;search pypi for pandas&lt;/a&gt;.</source>
          <target state="translated">이것은 PyData 공간에 도구를 제공하기 위해 팬더를 기반으로하는 프로젝트 목록입니다. 팬더에 의존하는 프로젝트 목록은 팬더에 &lt;a href=&quot;https://libraries.io/pypi/pandas/usage&quot;&gt;대한 library.io 사용 페이지를 참조&lt;/a&gt; 하거나 &lt;a href=&quot;https://pypi.org/search/?q=pandas&quot;&gt;팬더에 대한 pypi 검색을 &lt;/a&gt;참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0884dd7633df6a632adad3ec679adb5ce2b96085" translate="yes" xml:space="preserve">
          <source>This is an informal comparison of various IO methods, using pandas 0.24.2. Timings are machine dependent and small differences should be ignored.</source>
          <target state="translated">이것은 Pandas 0.24.2를 사용하여 다양한 IO 방법을 비공식적으로 비교 한 것입니다. 타이밍은 기계에 따라 다르며 작은 차이는 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="618c16119ed84f4326d7709b364b3d1b9e5aeac9" translate="yes" xml:space="preserve">
          <source>This is an introduction to pandas categorical data type, including a short comparison with R&amp;rsquo;s &lt;code&gt;factor&lt;/code&gt;.</source>
          <target state="translated">이것은 R 's &lt;code&gt;factor&lt;/code&gt; 와의 짧은 비교를 포함하여 팬더 범주 형 데이터 유형에 대한 소개 입니다.</target>
        </trans-unit>
        <trans-unit id="1ac4c32f82cfeca1d1a8fc00ef44a23d52e68438" translate="yes" xml:space="preserve">
          <source>This is an optional section used for notes about the implementation of the algorithm. Or to document technical aspects of the function behavior.</source>
          <target state="translated">이것은 알고리즘 구현에 대한 참고 사항에 사용되는 선택적 섹션입니다. 또는 기능 동작의 기술적 측면을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="f9a6b919d0eaeec8264df1c59b71921cc0f2d732" translate="yes" xml:space="preserve">
          <source>This is because one day&amp;rsquo;s business hour end is equal to next day&amp;rsquo;s business hour start. For example, under the default business hours (9:00 - 17:00), there is no gap (0 minutes) between &lt;code&gt;2014-08-01 17:00&lt;/code&gt; and &lt;code&gt;2014-08-04 09:00&lt;/code&gt;.</source>
          <target state="translated">이는 하루의 업무 시간 종료가 다음 날의 업무 시간 시작과 동일하기 때문입니다. 예를 들어 기본 업무 시간 (9:00-17:00)에서 &lt;code&gt;2014-08-01 17:00&lt;/code&gt; 과 &lt;code&gt;2014-08-04 09:00&lt;/code&gt; 사이에 간격 (0 분)이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0eb0384e6f41f4218478f8a672fe5017b65eabe9" translate="yes" xml:space="preserve">
          <source>This is because the (re)indexing operations above silently inserts &lt;code&gt;NaNs&lt;/code&gt; and the &lt;code&gt;dtype&lt;/code&gt; changes accordingly. This can cause some issues when using &lt;code&gt;numpy&lt;/code&gt;&lt;code&gt;ufuncs&lt;/code&gt; such as &lt;code&gt;numpy.logical_and&lt;/code&gt;.</source>
          <target state="translated">이는 위의 (재) 인덱싱 작업이 &lt;code&gt;NaNs&lt;/code&gt; 자동으로 삽입 하고 그에 따라 &lt;code&gt;dtype&lt;/code&gt; 이 변경 되기 때문 입니다. 사용할 때 몇 가지 문제가 발생할 수 있습니다 &lt;code&gt;numpy&lt;/code&gt; &lt;code&gt;ufuncs&lt;/code&gt; 같은 &lt;code&gt;numpy.logical_and&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="563ddeac271bb0a5d399b73b3909ef07d276febb" translate="yes" xml:space="preserve">
          <source>This is done to avoid a recomputation of the levels in order to make slicing highly performant. If you want to see only the used levels, you can use the &lt;a href=&quot;../reference/api/pandas.multiindex.get_level_values#pandas.MultiIndex.get_level_values&quot;&gt;&lt;code&gt;get_level_values()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이는 슬라이싱의 성능을 높이기 위해 레벨 재 계산을 방지하기 위해 수행됩니다. 사용 된 레벨 &lt;a href=&quot;../reference/api/pandas.multiindex.get_level_values#pandas.MultiIndex.get_level_values&quot;&gt; &lt;code&gt;get_level_values()&lt;/code&gt; &lt;/a&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74e59d4e2a58be004876270aef6b9e6f0a3ad6d6" translate="yes" xml:space="preserve">
          <source>This is equivalent but less verbose and more memory efficient / faster than this.</source>
          <target state="translated">이것은 동등하지만 덜 장황하고 메모리 효율성이 높고 이것보다 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="c17e7399d2e79ade83389efeb2a3c45919f66bf8" translate="yes" xml:space="preserve">
          <source>This is equivalent to (but faster than) the following.</source>
          <target state="translated">이것은 다음과 같지만 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="003521402d289b31909e91dfea6f89509b21cf2c" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isalnum&quot;&gt;&lt;code&gt;str.isalnum()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이것은 Series / Index의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isalnum&quot;&gt; &lt;code&gt;str.isalnum()&lt;/code&gt; &lt;/a&gt; 을 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5d3b54835b414fc0b737ad39a4f62ab81b3db82a" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isalpha&quot;&gt;&lt;code&gt;str.isalpha()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이것은 Series / Index의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isalpha&quot;&gt; &lt;code&gt;str.isalpha()&lt;/code&gt; &lt;/a&gt; 를 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="15479962930884e2caf3626e94a0a717149eab0d" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isdecimal&quot;&gt;&lt;code&gt;str.isdecimal()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이것은 Series / Index의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isdecimal&quot;&gt; &lt;code&gt;str.isdecimal()&lt;/code&gt; &lt;/a&gt; 을 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2ec1e0c5d47e7b1d58c26f073004d9c39a5b3fd1" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isdigit&quot;&gt;&lt;code&gt;str.isdigit()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이것은 Series / Index의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isdigit&quot;&gt; &lt;code&gt;str.isdigit()&lt;/code&gt; &lt;/a&gt; 를 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="df98a28e73f7034b45301a223792dd56ed9c3db5" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.islower&quot;&gt;&lt;code&gt;str.islower()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이는 시리즈 / 인덱스의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.islower&quot;&gt; &lt;code&gt;str.islower()&lt;/code&gt; &lt;/a&gt; 를 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fd8de9dae4b5c2ddc9819f8f277f59216da34e8b" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isnumeric&quot;&gt;&lt;code&gt;str.isnumeric()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이것은 Series / Index의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isnumeric&quot;&gt; &lt;code&gt;str.isnumeric()&lt;/code&gt; &lt;/a&gt; 을 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="772090581a8ac1c5180e6f59ff45eb3add248b74" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isspace&quot;&gt;&lt;code&gt;str.isspace()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이것은 Series / Index의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isspace&quot;&gt; &lt;code&gt;str.isspace()&lt;/code&gt; &lt;/a&gt; 를 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="615ce6e53f5e532da93e143761d9a55bd417d8d3" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.istitle&quot;&gt;&lt;code&gt;str.istitle()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이는 Series / Index의 각 요소에 대해 Python 문자열 메서드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.istitle&quot;&gt; &lt;code&gt;str.istitle()&lt;/code&gt; &lt;/a&gt; 을 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="edbc456ca1f33fb25c015622c2dafab06c42cf75" translate="yes" xml:space="preserve">
          <source>This is equivalent to running the Python string method &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isupper&quot;&gt;&lt;code&gt;str.isupper()&lt;/code&gt;&lt;/a&gt; for each element of the Series/Index. If a string has zero characters, &lt;code&gt;False&lt;/code&gt; is returned for that check.</source>
          <target state="translated">이것은 Series / Index의 각 요소에 대해 파이썬 문자열 메소드 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.isupper&quot;&gt; &lt;code&gt;str.isupper()&lt;/code&gt; &lt;/a&gt; 를 실행하는 것과 같습니다 . 문자열에 0 개의 문자가 있으면 해당 검사에 대해 &lt;code&gt;False&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="29e61b270d1e86cb22052e58e93be989c0f08d82" translate="yes" xml:space="preserve">
          <source>This is equivalent to the method &lt;code&gt;numpy.sum&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;numpy.sum&lt;/code&gt; 메소드와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0142fbd9c141b5e63e11bc2d11a6607a82d57a3a" translate="yes" xml:space="preserve">
          <source>This is fairly esoteric, but it is actually necessary for implementing things like GroupBy where the order of a categorical variable is meaningful.</source>
          <target state="translated">이것은 매우 난해하지만 실제로 범주 변수의 순서가 의미가있는 GroupBy와 같은 것을 구현하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="30ce3eaad5694ff453054f12e711f8bbe2f64164" translate="yes" xml:space="preserve">
          <source>This is for compatibility with NumPy arrays, and may be removed in the future.</source>
          <target state="translated">이는 NumPy 어레이와의 호환성을위한 것으로 향후 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df912878d15b268e850349990c87f3aae164c28c" translate="yes" xml:space="preserve">
          <source>This is implemented for compatibility with subclass implementations when chaining.</source>
          <target state="translated">체인화시 서브 클래스 구현과의 호환성을 위해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="9c17d364b4309e769c1b1bb35c2650dc7cab5f6f" translate="yes" xml:space="preserve">
          <source>This is index for Series, columns for DataFrame.</source>
          <target state="translated">이것은 DataFrame의 Series, 열에 대한 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="0fc6a614ce827bda312fee8920a7ac18b5785e69" translate="yes" xml:space="preserve">
          <source>This is intended for generators, not list-like objects.</source>
          <target state="translated">이것은 목록과 같은 객체가 아닌 생성자를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="edcd03f02e7d416b313ad336f641f179922e7d80" translate="yes" xml:space="preserve">
          <source>This is like an &lt;code&gt;append&lt;/code&gt; operation on the &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;DataFrame&lt;/code&gt; 에 대한 &lt;code&gt;append&lt;/code&gt; 작업과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="78880c29fc8f6543f98aaf50ed817db26d2610fd" translate="yes" xml:space="preserve">
          <source>This is mainly syntactic sugar for the alternative and much more verbose:</source>
          <target state="translated">이것은 주로 대안에 대한 구문 설탕이며 훨씬 더 장황합니다.</target>
        </trans-unit>
        <trans-unit id="9081631ed629a7fc4edbdf18065e1722eb82a0da" translate="yes" xml:space="preserve">
          <source>This is most definitely a &amp;ldquo;practicality beats purity&amp;rdquo; sort of thing, but it is something to watch out for if you expect label-based slicing to behave exactly in the way that standard Python integer slicing works.</source>
          <target state="translated">이것은 가장 확실하게 &quot;실용성이 순도를 능가한다&quot;와 같은 종류의 일이지만, 레이블 기반 슬라이싱이 표준 Python 정수 슬라이싱이 작동하는 방식으로 정확하게 작동 할 것으로 기대한다면주의해야 할 사항입니다.</target>
        </trans-unit>
        <trans-unit id="000149c5e5d82237193390604b2bce81726eb3c1" translate="yes" xml:space="preserve">
          <source>This is mostly for internal compatibility, and is not especially useful on its own.</source>
          <target state="translated">이것은 주로 내부 호환성을위한 것이며 특별히 그 자체로는 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ce276bc87610a757b3e48b0bfe09728d081692e0" translate="yes" xml:space="preserve">
          <source>This is often a NumPy dtype. However, pandas and 3rd-party libraries extend NumPy&amp;rsquo;s type system in a few places, in which case the dtype would be an &lt;a href=&quot;../reference/api/pandas.api.extensions.extensiondtype#pandas.api.extensions.ExtensionDtype&quot;&gt;&lt;code&gt;ExtensionDtype&lt;/code&gt;&lt;/a&gt;. Some examples within pandas are &lt;a href=&quot;categorical#categorical&quot;&gt;Categorical data&lt;/a&gt; and &lt;a href=&quot;integer_na#integer-na&quot;&gt;Nullable integer data type&lt;/a&gt;. See &lt;a href=&quot;basics#basics-dtypes&quot;&gt;dtypes&lt;/a&gt; for more.</source>
          <target state="translated">이것은 종종 NumPy dtype입니다. 그러나 pandas 및 타사 라이브러리는 몇 군데에서 NumPy의 유형 시스템을 확장하며,이 경우 dtype은 &lt;a href=&quot;../reference/api/pandas.api.extensions.extensiondtype#pandas.api.extensions.ExtensionDtype&quot;&gt; &lt;code&gt;ExtensionDtype&lt;/code&gt; 이&lt;/a&gt; 됩니다. Pandas 내의 몇 가지 예는 &lt;a href=&quot;categorical#categorical&quot;&gt;범주 형 데이터&lt;/a&gt; 및 &lt;a href=&quot;integer_na#integer-na&quot;&gt;Nullable 정수 데이터 유형&lt;/a&gt; 입니다. 자세한 내용은 &lt;a href=&quot;basics#basics-dtypes&quot;&gt;dtypes&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e58dee98fb1abd07fbfbb96e3aaf0acc159b84f" translate="yes" xml:space="preserve">
          <source>This is one of the most important sections of a docstring, even if it is placed in the last position. As often, people understand concepts better with examples, than with accurate explanations.</source>
          <target state="translated">이것은 마지막 위치에 있더라도 docstring의 가장 중요한 섹션 중 하나입니다. 종종 사람들은 정확한 설명보다는 예제를 통해 개념을 더 잘 이해합니다.</target>
        </trans-unit>
        <trans-unit id="d7007c1ec4b606d7cb349bc75de9c72939b6e171" translate="yes" xml:space="preserve">
          <source>This is primarily useful to get an individual level of values from a MultiIndex, but is provided on Index as well for compatibility.</source>
          <target state="translated">이것은 주로 MultiIndex에서 개별 수준의 값을 얻는 데 유용하지만 호환성을 위해 Index에서도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bad0a7133769d927c789c75b7fa3dcf7258b7a57" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;DataFrame.apply&lt;/code&gt;, except that &lt;code&gt;axis=None&lt;/code&gt; applies the function to the entire DataFrame at once, rather than column-wise or row-wise.</source>
          <target state="translated">&lt;code&gt;axis=None&lt;/code&gt; 이 함수를 열 단위 또는 행 단위가 아닌 전체 DataFrame에 한 번에 적용 한다는 점을 제외하면 &lt;code&gt;DataFrame.apply&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="231133b299a69c18278b1e2a01482b21ca5f74b3" translate="yes" xml:space="preserve">
          <source>This is similar to a left-join except that we match on nearest key rather than equal keys. Both DataFrames must be sorted by the key.</source>
          <target state="translated">이것은 동일한 키가 아닌 가장 가까운 키에서 일치한다는 점을 제외하면 left-join과 유사합니다. 두 DataFrame 모두 키를 기준으로 정렬해야합니다. ㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="a23790976108ab86dcc1ac756c40ac8413562ed1" translate="yes" xml:space="preserve">
          <source>This is supported in a limited way, provided that the index for the right argument is completely used in the join, and is a subset of the indices in the left argument, as in this example:</source>
          <target state="translated">오른쪽 인수에 대한 인덱스가 조인에서 완전히 사용되고 다음 예제와 같이 왼쪽 인수에있는 인덱스의 하위 집합 인 경우 제한적인 방식으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9be42caf6714db145dc566029f11422e0d90fde8" translate="yes" xml:space="preserve">
          <source>This is the default index type used by DataFrame and Series when no explicit index is provided by the user.</source>
          <target state="translated">이는 사용자가 명시적인 인덱스를 제공하지 않을 때 DataFrame 및 Series에서 사용하는 기본 인덱스 유형입니다.</target>
        </trans-unit>
        <trans-unit id="0861c946a683b8c12768946036e601454f687f47" translate="yes" xml:space="preserve">
          <source>This is the enumerative complement of cumcount. Note that the numbers given to the groups match the order in which the groups would be seen when iterating over the groupby object, not the order they are first observed.</source>
          <target state="translated">이것은 cumcount의 열거 보완입니다. 그룹에 주어진 숫자는 그룹별로 객체를 반복 할 때 그룹이 처음 관찰되는 순서가 아닌 순서와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="4f956891d8bed800fae45b88528e5643bb20b1a1" translate="yes" xml:space="preserve">
          <source>This is the inverse of the date.isocalendar() function</source>
          <target state="translated">이것은 date.isocalendar () 함수의 역입니다.</target>
        </trans-unit>
        <trans-unit id="72b5f5ef987e2a4ba822827916bf50d1e2998baa" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;.values&lt;/code&gt; for non-sparse data. For sparse data contained in a &lt;code&gt;SparseArray&lt;/code&gt;, the data are first converted to a dense representation.</source>
          <target state="translated">이는 스파 &lt;code&gt;.values&lt;/code&gt; 아닌 데이터의 .values 와 동일 합니다. &lt;code&gt;SparseArray&lt;/code&gt; 에 포함 된 희소 데이터의 경우 데이터는 먼저 밀도가 높은 표현으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="4a4555220065e1dc12dde8fb29600ef7ba8b394f" translate="yes" xml:space="preserve">
          <source>This is the set difference of two Index objects.</source>
          <target state="translated">이것이 두 개의 Index 객체의 차이점입니다.</target>
        </trans-unit>
        <trans-unit id="e691876859b9c0b5324e37d800928f66fac565ca" translate="yes" xml:space="preserve">
          <source>This is the target object for assignment. It is used when there is variable assignment in the expression. If so, then</source>
          <target state="translated">할당 할 대상 개체입니다. 표현식에 변수 할당이있을 때 사용됩니다. 그렇다면</target>
        </trans-unit>
        <trans-unit id="904f82014286201e53cac2b3acadb099bc39b7b1" translate="yes" xml:space="preserve">
          <source>This is the target object for assignment. It is used when there is variable assignment in the expression. If so, then &lt;code&gt;target&lt;/code&gt; must support item assignment with string keys, and if a copy is being returned, it must also support &lt;code&gt;.copy()&lt;/code&gt;.</source>
          <target state="translated">할당 할 대상 개체입니다. 표현식에 변수 지정이있을 때 사용됩니다. 그렇다면 &lt;code&gt;target&lt;/code&gt; 은 문자열 키를 사용한 항목 할당을 지원해야하며 복사본이 반환되는 경우 &lt;code&gt;.copy()&lt;/code&gt; 도 지원해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3d70293742810ee021ebdd451d1364004586f0cb" translate="yes" xml:space="preserve">
          <source>This is used in e.g. ExtensionArray.take. This should be the user-facing &amp;ldquo;boxed&amp;rdquo; version of the NA value, not the physical NA value for storage. e.g. for JSONArray, this is an empty dictionary.</source>
          <target state="translated">이것은 예를 들어 ExtensionArray.take에서 사용됩니다. 이는 스토리지에 대한 물리적 NA 값이 아니라 사용자가 직면 한 NA 값의 &quot;박스형&quot;버전이어야합니다. 예를 들어 JSONArray의 경우 빈 사전입니다.</target>
        </trans-unit>
        <trans-unit id="b90030a9915adaa22b103b39e7493b48cb29104b" translate="yes" xml:space="preserve">
          <source>This is used in the default &amp;lsquo;__repr__&amp;rsquo;. The returned formatting function receives instances of your scalar type.</source>
          <target state="translated">기본 '__repr__'에서 사용됩니다. 리턴 된 형식화 함수는 스칼라 유형의 인스턴스를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="14782eb14f37713891edc6820aae1692eaecbfaa" translate="yes" xml:space="preserve">
          <source>This is useful for SparseDataFrame or for DataFrames containing sparse arrays.</source>
          <target state="translated">이는 SparseDataFrame 또는 스파 스 배열을 포함하는 DataFrame에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f3b9ac213dfa69da443517f8e3cebfcea9d01454" translate="yes" xml:space="preserve">
          <source>This is useful mainly for data types that accept parameters. For example, a period dtype accepts a frequency parameter that can be set as &lt;code&gt;period[H]&lt;/code&gt; (where H means hourly frequency).</source>
          <target state="translated">이는 주로 매개 변수를 허용하는 데이터 유형에 유용합니다. 예를 들어, 기간 dtype은 &lt;code&gt;period[H]&lt;/code&gt; (여기서 H는 시간별 빈도) 로 설정할 수있는 주파수 매개 변수를 승인합니다 .</target>
        </trans-unit>
        <trans-unit id="c503a2c502e7f715ab6b8c071a787e5e6746a1d7" translate="yes" xml:space="preserve">
          <source>This is useful when the index needs to be treated as a column, or when the index is meaningless and needs to be reset to the default before another operation.</source>
          <target state="translated">인덱스를 열로 처리해야하거나 인덱스가 의미가없고 다른 작업 전에 기본값으로 재설정해야 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1cd7575e0e32388b513fdc8d39760bf4155a355e" translate="yes" xml:space="preserve">
          <source>This mapping is applied only if</source>
          <target state="translated">이 매핑은 다음 경우에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c2d0d18f69e8f4ea267bc2992c96dccac1154219" translate="yes" xml:space="preserve">
          <source>This mapping is applied only if &lt;code&gt;index=True&lt;/code&gt;.</source>
          <target state="translated">이 매핑은 &lt;code&gt;index=True&lt;/code&gt; 인 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="811aebda9c8a08332beb52af0f2c32aacd9a0788" translate="yes" xml:space="preserve">
          <source>This matches the behavior of &lt;code&gt;Categorical.set_categories()&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;Categorical.set_categories()&lt;/code&gt; 의 동작과 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="ac7f37bea957c844bb62deaf41e30ca77dbfbf1c" translate="yes" xml:space="preserve">
          <source>This means that the</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="8c548f3abe0c10309608ea8fedd8f123f0270c9a" translate="yes" xml:space="preserve">
          <source>This means that the &lt;code&gt;regex&lt;/code&gt; argument must be a string, compiled regular expression, or list, dict, ndarray or Series of such elements. If &lt;code&gt;value&lt;/code&gt; is also &lt;code&gt;None&lt;/code&gt; then this &lt;strong&gt;must&lt;/strong&gt; be a nested dictionary or Series.</source>
          <target state="translated">이는 &lt;code&gt;regex&lt;/code&gt; 인수가 문자열, 컴파일 된 정규 표현식 또는 이러한 요소의 목록, dict, ndarray 또는 Series 여야 한다는 것을 의미합니다 . 경우 &lt;code&gt;value&lt;/code&gt; 도 없습니다 &lt;code&gt;None&lt;/code&gt; 다음이 &lt;strong&gt;있어야합니다&lt;/strong&gt; 중첩 된 사전이나 시리즈합니다.</target>
        </trans-unit>
        <trans-unit id="4f03d1957fe9ef705a872dd3eaadd86e1e8cfa54" translate="yes" xml:space="preserve">
          <source>This means that the reindexed Series&amp;rsquo;s index is the same Python object as the DataFrame&amp;rsquo;s index.</source>
          <target state="translated">이는 재 인덱싱 된 Series의 인덱스가 DataFrame의 인덱스와 동일한 Python 객체임을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="324497d09c5de087f6bc924dd9e034bfa04eb3ac" translate="yes" xml:space="preserve">
          <source>This means that we are not indexing according to actual values in the index attribute of the object. We are indexing according to the actual position of the element in the object.</source>
          <target state="translated">이는 객체의 인덱스 속성에서 실제 값에 따라 인덱싱하지 않음을 의미합니다. 객체에서 요소의 실제 위치에 따라 색인을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b72fb58f90108444594ec99ed422e2d93ce18578" translate="yes" xml:space="preserve">
          <source>This method also supports an optional &lt;code&gt;min_periods&lt;/code&gt; keyword that specifies the required minimum number of non-NA observations for each column pair in order to have a valid result:</source>
          <target state="translated">이 방법은 또한 유효한 결과를 얻기 위해 각 열 쌍에 필요한 비 NA 관측의 최소 수를 지정 하는 선택적 &lt;code&gt;min_periods&lt;/code&gt; 키워드를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="d6c930077dbd1c4b442a3f2b7e3eadd440b26d7b" translate="yes" xml:space="preserve">
          <source>This method applies a function that accepts and returns a scalar to every element of a DataFrame.</source>
          <target state="translated">이 메서드는 스칼라를 받아들이고 DataFrame의 모든 요소에 반환하는 함수를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="42b133d2c9982fee99afbaf796a2cc6a8377e37a" translate="yes" xml:space="preserve">
          <source>This method can also be used to rename specific labels of the main index of the &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;DataFrame&lt;/code&gt; 기본 인덱스의 특정 레이블 이름을 바꾸는데 도 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59419593321b70a1095e11a7aa8e3b317a15accf" translate="yes" xml:space="preserve">
          <source>This method can be used to perform more than one action of adding, removing, and reordering simultaneously and is therefore faster than performing the individual steps via the more specialised methods.</source>
          <target state="translated">이 방법은 동시에 추가, 제거 및 재정렬하는 둘 이상의 작업을 수행하는 데 사용할 수 있으므로보다 특수한 방법을 통해 개별 단계를 수행하는 것보다 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="fb4e1c841592b0f6b85deb0a8d2bf4cf07644a4b" translate="yes" xml:space="preserve">
          <source>This method computes the Pearson correlation between the Series and its shifted self.</source>
          <target state="translated">이 방법은 계열과 이동 된 자기 간의 피어슨 상관 관계를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ac4e7082d5d12ce4a2e2d82b682bd2b90af43f60" translate="yes" xml:space="preserve">
          <source>This method computes the dot product between the Series and another one, or the Series and each columns of a DataFrame, or the Series and each columns of an array.</source>
          <target state="translated">이 메서드는 Series와 다른 하나, Series와 DataFrame의 각 열 또는 배열의 Series와 각 열 사이의 내적을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="3ec71eb7bf2f96dd0b9066d9912fb8d74ab5e16b" translate="yes" xml:space="preserve">
          <source>This method computes the matrix product between the DataFrame and the values of an other Series, DataFrame or a numpy array.</source>
          <target state="translated">이 메서드는 DataFrame과 다른 Series, DataFrame 또는 numpy 배열의 값 사이의 행렬 곱을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="51a9d5e8d0d138746e448bb8ffad850b111f46a5" translate="yes" xml:space="preserve">
          <source>This method does not convert the row to a Series object; it merely returns the values inside a namedtuple. Therefore, &lt;a href=&quot;../reference/api/pandas.dataframe.itertuples#pandas.DataFrame.itertuples&quot;&gt;&lt;code&gt;itertuples()&lt;/code&gt;&lt;/a&gt; preserves the data type of the values and is generally faster as &lt;a href=&quot;../reference/api/pandas.dataframe.iterrows#pandas.DataFrame.iterrows&quot;&gt;&lt;code&gt;iterrows()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 행을 Series 개체로 변환하지 않습니다. 이름이 지정된 튜플 내부의 값을 반환 할뿐입니다. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 따라서 &lt;a href=&quot;../reference/api/pandas.dataframe.itertuples#pandas.DataFrame.itertuples&quot;&gt; &lt;code&gt;itertuples()&lt;/code&gt; &lt;/a&gt; 는 값의 데이터 유형을 보존하고 일반적으로 &lt;a href=&quot;../reference/api/pandas.dataframe.iterrows#pandas.DataFrame.iterrows&quot;&gt; &lt;code&gt;iterrows()&lt;/code&gt; &lt;/a&gt; 만큼 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="d554798f68cc69361bed97a7de34a3822748a0a3" translate="yes" xml:space="preserve">
          <source>This method has &lt;em&gt;a lot&lt;/em&gt; of options. You are encouraged to experiment and play with this method to gain intuition about how it works.</source>
          <target state="translated">이 방법에는 &lt;em&gt;많은&lt;/em&gt; 옵션이 있습니다. 이 방법을 실험하고 사용하여 작동 방식에 대한 직관을 얻는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b839ecd3f4e14181e44af59fb112de1f23ab55d2" translate="yes" xml:space="preserve">
          <source>This method has the same keyword parameters and defaults as &lt;a href=&quot;https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper&quot;&gt;&lt;code&gt;textwrap.TextWrapper&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 키워드 매개 변수 및 기본값이 &lt;a href=&quot;https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper&quot;&gt; &lt;code&gt;textwrap.TextWrapper&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ee5bf2a9c759b781871f2c2ba6d06a222f607427" translate="yes" xml:space="preserve">
          <source>This method is available directly on TimedeltaArray, TimedeltaIndex and on Series containing timedelta values under the &lt;code&gt;.dt&lt;/code&gt; namespace.</source>
          <target state="translated">이 메소드는 TimedeltaArray, TimedeltaIndex 및 &lt;code&gt;.dt&lt;/code&gt; 네임 스페이스 아래의 timedelta 값을 포함하는 Series에서 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfdbbf9002519740a35ba0329f84e7b5549f43fe" translate="yes" xml:space="preserve">
          <source>This method is available on Series with datetime values under the &lt;code&gt;.dt&lt;/code&gt; accessor, and directly on Datetime Array/Index.</source>
          <target state="translated">이 방법은 &lt;code&gt;.dt&lt;/code&gt; 접근 자 아래의 Datetime 값이있는 Series 및 Datetime Array / Index에서 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4d9ed40e60ce1f6b4be775b5e74935c03640ced8" translate="yes" xml:space="preserve">
          <source>This method is available on Series with datetime values under the &lt;code&gt;.dt&lt;/code&gt; accessor, and directly on DatetimeIndex.</source>
          <target state="translated">이 메서드는 &lt;code&gt;.dt&lt;/code&gt; 접근 자 아래의 Datetime 값이있는 Series 및 DatetimeIndex에서 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6573392bb1f9f00ace438e0e4c36fe78c2e95db" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;df.sort_values(columns, ascending=False).head(n)&lt;/code&gt;, but more performant.</source>
          <target state="translated">이 메소드는 &lt;code&gt;df.sort_values(columns, ascending=False).head(n)&lt;/code&gt; 와 동일하지만 성능이 더 우수합니다.</target>
        </trans-unit>
        <trans-unit id="b06b92685a52860c9e146ba58c85510a1fa3a846" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;df.sort_values(columns, ascending=True).head(n)&lt;/code&gt;, but more performant.</source>
          <target state="translated">이 메소드는 &lt;code&gt;df.sort_values(columns, ascending=True).head(n)&lt;/code&gt; 와 동일하지만 성능이 더 우수합니다.</target>
        </trans-unit>
        <trans-unit id="738f6266dc89d327fd0ce106c80dd20a85a542ca" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;code&gt;numpy.nonzero&lt;/code&gt; on the series data. For compatibility with NumPy, the return value is the same (a tuple with an array of indices for each dimension), but it will always be a one-item tuple because series only have one dimension.</source>
          <target state="translated">이 메소드는 시리즈 데이터에서 &lt;code&gt;numpy.nonzero&lt;/code&gt; 를 호출하는 것과 같습니다 . NumPy와의 호환성을 위해 반환 값은 동일하지만 (각 차원에 대한 인덱스 배열이있는 튜플) 시리즈에는 차원이 하나뿐이므로 항상 한 항목 튜플이됩니다.</target>
        </trans-unit>
        <trans-unit id="d652484fa25ba4ccf389b306b12e15d660582ff2" translate="yes" xml:space="preserve">
          <source>This method is for shifting the values of datetime-like indexes by a specified time increment a given number of times.</source>
          <target state="translated">이 방법은 지정된 시간 단위로 지정된 시간 증분으로 날짜 시간 유사 색인의 값을 이동시키기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="58a0a44a61b3016febce96da2890a80ccdc51190" translate="yes" xml:space="preserve">
          <source>This method is generally used for the analysis of time series data to understand the relationship between different measures across time.</source>
          <target state="translated">이 방법은 일반적으로 시계열 데이터를 분석하여 시간에 따른 여러 측정 값 간의 관계를 이해하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a20edc3adba07a97ac376a72e47026ff47e0e89d" translate="yes" xml:space="preserve">
          <source>This method is intended to be used in method chains.</source>
          <target state="translated">이 메서드는 메서드 체인에서 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="2e2d93d15ddd94f714bad1666c7cc0ed84368b49" translate="yes" xml:space="preserve">
          <source>This method is most useful when you don&amp;rsquo;t know if your object is a Series or DataFrame, but you do know it has just a single column. In that case you can safely call</source>
          <target state="translated">이 메서드는 개체가 Series인지 DataFrame인지 모를 때 가장 유용하지만 하나의 열만 있다는 것을 알고 있습니다. 이 경우 안전하게 전화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3823c5f5e8ec6acfb74ef0889b307601e4f466d8" translate="yes" xml:space="preserve">
          <source>This method is most useful when you don&amp;rsquo;t know if your object is a Series or DataFrame, but you do know it has just a single column. In that case you can safely call &lt;code&gt;squeeze&lt;/code&gt; to ensure you have a Series.</source>
          <target state="translated">이 방법은 객체가 Series인지 DataFrame인지 모르지만 단 하나의 열만 가지고 있다는 것을 알 때 가장 유용합니다. 이 경우 안전하게 &lt;code&gt;squeeze&lt;/code&gt; 을 호출 하여 시리즈를 확보 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="751bf7919e7bbc9ad2ac68d7ea48730f9b1f8461" translate="yes" xml:space="preserve">
          <source>This method is not part of the pandas interface.</source>
          <target state="translated">이 방법은 팬더 인터페이스의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c810a344032afaa951459ae930dd68eb52cb57cb" translate="yes" xml:space="preserve">
          <source>This method is only implemented for datetime-like index classes, i.e., DatetimeIndex, PeriodIndex and TimedeltaIndex.</source>
          <target state="translated">이 메서드는 날짜 / 시간과 같은 인덱스 클래스 (예 : DatetimeIndex, PeriodIndex 및 TimedeltaIndex)에만 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0b7f88c81bf962b4576f8a38064511c37173024e" translate="yes" xml:space="preserve">
          <source>This method is provided for backwards compatibility. Generally, it is recommended to use &amp;lsquo;.values&amp;rsquo;.</source>
          <target state="translated">이 방법은 이전 버전과의 호환성을 위해 제공됩니다. 일반적으로 '.values'를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="856397989b2856553ec1cb383cfcf54cf2e3aba1" translate="yes" xml:space="preserve">
          <source>This method is the DataFrame version of &lt;code&gt;ndarray.argmax&lt;/code&gt;.</source>
          <target state="translated">이 방법의 DataFrame 버전입니다 &lt;code&gt;ndarray.argmax&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="855588edb6190f95074e6d356428097957924d5a" translate="yes" xml:space="preserve">
          <source>This method is the DataFrame version of &lt;code&gt;ndarray.argmin&lt;/code&gt;.</source>
          <target state="translated">이 방법의 DataFrame 버전입니다 &lt;code&gt;ndarray.argmin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2e18886ebb3ee33e24eefcde5d568b258d5b5c0" translate="yes" xml:space="preserve">
          <source>This method is the Series version of &lt;code&gt;ndarray.argmax&lt;/code&gt;. This method returns the label of the maximum, while &lt;code&gt;ndarray.argmax&lt;/code&gt; returns the position. To get the position, use &lt;code&gt;series.values.argmax()&lt;/code&gt;.</source>
          <target state="translated">이 방법은 Series 버전의 &lt;code&gt;ndarray.argmax&lt;/code&gt; 입니다. 이 메소드는 최대 값의 레이블을 리턴하고 &lt;code&gt;ndarray.argmax&lt;/code&gt; 는 위치를 리턴합니다. 위치를 얻으려면 &lt;code&gt;series.values.argmax()&lt;/code&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3dae5621b0e44bc28e71498c0776a53fd5f0407a" translate="yes" xml:space="preserve">
          <source>This method is the Series version of &lt;code&gt;ndarray.argmin&lt;/code&gt;. This method returns the label of the minimum, while &lt;code&gt;ndarray.argmin&lt;/code&gt; returns the position. To get the position, use &lt;code&gt;series.values.argmin()&lt;/code&gt;.</source>
          <target state="translated">이 방법은 Series 버전의 &lt;code&gt;ndarray.argmin&lt;/code&gt; 입니다. 이 메소드는 최소값의 레이블을 리턴하고 &lt;code&gt;ndarray.argmin&lt;/code&gt; 은 위치를 리턴합니다. 위치를 얻으려면 &lt;code&gt;series.values.argmin()&lt;/code&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c9f4ba229aa8696b9960c276e1cbb30fa0710a5" translate="yes" xml:space="preserve">
          <source>This method is useful for obtaining a numeric representation of an array when all that matters is identifying distinct values.</source>
          <target state="translated">이 방법은 중요한 모든 것이 고유 한 값을 식별하는 경우 배열의 숫자 표현을 얻는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="996ac28d97663b87c393fece1987427ee75bf9a2" translate="yes" xml:space="preserve">
          <source>This method is useful for obtaining a numeric representation of an array when all that matters is identifying distinct values. &lt;code&gt;factorize&lt;/code&gt; is available as both a top-level function &lt;a href=&quot;#pandas.factorize&quot;&gt;&lt;code&gt;pandas.factorize()&lt;/code&gt;&lt;/a&gt;, and as a method &lt;a href=&quot;pandas.series.factorize#pandas.Series.factorize&quot;&gt;&lt;code&gt;Series.factorize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pandas.index.factorize#pandas.Index.factorize&quot;&gt;&lt;code&gt;Index.factorize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 중요한 모든 것이 고유 한 값을 식별 할 때 배열의 숫자 표현을 얻는 데 유용합니다. &lt;code&gt;factorize&lt;/code&gt; 는 최상위 함수 &lt;a href=&quot;#pandas.factorize&quot;&gt; &lt;code&gt;pandas.factorize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pandas.series.factorize#pandas.Series.factorize&quot;&gt; &lt;code&gt;Series.factorize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pandas.index.factorize#pandas.Index.factorize&quot;&gt; &lt;code&gt;Index.factorize()&lt;/code&gt; &lt;/a&gt; 메소드로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5fd2980ee1697e11427c2bf2f0b8544494011e3" translate="yes" xml:space="preserve">
          <source>This method is useful for obtaining a numeric representation of an array when all that matters is identifying distinct values. &lt;code&gt;factorize&lt;/code&gt; is available as both a top-level function &lt;a href=&quot;pandas.factorize#pandas.factorize&quot;&gt;&lt;code&gt;pandas.factorize()&lt;/code&gt;&lt;/a&gt;, and as a method &lt;a href=&quot;#pandas.Series.factorize&quot;&gt;&lt;code&gt;Series.factorize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pandas.index.factorize#pandas.Index.factorize&quot;&gt;&lt;code&gt;Index.factorize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 중요한 모든 것이 고유 한 값을 식별 할 때 배열의 숫자 표현을 얻는 데 유용합니다. &lt;code&gt;factorize&lt;/code&gt; 는 최상위 함수 &lt;a href=&quot;pandas.factorize#pandas.factorize&quot;&gt; &lt;code&gt;pandas.factorize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#pandas.Series.factorize&quot;&gt; &lt;code&gt;Series.factorize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pandas.index.factorize#pandas.Index.factorize&quot;&gt; &lt;code&gt;Index.factorize()&lt;/code&gt; &lt;/a&gt; 메소드로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8137417c59bd05cacf5e1c38d288625d4dc631eb" translate="yes" xml:space="preserve">
          <source>This method is useful for obtaining a numeric representation of an array when all that matters is identifying distinct values. &lt;code&gt;factorize&lt;/code&gt; is available as both a top-level function &lt;a href=&quot;pandas.factorize#pandas.factorize&quot;&gt;&lt;code&gt;pandas.factorize()&lt;/code&gt;&lt;/a&gt;, and as a method &lt;a href=&quot;pandas.series.factorize#pandas.Series.factorize&quot;&gt;&lt;code&gt;Series.factorize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pandas.Index.factorize&quot;&gt;&lt;code&gt;Index.factorize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 중요한 모든 것이 고유 한 값을 식별 할 때 배열의 숫자 표현을 얻는 데 유용합니다. &lt;code&gt;factorize&lt;/code&gt; 는 최상위 함수 &lt;a href=&quot;pandas.factorize#pandas.factorize&quot;&gt; &lt;code&gt;pandas.factorize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;pandas.series.factorize#pandas.Series.factorize&quot;&gt; &lt;code&gt;Series.factorize()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#pandas.Index.factorize&quot;&gt; &lt;code&gt;Index.factorize()&lt;/code&gt; &lt;/a&gt; 메소드로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3128b61ce67f969fbebac2417c78ee83505e697f" translate="yes" xml:space="preserve">
          <source>This method only works if the index is monotonic or unique.</source>
          <target state="translated">이 방법은 인덱스가 단조롭거나 고유 한 경우에만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e60aa110e2d76313464ff3dff754879c824bd9db" translate="yes" xml:space="preserve">
          <source>This method prints a summary of a DataFrame and returns None.</source>
          <target state="translated">이 메소드는 DataFrame 요약을 인쇄하고 None을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="eddf0977e8b0a74892ff40fadaa3392461c390c8" translate="yes" xml:space="preserve">
          <source>This method prints information about a DataFrame including the index dtype and column dtypes, non-null values and memory usage.</source>
          <target state="translated">이 메소드는 인덱스 dtype 및 열 dtype, 널이 아닌 값 및 메모리 사용량을 포함하여 DataFrame에 대한 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="bb086394a9e885b2c241af38d695b8acd616e44d" translate="yes" xml:space="preserve">
          <source>This method prints information about a DataFrame including the index dtype and columns, non-null values and memory usage.</source>
          <target state="translated">이 메서드는 인덱스 dtype 및 열, null이 아닌 값 및 메모리 사용량을 포함하여 DataFrame에 대한 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="d76ae2fa1e49d00983dfa736bde6a66aea45d5f5" translate="yes" xml:space="preserve">
          <source>This method returns a new object that&amp;rsquo;s a view on the same data as the input. Mutating the input or the output values will be reflected in the other.</source>
          <target state="translated">이 메서드는 입력과 동일한 데이터에 대한 뷰인 새 개체를 반환합니다. 입력 또는 출력 값을 변경하면 다른 값에 반영됩니다.</target>
        </trans-unit>
        <trans-unit id="8794c3efec0dc7822321fb0c3644fad3b15d259d" translate="yes" xml:space="preserve">
          <source>This method returns an iterable tuple (index, value). This is convenient if you want to create a lazy iterator.</source>
          <target state="translated">이 메소드는 반복 가능한 튜플 (인덱스, 값)을 리턴합니다. 지연 반복자를 작성하려는 경우에 편리합니다.</target>
        </trans-unit>
        <trans-unit id="4470bb69e3a3bf54a6106152b6df4cb35440ff3b" translate="yes" xml:space="preserve">
          <source>This method splits the string at the first occurrence of</source>
          <target state="translated">이 메서드는 첫 번째 발생시 문자열을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="0860bca18e7a4a1616ba554c7e0b45d7d93e7899" translate="yes" xml:space="preserve">
          <source>This method splits the string at the first occurrence of &lt;code&gt;sep&lt;/code&gt;, and returns 3 elements containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return 3 elements containing the string itself, followed by two empty strings.</source>
          <target state="translated">이 메소드는 &lt;code&gt;sep&lt;/code&gt; 가 처음 나타날 때 문자열을 분할하고 구분 기호 앞 부분, 구분자 자체 및 구분 기호 뒤 부분을 포함하는 3 개의 요소를 리턴합니다. 구분 기호를 찾을 수 없으면 문자열 자체를 포함하는 3 개의 요소와 두 개의 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f9115c6b2ad2c7d7f4b8214d917f1ebca0a2479" translate="yes" xml:space="preserve">
          <source>This method splits the string at the last occurrence of</source>
          <target state="translated">이 메서드는 마지막 항목에서 문자열을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="77359f849815631897870b32fec319fbbe6f8ebd" translate="yes" xml:space="preserve">
          <source>This method splits the string at the last occurrence of &lt;code&gt;sep&lt;/code&gt;, and returns 3 elements containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, return 3 elements containing two empty strings, followed by the string itself.</source>
          <target state="translated">이 메소드는 마지막 &lt;code&gt;sep&lt;/code&gt; 발생시 문자열을 분할하고 구분 기호 앞 부분, 구분자 자체 및 구분 기호 뒤 부분을 포함하는 3 개의 요소를 리턴합니다. 구분 기호를 찾을 수 없으면 두 개의 빈 문자열이 포함 된 3 개의 요소와 문자열 자체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc6610e065bf7c1c85950aa0fbf7b2a56c4ab985" translate="yes" xml:space="preserve">
          <source>This method takes a</source>
          <target state="translated">이 방법은</target>
        </trans-unit>
        <trans-unit id="3119b07e4befa5537fd376ec91310949a91ec44e" translate="yes" xml:space="preserve">
          <source>This method takes a &lt;code&gt;key&lt;/code&gt; argument to select data at a particular level of a MultiIndex.</source>
          <target state="translated">이 방법은 특정 수준의 MultiIndex에서 데이터를 선택하기 위해 &lt;code&gt;key&lt;/code&gt; 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8707c090d9af44c445e59eae25906822109d28d9" translate="yes" xml:space="preserve">
          <source>This method takes a time zone (tz) naive Datetime Array/Index object and makes this time zone aware. It does not move the time to another time zone. Time zone localization helps to switch from time zone aware to time zone unaware objects.</source>
          <target state="translated">이 메서드는 표준 시간대 (tz) 순진 Datetime 배열 / 인덱스 개체를 사용하여이 표준 시간대를 인식합니다. 다른 시간대로 시간을 이동하지 않습니다. 시간대 지역화는 시간대 인식에서 시간대를 인식하지 못하는 객체로 전환하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="2c933c0873fc5ce09ce8835385b1078505ce72df" translate="yes" xml:space="preserve">
          <source>This method uses the top-level &lt;a href=&quot;pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; function to evaluate the passed query.</source>
          <target state="translated">이 메소드는 최상위 &lt;a href=&quot;pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 전달 된 쿼리를 평가합니다.</target>
        </trans-unit>
        <trans-unit id="dc87e8475f20503057128ed429d87a9e8a96b85b" translate="yes" xml:space="preserve">
          <source>This method will simply return the caller if called by anything other than a MultiIndex.</source>
          <target state="translated">이 메소드는 MultiIndex 이외의 것으로 호출 된 경우 호출자를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="67b073635dead5d395881aea820bae0b82e49c16" translate="yes" xml:space="preserve">
          <source>This might unintendedly lead to looking ahead, where the value for a later time is pulled back to a previous time as in the following example with the &lt;a href=&quot;../reference/api/pandas.tseries.offsets.businessday#pandas.tseries.offsets.BusinessDay&quot;&gt;&lt;code&gt;BusinessDay&lt;/code&gt;&lt;/a&gt; frequency:</source>
          <target state="translated">이로 인해 의도하지 않게 앞을 내다 볼 수 있으며, &lt;a href=&quot;../reference/api/pandas.tseries.offsets.businessday#pandas.tseries.offsets.BusinessDay&quot;&gt; &lt;code&gt;BusinessDay&lt;/code&gt; &lt;/a&gt; 빈도 를 사용하는 다음 예에서와 같이 나중에 값이 이전 시간으로 되돌아가는 경우가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa497becb95be190bf54e44e9e49a57975bf3ba4" translate="yes" xml:space="preserve">
          <source>This must be a boolean scalar value, either True or False. It will raise a ValueError if the Series or DataFrame does not have exactly 1 element, or that element is not boolean (integer values 0 and 1 will also raise an exception).</source>
          <target state="translated">True 또는 False의 부울 스칼라 값이어야합니다. Series 또는 DataFrame에 정확히 1 개의 요소가 없거나 해당 요소가 부울이 아닌 경우 ValueError가 발생합니다 (정수 값 0과 1도 예외를 발생시킵니다).</target>
        </trans-unit>
        <trans-unit id="8cb898735f8aa037bfda0a864f41acf403b85111" translate="yes" xml:space="preserve">
          <source>This must be a boolean scalar value, either True or False. Raise a ValueError if the PandasObject does not have exactly 1 element, or that element is not boolean</source>
          <target state="translated">부울 스칼라 값 (True 또는 False)이어야합니다. PandasObject에 정확히 1 개의 요소가 없거나 해당 요소가 부울이 아닌 경우 ValueError 발생</target>
        </trans-unit>
        <trans-unit id="da0769d00b122b5aaa1ce79bf5af69c331d6006d" translate="yes" xml:space="preserve">
          <source>This only applies if any of the groupers are Categoricals. If True: only show observed values for categorical groupers. If False: show all values for categorical groupers.</source>
          <target state="translated">그룹화 그룹 중 하나가 범주 형인 경우에만 적용됩니다. 참인 경우 : 범주 형 그룹 화자에 대한 관찰 된 값만 표시하십시오. False 인 경우 : 분류 그룹화에 대한 모든 값을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="f6227a95b3cf2eedb4329a0c1a5b6cd9abccf076" translate="yes" xml:space="preserve">
          <source>This operation localizes the Index. To localize the values in a timezone-naive Series, use &lt;a href=&quot;pandas.series.dt.tz_localize#pandas.Series.dt.tz_localize&quot;&gt;&lt;code&gt;Series.dt.tz_localize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 작업은 인덱스를 지역화합니다. 표준 시간대 &lt;a href=&quot;pandas.series.dt.tz_localize#pandas.Series.dt.tz_localize&quot;&gt; &lt;code&gt;Series.dt.tz_localize()&lt;/code&gt; &lt;/a&gt; Series의 값을 현지화하려면 Series.dt.tz_localize ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ad167d0f1cecaa7960be2d99ae76b6502c46a8b" translate="yes" xml:space="preserve">
          <source>This optional parameter specifies the interpolation method to use, when the desired quantile lies between two data points</source>
          <target state="translated">이 선택적 매개 변수는 원하는 분위수가 두 데이터 포인트 사이에있을 때 사용할 보간 방법을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c69034b71a2e7b13ae9e77740b3765ccb1f5ec73" translate="yes" xml:space="preserve">
          <source>This optional parameter specifies the interpolation method to use, when the desired quantile lies between two data points &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;:</source>
          <target state="translated">이 선택적 매개 변수는 원하는 Quantile이 두 데이터 포인트 &lt;code&gt;i&lt;/code&gt; 와 &lt;code&gt;j&lt;/code&gt; 사이에있을 때 사용할 보간 방법을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="0f5e4f9a918f84de2d22d23de9e26c6f7f0345c0" translate="yes" xml:space="preserve">
          <source>This options handles missing values and treats exceptions in the converters as missing data. Transformations are applied cell by cell rather than to the column as a whole, so the array dtype is not guaranteed. For instance, a column of integers with missing values cannot be transformed to an array with integer dtype, because NaN is strictly a float. You can manually mask missing data to recover integer dtype:</source>
          <target state="translated">이 옵션은 누락 된 값을 처리하고 변환기의 예외를 누락 된 데이터로 처리합니다. 변환은 열 전체가 아닌 셀 단위로 적용되므로 배열 dtype이 보장되지 않습니다. 예를 들어, 누락 된 값이있는 정수 열은 NaN이 엄격하게 부동 소수점이기 때문에 정수 dtype을 사용하는 배열로 변환 할 수 없습니다. 누락 된 데이터를 수동으로 마스킹하여 정수 dtype을 복구 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3059a053c2ac66c37e5393d975d6063876a22148" translate="yes" xml:space="preserve">
          <source>This page gives an overview of all public pandas objects, functions and methods. All classes and functions exposed in &lt;code&gt;pandas.*&lt;/code&gt; namespace are public.</source>
          <target state="translated">이 페이지는 모든 퍼블릭 팬더 객체, 함수 및 메소드에 대한 개요를 제공합니다. &lt;code&gt;pandas.*&lt;/code&gt; 네임 스페이스에 공개 된 모든 클래스와 함수 는 공개입니다.</target>
        </trans-unit>
        <trans-unit id="6216c3dad6c31553fa86ce20962b0025ce3a23ee" translate="yes" xml:space="preserve">
          <source>This page is also here to offer a bit of a translation guide for users of these R packages.</source>
          <target state="translated">이 페이지는 또한 이러한 R 패키지 사용자를위한 약간의 번역 안내서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c7e7bc3d3fd7f228f95ae7d3685bd6d7ee07d741" translate="yes" xml:space="preserve">
          <source>This param has been deprecated as of version 1.0.0 and will raise a &lt;code&gt;FutureWarning&lt;/code&gt;.</source>
          <target state="translated">이 매개 변수는 버전 1.0.0에서 더 이상 사용되지 않으며 &lt;code&gt;FutureWarning&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="1dea9b547b13ce7cdff683f0cff11a7545310a64" translate="yes" xml:space="preserve">
          <source>This parameter can be either a single column key, a single array of the same length as the calling DataFrame, or a list containing an arbitrary combination of column keys and arrays. Here, &amp;ldquo;array&amp;rdquo; encompasses &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;np.ndarray&lt;/code&gt;, and instances of &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 매개 변수는 단일 열 키, 호출 DataFrame과 길이가 같은 단일 배열 또는 열 키와 배열의 임의 조합을 포함하는 목록 일 수 있습니다. 여기서 &quot;배열&quot;은 &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;np.ndarray&lt;/code&gt; 및 &lt;a href=&quot;https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; 인스턴스를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="ae44b4e4a3263d2cc853528a9e2d71fe94b2ac35" translate="yes" xml:space="preserve">
          <source>This plot was created using a &lt;code&gt;DataFrame&lt;/code&gt; with 3 columns each containing floating point values generated using &lt;code&gt;numpy.random.randn()&lt;/code&gt;.</source>
          <target state="translated">이 플롯은 각각 &lt;code&gt;numpy.random.randn()&lt;/code&gt; 사용하여 생성 된 부동 소수점 값을 포함하는 3 개의 열이 있는 &lt;code&gt;DataFrame&lt;/code&gt; 을 사용하여 생성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9f655a645e84d84fc73a73f0824ed32157fdadc0" translate="yes" xml:space="preserve">
          <source>This raises a &lt;code&gt;TypeError&lt;/code&gt; because one of the &lt;code&gt;dict&lt;/code&gt; keys is not of the correct type for replacement.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; 키 중 하나가 올바른 교체 유형이 아니기 때문에 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="17f64bea06289a99cd902345a371757dc6a897d5" translate="yes" xml:space="preserve">
          <source>This request then goes to the repository maintainers, and they will review the code.</source>
          <target state="translated">이 요청은 리포지토리 관리자에게 전달되고 코드를 검토합니다.</target>
        </trans-unit>
        <trans-unit id="a7c95a7094c67643b0ab6f28404c1944c7bf3197" translate="yes" xml:space="preserve">
          <source>This returns a Series with the data type of each column. The result&amp;rsquo;s index is the original DataFrame&amp;rsquo;s columns. Columns with mixed types are stored with the &lt;code&gt;object&lt;/code&gt; dtype. See &lt;a href=&quot;../../getting_started/basics#basics-dtypes&quot;&gt;the User Guide&lt;/a&gt; for more.</source>
          <target state="translated">각 열의 데이터 형식이있는 Series를 반환합니다. 결과 색인은 원래 DataFrame의 열입니다. 유형이 혼합 된 열은 &lt;code&gt;object&lt;/code&gt; dtype 과 함께 저장됩니다 . 자세한 내용 &lt;a href=&quot;../../getting_started/basics#basics-dtypes&quot;&gt;은 사용 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="739e9fc0fb90713b37bada0472825ade8dbd253c" translate="yes" xml:space="preserve">
          <source>This returns a Series with the data type of each column. The result&amp;rsquo;s index is the original DataFrame&amp;rsquo;s columns. Columns with mixed types are stored with the &lt;code&gt;object&lt;/code&gt; dtype. See &lt;a href=&quot;../../user_guide/basics#basics-dtypes&quot;&gt;the User Guide&lt;/a&gt; for more.</source>
          <target state="translated">그러면 각 열의 데이터 유형이있는 Series가 반환됩니다. 결과의 인덱스는 원래 DataFrame의 열입니다. 유형이 혼합 된 열은 dtype &lt;code&gt;object&lt;/code&gt; 와 함께 저장됩니다 . 자세한 내용 &lt;a href=&quot;../../user_guide/basics#basics-dtypes&quot;&gt;은 사용 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="202970e382ee327f2926498e488b4dd6108e1f58" translate="yes" xml:space="preserve">
          <source>This returns a new Index with elements common to the index and</source>
          <target state="translated">이렇게하면 인덱스에 공통된 요소가있는 새 인덱스가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0152631f97602783a59ef0a729e6ca5a7eefe8be" translate="yes" xml:space="preserve">
          <source>This returns a new Index with elements common to the index and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">이것은 index와 &lt;code&gt;other&lt;/code&gt; 에 공통된 요소를 가진 새로운 Index를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9d51e7654970d50ac7ca8e3065a05f8b77d8e9a1" translate="yes" xml:space="preserve">
          <source>This routine will explode list-likes including lists, tuples, Series, and np.ndarray. The result dtype of the subset rows will be object. Scalars will be returned unchanged. Empty list-likes will result in a np.nan for that row.</source>
          <target state="translated">이 루틴은 목록, 튜플, 시리즈 및 np.ndarray를 포함하여 목록과 유사합니다. 서브 세트 행의 결과 dtype은 오브젝트입니다. 스칼라는 변경없이 반환됩니다. 비어있는 목록 모양은 해당 행에 np.nan이됩니다.</target>
        </trans-unit>
        <trans-unit id="173bb898d28a3beb4d57924b575431d1d0d4c02e" translate="yes" xml:space="preserve">
          <source>This routine will explode list-likes including lists, tuples, sets, Series, and np.ndarray. The result dtype of the subset rows will be object. Scalars will be returned unchanged, and empty list-likes will result in a np.nan for that row. In addition, the ordering of elements in the output will be non-deterministic when exploding sets.</source>
          <target state="translated">이 루틴은 목록, 튜플, 집합, Series 및 np.ndarray를 포함하여 목록과 유사한 항목을 폭발시킵니다. 하위 집합 행의 결과 dtype은 개체가됩니다. 스칼라는 변경되지 않고 반환되며 빈 목록 유사 항목은 해당 행에 대해 np.nan을 생성합니다. 또한 출력에서 ​​요소의 순서는 집합을 분해 할 때 결정적이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31aafb5523b23185d52206a4bf250f751e3a731a" translate="yes" xml:space="preserve">
          <source>This routine will explode list-likes including lists, tuples, sets, Series, and np.ndarray. The result dtype of the subset rows will be object. Scalars will be returned unchanged, and empty list-likes will result in a np.nan for that row. In addition, the ordering of rows in the output will be non-deterministic when exploding sets.</source>
          <target state="translated">이 루틴은 목록, 튜플, 집합, Series 및 np.ndarray를 포함하여 목록과 유사한 항목을 폭발시킵니다. 하위 집합 행의 결과 dtype은 개체가됩니다. 스칼라는 변경되지 않고 반환되며 빈 목록 유사 항목은 해당 행에 대해 np.nan을 생성합니다. 또한 출력에서 ​​행의 순서는 집합을 확장 할 때 결정적이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd82b53e184606bb55735603cad2bebf66e6927d" translate="yes" xml:space="preserve">
          <source>This script will indicate some formatting errors if present, and will also run and test the examples included in the docstring. Check the &lt;a href=&quot;contributing_docstring#docstring&quot;&gt;pandas docstring guide&lt;/a&gt; for a detailed guide on how to format the docstring.</source>
          <target state="translated">이 스크립트는 존재하는 경우 일부 형식 오류를 표시하고 docstring에 포함 된 예제를 실행하고 테스트합니다. &lt;a href=&quot;contributing_docstring#docstring&quot;&gt;docstring의&lt;/a&gt; 형식 지정 방법에 대한 자세한 안내서 는 pandas docstring 안내서 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="689e1bc356e69c1b1a72b35c97f85f30345934f5" translate="yes" xml:space="preserve">
          <source>This section covers &lt;a href=&quot;#advanced-hierarchical&quot;&gt;indexing with a MultiIndex&lt;/a&gt; and &lt;a href=&quot;#indexing-index-types&quot;&gt;other advanced indexing features&lt;/a&gt;.</source>
          <target state="translated">이 섹션에서는 &lt;a href=&quot;#advanced-hierarchical&quot;&gt;MultiIndex&lt;/a&gt; 및 &lt;a href=&quot;#indexing-index-types&quot;&gt;기타 고급 인덱싱 기능을 사용한 인덱싱에 대해 설명합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d2a1fa3f479ece4525dc30298918e4d8ba03887" translate="yes" xml:space="preserve">
          <source>This section describes how duplicate labels change the behavior of certain operations, and how prevent duplicates from arising during operations, or to detect them if they do.</source>
          <target state="translated">이 섹션에서는 중복 레이블이 특정 작업의 동작을 변경하는 방법과 작업 중에 중복이 발생하는 것을 방지하거나 중복이 발생하는 경우이를 감지하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f209a9a389ec8b793482f75fb64df1e19393beca" translate="yes" xml:space="preserve">
          <source>This section describes how to subclass &lt;code&gt;pandas&lt;/code&gt; data structures to meet more specific needs. There are two points that need attention:</source>
          <target state="translated">이 섹션에서는 &lt;code&gt;pandas&lt;/code&gt; 데이터 구조를 서브 클래 싱 하여보다 구체적인 요구를 충족시키는 방법에 대해 설명 합니다. 주의해야 할 두 가지 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="47303db9ed329715b72028899c6aa3e67f5f45e8" translate="yes" xml:space="preserve">
          <source>This section follows the same format as the extended summary section.</source>
          <target state="translated">이 섹션은 확장 요약 섹션과 동일한 형식을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="7fd3897f1296b2b15b4e3dff782c293d8aaa1d56" translate="yes" xml:space="preserve">
          <source>This section is used to let users know about pandas functionality related to the one being documented. In rare cases, if no related methods or functions can be found at all, this section can be skipped.</source>
          <target state="translated">이 섹션은 문서화되는 팬더 기능과 관련된 팬더 기능을 사용자에게 알리는 데 사용됩니다. 드문 경우지만 관련 방법이나 기능을 전혀 찾지 못하면이 섹션을 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fd98dbc8f7fe7e093845e1dfe4959d0b3c4a369" translate="yes" xml:space="preserve">
          <source>This section provides some guidance on migrating your code to the new style. As a reminder, you can use the Python warnings module to control warnings. But we recommend modifying your code, rather than ignoring the warning.</source>
          <target state="translated">이 섹션에서는 코드를 새 스타일로 마이그레이션하는 방법에 대한 몇 가지 지침을 제공합니다. 참고로 Python 경고 모듈을 사용하여 경고를 제어 할 수 있습니다. 그러나 경고를 무시하는 것보다 코드를 수정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="97fb3ec71f33da750995b66b6859ca1b1d8b7a3a" translate="yes" xml:space="preserve">
          <source>This section will focus on downstream applications of pandas.</source>
          <target state="translated">이 섹션에서는 팬더의 다운 스트림 애플리케이션에 중점을 둘 것입니다.</target>
        </trans-unit>
        <trans-unit id="e681ffb046699302d581ca49c596c12166f99b50" translate="yes" xml:space="preserve">
          <source>This section will provide a look into some of pandas internals. It&amp;rsquo;s primarily intended for developers of pandas itself.</source>
          <target state="translated">이 섹션에서는 일부 팬더 내부를 살펴 봅니다. 주로 팬더 자체 개발자를 대상으로합니다.</target>
        </trans-unit>
        <trans-unit id="d328d9e2438a70d52c356e68d371064083376c1f" translate="yes" xml:space="preserve">
          <source>This section, as the previous, also has a header, &amp;ldquo;See Also&amp;rdquo; (note the capital S and A). Also followed by the line with hyphens, and preceded by a blank line.</source>
          <target state="translated">이 섹션에는 이전과 마찬가지로&amp;ldquo;참조&amp;rdquo;라는 제목도 있습니다 (대문자 S 및 A 참고). 또한 하이픈이있는 줄과 빈 줄이 앞에옵니다.</target>
        </trans-unit>
        <trans-unit id="6f0bb346bb2b07e266e1ed4cc3b514f55560a4bf" translate="yes" xml:space="preserve">
          <source>This sets the maximum number of categories pandas should output when printing out a</source>
          <target state="translated">팬더가 출력 할 때 출력해야하는 최대 카테고리 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0b13df038ebde458ae4b00f917d16734561f29bf" translate="yes" xml:space="preserve">
          <source>This sets the maximum number of rows pandas should output when printing out various output. For example, this value determines whether the repr() for a dataframe prints out fully or just a truncated or summary repr. &amp;lsquo;None&amp;rsquo; value means unlimited.</source>
          <target state="translated">다양한 출력을 출력 할 때 팬더가 출력해야하는 최대 행 수를 설정합니다. 예를 들어,이 값은 데이터 프레임에 대한 repr ()이 완전히 인쇄되는지 아니면 잘린 또는 요약 repr 만 인쇄하는지 여부를 결정합니다. '없음'값은 무제한을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="dc63698847500095e7ef2bb857dc3da939a3e388" translate="yes" xml:space="preserve">
          <source>This should match the NumPy dtype used when the array is converted to an ndarray, which is probably &amp;lsquo;O&amp;rsquo; for object if the extension type cannot be represented as a built-in NumPy type.</source>
          <target state="translated">이것은 배열이 ndarray로 변환 될 때 사용되는 NumPy dtype과 일치해야합니다. 확장 유형을 내장 NumPy 유형으로 표시 할 수없는 경우 객체의 경우 'O'일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d02413a62795233afcc728169831f367746b5003" translate="yes" xml:space="preserve">
          <source>This shows the first or last n rows from each group.</source>
          <target state="translated">각 그룹의 처음 또는 마지막 n 개 행을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d632b2871dc981cc4c84fe8b5d21ffb747ef2566" translate="yes" xml:space="preserve">
          <source>This solution uses &lt;a href=&quot;../reference/api/pandas.pivot_table#pandas.pivot_table&quot;&gt;&lt;code&gt;pivot_table()&lt;/code&gt;&lt;/a&gt;. Also note that &lt;code&gt;aggfunc='mean'&lt;/code&gt; is the default. It is included here to be explicit.</source>
          <target state="translated">이 솔루션은 &lt;a href=&quot;../reference/api/pandas.pivot_table#pandas.pivot_table&quot;&gt; &lt;code&gt;pivot_table()&lt;/code&gt; &lt;/a&gt; 사용합니다 . 또한 &lt;code&gt;aggfunc='mean'&lt;/code&gt; 이 기본값입니다. 여기에 명시 적으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="451d23930ae09abaf317d0ac8e13e0018e8ff057" translate="yes" xml:space="preserve">
          <source>This specification will select a column via the key parameter, or if the level and/or axis parameters are given, a level of the index of the target object.</source>
          <target state="translated">이 스펙은 키 매개 변수를 통해 열을 선택하거나 레벨 및 / 또는 축 매개 변수가 제공되는 경우 대상 오브젝트의 색인 레벨을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="d1f3a19ef0faa47ef189d2d357b186ddb650a044" translate="yes" xml:space="preserve">
          <source>This specifies a stop time &lt;strong&gt;that includes all of the times on the last day&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;마지막 날의 모든&lt;/strong&gt; 시간 &lt;strong&gt;을 포함&lt;/strong&gt; 하는 중지 시간 &lt;strong&gt;을&lt;/strong&gt; 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="13b4613c045dbcbc71790c07f8aafc5ecc675e22" translate="yes" xml:space="preserve">
          <source>This specifies an &lt;strong&gt;exact&lt;/strong&gt; stop time (and is not the same as the above):</source>
          <target state="translated">&lt;strong&gt;정확한&lt;/strong&gt; 중지 시간을 지정합니다 (위와 같지 않음).</target>
        </trans-unit>
        <trans-unit id="345cdf1196726487d39eecbd8448945f46ddb2ee" translate="yes" xml:space="preserve">
          <source>This specifies if the memory usage of a DataFrame should be displayed when df.info() is called. Valid values True,False,&amp;rsquo;deep&amp;rsquo; [default: True] [currently: True]</source>
          <target state="translated">df.info ()가 호출 될 때 DataFrame의 메모리 사용량이 표시되어야하는지 여부를 지정합니다. 유효한 값 True, False, 'deep'[기본값 : True] [현재 : True]</target>
        </trans-unit>
        <trans-unit id="d831856ed4540c8389476273ebbc077d40ec454c" translate="yes" xml:space="preserve">
          <source>This specifies if the memory usage of a DataFrame should be displayed when the df.info() method is invoked.</source>
          <target state="translated">df.info () 메서드가 호출 될 때 DataFrame의 메모리 사용량을 표시해야하는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e29c36bc1573d2ba259792adafba28fa9ff60ff5" translate="yes" xml:space="preserve">
          <source>This specifies if the to_latex method of a Dataframe uses escapes special characters. Valid values: False,True [default: True] [currently: True]</source>
          <target state="translated">이는 Dataframe의 to_latex 메소드가 이스케이프 특수 문자를 사용하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : True] [현재 : True]</target>
        </trans-unit>
        <trans-unit id="d7c4cc41d85506bc982a607356594a3a2de23947" translate="yes" xml:space="preserve">
          <source>This specifies if the to_latex method of a Dataframe uses multicolumns to pretty-print MultiIndex columns. Valid values: False,True [default: True] [currently: True]</source>
          <target state="translated">이는 Dataframe의 to_latex 메서드가 다중 열을 사용하여 MultiIndex 열을 예쁘게 인쇄하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : True] [현재 : True]</target>
        </trans-unit>
        <trans-unit id="411c1359f542b4c28d9397ac4e4efd7fc77c4334" translate="yes" xml:space="preserve">
          <source>This specifies if the to_latex method of a Dataframe uses multicolumns to pretty-print MultiIndex columns. Valid values: False,True [default: l] [currently: l]</source>
          <target state="translated">이는 Dataframe의 to_latex 메서드가 다중 열을 사용하여 MultiIndex 열을 예쁘게 인쇄하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : l] [현재 : l]</target>
        </trans-unit>
        <trans-unit id="a108a7b9872f1e1905a0a0bffd4720e8caf50ed5" translate="yes" xml:space="preserve">
          <source>This specifies if the to_latex method of a Dataframe uses multirows to pretty-print MultiIndex rows. Valid values: False,True [default: False] [currently: False]</source>
          <target state="translated">이는 Dataframe의 to_latex 메소드가 다중 행을 사용하여 MultiIndex 행을 예쁘게 인쇄하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : False] [현재 : False]</target>
        </trans-unit>
        <trans-unit id="37bba22c1b744df5ab8c33db1e4611569e62efef" translate="yes" xml:space="preserve">
          <source>This specifies if the to_latex method of a Dataframe uses the longtable format. Valid values: False,True [default: False] [currently: False]</source>
          <target state="translated">이는 Dataframe의 to_latex 메소드가 longtable 형식을 사용하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : False] [현재 : False]</target>
        </trans-unit>
        <trans-unit id="e108630e285035b5c65e9d7ed6b16c7cfeab4001" translate="yes" xml:space="preserve">
          <source>This starts on the very first time in the month, and includes the last date and time for the month:</source>
          <target state="translated">이는 해당 월의 맨 처음에 시작되며 해당 월의 마지막 날짜와 시간을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6d48c37a6ec4b688afe36a3e4d4a79326d7f9dfd" translate="yes" xml:space="preserve">
          <source>This supports numeric data only. Index and columns labels may be non-numeric, e.g. strings, dates etc.</source>
          <target state="translated">이것은 숫자 데이터 만 지원합니다. 인덱스 및 열 레이블은 숫자가 아닐 수 있습니다 (예 : 문자열, 날짜 등).</target>
        </trans-unit>
        <trans-unit id="2dae3fb810c31dbdabe6d8e191b84551ae48c273" translate="yes" xml:space="preserve">
          <source>This table demonstrates the results for every combination. These operations are symmetrical, so flipping the left- and right-hand side makes no difference in the result.</source>
          <target state="translated">이 표는 모든 조합에 대한 결과를 보여줍니다. 이러한 작업은 대칭이므로 왼쪽과 오른쪽을 뒤집어도 결과에 차이가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cc46b9b036c8ff89872dbdfaafdb270b6eca0887" translate="yes" xml:space="preserve">
          <source>This table lays out the different array types for each extension dtype within pandas.</source>
          <target state="translated">이 표는 팬더 내의 각 확장 dtype에 대해 다른 배열 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5f6fed36ad397607ea121821b5c24aee97b88043" translate="yes" xml:space="preserve">
          <source>This table lays out the different dtypes and default return types of &lt;code&gt;to_numpy()&lt;/code&gt; for various dtypes within pandas.</source>
          <target state="translated">이 표 는 팬더 내의 다양한 dtype에 대해 서로 다른 dtype과 &lt;code&gt;to_numpy()&lt;/code&gt; 의 기본 반환 유형을 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="3dde14ef838511140d8095b819f72c037e94af90" translate="yes" xml:space="preserve">
          <source>This test shows off several useful features of Hypothesis, as well as demonstrating a good use-case: checking properties that should hold over a large or complicated domain of inputs.</source>
          <target state="translated">이 테스트는 가설의 몇 가지 유용한 기능을 보여주고 좋은 활용 사례를 보여줍니다. 크고 복잡한 입력 영역을 유지해야하는 속성 확인.</target>
        </trans-unit>
        <trans-unit id="592ad8a7b37990f8a75bae1653438890f5175e7f" translate="yes" xml:space="preserve">
          <source>This trade-off is made largely for memory and performance reasons, and also so that the resulting &lt;code&gt;Series&lt;/code&gt; continues to be &amp;ldquo;numeric&amp;rdquo;.</source>
          <target state="translated">이 절충안은 주로 메모리 및 성능상의 이유로 이루어지며 결과 &lt;code&gt;Series&lt;/code&gt; 는 계속해서 &quot;숫자&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="a50ba13d827d6189c3ad97d769bd1ef7e7b3251a" translate="yes" xml:space="preserve">
          <source>This tutorial assumes you have refactored as much as possible in Python, for example by trying to remove for-loops and making use of NumPy vectorization. It&amp;rsquo;s always worth optimising in Python first.</source>
          <target state="translated">이 튜토리얼에서는 for 루프를 제거하고 NumPy 벡터화를 사용하여 파이썬에서 최대한 리팩토링했다고 가정합니다. 항상 파이썬에서 최적화하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1969920e9a097aa4c303680c1eb36cb4b8a7d945" translate="yes" xml:space="preserve">
          <source>This tutorial walks through a &amp;ldquo;typical&amp;rdquo; process of cythonizing a slow computation. We use an &lt;a href=&quot;http://docs.cython.org/src/quickstart/cythonize.html&quot;&gt;example from the Cython documentation&lt;/a&gt; but in the context of pandas. Our final cythonized solution is around 100 times faster than the pure Python solution.</source>
          <target state="translated">이 튜토리얼은 느린 계산을 cythonizing하는 &quot;일반적인&quot;프로세스를 안내합니다. 우리 &lt;a href=&quot;http://docs.cython.org/src/quickstart/cythonize.html&quot;&gt;는 Cython 문서&lt;/a&gt; 의 예제를 사용 하지만 팬더와 관련 하여 사용합니다 . 우리의 최종 cythonized 솔루션은 순수 Python 솔루션보다 약 100 배 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="76d14809b5129dfa1f9f6ccdb29a16200dffdb14" translate="yes" xml:space="preserve">
          <source>This type of slicing will work on a &lt;code&gt;DataFrame&lt;/code&gt; with a &lt;code&gt;DatetimeIndex&lt;/code&gt; as well. Since the partial string selection is a form of label slicing, the endpoints &lt;strong&gt;will be&lt;/strong&gt; included. This would include matching times on an included date:</source>
          <target state="translated">슬라이스의이 유형에서 작동합니다 &lt;code&gt;DataFrame&lt;/code&gt; A를 &lt;code&gt;DatetimeIndex&lt;/code&gt; 뿐만 아니라. 부분 스트링 선택 라벨 슬라이스의 형태이기 때문에, 엔드 포인트가 &lt;strong&gt;될 것&lt;/strong&gt; 입니다. 여기에는 포함 된 날짜의 일치 시간이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="43cae2ae903556c2e0b3ce7f3c57cdd635f6d641" translate="yes" xml:space="preserve">
          <source>This unexpected extra column causes some databases like Amazon Redshift to reject the file, because that column doesn&amp;rsquo;t exist in the target table.</source>
          <target state="translated">이 예기치 않은 추가 열로 인해 Amazon Redshift와 같은 일부 데이터베이스는 해당 열이 대상 테이블에 없기 때문에 파일을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="cc1fc25d8bb3dcdc092a48114ebd740da1daa90a" translate="yes" xml:space="preserve">
          <source>This value is displayed in</source>
          <target state="translated">이 값은</target>
        </trans-unit>
        <trans-unit id="60e4f89cf3c5ad98ceda60e1633015e7afe9c7c9" translate="yes" xml:space="preserve">
          <source>This value is displayed in &lt;code&gt;DataFrame.info&lt;/code&gt; by default. This can be suppressed by setting &lt;code&gt;pandas.options.display.memory_usage&lt;/code&gt; to False.</source>
          <target state="translated">이 값은 기본적으로 &lt;code&gt;DataFrame.info&lt;/code&gt; 에 표시됩니다 . &lt;code&gt;pandas.options.display.memory_usage&lt;/code&gt; 를 False 로 설정 하면이 를 억제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="beb864ccdc545d63df5e1e6d68c4e137e376ee3a" translate="yes" xml:space="preserve">
          <source>This warning is issued when dealing with larger files because the dtype checking happens per chunk read.</source>
          <target state="translated">청크 읽기마다 dtype 검사가 수행되므로 더 큰 파일을 처리 할 때이 경고가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="a90af9dd9868c9663f1a8854ffbdbb3cd81d74d6" translate="yes" xml:space="preserve">
          <source>This will &lt;strong&gt;not&lt;/strong&gt; modify &lt;code&gt;df&lt;/code&gt; because the column alignment is before value assignment.</source>
          <target state="translated">이 것 &lt;strong&gt;없는&lt;/strong&gt; 수정 &lt;code&gt;df&lt;/code&gt; 열 정렬 값 할당하기 전에 때문이다.</target>
        </trans-unit>
        <trans-unit id="973b64f97d2ef7e5a84d5ffe4f9c0eb40570d4c5" translate="yes" xml:space="preserve">
          <source>This will automatically update your pull request with the latest code and restart the &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; tests.</source>
          <target state="translated">그러면 최신 코드로 풀 요청이 자동으로 업데이트되고 &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; 테스트가 다시 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="a90a6c4ec0b650116e6da4e02de3e0f3d22f5b2e" translate="yes" xml:space="preserve">
          <source>This will create a minimal environment with only Python installed in it. To put your self inside this environment run:</source>
          <target state="translated">이렇게하면 Python 만 설치되어있는 최소 환경이 만들어집니다. 이 환경에 자신을 두려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="64a3f38d7825817b82702b8805e103ed2459ef0c" translate="yes" xml:space="preserve">
          <source>This will create the new environment, and not touch any of your existing environments, nor any existing Python installation.</source>
          <target state="translated">이렇게하면 새로운 환경이 만들어지고 기존 환경이나 기존 Python 설치를 건드리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f3dcd64e3204448ae0e79f6078beecc92d76f8b2" translate="yes" xml:space="preserve">
          <source>This will display stderr from the benchmarks, and use your local &lt;code&gt;python&lt;/code&gt; that comes from your &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">벤치 마크에서 stderr을 표시하고 &lt;code&gt;$PATH&lt;/code&gt; 에서 제공되는 로컬 &lt;code&gt;python&lt;/code&gt; 을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="164397b1fc419c218a19b833909f3b3b9042ed48" translate="yes" xml:space="preserve">
          <source>This will fail as there are ambiguous times (&lt;code&gt;'11/06/2011 01:00'&lt;/code&gt;)</source>
          <target state="translated">모호한 시간이있어 실패합니다 ( &lt;code&gt;'11/06/2011 01:00'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ecc245ab4d16ad77a8be2baa53833ff1ab37e881" translate="yes" xml:space="preserve">
          <source>This will force Table format, append the input data to the existing.</source>
          <target state="translated">그러면 테이블 형식이 적용되고 입력 데이터가 기존에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="49ae453e29e46d946c33fb2f617e896d8cd3e8b4" translate="yes" xml:space="preserve">
          <source>This will get all the files being changed by the PR (and ending with &lt;code&gt;.py&lt;/code&gt;), and run &lt;code&gt;flake8&lt;/code&gt; on them, one after the other.</source>
          <target state="translated">PR에 의해 변경되고 &lt;code&gt;.py&lt;/code&gt; 로 끝나는 모든 파일을 가져 &lt;code&gt;flake8&lt;/code&gt; 을 차례로 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="66116e76ece6a37f1cd46c1a5ab3bfe4417ca1e3" translate="yes" xml:space="preserve">
          <source>This will groupby the specified frequency if the target selection (via key or level) is a datetime-like object. For full specification of available frequencies, please see &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">대상 선택 (키 또는 레벨을 통한)이 날짜 / 시간과 유사한 객체 인 경우 지정된 빈도로 그룹화됩니다. 사용 가능한 주파수의 전체 사양은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;여기&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0d27354c2e370c0e9b0930da7affbc7b7c535f3" translate="yes" xml:space="preserve">
          <source>This will groupby the specified frequency if the target selection (via key or level) is a datetime-like object. For full specification of available frequencies, please see &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">대상 선택 (키 또는 레벨을 통해)이 datetime 형 객체 인 경우 지정된 빈도로 그룹화됩니다. 사용 가능한 주파수의 전체 사양은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;여기&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca32a4dfef11686c9a932cf499f04cb12fd1810c" translate="yes" xml:space="preserve">
          <source>This will output what your file will look like if the changes are made, and to apply them, run the following command:</source>
          <target state="translated">변경 사항이 있으면 파일 모양을 출력하고 적용하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6c9c668878d4e203e0a788bf8ef0ee909a722fb7" translate="yes" xml:space="preserve">
          <source>This will put the text &lt;em&gt;New in version 0.21.0&lt;/em&gt; wherever you put the sphinx directive. This should also be put in the docstring when adding a new function or method (&lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/v0.20.2/pandas/core/frame.py#L1495&quot;&gt;example&lt;/a&gt;) or a new keyword argument (&lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/v0.20.2/pandas/core/generic.py#L568&quot;&gt;example&lt;/a&gt;).</source>
          <target state="translated">그러면 스핑크스 지시문을 넣을 때마다 &lt;em&gt;버전 0.21.0&lt;/em&gt; 의 텍스트 &lt;em&gt;New가 표시됩니다&lt;/em&gt; . 새 함수 나 메소드 ( &lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/v0.20.2/pandas/core/frame.py#L1495&quot;&gt;예&lt;/a&gt; ) 또는 새 키워드 인수 ( &lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/v0.20.2/pandas/core/generic.py#L568&quot;&gt;예&lt;/a&gt; )를 추가 할 때 docstring에도 넣어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ed7aab8a35d480d26e54cb0b3c3cc01a1cc64882" translate="yes" xml:space="preserve">
          <source>This would be more or less equivalent to:</source>
          <target state="translated">이것은 다음과 다소 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="634cd2e6cde2d98b41e7a610447bdd6bcb80e0ec" translate="yes" xml:space="preserve">
          <source>This would instead return the new ExtensionArray dedicated for string data. If you really need the new array to be backed by a NumPy array, specify that in the dtype.</source>
          <target state="translated">대신 문자열 데이터 전용의 새로운 ExtensionArray를 반환합니다. NumPy 배열이 지원하는 새 배열이 실제로 필요한 경우 dtype에서 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="62b9f83678bd8ce0e0bac50a2c4d5859113b37f6" translate="yes" xml:space="preserve">
          <source>Thousand separators</source>
          <target state="translated">천개의 구분자</target>
        </trans-unit>
        <trans-unit id="d4d7351bd144039f0ad934857f64258268b7bcb5" translate="yes" xml:space="preserve">
          <source>Thousands separator for parsing string columns to numeric. Note that this parameter is only necessary for columns stored as TEXT in Excel, any numeric columns will automatically be parsed, regardless of display format.</source>
          <target state="translated">문자열 열을 숫자로 구문 분석하기위한 천 단위 구분 기호입니다. 이 매개 변수는 Excel에서 TEXT로 저장된 열에 만 필요하며 표시 형식에 관계없이 모든 숫자 열이 자동으로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="d31d4908156dd20f2c665daa3bd02718ca200501" translate="yes" xml:space="preserve">
          <source>Thousands separator.</source>
          <target state="translated">천 단위 구분 기호</target>
        </trans-unit>
        <trans-unit id="e7d883028ca01a1fd0855b14863bfa7121240ec4" translate="yes" xml:space="preserve">
          <source>Thread-safety</source>
          <target state="translated">Thread-safety</target>
        </trans-unit>
        <trans-unit id="682f4e12d69489eec604893bb60cbfdb128f099a" translate="yes" xml:space="preserve">
          <source>Through the &lt;code&gt;keys&lt;/code&gt; argument we can override the existing column names.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 인수를 통해 기존 열 이름을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="800534ef25c202aee761b30a03dd2347a79334c9" translate="yes" xml:space="preserve">
          <source>Throughout this tutorial, the pandas &lt;code&gt;DataFrame&lt;/code&gt; will be displayed by calling &lt;code&gt;df.head()&lt;/code&gt;, which displays the first N (default 5) rows of the &lt;code&gt;DataFrame&lt;/code&gt;. This is often used in interactive work (e.g. &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter notebook&lt;/a&gt; or terminal) &amp;ndash; the equivalent in Stata would be:</source>
          <target state="translated">이 가이드를 통하여, 팬더 &lt;code&gt;DataFrame&lt;/code&gt; 를 호출하여 표시한다 &lt;code&gt;df.head()&lt;/code&gt; , 표시하는 제 N (기본 5)의 행 &lt;code&gt;DataFrame&lt;/code&gt; . 이것은 종종 대화 형 작업 (예 : &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter 노트북&lt;/a&gt; 또는 터미널)에서 사용됩니다. Stata와 동등한 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="477d8c9bc0a4be5eaa4c863a8c508c0fdf36ebf0" translate="yes" xml:space="preserve">
          <source>Throughout this tutorial, the pandas &lt;code&gt;DataFrame&lt;/code&gt; will be displayed by calling &lt;code&gt;df.head()&lt;/code&gt;, which displays the first N (default 5) rows of the &lt;code&gt;DataFrame&lt;/code&gt;. This is often used in interactive work (e.g. &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter notebook&lt;/a&gt; or terminal) - the equivalent in SAS would be:</source>
          <target state="translated">이 가이드를 통하여, 팬더 &lt;code&gt;DataFrame&lt;/code&gt; 를 호출하여 표시한다 &lt;code&gt;df.head()&lt;/code&gt; , 표시하는 제 N (기본 5)의 행 &lt;code&gt;DataFrame&lt;/code&gt; . 이는 종종 대화 형 작업 (예 : &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter 노트북&lt;/a&gt; 또는 터미널)에서 사용됩니다. SAS와 동등한 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8a5f816410cbb637cb40c5ba6f2d01ed3d037bc1" translate="yes" xml:space="preserve">
          <source>Thus far, we&amp;rsquo;ve only factorized lists (which are internally coerced to NumPy arrays). When factorizing pandas objects, the type of</source>
          <target state="translated">지금까지 우리는 (내부적으로 NumPy 배열로 강제 된)리스트 만 분해했습니다. pandas 객체를 분해 할 때</target>
        </trans-unit>
        <trans-unit id="d1ca640241c69227719e9f18f995dcee74d810c7" translate="yes" xml:space="preserve">
          <source>Thus far, we&amp;rsquo;ve only factorized lists (which are internally coerced to NumPy arrays). When factorizing pandas objects, the type of &lt;code&gt;uniques&lt;/code&gt; will differ. For Categoricals, a &lt;code&gt;Categorical&lt;/code&gt; is returned.</source>
          <target state="translated">지금까지 우리는 NumPy 배열로 내부적으로 강제 된 목록 만 인수 화했습니다. 팬더 객체를 분해 할 때 &lt;code&gt;uniques&lt;/code&gt; 유형 이 다릅니다. 범주 형의 경우 &lt;code&gt;Categorical&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4b87c97694dbcd2c1aebf9c596a26c3cf0b6dcdf" translate="yes" xml:space="preserve">
          <source>Thus there are times where you may want to specify specific dtypes via the &lt;code&gt;dtype&lt;/code&gt; keyword argument.</source>
          <target state="translated">따라서 &lt;code&gt;dtype&lt;/code&gt; 키워드 인수 를 통해 특정 dtype을 지정하려는 경우가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a36b445eefee98c2a91e1a97da7fa25fc0bd5cba" translate="yes" xml:space="preserve">
          <source>Thus, as per above, we have the most basic indexing using &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">따라서 위와 같이 &lt;code&gt;[]&lt;/code&gt; 를 사용하여 가장 기본적인 색인을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="66e86a4ae5fb0dfc7725526e07a07fe830e5dc68" translate="yes" xml:space="preserve">
          <source>Thus, for example, iterating over a DataFrame gives you the column names:</source>
          <target state="translated">따라서 예를 들어 DataFrame을 반복하면 열 이름이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="4e0b74fd7e4e5e9b48dd60aaa3fc5236c9255a77" translate="yes" xml:space="preserve">
          <source>Thus, it is strongly encouraged to install &lt;code&gt;openpyxl&lt;/code&gt; to read Excel 2007+ (&lt;code&gt;.xlsx&lt;/code&gt;) files. &lt;strong&gt;Please do not report issues when using ``xlrd`` to read ``.xlsx`` files.&lt;/strong&gt; This is no longer supported, switch to using &lt;code&gt;openpyxl&lt;/code&gt; instead.</source>
          <target state="translated">따라서 Excel &lt;code&gt;openpyxl&lt;/code&gt; ( &lt;code&gt;.xlsx&lt;/code&gt; ) 파일 을 읽으려면 openpyxl 을 설치하는 것이 좋습니다 . &lt;strong&gt;``xlrd``를 사용하여``.xlsx ''파일을 읽을 때 문제를보고하지 마십시오. &lt;/strong&gt;더 이상 지원되지 않습니다 . 대신 &lt;code&gt;openpyxl&lt;/code&gt; 을 사용 하도록 전환하세요 .</target>
        </trans-unit>
        <trans-unit id="aeddfe22a01fc0ff5fb0fe691b08db0b2e2a26c7" translate="yes" xml:space="preserve">
          <source>Tick</source>
          <target state="translated">Tick</target>
        </trans-unit>
        <trans-unit id="8fcc9a6d82fa1bf016f06e840d9a15cb72874ede" translate="yes" xml:space="preserve">
          <source>Tick label font size in points or as a string (e.g.,</source>
          <target state="translated">틱 레이블 글꼴 크기 (포인트 또는 문자열) (예 :</target>
        </trans-unit>
        <trans-unit id="005e2d6d133a507128b3b4a22220c99353a01ab5" translate="yes" xml:space="preserve">
          <source>Tick label font size in points or as a string (e.g., &lt;code&gt;large&lt;/code&gt;).</source>
          <target state="translated">레이블 글꼴 크기를 포인트 단위 또는 문자열로 표시합니다 (예 : &lt;code&gt;large&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b91be3bad2dddb635b9a4327f0ad047518f3fa7d" translate="yes" xml:space="preserve">
          <source>Tick.apply()</source>
          <target state="translated">Tick.apply()</target>
        </trans-unit>
        <trans-unit id="fec7c55fe842d78900b97706e1718f0e4129cad9" translate="yes" xml:space="preserve">
          <source>Tick.apply_index()</source>
          <target state="translated">Tick.apply_index()</target>
        </trans-unit>
        <trans-unit id="7463f5857d907ef1e2eaa78da4de07eef49a797f" translate="yes" xml:space="preserve">
          <source>Tick.base</source>
          <target state="translated">Tick.base</target>
        </trans-unit>
        <trans-unit id="020208071d617cb627b89110c900bb2bcad307a1" translate="yes" xml:space="preserve">
          <source>Tick.copy()</source>
          <target state="translated">Tick.copy()</target>
        </trans-unit>
        <trans-unit id="abe789382a556d93cc25583c950b721f114d1f60" translate="yes" xml:space="preserve">
          <source>Tick.delta</source>
          <target state="translated">Tick.delta</target>
        </trans-unit>
        <trans-unit id="18b8b6252d04454747e17e18291cb6122f2af3f6" translate="yes" xml:space="preserve">
          <source>Tick.freqstr</source>
          <target state="translated">Tick.freqstr</target>
        </trans-unit>
        <trans-unit id="a79bc466fd9bed3cf547af01e0803e6cb7f2c5d7" translate="yes" xml:space="preserve">
          <source>Tick.isAnchored()</source>
          <target state="translated">Tick.isAnchored()</target>
        </trans-unit>
        <trans-unit id="46349a91885da9a1054c3943f05a122af3c88c91" translate="yes" xml:space="preserve">
          <source>Tick.kwds</source>
          <target state="translated">Tick.kwds</target>
        </trans-unit>
        <trans-unit id="c93e443a27418e28b535610699666437a3bafefd" translate="yes" xml:space="preserve">
          <source>Tick.name</source>
          <target state="translated">Tick.name</target>
        </trans-unit>
        <trans-unit id="9e81f2dee86924548e5a995accf3c93391726145" translate="yes" xml:space="preserve">
          <source>Tick.nanos</source>
          <target state="translated">Tick.nanos</target>
        </trans-unit>
        <trans-unit id="7411235bbdc33c689834de89717751dbb3c31a34" translate="yes" xml:space="preserve">
          <source>Tick.normalize</source>
          <target state="translated">Tick.normalize</target>
        </trans-unit>
        <trans-unit id="3470641067ebc45a2dcfdd160963089b0506535f" translate="yes" xml:space="preserve">
          <source>Tick.onOffset()</source>
          <target state="translated">Tick.onOffset()</target>
        </trans-unit>
        <trans-unit id="3c42ed1ebd667112c1fd17294614eaf25049f48c" translate="yes" xml:space="preserve">
          <source>Tick.rollback()</source>
          <target state="translated">Tick.rollback()</target>
        </trans-unit>
        <trans-unit id="acb01fb88f916fb5d43cfdf88e62eaab883bf764" translate="yes" xml:space="preserve">
          <source>Tick.rollforward()</source>
          <target state="translated">Tick.rollforward()</target>
        </trans-unit>
        <trans-unit id="f7daae1db7e9f8b06371d00efe0404fcdcdac93d" translate="yes" xml:space="preserve">
          <source>Tick.rule_code</source>
          <target state="translated">Tick.rule_code</target>
        </trans-unit>
        <trans-unit id="36ae7256499b1aad47073adf6dddba670bc621db" translate="yes" xml:space="preserve">
          <source>Tidy Data</source>
          <target state="translated">깔끔한 데이터</target>
        </trans-unit>
        <trans-unit id="6d403c7850dab621de485bbf677e4e821689cdf6" translate="yes" xml:space="preserve">
          <source>Tiingo</source>
          <target state="translated">Tiingo</target>
        </trans-unit>
        <trans-unit id="8ac3e00029de86efb050d459c1b741e4ec9b87bd" translate="yes" xml:space="preserve">
          <source>Tiling</source>
          <target state="translated">Tiling</target>
        </trans-unit>
        <trans-unit id="690bd8d19b1d5bb91b9484541ca7645dca247cd3" translate="yes" xml:space="preserve">
          <source>Time Series-Related Instance Methods</source>
          <target state="translated">시계열 관련 인스턴스 방법</target>
        </trans-unit>
        <trans-unit id="b62298c90970421f43c0f06714f2cfd522b9e804" translate="yes" xml:space="preserve">
          <source>Time Series-related</source>
          <target state="translated">시계열 관련</target>
        </trans-unit>
        <trans-unit id="67a76c0931bd76a6fcd1972a3188f938c0dc74c2" translate="yes" xml:space="preserve">
          <source>Time deltas</source>
          <target state="translated">시간 델타</target>
        </trans-unit>
        <trans-unit id="174ffc9e8ba8edf5649456429c5878529200b1cf" translate="yes" xml:space="preserve">
          <source>Time deltas: An absolute time duration. Similar to &lt;code&gt;datetime.timedelta&lt;/code&gt; from the standard library.</source>
          <target state="translated">시간 델타 : 절대 시간 기간입니다. 표준 라이브러리의 &lt;code&gt;datetime.timedelta&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="d315feb2393ff29fbf6135a27baa9268e9679380" translate="yes" xml:space="preserve">
          <source>Time grouping with some missing values</source>
          <target state="translated">일부 결 측값이있는 시간 그룹화</target>
        </trans-unit>
        <trans-unit id="7cf8c86edc5573927dcb0e0f2d0099a1e4fff122" translate="yes" xml:space="preserve">
          <source>Time offset to apply.</source>
          <target state="translated">적용 할 시간 오프셋.</target>
        </trans-unit>
        <trans-unit id="95dd4925ceafdf5feebe651baf3e2b0dc8686c1d" translate="yes" xml:space="preserve">
          <source>Time passed either as object (datetime.time) or as string in appropriate format (&amp;ldquo;%H:%M&amp;rdquo;, &amp;ldquo;%H%M&amp;rdquo;, &amp;ldquo;%I:%M%p&amp;rdquo;, &amp;ldquo;%I%M%p&amp;rdquo;, &amp;ldquo;%H:%M:%S&amp;rdquo;, &amp;ldquo;%H%M%S&amp;rdquo;, &amp;ldquo;%I:%M:%S%p&amp;rdquo;,&amp;rdquo;%I%M%S%p&amp;rdquo;).</source>
          <target state="translated">객체 (datetime.time) 또는 적절한 형식의 문자열 ( &quot;% H : % M&quot;, &quot;% H % M&quot;, &quot;% I : % M % p&quot;, &quot;% I % M % p&quot;)으로 전달 된 시간 , &quot;% H : % M : % S&quot;, &quot;% H % M % S&quot;, &quot;% I : % M : % S % p&quot;, &quot;% I % M % S % p&quot;).</target>
        </trans-unit>
        <trans-unit id="387b9501b38ad9aaa71e6b8f3676bdef6442a0c4" translate="yes" xml:space="preserve">
          <source>Time passed in either as object (datetime.time) or as string in appropriate format (&amp;ldquo;%H:%M&amp;rdquo;, &amp;ldquo;%H%M&amp;rdquo;, &amp;ldquo;%I:%M%p&amp;rdquo;, &amp;ldquo;%I%M%p&amp;rdquo;, &amp;ldquo;%H:%M:%S&amp;rdquo;, &amp;ldquo;%H%M%S&amp;rdquo;, &amp;ldquo;%I:%M:%S%p&amp;rdquo;, &amp;ldquo;%I%M%S%p&amp;rdquo;).</source>
          <target state="translated">객체 (datetime.time) 또는 적절한 형식의 문자열 ( &quot;% H : % M&quot;, &quot;% H % M&quot;, &quot;% I : % M % p&quot;, &quot;% I % M % p)으로 전달 된 시간 &quot;,&quot;% H : % M : % S &quot;,&quot;% H % M % S &quot;,&quot;% I : % M : % S % p &quot;,&quot;% I % M % S % p &quot;).</target>
        </trans-unit>
        <trans-unit id="044562ecb24a4347ae12d2ecd7afe6cd46dc5f01" translate="yes" xml:space="preserve">
          <source>Time series</source>
          <target state="translated">시계열</target>
        </trans-unit>
        <trans-unit id="5333b1306530a4b7f38e7b710bf7ef8ab337c77d" translate="yes" xml:space="preserve">
          <source>Time series / date functionality</source>
          <target state="translated">시계열 / 날짜 기능</target>
        </trans-unit>
        <trans-unit id="65b1a1a34466e65f9095e778e5475396708d42a3" translate="yes" xml:space="preserve">
          <source>Time series-related</source>
          <target state="translated">시계열 관련</target>
        </trans-unit>
        <trans-unit id="bab960a5f1afc5944bb3b5d5041296d6b3826631" translate="yes" xml:space="preserve">
          <source>Time series-related instance methods</source>
          <target state="translated">시계열 관련 인스턴스 메서드</target>
        </trans-unit>
        <trans-unit id="c001a7181a3e754618425f73e009b9131120a502" translate="yes" xml:space="preserve">
          <source>Time span representation</source>
          <target state="translated">시간 범위 표현</target>
        </trans-unit>
        <trans-unit id="17eb766096166ee63d1cbbeb33839bfa127e6e3e" translate="yes" xml:space="preserve">
          <source>Time spans</source>
          <target state="translated">시간 범위</target>
        </trans-unit>
        <trans-unit id="94c628f1e6e9be4f7c0a6492a9172a12f83c3132" translate="yes" xml:space="preserve">
          <source>Time spans: A span of time defined by a point in time and its associated frequency.</source>
          <target state="translated">시간 범위 : 특정 시점 및 관련 빈도로 정의 된 시간 범위입니다.</target>
        </trans-unit>
        <trans-unit id="b08aed9273b1369ef3b266fc5708f73067f796c3" translate="yes" xml:space="preserve">
          <source>Time zone for the Timestamp.</source>
          <target state="translated">타임 스탬프의 시간대입니다.</target>
        </trans-unit>
        <trans-unit id="b915a2f6545db1f34617084c28d9d756a3da2a3c" translate="yes" xml:space="preserve">
          <source>Time zone for time which Timestamp will be converted to. None will remove timezone holding UTC time.</source>
          <target state="translated">타임 스탬프가 변환 될 시간의 시간대입니다. 없음은 UTC 시간을 유지하는 시간대를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f910e871d542509ad0a7fad727edd8837a18e52d" translate="yes" xml:space="preserve">
          <source>Time zone for time which Timestamp will be converted to. None will remove timezone holding local time.</source>
          <target state="translated">타임 스탬프가 변환 될 시간의 시간대입니다. 없음은 현지 시간을 유지하는 시간대를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="2a1afe906bc661f66e28653debd96b22120176f1" translate="yes" xml:space="preserve">
          <source>Time zone for time which Timestamp will have.</source>
          <target state="translated">타임 스탬프가 가질 시간대입니다.</target>
        </trans-unit>
        <trans-unit id="b4424615ec47f06b48a16594bcaa4b136f878906" translate="yes" xml:space="preserve">
          <source>Time zone for time. Corresponding timestamps would be converted to this time zone of the Datetime Array/Index. A</source>
          <target state="translated">시간에 대한 시간대. 해당 타임 스탬프는 Datetime 배열 / 인덱스의이 시간대로 변환됩니다. ㅏ</target>
        </trans-unit>
        <trans-unit id="2e2ae05a267734fbc853ad315bb86bf6c3168507" translate="yes" xml:space="preserve">
          <source>Time zone for time. Corresponding timestamps would be converted to this time zone of the Datetime Array/Index. A &lt;code&gt;tz&lt;/code&gt; of None will convert to UTC and remove the timezone information.</source>
          <target state="translated">시간 시간대. 해당 타임 스탬프는 날짜 / 시간 배열 / 인덱스의이 시간대로 변환됩니다. &lt;code&gt;tz&lt;/code&gt; 없음은 UTC로 변환 및 시간대 정보를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="81e87ded296ce05ba9c8d4798092135c41726f34" translate="yes" xml:space="preserve">
          <source>Time zone handling</source>
          <target state="translated">시간대 처리</target>
        </trans-unit>
        <trans-unit id="32d72f34b993ff01a2daf807065cbda41fc91250" translate="yes" xml:space="preserve">
          <source>Time zone information can also be manipulated using the &lt;code&gt;astype&lt;/code&gt; method. This method can localize and convert time zone naive timestamps or convert time zone aware timestamps.</source>
          <target state="translated">시간대 정보는 &lt;code&gt;astype&lt;/code&gt; 메소드를 사용하여 조작 할 수도 있습니다 . 이 메서드는 표준 시간대 기본 타임 스탬프를 현지화 및 변환하거나 표준 시간대 인식 타임 스탬프를 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee8f614d144ab47b670e20f7522453fc38517d98" translate="yes" xml:space="preserve">
          <source>Time zone name (no characters if no time zone exists).</source>
          <target state="translated">시간대 이름 (시간대가없는 경우 문자 없음).</target>
        </trans-unit>
        <trans-unit id="20ac5fd66de1d40139b066d61aab909d01b1d7e7" translate="yes" xml:space="preserve">
          <source>Time zone name for returning localized DatetimeIndex, for example &amp;lsquo;Asia/Hong_Kong&amp;rsquo;. By default, the resulting DatetimeIndex is timezone-naive.</source>
          <target state="translated">현지화 된 DatetimeIndex를 반환하기위한 시간대 이름 (예 : 'Asia / Hong_Kong'). 기본적으로 결과 DatetimeIndex는 표준 시간대 미사용입니다.</target>
        </trans-unit>
        <trans-unit id="fbd854c720beea78d180bea684461d35a9f85ee7" translate="yes" xml:space="preserve">
          <source>Time zone name for returning localized DatetimeIndex, for example Asia/Beijing.</source>
          <target state="translated">현지화 된 DatetimeIndex를 반환하기위한 시간대 이름 (예 : 아시아 / 베이징).</target>
        </trans-unit>
        <trans-unit id="9575f05946bdc6eab52aef69afb829fa183cd26f" translate="yes" xml:space="preserve">
          <source>Time zone representation:</source>
          <target state="translated">시간대 표현 :</target>
        </trans-unit>
        <trans-unit id="67f7882f8246eb0d1881ae059dcd7adca788e768" translate="yes" xml:space="preserve">
          <source>Time zone series operations</source>
          <target state="translated">시간대 시리즈 작업</target>
        </trans-unit>
        <trans-unit id="3046a4401e4b5577460b83814f6e133acbf0e000" translate="yes" xml:space="preserve">
          <source>Time zone to convert timestamps to. Passing &lt;code&gt;None&lt;/code&gt; will remove the time zone information preserving local time.</source>
          <target state="translated">타임 스탬프를 변환 할 시간대입니다. &lt;code&gt;None&lt;/code&gt; 을 전달하면 현지 시간을 유지하는 시간대 정보가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="cd07d379c68011eb6618583ca43d965eaef8c4f7" translate="yes" xml:space="preserve">
          <source>Time-specific operations</source>
          <target state="translated">시간별 작업</target>
        </trans-unit>
        <trans-unit id="795fca15e66565ce57765b653f3830c7ee47ddec" translate="yes" xml:space="preserve">
          <source>Time/Date components</source>
          <target state="translated">시간 / 날짜 구성 요소</target>
        </trans-unit>
        <trans-unit id="d1b9da71e1fa9327afc7704b22bd1e79435a0730" translate="yes" xml:space="preserve">
          <source>Time/date components</source>
          <target state="translated">시간 / 날짜 구성 요소</target>
        </trans-unit>
        <trans-unit id="0c1e48ec1da35cd1eb5dc1a78ab60c444ad4019f" translate="yes" xml:space="preserve">
          <source>TimeGrouper</source>
          <target state="translated">TimeGrouper</target>
        </trans-unit>
        <trans-unit id="6f84a42a4f12280c3407decd56ba362c616ad239" translate="yes" xml:space="preserve">
          <source>TimeSeries with PeriodIndex</source>
          <target state="translated">PeriodIndex가있는 시계열</target>
        </trans-unit>
        <trans-unit id="ef1258d8d00628ceb619d9da1eb4d43759e2fd1a" translate="yes" xml:space="preserve">
          <source>TimeStamp</source>
          <target state="translated">TimeStamp</target>
        </trans-unit>
        <trans-unit id="f427901653e2f16331f232b03616db8d30b0bf3e" translate="yes" xml:space="preserve">
          <source>Timedelta</source>
          <target state="translated">Timedelta</target>
        </trans-unit>
        <trans-unit id="2152bae171a6ec2b4476d5f3645021831253b654" translate="yes" xml:space="preserve">
          <source>Timedelta Series, &lt;code&gt;TimedeltaIndex&lt;/code&gt;, and &lt;code&gt;Timedelta&lt;/code&gt; scalars can be converted to other &amp;lsquo;frequencies&amp;rsquo; by dividing by another timedelta, or by astyping to a specific timedelta type. These operations yield Series and propagate &lt;code&gt;NaT&lt;/code&gt; -&amp;gt; &lt;code&gt;nan&lt;/code&gt;. Note that division by the NumPy scalar is true division, while astyping is equivalent of floor division.</source>
          <target state="translated">Timedelta Series, &lt;code&gt;TimedeltaIndex&lt;/code&gt; 및 &lt;code&gt;Timedelta&lt;/code&gt; 스칼라는 다른 timedelta로 나누거나 특정 timedelta 유형으로 astyping하여 다른 '주파수'로 변환 할 수 있습니다. 이러한 작업은 Series를 생성하고 &lt;code&gt;NaT&lt;/code&gt; - &amp;gt; &lt;code&gt;nan&lt;/code&gt; 을 전파 합니다. NumPy 스칼라에 의한 나눗셈은 실제 나눗셈이고 astyping은 바닥 나눗셈과 같습니다.</target>
        </trans-unit>
        <trans-unit id="42b10bdcd075cdde2fa60b0c7802da6768ac2e90" translate="yes" xml:space="preserve">
          <source>Timedelta data</source>
          <target state="translated">타임 델타 데이터</target>
        </trans-unit>
        <trans-unit id="43158df8bdebcf560f52e2ea487c664041f9daf2" translate="yes" xml:space="preserve">
          <source>Timedelta in nanoseconds.</source>
          <target state="translated">나노초 단위의 타임 델타.</target>
        </trans-unit>
        <trans-unit id="0cfb7b15450290a0b3bd03e7a9408cef2f7ea485" translate="yes" xml:space="preserve">
          <source>Timedelta is the pandas equivalent of python&amp;rsquo;s &lt;code&gt;datetime.timedelta&lt;/code&gt; and is interchangeable with it in most cases.</source>
          <target state="translated">Timedelta는 python의 &lt;code&gt;datetime.timedelta&lt;/code&gt; 에 해당하는 팬더 이며 대부분의 경우 호환 가능합니다.</target>
        </trans-unit>
        <trans-unit id="02d4b37dbc547209c6566a5f619c8e7c800c9ab8" translate="yes" xml:space="preserve">
          <source>Timedelta limitations</source>
          <target state="translated">Timedelta 제한</target>
        </trans-unit>
        <trans-unit id="7f43b97cb1b2228971cf9047f0d409b5b56256b2" translate="yes" xml:space="preserve">
          <source>Timedelta methods</source>
          <target state="translated">타임 델타 방법</target>
        </trans-unit>
        <trans-unit id="c0e33a2f5fc4a50b4cc139532c474db6b97e21c5" translate="yes" xml:space="preserve">
          <source>Timedelta objects are internally saved as numpy datetime64[ns] dtype. Use to_pytimedelta() to convert to object dtype.</source>
          <target state="translated">Timedelta 객체는 내부적으로 numpy datetime64 [ns] dtype으로 저장됩니다. to_pytimedelta ()를 사용하여 객체 dtype으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="858ffb0fd78ac2aa3bd7f317582a39980112ea81" translate="yes" xml:space="preserve">
          <source>Timedelta properties</source>
          <target state="translated">타임 델타 속성</target>
        </trans-unit>
        <trans-unit id="b0dac3b2b92279314eb5efdc72b4e03e185a1bd9" translate="yes" xml:space="preserve">
          <source>Timedelta resolution.</source>
          <target state="translated">타임 델타 해상도.</target>
        </trans-unit>
        <trans-unit id="27129df429f837f8b97529b096572802c1482da6" translate="yes" xml:space="preserve">
          <source>Timedelta, the two following lines are equivalent:</source>
          <target state="translated">Timedelta, 다음 두 줄은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="eebb2c818174f7d1d3d871719814d958cdbaa334" translate="yes" xml:space="preserve">
          <source>Timedelta.asm8</source>
          <target state="translated">Timedelta.asm8</target>
        </trans-unit>
        <trans-unit id="98f2112576ebfc48a140659b4c2fa1342c0177d4" translate="yes" xml:space="preserve">
          <source>Timedelta.ceil()</source>
          <target state="translated">Timedelta.ceil()</target>
        </trans-unit>
        <trans-unit id="31eb6ab6cadc4009cee95c2fae58c421df9153e2" translate="yes" xml:space="preserve">
          <source>Timedelta.components</source>
          <target state="translated">Timedelta.components</target>
        </trans-unit>
        <trans-unit id="7959c25887e77c705a72ad2cbcad5b4684bca12c" translate="yes" xml:space="preserve">
          <source>Timedelta.days</source>
          <target state="translated">Timedelta.days</target>
        </trans-unit>
        <trans-unit id="560568662562cdf9d49d4fe842129387d5b40f37" translate="yes" xml:space="preserve">
          <source>Timedelta.delta</source>
          <target state="translated">Timedelta.delta</target>
        </trans-unit>
        <trans-unit id="eaba76775783ca78af5280131b41864b001604b9" translate="yes" xml:space="preserve">
          <source>Timedelta.floor()</source>
          <target state="translated">Timedelta.floor()</target>
        </trans-unit>
        <trans-unit id="06efb29720de29203f78f84a99fcbfb09c04352c" translate="yes" xml:space="preserve">
          <source>Timedelta.freq</source>
          <target state="translated">Timedelta.freq</target>
        </trans-unit>
        <trans-unit id="dec633e4996060cf3667d6dafc5ff84d6e22c3f3" translate="yes" xml:space="preserve">
          <source>Timedelta.is_populated</source>
          <target state="translated">Timedelta.is_populated</target>
        </trans-unit>
        <trans-unit id="ca83f6e6d82749047d7d7e79de72a97ce8beec65" translate="yes" xml:space="preserve">
          <source>Timedelta.isoformat()</source>
          <target state="translated">Timedelta.isoformat()</target>
        </trans-unit>
        <trans-unit id="71c95fd66a280ded40ecd11ddc0d22fd99807130" translate="yes" xml:space="preserve">
          <source>Timedelta.max</source>
          <target state="translated">Timedelta.max</target>
        </trans-unit>
        <trans-unit id="3c90ba698290d0000973384ff2b1f018dcd4dafa" translate="yes" xml:space="preserve">
          <source>Timedelta.microseconds</source>
          <target state="translated">Timedelta.microseconds</target>
        </trans-unit>
        <trans-unit id="fa42f45bb461407d2ebc6d5c40d33f99441d8a56" translate="yes" xml:space="preserve">
          <source>Timedelta.min</source>
          <target state="translated">Timedelta.min</target>
        </trans-unit>
        <trans-unit id="943b5518e6b5f300d100188ee9fbfce0c0c3e38d" translate="yes" xml:space="preserve">
          <source>Timedelta.nanoseconds</source>
          <target state="translated">Timedelta.nanoseconds</target>
        </trans-unit>
        <trans-unit id="88cd43abde9802114b5108364866bd25e0cfda4b" translate="yes" xml:space="preserve">
          <source>Timedelta.resolution</source>
          <target state="translated">Timedelta.resolution</target>
        </trans-unit>
        <trans-unit id="982d33d13577250e862aa38150aee9a4e410e2b6" translate="yes" xml:space="preserve">
          <source>Timedelta.resolution_string</source>
          <target state="translated">Timedelta.resolution_string</target>
        </trans-unit>
        <trans-unit id="1db6718621b43ee40cc86b4c7f0b9cb80ad7814b" translate="yes" xml:space="preserve">
          <source>Timedelta.round()</source>
          <target state="translated">Timedelta.round()</target>
        </trans-unit>
        <trans-unit id="d9e579e4d49bb1439b334f2cbab5a2816c3b16da" translate="yes" xml:space="preserve">
          <source>Timedelta.seconds</source>
          <target state="translated">Timedelta.seconds</target>
        </trans-unit>
        <trans-unit id="d39fbcbd284f3f4f32bc27bd4bcd5981cf7a1041" translate="yes" xml:space="preserve">
          <source>Timedelta.to_numpy()</source>
          <target state="translated">Timedelta.to_numpy()</target>
        </trans-unit>
        <trans-unit id="5110f3a433a8621115c5c646ab1013d6e1e63efd" translate="yes" xml:space="preserve">
          <source>Timedelta.to_pytimedelta()</source>
          <target state="translated">Timedelta.to_pytimedelta()</target>
        </trans-unit>
        <trans-unit id="c771d2a2005407cb7c5ecb5ba68ac2f9c7ab57cd" translate="yes" xml:space="preserve">
          <source>Timedelta.to_timedelta64()</source>
          <target state="translated">Timedelta.to_timedelta64()</target>
        </trans-unit>
        <trans-unit id="03d25ed481744a31b90eafa60ca0fdc9bfb8cac6" translate="yes" xml:space="preserve">
          <source>Timedelta.total_seconds()</source>
          <target state="translated">Timedelta.total_seconds()</target>
        </trans-unit>
        <trans-unit id="31b0054a9b28f7c6b9bd9da71b03a6bbfa81e16f" translate="yes" xml:space="preserve">
          <source>Timedelta.value</source>
          <target state="translated">Timedelta.value</target>
        </trans-unit>
        <trans-unit id="4c127fc8f5f611374a61b363dfa27781aef09ff7" translate="yes" xml:space="preserve">
          <source>Timedelta.view()</source>
          <target state="translated">Timedelta.view()</target>
        </trans-unit>
        <trans-unit id="5f9194f8b1890f5af2a97db577c40b5ccb4e0aa0" translate="yes" xml:space="preserve">
          <source>TimedeltaArray</source>
          <target state="translated">TimedeltaArray</target>
        </trans-unit>
        <trans-unit id="f31890a13031c1915358b738127d2e7862f5a161" translate="yes" xml:space="preserve">
          <source>TimedeltaArray is currently experimental, and its API may change without warning. In particular, &lt;code&gt;TimedeltaArray.dtype&lt;/code&gt; is expected to change to be an instance of an &lt;code&gt;ExtensionDtype&lt;/code&gt; subclass.</source>
          <target state="translated">TimedeltaArray는 현재 실험 중이며 API는 경고없이 변경 될 수 있습니다. 특히 &lt;code&gt;TimedeltaArray.dtype&lt;/code&gt; 은 &lt;code&gt;ExtensionDtype&lt;/code&gt; 서브 클래스 의 인스턴스로 변경 될 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="7118282f772a2f29f25a10d288a4e0e46cf1b070" translate="yes" xml:space="preserve">
          <source>TimedeltaArray/Index</source>
          <target state="translated">TimedeltaArray/Index</target>
        </trans-unit>
        <trans-unit id="d26349b64ad149d161a1e4f87310a7765b41ddab" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex</source>
          <target state="translated">TimedeltaIndex</target>
        </trans-unit>
        <trans-unit id="b961523a5c840c2870503700a7da03bf9eff178a" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.ceil()</source>
          <target state="translated">TimedeltaIndex.ceil()</target>
        </trans-unit>
        <trans-unit id="32a41a70de56adc877e19da4798f890899326483" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.components</source>
          <target state="translated">TimedeltaIndex.components</target>
        </trans-unit>
        <trans-unit id="bc8d5f95301c68f9d93dc816a52630c0cb706b26" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.days</source>
          <target state="translated">TimedeltaIndex.days</target>
        </trans-unit>
        <trans-unit id="b300ee38265e7acb0e8fcada193371c7fb8a28f1" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.floor()</source>
          <target state="translated">TimedeltaIndex.floor()</target>
        </trans-unit>
        <trans-unit id="7645c631be4cc90ddd14dad54d438c08592ebe2c" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.inferred_freq</source>
          <target state="translated">TimedeltaIndex.inferred_freq</target>
        </trans-unit>
        <trans-unit id="c02b1268a64fae0618e0f1e423b40ad11d48c871" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.mean()</source>
          <target state="translated">TimedeltaIndex.mean()</target>
        </trans-unit>
        <trans-unit id="de5116ccf332f887e7e33fe4d733431007853f41" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.microseconds</source>
          <target state="translated">TimedeltaIndex.microseconds</target>
        </trans-unit>
        <trans-unit id="8964a0974c26dca49c53bd153f700971750c5162" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.nanoseconds</source>
          <target state="translated">TimedeltaIndex.nanoseconds</target>
        </trans-unit>
        <trans-unit id="e8d33eaf31db6f4708aedffbc59baad26d27353c" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.round()</source>
          <target state="translated">TimedeltaIndex.round()</target>
        </trans-unit>
        <trans-unit id="b9b2878e223343ee60d249d2f6aa1ad90bed0f14" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.seconds</source>
          <target state="translated">TimedeltaIndex.seconds</target>
        </trans-unit>
        <trans-unit id="0ac9e64b2fe24e688e1c89a97dca293d817ae587" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.shift</source>
          <target state="translated">TimedeltaIndex.shift</target>
        </trans-unit>
        <trans-unit id="a4ae8a5ab3ef25596f3dd51ed3daf4cee1c6ef25" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.to_frame()</source>
          <target state="translated">TimedeltaIndex.to_frame()</target>
        </trans-unit>
        <trans-unit id="1ae7e2bfa54937e01ffe78a97b1958bdf0d7e981" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.to_pytimedelta()</source>
          <target state="translated">TimedeltaIndex.to_pytimedelta()</target>
        </trans-unit>
        <trans-unit id="a0e49267659e7a6ccff3bb1245fb8934f327c8ed" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex.to_series()</source>
          <target state="translated">TimedeltaIndex.to_series()</target>
        </trans-unit>
        <trans-unit id="f87ecbf9e53cb43dfb2c99ad995d1a17e8b20622" translate="yes" xml:space="preserve">
          <source>TimedeltaIndex[source]</source>
          <target state="translated">TimedeltaIndex[source]</target>
        </trans-unit>
        <trans-unit id="b2e935599cd3a8cb0a39854b6cce9cd142600401" translate="yes" xml:space="preserve">
          <source>Timedeltas</source>
          <target state="translated">Timedeltas</target>
        </trans-unit>
        <trans-unit id="6f4855616e88a1a9a3ddfd5bcfb497d483a30414" translate="yes" xml:space="preserve">
          <source>Timedeltas are absolute differences in times, expressed in difference units (e.g. days, hours, minutes, seconds). This method converts an argument from a recognized timedelta format / value into a Timedelta type.</source>
          <target state="translated">타임 델타는 시간 단위의 절대적인 차이이며 차이 단위 (예 : 일,시, 분, 초)로 표시됩니다. 이 메소드는 인식 된 timedelta 형식 / 값의 인수를 Timedelta 유형으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="765065ed54c96f745cfa8d6fddb07cfbfdbb1e34" translate="yes" xml:space="preserve">
          <source>Timedeltas are differences in times, expressed in difference units, e.g. days, hours, minutes, seconds. They can be both positive and negative.</source>
          <target state="translated">타임 델타는 시간 단위의 차이로, 일,시, 분, 초와 같은 차이 단위로 표시됩니다. 그것들은 긍정적이거나 부정적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="398cc77c1402d568e626c9bba897b78d0f8e7a09" translate="yes" xml:space="preserve">
          <source>Times corresponding to the observations. Must be monotonically increasing and &lt;code&gt;datetime64[ns]&lt;/code&gt; dtype.</source>
          <target state="translated">관찰에 해당하는 시간. 단조 증가하고 &lt;code&gt;datetime64[ns]&lt;/code&gt; dtype이어야합니다.</target>
        </trans-unit>
        <trans-unit id="60a3218081ecce5fdaf292828606117830a8a7cb" translate="yes" xml:space="preserve">
          <source>Timeseries</source>
          <target state="translated">Timeseries</target>
        </trans-unit>
        <trans-unit id="5b147a3cda149bbf8f8aae3b78384c257ea74811" translate="yes" xml:space="preserve">
          <source>Timeseries friendly merging</source>
          <target state="translated">시계열 친화적 인 병합</target>
        </trans-unit>
        <trans-unit id="cf17488abcdda9994184de6be1eac26a1153530c" translate="yes" xml:space="preserve">
          <source>Timespan data</source>
          <target state="translated">기간 데이터</target>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="translated">Timestamp</target>
        </trans-unit>
        <trans-unit id="2cabb2d2194bc36845c7acabf9bb356a1a65112b" translate="yes" xml:space="preserve">
          <source>Timestamp is the pandas equivalent of python&amp;rsquo;s Datetime and is interchangeable with it in most cases. It&amp;rsquo;s the type used for the entries that make up a DatetimeIndex, and other timeseries oriented data structures in pandas.</source>
          <target state="translated">타임 스탬프는 파이썬의 Datetime에 해당하는 팬더이며 대부분의 경우 호환됩니다. DatetimeIndex를 구성하는 항목과 팬더의 다른 시계열 지향 데이터 구조에 사용되는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="edcd92169a1a62f8170bc0e774ee78a9dab70961" translate="yes" xml:space="preserve">
          <source>Timestamp limitations</source>
          <target state="translated">타임 스탬프 제한</target>
        </trans-unit>
        <trans-unit id="3fd6d011d8b2ef2a7c1d730e8bae01a414cd13aa" translate="yes" xml:space="preserve">
          <source>Timestamp or Timedelta.</source>
          <target state="translated">타임 스탬프 또는 타임 델타.</target>
        </trans-unit>
        <trans-unit id="5d6f28e866bddddcce6848b072a3f2266d3f5351" translate="yes" xml:space="preserve">
          <source>Timestamp with fields replaced</source>
          <target state="translated">필드가 교체 된 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="2a3f4f64c3084062fb05b550bef261e15ae1facb" translate="yes" xml:space="preserve">
          <source>Timestamp.asm8</source>
          <target state="translated">Timestamp.asm8</target>
        </trans-unit>
        <trans-unit id="22a1dc5361c4ebb78c0485509b0bab2f84880756" translate="yes" xml:space="preserve">
          <source>Timestamp.astimezone()</source>
          <target state="translated">Timestamp.astimezone()</target>
        </trans-unit>
        <trans-unit id="e357ed8eb879b9d584c9b143d132bed274e85dac" translate="yes" xml:space="preserve">
          <source>Timestamp.ceil()</source>
          <target state="translated">Timestamp.ceil()</target>
        </trans-unit>
        <trans-unit id="52f7e380b4d6fd2ff6da8b99223cb48c67a3b606" translate="yes" xml:space="preserve">
          <source>Timestamp.combine()</source>
          <target state="translated">Timestamp.combine()</target>
        </trans-unit>
        <trans-unit id="d374297e499b6f4f03a6dc5778bd499019aab123" translate="yes" xml:space="preserve">
          <source>Timestamp.ctime()</source>
          <target state="translated">Timestamp.ctime()</target>
        </trans-unit>
        <trans-unit id="be57785263bf0f5b8aafc6c53f202edae3d51daf" translate="yes" xml:space="preserve">
          <source>Timestamp.date()</source>
          <target state="translated">Timestamp.date()</target>
        </trans-unit>
        <trans-unit id="3460755c51094011739270c160b4a040ca2e01aa" translate="yes" xml:space="preserve">
          <source>Timestamp.day</source>
          <target state="translated">Timestamp.day</target>
        </trans-unit>
        <trans-unit id="77d8e2b2089e170c28b8dee31b7372fb37988515" translate="yes" xml:space="preserve">
          <source>Timestamp.day_name()</source>
          <target state="translated">Timestamp.day_name()</target>
        </trans-unit>
        <trans-unit id="a379df7862c5bec62cfbec930cf86f82a70bae8a" translate="yes" xml:space="preserve">
          <source>Timestamp.dayofweek</source>
          <target state="translated">Timestamp.dayofweek</target>
        </trans-unit>
        <trans-unit id="006ecc842f064b7815925aa6cedead58b1fb7278" translate="yes" xml:space="preserve">
          <source>Timestamp.dayofyear</source>
          <target state="translated">Timestamp.dayofyear</target>
        </trans-unit>
        <trans-unit id="f7b1ca98738daa4185f61ae82ee10e24a72720a8" translate="yes" xml:space="preserve">
          <source>Timestamp.days_in_month</source>
          <target state="translated">Timestamp.days_in_month</target>
        </trans-unit>
        <trans-unit id="d87912ab0c5bcabea91c53bd22034a565cf96bc8" translate="yes" xml:space="preserve">
          <source>Timestamp.daysinmonth</source>
          <target state="translated">Timestamp.daysinmonth</target>
        </trans-unit>
        <trans-unit id="ec15b39881e4c7f37362a92b164a33c444836b1c" translate="yes" xml:space="preserve">
          <source>Timestamp.dst()</source>
          <target state="translated">Timestamp.dst()</target>
        </trans-unit>
        <trans-unit id="294c7bb18e355e33fc4407712ddb5570921b22bc" translate="yes" xml:space="preserve">
          <source>Timestamp.floor()</source>
          <target state="translated">Timestamp.floor()</target>
        </trans-unit>
        <trans-unit id="8125f33dcc8baeb4600ec46aadaae20716d7a61f" translate="yes" xml:space="preserve">
          <source>Timestamp.fold</source>
          <target state="translated">Timestamp.fold</target>
        </trans-unit>
        <trans-unit id="e4ed81a9f112109e3235ead0d8af2e37df101820" translate="yes" xml:space="preserve">
          <source>Timestamp.freq</source>
          <target state="translated">Timestamp.freq</target>
        </trans-unit>
        <trans-unit id="0d25a3c15cadfa4a5cac2c0c70cea3859843c302" translate="yes" xml:space="preserve">
          <source>Timestamp.freqstr</source>
          <target state="translated">Timestamp.freqstr</target>
        </trans-unit>
        <trans-unit id="a6589a41df19a722ae13dd05621883adc041b7e5" translate="yes" xml:space="preserve">
          <source>Timestamp.fromisoformat()</source>
          <target state="translated">Timestamp.fromisoformat()</target>
        </trans-unit>
        <trans-unit id="d50e3381ede130fe6a5aeedc59563bc9f42e6d8a" translate="yes" xml:space="preserve">
          <source>Timestamp.fromordinal()</source>
          <target state="translated">Timestamp.fromordinal()</target>
        </trans-unit>
        <trans-unit id="a7c499800cad78776876522ae39e9a987fb3bd6e" translate="yes" xml:space="preserve">
          <source>Timestamp.fromtimestamp()</source>
          <target state="translated">Timestamp.fromtimestamp()</target>
        </trans-unit>
        <trans-unit id="c333f8f6e93ff37eb1d088d89cb62426bad2d92e" translate="yes" xml:space="preserve">
          <source>Timestamp.hour</source>
          <target state="translated">Timestamp.hour</target>
        </trans-unit>
        <trans-unit id="e10a1bc84ce2ed17763ee8ac83752f9c5bd599e7" translate="yes" xml:space="preserve">
          <source>Timestamp.is_leap_year</source>
          <target state="translated">Timestamp.is_leap_year</target>
        </trans-unit>
        <trans-unit id="6f33d24f074cb0034704b1353269b02e7a0123b5" translate="yes" xml:space="preserve">
          <source>Timestamp.is_month_end</source>
          <target state="translated">Timestamp.is_month_end</target>
        </trans-unit>
        <trans-unit id="db5dd9b10a801c0c475c5fe1616f3277bb3cc6bf" translate="yes" xml:space="preserve">
          <source>Timestamp.is_month_start</source>
          <target state="translated">Timestamp.is_month_start</target>
        </trans-unit>
        <trans-unit id="0acdf0d95d282865bd0d8252e7102befda233577" translate="yes" xml:space="preserve">
          <source>Timestamp.is_quarter_end</source>
          <target state="translated">Timestamp.is_quarter_end</target>
        </trans-unit>
        <trans-unit id="8deb027e4d75adc486bc928494833b551f407b3b" translate="yes" xml:space="preserve">
          <source>Timestamp.is_quarter_start</source>
          <target state="translated">Timestamp.is_quarter_start</target>
        </trans-unit>
        <trans-unit id="3da54f190525c72e67b12a5801b0daafbcd43fce" translate="yes" xml:space="preserve">
          <source>Timestamp.is_year_end</source>
          <target state="translated">Timestamp.is_year_end</target>
        </trans-unit>
        <trans-unit id="b9323e07458c8408bfb3c89546788dbd60bb694e" translate="yes" xml:space="preserve">
          <source>Timestamp.is_year_start</source>
          <target state="translated">Timestamp.is_year_start</target>
        </trans-unit>
        <trans-unit id="45e9a60d31f5d96fec345643cfeaecc93e0c0d58" translate="yes" xml:space="preserve">
          <source>Timestamp.isocalendar()</source>
          <target state="translated">Timestamp.isocalendar()</target>
        </trans-unit>
        <trans-unit id="1447fcc4e758bbbfd0c5449b22a7c9976fa9f13f" translate="yes" xml:space="preserve">
          <source>Timestamp.isoformat()</source>
          <target state="translated">Timestamp.isoformat()</target>
        </trans-unit>
        <trans-unit id="3c23d1ad0c58a4662aad86b4dd733ef77f4405c9" translate="yes" xml:space="preserve">
          <source>Timestamp.isoweekday()</source>
          <target state="translated">Timestamp.isoweekday()</target>
        </trans-unit>
        <trans-unit id="3d0ef927fc5e7b5adfc2be7153c5a6674e3cfce5" translate="yes" xml:space="preserve">
          <source>Timestamp.max</source>
          <target state="translated">Timestamp.max</target>
        </trans-unit>
        <trans-unit id="4062a120a615714adfb6a610c2e242deac71b435" translate="yes" xml:space="preserve">
          <source>Timestamp.microsecond</source>
          <target state="translated">Timestamp.microsecond</target>
        </trans-unit>
        <trans-unit id="08fa2fa0c3b1f03490b00a93b981636a8d1a12ae" translate="yes" xml:space="preserve">
          <source>Timestamp.min</source>
          <target state="translated">Timestamp.min</target>
        </trans-unit>
        <trans-unit id="51f93049a28b93014329e3581bed6d5fcb0bbb19" translate="yes" xml:space="preserve">
          <source>Timestamp.minute</source>
          <target state="translated">Timestamp.minute</target>
        </trans-unit>
        <trans-unit id="2b19bab2fb7a19e758a48e28f6249991d1018505" translate="yes" xml:space="preserve">
          <source>Timestamp.month</source>
          <target state="translated">Timestamp.month</target>
        </trans-unit>
        <trans-unit id="1500921c7d6765dd73ad012b0133a651f292436f" translate="yes" xml:space="preserve">
          <source>Timestamp.month_name()</source>
          <target state="translated">Timestamp.month_name()</target>
        </trans-unit>
        <trans-unit id="e1a87654a065ef5c7a4558013992ff6d067721e7" translate="yes" xml:space="preserve">
          <source>Timestamp.nanosecond</source>
          <target state="translated">Timestamp.nanosecond</target>
        </trans-unit>
        <trans-unit id="00c204a94571f29cdcc26b9ee5586ebd626f84b2" translate="yes" xml:space="preserve">
          <source>Timestamp.normalize()</source>
          <target state="translated">Timestamp.normalize()</target>
        </trans-unit>
        <trans-unit id="859fed4196f469a3bb9bdf71ea1e13034f1e6f8e" translate="yes" xml:space="preserve">
          <source>Timestamp.now()</source>
          <target state="translated">Timestamp.now()</target>
        </trans-unit>
        <trans-unit id="8721587b6bde3f6ce3b9ea13ffe6ba2a82dbce6a" translate="yes" xml:space="preserve">
          <source>Timestamp.quarter</source>
          <target state="translated">Timestamp.quarter</target>
        </trans-unit>
        <trans-unit id="a47ddd7346038910f9e027331fcf0c9a75a85bb0" translate="yes" xml:space="preserve">
          <source>Timestamp.replace()</source>
          <target state="translated">Timestamp.replace()</target>
        </trans-unit>
        <trans-unit id="edecd9b84c3b07d721eecde7a76c3f9732489448" translate="yes" xml:space="preserve">
          <source>Timestamp.resolution</source>
          <target state="translated">Timestamp.resolution</target>
        </trans-unit>
        <trans-unit id="fce984acec782b4f40e02c7e5b846bb69af4611a" translate="yes" xml:space="preserve">
          <source>Timestamp.round()</source>
          <target state="translated">Timestamp.round()</target>
        </trans-unit>
        <trans-unit id="57891355260c3a4fc5bef7ba0c09e49ccbf36b3a" translate="yes" xml:space="preserve">
          <source>Timestamp.second</source>
          <target state="translated">Timestamp.second</target>
        </trans-unit>
        <trans-unit id="b98feb16f76cae5de9a5cdd61a1498cea6381eda" translate="yes" xml:space="preserve">
          <source>Timestamp.strftime()</source>
          <target state="translated">Timestamp.strftime()</target>
        </trans-unit>
        <trans-unit id="7825ef239b195379d5a70af1c8a16e8a0614e730" translate="yes" xml:space="preserve">
          <source>Timestamp.strptime()</source>
          <target state="translated">Timestamp.strptime()</target>
        </trans-unit>
        <trans-unit id="9c25c2fc4d49bc47aebdf4f96ce51b73833b3798" translate="yes" xml:space="preserve">
          <source>Timestamp.time()</source>
          <target state="translated">Timestamp.time()</target>
        </trans-unit>
        <trans-unit id="cd3a48760017c4fe5ea4362823d4a383896d4285" translate="yes" xml:space="preserve">
          <source>Timestamp.timestamp()</source>
          <target state="translated">Timestamp.timestamp()</target>
        </trans-unit>
        <trans-unit id="99090d3fdc2e490489ccb7506c34511931b3e345" translate="yes" xml:space="preserve">
          <source>Timestamp.timetuple()</source>
          <target state="translated">Timestamp.timetuple()</target>
        </trans-unit>
        <trans-unit id="46d21124baeaa9f26eba49b25241431ef0fac995" translate="yes" xml:space="preserve">
          <source>Timestamp.timetz()</source>
          <target state="translated">Timestamp.timetz()</target>
        </trans-unit>
        <trans-unit id="408f797124733627bddfe629ce8c775e96c74728" translate="yes" xml:space="preserve">
          <source>Timestamp.to_datetime64()</source>
          <target state="translated">Timestamp.to_datetime64()</target>
        </trans-unit>
        <trans-unit id="124e41084941b2a52a22852db1cd87594780270c" translate="yes" xml:space="preserve">
          <source>Timestamp.to_julian_date()</source>
          <target state="translated">Timestamp.to_julian_date()</target>
        </trans-unit>
        <trans-unit id="66a161afc645ff2ecbe54a27828a1357a209ee55" translate="yes" xml:space="preserve">
          <source>Timestamp.to_numpy()</source>
          <target state="translated">Timestamp.to_numpy()</target>
        </trans-unit>
        <trans-unit id="49e7183e3b74682015ee97d6372c18b4a89cb5c3" translate="yes" xml:space="preserve">
          <source>Timestamp.to_period()</source>
          <target state="translated">Timestamp.to_period()</target>
        </trans-unit>
        <trans-unit id="2af87c2b6d990709da9f56369fd9090c91c53002" translate="yes" xml:space="preserve">
          <source>Timestamp.to_pydatetime()</source>
          <target state="translated">Timestamp.to_pydatetime()</target>
        </trans-unit>
        <trans-unit id="8771c03a6884616a44a2dbdc8ff065b21f52afb1" translate="yes" xml:space="preserve">
          <source>Timestamp.today()</source>
          <target state="translated">Timestamp.today()</target>
        </trans-unit>
        <trans-unit id="01deb30ddb85ebcfe3b291be463a8148f113f7d0" translate="yes" xml:space="preserve">
          <source>Timestamp.toordinal()</source>
          <target state="translated">Timestamp.toordinal()</target>
        </trans-unit>
        <trans-unit id="1e97baa329202f5634f17e2ebac4f478913e2bf2" translate="yes" xml:space="preserve">
          <source>Timestamp.tz</source>
          <target state="translated">Timestamp.tz</target>
        </trans-unit>
        <trans-unit id="180392b6d14ee7b1aaa3ef2d2a25a51647cc7467" translate="yes" xml:space="preserve">
          <source>Timestamp.tz_convert()</source>
          <target state="translated">Timestamp.tz_convert()</target>
        </trans-unit>
        <trans-unit id="c13c6c07cd5d90d56ccbc214355953f015bb538f" translate="yes" xml:space="preserve">
          <source>Timestamp.tz_localize()</source>
          <target state="translated">Timestamp.tz_localize()</target>
        </trans-unit>
        <trans-unit id="84c0959feedce9923bc744a36b15cfd90d27e0ce" translate="yes" xml:space="preserve">
          <source>Timestamp.tzinfo</source>
          <target state="translated">Timestamp.tzinfo</target>
        </trans-unit>
        <trans-unit id="1feb867bd92261f5398b086a9cc86b84baa90764" translate="yes" xml:space="preserve">
          <source>Timestamp.tzname()</source>
          <target state="translated">Timestamp.tzname()</target>
        </trans-unit>
        <trans-unit id="641fc28421346449b43285e973aacd86f6a595af" translate="yes" xml:space="preserve">
          <source>Timestamp.utcfromtimestamp()</source>
          <target state="translated">Timestamp.utcfromtimestamp()</target>
        </trans-unit>
        <trans-unit id="d85a4af62853cbbed4ccd9c50c0c5855a298a8c3" translate="yes" xml:space="preserve">
          <source>Timestamp.utcnow()</source>
          <target state="translated">Timestamp.utcnow()</target>
        </trans-unit>
        <trans-unit id="90289f8697b8fabf9bbe37c06abbdf6c8f49fbb2" translate="yes" xml:space="preserve">
          <source>Timestamp.utcoffset()</source>
          <target state="translated">Timestamp.utcoffset()</target>
        </trans-unit>
        <trans-unit id="00023bbd488ba3b2cb9cef5808f33ba8cb145cd9" translate="yes" xml:space="preserve">
          <source>Timestamp.utctimetuple()</source>
          <target state="translated">Timestamp.utctimetuple()</target>
        </trans-unit>
        <trans-unit id="09cc36d6b17b48a44b5904423887bac1068d5049" translate="yes" xml:space="preserve">
          <source>Timestamp.value</source>
          <target state="translated">Timestamp.value</target>
        </trans-unit>
        <trans-unit id="766cd7d1a93328d0b2a74d841605ed54b8242c40" translate="yes" xml:space="preserve">
          <source>Timestamp.week</source>
          <target state="translated">Timestamp.week</target>
        </trans-unit>
        <trans-unit id="72deaac95aa9cf7c95aa455bcfafab61f56fd87e" translate="yes" xml:space="preserve">
          <source>Timestamp.weekday()</source>
          <target state="translated">Timestamp.weekday()</target>
        </trans-unit>
        <trans-unit id="fb09d90e61d1073149bc985c7732347e5c0f3b14" translate="yes" xml:space="preserve">
          <source>Timestamp.weekday_name</source>
          <target state="translated">Timestamp.weekday_name</target>
        </trans-unit>
        <trans-unit id="ef07a570fbd97e58573039b27ce5aa348105485d" translate="yes" xml:space="preserve">
          <source>Timestamp.weekofyear</source>
          <target state="translated">Timestamp.weekofyear</target>
        </trans-unit>
        <trans-unit id="ad86c8ad06117367ce1996a116d23a8ba16aac8f" translate="yes" xml:space="preserve">
          <source>Timestamp.year</source>
          <target state="translated">Timestamp.year</target>
        </trans-unit>
        <trans-unit id="7730b20385d44844fa2bc1670b672020322598c1" translate="yes" xml:space="preserve">
          <source>Timestamped data can be converted to PeriodIndex-ed data using &lt;code&gt;to_period&lt;/code&gt; and vice-versa using &lt;code&gt;to_timestamp&lt;/code&gt;:</source>
          <target state="translated">타임 스탬프 데이터를 사용하여 PeriodIndex - 에드 데이터로 변환 할 수 있습니다 &lt;code&gt;to_period&lt;/code&gt; 그 반대의 사용 &lt;code&gt;to_timestamp&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3d8d13d096adc26454a7891fc6dbdb499d38e166" translate="yes" xml:space="preserve">
          <source>Timestamped data is the most basic type of time series data that associates values with points in time. For pandas objects it means using the points in time.</source>
          <target state="translated">타임 스탬프가있는 데이터는 값을 특정 시점과 연결하는 가장 기본적인 유형의 시계열 데이터입니다. pandas 객체의 경우 시점을 사용하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4ba269e33ebd7242ae5645829dfde7fa0ee0c701" translate="yes" xml:space="preserve">
          <source>Timestamps vs. Time Spans</source>
          <target state="translated">타임 스탬프 및 타임스 팬</target>
        </trans-unit>
        <trans-unit id="5c3a242316c8914ed0867efc678e871bac47adb1" translate="yes" xml:space="preserve">
          <source>Timestamps vs. time spans</source>
          <target state="translated">타임 스탬프 대 시간 범위</target>
        </trans-unit>
        <trans-unit id="b9b1f9b94aed8ca719d36602e5eb55a01f558549" translate="yes" xml:space="preserve">
          <source>Timezone Support</source>
          <target state="translated">시간대 지원</target>
        </trans-unit>
        <trans-unit id="1cf3b8d9a40ca56d940581ac78edfd7564bee94a" translate="yes" xml:space="preserve">
          <source>Timezone aware datetime columns will be written as &lt;code&gt;Timestamp with timezone&lt;/code&gt; type with SQLAlchemy if supported by the database. Otherwise, the datetimes will be stored as timezone unaware timestamps local to the original timezone.</source>
          <target state="translated">표준 시간대 인식 날짜 / 시간 열은 데이터베이스에서 지원하는 경우 SQLAlchemy &lt;code&gt;Timestamp with timezone&lt;/code&gt; 유형의 타임 스탬프 로 작성됩니다 . 그렇지 않으면 날짜 시간이 원래 시간대의 로컬 타임 스탬프를 인식하지 못하는 시간대로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="7d77147448366d3dfeb9684f13455422a30c81a6" translate="yes" xml:space="preserve">
          <source>Timezone aware datetime data is converted to UTC:</source>
          <target state="translated">시간대 인식 날짜 / 시간 데이터는 UTC로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="f99251367becb28e3e26f725d4414f093993eeb8" translate="yes" xml:space="preserve">
          <source>Timezone for converting datetime64 data to Periods</source>
          <target state="translated">datetime64 데이터를 기간으로 변환하기위한 시간대</target>
        </trans-unit>
        <trans-unit id="0156012d3f131c45a56fa1ff6814636301b686be" translate="yes" xml:space="preserve">
          <source>Timezone for converting datetime64 data to Periods.</source>
          <target state="translated">datetime64 데이터를 기간으로 변환하기위한 시간대입니다.</target>
        </trans-unit>
        <trans-unit id="917bb2e62b8f570c4e66ba455c10b16dd323c1e9" translate="yes" xml:space="preserve">
          <source>Timezone information is retained if present.</source>
          <target state="translated">시간대 정보가있는 경우 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="2776cc5f42ec83e6f2e4706b518d965979e2723e" translate="yes" xml:space="preserve">
          <source>Timezone to localize to</source>
          <target state="translated">현지화 할 시간대</target>
        </trans-unit>
        <trans-unit id="11ed4b1b74b7de430be714b3f34c8e14014750b0" translate="yes" xml:space="preserve">
          <source>Timezone to localize to.</source>
          <target state="translated">현지화 할 시간대입니다.</target>
        </trans-unit>
        <trans-unit id="3cf59e3e5d01e3395a8a0ea109eb703d71c258d9" translate="yes" xml:space="preserve">
          <source>Timezones may be preserved with &lt;code&gt;dtype=object&lt;/code&gt;</source>
          <target state="translated">시간대는 &lt;code&gt;dtype=object&lt;/code&gt; 로 보존 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a609a0d8c2c7c2aec996dfdfbf611c89b3dcd3d5" translate="yes" xml:space="preserve">
          <source>Tips for getting your examples pass the doctests</source>
          <target state="translated">예제를 통해 doctest를 통과시키는 팁</target>
        </trans-unit>
        <trans-unit id="df3525951fdea62b02409f0e33342405909af833" translate="yes" xml:space="preserve">
          <source>Title to use for the plot. If a string is passed, print the string at the top of the figure. If a list is passed and</source>
          <target state="translated">플롯에 사용할 제목입니다. 문자열이 전달되면 그림 맨 위에 문자열을 인쇄하십시오. 목록이 전달되고</target>
        </trans-unit>
        <trans-unit id="6fc01f7b353b3ed856e96622fcbef3e690bff152" translate="yes" xml:space="preserve">
          <source>To &lt;em&gt;always&lt;/em&gt; have unambiguous selection, whether the row is treated as a slice or a single selection, use &lt;code&gt;.loc&lt;/code&gt;.</source>
          <target state="translated">하려면 &lt;em&gt;항상&lt;/em&gt; 행이 슬라이스 또는 단일 선택, 사용으로 처리되어 있는지, 명확한 선택이있다 &lt;code&gt;.loc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="191d2e2c806d147edb69a7c8dc9c87ec26f48464" translate="yes" xml:space="preserve">
          <source>To &lt;em&gt;repack and clean&lt;/em&gt; the file, use &lt;a href=&quot;#io-hdf5-ptrepack&quot;&gt;ptrepack&lt;/a&gt;.</source>
          <target state="translated">파일 을 &lt;em&gt;다시 &lt;/em&gt;&lt;a href=&quot;#io-hdf5-ptrepack&quot;&gt;압축 &lt;/a&gt;&lt;em&gt;하고 정리&lt;/em&gt; 하려면 ptrepack을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e02fce0228a8e9ae82f747c20b6518515f7a4f9" translate="yes" xml:space="preserve">
          <source>To apply to each group. Should return a Series with the same index.</source>
          <target state="translated">각 그룹에 적용합니다. 인덱스가 동일한 Series를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f07b1c8fadee722db68ce255ffb5dc9bf012ed5" translate="yes" xml:space="preserve">
          <source>To apply your own or another library&amp;rsquo;s functions to pandas objects, you should be aware of the three methods below. The appropriate method to use depends on whether your function expects to operate on an entire &lt;code&gt;DataFrame&lt;/code&gt; or &lt;code&gt;Series&lt;/code&gt;, row- or column-wise, or elementwise.</source>
          <target state="translated">pandas 객체에 자신 또는 다른 라이브러리의 함수를 적용하려면 아래 세 가지 방법을 알고 있어야합니다. 사용할 적절한 방법은 함수가 전체 &lt;code&gt;DataFrame&lt;/code&gt; 또는 &lt;code&gt;Series&lt;/code&gt; , 행 또는 열 단위 또는 요소 단위 에서 작동할지 여부에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="f89819f88fd4718c15c82921a736771f81e0494d" translate="yes" xml:space="preserve">
          <source>To avoid applying the function to missing values (and keep them as &lt;code&gt;NaN&lt;/code&gt;) &lt;code&gt;na_action='ignore'&lt;/code&gt; can be used:</source>
          <target state="translated">누락 값에 함수를 적용 방지 (및 그들을 유지하기 &lt;code&gt;NaN&lt;/code&gt; 이 ) &lt;code&gt;na_action='ignore'&lt;/code&gt; 사용할 수있다 :</target>
        </trans-unit>
        <trans-unit id="f935ee244110f40412e6473f0f5bbecd42467058" translate="yes" xml:space="preserve">
          <source>To be clear, no pandas method has the side effect of modifying your data; almost every method returns a new object, leaving the original object untouched. If the data is modified, it is because you did so explicitly.</source>
          <target state="translated">명확하게 말하면 Pandas 메서드는 데이터를 수정하는 부작용이 없습니다. 거의 모든 메서드가 새 개체를 반환하고 원래 개체는 그대로 둡니다. 데이터가 수정 된 경우 명시 적으로 수정했기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="4a9b1e6fdd2c382b7f755b2d95b8b9e4e581189e" translate="yes" xml:space="preserve">
          <source>To be passed to hist function</source>
          <target state="translated">hist 함수로 전달</target>
        </trans-unit>
        <trans-unit id="56d187501b56d2ccaaca17b1aaf8b02733684ad9" translate="yes" xml:space="preserve">
          <source>To be passed to kernel density estimate plot</source>
          <target state="translated">커널 밀도 추정 플롯으로 전달</target>
        </trans-unit>
        <trans-unit id="aaeb720173ed0d873d7113e8f58b7a84516622c5" translate="yes" xml:space="preserve">
          <source>To be passed to scatter function</source>
          <target state="translated">분산 기능으로 전달</target>
        </trans-unit>
        <trans-unit id="2b5c7e4edcb6f146b434527a8427fc470624ff2f" translate="yes" xml:space="preserve">
          <source>To be passed to the actual plotting function</source>
          <target state="translated">실제 플로팅 기능으로 전달</target>
        </trans-unit>
        <trans-unit id="736f6f7f16c6eb9a2931b8b1b40c1c247d93f488" translate="yes" xml:space="preserve">
          <source>To be passed to the actual plotting function.</source>
          <target state="translated">실제 플로팅 기능에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="01766d5de68d241d4424b6f76368e40013d1f67e" translate="yes" xml:space="preserve">
          <source>To benefit from using &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; you need to install &lt;code&gt;numexpr&lt;/code&gt;. See the &lt;a href=&quot;../install#install-recommended-dependencies&quot;&gt;recommended dependencies section&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 을 사용 하려면 &lt;code&gt;numexpr&lt;/code&gt; 을 설치해야합니다 . 자세한 내용은 &lt;a href=&quot;../install#install-recommended-dependencies&quot;&gt;권장되는 종속성 섹션&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9a4818232fb188854ce99c35ea92505d24807899" translate="yes" xml:space="preserve">
          <source>To benefit from using &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; you need to install &lt;code&gt;numexpr&lt;/code&gt;. See the &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/getting_started/install.html#install-recommended-dependencies&quot;&gt;recommended dependencies section&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 사용의 이점을 얻으려면 &lt;code&gt;numexpr&lt;/code&gt; 을 설치해야합니다 . 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/getting_started/install.html#install-recommended-dependencies&quot;&gt;권장 종속성 섹션&lt;/a&gt; 을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="56c870223a7ed7659439fe08244cf76f2cf724f1" translate="yes" xml:space="preserve">
          <source>To better facilitate working with datetime data, &lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt;&lt;code&gt;read_csv()&lt;/code&gt;&lt;/a&gt; uses the keyword arguments &lt;code&gt;parse_dates&lt;/code&gt; and &lt;code&gt;date_parser&lt;/code&gt; to allow users to specify a variety of columns and date/time formats to turn the input text data into &lt;code&gt;datetime&lt;/code&gt; objects.</source>
          <target state="translated">datetime 데이터 작업을보다 용이하게하기 위해 &lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt; &lt;code&gt;read_csv()&lt;/code&gt; &lt;/a&gt; 는 키워드 인수 &lt;code&gt;parse_dates&lt;/code&gt; 및 &lt;code&gt;date_parser&lt;/code&gt; 를 사용하여 사용자가 다양한 열과 날짜 / 시간 형식을 지정하여 입력 텍스트 데이터를 &lt;code&gt;datetime&lt;/code&gt; 객체 로 변환 할 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="227a9b7c1712eb78a595847176d5c667779490da" translate="yes" xml:space="preserve">
          <source>To check across the levels of a MultiIndex, pass a list of tuples:</source>
          <target state="translated">MultiIndex의 레벨을 확인하려면 튜플 목록을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="a4426ac2e6af4b61cb737aad18f82a23aff93967" translate="yes" xml:space="preserve">
          <source>To check if a Series contains Categorical data, use &lt;code&gt;hasattr(s, 'cat')&lt;/code&gt;:</source>
          <target state="translated">시리즈에 범주 형 데이터가 포함되어 있는지 확인하려면 &lt;code&gt;hasattr(s, 'cat')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08cba00503ccc2c12bf2199d5c8e977735c9b61f" translate="yes" xml:space="preserve">
          <source>To check if a value is equal to &lt;code&gt;pd.NA&lt;/code&gt;, the &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt;&lt;code&gt;isna()&lt;/code&gt;&lt;/a&gt; function can be used:</source>
          <target state="translated">값이 &lt;code&gt;pd.NA&lt;/code&gt; 와 같은지 확인하려면 &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt; &lt;code&gt;isna()&lt;/code&gt; &lt;/a&gt; 함수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8009c430c60b963c64c8a7320020c9943e8f7ac6" translate="yes" xml:space="preserve">
          <source>To completely override the default values that are recognized as missing, specify &lt;code&gt;keep_default_na=False&lt;/code&gt;.</source>
          <target state="translated">누락 된 것으로 인식되는 기본값을 완전히 대체하려면 &lt;code&gt;keep_default_na=False&lt;/code&gt; 를 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="da0f910ab11a661d8b5d684495993db79815efaf" translate="yes" xml:space="preserve">
          <source>To compute the mode over columns and not rows, use the axis parameter:</source>
          <target state="translated">행이 아닌 열에 대한 모드를 계산하려면 axis 매개 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d5b44a69a15f7e48b23a11dd3d4c95762046361b" translate="yes" xml:space="preserve">
          <source>To connect with SQLAlchemy you use the &lt;code&gt;create_engine()&lt;/code&gt; function to create an engine object from database URI. You only need to create the engine once per database you are connecting to.</source>
          <target state="translated">SQLAlchemy와 연결하려면 &lt;code&gt;create_engine()&lt;/code&gt; 함수를 사용하여 데이터베이스 URI에서 엔진 개체를 만듭니다. 연결하려는 데이터베이스 당 한 번만 엔진을 생성하면됩니다.</target>
        </trans-unit>
        <trans-unit id="0180f8ba4027ce400625178068b75e0523e07bfa" translate="yes" xml:space="preserve">
          <source>To connect with SQLAlchemy you use the &lt;code&gt;create_engine()&lt;/code&gt; function to create an engine object from database URI. You only need to create the engine once per database you are connecting to. For more information on &lt;code&gt;create_engine()&lt;/code&gt; and the URI formatting, see the examples below and the SQLAlchemy &lt;a href=&quot;https://docs.sqlalchemy.org/en/latest/core/engines.html&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">SQLAlchemy와 연결하려면 &lt;code&gt;create_engine()&lt;/code&gt; 함수를 사용하여 데이터베이스 URI에서 엔진 개체를 만듭니다. 연결하려는 데이터베이스 당 한 번만 엔진을 생성하면됩니다. &lt;code&gt;create_engine()&lt;/code&gt; 및 URI 형식 에 대한 자세한 내용은 아래 예와 SQLAlchemy &lt;a href=&quot;https://docs.sqlalchemy.org/en/latest/core/engines.html&quot;&gt;설명서를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="93604ffd5415f367f0c70a44286637f91885735c" translate="yes" xml:space="preserve">
          <source>To construct an BooleanArray from generic array-like input, use &lt;a href=&quot;pandas.array#pandas.array&quot;&gt;&lt;code&gt;pandas.array()&lt;/code&gt;&lt;/a&gt; specifying &lt;code&gt;dtype=&quot;boolean&quot;&lt;/code&gt; (see examples below).</source>
          <target state="translated">일반적인 배열과 유사한 입력에서 BooleanArray를 생성하려면 &lt;a href=&quot;pandas.array#pandas.array&quot;&gt; &lt;code&gt;pandas.array()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 &lt;code&gt;dtype=&quot;boolean&quot;&lt;/code&gt; 을 지정합니다 (아래 예제 참조).</target>
        </trans-unit>
        <trans-unit id="bc327bd3006fa34acc4c2df0e7d808804f77bd93" translate="yes" xml:space="preserve">
          <source>To construct an IntegerArray from generic array-like input, use &lt;a href=&quot;pandas.array#pandas.array&quot;&gt;&lt;code&gt;pandas.array()&lt;/code&gt;&lt;/a&gt; with one of the integer dtypes (see examples).</source>
          <target state="translated">일반 배열과 같은 입력에서 IntegerArray를 구성하려면 정수 dtype 중 하나와 함께 &lt;a href=&quot;pandas.array#pandas.array&quot;&gt; &lt;code&gt;pandas.array()&lt;/code&gt; &lt;/a&gt; 를 사용 하십시오 (예 참조).</target>
        </trans-unit>
        <trans-unit id="fdc506a9c6915fedbd681bb8fd02f7b409619a18" translate="yes" xml:space="preserve">
          <source>To control the output names with different aggregations per column, pandas supports &amp;ldquo;named aggregation&amp;rdquo;</source>
          <target state="translated">열당 집계가 다른 출력 이름을 제어하기 위해 Pandas는 '명명 된 집계'를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="85f87b12131bdf523121c8afdd20e14d65061493" translate="yes" xml:space="preserve">
          <source>To control those behaviors, instead of passing &lt;code&gt;'category'&lt;/code&gt;, use an instance of &lt;code&gt;CategoricalDtype&lt;/code&gt;.</source>
          <target state="translated">이러한 동작을 제어하려면 &lt;code&gt;'category'&lt;/code&gt; 를 전달하는 대신 &lt;code&gt;CategoricalDtype&lt;/code&gt; 인스턴스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fedced1708b66284dbce75e5735f22a773aadcb5" translate="yes" xml:space="preserve">
          <source>To control which values are parsed as missing values (which are signified by &lt;code&gt;NaN&lt;/code&gt;), specify a string in &lt;code&gt;na_values&lt;/code&gt;. If you specify a list of strings, then all values in it are considered to be missing values. If you specify a number (a &lt;code&gt;float&lt;/code&gt;, like &lt;code&gt;5.0&lt;/code&gt; or an &lt;code&gt;integer&lt;/code&gt; like &lt;code&gt;5&lt;/code&gt;), the corresponding equivalent values will also imply a missing value (in this case effectively &lt;code&gt;[5.0, 5]&lt;/code&gt; are recognized as &lt;code&gt;NaN&lt;/code&gt;).</source>
          <target state="translated">누락 된 값 ( &lt;code&gt;NaN&lt;/code&gt; 으로 표시됨) 으로 구문 분석되는 값을 제어하려면 &lt;code&gt;na_values&lt;/code&gt; 에 문자열을 지정하십시오 . 문자열 목록을 지정하면 그 안의 모든 값이 누락 된 값으로 간주됩니다. 숫자 ( &lt;code&gt;5.0&lt;/code&gt; 과 같은 &lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;5&lt;/code&gt; 와 같은 &lt;code&gt;integer&lt;/code&gt; )를 지정하면 상응하는 값도 누락 된 값을 의미합니다 (이 경우 효과적으로 &lt;code&gt;[5.0, 5]&lt;/code&gt; 는 &lt;code&gt;NaN&lt;/code&gt; 으로 인식됨 ).</target>
        </trans-unit>
        <trans-unit id="b28944c62cceb22bf6b50966f0df27803702efcf" translate="yes" xml:space="preserve">
          <source>To convert a &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; or list-like object of date-like objects e.g. strings, epochs, or a mixture, you can use the &lt;code&gt;to_datetime&lt;/code&gt; function. When passed a &lt;code&gt;Series&lt;/code&gt;, this returns a &lt;code&gt;Series&lt;/code&gt; (with the same index), while a list-like is converted to a &lt;code&gt;DatetimeIndex&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 또는 날짜와 유사한 객체 (예 : 문자열, 에포크 또는 혼합)의 목록과 유사한 객체 를 변환하려면 &lt;code&gt;to_datetime&lt;/code&gt; 함수를 사용할 수 있습니다 . 전달 된 때 &lt;code&gt;Series&lt;/code&gt; ,이 리턴 &lt;code&gt;Series&lt;/code&gt; (인덱스와 같은)를, 동안리스트와 같은 변환됩니다 &lt;code&gt;DatetimeIndex&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2622c469fb7e755b52139f9e64a0433329b4b591" translate="yes" xml:space="preserve">
          <source>To convert a categorical variable into a &amp;ldquo;dummy&amp;rdquo; or &amp;ldquo;indicator&amp;rdquo; &lt;code&gt;DataFrame&lt;/code&gt;, for example a column in a &lt;code&gt;DataFrame&lt;/code&gt; (a &lt;code&gt;Series&lt;/code&gt;) which has &lt;code&gt;k&lt;/code&gt; distinct values, can derive a &lt;code&gt;DataFrame&lt;/code&gt; containing &lt;code&gt;k&lt;/code&gt; columns of 1s and 0s using &lt;a href=&quot;../reference/api/pandas.get_dummies#pandas.get_dummies&quot;&gt;&lt;code&gt;get_dummies()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">범주 형 변수를 &quot;더미&quot;또는 &quot;인디케이터&quot; &lt;code&gt;DataFrame&lt;/code&gt; 으로 변환하려면 , 예를 들어 &lt;code&gt;k&lt;/code&gt; 개의 고유 값 이 있는 &lt;code&gt;DataFrame&lt;/code&gt; (a &lt;code&gt;Series&lt;/code&gt; )의 열은 &lt;a href=&quot;../reference/api/pandas.get_dummies#pandas.get_dummies&quot;&gt; &lt;code&gt;get_dummies()&lt;/code&gt; &lt;/a&gt; 사용하여 1과 0의 &lt;code&gt;k&lt;/code&gt; 개 열을 포함 하는 &lt;code&gt;DataFrame&lt;/code&gt; 을 파생 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a114f4ace42ebac79035e8757167f2868f566b69" translate="yes" xml:space="preserve">
          <source>To convert a time zone aware pandas object from one time zone to another, you can use the &lt;code&gt;tz_convert&lt;/code&gt; method.</source>
          <target state="translated">시간대 인식 pandas 객체를 한 시간대에서 다른 시간대로 변환하려면 &lt;code&gt;tz_convert&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed871a76f915e18aa5cebed9480a2eb4d8756aac" translate="yes" xml:space="preserve">
          <source>To convert from an &lt;code&gt;int64&lt;/code&gt; based YYYYMMDD representation.</source>
          <target state="translated">&lt;code&gt;int64&lt;/code&gt; 기반 YYYYMMDD 표현 에서 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="3c8aabc044b7c651daa396843a9fe67ba8313ca9" translate="yes" xml:space="preserve">
          <source>To create a dataframe from every combination of some given values, like R&amp;rsquo;s &lt;code&gt;expand.grid()&lt;/code&gt; function, we can create a dict where the keys are column names and the values are lists of the data values:</source>
          <target state="translated">R의 &lt;code&gt;expand.grid()&lt;/code&gt; 함수 와 같이 주어진 값의 모든 조합에서 데이터 프레임을 생성하려면 키가 열 이름이고 값이 데이터 값 목록 인 dict를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b91af9ac3331fd2dd8189bc31c6bc070254860a" translate="yes" xml:space="preserve">
          <source>To create a time interval you can use Timestamps as the bounds</source>
          <target state="translated">시간 간격을 만들려면 타임 스탬프를 경계로 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ac8f0a1c76f18a32f39434a2dd95c80f3563c652" translate="yes" xml:space="preserve">
          <source>To create year and month cross tabulation:</source>
          <target state="translated">연도 및 월간 교차 표를 생성하려면</target>
        </trans-unit>
        <trans-unit id="5f34acb8ceeb89c0e0070bc6f532af91beb45211" translate="yes" xml:space="preserve">
          <source>To deal with this issue you should convert the underlying NumPy array to the native system byte order &lt;em&gt;before&lt;/em&gt; passing it to &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; constructors using something similar to the following:</source>
          <target state="translated">이 문제를 해결하려면 다음과 유사한 것을 사용하여 &lt;code&gt;Series&lt;/code&gt; 또는 &lt;code&gt;DataFrame&lt;/code&gt; 생성자에 전달 하기 &lt;em&gt;전에&lt;/em&gt; 기본 NumPy 배열을 기본 시스템 바이트 순서로 변환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="be6e73835e97716ef64c9f08c3147dcf9d2cd812" translate="yes" xml:space="preserve">
          <source>To display only the last component of the linked class, method or function, prefix it with &lt;code&gt;~&lt;/code&gt;. For example, &lt;code&gt;:class:`~pandas.Series`&lt;/code&gt; will link to &lt;code&gt;pandas.Series&lt;/code&gt; but only display the last part, &lt;code&gt;Series&lt;/code&gt; as the link text. See &lt;a href=&quot;https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax&quot;&gt;Sphinx cross-referencing syntax&lt;/a&gt; for details.</source>
          <target state="translated">연결된 클래스, 메서드 또는 함수의 마지막 구성 요소 만 표시하려면 접두사 &lt;code&gt;~&lt;/code&gt; 를 붙 입니다. 예를 들어, &lt;code&gt;:class:`~pandas.Series`&lt;/code&gt; 연결됩니다 &lt;code&gt;pandas.Series&lt;/code&gt; 하지만 마지막 부분을 표시 &lt;code&gt;Series&lt;/code&gt; 링크 텍스트로합니다. 자세한 내용은 &lt;a href=&quot;https://www.sphinx-doc.org/en/stable/domains.html#cross-referencing-syntax&quot;&gt;스핑크스 상호 참조 구문&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55c4eb3dc3c9572ee2bf9d3d2065c0ee47faa096" translate="yes" xml:space="preserve">
          <source>To do this, you need to &amp;ldquo;merge upstream master&amp;rdquo; in your branch:</source>
          <target state="translated">이렇게하려면 지점에서 &quot;업스트림 마스터 병합&quot;이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="32c2aac577eaa5552823638227a9b62281963fc9" translate="yes" xml:space="preserve">
          <source>To drop any rows that have missing data.</source>
          <target state="translated">누락 된 데이터가있는 행을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="51d506dc0f4e6101f7bf640d929fedea12826e06" translate="yes" xml:space="preserve">
          <source>To drop duplicates by index value, use &lt;code&gt;Index.duplicated&lt;/code&gt; then perform slicing. The same set of options are available for the &lt;code&gt;keep&lt;/code&gt; parameter.</source>
          <target state="translated">인덱스 값으로 중복을 삭제하려면 &lt;code&gt;Index.duplicated&lt;/code&gt; 를 사용한 다음 슬라이싱을 수행하십시오. &lt;code&gt;keep&lt;/code&gt; 매개 변수에 대해 동일한 옵션 세트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2359f74c79b6cd5d24e26857846c3692962278b9" translate="yes" xml:space="preserve">
          <source>To encode 1-d values as an enumerated type use &lt;a href=&quot;../reference/api/pandas.factorize#pandas.factorize&quot;&gt;&lt;code&gt;factorize()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">1-d 값을 열거 형으로 인코딩하려면 &lt;a href=&quot;../reference/api/pandas.factorize#pandas.factorize&quot;&gt; &lt;code&gt;factorize()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc69f83e87519bd715cf6e6fe276dc7e968798d5" translate="yes" xml:space="preserve">
          <source>To enforce a new Index, specify new labels to &lt;code&gt;index&lt;/code&gt;:</source>
          <target state="translated">새 색인을 적용하려면 색인을 &lt;code&gt;index&lt;/code&gt; 할 새 라벨을 지정하세요 .</target>
        </trans-unit>
        <trans-unit id="406c85883a0ae10baec610e677ec85cde1866d56" translate="yes" xml:space="preserve">
          <source>To enforce a single dtype:</source>
          <target state="translated">단일 dtype을 시행하려면</target>
        </trans-unit>
        <trans-unit id="8e8e9d84ae95daab89ab55550c3b01ec48f3330f" translate="yes" xml:space="preserve">
          <source>To evaluate single-element pandas objects in a boolean context, use the method &lt;a href=&quot;../reference/api/pandas.dataframe.bool#pandas.DataFrame.bool&quot;&gt;&lt;code&gt;bool()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">부울 컨텍스트에서 단일 요소 pandas 객체를 평가하려면 &lt;a href=&quot;../reference/api/pandas.dataframe.bool#pandas.DataFrame.bool&quot;&gt; &lt;code&gt;bool()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="aab5fb6b9a9d857848e2b16c8a8ec317c773cb9e" translate="yes" xml:space="preserve">
          <source>To explicitly request &lt;code&gt;string&lt;/code&gt; dtype, specify the &lt;code&gt;dtype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; dtype 을 명시 적으로 요청하려면 dtype을 지정하십시오 &lt;code&gt;dtype&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4eeb734a3d1baf8526eed583bae646044930d300" translate="yes" xml:space="preserve">
          <source>To facilitate working with multiple sheets from the same file, the &lt;code&gt;ExcelFile&lt;/code&gt; class can be used to wrap the file and can be passed into &lt;code&gt;read_excel&lt;/code&gt; There will be a performance benefit for reading multiple sheets as the file is read into memory only once.</source>
          <target state="translated">동일한 파일의 여러 시트 작업을 용이하게하기 위해 &lt;code&gt;ExcelFile&lt;/code&gt; 클래스를 사용하여 파일을 래핑하고 &lt;code&gt;read_excel&lt;/code&gt; 로 전달할 수 있습니다 . 파일이 메모리로 한 번만 읽혀 지므로 여러 시트를 읽을 때 성능상의 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="265593cb3fecaa7c5c98c66dbaef6994d28224c1" translate="yes" xml:space="preserve">
          <source>To fill missing values with goal of smooth plotting, consider &lt;code&gt;method='akima'&lt;/code&gt;.</source>
          <target state="translated">부드러운 플로팅을 위해 결 측값을 채우려면 &lt;code&gt;method='akima'&lt;/code&gt; 를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa22362f70bd6c1b010ec81b843841e19fb87f4c" translate="yes" xml:space="preserve">
          <source>To find duplicates on specific column(s), use &lt;code&gt;subset&lt;/code&gt;.</source>
          <target state="translated">특정 열에서 중복 항목을 찾으려면 &lt;code&gt;subset&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c0e43bfd3bb6f47ac6efb9cf36b8c60d4f4323c" translate="yes" xml:space="preserve">
          <source>To force a conversion, we can pass in an &lt;code&gt;errors&lt;/code&gt; argument, which specifies how pandas should deal with elements that cannot be converted to desired dtype or object. By default, &lt;code&gt;errors='raise'&lt;/code&gt;, meaning that any errors encountered will be raised during the conversion process. However, if &lt;code&gt;errors='coerce'&lt;/code&gt;, these errors will be ignored and pandas will convert problematic elements to &lt;code&gt;pd.NaT&lt;/code&gt; (for datetime and timedelta) or &lt;code&gt;np.nan&lt;/code&gt; (for numeric). This might be useful if you are reading in data which is mostly of the desired dtype (e.g. numeric, datetime), but occasionally has non-conforming elements intermixed that you want to represent as missing:</source>
          <target state="translated">변환을 강제하기 위해, 원하는 dtype 또는 객체로 변환 할 수없는 요소를 팬더가 처리하는 방법을 지정하는 &lt;code&gt;errors&lt;/code&gt; 인수를 전달할 수 있습니다. 기본적으로 &lt;code&gt;errors='raise'&lt;/code&gt; 는 변환 프로세스 중에 발생한 오류가 발생 함을 의미합니다. 그러나 &lt;code&gt;errors='coerce'&lt;/code&gt; 인 경우 이러한 오류는 무시되고 pandas는 문제가있는 요소를 &lt;code&gt;pd.NaT&lt;/code&gt; (datetime 및 &lt;code&gt;np.nan&lt;/code&gt; ) 또는 np.nan (숫자의 경우)으로 변환합니다. 이는 대부분 원하는 dtype (예 : 숫자, 날짜 시간)의 데이터를 읽는 경우 유용 할 수 있지만 때때로 누락 된 것으로 표시하려는 부적합 요소가 혼합되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffd690f8dcaed241715ebe8c092cb1c086569026" translate="yes" xml:space="preserve">
          <source>To further illustrate the filling functionality in &lt;code&gt;reindex&lt;/code&gt;, we will create a dataframe with a monotonically increasing index (for example, a sequence of dates).</source>
          <target state="translated">&lt;code&gt;reindex&lt;/code&gt; 에서 채우기 기능을 추가로 설명하기 위해 단조 증가하는 인덱스 (예 : 날짜 순서)를 사용하여 데이터 프레임을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5db069e9262fd39cb1216ed21604a5ed965267ec" translate="yes" xml:space="preserve">
          <source>To generate a new Series with the default set</source>
          <target state="translated">기본 세트로 새 시리즈를 생성하려면</target>
        </trans-unit>
        <trans-unit id="c2e0b8adaad5c617e1a38c53de0b28bbf15bd943" translate="yes" xml:space="preserve">
          <source>To generate a new Series with the default set &lt;code&gt;drop&lt;/code&gt; to True.</source>
          <target state="translated">기본 설정 &lt;code&gt;drop&lt;/code&gt; 을 참 으로하여 새 시리즈를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="cbc2db6f7b343a6951f5274ff9a28a4055d29f53" translate="yes" xml:space="preserve">
          <source>To generate an index with time delta, you can use either the &lt;a href=&quot;../reference/api/pandas.timedeltaindex#pandas.TimedeltaIndex&quot;&gt;&lt;code&gt;TimedeltaIndex&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../reference/api/pandas.timedelta_range#pandas.timedelta_range&quot;&gt;&lt;code&gt;timedelta_range()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">시간 델타를 사용하여 인덱스를 생성하려면 &lt;a href=&quot;../reference/api/pandas.timedeltaindex#pandas.TimedeltaIndex&quot;&gt; &lt;code&gt;TimedeltaIndex&lt;/code&gt; &lt;/a&gt; 또는 timedelta_range &lt;a href=&quot;../reference/api/pandas.timedelta_range#pandas.timedelta_range&quot;&gt; &lt;code&gt;timedelta_range()&lt;/code&gt; &lt;/a&gt; 생성자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc9b0f367e81175ad9ff5381268e9f007201729a" translate="yes" xml:space="preserve">
          <source>To generate an index with timestamps, you can use either the &lt;code&gt;DatetimeIndex&lt;/code&gt; or &lt;code&gt;Index&lt;/code&gt; constructor and pass in a list of datetime objects:</source>
          <target state="translated">타임 스탬프가있는 인덱스를 생성하려면 &lt;code&gt;DatetimeIndex&lt;/code&gt; 또는 &lt;code&gt;Index&lt;/code&gt; 생성자를 사용하고 datetime 객체 목록을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ded4b38e61260a91aeed01b89a351a87a2940c5" translate="yes" xml:space="preserve">
          <source>To get a single value &lt;code&gt;Series&lt;/code&gt; of type &lt;code&gt;category&lt;/code&gt;, you pass in a list with a single value:</source>
          <target state="translated">&lt;code&gt;category&lt;/code&gt; 유형 의 단일 값 &lt;code&gt;Series&lt;/code&gt; 를 얻으려면 단일 값 이있는 목록을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="be91626802b1466bfde9a14dceb95143f25bad3b" translate="yes" xml:space="preserve">
          <source>To get back to the original &lt;code&gt;Series&lt;/code&gt; or NumPy array, use &lt;code&gt;Series.astype(original_dtype)&lt;/code&gt; or &lt;code&gt;np.asarray(categorical)&lt;/code&gt;:</source>
          <target state="translated">원래 &lt;code&gt;Series&lt;/code&gt; 또는 NumPy 배열로 돌아가려면 &lt;code&gt;Series.astype(original_dtype)&lt;/code&gt; 또는 &lt;code&gt;np.asarray(categorical)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a90c92a3ec3b00ab51a55bc295b889227b11fc3" translate="yes" xml:space="preserve">
          <source>To get horizontal bar plots, use the &lt;code&gt;barh&lt;/code&gt; method:</source>
          <target state="translated">가로 막대 플롯을 얻으려면 &lt;code&gt;barh&lt;/code&gt; 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bba3add275808a8069b3576c44f9af9c24bfaee" translate="yes" xml:space="preserve">
          <source>To get the actual data inside a &lt;a href=&quot;../reference/api/pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, use the &lt;code&gt;.array&lt;/code&gt; property</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 내부의 실제 데이터를 얻으려면 &lt;code&gt;.array&lt;/code&gt; 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="02b17ca6db5146fcc9778a28bd6a3c0668ee4fa7" translate="yes" xml:space="preserve">
          <source>To get the actual result you can call &lt;code&gt;.compute()&lt;/code&gt;.</source>
          <target state="translated">실제 결과를 얻으려면 &lt;code&gt;.compute()&lt;/code&gt; 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd15400e5e4f8cb6b066514843c91a4e417f9dba" translate="yes" xml:space="preserve">
          <source>To get the boolean mask where values are &lt;code&gt;nan&lt;/code&gt;.</source>
          <target state="translated">값이 &lt;code&gt;nan&lt;/code&gt; 인 부울 마스크를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="4cca41c8c2ff6efefdd4f7febf697650e7054677" translate="yes" xml:space="preserve">
          <source>To get the difference between each 2-day period&amp;rsquo;s maximum and minimum value in one pass, you can do</source>
          <target state="translated">한 번의 패스로 각 2 일 기간의 최대 값과 최소값의 차이를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="5b7af73481c2190b698313bd665a30c51eb7a95a" translate="yes" xml:space="preserve">
          <source>To get the difference between each groups maximum and minimum value in one pass, you can do</source>
          <target state="translated">한 번의 패스로 각 그룹의 최대 값과 최소값의 차이를 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="4652462a5f45246259c866dbee701a9e9e55524a" translate="yes" xml:space="preserve">
          <source>To get the idea:</source>
          <target state="translated">아이디어를 얻으려면 :</target>
        </trans-unit>
        <trans-unit id="00e863d784b5a03faf04fcdc6b2c9002dacf6371" translate="yes" xml:space="preserve">
          <source>To give an intuition on what can be considered related, here there are some examples:</source>
          <target state="translated">관련된 것으로 간주 될 수있는 것에 대한 직감을 제공하기 위해 몇 가지 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e3926723d64f412f6580d8235e5d8b0dc6ab579" translate="yes" xml:space="preserve">
          <source>To have the same behaviour as</source>
          <target state="translated">다음과 같은 행동을하기 위해</target>
        </trans-unit>
        <trans-unit id="2b7048b5becc2f335858472826e5424435fe7956" translate="yes" xml:space="preserve">
          <source>To include NA values in the operation, use &lt;code&gt;skipna=False&lt;/code&gt;</source>
          <target state="translated">연산에 NA 값을 포함 시키려면 &lt;code&gt;skipna=False&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="58b74e095b4f1c910180fa76ca70a29c5b1ffa1e" translate="yes" xml:space="preserve">
          <source>To install a specific pandas version:</source>
          <target state="translated">특정 팬더 버전을 설치하려면</target>
        </trans-unit>
        <trans-unit id="9e3bc76af25455ec2f386a47a3088f42530cea6b" translate="yes" xml:space="preserve">
          <source>To install asv:</source>
          <target state="translated">asv를 설치하려면</target>
        </trans-unit>
        <trans-unit id="da403b659360d2ea0e0b44186932641486e3d553" translate="yes" xml:space="preserve">
          <source>To install other packages, IPython for example:</source>
          <target state="translated">다른 패키지를 설치하려면 다음과 같이 IPython을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="4d6f3ade4cce767645ca424c7349eb16e036bab8" translate="yes" xml:space="preserve">
          <source>To install the full &lt;a href=&quot;http://docs.continuum.io/anaconda/&quot;&gt;Anaconda&lt;/a&gt; distribution:</source>
          <target state="translated">전체 &lt;a href=&quot;http://docs.continuum.io/anaconda/&quot;&gt;Anaconda&lt;/a&gt; 배포판 을 설치하려면</target>
        </trans-unit>
        <trans-unit id="06a8dbc649eef54bc656bb440f2526fb755f4805" translate="yes" xml:space="preserve">
          <source>To invert the operation from above, namely, to convert from a &lt;code&gt;Timestamp&lt;/code&gt; to a &amp;lsquo;unix&amp;rsquo; epoch:</source>
          <target state="translated">위에서 작업을 반전하려면, 즉 &lt;code&gt;Timestamp&lt;/code&gt; 에서 'unix'epoch 로 변환하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="70cdac8648df57542f9b3a3fb0900a98c16bb4b2" translate="yes" xml:space="preserve">
          <source>To iterate over columns and find the maximum in each row, use &lt;code&gt;axis=1&lt;/code&gt;</source>
          <target state="translated">열을 반복하고 각 행에서 최대 값을 찾으려면 &lt;code&gt;axis=1&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5f688a397f6135e4b026419ccfd47f555078f10b" translate="yes" xml:space="preserve">
          <source>To iterate over columns and find the minimum in each row, use &lt;code&gt;axis=1&lt;/code&gt;</source>
          <target state="translated">열을 반복하고 각 행에서 최소값을 찾으려면 &lt;code&gt;axis=1&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a5d9a3abdb236eb785acaa248e763d34ef8caae6" translate="yes" xml:space="preserve">
          <source>To iterate over columns and find the product in each row, use &lt;code&gt;axis=1&lt;/code&gt;</source>
          <target state="translated">열을 반복하고 각 행에서 제품을 찾으려면 &lt;code&gt;axis=1&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="816b17d60920fd00d9d183cc068a2f61cc64dd96" translate="yes" xml:space="preserve">
          <source>To iterate over columns and find the sum in each row, use &lt;code&gt;axis=1&lt;/code&gt;</source>
          <target state="translated">열을 반복하고 각 행에서 합계를 찾으려면 &lt;code&gt;axis=1&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1edaef152f7705704d0ddb0333431fb52ea73c4d" translate="yes" xml:space="preserve">
          <source>To iterate over the rows of a DataFrame, you can use the following methods:</source>
          <target state="translated">DataFrame의 행을 반복하려면 다음 메서드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9840375ca2ef84e65008863878bb9abb0299e777" translate="yes" xml:space="preserve">
          <source>To join on multiple keys, the passed DataFrame must have a &lt;code&gt;MultiIndex&lt;/code&gt;:</source>
          <target state="translated">여러 개의 키에 가입하려면, 전달 DataFrame이 있어야합니다 &lt;code&gt;MultiIndex&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="d2eaace0fd2906a36bac78c35cb5f56a2163de53" translate="yes" xml:space="preserve">
          <source>To keep the Pandas test suite running quickly, parametrized tests are preferred if the inputs or logic are simple, with Hypothesis tests reserved for cases with complex logic or where there are too many combinations of options or subtle interactions to test (or think of!) all of them.</source>
          <target state="translated">Pandas 테스트 스위트를 빠르게 실행하려면 입력 또는 로직이 단순 할 경우 매개 변수화 된 테스트를 선호합니다. 가설 테스트는 복잡한 로직이있는 경우를 위해 예약되어 있거나 테스트 할 옵션 또는 미묘한 상호 작용이 너무 많은 경우에 예약됩니다 (또는 생각하십시오!). 그들 모두.</target>
        </trans-unit>
        <trans-unit id="8bdd8a1b20d5b6001db744f214c681b43c7962fe" translate="yes" xml:space="preserve">
          <source>To learn more about categories, see &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html#unioning&quot;&gt;link&lt;/a&gt;</source>
          <target state="translated">카테고리에 대한 자세한 내용은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html#unioning&quot;&gt;링크를&lt;/a&gt; 참조 하십시오</target>
        </trans-unit>
        <trans-unit id="7d0a20590bc81fb1af572f8c545392a2a0b8e3b5" translate="yes" xml:space="preserve">
          <source>To learn more about categories, see &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html#unioning&quot;&gt;link&lt;/a&gt;</source>
          <target state="translated">카테고리에 대한 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html#unioning&quot;&gt;링크를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="6dbbe7305bfdabda4a8c6cec78a442537749bb31" translate="yes" xml:space="preserve">
          <source>To learn more about datetime-like frequency strings, please see &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">날짜 시간과 같은 빈도 문자열에 대한 자세한 내용은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b99f2a1d7feec8907ceda52f3399ba186ab67fc" translate="yes" xml:space="preserve">
          <source>To learn more about datetime-like frequency strings, please see &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">datetime 형 주파수 문자열에 대한 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3cc544c582e2aa5ce0d1ddf92335ea464575b468" translate="yes" xml:space="preserve">
          <source>To learn more about the frequency strings, please see &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">주파수 문자열에 대한 자세한 내용은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="be904cfa08c56a0ebbfeecbba2cfe0f93697d5c5" translate="yes" xml:space="preserve">
          <source>To learn more about the frequency strings, please see &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">주파수 문자열에 대한 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d323b4dbfdf7b6a9998acfdaf390579844bb32ee" translate="yes" xml:space="preserve">
          <source>To learn more about the offset strings, please see &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">오프셋 문자열에 대한 자세한 내용은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e3490f015458add68ca45c37480c3e42044964f" translate="yes" xml:space="preserve">
          <source>To learn more about the offset strings, please see &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">오프셋 문자열에 대한 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e3622b61e4ec0af4504c883be7e8b3c9b26b6f6" translate="yes" xml:space="preserve">
          <source>To learn more about the offsets &amp;amp; frequency strings, please see &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">오프셋 및 주파수 스트링에 대한 자세한 내용은 &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1e7c5e9f7600169aaddc39f74f57aa443811d36" translate="yes" xml:space="preserve">
          <source>To learn more about the offsets &amp;amp; frequency strings, please see &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;this link&lt;/a&gt;.</source>
          <target state="translated">오프셋 및 주파수 문자열에 대한 자세한 내용은 &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases&quot;&gt;이 링크&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5871e2be1bb6d80f7eb244410d47d10309606ef4" translate="yes" xml:space="preserve">
          <source>To let original data structures have additional properties, you should let &lt;code&gt;pandas&lt;/code&gt; know what properties are added. &lt;code&gt;pandas&lt;/code&gt; maps unknown properties to data names overriding &lt;code&gt;__getattribute__&lt;/code&gt;. Defining original properties can be done in one of 2 ways:</source>
          <target state="translated">원본 데이터 구조에 추가 속성이 포함되도록하려면 &lt;code&gt;pandas&lt;/code&gt; 에게 추가 된 속성을 알려 주어야합니다 . &lt;code&gt;pandas&lt;/code&gt; 는 알 수없는 속성을 &lt;code&gt;__getattribute__&lt;/code&gt; 를 재정의하는 데이터 이름에 매핑 합니다. 원본 속성 정의는 다음 두 가지 방법 중 하나로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0ef9b78d1e70dcd5b6597731b6fc669d56fbf1f" translate="yes" xml:space="preserve">
          <source>To load the columns we want, we have two options. Option 1 loads in all the data and then filters to what we need.</source>
          <target state="translated">원하는 열을로드하려면 두 가지 옵션이 있습니다. 옵션 1은 모든 데이터를로드 한 다음 필요한 항목으로 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="1be515eec7def63c732d2b2392d76acc9c748cb1" translate="yes" xml:space="preserve">
          <source>To localize these dates to a time zone (assign a particular time zone to a naive date), you can use the &lt;code&gt;tz_localize&lt;/code&gt; method or the &lt;code&gt;tz&lt;/code&gt; keyword argument in &lt;a href=&quot;../reference/api/pandas.date_range#pandas.date_range&quot;&gt;&lt;code&gt;date_range()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../reference/api/pandas.datetimeindex#pandas.DatetimeIndex&quot;&gt;&lt;code&gt;DatetimeIndex&lt;/code&gt;&lt;/a&gt;. You can either pass &lt;code&gt;pytz&lt;/code&gt; or &lt;code&gt;dateutil&lt;/code&gt; time zone objects or Olson time zone database strings. Olson time zone strings will return &lt;code&gt;pytz&lt;/code&gt; time zone objects by default. To return &lt;code&gt;dateutil&lt;/code&gt; time zone objects, append &lt;code&gt;dateutil/&lt;/code&gt; before the string.</source>
          <target state="translated">이러한 날짜를 시간대로 현지화하려면 (특정 시간대를 순진한 날짜에 할당) &lt;a href=&quot;../reference/api/pandas.date_range#pandas.date_range&quot;&gt; &lt;code&gt;date_range()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt; &lt;code&gt;Timestamp&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../reference/api/pandas.datetimeindex#pandas.DatetimeIndex&quot;&gt; &lt;code&gt;DatetimeIndex&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;tz_localize&lt;/code&gt; 메서드 또는 &lt;code&gt;tz&lt;/code&gt; 키워드 인수를 사용할 수 있습니다 . &lt;code&gt;pytz&lt;/code&gt; 또는 &lt;code&gt;dateutil&lt;/code&gt; 시간대 개체 또는 Olson 시간대 데이터베이스 문자열을 전달할 수 있습니다 . Olson 시간대 문자열은 기본적으로 &lt;code&gt;pytz&lt;/code&gt; 시간대 객체를 반환 합니다. &lt;code&gt;dateutil&lt;/code&gt; 표준 시간대 개체 를 반환하려면 문자열 앞에 &lt;code&gt;dateutil/&lt;/code&gt; 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="f477d0576dba285470dd1b6daf99212c0d4872b5" translate="yes" xml:space="preserve">
          <source>To make detecting missing values easier (and across different array dtypes), pandas provides the &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt;&lt;code&gt;isna()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.notna#pandas.notna&quot;&gt;&lt;code&gt;notna()&lt;/code&gt;&lt;/a&gt; functions, which are also methods on Series and DataFrame objects:</source>
          <target state="translated">누락 된 값을보다 쉽게 ​​(및 다른 배열 dtype에서) 감지하기 위해 pandas는 &lt;a href=&quot;../reference/api/pandas.isna#pandas.isna&quot;&gt; &lt;code&gt;isna()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../reference/api/pandas.notna#pandas.notna&quot;&gt; &lt;code&gt;notna()&lt;/code&gt; &lt;/a&gt; 함수를 제공하며 이는 Series 및 DataFrame 객체의 메서드이기도합니다.</target>
        </trans-unit>
        <trans-unit id="a2894821d304c6feb35838be7c87d0578db6e307" translate="yes" xml:space="preserve">
          <source>To make your commits compliant with this standard, you can install the &lt;a href=&quot;http://clang.llvm.org/docs/ClangFormat.html&quot;&gt;ClangFormat&lt;/a&gt; tool, which can be downloaded &lt;a href=&quot;http://llvm.org/builds/&quot;&gt;here&lt;/a&gt;. To configure, in your home directory, run the following command:</source>
          <target state="translated">커밋이이 표준을 준수하도록하기 위해 &lt;a href=&quot;http://llvm.org/builds/&quot;&gt;여기에서&lt;/a&gt; 다운로드 할 수있는 &lt;a href=&quot;http://clang.llvm.org/docs/ClangFormat.html&quot;&gt;ClangFormat&lt;/a&gt; 도구를 설치할 수 있습니다 . 홈 디렉토리에서 구성하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a95013ca38f50985aa8422fad85c591e0c1c1282" translate="yes" xml:space="preserve">
          <source>To order by the largest values in column &amp;ldquo;a&amp;rdquo; and then &amp;ldquo;c&amp;rdquo;, we can specify multiple columns like in the next example.</source>
          <target state="translated">&amp;ldquo;a&amp;rdquo;열과&amp;ldquo;c&amp;rdquo;열에서 가장 큰 값을 기준으로 정렬하려면 다음 예와 같이 여러 열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9132ce06e9d7651bbd9bbe14dc66b30c4bf4caf" translate="yes" xml:space="preserve">
          <source>To order by the largest values in column &amp;ldquo;population&amp;rdquo; and then &amp;ldquo;GDP&amp;rdquo;, we can specify multiple columns like in the next example.</source>
          <target state="translated">&amp;ldquo;population&amp;rdquo;열과&amp;ldquo;GDP&amp;rdquo;열에서 가장 큰 값을 기준으로 정렬하려면 다음 예와 같이 여러 열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8830d2efc2658e63820b2dd56cab5f521e11e1c" translate="yes" xml:space="preserve">
          <source>To order by the smallest values in column &amp;ldquo;population&amp;rdquo; and then &amp;ldquo;GDP&amp;rdquo;, we can specify multiple columns like in the next example.</source>
          <target state="translated">&quot;population&quot;열과 &quot;GDP&quot;열의 가장 작은 값을 기준으로 정렬하려면 다음 예와 같이 여러 열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a33ad437e298cb4081f3f926b707340f92629f4e" translate="yes" xml:space="preserve">
          <source>To override the name of the resulting column, specify</source>
          <target state="translated">결과 열의 이름을 대체하려면 다음을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="86ed19929e37add13a7dc30a6806acbccdd66f1b" translate="yes" xml:space="preserve">
          <source>To override the name of the resulting column, specify &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">결과 컬럼의 이름을 무시하려면, 지정 &lt;code&gt;name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bc9e0fe1317c09099c97c937bbadb78a5cd737c1" translate="yes" xml:space="preserve">
          <source>To parse the mixed-timezone values as a datetime column, pass a partially-applied &lt;a href=&quot;../reference/api/pandas.to_datetime#pandas.to_datetime&quot;&gt;&lt;code&gt;to_datetime()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;utc=True&lt;/code&gt; as the &lt;code&gt;date_parser&lt;/code&gt;.</source>
          <target state="translated">혼합 시간대 값을 datetime 열로 구문 분석하려면 &lt;a href=&quot;../reference/api/pandas.to_datetime#pandas.to_datetime&quot;&gt; &lt;code&gt;to_datetime()&lt;/code&gt; &lt;/a&gt; 로 &lt;code&gt;utc=True&lt;/code&gt; 를 사용하여 부분적으로 적용된 to_datetime () 을 &lt;code&gt;date_parser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d29081492e58f309e14379389a3ce1257015c67a" translate="yes" xml:space="preserve">
          <source>To partition by something different than a space:</source>
          <target state="translated">공백과 다른 것으로 파티션을 나누려면 :</target>
        </trans-unit>
        <trans-unit id="c2217493d067c0e79d3144d65df5dccbc6d86122" translate="yes" xml:space="preserve">
          <source>To partition by the last space instead of the first one:</source>
          <target state="translated">첫 번째 공간 대신 ​​마지막 공간으로 분할하려면 :</target>
        </trans-unit>
        <trans-unit id="4d3fb1fd77cf95f58d7d22d83a44a579ece26e13" translate="yes" xml:space="preserve">
          <source>To perform table-wise conversion, where all labels in the entire &lt;code&gt;DataFrame&lt;/code&gt; are used as categories for each column, the &lt;code&gt;categories&lt;/code&gt; parameter can be determined programmatically by &lt;code&gt;categories = pd.unique(df.to_numpy().ravel())&lt;/code&gt;.</source>
          <target state="translated">전체 &lt;code&gt;DataFrame&lt;/code&gt; 의 모든 레이블이 각 열의 범주로 사용되는 테이블 단위 변환을 수행하기 위해 &lt;code&gt;categories&lt;/code&gt; 매개 변수는 &lt;code&gt;categories = pd.unique(df.to_numpy().ravel())&lt;/code&gt; 의해 프로그래밍 방식으로 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="617762f24b735f7c9e247098d8b68de1598bab2b" translate="yes" xml:space="preserve">
          <source>To plot data on a secondary y-axis, use the &lt;code&gt;secondary_y&lt;/code&gt; keyword:</source>
          <target state="translated">보조 y 축에 데이터를 표시하려면 &lt;code&gt;secondary_y&lt;/code&gt; 키워드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="dac54b03b2765f585aa134f05df789f1e08f04ae" translate="yes" xml:space="preserve">
          <source>To plot multiple column groups in a single axes, repeat &lt;code&gt;plot&lt;/code&gt; method specifying target &lt;code&gt;ax&lt;/code&gt;. It is recommended to specify &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;label&lt;/code&gt; keywords to distinguish each groups.</source>
          <target state="translated">단일 좌표축에 여러 열 그룹을 플로팅하려면 대상 &lt;code&gt;ax&lt;/code&gt; 를 지정하는 &lt;code&gt;plot&lt;/code&gt; 방법을 반복 합니다 . 각 그룹을 구별하기 위해 &lt;code&gt;color&lt;/code&gt; 및 &lt;code&gt;label&lt;/code&gt; 키워드 를 지정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="753de2c7f098491e89a71ef664c2ae0706099e7b" translate="yes" xml:space="preserve">
          <source>To plot some columns in a &lt;code&gt;DataFrame&lt;/code&gt;, give the column names to the &lt;code&gt;secondary_y&lt;/code&gt; keyword:</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 에 일부 열 을 표시하려면 &lt;code&gt;secondary_y&lt;/code&gt; 키워드에 열 이름을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="c2215a3cb1f3dab19088ef323a44dd4a243a25ac" translate="yes" xml:space="preserve">
          <source>To preserve dtypes while iterating over the rows, it is better to use &lt;a href=&quot;../reference/api/pandas.dataframe.itertuples#pandas.DataFrame.itertuples&quot;&gt;&lt;code&gt;itertuples()&lt;/code&gt;&lt;/a&gt; which returns namedtuples of the values and which is generally much faster than &lt;a href=&quot;../reference/api/pandas.dataframe.iterrows#pandas.DataFrame.iterrows&quot;&gt;&lt;code&gt;iterrows()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">행을 반복하는 동안 dtype을 보존하려면 값의 명명 된 튜플을 반환하고 일반적으로 &lt;a href=&quot;../reference/api/pandas.dataframe.iterrows#pandas.DataFrame.iterrows&quot;&gt; &lt;code&gt;iterrows()&lt;/code&gt; &lt;/a&gt; 보다 훨씬 빠른 &lt;a href=&quot;../reference/api/pandas.dataframe.itertuples#pandas.DataFrame.itertuples&quot;&gt; &lt;code&gt;itertuples()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="dceec10d0ad72679090eb2dd43564aee4e6c3645" translate="yes" xml:space="preserve">
          <source>To preserve dtypes while iterating over the rows, it is better to use &lt;a href=&quot;pandas.dataframe.itertuples#pandas.DataFrame.itertuples&quot;&gt;&lt;code&gt;itertuples()&lt;/code&gt;&lt;/a&gt; which returns namedtuples of the values and which is generally faster than &lt;code&gt;iterrows&lt;/code&gt;.</source>
          <target state="translated">행을 반복하면서 dtype을 유지하려면 &lt;a href=&quot;pandas.dataframe.itertuples#pandas.DataFrame.itertuples&quot;&gt; &lt;code&gt;itertuples()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다. itertuples () 는 값의 명명 된 튜플 을 반환하고 일반적으로 &lt;code&gt;iterrows&lt;/code&gt; 보다 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="9eb9632cdbd80ad6719d659c623cea1eb848a1ab" translate="yes" xml:space="preserve">
          <source>To prevent users from encountering this problem with duplicate data, a &lt;code&gt;ValueError&lt;/code&gt; exception is raised if &lt;code&gt;mangle_dupe_cols != True&lt;/code&gt;:</source>
          <target state="translated">사용자가 중복 데이터로 &lt;code&gt;mangle_dupe_cols != True&lt;/code&gt; 문제가 발생하지 않도록하기 위해 mangle_dupe_cols! = True 인 경우 &lt;code&gt;ValueError&lt;/code&gt; 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="f4ffc7b53af9f6a6ece23933f33d630a07426a09" translate="yes" xml:space="preserve">
          <source>To produce a stacked bar plot, pass &lt;code&gt;stacked=True&lt;/code&gt;:</source>
          <target state="translated">누적 막대 플롯을 생성하려면 &lt;code&gt;stacked=True&lt;/code&gt; 를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="6dd5ff29fcee716a5702e31a499b881cfc85b2ac" translate="yes" xml:space="preserve">
          <source>To produce an unstacked plot, pass &lt;code&gt;stacked=False&lt;/code&gt;. Alpha value is set to 0.5 unless otherwise specified:</source>
          <target state="translated">스택되지 않은 플롯을 생성하려면 &lt;code&gt;stacked=False&lt;/code&gt; 를 전달하십시오 . 별도로 지정하지 않는 한 알파 값은 0.5로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1cb12120cca3c3d06cba96cf9080a45a4d35a04f" translate="yes" xml:space="preserve">
          <source>To provide convenience for accessing longer time series, you can also pass in the year or year and month as strings:</source>
          <target state="translated">더 긴 시계열에 액세스하기위한 편의를 제공하기 위해 연도 또는 연도 및 월을 문자열로 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2cc1d989886a60d1b4ec470ae57241846cfcdb6" translate="yes" xml:space="preserve">
          <source>To reconstruct the &lt;code&gt;MultiIndex&lt;/code&gt; with only the used levels, the &lt;a href=&quot;../reference/api/pandas.multiindex.remove_unused_levels#pandas.MultiIndex.remove_unused_levels&quot;&gt;&lt;code&gt;remove_unused_levels()&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">사용 된 레벨만으로 &lt;code&gt;MultiIndex&lt;/code&gt; 를 재구성하려면 &lt;a href=&quot;../reference/api/pandas.multiindex.remove_unused_levels#pandas.MultiIndex.remove_unused_levels&quot;&gt; &lt;code&gt;remove_unused_levels()&lt;/code&gt; &lt;/a&gt; 메서드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d73a1a07977bc3f4ab7864ed09fadd4a253a2dc" translate="yes" xml:space="preserve">
          <source>To remind you, these are the available filling methods:</source>
          <target state="translated">상기시켜 드리기 위해 사용 가능한 충전 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f838229dc1bf16d4a6502cd475b377fc2125fab" translate="yes" xml:space="preserve">
          <source>To remove a specific level from the Index, use</source>
          <target state="translated">색인에서 특정 레벨을 제거하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="37be07ebbadde1f184157fe5a2011ac27dfe74e4" translate="yes" xml:space="preserve">
          <source>To remove a specific level from the Index, use &lt;code&gt;level&lt;/code&gt;.</source>
          <target state="translated">인덱스를 사용에서 특정 레벨을 제거하려면 &lt;code&gt;level&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bec551ffc5fe52ff346e5c0382c5dca85baf9742" translate="yes" xml:space="preserve">
          <source>To remove duplicates and keep last occurrences, use &lt;code&gt;keep&lt;/code&gt;.</source>
          <target state="translated">중복을 제거하고 마지막 항목을 &lt;code&gt;keep&lt;/code&gt; 하려면 keep을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="cfbd952ae090ba8ef4b08133a5bc5eb530394b3e" translate="yes" xml:space="preserve">
          <source>To remove duplicates on specific column(s), use &lt;code&gt;subset&lt;/code&gt;.</source>
          <target state="translated">특정 열에서 중복을 제거하려면 &lt;code&gt;subset&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="def548d3e0500feea6d2e84e4daacc1608b8fb86" translate="yes" xml:space="preserve">
          <source>To remove time zone information, use &lt;code&gt;tz_localize(None)&lt;/code&gt; or &lt;code&gt;tz_convert(None)&lt;/code&gt;. &lt;code&gt;tz_localize(None)&lt;/code&gt; will remove the time zone yielding the local time representation. &lt;code&gt;tz_convert(None)&lt;/code&gt; will remove the time zone after converting to UTC time.</source>
          <target state="translated">시간대 정보를 제거하려면 &lt;code&gt;tz_localize(None)&lt;/code&gt; 또는 &lt;code&gt;tz_convert(None)&lt;/code&gt; . &lt;code&gt;tz_localize(None)&lt;/code&gt; 은 현지 시간 표현을 생성하는 시간대를 제거합니다. &lt;code&gt;tz_convert(None)&lt;/code&gt; 은 UTC 시간으로 변환 한 후 시간대를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="d0c80941cd36f4f63cf7a6a24fe1b301d65c6e91" translate="yes" xml:space="preserve">
          <source>To replace the use of the deprecated</source>
          <target state="translated">더 이상 사용되지 않는 사용을 대체하려면</target>
        </trans-unit>
        <trans-unit id="b4506c035f4c2b47e0b26dffbe2ef35eefdca852" translate="yes" xml:space="preserve">
          <source>To retrieve a single indexable or data column, use the method &lt;code&gt;select_column&lt;/code&gt;. This will, for example, enable you to get the index very quickly. These return a &lt;code&gt;Series&lt;/code&gt; of the result, indexed by the row number. These do not currently accept the &lt;code&gt;where&lt;/code&gt; selector.</source>
          <target state="translated">인덱싱 가능한 단일 또는 데이터 열을 검색하려면 &lt;code&gt;select_column&lt;/code&gt; 메서드를 사용합니다 . 예를 들어 이렇게하면 인덱스를 매우 빠르게 얻을 수 있습니다. 이들은 행 번호로 인덱싱 된 &lt;code&gt;Series&lt;/code&gt; 의 결과를 반환합니다 . 이들은 현재 &lt;code&gt;where&lt;/code&gt; 선택기를 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="80bcd9a8b7d7ee6313c65b3050b1db05f9caa2e8" translate="yes" xml:space="preserve">
          <source>To return a Series containing tuples instead of a DataFrame:</source>
          <target state="translated">DataFrame 대신 튜플을 포함하는 Series를 반환하려면</target>
        </trans-unit>
        <trans-unit id="d93d8eaba7040d19d596c2b84b157b6e5d02a204" translate="yes" xml:space="preserve">
          <source>To return a Series of the same shape as the original:</source>
          <target state="translated">원본과 동일한 모양의 시리즈를 반환하려면 :</target>
        </trans-unit>
        <trans-unit id="95a549f7222576fcfb8e93b21fa1be8428299ae7" translate="yes" xml:space="preserve">
          <source>To return only the selected rows:</source>
          <target state="translated">선택한 행만 반환하려면 :</target>
        </trans-unit>
        <trans-unit id="ed746dd6ad736234aa798c15b2b0876e3e752c10" translate="yes" xml:space="preserve">
          <source>To return the index for the maximum value in each row, use &lt;code&gt;axis=&quot;columns&quot;&lt;/code&gt;.</source>
          <target state="translated">각 행의 최대 값에 대한 인덱스를 반환하려면 &lt;code&gt;axis=&quot;columns&quot;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="da52db3b7e9b0b9f3174537ed1fc36a857a1ea0e" translate="yes" xml:space="preserve">
          <source>To return the index for the minimum value in each row, use &lt;code&gt;axis=&quot;columns&quot;&lt;/code&gt;.</source>
          <target state="translated">각 행의 최소값에 대한 인덱스를 반환하려면 &lt;code&gt;axis=&quot;columns&quot;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="51622ca88bb987fbed05bf53c87b2119a96f67be" translate="yes" xml:space="preserve">
          <source>To return to your root environment:</source>
          <target state="translated">루트 환경으로 돌아가려면</target>
        </trans-unit>
        <trans-unit id="6d627ca46e48de343de8ee06fdb386f5e3c044aa" translate="yes" xml:space="preserve">
          <source>To round floats on a case-by-case basis, you can also use &lt;a href=&quot;../reference/api/pandas.series.round#pandas.Series.round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.round#pandas.DataFrame.round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사례별로 부동 소수점을 반올림하려면 round &lt;a href=&quot;../reference/api/pandas.series.round#pandas.Series.round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../reference/api/pandas.dataframe.round#pandas.DataFrame.round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt; 를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9f28811e5d1d70510fd4fc9dcde76b5e3c370f9" translate="yes" xml:space="preserve">
          <source>To run the tool on an entire directory, you can run the following analogous commands:</source>
          <target state="translated">전체 디렉토리에서 도구를 실행하려면 다음과 유사한 명령을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f99b06d1a97900e8a9d8680b823982f7bbee55e" translate="yes" xml:space="preserve">
          <source>To see all the child dtypes of a generic &lt;code&gt;dtype&lt;/code&gt; like &lt;code&gt;numpy.number&lt;/code&gt; you can define a function that returns a tree of child dtypes:</source>
          <target state="translated">일반의 모든 자식 dtypes 보려면 &lt;code&gt;dtype&lt;/code&gt; 같은 &lt;code&gt;numpy.number&lt;/code&gt; 을 당신은 반환 자식 dtypes의 나무 그 함수를 정의 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d7144750480cd77958a6b130b0c8a86f8a8593be" translate="yes" xml:space="preserve">
          <source>To see the order in which each row appears within its group, use the &lt;code&gt;cumcount&lt;/code&gt; method:</source>
          <target state="translated">그룹 내에서 각 행이 나타나는 순서를 보려면 &lt;code&gt;cumcount&lt;/code&gt; 메서드를 사용하세요 .</target>
        </trans-unit>
        <trans-unit id="bd07a13b981c38c4410ef2e12425f892b9048276" translate="yes" xml:space="preserve">
          <source>To see the ordering of the groups (as opposed to the order of rows within a group given by &lt;code&gt;cumcount&lt;/code&gt;) you can use &lt;code&gt;ngroup()&lt;/code&gt;.</source>
          <target state="translated">그룹의 순서를 보려면 ( &lt;code&gt;cumcount&lt;/code&gt; 에서 제공하는 그룹 내 행의 순서와 반대로 ) &lt;code&gt;ngroup()&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5004c8b82da0da8260452f70b55fd824ec6557db" translate="yes" xml:space="preserve">
          <source>To select Pandas categorical dtypes, use &lt;code&gt;'category'&lt;/code&gt;</source>
          <target state="translated">Pandas 범주 형 dtype을 선택하려면 &lt;code&gt;'category'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58a52739709a49b19a7a15593e3f442a5e803acc" translate="yes" xml:space="preserve">
          <source>To select Pandas datetimetz dtypes, use &lt;code&gt;'datetimetz'&lt;/code&gt; (new in 0.20.0) or &lt;code&gt;'datetime64[ns, tz]'&lt;/code&gt;</source>
          <target state="translated">Pandas datetimetz dtypes를 선택하려면 &lt;code&gt;'datetimetz'&lt;/code&gt; ( 0.20.0의 새로운 기능) 또는 &lt;code&gt;'datetime64[ns, tz]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acd4acfa205316e985d02a0c62bfb8cccd6eb56e" translate="yes" xml:space="preserve">
          <source>To select all &lt;em&gt;numeric&lt;/em&gt; types, use &lt;code&gt;np.number&lt;/code&gt; or &lt;code&gt;'number'&lt;/code&gt;</source>
          <target state="translated">모든 &lt;em&gt;숫자&lt;/em&gt; 유형 을 선택하려면 &lt;code&gt;np.number&lt;/code&gt; 또는 &lt;code&gt;'number'&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e06c189f2a106e2da74f68b0cf4d91e0f0c27e5e" translate="yes" xml:space="preserve">
          <source>To select datetimes, use &lt;code&gt;np.datetime64&lt;/code&gt;, &lt;code&gt;'datetime'&lt;/code&gt; or &lt;code&gt;'datetime64'&lt;/code&gt;</source>
          <target state="translated">날짜 시간을 선택하려면 &lt;code&gt;np.datetime64&lt;/code&gt; , &lt;code&gt;'datetime'&lt;/code&gt; 또는 &lt;code&gt;'datetime64'&lt;/code&gt; 를 사용하십시오</target>
        </trans-unit>
        <trans-unit id="984fc14ab145be2c4a52a43fd274a4df40519f6d" translate="yes" xml:space="preserve">
          <source>To select from a DataFrame or Series the nth item, use &lt;code&gt;nth()&lt;/code&gt;. This is a reduction method, and will return a single row (or no row) per group if you pass an int for n:</source>
          <target state="translated">DataFrame 또는 Series에서 n 번째 항목을 선택하려면 &lt;code&gt;nth()&lt;/code&gt; 사용하세요 . 이것은 축소 방법이며 n에 대해 int를 전달하면 그룹당 단일 행 (또는 행 없음)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a3264423bb91acf32073dec6bcba7ffa4b56305e" translate="yes" xml:space="preserve">
          <source>To select out everything for variable &lt;code&gt;A&lt;/code&gt; we could do:</source>
          <target state="translated">변수 &lt;code&gt;A&lt;/code&gt; 에 대한 모든 것을 선택하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="5632149dbc8b8a1fe78ee2d90fb2e51ccac148d8" translate="yes" xml:space="preserve">
          <source>To select string columns you must use the &lt;code&gt;object&lt;/code&gt; dtype:</source>
          <target state="translated">문자열 열을 선택하려면 dtype &lt;code&gt;object&lt;/code&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d861fbe1d6f16c4d4c36baaf7f11ed6dfc168134" translate="yes" xml:space="preserve">
          <source>To select strings you must use the &lt;code&gt;object&lt;/code&gt; dtype, but note that this will return &lt;em&gt;all&lt;/em&gt; object dtype columns</source>
          <target state="translated">문자열을 선택하려면 &lt;code&gt;object&lt;/code&gt; dtype을 사용해야 하지만 &lt;em&gt;모든&lt;/em&gt; 객체 dtype 열을 반환 &lt;em&gt;합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd2b5bb6b93009f5f5eb89ee4949c1625547bf56" translate="yes" xml:space="preserve">
          <source>To select timedeltas, use &lt;code&gt;np.timedelta64&lt;/code&gt;, &lt;code&gt;'timedelta'&lt;/code&gt; or &lt;code&gt;'timedelta64'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;np.timedelta64&lt;/code&gt; 를 선택하려면 np.timedelta64 , &lt;code&gt;'timedelta'&lt;/code&gt; timedelta ' 또는 &lt;code&gt;'timedelta64'&lt;/code&gt; timedelta64 '를 사용하십시오</target>
        </trans-unit>
        <trans-unit id="c229965774e2a362c620023ff0de038b33ddee8c" translate="yes" xml:space="preserve">
          <source>To set the library that is used to write the Excel file, you can pass the</source>
          <target state="translated">Excel 파일을 작성하는 데 사용되는 라이브러리를 설정하려면</target>
        </trans-unit>
        <trans-unit id="7cab342189112b42be5b0013ead5228c6979475b" translate="yes" xml:space="preserve">
          <source>To set the library that is used to write the Excel file, you can pass the &lt;code&gt;engine&lt;/code&gt; keyword (the default engine is automatically chosen depending on the file extension):</source>
          <target state="translated">Excel 파일을 작성하는 데 사용되는 라이브러리를 설정하려면 &lt;code&gt;engine&lt;/code&gt; 키워드를 전달하면 됩니다 (파일 확장자에 따라 기본 엔진이 자동으로 선택됨).</target>
        </trans-unit>
        <trans-unit id="31330285f61430aa1875a84504ba0d7695aa199a" translate="yes" xml:space="preserve">
          <source>To specify the name of the new column use</source>
          <target state="translated">새 열의 이름을 지정하려면</target>
        </trans-unit>
        <trans-unit id="015c372b912bdaace9fcf093ad2b1a45cfdb6715" translate="yes" xml:space="preserve">
          <source>To specify the name of the new column use &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">새 열 사용의 이름을 지정하려면 &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="110822fbc5c9d15237a05b6139b567a48ad4915d" translate="yes" xml:space="preserve">
          <source>To specify the sheet name:</source>
          <target state="translated">시트 이름을 지정하려면</target>
        </trans-unit>
        <trans-unit id="03693b03ad5301f7fac70a0f29c03ab632f275c6" translate="yes" xml:space="preserve">
          <source>To specify which writer you want to use, you can pass an engine keyword argument to &lt;code&gt;to_excel&lt;/code&gt; and to &lt;code&gt;ExcelWriter&lt;/code&gt;. The built-in engines are:</source>
          <target state="translated">사용할 작성기를 지정하려면 엔진 키워드 인수를 &lt;code&gt;to_excel&lt;/code&gt; 및 &lt;code&gt;ExcelWriter&lt;/code&gt; 에 전달할 수 있습니다 . 내장 엔진은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e989d3593eb6fe733c8e2b3b8b3cc3866df87dc2" translate="yes" xml:space="preserve">
          <source>To support column-specific aggregation &lt;em&gt;with control over the output column names&lt;/em&gt;, pandas accepts the special syntax in &lt;code&gt;GroupBy.agg()&lt;/code&gt;, known as &amp;ldquo;named aggregation&amp;rdquo;, where</source>
          <target state="translated">&lt;em&gt;출력 열 이름을 제어&lt;/em&gt; 하는 열별 집계를 지원하기 위해 pandas는 &lt;code&gt;GroupBy.agg()&lt;/code&gt; 의 특수 구문 인 '명명 된 집계'를 허용합니다. 여기서</target>
        </trans-unit>
        <trans-unit id="75a58ced95bb72c8e10d517a14c414271a95d57a" translate="yes" xml:space="preserve">
          <source>To take the cross section of the 1st level and 1st axis the index:</source>
          <target state="translated">인덱스의 첫 번째 수준과 첫 번째 축의 단면을 가져 오려면 :</target>
        </trans-unit>
        <trans-unit id="3c31fd3db22b4fb1d60356ed55730886780d1ef4" translate="yes" xml:space="preserve">
          <source>To test out code changes, you&amp;rsquo;ll need to build pandas from source, which requires a C compiler and Python environment. If you&amp;rsquo;re making documentation changes, you can skip to &lt;a href=&quot;#contributing-documentation&quot;&gt;Contributing to the documentation&lt;/a&gt; but you won&amp;rsquo;t be able to build the documentation locally before pushing your changes.</source>
          <target state="translated">코드 변경을 테스트하려면 C 컴파일러와 Python 환경이 필요한 소스에서 팬더를 빌드해야합니다. 이 문서의 변경을하는 경우, 당신은 건너 뛸 수 있습니다 &lt;a href=&quot;#contributing-documentation&quot;&gt;문서에 기여&lt;/a&gt; 하지만 당신은 변경 사항을 밀어 전에 로컬로 문서를 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="58df51d01349eb4d422bafe792842a4ae59e7edd" translate="yes" xml:space="preserve">
          <source>To the development guide</source>
          <target state="translated">개발 가이드로</target>
        </trans-unit>
        <trans-unit id="113b87bc99f49aa72055aa324a5ae7e8966484b2" translate="yes" xml:space="preserve">
          <source>To the getting started guides</source>
          <target state="translated">시작 가이드로</target>
        </trans-unit>
        <trans-unit id="fc47acd7cea87c576631eb9f7f9b88b3f5df1df7" translate="yes" xml:space="preserve">
          <source>To the new user, working with Git is one of the more daunting aspects of contributing to &lt;em&gt;pandas&lt;/em&gt;. It can very quickly become overwhelming, but sticking to the guidelines below will help keep the process straightforward and mostly trouble free. As always, if you are having difficulties please feel free to ask for help.</source>
          <target state="translated">새로운 사용자에게는 Git과 함께 일하는 것이 &lt;em&gt;팬더&lt;/em&gt; 에 기여하는 데있어 가장 어려운 측면 중 하나입니다 . 매우 빠르게 압도적이지만 아래 지침을 준수하면 프로세스를 간단하고 대부분 문제없이 유지할 수 있습니다. 항상 그렇듯이 어려움이있는 경우 언제든지 도움을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="2928d49efcd178e0f0435b43a17fa6ba984378d5" translate="yes" xml:space="preserve">
          <source>To the reference guide</source>
          <target state="translated">참조 가이드로</target>
        </trans-unit>
        <trans-unit id="b08040b6d0ec43c52a3679284a1d8a5c2a8a6ef3" translate="yes" xml:space="preserve">
          <source>To the user guide</source>
          <target state="translated">사용자 가이드로</target>
        </trans-unit>
        <trans-unit id="ffcf25d972b917dfb8eede17558b0a2972623c6e" translate="yes" xml:space="preserve">
          <source>To transpose, access the &lt;code&gt;T&lt;/code&gt; attribute (also the &lt;code&gt;transpose&lt;/code&gt; function), similar to an ndarray:</source>
          <target state="translated">전치하려면 ndarray와 유사한 &lt;code&gt;T&lt;/code&gt; 속성 ( &lt;code&gt;transpose&lt;/code&gt; 함수)에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="3241c967699f3d6e897a531bf477aa6ae38cbf36" translate="yes" xml:space="preserve">
          <source>To update the Series in place, without generating a new one set</source>
          <target state="translated">새로운 세트를 생성하지 않고 시리즈를 제자리에 업데이트하려면</target>
        </trans-unit>
        <trans-unit id="94cc4f1be069dbe799fcb80219cb3af57cef45e6" translate="yes" xml:space="preserve">
          <source>To update the Series in place, without generating a new one set &lt;code&gt;inplace&lt;/code&gt; to True. Note that it also requires &lt;code&gt;drop=True&lt;/code&gt;.</source>
          <target state="translated">새 시리즈를 생성하지 않고 Series를 제자리에 업데이트하려면 &lt;code&gt;inplace&lt;/code&gt; 를 True로 설정하십시오 . &lt;code&gt;drop=True&lt;/code&gt; 도 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="1cfb8fa2fbfddc00c35b9611ae3d7de3d6237f11" translate="yes" xml:space="preserve">
          <source>To use a test, subclass it:</source>
          <target state="translated">테스트를 사용하려면 서브 클래스로 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="7aed6ab03dacb8bf65078e0e19f6a5b67a6b6120" translate="yes" xml:space="preserve">
          <source>To use all features of asv, you will need either &lt;code&gt;conda&lt;/code&gt; or &lt;code&gt;virtualenv&lt;/code&gt;. For more details please check the &lt;a href=&quot;https://asv.readthedocs.io/en/latest/installing.html&quot;&gt;asv installation webpage&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;conda&lt;/code&gt; 의 모든 기능을 사용하려면 conda 또는 &lt;code&gt;virtualenv&lt;/code&gt; 가 필요합니다 . 자세한 내용은 &lt;a href=&quot;https://asv.readthedocs.io/en/latest/installing.html&quot;&gt;asv 설치 웹 페이지&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0aae57d8c9a0edab21bc22abec1ebf0b513dc7e2" translate="yes" xml:space="preserve">
          <source>To use it, place the next code after the &amp;ldquo;Examples&amp;rdquo; header as shown below. The plot will be generated automatically when building the documentation.</source>
          <target state="translated">이를 사용하려면 아래에 표시된대로 &quot;Examples&quot;헤더 다음에 다음 코드를 배치하십시오. 문서를 작성할 때 플롯이 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="52a22daeecb3117dbb286c45dd113d3761129297" translate="yes" xml:space="preserve">
          <source>To use pandas&amp;rsquo; nullable &lt;a href=&quot;pandas.arrays.integerarray#pandas.arrays.IntegerArray&quot;&gt;&lt;code&gt;pandas.arrays.IntegerArray&lt;/code&gt;&lt;/a&gt;, specify the dtype:</source>
          <target state="translated">pandas의 nullable &lt;a href=&quot;pandas.arrays.integerarray#pandas.arrays.IntegerArray&quot;&gt; &lt;code&gt;pandas.arrays.IntegerArray&lt;/code&gt; &lt;/a&gt; 를 사용하려면 dtype 을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="7e861a9dfcf8209e637af8b8f047d060131278da" translate="yes" xml:space="preserve">
          <source>To use the cubehelix colormap, we can pass &lt;code&gt;colormap='cubehelix'&lt;/code&gt;.</source>
          <target state="translated">cubehelix 컬러 맵을 사용하려면 colormap &lt;code&gt;colormap='cubehelix'&lt;/code&gt; 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f19279d13f034638ee9e3bf7ab582679d4631b43" translate="yes" xml:space="preserve">
          <source>To view a small sample of a Series or DataFrame object, use the &lt;a href=&quot;../reference/api/pandas.dataframe.head#pandas.DataFrame.head&quot;&gt;&lt;code&gt;head()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.tail#pandas.DataFrame.tail&quot;&gt;&lt;code&gt;tail()&lt;/code&gt;&lt;/a&gt; methods. The default number of elements to display is five, but you may pass a custom number.</source>
          <target state="translated">Series 또는 DataFrame 객체의 작은 샘플을 보려면 &lt;a href=&quot;../reference/api/pandas.dataframe.head#pandas.DataFrame.head&quot;&gt; &lt;code&gt;head()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../reference/api/pandas.dataframe.tail#pandas.DataFrame.tail&quot;&gt; &lt;code&gt;tail()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오. 표시 할 기본 요소 수는 5 개이지만 사용자 정의 번호를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61d8592e92650c4d711742c87dd5a1feba7ddbd0" translate="yes" xml:space="preserve">
          <source>To view your environments:</source>
          <target state="translated">환경을 보려면</target>
        </trans-unit>
        <trans-unit id="0e3ad4fa0b780edf148fd69350e39b2d379fcda1" translate="yes" xml:space="preserve">
          <source>To write a &lt;code&gt;DataFrame&lt;/code&gt; object to a sheet of an Excel file, you can use the &lt;code&gt;to_excel&lt;/code&gt; instance method. The arguments are largely the same as &lt;code&gt;to_csv&lt;/code&gt; described above, the first argument being the name of the excel file, and the optional second argument the name of the sheet to which the &lt;code&gt;DataFrame&lt;/code&gt; should be written. For example:</source>
          <target state="translated">작성하려면 &lt;code&gt;DataFrame&lt;/code&gt; 의 Excel 파일의 시트 개체를, 당신은 사용할 수 있습니다 &lt;code&gt;to_excel&lt;/code&gt; 의 인스턴스 방법. 인수는 위에서 설명한 &lt;code&gt;to_csv&lt;/code&gt; 와 거의 동일하며 첫 번째 인수는 엑셀 파일의 이름이고 선택적인 두 번째 인수는 &lt;code&gt;DataFrame&lt;/code&gt; 이 기록되어야 하는 시트의 이름입니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3c260063ee05014fd38bc46509171baa11b7d940" translate="yes" xml:space="preserve">
          <source>To write a single Styler to an Excel .xlsx file it is only necessary to specify a target file name. To write to multiple sheets it is necessary to create an</source>
          <target state="translated">단일 Styler를 Excel .xlsx 파일에 쓰려면 대상 파일 이름 만 지정하면됩니다. 여러 시트에 쓰려면</target>
        </trans-unit>
        <trans-unit id="87edce1fb3af1c13d7a4b37011099b51cf990914" translate="yes" xml:space="preserve">
          <source>To write a single Styler to an Excel .xlsx file it is only necessary to specify a target file name. To write to multiple sheets it is necessary to create an &lt;code&gt;ExcelWriter&lt;/code&gt; object with a target file name, and specify a sheet in the file to write to.</source>
          <target state="translated">단일 Styler를 Excel .xlsx 파일에 쓰려면 대상 파일 이름 만 지정하면됩니다. 여러 시트에 쓰려면 대상 파일 이름으로 &lt;code&gt;ExcelWriter&lt;/code&gt; 객체 를 만들고 파일에 쓰려는 시트를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="17a20cebc4f42707c453b7b0b0473bca6538cf3f" translate="yes" xml:space="preserve">
          <source>To write a single object to an Excel .xlsx file it is only necessary to specify a target file name. To write to multiple sheets it is necessary to create an</source>
          <target state="translated">Excel .xlsx 파일에 단일 개체를 쓰려면 대상 파일 이름 만 지정하면됩니다. 여러 시트에 쓰려면</target>
        </trans-unit>
        <trans-unit id="6c914b4246f0fb60596569ed0a47f40b9dff4137" translate="yes" xml:space="preserve">
          <source>To write a single object to an Excel .xlsx file it is only necessary to specify a target file name. To write to multiple sheets it is necessary to create an &lt;code&gt;ExcelWriter&lt;/code&gt; object with a target file name, and specify a sheet in the file to write to.</source>
          <target state="translated">단일 개체를 Excel .xlsx 파일에 쓰려면 대상 파일 이름 만 지정하면됩니다. 여러 시트에 쓰려면 대상 파일 이름으로 &lt;code&gt;ExcelWriter&lt;/code&gt; 객체 를 만들고 파일에 쓰려는 시트를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0735e3dcf490ae1ea7b44492fa5422de1793c727" translate="yes" xml:space="preserve">
          <source>To write to separate sheets in a single file:</source>
          <target state="translated">단일 파일로 별도의 시트에 쓰려면 :</target>
        </trans-unit>
        <trans-unit id="a59e3c25fd3b24018f82d6e78aab09df9da55afb" translate="yes" xml:space="preserve">
          <source>Tolerance may be a scalar value, which applies the same tolerance to all values, or list-like, which applies variable tolerance per element. List-like includes list, tuple, array, Series, and must be the same size as the index and its dtype must exactly match the index&amp;rsquo;s type.</source>
          <target state="translated">공차는 스칼라 값으로, 모든 값에 동일한 공차를 적용하거나 요소별로 가변 공차를 적용하는 목록과 유사합니다. List-like에는 list, tuple, array, Series가 포함되며 인덱스와 크기가 같아야하며 dtype은 인덱스 유형과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="438d59c882dbce394d6e196af918874fe7506de0" translate="yes" xml:space="preserve">
          <source>Top-level conversions</source>
          <target state="translated">최상위 전환</target>
        </trans-unit>
        <trans-unit id="d0d74b49d7c639bfa0e6805ff9e03ecdb2ba614e" translate="yes" xml:space="preserve">
          <source>Top-level dealing with datetimelike</source>
          <target state="translated">datetimelike를 다루는 최상위 레벨</target>
        </trans-unit>
        <trans-unit id="c2b18ef89f62058c5b6e7a08484c550135bd39d8" translate="yes" xml:space="preserve">
          <source>Top-level dealing with intervals</source>
          <target state="translated">인터벌을 다루는 최상위 레벨</target>
        </trans-unit>
        <trans-unit id="c951f33494edd3fa05d83436cbe2244b7b8a92ba" translate="yes" xml:space="preserve">
          <source>Top-level evaluation</source>
          <target state="translated">최상위 평가</target>
        </trans-unit>
        <trans-unit id="e93d5371b962fddf006f4bda8d5be5ae4cd8c45e" translate="yes" xml:space="preserve">
          <source>Top-level factorize method that dispatches here.</source>
          <target state="translated">여기서 전달하는 최상위 factorize 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="390318a195f1ca1dd21e9efb2596562c794c538c" translate="yes" xml:space="preserve">
          <source>Top-level isna.</source>
          <target state="translated">최상위 아레나.</target>
        </trans-unit>
        <trans-unit id="574bc63673dc888b61f6f6ee7b3fe3a406b764a7" translate="yes" xml:space="preserve">
          <source>Top-level missing data</source>
          <target state="translated">최상위 결측 데이터</target>
        </trans-unit>
        <trans-unit id="762c14c6b40cc359019440dfd147867b5460f638" translate="yes" xml:space="preserve">
          <source>Top-level notna.</source>
          <target state="translated">최상위 수준.</target>
        </trans-unit>
        <trans-unit id="5e217af2445a00d3e8186ca26581738737c4c32a" translate="yes" xml:space="preserve">
          <source>Top-level unique method for any 1-d array-like object.</source>
          <target state="translated">1 차원 배열 유사 객체에 대한 최상위 고유 방법입니다.</target>
        </trans-unit>
        <trans-unit id="0498396e1c9f0bbfc17094e169cf1eac74ec20e4" translate="yes" xml:space="preserve">
          <source>Total bytes consumed by the elements of an ndarray.</source>
          <target state="translated">ndarray 요소가 소비 한 총 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="62511550774b90e55fa9f4d081340a2b9a412907" translate="yes" xml:space="preserve">
          <source>Total bytes consumed by the elements of the array.</source>
          <target state="translated">배열의 요소가 소비 한 총 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="3f3ca10de168b7c48fcb87f5e00dd4b7b5bf8ade" translate="yes" xml:space="preserve">
          <source>Total duration of timedelta in seconds (to ns precision).</source>
          <target state="translated">총 타임 델타 지속 시간 (초) (ns 정밀도까지)</target>
        </trans-unit>
        <trans-unit id="8a5a8ad1c9bea3fbdc9bb0abbbfdbe46273f031d" translate="yes" xml:space="preserve">
          <source>Total seconds in the duration.</source>
          <target state="translated">기간의 총 초입니다.</target>
        </trans-unit>
        <trans-unit id="b620735e250f7337f888679f7d80441898680ff6" translate="yes" xml:space="preserve">
          <source>Transform API</source>
          <target state="translated">변환 API</target>
        </trans-unit>
        <trans-unit id="6191cdc2c04414c6c87ffd4a179183af3f207d27" translate="yes" xml:space="preserve">
          <source>Transform each element of a list-like to a row, replicating index values.</source>
          <target state="translated">목록의 각 요소를 행으로 변환하여 인덱스 값을 복제합니다.</target>
        </trans-unit>
        <trans-unit id="d72955d9b5fecbca2c7de8a94ac1b40e4c668022" translate="yes" xml:space="preserve">
          <source>Transform each element of a list-like to a row, replicating the index values.</source>
          <target state="translated">목록과 같은 각 요소를 행으로 변환하여 인덱스 값을 복제합니다.</target>
        </trans-unit>
        <trans-unit id="ca36fae42db179d654cad54aabf0b7aa17c6c3e2" translate="yes" xml:space="preserve">
          <source>Transform each element of a list-like to a row.</source>
          <target state="translated">목록의 각 요소를 행으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="128e1f4b9550d5de2680e93bcd4491ed569011ea" translate="yes" xml:space="preserve">
          <source>Transform function producing a Series with like indexes.</source>
          <target state="translated">인덱스가 유사한 Series를 생성하는 변형 함수.</target>
        </trans-unit>
        <trans-unit id="270bd33ddbd99479dac6f9fe26f993c3beaa3be0" translate="yes" xml:space="preserve">
          <source>Transform nonexistent times to &lt;code&gt;NaT&lt;/code&gt; or shift the times.</source>
          <target state="translated">존재하지 않는 시간을 &lt;code&gt;NaT&lt;/code&gt; 로 변환 하거나 시간을 이동합니다.</target>
        </trans-unit>
        <trans-unit id="30e6576f691cb2ef4cb69ba3371cf4ca9b93f74f" translate="yes" xml:space="preserve">
          <source>Transform the entire frame. &lt;code&gt;.transform()&lt;/code&gt; allows input functions as: a NumPy function, a string function name or a user defined function.</source>
          <target state="translated">전체 프레임을 변형합니다. &lt;code&gt;.transform()&lt;/code&gt; 은 입력 함수를 NumPy 함수, 문자열 함수 이름 또는 사용자 정의 함수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="136b15df56a7f0e6c91ab336e20cb03e34ca9b57" translate="yes" xml:space="preserve">
          <source>Transform timestamp[, tz] to tz&amp;rsquo;s local time from POSIX timestamp.</source>
          <target state="translated">타임 스탬프 [, tz]를 POSIX 타임 스탬프에서 tz의 현지 시간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="789930c90a705bacfcd854c2b6483d88841f7c5b" translate="yes" xml:space="preserve">
          <source>Transform with multiple functions</source>
          <target state="translated">여러 기능으로 변환</target>
        </trans-unit>
        <trans-unit id="dc1c231275a16e11dae243561efa84b2936b1b19" translate="yes" xml:space="preserve">
          <source>Transformation</source>
          <target state="translated">Transformation</target>
        </trans-unit>
        <trans-unit id="5afa59173a80a83611421415b6ecfc897460cefc" translate="yes" xml:space="preserve">
          <source>Transformation functions that have lower dimension outputs are broadcast to match the shape of the input array.</source>
          <target state="translated">더 낮은 차원의 출력을 가진 변환 함수는 입력 배열의 모양과 일치하도록 브로드 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="b39aaeab2088196b762ce54aefa57ae15117548b" translate="yes" xml:space="preserve">
          <source>Transformed DataFrame.</source>
          <target state="translated">변환 된 DataFrame.</target>
        </trans-unit>
        <trans-unit id="07edff8c6ab5d2b6ba73b34c78a1792f548b27e1" translate="yes" xml:space="preserve">
          <source>Transforming</source>
          <target state="translated">Transforming</target>
        </trans-unit>
        <trans-unit id="37e016e7eaddf77b794ff7395f38419cc01ecafd" translate="yes" xml:space="preserve">
          <source>Transforming with a dict</source>
          <target state="translated">dict로 변환</target>
        </trans-unit>
        <trans-unit id="ee97eb93bdd014549e677c61d117d2098c29ba13" translate="yes" xml:space="preserve">
          <source>Transforms the Series on each group based on the given function.</source>
          <target state="translated">주어진 함수에 따라 각 그룹의 시리즈를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2cb2d33ae76b7ca78d3e4f0435b740292c6fba4b" translate="yes" xml:space="preserve">
          <source>Transitioning to &lt;code&gt;pytest&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pytest&lt;/code&gt; 로 전환</target>
        </trans-unit>
        <trans-unit id="ca3b38a43002d63900d830f30d7fc175af55811e" translate="yes" xml:space="preserve">
          <source>Transpose index and columns.</source>
          <target state="translated">인덱스와 열을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="822ca54f0e9b5163d5ebb8100198f4779e492d61" translate="yes" xml:space="preserve">
          <source>Transposing</source>
          <target state="translated">Transposing</target>
        </trans-unit>
        <trans-unit id="fe2ed27add5aedac77751649f82b5b4dd331ca3f" translate="yes" xml:space="preserve">
          <source>Transposing a DataFrame with mixed dtypes will result in a homogeneous DataFrame with the</source>
          <target state="translated">혼합 된 dtypes로 DataFrame을 전치하면</target>
        </trans-unit>
        <trans-unit id="5471bd00b64f3b22931b3486299b1428633de97f" translate="yes" xml:space="preserve">
          <source>Transposing a DataFrame with mixed dtypes will result in a homogeneous DataFrame with the &lt;code&gt;object&lt;/code&gt; dtype. In such a case, a copy of the data is always made.</source>
          <target state="translated">혼합 된 dtype으로 DataFrame을 조옮김하면 &lt;code&gt;object&lt;/code&gt; dtype 과 동종의 DataFrame이 발생 합니다 . 이 경우 항상 데이터 사본이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="9c8dc3292f30617c8a1efa5b2729e445e744bd5b" translate="yes" xml:space="preserve">
          <source>Transposing your data:</source>
          <target state="translated">데이터 전치 :</target>
        </trans-unit>
        <trans-unit id="e118b5d1464272cbfb06582b43dab648175398cd" translate="yes" xml:space="preserve">
          <source>Trellis plotting interface</source>
          <target state="translated">격자 플롯 인터페이스</target>
        </trans-unit>
        <trans-unit id="b1826e081fce2c68644405dffac2ee727a396494" translate="yes" xml:space="preserve">
          <source>Tries to return a string representing a frequency guess, generated by infer_freq.</source>
          <target state="translated">infer_freq에 의해 생성 된 주파수 추측을 나타내는 문자열을 반환하려고합니다.</target>
        </trans-unit>
        <trans-unit id="8a73eef000c8c3a2b587ab0bdcf99d9fb2f144da" translate="yes" xml:space="preserve">
          <source>Tries to return a string representing a frequency guess, generated by infer_freq. Returns None if it can&amp;rsquo;t autodetect the frequency.</source>
          <target state="translated">infer_freq에 의해 생성 된 주파수 추측을 나타내는 문자열을 반환하려고합니다. 주파수를 자동 감지 할 수없는 경우 None을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="935665411175cbace174f6cf9759b5cca22bfa5d" translate="yes" xml:space="preserve">
          <source>Trim values above a given threshold.</source>
          <target state="translated">주어진 임계 값을 초과하는 값을 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="97ed4d1aec2924a41b9634f38abc832caf001550" translate="yes" xml:space="preserve">
          <source>Trim values at input threshold in dataframe.</source>
          <target state="translated">데이터 프레임의 입력 임계 값에서 값을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="1643304590be85f24ad6ac9af1a8352e151b30b5" translate="yes" xml:space="preserve">
          <source>Trim values at input threshold in series.</source>
          <target state="translated">직렬로 입력 임계 값에서 값을 트림합니다.</target>
        </trans-unit>
        <trans-unit id="5ee8bc72aab647d4822203325b1f9b0670b5d3bd" translate="yes" xml:space="preserve">
          <source>Trim values at input threshold(s).</source>
          <target state="translated">입력 임계 값에서 값을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="aa68c903a91958058c148b20b729e4c95dba2d4c" translate="yes" xml:space="preserve">
          <source>Trim values below a given threshold.</source>
          <target state="translated">주어진 임계 값 미만의 값을 트림합니다.</target>
        </trans-unit>
        <trans-unit id="25790053dc75d371994566e517fcba3c884337e1" translate="yes" xml:space="preserve">
          <source>Troubleshoot HDFStore exceptions</source>
          <target state="translated">HDFStore 예외 문제 해결</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="26c263f6a830e019851282a174cc8d9df8b319e7" translate="yes" xml:space="preserve">
          <source>True (default) : returns a Series for Series</source>
          <target state="translated">True (기본값) : 시리즈에 대한 시리즈를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0d2449911dd1e3e181e76b86082b23cec0cbd02" translate="yes" xml:space="preserve">
          <source>True (default) : returns a Series for Series &lt;code&gt;x&lt;/code&gt; or a Categorical for all other inputs. The values stored within are Interval dtype.</source>
          <target state="translated">True (기본값) : Series &lt;code&gt;x&lt;/code&gt; 의 Series 또는 다른 모든 입력의 Categorical을 반환합니다 . 저장된 값은 간격 dtype입니다.</target>
        </trans-unit>
        <trans-unit id="b96e69e4470a931a678f47f0731641dbdd741ec9" translate="yes" xml:space="preserve">
          <source>True always show memory usage. False never shows memory usage. A value of &amp;lsquo;deep&amp;rsquo; is equivalent to &amp;ldquo;True with deep introspection&amp;rdquo;. Memory usage is shown in human-readable units (base-2 representation). Without deep introspection a memory estimation is made based in column dtype and number of rows assuming values consume the same memory amount for corresponding dtypes. With deep memory introspection, a real memory usage calculation is performed at the cost of computational resources.</source>
          <target state="translated">True는 항상 메모리 사용량을 보여줍니다. False는 메모리 사용량을 표시하지 않습니다. 'deep'의 값은&amp;ldquo;deep introspection이있는 True&amp;rdquo;와 같습니다. 메모리 사용량은 사람이 읽을 수있는 단위로 표시됩니다 (base-2 표현). 심도있는 내성없이 열 dtype 및 행 수를 기반으로 메모리 추정이 이루어지며 값이 해당 dtype에 대해 동일한 메모리 양을 소비한다고 가정합니다. 심도있는 메모리 검사를 통해 실제 리소스 사용량 계산은 계산 리소스 비용으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="483dbb67693aadd4532ed746d01708f7e8782da7" translate="yes" xml:space="preserve">
          <source>True if &amp;ldquo;other&amp;rdquo; is an Index and it has the same elements and order as the calling index; False otherwise.</source>
          <target state="translated">&quot;기타&quot;가 인덱스이고 호출 인덱스와 동일한 요소 및 순서를 갖는 경우 참입니다. 그렇지 않으면 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="fe0d29d42f3643e2a79296aac43508bbd4c0ed86" translate="yes" xml:space="preserve">
          <source>True if &amp;ldquo;other&amp;rdquo; is an Index and it has the same elements as calling index; False otherwise.</source>
          <target state="translated">&quot;other&quot;가 색인이고 호출 색인과 동일한 요소를 갖는 경우 true입니다. 그렇지 않으면 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="4ad6a574c171da95c365416ad1738d06cc1d2362" translate="yes" xml:space="preserve">
          <source>True if DataFrame is entirely empty (no items), meaning any of the axes are of length 0.</source>
          <target state="translated">DataFrame이 완전히 비어 있으면 (항목 없음) True이며 모든 축의 길이가 0입니다.</target>
        </trans-unit>
        <trans-unit id="24c200dfaefa892ffcbfa20a17d543d9c316700e" translate="yes" xml:space="preserve">
          <source>True if all elements are the same in both objects, False otherwise.</source>
          <target state="translated">두 개체에서 모든 요소가 동일한 경우 True이고, 그렇지 않으면 False입니다.</target>
        </trans-unit>
        <trans-unit id="d307c1aa48bb5edfe32f78940407e09fcaa56539" translate="yes" xml:space="preserve">
          <source>True if both have same underlying data, False otherwise.</source>
          <target state="translated">둘 다 동일한 기본 데이터가 있으면 True, 그렇지 않으면 False입니다.</target>
        </trans-unit>
        <trans-unit id="1352a71e8580d1d89f592a17f1fa016fca39aa32" translate="yes" xml:space="preserve">
          <source>True if the Index is categorical.</source>
          <target state="translated">인덱스가 범주 형이면 참입니다.</target>
        </trans-unit>
        <trans-unit id="77ed109076a1ac538e68735e2177ab95fb4d05df" translate="yes" xml:space="preserve">
          <source>True if the Interval is closed on the left-side.</source>
          <target state="translated">간격이 왼쪽에서 닫혀 있으면 참입니다.</target>
        </trans-unit>
        <trans-unit id="ab579c75aac8a5698239c533e30a0f46a55a2b06" translate="yes" xml:space="preserve">
          <source>True if the two intervals overlap.</source>
          <target state="translated">두 간격이 겹치면 참입니다.</target>
        </trans-unit>
        <trans-unit id="8ec1f0c5623b1b4037f81c6822a6065a2478aa3a" translate="yes" xml:space="preserve">
          <source>True means treat None, NaN, -INF, INF as NA (old way), False means None and NaN are null, but INF, -INF are not NA (new way).</source>
          <target state="translated">True는 None, NaN, -INF, INF를 NA (이전 방식)로 취급하고 False는 None과 NaN이 null이지만 INF, -INF는 NA (새로운 방식)가 아님을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="be87840f79d6b3726f9efe2d6a2ccab635332c07" translate="yes" xml:space="preserve">
          <source>True means treat None, NaN, INF, -INF as NA (old way), False means None and NaN are null, but INF, -INF are not NA (new way). [default: False] [currently: False]</source>
          <target state="translated">True는 None, NaN, INF, -INF를 NA (이전 방식)로 취급하고 False는 None과 NaN이 null이지만 INF, -INF는 NA (새로운 방식)가 아님을 의미합니다. [기본값 : False] [현재 : False]</target>
        </trans-unit>
        <trans-unit id="cbb27a618f22a115d7e3c9e0d589d3a26b7adf91" translate="yes" xml:space="preserve">
          <source>True, False, and NA values, and thousands separators have defaults, but can be explicitly specified, too. Supply the values you would like as strings or lists of strings!</source>
          <target state="translated">True, False 및 NA 값과 수천 구분 기호에는 기본값이 있지만 명시 적으로 지정할 수도 있습니다. 문자열 또는 문자열 목록으로 원하는 값을 제공하십시오!</target>
        </trans-unit>
        <trans-unit id="680c6f1c86a4eb174e2f911061183231fb73550a" translate="yes" xml:space="preserve">
          <source>True, because &lt;code&gt;1&lt;/code&gt; is considered True.</source>
          <target state="translated">사실은, 때문에 &lt;code&gt;1&lt;/code&gt; 사실로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="69740065ef35451ed08541fd917b42f319c7f0d0" translate="yes" xml:space="preserve">
          <source>True, because nonzero integers are considered True.</source>
          <target state="translated">0이 아닌 정수는 True로 간주되므로 True입니다.</target>
        </trans-unit>
        <trans-unit id="533c216055c11007b3f4ca26af5c6fdf9976d85b" translate="yes" xml:space="preserve">
          <source>True, use the provided separator for csv pasting.</source>
          <target state="translated">True, csv 붙여 넣기에 제공된 구분 기호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="27c28093e366a87a83548198c541efcbf82fdaa2" translate="yes" xml:space="preserve">
          <source>True, use the provided separator, writing in a csv format for allowing easy pasting into excel.</source>
          <target state="translated">사실, 제공된 구분 기호를 사용하여 csv 형식으로 작성하면 Excel에 쉽게 붙여 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bdefb1f94db02eb165909bca251f7d733757604" translate="yes" xml:space="preserve">
          <source>True: negative values in</source>
          <target state="translated">True : 음수 값</target>
        </trans-unit>
        <trans-unit id="6c9ee22a59020278eba1d78e75b502abfa111e3b" translate="yes" xml:space="preserve">
          <source>True: negative values in &lt;code&gt;indices&lt;/code&gt; indicate missing values. These values are set to &lt;code&gt;fill_value&lt;/code&gt;. Any other other negative values raise a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">참 : &lt;code&gt;indices&lt;/code&gt; 음수 값 은 결 측값을 나타냅니다. 이 값은 &lt;code&gt;fill_value&lt;/code&gt; 로 설정됩니다 . 다른 다른 음수 값은 &lt;code&gt;ValueError&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="245006c0dc155d3b3708eae565b4d5de32c99c86" translate="yes" xml:space="preserve">
          <source>True: overwrite original DataFrame&amp;rsquo;s values with values from</source>
          <target state="translated">True : 원래 DataFrame의 값을 다음의 값으로 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="ad3c8a164cdfd9b415c0ee7fb94f84d7ade80419" translate="yes" xml:space="preserve">
          <source>True: overwrite original DataFrame&amp;rsquo;s values with values from &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">사실 :의 값으로 덮어 쓰기 원래 DataFrame의 값을 &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7324147751e0f3b064cfd111b6c3f3a09b389ee" translate="yes" xml:space="preserve">
          <source>Truncate a Series or DataFrame before and after some index value.</source>
          <target state="translated">인덱스 값 전후에 Series 또는 DataFrame을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="deda5ec901fcc858b59825f5c581a548de2a2282" translate="yes" xml:space="preserve">
          <source>Truncate all rows after this index value.</source>
          <target state="translated">이 인덱스 값 뒤의 모든 행을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="cc53dc9a6acd80b44ed48233c2fc8496343d55e2" translate="yes" xml:space="preserve">
          <source>Truncate all rows before this index value.</source>
          <target state="translated">이 인덱스 값 앞에있는 모든 행을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="c5749aca43e7136e123427c0ecddb2e253655b63" translate="yes" xml:space="preserve">
          <source>Truncating &amp;amp; fancy indexing</source>
          <target state="translated">자르기 및 고급 인덱싱</target>
        </trans-unit>
        <trans-unit id="9b24521e8b032633ea56add3e1243aeea92836a9" translate="yes" xml:space="preserve">
          <source>Try to apply reduction procedures. If the DataFrame is empty, &lt;code&gt;apply&lt;/code&gt; will use &lt;code&gt;reduce&lt;/code&gt; to determine whether the result should be a Series or a DataFrame. If &lt;code&gt;reduce=None&lt;/code&gt; (the default), &lt;code&gt;apply&lt;/code&gt;&amp;rsquo;s return value will be guessed by calling &lt;code&gt;func&lt;/code&gt; on an empty Series (note: while guessing, exceptions raised by &lt;code&gt;func&lt;/code&gt; will be ignored). If &lt;code&gt;reduce=True&lt;/code&gt; a Series will always be returned, and if &lt;code&gt;reduce=False&lt;/code&gt; a DataFrame will always be returned.</source>
          <target state="translated">축소 절차를 적용하십시오. DataFrame이 비어있는 경우 &lt;code&gt;apply&lt;/code&gt; 는 &lt;code&gt;reduce&lt;/code&gt; 를 사용 하여 결과가 Series인지 DataFrame인지를 결정합니다. 경우 &lt;code&gt;reduce=None&lt;/code&gt; (기본값), &lt;code&gt;apply&lt;/code&gt; 의 반환 값을 호출하여 추측됩니다 &lt;code&gt;func&lt;/code&gt; 빈 시리즈를 (참고 : 추측하면서,에 의해 발행되는 예외 &lt;code&gt;func&lt;/code&gt; 무시됩니다). &lt;code&gt;reduce=True&lt;/code&gt; 이면 Series가 항상 반환되고 &lt;code&gt;reduce=False&lt;/code&gt; 이면 DataFrame이 항상 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3ccb9e1860e8ea56d3597fa357015fa09f9e36b0" translate="yes" xml:space="preserve">
          <source>Try to avoid using random data. However random data might be OK in some cases, like if the function you are documenting deals with probability distributions, or if the amount of data needed to make the function result meaningful is too much, such that creating it manually is very cumbersome. In those cases, always use a fixed random seed to make the generated examples predictable. Example:</source>
          <target state="translated">무작위 데이터 사용을 피하십시오. 그러나 문서화하는 함수가 확률 분포를 다루거나 함수 결과를 의미있게 만드는 데 필요한 데이터의 양이 너무 많은 경우와 같이 임의의 데이터는 문제가되지 않을 수 있습니다. 이 경우 항상 고정 된 랜덤 시드를 사용하여 생성 된 예제를 예측 가능하게 만드십시오. 예:</target>
        </trans-unit>
        <trans-unit id="fd69d7f5c5a46e08dfe48d5d75b571fe56278826" translate="yes" xml:space="preserve">
          <source>Try to cast the result back to the input type (if possible).</source>
          <target state="translated">가능하면 결과를 입력 유형으로 다시 캐스트하십시오.</target>
        </trans-unit>
        <trans-unit id="3f5f77d3a1e795a7dcf3e0c987f3621564def43a" translate="yes" xml:space="preserve">
          <source>Try to convert the axes to the proper dtypes.</source>
          <target state="translated">축을 적절한 dtype으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="ebfe0f5943f27d1d497778a4366bc02fb3f0fb82" translate="yes" xml:space="preserve">
          <source>Try to find better dtype for elementwise function results. If False, leave as dtype=object.</source>
          <target state="translated">요소 별 함수 결과에 대해 더 나은 dtype을 찾으십시오. False이면 dtype = object로 두십시오.</target>
        </trans-unit>
        <trans-unit id="4c0d3fb72340b49ae44b756aa4ea05b55923e5b6" translate="yes" xml:space="preserve">
          <source>Try to infer the format using &lt;code&gt;infer_datetime_format=True&lt;/code&gt; (see section below).</source>
          <target state="translated">&lt;code&gt;infer_datetime_format=True&lt;/code&gt; 를 사용하여 형식을 추론 하십시오 (아래 섹션 참조).</target>
        </trans-unit>
        <trans-unit id="b0d1669a1b78fa42745d4a04920b324151e04033" translate="yes" xml:space="preserve">
          <source>Tryies to return a string representing a frequency guess, generated by infer_freq.</source>
          <target state="translated">infer_freq에 의해 생성 된 주파수 추측을 나타내는 문자열을 리턴하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="792de1ca58d9c5095b65b345bd726ae4b415bd14" translate="yes" xml:space="preserve">
          <source>Tryies to return a string representing a frequency guess, generated by infer_freq. Returns None if it can&amp;rsquo;t autodetect the frequency.</source>
          <target state="translated">infer_freq에 의해 생성 된 주파수 추측을 나타내는 문자열을 리턴하려고 시도합니다. 주파수를 자동 감지 할 수 없으면 None을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="51b741d0ce3607c856c6d61bfa9751cb445ad116" translate="yes" xml:space="preserve">
          <source>Trying the bug-producing code out on the &lt;em&gt;master&lt;/em&gt; branch is often a worthwhile exercise to confirm the bug still exists. It is also worth searching existing bug reports and pull requests to see if the issue has already been reported and/or fixed.</source>
          <target state="translated">&lt;em&gt;마스터&lt;/em&gt; 브랜치 에서 버그 생성 코드를 시험해 보는 것은 종종 버그가 여전히 존재하는지 확인하기위한 가치있는 연습입니다. 또한 기존 버그 보고서를 검색하고 문제가 이미보고 및 / 또는 수정되었는지 확인하기 위해 요청을 가져 오는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6470f2fc3b6d1bba498fee414ee39552da0c23b5" translate="yes" xml:space="preserve">
          <source>Trying to compare &lt;code&gt;Index&lt;/code&gt; or &lt;code&gt;Series&lt;/code&gt; objects of different lengths will raise a ValueError:</source>
          <target state="translated">길이가 다른 &lt;code&gt;Index&lt;/code&gt; 또는 &lt;code&gt;Series&lt;/code&gt; 객체 를 비교하려고 하면 ValueError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b54001363085cea02734e40e1cc3f414a8508ce2" translate="yes" xml:space="preserve">
          <source>Trying to select an &lt;code&gt;Interval&lt;/code&gt; that is not exactly contained in the &lt;code&gt;IntervalIndex&lt;/code&gt; will raise a &lt;code&gt;KeyError&lt;/code&gt;.</source>
          <target state="translated">선택하려고 &lt;code&gt;Interval&lt;/code&gt; 정확히에 포함되지 않은 &lt;code&gt;IntervalIndex&lt;/code&gt; 인상됩니다 &lt;code&gt;KeyError&lt;/code&gt; 를을 .</target>
        </trans-unit>
        <trans-unit id="b067c9921ea4756357693503f3a97e6641156ed9" translate="yes" xml:space="preserve">
          <source>Tuple (full_caption, short_caption), which results in &lt;code&gt;\caption[short_caption]{full_caption}&lt;/code&gt;; if a single string is passed, no short caption will be set.</source>
          <target state="translated">튜플 (full_caption, short_caption), 결과는 &lt;code&gt;\caption[short_caption]{full_caption}&lt;/code&gt; ; 단일 문자열이 전달되면 짧은 캡션이 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="95851c3889d863ca2eea659bba9a4593703c5327" translate="yes" xml:space="preserve">
          <source>Tuple of (rows, columns) for the layout of the histograms.</source>
          <target state="translated">히스토그램의 레이아웃을위한 튜플 (행, 열).</target>
        </trans-unit>
        <trans-unit id="288ea08ff10a961743d4d8b925f5d1931f661310" translate="yes" xml:space="preserve">
          <source>Tuple of array dimensions.</source>
          <target state="translated">배열 차원의 튜플.</target>
        </trans-unit>
        <trans-unit id="c7fb4baac487ff2f7344cd07109a207e3af6ba2f" translate="yes" xml:space="preserve">
          <source>Turn a matrix with hours in columns and days in rows into a continuous row sequence in the form of a time series. &lt;a href=&quot;https://stackoverflow.com/questions/15432659/how-to-rearrange-a-python-pandas-dataframe&quot;&gt;How to rearrange a Python pandas DataFrame?&lt;/a&gt;</source>
          <target state="translated">열의 시간과 행의 일이있는 행렬을 시계열 형태의 연속적인 행 시퀀스로 바꿉니다. &lt;a href=&quot;https://stackoverflow.com/questions/15432659/how-to-rearrange-a-python-pandas-dataframe&quot;&gt;Python pandas DataFrame을 재정렬하는 방법은 무엇입니까?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bfa2fe085bf3b7386d557a42dc448372bd6cc5d" translate="yes" xml:space="preserve">
          <source>Tutorial series written in 2016 by &lt;a href=&quot;https://github.com/TomAugspurger&quot;&gt;Tom Augspurger&lt;/a&gt;. The source may be found in the GitHub repository &lt;a href=&quot;https://github.com/TomAugspurger/effective-pandas&quot;&gt;TomAugspurger/effective-pandas&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TomAugspurger&quot;&gt;Tom Augspurger&lt;/a&gt; 가 2016 년에 쓴 튜토리얼 시리즈 . 소스는 GitHub 리포지토리 &lt;a href=&quot;https://github.com/TomAugspurger/effective-pandas&quot;&gt;TomAugspurger / effective-pandas&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">Tutorials</target>
        </trans-unit>
        <trans-unit id="926da0435188b344811b1d6ac5bac5f66bb55cb4" translate="yes" xml:space="preserve">
          <source>Two DateOffset&amp;rsquo;s per month repeating on the first day of the month and day_of_month.</source>
          <target state="translated">매월 1 일과 day_of_month에 반복되는 매월 2 개의 DateOffset이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e27569ec2fca74e119d2de19350b3feadd65788" translate="yes" xml:space="preserve">
          <source>Two DateOffset&amp;rsquo;s per month repeating on the last day of the month and day_of_month.</source>
          <target state="translated">매월 마지막 날과 day_of_month에서 반복되는 한 달에 두 개의 DateOffset이 있습니다.</target>
        </trans-unit>
        <trans-unit id="31245775f94fb8d1b989f11c266ef183726a2b72" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;CategoricalDtype&lt;/code&gt; compare equal whenever they have the same categories and order. When comparing two unordered categoricals, the order of the &lt;code&gt;categories&lt;/code&gt; is not considered.</source>
          <target state="translated">&lt;code&gt;CategoricalDtype&lt;/code&gt; 의 두 인스턴스 는 동일한 범주와 순서를 가질 때마다 동일하게 비교됩니다. 이 정렬되지 않은 categoricals를 비교할 때,의 순서 &lt;code&gt;categories&lt;/code&gt; 로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc1c8ebdd43a23d446ae0dcd51eae34fce8519cd" translate="yes" xml:space="preserve">
          <source>Two intervals overlap if they share a common point, including closed endpoints. Intervals that only have an open endpoint in common do not overlap.</source>
          <target state="translated">닫힌 끝점을 포함하여 공통 지점을 공유하는 경우 두 간격이 겹칩니다. 공통 엔드 포인트 만있는 간격은 겹치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d3cb912fd23a983cef568d3e3daebfbd0d5f976" translate="yes" xml:space="preserve">
          <source>Two scripts are provided to assist with this. These scripts distribute testing across 4 threads.</source>
          <target state="translated">이를 지원하기 위해 두 개의 스크립트가 제공됩니다. 이 스크립트는 4 개의 스레드에 테스트를 분산시킵니다.</target>
        </trans-unit>
        <trans-unit id="8fcf815e48e35213a32002dba5c3aa458d90ed1c" translate="yes" xml:space="preserve">
          <source>Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes (rows and columns).</source>
          <target state="translated">레이블이 지정된 축 (행 및 열)을 가진 2 차원 크기 변경 가능, 이종 가능성이있는 테이블 형식 데이터 구조.</target>
        </trans-unit>
        <trans-unit id="c35c5e18cef57a4b72031e2083f6c8db822c9f56" translate="yes" xml:space="preserve">
          <source>Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes (rows and columns). Arithmetic operations align on both row and column labels. Can be thought of as a dict-like container for Series objects. The primary pandas data structure.</source>
          <target state="translated">레이블이 지정된 축 (행 및 열)을 가진 2 차원 크기 변경 가능, 이종 가능성이있는 테이블 형식 데이터 구조. 산술 연산은 행 및 열 레이블 모두에 정렬됩니다. Series 객체의 dict-like 컨테이너로 생각할 수 있습니다. 기본 팬더 데이터 구조.</target>
        </trans-unit>
        <trans-unit id="fd8f0b717b19bcf642a32a46dd1dfdbfe6ffd373" translate="yes" xml:space="preserve">
          <source>Two-dimensional, size-mutable, potentially heterogeneous tabular data.</source>
          <target state="translated">2 차원, 크기 변경 가능, 잠재적으로 이기종 표 형식 데이터.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="6b55ec26af9b6fa5599655724c5685eb0a05ab92" translate="yes" xml:space="preserve">
          <source>Type for categorical data with the categories and orderedness.</source>
          <target state="translated">범주와 순서가있는 범주 형 데이터의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d9bbb3fc33b4fd823fe26ece8e660f790bdfb418" translate="yes" xml:space="preserve">
          <source>Type for categorical data.</source>
          <target state="translated">범주 형 데이터의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2b8920d7008f21df33001158c6ee0d224ec65e1d" translate="yes" xml:space="preserve">
          <source>Type matches caller unless &lt;code&gt;expand=True&lt;/code&gt; (see Notes).</source>
          <target state="translated">&lt;code&gt;expand=True&lt;/code&gt; 가 아닌 한 유형은 발신자와 일치합니다 (참고 사항 참조).</target>
        </trans-unit>
        <trans-unit id="8ce3ca15adb0d4bd8f29a59e20f18d23f3b59962" translate="yes" xml:space="preserve">
          <source>Type of date conversion. &amp;lsquo;epoch&amp;rsquo; = epoch milliseconds, &amp;lsquo;iso&amp;rsquo; = ISO8601. The default depends on the</source>
          <target state="translated">날짜 변환 유형입니다. 'epoch'= epoch 밀리 초, 'iso'= ISO8601. 기본값은</target>
        </trans-unit>
        <trans-unit id="d189f51d0e03a5f25d787122cbce0aedcde3122a" translate="yes" xml:space="preserve">
          <source>Type of date conversion. &amp;lsquo;epoch&amp;rsquo; = epoch milliseconds, &amp;lsquo;iso&amp;rsquo; = ISO8601. The default depends on the &lt;code&gt;orient&lt;/code&gt;. For &lt;code&gt;orient='table'&lt;/code&gt;, the default is &amp;lsquo;iso&amp;rsquo;. For all other orients, the default is &amp;lsquo;epoch&amp;rsquo;.</source>
          <target state="translated">날짜 변환 유형 'epoch'= 에포크 밀리 초, 'iso'= ISO8601. 기본값은 &lt;code&gt;orient&lt;/code&gt; 에 따라 다릅니다 . 들어 &lt;code&gt;orient='table'&lt;/code&gt; , 기본값은 'ISO'입니다. 다른 모든 방향의 경우 기본값은 'epoch'입니다.</target>
        </trans-unit>
        <trans-unit id="ede740ca8094494603bbb904ba0745a3e152c60c" translate="yes" xml:space="preserve">
          <source>Type of merge to be performed.</source>
          <target state="translated">수행 할 병합 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="2a9f0bfdbfa408980305c8c5e63d0d239e2245c1" translate="yes" xml:space="preserve">
          <source>TypeError if ndarray-like but cannot infer the dtype</source>
          <target state="translated">ndarray와 비슷하지만 dtype을 유추 할 수없는 경우 TypeError</target>
        </trans-unit>
        <trans-unit id="91e12dcf5ba78c469a672fa6634a53249b004cfa" translate="yes" xml:space="preserve">
          <source>TypeError if not a dtype</source>
          <target state="translated">dtype이 아닌 경우 TypeError</target>
        </trans-unit>
        <trans-unit id="40fb2a246a44fdd76a25bc4dee91c9b12c42ad29" translate="yes" xml:space="preserve">
          <source>Typeclass</source>
          <target state="translated">Typeclass</target>
        </trans-unit>
        <trans-unit id="d160c5845a8a77a5befb4851a7053d8bdf35eb94" translate="yes" xml:space="preserve">
          <source>Typecode or data-type to which the array is cast.</source>
          <target state="translated">배열이 캐스트되는 유형 코드 또는 데이터 유형.</target>
        </trans-unit>
        <trans-unit id="3ce90342df96a2edff8d8cb6c24fe48be85882f7" translate="yes" xml:space="preserve">
          <source>Types can potentially be &lt;em&gt;upcasted&lt;/em&gt; when combined with other types, meaning they are promoted from the current type (e.g. &lt;code&gt;int&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;).</source>
          <target state="translated">유형은 다른 유형과 결합 될 때 잠재적으로 &lt;em&gt;업 캐스트&lt;/em&gt; 될 수 있습니다. 즉, 현재 유형에서 승격됩니다 (예 : &lt;code&gt;int&lt;/code&gt; 에서 &lt;code&gt;float&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="29d7b5a8805c2d1b859186a62d0d74fd16e78d1f" translate="yes" xml:space="preserve">
          <source>U, us</source>
          <target state="translated">U, 우리</target>
        </trans-unit>
        <trans-unit id="17eb2c82fcacff48603d16dd7fbfdf451f6008d6" translate="yes" xml:space="preserve">
          <source>UInt16Dtype[source]</source>
          <target state="translated">UInt16Dtype[source]</target>
        </trans-unit>
        <trans-unit id="b85cd57dd4b49164b9b7d4eef55a03d921345e20" translate="yes" xml:space="preserve">
          <source>UInt32Dtype[source]</source>
          <target state="translated">UInt32Dtype[source]</target>
        </trans-unit>
        <trans-unit id="09f1e3ede86b2f12609fad96a9d9dde34a0f5ec6" translate="yes" xml:space="preserve">
          <source>UInt64Dtype[source]</source>
          <target state="translated">UInt64Dtype[source]</target>
        </trans-unit>
        <trans-unit id="7166944023c6a2386fe2e6d727864b6fa8989028" translate="yes" xml:space="preserve">
          <source>UInt64Index[source]</source>
          <target state="translated">UInt64Index[source]</target>
        </trans-unit>
        <trans-unit id="32ebc521102753d5e62127e0650321dc3aa23b5c" translate="yes" xml:space="preserve">
          <source>UInt8Dtype[source]</source>
          <target state="translated">UInt8Dtype[source]</target>
        </trans-unit>
        <trans-unit id="363cb5cb9b015bf8fe75ee8f6f3ad675ca5618cc" translate="yes" xml:space="preserve">
          <source>UNION</source>
          <target state="translated">UNION</target>
        </trans-unit>
        <trans-unit id="52c6c1812015585dc1092393a1f244f60d68c60a" translate="yes" xml:space="preserve">
          <source>UPDATE</source>
          <target state="translated">UPDATE</target>
        </trans-unit>
        <trans-unit id="663b90c899fa25a111067be0c22ffc64dcf581c2" translate="yes" xml:space="preserve">
          <source>UTF-8</source>
          <target state="translated">UTF-8</target>
        </trans-unit>
        <trans-unit id="a1c366cacdc2e4f2ca5e9f514afccf66ad1dfa3e" translate="yes" xml:space="preserve">
          <source>Ubuntu</source>
          <target state="translated">Ubuntu</target>
        </trans-unit>
        <trans-unit id="ba70e8ae2f4419b09e9f163d1457c5562fb1dc5d" translate="yes" xml:space="preserve">
          <source>Ultimately, how you deal with reading in columns containing mixed dtypes depends on your specific needs. In the case above, if you wanted to &lt;code&gt;NaN&lt;/code&gt; out the data anomalies, then &lt;a href=&quot;../reference/api/pandas.to_numeric#pandas.to_numeric&quot;&gt;&lt;code&gt;to_numeric()&lt;/code&gt;&lt;/a&gt; is probably your best option. However, if you wanted for all the data to be coerced, no matter the type, then using the &lt;code&gt;converters&lt;/code&gt; argument of &lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt;&lt;code&gt;read_csv()&lt;/code&gt;&lt;/a&gt; would certainly be worth trying.</source>
          <target state="translated">궁극적으로 혼합 된 dtype이 포함 된 열을 읽는 방법은 특정 요구 사항에 따라 다릅니다. 당신이 원한다면 위의 경우, &lt;code&gt;NaN&lt;/code&gt; 의 데이터 이상에서, 다음 &lt;a href=&quot;../reference/api/pandas.to_numeric#pandas.to_numeric&quot;&gt; &lt;code&gt;to_numeric()&lt;/code&gt; &lt;/a&gt; 아마 당신의 최선의 선택입니다. 그러나 유형에 관계없이 모든 데이터를 강제 &lt;code&gt;converters&lt;/code&gt; 하려면 &lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt; &lt;code&gt;read_csv()&lt;/code&gt; &lt;/a&gt; 의 converters 인수 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="3a09d891d627ee00f4529c902987ffb259b2b026" translate="yes" xml:space="preserve">
          <source>Unbiased expanding skewness.</source>
          <target state="translated">편향되지 않은 확장 왜곡.</target>
        </trans-unit>
        <trans-unit id="1ea5fa98463037b2dfc538cda708a2a263aa8a21" translate="yes" xml:space="preserve">
          <source>Unbiased rolling skewness.</source>
          <target state="translated">편견없는 롤링 왜곡.</target>
        </trans-unit>
        <trans-unit id="f1ea46d83b127553ace67b5e2f44a59ab454eb5a" translate="yes" xml:space="preserve">
          <source>Unbiased variance</source>
          <target state="translated">편향되지 않은 분산</target>
        </trans-unit>
        <trans-unit id="cdcfc305e5faf9598eda2759513999eca636dd11" translate="yes" xml:space="preserve">
          <source>Under Review.</source>
          <target state="translated">검토 중.</target>
        </trans-unit>
        <trans-unit id="8d3977c0b0c5e9dd94a900ec2d81079c23c381a2" translate="yes" xml:space="preserve">
          <source>Under the hood pandas uses a fast and efficient parser implemented in C as well as a Python implementation which is currently more feature-complete. Where possible pandas uses the C parser (specified as &lt;code&gt;engine='c'&lt;/code&gt;), but may fall back to Python if C-unsupported options are specified. Currently, C-unsupported options include:</source>
          <target state="translated">Under the hood pandas는 C로 구현 된 빠르고 효율적인 파서와 현재 더 많은 기능이 완성 된 Python 구현을 사용합니다. 가능한 경우 pandas는 C 파서 ( &lt;code&gt;engine='c'&lt;/code&gt; 로 지정됨 )를 사용하지만 C 지원되지 않는 옵션이 지정된 경우 Python으로 대체 될 수 있습니다. 현재 C 지원되지 않는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f439306fd33bcfa1a8aef3b2fd1658ef6fae163c" translate="yes" xml:space="preserve">
          <source>Under the hood, all timestamps are stored in UTC. Values from a time zone aware &lt;a href=&quot;../reference/api/pandas.datetimeindex#pandas.DatetimeIndex&quot;&gt;&lt;code&gt;DatetimeIndex&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt; will have their fields (day, hour, minute, etc.) localized to the time zone. However, timestamps with the same UTC value are still considered to be equal even if they are in different time zones:</source>
          <target state="translated">내부적으로 모든 타임 스탬프는 UTC로 저장됩니다. 시간대를 인식하는 &lt;a href=&quot;../reference/api/pandas.datetimeindex#pandas.DatetimeIndex&quot;&gt; &lt;code&gt;DatetimeIndex&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt; &lt;code&gt;Timestamp&lt;/code&gt; 의&lt;/a&gt; 값은 해당 필드 (일,시, 분 등)를 시간대로 현지화합니다. 그러나 UTC 값이 동일한 타임 스탬프는 시간대가 다른 경우에도 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="334952709d748d5bca635d7d7211392c841bdb9f" translate="yes" xml:space="preserve">
          <source>Unicode form</source>
          <target state="translated">유니 코드 형식</target>
        </trans-unit>
        <trans-unit id="0d6e83357be05f75d3a96e16d60c274e41bf0f96" translate="yes" xml:space="preserve">
          <source>Unicode form.</source>
          <target state="translated">유니 코드 형식.</target>
        </trans-unit>
        <trans-unit id="b7f6236475e09088b80b8284094031a9df6659c9" translate="yes" xml:space="preserve">
          <source>Unicode formatting</source>
          <target state="translated">유니 코드 형식</target>
        </trans-unit>
        <trans-unit id="9e79a7de30252b5acf0234ae02e96fa26962ae73" translate="yes" xml:space="preserve">
          <source>Union matching dtypes</source>
          <target state="translated">유니온 매칭 dtypes</target>
        </trans-unit>
        <trans-unit id="126ec7cbebffc6ae8ed2b29703d2e8fede74fee3" translate="yes" xml:space="preserve">
          <source>Union mismatched dtypes</source>
          <target state="translated">조합 불일치 dtypes</target>
        </trans-unit>
        <trans-unit id="3276d100aee8ec803eb5c4ad93c481bd1250ff68" translate="yes" xml:space="preserve">
          <source>Unioning</source>
          <target state="translated">Unioning</target>
        </trans-unit>
        <trans-unit id="4a640041f2862bd555e6e6f9eecee050f1061a2c" translate="yes" xml:space="preserve">
          <source>Unioning of overlapping &lt;code&gt;DatetimeIndex&lt;/code&gt; objects with the same frequency is very fast (important for fast data alignment).</source>
          <target state="translated">동일한 빈도 로 겹치는 &lt;code&gt;DatetimeIndex&lt;/code&gt; 객체의 결합은 매우 빠릅니다 (빠른 데이터 정렬에 중요).</target>
        </trans-unit>
        <trans-unit id="36351ac0afceeda0c1d08bb29b8b1617b3a80bf0" translate="yes" xml:space="preserve">
          <source>Unique numbers for each group.</source>
          <target state="translated">각 그룹의 고유 번호</target>
        </trans-unit>
        <trans-unit id="5a4d88bde0fd2b0433a701fb86fa98ced3103ed2" translate="yes" xml:space="preserve">
          <source>Unique values are returned in order of appearance, this does NOT sort.</source>
          <target state="translated">고유 값은 표시 순서대로 반환되며 정렬되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e49d8283a3dc695ddb68ac1a3f0ba81eb4638a97" translate="yes" xml:space="preserve">
          <source>Uniques are returned in order of appearance. Hash table-based unique, therefore does NOT sort.</source>
          <target state="translated">모양 순서대로 고유 항목이 반환됩니다. 고유 한 해시 테이블 기반이므로 정렬되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="996e177835339c07a9f8eb705aad44aead7faa1c" translate="yes" xml:space="preserve">
          <source>Unit used for conversion if ts_input is of type int or float. The valid values are &amp;lsquo;D&amp;rsquo;, &amp;lsquo;h&amp;rsquo;, &amp;lsquo;m&amp;rsquo;, &amp;lsquo;s&amp;rsquo;, &amp;lsquo;ms&amp;rsquo;, &amp;lsquo;us&amp;rsquo;, and &amp;lsquo;ns&amp;rsquo;. For example, &amp;lsquo;s&amp;rsquo; means seconds and &amp;lsquo;ms&amp;rsquo; means milliseconds.</source>
          <target state="translated">ts_input이 int 또는 float 유형 인 경우 변환에 사용되는 단위입니다. 유효한 값은 'D', 'h', 'm', 's', 'ms', 'us'및 'ns'입니다. 예를 들어 's'는 초를 의미하고 'ms'는 밀리 초를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ec1d71923e0368b4dbf4f493ea323e49c45b38c0" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;extract&lt;/code&gt; (which returns only the first match),</source>
          <target state="translated">&lt;code&gt;extract&lt;/code&gt; (첫 번째 일치 만 반환) 과 달리</target>
        </trans-unit>
        <trans-unit id="6bebbd651e76b33f8127079d73d341bc12f2d376" translate="yes" xml:space="preserve">
          <source>Unlike agg, apply&amp;rsquo;s callable is passed a sub-DataFrame which gives you access to all the columns</source>
          <target state="translated">agg와 달리 apply의 콜 러블에는 모든 열에 대한 액세스를 제공하는 하위 DataFrame이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d98684c1a368edd60fe93b8eb7ccfacc1f351bdd" translate="yes" xml:space="preserve">
          <source>Unlike arrays instantiated with &lt;code&gt;dtype=&quot;object&quot;&lt;/code&gt;, &lt;code&gt;StringArray&lt;/code&gt; will convert the values to strings.</source>
          <target state="translated">인스턴스화 배열과는 달리 &lt;code&gt;dtype=&quot;object&quot;&lt;/code&gt; , &lt;code&gt;StringArray&lt;/code&gt; 값을 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="8ba4fceed052b5a70598328d7dd2acad7c516cee" translate="yes" xml:space="preserve">
          <source>Unlike in</source>
          <target state="translated">에서와는 달리</target>
        </trans-unit>
        <trans-unit id="8d61a3edb34524a5a05bf3757e9fbf301b748952" translate="yes" xml:space="preserve">
          <source>Unlike in &lt;code&gt;in_any_int_dtype&lt;/code&gt;, timedelta64 instances will return False.</source>
          <target state="translated">&lt;code&gt;in_any_int_dtype&lt;/code&gt; 과 달리 timedelta64 인스턴스는 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9107c1b85ad521c9c3ab9b57eff832dbbd96daf1" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;append()&lt;/code&gt; method, which appends to the original list and returns &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.append#pandas.DataFrame.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; here &lt;strong&gt;does not&lt;/strong&gt; modify &lt;code&gt;df1&lt;/code&gt; and returns its copy with &lt;code&gt;df2&lt;/code&gt; appended.</source>
          <target state="translated">달리 &lt;code&gt;append()&lt;/code&gt; 원래 목록 및 반환에 추가하는 방법, &lt;code&gt;None&lt;/code&gt; , &lt;a href=&quot;../reference/api/pandas.dataframe.append#pandas.DataFrame.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt; 여기 &lt;strong&gt;없는&lt;/strong&gt; 수정 &lt;code&gt;df1&lt;/code&gt; 과 함께 복사본을 반환 &lt;code&gt;df2&lt;/code&gt; 추가.</target>
        </trans-unit>
        <trans-unit id="2183e417c81ed25ebc944982054760ce5bc5159a" translate="yes" xml:space="preserve">
          <source>Unordered Categorical or None if &lt;code&gt;inplace=True&lt;/code&gt;.</source>
          <target state="translated">정렬되지 않은 범주 형 또는 &lt;code&gt;inplace=True&lt;/code&gt; 인 경우 없음 .</target>
        </trans-unit>
        <trans-unit id="0e4a8eaaa58094730caea3e21438273c1b4363d4" translate="yes" xml:space="preserve">
          <source>Unordered Categorical.</source>
          <target state="translated">정렬되지 않은 범주 형.</target>
        </trans-unit>
        <trans-unit id="660a819cccdea59c0000b3f4a246718b52d09d3d" translate="yes" xml:space="preserve">
          <source>Unpivot a DataFrame from wide format to long format</source>
          <target state="translated">넓은 형식에서 긴 형식으로 DataFrame 피벗 해제</target>
        </trans-unit>
        <trans-unit id="49f050e6b15ee8d77f6fbb27e1620d25533495db" translate="yes" xml:space="preserve">
          <source>Unpivot a DataFrame from wide format to long format, optionally leaving identifier variables set.</source>
          <target state="translated">선택적으로 식별자 변수를 설정 한 상태로 DataFrame을 와이드 형식에서 긴 형식으로 피벗 해제합니다.</target>
        </trans-unit>
        <trans-unit id="6bd33a58cd2696b206cd5ab338320d544bede799" translate="yes" xml:space="preserve">
          <source>Unpivot a DataFrame from wide format to long format.</source>
          <target state="translated">와이드 형식에서 긴 형식으로 DataFrame을 피벗 해제합니다.</target>
        </trans-unit>
        <trans-unit id="2d868f90e6ba89e0ea9c1a9ba9a11a143b37b3a9" translate="yes" xml:space="preserve">
          <source>Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.</source>
          <target state="translated">넓은 형식에서 긴 형식으로 DataFrame의 피벗을 해제하고 선택적으로 식별자를 설정된 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="5d9fdd48484aa174ae102960e3229be55ba84910" translate="yes" xml:space="preserve">
          <source>Unpivoted DataFrame.</source>
          <target state="translated">피벗되지 않은 DataFrame.</target>
        </trans-unit>
        <trans-unit id="cbcb221a1c5bbc10d0aae9db2d9b4988f5fd813c" translate="yes" xml:space="preserve">
          <source>Unserialized JSON objects.</source>
          <target state="translated">직렬화되지 않은 JSON 객체.</target>
        </trans-unit>
        <trans-unit id="516e20090c90fe803ead8ca6abb8149ecc31c04f" translate="yes" xml:space="preserve">
          <source>Unstack prescribed level(s) from index axis onto column axis.</source>
          <target state="translated">규정 된 수준을 인덱스 축에서 열 축으로 쌓아 놓습니다.</target>
        </trans-unit>
        <trans-unit id="301ab97b49dbbc394361c9b6ef9e5d90b8b6aab5" translate="yes" xml:space="preserve">
          <source>Unstack, a.k.a.</source>
          <target state="translated">언 스택, 일명</target>
        </trans-unit>
        <trans-unit id="186533331776394f8b181daa13230b5b66df25bf" translate="yes" xml:space="preserve">
          <source>Unstack, a.k.a. pivot, Series with MultiIndex to produce DataFrame.</source>
          <target state="translated">DataFrame을 생성하기 위해 멀티 인덱스가있는 시리즈를 언 스택 (unstack)합니다.</target>
        </trans-unit>
        <trans-unit id="2d1008190ace9c886e26bf275bb4a5e80e3bbeae" translate="yes" xml:space="preserve">
          <source>Unstack, a.k.a. pivot, Series with MultiIndex to produce DataFrame. The level involved will automatically get sorted.</source>
          <target state="translated">DataFrame을 생성하기 위해 다중 인덱스가있는 시리즈를 언 스택, 일명 피벗, 언 스택합니다. 관련된 레벨이 자동으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="43d4895a8ccddad77f817271c7f5a700336d41d0" translate="yes" xml:space="preserve">
          <source>Unstack, also known as pivot, Series with MultiIndex to produce DataFrame.</source>
          <target state="translated">DataFrame을 생성하기 위해 MultiIndex를 사용하는 Series (Pivot이라고도 함)를 언 스택합니다.</target>
        </trans-unit>
        <trans-unit id="acabd91eb78cd0b4b6a8148aebdeae84b991bc15" translate="yes" xml:space="preserve">
          <source>Unstacked Series.</source>
          <target state="translated">스택되지 않은 시리즈.</target>
        </trans-unit>
        <trans-unit id="2edaec19fd8257560546bd8afafad3e50b64fb9b" translate="yes" xml:space="preserve">
          <source>Unstacking can result in missing values if subgroups do not have the same set of labels. By default, missing values will be replaced with the default fill value for that data type, &lt;code&gt;NaN&lt;/code&gt; for float, &lt;code&gt;NaT&lt;/code&gt; for datetimelike, etc. For integer types, by default data will converted to float and missing values will be set to &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">부분 군에 동일한 레이블 세트가없는 경우 스택 해제로 인해 누락 된 값이 발생할 수 있습니다. 기본적으로 누락 된 값은 해당 데이터 유형의 기본 채우기 값, float의 경우 &lt;code&gt;NaN&lt;/code&gt; , datetimelike의 경우 &lt;code&gt;NaT&lt;/code&gt; 등 으로 대체됩니다 . 정수 유형의 경우 기본적으로 데이터는 float로 변환되고 누락 된 값은 &lt;code&gt;NaN&lt;/code&gt; 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="4395b6f6df44f8a32136e168a3cfadad8a9db575" translate="yes" xml:space="preserve">
          <source>Unstacking when the columns are a &lt;code&gt;MultiIndex&lt;/code&gt; is also careful about doing the right thing:</source>
          <target state="translated">열이 MultiIndex 일 때 &lt;code&gt;MultiIndex&lt;/code&gt; 는 올바른 작업을 수행하는 데에도주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="201c058365907281ad9f16c3ea36babc9a4170ee" translate="yes" xml:space="preserve">
          <source>Unused level(s) means levels that are not expressed in the labels. The resulting MultiIndex will have the same outward appearance, meaning the same .values and ordering. It will also be .equals() to the original.</source>
          <target state="translated">미사용 레벨은 라벨에 표시되지 않은 레벨을 의미합니다. 결과 MultiIndex는 동일한 .values ​​및 순서를 의미하는 동일한 외형을 갖습니다. 또한 원본에 대해 .equals ()가됩니다.</target>
        </trans-unit>
        <trans-unit id="bed83ff42be0a53b7b4fc6f46a97677fdc84d914" translate="yes" xml:space="preserve">
          <source>Unused, accepted for homogeneity with other index types.</source>
          <target state="translated">사용하지 않고 다른 인덱스 유형과 동질성을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="f13be7738e1389f72c0f88aa84d17719f746bf4a" translate="yes" xml:space="preserve">
          <source>Unused.</source>
          <target state="translated">Unused.</target>
        </trans-unit>
        <trans-unit id="757e0a1ad677623ff7f66f76d4c4dd22832c028d" translate="yes" xml:space="preserve">
          <source>Unused. Accepted for compatibility with DataFrame method only.</source>
          <target state="translated">미사용. DataFrame 메서드와의 호환성을 위해서만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="40c823c89a78c405a610f6663bdd1022494619d7" translate="yes" xml:space="preserve">
          <source>Upcasting is always according to the &lt;strong&gt;NumPy&lt;/strong&gt; rules. If two different dtypes are involved in an operation, then the more &lt;em&gt;general&lt;/em&gt; one will be used as the result of the operation.</source>
          <target state="translated">업 캐스팅은 항상 &lt;strong&gt;NumPy&lt;/strong&gt; 규칙 을 따릅니다 . 두 개의 다른 dtype이 작업에 포함 된 경우 작업 의 결과로 더 &lt;em&gt;일반적인&lt;/em&gt; dtype이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6e89e7fdc28b18c222d714ca95a5e10b4e09d947" translate="yes" xml:space="preserve">
          <source>Update all of pandas existing tests and code to use the new argument</source>
          <target state="translated">팬더의 기존 테스트 및 코드를 모두 업데이트하여 새 인수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="80690eed0f8d4a48c184f3579d506f038f329215" translate="yes" xml:space="preserve">
          <source>Update null elements with value in the same location in</source>
          <target state="translated">같은 위치에있는 값으로 null 요소를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="73858c862ae0e30df8fc502655e79901602d3854" translate="yes" xml:space="preserve">
          <source>Update null elements with value in the same location in &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; 의 같은 위치에있는 값으로 null 요소를 업데이트하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f8638726c2f3d26fbe3ccd4a27ac0e1a6bce40d" translate="yes" xml:space="preserve">
          <source>Update the data in place if possible.</source>
          <target state="translated">가능하면 데이터를 제자리에 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="f3d6d6e1edfa2384a6bb2e6de380dc2ed8ccf652" translate="yes" xml:space="preserve">
          <source>Updates the HTML representation with a style which is selected in accordance with the return value of a function.</source>
          <target state="translated">함수의 반환 값에 따라 선택된 스타일로 HTML 표현을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="27f53e2e70ec8086d3ee452f590c071019c8bac1" translate="yes" xml:space="preserve">
          <source>Updates the HTML representation with the result.</source>
          <target state="translated">결과로 HTML 표현을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="a2f8c9b450ade110f509acde91196a7cbadf6e6f" translate="yes" xml:space="preserve">
          <source>Updates to the data shared by shallow copy and original is reflected in both; deep copy remains unchanged.</source>
          <target state="translated">얕은 사본과 원본이 공유하는 데이터에 대한 업데이트는 둘 다에 반영됩니다. 깊은 사본은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a7eee25e856d046d67c072320c3f8f697961793" translate="yes" xml:space="preserve">
          <source>Updating a pandas docstring</source>
          <target state="translated">팬더 문서화 문자열 업데이트</target>
        </trans-unit>
        <trans-unit id="bfecf25d9f73f9608d0ed07c22f73b557d3c678d" translate="yes" xml:space="preserve">
          <source>Updating your pull request</source>
          <target state="translated">풀 요청 업데이트</target>
        </trans-unit>
        <trans-unit id="e7f5d2fb64058ffd3450d104d98b041fb57ea748" translate="yes" xml:space="preserve">
          <source>Upper left cell column to dump data frame.</source>
          <target state="translated">데이터 프레임을 덤프 할 왼쪽 상단 셀 열입니다.</target>
        </trans-unit>
        <trans-unit id="3d24eba99e2dba1fe94f0d332c07892ce18457fa" translate="yes" xml:space="preserve">
          <source>Upper left cell row to dump data frame.</source>
          <target state="translated">데이터 프레임을 덤프 할 왼쪽 상단 셀 행.</target>
        </trans-unit>
        <trans-unit id="3dca6ef3b3fce519c24f5be609533ac5a5b62497" translate="yes" xml:space="preserve">
          <source>Upsample again, providing a &lt;code&gt;fill value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fill value&lt;/code&gt; 제공하여 다시 업 샘플링하십시오 .</target>
        </trans-unit>
        <trans-unit id="68e73f886010989498b6248b5fde9112b6dd35ee" translate="yes" xml:space="preserve">
          <source>Upsample again, providing a &lt;code&gt;method&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; 제공하여 다시 업 샘플링하십시오 .</target>
        </trans-unit>
        <trans-unit id="dee213af0cd383ec6acfb52a0aa649e45ff98f99" translate="yes" xml:space="preserve">
          <source>Upsample the series into 30 second bins and fill the &lt;code&gt;NaN&lt;/code&gt; values using the &lt;code&gt;bfill&lt;/code&gt; method.</source>
          <target state="translated">시리즈를 30 초 빈으로 업 샘플링하고 &lt;code&gt;bfill&lt;/code&gt; 방법을 사용하여 &lt;code&gt;NaN&lt;/code&gt; 값을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="38fcf91c10c45683b26a3352667109b2e83f532e" translate="yes" xml:space="preserve">
          <source>Upsample the series into 30 second bins and fill the &lt;code&gt;NaN&lt;/code&gt; values using the &lt;code&gt;pad&lt;/code&gt; method.</source>
          <target state="translated">시리즈를 30 초 빈으로 업 샘플링하고 &lt;code&gt;pad&lt;/code&gt; 방법을 사용하여 &lt;code&gt;NaN&lt;/code&gt; 값을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="e86afe0e366fa589ca411aa925bb0e16f1f9fbcb" translate="yes" xml:space="preserve">
          <source>Upsample the series into 30 second bins.</source>
          <target state="translated">시리즈를 30 초 단위로 업 샘플링하십시오.</target>
        </trans-unit>
        <trans-unit id="e482e122d3a9b17b0e7dfad356cd119039b4f714" translate="yes" xml:space="preserve">
          <source>Upsampling</source>
          <target state="translated">Upsampling</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="9777d34ccd228c1c280eb87128fdf9c30ce8e75d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../reference/api/pandas.crosstab#pandas.crosstab&quot;&gt;&lt;code&gt;crosstab()&lt;/code&gt;&lt;/a&gt; to compute a cross-tabulation of two (or more) factors. By default &lt;code&gt;crosstab&lt;/code&gt; computes a frequency table of the factors unless an array of values and an aggregation function are passed.</source>
          <target state="translated">두 개 이상의 요인에 대한 교차 분석표를 계산 하려면 &lt;a href=&quot;../reference/api/pandas.crosstab#pandas.crosstab&quot;&gt; &lt;code&gt;crosstab()&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 . 기본적으로 &lt;code&gt;crosstab&lt;/code&gt; 은 값 배열과 집계 함수가 전달되지 않는 한 요인의 빈도 테이블을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="cbd373d0d00df710d9f526cfd5ca6299fcf9b820" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../reference/api/pandas.dataframe.sparse.from_spmatrix#pandas.DataFrame.sparse.from_spmatrix&quot;&gt;&lt;code&gt;DataFrame.sparse.from_spmatrix()&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;DataFrame&lt;/code&gt; with sparse values from a sparse matrix.</source>
          <target state="translated">사용 &lt;a href=&quot;../reference/api/pandas.dataframe.sparse.from_spmatrix#pandas.DataFrame.sparse.from_spmatrix&quot;&gt; &lt;code&gt;DataFrame.sparse.from_spmatrix()&lt;/code&gt; &lt;/a&gt; 만들 수 &lt;code&gt;DataFrame&lt;/code&gt; 스파 스 매트릭스에서 스파 스 값을.</target>
        </trans-unit>
        <trans-unit id="837695dce54a432aa7d9b7298aa578b1c8809d58" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../reference/api/pandas.index.set_names#pandas.Index.set_names&quot;&gt;&lt;code&gt;Index.set_names()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;../reference/api/pandas.index.set_names#pandas.Index.set_names&quot;&gt; &lt;code&gt;Index.set_names()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="be77849dd47ce3b1d4a7ddcde17215161c4f2932" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.dtypes.value_counts()&lt;/code&gt; instead.</source>
          <target state="translated">대신 &lt;code&gt;.dtypes.value_counts()&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="18c0d150b62da8675ff23a6c3487d95196bd3fa3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.pipe&lt;/code&gt; when chaining together functions that expect Series, DataFrames or GroupBy objects. Instead of writing</source>
          <target state="translated">Series, DataFrames 또는 GroupBy 객체가 필요한 함수를 함께 연결할 때는 &lt;code&gt;.pipe&lt;/code&gt; 를 사용하십시오 . 쓰는 대신</target>
        </trans-unit>
        <trans-unit id="20191ee6041d5c75a6e51ff342afb4c5a4df017b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.pipe&lt;/code&gt; when you want to improve readability by chaining together functions that expect Series, DataFrames, GroupBy or Resampler objects. Instead of writing</source>
          <target state="translated">Series, DataFrames, GroupBy 또는 Resampler 객체가 필요한 함수를 연결하여 가독성을 향상 시키려면 &lt;code&gt;.pipe&lt;/code&gt; 를 사용하십시오 . 쓰는 대신</target>
        </trans-unit>
        <trans-unit id="cb8a1b182e86ee11f3cad4e6ca1567321b00bc43" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Styler.set_properties&lt;/code&gt; when the style doesn&amp;rsquo;t actually depend on the values.</source>
          <target state="translated">스타일이 실제로 값에 의존하지 않는 경우 &lt;code&gt;Styler.set_properties&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d373b9e506ac7ddbef2f92f200bf919f46e0fd01" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;closed='left'&lt;/code&gt; to exclude</source>
          <target state="translated">제외 하려면 &lt;code&gt;closed='left'&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="f6f9144340a8355911d8eeec0457c84342fc37ad" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;closed='left'&lt;/code&gt; to exclude &lt;code&gt;end&lt;/code&gt; if it falls on the boundary.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; 를 제외 하려면 &lt;code&gt;closed='left'&lt;/code&gt; 사용경계에있는 경우 .</target>
        </trans-unit>
        <trans-unit id="64e3a28688563e2bf35aaaa5f04f038656bfb075" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;closed='right'&lt;/code&gt; to exclude</source>
          <target state="translated">제외 하려면 &lt;code&gt;closed='right'&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="70fd9083679fe206b62c006f7b1666c66e7dbf3d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;closed='right'&lt;/code&gt; to exclude &lt;code&gt;start&lt;/code&gt; if it falls on the boundary.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 이 경계에 해당하는 경우 &lt;code&gt;closed='right'&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b640a1efc54a3c16d7a0e549af1ff2c777c6e2e7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;copy=True&lt;/code&gt; to prevent such a behaviour or simply don&amp;rsquo;t reuse &lt;code&gt;Categoricals&lt;/code&gt;:</source>
          <target state="translated">이러한 동작을 방지 하려면 &lt;code&gt;copy=True&lt;/code&gt; 를 사용 하거나 단순히 &lt;code&gt;Categoricals&lt;/code&gt; 를 재사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="ce7e8cc7e19e5a27e963d5bf647831d2015ed1cb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cut&lt;/code&gt; when you need to segment and sort data values into bins. This function is also useful for going from a continuous variable to a categorical variable. For example, &lt;code&gt;cut&lt;/code&gt; could convert ages to groups of age ranges. Supports binning into an equal number of bins, or a pre-specified array of bins.</source>
          <target state="translated">데이터 값을 구간으로 분류하고 정렬해야하는 경우 &lt;code&gt;cut&lt;/code&gt; 을 사용하십시오 . 이 함수는 연속 변수에서 범주 형 변수로 이동할 때도 유용합니다. 예를 들어 &lt;code&gt;cut&lt;/code&gt; 은 연령을 연령 범위의 그룹으로 변환 할 수 있습니다. 동일한 수의 빈 또는 미리 지정된 빈 배열로 비닝을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c2648f05bfce00b8db452f1c17c1305810ea05d8" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;drop&lt;/code&gt; optional when bins is not unique</source>
          <target state="translated">휴지통이 고유하지 않은 경우 &lt;code&gt;drop&lt;/code&gt; 옵션 사용</target>
        </trans-unit>
        <trans-unit id="72d55a9aae68fa180527dbc6d5cfdb1aa0015611" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;inplace=True&lt;/code&gt; to modify the original DataFrame.</source>
          <target state="translated">원래 DataFrame을 수정 하려면 &lt;code&gt;inplace=True&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="340387e0e510f55ed0f08217420a243b4bb3ad0a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;origin&lt;/code&gt; or &lt;code&gt;offset&lt;/code&gt; to adjust the start of the bins</source>
          <target state="translated">&lt;code&gt;origin&lt;/code&gt; 또는 &lt;code&gt;offset&lt;/code&gt; 을 사용 하여 저장소 시작 조정</target>
        </trans-unit>
        <trans-unit id="625eb1be0029844644c7e5439bd95b9b9564e1fe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;return_type='dict'&lt;/code&gt; when you want to tweak the appearance of the lines after plotting. In this case a dict containing the Lines making up the boxes, caps, fliers, medians, and whiskers is returned.</source>
          <target state="translated">플로팅 후 선 모양을 조정 하려면 &lt;code&gt;return_type='dict'&lt;/code&gt; 를 사용하십시오 . 이 경우 상자, 캡, 전단지, 중앙값 및 수염을 구성하는 라인이 포함 된 dict가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="287b57786abd358d8fc24b30a518c82b933a8a2c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sqlalchemy.text()&lt;/code&gt; to specify query parameters in a backend-neutral way</source>
          <target state="translated">사용 &lt;code&gt;sqlalchemy.text()&lt;/code&gt; 백엔드에 의존하지 않는 방법 쿼리 매개 변수를 지정합니다</target>
        </trans-unit>
        <trans-unit id="50e6d8aec25834a7d8b1f7068b955c4f5e15f1c4" translate="yes" xml:space="preserve">
          <source>Use &lt;em&gt;composition&lt;/em&gt;. See &lt;a href=&quot;http://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;em&gt;구성&lt;/em&gt; . &lt;a href=&quot;http://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;여기를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="eec6b863b19dfc04c990ceb7adf5d5b71c711f82" translate="yes" xml:space="preserve">
          <source>Use BigQuery&amp;rsquo;s legacy SQL dialect. For more information see &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/legacy-sql&quot;&gt;BigQuery Legacy SQL Reference&lt;/a&gt;.</source>
          <target state="translated">BigQuery의 기존 SQL 언어를 사용하십시오. 자세한 정보는 &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/legacy-sql&quot;&gt;BigQuery Legacy SQL 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f975e1b67b52da15129a88ea9c8a1a92d6abb20" translate="yes" xml:space="preserve">
          <source>Use BigQuery&amp;rsquo;s standard SQL, which is compliant with the SQL 2011 standard. For more information see &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/standard-sql/&quot;&gt;BigQuery Standard SQL Reference&lt;/a&gt;.</source>
          <target state="translated">SQL 2011 표준을 준수하는 BigQuery의 표준 SQL을 사용하십시오. 자세한 정보는 &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/standard-sql/&quot;&gt;BigQuery Standard SQL 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f395605d43d5dccff7dadf83c6f12ca5f9ff9fb" translate="yes" xml:space="preserve">
          <source>Use English instead of symbols:</source>
          <target state="translated">기호 대신 영어 사용 :</target>
        </trans-unit>
        <trans-unit id="1ff156ad0169758422c7730401e2fd4a8ab68a14" translate="yes" xml:space="preserve">
          <source>Use a Categorical for efficient storage of an object-dtype column with many repeated values.</source>
          <target state="translated">반복되는 값이 많은 개체 유형 열을 효율적으로 저장하려면 범주 형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="184fb640f3b866b718e6df0396baf2bfbd496e21" translate="yes" xml:space="preserve">
          <source>Use a dictionary to format specific columns.</source>
          <target state="translated">사전을 사용하여 특정 열의 형식을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="1df1556354329063e636daed03c6b51539fe5ff3" translate="yes" xml:space="preserve">
          <source>Use a function from the Numpy library.</source>
          <target state="translated">Numpy 라이브러리의 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="984f3f705713fe09fabb5c107be52c6b1606c6e4" translate="yes" xml:space="preserve">
          <source>Use a numpy.dtype or Python type to cast entire pandas object to the same type. Alternatively, use {col: dtype, &amp;hellip;}, where col is a column label and dtype is a numpy.dtype or Python type to cast one or more of the DataFrame&amp;rsquo;s columns to column-specific types.</source>
          <target state="translated">pandapy.dtype 또는 Python 유형을 사용하여 전체 팬더 객체를 동일한 유형으로 캐스팅하십시오. 또는 {col : dtype,&amp;hellip;}을 사용하십시오. 여기서 col은 열 레이블이고 dtype은 하나 이상의 DataFrame 열을 열별 유형으로 캐스팅하기위한 numpy.dtype 또는 Python 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ecc3c612540055a7a6f2713ba8f3490a136983c5" translate="yes" xml:space="preserve">
          <source>Use a standard estimation bias correction.</source>
          <target state="translated">표준 추정 바이어스 보정을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="08df8e1ac372622d0ca8b429d86aef4a5f92fe34" translate="yes" xml:space="preserve">
          <source>Use an operator implementation from pandas that depends on operators that are already defined on the underlying elements (scalars) of the ExtensionArray.</source>
          <target state="translated">ExtensionArray의 기본 요소 (스칼라)에 이미 정의 된 연산자에 의존하는 팬더의 연산자 구현을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9a76c8a7a09a9ba00602e5a0ce8c6eca1e8904c8" translate="yes" xml:space="preserve">
          <source>Use boolean expressions, with in-line function evaluation.</source>
          <target state="translated">인라인 함수 평가와 함께 부울 표현식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cb69985fa9732b21296ba53aa5d8cf2a1413375f" translate="yes" xml:space="preserve">
          <source>Use chunking</source>
          <target state="translated">청킹 사용</target>
        </trans-unit>
        <trans-unit id="2f2f0906bda99a7cd022db4bcf11f788efedfa51" translate="yes" xml:space="preserve">
          <source>Use efficient datatypes</source>
          <target state="translated">효율적인 데이터 유형 사용</target>
        </trans-unit>
        <trans-unit id="5a0c5a1d921aa53584d61416896934246a0e141f" translate="yes" xml:space="preserve">
          <source>Use either &lt;code&gt;mapper&lt;/code&gt; and &lt;code&gt;axis&lt;/code&gt; to specify the axis to target with &lt;code&gt;mapper&lt;/code&gt;, or &lt;code&gt;index&lt;/code&gt; and/or &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">중 하나를 사용 &lt;code&gt;mapper&lt;/code&gt; 하고 &lt;code&gt;axis&lt;/code&gt; 으로 대상 축을 지정 &lt;code&gt;mapper&lt;/code&gt; , 또는 &lt;code&gt;index&lt;/code&gt; 및 / 또는 &lt;code&gt;columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="feef6b4532ca1ebd7ab8b9f140d4372d27c24d5a" translate="yes" xml:space="preserve">
          <source>Use index as ticks for x axis.</source>
          <target state="translated">x 축의 눈금으로 인덱스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e07d5792616ce5cf60fcdf1afb00e605e7eb9ef5" translate="yes" xml:space="preserve">
          <source>Use inline column reference.</source>
          <target state="translated">인라인 열 참조를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c055f1b1d0508ccdb8d4a00b140254e7f89293e8" translate="yes" xml:space="preserve">
          <source>Use intersection of keys from both frames</source>
          <target state="translated">두 프레임의 키 교차를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="163ae3ffcc8c4c7d969033251ff93d8f5d9d38da" translate="yes" xml:space="preserve">
          <source>Use keys from left frame only</source>
          <target state="translated">왼쪽 프레임의 키만 사용</target>
        </trans-unit>
        <trans-unit id="ffd5c934bb73f7b701940c84f451b3a7fcdd7f86" translate="yes" xml:space="preserve">
          <source>Use keys from right frame only</source>
          <target state="translated">오른쪽 프레임의 키만 사용</target>
        </trans-unit>
        <trans-unit id="c6cee7e12cf26b8abaae6ea1f584a2e69f635459" translate="yes" xml:space="preserve">
          <source>Use loc for label-oriented slicing and iloc positional slicing</source>
          <target state="translated">레이블 지향 슬라이싱 및 iloc 위치 슬라이싱에 loc 사용</target>
        </trans-unit>
        <trans-unit id="96e3d81ce2c8074b78d91bd9afe9837fdc75473b" translate="yes" xml:space="preserve">
          <source>Use log scaling or symlog scaling on both x and y axes. .. versionchanged:: 0.25.0</source>
          <target state="translated">x 및 y 축 모두에서 로그 스케일링 또는 심볼릭 로그 스케일링을 사용하십시오. .. 버전 변경 :: 0.25.0</target>
        </trans-unit>
        <trans-unit id="ecea4fd1f2ca3600545da15f5d90554dc21e717a" translate="yes" xml:space="preserve">
          <source>Use log scaling or symlog scaling on x axis. .. versionchanged:: 0.25.0</source>
          <target state="translated">x 축에서 로그 스케일링 또는 심볼 스케일링을 사용합니다. .. 버전 변경 :: 0.25.0</target>
        </trans-unit>
        <trans-unit id="b7652e9138694aa3e833469f56817ff1b9dec719" translate="yes" xml:space="preserve">
          <source>Use log scaling or symlog scaling on y axis. .. versionchanged:: 0.25.0</source>
          <target state="translated">y 축에서 로그 스케일링 또는 symlog 스케일링을 사용하십시오. .. 버전 변경 :: 0.25.0</target>
        </trans-unit>
        <trans-unit id="eabf8020dcd089fe91c30d2d94b87f883a6f963a" translate="yes" xml:space="preserve">
          <source>Use multicolumn to enhance MultiIndex columns. The default will be read from the config module.</source>
          <target state="translated">다중 열을 사용하여 다중 인덱스 열을 향상시킵니다. 구성 모듈에서 기본값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="5c66a5098bd75af92df10d16f35742f395a6d699" translate="yes" xml:space="preserve">
          <source>Use multirow to enhance MultiIndex rows. Requires adding a usepackage{multirow} to your LaTeX preamble. Will print centered labels (instead of top-aligned) across the contained rows, separating groups via clines. The default will be read from the pandas config module.</source>
          <target state="translated">다중 행을 사용하여 다중 색인 행을 향상시킵니다. LaTeX 프리앰블에 usepackage {multirow}를 추가해야합니다. 포함 된 행에 가운데 맞춤 레이블 대신 상단에 정렬 된 레이블을 인쇄하여 클라인을 통해 그룹을 분리합니다. 기본값은 pandas 구성 모듈에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="fe1b6fcb8a0d1660e9fc73e418e22ce330d83d10" translate="yes" xml:space="preserve">
          <source>Use origin or offset to adjust the start of the bins</source>
          <target state="translated">원점 또는 오프셋을 사용하여 저장소 시작 조정</target>
        </trans-unit>
        <trans-unit id="71daf81f1da0bc26014a75db9edcecf0ef0b262d" translate="yes" xml:space="preserve">
          <source>Use other libraries</source>
          <target state="translated">다른 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="0bb67b30a1a23a7acbd2988a9ef902cac0ae5bf3" translate="yes" xml:space="preserve">
          <source>Use pandas DataFrames in your &lt;a href=&quot;https://scikit-learn.org/&quot;&gt;scikit-learn&lt;/a&gt; ML pipeline.</source>
          <target state="translated">&lt;a href=&quot;https://scikit-learn.org/&quot;&gt;scikit-learn&lt;/a&gt; ML 파이프 라인 에서 pandas DataFrames를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ff0eebc148fe52a19c6412649e16b673f5eed11" translate="yes" xml:space="preserve">
          <source>Use row_levels and column_levels to determine the row and column coordinates respectively. row_levels and column_levels are the names (labels) or numbers of the levels. {row_levels, column_levels} must be a partition of the MultiIndex level names (or numbers).</source>
          <target state="translated">row_levels 및 column_levels를 사용하여 행 및 열 좌표를 각각 결정하십시오. row_levels 및 column_levels는 레벨의 이름 (레이블) 또는 숫자입니다. {row_levels, column_levels}는 다중 색인 레벨 이름 (또는 숫자)의 파티션이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e913fd092b4389151cfa3964a668ad8cc854fb35" translate="yes" xml:space="preserve">
          <source>Use some combination of the above:</source>
          <target state="translated">위의 조합을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9e8ad113f244242b2e93f6aab9956bdc4c87adc4" translate="yes" xml:space="preserve">
          <source>Use sort_values instead.</source>
          <target state="translated">대신 sort_values를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8d4e50c531d056a4a6a78a320955866f3a5dbe3c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server&quot;&gt;local webserver flow&lt;/a&gt; instead of the &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console&quot;&gt;console flow&lt;/a&gt; when getting user credentials.</source>
          <target state="translated">사용자 자격 증명을 얻을 때 &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console&quot;&gt;콘솔 흐름&lt;/a&gt; 대신 &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server&quot;&gt;로컬 웹 서버 흐름을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bf90090d871a76af9e5de08a7f0296cb9d1c62f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/storage/&quot;&gt;BigQuery Storage API&lt;/a&gt; to download query results quickly, but at an increased cost. To use this API, first &lt;a href=&quot;https://console.cloud.google.com/apis/library/bigquerystorage.googleapis.com&quot;&gt;enable it in the Cloud Console&lt;/a&gt;. You must also have the &lt;a href=&quot;https://cloud.google.com/bigquery/docs/access-control#roles&quot;&gt;bigquery.readsessions.create&lt;/a&gt; permission on the project you are billing queries to.</source>
          <target state="translated">&lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/storage/&quot;&gt;BigQuery Storage API&lt;/a&gt; 를 사용하면 쿼리 결과를 신속하게 다운로드 할 수 있지만 비용이 많이 듭니다. 이 API를 사용하려면 먼저 &lt;a href=&quot;https://console.cloud.google.com/apis/library/bigquerystorage.googleapis.com&quot;&gt;클라우드 콘솔&lt;/a&gt; 에서이 API를 활성화하십시오 . 또한 쿼리를 청구 할 프로젝트에 대한 &lt;a href=&quot;https://cloud.google.com/bigquery/docs/access-control#roles&quot;&gt;bigquery.readsessions.create&lt;/a&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9e447f22a5172772f757c3273fd16f83b7c88d69" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server&quot;&gt;local webserver flow&lt;/a&gt; instead of the &lt;a href=&quot;https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console&quot;&gt;console flow&lt;/a&gt; when getting user credentials.</source>
          <target state="translated">사용자 자격 증명을 가져올 때 &lt;a href=&quot;https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console&quot;&gt;콘솔 흐름&lt;/a&gt; 대신 &lt;a href=&quot;https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server&quot;&gt;로컬 웹 서버 흐름을&lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b76d7da2f183f9df9c37bda525f4075fed8da39f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;set_eng_float_format&lt;/code&gt; function to alter the floating-point formatting of pandas objects to produce a particular format.</source>
          <target state="translated">&lt;code&gt;set_eng_float_format&lt;/code&gt; 함수를 사용하여 pandas 객체의 부동 소수점 형식을 변경하여 특정 형식을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ebb9fcac46b0e37fa86b5c117872c38eb3756567" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;tqdm.tqdm()&lt;/code&gt; function to print a progress bar to &lt;a href=&quot;https://docs.python.org/3/library/sys.html#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;code&gt;tqdm.tqdm()&lt;/code&gt; 에 진행 막대 인쇄 기능을 &lt;a href=&quot;https://docs.python.org/3/library/sys.html#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; 를을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04e8da310e3b4cf4facc8177cf41107a1a9beb80" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;tqdm.tqdm_gui()&lt;/code&gt; function to display a progress bar as a graphical dialog box.</source>
          <target state="translated">&lt;code&gt;tqdm.tqdm_gui()&lt;/code&gt; 함수를 사용하여 진행률 표시 줄을 그래픽 대화 상자로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e88ee9cefc8d51bd2b2357e86bd1337d91b55bbe" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;tqdm.tqdm_notebook()&lt;/code&gt; function to display a progress bar as a Jupyter notebook widget.</source>
          <target state="translated">&lt;code&gt;tqdm.tqdm_notebook()&lt;/code&gt; 함수를 사용하여 진행률 표시 줄을 Jupyter 노트북 위젯으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="2e0451dc1a814c2e170832f20e83c79c92f2055c" translate="yes" xml:space="preserve">
          <source>Use the bottleneck library to accelerate computation if it is installed.</source>
          <target state="translated">병목 라이브러리를 사용하여 설치된 경우 계산을 가속화하십시오.</target>
        </trans-unit>
        <trans-unit id="fae89d7305b8a2544ac55014bc52b96cfaaff768" translate="yes" xml:space="preserve">
          <source>Use the bottleneck library to accelerate if it is installed, the default is True Valid values: False,True [default: True] [currently: True]</source>
          <target state="translated">병목 라이브러리를 사용하여 설치된 경우 가속화합니다. 기본값은 True입니다. 유효한 값 : False, True [기본값 : True] [현재 : True]</target>
        </trans-unit>
        <trans-unit id="6fdfcff0fe6ff02a97629ec9f15f1e08c333acd4" translate="yes" xml:space="preserve">
          <source>Use the bottleneck library to accelerate if it is installed, the default is True Valid values: False,True [default: True] [currently: True]compute.use_numexpr : bool Use the numexpr library to accelerate computation if it is installed, the default is True Valid values: False,True [default: True] [currently: True]display.chop_threshold : float or None if set to a float value, all float values smaller then the given threshold will be displayed as exactly 0 by repr and friends. [default: None] [currently: None]display.colheader_justify : &amp;lsquo;left&amp;rsquo;/&amp;rsquo;right&amp;rsquo; Controls the justification of column headers. used by DataFrameFormatter. [default: right] [currently: right]display.column_space No description available. [default: 12] [currently: 12]display.date_dayfirst : boolean When True, prints and parses dates with the day first, eg 20/01/2005 [default: False] [currently: False]display.date_yearfirst : boolean When True, prints and parses dates with the year first, eg 2005/01/20 [default: False] [currently: False]display.encoding : str/unicode Defaults to the detected encoding of the console. Specifies the encoding to be used for strings returned by to_string, these are generally strings meant to be displayed on the console. [default: UTF-8] [currently: UTF-8]display.expand_frame_repr : boolean Whether to print out the full DataFrame repr for wide DataFrames across multiple lines, &lt;code&gt;max_columns&lt;/code&gt; is still respected, but the output will wrap-around across multiple &amp;ldquo;pages&amp;rdquo; if its width exceeds &lt;code&gt;display.width&lt;/code&gt;. [default: True] [currently: True]display.float_format : callable The callable should accept a floating point number and return a string with the desired format of the number. This is used in some places like SeriesFormatter. See formats.format.EngFormatter for an example. [default: None] [currently: None]display.html.border : int A &lt;code&gt;border=value&lt;/code&gt; attribute is inserted in the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tag for the DataFrame HTML repr. [default: 1] [currently: 1]display.html.table_schema : boolean Whether to publish a Table Schema representation for frontends that support it. (default: False) [default: False] [currently: False]display.html.use_mathjax : boolean When True, Jupyter notebook will process table contents using MathJax, rendering mathematical expressions enclosed by the dollar symbol. (default: True) [default: True] [currently: True]display.large_repr : &amp;lsquo;truncate&amp;rsquo;/&amp;rsquo;info&amp;rsquo; For DataFrames exceeding max_rows/max_cols, the repr (and HTML repr) can show a truncated table (the default from 0.13), or switch to the view from df.info() (the behaviour in earlier versions of pandas). [default: truncate] [currently: truncate]display.latex.escape : bool This specifies if the to_latex method of a Dataframe uses escapes special characters. Valid values: False,True [default: True] [currently: True]display.latex.longtable :bool This specifies if the to_latex method of a Dataframe uses the longtable format. Valid values: False,True [default: False] [currently: False]display.latex.multicolumn : bool This specifies if the to_latex method of a Dataframe uses multicolumns to pretty-print MultiIndex columns. Valid values: False,True [default: True] [currently: True]display.latex.multicolumn_format : bool This specifies if the to_latex method of a Dataframe uses multicolumns to pretty-print MultiIndex columns. Valid values: False,True [default: l] [currently: l]display.latex.multirow : bool This specifies if the to_latex method of a Dataframe uses multirows to pretty-print MultiIndex rows. Valid values: False,True [default: False] [currently: False]display.latex.repr : boolean Whether to produce a latex DataFrame representation for jupyter environments that support it. (default: False) [default: False] [currently: False]display.max_categories : int This sets the maximum number of categories pandas should output when printing out a &lt;code&gt;Categorical&lt;/code&gt; or a Series of dtype &amp;ldquo;category&amp;rdquo;. [default: 8] [currently: 8]display.max_columns : int If max_cols is exceeded, switch to truncate view. Depending on &lt;code&gt;large_repr&lt;/code&gt;, objects are either centrally truncated or printed as a summary view. &amp;lsquo;None&amp;rsquo; value means unlimited.</source>
          <target state="translated">병목 현상 라이브러리를 사용하여 설치 한 경우 가속합니다. 기본값은 True입니다. 유효한 값 : False, True [기본값 : True] [현재 : True] compute.use_numexpr : bool numexpr 라이브러리가 설치된 경우 계산을 가속화하려면 기본값입니다. 유효한 값 : False, True [default : True] [현재 : True] display.chop_threshold : float 또는 None float 값으로 설정하면 지정된 임계 값보다 작은 모든 float 값이 repr 및 friends에 의해 정확히 0으로 표시됩니다. . [default : None] [현재 : 없음] display.colheader_justify : 'left'/ 'right'열 머리글의 자리 맞추기를 제어합니다. DataFrameFormatter에서 사용합니다. [default : right] [현재 : right] display.column_space 설명이 없습니다. [default : 12] [현재 : 12] display.date_dayfirst : boolean True 인 경우 날짜를 맨 처음으로 인쇄하고 구문 분석합니다 (예 : 20/01/2005 [default :False] [현재 : False] display.date_yearfirst : boolean True 인 경우 날짜를 연도로 먼저 인쇄하고 구문 분석합니다. 예 : 2005/01/20 [default : False] [현재 : False] display.encoding : str / unicode 기본값은 콘솔 인코딩이 감지되었습니다. to_string에 의해 리턴되는 문자열에 사용될 인코딩을 지정합니다. 일반적으로 콘솔에 표시되는 문자열입니다. [default : UTF-8] [현재 : UTF-8] display.expand_frame_repr : boolean 여러 줄에 걸쳐 넓은 DataFrame에 대한 전체 DataFrame repr을 인쇄할지 여부,이들은 일반적으로 콘솔에 표시되는 문자열입니다. [default : UTF-8] [현재 : UTF-8] display.expand_frame_repr : boolean 여러 줄에 걸쳐 넓은 DataFrame에 대한 전체 DataFrame repr을 인쇄할지 여부,이들은 일반적으로 콘솔에 표시되는 문자열입니다. [default : UTF-8] [현재 : UTF-8] display.expand_frame_repr : boolean 여러 줄에 걸쳐 넓은 DataFrame에 대한 전체 DataFrame repr을 인쇄할지 여부, &lt;code&gt;max_columns&lt;/code&gt; 는 여전히 존중되지만 너비가 &lt;code&gt;display.width&lt;/code&gt; 를 초과하면 출력이 여러 &quot;페이지&quot;에서 줄 바꿈됩니다 . [default : True] [현재 : True] display.float_format : callable 호출 가능은 부동 소수점 숫자를 허용하고 원하는 숫자 형식의 문자열을 반환해야합니다. 이것은 SeriesFormatter와 같은 일부 장소에서 사용됩니다. 예를 들어 modes.format.EngFormatter를 참조하십시오. [default : None] [현재 : None] display.html.border : int &lt;code&gt;border=value&lt;/code&gt; 속성이 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 에 삽입됩니다DataFrame HTML repr에 대한 태그입니다. [default : 1] [현재 : 1] display.html.table_schema : boolean 지원하는 프런트 엔드에 대한 테이블 스키마 표현을 게시할지 여부입니다. (기본값 : False) [default : False] [현재 : False] display.html.use_mathjax : boolean True 인 경우 Jupyter 노트북은 MathJax를 사용하여 테이블 내용을 처리하여 수학 기호를 달러 기호로 묶습니다. (기본값 : True) [default : True] [현재 : True] display.large_repr : 'truncate'/ 'info'max_rows / max_cols를 초과하는 DataFrame의 경우 repr (및 HTML repr)에서 잘린 테이블 (기본값은 0.13)을 표시 할 수 있습니다. ) 또는 df.info () (이전 버전의 팬더 동작)에서보기로 전환합니다. [default : truncate] [현재 : truncate] display.latex.escape : bool 데이터 프레임의 to_latex 메서드가 특수 문자를 이스케이프 처리하는지 여부를 지정합니다.유효한 값 : False, True [기본값 : True] [현재 : True] display.latex.longtable : bool 데이터 프레임의 to_latex 메서드가 longtable 형식을 사용하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : False] [현재 : False] display.latex.multicolumn : bool 데이터 프레임의 to_latex 메서드가 다중 열을 사용하여 MultiIndex 열을 예쁜 인쇄할지 여부를 지정합니다. 유효한 값 : False, True [기본값 : True] [현재 : True] display.latex.multicolumn_format : bool 데이터 프레임의 to_latex 메서드가 다중 열을 사용하여 MultiIndex 열을 예쁜 인쇄할지 여부를 지정합니다. 유효한 값 : False, True [기본값 : l] [현재 : l] display.latex.multirow : bool 데이터 프레임의 to_latex 메서드가 다중 행을 사용하여 MultiIndex 행을 예쁘게 인쇄할지 여부를 지정합니다. 유효한 값 : False, True [기본값 : False] [현재 : False] display.latex.repr :boolean 지원하는 Jupyter 환경에 대한 라텍스 DataFrame 표현을 생성할지 여부입니다. (기본값 : False) [default : False] [현재 : False] display.max_categories : int 이것은 팬더가 인쇄 할 때 출력해야하는 최대 범주 수를 설정합니다. &lt;code&gt;Categorical&lt;/code&gt; 또는 일련의 dtype &quot;카테고리&quot;. [default : 8] [현재 : 8] display.max_columns : int max_cols를 초과하면 잘림보기로 전환하십시오. &lt;code&gt;large_repr&lt;/code&gt; 에 따라 객체는 중앙에서 잘 리거나 요약보기로 인쇄됩니다. '없음'값은 무제한을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="700cbb72c809da2a17932073eef6e726214cadeb" translate="yes" xml:space="preserve">
          <source>Use the index from the left DataFrame as the join key(s). If it is a MultiIndex, the number of keys in the other DataFrame (either the index or a number of columns) must match the number of levels.</source>
          <target state="translated">왼쪽 DataFrame의 인덱스를 조인 키로 사용하십시오. MultiIndex 인 경우 다른 DataFrame의 키 수 (인덱스 또는 여러 열)는 수준 수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="771c6b42b2f56fe9ec6963863ec7797b9a807f4b" translate="yes" xml:space="preserve">
          <source>Use the index from the right DataFrame as the join key. Same caveats as left_index.</source>
          <target state="translated">오른쪽 DataFrame의 인덱스를 조인 키로 사용하십시오. left_index와 동일한 경고</target>
        </trans-unit>
        <trans-unit id="f412d262450d57388e86a623707c5654cbfc0304" translate="yes" xml:space="preserve">
          <source>Use the index of the left DataFrame as the join key.</source>
          <target state="translated">왼쪽 DataFrame의 인덱스를 조인 키로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6a37deb8aa995bb88fd357fe29e6b7a23c9e6dcd" translate="yes" xml:space="preserve">
          <source>Use the index of the right DataFrame as the join key.</source>
          <target state="translated">올바른 DataFrame의 인덱스를 조인 키로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f7ede55ef7cf8604f1328cb0320ed4a66601df5e" translate="yes" xml:space="preserve">
          <source>Use the library</source>
          <target state="translated">도서관 이용</target>
        </trans-unit>
        <trans-unit id="16418f51aa032ae290deab0448d8486fbffbff50" translate="yes" xml:space="preserve">
          <source>Use the library &lt;code&gt;tqdm&lt;/code&gt; to show the progress bar for the upload, chunk by chunk.</source>
          <target state="translated">라이브러리 &lt;code&gt;tqdm&lt;/code&gt; 을 사용하여 청크 단위로 업로드 진행률 표시 줄을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="7e5fa5b1659bc5412acc5199d3637ae107cef3fe" translate="yes" xml:space="preserve">
          <source>Use the method to control the axis:</source>
          <target state="translated">축을 제어하는 ​​방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9c2ba1f6312ce4e48c13029e065ab619529f6332" translate="yes" xml:space="preserve">
          <source>Use the method to control the broadcast axis:</source>
          <target state="translated">브로드 캐스트 축을 제어하는 ​​방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c33ca577a7db756143632816753dad038134f2de" translate="yes" xml:space="preserve">
          <source>Use the numba engine option for select operations if it is installed, the default is False Valid values: False,True [default: False] [currently: False]</source>
          <target state="translated">설치된 경우 선택 작업에 ​​numba 엔진 옵션을 사용합니다. 기본값은 False입니다. 유효한 값 : False, True [기본값 : False] [현재 : False]</target>
        </trans-unit>
        <trans-unit id="e199c08a6d1c0dd0f1f297aefc1a6343d544afe0" translate="yes" xml:space="preserve">
          <source>Use the numexpr library to accelerate computation if it is installed, the default is True Valid values: False,True [default: True] [currently: True]</source>
          <target state="translated">numexpr 라이브러리를 사용하여 설치된 경우 계산 속도를 높이십시오. 기본값은 True입니다. 유효한 값 : False, True [기본값 : True] [현재 : True]</target>
        </trans-unit>
        <trans-unit id="1708db7d996592fa5138801a77e5008013dacece" translate="yes" xml:space="preserve">
          <source>Use the numexpr library to accelerate computation if it is installed.</source>
          <target state="translated">numexpr 라이브러리를 사용하여 설치된 경우 계산을 가속화하십시오.</target>
        </trans-unit>
        <trans-unit id="22ae3f4706c4bf5ca26f3bc8095db84c41e2f7ef" translate="yes" xml:space="preserve">
          <source>Use union of keys from both frames</source>
          <target state="translated">두 프레임의 키 조합 사용</target>
        </trans-unit>
        <trans-unit id="19444b70e0611aa0e6cb05ccbde39645527db392" translate="yes" xml:space="preserve">
          <source>Used as labels for the resulting bins. Must be of the same length as the resulting bins. If False, return only integer indicators of the bins.</source>
          <target state="translated">결과 빈의 레이블로 사용됩니다. 결과 빈과 길이가 같아야합니다. False이면 bin의 정수 표시기 만 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="24c3e0c246e695a91f8387d8fde0f05a970c5905" translate="yes" xml:space="preserve">
          <source>Used as labels for the resulting bins. Must be of the same length as the resulting bins. If False, return only integer indicators of the bins. If True, raises an error.</source>
          <target state="translated">결과 저장소의 레이블로 사용됩니다. 결과 Bin과 길이가 같아야합니다. False이면 빈의 정수 표시 자만 반환합니다. True이면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fdca91236b5bbc3f7d4f14858c6afe584cbb2218" translate="yes" xml:space="preserve">
          <source>Used for moving to next business day.</source>
          <target state="translated">다음 영업일로 이동하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="edcdd215d452f9578239f8d3bd2fce8067b2a472" translate="yes" xml:space="preserve">
          <source>Used for substituting each value in a Series with another value, that may be derived from a function, a &lt;code&gt;dict&lt;/code&gt; or a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">함수, &lt;code&gt;dict&lt;/code&gt; 또는 &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 에서 파생 된 Series의 각 값을 다른 값으로 대체하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="914d4a629b03ab5dd7a2b912da4154bafa741e23" translate="yes" xml:space="preserve">
          <source>Used to determine the groups for the groupby. If &lt;code&gt;by&lt;/code&gt; is a function, it&amp;rsquo;s called on each value of the object&amp;rsquo;s index. If a dict or Series is passed, the Series or dict VALUES will be used to determine the groups (the Series&amp;rsquo; values are first aligned; see &lt;code&gt;.align()&lt;/code&gt; method). If an ndarray is passed, the values are used as-is determine the groups. A label or list of labels may be passed to group by the columns in &lt;code&gt;self&lt;/code&gt;. Notice that a tuple is interpreted as a (single) key.</source>
          <target state="translated">그룹 별 그룹을 결정하는 데 사용됩니다. 경우 &lt;code&gt;by&lt;/code&gt; 기능입니다, 그것은 개체의 인덱스의 각 값에라고. dict 또는 Series가 전달되면 Series 또는 dict VALUES를 사용하여 그룹을 결정합니다 (Series의 값이 먼저 정렬됩니다. &lt;code&gt;.align()&lt;/code&gt; 메서드 참조 ). ndarray가 전달되면 값이 그대로 사용되어 그룹을 결정합니다. 레이블 또는 레이블 목록은 &lt;code&gt;self&lt;/code&gt; 열에 의해 그룹으로 전달 될 수 있습니다 . 튜플은 (단일) 키로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="8eb1b95bd8cc08674e0ccd4e8e41a3b5ed920ef4" translate="yes" xml:space="preserve">
          <source>Used to determine the groups for the groupby. If &lt;code&gt;by&lt;/code&gt; is a function, it&amp;rsquo;s called on each value of the object&amp;rsquo;s index. If a dict or Series is passed, the Series or dict VALUES will be used to determine the groups (the Series&amp;rsquo; values are first aligned; see &lt;code&gt;.align()&lt;/code&gt; method). If an ndarray is passed, the values are used as-is to determine the groups. A label or list of labels may be passed to group by the columns in &lt;code&gt;self&lt;/code&gt;. Notice that a tuple is interpreted as a (single) key.</source>
          <target state="translated">groupby에 대한 그룹을 결정하는 데 사용됩니다. 경우 &lt;code&gt;by&lt;/code&gt; 기능입니다, 그것은 개체의 인덱스의 각 값에라고. dict 또는 Series가 전달되면 Series 또는 dict VALUES가 그룹을 결정하는 데 사용됩니다 (Series의 값이 먼저 정렬됩니다. &lt;code&gt;.align()&lt;/code&gt; 메서드 참조 ). ndarray가 전달되면 값이있는 그대로 사용되어 그룹을 결정합니다. 레이블 또는 레이블 목록은 &lt;code&gt;self&lt;/code&gt; 의 열에 의해 그룹으로 전달 될 수 있습니다 . 튜플은 (단일) 키로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="4e6491795f646a7b27bd141cb1ca6273bdc31d38" translate="yes" xml:space="preserve">
          <source>Useful to replicate and rearrange a MultiIndex for combination with another Index with n_repeat items.</source>
          <target state="translated">n_repeat 항목이있는 다른 인덱스와 조합하기 위해 MultiIndex를 복제하고 재정렬하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ee3c215a7824d02d7818ab35e5d80e3a94d15f23" translate="yes" xml:space="preserve">
          <source>Useful with map for returning an indexer based on an index.</source>
          <target state="translated">인덱스를 기반으로 인덱서를 반환하는 맵과 함께 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bec249e659662f7d5947bf09a1ea1d4a552885b0" translate="yes" xml:space="preserve">
          <source>User Guide</source>
          <target state="translated">사용자 설명서</target>
        </trans-unit>
        <trans-unit id="9a907a2a9e2d8f2282b25aa37fedd952420dd3fa" translate="yes" xml:space="preserve">
          <source>User guide</source>
          <target state="translated">사용자 설명서</target>
        </trans-unit>
        <trans-unit id="07b8e6fc57a07634b504a6fe75b9f6fa74377f47" translate="yes" xml:space="preserve">
          <source>Users brand-new to pandas should start with &lt;a href=&quot;../getting_started/10min#min&quot;&gt;10 minutes to pandas&lt;/a&gt;.</source>
          <target state="translated">팬더를 처음 접하는 사용자는 &lt;a href=&quot;../getting_started/10min#min&quot;&gt;10 분부터 팬더로&lt;/a&gt; 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="51683213bbd46cac809748e0fc1bf18d9a679ef9" translate="yes" xml:space="preserve">
          <source>Users brand-new to pandas should start with &lt;a href=&quot;10min#min&quot;&gt;10 minutes to pandas&lt;/a&gt;.</source>
          <target state="translated">pandas를 처음 접하는 사용자는 pandas에 대해 &lt;a href=&quot;10min#min&quot;&gt;10 분부터&lt;/a&gt; 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b0c86eb749ef9711133ac01a59c7d397d4a96c76" translate="yes" xml:space="preserve">
          <source>Users can use the &lt;code&gt;validate&lt;/code&gt; argument to automatically check whether there are unexpected duplicates in their merge keys. Key uniqueness is checked before merge operations and so should protect against memory overflows. Checking key uniqueness is also a good way to ensure user data structures are as expected.</source>
          <target state="translated">사용자는 &lt;code&gt;validate&lt;/code&gt; 인수를 사용하여 병합 키에 예기치 않은 중복이 있는지 자동으로 확인할 수 있습니다. 병합 작업 전에 키 고유성을 확인하므로 메모리 오버플로를 방지해야합니다. 키 고유성을 확인하는 것도 사용자 데이터 구조가 예상대로 이루어 지도록하는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d0a694eef0a9ad23a327513357f90aec1ada1d91" translate="yes" xml:space="preserve">
          <source>Users should not call this directly. Rather, it is invoked by &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array&quot;&gt;&lt;code&gt;numpy.array()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html#numpy.asarray&quot;&gt;&lt;code&gt;numpy.asarray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자는 이것을 직접 호출해서는 안됩니다. 오히려 &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array&quot;&gt; &lt;code&gt;numpy.array()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html#numpy.asarray&quot;&gt; &lt;code&gt;numpy.asarray()&lt;/code&gt; &lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="40734fd3c3c0fa33e1b8676385ae0eaeebe5826f" translate="yes" xml:space="preserve">
          <source>Users should not call this directly. Rather, it is invoked by &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.array.html#numpy.array&quot;&gt;&lt;code&gt;numpy.array()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.asarray.html#numpy.asarray&quot;&gt;&lt;code&gt;numpy.asarray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자는 이것을 직접 호출해서는 안됩니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 오히려 &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.array.html#numpy.array&quot;&gt; &lt;code&gt;numpy.array()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://numpy.org/doc/stable/reference/generated/numpy.asarray.html#numpy.asarray&quot;&gt; &lt;code&gt;numpy.asarray()&lt;/code&gt; &lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8941173c7d1a88e64f9495a2d9902d7f4b873203" translate="yes" xml:space="preserve">
          <source>Users should use &lt;code&gt;period_array()&lt;/code&gt; to create new instances.</source>
          <target state="translated">사용자는 &lt;code&gt;period_array()&lt;/code&gt; 를 사용하여 새 인스턴스를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="252a993427e74e529104f22f39a4b83ad05c7c5d" translate="yes" xml:space="preserve">
          <source>Users should use &lt;code&gt;period_range()&lt;/code&gt; to create new instances. Alternatively, &lt;code&gt;array()&lt;/code&gt; can be used to create new instances from a sequence of Period scalars.</source>
          <target state="translated">사용자는 &lt;code&gt;period_range()&lt;/code&gt; 를 사용하여 새 인스턴스를 만들어야합니다. 또는 &lt;code&gt;array()&lt;/code&gt; 를 사용하여 기간 스칼라 시퀀스에서 새 인스턴스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c51f1e35ab5b0c2b60d43ff8d0a8b908ffc2fec" translate="yes" xml:space="preserve">
          <source>Users who are familiar with SQL but new to pandas might be interested in a &lt;a href=&quot;../getting_started/comparison/comparison_with_sql#compare-with-sql-join&quot;&gt;comparison with SQL&lt;/a&gt;.</source>
          <target state="translated">SQL에 익숙하지만 판다에 익숙하지 않은 사용자는 SQL &lt;a href=&quot;../getting_started/comparison/comparison_with_sql#compare-with-sql-join&quot;&gt;과&lt;/a&gt; 의 비교에 관심이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d9c2f9cb0f24a7e0fc97a858dcde21da3b1b001" translate="yes" xml:space="preserve">
          <source>Users who are familiar with SQL but new to pandas might be interested in a &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/getting_started/comparison/comparison_with_sql.html#compare-with-sql-join&quot;&gt;comparison with SQL&lt;/a&gt;.</source>
          <target state="translated">SQL에 익숙하지만 Pandas를 처음 접하는 사용자는 SQL &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/getting_started/comparison/comparison_with_sql.html#compare-with-sql-join&quot;&gt;과&lt;/a&gt; 의 비교에 관심이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f707ca4c1922eed158c66385da81cbfc78bcccbd" translate="yes" xml:space="preserve">
          <source>Uses a custom template and Jinja environment.</source>
          <target state="translated">사용자 정의 템플릿 및 Jinja 환경을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e65bba76627a8b117737075048a50ce68867bc58" translate="yes" xml:space="preserve">
          <source>Uses non-NA values from passed Series to make updates. Aligns on index.</source>
          <target state="translated">전달 된 Series의 비 NA 값을 사용하여 업데이트합니다. 색인에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="9b7557801ec5e96b00179888d06d5362136a10e5" translate="yes" xml:space="preserve">
          <source>Uses the backend specified by the option &lt;code&gt;plotting.backend&lt;/code&gt;. By default, matplotlib is used.</source>
          <target state="translated">&lt;code&gt;plotting.backend&lt;/code&gt; 옵션으로 지정된 백엔드를 사용합니다 . 기본적으로 matplotlib가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="024480360bce500a1c798753695c92688adca3f6" translate="yes" xml:space="preserve">
          <source>Uses the target frequency specified at the part of the period specified by</source>
          <target state="translated">에 지정된 기간의 일부에 지정된 목표 빈도를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c25de2e83e9fceeee022a34e378748baf14ac201" translate="yes" xml:space="preserve">
          <source>Using</source>
          <target state="translated">Using</target>
        </trans-unit>
        <trans-unit id="cb4c93ba3da3a520e435dcadd45938be3c2f49e3" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../reference/api/pandas.dataframe.describe#pandas.DataFrame.describe&quot;&gt;&lt;code&gt;describe()&lt;/code&gt;&lt;/a&gt; on categorical data will produce similar output to a &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">범주 형 데이터에 &lt;a href=&quot;../reference/api/pandas.dataframe.describe#pandas.DataFrame.describe&quot;&gt; &lt;code&gt;describe()&lt;/code&gt; &lt;/a&gt; 를 사용하면 &lt;code&gt;string&lt;/code&gt; 유형 의 &lt;code&gt;Series&lt;/code&gt; 또는 &lt;code&gt;DataFrame&lt;/code&gt; 과 유사한 출력이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d688adf488e87519aaf1602f1b8fdf88dab2c3d" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;Series&lt;/code&gt;, returns a NumPy array of the data. NumPy does not currently support time zones (even though it is &lt;em&gt;printing&lt;/em&gt; in the local time zone!), therefore an object array of Timestamps is returned for time zone aware data:</source>
          <target state="translated">&lt;code&gt;Series&lt;/code&gt; 에서 &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 데이터의 NumPy 배열을 반환합니다. NumPy는 현재 시간대를 지원하지 않습니다 ( 현지 시간대로 &lt;em&gt;인쇄&lt;/em&gt; 중임에도 불구하고 !), 따라서 시간대 인식 데이터에 대해 Timestamps의 객체 배열이 반환됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="426166693293410a194625f0edc7839492080dc5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://pypi.org/project/pytest-xdist&quot;&gt;pytest-xdist&lt;/a&gt;, one can speed up local testing on multicore machines. To use this feature, you will need to install &lt;code&gt;pytest-xdist&lt;/code&gt; via:</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/pytest-xdist&quot;&gt;pytest-xdist를&lt;/a&gt; 사용하면 멀티 코어 머신에서 로컬 테스트 속도를 높일 수 있습니다. 이 기능을 사용하려면 다음을 통해 &lt;code&gt;pytest-xdist&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1863cdaa43f15ead7a287233a3a42bf61cf80a48" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.loc&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt; with a list with one or more missing labels will no longer reindex, in favor of &lt;code&gt;.reindex&lt;/code&gt;.</source>
          <target state="translated">하나 이상의 누락 된 레이블이있는 목록과 함께 &lt;code&gt;.loc&lt;/code&gt; 또는 &lt;code&gt;[]&lt;/code&gt; 를 사용 하면 더 이상 &lt;code&gt;.reindex&lt;/code&gt; 대신 색인이 다시 생성되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f164cba84a3fc219651a2b2438fb0ec06802eb69" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;TimedeltaIndex&lt;/code&gt; you can pass string-like, &lt;code&gt;Timedelta&lt;/code&gt;, &lt;code&gt;timedelta&lt;/code&gt;, or &lt;code&gt;np.timedelta64&lt;/code&gt; objects. Passing &lt;code&gt;np.nan/pd.NaT/nat&lt;/code&gt; will represent missing values.</source>
          <target state="translated">사용 &lt;code&gt;TimedeltaIndex&lt;/code&gt; 를 사용하면, 문자열과 같은 통과 할 수 &lt;code&gt;Timedelta&lt;/code&gt; , &lt;code&gt;timedelta&lt;/code&gt; , 또는 &lt;code&gt;np.timedelta64&lt;/code&gt; 객체. &lt;code&gt;np.nan/pd.NaT/nat&lt;/code&gt; 를 전달하면 누락 된 값이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="e4d0161751612fa558c88cb2b4636a8e911a46c7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fill_value&lt;/code&gt; fills Nones prior to passing the column to the merge function.</source>
          <target state="translated">&lt;code&gt;fill_value&lt;/code&gt; 를 사용 하면 열을 병합 함수에 전달하기 전에 없음을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cc56f847f5b3581bd38c30acacd21c8231331d58" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;hypothesis&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hypothesis&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="bc62043ee8f6268a8878d181134a1cf4a5e69d7e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;pytest&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pytest&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="7d62e8677a0ff3e281acc81b0280b9c67d5e7b2a" translate="yes" xml:space="preserve">
          <source>Using Grouper instead of TimeGrouper for time grouping of values</source>
          <target state="translated">값의 시간 그룹화에 TimeGrouper 대신 Grouper 사용</target>
        </trans-unit>
        <trans-unit id="b4122931eb10ae8dad4a62f132da32bcf555a29e" translate="yes" xml:space="preserve">
          <source>Using None to get all sheets:</source>
          <target state="translated">없음을 사용하여 모든 시트 가져 오기 :</target>
        </trans-unit>
        <trans-unit id="48e1e22c4b7553b330bbe7b1b8812ccccbb19640" translate="yes" xml:space="preserve">
          <source>Using NumPy functions on a &lt;code&gt;Series&lt;/code&gt; of type &lt;code&gt;category&lt;/code&gt; should not work as &lt;code&gt;Categoricals&lt;/code&gt; are not numeric data (even in the case that &lt;code&gt;.categories&lt;/code&gt; is numeric).</source>
          <target state="translated">&lt;code&gt;Series&lt;/code&gt; 유형 &lt;code&gt;category&lt;/code&gt; 에서 NumPy 함수를 사용하면 &lt;code&gt;Categoricals&lt;/code&gt; 가 숫자 데이터가 아니므 로 작동 하지 않아야합니다 ( &lt;code&gt;.categories&lt;/code&gt; 가 숫자 인 경우에도 ).</target>
        </trans-unit>
        <trans-unit id="9b7149ef9b2a7a84586ceda8d10517a312a3094c" translate="yes" xml:space="preserve">
          <source>Using Numba</source>
          <target state="translated">Numba 사용</target>
        </trans-unit>
        <trans-unit id="e91cdc544974bc18d2601ae335f9945eb1324829" translate="yes" xml:space="preserve">
          <source>Using Pandas and XlsxWriter to create Excel charts</source>
          <target state="translated">Pandas 및 XlsxWriter를 사용하여 Excel 차트 만들기</target>
        </trans-unit>
        <trans-unit id="120d561aef735e8b901a7bc6aa0b5043e37a215b" translate="yes" xml:space="preserve">
          <source>Using SQLAlchemy makes it possible to use any DB supported by that library. If a DBAPI2 object, only sqlite3 is supported.</source>
          <target state="translated">SQLAlchemy를 사용하면 해당 라이브러리에서 지원하는 모든 DB를 사용할 수 있습니다. DBAPI2 오브젝트 인 경우 sqlite3 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8fb6cb7eb16b768beec1aa2fad9daf8e9afbf2c3" translate="yes" xml:space="preserve">
          <source>Using SQLAlchemy makes it possible to use any DB supported by that library. If a DBAPI2 object, only sqlite3 is supported. The user is responsible for engine disposal and connection closure for the SQLAlchemy connectable; str connections are closed automatically. See &lt;a href=&quot;https://docs.sqlalchemy.org/en/13/core/connections.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">SQLAlchemy를 사용하면 해당 라이브러리에서 지원하는 모든 DB를 사용할 수 있습니다. DBAPI2 오브젝트 인 경우 sqlite3 만 지원됩니다. 사용자는 SQLAlchemy 연결 가능에 대한 엔진 폐기 및 연결 종료를 담당합니다. str 연결은 자동으로 닫힙니다. 를 참조하십시오 &lt;a href=&quot;https://docs.sqlalchemy.org/en/13/core/connections.html&quot;&gt;여기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5dc2cdbbdc0a6a941ca0f360c31b873dc32f76aa" translate="yes" xml:space="preserve">
          <source>Using SQLAlchemy makes it possible to use any DB supported by that library. Legacy support is provided for sqlite3.Connection objects.</source>
          <target state="translated">SQLAlchemy를 사용하면 해당 라이브러리에서 지원하는 모든 DB를 사용할 수 있습니다. sqlite3.Connection 객체에 대한 레거시 지원이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1cf7640b44f85970e571505a7b2fd6c3ac4a9fd2" translate="yes" xml:space="preserve">
          <source>Using SQLAlchemy makes it possible to use any DB supported by that library. Legacy support is provided for sqlite3.Connection objects. The user is responsible for engine disposal and connection closure for the SQLAlchemy connectable See &lt;a href=&quot;https://docs.sqlalchemy.org/en/13/core/connections.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">SQLAlchemy를 사용하면 해당 라이브러리에서 지원하는 모든 DB를 사용할 수 있습니다. sqlite3.Connection 객체에 대한 레거시 지원이 제공됩니다. 사용자는 SQLAlchemy 연결 가능에 대한 엔진 폐기 및 연결 종료를 담당합니다 . &lt;a href=&quot;https://docs.sqlalchemy.org/en/13/core/connections.html&quot;&gt;여기를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d97ccc6313a4c17c69df88d69fe7f70143233e42" translate="yes" xml:space="preserve">
          <source>Using SQLAlchemy, &lt;a href=&quot;../reference/api/pandas.dataframe.to_sql#pandas.DataFrame.to_sql&quot;&gt;&lt;code&gt;to_sql()&lt;/code&gt;&lt;/a&gt; is capable of writing datetime data that is timezone naive or timezone aware. However, the resulting data stored in the database ultimately depends on the supported data type for datetime data of the database system being used.</source>
          <target state="translated">SQLAlchemy를 사용하여 &lt;a href=&quot;../reference/api/pandas.dataframe.to_sql#pandas.DataFrame.to_sql&quot;&gt; &lt;code&gt;to_sql()&lt;/code&gt; &lt;/a&gt; 은 표준 시간대 또는 표준 시간대를 인식하는 datetime 데이터를 쓸 수 있습니다. 그러나 데이터베이스에 저장되는 결과 데이터는 궁극적으로 사용중인 데이터베이스 시스템의 datetime 데이터에 대해 지원되는 데이터 유형에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="4598600278aa58ac48e175d872864217244472cc" translate="yes" xml:space="preserve">
          <source>Using TimeGrouper and another grouping to create subgroups, then apply a custom function</source>
          <target state="translated">TimeGrouper 및 다른 그룹화를 사용하여 하위 그룹을 만든 다음 사용자 지정 함수 적용</target>
        </trans-unit>
        <trans-unit id="63c509b61bff1b104d3ee2d55975c668f3f4cfbc" translate="yes" xml:space="preserve">
          <source>Using a</source>
          <target state="translated">사용</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
