<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="redis">
    <body>
      <group id="redis">
        <trans-unit id="1cc0b81f89f7a87d177e223efdad1ca176855997" translate="yes" xml:space="preserve">
          <source>To do so, just append the &lt;code&gt;MATCH &amp;lt;pattern&amp;gt;&lt;/code&gt; arguments at the end of the &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; command (it works with all the SCAN family commands).</source>
          <target state="translated">이렇게하려면 &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; 명령 끝에 &lt;code&gt;MATCH &amp;lt;pattern&amp;gt;&lt;/code&gt; 인수를 추가하십시오 (모든 SCAN 제품군 명령과 함께 작동).</target>
        </trans-unit>
        <trans-unit id="a19429ebadf3a92bbb763ace4b10735d927cdb10" translate="yes" xml:space="preserve">
          <source>To just remove a given consumer from a consumer group, the following form is used:</source>
          <target state="translated">소비자 그룹에서 특정 소비자를 제거하기 위해 다음 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a1bcfc2be035b8699c327e24a90fc65898548599" translate="yes" xml:space="preserve">
          <source>To obtain this behavior the following pattern is used. The process uses an additional &lt;em&gt;control connection&lt;/em&gt; in order to send the &lt;a href=&quot;client-unblock&quot;&gt;CLIENT UNBLOCK&lt;/a&gt; command if needed. In the meantime, before running the blocking operation on the other connections, the process runs &lt;a href=&quot;client-id&quot;&gt;CLIENT ID&lt;/a&gt; in order to get the ID associated with that connection. When a new key should be added, or when a key should no longer be monitored, the relevant connection blocking command is aborted by sending &lt;a href=&quot;client-unblock&quot;&gt;CLIENT UNBLOCK&lt;/a&gt; in the control connection. The blocking command will return and can be finally reissued.</source>
          <target state="translated">이 동작을 얻기 위해 다음 패턴이 사용됩니다. 프로세스는 필요한 경우 추가 &lt;em&gt;제어 연결&lt;/em&gt; 을 사용 하여 &lt;a href=&quot;client-unblock&quot;&gt;CLIENT UNBLOCK&lt;/a&gt; 명령 을 보냅니다 . 그 동안 다른 연결에서 차단 작업을 실행하기 전에 프로세스는 해당 연결과 관련된 ID를 얻기 위해 &lt;a href=&quot;client-id&quot;&gt;CLIENT ID&lt;/a&gt; 를 실행 합니다. 새 키를 추가하거나 키를 더 이상 모니터링하지 않으면 제어 연결에서 &lt;a href=&quot;client-unblock&quot;&gt;CLIENT UNBLOCK&lt;/a&gt; 을 전송하여 관련 연결 차단 명령이 중단됩니다 . 차단 명령이 반환되고 최종적으로 재발행 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2975d597b626d068bf510d43c804ba49212aa56" translate="yes" xml:space="preserve">
          <source>To read the slow log the &lt;strong&gt;SLOWLOG GET&lt;/strong&gt; command is used, that returns every entry in the slow log. It is possible to return only the N most recent entries passing an additional argument to the command (for instance &lt;strong&gt;SLOWLOG GET 10&lt;/strong&gt;).</source>
          <target state="translated">느린 로그를 읽으려면 &lt;strong&gt;SLOWLOG GET&lt;/strong&gt; 명령이 사용되어 느린 로그의 모든 항목을 반환합니다. 명령에 추가 인수를 전달하는 N 개의 가장 최근 항목 만 반환 할 수 있습니다 (예 : &lt;strong&gt;SLOWLOG GET 10&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="e6601ee6f116ecbd87e015bd821bbd22f955d142" translate="yes" xml:space="preserve">
          <source>To remove multiple fields from a hash in an atomic fashion in earlier versions, use a &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; block.</source>
          <target state="translated">이전 버전의 원자 방식으로 해시에서 여러 필드를 제거하려면 &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; 블록을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9f37057519a3e87cfbb6299bb703ef448d49003c" translate="yes" xml:space="preserve">
          <source>To restrict the list of matches to the ones of a given minimal length:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954b750d48973ad0a7cb6b706834c084a88ef5a0" translate="yes" xml:space="preserve">
          <source>To see how the command actually replies, please check the &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; command page.</source>
          <target state="translated">명령이 실제로 어떻게 응답하는지 보려면 &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; 명령 페이지 를 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="128d3d57cca208c42b2c4a7b17ae1e6da52f3781" translate="yes" xml:space="preserve">
          <source>To use incomplete IDs is valid, like it is valid for &lt;a href=&quot;xrange&quot;&gt;XRANGE&lt;/a&gt;. However here the sequence part of the ID, if missing, is always interpreted as zero, so the command:</source>
          <target state="translated">불완전한 ID를 사용하는 것은 &lt;a href=&quot;xrange&quot;&gt;XRANGE에&lt;/a&gt; 유효한 것처럼 유효합니다 . 그러나 여기서 ID의 시퀀스 부분이 없으면 항상 0으로 해석되므로 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="05bcd8bf68d0a760a4bed95fc64ae0e72369519e" translate="yes" xml:space="preserve">
          <source>Trim an existing list so that it will contain only the specified range of elements specified. Both &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; are zero-based indexes, where &lt;code&gt;0&lt;/code&gt; is the first element of the list (the head), &lt;code&gt;1&lt;/code&gt; the next element and so on.</source>
          <target state="translated">지정된 목록의 지정된 요소 만 포함하도록 기존 목록을 자릅니다. 모두 &lt;code&gt;start&lt;/code&gt; 및 &lt;code&gt;stop&lt;/code&gt; 위치를 0부터 인덱스입니다 &lt;code&gt;0&lt;/code&gt; 첫 번째 목록의 요소 (머리)이며, &lt;code&gt;1&lt;/code&gt; 등 다음의 요소와.</target>
        </trans-unit>
        <trans-unit id="035ea855c35c51b7478a5846f77d5b250b944acd" translate="yes" xml:space="preserve">
          <source>Trimming with &lt;strong&gt;MAXLEN&lt;/strong&gt; can be expensive compared to just adding entries with &lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt;: streams are represented by macro nodes into a radix tree, in order to be very memory efficient. Altering the single macro node, consisting of a few tens of elements, is not optimal. So it is possible to give the command in the following special form:</source>
          <target state="translated">&lt;strong&gt;MAXLEN&lt;/strong&gt; 을 사용한 트리밍은 &lt;a href=&quot;xadd&quot;&gt;XADD를 사용&lt;/a&gt; 하여 항목을 추가하는 것에 비해 비용이 많이들 수 있습니다 . 스트림은 메모리 효율성을 높이기 위해 매크로 노드에 의해 기수 트리로 표시됩니다. 수십 개의 요소로 구성된 단일 매크로 노드를 변경하는 것은 최적이 아닙니다. 따라서 다음과 같은 특수 형식으로 명령을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e14a8ad523f56508195364d3cf7777e0aa400ca5" translate="yes" xml:space="preserve">
          <source>Turn one of the replicas into a master.</source>
          <target state="translated">복제본 중 하나를 마스터로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="c05d6c7408f8cd968f368264498cc9e596a32ec9" translate="yes" xml:space="preserve">
          <source>Two things:</source>
          <target state="translated">두가지:</target>
        </trans-unit>
        <trans-unit id="e7444026086e72c0a3612ef57f7d1a60a1f2e6bb" translate="yes" xml:space="preserve">
          <source>UNLINK</source>
          <target state="translated">UNLINK</target>
        </trans-unit>
        <trans-unit id="c90213724a9be513b13cfb4a4f22bff2d2366de0" translate="yes" xml:space="preserve">
          <source>UNLINK  key [key ...]   Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking.</source>
          <target state="translated">UNLINK 키 [key ...] 다른 스레드에서 키를 비동기 적으로 삭제합니다. 그렇지 않으면 DEL과 동일하지만 비 차단입니다.</target>
        </trans-unit>
        <trans-unit id="f6b41ba10fad6aa5959ec7f0a7a19cba96c5b205" translate="yes" xml:space="preserve">
          <source>UNSUBSCRIBE</source>
          <target state="translated">UNSUBSCRIBE</target>
        </trans-unit>
        <trans-unit id="95bcaac89f05e07fac3ab702ccda65ff3fc1e70d" translate="yes" xml:space="preserve">
          <source>UNSUBSCRIBE  [channel [channel ...]]   Stop listening for messages posted to the given channels</source>
          <target state="translated">UNSUBSCRIBE [channel [channel ...]] 주어진 채널에 게시 된 메시지 수신을 중지</target>
        </trans-unit>
        <trans-unit id="f482f8bdba29a29d8179cb1c81453caec7cd1cd0" translate="yes" xml:space="preserve">
          <source>UNWATCH</source>
          <target state="translated">UNWATCH</target>
        </trans-unit>
        <trans-unit id="04d3f2f1b1533a531f1567d456dcc57dd3e8aaed" translate="yes" xml:space="preserve">
          <source>UNWATCH   Forget about all watched keys</source>
          <target state="translated">UNWATCH 모든 감시 키를 잊어 버리십시오</target>
        </trans-unit>
        <trans-unit id="8db41e11411c7ef82cbecef613bce2c5a112c279" translate="yes" xml:space="preserve">
          <source>Understanding the low level details of entries deletion</source>
          <target state="translated">항목 삭제에 대한 하위 레벨 세부 사항 이해</target>
        </trans-unit>
        <trans-unit id="74c4502e005225660c6510a7b11e373f1a28ec98" translate="yes" xml:space="preserve">
          <source>Unix timestamp of the latest latency spike for the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6621dbcd8c75c3e3ba1955a59fcce8aba6799d19" translate="yes" xml:space="preserve">
          <source>Unloads a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e045488630d8fa5ceda39515242aa38f638d314d" translate="yes" xml:space="preserve">
          <source>Unsubscribes the client from the given channels, or from all of them if none is given.</source>
          <target state="translated">주어진 채널에서 클라이언트를 구독 취소하거나, 해당 채널이 없으면 모두 구독 취소합니다.</target>
        </trans-unit>
        <trans-unit id="b42e2582f88c39f70296ce6117ecfbf480cdbabb" translate="yes" xml:space="preserve">
          <source>Unsubscribes the client from the given patterns, or from all of them if none is given.</source>
          <target state="translated">주어진 패턴 또는 클라이언트가없는 패턴에서 클라이언트를 구독 취소합니다.</target>
        </trans-unit>
        <trans-unit id="3439e83eddd9b986dc9a370152a22cf7dcf9b189" translate="yes" xml:space="preserve">
          <source>Usage example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="1a1ad8288443501b5ab5a375040a56b505cf57da" translate="yes" xml:space="preserve">
          <source>Usage in Redis Cluster</source>
          <target state="translated">Redis 클러스터에서의 사용법</target>
        </trans-unit>
        <trans-unit id="4737cd73c3044761cf7011e37fa5eaf2d8409931" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;zrank&quot;&gt;ZRANK&lt;/a&gt; to get the rank of an element with the scores ordered from low to high.</source>
          <target state="translated">&lt;a href=&quot;zrank&quot;&gt;ZRANK&lt;/a&gt; 를 사용 하여 점수가 낮은 순서에서 높은 순서로 요소의 순위를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3fe98e8f5c8ef5cf83f0f54776afcda9d91790a6" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;zrevrank&quot;&gt;ZREVRANK&lt;/a&gt; to get the rank of an element with the scores ordered from high to low.</source>
          <target state="translated">&lt;a href=&quot;zrevrank&quot;&gt;ZREVRANK&lt;/a&gt; 를 사용 하여 높은 점수에서 낮은 점수를 가진 요소의 순위를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="086b66054cfededa52eff107efd5d5738706c626" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;CLUSTER SETSLOT &amp;lt;slot&amp;gt; NODE &amp;lt;destination-node-id&amp;gt;&lt;/code&gt; in the source or destination.</source>
          <target state="translated">사용 &lt;code&gt;CLUSTER SETSLOT &amp;lt;slot&amp;gt; NODE &amp;lt;destination-node-id&amp;gt;&lt;/code&gt; 소스 또는 대상이다.</target>
        </trans-unit>
        <trans-unit id="7a0d11b9b3a61f9fb375f27d2f543f0531d6044b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;SIGINT&lt;/code&gt; (Ctrl-C) to stop a &lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt; stream running via &lt;code&gt;redis-cli&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;redis-cli&lt;/code&gt; 를 통해 실행 되는 &lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt; 스트림 을 중지 하려면 &lt;code&gt;SIGINT&lt;/code&gt; (Ctrl-C)를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc749871acc225f7c2c2f7dbee8f21f52bf5c425" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;\&lt;/code&gt; to escape special characters if you want to match them verbatim.</source>
          <target state="translated">특수 문자를 그대로 사용하려면 &lt;code&gt;\&lt;/code&gt; 를 사용 하여 특수 문자를 이스케이프 하십시오 .</target>
        </trans-unit>
        <trans-unit id="33383091ad79a3073386fcd60506a3674101c465" translate="yes" xml:space="preserve">
          <source>Used in this way &lt;a href=&quot;xrange&quot;&gt;XRANGE&lt;/a&gt; works as a range query command to obtain entries in a specified time. This is very handy in order to access the history of past events in a stream.</source>
          <target state="translated">이러한 방식으로 &lt;a href=&quot;xrange&quot;&gt;XRANGE&lt;/a&gt; 는 범위 조회 명령으로 작동하여 지정된 시간에 항목을 얻습니다. 스트림의 과거 이벤트 기록에 액세스하는 데 매우 편리합니다.</target>
        </trans-unit>
        <trans-unit id="e27cfe4ed4d7ca1d0aa51aec849d7c03662148e4" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; inside a &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; block does not make a lot of sense as it would require blocking the entire server in order to execute the block atomically, which in turn does not allow other clients to perform a push operation. For this reason the behavior of &lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; inside &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; when the list is empty is to return a &lt;code&gt;nil&lt;/code&gt; multi-bulk reply, which is the same thing that happens when the timeout is reached.</source>
          <target state="translated">&lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; 블록 내에서 &lt;a href=&quot;blpop&quot;&gt;BLPOP를&lt;/a&gt; 사용 하는 것은 블록을 원자 적으로 실행하기 위해 전체 서버를 차단해야하므로 다른 클라이언트가 푸시 작업을 수행 할 수 없기 때문에 의미가 없습니다. 이러한 이유의 동작 &lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; 내부 &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; 목록이 비어있는 반환하는 것입니다 &lt;code&gt;nil&lt;/code&gt; 제한 시간에 도달 할 때 발생하는 같은 일이 멀티 대량 응답을.</target>
        </trans-unit>
        <trans-unit id="b54f3654ab6461c28e9b6e5e7f5913714a6eeddb" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;lmove&quot;&gt;LMOVE&lt;/a&gt; with the same source and destination key, a client can visit all the elements of an N-elements list, one after the other, in O(N) without transferring the full list from the server to the client using a single &lt;a href=&quot;lrange&quot;&gt;LRANGE&lt;/a&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40451af134cf3b4789965e6b5f83160439077efc" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt; with the same source and destination key, a client can visit all the elements of an N-elements list, one after the other, in O(N) without transferring the full list from the server to the client using a single &lt;a href=&quot;lrange&quot;&gt;LRANGE&lt;/a&gt; operation.</source>
          <target state="translated">동일한 소스 및 대상 키와 함께 &lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt; 를 사용하면 클라이언트는 단일 &lt;a href=&quot;lrange&quot;&gt;LRANGE&lt;/a&gt; 조작을 사용하여 서버에서 클라이언트로 전체 목록을 전송하지 않고도 O (N)에서 N- 요소 목록의 모든 요소를 ​​차례로 방문 할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="c46dcc4dc3127a722b902a7f0747724ecf4cc482" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;redis.pcall()&lt;/code&gt; no error is raised, but an error object is returned in the format specified above (as a Lua table with an &lt;code&gt;err&lt;/code&gt; field). The script can pass the exact error to the user by returning the error object returned by &lt;code&gt;redis.pcall()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;redis.pcall()&lt;/code&gt; 사용하면 오류가 발생하지 않지만 오류 개체는 위에서 지정한 형식 ( &lt;code&gt;err&lt;/code&gt; 필드가 있는 Lua 테이블)으로 반환됩니다 . 스크립트는 &lt;code&gt;redis.pcall()&lt;/code&gt; 반환 한 오류 객체를 반환하여 정확한 오류를 사용자에게 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7101c402265dd964134e35be47f87be29400b051" translate="yes" xml:space="preserve">
          <source>Using Lua debugging functionality or other approaches like altering the meta table used to implement global protections in order to circumvent globals protection is not hard. However it is difficult to do it accidentally. If the user messes with the Lua global state, the consistency of AOF and replication is not guaranteed: don't do it.</source>
          <target state="translated">Lua 디버깅 기능이나 전역 보호를 우회하기 위해 전역 보호를 구현하는 데 사용되는 메타 테이블을 변경하는 것과 같은 다른 방법을 사용하는 것은 어렵지 않습니다. 그러나 실수로하기가 어렵습니다. 사용자가 Lua 전역 상태를 망설이면 AOF와 복제의 일관성이 보장되지 않습니다. 그렇게하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="dd509a18bc30cf1cdbb690c0cbd0d97cac11f2d3" translate="yes" xml:space="preserve">
          <source>Using Lua scripting in RESP3 mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6802aa64b9bbaa359e233fb607bd5d022a67930" translate="yes" xml:space="preserve">
          <source>Using SELECT inside scripts</source>
          <target state="translated">스크립트 내에서 SELECT 사용</target>
        </trans-unit>
        <trans-unit id="7b026f033d38658299ef9472bd95714c2913c9fc" translate="yes" xml:space="preserve">
          <source>Using blocking list operations it is possible to mount different blocking primitives. For instance for some application you may need to block waiting for elements into a Redis Set, so that as far as a new element is added to the Set, it is possible to retrieve it without resort to polling. This would require a blocking version of &lt;a href=&quot;spop&quot;&gt;SPOP&lt;/a&gt; that is not available, but using blocking list operations we can easily accomplish this task.</source>
          <target state="translated">차단 목록 작업을 사용하면 다른 차단 프리미티브를 탑재 할 수 있습니다. 예를 들어 일부 애플리케이션의 경우 요소를 Redis 세트로 대기하는 것을 차단해야 새 요소가 세트에 추가되는 한 폴링에 의존하지 않고 요소를 검색 할 수 있습니다. 이를 위해서는 사용할 수없는 차단 버전의 &lt;a href=&quot;spop&quot;&gt;SPOP&lt;/a&gt; 가 필요 하지만 차단 목록 작업을 사용하면이 작업을 쉽게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d99f941df6a6943dbe83b1a86f2d0fb5e933eb9" translate="yes" xml:space="preserve">
          <source>Using hashes in &lt;code&gt;BY&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BY&lt;/code&gt; 및 &lt;code&gt;GET&lt;/code&gt; 에서 해시 사용</target>
        </trans-unit>
        <trans-unit id="caf38fc4664bfd78e28567c17c5866f5546d3c41" translate="yes" xml:space="preserve">
          <source>Using other atomic increment/decrement commands like &lt;a href=&quot;decr&quot;&gt;DECR&lt;/a&gt; or &lt;a href=&quot;incrby&quot;&gt;INCRBY&lt;/a&gt; it is possible to handle values that may get bigger or smaller depending on the operations performed by the user. Imagine for instance the score of different users in an online game.</source>
          <target state="translated">&lt;a href=&quot;decr&quot;&gt;DECR&lt;/a&gt; 또는 &lt;a href=&quot;incrby&quot;&gt;INCRBY&lt;/a&gt; 와 같은 다른 원자 적 증가 / 감소 명령 을 사용하면 사용자가 수행 한 작업에 따라 더 커지거나 작아 질 수있는 값을 처리 할 수 ​​있습니다. 예를 들어 온라인 게임에서 다른 사용자의 점수를 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="ae6b3b782e1efd8b08b993d2b183d9c7d1c6acfa" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;setbit&quot;&gt;SETBIT&lt;/a&gt; command this is trivial to accomplish, identifying every day with a small progressive integer. For instance day 0 is the first day the application was put online, day 1 the next day, and so forth.</source>
          <target state="translated">&lt;a href=&quot;setbit&quot;&gt;SETBIT&lt;/a&gt; 명령을 사용하면 매일 작은 점진적 정수로 식별하기가 쉽지 않습니다. 예를 들어, 0 일은 응용 프로그램을 온라인으로 만든 첫 날, 다음 날 1 일 등입니다.</target>
        </trans-unit>
        <trans-unit id="16ead6dab8e57eff7f107126c73dd3bc75147baa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;OVERFLOW&lt;/code&gt; command the user is able to fine-tune the behavior of the increment or decrement overflow (or underflow) by specifying one of the following behaviors:</source>
          <target state="translated">&lt;code&gt;OVERFLOW&lt;/code&gt; 명령을 사용하면 다음 동작 중 하나를 지정하여 증가 또는 감소 오버플로 (또는 언더 플로)의 동작을 미세 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3de3ec939c3c7b5414f26935285aeca64861fe17" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;WEIGHTS&lt;/code&gt; option, it is possible to specify a multiplication factor for each input sorted set. This means that the score of every element in every input sorted set is multiplied by this factor before being passed to the aggregation function. When &lt;code&gt;WEIGHTS&lt;/code&gt; is not given, the multiplication factors default to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHTS&lt;/code&gt; 옵션을 사용하면 각 입력 정렬 세트에 대한 곱셈 계수를 지정할 수 있습니다. 즉, 모든 입력 정렬 집합의 모든 요소 점수에이 인수를 곱하여 집계 함수에 전달합니다. 때 &lt;code&gt;WEIGHTS&lt;/code&gt; 주어지지 않는, 곱셈 요인에 기본 &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76a0908eb03a0818dec46ad32670924542b96c7e" translate="yes" xml:space="preserve">
          <source>Using the &lt;strong&gt;COUNT&lt;/strong&gt; option it is possible to reduce the number of entries reported. This is a very important feature even if it may look marginal, because it allows, for instance, to model operations such as &lt;em&gt;give me the entry greater or equal to the following&lt;/em&gt;:</source>
          <target state="translated">&lt;strong&gt;COUNT&lt;/strong&gt; 옵션을 사용하면 보고 된 항목 수를 줄일 수 있습니다. 예를 들어 &lt;em&gt;다음과 같은 항목을 더 크거나 같게하는&lt;/em&gt; 등의 작업을 모델링 할 수 있기 때문에 한계가있는 것처럼 보일지라도 매우 중요한 기능입니다 .</target>
        </trans-unit>
        <trans-unit id="06fddf3650bd5ee5a6ffaab199db0b1e5871cc0a" translate="yes" xml:space="preserve">
          <source>Usually &lt;a href=&quot;bitfield&quot;&gt;BITFIELD&lt;/a&gt; is a fast command, however note that addressing far bits of currently short strings will trigger an allocation that may be more costly than executing the command on bits already existing.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;bitfield&quot;&gt;BITFIELD&lt;/a&gt; 는 빠른 명령이지만 현재 짧은 문자열의 먼 비트를 지정하면 이미 존재하는 비트에서 명령을 실행하는 것보다 비용이 많이 드는 할당이 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="0f5b11ac939e1d71f8708f6f993a15ee8aabd489" translate="yes" xml:space="preserve">
          <source>Valid &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;stop&lt;/em&gt; must start with &lt;code&gt;(&lt;/code&gt; or &lt;code&gt;[&lt;/code&gt;, in order to specify if the range item is respectively exclusive or inclusive. The special values of &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; for &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;stop&lt;/em&gt; have the special meaning or positively infinite and negatively infinite strings, so for instance the command &lt;strong&gt;ZRANGEBYLEX myzset - +&lt;/strong&gt; is guaranteed to return all the elements in the sorted set, if all the elements have the same score.</source>
          <target state="translated">유효한 &lt;em&gt;시작&lt;/em&gt; 및 &lt;em&gt;중지&lt;/em&gt; 는 범위 항목이 각각 배타적이거나 포괄적인지 지정하려면 &lt;code&gt;(&lt;/code&gt; 또는 &lt;code&gt;[&lt;/code&gt; )로 시작해야 합니다. &lt;em&gt;시작&lt;/em&gt; 및 &lt;em&gt;중지에&lt;/em&gt; 대한 &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 의 특수 값은 특별한 의미 또는 양의 무한 및 음의 무한 문자열을 갖습니다. 예를 들어 &lt;strong&gt;ZRANGEBYLEX myzset-+&lt;/strong&gt; 명령 은 모든 요소의 점수가 같으면 정렬 된 세트의 모든 요소를 ​​반환합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="739d0c927a5b6bf5de3bf0a0a70f11e8b6605c25" translate="yes" xml:space="preserve">
          <source>Valid latitudes are from -85.05112878 to 85.05112878 degrees.</source>
          <target state="translated">유효한 위도는 -85.05112878에서 85.05112878 도입니다.</target>
        </trans-unit>
        <trans-unit id="11b0745206ed577a4e0cb0212fa3f795e389324d" translate="yes" xml:space="preserve">
          <source>Valid longitudes are from -180 to 180 degrees.</source>
          <target state="translated">유효한 경도는 -180에서 180 도입니다.</target>
        </trans-unit>
        <trans-unit id="b54ad204c4093aae41b4ccce059a5c836f7cb080" translate="yes" xml:space="preserve">
          <source>Valid values for &lt;code&gt;event&lt;/code&gt; are: * &lt;code&gt;active-defrag-cycle&lt;/code&gt; * &lt;code&gt;aof-fsync-always&lt;/code&gt; * &lt;code&gt;aof-stat&lt;/code&gt; * &lt;code&gt;aof-rewrite-diff-write&lt;/code&gt; * &lt;code&gt;aof-rename&lt;/code&gt; * &lt;code&gt;aof-write&lt;/code&gt; * &lt;code&gt;aof-write-active-child&lt;/code&gt; * &lt;code&gt;aof-write-alone&lt;/code&gt; * &lt;code&gt;aof-write-pending-fsync&lt;/code&gt; * &lt;code&gt;command&lt;/code&gt; * &lt;code&gt;expire-cycle&lt;/code&gt; * &lt;code&gt;eviction-cycle&lt;/code&gt; * &lt;code&gt;eviction-del&lt;/code&gt; * &lt;code&gt;fast-command&lt;/code&gt; * &lt;code&gt;fork&lt;/code&gt; * &lt;code&gt;rdb-unlink-temp-file&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a554292c4907e31d57221e167caa8ee4a40b176" translate="yes" xml:space="preserve">
          <source>Values are encoded in the same format used by RDB.</source>
          <target state="translated">값은 RDB에서 사용하는 것과 동일한 형식으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="4618a25e91c152415cd438c3e4cfbbbca6e51578" translate="yes" xml:space="preserve">
          <source>Variadic push operations such as &lt;code&gt;LPUSH mylist a b c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LPUSH mylist a b c&lt;/code&gt; 와 같은 다양한 푸시 조작 .</target>
        </trans-unit>
        <trans-unit id="c26d74df8890b7f659e90425275e4ff437fc0eeb" translate="yes" xml:space="preserve">
          <source>WAIT</source>
          <target state="translated">WAIT</target>
        </trans-unit>
        <trans-unit id="d18dc269ffeeecfef8bf81895f8bdd22c193582a" translate="yes" xml:space="preserve">
          <source>WAIT  numreplicas timeout   Wait for the synchronous replication of all the write commands sent in the context of the current connection</source>
          <target state="translated">WAIT numreplicas timeout 현재 연결 컨텍스트에서 전송 된 모든 쓰기 명령의 동기 복제를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="f187dbf97ca89e5c15383b3fa7d810b24a33323e" translate="yes" xml:space="preserve">
          <source>WATCH</source>
          <target state="translated">WATCH</target>
        </trans-unit>
        <trans-unit id="e25bec5041d8fb22a63247724e4a52e81a8ea913" translate="yes" xml:space="preserve">
          <source>WATCH  key [key ...]   Watch the given keys to determine execution of the MULTI/EXEC block</source>
          <target state="translated">WATCH 키 [key ...] 주어진 키를보고 MULTI / EXEC 블록의 실행을 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="56f46978b0612f344f2810a30cecbd3f77aeefb8" translate="yes" xml:space="preserve">
          <source>Wait a few seconds to make sure the replicas processed the latest replication stream from the master.</source>
          <target state="translated">복제본이 마스터의 최신 복제 스트림을 처리하도록 몇 초 동안 기다립니다.</target>
        </trans-unit>
        <trans-unit id="1df4f239ff48dfcc27adb29b5b868391236c490e" translate="yes" xml:space="preserve">
          <source>We can combine &lt;code&gt;COUNT&lt;/code&gt; and &lt;code&gt;RANK&lt;/code&gt;, so that &lt;code&gt;COUNT&lt;/code&gt; will try to return up to the specified number of matches, but starting from the Nth match, as specified by the &lt;code&gt;RANK&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8223ad5f27a7a8a75b46110607ef57167d9c89c" translate="yes" xml:space="preserve">
          <source>We can see the idle time in milliseconds (last field) together with the consumer name and the number of pending messages for this specific consumer.</source>
          <target state="translated">소비자 이름 및이 특정 소비자에 대해 대기중인 메시지 수와 함께 유휴 시간 (밀리 초)을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ddfe3583c26159af60de3cb1f92817c0ca754e3" translate="yes" xml:space="preserve">
          <source>We contact A, and send &lt;code&gt;CLUSTER FORGET D&lt;/code&gt;.</source>
          <target state="translated">A에 연락하여 &lt;code&gt;CLUSTER FORGET D&lt;/code&gt; 를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="175f4045524acb2363e7d02e99215c3355819a20" translate="yes" xml:space="preserve">
          <source>We document the old pattern anyway because certain existing implementations link to this page as a reference. Moreover it is an interesting example of how Redis commands can be used in order to mount programming primitives.</source>
          <target state="translated">어쨌든 기존의 특정 구현이이 페이지에 참조로 연결되기 때문에 이전 패턴을 문서화합니다. 또한 프로그래밍 프리미티브를 마운트하기 위해 Redis 명령을 사용하는 방법에 대한 흥미로운 예입니다.</target>
        </trans-unit>
        <trans-unit id="d70a953eb12ca5534c32b1522836c2f5d45fa9fc" translate="yes" xml:space="preserve">
          <source>We expect the pending entries list for the consumer group &lt;code&gt;group55&lt;/code&gt; to have a message right now: consumer named &lt;code&gt;consumer-123&lt;/code&gt; fetched the message without acknowledging its processing. The simple &lt;a href=&quot;xpending&quot;&gt;XPENDING&lt;/a&gt; form will give us this information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ad35b89e9d8d01f0e23d94bc81a67340dbc7fe" translate="yes" xml:space="preserve">
          <source>We expect the pending entries list for the consumer group &lt;code&gt;group55&lt;/code&gt; to have a message right now: consumer named &lt;code&gt;consumer-123&lt;/code&gt; fetched the message without acknowledging its processing. The simples &lt;a href=&quot;xpending&quot;&gt;XPENDING&lt;/a&gt; form will give us this information:</source>
          <target state="translated">소비자 그룹 그룹 ( &lt;code&gt;group55&lt;/code&gt; 에 대해 보류중인 항목 목록에 지금 메시지가있을 것으로 예상됩니다. &lt;code&gt;consumer-123&lt;/code&gt; 이라는 소비자 는 처리를 승인하지 않고 메시지를 가져 왔습니다. 가장 단순한 &lt;a href=&quot;xpending&quot;&gt;XPENDING의&lt;/a&gt; 형태는 우리에게이 정보를 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="58a24487ec3747a09ea2dfe96023fe8ab9acce63" translate="yes" xml:space="preserve">
          <source>We first add all the commands to the set of commands that &lt;code&gt;karin&lt;/code&gt; is able to execute, but then we remove all the dangerous commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d01fafe80c584d0f494c7517078342535ee8c39" translate="yes" xml:space="preserve">
          <source>We provide two implementations of this pattern using &lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt;, where we assume that the problem to solve is limiting the number of API calls to a maximum of &lt;em&gt;ten requests per second per IP address&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;incr&quot;&gt;INCR을&lt;/a&gt; 사용하여이 패턴의 두 가지 구현을 제공합니다 . 여기서 해결해야 할 문제는 API 호출 &lt;em&gt;수를 IP 주소 당 초당&lt;/em&gt; 최대 &lt;em&gt;10 개의 요청으로&lt;/em&gt; 제한하는 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="d39cbf389a8217cb67f7dd5d0a50fcf7520d5e84" translate="yes" xml:space="preserve">
          <source>What Earth model does it use?</source>
          <target state="translated">어떤 지구 모델을 사용합니까?</target>
        </trans-unit>
        <trans-unit id="d5de6352b29f76f537345f915ed0618a8360f168" translate="yes" xml:space="preserve">
          <source>What happens when a message is delivered to a consumer?</source>
          <target state="translated">메시지가 소비자에게 전달되면 어떻게됩니까?</target>
        </trans-unit>
        <trans-unit id="4b828789b0a2fa7b2f683b315ddc274dc28a6251" translate="yes" xml:space="preserve">
          <source>What key is served first? What client? What element? Priority ordering details.</source>
          <target state="translated">어떤 키가 먼저 제공됩니까? 어떤 고객? 어떤 요소? 우선 순위 주문 세부 사항.</target>
        </trans-unit>
        <trans-unit id="f499f72f01c19b0e0f365138de1b27353f31d411" translate="yes" xml:space="preserve">
          <source>What we are doing here is sending the seed of the PRNG as one of the arguments. This way the script output will be the same given the same arguments, but we are changing one of the arguments in every invocation, generating the random seed client-side. The seed will be propagated as one of the arguments both in the replication link and in the Append Only File, guaranteeing that the same changes will be generated when the AOF is reloaded or when the replica processes the script.</source>
          <target state="translated">우리가 여기서하는 일은 PRNG의 씨앗을 논쟁 중 하나로 보내는 것입니다. 이 방법으로 동일한 인수가 주어지면 스크립트 출력이 동일하지만 모든 호출에서 인수 중 하나를 변경하여 임의의 시드 클라이언트 측을 생성합니다. 시드는 복제 링크와 추가 전용 파일 모두에서 인수 중 하나로 전파되어 AOF를 다시로드하거나 복제본이 스크립트를 처리 할 때 동일한 변경 사항이 생성되도록합니다.</target>
        </trans-unit>
        <trans-unit id="e090d8414ebbcd496638a6ff2a198537439a58f0" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; causes a client to block and a non-zero timeout is specified, the client will unblock returning a &lt;code&gt;nil&lt;/code&gt; multi-bulk value when the specified timeout has expired without a push operation against at least one of the specified keys.</source>
          <target state="translated">경우 &lt;a href=&quot;blpop&quot;&gt;BLPOP을&lt;/a&gt; 차단하는 클라이언트 발생 및 비 - 제로 제한이 지정되면, 클라이언트는 반환 블록화 &lt;code&gt;nil&lt;/code&gt; 지정된 타임 지정된 키 중 적어도 하나에 대해 푸시 동작없이 만료되면 멀티 벌크 값.</target>
        </trans-unit>
        <trans-unit id="0e47f90ed1e7d31987fee0397f45defb59cb883a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; is called, if at least one of the specified keys contains a non-empty list, an element is popped from the head of the list and returned to the caller together with the &lt;code&gt;key&lt;/code&gt; it was popped from.</source>
          <target state="translated">&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; 가 호출 될 때 지정된 키 중 하나 이상에 비어 있지 않은 목록이 포함 된 경우 목록의 헤드에서 요소가 팝업되고 팝업 된 &lt;code&gt;key&lt;/code&gt; 와 함께 호출자에게 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="3ffbe0c44e6e4875a18442896a1a516c63beb5c0" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; returns an element to the client, it also removes the element from the list. This means that the element only exists in the context of the client: if the client crashes while processing the returned element, it is lost forever.</source>
          <target state="translated">&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; 는 요소를 클라이언트에 반환 할 때 해당 요소를 목록에서 제거합니다. 이는 요소가 클라이언트 컨텍스트에만 존재한다는 것을 의미합니다. 반환 된 요소를 처리하는 동안 클라이언트가 충돌하면 요소가 영구적으로 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="3307fa3db89d3a63433cacfb49df9dc54982fc40" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT&lt;/a&gt; is called with a single key, performances are excellent even if in theory constant times to process a dense HyperLogLog are high. This is possible because the &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT&lt;/a&gt; uses caching in order to remember the cardinality previously computed, that rarely changes because most &lt;a href=&quot;pfadd&quot;&gt;PFADD&lt;/a&gt; operations will not update any register. Hundreds of operations per second are possible.</source>
          <target state="translated">때 &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT가&lt;/a&gt; 하나의 키라고 이론 일정 시간이 HyperLogLog이 높은 고밀도을 처리하기 위해도의 경우, 성능은 우수하다. 때문입니다 &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT의&lt;/a&gt; 카디널리티를 기억하기 위해 캐싱 사용 이전에 계산 된 가장 때문에 거의가 변경되지 않는 것을, &lt;a href=&quot;pfadd&quot;&gt;PFADD의&lt;/a&gt; 작업이 어떤 레지스터를 업데이트하지 않습니다. 초당 수백 번의 작업이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="444f34b1316be2c4c966434546394e88b456fb26" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT&lt;/a&gt; is called with multiple keys, an on-the-fly merge of the HyperLogLogs is performed, which is slow, moreover the cardinality of the union can't be cached, so when used with multiple keys &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT&lt;/a&gt; may take a time in the order of magnitude of the millisecond, and should be not abused.</source>
          <target state="translated">여러 키를 사용하여 &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT&lt;/a&gt; 를 호출 하면 HyperLogLog의 즉각적인 병합이 수행됩니다. 또한 느리게 진행됩니다. 또한 통합의 카디널리티를 캐시 할 수 없으므로 여러 키와 함께 사용하는 경우 &lt;a href=&quot;pfcount&quot;&gt;PFCOUNT&lt;/a&gt; 에서 시간이 걸릴 수 있습니다. 밀리 초 단위로 남용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ae40c728758622e3e05b808d2977fa5e75fc7ad7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;wait&quot;&gt;WAIT&lt;/a&gt; returns, all the previous write commands sent in the context of the current connection are guaranteed to be received by the number of replicas returned by &lt;a href=&quot;wait&quot;&gt;WAIT&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;wait&quot;&gt;WAIT가&lt;/a&gt; 리턴 되면 현재 연결 컨텍스트에서 전송 된 모든 이전 쓰기 명령은 &lt;a href=&quot;wait&quot;&gt;WAIT에서&lt;/a&gt; 리턴 한 복제본 수만큼 수신됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7c1b9d40216023a71c49cec036bd3ade97bf1d5" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;xpending&quot;&gt;XPENDING&lt;/a&gt; is called with just a key name and a consumer group name, it just outputs a summary about the pending messages in a given consumer group. In the following example, we create a consumed group and immediatelycreate a pending message by reading from the group with &lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP&lt;/a&gt;.</source>
          <target state="translated">때 &lt;a href=&quot;xpending&quot;&gt;XPENDING는&lt;/a&gt; 단지 키 이름과 소비자 그룹 이름이라고, 그냥 주어진 소비자 그룹에 대기중인 메시지에 대한 요약 정보를 출력합니다. 다음 예에서는 소비 그룹을 작성하고 &lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP&lt;/a&gt; 그룹을 읽어 즉시 보류중인 메시지를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="ec62758615d97d5188d3aaeafc48a7b4674f9f1b" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;xpending&quot;&gt;XPENDING&lt;/a&gt; is called with just a key name and a consumer group name, it just outputs a summary about the pending messages in a given consumer group. In the following example, we create a consumer group and immediately create a pending message by reading from the group with &lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae36a1d98872115e7977502ee9c139fe8579cf4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;COUNT&lt;/code&gt; is used and no match is found, an empty array is returned. However when &lt;code&gt;COUNT&lt;/code&gt; is not used and there are no matches, the command returns NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c54902f72064aa7deb22d13419fe31d3d2bd884" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;COUNT&lt;/code&gt; is used, it is possible to specify 0 as the number of matches, as a way to tell the command we want all the matches found returned as an array of indexes. This is better than giving a very large &lt;code&gt;COUNT&lt;/code&gt; option because it is more general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d56c626262a2858e674323e5239a717091709cd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;IDX&lt;/code&gt; is given the command returns an array with the LCS length and all the ranges in both the strings, start and end offset for each string, where there are matches. When &lt;code&gt;WITHMATCHLEN&lt;/code&gt; is given each array representing a match will also have the length of the match (see examples).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f23c421ce505b3d0fb58e562db30b24838ac386" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;LEN&lt;/code&gt; is given the command returns the length of the longest common substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bbb1dda14f65040ef0d9d10d763c20f1a0952a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;MAXLEN&lt;/code&gt; is used, it is possible to specify 0 as the maximum number of comparisons, as a way to tell the command we want unlimited comparisons. This is better than giving a very large &lt;code&gt;MAXLEN&lt;/code&gt; option because it is more general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959f6691503047ebdaf048475a2e4894baff8e2c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;key&lt;/code&gt; does not exist, it is considered an empty list and no operation is performed.</source>
          <target state="translated">때 &lt;code&gt;key&lt;/code&gt; 존재하지 않는, 그것은 빈 목록 간주되며 어떤 작업이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f26b70cbb6ddaf25fda084b2d1ba7e95d9bf1a10" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;mylist&lt;/code&gt; contains string values and you want to sort them lexicographically, use the &lt;code&gt;ALPHA&lt;/code&gt; modifier:</source>
          <target state="translated">경우 &lt;code&gt;mylist&lt;/code&gt; 문자열 값을 포함하고 사전 식으로 정렬하려면, 사용 &lt;code&gt;ALPHA&lt;/code&gt; 의 수정을 :</target>
        </trans-unit>
        <trans-unit id="b1a44c58128319ad3585e655c8ec84c39732e179" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;key&lt;/em&gt; does not exist, a new string value is created. The string is grown to make sure it can hold a bit at &lt;em&gt;offset&lt;/em&gt;. The &lt;em&gt;offset&lt;/em&gt; argument is required to be greater than or equal to 0, and smaller than 2&lt;sup&gt;32&lt;/sup&gt; (this limits bitmaps to 512MB). When the string at &lt;em&gt;key&lt;/em&gt; is grown, added bits are set to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0715abe5491cb122c13f7521d00e6b24a5e5a2" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;offset&lt;/em&gt; is beyond the string length, the string is assumed to be a contiguous space with 0 bits. When &lt;em&gt;key&lt;/em&gt; does not exist it is assumed to be an empty string, so &lt;em&gt;offset&lt;/em&gt; is always out of range and the value is also assumed to be a contiguous space with 0 bits.</source>
          <target state="translated">경우 &lt;em&gt;오프셋&lt;/em&gt; 문자열 길이 넘어 문자열은 0 비트를 갖는 연속 공간으로 간주된다. 되면 &lt;em&gt;키&lt;/em&gt; , 비어있는 스트링으로 간주하므로 존재하지 않는 &lt;em&gt;오프셋&lt;/em&gt; 범위에서 언제나 그 값은 0 비트를 갖는 연속 공간으로 간주된다.</target>
        </trans-unit>
        <trans-unit id="f85f9f72f3f17f321115fbc108ebe9d711391d76" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;BLOCK&lt;/strong&gt; is used, on timeout a null reply is returned.</source>
          <target state="translated">&lt;strong&gt;BLOCK&lt;/strong&gt; 을 사용 하면 시간 &lt;strong&gt;종료시&lt;/strong&gt; 널 응답이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5afdfdaa646d1040f41727b919def82e86e989cf" translate="yes" xml:space="preserve">
          <source>When ACLs are used, the single argument form of the command, where only the password is specified, assumes that the implicit username is &quot;default&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6e85aae8a5429fcf8c3e5dc89a28c5040d0801" translate="yes" xml:space="preserve">
          <source>When Redis ACLs are used, the command should be given in an extended way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809ce70a8740c0bdd1b823e923a32b6a4fa01194" translate="yes" xml:space="preserve">
          <source>When Redis frees memory, the memory is given back to the allocator, and the allocator may or may not give the memory back to the system. There may be a discrepancy between the &lt;code&gt;used_memory&lt;/code&gt; value and memory consumption as reported by the operating system. It may be due to the fact memory has been used and released by Redis, but not given back to the system. The &lt;code&gt;used_memory_peak&lt;/code&gt; value is generally useful to check this point.</source>
          <target state="translated">Redis가 메모리를 비우면 메모리가 할당 자에게 다시 제공되고 할당자는 메모리를 시스템에 다시 제공하거나 제공하지 않을 수 있습니다. 운영 체제에서보고 한 것처럼 &lt;code&gt;used_memory&lt;/code&gt; 값과 메모리 소비 간에 불일치가있을 수 있습니다 . Redis가 메모리를 사용하고 해제했지만 시스템에 다시 제공되지 않았기 때문일 수 있습니다. &lt;code&gt;used_memory_peak&lt;/code&gt; 의 값은이 점을 확인하기 위해 일반적으로 유용하다.</target>
        </trans-unit>
        <trans-unit id="fa7fcf1b50de91e50300e6d72dc1b1c54350616e" translate="yes" xml:space="preserve">
          <source>When Redis is configured to use an ACL file (with the &lt;code&gt;aclfile&lt;/code&gt; configuration option), this command will reload the ACLs from the file, replacing all the current ACL rules with the ones defined in the file. The command makes sure to have an &lt;em&gt;all or nothing&lt;/em&gt; behavior, that is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ae42132a20b5480945ee5471695580ed79dafa" translate="yes" xml:space="preserve">
          <source>When Redis is configured to use an ACL file (with the &lt;code&gt;aclfile&lt;/code&gt; configuration option), this command will save the currently defined ACLs from the server memory to the ACL file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351edee0900c27092fc0545e5835a9e72de09796" translate="yes" xml:space="preserve">
          <source>When a Lua table contains keys (and their values), the converted Redis reply will &lt;strong&gt;not&lt;/strong&gt; include them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77ebc9bc339051ab15e8f4d5cee8fc3e151c5ec" translate="yes" xml:space="preserve">
          <source>When a client is blocking for multiple keys at the same time, and elements are available at the same time in multiple keys (because of a transaction or a Lua script added elements to multiple lists), the client will be unblocked using the first key that received a push operation (assuming it has enough elements to serve our client, as there may be other clients as well waiting for this key). Basically after the execution of every command Redis will run a list of all the keys that received data AND that have at least a client blocked. The list is ordered by new element arrival time, from the first key that received data to the last. For every key processed, Redis will serve all the clients waiting for that key in a FIFO fashion, as long as there are elements in this key. When the key is empty or there are no longer clients waiting for this key, the next key that received new data in the previous command / transaction / script is processed, and so forth.</source>
          <target state="translated">클라이언트가 동시에 여러 키를 차단하고 있고 여러 개의 키에서 요소를 동시에 사용할 수있는 경우 (트랜잭션 또는 Lua 스크립트가 여러 목록에 요소를 추가했기 때문에) 클라이언트는 첫 번째 키를 사용하여 차단을 해제합니다. 푸시 작업을 수신했습니다 (이 키를 기다리는 다른 클라이언트가있을 수 있으므로 클라이언트에게 서비스를 제공하기에 충분한 요소가 있다고 가정). 기본적으로 모든 명령을 실행 한 후 Redis는 데이터를 수신하고 최소한 클라이언트가 차단 된 모든 키 목록을 실행합니다. 목록은 데이터를받은 첫 번째 키부터 마지막 ​​키까지 새로운 요소 도착 시간에 따라 정렬됩니다. 처리 된 모든 키에 대해 Redis는이 키에 요소가있는 한 해당 키를 기다리는 모든 클라이언트에게 FIFO 방식으로 서비스를 제공합니다. 키가 비어 있거나 더 이상이 키를 기다리는 클라이언트가없는 경우,이전 명령 / 트랜잭션 / 스크립트에서 새 데이터를 수신 한 다음 키 등이 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="7d23b0c61f873eb2f0adb0d7f8fda251e5e64352" translate="yes" xml:space="preserve">
          <source>When a count argument is passed and is positive, the elements are returned as if every selected element is removed from the set (like the extraction of numbers in the game of Bingo). However elements are &lt;strong&gt;not removed&lt;/strong&gt; from the Set. So basically:</source>
          <target state="translated">count 인수가 전달되고 양수이면 요소는 선택된 모든 요소가 세트에서 제거 된 것처럼 반환됩니다 (예 : 빙고 게임에서 숫자 추출). 그러나 요소는 세트에서 &lt;strong&gt;제거되지 않습니다&lt;/strong&gt; . 그래서 기본적으로:</target>
        </trans-unit>
        <trans-unit id="a2d1889d163d82c06bb4149e999c017776739656" translate="yes" xml:space="preserve">
          <source>When a given node receives a &lt;a href=&quot;cluster-meet&quot;&gt;CLUSTER MEET&lt;/a&gt; message, the node specified in the command still does not know the node we sent the command to. So in order for the node to force the receiver to accept it as a trusted node, it sends a &lt;code&gt;MEET&lt;/code&gt; packet instead of a &lt;a href=&quot;ping&quot;&gt;PING&lt;/a&gt; packet. The two packets have exactly the same format, but the former forces the receiver to acknowledge the node as trusted.</source>
          <target state="translated">주어진 노드가 &lt;a href=&quot;cluster-meet&quot;&gt;CLUSTER MEET&lt;/a&gt; 메시지를 수신 해도 명령에 지정된 노드는 여전히 명령을 보낸 노드를 알 수 없습니다. 따라서 노드가 수신자가 신뢰할 수있는 노드로 수신하도록 강제하기 위해 &lt;a href=&quot;ping&quot;&gt;PING&lt;/a&gt; 패킷 대신 &lt;code&gt;MEET&lt;/code&gt; 패킷을 보냅니다 . 두 패킷의 형식은 정확히 동일하지만 전자는 수신자가 노드를 신뢰할 수있는 것으로 인식하도록합니다.</target>
        </trans-unit>
        <trans-unit id="f668069a7ed39c5fa2f0a02a85e379414dcc1840" translate="yes" xml:space="preserve">
          <source>When a script reaches the timeout it is not automatically terminated by Redis since this violates the contract Redis has with the scripting engine to ensure that scripts are atomic. Interrupting a script means potentially leaving the dataset with half-written data. For this reasons when a script executes for more than the specified time the following happens:</source>
          <target state="translated">스크립트가 시간 초과에 도달하면 스크립트가 원자 성임을 보장하기 위해 스크립트 엔진과의 계약을 위반하므로 Redis가 자동으로 종료하지 않습니다. 스크립트를 중단하면 잠재적으로 데이터 세트를 반으로 쓴 데이터로 남겨 둘 수 있습니다. 이러한 이유로 스크립트가 지정된 시간 이상 실행되면 다음이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cde95f95d0ec693d9bb8d3a4357b1cf9cddcf9a4" translate="yes" xml:space="preserve">
          <source>When a slot is set in importing state, the node changes behavior in the following way:</source>
          <target state="translated">슬롯이 가져 오기 상태로 설정되면 노드는 다음과 같은 방식으로 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1ab4dff88086b32e89a46c83f950f054d0000789" translate="yes" xml:space="preserve">
          <source>When a slot is set in migrating state, the node changes behavior in the following way:</source>
          <target state="translated">슬롯이 마이그레이션 상태로 설정되면 노드는 다음과 같은 방식으로 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="3284f9a656f1f04af61fdd0f810ae8e4e5c1d186" translate="yes" xml:space="preserve">
          <source>When a user specified an explicit ID to &lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt;, the minimum valid ID is &lt;code&gt;0-1&lt;/code&gt;, and the user &lt;em&gt;must&lt;/em&gt; specify an ID which is greater than any other ID currently inside the stream, otherwise the command will fail. Usually resorting to specific IDs is useful only if you have another system generating unique IDs (for instance an SQL table) and you really want the Redis stream IDs to match the one of this other system.</source>
          <target state="translated">사용자가 &lt;a href=&quot;xadd&quot;&gt;XADD에&lt;/a&gt; 명시 적 ID를 지정한 경우 , 유효한 최소 ID는 &lt;code&gt;0-1&lt;/code&gt; 이고, 사용자 &lt;em&gt;는&lt;/em&gt; 현재 스트림 내부의 다른 ID보다 큰 ID를 지정 &lt;em&gt;해야합니다&lt;/em&gt; . 그렇지 않으면 명령이 실패합니다. 일반적으로 특정 ID를 사용하는 것은 고유 한 ID를 생성하는 다른 시스템 (예 : SQL 테이블)이 있고 Redis 스트림 ID가이 다른 시스템 중 하나와 일치하도록하려는 경우에만 유용합니다.</target>
        </trans-unit>
        <trans-unit id="73e413531f8bf0cf9989059d75854e4e21a7c89c" translate="yes" xml:space="preserve">
          <source>When additional information is returned as an array of arrays for each item, the first item in the sub-array is always the name of the returned item. The other information is returned in the following order as successive elements of the sub-array.</source>
          <target state="translated">추가 정보가 각 항목에 대한 배열의 배열로 반환되는 경우 하위 배열의 첫 번째 항목은 항상 반환 된 항목의 이름입니다. 다른 정보는 하위 배열의 연속 요소로 다음 순서로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="be9afd55a1e1d3fc899a88fd79a4b6ee3fbec378" translate="yes" xml:space="preserve">
          <source>When all the elements in a sorted set are inserted with the same score, in order to force lexicographical ordering, this command removes all elements in the sorted set stored at &lt;code&gt;key&lt;/code&gt; between the lexicographical range specified by &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">사전 설정 순서를 강제하기 위해 정렬 된 세트의 모든 요소가 동일한 점수로 삽입되면이 명령은 &lt;code&gt;min&lt;/code&gt; 과 &lt;code&gt;max&lt;/code&gt; 로 지정된 사전 사전 범위 사이 에서 &lt;code&gt;key&lt;/code&gt; 저장된 정렬 된 세트의 모든 요소를 ​​제거합니다 .</target>
        </trans-unit>
        <trans-unit id="dd76dd5d921fc34f3442cd7642256fbd8941afbc" translate="yes" xml:space="preserve">
          <source>When all the elements in a sorted set are inserted with the same score, in order to force lexicographical ordering, this command returns all the elements in the sorted set at &lt;code&gt;key&lt;/code&gt; with a value between &lt;code&gt;max&lt;/code&gt; and &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="translated">사전 설정 순서를 강제하기 위해 정렬 된 세트의 모든 요소가 동일한 점수로 삽입되면이 명령은 &lt;code&gt;key&lt;/code&gt; 와 정렬 된 세트의 모든 요소를 &lt;code&gt;max&lt;/code&gt; 와 &lt;code&gt;min&lt;/code&gt; 사이의 값 으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c2590ee8dbf1a775ba21f5b275d103b663a7a9f2" translate="yes" xml:space="preserve">
          <source>When all the elements in a sorted set are inserted with the same score, in order to force lexicographical ordering, this command returns all the elements in the sorted set at &lt;code&gt;key&lt;/code&gt; with a value between &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">사전 설정 순서를 강제하기 위해 정렬 된 세트의 모든 요소가 동일한 점수로 삽입되면이 명령은 &lt;code&gt;key&lt;/code&gt; 에서 정렬 된 세트의 모든 요소를 &lt;code&gt;min&lt;/code&gt; 과 &lt;code&gt;max&lt;/code&gt; 사이의 값 으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1f4b1912a39011d1373563dbfdd4b007dbbdbf0f" translate="yes" xml:space="preserve">
          <source>When all the elements in a sorted set are inserted with the same score, in order to force lexicographical ordering, this command returns the number of elements in the sorted set at &lt;code&gt;key&lt;/code&gt; with a value between &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">사전 설정 순서를 강제하기 위해 정렬 된 세트의 모든 요소가 동일한 점수로 삽입되면이 명령은 &lt;code&gt;key&lt;/code&gt; 에서 정렬 된 세트의 요소 수를 &lt;code&gt;min&lt;/code&gt; 과 &lt;code&gt;max&lt;/code&gt; 사이의 값 으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="214d2973a964b620543f0b2c9d61586a0fa471ed" translate="yes" xml:space="preserve">
          <source>When an operation is performed between strings having different lengths, all the strings shorter than the longest string in the set are treated as if they were zero-padded up to the length of the longest string.</source>
          <target state="translated">길이가 다른 문자열 사이에서 작업을 수행하면 세트에서 가장 긴 문자열보다 짧은 모든 문자열은 가장 긴 문자열의 길이까지 0으로 채워진 것처럼 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="d8995cfed0f1d150bee751108bcb5c155a2e3543" translate="yes" xml:space="preserve">
          <source>When any other error is returned (starting with &lt;code&gt;ERR&lt;/code&gt;) &lt;a href=&quot;migrate&quot;&gt;MIGRATE&lt;/a&gt; guarantees that the key is still only present in the originating instance (unless a key with the same name was also &lt;em&gt;already&lt;/em&gt; present on the target instance).</source>
          <target state="translated">다른 오류가 리턴되면 ( &lt;code&gt;ERR&lt;/code&gt; 로 시작 ) &lt;a href=&quot;migrate&quot;&gt;MIGRATE&lt;/a&gt; 는 동일한 이름의 키가 대상 인스턴스에 &lt;em&gt;이미&lt;/em&gt; 존재 하지 않는 한 키가 여전히 원래 인스턴스에만 존재 함을 보장합니다 .</target>
        </trans-unit>
        <trans-unit id="59dce897cfc9b463bf95d80aa9d3607a1c4cfc5b" translate="yes" xml:space="preserve">
          <source>When blocking sometimes we want to receive just entries that are added to the stream via &lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt; starting from the moment we block. In such a case we are not interested in the history of already added entries. For this use case, we would have to check the stream top element ID, and use such ID in the &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; command line. This is not clean and requires to call other commands, so instead it is possible to use the special &lt;code&gt;$&lt;/code&gt; ID to signal the stream that we want only the new things.</source>
          <target state="translated">때때로 차단할 때 우리는 차단하는 순간부터 &lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt; 를 통해 스트림에 추가 된 항목 만 수신하려고합니다 . 이 경우 이미 추가 된 항목의 기록에 관심이 없습니다. 이 사용 사례에서는 스트림 상단 요소 ID를 확인하고 &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; 명령 행 에서 해당 ID를 사용해야 합니다. 이것은 깨끗하지 않으며 다른 명령을 호출해야하므로 대신 특별한 &lt;code&gt;$&lt;/code&gt; ID를 사용 하여 스트림에만 새로운 것을 원한다는 신호를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74e8af282bcfefc54d0ce64d017574bbccd01062" translate="yes" xml:space="preserve">
          <source>When called to show security events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad52ceb206d675dce23cf01366283fe4ddb1175" translate="yes" xml:space="preserve">
          <source>When called with &lt;a href=&quot;reset&quot;&gt;RESET&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d7951c442b650c3125b1a271b194606894e7f6" translate="yes" xml:space="preserve">
          <source>When called with a single key, returns the approximated cardinality computed by the HyperLogLog data structure stored at the specified variable, which is 0 if the variable does not exist.</source>
          <target state="translated">단일 키로 호출하면 지정된 변수에 저장된 HyperLogLog 데이터 구조에 의해 계산 된 근사 카디널리티를 리턴합니다. 변수가 존재하지 않으면 0입니다.</target>
        </trans-unit>
        <trans-unit id="02d2ede7620c8fbb26280883d152859e2e8b0736" translate="yes" xml:space="preserve">
          <source>When called with either &lt;code&gt;OFF&lt;/code&gt; or &lt;code&gt;SKIP&lt;/code&gt; subcommands, no reply is made. When called with &lt;code&gt;ON&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;OFF&lt;/code&gt; 또는 &lt;code&gt;SKIP&lt;/code&gt; 하위 명령을 사용하여 호출하면 응답이 없습니다. &lt;code&gt;ON&lt;/code&gt; 으로 호출하면 :</target>
        </trans-unit>
        <trans-unit id="ee3a6c041867efc13c8b4f83dd382ea7d3060bfe" translate="yes" xml:space="preserve">
          <source>When called with just the &lt;code&gt;key&lt;/code&gt; argument, return a random element from the set value stored at &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">바로 호출 할 때 &lt;code&gt;key&lt;/code&gt; 인수에 저장된 설정 값에서 임의의 요소를 반환 &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9933aee5d35c10f2ec0bacf3c455dca3f87eee6" translate="yes" xml:space="preserve">
          <source>When called with just the key argument, the operation is similar to &lt;a href=&quot;spop&quot;&gt;SPOP&lt;/a&gt;, however while &lt;a href=&quot;spop&quot;&gt;SPOP&lt;/a&gt; also removes the randomly selected element from the set, &lt;a href=&quot;srandmember&quot;&gt;SRANDMEMBER&lt;/a&gt; will just return a random element without altering the original set in any way.</source>
          <target state="translated">키 인수 만 사용하여 호출하면 작업은 &lt;a href=&quot;spop&quot;&gt;SPOP&lt;/a&gt; 과 유사 하지만 &lt;a href=&quot;spop&quot;&gt;SPOP&lt;/a&gt; 은 임의로 선택된 요소를 세트에서 제거 하지만 &lt;a href=&quot;srandmember&quot;&gt;SRANDMEMBER&lt;/a&gt; 는 원래 세트를 변경하지 않고 임의의 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f0a06926536c4bfbb3475ac826ef5e31a277c149" translate="yes" xml:space="preserve">
          <source>When called with multiple keys, returns the approximated cardinality of the union of the HyperLogLogs passed, by internally merging the HyperLogLogs stored at the provided keys into a temporary HyperLogLog.</source>
          <target state="translated">여러 키로 호출하면 제공된 키에 저장된 HyperLogLog를 임시 HyperLogLog에 내부적으로 병합하여 전달 된 HyperLogLog 통합의 근사 카디널리티를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0a2b0bf00ba805c65c82728d8093113d1865707" translate="yes" xml:space="preserve">
          <source>When called with the &lt;code&gt;count&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43b199a8b6126e51cae18d313987c74e4d69444" translate="yes" xml:space="preserve">
          <source>When called with the filter / value format:</source>
          <target state="translated">필터 / 값 형식으로 호출 된 경우 :</target>
        </trans-unit>
        <trans-unit id="a261810e42aa1178ca1783bc300c9115eb921b1b" translate="yes" xml:space="preserve">
          <source>When called with the three arguments format:</source>
          <target state="translated">세 개의 인수 형식으로 호출 될 때 :</target>
        </trans-unit>
        <trans-unit id="78c9c899f8a4710f75fdba736f81fff74e67c975" translate="yes" xml:space="preserve">
          <source>When called without the &lt;code&gt;count&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ee5d9a35b05e51bf29ade952f93ee29411c4e0" translate="yes" xml:space="preserve">
          <source>When global variable access is attempted the script is terminated and EVAL returns with an error:</source>
          <target state="translated">글로벌 변수 액세스가 시도되면 스크립트가 종료되고 EVAL이 오류와 함께 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2c2bdb6f636cad91fb2bda4ee23fcc769f080cfa" translate="yes" xml:space="preserve">
          <source>When instead the count is negative, the behavior changes and the extraction happens as if you put the extracted element inside the bag again after every extraction, so repeated elements are possible, and the number of elements requested is always returned as we can repeat the same elements again and again, with the exception of an empty Set (non existing key) that will always produce an empty array as a result.</source>
          <target state="translated">대신 카운트가 음수이면 동작이 변경되고 추출 후마다 추출 된 요소를 백에 다시 넣는 것처럼 추출이 발생하므로 반복되는 요소가 가능하며 동일한 요소를 반복 할 수 있으므로 항상 요청 된 요소 수가 반환됩니다. 항상 빈 배열을 생성하는 빈 집합 (기존 키 아님)을 제외하고는 계속해서 요소를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="1aba699431bcc9ad54084b96f70dd3cfe9726c45" translate="yes" xml:space="preserve">
          <source>When iterating Sets encoded as intsets (small sets composed of just integers), or Hashes and Sorted Sets encoded as ziplists (small hashes and sets composed of small individual values), usually all the elements are returned in the first &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; call regardless of the COUNT value.</source>
          <target state="translated">정수로 인코딩 된 Set (정수만으로 구성된 작은 세트) 또는 ziplist (작은 개별 값으로 구성된 작은 해시 및 세트)로 인코딩 된 해시 및 정렬 된 세트를 반복하는 경우 일반적으로 COUNT에 관계없이 모든 요소가 첫 번째 &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; 호출에 반환됩니다 값.</target>
        </trans-unit>
        <trans-unit id="09782d2a99fb48b7bc37bf122ec011fdbf6f0ff9" translate="yes" xml:space="preserve">
          <source>When iterating the key space, or a Set, Hash or Sorted Set that is big enough to be represented by a hash table, assuming no &lt;strong&gt;MATCH&lt;/strong&gt; option is used, the server will usually return &lt;em&gt;count&lt;/em&gt; or a bit more than &lt;em&gt;count&lt;/em&gt; elements per call. Please check the &lt;em&gt;why SCAN may return all the elements at once&lt;/em&gt; section later in this document.</source>
          <target state="translated">반복하는이 키 공간, 또는 충분히 큰 더 없다고 가정, 해시 테이블로 표현 될 수있는 설정, 해시 또는 소트 세트 때 &lt;strong&gt;MATCH의&lt;/strong&gt; 옵션을 사용, 서버는 일반적으로 반환합니다 &lt;em&gt;수를&lt;/em&gt; 나보다 조금 &lt;em&gt;카운트&lt;/em&gt; 호출 당 요소. 이 문서 뒷부분에서 &lt;em&gt;SCAN이 모든 요소를 ​​한 번에 반환 할 수&lt;/em&gt; 있는 &lt;em&gt;이유를&lt;/em&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="71c7e014fcd0d8cb63ba492ae27d6b928bbde099" translate="yes" xml:space="preserve">
          <source>When left unspecified, the default value for &lt;code&gt;count&lt;/code&gt; is 1. Specifying a &lt;code&gt;count&lt;/code&gt; value that is higher than the sorted set's cardinality will not produce an error. When returning multiple elements, the one with the highest score will be the first, followed by the elements with lower scores.</source>
          <target state="translated">지정하지 않은 경우 &lt;code&gt;count&lt;/code&gt; 의 기본값 은 1입니다. 정렬 된 세트의 카디널리티보다 높은 &lt;code&gt;count&lt;/code&gt; 값을 지정 하면 오류가 발생하지 않습니다. 여러 요소를 반환 할 때 가장 높은 점수를 얻은 요소가 첫 번째 요소이고 그 다음에 더 낮은 점수를 가진 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="211482444a8bb15f0419b132f3cc1af74dc280a8" translate="yes" xml:space="preserve">
          <source>When left unspecified, the default value for &lt;code&gt;count&lt;/code&gt; is 1. Specifying a &lt;code&gt;count&lt;/code&gt; value that is higher than the sorted set's cardinality will not produce an error. When returning multiple elements, the one with the lowest score will be the first, followed by the elements with greater scores.</source>
          <target state="translated">지정하지 않은 경우 &lt;code&gt;count&lt;/code&gt; 의 기본값 은 1입니다. 정렬 된 세트의 카디널리티보다 높은 &lt;code&gt;count&lt;/code&gt; 값을 지정 하면 오류가 발생하지 않습니다. 여러 요소를 반환 할 때는 가장 낮은 점수를 가진 요소가 첫 번째 요소이고 그 다음에 더 큰 점수를 가진 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7d4595cfb64936d3f6440b45d7a7ed36a43a0a8" translate="yes" xml:space="preserve">
          <source>When multiple elements are pushed inside a list where there are clients blocking, the behavior is different for Redis 2.4 and Redis 2.6 or newer.</source>
          <target state="translated">클라이언트 차단이있는 목록 내에서 여러 요소를 푸시하면 Redis 2.4 및 Redis 2.6 이상에서 동작이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6b90f2527a2bc6b00afd2387c1456694d73ef4d1" translate="yes" xml:space="preserve">
          <source>When no channels are specified, the client is unsubscribed from all the previously subscribed channels. In this case, a message for every unsubscribed channel will be sent to the client.</source>
          <target state="translated">채널을 지정하지 않으면 클라이언트는 이전에 구독 한 모든 채널에서 구독을 취소합니다. 이 경우 구독 취소 된 모든 채널에 대한 메시지가 클라이언트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="fdb6f67d4fc0a3a04f0f7c8957c10a575f322f03" translate="yes" xml:space="preserve">
          <source>When no parameter is provided, the &lt;code&gt;default&lt;/code&gt; option is assumed.</source>
          <target state="translated">매개 변수가 제공되지 않으면 &lt;code&gt;default&lt;/code&gt; 옵션이 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="b5d25c83a5c898215219edf46cc2b802cdf3d79b" translate="yes" xml:space="preserve">
          <source>When no patterns are specified, the client is unsubscribed from all the previously subscribed patterns. In this case, a message for every unsubscribed pattern will be sent to the client.</source>
          <target state="translated">패턴을 지정하지 않으면 클라이언트는 이전에 구독 한 모든 패턴에서 구독을 취소합니다. 이 경우 구독하지 않은 모든 패턴에 대한 메시지가 클라이언트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="78417cb2a25390c38fe35cd171fb5a5947e744ea" translate="yes" xml:space="preserve">
          <source>When offsets and integer sizes are aligned to bytes boundaries, this is the same as big endian, however when such alignment does not exist, its important to also understand how the bits inside a byte are ordered.</source>
          <target state="translated">오프셋과 정수 크기가 바이트 경계에 정렬되면 이는 빅 엔디안과 동일하지만 이러한 정렬이 존재하지 않으면 바이트 내부의 비트가 정렬되는 방식을 이해하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="108666d32b04e9c8120bc0297356b4a75ef38e99" translate="yes" xml:space="preserve">
          <source>When script effects replication is enabled, the controls about non deterministic functions are disabled. You can, for example, use the &lt;a href=&quot;time&quot;&gt;TIME&lt;/a&gt; or &lt;a href=&quot;srandmember&quot;&gt;SRANDMEMBER&lt;/a&gt; commands inside your scripts freely at any place.</source>
          <target state="translated">스크립트 효과 복제가 활성화되면 비 결정적 기능에 대한 컨트롤이 비활성화됩니다. 예를 들어 스크립트 내 에서 &lt;a href=&quot;time&quot;&gt;TIME&lt;/a&gt; 또는 &lt;a href=&quot;srandmember&quot;&gt;SRANDMEMBER&lt;/a&gt; 명령을 자유롭게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c949e2a31dff272184232d48bbed21c53a8ecbce" translate="yes" xml:space="preserve">
          <source>When script effects replication is selected (see the previous section), it is possible to have more control in the way commands are replicated to replicas and AOF. This is a very advanced feature since &lt;strong&gt;a misuse can do damage&lt;/strong&gt; by breaking the contract that the master, replicas, and AOF, all must contain the same logical content.</source>
          <target state="translated">스크립트 효과 복제를 선택하면 (이전 섹션 참조) 명령이 복제본 및 AOF에 복제되는 방식을보다 세밀하게 제어 할 수 있습니다. 마스터, 복제본 및 AOF는 모두 동일한 논리 컨텐츠를 포함해야한다는 계약을 위반하면 &lt;strong&gt;오용이 손 상될 수&lt;/strong&gt; 있으므로 매우 고급 기능 입니다.</target>
        </trans-unit>
        <trans-unit id="7636c8c8a61350c346336fb982c9ef556a189a7d" translate="yes" xml:space="preserve">
          <source>When the &lt;strong&gt;BLOCK&lt;/strong&gt; command is passed, but there is data to return at least in one of the streams passed, the command is executed synchronously &lt;em&gt;exactly like if the BLOCK option would be missing&lt;/em&gt;.</source>
          <target state="translated">때 &lt;strong&gt;BLOCK의&lt;/strong&gt; 명령을 전달하지만, 전달 된 스트림 중 하나에 적어도 반환 할 데이터가되고, 명령이 동 기적으로 실행 &lt;em&gt;차단 옵션이 누락 될 경우 똑같이&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="bda61f2869adefc9c91081ddbc477199f8833d60" translate="yes" xml:space="preserve">
          <source>When the Append Only File is enabled the shutdown may fail because the system is in a state that does not allow to safely immediately persist on disk.</source>
          <target state="translated">Append Only File이 활성화되면 시스템이 디스크에 즉시 안전하게 지속될 수없는 상태에 있기 때문에 종료가 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1802236c02270cfae3906700b4014b222477ba8" translate="yes" xml:space="preserve">
          <source>When the bitmap is big, there are two alternatives:</source>
          <target state="translated">비트 맵이 큰 경우 두 가지 대안이 있습니다.</target>
        </trans-unit>
        <trans-unit id="63d13bc69a2b5e638a4f2e9a3d237fc957e1d159" translate="yes" xml:space="preserve">
          <source>When the command is called from a regular client connection, it does the following: * Discards the current &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; transaction block, if one exists. * Unwatches all keys &lt;code&gt;WATCH&lt;/code&gt;ed by the connection. * Disables &lt;a href=&quot;client-tracking&quot;&gt;CLIENT TRACKING&lt;/a&gt;, if in use. * Sets the connection to &lt;a href=&quot;readonly&quot;&gt;READONLY&lt;/a&gt; mode. * Cancels the connection's &lt;code&gt;ASKING&lt;/code&gt; mode, if previously set. * Sets &lt;a href=&quot;client-reply&quot;&gt;CLIENT REPLY&lt;/a&gt; to &lt;code&gt;ON&lt;/code&gt;. * Sets the protocol version to RESP2. * &lt;code&gt;SELECT&lt;/code&gt;s database 0. * Exits &lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt; mode, when applicable. * Aborts Pub/Sub's subscription state (&lt;a href=&quot;subscribe&quot;&gt;SUBSCRIBE&lt;/a&gt; and &lt;a href=&quot;psubscribe&quot;&gt;PSUBSCRIBE&lt;/a&gt;), when appropriate. * Deauthenticates the connection, requiring a call &lt;a href=&quot;auth&quot;&gt;AUTH&lt;/a&gt; to reauthenticate when authentication is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ee5d153e0b6d1aba5a802def421855ae90c0c6" translate="yes" xml:space="preserve">
          <source>When the command is called without arguments, it resets all the events, discarding the currently logged latency spike events, and resetting the maximum event time register.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fb5ccdd0c31b389289e55b5474996a5274294b" translate="yes" xml:space="preserve">
          <source>When the connection is in readonly mode, the cluster will send a redirection to the client only if the operation involves keys not served by the replica's master node. This may happen because:</source>
          <target state="translated">연결이 읽기 전용 모드 인 경우 작업에는 복제본의 마스터 노드가 제공하지 않는 키가 작업에 포함 된 경우에만 클러스터가 클라이언트로 리디렉션을 보냅니다. 다음과 같은 이유로 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0425f335ff3cda3215aa3a176f21d76a5ca6ec24" translate="yes" xml:space="preserve">
          <source>When the new form is used the command no longer returns &lt;code&gt;OK&lt;/code&gt; or an error, but instead the number of killed clients, that may be zero.</source>
          <target state="translated">새 양식을 사용하면 명령이 더 이상 &lt;code&gt;OK&lt;/code&gt; 또는 오류를 반환하지 않고 대신 종료 된 클라이언트 수를 0으로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2c445805a9e7bf698eb416f881ba6f49bc531d2b" translate="yes" xml:space="preserve">
          <source>When the script is slow to compute, but the effects can be summarized by a few write commands, it is a shame to re-compute the script on the replicas or when reloading the AOF. In this case to replicate just the effect of the script is much better.</source>
          <target state="translated">스크립트 계산 속도가 느리지 만 몇 가지 쓰기 명령으로 결과를 요약 할 수있는 경우 복제본에서 스크립트를 다시 계산하거나 AOF를 다시로드 할 때 부끄러운 일입니다. 이 경우 스크립트의 효과 만 복제하는 것이 훨씬 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7b1b9ae270926466531ce7bdd9b1a9abbed04ad7" translate="yes" xml:space="preserve">
          <source>When the specified amount of time has elapsed, all the clients are unblocked: this will trigger the processing of all the commands accumulated in the query buffer of every client during the pause.</source>
          <target state="translated">지정된 시간이 경과하면 모든 클라이언트가 차단 해제됩니다. 이렇게하면 일시 중지 중에 모든 클라이언트의 쿼리 버퍼에 누적 된 모든 명령이 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="8eb05f1da75f191f0884c583c801835aa8cd0277" translate="yes" xml:space="preserve">
          <source>When the value at &lt;code&gt;key&lt;/code&gt; is not a list, an error is returned.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 의 값 이 목록이 아닌 경우 오류가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="0aba433e5fcdd9ec4a7aaef9936a05505bfb779c" translate="yes" xml:space="preserve">
          <source>When this form is used the &lt;code&gt;NOKEY&lt;/code&gt; status code is only returned when none of the keys is present in the instance, otherwise the command is executed, even if just a single key exists.</source>
          <target state="translated">이 형식을 사용하면 인스턴스에 키가 없을 때만 &lt;code&gt;NOKEY&lt;/code&gt; 상태 코드가 반환됩니다. 그렇지 않으면 단일 키만 있어도 명령이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="71523575e42f8410dc6799c1a7fe4f0075f3bdae" translate="yes" xml:space="preserve">
          <source>When this happens we can't just call &lt;a href=&quot;del&quot;&gt;DEL&lt;/a&gt; against the key to remove the lock and then try to issue a &lt;a href=&quot;setnx&quot;&gt;SETNX&lt;/a&gt;, as there is a race condition here, when multiple clients detected an expired lock and are trying to release it.</source>
          <target state="translated">이러한 상황이 발생 하면 여러 클라이언트가 만료 된 잠금을 감지하여 잠금 해제하려고 할 때 경쟁 조건이 있으므로 잠금을 제거하기 위해 키에 대해 &lt;a href=&quot;del&quot;&gt;DEL&lt;/a&gt; 을 호출 한 다음 &lt;a href=&quot;setnx&quot;&gt;SETNX&lt;/a&gt; 를 발행 하려고 시도 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ed7b57889af358f534ebcff13a4859b0728def7e" translate="yes" xml:space="preserve">
          <source>When tracking is enabled Redis remembers the keys that the connection requested, in order to send later invalidation messages when such keys are modified. Invalidation messages are sent in the same connection (only available when the RESP3 protocol is used) or redirected in a different connection (available also with RESP2 and Pub/Sub). A special &lt;em&gt;broadcasting&lt;/em&gt; mode is available where clients participating in this protocol receive every notification just subscribing to given key prefixes, regardless of the keys that they requested. Given the complexity of the argument please refer to &lt;a href=&quot;https://redis.io/topics/client-side-caching&quot;&gt;the main client side caching documentation&lt;/a&gt; for the details. This manual page is only a reference for the options of this subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365474b17f94bc667553675122a819f05b9a2ddb" translate="yes" xml:space="preserve">
          <source>When tracking is enabled Redis, using the &lt;a href=&quot;client-tracking&quot;&gt;CLIENT TRACKING&lt;/a&gt; command, it is possible to specify the &lt;code&gt;OPTIN&lt;/code&gt; or &lt;code&gt;OPTOUT&lt;/code&gt; options, so that keys in read only commands are not automatically remembered by the server to be invalidated later. When we are in &lt;code&gt;OPTIN&lt;/code&gt; mode, we can enable the tracking of the keys in the next command by calling &lt;code&gt;CLIENT CACHING yes&lt;/code&gt; immediately before it. Similarly when we are in &lt;code&gt;OPTOUT&lt;/code&gt; mode, and keys are normally tracked, we can avoid the keys in the next command to be tracked using &lt;code&gt;CLIENT CACHING no&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9369493e521d0f5bfa4b5285118bddaf4c3ed126" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;watch&quot;&gt;WATCH&lt;/a&gt;, &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; can return a &lt;a href=&quot;https://redis.io/topics/protocol#nil-reply&quot;&gt;Null reply&lt;/a&gt; if the execution was aborted.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;watch&quot;&gt;시계를&lt;/a&gt; , &lt;a href=&quot;exec&quot;&gt;EXEC는&lt;/a&gt; 반환 할 수 있습니다 &lt;a href=&quot;https://redis.io/topics/protocol#nil-reply&quot;&gt;널 응답을&lt;/a&gt; 실행이 중단 된 경우.</target>
        </trans-unit>
        <trans-unit id="03fb3b3e279fe5941d3058ae5c0bbfd517e2ed4a" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;watch&quot;&gt;WATCH&lt;/a&gt;, &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; will execute commands only if the watched keys were not modified, allowing for a &lt;a href=&quot;https://redis.io/topics/transactions#cas&quot;&gt;check-and-set mechanism&lt;/a&gt;.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;watch&quot;&gt;시계를&lt;/a&gt; , &lt;a href=&quot;exec&quot;&gt;EXEC는&lt;/a&gt; A의 허용, 감시 키가 수정되지 않은 경우에만 명령을 실행합니다 &lt;a href=&quot;https://redis.io/topics/transactions#cas&quot;&gt;체크인 및 세트 메커니즘&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ff122098db2ca4b2a53bd2c8a430c8385708d04" translate="yes" xml:space="preserve">
          <source>When using Redis Cluster, the &lt;a href=&quot;select&quot;&gt;SELECT&lt;/a&gt; command cannot be used, since Redis Cluster only supports database zero. In the case of Redis Cluster, having multiple databases would be useless, and a worthless source of complexity, because anyway commands operating atomically on a single database would not be possible with the Redis Cluster design and goals.</source>
          <target state="translated">Redis Cluster를 사용하는 경우 Redis Cluster는 데이터베이스 0 만 지원하므로 &lt;a href=&quot;select&quot;&gt;SELECT&lt;/a&gt; 명령을 사용할 수 없습니다. Redis Cluster의 경우 단일 데이터베이스에서 원자 적으로 작동하는 명령이 Redis Cluster 설계 및 목표로는 불가능하기 때문에 여러 데이터베이스를 갖는 것은 쓸모없고 가치가없는 복잡한 소스가됩니다.</target>
        </trans-unit>
        <trans-unit id="f203026f3a1006a436b10ac59c88ab2fe45cb84b" translate="yes" xml:space="preserve">
          <source>When using Redis Cluster, the &lt;a href=&quot;select&quot;&gt;SELECT&lt;/a&gt; command cannot be used, since Redis Cluster only supports database zero. In the case of a Redis Cluster, having multiple databases would be useless and an unnecessary source of complexity. Commands operating atomically on a single database would not be possible with the Redis Cluster design and goals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a47d57d3ccc48f432095e2200a9663143b671f" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;STOREDIST&lt;/code&gt; option, the command stores the items in a sorted set populated with their distance from the center of the circle or box, as a floating-point number, in the same unit specified for that shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07753d61a0c43c5e1450ed315380eda68ca6dc90" translate="yes" xml:space="preserve">
          <source>When we want to be sure to define an user from scratch, without caring if it had previously defined rules associated, we can use the special rule &lt;code&gt;reset&lt;/code&gt; as first rule, in order to flush all the other existing rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91435698deee68490867362db518895697a1efba" translate="yes" xml:space="preserve">
          <source>When you read with &lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP&lt;/a&gt;, the server will &lt;em&gt;remember&lt;/em&gt; that a given message was delivered to you: the message will be stored inside the consumer group in what is called a Pending Entries List (PEL), that is a list of message IDs delivered but not yet acknowledged.</source>
          <target state="translated">&lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP으로&lt;/a&gt; 읽을 때 서버는 지정된 메시지가 전달되었음을 &lt;em&gt;기억&lt;/em&gt; 합니다. 메시지는 PEL (Pending Entries List)이라는 메시지의 소비자 그룹에 저장됩니다. 즉, 전달 된 메시지 ID 목록입니다. 아직 인정했다.</target>
        </trans-unit>
        <trans-unit id="6a35b41e1d31b87470e6d1d43bddd43a0e835653" translate="yes" xml:space="preserve">
          <source>Where an integer type is expected, it can be composed by prefixing with &lt;code&gt;i&lt;/code&gt; for signed integers and &lt;code&gt;u&lt;/code&gt; for unsigned integers with the number of bits of our integer type. So for example &lt;code&gt;u8&lt;/code&gt; is an unsigned integer of 8 bits and &lt;code&gt;i16&lt;/code&gt; is a signed integer of 16 bits.</source>
          <target state="translated">정수 유형이 예상되는 경우 부호있는 정수의 경우 &lt;code&gt;i&lt;/code&gt; 로 시작하고 정수 유형의 비트 수로 부호없는 정수의 경우 &lt;code&gt;u&lt;/code&gt; 로 접두어로 구성 할 수 있습니다 . 예를 들어 &lt;code&gt;u8&lt;/code&gt; 은 8 비트의 부호없는 정수이고 &lt;code&gt;i16&lt;/code&gt; 은 16 비트의 부호있는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="f02b4c0414a9fc9e1bc6e0376aca02edf648b5bb" translate="yes" xml:space="preserve">
          <source>Where bytes or other quantities are specified, it is not possible to use the &lt;code&gt;redis.conf&lt;/code&gt; abbreviated form (&lt;code&gt;10k&lt;/code&gt;, &lt;code&gt;2gb&lt;/code&gt; ... and so forth), everything should be specified as a well-formed 64-bit integer, in the base unit of the configuration directive.</source>
          <target state="translated">바이트 또는 다른 수량이 지정된 경우 &lt;code&gt;redis.conf&lt;/code&gt; 약어 형식 ( &lt;code&gt;10k&lt;/code&gt; , &lt;code&gt;2gb&lt;/code&gt; ... 등) 을 사용할 수 없습니다 . 모든 기본 단위에서 올바른 형식의 64 비트 정수로 지정해야합니다. 구성 지시문.</target>
        </trans-unit>
        <trans-unit id="21e96c24ad72668a7a4a76394b426e6e4cfd5aa5" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; does not provide guarantees about the number of elements returned at every iteration, it is possible to empirically adjust the behavior of &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; using the &lt;strong&gt;COUNT&lt;/strong&gt; option. Basically with COUNT the user specified the &lt;em&gt;amount of work that should be done at every call in order to retrieve elements from the collection&lt;/em&gt;. This is &lt;strong&gt;just a hint&lt;/strong&gt; for the implementation, however generally speaking this is what you could expect most of the times from the implementation.</source>
          <target state="translated">하지만 &lt;a href=&quot;scan&quot;&gt;SCAN은&lt;/a&gt; 모든 반복에 반환 된 요소의 수에 대해 보증을 제공하지 않습니다, 경험적으로의 동작을 조정할 수 &lt;a href=&quot;scan&quot;&gt;SCAN을&lt;/a&gt; 사용 &lt;strong&gt;COUNT의&lt;/strong&gt; 옵션을 선택합니다. 기본적으로 COUNT에서는 사용자 &lt;em&gt;가 컬렉션에서 요소를 검색하기 위해 모든 호출에서 수행해야하는 작업량을&lt;/em&gt; 지정 &lt;em&gt;했습니다&lt;/em&gt; . 이것은 구현에 &lt;strong&gt;대한 힌트 일 뿐이지&lt;/strong&gt; 만 일반적으로 구현에서 대부분의 시간을 기대할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdd3db136923e6b534f552c2d3cf5ff970987981" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;xrange&quot;&gt;XRANGE&lt;/a&gt; returns items in a range of IDs, &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; is more suited in order to consume the stream starting from the first entry which is greater than any other entry we saw so far. So what we pass to &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; is, for each stream, the ID of the last element that we received from that stream.</source>
          <target state="translated">하지만 &lt;a href=&quot;xrange&quot;&gt;XRANGE이&lt;/a&gt; ID 범위의 항목을 반환 &lt;a href=&quot;xread&quot;&gt;XREAD는&lt;/a&gt; 더 우리가 지금까지 본 다른 항목보다 큰 첫 번째 항목에서 시작하여 스트림을 소비하기 위해 적합합니다. 따라서 &lt;a href=&quot;xread&quot;&gt;XREAD에&lt;/a&gt; 전달하는 것은 각 스트림에 대해 해당 스트림에서받은 마지막 요소의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="88256a815e0657a483e440175cd13597e9d5aa6a" translate="yes" xml:space="preserve">
          <source>While exclusive range intervals are only available from Redis 6.2, it is still possible to use a similar stream iteration pattern with earlier versions. You start fetching from the stream the same way as described above to obtain the first entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bca73c8acea1a652a640a6f60e7689ea8279e95" translate="yes" xml:space="preserve">
          <source>While in the producer side we'll use simply:</source>
          <target state="translated">생산자 측에서는 간단하게 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7c0e17e27e0496071209fca63c12a067afb89764" translate="yes" xml:space="preserve">
          <source>While the same element can't be repeated in a sorted set since every element is unique, it is possible to add multiple different elements &lt;em&gt;having the same score&lt;/em&gt;. When multiple elements have the same score, they are &lt;em&gt;ordered lexicographically&lt;/em&gt; (they are still ordered by score as a first key, however, locally, all the elements with the same score are relatively ordered lexicographically).</source>
          <target state="translated">모든 요소가 고유하기 때문에 동일한 요소를 정렬 된 세트로 반복 할 수 없지만 &lt;em&gt;같은 점수를 가진&lt;/em&gt; 여러 개의 다른 요소를 추가 할 수 있습니다 . 여러 요소가 동일한 점수를 갖는 경우 &lt;em&gt;사전 식으로&lt;/em&gt; 정렬됩니다 (여전히 첫 번째 키로 점수로 정렬되지만 로컬에서는 동일한 점수를 가진 모든 요소가 사전 식으로 상대적으로 정렬됩니다).</target>
        </trans-unit>
        <trans-unit id="faa0e8655432999d785846c09a504699c423a816" translate="yes" xml:space="preserve">
          <source>While the time complexity for this operation is O(N), the constant times are fairly low. For example, Redis running on an entry level laptop can scan a 1 million key database in 40 milliseconds.</source>
          <target state="translated">이 연산의 시간 복잡도는 O (N)이지만 상수 시간은 상당히 낮습니다. 예를 들어 보급형 랩톱에서 실행되는 Redis는 40 밀리 초 내에 1 백만 개의 키 데이터베이스를 스캔 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75b48078eb932b5cb40c7aa69416f977a376c34b" translate="yes" xml:space="preserve">
          <source>Why SCAN may return all the items of an aggregate data type in a single call?</source>
          <target state="translated">SCAN이 단일 호출로 집계 데이터 유형의 모든 항목을 반환 할 수있는 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="6774ddf6e2ea44a8275c548051410620bab8eba5" translate="yes" xml:space="preserve">
          <source>Will generate the following:</source>
          <target state="translated">다음을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="e1fe1e67413d581c991f5221192d9e1d386431de" translate="yes" xml:space="preserve">
          <source>Will return all elements with &lt;code&gt;1 &amp;lt; score &amp;lt;= 5&lt;/code&gt; while:</source>
          <target state="translated">다음과 같은 동안 &lt;code&gt;1 &amp;lt; score &amp;lt;= 5&lt;/code&gt; 모든 요소를 ​​반환합니다 .</target>
        </trans-unit>
        <trans-unit id="94c4c27cb05eba870b183d02b1a609fe9e1ea895" translate="yes" xml:space="preserve">
          <source>Will return all the elements with &lt;code&gt;5 &amp;lt; score &amp;lt; 10&lt;/code&gt; (5 and 10 excluded).</source>
          <target state="translated">&lt;code&gt;5 &amp;lt; score &amp;lt; 10&lt;/code&gt; (5 및 10 제외)의 모든 요소를 ​​반환합니다 .</target>
        </trans-unit>
        <trans-unit id="894d5e0ad9ce405ef4fb756fe8055963159cfadf" translate="yes" xml:space="preserve">
          <source>Will set the first i8 integer at offset 0 and the second at offset 8. This way you don't have to do the math yourself inside your client if what you want is a plain array of integers of a given size.</source>
          <target state="translated">오프셋 0에서 첫 번째 i8 정수를 설정하고 오프셋 8에서 두 번째 i8 정수를 설정합니다. 원하는 방식으로 주어진 크기의 정수 배열이 필요한 경우 클라이언트 내부에서 직접 수학을 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cf10ad559647abb5c8bab42f73ec14d7f8af0292" translate="yes" xml:space="preserve">
          <source>With Redis v4.0.1 64-bit and &lt;strong&gt;jemalloc&lt;/strong&gt;, the empty string measures as follows:</source>
          <target state="translated">Redis v4.0.1 64 비트 및 &lt;strong&gt;jemalloc&lt;/strong&gt; 을 사용하면 빈 문자열은 다음과 같이 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="ec661db3a798a1855f025d52c2fe8c0cd35d7515" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;AGGREGATE&lt;/code&gt; option, it is possible to specify how the results of the union are aggregated. This option defaults to &lt;code&gt;SUM&lt;/code&gt;, where the score of an element is summed across the inputs where it exists. When this option is set to either &lt;code&gt;MIN&lt;/code&gt; or &lt;code&gt;MAX&lt;/code&gt;, the resulting set will contain the minimum or maximum score of an element across the inputs where it exists.</source>
          <target state="translated">&lt;code&gt;AGGREGATE&lt;/code&gt; 옵션을 사용하면 통합 결과를 집계하는 방법을 지정할 수 있습니다. 이 옵션의 기본값은 &lt;code&gt;SUM&lt;/code&gt; 이며, 요소의 점수는 요소가 존재하는 입력에서 합산됩니다. 이 옵션이 &lt;code&gt;MIN&lt;/code&gt; 또는 &lt;code&gt;MAX&lt;/code&gt; 로 설정되면 결과 집합에는 요소가 존재하는 입력에서 요소의 최소 또는 최대 점수가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="50b1405945945facc69fb20f7d723bfb99db9e44" translate="yes" xml:space="preserve">
          <source>With the new form it is possible to kill clients by different attributes instead of killing just by address. The following filters are available:</source>
          <target state="translated">새로운 형식을 사용하면 주소별로 죽이는 대신 다른 속성으로 클라이언트를 죽일 수 있습니다. 다음과 같은 필터를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0799386d8ece7a29459c32e7790ea42266a228aa" translate="yes" xml:space="preserve">
          <source>Within a consumer group, a given consumer (that is, just a client consuming messages from the stream), has to identify with an unique &lt;em&gt;consumer name&lt;/em&gt;. Which is just a string.</source>
          <target state="translated">소비자 그룹 내에서 지정된 소비자 (즉, 스트림에서 메시지를 소비하는 클라이언트)는 고유 한 &lt;em&gt;소비자 이름&lt;/em&gt; 으로 식별해야합니다 . 이것은 단지 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0f3e4aaa240c1548a4c9429dbad46917966e880e" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;ASKING&lt;/code&gt; the behavior is the same as usually. This guarantees that clients with a broken hash slots mapping will not write for error in the target node, creating a new version of a key that has yet to be migrated.</source>
          <target state="translated">&lt;code&gt;ASKING&lt;/code&gt; 않고 동작은 일반적으로 동일합니다. 이렇게하면 해시 슬롯 매핑이 깨진 클라이언트가 대상 노드에 오류를 기록하지 않고 아직 마이그레이션되지 않은 새 버전의 키를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d48a4c4f3594b39719f619245890353a2709bae6" translate="yes" xml:space="preserve">
          <source>Without any &lt;code&gt;WITH&lt;/code&gt; option specified, the command just returns a linear array like [&quot;New York&quot;,&quot;Milan&quot;,&quot;Paris&quot;].</source>
          <target state="translated">&lt;code&gt;WITH&lt;/code&gt; 옵션을 지정 하지 않으면 이 명령은 [ &quot;New York&quot;, &quot;Milan&quot;, &quot;Paris&quot;]와 같은 선형 배열 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="400c8adf856e4ac8a8a6ac9b587c616fb64274c1" translate="yes" xml:space="preserve">
          <source>Without consumer groups, just using &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt;, all the clients are served with all the entries arriving in a stream. Instead using consumer groups with &lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP&lt;/a&gt;, it is possible to create groups of clients that consume different parts of the messages arriving in a given stream. If, for instance, the stream gets the new entires A, B, and C and there are two consumers reading via a consumer group, one client will get, for instance, the messages A and C, and the other the message B, and so forth.</source>
          <target state="translated">소비자 그룹이 없으면 &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; 만 사용 하면 모든 클라이언트가 스트림에 도착하는 모든 항목과 함께 제공됩니다. &lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP&lt;/a&gt; 과 함께 소비자 그룹을 사용하는 대신 지정된 스트림에 도착하는 메시지의 다른 부분을 소비하는 클라이언트 그룹을 만들 수 있습니다. 예를 들어 스트림이 새로운 전체 A, B 및 C를 가져오고 소비자 그룹을 통해 읽는 두 명의 소비자가있는 경우 한 클라이언트는 예를 들어 메시지 A와 C를 가져오고 다른 클라이언트는 B를 가져옵니다. 등등.</target>
        </trans-unit>
        <trans-unit id="bdfc2780d681303ac8334620cb377f7463be72da" translate="yes" xml:space="preserve">
          <source>Without consumer groups, just using &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt;, all the clients are served with all the entries arriving in a stream. Instead using consumer groups with &lt;a href=&quot;xreadgroup&quot;&gt;XREADGROUP&lt;/a&gt;, it is possible to create groups of clients that consume different parts of the messages arriving in a given stream. If, for instance, the stream gets the new entries A, B, and C and there are two consumers reading via a consumer group, one client will get, for instance, the messages A and C, and the other the message B, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924b2682d1c46abc89231526814055bbb7516ad2" translate="yes" xml:space="preserve">
          <source>Without modifiers the string representing the longest common substring is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e630a7240130bc3af7f3d25b607f1bbc7d95427" translate="yes" xml:space="preserve">
          <source>XACK</source>
          <target state="translated">XACK</target>
        </trans-unit>
        <trans-unit id="238a60725d880b00a411887e084d414d62068fd4" translate="yes" xml:space="preserve">
          <source>XACK  key group ID [ID ...]   Marks a pending message as correctly processed, effectively removing it from the pending entries list of the consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the IDs we were actually able to resolve in the PEL.</source>
          <target state="translated">XACK 키 그룹 ID [ID ...] 보류중인 메시지를 올바르게 처리 된 것으로 표시하여 소비자 그룹의 보류중인 항목 목록에서 효과적으로 제거합니다. 명령의 반환 값은 성공적으로 승인 된 메시지 수, 즉 실제로 PEL에서 확인할 수있는 ID입니다.</target>
        </trans-unit>
        <trans-unit id="af6d29b2dcf05d4b2ed23e3102a0a31b6e241bff" translate="yes" xml:space="preserve">
          <source>XADD</source>
          <target state="translated">XADD</target>
        </trans-unit>
        <trans-unit id="e69d374462681c5664a1fcdd09ad239a80dd5647" translate="yes" xml:space="preserve">
          <source>XADD  key ID field string [field string ...]   Appends a new entry to a stream</source>
          <target state="translated">XADD 키 ID 필드 문자열 [field string ...] 스트림에 새 항목을 추가합니다</target>
        </trans-unit>
        <trans-unit id="730bb6ffd1ad122dcda7c67a4e865131eefbdfb6" translate="yes" xml:space="preserve">
          <source>XADD  key [MAXLEN [=|~] length] [NOMKSTREAM] *|ID field value [field value ...]   Appends a new entry to a stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b8fb22138bc8e941ddecb6458cc91162943a39" translate="yes" xml:space="preserve">
          <source>XCLAIM</source>
          <target state="translated">XCLAIM</target>
        </trans-unit>
        <trans-unit id="69cd30c46b283939fd7c08ea80c2b13ecf4bd239" translate="yes" xml:space="preserve">
          <source>XCLAIM  key group consumer min-idle-time ID [ID ...] [IDLE ms] [TIME ms-unix-time] [RETRYCOUNT count] [FORCE] [JUSTID]   Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer.</source>
          <target state="translated">XCLAIM 키 그룹 소비자 최소 유휴 시간 ID [ID ...] [IDLE ms] [TIME ms-unix-time] [RETRYCOUNT 수] [FORCE] [JUSTID] 소비자의 메시지 소유권을 변경 (또는 획득)합니다. 메시지가 지정된 소비자에게 전달 된 것처럼 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="7c1a89d20036b7688ea139507f1afdc9a29953de" translate="yes" xml:space="preserve">
          <source>XDEL</source>
          <target state="translated">XDEL</target>
        </trans-unit>
        <trans-unit id="ab0fa30c58e1667f7c50bef9c640975c83dbbca6" translate="yes" xml:space="preserve">
          <source>XDEL  key ID [ID ...]   Removes the specified entries from the stream. Returns the number of items actually deleted, that may be different from the number of IDs passed in case certain IDs do not exist.</source>
          <target state="translated">XDEL 키 ID [ID ...] 스트림에서 지정된 항목을 제거합니다. 실제로 삭제 된 항목 수를 반환합니다. 특정 ID가 존재하지 않는 경우 전달 된 ID 수와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc322d1c9f4b420b88e62a454aedb033f028dab6" translate="yes" xml:space="preserve">
          <source>XGROUP</source>
          <target state="translated">XGROUP</target>
        </trans-unit>
        <trans-unit id="240272c2fbe7ae455327d8a46a0aa8046c22c6fc" translate="yes" xml:space="preserve">
          <source>XGROUP  [CREATE key groupname ID|$ [MKSTREAM]] [SETID key groupname ID|$] [DESTROY key groupname] [CREATECONSUMER key groupname consumername] [DELCONSUMER key groupname consumername]   Create, destroy, and manage consumer groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7698763ddd9e2c448408316d6ce4417dffc8b68" translate="yes" xml:space="preserve">
          <source>XGROUP  [CREATE key groupname id-or-$] [SETID key groupname id-or-$] [DESTROY key groupname] [DELCONSUMER key groupname consumername]   Create, destroy, and manage consumer groups.</source>
          <target state="translated">XGROUP [CREATE 키 그룹 이름 ID 또는 $] [SETID 키 그룹 이름 ID 또는 $] [DESTROY 키 그룹 이름] [DELCONSUMER 키 그룹 이름 consumername] 소비자 그룹을 생성, 삭제 및 관리합니다.</target>
        </trans-unit>
        <trans-unit id="c6dad2f9d389a88a2d5423b140bfb5d329380ff9" translate="yes" xml:space="preserve">
          <source>XINFO</source>
          <target state="translated">XINFO</target>
        </trans-unit>
        <trans-unit id="26c4995225a5e2ca6cbd4df2dc968964aa3106e4" translate="yes" xml:space="preserve">
          <source>XINFO  [CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]   Get information on streams and consumer groups</source>
          <target state="translated">XINFO [CONSUMERS 키 그룹 이름] [GROUPS 키] [STREAM 키] [도움말] 스트림 및 소비자 그룹에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b6ee4a8b7a891baba7c913a8af31780be7fd39ad" translate="yes" xml:space="preserve">
          <source>XLEN</source>
          <target state="translated">XLEN</target>
        </trans-unit>
        <trans-unit id="5d3643676d949125bc526c23ac7661d998089a21" translate="yes" xml:space="preserve">
          <source>XLEN  key   Return the number of entires in a stream</source>
          <target state="translated">XLEN 키 스트림의 전체 수를 반환</target>
        </trans-unit>
        <trans-unit id="600e13cb5aa0cd8debe85551cb8a3e84d6db4207" translate="yes" xml:space="preserve">
          <source>XLEN  key   Return the number of entries in a stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b65339f2697b1c699811da74222bbd0da65d870" translate="yes" xml:space="preserve">
          <source>XPENDING</source>
          <target state="translated">XPENDING</target>
        </trans-unit>
        <trans-unit id="900081fa917259384216ff4f2114776b43ac3b8a" translate="yes" xml:space="preserve">
          <source>XPENDING  key group [[IDLE min-idle-time] start end count [consumer]]   Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc1509063ccb300647516e5a0736301ae8f16c4" translate="yes" xml:space="preserve">
          <source>XPENDING  key group [start end count] [consumer]   Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.</source>
          <target state="translated">XPENDING 키 그룹 [start end count] [consumer] 메시지가 페치되었지만 승인되지 않은 스트림 소비자 그룹 보류 항목 목록에서 정보 및 항목을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d1e36a585685d1c605bc47363901884a6eaa3ba7" translate="yes" xml:space="preserve">
          <source>XRANGE</source>
          <target state="translated">XRANGE</target>
        </trans-unit>
        <trans-unit id="7e9287af270b58d717c34831e88430ad997da595" translate="yes" xml:space="preserve">
          <source>XRANGE  key start end [COUNT count]   Return a range of elements in a stream, with IDs matching the specified IDs interval</source>
          <target state="translated">XRANGE 키 시작 끝 [카운트 수] 지정된 ID 간격과 일치하는 ID를 가진 스트림의 요소 범위를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="74d3c0a39e46c4eb449a52d32c8a5abbe1061892" translate="yes" xml:space="preserve">
          <source>XREAD</source>
          <target state="translated">XREAD</target>
        </trans-unit>
        <trans-unit id="17f4903694ccef37d4648c4a5f1ae472dacf86b6" translate="yes" xml:space="preserve">
          <source>XREAD  [COUNT count] [BLOCK milliseconds] STREAMS key [key ...] ID [ID ...]   Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream. Can block.</source>
          <target state="translated">XREAD [카운트 수] [BLOCK 밀리 초] STREAMS 키 [키 ...] ID [ID ...] 각 스트림에 대해 호출자가보고 한 것보다 ID가 큰 여러 스트림에서 보지 못한 요소를 반환합니다. 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="846b3a7d4e31a4e9d17286ae266f99e375041028" translate="yes" xml:space="preserve">
          <source>XREADGROUP</source>
          <target state="translated">XREADGROUP</target>
        </trans-unit>
        <trans-unit id="248bac627c2fef68faf3fb58c8565b88ea2fff82" translate="yes" xml:space="preserve">
          <source>XREADGROUP  GROUP group consumer [COUNT count] [BLOCK milliseconds] [NOACK] STREAMS key [key ...] ID [ID ...]   Return new entries from a stream using a consumer group, or access the history of the pending entries for a given consumer. Can block.</source>
          <target state="translated">XREADGROUP GROUP 그룹 소비자 [카운트 수] [BLOCK 밀리 초] [NOACK] STREAMS 키 [키 ...] ID [ID ...] 소비자 그룹을 사용하여 스트림에서 새 항목을 반환하거나 보류중인 항목의 기록에 액세스 주어진 소비자. 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4997b60ad825263d8b96f62cc9d430670501aee2" translate="yes" xml:space="preserve">
          <source>XREVRANGE</source>
          <target state="translated">XREVRANGE</target>
        </trans-unit>
        <trans-unit id="6acfcd338f4f89c5327717d107164d5f4a0348c2" translate="yes" xml:space="preserve">
          <source>XREVRANGE  key end start [COUNT count]   Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order (from greater to smaller IDs) compared to XRANGE</source>
          <target state="translated">XREVRANGE 키 종료 시작 [카운트 수] 지정된 ID 간격과 일치하는 ID를 XRANGE에 비해 역순으로 (더 큰 ID에서 작은 ID로) 스트림의 요소 범위를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="07d95fde827764d259d6f7d12828416866a07221" translate="yes" xml:space="preserve">
          <source>XTRIM</source>
          <target state="translated">XTRIM</target>
        </trans-unit>
        <trans-unit id="f87914468c83fc74be3f3374bbcd03e916fe60e2" translate="yes" xml:space="preserve">
          <source>XTRIM  key MAXLEN [=|~] length   Trims the stream to (approximately if '~' is passed) a certain size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44c70bed773dad09049379eb1cede2cc5be55c0" translate="yes" xml:space="preserve">
          <source>XTRIM  key MAXLEN [~] count   Trims the stream to (approximately if '~' is passed) a certain size</source>
          <target state="translated">XTRIM 키 MAXLEN [~] count 스트림을 특정 크기 ( '~'가 전달 된 경우)로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="d6a698456d791f29ffc6116a3d8426c7d9bc7f65" translate="yes" xml:space="preserve">
          <source>You almost never want to call &lt;a href=&quot;save&quot;&gt;SAVE&lt;/a&gt; in production environments where it will block all the other clients. Instead usually &lt;a href=&quot;bgsave&quot;&gt;BGSAVE&lt;/a&gt; is used. However in case of issues preventing Redis to create the background saving child (for instance errors in the fork(2) system call), the &lt;a href=&quot;save&quot;&gt;SAVE&lt;/a&gt; command can be a good last resort to perform the dump of the latest dataset.</source>
          <target state="translated">다른 모든 클라이언트를 차단하는 프로덕션 환경에서는 &lt;a href=&quot;save&quot;&gt;SAVE&lt;/a&gt; 를 호출하기를 거의 원하지 않습니다 . 대신 일반적으로 &lt;a href=&quot;bgsave&quot;&gt;BGSAVE&lt;/a&gt; 가 사용됩니다. 그러나 Redis가 백그라운드 저장 하위를 작성하는 데 문제가있는 경우 (예 : fork (2) 시스템 호출의 오류), &lt;a href=&quot;save&quot;&gt;SAVE&lt;/a&gt; 명령은 최신 데이터 세트 덤프를 수행하는 가장 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5206e6d8bc19178c4fcc4166295d67f608c9a03b" translate="yes" xml:space="preserve">
          <source>You can configure the slow log with two parameters: &lt;em&gt;slowlog-log-slower-than&lt;/em&gt; tells Redis what is the execution time, in microseconds, to exceed in order for the command to get logged. Note that a negative number disables the slow log, while a value of zero forces the logging of every command. &lt;em&gt;slowlog-max-len&lt;/em&gt; is the length of the slow log. The minimum value is zero. When a new command is logged and the slow log is already at its maximum length, the oldest one is removed from the queue of logged commands in order to make space.</source>
          <target state="translated">당신은 두 개의 매개 변수와 함께 느린 로그를 구성 할 수 있습니다 &lt;em&gt;slowlog 로그-보다 느린&lt;/em&gt; 명령이 기록 얻을 순서를 초과 마이크로 실행 시간, 무엇 레디 스를 알려줍니다. 음수는 느린 로그를 비활성화하고 값이 0이면 모든 명령을 강제로 기록합니다. &lt;em&gt;slowlog-max-len&lt;/em&gt; 은 느린 로그의 길이입니다. 최소값은 0입니다. 새 명령이 기록되고 느린 로그가 이미 최대 길이 인 경우 공간을 확보하기 위해 가장 오래된 명령이 로그 된 명령 큐에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="812b7d5893aec06a53b91fb5c4558bfd6d9c305e" translate="yes" xml:space="preserve">
          <source>You can easily model this pattern in Redis using the following strategy: every time the user does a page view you call the following commands:</source>
          <target state="translated">다음 전략을 사용하여 Redis에서이 패턴을 쉽게 모델링 할 수 있습니다. 사용자가 페이지를 볼 때마다 다음 명령을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a7f62cb7c991c6f7b10c875853c4ea6d4f654b01" translate="yes" xml:space="preserve">
          <source>You can have both the AOF enabled with RDB snapshotting if you want, the two options are not mutually exclusive.</source>
          <target state="translated">원하는 경우 RDB 스냅 샷을 사용하여 AOF를 활성화 할 수 있습니다. 두 옵션은 상호 배타적이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c7fd0d1aed142d3203e386c1f87bbe8cf271b68e" translate="yes" xml:space="preserve">
          <source>You can obtain a list of all the supported configuration parameters by typing &lt;code&gt;CONFIG GET *&lt;/code&gt; in an open &lt;code&gt;redis-cli&lt;/code&gt; prompt.</source>
          <target state="translated">열린 &lt;code&gt;redis-cli&lt;/code&gt; 프롬프트 에서 &lt;code&gt;CONFIG GET *&lt;/code&gt; 를 입력하여 지원되는 모든 구성 매개 변수의 목록을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="782a26c287765bb5ada5d53362e1315b8ea70eec" translate="yes" xml:space="preserve">
          <source>You can reset the slow log using the &lt;strong&gt;SLOWLOG RESET&lt;/strong&gt; command. Once deleted the information is lost forever.</source>
          <target state="translated">&lt;strong&gt;SLOWLOG RESET&lt;/strong&gt; 명령을 사용하여 느린 로그를 재설정 할 수 있습니다 . 삭제 된 정보는 영구적으로 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="b9a306bfe06d9d53ff2453f3ae75bb161ca70f68" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;command&quot;&gt;COMMAND&lt;/a&gt; to cache a mapping between commands and key positions for each command to enable exact routing of commands to cluster instances.</source>
          <target state="translated">&lt;a href=&quot;command&quot;&gt;COMMAND&lt;/a&gt; 를 사용 하여 각 명령에 대한 명령과 키 위치 간의 매핑을 캐시하여 명령을 클러스터 인스턴스로 정확하게 라우팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94fca74288bcfee7fc0893785d7ac7af338c1bd5" translate="yes" xml:space="preserve">
          <source>You can use one of the optional subcommands to filter the list. The &lt;code&gt;TYPE type&lt;/code&gt; subcommand filters the list by clients' type, where &lt;em&gt;type&lt;/em&gt; is one of &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;replica&lt;/code&gt;, and &lt;code&gt;pubsub&lt;/code&gt;. Note that clients blocked by the &lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt; command belong to the &lt;code&gt;normal&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982dc809a4b37ef3236c50484f4789927b5791e7" translate="yes" xml:space="preserve">
          <source>ZADD</source>
          <target state="translated">ZADD</target>
        </trans-unit>
        <trans-unit id="6177f313ab1038d1d59d1b66ec9d275cc0cf8ab1" translate="yes" xml:space="preserve">
          <source>ZADD  key [NX|XX] [CH] [INCR] score member [score member ...]   Add one or more members to a sorted set, or update its score if it already exists</source>
          <target state="translated">ZADD 키 [NX | XX] [CH] [INCR] 스코어 멤버 [점수 멤버 ...] 하나 이상의 멤버를 정렬 된 세트에 추가하거나 이미 존재하는 경우 해당 스코어를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="01595e0eb68c24578dde44b566de26228615eb2a" translate="yes" xml:space="preserve">
          <source>ZADD  key [NX|XX] [GT|LT] [CH] [INCR] score member [score member ...]   Add one or more members to a sorted set, or update its score if it already exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1523a48ea81e1f8f349e8878ab7b690552adcad5" translate="yes" xml:space="preserve">
          <source>ZADD options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8afb3eddddde7b33d3416faa0bab41af0d92a8" translate="yes" xml:space="preserve">
          <source>ZADD options (Redis 3.0.2 or greater)</source>
          <target state="translated">ZADD 옵션 (Redis 3.0.2 이상)</target>
        </trans-unit>
        <trans-unit id="a7a9fbac3f0c656f3700c863f729a302d743a955" translate="yes" xml:space="preserve">
          <source>ZADD supports a list of options, specified after the name of the key and before the first score argument. Options are:</source>
          <target state="translated">ZADD는 키 이름 뒤에 그리고 첫 번째 점수 인수 앞에 지정된 옵션 목록을 지원합니다. 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f9f219843e0eb0ba98e20a09e67012582a7ff9ae" translate="yes" xml:space="preserve">
          <source>ZCARD</source>
          <target state="translated">ZCARD</target>
        </trans-unit>
        <trans-unit id="a62da7b8917269eab9d4a5b4830a8b279fcfbdd4" translate="yes" xml:space="preserve">
          <source>ZCARD  key   Get the number of members in a sorted set</source>
          <target state="translated">ZCARD 키 정렬 된 세트의 멤버 수 가져 오기</target>
        </trans-unit>
        <trans-unit id="804c958c7b73b3b648a5e268179bcee1309d8397" translate="yes" xml:space="preserve">
          <source>ZCOUNT</source>
          <target state="translated">ZCOUNT</target>
        </trans-unit>
        <trans-unit id="e7b1de6d30e0d1314b3c3f1cff1a4bd4ee2f0cbe" translate="yes" xml:space="preserve">
          <source>ZCOUNT  key min max   Count the members in a sorted set with scores within the given values</source>
          <target state="translated">ZCOUNT 키 최소 최대 주어진 값 내의 점수를 기준으로 정렬 된 집합의 멤버 수</target>
        </trans-unit>
        <trans-unit id="7183a6fea526efb75dc98188aec2c4eb854fea7b" translate="yes" xml:space="preserve">
          <source>ZDIFF</source>
          <target state="translated">ZDIFF</target>
        </trans-unit>
        <trans-unit id="08e12509e45735d0498edc0699bad0bc48338cb3" translate="yes" xml:space="preserve">
          <source>ZDIFF  numkeys key [key ...] [WITHSCORES]   Subtract multiple sorted sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f470d6ba7bd3438ccea0bcbffda1bd341fdbb5" translate="yes" xml:space="preserve">
          <source>ZDIFFSTORE</source>
          <target state="translated">ZDIFFSTORE</target>
        </trans-unit>
        <trans-unit id="7259d19600a328a0db8d648f1cbbe318150779ff" translate="yes" xml:space="preserve">
          <source>ZDIFFSTORE  destination numkeys key [key ...]   Subtract multiple sorted sets and store the resulting sorted set in a new key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48eb6f84de3d0a2896cb3c94e2d2ef6356f730bb" translate="yes" xml:space="preserve">
          <source>ZINCRBY</source>
          <target state="translated">ZINCRBY</target>
        </trans-unit>
        <trans-unit id="082214abb531096524452afc40cb936da34a4f6b" translate="yes" xml:space="preserve">
          <source>ZINCRBY  key increment member   Increment the score of a member in a sorted set</source>
          <target state="translated">ZINCRBY 키 증가 멤버 정렬 된 세트에서 멤버의 점수 증가</target>
        </trans-unit>
        <trans-unit id="8b237014fd40a5b4591f75d1ae96127f32cc3180" translate="yes" xml:space="preserve">
          <source>ZINTER</source>
          <target state="translated">ZINTER</target>
        </trans-unit>
        <trans-unit id="d549acee6269db676f6c95f4af049a6d41a56533" translate="yes" xml:space="preserve">
          <source>ZINTER  numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] [WITHSCORES]   Intersect multiple sorted sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ba546493355b0b49bfc8f962db2ce108f69f84" translate="yes" xml:space="preserve">
          <source>ZINTERSTORE</source>
          <target state="translated">ZINTERSTORE</target>
        </trans-unit>
        <trans-unit id="e6944d941d1e5237d181c2778b08d5deaec8163d" translate="yes" xml:space="preserve">
          <source>ZINTERSTORE  destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]   Intersect multiple sorted sets and store the resulting sorted set in a new key</source>
          <target state="translated">ZINTERSTORE 대상 숫자 키 [키 ...] [무게 무게 [무게 ...]] [AGGREGATE SUM | MIN | MAX] 여러 정렬 된 세트를 교차하고 결과 정렬 된 세트를 새 키에 저장</target>
        </trans-unit>
        <trans-unit id="6f7c7f93ff22369bc12ca7853301e566ef1d6330" translate="yes" xml:space="preserve">
          <source>ZLEXCOUNT</source>
          <target state="translated">ZLEXCOUNT</target>
        </trans-unit>
        <trans-unit id="69fdddce610cf780982de18264e4a3ec8a4d0cbf" translate="yes" xml:space="preserve">
          <source>ZLEXCOUNT  key min max   Count the number of members in a sorted set between a given lexicographical range</source>
          <target state="translated">ZLEXCOUNT 키 최소 최대 주어진 사전 범위 사이에서 정렬 된 세트의 멤버 수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="6d7579e4fc76112f0f7a5ebbaf6c7a1ae29805c5" translate="yes" xml:space="preserve">
          <source>ZMSCORE</source>
          <target state="translated">ZMSCORE</target>
        </trans-unit>
        <trans-unit id="ec995f6e832a70e3c69f897a9c43cc4a9412f03b" translate="yes" xml:space="preserve">
          <source>ZMSCORE  key member [member ...]   Get the score associated with the given members in a sorted set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6072781ef70d69579c9a9f687049bff57ec171" translate="yes" xml:space="preserve">
          <source>ZPOPMAX</source>
          <target state="translated">ZPOPMAX</target>
        </trans-unit>
        <trans-unit id="c4a7ccc60d50bdf63d3ce3e84bcddd3c73436b7a" translate="yes" xml:space="preserve">
          <source>ZPOPMAX  key [count]   Remove and return members with the highest scores in a sorted set</source>
          <target state="translated">ZPOPMAX 키 [count] 정렬 된 세트에서 가장 높은 점수를받은 멤버 제거 및 반환</target>
        </trans-unit>
        <trans-unit id="275afe97d970634d3b438a2df7d2597650e176af" translate="yes" xml:space="preserve">
          <source>ZPOPMIN</source>
          <target state="translated">ZPOPMIN</target>
        </trans-unit>
        <trans-unit id="be3c3964166a2f153136364e00fc24d6f225ab55" translate="yes" xml:space="preserve">
          <source>ZPOPMIN  key [count]   Remove and return members with the lowest scores in a sorted set</source>
          <target state="translated">ZPOPMIN 키 [count] 정렬 된 세트에서 가장 낮은 점수를받은 멤버를 제거하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02622bfb82d4bfd8a5ab07e9f83ced4394aed928" translate="yes" xml:space="preserve">
          <source>ZRANGE</source>
          <target state="translated">ZRANGE</target>
        </trans-unit>
        <trans-unit id="03dad4a4ada2d7d58013533b78248011292b810c" translate="yes" xml:space="preserve">
          <source>ZRANGE  key start stop [WITHSCORES]   Return a range of members in a sorted set, by index</source>
          <target state="translated">ZRANGE 키 시작 중지 [WITHSCORES] 정렬 된 세트의 멤버 범위를 인덱스별로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bba4651818ea34d8734b75b5671a21d9220ac1b9" translate="yes" xml:space="preserve">
          <source>ZRANGEBYLEX</source>
          <target state="translated">ZRANGEBYLEX</target>
        </trans-unit>
        <trans-unit id="364664a0fd916084bc6efee334586840847f26d3" translate="yes" xml:space="preserve">
          <source>ZRANGEBYLEX  key min max [LIMIT offset count]   Return a range of members in a sorted set, by lexicographical range</source>
          <target state="translated">ZRANGEBYLEX 키 최소 최대 [LIMIT 오프셋 수] 사전 범위로 정렬 된 세트의 멤버 범위를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c571cee5ee859758a0a48f9ac7f4765d68f01ae8" translate="yes" xml:space="preserve">
          <source>ZRANGEBYSCORE</source>
          <target state="translated">ZRANGEBYSCORE</target>
        </trans-unit>
        <trans-unit id="673cf1d9accf226f0f9e4e818378d95b64fc8bbd" translate="yes" xml:space="preserve">
          <source>ZRANGEBYSCORE  key min max [WITHSCORES] [LIMIT offset count]   Return a range of members in a sorted set, by score</source>
          <target state="translated">ZRANGEBYSCORE 키 최소 최대 [WITHSCORES] [LIMIT 오프셋 수] 정렬 된 세트의 멤버 범위를 점수별로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9e9292abec9b8be858e37bb566f832cba106aa55" translate="yes" xml:space="preserve">
          <source>ZRANK</source>
          <target state="translated">ZRANK</target>
        </trans-unit>
        <trans-unit id="b59410720d26d04d6711618b591552b150d8cec0" translate="yes" xml:space="preserve">
          <source>ZRANK  key member   Determine the index of a member in a sorted set</source>
          <target state="translated">ZRANK 키 멤버 정렬 된 세트에서 멤버의 색인 판별</target>
        </trans-unit>
        <trans-unit id="62d49b0445d01f6366a124bdb6d14f53816b8411" translate="yes" xml:space="preserve">
          <source>ZREM</source>
          <target state="translated">ZREM</target>
        </trans-unit>
        <trans-unit id="51cc8ecde226c2ed459594cb655dac013638e3d7" translate="yes" xml:space="preserve">
          <source>ZREM  key member [member ...]   Remove one or more members from a sorted set</source>
          <target state="translated">ZREM 키 멤버 [member ...] 정렬 된 세트에서 하나 이상의 멤버 제거</target>
        </trans-unit>
        <trans-unit id="ddfd8131e4f4a552bfa5a7b84dd4b52d07f655e9" translate="yes" xml:space="preserve">
          <source>ZREMRANGEBYLEX</source>
          <target state="translated">ZREMRANGEBYLEX</target>
        </trans-unit>
        <trans-unit id="f4800e3831951112ba80954f2b1827cc696db96f" translate="yes" xml:space="preserve">
          <source>ZREMRANGEBYLEX  key min max   Remove all members in a sorted set between the given lexicographical range</source>
          <target state="translated">ZREMRANGEBYLEX 키 min max 주어진 사전 범위 사이에서 정렬 된 세트의 모든 멤버 제거</target>
        </trans-unit>
        <trans-unit id="73a090151aaf8b520afa0541459a1792f3770d65" translate="yes" xml:space="preserve">
          <source>ZREMRANGEBYRANK</source>
          <target state="translated">ZREMRANGEBYRANK</target>
        </trans-unit>
        <trans-unit id="ce886409d64013690650f17c09223970423c30ea" translate="yes" xml:space="preserve">
          <source>ZREMRANGEBYRANK  key start stop   Remove all members in a sorted set within the given indexes</source>
          <target state="translated">ZREMRANGEBYRANK 키 시작 중지 지정된 인덱스 내에서 정렬 된 세트의 모든 멤버 제거</target>
        </trans-unit>
        <trans-unit id="931530552d190d1adb44e3baed061941b99e49d1" translate="yes" xml:space="preserve">
          <source>ZREMRANGEBYSCORE</source>
          <target state="translated">ZREMRANGEBYSCORE</target>
        </trans-unit>
        <trans-unit id="2e5ffa7a59f892be67c275cea48e9dd25a95faad" translate="yes" xml:space="preserve">
          <source>ZREMRANGEBYSCORE  key min max   Remove all members in a sorted set within the given scores</source>
          <target state="translated">ZREMRANGEBYSCORE key min max 주어진 점수 내에서 정렬 된 세트의 모든 멤버 제거</target>
        </trans-unit>
        <trans-unit id="4b069fdb8bc0529507b3a762e5a538395040c04e" translate="yes" xml:space="preserve">
          <source>ZREVRANGE</source>
          <target state="translated">ZREVRANGE</target>
        </trans-unit>
        <trans-unit id="88e5008c0f89447cea6090639d24238cf393c483" translate="yes" xml:space="preserve">
          <source>ZREVRANGE  key start stop [WITHSCORES]   Return a range of members in a sorted set, by index, with scores ordered from high to low</source>
          <target state="translated">ZREVRANGE 키 시작 중지 [WITHSCORES] 점수가 높은 순서에서 낮은 순서로 정렬 된 세트의 멤버 범위를 인덱스별로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d3a185af30bf9fc2dd922952dc1f011d8944f1f6" translate="yes" xml:space="preserve">
          <source>ZREVRANGEBYLEX</source>
          <target state="translated">ZREVRANGEBYLEX</target>
        </trans-unit>
        <trans-unit id="487b7021367b6913a83cf7bca0ebd6dd7abed360" translate="yes" xml:space="preserve">
          <source>ZREVRANGEBYLEX  key max min [LIMIT offset count]   Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.</source>
          <target state="translated">ZREVRANGEBYLEX 키 최대 최소 [LIMIT 오프셋 수] 사전 순으로 정렬 된 세트의 멤버 범위를 높은 문자열에서 낮은 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d77f06d347bf28d692faa21a65a62dfeba0778c7" translate="yes" xml:space="preserve">
          <source>ZREVRANGEBYSCORE</source>
          <target state="translated">ZREVRANGEBYSCORE</target>
        </trans-unit>
        <trans-unit id="0a6ca5efbd36844810b35910dbd06d7ae2620043" translate="yes" xml:space="preserve">
          <source>ZREVRANGEBYSCORE  key max min [WITHSCORES] [LIMIT offset count]   Return a range of members in a sorted set, by score, with scores ordered from high to low</source>
          <target state="translated">ZREVRANGEBYSCORE 키 최대 최소 [WITHSCORES] [LIMIT 오프셋 수] 점수가 높은 순서에서 낮은 순서로 정렬 된 세트의 멤버 범위를 스코어별로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="72a6a00dce764b5250de9696fec2f9f8782ae2e0" translate="yes" xml:space="preserve">
          <source>ZREVRANK</source>
          <target state="translated">ZREVRANK</target>
        </trans-unit>
        <trans-unit id="7701bc079e1d6ed2096984e7cd8af2ebd28c2baf" translate="yes" xml:space="preserve">
          <source>ZREVRANK  key member   Determine the index of a member in a sorted set, with scores ordered from high to low</source>
          <target state="translated">ZREVRANK 키 멤버 점수가 높은 순서에서 낮은 순서로 정렬 된 세트의 멤버 색인을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6f5762d24c0d19676a03c0c372ac1c834e87f776" translate="yes" xml:space="preserve">
          <source>ZSCAN</source>
          <target state="translated">ZSCAN</target>
        </trans-unit>
        <trans-unit id="7c4eb07f6f758aee31c0a62929e18d1e96d2005b" translate="yes" xml:space="preserve">
          <source>ZSCAN  key cursor [MATCH pattern] [COUNT count]   Incrementally iterate sorted sets elements and associated scores</source>
          <target state="translated">ZSCAN 키 커서 [MATCH 패턴] [COUNT 수] 정렬 된 세트 요소 및 관련 점수를 점차적으로 반복</target>
        </trans-unit>
        <trans-unit id="85c614c75215d2c232b8b4724626ecc6b4444df5" translate="yes" xml:space="preserve">
          <source>ZSCORE</source>
          <target state="translated">ZSCORE</target>
        </trans-unit>
        <trans-unit id="6cb8dc26a70bb55036029263331e2998e670ff4d" translate="yes" xml:space="preserve">
          <source>ZSCORE  key member   Get the score associated with the given member in a sorted set</source>
          <target state="translated">ZSCORE 주요 멤버 정렬 된 세트에서 주어진 멤버와 연관된 점수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f23d68d5c781945ad257cda812430dfbbd97a73a" translate="yes" xml:space="preserve">
          <source>ZUNION</source>
          <target state="translated">ZUNION</target>
        </trans-unit>
        <trans-unit id="290bd14680b87655fbec2478d58ceca7f3b7a2fd" translate="yes" xml:space="preserve">
          <source>ZUNION  numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] [WITHSCORES]   Add multiple sorted sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0cd69f0ee4f0f5cbdddc1a691185b9b3cf2292" translate="yes" xml:space="preserve">
          <source>ZUNIONSTORE</source>
          <target state="translated">ZUNIONSTORE</target>
        </trans-unit>
        <trans-unit id="c40bfc97a4da4b676924dcf67e9bc86b2bd64973" translate="yes" xml:space="preserve">
          <source>ZUNIONSTORE  destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]   Add multiple sorted sets and store the resulting sorted set in a new key</source>
          <target state="translated">ZUNIONSTORE 대상 숫자 키 [키 ...] [무게 무게 [무게 ...]] [AGGREGATE SUM | MIN | MAX] 여러 정렬 된 세트를 추가하고 결과 정렬 된 세트를 새 키에 저장</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="66a36e77fd002579809717841f998f4d21cd5913" translate="yes" xml:space="preserve">
          <source>auth</source>
          <target state="translated">auth</target>
        </trans-unit>
        <trans-unit id="d2f7ffda236a4282eaecf1b0bac8e7f60f8bc3d9" translate="yes" xml:space="preserve">
          <source>bgrewriteaof</source>
          <target state="translated">bgrewriteaof</target>
        </trans-unit>
        <trans-unit id="162c92cbd78d3a5882249a5dbd8c3f9cd611ffb6" translate="yes" xml:space="preserve">
          <source>bgsave</source>
          <target state="translated">bgsave</target>
        </trans-unit>
        <trans-unit id="4da764e1824ae57728952e1b0615985ed94f59b9" translate="yes" xml:space="preserve">
          <source>bitcount</source>
          <target state="translated">bitcount</target>
        </trans-unit>
        <trans-unit id="4116f1c32d5697642f6c01c7ac8d142fa62586b8" translate="yes" xml:space="preserve">
          <source>bitfield</source>
          <target state="translated">bitfield</target>
        </trans-unit>
        <trans-unit id="663131996a1f110e30b70f0947ec89eaf1232c6a" translate="yes" xml:space="preserve">
          <source>bitop</source>
          <target state="translated">bitop</target>
        </trans-unit>
        <trans-unit id="8ce3cff1066e4c8190d71db881283f3c41a7d438" translate="yes" xml:space="preserve">
          <source>bitpos</source>
          <target state="translated">bitpos</target>
        </trans-unit>
        <trans-unit id="551b189ef8b4f0e5b241a8535cad8aacf7936bec" translate="yes" xml:space="preserve">
          <source>blpop</source>
          <target state="translated">blpop</target>
        </trans-unit>
        <trans-unit id="2c584f8b7988c47b090f979adf77d8a93b13c6fe" translate="yes" xml:space="preserve">
          <source>brpop</source>
          <target state="translated">brpop</target>
        </trans-unit>
        <trans-unit id="71753c679731a8206add7d892464e306b96f240f" translate="yes" xml:space="preserve">
          <source>brpoplpush</source>
          <target state="translated">brpoplpush</target>
        </trans-unit>
        <trans-unit id="f4d9b92be85f72d89560234ab670f7f0c693e8bc" translate="yes" xml:space="preserve">
          <source>bzpopmax</source>
          <target state="translated">bzpopmax</target>
        </trans-unit>
        <trans-unit id="ca49d94361d803beda2848f47fe89b3685e92e10" translate="yes" xml:space="preserve">
          <source>bzpopmin</source>
          <target state="translated">bzpopmin</target>
        </trans-unit>
        <trans-unit id="3a86539cd55319263f3a19c588b0285effbfb000" translate="yes" xml:space="preserve">
          <source>client getname</source>
          <target state="translated">클라이언트 getname</target>
        </trans-unit>
        <trans-unit id="81cf703b98123442eeba253fddb9127d1d84c862" translate="yes" xml:space="preserve">
          <source>client id</source>
          <target state="translated">고객 ID</target>
        </trans-unit>
        <trans-unit id="88726cca60ec5c915171c4a420d59a8900387c18" translate="yes" xml:space="preserve">
          <source>client kill</source>
          <target state="translated">클라이언트 킬</target>
        </trans-unit>
        <trans-unit id="987bc4556044f864b76947c83450ff5b10bebfe2" translate="yes" xml:space="preserve">
          <source>client list</source>
          <target state="translated">고객 목록</target>
        </trans-unit>
        <trans-unit id="a2f654db226666d857b2282c499e0c2b32377dc9" translate="yes" xml:space="preserve">
          <source>client pause</source>
          <target state="translated">클라이언트 일시 중지</target>
        </trans-unit>
        <trans-unit id="ffb26747154ba2157bb31d208021c581bbe32601" translate="yes" xml:space="preserve">
          <source>client reply</source>
          <target state="translated">고객 답변</target>
        </trans-unit>
        <trans-unit id="1d756097b36df1bebe2bb2fb4902de8c3316c19e" translate="yes" xml:space="preserve">
          <source>client setname</source>
          <target state="translated">클라이언트 세트 이름</target>
        </trans-unit>
        <trans-unit id="99f2f80036bba41bc398f2813af0b933b7fcde25" translate="yes" xml:space="preserve">
          <source>client unblock</source>
          <target state="translated">클라이언트 차단 해제</target>
        </trans-unit>
        <trans-unit id="43f0891a860ab378527d43b393484eafc5c7df65" translate="yes" xml:space="preserve">
          <source>cluster addslots</source>
          <target state="translated">클러스터 추가 슬롯</target>
        </trans-unit>
        <trans-unit id="19478cb96b68d0728a218e76348a6fd4e4a96337" translate="yes" xml:space="preserve">
          <source>cluster count failure reports</source>
          <target state="translated">클러스터 수 실패 보고서</target>
        </trans-unit>
        <trans-unit id="2db020ffd4f2a845d340a5ad10901c35f818ba8d" translate="yes" xml:space="preserve">
          <source>cluster countkeysinslot</source>
          <target state="translated">클러스터 카운트 키</target>
        </trans-unit>
        <trans-unit id="489a6acb0ff69cf01acd32da20608bfa0277c6c6" translate="yes" xml:space="preserve">
          <source>cluster delslots</source>
          <target state="translated">클러스터 델 로트</target>
        </trans-unit>
        <trans-unit id="407156e9dd303b8d4ce5e0165cb27f26ed949a6a" translate="yes" xml:space="preserve">
          <source>cluster failover</source>
          <target state="translated">클러스터 장애 조치</target>
        </trans-unit>
        <trans-unit id="ce1869c36223c8c6329dbf77306bbf492681bcbf" translate="yes" xml:space="preserve">
          <source>cluster forget</source>
          <target state="translated">클러스터 잊어</target>
        </trans-unit>
        <trans-unit id="c6fe721552461ae597503d49076efe4974e2b171" translate="yes" xml:space="preserve">
          <source>cluster getkeysinslot</source>
          <target state="translated">클러스터 getkeysinslot</target>
        </trans-unit>
        <trans-unit id="3aacda588fa9e3bcda9b4a90c5dcab259c6425e7" translate="yes" xml:space="preserve">
          <source>cluster info</source>
          <target state="translated">클러스터 정보</target>
        </trans-unit>
        <trans-unit id="d8b32dd9fcb82d4ecea8f7f928b2b8c576a2e897" translate="yes" xml:space="preserve">
          <source>cluster keyslot</source>
          <target state="translated">클러스터 키 슬롯</target>
        </trans-unit>
        <trans-unit id="684f13185ba4589d99a16b3daccb4e90c9585f15" translate="yes" xml:space="preserve">
          <source>cluster meet</source>
          <target state="translated">클러스터 만남</target>
        </trans-unit>
        <trans-unit id="b1911a5f60aad1060e23305729b01ebfdd56e7d0" translate="yes" xml:space="preserve">
          <source>cluster nodes</source>
          <target state="translated">클러스터 노드</target>
        </trans-unit>
        <trans-unit id="2cf65c6c6fe6bbce45825770e26027da0efcd0c1" translate="yes" xml:space="preserve">
          <source>cluster replicas</source>
          <target state="translated">클러스터 복제본</target>
        </trans-unit>
        <trans-unit id="442f81c0f4970ce91726953447fb971c9c2ad776" translate="yes" xml:space="preserve">
          <source>cluster replicate</source>
          <target state="translated">클러스터 복제</target>
        </trans-unit>
        <trans-unit id="395b418e96d2f96ec16bd3bf8c50cd6789494dbf" translate="yes" xml:space="preserve">
          <source>cluster reset</source>
          <target state="translated">클러스터 재설정</target>
        </trans-unit>
        <trans-unit id="05e2dbd82dc573205585c712e03aeaee7926a065" translate="yes" xml:space="preserve">
          <source>cluster saveconfig</source>
          <target state="translated">클러스터 저장 구성</target>
        </trans-unit>
        <trans-unit id="bceff60fbd877d85d8ebab25ec27a6a5d71969f4" translate="yes" xml:space="preserve">
          <source>cluster set config epoch</source>
          <target state="translated">클러스터 설정 구성 시대</target>
        </trans-unit>
        <trans-unit id="8ce0fc728ba93e75e4ce70260bc4c0cb0a0267a8" translate="yes" xml:space="preserve">
          <source>cluster setslot</source>
          <target state="translated">클러스터 세트 슬롯</target>
        </trans-unit>
        <trans-unit id="853f2313018039eeb3271a901d5fe6a4521e1b7e" translate="yes" xml:space="preserve">
          <source>cluster slaves</source>
          <target state="translated">클러스터 슬레이브</target>
        </trans-unit>
        <trans-unit id="0877a0e38bf8420a09cac6d93ab059dcba8f6efa" translate="yes" xml:space="preserve">
          <source>cluster slots</source>
          <target state="translated">클러스터 슬롯</target>
        </trans-unit>
        <trans-unit id="571f8a022f4350d29c7bb85cd07863200d7a6569" translate="yes" xml:space="preserve">
          <source>cmsgpack</source>
          <target state="translated">cmsgpack</target>
        </trans-unit>
        <trans-unit id="1925f793093581c47a5c6b2e414506b1cbae280d" translate="yes" xml:space="preserve">
          <source>command</source>
          <target state="translated">command</target>
        </trans-unit>
        <trans-unit id="5c789a928708dc57106493f3a30f343d43f1dd84" translate="yes" xml:space="preserve">
          <source>command arity specification</source>
          <target state="translated">명령 arity 사양</target>
        </trans-unit>
        <trans-unit id="aadb4afdbc1dedd8ecc857b71881d35b7637a9f2" translate="yes" xml:space="preserve">
          <source>command count</source>
          <target state="translated">명령 수</target>
        </trans-unit>
        <trans-unit id="7454889839f3de80212539102236bf42aa8c973e" translate="yes" xml:space="preserve">
          <source>command getkeys</source>
          <target state="translated">getkeys 명령</target>
        </trans-unit>
        <trans-unit id="6042ca09cffc5a5aaaaa8113c902b46b7e0c2c1e" translate="yes" xml:space="preserve">
          <source>command info</source>
          <target state="translated">명령 정보</target>
        </trans-unit>
        <trans-unit id="ecaf24f591fc3d7ae531589de304494df415517b" translate="yes" xml:space="preserve">
          <source>command name</source>
          <target state="translated">명령 이름</target>
        </trans-unit>
        <trans-unit id="fa1b2e09003258d2892b88b9898ff5fa5ee8743b" translate="yes" xml:space="preserve">
          <source>config get</source>
          <target state="translated">구성 가져 오기</target>
        </trans-unit>
        <trans-unit id="bf2c88801f916f8d4285be683516972f04952be9" translate="yes" xml:space="preserve">
          <source>config resetstat</source>
          <target state="translated">구성 재설정</target>
        </trans-unit>
        <trans-unit id="c1939713a6322995f901d8c083725370856a140a" translate="yes" xml:space="preserve">
          <source>config rewrite</source>
          <target state="translated">구성 다시 쓰기</target>
        </trans-unit>
        <trans-unit id="14a46d436e3d2d18e697522bfd72be6e705f84e1" translate="yes" xml:space="preserve">
          <source>config set</source>
          <target state="translated">구성 세트</target>
        </trans-unit>
        <trans-unit id="dac92f73ee69bfb9fb2f827e8b4621c3941f2061" translate="yes" xml:space="preserve">
          <source>dbsize</source>
          <target state="translated">dbsize</target>
        </trans-unit>
        <trans-unit id="106977a7f15c4f2bed5d076f04cb405ddd9ad19a" translate="yes" xml:space="preserve">
          <source>debug object</source>
          <target state="translated">디버그 객체</target>
        </trans-unit>
        <trans-unit id="89bfa476c3240daabd7cdf8d211878ead7c26cdb" translate="yes" xml:space="preserve">
          <source>debug segfault</source>
          <target state="translated">디버그 segfault</target>
        </trans-unit>
        <trans-unit id="11d16d7147770b76fc7b6992a8de8f21048a0773" translate="yes" xml:space="preserve">
          <source>decr</source>
          <target state="translated">decr</target>
        </trans-unit>
        <trans-unit id="6f9465483f68b26e75ca54393520b0fd717577e0" translate="yes" xml:space="preserve">
          <source>decrby</source>
          <target state="translated">decrby</target>
        </trans-unit>
        <trans-unit id="fea453f853c8645b085126e6517eab38dfaa022f" translate="yes" xml:space="preserve">
          <source>del</source>
          <target state="translated">del</target>
        </trans-unit>
        <trans-unit id="f57e38069445fdec820e61935325ba944c1c8fe4" translate="yes" xml:space="preserve">
          <source>discard</source>
          <target state="translated">discard</target>
        </trans-unit>
        <trans-unit id="9567d1547e105470e4e53c1568f07a209e82a161" translate="yes" xml:space="preserve">
          <source>dump</source>
          <target state="translated">dump</target>
        </trans-unit>
        <trans-unit id="b2d21e771d9f86865c5eff193663574dd1796c8f" translate="yes" xml:space="preserve">
          <source>echo</source>
          <target state="translated">echo</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="3803c2b7cbdf45e93c59ce2b7549e1ea3d9b2dfd" translate="yes" xml:space="preserve">
          <source>evalsha</source>
          <target state="translated">evalsha</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="4d68c8f13459c0edb40504de5003ec2a6b74e613" translate="yes" xml:space="preserve">
          <source>exists</source>
          <target state="translated">exists</target>
        </trans-unit>
        <trans-unit id="20dda04ba85cc1d159e6c80f0473186d495ab0ca" translate="yes" xml:space="preserve">
          <source>expire</source>
          <target state="translated">expire</target>
        </trans-unit>
        <trans-unit id="7226fd219a87d93b2f0b2ca89a6d3a3c278f9bc7" translate="yes" xml:space="preserve">
          <source>expireat</source>
          <target state="translated">expireat</target>
        </trans-unit>
        <trans-unit id="ae9f9cc9d4997b668f7b5b3c3ea576aa20aa1683" translate="yes" xml:space="preserve">
          <source>flushall</source>
          <target state="translated">flushall</target>
        </trans-unit>
        <trans-unit id="d353b700f6ff37ded1726231acdcbb224744d6f2" translate="yes" xml:space="preserve">
          <source>flushdb</source>
          <target state="translated">flushdb</target>
        </trans-unit>
        <trans-unit id="09e0e28eee16aec03f0b1c28a341590be881ddfb" translate="yes" xml:space="preserve">
          <source>geoadd</source>
          <target state="translated">geoadd</target>
        </trans-unit>
        <trans-unit id="68afe824679e16d128ba81a79ba54b75c90e1a43" translate="yes" xml:space="preserve">
          <source>geodist</source>
          <target state="translated">geodist</target>
        </trans-unit>
        <trans-unit id="776fd947b10434bc0aebf706ed99b396161ce1bf" translate="yes" xml:space="preserve">
          <source>geohash</source>
          <target state="translated">geohash</target>
        </trans-unit>
        <trans-unit id="6ad8c5871971fc93ef8607efe29d93df354d0f73" translate="yes" xml:space="preserve">
          <source>geopos</source>
          <target state="translated">geopos</target>
        </trans-unit>
        <trans-unit id="ca76e452ae9157cb5b550a7af40a27ee239d231f" translate="yes" xml:space="preserve">
          <source>georadius</source>
          <target state="translated">georadius</target>
        </trans-unit>
        <trans-unit id="340cc747269051874e991833be48cf2e8dc71eb1" translate="yes" xml:space="preserve">
          <source>georadiusbymember</source>
          <target state="translated">georadiusbymember</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="ca6fcc29bd59a424c199f7bc78e4b08c64a4ce44" translate="yes" xml:space="preserve">
          <source>getbit</source>
          <target state="translated">getbit</target>
        </trans-unit>
        <trans-unit id="e1dd04bfc57be1394d76171d3fab84ab0adc60b9" translate="yes" xml:space="preserve">
          <source>getrange</source>
          <target state="translated">getrange</target>
        </trans-unit>
        <trans-unit id="1f90d8ff0d9f154dd86fcc470f9734222d99b2de" translate="yes" xml:space="preserve">
          <source>getset</source>
          <target state="translated">getset</target>
        </trans-unit>
        <trans-unit id="f371e20371066319ebfb0ed44f5369dd63aa8148" translate="yes" xml:space="preserve">
          <source>hdel</source>
          <target state="translated">hdel</target>
        </trans-unit>
        <trans-unit id="48dd8f5e67fcee366a64b82bbe4bd1e016ba4fb5" translate="yes" xml:space="preserve">
          <source>hexists</source>
          <target state="translated">hexists</target>
        </trans-unit>
        <trans-unit id="58f1fe06294f78478f896ad446c2d95d270189de" translate="yes" xml:space="preserve">
          <source>hget</source>
          <target state="translated">hget</target>
        </trans-unit>
        <trans-unit id="1b75497379ef6f664d175ff6a0359e22cc81acc7" translate="yes" xml:space="preserve">
          <source>hgetall</source>
          <target state="translated">hgetall</target>
        </trans-unit>
        <trans-unit id="fefa3a7ad3a712f132fb5f749245e169d235e3aa" translate="yes" xml:space="preserve">
          <source>hincrby</source>
          <target state="translated">hincrby</target>
        </trans-unit>
        <trans-unit id="0a69c73b2f7da8a5b1f6bdcaef66175f7bd4f618" translate="yes" xml:space="preserve">
          <source>hincrbyfloat</source>
          <target state="translated">hincrbyfloat</target>
        </trans-unit>
        <trans-unit id="4c08cd3399b4dc23ec850d998d71dfcbc1c63086" translate="yes" xml:space="preserve">
          <source>hkeys</source>
          <target state="translated">hkeys</target>
        </trans-unit>
        <trans-unit id="005adca130ac1314233f3bfee7c1e52507702766" translate="yes" xml:space="preserve">
          <source>hlen</source>
          <target state="translated">hlen</target>
        </trans-unit>
        <trans-unit id="c40c03a625269eb67b808649e85aa25383bae16a" translate="yes" xml:space="preserve">
          <source>hmget</source>
          <target state="translated">hmget</target>
        </trans-unit>
        <trans-unit id="1105eff3a6bffe84f6f00b7c4354f38e617b305a" translate="yes" xml:space="preserve">
          <source>hmset</source>
          <target state="translated">hmset</target>
        </trans-unit>
        <trans-unit id="0b44733aab04ffe53c69466a41f6e13ecea1d287" translate="yes" xml:space="preserve">
          <source>hscan</source>
          <target state="translated">hscan</target>
        </trans-unit>
        <trans-unit id="629040408fd7e7bd0e42e4a99f251c859ede5c2b" translate="yes" xml:space="preserve">
          <source>hset</source>
          <target state="translated">hset</target>
        </trans-unit>
        <trans-unit id="8b852fd008c3882df9db9a1c2a2bb0e05886b1b7" translate="yes" xml:space="preserve">
          <source>hsetnx</source>
          <target state="translated">hsetnx</target>
        </trans-unit>
        <trans-unit id="d677897242b8dd05e700c36696d0e910d0ca21e5" translate="yes" xml:space="preserve">
          <source>hstrlen</source>
          <target state="translated">hstrlen</target>
        </trans-unit>
        <trans-unit id="eac1e4b98eca5770635f00bec992aa33ff7b283b" translate="yes" xml:space="preserve">
          <source>hvals</source>
          <target state="translated">hvals</target>
        </trans-unit>
        <trans-unit id="58086838f67374476c0a7d5d55c207529a620fa4" translate="yes" xml:space="preserve">
          <source>incr</source>
          <target state="translated">incr</target>
        </trans-unit>
        <trans-unit id="f7a069b6026bb00f44b51804fcb3d2908cb9381b" translate="yes" xml:space="preserve">
          <source>incrby</source>
          <target state="translated">incrby</target>
        </trans-unit>
        <trans-unit id="2e4bcf022a203f0fc749c50887cf61c5ae2b4c1f" translate="yes" xml:space="preserve">
          <source>incrbyfloat</source>
          <target state="translated">incrbyfloat</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">info</target>
        </trans-unit>
        <trans-unit id="304cd7bde8c8a066e9ddc11f5d17d8c69ab28cfc" translate="yes" xml:space="preserve">
          <source>is exactly equivalent to</source>
          <target state="translated">정확히</target>
        </trans-unit>
        <trans-unit id="5a378fc0bcf211349c534e75bcde1ab24207890e" translate="yes" xml:space="preserve">
          <source>is valid and will kill only a pubsub client with the specified address. This format containing multiple filters is rarely useful currently.</source>
          <target state="translated">유효하며 지정된 주소를 가진 pubsub 클라이언트 만 종료합니다. 여러 필터를 포함하는이 형식은 현재 거의 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">keys</target>
        </trans-unit>
        <trans-unit id="e8c88bf1d7b13f4f56f0a03e0ade21e63b2e7b27" translate="yes" xml:space="preserve">
          <source>lastsave</source>
          <target state="translated">lastsave</target>
        </trans-unit>
        <trans-unit id="f4719088a81084b19ee1fa4b504bab9fa6094134" translate="yes" xml:space="preserve">
          <source>lindex</source>
          <target state="translated">lindex</target>
        </trans-unit>
        <trans-unit id="e1073c766b90be7724d21e19ac7d7c52e174421f" translate="yes" xml:space="preserve">
          <source>linsert</source>
          <target state="translated">linsert</target>
        </trans-unit>
        <trans-unit id="91b9502eb092996269765f5bfe2a69619ddabfd6" translate="yes" xml:space="preserve">
          <source>llen</source>
          <target state="translated">llen</target>
        </trans-unit>
        <trans-unit id="fe18c7670939044a3501dd836416694756301df1" translate="yes" xml:space="preserve">
          <source>lpop</source>
          <target state="translated">lpop</target>
        </trans-unit>
        <trans-unit id="6fc389b36b7fa594ae026992fad6543dfe453bb9" translate="yes" xml:space="preserve">
          <source>lpush</source>
          <target state="translated">lpush</target>
        </trans-unit>
        <trans-unit id="bf7c7291589b397b8220833074fecad056be8e67" translate="yes" xml:space="preserve">
          <source>lpushx</source>
          <target state="translated">lpushx</target>
        </trans-unit>
        <trans-unit id="3f6e620052a9a240605886c2db02d4c147979f62" translate="yes" xml:space="preserve">
          <source>lrange</source>
          <target state="translated">lrange</target>
        </trans-unit>
        <trans-unit id="e5b44e883b57f154819e832a306df9b43c0c8a56" translate="yes" xml:space="preserve">
          <source>lrem</source>
          <target state="translated">lrem</target>
        </trans-unit>
        <trans-unit id="d98f09dafe5e0b7799611cf986aedf32fbfbdb33" translate="yes" xml:space="preserve">
          <source>lset</source>
          <target state="translated">lset</target>
        </trans-unit>
        <trans-unit id="369e0af3a96afe3c044ba2f9a38657ab79015863" translate="yes" xml:space="preserve">
          <source>ltrim</source>
          <target state="translated">ltrim</target>
        </trans-unit>
        <trans-unit id="c8d47f6bdab977e053ed75b58aba1e26b070dc2b" translate="yes" xml:space="preserve">
          <source>memory doctor</source>
          <target state="translated">메모리 닥터</target>
        </trans-unit>
        <trans-unit id="4c44f28c5f5fd4361bca5aa133cda2ecd06f69e0" translate="yes" xml:space="preserve">
          <source>memory help</source>
          <target state="translated">메모리 도움</target>
        </trans-unit>
        <trans-unit id="b57fc8596e36d4e789b7065d2a7a6013c4c630a1" translate="yes" xml:space="preserve">
          <source>memory malloc stats</source>
          <target state="translated">메모리 malloc 통계</target>
        </trans-unit>
        <trans-unit id="45a4491e32971ae5968368f21e0ad4a988c2a71c" translate="yes" xml:space="preserve">
          <source>memory purge</source>
          <target state="translated">메모리 퍼지</target>
        </trans-unit>
        <trans-unit id="69af74870769cf27e53dde832baf0b4f28ad5e75" translate="yes" xml:space="preserve">
          <source>memory stats</source>
          <target state="translated">메모리 통계</target>
        </trans-unit>
        <trans-unit id="ec712513f0f6207344ef66ff495df84a9832d61b" translate="yes" xml:space="preserve">
          <source>memory usage</source>
          <target state="translated">메모리 사용량</target>
        </trans-unit>
        <trans-unit id="1a7b943a3557d4ed6fd3f584b19127ce2953a332" translate="yes" xml:space="preserve">
          <source>mget</source>
          <target state="translated">mget</target>
        </trans-unit>
        <trans-unit id="15efc140fd20187528013120d17653825a3b96d9" translate="yes" xml:space="preserve">
          <source>microseconds.</source>
          <target state="translated">microseconds.</target>
        </trans-unit>
        <trans-unit id="ce5070ef8a0cf3e595ae4cf3f73f6a0eca87e346" translate="yes" xml:space="preserve">
          <source>migrate</source>
          <target state="translated">migrate</target>
        </trans-unit>
        <trans-unit id="9796809f7dae482d3123c16585f2b60f97407796" translate="yes" xml:space="preserve">
          <source>monitor</source>
          <target state="translated">monitor</target>
        </trans-unit>
        <trans-unit id="379d6ce99a8a95a7096ab579d454784c82a994d8" translate="yes" xml:space="preserve">
          <source>move</source>
          <target state="translated">move</target>
        </trans-unit>
        <trans-unit id="10c7cf018400e6d5b16e841bff3630db202cf519" translate="yes" xml:space="preserve">
          <source>mset</source>
          <target state="translated">mset</target>
        </trans-unit>
        <trans-unit id="a507b3db048b0bfa03746472364ff61a3b1f1b35" translate="yes" xml:space="preserve">
          <source>msetnx</source>
          <target state="translated">msetnx</target>
        </trans-unit>
        <trans-unit id="fa119f8dd2bd5910063d13016a3ad5909aebf2d8" translate="yes" xml:space="preserve">
          <source>multi</source>
          <target state="translated">multi</target>
        </trans-unit>
        <trans-unit id="1693ee6d54365e811c504a8a36fe92ee198e25b3" translate="yes" xml:space="preserve">
          <source>negative if command has minimum number of required arguments, but may have more.</source>
          <target state="translated">명령에 필요한 인수 수가 최소이지만 더 많은 인수가 있으면 음수입니다.</target>
        </trans-unit>
        <trans-unit id="cf93eb5e6c60df1fd9b8b4d4ef25051ad76a67fe" translate="yes" xml:space="preserve">
          <source>nested &lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt; of command flags</source>
          <target state="translated">명령 플래그의 중첩 &lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;배열 응답&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="f11f3d182c74d39e2a231a05aad8915f1947f57c" translate="yes" xml:space="preserve">
          <source>persist</source>
          <target state="translated">persist</target>
        </trans-unit>
        <trans-unit id="754a228d6ed6e7d0e2546447cf2601588adab5c5" translate="yes" xml:space="preserve">
          <source>pexpire</source>
          <target state="translated">pexpire</target>
        </trans-unit>
        <trans-unit id="14549a19873b2736ee69ae3cd6aea62fb01616be" translate="yes" xml:space="preserve">
          <source>pexpireat</source>
          <target state="translated">pexpireat</target>
        </trans-unit>
        <trans-unit id="3a4aae4e2c26350aa9134520c58c7f0c1350842e" translate="yes" xml:space="preserve">
          <source>pfadd</source>
          <target state="translated">pfadd</target>
        </trans-unit>
        <trans-unit id="79a95e87e2a9ce00c5ac5283a6cc2658210106d0" translate="yes" xml:space="preserve">
          <source>pfcount</source>
          <target state="translated">pfcount</target>
        </trans-unit>
        <trans-unit id="49362f11a4c8d1fb9e46bd72945a5995ea59d3db" translate="yes" xml:space="preserve">
          <source>pfmerge</source>
          <target state="translated">pfmerge</target>
        </trans-unit>
        <trans-unit id="572982bbc4f29ee92ae2d65a9edc2453d2c9170c" translate="yes" xml:space="preserve">
          <source>ping</source>
          <target state="translated">ping</target>
        </trans-unit>
        <trans-unit id="3119b2f091b97f2b66415e7e47c8f73fe86b0b1c" translate="yes" xml:space="preserve">
          <source>position of first key in argument list</source>
          <target state="translated">인수 목록에서 첫 번째 키의 위치</target>
        </trans-unit>
        <trans-unit id="6fc93d74b0d18ddc082516bd797c50ca82652853" translate="yes" xml:space="preserve">
          <source>position of last key in argument list</source>
          <target state="translated">인수 목록에서 마지막 키의 위치</target>
        </trans-unit>
        <trans-unit id="bed610f7d2f072fab266aa357355edd3a0a7185a" translate="yes" xml:space="preserve">
          <source>positive if command has fixed number of required arguments.</source>
          <target state="translated">명령에 필요한 수의 인수가 고정되어 있으면 양수입니다.</target>
        </trans-unit>
        <trans-unit id="4a3a047a6403d2d3bacb986b7f6151cdb6833cb0" translate="yes" xml:space="preserve">
          <source>psetex</source>
          <target state="translated">psetex</target>
        </trans-unit>
        <trans-unit id="e44e04acda8ed9383787796472c212994366ee63" translate="yes" xml:space="preserve">
          <source>psubscribe</source>
          <target state="translated">psubscribe</target>
        </trans-unit>
        <trans-unit id="a0ca7d4429b67bf5c0e197976ae39b2a20e007bb" translate="yes" xml:space="preserve">
          <source>pttl</source>
          <target state="translated">pttl</target>
        </trans-unit>
        <trans-unit id="5e2fb0c2c59448e1dec5df0f70ec85fcad1ca7b6" translate="yes" xml:space="preserve">
          <source>publish</source>
          <target state="translated">publish</target>
        </trans-unit>
        <trans-unit id="1982b5a745a1c88fef26d98eeabdacb9994ec98a" translate="yes" xml:space="preserve">
          <source>pubsub</source>
          <target state="translated">pubsub</target>
        </trans-unit>
        <trans-unit id="651b795728b6bdb24290db4e183de42624b603f5" translate="yes" xml:space="preserve">
          <source>punsubscribe</source>
          <target state="translated">punsubscribe</target>
        </trans-unit>
        <trans-unit id="f59118712ff45e3f8132cdd3ecfcfc6d3d2fa490" translate="yes" xml:space="preserve">
          <source>quit</source>
          <target state="translated">quit</target>
        </trans-unit>
        <trans-unit id="5a8e9d7284cd1a25846606e62c44cee49802c4fd" translate="yes" xml:space="preserve">
          <source>randomkey</source>
          <target state="translated">randomkey</target>
        </trans-unit>
        <trans-unit id="9a27718297218c3757c365d357d13f49d0fa3065" translate="yes" xml:space="preserve">
          <source>readonly</source>
          <target state="translated">readonly</target>
        </trans-unit>
        <trans-unit id="accf881e821ed62ca842d34164426a7d9215a948" translate="yes" xml:space="preserve">
          <source>readwrite</source>
          <target state="translated">readwrite</target>
        </trans-unit>
        <trans-unit id="a2043ee98940bcb4cbec6e32e5ec4120e9a20360" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; APPEND ts &quot;0043&quot;&lt;code&gt;(integer) 4&lt;/code&gt;redis&amp;gt; APPEND ts &quot;0035&quot;&lt;code&gt;(integer) 8&lt;/code&gt;redis&amp;gt; GETRANGE ts 0 3&lt;code&gt;&quot;0043&quot;&lt;/code&gt;redis&amp;gt; GETRANGE ts 4 7&lt;code&gt;&quot;0035&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; APPEND ts &quot;0043&quot; &lt;code&gt;(integer) 4&lt;/code&gt; redis&amp;gt; APPEND ts &quot;0035&quot; &lt;code&gt;(integer) 8&lt;/code&gt; redis&amp;gt; GETRANGE ts 0 3 &lt;code&gt;&quot;0043&quot;&lt;/code&gt; redis&amp;gt; GETRANGE ts 4 7 &lt;code&gt;&quot;0035&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bedc4c1bbf08d7ca909f592f5658389c9d3cb967" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; CLIENT ID&lt;code&gt;ERR Unknown or disabled command 'CLIENT'&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; CLIENT ID &lt;code&gt;ERR Unknown or disabled command 'CLIENT'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f6c58513f6705f2a1f6be3e30d4446d86fdde98" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; CLIENT INFO&lt;code&gt;&quot;id=58978 addr=127.0.0.1:54260 laddr=127.0.0.1:6379 fd=8 name= age=18089 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=26 qbuf-free=40928 argv-mem=10 obl=0 oll=0 omem=0 tot-mem=61466 events=r cmd=client user=default redir=-1\n&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc76afaba6e4fb16db71ac87c8fe387cdc59f90" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; COMMAND COUNT&lt;code&gt;(integer) 197&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; 명령 수 &lt;code&gt;(integer) 197&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0010812fb5e887379e8ec2eeb2a02e46f170aef2" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; COMMAND COUNT&lt;code&gt;(integer) 217&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce45f3980afeecdaf0a0170bf8b760b841dadd33" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; COMMAND GETKEYS MSET a b c d e f&lt;code&gt;1) &quot;a&quot;
2) &quot;c&quot;
3) &quot;e&quot;&lt;/code&gt;redis&amp;gt; COMMAND GETKEYS EVAL &quot;not consulted&quot; 3 key1 key2 key3 arg1 arg2 arg3 argN&lt;code&gt;1) &quot;key1&quot;
2) &quot;key2&quot;
3) &quot;key3&quot;&lt;/code&gt;redis&amp;gt; COMMAND GETKEYS SORT mylist ALPHA STORE outlist&lt;code&gt;1) &quot;mylist&quot;
2) &quot;outlist&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; 명령 GETKEYS MSET abcdef &lt;code&gt;1) &quot;a&quot; 2) &quot;c&quot; 3) &quot;e&quot;&lt;/code&gt; redis&amp;gt; 명령 GETKEYS EVAL &quot;문의되지 않음&quot;3 key1 key2 key3 arg1 arg2 arg3 argN &lt;code&gt;1) &quot;key1&quot; 2) &quot;key2&quot; 3) &quot;key3&quot;&lt;/code&gt; redis&amp;gt; 명령 GETKEYS SORT mylist ALPHA STORE 아웃리스트 &lt;code&gt;1) &quot;mylist&quot; 2) &quot;outlist&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7434c6735306ea1696db268080397640401317bf" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; COMMAND INFO get set eval&lt;code&gt;1) 1) &quot;get&quot;
   2) (integer) 2
   3) 1) &quot;readonly&quot;
      2) &quot;fast&quot;
   4) (integer) 1
   5) (integer) 1
   6) (integer) 1
   7) 1) &quot;@read&quot;
      2) &quot;@string&quot;
      3) &quot;@fast&quot;
2) 1) &quot;set&quot;
   2) (integer) -3
   3) 1) &quot;write&quot;
      2) &quot;denyoom&quot;
   4) (integer) 1
   5) (integer) 1
   6) (integer) 1
   7) 1) &quot;@write&quot;
      2) &quot;@string&quot;
      3) &quot;@slow&quot;
3) 1) &quot;eval&quot;
   2) (integer) -3
   3) 1) &quot;noscript&quot;
      2) &quot;movablekeys&quot;
   4) (integer) 0
   5) (integer) 0
   6) (integer) 0
   7) 1) &quot;@slow&quot;
      2) &quot;@scripting&quot;&lt;/code&gt;redis&amp;gt; COMMAND INFO foo evalsha config bar&lt;code&gt;1) (nil)
2) 1) &quot;evalsha&quot;
   2) (integer) -3
   3) 1) &quot;noscript&quot;
      2) &quot;movablekeys&quot;
   4) (integer) 0
   5) (integer) 0
   6) (integer) 0
   7) 1) &quot;@slow&quot;
      2) &quot;@scripting&quot;
3) 1) &quot;config&quot;
   2) (integer) -2
   3) 1) &quot;admin&quot;
      2) &quot;noscript&quot;
      3) &quot;loading&quot;
      4) &quot;stale&quot;
   4) (integer) 0
   5) (integer) 0
   6) (integer) 0
   7) 1) &quot;@admin&quot;
      2) &quot;@slow&quot;
      3) &quot;@dangerous&quot;
4) (nil)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baff33c5ab3a0d322c68de3a9493f0692ae31ac0" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; COMMAND INFO get set eval&lt;code&gt;1) 1) &quot;get&quot;
   2) (integer) 2
   3) 1) &quot;readonly&quot;
      2) &quot;fast&quot;
   4) (integer) 1
   5) (integer) 1
   6) (integer) 1
2) 1) &quot;set&quot;
   2) (integer) -3
   3) 1) &quot;write&quot;
      2) &quot;denyoom&quot;
   4) (integer) 1
   5) (integer) 1
   6) (integer) 1
3) 1) &quot;eval&quot;
   2) (integer) -3
   3) 1) &quot;noscript&quot;
      2) &quot;movablekeys&quot;
   4) (integer) 0
   5) (integer) 0
   6) (integer) 0&lt;/code&gt;redis&amp;gt; COMMAND INFO foo evalsha config bar&lt;code&gt;1) (nil)
2) 1) &quot;evalsha&quot;
   2) (integer) -3
   3) 1) &quot;noscript&quot;
      2) &quot;movablekeys&quot;
   4) (integer) 0
   5) (integer) 0
   6) (integer) 0
3) 1) &quot;config&quot;
   2) (integer) -2
   3) 1) &quot;admin&quot;
      2) &quot;loading&quot;
      3) &quot;stale&quot;
   4) (integer) 0
   5) (integer) 0
   6) (integer) 0
4) (nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; COMMAND INFO get eval 설정 &lt;code&gt;1) 1) &quot;get&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 2) 1) &quot;set&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 3) 1) &quot;eval&quot; 2) (integer) -3 3) 1) &quot;noscript&quot; 2) &quot;movablekeys&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0&lt;/code&gt; redis&amp;gt; 명령 정보 foo evalsha 구성 모음 &lt;code&gt;1) (nil) 2) 1) &quot;evalsha&quot; 2) (integer) -3 3) 1) &quot;noscript&quot; 2) &quot;movablekeys&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 3) 1) &quot;config&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 2) &quot;loading&quot; 3) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 4) (nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97f72987eb50f541db193bb051d1fcf7bb4f655b" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; COMMAND&lt;code&gt;1) 1) &quot;georadius_ro&quot;
     2) (integer) -6
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
  2) 1) &quot;zpopmin&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
  3) 1) &quot;msetnx&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 2
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
  4) 1) &quot;hstrlen&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
  5) 1) &quot;bitpos&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@bitmap&quot;
        3) &quot;@slow&quot;
  6) 1) &quot;bzpopmin&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
        4) &quot;@blocking&quot;
  7) 1) &quot;xdel&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@fast&quot;
  8) 1) &quot;wait&quot;
     2) (integer) 3
     3) 1) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@slow&quot;
  9) 1) &quot;psync&quot;
     2) (integer) 3
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 10) 1) &quot;zrevrank&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
 11) 1) &quot;client&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;random&quot;
        4) &quot;loading&quot;
        5) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
        4) &quot;@connection&quot;
 12) 1) &quot;xlen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@stream&quot;
        3) &quot;@fast&quot;
 13) 1) &quot;subscribe&quot;
     2) (integer) -2
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@pubsub&quot;
        2) &quot;@slow&quot;
 14) 1) &quot;sync&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 15) 1) &quot;zdiff&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 16) 1) &quot;bzpopmax&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
        4) &quot;@blocking&quot;
 17) 1) &quot;geoadd&quot;
     2) (integer) -5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
 18) 1) &quot;xinfo&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 2
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
 19) 1) &quot;geopos&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
 20) 1) &quot;info&quot;
     2) (integer) -1
     3) 1) &quot;random&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@slow&quot;
        2) &quot;@dangerous&quot;
 21) 1) &quot;zrevrangebyscore&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 22) 1) &quot;xrevrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
 23) 1) &quot;hscan&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@slow&quot;
 24) 1) &quot;smismember&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@fast&quot;
 25) 1) &quot;pfadd&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hyperloglog&quot;
        3) &quot;@fast&quot;
 26) 1) &quot;zcard&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
 27) 1) &quot;psubscribe&quot;
     2) (integer) -2
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@pubsub&quot;
        2) &quot;@slow&quot;
 28) 1) &quot;brpop&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
        4) &quot;@blocking&quot;
 29) 1) &quot;hmset&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
 30) 1) &quot;llen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@list&quot;
        3) &quot;@fast&quot;
 31) 1) &quot;zremrangebyscore&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 32) 1) &quot;setrange&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
 33) 1) &quot;xclaim&quot;
     2) (integer) -6
     3) 1) &quot;write&quot;
        2) &quot;random&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@fast&quot;
 34) 1) &quot;dump&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@slow&quot;
 35) 1) &quot;smembers&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
 36) 1) &quot;setex&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
 37) 1) &quot;pfmerge&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hyperloglog&quot;
        3) &quot;@slow&quot;
 38) 1) &quot;punsubscribe&quot;
     2) (integer) -1
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@pubsub&quot;
        2) &quot;@slow&quot;
 39) 1) &quot;debug&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 40) 1) &quot;pfcount&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hyperloglog&quot;
        3) &quot;@slow&quot;
 41) 1) &quot;decr&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
 42) 1) &quot;unwatch&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@fast&quot;
        2) &quot;@transaction&quot;
 43) 1) &quot;smove&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@fast&quot;
 44) 1) &quot;getrange&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
 45) 1) &quot;incr&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
 46) 1) &quot;latency&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 47) 1) &quot;geodist&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
 48) 1) &quot;srem&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@fast&quot;
 49) 1) &quot;zdiffstore&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 50) 1) &quot;sscan&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
 51) 1) &quot;lpop&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@fast&quot;
 52) 1) &quot;ltrim&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
 53) 1) &quot;scan&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@slow&quot;
 54) 1) &quot;auth&quot;
     2) (integer) -2
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;skip_monitor&quot;
        5) &quot;skip_slowlog&quot;
        6) &quot;fast&quot;
        7) &quot;no_auth&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@fast&quot;
        2) &quot;@connection&quot;
 55) 1) &quot;zrevrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 56) 1) &quot;replconf&quot;
     2) (integer) -1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 57) 1) &quot;sadd&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@fast&quot;
 58) 1) &quot;select&quot;
     2) (integer) 2
     3) 1) &quot;loading&quot;
        2) &quot;stale&quot;
        3) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@fast&quot;
 59) 1) &quot;monitor&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 60) 1) &quot;asking&quot;
     2) (integer) 1
     3) 1) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@fast&quot;
 61) 1) &quot;lpush&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@fast&quot;
 62) 1) &quot;cluster&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;random&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 63) 1) &quot;pttl&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@fast&quot;
 64) 1) &quot;xrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
 65) 1) &quot;memory&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@slow&quot;
 66) 1) &quot;reset&quot;
     2) (integer) -1
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@fast&quot;
        2) &quot;@connection&quot;
 67) 1) &quot;pfdebug&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;admin&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@write&quot;
        2) &quot;@admin&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
 68) 1) &quot;hexists&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
 69) 1) &quot;expire&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
 70) 1) &quot;bgrewriteaof&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 71) 1) &quot;command&quot;
     2) (integer) -1
     3) 1) &quot;random&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@slow&quot;
        2) &quot;@connection&quot;
 72) 1) &quot;zremrangebyrank&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 73) 1) &quot;lmove&quot;
     2) (integer) 5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
 74) 1) &quot;echo&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@fast&quot;
        3) &quot;@connection&quot;
 75) 1) &quot;publish&quot;
     2) (integer) 3
     3) 1) &quot;pubsub&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@pubsub&quot;
        2) &quot;@fast&quot;
 76) 1) &quot;renamenx&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
 77) 1) &quot;unlink&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
 78) 1) &quot;georadiusbymember_ro&quot;
     2) (integer) -5
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
 79) 1) &quot;lset&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
 80) 1) &quot;hlen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
 81) 1) &quot;xpending&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
 82) 1) &quot;hgetall&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@slow&quot;
 83) 1) &quot;get&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
 84) 1) &quot;hvals&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@slow&quot;
 85) 1) &quot;linsert&quot;
     2) (integer) 5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
 86) 1) &quot;hsetnx&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
 87) 1) &quot;keys&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
 88) 1) &quot;role&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
        5) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@fast&quot;
        3) &quot;@dangerous&quot;
 89) 1) &quot;zrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 90) 1) &quot;module&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
 91) 1) &quot;expireat&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
 92) 1) &quot;incrby&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
 93) 1) &quot;lrem&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
 94) 1) &quot;bitcount&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@bitmap&quot;
        3) &quot;@slow&quot;
 95) 1) &quot;zscore&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
 96) 1) &quot;zinter&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
 97) 1) &quot;xread&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
        4) &quot;@blocking&quot;
 98) 1) &quot;strlen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
 99) 1) &quot;lindex&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
100) 1) &quot;getset&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
101) 1) &quot;copy&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
102) 1) &quot;hget&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
103) 1) &quot;rpoplpush&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
104) 1) &quot;sunionstore&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
105) 1) &quot;spop&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;random&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@fast&quot;
106) 1) &quot;geosearch&quot;
     2) (integer) -7
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
107) 1) &quot;zunion&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
108) 1) &quot;randomkey&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@slow&quot;
109) 1) &quot;flushall&quot;
     2) (integer) -1
     3) 1) &quot;write&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
110) 1) &quot;sort&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@sortedset&quot;
        4) &quot;@list&quot;
        5) &quot;@slow&quot;
        6) &quot;@dangerous&quot;
111) 1) &quot;zremrangebylex&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
112) 1) &quot;zincrby&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
113) 1) &quot;evalsha&quot;
     2) (integer) -3
     3) 1) &quot;noscript&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@slow&quot;
        2) &quot;@scripting&quot;
114) 1) &quot;stralgo&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
115) 1) &quot;move&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
116) 1) &quot;readwrite&quot;
     2) (integer) 1
     3) 1) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@fast&quot;
117) 1) &quot;hello&quot;
     2) (integer) -2
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;skip_monitor&quot;
        5) &quot;skip_slowlog&quot;
        6) &quot;fast&quot;
        7) &quot;no_auth&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@fast&quot;
        2) &quot;@connection&quot;
118) 1) &quot;xadd&quot;
     2) (integer) -5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;random&quot;
        4) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@fast&quot;
119) 1) &quot;brpoplpush&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;noscript&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
        4) &quot;@blocking&quot;
120) 1) &quot;xgroup&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 2
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
121) 1) &quot;blpop&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
        4) &quot;@blocking&quot;
122) 1) &quot;hincrbyfloat&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
123) 1) &quot;sinter&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
124) 1) &quot;setnx&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
125) 1) &quot;bitfield&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@bitmap&quot;
        3) &quot;@slow&quot;
126) 1) &quot;hincrby&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
127) 1) &quot;decrby&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
128) 1) &quot;shutdown&quot;
     2) (integer) -1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
129) 1) &quot;rpop&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@fast&quot;
130) 1) &quot;sinterstore&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
131) 1) &quot;scard&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@fast&quot;
132) 1) &quot;persist&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
133) 1) &quot;migrate&quot;
     2) (integer) -6
     3) 1) &quot;write&quot;
        2) &quot;random&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
134) 1) &quot;pexpire&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
135) 1) &quot;host:&quot;
     2) (integer) -1
     3) 1) &quot;readonly&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@slow&quot;
136) 1) &quot;replicaof&quot;
     2) (integer) 3
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
137) 1) &quot;lrange&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
138) 1) &quot;xack&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;random&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@fast&quot;
139) 1) &quot;restore-asking&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;asking&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
140) 1) &quot;hdel&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
141) 1) &quot;geosearchstore&quot;
     2) (integer) -8
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
142) 1) &quot;type&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@fast&quot;
143) 1) &quot;zrangebyscore&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
144) 1) &quot;xtrim&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
145) 1) &quot;script&quot;
     2) (integer) -2
     3) 1) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@slow&quot;
        2) &quot;@scripting&quot;
146) 1) &quot;touch&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@fast&quot;
147) 1) &quot;lolwut&quot;
     2) (integer) -1
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@fast&quot;
148) 1) &quot;restore&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
149) 1) &quot;zadd&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
150) 1) &quot;acl&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
        5) &quot;skip_slowlog&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
151) 1) &quot;readonly&quot;
     2) (integer) 1
     3) 1) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@fast&quot;
152) 1) &quot;zpopmax&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
153) 1) &quot;blmove&quot;
     2) (integer) 6
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;noscript&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
        4) &quot;@blocking&quot;
154) 1) &quot;xreadgroup&quot;
     2) (integer) -7
     3) 1) &quot;write&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@slow&quot;
        4) &quot;@blocking&quot;
155) 1) &quot;sdiff&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
156) 1) &quot;multi&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@fast&quot;
        2) &quot;@transaction&quot;
157) 1) &quot;hmget&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
158) 1) &quot;zrem&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
159) 1) &quot;zrangebylex&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
160) 1) &quot;config&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
161) 1) &quot;getbit&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@bitmap&quot;
        3) &quot;@fast&quot;
162) 1) &quot;hkeys&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@hash&quot;
        3) &quot;@slow&quot;
163) 1) &quot;georadius&quot;
     2) (integer) -6
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
164) 1) &quot;xsetid&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@stream&quot;
        3) &quot;@fast&quot;
165) 1) &quot;lastsave&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
        5) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@admin&quot;
        3) &quot;@fast&quot;
        4) &quot;@dangerous&quot;
166) 1) &quot;geohash&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
167) 1) &quot;bgsave&quot;
     2) (integer) -1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
168) 1) &quot;substr&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
169) 1) &quot;ping&quot;
     2) (integer) -1
     3) 1) &quot;stale&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@fast&quot;
        2) &quot;@connection&quot;
170) 1) &quot;pfselftest&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@hyperloglog&quot;
        2) &quot;@admin&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
171) 1) &quot;zcount&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
172) 1) &quot;exists&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@fast&quot;
173) 1) &quot;zlexcount&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
174) 1) &quot;unsubscribe&quot;
     2) (integer) -1
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@pubsub&quot;
        2) &quot;@slow&quot;
175) 1) &quot;zrevrangebylex&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
176) 1) &quot;zrank&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
177) 1) &quot;georadiusbymember&quot;
     2) (integer) -5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@geo&quot;
        3) &quot;@slow&quot;
178) 1) &quot;incrbyfloat&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
179) 1) &quot;rpushx&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@fast&quot;
180) 1) &quot;pexpireat&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
181) 1) &quot;slaveof&quot;
     2) (integer) 3
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
182) 1) &quot;lpushx&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@fast&quot;
183) 1) &quot;swapdb&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@fast&quot;
        4) &quot;@dangerous&quot;
184) 1) &quot;append&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;
185) 1) &quot;mset&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 2
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
186) 1) &quot;zmscore&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@fast&quot;
187) 1) &quot;srandmember&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
188) 1) &quot;dbsize&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@fast&quot;
189) 1) &quot;save&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
190) 1) &quot;time&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
        5) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@fast&quot;
191) 1) &quot;zinterstore&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
192) 1) &quot;slowlog&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;random&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@admin&quot;
        2) &quot;@slow&quot;
        3) &quot;@dangerous&quot;
193) 1) &quot;set&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
194) 1) &quot;rename&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
195) 1) &quot;bitop&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 2
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@bitmap&quot;
        3) &quot;@slow&quot;
196) 1) &quot;sismember&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@fast&quot;
197) 1) &quot;setbit&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@bitmap&quot;
        3) &quot;@slow&quot;
198) 1) &quot;del&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
199) 1) &quot;object&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 2
     5) (integer) 2
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@slow&quot;
200) 1) &quot;post&quot;
     2) (integer) -1
     3) 1) &quot;readonly&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@read&quot;
        2) &quot;@slow&quot;
201) 1) &quot;zunionstore&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@write&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
202) 1) &quot;eval&quot;
     2) (integer) -3
     3) 1) &quot;noscript&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@slow&quot;
        2) &quot;@scripting&quot;
203) 1) &quot;discard&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@fast&quot;
        2) &quot;@transaction&quot;
204) 1) &quot;bitfield_ro&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@bitmap&quot;
        3) &quot;@fast&quot;
205) 1) &quot;flushdb&quot;
     2) (integer) -1
     3) 1) &quot;write&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@keyspace&quot;
        2) &quot;@write&quot;
        3) &quot;@slow&quot;
        4) &quot;@dangerous&quot;
206) 1) &quot;sdiffstore&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
207) 1) &quot;psetex&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@string&quot;
        3) &quot;@slow&quot;
208) 1) &quot;hset&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@hash&quot;
        3) &quot;@fast&quot;
209) 1) &quot;lpos&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@list&quot;
        3) &quot;@slow&quot;
210) 1) &quot;exec&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;skip_monitor&quot;
        5) &quot;skip_slowlog&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@slow&quot;
        2) &quot;@transaction&quot;
211) 1) &quot;zscan&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@sortedset&quot;
        3) &quot;@slow&quot;
212) 1) &quot;sunion&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@set&quot;
        3) &quot;@slow&quot;
213) 1) &quot;watch&quot;
     2) (integer) -2
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@fast&quot;
        2) &quot;@transaction&quot;
214) 1) &quot;pubsub&quot;
     2) (integer) -2
     3) 1) &quot;pubsub&quot;
        2) &quot;random&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
     7) 1) &quot;@pubsub&quot;
        2) &quot;@slow&quot;
215) 1) &quot;ttl&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@keyspace&quot;
        2) &quot;@read&quot;
        3) &quot;@fast&quot;
216) 1) &quot;rpush&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
     7) 1) &quot;@write&quot;
        2) &quot;@list&quot;
        3) &quot;@fast&quot;
217) 1) &quot;mget&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
     7) 1) &quot;@read&quot;
        2) &quot;@string&quot;
        3) &quot;@fast&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b271024fdd4aa24987dd42d3bdb176d9765851c" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; COMMAND&lt;code&gt;1) 1) &quot;sadd&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
  2) 1) &quot;lrange&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
  3) 1) &quot;time&quot;
     2) (integer) 1
     3) 1) &quot;random&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
  4) 1) &quot;spop&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;random&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
  5) 1) &quot;hvals&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
  6) 1) &quot;debug&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
  7) 1) &quot;georadius_ro&quot;
     2) (integer) -6
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
  8) 1) &quot;select&quot;
     2) (integer) 2
     3) 1) &quot;loading&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
  9) 1) &quot;auth&quot;
     2) (integer) 2
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 10) 1) &quot;mset&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 2
 11) 1) &quot;zremrangebylex&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 12) 1) &quot;rename&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
 13) 1) &quot;xreadgroup&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 14) 1) &quot;xrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 15) 1) &quot;georadiusbymember_ro&quot;
     2) (integer) -5
     3) 1) &quot;readonly&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 16) 1) &quot;xadd&quot;
     2) (integer) -5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 17) 1) &quot;srem&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 18) 1) &quot;punsubscribe&quot;
     2) (integer) -1
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 19) 1) &quot;hmget&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 20) 1) &quot;sinterstore&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
 21) 1) &quot;xdel&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 22) 1) &quot;blpop&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
 23) 1) &quot;zrangebyscore&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 24) 1) &quot;decr&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 25) 1) &quot;touch&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 26) 1) &quot;sismember&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 27) 1) &quot;object&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 2
     5) (integer) 2
     6) (integer) 1
 28) 1) &quot;sunion&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
 29) 1) &quot;type&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 30) 1) &quot;persist&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 31) 1) &quot;xack&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 32) 1) &quot;asking&quot;
     2) (integer) 1
     3) 1) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 33) 1) &quot;randomkey&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 34) 1) &quot;sync&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;admin&quot;
        3) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 35) 1) &quot;incr&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 36) 1) &quot;slaveof&quot;
     2) (integer) 3
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 37) 1) &quot;zadd&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 38) 1) &quot;bitfield&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 39) 1) &quot;module&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 40) 1) &quot;psubscribe&quot;
     2) (integer) -2
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 41) 1) &quot;getrange&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 42) 1) &quot;bzpopmin&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
 43) 1) &quot;lpush&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 44) 1) &quot;bgrewriteaof&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 45) 1) &quot;replconf&quot;
     2) (integer) -1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 46) 1) &quot;eval&quot;
     2) (integer) -3
     3) 1) &quot;noscript&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 47) 1) &quot;pfmerge&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
 48) 1) &quot;incrby&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 49) 1) &quot;zincrby&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 50) 1) &quot;sscan&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 51) 1) &quot;substr&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 52) 1) &quot;zremrangebyrank&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 53) 1) &quot;append&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 54) 1) &quot;zpopmax&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
 55) 1) &quot;bitpos&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 56) 1) &quot;hstrlen&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 57) 1) &quot;monitor&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 58) 1) &quot;post&quot;
     2) (integer) -1
     3) 1) &quot;loading&quot;
        2) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 59) 1) &quot;lset&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 60) 1) &quot;set&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 61) 1) &quot;brpop&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
 62) 1) &quot;zrevrank&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 63) 1) &quot;georadius&quot;
     2) (integer) -6
     3) 1) &quot;write&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 64) 1) &quot;sdiffstore&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
 65) 1) &quot;lpop&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 66) 1) &quot;ping&quot;
     2) (integer) -1
     3) 1) &quot;stale&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 67) 1) &quot;pfcount&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
 68) 1) &quot;zrangebylex&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 69) 1) &quot;zrevrangebyscore&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 70) 1) &quot;flushdb&quot;
     2) (integer) -1
     3) 1) &quot;write&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 71) 1) &quot;sort&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 72) 1) &quot;bzpopmax&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;noscript&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -2
     6) (integer) 1
 73) 1) &quot;move&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 74) 1) &quot;georadiusbymember&quot;
     2) (integer) -5
     3) 1) &quot;write&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 75) 1) &quot;config&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 76) 1) &quot;xrevrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 77) 1) &quot;zunionstore&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 78) 1) &quot;geopos&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 79) 1) &quot;hdel&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 80) 1) &quot;hincrby&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 81) 1) &quot;cluster&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 82) 1) &quot;geodist&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 83) 1) &quot;bgsave&quot;
     2) (integer) -1
     3) 1) &quot;admin&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 84) 1) &quot;unsubscribe&quot;
     2) (integer) -1
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 85) 1) &quot;renamenx&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
 86) 1) &quot;unwatch&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 87) 1) &quot;echo&quot;
     2) (integer) 2
     3) 1) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 88) 1) &quot;flushall&quot;
     2) (integer) -1
     3) 1) &quot;write&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 89) 1) &quot;host:&quot;
     2) (integer) -1
     3) 1) &quot;loading&quot;
        2) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 90) 1) &quot;hkeys&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 91) 1) &quot;zlexcount&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 92) 1) &quot;xpending&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 93) 1) &quot;hscan&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 94) 1) &quot;setnx&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 95) 1) &quot;lastsave&quot;
     2) (integer) 1
     3) 1) &quot;random&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 96) 1) &quot;memory&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 97) 1) &quot;getbit&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
 98) 1) &quot;keys&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
 99) 1) &quot;hexists&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
100) 1) &quot;migrate&quot;
     2) (integer) -6
     3) 1) &quot;write&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
101) 1) &quot;expire&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
102) 1) &quot;geohash&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
103) 1) &quot;role&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
104) 1) &quot;unlink&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
105) 1) &quot;zcard&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
106) 1) &quot;save&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
107) 1) &quot;script&quot;
     2) (integer) -2
     3) 1) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
108) 1) &quot;hsetnx&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
109) 1) &quot;rpush&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
110) 1) &quot;xclaim&quot;
     2) (integer) -5
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
111) 1) &quot;rpushx&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
112) 1) &quot;hset&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
113) 1) &quot;setrange&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
114) 1) &quot;zscore&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
115) 1) &quot;hget&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
116) 1) &quot;lpushx&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
117) 1) &quot;linsert&quot;
     2) (integer) 5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
118) 1) &quot;multi&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
119) 1) &quot;pfadd&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
120) 1) &quot;scan&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
121) 1) &quot;latency&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
122) 1) &quot;xread&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;noscript&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
123) 1) &quot;ltrim&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
124) 1) &quot;ttl&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
125) 1) &quot;psync&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;admin&quot;
        3) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
126) 1) &quot;msetnx&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 2
127) 1) &quot;sinter&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
128) 1) &quot;zcount&quot;
     2) (integer) 4
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
129) 1) &quot;zrevrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
130) 1) &quot;rpop&quot;
     2) (integer) 2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
131) 1) &quot;dump&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
132) 1) &quot;pttl&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
133) 1) &quot;bitcount&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
134) 1) &quot;decrby&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
135) 1) &quot;xgroup&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 2
     5) (integer) 2
     6) (integer) 1
136) 1) &quot;hincrbyfloat&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
137) 1) &quot;lindex&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
138) 1) &quot;client&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
        2) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
139) 1) &quot;pexpireat&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
140) 1) &quot;xinfo&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
     4) (integer) 2
     5) (integer) 2
     6) (integer) 1
141) 1) &quot;zpopmin&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
142) 1) &quot;hmset&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
143) 1) &quot;pfdebug&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
144) 1) &quot;brpoplpush&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;noscript&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
145) 1) &quot;sdiff&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
146) 1) &quot;zrem&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
147) 1) &quot;command&quot;
     2) (integer) 0
     3) 1) &quot;loading&quot;
        2) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
148) 1) &quot;publish&quot;
     2) (integer) 3
     3) 1) &quot;pubsub&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
        4) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
149) 1) &quot;exists&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
150) 1) &quot;swapdb&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
151) 1) &quot;del&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
152) 1) &quot;getset&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
153) 1) &quot;rpoplpush&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
154) 1) &quot;setbit&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
155) 1) &quot;hlen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
156) 1) &quot;incrbyfloat&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
157) 1) &quot;zrange&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
158) 1) &quot;setex&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
159) 1) &quot;psetex&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
160) 1) &quot;shutdown&quot;
     2) (integer) -1
     3) 1) &quot;admin&quot;
        2) &quot;loading&quot;
        3) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
161) 1) &quot;evalsha&quot;
     2) (integer) -3
     3) 1) &quot;noscript&quot;
        2) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
162) 1) &quot;scard&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
163) 1) &quot;restore-asking&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;asking&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
164) 1) &quot;srandmember&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
165) 1) &quot;hgetall&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
166) 1) &quot;strlen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
167) 1) &quot;wait&quot;
     2) (integer) 3
     3) 1) &quot;noscript&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
168) 1) &quot;watch&quot;
     2) (integer) -2
     3) 1) &quot;noscript&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
169) 1) &quot;get&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
170) 1) &quot;pubsub&quot;
     2) (integer) -2
     3) 1) &quot;pubsub&quot;
        2) &quot;random&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
171) 1) &quot;dbsize&quot;
     2) (integer) 1
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
172) 1) &quot;smembers&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;sort_for_script&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
173) 1) &quot;zrevrangebylex&quot;
     2) (integer) -4
     3) 1) &quot;readonly&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
174) 1) &quot;subscribe&quot;
     2) (integer) -2
     3) 1) &quot;pubsub&quot;
        2) &quot;noscript&quot;
        3) &quot;loading&quot;
        4) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
175) 1) &quot;zinterstore&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
        3) &quot;movablekeys&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
176) 1) &quot;smove&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 2
     6) (integer) 1
177) 1) &quot;readonly&quot;
     2) (integer) 1
     3) 1) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
178) 1) &quot;zremrangebyscore&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
179) 1) &quot;sunionstore&quot;
     2) (integer) -3
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
180) 1) &quot;llen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
181) 1) &quot;discard&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
182) 1) &quot;info&quot;
     2) (integer) -1
     3) 1) &quot;loading&quot;
        2) &quot;stale&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
183) 1) &quot;pfselftest&quot;
     2) (integer) 1
     3) 1) &quot;admin&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
184) 1) &quot;bitop&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 2
     5) (integer) -1
     6) (integer) 1
185) 1) &quot;pexpire&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
186) 1) &quot;xlen&quot;
     2) (integer) 2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
187) 1) &quot;mget&quot;
     2) (integer) -2
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) -1
     6) (integer) 1
188) 1) &quot;xtrim&quot;
     2) (integer) -2
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
189) 1) &quot;exec&quot;
     2) (integer) 1
     3) 1) &quot;noscript&quot;
        2) &quot;skip_monitor&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
190) 1) &quot;zscan&quot;
     2) (integer) -3
     3) 1) &quot;readonly&quot;
        2) &quot;random&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
191) 1) &quot;zrank&quot;
     2) (integer) 3
     3) 1) &quot;readonly&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
192) 1) &quot;geoadd&quot;
     2) (integer) -5
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
193) 1) &quot;expireat&quot;
     2) (integer) 3
     3) 1) &quot;write&quot;
        2) &quot;fast&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
194) 1) &quot;slowlog&quot;
     2) (integer) -2
     3) 1) &quot;admin&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
195) 1) &quot;readwrite&quot;
     2) (integer) 1
     3) 1) &quot;fast&quot;
     4) (integer) 0
     5) (integer) 0
     6) (integer) 0
196) 1) &quot;lrem&quot;
     2) (integer) 4
     3) 1) &quot;write&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1
197) 1) &quot;restore&quot;
     2) (integer) -4
     3) 1) &quot;write&quot;
        2) &quot;denyoom&quot;
     4) (integer) 1
     5) (integer) 1
     6) (integer) 1&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; 명령 &lt;code&gt;1) 1) &quot;sadd&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 2) 1) &quot;lrange&quot; 2) (integer) 4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 3) 1) &quot;time&quot; 2) (integer) 1 3) 1) &quot;random&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 4) 1) &quot;spop&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;random&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 5) 1) &quot;hvals&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;sort_for_script&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 6) 1) &quot;debug&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 7) 1) &quot;georadius_ro&quot; 2) (integer) -6 3) 1) &quot;readonly&quot; 2) &quot;movablekeys&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 8) 1) &quot;select&quot; 2) (integer) 2 3) 1) &quot;loading&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 9) 1) &quot;auth&quot; 2) (integer) 2 3) 1) &quot;noscript&quot; 2) &quot;loading&quot; 3) &quot;stale&quot; 4) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 10) 1) &quot;mset&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 2 11) 1) &quot;zremrangebylex&quot; 2) (integer) 4 3) 1) &quot;write&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 12) 1) &quot;rename&quot; 2) (integer) 3 3) 1) &quot;write&quot; 4) (integer) 1 5) (integer) 2 6) (integer) 1 13) 1) &quot;xreadgroup&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;noscript&quot; 3) &quot;movablekeys&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 14) 1) &quot;xrange&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 15) 1) &quot;georadiusbymember_ro&quot; 2) (integer) -5 3) 1) &quot;readonly&quot; 2) &quot;movablekeys&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 16) 1) &quot;xadd&quot; 2) (integer) -5 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 17) 1) &quot;srem&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 18) 1) &quot;punsubscribe&quot; 2) (integer) -1 3) 1) &quot;pubsub&quot; 2) &quot;noscript&quot; 3) &quot;loading&quot; 4) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 19) 1) &quot;hmget&quot; 2) (integer) -3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 20) 1) &quot;sinterstore&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 21) 1) &quot;xdel&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 22) 1) &quot;blpop&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;noscript&quot; 4) (integer) 1 5) (integer) -2 6) (integer) 1 23) 1) &quot;zrangebyscore&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 24) 1) &quot;decr&quot; 2) (integer) 2 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 25) 1) &quot;touch&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 26) 1) &quot;sismember&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 27) 1) &quot;object&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 4) (integer) 2 5) (integer) 2 6) (integer) 1 28) 1) &quot;sunion&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;sort_for_script&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 29) 1) &quot;type&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 30) 1) &quot;persist&quot; 2) (integer) 2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 31) 1) &quot;xack&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 32) 1) &quot;asking&quot; 2) (integer) 1 3) 1) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 33) 1) &quot;randomkey&quot; 2) (integer) 1 3) 1) &quot;readonly&quot; 2) &quot;random&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 34) 1) &quot;sync&quot; 2) (integer) 1 3) 1) &quot;readonly&quot; 2) &quot;admin&quot; 3) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 35) 1) &quot;incr&quot; 2) (integer) 2 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 36) 1) &quot;slaveof&quot; 2) (integer) 3 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 3) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 37) 1) &quot;zadd&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 38) 1) &quot;bitfield&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 39) 1) &quot;module&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 40) 1) &quot;psubscribe&quot; 2) (integer) -2 3) 1) &quot;pubsub&quot; 2) &quot;noscript&quot; 3) &quot;loading&quot; 4) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 41) 1) &quot;getrange&quot; 2) (integer) 4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 42) 1) &quot;bzpopmin&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;noscript&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) -2 6) (integer) 1 43) 1) &quot;lpush&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 44) 1) &quot;bgrewriteaof&quot; 2) (integer) 1 3) 1) &quot;admin&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 45) 1) &quot;replconf&quot; 2) (integer) -1 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 3) &quot;loading&quot; 4) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 46) 1) &quot;eval&quot; 2) (integer) -3 3) 1) &quot;noscript&quot; 2) &quot;movablekeys&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 47) 1) &quot;pfmerge&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 48) 1) &quot;incrby&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 49) 1) &quot;zincrby&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 50) 1) &quot;sscan&quot; 2) (integer) -3 3) 1) &quot;readonly&quot; 2) &quot;random&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 51) 1) &quot;substr&quot; 2) (integer) 4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 52) 1) &quot;zremrangebyrank&quot; 2) (integer) 4 3) 1) &quot;write&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 53) 1) &quot;append&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 54) 1) &quot;zpopmax&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 55) 1) &quot;bitpos&quot; 2) (integer) -3 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 56) 1) &quot;hstrlen&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 57) 1) &quot;monitor&quot; 2) (integer) 1 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 58) 1) &quot;post&quot; 2) (integer) -1 3) 1) &quot;loading&quot; 2) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 59) 1) &quot;lset&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 60) 1) &quot;set&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 61) 1) &quot;brpop&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;noscript&quot; 4) (integer) 1 5) (integer) -2 6) (integer) 1 62) 1) &quot;zrevrank&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 63) 1) &quot;georadius&quot; 2) (integer) -6 3) 1) &quot;write&quot; 2) &quot;movablekeys&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 64) 1) &quot;sdiffstore&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 65) 1) &quot;lpop&quot; 2) (integer) 2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 66) 1) &quot;ping&quot; 2) (integer) -1 3) 1) &quot;stale&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 67) 1) &quot;pfcount&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 68) 1) &quot;zrangebylex&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 69) 1) &quot;zrevrangebyscore&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 70) 1) &quot;flushdb&quot; 2) (integer) -1 3) 1) &quot;write&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 71) 1) &quot;sort&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;movablekeys&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 72) 1) &quot;bzpopmax&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;noscript&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) -2 6) (integer) 1 73) 1) &quot;move&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 74) 1) &quot;georadiusbymember&quot; 2) (integer) -5 3) 1) &quot;write&quot; 2) &quot;movablekeys&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 75) 1) &quot;config&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 2) &quot;loading&quot; 3) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 76) 1) &quot;xrevrange&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 77) 1) &quot;zunionstore&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;movablekeys&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 78) 1) &quot;geopos&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 79) 1) &quot;hdel&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 80) 1) &quot;hincrby&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 81) 1) &quot;cluster&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 82) 1) &quot;geodist&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 83) 1) &quot;bgsave&quot; 2) (integer) -1 3) 1) &quot;admin&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 84) 1) &quot;unsubscribe&quot; 2) (integer) -1 3) 1) &quot;pubsub&quot; 2) &quot;noscript&quot; 3) &quot;loading&quot; 4) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 85) 1) &quot;renamenx&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 2 6) (integer) 1 86) 1) &quot;unwatch&quot; 2) (integer) 1 3) 1) &quot;noscript&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 87) 1) &quot;echo&quot; 2) (integer) 2 3) 1) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 88) 1) &quot;flushall&quot; 2) (integer) -1 3) 1) &quot;write&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 89) 1) &quot;host:&quot; 2) (integer) -1 3) 1) &quot;loading&quot; 2) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 90) 1) &quot;hkeys&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;sort_for_script&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 91) 1) &quot;zlexcount&quot; 2) (integer) 4 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 92) 1) &quot;xpending&quot; 2) (integer) -3 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 93) 1) &quot;hscan&quot; 2) (integer) -3 3) 1) &quot;readonly&quot; 2) &quot;random&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 94) 1) &quot;setnx&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 95) 1) &quot;lastsave&quot; 2) (integer) 1 3) 1) &quot;random&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 96) 1) &quot;memory&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 97) 1) &quot;getbit&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 98) 1) &quot;keys&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;sort_for_script&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 99) 1) &quot;hexists&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 100) 1) &quot;migrate&quot; 2) (integer) -6 3) 1) &quot;write&quot; 2) &quot;movablekeys&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 101) 1) &quot;expire&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 102) 1) &quot;geohash&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 103) 1) &quot;role&quot; 2) (integer) 1 3) 1) &quot;noscript&quot; 2) &quot;loading&quot; 3) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 104) 1) &quot;unlink&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 105) 1) &quot;zcard&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 106) 1) &quot;save&quot; 2) (integer) 1 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 107) 1) &quot;script&quot; 2) (integer) -2 3) 1) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 108) 1) &quot;hsetnx&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 109) 1) &quot;rpush&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 110) 1) &quot;xclaim&quot; 2) (integer) -5 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 111) 1) &quot;rpushx&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 112) 1) &quot;hset&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 113) 1) &quot;setrange&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 114) 1) &quot;zscore&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 115) 1) &quot;hget&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 116) 1) &quot;lpushx&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 117) 1) &quot;linsert&quot; 2) (integer) 5 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 118) 1) &quot;multi&quot; 2) (integer) 1 3) 1) &quot;noscript&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 119) 1) &quot;pfadd&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 120) 1) &quot;scan&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;random&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 121) 1) &quot;latency&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 3) &quot;loading&quot; 4) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 122) 1) &quot;xread&quot; 2) (integer) -3 3) 1) &quot;readonly&quot; 2) &quot;noscript&quot; 3) &quot;movablekeys&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 123) 1) &quot;ltrim&quot; 2) (integer) 4 3) 1) &quot;write&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 124) 1) &quot;ttl&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 125) 1) &quot;psync&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;admin&quot; 3) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 126) 1) &quot;msetnx&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 2 127) 1) &quot;sinter&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;sort_for_script&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 128) 1) &quot;zcount&quot; 2) (integer) 4 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 129) 1) &quot;zrevrange&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 130) 1) &quot;rpop&quot; 2) (integer) 2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 131) 1) &quot;dump&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 132) 1) &quot;pttl&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 133) 1) &quot;bitcount&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 134) 1) &quot;decrby&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 135) 1) &quot;xgroup&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 2 5) (integer) 2 6) (integer) 1 136) 1) &quot;hincrbyfloat&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 137) 1) &quot;lindex&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 138) 1) &quot;client&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 2) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 139) 1) &quot;pexpireat&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 140) 1) &quot;xinfo&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 4) (integer) 2 5) (integer) 2 6) (integer) 1 141) 1) &quot;zpopmin&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 142) 1) &quot;hmset&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 143) 1) &quot;pfdebug&quot; 2) (integer) -3 3) 1) &quot;write&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 144) 1) &quot;brpoplpush&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;noscript&quot; 4) (integer) 1 5) (integer) 2 6) (integer) 1 145) 1) &quot;sdiff&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;sort_for_script&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 146) 1) &quot;zrem&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 147) 1) &quot;command&quot; 2) (integer) 0 3) 1) &quot;loading&quot; 2) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 148) 1) &quot;publish&quot; 2) (integer) 3 3) 1) &quot;pubsub&quot; 2) &quot;loading&quot; 3) &quot;stale&quot; 4) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 149) 1) &quot;exists&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 150) 1) &quot;swapdb&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 151) 1) &quot;del&quot; 2) (integer) -2 3) 1) &quot;write&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 152) 1) &quot;getset&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 153) 1) &quot;rpoplpush&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 2 6) (integer) 1 154) 1) &quot;setbit&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 155) 1) &quot;hlen&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 156) 1) &quot;incrbyfloat&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 157) 1) &quot;zrange&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 158) 1) &quot;setex&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 159) 1) &quot;psetex&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 160) 1) &quot;shutdown&quot; 2) (integer) -1 3) 1) &quot;admin&quot; 2) &quot;loading&quot; 3) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 161) 1) &quot;evalsha&quot; 2) (integer) -3 3) 1) &quot;noscript&quot; 2) &quot;movablekeys&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 162) 1) &quot;scard&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 163) 1) &quot;restore-asking&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;asking&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 164) 1) &quot;srandmember&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;random&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 165) 1) &quot;hgetall&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 166) 1) &quot;strlen&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 167) 1) &quot;wait&quot; 2) (integer) 3 3) 1) &quot;noscript&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 168) 1) &quot;watch&quot; 2) (integer) -2 3) 1) &quot;noscript&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 169) 1) &quot;get&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 170) 1) &quot;pubsub&quot; 2) (integer) -2 3) 1) &quot;pubsub&quot; 2) &quot;random&quot; 3) &quot;loading&quot; 4) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 171) 1) &quot;dbsize&quot; 2) (integer) 1 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 172) 1) &quot;smembers&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;sort_for_script&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 173) 1) &quot;zrevrangebylex&quot; 2) (integer) -4 3) 1) &quot;readonly&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 174) 1) &quot;subscribe&quot; 2) (integer) -2 3) 1) &quot;pubsub&quot; 2) &quot;noscript&quot; 3) &quot;loading&quot; 4) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 175) 1) &quot;zinterstore&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 3) &quot;movablekeys&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 176) 1) &quot;smove&quot; 2) (integer) 4 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 2 6) (integer) 1 177) 1) &quot;readonly&quot; 2) (integer) 1 3) 1) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 178) 1) &quot;zremrangebyscore&quot; 2) (integer) 4 3) 1) &quot;write&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 179) 1) &quot;sunionstore&quot; 2) (integer) -3 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 180) 1) &quot;llen&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 181) 1) &quot;discard&quot; 2) (integer) 1 3) 1) &quot;noscript&quot; 2) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 182) 1) &quot;info&quot; 2) (integer) -1 3) 1) &quot;loading&quot; 2) &quot;stale&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 183) 1) &quot;pfselftest&quot; 2) (integer) 1 3) 1) &quot;admin&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 184) 1) &quot;bitop&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 2 5) (integer) -1 6) (integer) 1 185) 1) &quot;pexpire&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 186) 1) &quot;xlen&quot; 2) (integer) 2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 187) 1) &quot;mget&quot; 2) (integer) -2 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) -1 6) (integer) 1 188) 1) &quot;xtrim&quot; 2) (integer) -2 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 189) 1) &quot;exec&quot; 2) (integer) 1 3) 1) &quot;noscript&quot; 2) &quot;skip_monitor&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 190) 1) &quot;zscan&quot; 2) (integer) -3 3) 1) &quot;readonly&quot; 2) &quot;random&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 191) 1) &quot;zrank&quot; 2) (integer) 3 3) 1) &quot;readonly&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 192) 1) &quot;geoadd&quot; 2) (integer) -5 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 193) 1) &quot;expireat&quot; 2) (integer) 3 3) 1) &quot;write&quot; 2) &quot;fast&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 194) 1) &quot;slowlog&quot; 2) (integer) -2 3) 1) &quot;admin&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 195) 1) &quot;readwrite&quot; 2) (integer) 1 3) 1) &quot;fast&quot; 4) (integer) 0 5) (integer) 0 6) (integer) 0 196) 1) &quot;lrem&quot; 2) (integer) 4 3) 1) &quot;write&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1 197) 1) &quot;restore&quot; 2) (integer) -4 3) 1) &quot;write&quot; 2) &quot;denyoom&quot; 4) (integer) 1 5) (integer) 1 6) (integer) 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e875a6fbb8c8d598d461225c1ac9c28ce770d65" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ECHO &quot;Hello World!&quot;&lt;code&gt;&quot;Hello World!&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ECHO &quot;Hello World!&quot; &lt;code&gt;&quot;Hello World!&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50fb53433123975104cd119e2dc4fe834f3bb8fc" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; EXISTS mykey&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; APPEND mykey &quot;Hello&quot;&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; APPEND mykey &quot; World&quot;&lt;code&gt;(integer) 11&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; EXISTS mykey &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; APPEND mykey &quot;Hello&quot; &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; APPEND mykey &quot;World&quot; &lt;code&gt;(integer) 11&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d094d66ea5b340fd318f6b1d429a5cf05086bb7" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GEOADD Sicily 13.361389 38.115556 &quot;Palermo&quot; 15.087269 37.502669 &quot;Catania&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEOADD Sicily 12.758489 38.788135 &quot;edge1&quot; 17.241510 38.788135 &quot;edge2&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEOSEARCH Sicily FROMLONLAT 15 37 BYRADIUS 200 km ASC&lt;code&gt;1) &quot;Catania&quot;
2) &quot;Palermo&quot;&lt;/code&gt;redis&amp;gt; GEOSEARCH Sicily FROMLONLAT 15 37 BYBOX 400 400 km ASC&lt;code&gt;1) &quot;Catania&quot;
2) &quot;Palermo&quot;
3) &quot;edge2&quot;
4) &quot;edge1&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc8d301e1fc39a29883d5fc6a994a924e2f9184" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GEOADD Sicily 13.361389 38.115556 &quot;Palermo&quot; 15.087269 37.502669 &quot;Catania&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEODIST Sicily Palermo Catania&lt;code&gt;&quot;166274.1516&quot;&lt;/code&gt;redis&amp;gt; GEODIST Sicily Palermo Catania km&lt;code&gt;&quot;166.2742&quot;&lt;/code&gt;redis&amp;gt; GEODIST Sicily Palermo Catania mi&lt;code&gt;&quot;103.3182&quot;&lt;/code&gt;redis&amp;gt; GEODIST Sicily Foo Bar&lt;code&gt;(nil)&lt;/code&gt;</source>
          <target state="translated">레디 스&amp;gt; GEOADD 실리 13.361389 38.115556 &quot;팔레&quot;15.087269 37.502669 &quot;카타니아&quot; &lt;code&gt;(integer) 2&lt;/code&gt; 레디 스&amp;gt; GEODIST 실리 팔레 카타니아 &lt;code&gt;&quot;166274.1516&quot;&lt;/code&gt; 레디 스&amp;gt; GEODIST 실리 팔레 카타니아 km &lt;code&gt;&quot;166.2742&quot;&lt;/code&gt; 레디 스&amp;gt; GEODIST 실리 팔레 카타니아 MI &lt;code&gt;&quot;103.3182&quot;&lt;/code&gt; 레디 스&amp;gt; GEODIST 시실리 푸 바 &lt;code&gt;(nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad50178e42c9983278764570e1fdff0f0b029ae2" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GEOADD Sicily 13.361389 38.115556 &quot;Palermo&quot; 15.087269 37.502669 &quot;Catania&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEODIST Sicily Palermo Catania&lt;code&gt;&quot;166274.1516&quot;&lt;/code&gt;redis&amp;gt; GEORADIUS Sicily 15 37 100 km&lt;code&gt;1) &quot;Catania&quot;&lt;/code&gt;redis&amp;gt; GEORADIUS Sicily 15 37 200 km&lt;code&gt;1) &quot;Palermo&quot;
2) &quot;Catania&quot;&lt;/code&gt;</source>
          <target state="translated">레디 스&amp;gt; GEOADD 실리 13.361389 38.115556 &quot;팔레&quot;15.087269 37.502669 &quot;카타니아&quot; &lt;code&gt;(integer) 2&lt;/code&gt; 레디 스&amp;gt; GEODIST 실리 팔레 카타니아 &lt;code&gt;&quot;166274.1516&quot;&lt;/code&gt; 레디 스&amp;gt; GEORADIUS 시실리 15 37 100km &lt;code&gt;1) &quot;Catania&quot;&lt;/code&gt; 레디 스&amp;gt; GEORADIUS 시실리 15 37 200km &lt;code&gt;1) &quot;Palermo&quot; 2) &quot;Catania&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c6c3f90e1268b6f3adcbb2da785a9a4a13772d9" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GEOADD Sicily 13.361389 38.115556 &quot;Palermo&quot; 15.087269 37.502669 &quot;Catania&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEOHASH Sicily Palermo Catania&lt;code&gt;1) &quot;sqc8b49rny0&quot;
2) &quot;sqdtr74hyu0&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; GEOADD 시칠리아 13.361389 38.115556 &quot;팔레르모&quot;15.087269 37.502669 &quot;카타니아&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; GEOHASH 시칠리아 팔레르모 카타니아 &lt;code&gt;1) &quot;sqc8b49rny0&quot; 2) &quot;sqdtr74hyu0&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4c4686303bbe8f151be0ee3d05598fc9f8f9aaf" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GEOADD Sicily 13.361389 38.115556 &quot;Palermo&quot; 15.087269 37.502669 &quot;Catania&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEOPOS Sicily Palermo Catania NonExisting&lt;code&gt;1) 1) &quot;13.36138933897018433&quot;
   2) &quot;38.11555639549629859&quot;
2) 1) &quot;15.08726745843887329&quot;
   2) &quot;37.50266842333162032&quot;
3) (nil)&lt;/code&gt;</source>
          <target state="translated">레디 스&amp;gt; GEOADD 실리 13.361389 38.115556 &quot;팔레&quot;15.087269 37.502669 &quot;카타니아&quot; &lt;code&gt;(integer) 2&lt;/code&gt; 레디 스&amp;gt; GEOPOS 실리 팔레 카타니아 존재하지 않는 &lt;code&gt;1) 1) &quot;13.36138933897018433&quot; 2) &quot;38.11555639549629859&quot; 2) 1) &quot;15.08726745843887329&quot; 2) &quot;37.50266842333162032&quot; 3) (nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1fe6c22d030862b7644bc9f4ef122f5e4d762033" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GEOADD Sicily 13.361389 38.115556 &quot;Palermo&quot; 15.087269 37.502669 &quot;Catania&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEORADIUS Sicily 15 37 200 km WITHDIST&lt;code&gt;1) 1) &quot;Palermo&quot;
   2) &quot;190.4424&quot;
2) 1) &quot;Catania&quot;
   2) &quot;56.4413&quot;&lt;/code&gt;redis&amp;gt; GEORADIUS Sicily 15 37 200 km WITHCOORD&lt;code&gt;1) 1) &quot;Palermo&quot;
   2) 1) &quot;13.36138933897018433&quot;
      2) &quot;38.11555639549629859&quot;
2) 1) &quot;Catania&quot;
   2) 1) &quot;15.08726745843887329&quot;
      2) &quot;37.50266842333162032&quot;&lt;/code&gt;redis&amp;gt; GEORADIUS Sicily 15 37 200 km WITHDIST WITHCOORD&lt;code&gt;1) 1) &quot;Palermo&quot;
   2) &quot;190.4424&quot;
   3) 1) &quot;13.36138933897018433&quot;
      2) &quot;38.11555639549629859&quot;
2) 1) &quot;Catania&quot;
   2) &quot;56.4413&quot;
   3) 1) &quot;15.08726745843887329&quot;
      2) &quot;37.50266842333162032&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; GEOADD 시칠리아 13.361389 38.115556 &quot;Palermo&quot;15.087269 37.502669 &quot;Catania&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; GEORADIUS Sicily 15 37200 km WITHDIST &lt;code&gt;1) 1) &quot;Palermo&quot; 2) &quot;190.4424&quot; 2) 1) &quot;Catania&quot; 2) &quot;56.4413&quot;&lt;/code&gt; redis&amp;gt; GEORADIUS 시칠리아 15 37200 km WITHCOORD &lt;code&gt;1) 1) &quot;Palermo&quot; 2) 1) &quot;13.36138933897018433&quot; 2) &quot;38.11555639549629859&quot; 2) 1) &quot;Catania&quot; 2) 1) &quot;15.08726745843887329&quot; 2) &quot;37.50266842333162032&quot;&lt;/code&gt; redis&amp;gt; GEORADIUS Sicily 15 37200 km WITHDIST WITHCOORD &lt;code&gt;1) 1) &quot;Palermo&quot; 2) &quot;190.4424&quot; 3) 1) &quot;13.36138933897018433&quot; 2) &quot;38.11555639549629859&quot; 2) 1) &quot;Catania&quot; 2) &quot;56.4413&quot; 3) 1) &quot;15.08726745843887329&quot; 2) &quot;37.50266842333162032&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0839a9a9473e28a247416fece4100d8b87c61431" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GEOADD Sicily 13.583333 37.316667 &quot;Agrigento&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; GEOADD Sicily 13.361389 38.115556 &quot;Palermo&quot; 15.087269 37.502669 &quot;Catania&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; GEORADIUSBYMEMBER Sicily Agrigento 100 km&lt;code&gt;1) &quot;Agrigento&quot;
2) &quot;Palermo&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; GEOADD 시칠리아 13.583333 37.316667 &quot;Agrigento&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; GEOADD 시칠리아 13.361389 38.115556 &quot;Palermo&quot;15.087269 37.502669 &quot;Catania&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; GEORADIUSBYMEMBER 시칠리아 Agrigento 100 km &lt;code&gt;1) &quot;Agrigento&quot; 2) &quot;Palermo&quot;&lt;/code&gt; 100 km 1 &quot;&quot;Agrigento &quot; (정수)</target>
        </trans-unit>
        <trans-unit id="e522ae950c3630c28bdd3e034c20286f426d9448" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; GET nonexisting&lt;code&gt;(nil)&lt;/code&gt;redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; GET 존재 &lt;code&gt;(nil)&lt;/code&gt; redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb52045e34094bc55ca18b19c949f60e017246fd" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HMSET myhash f1 HelloWorld f2 99 f3 -256&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; HSTRLEN myhash f1&lt;code&gt;(integer) 10&lt;/code&gt;redis&amp;gt; HSTRLEN myhash f2&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; HSTRLEN myhash f3&lt;code&gt;(integer) 4&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HMSET myhash f1 HelloWorld f2 99 f3 -256 &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; HSTRLEN myhash f1 &lt;code&gt;(integer) 10&lt;/code&gt; redis&amp;gt; HSTRLEN myhash f2 &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; HSTRLEN myhash f3 &lt;code&gt;(integer) 4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43ed1e8ef108cffcf7ae63d880484471ebfbdc2b" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HMSET myhash field1 &quot;Hello&quot; field2 &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; HGET myhash field1&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;redis&amp;gt; HGET myhash field2&lt;code&gt;&quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HMSET myhash field1 &quot;Hello&quot;field2 &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; HGET myhash field1 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; redis&amp;gt; HGET myhash field2 &lt;code&gt;&quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea840aaaffb0ac9ff765fb8ac3e846bc3baa9cdb" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field 5&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HINCRBY myhash field 1&lt;code&gt;(integer) 6&lt;/code&gt;redis&amp;gt; HINCRBY myhash field -1&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; HINCRBY myhash field -10&lt;code&gt;(integer) -5&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash 필드 5 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HINCRBY myhash 필드 1 &lt;code&gt;(integer) 6&lt;/code&gt; redis&amp;gt; HINCRBY myhash 필드 -1 &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; HINCRBY myhash 필드 -10 &lt;code&gt;(integer) -5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ac1f9abc5c1ca9cc73e9cffcfb61fe3aa056954" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HGET myhash field1&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HSET myhash field1 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43a93a6f880a2a3c7a73621d05d74bf91dcddaa1" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HSET myhash field2 &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HGETALL myhash&lt;code&gt;1) &quot;field1&quot;
2) &quot;Hello&quot;
3) &quot;field2&quot;
4) &quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HSET myhash field2 &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HGETALL myhash &lt;code&gt;1) &quot;field1&quot; 2) &quot;Hello&quot; 3) &quot;field2&quot; 4) &quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f68e7f17522905fae14a6a1a90746136608a56f0" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HSET myhash field2 &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HKEYS myhash&lt;code&gt;1) &quot;field1&quot;
2) &quot;field2&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HSET myhash field2 &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HKEYS myhash &lt;code&gt;1) &quot;field1&quot; 2) &quot;field2&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59d05cda0a91cf837a564c23ff6b28c0e44abac2" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HSET myhash field2 &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HLEN myhash&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HSET myhash field2 &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HLEN myhash &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b201aea64fbeeb56aa8d2004e7fb724a05f835fd" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HSET myhash field2 &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HMGET myhash field1 field2 nofield&lt;code&gt;1) &quot;Hello&quot;
2) &quot;World&quot;
3) (nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HSET myhash field2 &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HMGET myhash field1 field2 nofield &lt;code&gt;1) &quot;Hello&quot; 2) &quot;World&quot; 3) (nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f2561241583dfd692dc8e63d9e291b0f002da4a" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HSET myhash field2 &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HVALS myhash&lt;code&gt;1) &quot;Hello&quot;
2) &quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HSET myhash field2 &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HVALS myhash &lt;code&gt;1) &quot;Hello&quot; 2) &quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eccecadb17c6b6995c3a46683240e0a5a7e62413" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;foo&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HDEL myhash field1&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HDEL myhash field2&lt;code&gt;(integer) 0&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;foo&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HDEL myhash field1 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HDEL myhash field2 &lt;code&gt;(integer) 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9399352497abc639e7f5ccd7d1bf9d5e2bbca3e" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;foo&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HEXISTS myhash field1&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HEXISTS myhash field2&lt;code&gt;(integer) 0&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;foo&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HEXISTS myhash field1 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HEXISTS myhash field2 &lt;code&gt;(integer) 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e800d40dddd1db6ddeb42d08d3a24f479a6e23" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET myhash field1 &quot;foo&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HGET myhash field1&lt;code&gt;&quot;foo&quot;&lt;/code&gt;redis&amp;gt; HGET myhash field2&lt;code&gt;(nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET myhash field1 &quot;foo&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HGET myhash field1 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; redis&amp;gt; HGET myhash field2 &lt;code&gt;(nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc33df72256afd82fdcaec24597d65ff398a191f" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSET mykey field 10.50&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HINCRBYFLOAT mykey field 0.1&lt;code&gt;&quot;10.6&quot;&lt;/code&gt;redis&amp;gt; HINCRBYFLOAT mykey field -5&lt;code&gt;&quot;5.6&quot;&lt;/code&gt;redis&amp;gt; HSET mykey field 5.0e3&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; HINCRBYFLOAT mykey field 2.0e2&lt;code&gt;&quot;5200&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSET mykey 필드 10.50 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HINCRBYFLOAT mykey 필드 0.1 &lt;code&gt;&quot;10.6&quot;&lt;/code&gt; redis&amp;gt; HINCRBYFLOAT mykey 필드 -5 &lt;code&gt;&quot;5.6&quot;&lt;/code&gt; redis&amp;gt; HSET mykey 필드 5.0e3 &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; HINCRBYFLOAT mykey 필드 2.0e2 &lt;code&gt;&quot;5200&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d0fffb92ea19a2f574258eac7e5c338857f0ee4" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; HSETNX myhash field &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; HSETNX myhash field &quot;World&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; HGET myhash field&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; HSETNX myhash 필드 &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; HSETNX myhash 필드 &quot;World&quot; &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; HGET myhash 필드 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0730d7542a5efadfd40fe70a1449d4b6c2babffa" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; INCR mycounter&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; GETSET mycounter &quot;0&quot;&lt;code&gt;&quot;1&quot;&lt;/code&gt;redis&amp;gt; GET mycounter&lt;code&gt;&quot;0&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; INCR mycounter &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; GETSET mycounter &quot;0&quot; &lt;code&gt;&quot;1&quot;&lt;/code&gt; redis&amp;gt; GET mycounter &lt;code&gt;&quot;0&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="233c8063abbca863b585055714ea43f819638e5e" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; INFO&lt;code&gt;# Server
redis_version:6.1.240
redis_git_sha1:00000000
redis_git_dirty:0
redis_build_id:a26db646ea64a07c
redis_mode:standalone
os:Linux 5.4.0-1017-aws x86_64
arch_bits:64
multiplexing_api:epoll
atomicvar_api:c11-builtin
gcc_version:9.3.0
process_id:2755423
process_supervised:no
run_id:d04b36ea49704b152d8ce82bf563d26bcd52e741
tcp_port:6379
server_time_usec:1609093314907829
uptime_in_seconds:1118774
uptime_in_days:12
hz:10
configured_hz:10
lru_clock:15257794
executable:/usr/local/bin/redis-server
config_file:/etc/redis/redis.conf
io_threads_active:0

# Clients
connected_clients:2
cluster_connections:0
maxclients:10000
client_recent_max_input_buffer:72
client_recent_max_output_buffer:0
blocked_clients:0
tracking_clients:0
clients_in_timeout_table:0

# Memory
used_memory:118577712
used_memory_human:113.08M
used_memory_rss:126005248
used_memory_rss_human:120.17M
used_memory_peak:118618720
used_memory_peak_human:113.12M
used_memory_peak_perc:99.97%
used_memory_overhead:34771240
used_memory_startup:803648
used_memory_dataset:83806472
used_memory_dataset_perc:71.16%
allocator_allocated:118644184
allocator_active:118943744
allocator_resident:123236352
total_system_memory:16596942848
total_system_memory_human:15.46G
used_memory_lua:37888
used_memory_lua_human:37.00K
used_memory_scripts:0
used_memory_scripts_human:0B
number_of_cached_scripts:0
maxmemory:200000000
maxmemory_human:190.73M
maxmemory_policy:allkeys-lru
allocator_frag_ratio:1.00
allocator_frag_bytes:299560
allocator_rss_ratio:1.04
allocator_rss_bytes:4292608
rss_overhead_ratio:1.02
rss_overhead_bytes:2768896
mem_fragmentation_ratio:1.06
mem_fragmentation_bytes:7429968
mem_not_counted_for_evict:0
mem_replication_backlog:0
mem_clients_slaves:0
mem_clients_normal:41024
mem_aof_buffer:0
mem_allocator:jemalloc-5.1.0
active_defrag_running:0
lazyfree_pending_objects:0
lazyfreed_objects:0

# Persistence
loading:0
rdb_changes_since_last_save:3103569
rdb_bgsave_in_progress:0
rdb_last_save_time:1607974540
rdb_last_bgsave_status:ok
rdb_last_bgsave_time_sec:-1
rdb_current_bgsave_time_sec:-1
rdb_last_cow_size:0
aof_enabled:0
aof_rewrite_in_progress:0
aof_rewrite_scheduled:0
aof_last_rewrite_time_sec:-1
aof_current_rewrite_time_sec:-1
aof_last_bgrewrite_status:ok
aof_last_write_status:ok
aof_last_cow_size:0
module_fork_in_progress:0
module_fork_last_cow_size:0

# Stats
total_connections_received:59450
total_commands_processed:7587831
instantaneous_ops_per_sec:607
total_net_input_bytes:629489756
total_net_output_bytes:116028645
instantaneous_input_kbps:49.14
instantaneous_output_kbps:18.40
rejected_connections:0
sync_full:0
sync_partial_ok:0
sync_partial_err:0
expired_keys:20224
expired_stale_perc:0.00
expired_time_cap_reached_count:0
expire_cycle_cpu_milliseconds:30689
evicted_keys:0
keyspace_hits:1747212
keyspace_misses:796042
pubsub_channels:0
pubsub_patterns:0
latest_fork_usec:0
total_forks:0
migrate_cached_sockets:0
slave_expires_tracked_keys:0
active_defrag_hits:0
active_defrag_misses:0
active_defrag_key_hits:0
active_defrag_key_misses:0
tracking_total_keys:0
tracking_total_items:0
tracking_total_prefixes:0
unexpected_error_replies:0
dump_payload_sanitizations:0
total_reads_processed:7639102
total_writes_processed:7639067
io_threaded_reads_processed:0
io_threaded_writes_processed:0

# Replication
role:master
connected_slaves:0
master_replid:d4fc9b96fa0c5d3eb4c4444a394ba6e4e40cc0d5
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0

# CPU
used_cpu_sys:1615.485421
used_cpu_user:4376.192944
used_cpu_sys_children:0.000000
used_cpu_user_children:0.000000
used_cpu_sys_main_thread:1605.555179
used_cpu_user_main_thread:4365.033279

# Modules

# Cluster
cluster_enabled:0

# Keyspace
db0:keys=638444,expires=3,avg_ttl=67367093247&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ca39cccfa652053f9b9d970b08d5089bb96411" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; INFO&lt;code&gt;# Server
redis_version:999.999.999
redis_git_sha1:3c968ff0
redis_git_dirty:0
redis_build_id:51089de051945df4
redis_mode:standalone
os:Linux 4.8.0-1-amd64 x86_64
arch_bits:64
multiplexing_api:epoll
atomicvar_api:atomic-builtin
gcc_version:6.3.0
process_id:25508
run_id:39240fffc9d38736f9b96bdf6f7d942232fddef0
tcp_port:6379
uptime_in_seconds:6603544
uptime_in_days:76
hz:10
lru_clock:14647828
executable:/usr/local/bin/redis-server
config_file:

# Clients
connected_clients:4
client_longest_output_list:0
client_biggest_input_buf:0
blocked_clients:0

# Memory
used_memory:623615688
used_memory_human:594.73M
used_memory_rss:641335296
used_memory_rss_human:611.62M
used_memory_peak:623615688
used_memory_peak_human:594.73M
used_memory_peak_perc:100.00%
used_memory_overhead:180205608
used_memory_startup:510704
used_memory_dataset:443410080
used_memory_dataset_perc:71.16%
allocator_allocated:623690112
allocator_active:623996928
allocator_resident:640716800
total_system_memory:1044770816
total_system_memory_human:996.37M
used_memory_lua:37888
used_memory_lua_human:37.00K
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
allocator_frag_ratio:1.00
allocator_frag_bytes:306816
allocator_rss_ratio:1.03
allocator_rss_bytes:16719872
rss_overhead_ratio:1.00
rss_overhead_bytes:618496
mem_fragmentation_ratio:1.03
mem_fragmentation_bytes:17720384
mem_allocator:jemalloc-4.0.3
active_defrag_running:0
lazyfree_pending_objects:0

# Persistence
loading:0
rdb_changes_since_last_save:17982283
rdb_bgsave_in_progress:0
rdb_last_save_time:1534770940
rdb_last_bgsave_status:ok
rdb_last_bgsave_time_sec:-1
rdb_current_bgsave_time_sec:-1
rdb_last_cow_size:0
aof_enabled:0
aof_rewrite_in_progress:0
aof_rewrite_scheduled:0
aof_last_rewrite_time_sec:-1
aof_current_rewrite_time_sec:-1
aof_last_bgrewrite_status:ok
aof_last_write_status:ok
aof_last_cow_size:0

# Stats
total_connections_received:188
total_commands_processed:44454030
instantaneous_ops_per_sec:663
total_net_input_bytes:3670293956
total_net_output_bytes:618934664
instantaneous_input_kbps:53.33
instantaneous_output_kbps:13.45
rejected_connections:0
sync_full:0
sync_partial_ok:0
sync_partial_err:0
expired_keys:56335
expired_stale_perc:0.00
expired_time_cap_reached_count:0
evicted_keys:0
keyspace_hits:10364361
keyspace_misses:4366710
pubsub_channels:0
pubsub_patterns:0
latest_fork_usec:0
migrate_cached_sockets:0
slave_expires_tracked_keys:0
active_defrag_hits:0
active_defrag_misses:0
active_defrag_key_hits:0
active_defrag_key_misses:0

# Replication
role:master
connected_slaves:0
master_replid:e06cc8078080966de939fa81fa64259a5bd9408f
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0

# CPU
used_cpu_sys:5227.78
used_cpu_user:92420.12
used_cpu_sys_children:0.00
used_cpu_user_children:0.00

# Cluster
cluster_enabled:0

# Keyspace
db0:keys=3647016,expires=1864,avg_ttl=4481659497279&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; 정보 &lt;code&gt;# Server redis_version:999.999.999 redis_git_sha1:3c968ff0 redis_git_dirty:0 redis_build_id:51089de051945df4 redis_mode:standalone os:Linux 4.8.0-1-amd64 x86_64 arch_bits:64 multiplexing_api:epoll atomicvar_api:atomic-builtin gcc_version:6.3.0 process_id:25508 run_id:39240fffc9d38736f9b96bdf6f7d942232fddef0 tcp_port:6379 uptime_in_seconds:6603544 uptime_in_days:76 hz:10 lru_clock:14647828 executable:/usr/local/bin/redis-server config_file: # Clients connected_clients:4 client_longest_output_list:0 client_biggest_input_buf:0 blocked_clients:0 # Memory used_memory:623615688 used_memory_human:594.73M used_memory_rss:641335296 used_memory_rss_human:611.62M used_memory_peak:623615688 used_memory_peak_human:594.73M used_memory_peak_perc:100.00% used_memory_overhead:180205608 used_memory_startup:510704 used_memory_dataset:443410080 used_memory_dataset_perc:71.16% allocator_allocated:623690112 allocator_active:623996928 allocator_resident:640716800 total_system_memory:1044770816 total_system_memory_human:996.37M used_memory_lua:37888 used_memory_lua_human:37.00K maxmemory:0 maxmemory_human:0B maxmemory_policy:noeviction allocator_frag_ratio:1.00 allocator_frag_bytes:306816 allocator_rss_ratio:1.03 allocator_rss_bytes:16719872 rss_overhead_ratio:1.00 rss_overhead_bytes:618496 mem_fragmentation_ratio:1.03 mem_fragmentation_bytes:17720384 mem_allocator:jemalloc-4.0.3 active_defrag_running:0 lazyfree_pending_objects:0 # Persistence loading:0 rdb_changes_since_last_save:17982283 rdb_bgsave_in_progress:0 rdb_last_save_time:1534770940 rdb_last_bgsave_status:ok rdb_last_bgsave_time_sec:-1 rdb_current_bgsave_time_sec:-1 rdb_last_cow_size:0 aof_enabled:0 aof_rewrite_in_progress:0 aof_rewrite_scheduled:0 aof_last_rewrite_time_sec:-1 aof_current_rewrite_time_sec:-1 aof_last_bgrewrite_status:ok aof_last_write_status:ok aof_last_cow_size:0 # Stats total_connections_received:188 total_commands_processed:44454030 instantaneous_ops_per_sec:663 total_net_input_bytes:3670293956 total_net_output_bytes:618934664 instantaneous_input_kbps:53.33 instantaneous_output_kbps:13.45 rejected_connections:0 sync_full:0 sync_partial_ok:0 sync_partial_err:0 expired_keys:56335 expired_stale_perc:0.00 expired_time_cap_reached_count:0 evicted_keys:0 keyspace_hits:10364361 keyspace_misses:4366710 pubsub_channels:0 pubsub_patterns:0 latest_fork_usec:0 migrate_cached_sockets:0 slave_expires_tracked_keys:0 active_defrag_hits:0 active_defrag_misses:0 active_defrag_key_hits:0 active_defrag_key_misses:0 # Replication role:master connected_slaves:0 master_replid:e06cc8078080966de939fa81fa64259a5bd9408f master_replid2:0000000000000000000000000000000000000000 master_repl_offset:0 second_repl_offset:-1 repl_backlog_active:0 repl_backlog_size:1048576 repl_backlog_first_byte_offset:0 repl_backlog_histlen:0 # CPU used_cpu_sys:5227.78 used_cpu_user:92420.12 used_cpu_sys_children:0.00 used_cpu_user_children:0.00 # Cluster cluster_enabled:0 # Keyspace db0:keys=3647016,expires=1864,avg_ttl=4481659497279&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6096e970e5c42ed21982f9ca5dd897f455d73bbe" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; LPUSH mylist &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; LPUSH mylist &quot;Hello&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; LINDEX mylist 0&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;redis&amp;gt; LINDEX mylist -1&lt;code&gt;&quot;World&quot;&lt;/code&gt;redis&amp;gt; LINDEX mylist 3&lt;code&gt;(nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; LPUSH mylist &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; LPUSH mylist &quot;Hello&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; LINDEX mylist 0 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; redis&amp;gt; LINDEX mylist -1 &lt;code&gt;&quot;World&quot;&lt;/code&gt; redis&amp;gt; LINDEX mylist 3 &lt;code&gt;(nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe9d3d033a627ad900caf25a35cb5ccfbeaba67c" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; LPUSH mylist &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; LPUSH mylist &quot;Hello&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; LLEN mylist&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; LPUSH mylist &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; LPUSH mylist &quot;Hello&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; LLEN mylist &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34764d27e1af57967344ee22d151c5d50bda551b" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; LPUSH mylist &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; LPUSHX mylist &quot;Hello&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; LPUSHX myotherlist &quot;Hello&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;Hello&quot;
2) &quot;World&quot;&lt;/code&gt;redis&amp;gt; LRANGE myotherlist 0 -1&lt;code&gt;(empty list or set)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; LPUSH mylist &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; LPUSHX mylist &quot;Hello&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; LPUSHX myotherlist &quot;Hello&quot; &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;Hello&quot; 2) &quot;World&quot;&lt;/code&gt; redis&amp;gt; LRANGE myotherlist 0 -1 &lt;code&gt;(empty list or set)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9503beafc96da1b70d5176e2528a6e8d087cd3a" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; LPUSH mylist &quot;world&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; LPUSH mylist &quot;hello&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;hello&quot;
2) &quot;world&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; LPUSH mylist &quot;world&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; LPUSH mylist &quot;hello&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;hello&quot; 2) &quot;world&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8bd697fde9f00b28be2a0476d0768147a8e6599" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; MSET firstname Jack lastname Stuntman age 35&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; KEYS *name*&lt;code&gt;1) &quot;firstname&quot;
2) &quot;lastname&quot;&lt;/code&gt;redis&amp;gt; KEYS a??&lt;code&gt;1) &quot;age&quot;&lt;/code&gt;redis&amp;gt; KEYS *&lt;code&gt;1) &quot;firstname&quot;
2) &quot;lastname&quot;
3) &quot;age&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; MSET 이름 잭 성 스턴트맨 나이 35 &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; KEYS * 이름 * &lt;code&gt;1) &quot;firstname&quot; 2) &quot;lastname&quot;&lt;/code&gt; redis&amp;gt; KEYS a ?? &lt;code&gt;1) &quot;age&quot;&lt;/code&gt; redis&amp;gt; 키 * &lt;code&gt;1) &quot;firstname&quot; 2) &quot;lastname&quot; 3) &quot;age&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e773c16f9ffd29a6f4da93dc8bfd0d1c6f2e03bb" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; MSET key1 &quot;Hello&quot; key2 &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; GET key1&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;redis&amp;gt; GET key2&lt;code&gt;&quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; MSET key1 &quot;Hello&quot;key2 &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; GET key1 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; redis&amp;gt; GET key2 &lt;code&gt;&quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eab2848ae4047f1503d86b554863af2a0a6f8841" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; MSETNX key1 &quot;Hello&quot; key2 &quot;there&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; MSETNX key2 &quot;new&quot; key3 &quot;world&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; MGET key1 key2 key3&lt;code&gt;1) &quot;Hello&quot;
2) &quot;there&quot;
3) (nil)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47bde41e28af46588d98143b67b70540477927b" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; MSETNX key1 &quot;Hello&quot; key2 &quot;there&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; MSETNX key2 &quot;there&quot; key3 &quot;world&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; MGET key1 key2 key3&lt;code&gt;1) &quot;Hello&quot;
2) &quot;there&quot;
3) (nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; MSETNX 키 1 &quot;Hello&quot;키 2 &quot;저기&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; MSETNX 키 2 &quot;저기&quot;key3 &quot;world&quot; &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; MGET 키 &lt;code&gt;1) &quot;Hello&quot; 2) &quot;there&quot; 3) (nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f97a2803dc94d88f16aea386ac46a3330977c1c" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; PFADD hll a b c d e f g&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PFCOUNT hll&lt;code&gt;(integer) 7&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; PFADD hll abcdefg &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; PFCOUNT hll &lt;code&gt;(integer) 7&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a68e99f888c2fd600a520da5f4b390434b366cce" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; PFADD hll foo bar zap&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PFADD hll zap zap zap&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; PFADD hll foo bar&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; PFCOUNT hll&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; PFADD some-other-hll 1 2 3&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PFCOUNT hll some-other-hll&lt;code&gt;(integer) 6&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; PFADD hll foo bar zap &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; PFADD hll zap zap zap &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; PFADD hll foo bar &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; PFCOUNT hll &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; PFADD some-other-hll 1 2 3 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; PFCOUNT hll some-other-ll &lt;code&gt;(integer) 6&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70818ef443d4ee46b3b5e147a47b4fb7b9fce78c" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; PFADD hll1 foo bar zap a&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PFADD hll2 a b c foo&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PFMERGE hll3 hll1 hll2&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; PFCOUNT hll3&lt;code&gt;(integer) 6&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; PFADD hll1 foo bar zap a &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; PFADD hll2 abc foo &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; PFMERGE hll3 hll1 hll2 &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; PFCOUNT hll3 &lt;code&gt;(integer) 6&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca3ce6899ce2b28cdf3c48cbd3ba7107424eb6c6" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; PING&lt;code&gt;&quot;PONG&quot;&lt;/code&gt;redis&amp;gt; PING &quot;hello world&quot;&lt;code&gt;&quot;hello world&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; PING &lt;code&gt;&quot;PONG&quot;&lt;/code&gt; redis&amp;gt; PING &quot;hello world&quot; &lt;code&gt;&quot;hello world&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acd5481077b7969a5710a4f74018f86f6c20dd67" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; PSETEX mykey 1000 &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; PTTL mykey&lt;code&gt;(integer) 999&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; PSETEX mykey 1000 &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; PTTL mykey &lt;code&gt;(integer) 999&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c78faa3420315a2281d113e9fef456e70657b2df" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ROLE&lt;code&gt;1) &quot;master&quot;
2) (integer) 0
3) (empty list or set)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ROLE &lt;code&gt;1) &quot;master&quot; 2) (integer) 0 3) (empty list or set)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d28a07d2ce9498a72c1b14b88637e4a80e8ab00" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;World&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; LINSERT mylist BEFORE &quot;World&quot; &quot;There&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;Hello&quot;
2) &quot;There&quot;
3) &quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;World&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; &quot;World&quot; &quot;There&quot; &lt;code&gt;(integer) 3&lt;/code&gt; 전에 LINSERT mylist 3 redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;Hello&quot; 2) &quot;There&quot; 3) &quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="adc2c8c91aecad44813fd929d390b0247f98a7de" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSHX mylist &quot;World&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSHX myotherlist &quot;World&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;Hello&quot;
2) &quot;World&quot;&lt;/code&gt;redis&amp;gt; LRANGE myotherlist 0 -1&lt;code&gt;(empty list or set)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSHX mylist &quot;World&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSHX myotherlist &quot;World&quot; &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;Hello&quot; 2) &quot;World&quot;&lt;/code&gt; redis&amp;gt; LRANGE myotherlist 0 -1 &lt;code&gt;(empty list or set)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ea219d7dfe0bac8b5ed1b327921a0c5341c714e" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;hello&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;foo&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;hello&quot;&lt;code&gt;(integer) 4&lt;/code&gt;redis&amp;gt; LREM mylist -2 &quot;hello&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;hello&quot;
2) &quot;foo&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;hello&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;foo&quot; &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;hello&quot; &lt;code&gt;(integer) 4&lt;/code&gt; redis&amp;gt; LREM mylist -2 &quot;hello&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; LRANGE mylist 0 -1 &lt;code&gt;1) &quot;hello&quot; 2) &quot;foo&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a52b8e0b9003fd0dafa30d465ed3cbbb1ad5736" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;world&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;hello&quot;
2) &quot;world&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;world&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;hello&quot; 2) &quot;world&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="797a0418c3b9a81fab4b3460276abddd12dc1756" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;two&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;three&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; LMOVE mylist myotherlist RIGHT LEFT&lt;code&gt;&quot;three&quot;&lt;/code&gt;redis&amp;gt; LMOVE mylist myotherlist LEFT RIGHT&lt;code&gt;&quot;one&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;two&quot;&lt;/code&gt;redis&amp;gt; LRANGE myotherlist 0 -1&lt;code&gt;1) &quot;three&quot;
2) &quot;one&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c7f134659f1fe412c135f8c178af76cfb73b7f" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;two&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;three&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; LPOP mylist&lt;code&gt;&quot;one&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;two&quot;
2) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;two&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;three&quot; &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; LPOP mylist &lt;code&gt;&quot;one&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;two&quot; 2) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25323c3198faa6b1be4197c8fc362245084ac8df" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;two&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;three&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 0&lt;code&gt;1) &quot;one&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist -3 2&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;
3) &quot;three&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist -100 100&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;
3) &quot;three&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist 5 10&lt;code&gt;(empty list or set)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;two&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;three&quot; &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; LRANGE mylist 0 0 &lt;code&gt;1) &quot;one&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist -3 2 &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot; 3) &quot;three&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist -100100 &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot; 3) &quot;three&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist 5 10 &lt;code&gt;(empty list or set)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78837b0e2341286eaf4f40bea03af6db1ce777c0" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;two&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;three&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; LSET mylist 0 &quot;four&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; LSET mylist -2 &quot;five&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;four&quot;
2) &quot;five&quot;
3) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;two&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;three&quot; &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; LSET mylist 0 &quot;four&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; LSET mylist -2 &quot;five&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;four&quot; 2) &quot;five&quot; 3) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17322faab1449e24e7adf2165c3956aa37ba2d04" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;two&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;three&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; LTRIM mylist 1 -1&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;two&quot;
2) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;two&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;three&quot; &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; LTRIM mylist 1 -1 &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist 0 -1 &lt;code&gt;1) &quot;two&quot; 2) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="629e48794cf28a17fb70994bce9056b213bbf0d2" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;two&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;three&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; RPOP mylist&lt;code&gt;&quot;three&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;two&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;three&quot; &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; RPOP mylist &lt;code&gt;&quot;three&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9a85c4542c22b60c3f147274d4c2c57f448d50d" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;two&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; RPUSH mylist &quot;three&quot;&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; RPOPLPUSH mylist myotherlist&lt;code&gt;&quot;three&quot;&lt;/code&gt;redis&amp;gt; LRANGE mylist 0 -1&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;&lt;/code&gt;redis&amp;gt; LRANGE myotherlist 0 -1&lt;code&gt;1) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; RPUSH mylist &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;two&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; RPUSH mylist &quot;three&quot; &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; RPOPLPUSH mylist myotherlist &lt;code&gt;&quot;three&quot;&lt;/code&gt; redis&amp;gt; LRANGE mylist 0-1 &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot;&lt;/code&gt; redis&amp;gt; LRANGE myotherlist 0 -1 &lt;code&gt;1) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15bc4f3e0da470d1315d586c2f7a405a7cdb7611" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; RPUSH mylist a b c d 1 2 3 4 3 3 3&lt;code&gt;(integer) 11&lt;/code&gt;redis&amp;gt; LPOS mylist 3&lt;code&gt;(integer) 6&lt;/code&gt;redis&amp;gt; LPOS mylist 3 COUNT 0 RANK 2&lt;code&gt;1) (integer) 8
2) (integer) 9
3) (integer) 10&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5828e9ebfcb8fe33a98709cd28f44c3289d9eec2" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SDIFF key1 key2&lt;code&gt;1) &quot;a&quot;
2) &quot;b&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acb5374c39d61f45e4f4959becd7097740843b5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SDIFF key1 key2&lt;code&gt;1) &quot;b&quot;
2) &quot;a&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD key1 &quot;a&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;b&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;d &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2&quot;e &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SDIFF key1 key2 &lt;code&gt;1) &quot;b&quot; 2) &quot;a&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba86026e19b87581ad70aaed7561f5d07ba2f1e5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SDIFFSTORE key key1 key2&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; SMEMBERS key&lt;code&gt;1) &quot;a&quot;
2) &quot;b&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d0c65538e08157fb1e6ea41e8e7f6d9c950166" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SDIFFSTORE key key1 key2&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; SMEMBERS key&lt;code&gt;1) &quot;b&quot;
2) &quot;a&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD key1 &quot;a&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;b&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;d &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2&quot;e &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SDIFFSTORE 키 key1 key2 &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; SMEMBERS 키 &lt;code&gt;1) &quot;b&quot; 2) &quot;a&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c783c99b2e33d659bf0b7fd5e5b71e12c046375" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SINTER key1 key2&lt;code&gt;1) &quot;c&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD key1 &quot;a&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;b&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;d &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2&quot;e &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SINTER key1 key2 &lt;code&gt;1) &quot;c&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7a3a74680d314d8d2c81f7ab13a1c84669355e9" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SINTERSTORE key key1 key2&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SMEMBERS key&lt;code&gt;1) &quot;c&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD key1 &quot;a&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;b&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;d &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2&quot;e &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SINTERSTORE 키 키 &lt;code&gt;(integer) 1&lt;/code&gt; key2 (정수) 1 redis&amp;gt; SMEMBERS 키 &lt;code&gt;1) &quot;c&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38e08b746231510bc059fa8f1f2bbde71ed28fcf" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SUNION key1 key2&lt;code&gt;1) &quot;a&quot;
2) &quot;c&quot;
3) &quot;e&quot;
4) &quot;b&quot;
5) &quot;d&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70a488aa218a7211996e107aadfedcb9bde6565" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SUNION key1 key2&lt;code&gt;1) &quot;b&quot;
2) &quot;c&quot;
3) &quot;a&quot;
4) &quot;e&quot;
5) &quot;d&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD key1 &quot;a&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;b&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;d &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2&quot;e &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SUNION key1 key2 &lt;code&gt;1) &quot;b&quot; 2) &quot;c&quot; 3) &quot;a&quot; 4) &quot;e&quot; 5) &quot;d&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8800ab472e3eca87d41d8991e70d9ec645e9807" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SUNIONSTORE key key1 key2&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; SMEMBERS key&lt;code&gt;1) &quot;a&quot;
2) &quot;c&quot;
3) &quot;e&quot;
4) &quot;b&quot;
5) &quot;d&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01d3129ee5c2cdcc8a346a858bcb5f1fff0a766" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD key1 &quot;a&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;b&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key1 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;c&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;d&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key2 &quot;e&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SUNIONSTORE key key1 key2&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; SMEMBERS key&lt;code&gt;1) &quot;b&quot;
2) &quot;c&quot;
3) &quot;a&quot;
4) &quot;e&quot;
5) &quot;d&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD key1 &quot;a&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;b&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key1 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;c&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key2 &quot;d &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD 키 2&quot;e &quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SUNIONSTORE 키 키 1 key2 &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; SMEMBERS 키 &lt;code&gt;1) &quot;b&quot; 2) &quot;c&quot; 3) &quot;a&quot; 4) &quot;e&quot; 5) &quot;d&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73e41a762fa91a9e58e1660d47f0add64a4029a1" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;World&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;Hello&quot;
2) &quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;World&quot; &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; SMEMBERS myset &lt;code&gt;1) &quot;Hello&quot; 2) &quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e8f402998b296befac50a90905d60ae1dfb01e" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SCARD myset&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SCARD myset &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0be84d79c9fd19e9f397f5e167e5997a82af597" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;World&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;Hello&quot;
2) &quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;World&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SMEMBERS myset &lt;code&gt;1) &quot;Hello&quot; 2) &quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01ac099e09b3d1c990105e1927d9aa43d055d549" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; SMISMEMBER myset &quot;one&quot; &quot;notamember&quot;&lt;code&gt;1) (integer) 1
2) (integer) 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c0a4d017c07852ba27cfafbd379e063180c576" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myotherset &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SMOVE myset myotherset &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;one&quot;&lt;/code&gt;redis&amp;gt; SMEMBERS myotherset&lt;code&gt;1) &quot;two&quot;
2) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myotherset &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SMOVE myset myotherset &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SMEMBERS myset &lt;code&gt;1) &quot;one&quot;&lt;/code&gt; redis&amp;gt; SMEMBERS myotherset &lt;code&gt;1) &quot;two&quot; 2) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69bfcb3b1372ec553c851fcae5bbfdc50568fdbc" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SPOP myset&lt;code&gt;&quot;one&quot;&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;two&quot;
2) &quot;three&quot;&lt;/code&gt;redis&amp;gt; SADD myset &quot;four&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;five&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SPOP myset 3&lt;code&gt;1) &quot;two&quot;
2) &quot;five&quot;
3) &quot;four&quot;&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;three&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db568f7fccabcff5800185476d98f2a479128bb6" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SPOP myset&lt;code&gt;&quot;two&quot;&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;one&quot;
2) &quot;three&quot;&lt;/code&gt;redis&amp;gt; SADD myset &quot;four&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;five&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SPOP myset 3&lt;code&gt;1) &quot;four&quot;
2) &quot;five&quot;
3) &quot;one&quot;&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SPOP myset &lt;code&gt;&quot;two&quot;&lt;/code&gt; redis&amp;gt; SMEMBERS myset &lt;code&gt;1) &quot;one&quot; 2) &quot;three&quot;&lt;/code&gt; redis&amp;gt; SADD myset &quot;four&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;five&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SPOP myset 3 &lt;code&gt;1) &quot;four&quot; 2) &quot;five&quot; 3) &quot;one&quot;&lt;/code&gt; redis&amp;gt; SMEMBERS myset &lt;code&gt;1) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2f83ad1499dd841302d21ef582f1dae218da1be" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SREM myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SREM myset &quot;four&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;three&quot;
2) &quot;two&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD myset &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SREM myset &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SREM myset &quot;four &quot; &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; SMEMBERS myset &lt;code&gt;1) &quot;three&quot; 2) &quot;two&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5041cb44b793c7af00c341b9519fbe405faae2b5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD myset &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SREM myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SREM myset &quot;four&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; SMEMBERS myset&lt;code&gt;1) &quot;two&quot;
2) &quot;three&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a51fb153204bbc5502e09c2a8c51759d9e80979" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SISMEMBER myset &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SISMEMBER myset &quot;two&quot;&lt;code&gt;(integer) 0&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SISMEMBER myset &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SISMEMBER myset &quot;two&quot; &lt;code&gt;(integer) 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="573178b5a2337e96e9cbd4e841c2894466e3ad24" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset one two three&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; SRANDMEMBER myset&lt;code&gt;&quot;one&quot;&lt;/code&gt;redis&amp;gt; SRANDMEMBER myset 2&lt;code&gt;1) &quot;one&quot;
2) &quot;three&quot;&lt;/code&gt;redis&amp;gt; SRANDMEMBER myset -5&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;
3) &quot;three&quot;
4) &quot;one&quot;
5) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SADD myset one two three &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; SRANDMEMBER myset &lt;code&gt;&quot;one&quot;&lt;/code&gt; redis&amp;gt; SRANDMEMBER myset 2 &lt;code&gt;1) &quot;one&quot; 2) &quot;three&quot;&lt;/code&gt; redis&amp;gt; SRANDMEMBER myset -5 &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot; 3) &quot;three&quot; 4) &quot;one&quot; 5) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="077d5983b5c52d007ddba6894735346d1cf42094" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SADD myset one two three&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; SRANDMEMBER myset&lt;code&gt;&quot;two&quot;&lt;/code&gt;redis&amp;gt; SRANDMEMBER myset 2&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;&lt;/code&gt;redis&amp;gt; SRANDMEMBER myset -5&lt;code&gt;1) &quot;two&quot;
2) &quot;two&quot;
3) &quot;three&quot;
4) &quot;one&quot;
5) &quot;three&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660e771f43faff83806b46223db662d0e2061b52" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;Hello World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; SETRANGE key1 6 &quot;Redis&quot;&lt;code&gt;(integer) 11&lt;/code&gt;redis&amp;gt; GET key1&lt;code&gt;&quot;Hello Redis&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;Hello World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; SETRANGE key1 6 &quot;Redis&quot; &lt;code&gt;(integer) 11&lt;/code&gt; redis&amp;gt; GET key1 &lt;code&gt;&quot;Hello Redis&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="693791038b41e9803d45a4bb2bda7df464233de9" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXISTS key1&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; EXISTS nosuchkey&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; SET key2 &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXISTS key1 key2 nosuchkey&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; EXISTS key1 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; EXISTS nosuchkey &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; SET key2 &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; EXISTS key1 key2 nosuchkey &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb60babc2e208f22411f8d2d14cd586e2ae82ae9" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; SET key2 &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; DEL key1 key2 key3&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; SET key2 &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; DEL key1 key2 key3 &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf72bbcc451fdce734ee330e7f49b42f84d1e4eb" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; SET key2 &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; MGET key1 key2 nonexisting&lt;code&gt;1) &quot;Hello&quot;
2) &quot;World&quot;
3) (nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; SET key2 &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; MGET key1 key2 존재하지 &lt;code&gt;1) &quot;Hello&quot; 2) &quot;World&quot; 3) (nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74072a9618516d818bb6b2de485fc24f5240e6ce" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; SET key2 &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; TOUCH key1 key2&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; SET key2 &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; TOUCH key1 key2 &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90e86a20b776b5452608ec4464d39def4dbc16b5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; SET key2 &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; UNLINK key1 key2 key3&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; SET key2 &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; UNLINK key1 key2 key3 &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76627fa25b7d40499ed2e3790985956dd7da71f9" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;foobar&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; SET key2 &quot;abcdef&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; BITOP AND dest key1 key2&lt;code&gt;(integer) 6&lt;/code&gt;redis&amp;gt; GET dest&lt;code&gt;&quot;`bc`ab&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;foobar&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; SET key2 &quot;abcdef&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; BITOP AND dest key1 key2 &lt;code&gt;(integer) 6&lt;/code&gt; redis&amp;gt; GET dest &lt;code&gt;&quot;`bc`ab&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8dfe48f5edc1733c08f1dd7fe1a7330b27a2be6d" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET key1 &quot;value&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; LPUSH key2 &quot;value&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SADD key3 &quot;value&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TYPE key1&lt;code&gt;&quot;string&quot;&lt;/code&gt;redis&amp;gt; TYPE key2&lt;code&gt;&quot;list&quot;&lt;/code&gt;redis&amp;gt; TYPE key3&lt;code&gt;&quot;set&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET key1 &quot;value&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; LPUSH key2 &quot;value&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SADD key3 &quot;value&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; TYPE key1 &lt;code&gt;&quot;string&quot;&lt;/code&gt; redis&amp;gt; TYPE key2 &lt;code&gt;&quot;list&quot;&lt;/code&gt; redis&amp;gt; TYPE key3 &lt;code&gt;&quot;set&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="549fd12b48dbbc9d9c20b90ed2f2f04abd2e7701" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;10&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; DECR mykey&lt;code&gt;(integer) 9&lt;/code&gt;redis&amp;gt; SET mykey &quot;234293482390480948029348230948&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; DECR mykey&lt;code&gt;ERR ERR value is not an integer or out of range&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;10&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; DECR mykey &lt;code&gt;(integer) 9&lt;/code&gt; redis&amp;gt; SET mykey &quot;234293482390480948029348230948&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; DECR mykey &lt;code&gt;ERR ERR value is not an integer or out of range&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7109916c2f650a91d5605d3cc66d6ed27da504b3" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;10&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; DECRBY mykey 3&lt;code&gt;(integer) 7&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;10&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; DECRBY mykey 3 &lt;code&gt;(integer) 7&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="903449ba0eb2a758c3fe8fdc06309c998b20bcf4" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;10&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; INCR mykey&lt;code&gt;(integer) 11&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;11&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;10&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; INCR mykey &lt;code&gt;(integer) 11&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;11&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce7b1f6f45763fd7dad8459530b17a1ed18db1ea" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;10&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; INCRBY mykey 5&lt;code&gt;(integer) 15&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;10&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; INCRBY mykey 5 &lt;code&gt;(integer) 15&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d610677adbb082092d8396567c6fbc097646cabc" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello world&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; STRLEN mykey&lt;code&gt;(integer) 11&lt;/code&gt;redis&amp;gt; STRLEN nonexisting&lt;code&gt;(integer) 0&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello world&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; STRLEN mykey &lt;code&gt;(integer) 11&lt;/code&gt; redis&amp;gt; STRLEN 존재하지 &lt;code&gt;(integer) 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b86594b620b83cfe21697e03f203d91f11a5f77" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXISTS mykey&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; EXPIREAT mykey 1293840000&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; EXISTS mykey&lt;code&gt;(integer) 0&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; EXISTS mykey &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; EXPIREAT mykey 1293840000 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; EXISTS mykey &lt;code&gt;(integer) 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="559cf2b5cc55ec35aaa61b3eb1e011946ac5e515" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXPIRE mykey 10&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) 10&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; EXPIRE mykey 10 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) 10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36c1a7d13c3e73259feb14c72b5d5a2185ce0926" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXPIRE mykey 10&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) 10&lt;/code&gt;redis&amp;gt; PERSIST mykey&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) -1&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; EXPIRE mykey 10 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) 10&lt;/code&gt; redis&amp;gt; PERSIST mykey &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) -1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="009a6bbd7bb994fc0911e4fd0a1e20838b94011c" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXPIRE mykey 10&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) 10&lt;/code&gt;redis&amp;gt; SET mykey &quot;Hello World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) -1&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; EXPIRE mykey 10 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) 10&lt;/code&gt; redis&amp;gt; SET mykey &quot;Hello World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) -1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffbc584454725c9c35f9317036d937ed9fa311f5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXPIRE mykey 1&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PTTL mykey&lt;code&gt;(integer) 951&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72695899800522ca2226ae99811c8620e6bd9db5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; EXPIRE mykey 1&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PTTL mykey&lt;code&gt;(integer) 999&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; EXPIRE mykey 1 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; PTTL mykey &lt;code&gt;(integer) 999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2586b1984f3a7f730b590535cc71e63527ac1df" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e29825f3f98515ae0baaa69dbf48c0d75486a9b5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;redis&amp;gt; SET anotherkey &quot;will expire in a minute&quot; EX 60&lt;code&gt;&quot;OK&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a92efd32d3502f0b9e43419ef8941fd4652d3ab" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; GETSET mykey &quot;World&quot;&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; GETSET mykey &quot;World&quot; &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd312ae9f5c1e81b4803abd4ee94d102bac90fdb" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; PEXPIRE mykey 1500&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; PTTL mykey&lt;code&gt;(integer) 1498&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; PEXPIRE mykey 1500 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; PTTL mykey &lt;code&gt;(integer) 1498&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="057125e0c83f8027efc6e4915ff79435e132db95" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; PEXPIRE mykey 1500&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; PTTL mykey&lt;code&gt;(integer) 1499&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfee099243c4ce287d1055937e70766c7a8b4d64" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; PEXPIREAT mykey 1555555555005&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) -2&lt;/code&gt;redis&amp;gt; PTTL mykey&lt;code&gt;(integer) -2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f239adbe827a2d01d8482691ec845130f3fa7874" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; PEXPIREAT mykey 1555555555005&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) 14181068&lt;/code&gt;redis&amp;gt; PTTL mykey&lt;code&gt;(integer) 14181067817&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; PEXPIREAT mykey 1555555555005 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) 14181068&lt;/code&gt; redis&amp;gt; PTTL mykey &lt;code&gt;(integer) 14181067817&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37a35707996fd6997bca69c8eae61257d585ca1f" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; RENAME mykey myotherkey&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; GET myotherkey&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; RENAME mykey myotherkey &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; GET myotherkey &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d91131ec37ba67a1449f29b8cbe40f52d1b0d49" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; SET myotherkey &quot;World&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; RENAMENX mykey myotherkey&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; GET myotherkey&lt;code&gt;&quot;World&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; SET myotherkey &quot;World&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; RENAMENX mykey myotherkey &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; GET myotherkey &lt;code&gt;&quot;World&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96955706032ef9d34e2008b2ca41bdcfdb740e83" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;This is a string&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; GETRANGE mykey 0 3&lt;code&gt;&quot;This&quot;&lt;/code&gt;redis&amp;gt; GETRANGE mykey -3 -1&lt;code&gt;&quot;ing&quot;&lt;/code&gt;redis&amp;gt; GETRANGE mykey 0 -1&lt;code&gt;&quot;This is a string&quot;&lt;/code&gt;redis&amp;gt; GETRANGE mykey 10 100&lt;code&gt;&quot;string&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;이것은 문자열입니다&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; GETRANGE mykey 0 3 &lt;code&gt;&quot;This&quot;&lt;/code&gt; redis&amp;gt; GETRANGE mykey -3 -1 &lt;code&gt;&quot;ing&quot;&lt;/code&gt; redis&amp;gt; GETRANGE mykey 0 -1 &lt;code&gt;&quot;This is a string&quot;&lt;/code&gt; redis&amp;gt; GETRANGE mykey 10100 &lt;code&gt;&quot;string&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af3af68565146756f9417f890aa43b26b336730a" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;\xff\xf0\x00&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; BITPOS mykey 0&lt;code&gt;(integer) 12&lt;/code&gt;redis&amp;gt; SET mykey &quot;\x00\xff\xf0&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; BITPOS mykey 1 0&lt;code&gt;(integer) 8&lt;/code&gt;redis&amp;gt; BITPOS mykey 1 2&lt;code&gt;(integer) 16&lt;/code&gt;redis&amp;gt; set mykey &quot;\x00\x00\x00&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; BITPOS mykey 1&lt;code&gt;(integer) -1&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;\ xff \ xf0 \ x00&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; BITPOS mykey 0 &lt;code&gt;(integer) 12&lt;/code&gt; redis&amp;gt; SET mykey &quot;\ x00 \ xff \ xf0&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; BITPOS mykey 1 0 &lt;code&gt;(integer) 8&lt;/code&gt; redis &amp;gt; BITPOS mykey 1 2 &lt;code&gt;(integer) 16&lt;/code&gt; redis&amp;gt; set mykey &quot;\ x00 \ x00 \ x00&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; BITPOS mykey 1 &lt;code&gt;(integer) -1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="696433601ee89780b53a327f8499846cc1b2ac95" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey &quot;foobar&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; BITCOUNT mykey&lt;code&gt;(integer) 26&lt;/code&gt;redis&amp;gt; BITCOUNT mykey 0 0&lt;code&gt;(integer) 4&lt;/code&gt;redis&amp;gt; BITCOUNT mykey 1 1&lt;code&gt;(integer) 6&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey &quot;foobar&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; BITCOUNT mykey &lt;code&gt;(integer) 26&lt;/code&gt; redis&amp;gt; BITCOUNT mykey 0 0 &lt;code&gt;(integer) 4&lt;/code&gt; redis&amp;gt; BITCOUNT mykey 1 1 &lt;code&gt;(integer) 6&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c7b0b9a6a518cdbf1f2d23b83e3b00cc41add33" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey 10.50&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; INCRBYFLOAT mykey 0.1&lt;code&gt;&quot;10.6&quot;&lt;/code&gt;redis&amp;gt; INCRBYFLOAT mykey -5&lt;code&gt;&quot;5.6&quot;&lt;/code&gt;redis&amp;gt; SET mykey 5.0e3&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; INCRBYFLOAT mykey 2.0e2&lt;code&gt;&quot;5200&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey 10.50 &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; INCRBYFLOAT mykey 0.1 &lt;code&gt;&quot;10.6&quot;&lt;/code&gt; redis&amp;gt; INCRBYFLOAT mykey -5 &lt;code&gt;&quot;5.6&quot;&lt;/code&gt; redis&amp;gt; SET mykey 5.0e3 &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; INCRBYFLOAT mykey 2.0e2 &lt;code&gt;&quot;5200&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="786509db3f46d8746a9afb386be4bb7435606c63" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SET mykey 10&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; DUMP mykey&lt;code&gt;&quot;\u0000\xC0\n\t\u0000\xBEm\u0006\x89Z(\u0000\n&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SET mykey 10 &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; DUMP mykey &lt;code&gt;&quot;\u0000\xC0\n\t\u0000\xBEm\u0006\x89Z(\u0000\n&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71b72f9da2f6edf30a6053d18ff86de1508cd010" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SETBIT mykey 7 1&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; GETBIT mykey 0&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; GETBIT mykey 7&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; GETBIT mykey 100&lt;code&gt;(integer) 0&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SETBIT mykey 7 1 &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; GETBIT mykey 0 &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; GETBIT mykey 7 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; GETBIT mykey 100 &lt;code&gt;(integer) 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6478080851123d002a9efec3f501cb73047f43cb" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SETBIT mykey 7 1&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; SETBIT mykey 7 0&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;\u0000&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SETBIT mykey 7 1 &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; SETBIT mykey 7 0 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;\u0000&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bae3fe71580252af9e95ff41cb4865fbba38cb6" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SETEX mykey 10 &quot;Hello&quot;&lt;code&gt;&quot;OK&quot;&lt;/code&gt;redis&amp;gt; TTL mykey&lt;code&gt;(integer) 10&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SETEX mykey 10 &quot;Hello&quot; &lt;code&gt;&quot;OK&quot;&lt;/code&gt; redis&amp;gt; TTL mykey &lt;code&gt;(integer) 10&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd0f3994ae7aeda7b5d80f11008e3132b48c7226" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SETNX mykey &quot;Hello&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; SETNX mykey &quot;World&quot;&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; GET mykey&lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SETNX mykey &quot;Hello&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; SETNX mykey &quot;World&quot; &lt;code&gt;(integer) 0&lt;/code&gt; redis&amp;gt; GET mykey &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5046a53e763b7d1920459be23c762fdddcf4af9d" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; SETRANGE key2 6 &quot;Redis&quot;&lt;code&gt;(integer) 11&lt;/code&gt;redis&amp;gt; GET key2&lt;code&gt;&quot;\u0000\u0000\u0000\u0000\u0000\u0000Redis&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; SETRANGE key2 6 &quot;Redis&quot; &lt;code&gt;(integer) 11&lt;/code&gt; redis&amp;gt; GET key2 &lt;code&gt;&quot;\u0000\u0000\u0000\u0000\u0000\u0000Redis&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b387f340d28b8cf37eabcb6ffb667e1d2bb6205f" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; TIME&lt;code&gt;1) &quot;1541374488&quot;
2) &quot;39268&quot;&lt;/code&gt;redis&amp;gt; TIME&lt;code&gt;1) &quot;1541374488&quot;
2) &quot;40008&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; 시간 &lt;code&gt;1) &quot;1541374488&quot; 2) &quot;39268&quot;&lt;/code&gt; redis&amp;gt; 시간 &lt;code&gt;1) &quot;1541374488&quot; 2) &quot;40008&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a5fb9db86658a1973b7890fcaa4f534f8f254d7" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; TIME&lt;code&gt;1) &quot;1609093316&quot;
2) &quot;660319&quot;&lt;/code&gt;redis&amp;gt; TIME&lt;code&gt;1) &quot;1609093316&quot;
2) &quot;664668&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a37c3a6019cf8b931c5ac2a6b4808c99720e191" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XACK mystream mygroup 1526569495631-0&lt;code&gt;ERR Unknown or disabled command 'XACK'&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; XACK mystream mygroup 1526569495631-0 &lt;code&gt;ERR Unknown or disabled command 'XACK'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f35de6deeea5f8712c66ffd36c74870ab890a4b6" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD mystream * field1 A field2 B field3 C field4 D&lt;code&gt;&quot;1541374488502-0&quot;&lt;/code&gt;redis&amp;gt; XTRIM mystream MAXLEN 2&lt;code&gt;ERR Unknown or disabled command 'XTRIM'&lt;/code&gt;redis&amp;gt; XRANGE mystream - +&lt;code&gt;1) 1) &quot;1541374488502-0&quot;
   2) 1) &quot;field1&quot;
      2) &quot;A&quot;
      3) &quot;field2&quot;
      4) &quot;B&quot;
      5) &quot;field3&quot;
      6) &quot;C&quot;
      7) &quot;field4&quot;
      8) &quot;D&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; XADD mystream * field1 A field2 B field3 C &lt;code&gt;&quot;1541374488502-0&quot;&lt;/code&gt; D &quot;1541374488502-0&quot; redis&amp;gt; XTRIM mystream MAXLEN 2 &lt;code&gt;ERR Unknown or disabled command 'XTRIM'&lt;/code&gt; &amp;gt; XRANGE mystream-+ &lt;code&gt;1) 1) &quot;1541374488502-0&quot; 2) 1) &quot;field1&quot; 2) &quot;A&quot; 3) &quot;field2&quot; 4) &quot;B&quot; 5) &quot;field3&quot; 6) &quot;C&quot; 7) &quot;field4&quot; 8) &quot;D&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9088d10ae72eb85f32b321aea5a978993523719b" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD mystream * field1 A field2 B field3 C field4 D&lt;code&gt;&quot;1609093317278-0&quot;&lt;/code&gt;redis&amp;gt; XTRIM mystream MAXLEN 2&lt;code&gt;(integer) 0&lt;/code&gt;redis&amp;gt; XRANGE mystream - +&lt;code&gt;1) 1) &quot;1609093317278-0&quot;
   2) 1) &quot;field1&quot;
      2) &quot;A&quot;
      3) &quot;field2&quot;
      4) &quot;B&quot;
      5) &quot;field3&quot;
      6) &quot;C&quot;
      7) &quot;field4&quot;
      8) &quot;D&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c2161e6190455c8d054d56758f8209f4a42cfa" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD mystream * item 1&lt;code&gt;&quot;1541374488587-0&quot;&lt;/code&gt;redis&amp;gt; XADD mystream * item 2&lt;code&gt;&quot;1541374488588-0&quot;&lt;/code&gt;redis&amp;gt; XADD mystream * item 3&lt;code&gt;&quot;1541374488590-0&quot;&lt;/code&gt;redis&amp;gt; XLEN mystream&lt;code&gt;(integer) 3&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; XADD mystream * 항목 1 &lt;code&gt;&quot;1541374488587-0&quot;&lt;/code&gt; redis&amp;gt; XADD mystream * 항목 2 &lt;code&gt;&quot;1541374488588-0&quot;&lt;/code&gt; redis&amp;gt; XADD mystream * 항목 3 &lt;code&gt;&quot;1541374488590-0&quot;&lt;/code&gt; redis&amp;gt; XLEN mystream &lt;code&gt;(integer) 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2bbc4abc453327f9d5eb4cc83dc9f6f5385d0e8" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD mystream * item 1&lt;code&gt;&quot;1609093317352-0&quot;&lt;/code&gt;redis&amp;gt; XADD mystream * item 2&lt;code&gt;&quot;1609093317374-0&quot;&lt;/code&gt;redis&amp;gt; XADD mystream * item 3&lt;code&gt;&quot;1609093317414-0&quot;&lt;/code&gt;redis&amp;gt; XLEN mystream&lt;code&gt;(integer) 3&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c1752762dcd9f80c91cf7732260d66f593e3f5" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD mystream * name Sara surname OConnor&lt;code&gt;&quot;1541374488490-0&quot;&lt;/code&gt;redis&amp;gt; XADD mystream * field1 value1 field2 value2 field3 value3&lt;code&gt;&quot;1541374488491-0&quot;&lt;/code&gt;redis&amp;gt; XLEN mystream&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; XRANGE mystream - +&lt;code&gt;1) 1) &quot;1541374488490-0&quot;
   2) 1) &quot;name&quot;
      2) &quot;Sara&quot;
      3) &quot;surname&quot;
      4) &quot;OConnor&quot;
2) 1) &quot;1541374488491-0&quot;
   2) 1) &quot;field1&quot;
      2) &quot;value1&quot;
      3) &quot;field2&quot;
      4) &quot;value2&quot;
      5) &quot;field3&quot;
      6) &quot;value3&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; XADD mystream * 이름 Sara 성 OConnor &lt;code&gt;&quot;1541374488490-0&quot;&lt;/code&gt; redis&amp;gt; XADD mystream * field1 value1 field2 value2 field3 value3 &lt;code&gt;&quot;1541374488491-0&quot;&lt;/code&gt; redis&amp;gt; XLEN mystream &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; XRANGE mystream-+ &lt;code&gt;1) 1) &quot;1541374488490-0&quot; 2) 1) &quot;name&quot; 2) &quot;Sara&quot; 3) &quot;surname&quot; 4) &quot;OConnor&quot; 2) 1) &quot;1541374488491-0&quot; 2) 1) &quot;field1&quot; 2) &quot;value1&quot; 3) &quot;field2&quot; 4) &quot;value2&quot; 5) &quot;field3&quot; 6) &quot;value3&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6621b81718704a7abb4f73856a172438937cf35d" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD mystream * name Sara surname OConnor&lt;code&gt;&quot;1609093317292-0&quot;&lt;/code&gt;redis&amp;gt; XADD mystream * field1 value1 field2 value2 field3 value3&lt;code&gt;&quot;1609093317395-0&quot;&lt;/code&gt;redis&amp;gt; XLEN mystream&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; XRANGE mystream - +&lt;code&gt;1) 1) &quot;1609093317292-0&quot;
   2) 1) &quot;name&quot;
      2) &quot;Sara&quot;
      3) &quot;surname&quot;
      4) &quot;OConnor&quot;
2) 1) &quot;1609093317395-0&quot;
   2) 1) &quot;field1&quot;
      2) &quot;value1&quot;
      3) &quot;field2&quot;
      4) &quot;value2&quot;
      5) &quot;field3&quot;
      6) &quot;value3&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6228e53cfa47058ef8feb70a6a679119bfa20f69" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD writers * name Virginia surname Woolf&lt;code&gt;&quot;1541374488566-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Jane surname Austen&lt;code&gt;&quot;1541374488567-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Toni surname Morris&lt;code&gt;&quot;1541374488568-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Agatha surname Christie&lt;code&gt;&quot;1541374488572-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Ngozi surname Adichie&lt;code&gt;&quot;1541374488572-1&quot;&lt;/code&gt;redis&amp;gt; XLEN writers&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; XRANGE writers - + COUNT 2&lt;code&gt;1) 1) &quot;1541374488566-0&quot;
   2) 1) &quot;name&quot;
      2) &quot;Virginia&quot;
      3) &quot;surname&quot;
      4) &quot;Woolf&quot;
2) 1) &quot;1541374488567-0&quot;
   2) 1) &quot;name&quot;
      2) &quot;Jane&quot;
      3) &quot;surname&quot;
      4) &quot;Austen&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; XADD 작가 * 이름 버지니아 성 울프 &lt;code&gt;&quot;1541374488566-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 Jane 성 오스틴 &lt;code&gt;&quot;1541374488567-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 토니 성 Morris &lt;code&gt;&quot;1541374488568-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 Agatha 성 Christie &lt;code&gt;&quot;1541374488572-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 Ngozi 성 &lt;code&gt;&quot;1541374488572-1&quot;&lt;/code&gt; redis&amp;gt; XLEN 작가 &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; XRANGE 작가-+ COUNT 2 &lt;code&gt;1) 1) &quot;1541374488566-0&quot; 2) 1) &quot;name&quot; 2) &quot;Virginia&quot; 3) &quot;surname&quot; 4) &quot;Woolf&quot; 2) 1) &quot;1541374488567-0&quot; 2) 1) &quot;name&quot; 2) &quot;Jane&quot; 3) &quot;surname&quot; 4) &quot;Austen&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7dab1e02f5c14190ec342b2ba939021fec44dc02" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD writers * name Virginia surname Woolf&lt;code&gt;&quot;1541374488582-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Jane surname Austen&lt;code&gt;&quot;1541374488583-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Toni surname Morris&lt;code&gt;&quot;1541374488584-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Agatha surname Christie&lt;code&gt;&quot;1541374488586-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Ngozi surname Adichie&lt;code&gt;&quot;1541374488588-0&quot;&lt;/code&gt;redis&amp;gt; XLEN writers&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; XREVRANGE writers + - COUNT 1&lt;code&gt;1) 1) &quot;1541374488588-0&quot;
   2) 1) &quot;name&quot;
      2) &quot;Ngozi&quot;
      3) &quot;surname&quot;
      4) &quot;Adichie&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; XADD 작가 * 이름 버지니아 성 울프 &lt;code&gt;&quot;1541374488582-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 Jane 성 오스틴 &lt;code&gt;&quot;1541374488583-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 토니 성 모리스 &lt;code&gt;&quot;1541374488584-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 Agatha 성 Christie &lt;code&gt;&quot;1541374488586-0&quot;&lt;/code&gt; redis&amp;gt; XADD 작가 * 이름 Ngozi 성 &lt;code&gt;&quot;1541374488588-0&quot;&lt;/code&gt; redis&amp;gt; XLEN 작가 &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; XREVRANGE 작가 +-COUNT 1 &lt;code&gt;1) 1) &quot;1541374488588-0&quot; 2) 1) &quot;name&quot; 2) &quot;Ngozi&quot; 3) &quot;surname&quot; 4) &quot;Adichie&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="173d7245f1541e8bca1eda317cdcce61d7965b73" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD writers * name Virginia surname Woolf&lt;code&gt;&quot;1609093317304-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Jane surname Austen&lt;code&gt;&quot;1609093317315-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Toni surname Morrison&lt;code&gt;&quot;1609093317315-1&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Agatha surname Christie&lt;code&gt;&quot;1609093317315-2&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Ngozi surname Adichie&lt;code&gt;&quot;1609093317316-0&quot;&lt;/code&gt;redis&amp;gt; XLEN writers&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; XREVRANGE writers + - COUNT 1&lt;code&gt;1) 1) &quot;1609093317316-0&quot;
   2) 1) &quot;name&quot;
      2) &quot;Ngozi&quot;
      3) &quot;surname&quot;
      4) &quot;Adichie&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fca66f604f2ffe9f5d1bb165f20682250ce7632" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; XADD writers * name Virginia surname Woolf&lt;code&gt;&quot;1609093317342-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Jane surname Austen&lt;code&gt;&quot;1609093317342-1&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Toni surname Morrison&lt;code&gt;&quot;1609093317342-2&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Agatha surname Christie&lt;code&gt;&quot;1609093317343-0&quot;&lt;/code&gt;redis&amp;gt; XADD writers * name Ngozi surname Adichie&lt;code&gt;&quot;1609093317343-1&quot;&lt;/code&gt;redis&amp;gt; XLEN writers&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; XRANGE writers - + COUNT 2&lt;code&gt;1) 1) &quot;1609093317342-0&quot;
   2) 1) &quot;name&quot;
      2) &quot;Virginia&quot;
      3) &quot;surname&quot;
      4) &quot;Woolf&quot;
2) 1) &quot;1609093317342-1&quot;
   2) 1) &quot;name&quot;
      2) &quot;Jane&quot;
      3) &quot;surname&quot;
      4) &quot;Austen&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c10fcf036c58ea2dd4d7101f9158f7381ec1f1" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 0 a 0 b 0 c 0 d 0 e 0 f 0 g&lt;code&gt;(integer) 7&lt;/code&gt;redis&amp;gt; ZRANGEBYLEX myzset - [c&lt;code&gt;1) &quot;a&quot;
2) &quot;b&quot;
3) &quot;c&quot;&lt;/code&gt;redis&amp;gt; ZRANGEBYLEX myzset - (c&lt;code&gt;1) &quot;a&quot;
2) &quot;b&quot;&lt;/code&gt;redis&amp;gt; ZRANGEBYLEX myzset [aaa (g&lt;code&gt;1) &quot;b&quot;
2) &quot;c&quot;
3) &quot;d&quot;
4) &quot;e&quot;
5) &quot;f&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 0 a 0 b 0 c 0 d 0 e 0 f 0 g &lt;code&gt;(integer) 7&lt;/code&gt; redis&amp;gt; ZRANGEBYLEX myzset-[c &lt;code&gt;1) &quot;a&quot; 2) &quot;b&quot; 3) &quot;c&quot;&lt;/code&gt; redis&amp;gt; ZRANGEBYLEX myzset-( c &lt;code&gt;1) &quot;a&quot; 2) &quot;b&quot;&lt;/code&gt; redis&amp;gt; ZRANGEBYLEX myzset [aaa (g &lt;code&gt;1) &quot;b&quot; 2) &quot;c&quot; 3) &quot;d&quot; 4) &quot;e&quot; 5) &quot;f&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58b06a233fb1ea2d4ab25929fa76c0594193cc20" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 0 a 0 b 0 c 0 d 0 e 0 f 0 g&lt;code&gt;(integer) 7&lt;/code&gt;redis&amp;gt; ZREVRANGEBYLEX myzset [c -&lt;code&gt;1) &quot;c&quot;
2) &quot;b&quot;
3) &quot;a&quot;&lt;/code&gt;redis&amp;gt; ZREVRANGEBYLEX myzset (c -&lt;code&gt;1) &quot;b&quot;
2) &quot;a&quot;&lt;/code&gt;redis&amp;gt; ZREVRANGEBYLEX myzset (g [aaa&lt;code&gt;1) &quot;f&quot;
2) &quot;e&quot;
3) &quot;d&quot;
4) &quot;c&quot;
5) &quot;b&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 0 a 0 b 0 c 0 d 0 e 0 f 0 g &lt;code&gt;(integer) 7&lt;/code&gt; redis&amp;gt; ZREVRANGEBYLEX myzset [c- &lt;code&gt;1) &quot;c&quot; 2) &quot;b&quot; 3) &quot;a&quot;&lt;/code&gt; redis&amp;gt; ZREVRANGEBYLEX myzset (c - &lt;code&gt;1) &quot;b&quot; 2) &quot;a&quot;&lt;/code&gt; 레디 스&amp;gt; ZREVRANGEBYLEX myzset (g [AAA &lt;code&gt;1) &quot;f&quot; 2) &quot;e&quot; 3) &quot;d&quot; 4) &quot;c&quot; 5) &quot;b&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33b5530deea57fece957aff9db45b5735e774866" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 0 a 0 b 0 c 0 d 0 e&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; ZADD myzset 0 f 0 g&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; ZLEXCOUNT myzset - +&lt;code&gt;(integer) 7&lt;/code&gt;redis&amp;gt; ZLEXCOUNT myzset [b [f&lt;code&gt;(integer) 5&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 0 a 0 b 0 c 0 d 0 e &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; ZADD myzset 0 f 0 g &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; ZLEXCOUNT myzset-+ &lt;code&gt;(integer) 7&lt;/code&gt; redis&amp;gt; ZLEXCOUNT myzset [b [f &lt;code&gt;(integer) 5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="250821297bab91fcd59d664bbc964c7280c106f3" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 0 aaaa 0 b 0 c 0 d 0 e&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; ZADD myzset 0 foo 0 zap 0 zip 0 ALPHA 0 alpha&lt;code&gt;(integer) 5&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1&lt;code&gt;1) &quot;ALPHA&quot;
 2) &quot;aaaa&quot;
 3) &quot;alpha&quot;
 4) &quot;b&quot;
 5) &quot;c&quot;
 6) &quot;d&quot;
 7) &quot;e&quot;
 8) &quot;foo&quot;
 9) &quot;zap&quot;
10) &quot;zip&quot;&lt;/code&gt;redis&amp;gt; ZREMRANGEBYLEX myzset [alpha [omega&lt;code&gt;(integer) 6&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1&lt;code&gt;1) &quot;ALPHA&quot;
2) &quot;aaaa&quot;
3) &quot;zap&quot;
4) &quot;zip&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 0 aaaa 0 b 0 c 0 d 0 e &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; ZADD myzset 0 foo 0 zap 0 zip 0 ALPHA 0 alpha &lt;code&gt;(integer) 5&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0-1 &lt;code&gt;1) &quot;ALPHA&quot; 2) &quot;aaaa&quot; 3) &quot;alpha&quot; 4) &quot;b&quot; 5) &quot;c&quot; 6) &quot;d&quot; 7) &quot;e&quot; 8) &quot;foo&quot; 9) &quot;zap&quot; 10) &quot;zip&quot;&lt;/code&gt; redis&amp;gt; ZREMRANGEBYLEX myzset [alpha [ omega &lt;code&gt;(integer) 6&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0 -1 &lt;code&gt;1) &quot;ALPHA&quot; 2) &quot;aaaa&quot; 3) &quot;zap&quot; 4) &quot;zip&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="701e38261e9de337e28f77c9e0e41981e74d5b6f" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 1 &quot;uno&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot; 3 &quot;three&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES&lt;code&gt;1) &quot;one&quot;
2) &quot;1&quot;
3) &quot;uno&quot;
4) &quot;1&quot;
5) &quot;two&quot;
6) &quot;2&quot;
7) &quot;three&quot;
8) &quot;3&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 1 &quot;uno&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot;3 &quot;three&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES &lt;code&gt;1) &quot;one&quot; 2) &quot;1&quot; 3) &quot;uno&quot; 4) &quot;1&quot; 5) &quot;two&quot; 6) &quot;2&quot; 7) &quot;three&quot; 8) &quot;3&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f6200b04b9836c8b0a344680d7c0061a0c64fef" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZCOUNT myzset -inf +inf&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; ZCOUNT myzset (1 3&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZCOUNT myzset -inf + inf &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; ZCOUNT myzset (1 3 &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4413c8a1370c55d8e5ac627d43987347642ac493" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZPOPMAX myzset&lt;code&gt;1) &quot;3&quot;
2) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZPOPMAX myzset &lt;code&gt;1) &quot;3&quot; 2) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7e6ce43f452efcd4d58275687d8a1146ccab2b8" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZPOPMAX myzset&lt;code&gt;1) &quot;three&quot;
2) &quot;3&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e658803fffff59eac37a7d43825508f41181db14" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZPOPMIN myzset&lt;code&gt;1) &quot;1&quot;
2) &quot;one&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZPOPMIN myzset &lt;code&gt;1) &quot;1&quot; 2) &quot;one&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31a02d43ebcf279f1b60f1b3c027cf6116e77c36" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZPOPMIN myzset&lt;code&gt;1) &quot;one&quot;
2) &quot;1&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2835b61bc71bc5ff92f54502dd803027caf1383d" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;
3) &quot;three&quot;&lt;/code&gt;redis&amp;gt; ZRANGE myzset 2 3&lt;code&gt;1) &quot;three&quot;&lt;/code&gt;redis&amp;gt; ZRANGE myzset -2 -1&lt;code&gt;1) &quot;two&quot;
2) &quot;three&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0 -1 &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot; 3) &quot;three&quot;&lt;/code&gt; redis&amp;gt; ZRANGE myzset 2 3 &lt;code&gt;1) &quot;three&quot;&lt;/code&gt; redis&amp;gt; ZRANGE myzset -2 -1 &lt;code&gt;1) &quot;two&quot; 2) &quot;three&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe3753a6e5886e3f509181dd470503dd7952dc0c" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZRANGEBYSCORE myzset -inf +inf&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;
3) &quot;three&quot;&lt;/code&gt;redis&amp;gt; ZRANGEBYSCORE myzset 1 2&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;&lt;/code&gt;redis&amp;gt; ZRANGEBYSCORE myzset (1 2&lt;code&gt;1) &quot;two&quot;&lt;/code&gt;redis&amp;gt; ZRANGEBYSCORE myzset (1 (2&lt;code&gt;(empty list or set)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZRANGEBYSCORE myzset -inf + inf &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot; 3) &quot;three&quot;&lt;/code&gt; redis&amp;gt; ZRANGEBYSCORE myzset 1 2 &lt;code&gt;1) &quot;one&quot; 2) &quot;two&quot;&lt;/code&gt; redis&amp;gt; ZRANGEBYSCORE myzset (1 2 &lt;code&gt;1) &quot;two&quot;&lt;/code&gt; redis&amp;gt; ZRANGEBYSCORE myzset (1 (2 &lt;code&gt;(empty list or set)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b24b486ea295edf27d1ece3aa5e2b4112185093" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZRANK myzset &quot;three&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; ZRANK myzset &quot;four&quot;&lt;code&gt;(nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZRANK myzset &quot;three&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; ZRANK myzset &quot;4&quot; &lt;code&gt;(nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc71dd63d1a93ef68a53263d7ecc122e22bbbd2d" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZREM myzset &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES&lt;code&gt;1) &quot;one&quot;
2) &quot;1&quot;
3) &quot;three&quot;
4) &quot;3&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZREM myzset &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES &lt;code&gt;1) &quot;one&quot; 2) &quot;1&quot; 3) &quot;three&quot; 4) &quot;3&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8c20110716c0d25f411d6aa650b90b9cbd6ff79" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZREMRANGEBYRANK myzset 0 1&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES&lt;code&gt;1) &quot;three&quot;
2) &quot;3&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZREMRANGEBYRANK myzset 0 1 &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0-1 WITHSCORES &lt;code&gt;1) &quot;three&quot; 2) &quot;3&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe1b277e0b51f66f5ca31d67ea0f09bad5ce0d1b" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZREMRANGEBYSCORE myzset -inf (2&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES&lt;code&gt;1) &quot;two&quot;
2) &quot;2&quot;
3) &quot;three&quot;
4) &quot;3&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;three&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZREMRANGEBYSCORE myzset -inf (2 &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES &lt;code&gt;1) &quot;two&quot; 2) &quot;2&quot; 3) &quot;three&quot; 4) &quot;3&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="362c7cb7dcbde7f35a7a9571b7b6ef3bcfbc4787" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZREVRANGE myzset 0 -1&lt;code&gt;1) &quot;three&quot;
2) &quot;two&quot;
3) &quot;one&quot;&lt;/code&gt;redis&amp;gt; ZREVRANGE myzset 2 3&lt;code&gt;1) &quot;one&quot;&lt;/code&gt;redis&amp;gt; ZREVRANGE myzset -2 -1&lt;code&gt;1) &quot;two&quot;
2) &quot;one&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZREVRANGE myzset 0 -1 &lt;code&gt;1) &quot;three&quot; 2) &quot;two&quot; 3) &quot;one&quot;&lt;/code&gt; redis&amp;gt; ZREVRANGE myzset 2 3 &lt;code&gt;1) &quot;one&quot;&lt;/code&gt; redis&amp;gt; ZREVRANGE myzset -2 -1 &lt;code&gt;1) &quot;two&quot; 2) &quot;one&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="647bdb4460fcdbc71bb708e0a14f86ad25072022" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZREVRANGEBYSCORE myzset +inf -inf&lt;code&gt;1) &quot;three&quot;
2) &quot;two&quot;
3) &quot;one&quot;&lt;/code&gt;redis&amp;gt; ZREVRANGEBYSCORE myzset 2 1&lt;code&gt;1) &quot;two&quot;
2) &quot;one&quot;&lt;/code&gt;redis&amp;gt; ZREVRANGEBYSCORE myzset 2 (1&lt;code&gt;1) &quot;two&quot;&lt;/code&gt;redis&amp;gt; ZREVRANGEBYSCORE myzset (2 (1&lt;code&gt;(empty list or set)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZREVRANGEBYSCORE myzset + inf -inf &lt;code&gt;1) &quot;three&quot; 2) &quot;two&quot; 3) &quot;one&quot;&lt;/code&gt; redis&amp;gt; ZREVRANGEBYSCORE myzset 2 1 &lt;code&gt;1) &quot;two&quot; 2) &quot;one&quot;&lt;/code&gt; redis&amp;gt; ZREVRANGEBYSCORE myzset 2 (1 &lt;code&gt;1) &quot;two&quot;&lt;/code&gt; redis&amp;gt; ZREVRANGEBYSCORE myzset (2 (1 &lt;code&gt;(empty list or set)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8418f54d94ff02a22dae975a40bd1ca49b2708b2" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZREVRANK myzset &quot;one&quot;&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; ZREVRANK myzset &quot;four&quot;&lt;code&gt;(nil)&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZREVRANK myzset &quot;one&quot; &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; ZREVRANK myzset &quot;4&quot; &lt;code&gt;(nil)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b5420e3faf4bd7f23d0b57f9b3e38c53326b605" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZCARD myzset&lt;code&gt;(integer) 2&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZCARD myzset &lt;code&gt;(integer) 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfb3794f028916a550fe5dc59beb6b13896b00cc" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZINCRBY myzset 2 &quot;one&quot;&lt;code&gt;&quot;3&quot;&lt;/code&gt;redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES&lt;code&gt;1) &quot;two&quot;
2) &quot;2&quot;
3) &quot;one&quot;
4) &quot;3&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD myzset 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZINCRBY myzset 2 &quot;1&quot; &lt;code&gt;&quot;3&quot;&lt;/code&gt; redis&amp;gt; ZRANGE myzset 0 -1 WITHSCORES &lt;code&gt;1) &quot;two&quot; 2) &quot;2&quot; 3) &quot;one&quot; 4) &quot;3&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb571fa12a80f29ab1431469b93868c91f115001" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD myzset 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZMSCORE myzset &quot;one&quot; &quot;two&quot; &quot;nofield&quot;&lt;code&gt;1) &quot;1&quot;
2) &quot;2&quot;
3) (nil)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4110310886b0d43ff9cc879a1c8b9fd27210c655" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD myzset 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZSCORE myzset &quot;one&quot;&lt;code&gt;&quot;1&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD myzset 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZSCORE myzset &quot;1&quot; &lt;code&gt;&quot;1&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9efb58b2907ac50cec942d624f7dbc51452c26a6" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD zset1 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZDIFF 2 zset1 zset2&lt;code&gt;1) &quot;three&quot;&lt;/code&gt;redis&amp;gt; ZDIFF 2 zset1 zset2 WITHSCORES&lt;code&gt;1) &quot;three&quot;
2) &quot;3&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce508ebe41184a11896797fe64d1048fa3bdd51" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD zset1 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZDIFFSTORE out 2 zset1 zset2&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZRANGE out 0 -1 WITHSCORES&lt;code&gt;1) &quot;three&quot;
2) &quot;3&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc3c336e320b4e6b2f8b4a5e48c72c83761d2f7" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD zset1 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZINTER 2 zset1 zset2&lt;code&gt;1) &quot;one&quot;
2) &quot;two&quot;&lt;/code&gt;redis&amp;gt; ZINTER 2 zset1 zset2 WITHSCORES&lt;code&gt;1) &quot;one&quot;
2) &quot;2&quot;
3) &quot;two&quot;
4) &quot;4&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b1d505a22963c8609d0c494e1b67f80d864acb" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD zset1 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZINTERSTORE out 2 zset1 zset2 WEIGHTS 2 3&lt;code&gt;(integer) 2&lt;/code&gt;redis&amp;gt; ZRANGE out 0 -1 WITHSCORES&lt;code&gt;1) &quot;one&quot;
2) &quot;5&quot;
3) &quot;two&quot;
4) &quot;10&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD zset1 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset1 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset2 1 &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset2 2 &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset2 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZINTERSTORE 출력 2 zset1 zset2 WEIGHTS 2 3 &lt;code&gt;(integer) 2&lt;/code&gt; redis&amp;gt; ZRANGE 출력 0 -1 WITHSCORES &lt;code&gt;1) &quot;one&quot; 2) &quot;5&quot; 3) &quot;two&quot; 4) &quot;10&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b39f7b6f5167db9361abfdcd937ebed9ecf3312" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD zset1 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZUNION 2 zset1 zset2&lt;code&gt;1) &quot;one&quot;
2) &quot;three&quot;
3) &quot;two&quot;&lt;/code&gt;redis&amp;gt; ZUNION 2 zset1 zset2 WITHSCORES&lt;code&gt;1) &quot;one&quot;
2) &quot;2&quot;
3) &quot;three&quot;
4) &quot;3&quot;
5) &quot;two&quot;
6) &quot;4&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8c2e9c8c47d51e49d61fe2c2f11f4ca63b9120" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZADD zset1 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset1 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 1 &quot;one&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 2 &quot;two&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZADD zset2 3 &quot;three&quot;&lt;code&gt;(integer) 1&lt;/code&gt;redis&amp;gt; ZUNIONSTORE out 2 zset1 zset2 WEIGHTS 2 3&lt;code&gt;(integer) 3&lt;/code&gt;redis&amp;gt; ZRANGE out 0 -1 WITHSCORES&lt;code&gt;1) &quot;one&quot;
2) &quot;5&quot;
3) &quot;three&quot;
4) &quot;9&quot;
5) &quot;two&quot;
6) &quot;10&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZADD zset1 1 &quot;1&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset1 2 &quot;2&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset2 1 &quot;one&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset2 2 &quot;two&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZADD zset2 3 &quot;3&quot; &lt;code&gt;(integer) 1&lt;/code&gt; redis&amp;gt; ZUNIONSTORE 출력 2 zset1 zset2 WEIGHTS 2 3 &lt;code&gt;(integer) 3&lt;/code&gt; redis&amp;gt; ZRANGE 출력 0 -1 WITHSCORES &lt;code&gt;1) &quot;one&quot; 2) &quot;5&quot; 3) &quot;three&quot; 4) &quot;9&quot; 5) &quot;two&quot; 6) &quot;10&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a243af7d4791e5aee02c100f810fbfe9cca85e8d" translate="yes" xml:space="preserve">
          <source>redis&amp;gt; ZRANGE myzset 0 1 WITHSCORES&lt;code&gt;1) &quot;one&quot;
2) &quot;1&quot;
3) &quot;two&quot;
4) &quot;2&quot;&lt;/code&gt;</source>
          <target state="translated">redis&amp;gt; ZRANGE myzset 0 1 WITHSCORES &lt;code&gt;1) &quot;one&quot; 2) &quot;1&quot; 3) &quot;two&quot; 4) &quot;2&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04a26d6f4aab9bc632ef3b0b244135354c76f93c" translate="yes" xml:space="preserve">
          <source>rename</source>
          <target state="translated">rename</target>
        </trans-unit>
        <trans-unit id="0a3381001ee727ea2c7e03268eda67ee92327011" translate="yes" xml:space="preserve">
          <source>renamenx</source>
          <target state="translated">renamenx</target>
        </trans-unit>
        <trans-unit id="4aa4f40d13aa2f1d2c2004bce6b401a561019bb3" translate="yes" xml:space="preserve">
          <source>replicaof</source>
          <target state="translated">replicaof</target>
        </trans-unit>
        <trans-unit id="b0c290b78e8231d7eb039126e39926da5a7b2ebf" translate="yes" xml:space="preserve">
          <source>reset: Remove any capability from the user. It is set to off, without passwords, unable to execute any command, unable to access any key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08e84916fb42ae1b61b75eb6fccf8a6eb98045e" translate="yes" xml:space="preserve">
          <source>restore</source>
          <target state="translated">restore</target>
        </trans-unit>
        <trans-unit id="8dca46428d005a2f4c2e039fb250964d6139a8b2" translate="yes" xml:space="preserve">
          <source>role</source>
          <target state="translated">role</target>
        </trans-unit>
        <trans-unit id="2e2150107692512f7a1d8703bd9368d6c9448503" translate="yes" xml:space="preserve">
          <source>rpop</source>
          <target state="translated">rpop</target>
        </trans-unit>
        <trans-unit id="fe2610c1688c2330ebd6b91861fd4eab93c1d392" translate="yes" xml:space="preserve">
          <source>rpoplpush</source>
          <target state="translated">rpoplpush</target>
        </trans-unit>
        <trans-unit id="728495c88661a13dbac017f8d0b278ab6c2ef895" translate="yes" xml:space="preserve">
          <source>rpush</source>
          <target state="translated">rpush</target>
        </trans-unit>
        <trans-unit id="f213c1161e49868fea511099a0d457611e07e47f" translate="yes" xml:space="preserve">
          <source>rpushx</source>
          <target state="translated">rpushx</target>
        </trans-unit>
        <trans-unit id="5e1e922c39d8ee3b603194f5215d7614e68dbff4" translate="yes" xml:space="preserve">
          <source>sadd</source>
          <target state="translated">sadd</target>
        </trans-unit>
        <trans-unit id="13a4a11319d31c1b323d5774f44240a9ffc984d0" translate="yes" xml:space="preserve">
          <source>save</source>
          <target state="translated">save</target>
        </trans-unit>
        <trans-unit id="ffa9c24c6823e27f40d9a2965a5e88da185579c1" translate="yes" xml:space="preserve">
          <source>scan</source>
          <target state="translated">scan</target>
        </trans-unit>
        <trans-unit id="97d85d068084cf5681ec00e34fce06470c9c0a16" translate="yes" xml:space="preserve">
          <source>scard</source>
          <target state="translated">scard</target>
        </trans-unit>
        <trans-unit id="bed520854d572c6017bb1c1ac0349104d3e46540" translate="yes" xml:space="preserve">
          <source>script debug</source>
          <target state="translated">스크립트 디버그</target>
        </trans-unit>
        <trans-unit id="8d28fe47db916649f723154ffb78cbb93c1e615b" translate="yes" xml:space="preserve">
          <source>script exists</source>
          <target state="translated">스크립트가 존재</target>
        </trans-unit>
        <trans-unit id="8d2a6455adaab38dd7b4a7f7cda46f5ab2aea4f5" translate="yes" xml:space="preserve">
          <source>script flush</source>
          <target state="translated">스크립트 플러시</target>
        </trans-unit>
        <trans-unit id="cb64954b2aaa15a2020efbbb8944f2a9298e11b2" translate="yes" xml:space="preserve">
          <source>script kill</source>
          <target state="translated">스크립트 킬</target>
        </trans-unit>
        <trans-unit id="d83ef9ed89ffef946e57319e249afd8ab1a9c51b" translate="yes" xml:space="preserve">
          <source>script load</source>
          <target state="translated">스크립트로드</target>
        </trans-unit>
        <trans-unit id="5bf22606441635632564b8d0ff6b08f48998dab4" translate="yes" xml:space="preserve">
          <source>sdiff</source>
          <target state="translated">sdiff</target>
        </trans-unit>
        <trans-unit id="2073214603f420494c2b3af338e8686b2913cb9b" translate="yes" xml:space="preserve">
          <source>sdiffstore</source>
          <target state="translated">sdiffstore</target>
        </trans-unit>
        <trans-unit id="81448fe273247b533b9f018e96c158cab7901247" translate="yes" xml:space="preserve">
          <source>select</source>
          <target state="translated">select</target>
        </trans-unit>
        <trans-unit id="65c10dc3549fe07424148a8a4790a3341ecbc253" translate="yes" xml:space="preserve">
          <source>set</source>
          <target state="translated">set</target>
        </trans-unit>
        <trans-unit id="789b98203669a2fd6bb85bb22cf60b50fac4a135" translate="yes" xml:space="preserve">
          <source>setbit</source>
          <target state="translated">setbit</target>
        </trans-unit>
        <trans-unit id="f7584136460d63f661af1310a703574f6ab99c93" translate="yes" xml:space="preserve">
          <source>setex</source>
          <target state="translated">setex</target>
        </trans-unit>
        <trans-unit id="ee01e92a5f4c3880ed9f9f8e4bad9345328270c7" translate="yes" xml:space="preserve">
          <source>setnx</source>
          <target state="translated">setnx</target>
        </trans-unit>
        <trans-unit id="1d1da9a6ed4202931e81ab29f85ae5add0aff30b" translate="yes" xml:space="preserve">
          <source>setrange</source>
          <target state="translated">setrange</target>
        </trans-unit>
        <trans-unit id="53669f193b2174641c72654b5c3e5b67950334ae" translate="yes" xml:space="preserve">
          <source>shutdown</source>
          <target state="translated">shutdown</target>
        </trans-unit>
        <trans-unit id="e7f9e982bff1f9e456e4e092cfa95629a3d7da50" translate="yes" xml:space="preserve">
          <source>sinter</source>
          <target state="translated">sinter</target>
        </trans-unit>
        <trans-unit id="fd971667f5b9edaf0221039d3684ca34cf123145" translate="yes" xml:space="preserve">
          <source>sinterstore</source>
          <target state="translated">sinterstore</target>
        </trans-unit>
        <trans-unit id="3b075df6244376761988cf73d2ed735ee23246f8" translate="yes" xml:space="preserve">
          <source>sismember</source>
          <target state="translated">sismember</target>
        </trans-unit>
        <trans-unit id="9a96e223690b2a08504cf0ff9f2963af3d99a856" translate="yes" xml:space="preserve">
          <source>slaveof</source>
          <target state="translated">slaveof</target>
        </trans-unit>
        <trans-unit id="70102a99861930f02362a194e933ca1092cce0ba" translate="yes" xml:space="preserve">
          <source>slowlog</source>
          <target state="translated">slowlog</target>
        </trans-unit>
        <trans-unit id="ffb91ef78a5f826d7ef42ab85272dddc69ae36d4" translate="yes" xml:space="preserve">
          <source>smembers</source>
          <target state="translated">smembers</target>
        </trans-unit>
        <trans-unit id="21b89da60f9458244068c8f6272736ab52bd7f4a" translate="yes" xml:space="preserve">
          <source>smove</source>
          <target state="translated">smove</target>
        </trans-unit>
        <trans-unit id="98c4b8f6e2d770a0f2b54233669d65ff6eddc472" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>
        </trans-unit>
        <trans-unit id="33f1a7060bcef3c55dda13ba08815fa832fe481a" translate="yes" xml:space="preserve">
          <source>spop</source>
          <target state="translated">spop</target>
        </trans-unit>
        <trans-unit id="33813dbb5a8c8aae01ab68d81ac2fd9e1302cad9" translate="yes" xml:space="preserve">
          <source>srandmember</source>
          <target state="translated">srandmember</target>
        </trans-unit>
        <trans-unit id="32fd72239acefb3982116bef7b1d1aa6ffa6f08f" translate="yes" xml:space="preserve">
          <source>srem</source>
          <target state="translated">srem</target>
        </trans-unit>
        <trans-unit id="75619e4294ea9c6c059b5ef5e6be5f457f10fffb" translate="yes" xml:space="preserve">
          <source>sscan</source>
          <target state="translated">sscan</target>
        </trans-unit>
        <trans-unit id="3fd48287b529384a966df6444259424207d1e92c" translate="yes" xml:space="preserve">
          <source>step count for locating repeating keys</source>
          <target state="translated">반복 키를 찾기위한 걸음 수</target>
        </trans-unit>
        <trans-unit id="6c19df52f4536474beeb594b4c186a34750bfbba" translate="yes" xml:space="preserve">
          <source>strlen</source>
          <target state="translated">strlen</target>
        </trans-unit>
        <trans-unit id="d118e5a3cc15b182d1286373a60c787e58d3166f" translate="yes" xml:space="preserve">
          <source>struct</source>
          <target state="translated">struct</target>
        </trans-unit>
        <trans-unit id="8f42e46f1655c0b42efbc3b0131b2265b3e8faf1" translate="yes" xml:space="preserve">
          <source>struct is a library for packing/unpacking structures within Lua.</source>
          <target state="translated">struct는 Lua 내의 구조체를 패킹 / 언 패킹하기위한 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="b3b4058b20bb871664fe47ba281947938ff04602" translate="yes" xml:space="preserve">
          <source>struct, CJSON and cmsgpack are external libraries, all the other libraries are standard Lua libraries.</source>
          <target state="translated">struct, CJSON 및 cmsgpack은 외부 라이브러리이며 다른 모든 라이브러리는 표준 Lua 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="4c91330c57b1f26f16a92bbcb0653bc2a60a5b88" translate="yes" xml:space="preserve">
          <source>subscribe</source>
          <target state="translated">subscribe</target>
        </trans-unit>
        <trans-unit id="1da3a67d5909f5362da54045b8c32bbbe665177b" translate="yes" xml:space="preserve">
          <source>sunion</source>
          <target state="translated">sunion</target>
        </trans-unit>
        <trans-unit id="9daa335c5dd5dc0f78f78ceeabd4660c4d5cbdb8" translate="yes" xml:space="preserve">
          <source>sunionstore</source>
          <target state="translated">sunionstore</target>
        </trans-unit>
        <trans-unit id="33860ed04b31175b539364820efafd70870afcbf" translate="yes" xml:space="preserve">
          <source>swapdb</source>
          <target state="translated">swapdb</target>
        </trans-unit>
        <trans-unit id="6b387ced110858dcbcda36edb044dc18f91a0894" translate="yes" xml:space="preserve">
          <source>sync</source>
          <target state="translated">sync</target>
        </trans-unit>
        <trans-unit id="3039438ea7284451f5dd37a8079397a483dac870" translate="yes" xml:space="preserve">
          <source>that means, save after 900 seconds if there is at least 1 change to the dataset, and after 300 seconds if there are at least 10 changes to the dataset, should be set using &lt;code&gt;CONFIG SET SAVE &quot;900 1 300 10&quot;&lt;/code&gt;.</source>
          <target state="translated">즉, 데이터 세트에 변경이 1 회 이상있는 경우 900 초 후, 데이터 세트에 10 회 이상 변경 한 경우 300 초 후에는 &lt;code&gt;CONFIG SET SAVE &quot;900 1 300 10&quot;&lt;/code&gt; 을 사용하여 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bcf90dd90b25f395be97e38fa75002e16f185d17" translate="yes" xml:space="preserve">
          <source>that means, save after 900 seconds if there is at least 1 change to the dataset, and after 300 seconds if there are at least 10 changes to the dataset, will be reported by &lt;a href=&quot;config-get&quot;&gt;CONFIG GET&lt;/a&gt; as &quot;900 1 300 10&quot;.</source>
          <target state="translated">즉, 데이터 세트에 1 회 이상 변경이 있으면 900 초 후에 저장하고, 데이터 세트에 10 회 이상 변경이 있으면 300 초 후에는 &lt;a href=&quot;config-get&quot;&gt;CONFIG GET&lt;/a&gt; 에서 &quot;900 1 300 10&quot; 으로보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="b0c386a4240bc38d9a30258724de6b30631d3012" translate="yes" xml:space="preserve">
          <source>the new score of &lt;code&gt;member&lt;/code&gt; (a double precision floating point number), represented as string.</source>
          <target state="translated">문자열로 표시 되는 새 &lt;code&gt;member&lt;/code&gt; 점수 (배정 밀도 부동 소수점 숫자)</target>
        </trans-unit>
        <trans-unit id="714eea0f4c980736bde0065fe73f573487f08e3a" translate="yes" xml:space="preserve">
          <source>time</source>
          <target state="translated">time</target>
        </trans-unit>
        <trans-unit id="f4d1f0193879cba82d65c5752c4ba5cbb43a7188" translate="yes" xml:space="preserve">
          <source>touch</source>
          <target state="translated">touch</target>
        </trans-unit>
        <trans-unit id="2e33266830e76602baef9cc3b70445f3e0fe8b3f" translate="yes" xml:space="preserve">
          <source>ttl</source>
          <target state="translated">ttl</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="5c36d76b02d96d1c5567c6fe9fec05bb7d5fb0c1" translate="yes" xml:space="preserve">
          <source>unix time in seconds.</source>
          <target state="translated">초 단위의 유닉스 시간.</target>
        </trans-unit>
        <trans-unit id="7b91025887687e8951f32135d89cf33a54553e45" translate="yes" xml:space="preserve">
          <source>unlink</source>
          <target state="translated">unlink</target>
        </trans-unit>
        <trans-unit id="fa64642003487da379238275904d5b1add52aba4" translate="yes" xml:space="preserve">
          <source>unsubscribe</source>
          <target state="translated">unsubscribe</target>
        </trans-unit>
        <trans-unit id="f6f282e9efe8a40065c955ff13301becb96131be" translate="yes" xml:space="preserve">
          <source>unwatch</source>
          <target state="translated">unwatch</target>
        </trans-unit>
        <trans-unit id="daaad336276d15594d0e765f96c17cd746bf4971" translate="yes" xml:space="preserve">
          <source>wait</source>
          <target state="translated">wait</target>
        </trans-unit>
        <trans-unit id="292b0901993f7e9d9a0d9b80542f9e59505ba5be" translate="yes" xml:space="preserve">
          <source>watch</source>
          <target state="translated">watch</target>
        </trans-unit>
        <trans-unit id="4253882055f98c453c8ee12d3cb8c5838897b21e" translate="yes" xml:space="preserve">
          <source>xack</source>
          <target state="translated">xack</target>
        </trans-unit>
        <trans-unit id="2931786b110798f58f36fa6b845f13cf55b6d3b5" translate="yes" xml:space="preserve">
          <source>xadd</source>
          <target state="translated">xadd</target>
        </trans-unit>
        <trans-unit id="1e89c5ff91a48f2affffe83da0d30a19bbfa8c6b" translate="yes" xml:space="preserve">
          <source>xclaim</source>
          <target state="translated">xclaim</target>
        </trans-unit>
        <trans-unit id="0b9501a716533c912b9ba332b64abc480410e75d" translate="yes" xml:space="preserve">
          <source>xdel</source>
          <target state="translated">xdel</target>
        </trans-unit>
        <trans-unit id="155c4b396686c8f326bbdccd2ff2791e3b42de46" translate="yes" xml:space="preserve">
          <source>xgroup</source>
          <target state="translated">xgroup</target>
        </trans-unit>
        <trans-unit id="38cd635ccdae095417578ecb60d0dab482d2f671" translate="yes" xml:space="preserve">
          <source>xinfo</source>
          <target state="translated">xinfo</target>
        </trans-unit>
        <trans-unit id="f32b97ff9b948e52cfb974eb02c93a5793ab8cf5" translate="yes" xml:space="preserve">
          <source>xlen</source>
          <target state="translated">xlen</target>
        </trans-unit>
        <trans-unit id="ff72036772c52009350591b848d7c65b667831c2" translate="yes" xml:space="preserve">
          <source>xpending</source>
          <target state="translated">xpending</target>
        </trans-unit>
        <trans-unit id="42813ada5f3e6b9da843c99bba38c8de775d1684" translate="yes" xml:space="preserve">
          <source>xrange</source>
          <target state="translated">xrange</target>
        </trans-unit>
        <trans-unit id="05a5cc7defe678ad32dee9f10871f2abb06c006e" translate="yes" xml:space="preserve">
          <source>xread</source>
          <target state="translated">xread</target>
        </trans-unit>
        <trans-unit id="f9d49063ed9d3e143941358daa98e237eb68dc9d" translate="yes" xml:space="preserve">
          <source>xreadgroup</source>
          <target state="translated">xreadgroup</target>
        </trans-unit>
        <trans-unit id="4551eeab5874f41f194d9573e3f2819df39841a1" translate="yes" xml:space="preserve">
          <source>xrevrange</source>
          <target state="translated">xrevrange</target>
        </trans-unit>
        <trans-unit id="b5a56af11259c9757a0bded2eb5e5bd6d7a163f6" translate="yes" xml:space="preserve">
          <source>xtrim</source>
          <target state="translated">xtrim</target>
        </trans-unit>
        <trans-unit id="efe207c7d10049f17ed67d799efa5cdc3f0d9533" translate="yes" xml:space="preserve">
          <source>zadd</source>
          <target state="translated">zadd</target>
        </trans-unit>
        <trans-unit id="eb2953441f104f4be4468568f332bd8bc94a4d06" translate="yes" xml:space="preserve">
          <source>zcard</source>
          <target state="translated">zcard</target>
        </trans-unit>
        <trans-unit id="94b39677045ff3149e5cf913962dfac515be9d35" translate="yes" xml:space="preserve">
          <source>zcount</source>
          <target state="translated">zcount</target>
        </trans-unit>
        <trans-unit id="23db2ba0a19faa444952f557396cde8368538808" translate="yes" xml:space="preserve">
          <source>zincrby</source>
          <target state="translated">zincrby</target>
        </trans-unit>
        <trans-unit id="8a50cee4017361f3186b3a40dffed064672c4e26" translate="yes" xml:space="preserve">
          <source>zinterstore</source>
          <target state="translated">zinterstore</target>
        </trans-unit>
        <trans-unit id="eeab294aaab0f1aaa588da75665acf2039a1f747" translate="yes" xml:space="preserve">
          <source>zlexcount</source>
          <target state="translated">zlexcount</target>
        </trans-unit>
        <trans-unit id="5f42857b00e83b564f2411e2424fa3a52ab69abf" translate="yes" xml:space="preserve">
          <source>zpopmax</source>
          <target state="translated">zpopmax</target>
        </trans-unit>
        <trans-unit id="b0bf6b20912c6a31fb3ac394cb911a61a2b6ebe9" translate="yes" xml:space="preserve">
          <source>zpopmin</source>
          <target state="translated">zpopmin</target>
        </trans-unit>
        <trans-unit id="9c0992d3de5d72545c2ae338bd60db69dc3d1acc" translate="yes" xml:space="preserve">
          <source>zrange</source>
          <target state="translated">zrange</target>
        </trans-unit>
        <trans-unit id="a63f4842d6c48483ada536f3b666880859a221dc" translate="yes" xml:space="preserve">
          <source>zrangebylex</source>
          <target state="translated">zrangebylex</target>
        </trans-unit>
        <trans-unit id="71fbfa2bd46d14bf4052bc684a293dc11ee9e6be" translate="yes" xml:space="preserve">
          <source>zrangebyscore</source>
          <target state="translated">zrangebyscore</target>
        </trans-unit>
        <trans-unit id="ee334862c1fd4cb175a839fcdef0a45901891689" translate="yes" xml:space="preserve">
          <source>zrank</source>
          <target state="translated">zrank</target>
        </trans-unit>
        <trans-unit id="6b2d900a03e16536dc6e64583cd49da143f1e03b" translate="yes" xml:space="preserve">
          <source>zrem</source>
          <target state="translated">zrem</target>
        </trans-unit>
        <trans-unit id="538b23fc004c2fce40b8ebe31dc627c218ed3d65" translate="yes" xml:space="preserve">
          <source>zremrangebylex</source>
          <target state="translated">zremrangebylex</target>
        </trans-unit>
        <trans-unit id="51cc6a6a37f2558d037b390949132005b2e76f74" translate="yes" xml:space="preserve">
          <source>zremrangebyrank</source>
          <target state="translated">zremrangebyrank</target>
        </trans-unit>
        <trans-unit id="862b6762f29b1735257f614dc46035871c886f45" translate="yes" xml:space="preserve">
          <source>zremrangebyscore</source>
          <target state="translated">zremrangebyscore</target>
        </trans-unit>
        <trans-unit id="cb0c27c8f1c6f98dba433c742758a1b94c998bf5" translate="yes" xml:space="preserve">
          <source>zrevrange</source>
          <target state="translated">zrevrange</target>
        </trans-unit>
        <trans-unit id="a36260f833ca29f6cd6df4c473ce1cbe1b1f0618" translate="yes" xml:space="preserve">
          <source>zrevrangebylex</source>
          <target state="translated">zrevrangebylex</target>
        </trans-unit>
        <trans-unit id="254d23f8fc4dc3f6dae6f2104b203fbe1634a5ab" translate="yes" xml:space="preserve">
          <source>zrevrangebyscore</source>
          <target state="translated">zrevrangebyscore</target>
        </trans-unit>
        <trans-unit id="9868d0a88f2542fa1d2ff72eb6b7b549d2ed08a5" translate="yes" xml:space="preserve">
          <source>zrevrank</source>
          <target state="translated">zrevrank</target>
        </trans-unit>
        <trans-unit id="340e8fb8b070acc7fd7333ec7aea99d0bd5d9a3d" translate="yes" xml:space="preserve">
          <source>zscan</source>
          <target state="translated">zscan</target>
        </trans-unit>
        <trans-unit id="2e2b919b76068f41528e1b3962e2d9f8b2cc8d35" translate="yes" xml:space="preserve">
          <source>zscore</source>
          <target state="translated">zscore</target>
        </trans-unit>
        <trans-unit id="0c0eb378a4b9253415c4fd6ea550625395ab0dcd" translate="yes" xml:space="preserve">
          <source>zunionstore</source>
          <target state="translated">zunionstore</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
