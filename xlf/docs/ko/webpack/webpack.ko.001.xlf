<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="7bb05d7ee20a6c1cefef0b3ccead645eb8b52568" translate="yes" xml:space="preserve">
          <source>&quot;Hey webpack compiler, when you come across a path that resolves to a '.txt' file inside of a &lt;code&gt;require()&lt;/code&gt;/&lt;code&gt;import&lt;/code&gt; statement, &lt;strong&gt;use&lt;/strong&gt; the &lt;code&gt;raw-loader&lt;/code&gt; to transform it before you add it to the bundle.&quot;</source>
          <target state="translated">&quot;이봐 웹팩 컴파일러는 &lt;code&gt;require()&lt;/code&gt; / &lt;code&gt;import&lt;/code&gt; 문에서 '.txt'파일로 해석되는 경로를 발견 할 때 번들에 추가하기 전에 &lt;code&gt;raw-loader&lt;/code&gt; 를 &lt;strong&gt;사용&lt;/strong&gt; 하여 변환하십시오.&quot;</target>
        </trans-unit>
        <trans-unit id="7f860626b139ec296f319e19486e8f3d19ce5252" translate="yes" xml:space="preserve">
          <source>&quot;Raw&quot; Loader</source>
          <target state="translated">&quot;로&quot;로더</target>
        </trans-unit>
        <trans-unit id="db0454432fcf67ee00b8b39ba84820f77da54dcd" translate="yes" xml:space="preserve">
          <source>&amp;copy; JS Foundation and other contributors</source>
          <target state="translated">&amp;copy; JS 재단 및 기타 기고자</target>
        </trans-unit>
        <trans-unit id="ffb741d69b0b20643ee151c779aa4dfe1cd90448" translate="yes" xml:space="preserve">
          <source>&amp;lt;link rel=&amp;rdquo;prefetch/preload&amp;rdquo;&amp;gt; in webpack</source>
          <target state="translated">웹팩의 &amp;lt;link rel =&amp;rdquo;prefetch / preload&amp;rdquo;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="db3115f2d3fdb0d2086235d6d94e6d140eec6f31" translate="yes" xml:space="preserve">
          <source>'Root-relative' URLs</source>
          <target state="translated">'Root-relative' URLs</target>
        </trans-unit>
        <trans-unit id="5a42530deec511f778a481ebaeb7a84754096d7f" translate="yes" xml:space="preserve">
          <source>(1) &lt;code&gt;electron&lt;/code&gt;, &lt;code&gt;worker&lt;/code&gt; and &lt;code&gt;worklet&lt;/code&gt; comes combined with either &lt;code&gt;node&lt;/code&gt; or &lt;code&gt;browser&lt;/code&gt;, depending on the context.</source>
          <target state="translated">(1) &lt;code&gt;electron&lt;/code&gt; , &lt;code&gt;worker&lt;/code&gt; 및 &lt;code&gt;worklet&lt;/code&gt; 은 컨텍스트에 따라 &lt;code&gt;node&lt;/code&gt; 또는 &lt;code&gt;browser&lt;/code&gt; 와 결합됩니다 .</target>
        </trans-unit>
        <trans-unit id="155c57beffe2e6cea927d0c7373e6b4b9c9bb0dc" translate="yes" xml:space="preserve">
          <source>(1) &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; are both set independent of referencing syntax. &lt;code&gt;require&lt;/code&gt; has always lower priority.</source>
          <target state="translated">(1) &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;require&lt;/code&gt; 는 모두 참조 구문과 독립적으로 설정됩니다. &lt;code&gt;require&lt;/code&gt; 는 항상 더 낮은 우선 순위를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="35d43d6dc582e5f7a3415cdaffaeef1797d7b559" translate="yes" xml:space="preserve">
          <source>(1) deprecated in Node.js, &lt;code&gt;*&lt;/code&gt; should be preferred.</source>
          <target state="translated">(1) Node.js에서 더 이상 사용되지 않으며 &lt;code&gt;*&lt;/code&gt; 를 선호해야합니다.</target>
        </trans-unit>
        <trans-unit id="7db9e8aeb906e6c974f3d3284311961e892f47b0" translate="yes" xml:space="preserve">
          <source>(2) &lt;code&gt;&quot;./&quot;&lt;/code&gt; is intentionally ignored as key.</source>
          <target state="translated">(2) &lt;code&gt;&quot;./&quot;&lt;/code&gt; 는 의도적으로 키로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="d65bf9ecf10b77cf27c5d791f2c6adc75a6079c1" translate="yes" xml:space="preserve">
          <source>(2) This is set for browser target environment.</source>
          <target state="translated">(2) 브라우저 대상 환경에 대해 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1df571eb0a87a45c64342d2c862a55f2b4ff39b1" translate="yes" xml:space="preserve">
          <source>(3) The property value is ignored and property key is used as target. Effectively only allowing mappings with key and value are identical.</source>
          <target state="translated">(3) 속성 값은 무시되고 속성 키가 대상으로 사용됩니다. 키와 값이 동일한 매핑 만 효과적으로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="7cab3621d00cfdccb864840094ca1869b44373f3" translate="yes" xml:space="preserve">
          <source>(4) The syntax is supported, but always the first entry is used, which makes it unusable for any practical use case.</source>
          <target state="translated">(4) 구문이 지원되지만 항상 첫 번째 항목이 사용되므로 실제 사용 사례에 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ffed151df1c8d3aa089da3ee213502a98357ee53" translate="yes" xml:space="preserve">
          <source>(5) Fallback to alternative sibling parent conditions is handling incorrectly.</source>
          <target state="translated">(5) 대체 형제 부모 조건으로의 대체가 잘못 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="c4510f2eb485ade85024bc1bba38dc8b04374ba0" translate="yes" xml:space="preserve">
          <source>(6) For the &lt;code&gt;require&lt;/code&gt; condition object order is handled incorrectly. This is intentionally as wmr doesn't differ between referencing syntax.</source>
          <target state="translated">(6) &lt;code&gt;require&lt;/code&gt; 조건의 경우 개체 순서가 잘못 처리됩니다. 이것은 의도적으로 wmr이 참조 구문간에 다르지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="912f96714dcf7e2d5459cb9cc7f5896fe1efcb50" translate="yes" xml:space="preserve">
          <source>(7) When using &lt;code&gt;&quot;exports&quot;: &quot;./file.js&quot;&lt;/code&gt; abbreviation, any request e. g. &lt;code&gt;package/not-existing&lt;/code&gt; will resolve to that. When not using the abbreviation, direct file access e. g. &lt;code&gt;package/file.js&lt;/code&gt; will not lead to an error.</source>
          <target state="translated">(7) &lt;code&gt;&quot;exports&quot;: &quot;./file.js&quot;&lt;/code&gt; 약어를 사용할 때 &lt;code&gt;package/not-existing&lt;/code&gt; 모든 요청 은이를 해결합니다. 약어를 사용하지 않는 경우 직접 파일 액세스 (예 : &lt;code&gt;package/file.js&lt;/code&gt; ) 는 오류로 이어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7e3550cac5d8175ae22a407324a9418b3751380a" translate="yes" xml:space="preserve">
          <source>(Loaders options left out for clarity, adapt accordingly to your needs.)</source>
          <target state="translated">(명확성을 위해 생략 된 로더 옵션은 필요에 따라 조정하십시오.)</target>
        </trans-unit>
        <trans-unit id="ad976f33858c56765e6b244f53a720c534ca0e7f" translate="yes" xml:space="preserve">
          <source>(Recommended). The plugin may emit messages in &lt;code&gt;result.messages&lt;/code&gt;.</source>
          <target state="translated">(Recommended). The plugin may emit messages in &lt;code&gt;result.messages&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c6b183d348f955357b33a3fba45083e98ab8125" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(none)</target>
        </trans-unit>
        <trans-unit id="61dd263ede1adab233628e0671fed0ca330c935b" translate="yes" xml:space="preserve">
          <source>(only combined with &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt;)</source>
          <target state="translated">(only combined with &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="b84da6d40abc1f06bf25fb9e2240531ded3dac3a" translate="yes" xml:space="preserve">
          <source>++</source>
          <target state="translated">++</target>
        </trans-unit>
        <trans-unit id="86c3ea5ab6f1797abaf2328d1855b266cbb1c869" translate="yes" xml:space="preserve">
          <source>+++</source>
          <target state="translated">+++</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="e6a9fc04320a924f46c7c737432bb0389d9dd095" translate="yes" xml:space="preserve">
          <source>--</source>
          <target state="translated">--</target>
        </trans-unit>
        <trans-unit id="dd387504ef20516c937a463491eb5028b76ad4af" translate="yes" xml:space="preserve">
          <source>--no-color</source>
          <target state="translated">--no-color</target>
        </trans-unit>
        <trans-unit id="f8709ae8ac2f42bae497e637497dceefd5124505" translate="yes" xml:space="preserve">
          <source>--no-hot</source>
          <target state="translated">--no-hot</target>
        </trans-unit>
        <trans-unit id="70ae65db8456c24c60f9494305deb0a662d68ec5" translate="yes" xml:space="preserve">
          <source>--no-stats</source>
          <target state="translated">--no-stats</target>
        </trans-unit>
        <trans-unit id="5261014df3d421f1bc985b781d416aa946ed61e3" translate="yes" xml:space="preserve">
          <source>--resolve-alias jquery-plugin=jquery.plugin</source>
          <target state="translated">--resolve-alias jquery-plugin = jquery.plugin</target>
        </trans-unit>
        <trans-unit id="0804cc8c5bd8a87d00a6d6f957a7a51e3df1abc5" translate="yes" xml:space="preserve">
          <source>--resolve-extensions .es6 .js .ts</source>
          <target state="translated">--resolve-extensions .es6 .js .ts</target>
        </trans-unit>
        <trans-unit id="d5537351313df4188977a7d2a773daedb94d0b26" translate="yes" xml:space="preserve">
          <source>-d</source>
          <target state="translated">-d</target>
        </trans-unit>
        <trans-unit id="f768616ef823e7864962e05cfb8231fce774193d" translate="yes" xml:space="preserve">
          <source>-p</source>
          <target state="translated">-p</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="d0a1e2ac81eb4e29255d2a38cdaf4ad96c8858ea" translate="yes" xml:space="preserve">
          <source>... we can see that all three have. This is because each &lt;a href=&quot;../api/module-variables#module-id-commonjs-&quot;&gt;&lt;code&gt;module.id&lt;/code&gt;&lt;/a&gt; is incremented based on resolving order by default. Meaning when the order of resolving is changed, the IDs will be changed as well. So, to recap:</source>
          <target state="translated">... 우리는 세 가지 모두를 가지고 있음을 알 수 있습니다. 기본적으로 해결 순서에 따라 각 &lt;a href=&quot;../api/module-variables#module-id-commonjs-&quot;&gt; &lt;code&gt;module.id&lt;/code&gt; &lt;/a&gt; 가 증가 하기 때문 입니다. 해결 순서가 변경되면 ID도 변경됩니다. 요약하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="941f9235edb56638128c1955a58938dded4560b8" translate="yes" xml:space="preserve">
          <source>... we can see that all three have. This is because each &lt;a href=&quot;../api/module-variables#moduleid-commonjs&quot;&gt;&lt;code&gt;module.id&lt;/code&gt;&lt;/a&gt; is incremented based on resolving order by default. Meaning when the order of resolving is changed, the IDs will be changed as well. So, to recap:</source>
          <target state="translated">... we can see that all three have. This is because each &lt;a href=&quot;../api/module-variables#moduleid-commonjs&quot;&gt; &lt;code&gt;module.id&lt;/code&gt; &lt;/a&gt; is incremented based on resolving order by default. Meaning when the order of resolving is changed, the IDs will be changed as well. So, to recap:</target>
        </trans-unit>
        <trans-unit id="b4c1ef5aa45202042f5a97bd617e44888bf5b62b" translate="yes" xml:space="preserve">
          <source>...to have something that will not only let us write modules but also support any module format (at least until we get to ESM) and handle resources and assets at the same time?</source>
          <target state="translated">...to have something that will not only let us write modules but also support any module format (at least until we get to ESM) and handle resources and assets at the same time?</target>
        </trans-unit>
        <trans-unit id="9d52b92dc2a57290e8448c7137edcfa7daee2779" translate="yes" xml:space="preserve">
          <source>...which means &quot;any require statement matching &lt;code&gt;'./locale'&lt;/code&gt; from any directories ending with &lt;code&gt;'moment'&lt;/code&gt; will be ignored.</source>
          <target state="translated">... &lt;code&gt;'moment'&lt;/code&gt; 로 끝나는 디렉토리에서 &lt;code&gt;'./locale'&lt;/code&gt; 과 일치하는 모든 명령문 이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae8d8b0660792a09f1e3209ff7707a65cabcdbc9" translate="yes" xml:space="preserve">
          <source>...your first regexp must match that &lt;code&gt;'./locale/'&lt;/code&gt; string. The second &lt;code&gt;contextRegExp&lt;/code&gt; parameter is then used to select specific directories from where the import took place. The following will cause those locale files to be ignored:</source>
          <target state="translated">... 첫 번째 정규 표현식은 해당 &lt;code&gt;'./locale/'&lt;/code&gt; 문자열 과 일치해야 합니다. 그런 다음 두 번째 &lt;code&gt;contextRegExp&lt;/code&gt; 매개 변수는 가져 오기가 발생한 특정 디렉토리를 선택하는 데 사용됩니다. 다음은 해당 로케일 파일이 무시되도록합니다.</target>
        </trans-unit>
        <trans-unit id="1e835b7212a0acc496ccb0b14bab58f8077d82b3" translate="yes" xml:space="preserve">
          <source>./colors.json</source>
          <target state="translated">./colors.json</target>
        </trans-unit>
        <trans-unit id="6dc390c6abe7d38b170d7554a35b11cacddfc2e6" translate="yes" xml:space="preserve">
          <source>./de-de.colors.json</source>
          <target state="translated">./de-de.colors.json</target>
        </trans-unit>
        <trans-unit id="42099b4af021e53fd8fd4e056c2568d7c2e3ffa8" translate="yes" xml:space="preserve">
          <source>/</source>
          <target state="translated">/</target>
        </trans-unit>
        <trans-unit id="264c4522d846d7fed4f171645ce4610b00166766" translate="yes" xml:space="preserve">
          <source>:heavy_check_mark:</source>
          <target state="translated">:heavy_check_mark:</target>
        </trans-unit>
        <trans-unit id="577615a4c49147a7f35b0693b2c4dba2723efbdd" translate="yes" xml:space="preserve">
          <source>:heavy_multiplication_x:</source>
          <target state="translated">:heavy_multiplication_x:</target>
        </trans-unit>
        <trans-unit id="0d7b1f31576be399cdc30628e8acc38af16b6ecc" translate="yes" xml:space="preserve">
          <source>:information_source: Source maps and assets referenced with &lt;code&gt;url&lt;/code&gt;: when style loader is used with &lt;code&gt;{ options: { sourceMap: true } }&lt;/code&gt; option, the CSS modules will be generated as &lt;code&gt;Blob&lt;/code&gt;s, so relative paths don't work (they would be relative to &lt;code&gt;chrome:blob&lt;/code&gt; or &lt;code&gt;chrome:devtools&lt;/code&gt;). In order for assets to maintain correct paths setting &lt;code&gt;output.publicPath&lt;/code&gt; property of webpack configuration must be set, so that absolute paths are generated. Alternatively you can enable the &lt;code&gt;convertToAbsoluteUrls&lt;/code&gt; option mentioned above.</source>
          <target state="translated">: information_source : &lt;code&gt;url&lt;/code&gt; 로 참조 된 소스 맵 및 자산 : : 스타일 로더가 &lt;code&gt;{ options: { sourceMap: true } }&lt;/code&gt; 옵션과 함께 사용되면 CSS 모듈이 &lt;code&gt;Blob&lt;/code&gt; 으로 생성 되므로 상대 경로가 작동하지 않습니다 (상대적 일 수 있음) 에 &lt;code&gt;chrome:blob&lt;/code&gt; 또는 &lt;code&gt;chrome:devtools&lt;/code&gt; ). 자산이 올바른 경로 설정을 유지 하도록하려면 절대 경로가 생성되도록 webpack 구성의 &lt;code&gt;output.publicPath&lt;/code&gt; 속성을 설정해야합니다. 또는 위에서 언급 한 &lt;code&gt;convertToAbsoluteUrls&lt;/code&gt; 옵션을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="464b666700a1606ecdbfed0b4d25868a9d6dc0dc" translate="yes" xml:space="preserve">
          <source>:warning: &lt;a href=&quot;https://github.com/csstools/postcss-preset-env&quot;&gt;&lt;code&gt;postcss-preset-env&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;&lt;code&gt;autoprefixer&lt;/code&gt;&lt;/a&gt;, so adding it separately is not necessary if you already use the preset.</source>
          <target state="translated">: warning : &lt;a href=&quot;https://github.com/csstools/postcss-preset-env&quot;&gt; &lt;code&gt;postcss-preset-env&lt;/code&gt; &lt;/a&gt; 에는 &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt; &lt;code&gt;autoprefixer&lt;/code&gt; 가&lt;/a&gt; 포함되어 있으므로 이미 사전 설정을 사용하는 경우 별도로 추가 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0057fa4b59e3039f104cee4870ecd836e2b06bf7" translate="yes" xml:space="preserve">
          <source>:warning: &lt;a href=&quot;https://github.com/csstools/postcss-preset-env&quot;&gt;&lt;code&gt;postcss-preset-env&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;&lt;code&gt;autoprefixer&lt;/code&gt;&lt;/a&gt;, so adding it separately is not necessary if you already use the preset. More &lt;a href=&quot;https://github.com/csstools/postcss-preset-env#autoprefixer&quot;&gt;information&lt;/a&gt;</source>
          <target state="translated">:warning: &lt;a href=&quot;https://github.com/csstools/postcss-preset-env&quot;&gt; &lt;code&gt;postcss-preset-env&lt;/code&gt; &lt;/a&gt; includes &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt; &lt;code&gt;autoprefixer&lt;/code&gt; &lt;/a&gt;, so adding it separately is not necessary if you already use the preset. More &lt;a href=&quot;https://github.com/csstools/postcss-preset-env#autoprefixer&quot;&gt;information&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee6793b1aa0618d36dcedad4603334699fe21d9e" translate="yes" xml:space="preserve">
          <source>:warning: &lt;code&gt;-attributes&lt;/code&gt; sets &lt;code&gt;attributes: false&lt;/code&gt;.</source>
          <target state="translated">:warning: &lt;code&gt;-attributes&lt;/code&gt; sets &lt;code&gt;attributes: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be307fac62e409b693f0c839ab98eee881a43799" translate="yes" xml:space="preserve">
          <source>:warning: &lt;code&gt;ExtractTextPlugin&lt;/code&gt; generates a file &lt;strong&gt;per entry&lt;/strong&gt;, so you must use &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt; or &lt;code&gt;[contenthash]&lt;/code&gt; when using multiple entries.</source>
          <target state="translated">: warning : &lt;code&gt;ExtractTextPlugin&lt;/code&gt; &lt;strong&gt;은 항목 당&lt;/strong&gt; 파일을 생성 하므로 여러 항목을 사용할 때 &lt;code&gt;[name]&lt;/code&gt; , &lt;code&gt;[id]&lt;/code&gt; 또는 &lt;code&gt;[contenthash]&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="78fe44e3bef9c13d1391256274032011ecef3738" translate="yes" xml:space="preserve">
          <source>:warning: Behavior is undefined when &lt;code&gt;unuse&lt;/code&gt;/&lt;code&gt;unref&lt;/code&gt; is called more often than &lt;code&gt;use&lt;/code&gt;/&lt;code&gt;ref&lt;/code&gt;. Don't do that.</source>
          <target state="translated">경고 : 때 행동이 정의되지 &lt;code&gt;unuse&lt;/code&gt; / &lt;code&gt;unref&lt;/code&gt; 이 보다 더 자주 불린다 &lt;code&gt;use&lt;/code&gt; / &lt;code&gt;ref&lt;/code&gt; . 하지마</target>
        </trans-unit>
        <trans-unit id="e94493787adfb9ff98f06a109c74e8a5f9817c68" translate="yes" xml:space="preserve">
          <source>:warning: Doesn't work in NodeJS</source>
          <target state="translated">: 경고 : NodeJS에서 작동하지 않습니다</target>
        </trans-unit>
        <trans-unit id="43efa7c5e46d3bd06bd2ee328cb48dd54fe0c477" translate="yes" xml:space="preserve">
          <source>:warning: For webpack v1, see &lt;a href=&quot;https://github.com/webpack/extract-text-webpack-plugin/blob/webpack-1/README.md&quot;&gt;the README in the webpack-1 branch&lt;/a&gt;.</source>
          <target state="translated">: 경고 : webpack v1의 &lt;a href=&quot;https://github.com/webpack/extract-text-webpack-plugin/blob/webpack-1/README.md&quot;&gt;경우 webpack-1 브랜치의 README를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="acf67e65c7cacdc688d3145c921806e347553fc8" translate="yes" xml:space="preserve">
          <source>:warning: If you are using Babel you need to do the following in order for the setup to work</source>
          <target state="translated">: 경고 : Babel을 사용하는 경우 설정이 작동하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="5edb940c189d2e2c14006c1f29209aca2d18c365" translate="yes" xml:space="preserve">
          <source>:warning: Since webpack v4 the &lt;code&gt;extract-text-webpack-plugin&lt;/code&gt; should not be used for css. Use &lt;a href=&quot;mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; instead.</source>
          <target state="translated">: 경고 : webpack v4부터 &lt;code&gt;extract-text-webpack-plugin&lt;/code&gt; 을 CSS에 사용해서는 안됩니다. 대신 &lt;a href=&quot;mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin을&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="685a7f1368d3bca35cd1d7166ededed3acd9f566" translate="yes" xml:space="preserve">
          <source>:warning: chunks created by the loader will be named according to the &lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; rule, which defaults to &lt;code&gt;[id].[name]&lt;/code&gt;. Here &lt;code&gt;[name]&lt;/code&gt; corresponds to the chunk name set in the &lt;code&gt;name&lt;/code&gt; options parameter.</source>
          <target state="translated">: warning : 로더에 의해 생성 된 청크는 &lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt; &lt;code&gt;output.chunkFilename&lt;/code&gt; &lt;/a&gt; 규칙 에 따라 이름이 지정 되며 기본값은 &lt;code&gt;[id].[name]&lt;/code&gt; 입니다. 여기서 &lt;code&gt;[name]&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; options 매개 변수에 설정된 청크 이름에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="825e8dbe2115d276ea12ed480896f38abf3a2135" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cli&quot;&gt;CLI&lt;/a&gt;: Specify them within a shell command.</source>
          <target state="translated">&lt;a href=&quot;#cli&quot;&gt;CLI&lt;/a&gt; : 쉘 명령 내에서 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="67ce247d8111ebe5a7257b9de641f9462a6872ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#configuration&quot;&gt;Configuration&lt;/a&gt; (recommended): Specify them in your &lt;strong&gt;webpack.config.js&lt;/strong&gt; file.</source>
          <target state="translated">&lt;a href=&quot;#configuration&quot;&gt;구성&lt;/a&gt; (권장) : &lt;strong&gt;webpack.config.js&lt;/strong&gt; 파일 에서 지정 하십시오.</target>
        </trans-unit>
        <trans-unit id="73264e224eb2ad575f26dfde1aa629ea764a72c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#devserverwatchoptions-&quot;&gt;&lt;code&gt;watchOptions&lt;/code&gt;&lt;/a&gt; will have no effect when used with &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;#devserverwatchoptions-&quot;&gt; &lt;code&gt;watchOptions&lt;/code&gt; &lt;/a&gt; will have no effect when used with &lt;strong&gt;lazy mode&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="81d793a42a79e3652e8242f326fe89a0c8802703" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inline&quot;&gt;Inline&lt;/a&gt;: Specify them explicitly in each &lt;code&gt;import&lt;/code&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;#inline&quot;&gt;인라인&lt;/a&gt; : 각 &lt;code&gt;import&lt;/code&gt; 문에 명시 적으로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d5d6c5fd30a87eb1777cc69533d4adbad2cbe87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../concepts/loaders&quot;&gt;Usage&lt;/a&gt;&lt;a&gt;Usage&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#usage&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../concepts/loaders&quot;&gt;사용법 &lt;/a&gt;&lt;a&gt;사용법&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# usage &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="715de71e1b82d0f0a38d8aa2945f2f59705d777e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/module#module-rules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; allows you to specify several loaders within your webpack configuration. This is a concise way to display loaders, and helps to maintain clean code. It also offers you a full overview of each respective loader.</source>
          <target state="translated">&lt;a href=&quot;../configuration/module#module-rules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; 를&lt;/a&gt; 사용하면 웹팩 구성 내에 여러 로더를 지정할 수 있습니다. 로더를 표시하는 간결한 방법이며 깨끗한 코드를 유지하는 데 도움이됩니다. 또한 각 로더에 대한 전체 개요를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1f82b391c492ff36e97a28c53fdae578035e1f2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; allows you to specify several loaders within your webpack configuration. This is a concise way to display loaders, and helps to maintain clean code. It also offers you a full overview of each respective loader.</source>
          <target state="translated">&lt;a href=&quot;../configuration/module#modulerules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; &lt;/a&gt; allows you to specify several loaders within your webpack configuration. This is a concise way to display loaders, and helps to maintain clean code. It also offers you a full overview of each respective loader.</target>
        </trans-unit>
        <trans-unit id="9f2d1ac0594213142e32a551dfa67a70764bc8ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/output#outputchunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; - for &lt;code&gt;non-initial&lt;/code&gt; chunk files</source>
          <target state="translated">&lt;a href=&quot;../configuration/output#outputchunkfilename&quot;&gt; &lt;code&gt;output.chunkFilename&lt;/code&gt; &lt;/a&gt; - for &lt;code&gt;non-initial&lt;/code&gt; chunk files</target>
        </trans-unit>
        <trans-unit id="1c1bc05b2bf96744999d49e273b2a45f72b35b18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; - for &lt;code&gt;initial&lt;/code&gt; chunk files</source>
          <target state="translated">&lt;a href=&quot;../configuration/output#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; - for &lt;code&gt;initial&lt;/code&gt; chunk files</target>
        </trans-unit>
        <trans-unit id="2148a4526e4817d33935bcf508c6bb4b3db0ab0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/bundle-loader&quot;&gt;&lt;code&gt;bundle-loader&lt;/code&gt;&lt;/a&gt;: Used to split code and lazy load the resulting bundles.</source>
          <target state="translated">&lt;a href=&quot;../loaders/bundle-loader&quot;&gt; &lt;code&gt;bundle-loader&lt;/code&gt; &lt;/a&gt; : 코드를 분할하고 결과 번들을 지연로드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d3938acecafabab920ffa0cbb9e877e57ff207a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/file-loader&quot;&gt;&lt;code&gt;file-loader&lt;/code&gt;&lt;/a&gt; to emit a file into the output directory</source>
          <target state="translated">&lt;a href=&quot;../loaders/file-loader&quot;&gt; &lt;code&gt;file-loader&lt;/code&gt; &lt;/a&gt; to emit a file into the output directory</target>
        </trans-unit>
        <trans-unit id="4c63e6f4673d0f3491c0692adbcc03c6e7675df1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/raw-loader&quot;&gt;&lt;code&gt;raw-loader&lt;/code&gt;&lt;/a&gt; to import a file as a string</source>
          <target state="translated">&lt;a href=&quot;../loaders/raw-loader&quot;&gt; &lt;code&gt;raw-loader&lt;/code&gt; &lt;/a&gt; to import a file as a string</target>
        </trans-unit>
        <trans-unit id="9adcf3673d4f592b3f70b186023a68ad79cf8da7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/url-loader&quot;&gt;&lt;code&gt;url-loader&lt;/code&gt;&lt;/a&gt; to inline a file into the bundle as a data URI</source>
          <target state="translated">&lt;a href=&quot;../loaders/url-loader&quot;&gt; &lt;code&gt;url-loader&lt;/code&gt; &lt;/a&gt; to inline a file into the bundle as a data URI</target>
        </trans-unit>
        <trans-unit id="deb7c4c81843bd736e62fbcf123dbc265d9a8440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; (more complex, but works in all use-cases)</source>
          <target state="translated">&lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; (더 복잡하지만 모든 사용 사례에서 작동)</target>
        </trans-unit>
        <trans-unit id="25e37d5e9101f30b64071c9d5d3d5e19ab779c19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;mini-css-extract-plugin&lt;/code&gt;&lt;/a&gt;: Useful for splitting CSS out from the main application.</source>
          <target state="translated">&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; &lt;/a&gt; : 기본 응용 프로그램에서 CSS를 분리하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3afec9357248b4bb2ba6fd11fc209763ebb181ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; (more complex, but works in all use-cases)</source>
          <target state="translated">&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; (더 복잡하지만 모든 사용 사례에서 작동)</target>
        </trans-unit>
        <trans-unit id="7c9f1a0f45a01b15557e22e208dce14fadfc97e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; (use this, when using webpack 4 configuration. Works in all use-cases)</source>
          <target state="translated">&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; (use this, when using webpack 4 configuration. Works in all use-cases)</target>
        </trans-unit>
        <trans-unit id="d2734b503b72dcebd5ac6f35b77bc406bfc3cfcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;&lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt;&lt;/a&gt; is needed for the tree shaking to work. It is added by &lt;code&gt;mode: 'production'&lt;/code&gt;. If you are not using it, remember to add the &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;&lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt;&lt;/a&gt; manually.</source>
          <target state="translated">&lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt; &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; &lt;/a&gt; is needed for the tree shaking to work. It is added by &lt;code&gt;mode: 'production'&lt;/code&gt; . If you are not using it, remember to add the &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt; &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; &lt;/a&gt; manually.</target>
        </trans-unit>
        <trans-unit id="05c1e3f3a0d1441fe3c61304406072ce64f9be0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;ModuleConcatenationPlugin&lt;/a&gt; is needed for the tree shaking to work. It is added by &lt;code&gt;mode: &quot;production&quot;&lt;/code&gt;. If you are not using it, remember to add the &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;ModuleConcatenationPlugin&lt;/a&gt; manually.</source>
          <target state="translated">&lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;&lt;/a&gt;나무 흔들림이 작동하려면 ModuleConcatenationPlugin 이 필요합니다. &lt;code&gt;mode: &quot;production&quot;&lt;/code&gt; 로 추가됩니다 . 사용하지 않는 경우 &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;ModuleConcatenationPlugin을&lt;/a&gt; 수동으로 추가 해야합니다.</target>
        </trans-unit>
        <trans-unit id="e18eb076f40a648696d6bd3cd309bb42ba51d4a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;UglifyJsPlugin&lt;/a&gt; &amp;amp; &lt;a href=&quot;../plugins/loader-options-plugin&quot;&gt;LoaderOptionsPlugin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;UglifyJsPlugin&lt;/a&gt; &amp;amp; &lt;a href=&quot;../plugins/loader-options-plugin&quot;&gt;LoaderOptionsPlugin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="daba29b182a0d14a8184be43c71f7a1feabfc66d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-loader&quot;&gt;&lt;code&gt;babel-loader&lt;/code&gt;&lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;babel-loader&quot;&gt; &lt;code&gt;babel-loader&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt; Babel을&lt;/a&gt; 사용하여 ES2015 + 코드를로드하고 ES5로 변환</target>
        </trans-unit>
        <trans-unit id="6a1646dc9f8649a9fa1f600c4cc29268ba1bc83f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;coffee-loader&quot;&gt;&lt;code&gt;coffee-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; like JavaScript</source>
          <target state="translated">&lt;a href=&quot;coffee-loader&quot;&gt; &lt;code&gt;coffee-loader&lt;/code&gt; &lt;/a&gt; 는 JavaScript와 같은&lt;a href=&quot;http://coffeescript.org/&quot;&gt; CoffeeScript를&lt;/a&gt; 로드합니다</target>
        </trans-unit>
        <trans-unit id="c4ffac3e8cf062fd36e1d2592e4b716f883b73b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;coverjs-loader&quot;&gt;&lt;code&gt;coverjs-loader&lt;/code&gt;&lt;/a&gt; PreLoader to determine the testing coverage using &lt;a href=&quot;https://github.com/arian/CoverJS&quot;&gt;CoverJS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;coverjs-loader&quot;&gt; &lt;code&gt;coverjs-loader&lt;/code&gt; &lt;/a&gt; 를 사용하여 테스트 적용 범위를 결정하는 coverjs-loader&lt;a href=&quot;https://github.com/arian/CoverJS&quot;&gt; PreLoader&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5f1fa5500702b18f78b56fdbec661b87cc53194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; Loads CSS file with resolved imports and returns CSS code</source>
          <target state="translated">&lt;a href=&quot;css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; &lt;/a&gt; 가져온 가져 오기로 CSS 파일을로드하고 CSS 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5b83a7f435984c565dd14a4ee19ee29c588d7e1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;externals#externalstype&quot;&gt;Default type&lt;/a&gt; will be used if you specify &lt;code&gt;externals&lt;/code&gt; without a type e.g. &lt;code&gt;externals: { react: 'react' }&lt;/code&gt; instead of &lt;code&gt;externals: { react: 'commonjs-module react' }&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;externals#externalstype&quot;&gt;Default type&lt;/a&gt; will be used if you specify &lt;code&gt;externals&lt;/code&gt; without a type e.g. &lt;code&gt;externals: { react: 'react' }&lt;/code&gt; instead of &lt;code&gt;externals: { react: 'commonjs-module react' }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9129942e1653977fac3de734f8315dd62c35f72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file-loader&quot;&gt;&lt;code&gt;file-loader&lt;/code&gt;&lt;/a&gt; Emits the file into the output folder and returns the (relative) URL</source>
          <target state="translated">&lt;a href=&quot;file-loader&quot;&gt; &lt;code&gt;file-loader&lt;/code&gt; &lt;/a&gt; 파일을 출력 폴더로 내보내고 (상대) URL을 반환합니다</target>
        </trans-unit>
        <trans-unit id="77c5ca750b87c23ca35398c6cfa0a2b8e1eb9f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html-loader&quot;&gt;&lt;code&gt;html-loader&lt;/code&gt;&lt;/a&gt; Exports HTML as string, require references to static resources</source>
          <target state="translated">&lt;a href=&quot;html-loader&quot;&gt; &lt;code&gt;html-loader&lt;/code&gt; &lt;/a&gt; HTML을 문자열로 내보내고 정적 리소스에 대한 참조가 필요합니다</target>
        </trans-unit>
        <trans-unit id="e56a2634465846ed3062e4cb3ce8bd242ffc96aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://coffeescript.org/#literate&quot;&gt;&lt;code&gt;Literate&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;Literate&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#literate&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;http://coffeescript.org/#literate&quot;&gt; &lt;code&gt;Literate&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;Literate&lt;/code&gt; &lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# literate &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5a14918d312b4c28f680d14cb1a406515332c3ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://coffeescript.org/#transpilation&quot;&gt;&lt;code&gt;Transpile&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;Transpile&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#transpile&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;http://coffeescript.org/#transpilation&quot;&gt; &lt;code&gt;Transpile&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;Transpile&lt;/code&gt; &lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# transpile &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8b1aa32f1794377d2fe3bd76612bff9d56525c0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://alexkuz.github.io/webpack-chart/&quot;&gt;webpack-chart&lt;/a&gt;: Interactive pie chart for webpack stats.</source>
          <target state="translated">&lt;a href=&quot;https://alexkuz.github.io/webpack-chart/&quot;&gt;webpack-chart&lt;/a&gt; : 웹팩 통계를위한 대화식 원형 차트.</target>
        </trans-unit>
        <trans-unit id="62cdb2314d4248138e5d1d2f32295f705e4381a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;: Visualize and analyze your bundles to see which modules are taking up space and which might be duplicates.</source>
          <target state="translated">&lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt; : 번들을 시각화하고 분석하여 공간을 차지하는 모듈과 중복 될 수있는 모듈을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="535a26a69134e475dfc35b8757a5bf599f5ad461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://couto.mit-license.org/&quot;&gt;License&lt;/a&gt;&lt;a&gt;License&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#license&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://couto.mit-license.org/&quot;&gt;라이센스 &lt;/a&gt;&lt;a&gt;라이센스&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# license &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3582ad0013ce1cc37b6e6c31a2ca9dcf12604258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://createapp.dev/webpack&quot;&gt;createapp.dev - create a webpack configuration in your browser&lt;/a&gt; is an online tool for creating custom webpack configuration. It allows you to select various features that will be combined and added to resulting configuration file. Also, it generates an example project based on provided webpack configuration that you can review in your browser and download.</source>
          <target state="translated">&lt;a href=&quot;https://createapp.dev/webpack&quot;&gt;createapp.dev - create a webpack configuration in your browser&lt;/a&gt; is an online tool for creating custom webpack configuration. It allows you to select various features that will be combined and added to resulting configuration file. Also, it generates an example project based on provided webpack configuration that you can review in your browser and download.</target>
        </trans-unit>
        <trans-unit id="4cac55337e3acdcd28c27a788765a3faa810667e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;&lt;code&gt;WebWorkers&lt;/code&gt;&lt;/a&gt; are restricted by a &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;, so if your &lt;code&gt;webpack&lt;/code&gt; assets are not being served from the same origin as your application, their download may be blocked by your browser. This scenario can commonly occur if you are hosting your assets under a CDN domain. Even downloads from the &lt;code&gt;webpack-dev-server&lt;/code&gt; could be blocked.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt; &lt;code&gt;WebWorkers&lt;/code&gt; &lt;/a&gt; are restricted by a &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;, so if your &lt;code&gt;webpack&lt;/code&gt; assets are not being served from the same origin as your application, their download may be blocked by your browser. This scenario can commonly occur if you are hosting your assets under a CDN domain. Even downloads from the &lt;code&gt;webpack-dev-server&lt;/code&gt; could be blocked.</target>
        </trans-unit>
        <trans-unit id="e4753dd94b2dcee9b3023bcd4619fab7928e2235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;&lt;code&gt;WebWorkers&lt;/code&gt;&lt;/a&gt; are restricted by a &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;, so if your &lt;code&gt;webpack&lt;/code&gt; assets are not being served from the same origin as your application, their download may be blocked by your browser. This scenario can commonly occur if you are hosting your assets under a CDN domain. Even downloads from the &lt;code&gt;webpack-dev-server&lt;/code&gt; could be blocked. There are two workarounds:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt; &lt;code&gt;WebWorkers&lt;/code&gt; &lt;/a&gt; 는&lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt; 동일한 출처 정책에&lt;/a&gt; 의해 제한되므로 &lt;code&gt;webpack&lt;/code&gt; 자산이 애플리케이션과 동일한 출처에서 제공되지 않는경우브라우저에서 다운로드를 차단할 수 있습니다. 이 시나리오는 일반적으로 CDN 도메인에서 자산을 호스팅하는 경우에 발생할 수 있습니다. &lt;code&gt;webpack-dev-server&lt;/code&gt; 에서의 다운로드조차차단 될 수 있습니다. 두 가지 해결 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2977795a0ee6d5dd09df030c9a47da1838e7dc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developers.google.com/closure/compiler/&quot;&gt;Closure-Compiler&lt;/a&gt; is a full optimizing compiler and transpiler. It offers unmatched optimizations, provides type checking and can easily target transpilation to different versions of ECMASCRIPT.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/closure/compiler/&quot;&gt;Closure-Compiler&lt;/a&gt; 는 완전 최적화 컴파일러 및 트랜스 파일러입니다. 탁월한 최적화 기능을 제공하고, 유형 검사 기능을 제공하며, 다른 버전의 ECMASCRIPT에 대한 트랜스 필 레이션을 쉽게 타겟팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe9d24b23646b86f08ce34c3633c956dd61396f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developers.google.com/closure/library/&quot;&gt;Closure-Library&lt;/a&gt; is a utility library designed for full compatibility with Closure-Compiler.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/closure/library/&quot;&gt;Closure-Library&lt;/a&gt; 는 Closure-Compiler와 완벽하게 호환되도록 설계된 유틸리티 라이브러리입니다.</target>
        </trans-unit>
        <trans-unit id="9c0b9a88c6a70bf2b97da8273f2a41d7cbac3b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt; is a compression algorithm originally developed by Google, and offers compression superior to gzip.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt; is a compression algorithm originally developed by Google, and offers compression superior to gzip.</target>
        </trans-unit>
        <trans-unit id="171c30b17a52db10b2a1f7f2c4557b9515a3045e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Lossless_compression&quot;&gt;Lossless&lt;/a&gt; (without loss of quality).</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Lossless_compression&quot;&gt;Lossless&lt;/a&gt; (without loss of quality).</target>
        </trans-unit>
        <trans-unit id="756b7d5e750540240afa3063199e88de125904d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Lossy_compression&quot;&gt;Lossy&lt;/a&gt; (with loss of quality).</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Lossy_compression&quot;&gt;Lossy&lt;/a&gt; (with loss of quality).</target>
        </trans-unit>
        <trans-unit id="794041d1b65a601535f2653529d6624cd58dfb8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://generatewebpackconfig.netlify.com/&quot;&gt;Generate Custom Webpack Configuration&lt;/a&gt; is an interactive portal you can play around by selecting custom webpack configuration options tailored for your frontend project. It automatically generates a minimal webpack configuration based on your selection of loaders/plugins, etc.</source>
          <target state="translated">&lt;a href=&quot;https://generatewebpackconfig.netlify.com/&quot;&gt;사용자&lt;/a&gt; 정의 웹팩 구성 생성은 프론트 엔드 프로젝트에 맞게 사용자 정의 된 웹팩 구성 옵션을 선택하여 재생할 수있는 대화식 포털입니다. 선택한 로더 / 플러그인 등을 기반으로 최소 웹팩 구성을 자동으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="62404634508ba21fee61785b28310dec150b57a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TheLarkInn/angular2-template-loader&quot;&gt;&lt;code&gt;angular2-template-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; Components</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TheLarkInn/angular2-template-loader&quot;&gt; &lt;code&gt;angular2-template-loader&lt;/code&gt; &lt;/a&gt; Loads and compiles &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; Components</target>
        </trans-unit>
        <trans-unit id="6819d598c8d00970b069d162f1964f6e5f89d230" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt;&lt;code&gt;ts-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; 2.0+ like JavaScript</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt; &lt;code&gt;ts-loader&lt;/code&gt; &lt;/a&gt; Loads &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; 2.0+ like JavaScript</target>
        </trans-unit>
        <trans-unit id="c1c380dabdeaf76c3306c5a62670c9f618986424" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt;&lt;code&gt;ts-loader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/s-panferov/awesome-typescript-loader&quot;&gt;&lt;code&gt;awesome-typescript-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; 2.0+ like JavaScript</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt; &lt;code&gt;ts-loader&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://github.com/s-panferov/awesome-typescript-loader&quot;&gt; &lt;code&gt;awesome-typescript-loader&lt;/code&gt; &lt;/a&gt; JavaScript와 같은&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt; TypeScript&lt;/a&gt; 2.0 이상을로드합니다.</target>
        </trans-unit>
        <trans-unit id="377d8d352c2dd3f75ff4831b4833910cf7076768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/asnowwolf/markup-inline-loader&quot;&gt;&lt;code&gt;markup-inline-loader&lt;/code&gt;&lt;/a&gt; Inline SVG/MathML files to HTML. It&amp;rsquo;s useful when applying icon font or applying CSS animation to SVG.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/asnowwolf/markup-inline-loader&quot;&gt; &lt;code&gt;markup-inline-loader&lt;/code&gt; &lt;/a&gt; 인라인 SVG / MathML 파일을 HTML로 변환합니다. 아이콘 글꼴을 적용하거나 CSS 애니메이션을 SVG에 적용 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c7232dbef90598b35df228908036f04ce85d5ebb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/awnist/cson-loader&quot;&gt;&lt;code&gt;cson-loader&lt;/code&gt;&lt;/a&gt; Loads and transpiles a &lt;a href=&quot;https://github.com/bevry/cson#what-is-cson&quot;&gt;CSON&lt;/a&gt; file</source>
          <target state="translated">&lt;a href=&quot;https://github.com/awnist/cson-loader&quot;&gt; &lt;code&gt;cson-loader&lt;/code&gt; &lt;/a&gt; Loads and transpiles a &lt;a href=&quot;https://github.com/bevry/cson#what-is-cson&quot;&gt;CSON&lt;/a&gt; file</target>
        </trans-unit>
        <trans-unit id="f720ba376b9d69d347e86c5007cc1a33df849a8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bundle-stats/bundle-stats&quot;&gt;bundle-stats&lt;/a&gt;: Generate a bundle report(bundle size, assets, modules) and compare the results between different builds.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bundle-stats/bundle-stats&quot;&gt;bundle-stats&lt;/a&gt;: Generate a bundle report(bundle size, assets, modules) and compare the results between different builds.</target>
        </trans-unit>
        <trans-unit id="df5c3b0a8dca04d21c04c8e5948610b30199ae3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#modules&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# modules &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="163bc1afcb195e2a9dc10638b032caed0094b260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/elm-community/elm-webpack-loader&quot;&gt;&lt;code&gt;elm-webpack-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; like JavaScript</source>
          <target state="translated">&lt;a href=&quot;https://github.com/elm-community/elm-webpack-loader&quot;&gt; &lt;code&gt;elm-webpack-loader&lt;/code&gt; &lt;/a&gt; Loads &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; like JavaScript</target>
        </trans-unit>
        <trans-unit id="d8ea08b0b1d61617e081f5bbb151c71356ca461c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/expressjs/serve-index&quot;&gt;&lt;code&gt;serveIndex&lt;/code&gt;&lt;/a&gt; middleware generates directory listings on viewing directories that don't have an index.html file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/expressjs/serve-index&quot;&gt; &lt;code&gt;serveIndex&lt;/code&gt; &lt;/a&gt; middleware generates directory listings on viewing directories that don't have an index.html file.</target>
        </trans-unit>
        <trans-unit id="648bc985f39a72bdf1443b490a4f39e50c5ae324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fengari-lua/fengari-loader/&quot;&gt;&lt;code&gt;fengari-loader&lt;/code&gt;&lt;/a&gt; Loads Lua code using &lt;a href=&quot;https://fengari.io/&quot;&gt;fengari&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fengari-lua/fengari-loader/&quot;&gt; &lt;code&gt;fengari-loader&lt;/code&gt; &lt;/a&gt; 사용하여로드 루아 코드&lt;a href=&quot;https://fengari.io/&quot;&gt; fengari를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79f9315efd11ae35f49e7fa2cb00aaf0761e6f7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fluxxu/elm-hot-loader&quot;&gt;Elm Hot Loader&lt;/a&gt;: Supports HMR for the Elm programming language.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fluxxu/elm-hot-loader&quot;&gt;Elm Hot Loader&lt;/a&gt; : Elm 프로그래밍 언어에 대한 HMR을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1b4295ef4939c9474212c6931c69832fefe9341c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/gaearon/promise-loader&quot;&gt;&lt;code&gt;promise-loader&lt;/code&gt;&lt;/a&gt;: Similar to the &lt;code&gt;bundle-loader&lt;/code&gt; but uses promises.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gaearon/promise-loader&quot;&gt; &lt;code&gt;promise-loader&lt;/code&gt; &lt;/a&gt; : &lt;code&gt;bundle-loader&lt;/code&gt; 로더 와 유사하지만 promise를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4e7e99af9c472411a9ea650cd60606e2628c8f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot;&gt;React Hot Loader&lt;/a&gt;: Tweak react components in real time.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot;&gt;React Hot Loader&lt;/a&gt; : 실시간 반응 성분 조정.</target>
        </trans-unit>
        <trans-unit id="15d1dfdc953110a9e0860101d14381ec08fcfe95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/gdi2290/angular-hmr&quot;&gt;Angular HMR&lt;/a&gt;: No loader necessary! A simple change to your main NgModule file is all that's required to have full control over the HMR APIs.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gdi2290/angular-hmr&quot;&gt;Angular HMR&lt;/a&gt; : 로더가 필요하지 않습니다! 기본 NgModule 파일을 간단히 변경하면 HMR API를 완전히 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e45ac1434dd47e275c5c058ced9cc9fde6e3101" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/imagemin/imagemin-mozjpeg&quot;&gt;imagemin-mozjpeg&lt;/a&gt; can be configured in lossless and lossy mode.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/imagemin/imagemin-mozjpeg&quot;&gt;imagemin-mozjpeg&lt;/a&gt; can be configured in lossless and lossy mode.</target>
        </trans-unit>
        <trans-unit id="bf99528cf8a6c0d617699b79c9126a301f423f04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/imagemin/imagemin-svgo&quot;&gt;imagemin-svgo&lt;/a&gt; can be configured in lossless and lossy mode.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/imagemin/imagemin-svgo&quot;&gt;imagemin-svgo&lt;/a&gt; can be configured in lossless and lossy mode.</target>
        </trans-unit>
        <trans-unit id="3ff7b4e48fe873ee8397dfbaffc86f59b865b4e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter&quot;&gt;Options&lt;/a&gt;&lt;a&gt;Options&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#options&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter&quot;&gt;옵션 &lt;/a&gt;&lt;a&gt;옵션&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# options &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="134728c395af562e49ba98ebecd76a26fed0a9f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/javiercf/react-markdown-loader&quot;&gt;&lt;code&gt;react-markdown-loader&lt;/code&gt;&lt;/a&gt; Compiles Markdown to a React Component using the markdown-parse parser</source>
          <target state="translated">&lt;a href=&quot;https://github.com/javiercf/react-markdown-loader&quot;&gt; &lt;code&gt;react-markdown-loader&lt;/code&gt; &lt;/a&gt; markdown-parse 파서를 사용하여 Markdown을 React Component로 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="bbb81aa2e9e775baaac70f55de0436b09cd6c026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jupl/traceur-loader&quot;&gt;&lt;code&gt;traceur-loader&lt;/code&gt;&lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/google/traceur-compiler#readme&quot;&gt;Traceur&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jupl/traceur-loader&quot;&gt; &lt;code&gt;traceur-loader&lt;/code&gt; &lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/google/traceur-compiler#readme&quot;&gt;Traceur&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0abb5f5d5ccd442e0ffb920e0dd6315ddf5116c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/klazuka/elm-hot-webpack-loader&quot;&gt;Elm Hot webpack Loader&lt;/a&gt;: Supports HMR for the Elm programming language.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/klazuka/elm-hot-webpack-loader&quot;&gt;Elm Hot webpack Loader&lt;/a&gt;: Supports HMR for the Elm programming language.</target>
        </trans-unit>
        <trans-unit id="9115cb2110fdd2e3ba549602510d05dd96c8ec63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony#minify-options&quot;&gt;&lt;code&gt;uglifyOptions&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;uglifyOptions&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#uglifyoptions&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony#minify-options&quot;&gt; &lt;code&gt;uglifyOptions&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;uglifyOptions&lt;/code&gt; &lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# uglifyoptions &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="df3176660a11eb78c9e7c0a9e8c105f9f1a251e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pcardune/handlebars-loader&quot;&gt;&lt;code&gt;handlebars-loader&lt;/code&gt;&lt;/a&gt; Compiles Handlebars to HTML</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pcardune/handlebars-loader&quot;&gt; &lt;code&gt;handlebars-loader&lt;/code&gt; &lt;/a&gt; Compiles Handlebars to HTML</target>
        </trans-unit>
        <trans-unit id="f081d03f2732619466b8c9523e23f043db7c6d63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;&lt;code&gt;extract-loader&lt;/code&gt;&lt;/a&gt; (simpler, but specialized on the css-loader's output)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt; &lt;code&gt;extract-loader&lt;/code&gt; &lt;/a&gt; (더 단순하지만 CSS 로더 출력에 특화 됨)</target>
        </trans-unit>
        <trans-unit id="41f167c1c616d04bf898a9764ad4431f04e224de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt; (simpler, but specialized on the css-loader's output)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt; (더 단순하지만 CSS 로더 출력에 특화 됨)</target>
        </trans-unit>
        <trans-unit id="4eddda528718fec7063db0336f46b3d48ef97aac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/extract-loader/tree/master/examples/index-html&quot;&gt;Extracting the index.html&lt;/a&gt;&lt;a&gt;Extracting the index.html&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#extracting-the-index-html&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/peerigon/extract-loader/tree/master/examples/index-html&quot;&gt;index.html &lt;/a&gt;&lt;a&gt;추출 &lt;/a&gt;index.html 추출 &quot;class =&quot;icon-link &quot;href =&quot;# extracting-the-index-html &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8a408d00016704c8e2269e10ab6feeb2ef7dab61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/markdown-loader&quot;&gt;&lt;code&gt;markdown-loader&lt;/code&gt;&lt;/a&gt; Compiles Markdown to HTML</source>
          <target state="translated">&lt;a href=&quot;https://github.com/peerigon/markdown-loader&quot;&gt; &lt;code&gt;markdown-loader&lt;/code&gt; &lt;/a&gt; Compiles Markdown to HTML</target>
        </trans-unit>
        <trans-unit id="430bef9e1189dca7adad2df98dfb4fcd37f68649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/posthtml/posthtml-loader&quot;&gt;&lt;code&gt;posthtml-loader&lt;/code&gt;&lt;/a&gt; Loads and transforms a HTML file using &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/posthtml/posthtml-loader&quot;&gt; &lt;code&gt;posthtml-loader&lt;/code&gt; &lt;/a&gt; Loads and transforms a HTML file using &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="febf17eba9ca4848506488c7b582aaa7d2de70b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pugjs/pug-loader&quot;&gt;&lt;code&gt;pug-loader&lt;/code&gt;&lt;/a&gt; Loads Pug and Jade templates and returns a function</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pugjs/pug-loader&quot;&gt; &lt;code&gt;pug-loader&lt;/code&gt; &lt;/a&gt; Loads Pug and Jade templates and returns a function</target>
        </trans-unit>
        <trans-unit id="ef5180b75611c06b7c0526ac620704a986d45077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sairion/buble-loader&quot;&gt;&lt;code&gt;buble-loader&lt;/code&gt;&lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sairion/buble-loader&quot;&gt; &lt;code&gt;buble-loader&lt;/code&gt; &lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9f1d80b120f52004c8e8664a3a97d036e9bf7f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sass/dart-sass#javascript-api&quot;&gt;Dart Sass documentation&lt;/a&gt; for all available &lt;code&gt;sass&lt;/code&gt; options.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sass/dart-sass#javascript-api&quot;&gt;Dart Sass documentation&lt;/a&gt; for all available &lt;code&gt;sass&lt;/code&gt; options.</target>
        </trans-unit>
        <trans-unit id="bd9a3edbbb864a4dee740d1bbc14d154358032b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sass/node-sass/#options&quot;&gt;Node Sass documentation&lt;/a&gt; for all available &lt;code&gt;node-sass&lt;/code&gt; options.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sass/node-sass/#options&quot;&gt;Node Sass documentation&lt;/a&gt; for all available &lt;code&gt;node-sass&lt;/code&gt; options.</target>
        </trans-unit>
        <trans-unit id="9adbe5973df05bc60a1e7142a81d8688cc91d7e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sindresorhus/globby#options&quot;&gt;Options&lt;/a&gt; passed to the glob pattern matching library including &lt;code&gt;ignore&lt;/code&gt; option.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sindresorhus/globby#options&quot;&gt;Options&lt;/a&gt; passed to the glob pattern matching library including &lt;code&gt;ignore&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="ca818139588d06e54f40fa91b7b892932fea6c88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sveltejs/svelte-loader&quot;&gt;Svelte Loader&lt;/a&gt;: This loader supports HMR for Svelte components out of the box.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sveltejs/svelte-loader&quot;&gt;Svelte Loader&lt;/a&gt;: This loader supports HMR for Svelte components out of the box.</target>
        </trans-unit>
        <trans-unit id="304e267cee51c12b50671f04d79ac74520a28238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt;&lt;code&gt;parallel-webpack&lt;/code&gt;&lt;/a&gt;: It allows for compilation in a worker pool.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt; &lt;code&gt;parallel-webpack&lt;/code&gt; &lt;/a&gt;: It allows for compilation in a worker pool.</target>
        </trans-unit>
        <trans-unit id="6c4af5ba59f3a50bfefe64122d4ad23b2c7c07dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt;&lt;code&gt;parallel-webpack&lt;/code&gt;&lt;/a&gt;: It allows to do compilation in a worker pool.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt; &lt;code&gt;parallel-webpack&lt;/code&gt; &lt;/a&gt; : 작업자 풀에서 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1239ec17ce15d5f33b54fd64f592d6f646e083f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;&lt;code&gt;vue-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles &lt;a href=&quot;https://vuejs.org/v2/guide/components.html&quot;&gt;Vue Components&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt; &lt;code&gt;vue-loader&lt;/code&gt; &lt;/a&gt; Loads and compiles &lt;a href=&quot;https://vuejs.org/v2/guide/components.html&quot;&gt;Vue Components&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f42438eb5e8340d08323c78d6901e136fbb5286e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;Vue Loader&lt;/a&gt;: This loader supports HMR for vue components out of the box.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;Vue Loader&lt;/a&gt; :이 로더는 Vue 구성 요소에 대한 HMR을 기본적으로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3234fc315cfeeafb4a329ce53a074d6d0c725a63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt;&lt;code&gt;eslint-loader&lt;/code&gt;&lt;/a&gt; PreLoader for linting code using &lt;a href=&quot;https://eslint.org/&quot;&gt;ESLint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt; &lt;code&gt;eslint-loader&lt;/code&gt; &lt;/a&gt; 사용하여 코드를 linting에 대한 프리 로더&lt;a href=&quot;https://eslint.org/&quot;&gt; ESLint을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14a82ef669e00b2ef6f887a32ee7caa7a73e72f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/null-loader&quot;&gt;&lt;code&gt;null-loader&lt;/code&gt;&lt;/a&gt; is deprecated in webpack 5. use &lt;code&gt;alias: { xyz$: false }&lt;/code&gt; or absolute path &lt;code&gt;alias: {[path.resolve(__dirname, './path/to/module')]: false }&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/null-loader&quot;&gt; &lt;code&gt;null-loader&lt;/code&gt; &lt;/a&gt; is deprecated in webpack 5. use &lt;code&gt;alias: { xyz$: false }&lt;/code&gt; or absolute path &lt;code&gt;alias: {[path.resolve(__dirname, './path/to/module')]: false }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb1c03cdb4bd9cb48205422475037058ab90e69f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/polymer-webpack-loader&quot;&gt;&lt;code&gt;polymer-loader&lt;/code&gt;&lt;/a&gt; Process HTML &amp;amp; CSS with preprocessor of choice and &lt;code&gt;require()&lt;/code&gt; Web Components like first-class modules</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/polymer-webpack-loader&quot;&gt; &lt;code&gt;polymer-loader&lt;/code&gt; &lt;/a&gt; Process HTML &amp;amp; CSS with preprocessor of choice and &lt;code&gt;require()&lt;/code&gt; Web Components like first-class modules</target>
        </trans-unit>
        <trans-unit id="b14bee727634c8ac4868b3ded19eaabbf63d013a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/remark-loader&quot;&gt;&lt;code&gt;remark-loader&lt;/code&gt;&lt;/a&gt; Load markdown through &lt;code&gt;remark&lt;/code&gt; with built-in image resolution</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/remark-loader&quot;&gt; &lt;code&gt;remark-loader&lt;/code&gt; &lt;/a&gt; Load markdown through &lt;code&gt;remark&lt;/code&gt; with built-in image resolution</target>
        </trans-unit>
        <trans-unit id="c52ff52b8c59e0b1a812567a7ae5b77338e61f06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;: A plugin and CLI utility that represents bundle content as a convenient interactive zoomable treemap.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;: A plugin and CLI utility that represents bundle content as a convenient interactive zoomable treemap.</target>
        </trans-unit>
        <trans-unit id="9e6e71b07c95b488b5928ad95690f7fc408a3598" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;: A plugin and CLI utility that represents bundle content as convenient interactive zoomable treemap.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt; : 번들 컨텐츠를 편리한 대화식 줌 가능한 트리 맵으로 나타내는 플러그인 및 CLI 유틸리티.</target>
        </trans-unit>
        <trans-unit id="cb4ae94364d5c4331056baa604a442e7f0acff0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/webpack-command&quot;&gt;webpack-command&lt;/a&gt;: the lightweight, opinionated and modern CLI.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/webpack-command&quot;&gt;webpack-command&lt;/a&gt; : 가볍고 현대적인 CLI.</target>
        </trans-unit>
        <trans-unit id="3e5a7afd6473cda1f0713c7beb1811f4662e3f75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack/webpack-cli&quot;&gt;webpack-cli&lt;/a&gt;: the original webpack full-featured CLI.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/webpack-cli&quot;&gt;webpack-cli&lt;/a&gt; : 모든 기능을 갖춘 원본 웹팩 CLI.</target>
        </trans-unit>
        <trans-unit id="2aae044cd9f332001e5935574e235aa60016bba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; can be used to quickly develop an application. See the &lt;a href=&quot;../guides/development&quot;&gt;development guide&lt;/a&gt; to get started.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; can be used to quickly develop an application. See the &lt;a href=&quot;../guides/development&quot;&gt;development guide&lt;/a&gt; to get started.</target>
        </trans-unit>
        <trans-unit id="801ec59ac2548740c897b02a7082a04237bbb231" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll&quot;&gt;Vendor&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll-user&quot;&gt;User&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll&quot;&gt;공급 업체&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll-user&quot;&gt;사용자&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb5b23f9adbbef439312a17d229ff6b9d492344a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/zimmo-be/twig-loader&quot;&gt;&lt;code&gt;twig-loader&lt;/code&gt;&lt;/a&gt; Compiles Twig templates and returns a function</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zimmo-be/twig-loader&quot;&gt; &lt;code&gt;twig-loader&lt;/code&gt; 는&lt;/a&gt; Twig 템플릿을 컴파일하고 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="efbc708860856603c43be48cf64334ab9707f1d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://oss.ninja/mit/developit&quot;&gt;MIT License&lt;/a&gt; &amp;copy; &lt;a href=&quot;https://jasonformat.com/&quot;&gt;Jason Miller&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://oss.ninja/mit/developit&quot;&gt;MIT 라이센스&lt;/a&gt; &amp;copy; &lt;a href=&quot;https://jasonformat.com/&quot;&gt;Jason Miller&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96205a8e774eb9f156b9af68c672d9aeb46b46b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/.github/CONTRIBUTING.md&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8b271293b8deeca920b790417531d1d5ed3b1882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c2c7836b151ae2d0e3a48f2119a281ab68a895ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;a&gt;Changelog&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#changelog&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/CHANGELOG.md&quot;&gt;변경 &lt;/a&gt;&lt;a&gt;로그 &lt;/a&gt;변경 로그 &quot;class =&quot;icon-link &quot;href =&quot;# changelog &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8d5599a70d1c382cb11c548be606834447b1a6cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/LICENSE&quot;&gt;License&lt;/a&gt;&lt;a&gt;License&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#license&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/LICENSE&quot;&gt;라이센스 &lt;/a&gt;&lt;a&gt;라이센스&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# license &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8ffa6d3c5daf707ce7faa68fea673e4da7cec344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/.github/CONTRIBUTING.md&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5f89fa7e506831478797417595c842430f9fa876" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="93cacbc66d7bb936f9d2f989ff5a2d27d6a321ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/.github/CONTRIBUTING&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="93decd75579e77565f9786a403d66911a065ed75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6449bf3643be9bd6a962d8efaca7da3f3dd054fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/.github/CONTRIBUTING&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="49553ca7ea2c31c6d65db40cabb4e0a6dac9810a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7357dd01d9d531aa5caa19d814b013dbb6b29d0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/.github/CONTRIBUTING&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8dafe8b074d7ef49ebdf773eae5319f2b878c7a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="808a4400a4b4fab4b843b80daaacef3adfba376b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/.github/CONTRIBUTING&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ebd1608311e23e5ecf51604773a43407a1c0e274" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5743f3fe80cd5e56282ee8a891c85dd222fdbec7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mini-css-extract-plugin/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mini-css-extract-plugin/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6505340e4348ec63db84bad1fd4ad0b6694cb25d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/.github/CONTRIBUTING&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a91e2f6a97834a034487f757422e7e9270336325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d6cffddd6c5a6a1adaaefa33c94daa479d53cee7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/multi-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/multi-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="88cf846d3e11acf17c48cf70ebeec8215b05245e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/node-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/node-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="59ced50a629958005d96938f7ceb254d235fad4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/.github/CONTRIBUTING&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="932dcb972e11a28418487e3302b1fbfb64d2db1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9525a06db101205322e59e727cccf41f2a87f78d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/raw-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/raw-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="58af7f2c999167de7356f0596b62b13f82a1c64d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/react-proxy-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/react-proxy-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cf33f0c3b26524509da2b366eaedc83ef6fd8522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/stylelint-webpack-plugin/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/stylelint-webpack-plugin/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="98a61c3a5aec594c4707f0801a6932ee4ad44083" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/.github/CONTRIBUTING&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0df6ce92a3a6ad813cc151961775d5550813e38b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ba53fda207ea5b8accfdc83e119a5146f6f7970b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/transform-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/transform-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1cbd24f608eeaa9ddf3cb4361f941d5c8d088bf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/.github/CONTRIBUTING.md&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="269ad2f4ff43c4f87479476762bf0c47c64a5160" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ff1286cb4ec35f2a52a4636ac8850472ef7bcc23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/val-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/val-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="37ee48c5610c0ff366269db314f55acbf307c607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/.github/CONTRIBUTING.md&quot;&gt;기부금 &lt;/a&gt;&lt;a&gt;기부&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# contributing &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="baa601e3b1c2ce82a620bc39daf87b05d63fafed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0e83bcf3ab733282ae7041787ebff7fd3250b3f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/yaml-frontmatter-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/yaml-frontmatter-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot;icon-link &quot;href =&quot;# mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b79e2b896026d6de9a89759a8b235bd5a84fedf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://survivejs.com/webpack/loading/fonts/&quot;&gt;Loading Fonts&lt;/a&gt; on SurviveJS</source>
          <target state="translated">&lt;a href=&quot;https://survivejs.com/webpack/loading/fonts/&quot;&gt;&lt;/a&gt;SurviveJS에서 글꼴로드</target>
        </trans-unit>
        <trans-unit id="873ceab2217bae95eb611589f9732e6f99b46085" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://webpack.jakoblind.no/optimize&quot;&gt;webpack bundle optimize helper&lt;/a&gt;: This tool will analyze your bundle and give you actionable suggestions on what to improve to reduce your bundle size.</source>
          <target state="translated">&lt;a href=&quot;https://webpack.jakoblind.no/optimize&quot;&gt;webpack bundle optimize helper&lt;/a&gt;: This tool will analyze your bundle and give you actionable suggestions on what to improve to reduce your bundle size.</target>
        </trans-unit>
        <trans-unit id="18e5d4bf02fcafd6013bb0f3776a1a933e716286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/ref-loader&quot;&gt;&lt;code&gt;ref-loader&lt;/code&gt;&lt;/a&gt; Create dependencies between any files manually</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/ref-loader&quot;&gt; &lt;code&gt;ref-loader&lt;/code&gt; &lt;/a&gt; Create dependencies between any files manually</target>
        </trans-unit>
        <trans-unit id="dcf48a7e45cefabfbe0ef5ab650010d01c6b467f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;Polymer&lt;/a&gt; component loader for &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://webpack.js.org/&quot;&gt;웹 팩용 &lt;/a&gt;폴리머 부품 로더 .</target>
        </trans-unit>
        <trans-unit id="db1ca4a6e55477df7c9e772112cfdc2c81bcf58d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; is a typed superset of JavaScript that compiles to plain JavaScript. In this guide we will learn how to integrate TypeScript with webpack.</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; 는 일반 JavaScript로 컴파일되는 JavaScript의 형식화 된 슈퍼 세트입니다. 이 안내서에서는 TypeScript를 웹팩과 통합하는 방법을 배웁니다.</target>
        </trans-unit>
        <trans-unit id="9729d2612dc9a2d8c66843d36f1aa9e1cb40f7d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;jshint-loader&quot;&gt;&lt;code&gt;jshint-loader&lt;/code&gt;&lt;/a&gt; PreLoader for linting code using &lt;a href=&quot;http://jshint.com/about/&quot;&gt;JSHint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;jshint-loader&quot;&gt; &lt;code&gt;jshint-loader&lt;/code&gt; &lt;/a&gt; 를 사용한 코드 린 팅용 jshint-loader&lt;a href=&quot;http://jshint.com/about/&quot;&gt; PreLoader&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bfbeceee5e47192dc45d1478d47dbde8e780cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json-loader&quot;&gt;&lt;code&gt;json-loader&lt;/code&gt;&lt;/a&gt; Loads a &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; file (included by default)</source>
          <target state="translated">&lt;a href=&quot;json-loader&quot;&gt; &lt;code&gt;json-loader&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;http://json.org/&quot;&gt; JSON&lt;/a&gt; 파일을로드합니다 (기본적으로 포함됨)</target>
        </trans-unit>
        <trans-unit id="a5ff0bbb02c69453d945ea03fef36c8b50c81658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json5-loader&quot;&gt;&lt;code&gt;json5-loader&lt;/code&gt;&lt;/a&gt; Loads and transpiles a &lt;a href=&quot;https://json5.org/&quot;&gt;JSON 5&lt;/a&gt; file</source>
          <target state="translated">&lt;a href=&quot;json5-loader&quot;&gt; &lt;code&gt;json5-loader&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://json5.org/&quot;&gt; JSON 5&lt;/a&gt; 파일을로드하고 변환합니다</target>
        </trans-unit>
        <trans-unit id="b511ef2600dc26d34f2962337d54036f27f39398" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;less-loader&quot;&gt;&lt;code&gt;less-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles a LESS file</source>
          <target state="translated">&lt;a href=&quot;less-loader&quot;&gt; &lt;code&gt;less-loader&lt;/code&gt; &lt;/a&gt; LESS 파일로드 및 컴파일</target>
        </trans-unit>
        <trans-unit id="f96170842d85c141e1fcc83116192d4a44f25f52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mocha-loader&quot;&gt;&lt;code&gt;mocha-loader&lt;/code&gt;&lt;/a&gt; Tests with &lt;a href=&quot;https://mochajs.org/&quot;&gt;mocha&lt;/a&gt; (Browser/NodeJS)</source>
          <target state="translated">&lt;a href=&quot;mocha-loader&quot;&gt; &lt;code&gt;mocha-loader&lt;/code&gt; &lt;/a&gt; 와 테스트&lt;a href=&quot;https://mochajs.org/&quot;&gt; 모카&lt;/a&gt; (브라우저 / NodeJS)</target>
        </trans-unit>
        <trans-unit id="fc4735092598281ce135fc06246b49f02e9e533b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;output#outputpublicpath&quot;&gt;&lt;code&gt;output.publicPath&lt;/code&gt;&lt;/a&gt; won't be added to the provided URL.</source>
          <target state="translated">&lt;a href=&quot;output#outputpublicpath&quot;&gt; &lt;code&gt;output.publicPath&lt;/code&gt; &lt;/a&gt; won't be added to the provided URL.</target>
        </trans-unit>
        <trans-unit id="b86d5dfba1c02505ccdb6a9fbd31492a1abdb6ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;postcss-loader&quot;&gt;&lt;code&gt;postcss-loader&lt;/code&gt;&lt;/a&gt; Loads and transforms a CSS/SSS file using &lt;a href=&quot;http://postcss.org&quot;&gt;PostCSS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;postcss-loader&quot;&gt; &lt;code&gt;postcss-loader&lt;/code&gt; &lt;/a&gt; 로드 및 변환 사용하여 CSS / SSS 파일&lt;a href=&quot;http://postcss.org&quot;&gt; PostCSS을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="280059c08d0961b65fcb9056b52e054ea764ceb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;raw-loader&quot;&gt;&lt;code&gt;raw-loader&lt;/code&gt;&lt;/a&gt; Loads raw content of a file (utf-8)</source>
          <target state="translated">&lt;a href=&quot;raw-loader&quot;&gt; &lt;code&gt;raw-loader&lt;/code&gt; &lt;/a&gt; 파일의 원시 컨텐츠를로드합니다 (utf-8)</target>
        </trans-unit>
        <trans-unit id="3807c34b6bad4d11ec69b79619c66923c36fb6ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sass-loader&quot;&gt;&lt;code&gt;sass-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles a SASS/SCSS file</source>
          <target state="translated">&lt;a href=&quot;sass-loader&quot;&gt; &lt;code&gt;sass-loader&lt;/code&gt; &lt;/a&gt; SASS / SCSS 파일을로드하고 컴파일합니다</target>
        </trans-unit>
        <trans-unit id="26b2530e9a6fa89a37b78811f7e68642286be298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;script-loader&quot;&gt;&lt;code&gt;script-loader&lt;/code&gt;&lt;/a&gt; Executes a JavaScript file once in global context (like in script tag), requires are not parsed</source>
          <target state="translated">&lt;a href=&quot;script-loader&quot;&gt; &lt;code&gt;script-loader&lt;/code&gt; &lt;/a&gt; 스크립트 태그와 같이 전역 컨텍스트에서 JavaScript 파일을 한 번 실행하며 구문 분석하지 않아도 됨</target>
        </trans-unit>
        <trans-unit id="9f4dd0355fb6aa4f9881b5276dafc682d7dbefcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; Add exports of a module as style to DOM</source>
          <target state="translated">&lt;a href=&quot;style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt; 모듈에 스타일 내보내기를 DOM에 내보내기 추가</target>
        </trans-unit>
        <trans-unit id="6612362adc91906fd6bbe162b9345ae5dca623dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stylus-loader&quot;&gt;&lt;code&gt;stylus-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles a Stylus file</source>
          <target state="translated">&lt;a href=&quot;stylus-loader&quot;&gt; &lt;code&gt;stylus-loader&lt;/code&gt; &lt;/a&gt; Loads and compiles a Stylus file</target>
        </trans-unit>
        <trans-unit id="d8730588cf55c941ee85bfac8cf11d64660947d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;url-loader&quot;&gt;&lt;code&gt;url-loader&lt;/code&gt;&lt;/a&gt; Works like the file loader, but can return a &lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt;data URL&lt;/a&gt; if the file is smaller than a limit</source>
          <target state="translated">&lt;a href=&quot;url-loader&quot;&gt; &lt;code&gt;url-loader&lt;/code&gt; &lt;/a&gt; 파일 로더처럼 작동하지만파일이 한계보다 작 으면&lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt; 데이터 URL을&lt;/a&gt; 반환 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="bebb845952ecf93232f428f12a803428d0ea4abb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;val-loader&quot;&gt;&lt;code&gt;val-loader&lt;/code&gt;&lt;/a&gt; Executes code as module and consider exports as JS code</source>
          <target state="translated">&lt;a href=&quot;val-loader&quot;&gt; &lt;code&gt;val-loader&lt;/code&gt; &lt;/a&gt; 코드를 모듈로 실행하고 내보내기를 JS 코드로 간주</target>
        </trans-unit>
        <trans-unit id="ab7d6779836500af158972526bf25c415b871e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;.&quot;&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;&quot;.&quot;&lt;/code&gt; 특성</target>
        </trans-unit>
        <trans-unit id="d2bd56a06c773957a6dd0637de4971a1da775004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;default&quot;&lt;/code&gt; condition</source>
          <target state="translated">&lt;code&gt;&quot;default&quot;&lt;/code&gt; 조건</target>
        </trans-unit>
        <trans-unit id="5c9869a8aa628f926d7fd7328c69d39c4b894eb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;eager&quot;&lt;/code&gt;: Generates no extra chunk. All modules are included in the current chunk and no additional network requests are made. A &lt;code&gt;Promise&lt;/code&gt; is still returned but is already resolved. In contrast to a static import, the module isn't executed until the call to &lt;code&gt;import()&lt;/code&gt; is made.</source>
          <target state="translated">&lt;code&gt;&quot;eager&quot;&lt;/code&gt; : 추가 청크를 생성하지 않습니다. 모든 모듈이 현재 청크에 포함되어 있으며 추가 네트워크 요청이 없습니다. &lt;code&gt;Promise&lt;/code&gt; 여전히 반환하지만, 이미 해결됩니다. 정적 가져 오기와 달리 &lt;code&gt;import()&lt;/code&gt; 호출 할 때까지 모듈이 실행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="454229e132d4caf2c640a62096e4ee04980589c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;empty&quot;&lt;/code&gt;: Provide an empty object.</source>
          <target state="translated">&lt;code&gt;&quot;empty&quot;&lt;/code&gt; : 빈 객체를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="22ac464689091f51e40ac4510c4634d992abcb44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;eval&quot;&lt;/code&gt; has the best performance, but doesn't assist you for transpiled code.</source>
          <target state="translated">&lt;code&gt;&quot;eval&quot;&lt;/code&gt; 은 최상의 성능을 제공하지만 변환 된 코드를 지원하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="b3e5d3577d159a04689ab48742b45ee356b57089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;lazy&quot;&lt;/code&gt; (default): Generates a lazy-loadable chunk for each &lt;code&gt;import()&lt;/code&gt;ed module.</source>
          <target state="translated">&lt;code&gt;&quot;lazy&quot;&lt;/code&gt; (기본값) : 각 &lt;code&gt;import()&lt;/code&gt; ed 모듈 에 대해 lazy-loadable chunk를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="13f5e9e255393bb1d3cb667fcc0eb97f429ec272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;lazy-once&quot;&lt;/code&gt;: Generates a single lazy-loadable chunk that can satisfy all calls to &lt;code&gt;import()&lt;/code&gt;. The chunk will be fetched on the first call to &lt;code&gt;import()&lt;/code&gt;, and subsequent calls to &lt;code&gt;import()&lt;/code&gt; will use the same network response. Note that this only makes sense in the case of a partially dynamic statement, e.g. &lt;code&gt;import(`./locales/${language}.json`)&lt;/code&gt;, where there are multiple module paths that could potentially be requested.</source>
          <target state="translated">&lt;code&gt;&quot;lazy-once&quot;&lt;/code&gt; : &lt;code&gt;import()&lt;/code&gt; 모든 호출을 만족시킬 수있는 단일 지연로드 가능 청크를 생성합니다 . 청크는 첫 번째 &lt;code&gt;import()&lt;/code&gt; 호출에서 &lt;code&gt;import()&lt;/code&gt; 이후 import () 호출 은 동일한 네트워크 응답을 사용합니다. 이것은 잠재적으로 요청 될 수있는 여러 모듈 경로가있는 &lt;code&gt;import(`./locales/${language}.json`)&lt;/code&gt; 와 같이 부분적으로 동적 인 명령문의 경우에만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a9dd170a4b81b44c7f739d4150c4aba8a229e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;mock&quot;&lt;/code&gt;: Provide a mock that implements the expected interface but has little or no functionality.</source>
          <target state="translated">&lt;code&gt;&quot;mock&quot;&lt;/code&gt; : 예상되는 인터페이스를 구현하지만 기능이 거의 또는 전혀없는 모의를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dcc76a5893a8b3b567403e09a05033b87f637dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;mock&quot;&lt;/code&gt;: The fixed value &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;mock&quot;&lt;/code&gt; : 고정 값 &lt;code&gt;&quot;/&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60ace8cab2a8e66ce52d2aa779b407418060397a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;mock&quot;&lt;/code&gt;: The fixed value &lt;code&gt;&quot;index.js&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;mock&quot;&lt;/code&gt; : 고정 값 &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a46beb12caa70fc4c0cc2b8c24cc6f282184e2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;module&quot;&lt;/code&gt;: Use with ES6 ready code.</source>
          <target state="translated">&lt;code&gt;&quot;module&quot;&lt;/code&gt; : ES6 준비 코드와 함께 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="28eb623b095ec9cb44037a3df025c53efb8a6c88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;text/javascript&quot;&lt;/code&gt; (default)</source>
          <target state="translated">&lt;code&gt;&quot;text/javascript&quot;&lt;/code&gt; (기본값)</target>
        </trans-unit>
        <trans-unit id="a5fb48393c47a72370a59a9d76552c8abcc4e5bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;weak&quot;&lt;/code&gt;: Tries to load the module if the module function has already been loaded in some other way (i. e. another chunk imported it or a script containing the module was loaded). A &lt;code&gt;Promise&lt;/code&gt; is still returned but, only successfully resolves if the chunks are already on the client. If the module is not available, the &lt;code&gt;Promise&lt;/code&gt; is rejected. A network request will never be performed. This is useful for universal rendering when required chunks are always manually served in initial requests (embedded within the page), but not in cases where app navigation will trigger an import not initially served.</source>
          <target state="translated">&lt;code&gt;&quot;weak&quot;&lt;/code&gt; : 모듈 기능이 이미 다른 방법으로로드 된 경우 (예 : 다른 청크가 가져 오거나 모듈을 포함하는 스크립트가로드 된 경우) 모듈을로드하려고 시도합니다. &lt;code&gt;Promise&lt;/code&gt; 여전히 덩어리가 클라이언트에 이미있는 경우에만 성공적으로 해결, 반환되지만. 모듈을 사용할 수 없으면 &lt;code&gt;Promise&lt;/code&gt; 이 거부됩니다. 네트워크 요청은 수행되지 않습니다. 이 기능은 필요한 청크가 항상 수동 요청 (페이지 내에 포함 된)에서 수동으로 제공되지만 앱 탐색이 처음에 제공되지 않은 가져 오기를 트리거하는 경우에는 유용하지 않은 경우에 범용 렌더링에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fd3de7a1d16fa13e0b02f7dec5cb10d244f367a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;dom-module&amp;gt;&lt;/code&gt; becomes a string which is registered at runtime</source>
          <target state="translated">&lt;code&gt;&amp;lt;dom-module&amp;gt;&lt;/code&gt; 은 런타임에 등록 된 문자열이됩니다</target>
        </trans-unit>
        <trans-unit id="e1061453c8724ac605a6d81ab1ee06fba8cd5168" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;link rel=&quot;import&quot; href=&quot;./my-other-element.html&quot;&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './my-other-element.html';&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;link rel=&quot;import&quot; href=&quot;./my-other-element.html&quot;&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './my-other-element.html';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e039440616b0670952e02ad565fc9c503af7f647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; paths matching these conditions (see [Condition] in the webpack documentation) will not be changed when transformed into &lt;code&gt;import&lt;/code&gt;s. This can be useful for respecting aliases, loader syntax (e.g. &lt;code&gt;markup-inline-loader!./my-element.html&lt;/code&gt;), or module paths.</source>
          <target state="translated">&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 이러한 조건과 일치하는 &amp;lt;link&amp;gt; 경로 (웹팩 설명서의 [조건] 참조)는 &lt;code&gt;import&lt;/code&gt; 로 변환 될 때 변경되지 않습니다 . 별명, 로더 구문 (예 : &lt;code&gt;markup-inline-loader!./my-element.html&lt;/code&gt; ) 또는 모듈 경로를 고려할 때 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59b4c6c2723609be66bf3da428ae932401f2baf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;s pointing to paths matching these conditions (see [Condition] in the webpack documentation) will not be transformed into &lt;code&gt;import&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 이러한 조건 (웹팩 설명서의 [조건] 참조)과 일치하는 경로를 가리키는 &amp;lt;link&amp;gt; 는 &lt;code&gt;import&lt;/code&gt; 로 변환되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="98b42ba6b69900518f8a2df6ca3d3cabab0fdf4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;script src=&quot;./other-script.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './other-script.js';&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;script src=&quot;./other-script.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './other-script.js';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="632a29d792c57f0be300ba9e356c269dba652af3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;script&amp;gt;/* contents */&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/* contents */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;script&amp;gt;/* contents */&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/* contents */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cdea2ebbabf8852830fac0659e92a8d62d863fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'...'&lt;/code&gt; can be used in &lt;code&gt;optimization.minimizer&lt;/code&gt; to access the defaults.</source>
          <target state="translated">&lt;code&gt;'...'&lt;/code&gt; can be used in &lt;code&gt;optimization.minimizer&lt;/code&gt; to access the defaults.</target>
        </trans-unit>
        <trans-unit id="814e67b888106bbe7c79bce8f3359d30af04269d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'anonymous'&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;without credentials&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;'anonymous'&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;without credentials&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="365df4730d1be88b509441ebfaaa734bfc4b3fcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto'&lt;/code&gt; - emit warnings in &lt;code&gt;development&lt;/code&gt; mode and emit errors in &lt;code&gt;production&lt;/code&gt; mode (default behavior)</source>
          <target state="translated">&lt;code&gt;'auto'&lt;/code&gt; - emit warnings in &lt;code&gt;development&lt;/code&gt; mode and emit errors in &lt;code&gt;production&lt;/code&gt; mode (default behavior)</target>
        </trans-unit>
        <trans-unit id="b48816273bdaca38c37a4985c2114556c838c386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'built'&lt;/code&gt; - whether the asset has been built;</source>
          <target state="translated">&lt;code&gt;'built'&lt;/code&gt; - whether the asset has been built;</target>
        </trans-unit>
        <trans-unit id="67abbfdb29f2e3f3d10fd513cc843fb92961775d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'cacheable'&lt;/code&gt; - whether the item is cacheable;</source>
          <target state="translated">&lt;code&gt;'cacheable'&lt;/code&gt; - whether the item is cacheable;</target>
        </trans-unit>
        <trans-unit id="dcab918cdd05495b4b5a6c090acb82e6d2cc6b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'chunks'&lt;/code&gt; - what chunks the item originates from (for example, if there are multiple subchunks for one chunk - the subchunks will be grouped together according to their main chunk);</source>
          <target state="translated">&lt;code&gt;'chunks'&lt;/code&gt; - what chunks the item originates from (for example, if there are multiple subchunks for one chunk - the subchunks will be grouped together according to their main chunk);</target>
        </trans-unit>
        <trans-unit id="7b231a4449849ccb56ad1f2031583a008e6c5eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'eager'&lt;/code&gt;: Generates no extra chunk. All modules are included in the current chunk and no additional network requests are made. A &lt;code&gt;Promise&lt;/code&gt; is still returned but is already resolved. In contrast to a static import, the module isn't executed until the call to &lt;code&gt;import()&lt;/code&gt; is made.</source>
          <target state="translated">&lt;code&gt;'eager'&lt;/code&gt; : Generates no extra chunk. All modules are included in the current chunk and no additional network requests are made. A &lt;code&gt;Promise&lt;/code&gt; is still returned but is already resolved. In contrast to a static import, the module isn't executed until the call to &lt;code&gt;import()&lt;/code&gt; is made.</target>
        </trans-unit>
        <trans-unit id="745bd896e1112def1aedaf368147fb6aa3e20324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'error'&lt;/code&gt; - errors only</source>
          <target state="translated">&lt;code&gt;'error'&lt;/code&gt; - errors only</target>
        </trans-unit>
        <trans-unit id="eaac5b19e71ccedae2548184dae489b3f5ea0cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'errors'&lt;/code&gt; - amount of errors in items;</source>
          <target state="translated">&lt;code&gt;'errors'&lt;/code&gt; - amount of errors in items;</target>
        </trans-unit>
        <trans-unit id="8fda204873b3032e3657887f03e255b342f0ae68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'failed'&lt;/code&gt; - whether the item has failed compilation;</source>
          <target state="translated">&lt;code&gt;'failed'&lt;/code&gt; - whether the item has failed compilation;</target>
        </trans-unit>
        <trans-unit id="f8da0c3f447cc48398a2c43749d1e5a3961a202e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'id'&lt;/code&gt; is the item's id;</source>
          <target state="translated">&lt;code&gt;'id'&lt;/code&gt; is the item's id;</target>
        </trans-unit>
        <trans-unit id="d70a5fd940608617a7f41c4a57ca64a8cb5c3938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'identifier'&lt;/code&gt; - identifier of the item;</source>
          <target state="translated">&lt;code&gt;'identifier'&lt;/code&gt; - identifier of the item;</target>
        </trans-unit>
        <trans-unit id="e3142e6b06d4255afa99c29ff3b3c98bb8f30d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'import'&lt;/code&gt; - uses &lt;code&gt;import()&lt;/code&gt; to load a native EcmaScript module (async module)</source>
          <target state="translated">&lt;code&gt;'import'&lt;/code&gt; - uses &lt;code&gt;import()&lt;/code&gt; to load a native EcmaScript module (async module)</target>
        </trans-unit>
        <trans-unit id="4ba8920d0a1157585f97242622d18d7ed0f6c7cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'index'&lt;/code&gt; - item's processing index;</source>
          <target state="translated">&lt;code&gt;'index'&lt;/code&gt; - item's processing index;</target>
        </trans-unit>
        <trans-unit id="fb81d9125c062a324935d125d887f9700ab009ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'info'&lt;/code&gt; - errors, warnings, and info messages</source>
          <target state="translated">&lt;code&gt;'info'&lt;/code&gt; - errors, warnings, and info messages</target>
        </trans-unit>
        <trans-unit id="49f156233d8703995c492afcec5de9208e9de491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuer'&lt;/code&gt; - an identifier of the issuer;</source>
          <target state="translated">&lt;code&gt;'issuer'&lt;/code&gt; - an identifier of the issuer;</target>
        </trans-unit>
        <trans-unit id="740094b143bd18029074f9b14f05482f50b4d8cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuerId'&lt;/code&gt; - an id of the issuer;</source>
          <target state="translated">&lt;code&gt;'issuerId'&lt;/code&gt; - an id of the issuer;</target>
        </trans-unit>
        <trans-unit id="903437367ea57d5945530f7495000291d07751cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuerName'&lt;/code&gt; - a name of the issuer;</source>
          <target state="translated">&lt;code&gt;'issuerName'&lt;/code&gt; - a name of the issuer;</target>
        </trans-unit>
        <trans-unit id="8e085e651af860f95569bbf7c8b8a007484b696b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuerPath'&lt;/code&gt; - a full issuer object. There's no real need to sort by this field;</source>
          <target state="translated">&lt;code&gt;'issuerPath'&lt;/code&gt; - a full issuer object. There's no real need to sort by this field;</target>
        </trans-unit>
        <trans-unit id="a4b333ff591cbb15e28d64534df03d675dfc2a5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'lazy'&lt;/code&gt; (default): Generates a lazy-loadable chunk for each &lt;code&gt;import()&lt;/code&gt;ed module.</source>
          <target state="translated">&lt;code&gt;'lazy'&lt;/code&gt; (default): Generates a lazy-loadable chunk for each &lt;code&gt;import()&lt;/code&gt; ed module.</target>
        </trans-unit>
        <trans-unit id="8666b8371a057fbd979bfc1c5034ebfac8ffcbda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'lazy-once'&lt;/code&gt;: Generates a single lazy-loadable chunk that can satisfy all calls to &lt;code&gt;import()&lt;/code&gt;. The chunk will be fetched on the first call to &lt;code&gt;import()&lt;/code&gt;, and subsequent calls to &lt;code&gt;import()&lt;/code&gt; will use the same network response. Note that this only makes sense in the case of a partially dynamic statement, e.g. &lt;code&gt;import(`./locales/${language}.json`)&lt;/code&gt;, where multiple module paths that can potentially be requested.</source>
          <target state="translated">&lt;code&gt;'lazy-once'&lt;/code&gt; : Generates a single lazy-loadable chunk that can satisfy all calls to &lt;code&gt;import()&lt;/code&gt; . The chunk will be fetched on the first call to &lt;code&gt;import()&lt;/code&gt; , and subsequent calls to &lt;code&gt;import()&lt;/code&gt; will use the same network response. Note that this only makes sense in the case of a partially dynamic statement, e.g. &lt;code&gt;import(`./locales/${language}.json`)&lt;/code&gt; , where multiple module paths that can potentially be requested.</target>
        </trans-unit>
        <trans-unit id="5b0188b6ce16ec55643943cd70deeaa66fd12606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'log'&lt;/code&gt; - errors, warnings, info messages, log messages, groups, clears. Collapsed groups are displayed in a collapsed state.</source>
          <target state="translated">&lt;code&gt;'log'&lt;/code&gt; - errors, warnings, info messages, log messages, groups, clears. Collapsed groups are displayed in a collapsed state.</target>
        </trans-unit>
        <trans-unit id="167f7af88a4837be8f61f3101f241179e2ba3df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'log'&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; - errors, warnings, info messages, log messages, groups, clears. Collapsed groups are displayed in a collapsed state.</source>
          <target state="translated">&lt;code&gt;'log'&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; - errors, warnings, info messages, log messages, groups, clears. Collapsed groups are displayed in a collapsed state.</target>
        </trans-unit>
        <trans-unit id="486fd79dc3216139aa77a648df90f0201238b279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mock'&lt;/code&gt;: The fixed value &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'mock'&lt;/code&gt; : The fixed value &lt;code&gt;'/'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad0e199cd923e4a1c3a9ddf327baafce49b18b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mock'&lt;/code&gt;: The fixed value &lt;code&gt;'/index.js'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'mock'&lt;/code&gt; : The fixed value &lt;code&gt;'/index.js'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbd33d07af7834c8e2bf7feb1afebd4a865171ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'name'&lt;/code&gt; - a item's name that was assigned to it upon importing;</source>
          <target state="translated">&lt;code&gt;'name'&lt;/code&gt; - a item's name that was assigned to it upon importing;</target>
        </trans-unit>
        <trans-unit id="1b8af8197f416fbb4e5ae9e2ab37a63438af6b31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'none'&lt;/code&gt; - disable logging</source>
          <target state="translated">&lt;code&gt;'none'&lt;/code&gt; - disable logging</target>
        </trans-unit>
        <trans-unit id="e7337e2e23e5df243016aeb437bb516fa8bf6a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'none'&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; - disable logging</source>
          <target state="translated">&lt;code&gt;'none'&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; - disable logging</target>
        </trans-unit>
        <trans-unit id="5b47fba1e27af10e75c217221ad5c1657e78c4fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'optional'&lt;/code&gt; - whether the asset is optional;</source>
          <target state="translated">&lt;code&gt;'optional'&lt;/code&gt; - whether the asset is optional;</target>
        </trans-unit>
        <trans-unit id="2c41efb60bf66f5163d8e5e11a990b75bb9a28a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'pack'&lt;/code&gt;: Store data when compiler is idle in a single file for all cached items</source>
          <target state="translated">&lt;code&gt;'pack'&lt;/code&gt; : Store data when compiler is idle in a single file for all cached items</target>
        </trans-unit>
        <trans-unit id="e5995c43a385876ddbc6779c7e4c4e2f6035b42a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'prefetched'&lt;/code&gt; - whether the asset will be prefetched;</source>
          <target state="translated">&lt;code&gt;'prefetched'&lt;/code&gt; - whether the asset will be prefetched;</target>
        </trans-unit>
        <trans-unit id="1b54947f9c5e6a86db32569551794b07899862e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'promise'&lt;/code&gt; - same as &lt;code&gt;'var'&lt;/code&gt; but awaits the result (async module)</source>
          <target state="translated">&lt;code&gt;'promise'&lt;/code&gt; - same as &lt;code&gt;'var'&lt;/code&gt; but awaits the result (async module)</target>
        </trans-unit>
        <trans-unit id="eda38e73910083dbd2d851742fd5e959177caa4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'script'&lt;/code&gt; - load script exposing predefined global variables with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element</source>
          <target state="translated">&lt;code&gt;'script'&lt;/code&gt; - load script exposing predefined global variables with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element</target>
        </trans-unit>
        <trans-unit id="5b09d857461a566f350e98afe8442d6afa0cbf7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'size'&lt;/code&gt; - a size of item in bytes;</source>
          <target state="translated">&lt;code&gt;'size'&lt;/code&gt; - a size of item in bytes;</target>
        </trans-unit>
        <trans-unit id="5c1ebccc9863f92f4ee8c1b7661416859cddef48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'use-credentials'&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;with credentials&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;'use-credentials'&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;with credentials&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="230e1b622a251fceaadab9915080a0bd40449935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'verbose'&lt;/code&gt; - log everything except debug and trace. Collapsed groups are displayed in expanded state.</source>
          <target state="translated">&lt;code&gt;'verbose'&lt;/code&gt; - log everything except debug and trace. Collapsed groups are displayed in expanded state.</target>
        </trans-unit>
        <trans-unit id="fb70c40f72c89a521ed0c6512a163eccf7f405b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'warn'&lt;/code&gt; - errors and warnings only</source>
          <target state="translated">&lt;code&gt;'warn'&lt;/code&gt; - errors and warnings only</target>
        </trans-unit>
        <trans-unit id="c256dd3d1996b064a261dccf11a256d477921dd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'warning'&lt;/code&gt; - emit warnings instead errors</source>
          <target state="translated">&lt;code&gt;'warning'&lt;/code&gt; - emit warnings instead errors</target>
        </trans-unit>
        <trans-unit id="22fa439861fa988484c7c41f9ea29ed4b888980e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'warnings'&lt;/code&gt; - amount of warnings in items;</source>
          <target state="translated">&lt;code&gt;'warnings'&lt;/code&gt; - amount of warnings in items;</target>
        </trans-unit>
        <trans-unit id="ded2b7c2a7f000de66d5d12224792569e582ef2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'weak'&lt;/code&gt;: Tries to load the module if the module function has already been loaded in some other way (e.g. another chunk imported it or a script containing the module was loaded). A &lt;code&gt;Promise&lt;/code&gt; is still returned, but only successfully resolves if the chunks are already on the client. If the module is not available, the &lt;code&gt;Promise&lt;/code&gt; is rejected. A network request will never be performed. This is useful for universal rendering when required chunks are always manually served in initial requests (embedded within the page), but not in cases where app navigation will trigger an import not initially served.</source>
          <target state="translated">&lt;code&gt;'weak'&lt;/code&gt; : Tries to load the module if the module function has already been loaded in some other way (e.g. another chunk imported it or a script containing the module was loaded). A &lt;code&gt;Promise&lt;/code&gt; is still returned, but only successfully resolves if the chunks are already on the client. If the module is not available, the &lt;code&gt;Promise&lt;/code&gt; is rejected. A network request will never be performed. This is useful for universal rendering when required chunks are always manually served in initial requests (embedded within the page), but not in cases where app navigation will trigger an import not initially served.</target>
        </trans-unit>
        <trans-unit id="73c1f93af8272669899c64463fd71c34b11e0ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ws'&lt;/code&gt; mode will become the default mode in the next major &lt;code&gt;devServer&lt;/code&gt; version. This mode uses &lt;a href=&quot;https://www.npmjs.com/package/ws&quot;&gt;ws&lt;/a&gt; as a server, and native WebSockets on the client.</source>
          <target state="translated">&lt;code&gt;'ws'&lt;/code&gt; mode will become the default mode in the next major &lt;code&gt;devServer&lt;/code&gt; version. This mode uses &lt;a href=&quot;https://www.npmjs.com/package/ws&quot;&gt;ws&lt;/a&gt; as a server, and native WebSockets on the client.</target>
        </trans-unit>
        <trans-unit id="aa02df8659aa48962e047c0b458350f4258cb54d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(assets) =&amp;gt; {}&lt;/code&gt; - Run this specified callback against assets added later by plugins.</source>
          <target state="translated">&lt;code&gt;(assets) =&amp;gt; {}&lt;/code&gt; -나중에 플러그인에 의해 추가 된 자산에 대해이 지정된 콜백을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="562d5b4054a0c406f5fd98f86eff0da3f6af8ed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(lines only)&lt;/code&gt; - Source Maps are simplified to a single mapping per line. This usually means a single mapping per statement (assuming you author is this way). This prevents you from debugging execution on statement level and from settings breakpoints on columns of a line. Combining with minimizing is not possible as minimizers usually only emit a single line.</source>
          <target state="translated">&lt;code&gt;(lines only)&lt;/code&gt; -소스 맵은 라인 당 단일 매핑으로 단순화됩니다. 이것은 일반적으로 명령문마다 단일 맵핑을 의미합니다 (작성한 것으로 가정). 이렇게하면 명령문 레벨에서 실행을 디버그하고 행의 컬럼에서 설정 중단 점을 방지 할 수 있습니다. 최소화 기는 일반적으로 단일 라인 만 방출하므로 최소화와 결합 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ec90877471f4612d98d64d85238cf15fb77d2eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(lines only)&lt;/code&gt; - Source Maps are simplified to a single mapping per line. This usually means a single mapping per statement (assuming you author it this way). This prevents you from debugging execution on statement level and from settings breakpoints on columns of a line. Combining with minimizing is not possible as minimizers usually only emit a single line.</source>
          <target state="translated">&lt;code&gt;(lines only)&lt;/code&gt; - Source Maps are simplified to a single mapping per line. This usually means a single mapping per statement (assuming you author it this way). This prevents you from debugging execution on statement level and from settings breakpoints on columns of a line. Combining with minimizing is not possible as minimizers usually only emit a single line.</target>
        </trans-unit>
        <trans-unit id="482e870d3b738fa303bc274cfb55157c1b373ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(none)&lt;/code&gt; (Omit the &lt;code&gt;devtool&lt;/code&gt; option) - No SourceMap is emitted. This is a good option to start with.</source>
          <target state="translated">&lt;code&gt;(none)&lt;/code&gt; ( &lt;code&gt;devtool&lt;/code&gt; 옵션 생략 ) -SourceMap 이 생성 되지 않습니다. 이것은 시작하기에 좋은 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="d33cd4ba7a368efa85e3c31f8dd4395de4c3a8ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+++&lt;/code&gt; super fast, &lt;code&gt;++&lt;/code&gt; fast, &lt;code&gt;+&lt;/code&gt; pretty fast, &lt;code&gt;o&lt;/code&gt; medium, &lt;code&gt;-&lt;/code&gt; pretty slow, &lt;code&gt;--&lt;/code&gt; slow</source>
          <target state="translated">&lt;code&gt;+++&lt;/code&gt; 슈퍼 빠르고 &lt;code&gt;++&lt;/code&gt; 빠르고 &lt;code&gt;+&lt;/code&gt; 꽤 빨리, &lt;code&gt;o&lt;/code&gt; 매체, &lt;code&gt;-&lt;/code&gt; 아주 천천히, &lt;code&gt;--&lt;/code&gt; 느린</target>
        </trans-unit>
        <trans-unit id="74680ed0790256b280d22a14869c99ad91e1038e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--color&lt;/code&gt;, &lt;code&gt;--colors&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--color&lt;/code&gt; , &lt;code&gt;--colors&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cf9f15213d828b5696d240088ac7abeab369dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--optimize-minimize --define process.env.NODE_ENV=&quot;production&quot;&lt;/code&gt;, see &lt;a href=&quot;../guides/production&quot;&gt;building for production&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--optimize-minimize --define process.env.NODE_ENV=&quot;production&quot;&lt;/code&gt; , &lt;a href=&quot;../guides/production&quot;&gt;제작을위한 빌드&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="e24bc84b66fadfeb411239f148ff3342b1bd095c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch-poll&lt;/code&gt; makes sure that webpack can detect changes in your files. By default webpack listens to events triggered by the filesystem, but VirtualBox has many problems with this.</source>
          <target state="translated">&lt;code&gt;--watch-poll&lt;/code&gt; 은 webpack이 파일의 변경 사항을 감지 할 수 있도록합니다. 기본적으로 webpack은 파일 시스템에 의해 트리거 된 이벤트를 수신하지만 VirtualBox에는 이에 대한 많은 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b38a0ff2ddf14c820a4c9b3d7d62cfdfb2d54a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch-poll&lt;/code&gt; makes sure that webpack can detect changes in your files. By default, webpack listens to events triggered by the filesystem, but VirtualBox has many problems with this.</source>
          <target state="translated">&lt;code&gt;--watch-poll&lt;/code&gt; makes sure that webpack can detect changes in your files. By default, webpack listens to events triggered by the filesystem, but VirtualBox has many problems with this.</target>
        </trans-unit>
        <trans-unit id="2036647ec0cda69b0b80d7ab49ae2431eac0ff67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch-stdin&lt;/code&gt;, &lt;code&gt;--stdin&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--watch-stdin&lt;/code&gt; , &lt;code&gt;--stdin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="043e74d8968e5d3c0e9f3b99ad2398bc4a605915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--watch&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="109b9bbcdad30cee44b5d3c257c4a3336a093a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...args&lt;/code&gt;: Any number of strings, which will be passed to the &lt;code&gt;ProgressPlugin&lt;/code&gt; handler to be reported to the user.</source>
          <target state="translated">&lt;code&gt;...args&lt;/code&gt; : Any number of strings, which will be passed to the &lt;code&gt;ProgressPlugin&lt;/code&gt; handler to be reported to the user.</target>
        </trans-unit>
        <trans-unit id="7071858fb27e19f5f7cd41f7300ad32838311365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...args&lt;/code&gt;: zero or more additional strings describing the current progress</source>
          <target state="translated">&lt;code&gt;...args&lt;/code&gt; : zero or more additional strings describing the current progress</target>
        </trans-unit>
        <trans-unit id="6ed594d5e10b615f210b0ef30673b1508fa99e3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.cjs&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.cjs&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20b8e4bd749ff4351319d9318d1ed5596d3c4430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.custom&lt;/code&gt; accepts a callback that will be called with the loader's instance of &lt;code&gt;babel&lt;/code&gt; so that tooling can ensure that it using exactly the same &lt;code&gt;@babel/core&lt;/code&gt; instance as the loader itself.</source>
          <target state="translated">&lt;code&gt;.custom&lt;/code&gt; 은 로더의 &lt;code&gt;babel&lt;/code&gt; 인스턴스와 함께 호출되는 콜백을 수락 하므로 툴링은 로더 자체 와 정확히 동일한 &lt;code&gt;@babel/core&lt;/code&gt; 인스턴스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="888787651454d8f1e65a12114b3c75dc4dc796df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.mjs&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.mjs&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41e1af2b245dc41d758f020bcc2a64911c922808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.wasm&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.wasm&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14963ecf6ad7c002edadb8c69d3670c641a6aee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/abc/node_modules&lt;/code&gt; may resolve in &lt;code&gt;/node_modules&lt;/code&gt; too.</source>
          <target state="translated">&lt;code&gt;/abc/node_modules&lt;/code&gt; 는 &lt;code&gt;/node_modules&lt;/code&gt; 에서도 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d26d979c561eae92e09fc0d1188700cd5352f64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dist/394.js&lt;/code&gt; - &lt;code&gt;non-initial&lt;/code&gt; chunk</source>
          <target state="translated">&lt;code&gt;/dist/394.js&lt;/code&gt; - &lt;code&gt;non-initial&lt;/code&gt; chunk</target>
        </trans-unit>
        <trans-unit id="263a4653c013f29ac89ab46c529c76481b9ec5ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dist/app.js&lt;/code&gt; - &lt;code&gt;non-initial&lt;/code&gt; chunk</source>
          <target state="translated">&lt;code&gt;/dist/app.js&lt;/code&gt; - &lt;code&gt;non-initial&lt;/code&gt; chunk</target>
        </trans-unit>
        <trans-unit id="6a7877af4a30611b9b195d551501f22478ef21a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dist/main.js&lt;/code&gt; - an &lt;code&gt;initial&lt;/code&gt; chunk</source>
          <target state="translated">&lt;code&gt;/dist/main.js&lt;/code&gt; - an &lt;code&gt;initial&lt;/code&gt; chunk</target>
        </trans-unit>
        <trans-unit id="119d6e0fc6a23d7782e99fb970962b9e7fcef28e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; mode, the compiler performs additional optimizations of modules to produce a much smaller file</source>
          <target state="translated">&lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; mode, the compiler performs additional optimizations of modules to produce a much smaller file</target>
        </trans-unit>
        <trans-unit id="cdf6fac02ff5ff831da6df9fca618cd147e6851b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; mode, the compiler performs additional optimizations of modules to produce a much smaller file, but is not compatible with all input modules.</source>
          <target state="translated">&lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; 모드 인 컴파일러는 모듈을 추가로 최적화하여 훨씬 작은 파일을 생성하지만 모든 입력 모듈과 호환되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="62855480e8f5887d450360e06005751828e0dfb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compilation.hooks.dependencyReference(depRef, dependency, module)&lt;/code&gt; allows to change the references reported by dependencies.</source>
          <target state="translated">&lt;code&gt;Compilation.hooks.dependencyReference(depRef, dependency, module)&lt;/code&gt; 사용하면 종속성이보고 한 참조를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2aa82d419178fddf3e02750edcbd2ca50911602b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Configuration&lt;/code&gt; (recommended)</source>
          <target state="translated">&lt;code&gt;Configuration&lt;/code&gt; (권장)</target>
        </trans-unit>
        <trans-unit id="03ed300ca3fa3b028ef0f08c62d0e25067e7759d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContainerPlugin&lt;/code&gt; (low level)</source>
          <target state="translated">&lt;code&gt;ContainerPlugin&lt;/code&gt; (low level)</target>
        </trans-unit>
        <trans-unit id="3e243c40636add2a8da4c0719ddf6d801c0edbfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContainerReferencePlugin&lt;/code&gt; (low level)</source>
          <target state="translated">&lt;code&gt;ContainerReferencePlugin&lt;/code&gt; (low level)</target>
        </trans-unit>
        <trans-unit id="202bb58d31eea7c7002d0dd93a1c59b9a4bc428e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEBUG&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; (웹 팩별)</target>
        </trans-unit>
        <trans-unit id="a903a99c72821e5ad5521f86d3881de86d82f73f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DllReferencePlugin&lt;/code&gt; and &lt;code&gt;DllPlugin&lt;/code&gt; are used in &lt;em&gt;separate&lt;/em&gt; webpack configs.</source>
          <target state="translated">&lt;code&gt;DllReferencePlugin&lt;/code&gt; 및 &lt;code&gt;DllPlugin&lt;/code&gt; 은 &lt;em&gt;별도의&lt;/em&gt; 웹팩 구성에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fead3480f36d79ea2575501ee41b7cd962519bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Html-minifier-terser&lt;/code&gt; optimisations &lt;a href=&quot;https://github.com/terser/html-minifier-terser#options-quick-reference&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Html-minifier-terser&lt;/code&gt; optimisations &lt;a href=&quot;https://github.com/terser/html-minifier-terser#options-quick-reference&quot;&gt;options&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6da1636ed53558a760aede6cc5d25286d8d687ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JAVA&lt;/code&gt; utilizes the jvm. Utilizes multiple threads for parsing and results in faster compilation for large builds.</source>
          <target state="translated">&lt;code&gt;JAVA&lt;/code&gt; 는 jvm을 사용합니다. 구문 분석을 위해 여러 스레드를 활용하여 대규모 빌드를 위해 더 빠른 컴파일을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="4792b754d26c5c59d610f3069e54479adda5e3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JAVASCRIPT&lt;/code&gt; does not require the JVM to be installed. Not all flags are supported.</source>
          <target state="translated">&lt;code&gt;JAVASCRIPT&lt;/code&gt; 에는 JVM을 설치할 필요가 없습니다. 모든 플래그가 지원되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="30e80df0c709e9e72ed62a20d189ef59d8018c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;options&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ff166c04c48ec0233cb9f2bb0787d73949c5f077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleFederationPlugin&lt;/code&gt; (high level)</source>
          <target state="translated">&lt;code&gt;ModuleFederationPlugin&lt;/code&gt; (high level)</target>
        </trans-unit>
        <trans-unit id="9e96e60a078185d2cac5143b58601890a3280bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NATIVE&lt;/code&gt; only available on linux or MacOS. Faster compilation times without requiring a JVM.</source>
          <target state="translated">&lt;code&gt;NATIVE&lt;/code&gt; 는 Linux 또는 MacOS에서만 사용할 수 있습니다. JVM이 없어도 컴파일 시간이 단축됩니다.</target>
        </trans-unit>
        <trans-unit id="28178b097de21e9538d14b4dcd983907c246d29b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt; is designed for dev mode without the compiler but still supports closure-library style dependencies.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; 은 컴파일러없이 개발 모드 용으로 설계되었지만 클로저 라이브러리 스타일 종속성을 계속 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b8ac967a9621b1931380185fbfce6d80b877b118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoErrorsPlugin&lt;/code&gt; prevents webpack from outputting anything into a bundle. So even ESLint warnings will fail the build. No matter what error settings are used for &lt;code&gt;eslint-loader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NoErrorsPlugin&lt;/code&gt; 은 웹팩 이 번들로 아무것도 출력하지 못하게합니다. 따라서 ESLint 경고조차도 빌드에 실패합니다. &lt;code&gt;eslint-loader&lt;/code&gt; 에 어떤 오류 설정이 사용 되든 상관 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b9a25e2e4db48ce6f8926df52d135a0a324df11d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; with different parameter names</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; with different parameter names</target>
        </trans-unit>
        <trans-unit id="6c1393c55b0d6c9ade57aac82cc7bd6d3400495d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OverridablesPlugin&lt;/code&gt; (low level)</source>
          <target state="translated">&lt;code&gt;OverridablesPlugin&lt;/code&gt; (low level)</target>
        </trans-unit>
        <trans-unit id="6e9f9515193d7bfb4b818832e1cb39a29bf90ffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_ADDITIONAL&lt;/code&gt; - Add additional assets to the compilation.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_ADDITIONAL&lt;/code&gt; - Add additional assets to the compilation.</target>
        </trans-unit>
        <trans-unit id="a2d4fc68d05431b616da08e4d61eba3f030b1d87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_ADDITIONS&lt;/code&gt; - Add additional sections to the existing assets e.g. banner or initialization code.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_ADDITIONS&lt;/code&gt; - Add additional sections to the existing assets e.g. banner or initialization code.</target>
        </trans-unit>
        <trans-unit id="4e8de6f3c89fe1e6afb9d5bdc4fe7c2fd6329859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_ANALYSE&lt;/code&gt; - Analyze the existing assets.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_ANALYSE&lt;/code&gt; - Analyze the existing assets.</target>
        </trans-unit>
        <trans-unit id="7545b184f780677d95918935d3b5ff11d691f3ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_DERIVED&lt;/code&gt; - Derive new assets from the existing assets.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_DERIVED&lt;/code&gt; - Derive new assets from the existing assets.</target>
        </trans-unit>
        <trans-unit id="74a2e30844c8e38f5f09301af12482d8e0ecdd8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_DEV_TOOLING&lt;/code&gt; - Add development tooling to the assets, e.g. by extracting a source map.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_DEV_TOOLING&lt;/code&gt; - Add development tooling to the assets, e.g. by extracting a source map.</target>
        </trans-unit>
        <trans-unit id="2454479c364d825fd7f85ab1ccff37045059376e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE&lt;/code&gt; - Optimize existing assets in a general way.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE&lt;/code&gt; - Optimize existing assets in a general way.</target>
        </trans-unit>
        <trans-unit id="5fb48a5a00ab6a65861e9ef13ceaca391eddebb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY&lt;/code&gt; - Optimize the compatibility of existing assets, e.g. add polyfills or vendor prefixes.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY&lt;/code&gt; - Optimize the compatibility of existing assets, e.g. add polyfills or vendor prefixes.</target>
        </trans-unit>
        <trans-unit id="7a6ddec00eca614fa2bbed70fa06bd77974f60cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT&lt;/code&gt; - Optimize the count of existing assets, e.g. by merging them.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT&lt;/code&gt; - Optimize the count of existing assets, e.g. by merging them.</target>
        </trans-unit>
        <trans-unit id="5405d82941bb9ddcee5a79b66358a5dcbacb0398" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_HASH&lt;/code&gt; - Optimize the hashes of the assets, e.g. by generating real hashes of the asset content.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_HASH&lt;/code&gt; - 자산 콘텐츠의 실제 해시를 생성하여 자산의 해시를 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="d61015295faa4f227352c46aad3c0bc15798a01a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE&lt;/code&gt;5.8.0+ - Optimize the numbers of existing assets, e.g. by inlining assets into other assets.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE&lt;/code&gt; 5.8.0+-예를 들어 자산을 다른 자산에 인라인하여 기존 자산의 수를 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="49f014d23ebe2769526413d403a729768b692926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE&lt;/code&gt; - Optimize the size of existing assets, e.g. by minimizing or omitting whitespace.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE&lt;/code&gt; - Optimize the size of existing assets, e.g. by minimizing or omitting whitespace.</target>
        </trans-unit>
        <trans-unit id="9eacc1712041d96fc4d8045605a6bd847ac65673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER&lt;/code&gt; - Optimize the transfer of existing assets, e.g. by preparing a compressed (gzip) file as separate asset.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER&lt;/code&gt; - Optimize the transfer of existing assets, e.g. by preparing a compressed (gzip) file as separate asset.</target>
        </trans-unit>
        <trans-unit id="d3bdb1dda131eed0a232a0ead4f14a23139a6a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_PRE_PROCESS&lt;/code&gt; - Basic preprocessing of the assets.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_PRE_PROCESS&lt;/code&gt; - Basic preprocessing of the assets.</target>
        </trans-unit>
        <trans-unit id="fa79048722f9a1e5a755f363586eab3caa51d8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_REPORT&lt;/code&gt; - Creating assets for the reporting purposes.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_REPORT&lt;/code&gt; - Creating assets for the reporting purposes.</target>
        </trans-unit>
        <trans-unit id="0a6ea6f43aa5432acb0bf0f17522618f366017a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_SUMMARIZE&lt;/code&gt; - Summarize the list of existing assets.</source>
          <target state="translated">&lt;code&gt;PROCESS_ASSETS_STAGE_SUMMARIZE&lt;/code&gt; - Summarize the list of existing assets.</target>
        </trans-unit>
        <trans-unit id="6643386f297c08e03a5affe3eedd939c311abaf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ProgressPlugin&lt;/code&gt; source</source>
          <target state="translated">&lt;code&gt;ProgressPlugin&lt;/code&gt; source</target>
        </trans-unit>
        <trans-unit id="f1fc679484548dec605995f258e99d27b17f6d89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RealContentHashPlugin&lt;/code&gt; provides a &lt;code&gt;updateHash&lt;/code&gt;5.8.0+ hook for customizing hash updating:</source>
          <target state="translated">&lt;code&gt;RealContentHashPlugin&lt;/code&gt; 은 해시 업데이트를 사용자 정의하기위한 &lt;code&gt;updateHash&lt;/code&gt; 5.8.0+ 후크를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="6a13be8800195b1ae247613979b7334865afb5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp | [RegExp] | function&lt;/code&gt; (since webpack 3.0.0)</source>
          <target state="translated">&lt;code&gt;RegExp | [RegExp] | function&lt;/code&gt; (웹팩 3.0.0부터)</target>
        </trans-unit>
        <trans-unit id="7224bc78410c941922ecec3587e5acb64676fcf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[RegExp]&lt;/code&gt;&lt;code&gt;boolean: true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;[RegExp]&lt;/code&gt; &lt;code&gt;boolean: true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="864248373ed6bd5c2ff3d36d428f4e356b0a0899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[RegExp]&lt;/code&gt;&lt;code&gt;function(resource)&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[RegExp]&lt;/code&gt;&lt;code&gt;function(resource)&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49c76170a126c2f5c086d2049fc1c8f190948a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (WebpackError, Compilation) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;{module?: RegExp, file?: RegExp, message?: RegExp}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;function (WebpackError, Compilation) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;{module?: RegExp, file?: RegExp, message?: RegExp}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc38572e21980590f9673b16cdaf58afe4dedab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c3d0e31ea226eccabd534aff3dbd74376a0ea25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18c1df279d61390f1fd1a1019564542c6252ad8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.exclude&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.resource.exclude&lt;/code&gt;. If you supply a &lt;code&gt;Rule.exclude&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.exclude&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.exclude&lt;/code&gt; 은 바로 가기입니다 &lt;code&gt;Rule.resource.exclude&lt;/code&gt; . 당신이 제공하는 경우 &lt;code&gt;Rule.exclude&lt;/code&gt; 옵션을, 당신은 또한 제공 할 수 없습니다 &lt;code&gt;Rule.resource&lt;/code&gt; 을 . 자세한 내용은 &lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.exclude&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="367be7587744b61962ead151bef09a4940faeeeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.generator.filename&lt;/code&gt; is the same as &lt;a href=&quot;../configuration/output#outputassetmodulefilename&quot;&gt;&lt;code&gt;output.assetModuleFilename&lt;/code&gt;&lt;/a&gt; and works only with &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;asset/resource&lt;/code&gt; module types.</source>
          <target state="translated">&lt;code&gt;Rule.generator.filename&lt;/code&gt; is the same as &lt;a href=&quot;../configuration/output#outputassetmodulefilename&quot;&gt; &lt;code&gt;output.assetModuleFilename&lt;/code&gt; &lt;/a&gt; and works only with &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;asset/resource&lt;/code&gt; module types.</target>
        </trans-unit>
        <trans-unit id="95c2fd22991b702e091599ff77ca84b596ac4c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.include&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.resource.include&lt;/code&gt;. If you supply a &lt;code&gt;Rule.include&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.include&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.include&lt;/code&gt; 은 바로 가기입니다 &lt;code&gt;Rule.resource.include&lt;/code&gt; . 당신이 제공하는 경우 &lt;code&gt;Rule.include&lt;/code&gt; 옵션을, 당신은 또한 제공 할 수 없습니다 &lt;code&gt;Rule.resource&lt;/code&gt; 을 . 자세한 내용은 &lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.include&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="873da3f0fb8d8990054c6533b3e9dcc0dd47ae86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loader&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.use: [ { loader } ]&lt;/code&gt;. See &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.loader&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.loader&lt;/code&gt; 는 Rule.use 의 바로 가기입니다 &lt;code&gt;Rule.use: [ { loader } ]&lt;/code&gt; . 자세한 내용은 &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#useentry&quot;&gt; &lt;code&gt;UseEntry.loader&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49812a9699acb3a5794171cd2de1acae86ab9e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loader&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.use: [ { loader } ]&lt;/code&gt;. See &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.loader&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.loader&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.use: [ { loader } ]&lt;/code&gt; . See &lt;a href=&quot;#ruleuse&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt; &lt;code&gt;UseEntry.loader&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="74399e349d6d60baea232f75cbb348cefe394a18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loaders&lt;/code&gt; is an alias to &lt;code&gt;Rule.use&lt;/code&gt;. See &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.loaders&lt;/code&gt; 는 별칭입니다 &lt;code&gt;Rule.use&lt;/code&gt; . 자세한 내용은 &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="83d75e016bed7ac91a91f867957878c9c081b4ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loaders&lt;/code&gt; is an alias to &lt;code&gt;Rule.use&lt;/code&gt;. See &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.loaders&lt;/code&gt; is an alias to &lt;code&gt;Rule.use&lt;/code&gt; . See &lt;a href=&quot;#ruleuse&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="e7537d2841057c70de45e9d86c4324c33d4ae319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.options&lt;/code&gt; / &lt;code&gt;Rule.query&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Rule.options&lt;/code&gt; / &lt;code&gt;Rule.query&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="286c9e55caf8942a4d47ecbf1ee013b22939c9f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.options&lt;/code&gt; and &lt;code&gt;Rule.query&lt;/code&gt; are shortcuts to &lt;code&gt;Rule.use: [ { options } ]&lt;/code&gt;. See &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.options&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.options&lt;/code&gt; 및 &lt;code&gt;Rule.query&lt;/code&gt; 는 Rule.use 의 바로 가기입니다 &lt;code&gt;Rule.use: [ { options } ]&lt;/code&gt; . 자세한 내용은 &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#useentry&quot;&gt; &lt;code&gt;UseEntry.options&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3b24e336bbb51e2e1aa1deb5fd12539d34c6c7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.options&lt;/code&gt; and &lt;code&gt;Rule.query&lt;/code&gt; are shortcuts to &lt;code&gt;Rule.use: [ { options } ]&lt;/code&gt;. See &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.options&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.options&lt;/code&gt; and &lt;code&gt;Rule.query&lt;/code&gt; are shortcuts to &lt;code&gt;Rule.use: [ { options } ]&lt;/code&gt; . See &lt;a href=&quot;#ruleuse&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt; &lt;code&gt;UseEntry.options&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="4f1c70605d4fc4d35d9468d78990b33e69364ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.query&lt;/code&gt; is deprecated in favor of &lt;code&gt;Rule.options&lt;/code&gt; and &lt;code&gt;UseEntry.options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rule.query&lt;/code&gt; 는 &lt;code&gt;Rule.options&lt;/code&gt; 및 &lt;code&gt;UseEntry.options&lt;/code&gt; 를 위해 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5af16bc0b32e2c09fdb94061ac4ca6a9df1640a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.resolve&lt;/code&gt; is Available since webpack 4.36.1</source>
          <target state="translated">&lt;code&gt;Rule.resolve&lt;/code&gt; is Available since webpack 4.36.1</target>
        </trans-unit>
        <trans-unit id="c7af3e30a306d64aaa46fbd004e39487342dc740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.test&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.resource.test&lt;/code&gt;. If you supply a &lt;code&gt;Rule.test&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.test&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.test&lt;/code&gt; 은 바로 가기입니다 &lt;code&gt;Rule.resource.test&lt;/code&gt; . 당신이 제공하는 경우 &lt;code&gt;Rule.test&lt;/code&gt; 옵션을, 당신은 또한 제공 할 수 없습니다 &lt;code&gt;Rule.resource&lt;/code&gt; 을 . 자세한 내용은 &lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.test&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="228dec491de7c1dd05ed2c1d6d64fecd964c4066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.type&lt;/code&gt; sets the type for a matching module. This prevents defaultRules and their default importing behaviors from occurring. For example, if you want to load a &lt;code&gt;.json&lt;/code&gt; file through a custom loader, you'd need to set the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;javascript/auto&lt;/code&gt; to bypass webpack's built-in json importing. (See &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.0.0&quot;&gt;v4.0 changelog&lt;/a&gt; for more details)</source>
          <target state="translated">&lt;code&gt;Rule.type&lt;/code&gt; sets the type for a matching module. This prevents defaultRules and their default importing behaviors from occurring. For example, if you want to load a &lt;code&gt;.json&lt;/code&gt; file through a custom loader, you'd need to set the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;javascript/auto&lt;/code&gt; to bypass webpack's built-in json importing. (See &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.0.0&quot;&gt;v4.0 changelog&lt;/a&gt; for more details)</target>
        </trans-unit>
        <trans-unit id="9198a9dc378a1badf83931f8acc95782d3586d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.use&lt;/code&gt; can also be a function which receives the object argument describing the module being loaded, and must return an array of &lt;code&gt;UseEntry&lt;/code&gt; items.</source>
          <target state="translated">&lt;code&gt;Rule.use&lt;/code&gt; can also be a function which receives the object argument describing the module being loaded, and must return an array of &lt;code&gt;UseEntry&lt;/code&gt; items.</target>
        </trans-unit>
        <trans-unit id="68d1265a21ee3e407982c2d74302cef8eb77b1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.use&lt;/code&gt; can be an array of &lt;a href=&quot;#useentry&quot;&gt;UseEntry&lt;/a&gt; which are applied to modules. Each entry specifies a loader to be used.</source>
          <target state="translated">&lt;code&gt;Rule.use&lt;/code&gt; can be an array of &lt;a href=&quot;#useentry&quot;&gt;UseEntry&lt;/a&gt; which are applied to modules. Each entry specifies a loader to be used.</target>
        </trans-unit>
        <trans-unit id="d678dcd8f077c8d5ea22bbae00466e575b9678d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt; mode, closure-compiler is used as a direct replacement for other minifiers as well as most Babel transformations.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; 모드, 클로저-컴파일러는 대부분의 Babel 변환뿐만 아니라 다른 축소 기의 직접 대체로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="555e8a84e7cb2e3cbd2aa88710b270828465f096" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Watching&lt;/code&gt; options are covered in detail &lt;a href=&quot;../configuration/watch#watchoptions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Watching&lt;/code&gt; 옵션은 &lt;a href=&quot;../configuration/watch#watchoptions&quot;&gt;여기&lt;/a&gt; 에서 자세히 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="797da69b1d1619e1fcc2cb3026a1a0df36d984a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&amp;lt;hashType&amp;gt;:contenthash:&amp;lt;digestType&amp;gt;:&amp;lt;length&amp;gt;]&lt;/code&gt; optionally you can configure</source>
          <target state="translated">&lt;code&gt;[&amp;lt;hashType&amp;gt;:contenthash:&amp;lt;digestType&amp;gt;:&amp;lt;length&amp;gt;]&lt;/code&gt; 선택적으로 구성 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="68e5172c85fcd649990318efdbe0362190aea3ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;Foo&quot;);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2015fa69213ee22491a6747e4a537351c9305998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;export { Foo };&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;export { Foo };&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf9ba16d3e2896a454cabf2acad783f6dff5ac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;Foo&quot;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="735fefd891a4abadd1dfc9049ab8f03a310b858f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[TerserPlugin]&lt;/code&gt; and or &lt;code&gt;[function (compiler)]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[TerserPlugin]&lt;/code&gt; and or &lt;code&gt;[function (compiler)]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81bf15e7c455d116d9aa172d5b3387599e1f587b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[UseEntry]&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[UseEntry]&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05510c6820be22f1e1b7be2e27bdf878f39fb822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[name]]&lt;/code&gt; - generates ES module named exports and exports a variable equal to the filename, for &lt;code&gt;single.js&lt;/code&gt; it will be &lt;code&gt;single&lt;/code&gt;, generates &lt;code&gt;export { single };&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[[name]]&lt;/code&gt; - generates ES module named exports and exports a variable equal to the filename, for &lt;code&gt;single.js&lt;/code&gt; it will be &lt;code&gt;single&lt;/code&gt; , generates &lt;code&gt;export { single };&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8002469920998414c3afafafd171b4ee61643bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[alias]&lt;/code&gt; - alias of an exported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;[alias]&lt;/code&gt; - alias of an exported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="cd268088ecb10b68f2605e866c1afe1adcdd859e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[alias]&lt;/code&gt; - alias of an imported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;[alias]&lt;/code&gt; - alias of an imported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="d7e377db11c90d5aa883e3507bb8839126c178a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[base]&lt;/code&gt; is replaced with the base (&lt;code&gt;[name]&lt;/code&gt; + &lt;code&gt;[ext]&lt;/code&gt;) of the original asset (&lt;code&gt;image.png&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[base]&lt;/code&gt; is replaced with the base ( &lt;code&gt;[name]&lt;/code&gt; + &lt;code&gt;[ext]&lt;/code&gt; ) of the original asset ( &lt;code&gt;image.png&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="46458afd2058120775d26ee90cfa597dadfe4008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[contenthash]&lt;/code&gt; - md4-hash of the output file content (e.g. &lt;code&gt;[contenthash].js&lt;/code&gt; -&amp;gt; &lt;code&gt;4ea6ff1de66c537eb9b2.js&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;[contenthash]&lt;/code&gt; - md4-hash of the output file content (e.g. &lt;code&gt;[contenthash].js&lt;/code&gt; -&amp;gt; &lt;code&gt;4ea6ff1de66c537eb9b2.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9faca4658462c59f773376f3e22b3f0d0cd29784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[contenthash]&lt;/code&gt; hash of the content of the extracted file</source>
          <target state="translated">&lt;code&gt;[contenthash]&lt;/code&gt; 추출 된 파일 내용의 해시</target>
        </trans-unit>
        <trans-unit id="aa7859d33ece0661c4292eb8b309525bc8857ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[default ./my-lib Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;./my-lib&quot;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[default ./my-lib Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;./my-lib&quot;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca1868e7369bd7de15aa77ed8d523594995a95c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[default Foo]&lt;/code&gt; - generates &lt;code&gt;export default Foo;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[default Foo]&lt;/code&gt; - generates &lt;code&gt;export default Foo;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a431391573c3fb19352570fa78dc0c09501314e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[default Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[default Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;Foo&quot;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4bf9fd8ae5007c6de2d45a6cf89aec087879ab1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[ext]&lt;/code&gt; is replaced with the extension of the original asset, included &lt;code&gt;.&lt;/code&gt; (&lt;code&gt;.png&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[ext]&lt;/code&gt; is replaced with the extension of the original asset, included &lt;code&gt;.&lt;/code&gt; ( &lt;code&gt;.png&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="03b9ac66d0ba96a38c0710fa8b35a65b177111ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[file]&lt;/code&gt; equals &lt;code&gt;[path][base]&lt;/code&gt;. &lt;code&gt;[base]&lt;/code&gt; equals &lt;code&gt;[name][ext]&lt;/code&gt;. The full path is &lt;code&gt;[path][name][ext][query][fragment]&lt;/code&gt; or &lt;code&gt;[path][base][query][fragment]&lt;/code&gt; or &lt;code&gt;[file][query][fragment]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[file]&lt;/code&gt; equals &lt;code&gt;[path][base]&lt;/code&gt; . &lt;code&gt;[base]&lt;/code&gt; equals &lt;code&gt;[name][ext]&lt;/code&gt; . The full path is &lt;code&gt;[path][name][ext][query][fragment]&lt;/code&gt; or &lt;code&gt;[path][base][query][fragment]&lt;/code&gt; or &lt;code&gt;[file][query][fragment]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36cc595f01f4c842f8b1a31a6f502c09430a83f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[file]&lt;/code&gt; is replaced with the path of original asset (&lt;code&gt;assets/images/image.png&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[file]&lt;/code&gt; is replaced with the path of original asset ( &lt;code&gt;assets/images/image.png&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2943018ff8a5b66d057adc579f4dc17f6f07920d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fragment]&lt;/code&gt; is replaced with the fragment (in the concept of URL it is called &lt;code&gt;hash&lt;/code&gt;) of the original asset (&lt;code&gt;#hash&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[fragment]&lt;/code&gt; is replaced with the fragment (in the concept of URL it is called &lt;code&gt;hash&lt;/code&gt; ) of the original asset ( &lt;code&gt;#hash&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e332fe48fe42ff54aff304e1d4224ece359e305f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fullhash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;/&lt;code&gt;[contenthash]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[fullhash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;/&lt;code&gt;[contenthash]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b1ba8fdc61582c0949ee7b5d0a47e8e4a8598f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[hash]&lt;/code&gt; is the only available placeholder, the default being:</source>
          <target state="translated">&lt;code&gt;[hash]&lt;/code&gt; 는 사용 가능한 유일한 자리 표시 자이며 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae5a41e3a881e4abb348880cb08e5dec0eae01aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[hash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[hash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="264b6561c47cfca13b2c42e338b76ab60aae937f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[id]&lt;/code&gt; - chunk id (e.g. &lt;code&gt;[id].js&lt;/code&gt; -&amp;gt; &lt;code&gt;485.js&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;[id]&lt;/code&gt; - chunk id (e.g. &lt;code&gt;[id].js&lt;/code&gt; -&amp;gt; &lt;code&gt;485.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d374466b3663fff8300417da7ad9dcb41a4570fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[id]&lt;/code&gt; number of the chunk</source>
          <target state="translated">&lt;code&gt;[id]&lt;/code&gt; 청크 수</target>
        </trans-unit>
        <trans-unit id="7b4d373eb47d785d5390c065c6abcdf6e0f17e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[moduleName]&lt;/code&gt; - name of an imported module (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;[moduleName]&lt;/code&gt; - name of an imported module (&lt;strong&gt;required&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="2a9455c124e2530b4cb5eef5046e53eb7ec2d55e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[multiple Foo FooA Bar]&lt;/code&gt; - generates &lt;code&gt;const { FooA: Bar } = require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[multiple Foo FooA Bar]&lt;/code&gt; - generates &lt;code&gt;const { FooA: Bar } = require(&quot;Foo&quot;);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b89dd5c0ccb4b93cfa48030ee13aaf5f5838f3f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[multiple Foo FooA]&lt;/code&gt; - generates &lt;code&gt;module.exports = { 'FooA': Foo };&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[multiple Foo FooA]&lt;/code&gt; - generates &lt;code&gt;module.exports = { 'FooA': Foo };&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acc6f964df9ac8b3c1ce5cd1eb69ea13dcc91183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[multiple Foo]&lt;/code&gt; - generates &lt;code&gt;module.exports = { Foo };&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[multiple Foo]&lt;/code&gt; - generates &lt;code&gt;module.exports = { Foo };&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eea7df1dbec445188828785e02bb4ce7e0602c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; - chunk name (e.g. &lt;code&gt;[name].js&lt;/code&gt; -&amp;gt; &lt;code&gt;app.js&lt;/code&gt;). If a chunk has no name, then its id will be used</source>
          <target state="translated">&lt;code&gt;[name]&lt;/code&gt; - chunk name (e.g. &lt;code&gt;[name].js&lt;/code&gt; -&amp;gt; &lt;code&gt;app.js&lt;/code&gt; ). If a chunk has no name, then its id will be used</target>
        </trans-unit>
        <trans-unit id="83aac4da0162f14fcfecada77dc674aa5a950d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; - name of an exported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;[name]&lt;/code&gt; - name of an exported value (&lt;strong&gt;required&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="a13e1b6d22285bc17b6ba9075d15c3a588c55a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; - name of an imported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;[name]&lt;/code&gt; - name of an imported value (&lt;strong&gt;required&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="9fbad4b9aad114ef59445d47851aa5273ac5a131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; is replaced with the name of the original asset (&lt;code&gt;image&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[name]&lt;/code&gt; is replaced with the name of the original asset ( &lt;code&gt;image&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e1d4ef39f5bf44a3c7f52fba0d88a5157fca95f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; name of the chunk</source>
          <target state="translated">&lt;code&gt;[name]&lt;/code&gt; 청크 이름</target>
        </trans-unit>
        <trans-unit id="9aa3439d73cad916b4e1beb7dd0334edfa1741ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo FooA Bar]&lt;/code&gt; - generates &lt;code&gt;import { FooA as Bar } from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[named Foo FooA Bar]&lt;/code&gt; - generates &lt;code&gt;import { FooA as Bar } from &quot;Foo&quot;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9374375a37c88b4c843f1bc49c65fa32b2f7a722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo FooA]&lt;/code&gt; - generates &lt;code&gt;export { Foo as FooA };&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[named Foo FooA]&lt;/code&gt; - generates &lt;code&gt;export { Foo as FooA };&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8eb753435847b254d0bf78ad79da3731afdd4353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo FooA]&lt;/code&gt; - generates &lt;code&gt;import { FooA } from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[named Foo FooA]&lt;/code&gt; - generates &lt;code&gt;import { FooA } from &quot;Foo&quot;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea0491c63df7c32f468c865b1bd2f2085e5abaa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo]&lt;/code&gt; - generates &lt;code&gt;export { Foo };&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[named Foo]&lt;/code&gt; - generates &lt;code&gt;export { Foo };&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="096845bedc66a05c0759bb235b0b9256fc810b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named [name] [name]Alias]&lt;/code&gt; - generates ES module named exports and exports a value equal to the filename under other name., for &lt;code&gt;single.js&lt;/code&gt; it will be &lt;code&gt;single&lt;/code&gt; and &lt;code&gt;singleAlias&lt;/code&gt;, generates &lt;code&gt;export { single as singleAlias };&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[named [name] [name]Alias]&lt;/code&gt; - generates ES module named exports and exports a value equal to the filename under other name., for &lt;code&gt;single.js&lt;/code&gt; it will be &lt;code&gt;single&lt;/code&gt; and &lt;code&gt;singleAlias&lt;/code&gt; , generates &lt;code&gt;export { single as singleAlias };&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fcecc31074862fc50489155e4a6bc71f5809fe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[namespace Foo FooA]&lt;/code&gt; - generates &lt;code&gt;import * as FooA from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[namespace Foo FooA]&lt;/code&gt; - generates &lt;code&gt;import * as FooA from &quot;Foo&quot;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b32c01b347b593f8684cfa9015850c59fbd2df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[path]&lt;/code&gt; is replaced with the directories to the original asset, included trailing &lt;code&gt;/&lt;/code&gt; (&lt;code&gt;assets/images/&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[path]&lt;/code&gt; is replaced with the directories to the original asset, included trailing &lt;code&gt;/&lt;/code&gt; ( &lt;code&gt;assets/images/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a9d8b2eb65fe6b80205a1ff4bdaf7f63ec334691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure Foo]&lt;/code&gt; - generates &lt;code&gt;require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[pure Foo]&lt;/code&gt; - generates &lt;code&gt;require(&quot;Foo&quot;);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49f5350f2a41fad8407c83e3b5a18ff7729afe7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[query]&lt;/code&gt; is replaced with the query of the original asset, included &lt;code&gt;?&lt;/code&gt; (&lt;code&gt;?foo=bar&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;[query]&lt;/code&gt; is replaced with the query of the original asset, included &lt;code&gt;?&lt;/code&gt; ( &lt;code&gt;?foo=bar&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2726c5f0acb57b339b63d72da3a5e8d30fc8ca3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[side-effects Foo]&lt;/code&gt; - generates &lt;code&gt;import &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[side-effects Foo]&lt;/code&gt; - generates &lt;code&gt;import &quot;Foo&quot;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff128124c2b2ee2c7002dd01bf141fa6e3079258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[single ./my-lib Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;./my-lib&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[single ./my-lib Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;./my-lib&quot;);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01ff85863c00eaa83d0ebd9c34b1e005e2810122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[single Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[single Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;Foo&quot;);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1f5c9f8447badde545cf49af61f08a2cb50bf4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[single Foo]&lt;/code&gt; - generates &lt;code&gt;module.exports = Foo;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[single Foo]&lt;/code&gt; - generates &lt;code&gt;module.exports = Foo;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51340a433fd6ec8064e6d364a217e30c00dddcde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[string]&lt;/code&gt; values are supported since webpack 5.</source>
          <target state="translated">&lt;code&gt;[string]&lt;/code&gt; values are supported since webpack 5.</target>
        </trans-unit>
        <trans-unit id="d1953dfa36de0fabf0fbd0ba8dbf8ecc5c1540c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[syntax]&lt;/code&gt; (&lt;strong&gt;may be omitted&lt;/strong&gt;) -</source>
          <target state="translated">&lt;code&gt;[syntax]&lt;/code&gt; (&lt;strong&gt;may be omitted&lt;/strong&gt;) -</target>
        </trans-unit>
        <trans-unit id="4c51a5349bc6a276690b2aa895701e01b298894d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[syntax]&lt;/code&gt; (&lt;strong&gt;may be omitted&lt;/strong&gt;):</source>
          <target state="translated">&lt;code&gt;[syntax]&lt;/code&gt; (&lt;strong&gt;may be omitted&lt;/strong&gt;):</target>
        </trans-unit>
        <trans-unit id="a8fec964e1f9eb15741755d5508a571a6c9c9cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__dirname&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;__dirname&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="84d77b7f65e9e009125274191be0b27428b5ac9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__filename&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;__filename&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="23c15da06fd7a7f63a9d35d802b1683e4db2a68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__non_webpack_require__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__non_webpack_require__&lt;/code&gt; (웹 팩별)</target>
        </trans-unit>
        <trans-unit id="8470a68145d2ac9158dd50104a394f75d815dde8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__resourceQuery&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__resourceQuery&lt;/code&gt; (웹 팩별)</target>
        </trans-unit>
        <trans-unit id="4c30f4c5816c323c88f387fb000aab647b140c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_chunk_load__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_chunk_load__&lt;/code&gt; (웹 팩별)</target>
        </trans-unit>
        <trans-unit id="27e7b404ebd6a9560b1b5b6dc6a96c748ebf2f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.provideInfo&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.provideInfo&lt;/code&gt; is</target>
        </trans-unit>
        <trans-unit id="bf80561eb0f6342f38c18f678d3d0394c9e9037c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.useInfo&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.useInfo&lt;/code&gt; is</target>
        </trans-unit>
        <trans-unit id="4e7602a0530ba8b4963175da4d97b364eb470455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.used&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; when the export is known to be unused, &lt;code&gt;true&lt;/code&gt; otherwise</source>
          <target state="translated">&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.used&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; when the export is known to be unused, &lt;code&gt;true&lt;/code&gt; otherwise</target>
        </trans-unit>
        <trans-unit id="da153536bb80951ec0be7a742c42a599fcf6daad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_exports_info__&lt;/code&gt; (webpack-specific)</target>
        </trans-unit>
        <trans-unit id="144bd4c15f9c2b4a39af68eefb366d2fee65ee56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__&lt;/code&gt; is always &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;__webpack_exports_info__&lt;/code&gt; is always &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d912b1d534d5fe785a2f54219a5cb8360248b053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_hash__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_hash__&lt;/code&gt; (웹팩 특정)</target>
        </trans-unit>
        <trans-unit id="79263deede02323cd9297eb6ce4086a316f554df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_is_included__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_is_included__&lt;/code&gt; (웹팩 특정)</target>
        </trans-unit>
        <trans-unit id="961764c1c9b528db09e0bc0e9ab6b705ee542acd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_modules__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_modules__&lt;/code&gt; (웹 팩별)</target>
        </trans-unit>
        <trans-unit id="6abe3184dbfefa910d98d0b151a14e6652ef855c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_public_path__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_public_path__&lt;/code&gt; (웹 팩별)</target>
        </trans-unit>
        <trans-unit id="504ce52dca3d794c571abc954f8275c3d8ec3d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_require__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_require__&lt;/code&gt; (웹 팩별)</target>
        </trans-unit>
        <trans-unit id="b7e2e46ccb6efb471594a64e5bb07aba7fd97aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept&lt;/code&gt; (self)</source>
          <target state="translated">&lt;code&gt;accept&lt;/code&gt; (자체)</target>
        </trans-unit>
        <trans-unit id="4f5bf49eb0b4076b436009f7f644e6234a0ae61b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activeModules&lt;/code&gt; (&lt;code&gt;boolean = false&lt;/code&gt;): Shows active modules count and one active module in progress message.</source>
          <target state="translated">&lt;code&gt;activeModules&lt;/code&gt; ( &lt;code&gt;boolean = false&lt;/code&gt; ): Shows active modules count and one active module in progress message.</target>
        </trans-unit>
        <trans-unit id="3ae237cee9b440f6cfebe760110c91a69735afb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;additionalChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</source>
          <target state="translated">&lt;code&gt;additionalChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</target>
        </trans-unit>
        <trans-unit id="fb40784a33ba7b9189d3a29e8630980621e1faa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;additionalChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS_ASSETS_STAGE_* as a stage option)</source>
          <target state="translated">&lt;code&gt;additionalChunkAssets&lt;/code&gt; 는 더 이상 사용되지 않습니다 ( 대신 &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; 를 사용하고 Compilation.PROCESS_ASSETS_STAGE_ * 중 하나를 단계 옵션으로 사용).</target>
        </trans-unit>
        <trans-unit id="6cdc8496bc960e7026fe4cef90de98fb07953ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;afterOptimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</source>
          <target state="translated">&lt;code&gt;afterOptimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</target>
        </trans-unit>
        <trans-unit id="27efec66da2960f0c0aaff05814a359788360bb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;afterOptimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS_ASSETS_STAGE_* as a stage option)</source>
          <target state="translated">&lt;code&gt;afterOptimizeChunkAssets&lt;/code&gt; 는 더 이상 사용되지 않습니다 ( 대신 &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; 를 사용하고 Compilation.PROCESS_ASSETS_STAGE_ * 중 하나를 단계 옵션으로 사용).</target>
        </trans-unit>
        <trans-unit id="3e4d5530df28aa0ffc75efa29576baf6c219894d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;algorithm&lt;/code&gt;: Can be a &lt;code&gt;function(buf, callback)&lt;/code&gt; or a string. For a string the algorithm is taken from &lt;code&gt;zopfli&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;algorithm&lt;/code&gt; : &lt;code&gt;function(buf, callback)&lt;/code&gt; 또는 문자열 일 수 있습니다. 문자열의 경우 알고리즘은 &lt;code&gt;zopfli&lt;/code&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="5fd80f137fbd6b0170b52a093435b80d1119177d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; - alias of an exported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; - alias of an exported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="68afdc0532b230f353764b6168c3a7d63eab1573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; - alias of an imported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; - alias of an imported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="798b3b030c60d93a5463dcfb8685042d391b9d05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular2-template-loader&lt;/code&gt; Loads and compiles &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; Components</source>
          <target state="translated">&lt;code&gt;angular2-template-loader&lt;/code&gt; &lt;a href=&quot;https://angular.io/&quot;&gt;앵귤러&lt;/a&gt; 컴포넌트 로드 및 컴파일</target>
        </trans-unit>
        <trans-unit id="792546deb258c081da8dad551cd8b9f0761a9423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Appends the given value to the original asset. Usually the &lt;code&gt;#sourceMappingURL&lt;/code&gt; comment. &lt;code&gt;[url]&lt;/code&gt; is replaced with a URL to the source map file. &lt;code&gt;false&lt;/code&gt; disables the appending.</source>
          <target state="translated">&lt;code&gt;append&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : 주어진 값을 원래 자산에 추가합니다. 일반적으로 &lt;code&gt;#sourceMappingURL&lt;/code&gt; 주석입니다. &lt;code&gt;[url]&lt;/code&gt; 은 소스 맵 파일의 URL로 대체됩니다. &lt;code&gt;false&lt;/code&gt; 는 추가를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="3f5d838ec8f1d431172b641708861583c953d2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Appends the given value to the original asset. Usually the &lt;code&gt;#sourceMappingURL&lt;/code&gt; comment. &lt;code&gt;[url]&lt;/code&gt; is replaced with a URL to the source map file. Since webpack v4.36.0, path parameters are supported: &lt;code&gt;[chunk]&lt;/code&gt;, &lt;code&gt;[filename]&lt;/code&gt; and &lt;code&gt;[contenthash]&lt;/code&gt;. Setting &lt;code&gt;append&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; disables the appending.</source>
          <target state="translated">&lt;code&gt;append&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): Appends the given value to the original asset. Usually the &lt;code&gt;#sourceMappingURL&lt;/code&gt; comment. &lt;code&gt;[url]&lt;/code&gt; is replaced with a URL to the source map file. Since webpack v4.36.0, path parameters are supported: &lt;code&gt;[chunk]&lt;/code&gt; , &lt;code&gt;[filename]&lt;/code&gt; and &lt;code&gt;[contenthash]&lt;/code&gt; . Setting &lt;code&gt;append&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; disables the appending.</target>
        </trans-unit>
        <trans-unit id="e5bc41d8773a40d703415aecdfbb7da74d60905d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/json&lt;/code&gt;, &lt;code&gt;text/javascript&lt;/code&gt;, &lt;code&gt;application/javascript&lt;/code&gt;, &lt;code&gt;application/node&lt;/code&gt; and &lt;code&gt;application/wasm&lt;/code&gt; are already included by default as mimetype.</source>
          <target state="translated">&lt;code&gt;application/json&lt;/code&gt; , &lt;code&gt;text/javascript&lt;/code&gt; , &lt;code&gt;application/javascript&lt;/code&gt; , &lt;code&gt;application/node&lt;/code&gt; and &lt;code&gt;application/wasm&lt;/code&gt; are already included by default as mimetype.</target>
        </trans-unit>
        <trans-unit id="cf3470e82870c47a2233ebfcbca810e29f0ef282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (assetName) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (assetName) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array = []: string | RegExp | function (assetName) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;function (assetName) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9986d2b3f7e878d58cf33b232c87e6edce4cfb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (assetName) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (assetName) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array = []: string | RegExp | function (assetName) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;function (assetName) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;boolean: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ab2529b96d0c90a3027f5031f9fb33b4543caf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (name) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (name) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array = []: string | RegExp | function (name) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;function (name) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b54e3c22d55ee642ada3cfefd1caf790db6fe5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (warning) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (warning) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array = []: string | RegExp | function (warning) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;function (warning) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="772d108d7742440e2315dfb4c0e3843590596276" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset/inline&lt;/code&gt; exports a data URI of the asset. Previously achievable by using &lt;code&gt;url-loader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asset/inline&lt;/code&gt; exports a data URI of the asset. Previously achievable by using &lt;code&gt;url-loader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7633a7550414e8346935a2904ab446a9706a171c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset/resource&lt;/code&gt; emits a separate file and exports the URL. Previously achievable by using &lt;code&gt;file-loader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asset/resource&lt;/code&gt; emits a separate file and exports the URL. Previously achievable by using &lt;code&gt;file-loader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74676c0571c05b81da408a55b8d1441d32815ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset/source&lt;/code&gt; exports the source code of the asset. Previously achievable by using &lt;code&gt;raw-loader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asset/source&lt;/code&gt; exports the source code of the asset. Previously achievable by using &lt;code&gt;raw-loader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e89d77272f4dc73a8eccc9e0b8e9ccee4c0ec23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset&lt;/code&gt; automatically chooses between exporting a data URI and emitting a separate file. Previously achievable by using &lt;code&gt;url-loader&lt;/code&gt; with asset size limit.</source>
          <target state="translated">&lt;code&gt;asset&lt;/code&gt; automatically chooses between exporting a data URI and emitting a separate file. Previously achievable by using &lt;code&gt;url-loader&lt;/code&gt; with asset size limit.</target>
        </trans-unit>
        <trans-unit id="e8f61b56f9775a9b07b1bfe1f5c1a512be1b694a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset&lt;/code&gt;: The target asset name. &lt;code&gt;[file]&lt;/code&gt; is replaced with the original asset. &lt;code&gt;[path]&lt;/code&gt; is replaced with the path of the original asset and &lt;code&gt;[query]&lt;/code&gt; with the query. Defaults to &lt;code&gt;&quot;[path].gz[query]&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asset&lt;/code&gt; : 대상 자산 이름입니다. &lt;code&gt;[file]&lt;/code&gt; 이 원래 자산으로 바뀝니다. &lt;code&gt;[path]&lt;/code&gt; 는 원래 자산의 경로로 대체되고 &lt;code&gt;[query]&lt;/code&gt; 는 쿼리 로 대체됩니다 . 기본값은 &lt;code&gt;&quot;[path].gz[query]&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7f626084612ba9af11aa02c8893c20fa17fa558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assetInfo&lt;/code&gt; - additional asset information</source>
          <target state="translated">&lt;code&gt;assetInfo&lt;/code&gt; - additional asset information</target>
        </trans-unit>
        <trans-unit id="4dd05084e80e7961b073aa7a177717407499a64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assetInfoUpdateOrFunction&lt;/code&gt; - new asset info or function converting old to new</source>
          <target state="translated">&lt;code&gt;assetInfoUpdateOrFunction&lt;/code&gt; - new asset info or function converting old to new</target>
        </trans-unit>
        <trans-unit id="d36692d08dd04659b90cb0c183c861ff437c84ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncWebAssembly&lt;/code&gt;: Support the new WebAssembly according to the &lt;a href=&quot;https://github.com/WebAssembly/esm-integration&quot;&gt;updated specification&lt;/a&gt;, it makes a WebAssembly module an async module</source>
          <target state="translated">&lt;code&gt;asyncWebAssembly&lt;/code&gt; : Support the new WebAssembly according to the &lt;a href=&quot;https://github.com/WebAssembly/esm-integration&quot;&gt;updated specification&lt;/a&gt;, it makes a WebAssembly module an async module</target>
        </trans-unit>
        <trans-unit id="49780beb7c47143f4ba4e4f72fd20045be959952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-loader&lt;/code&gt; exposes a loader-builder utility that allows users to add custom handling of Babel's configuration for each file that it processes.</source>
          <target state="translated">&lt;code&gt;babel-loader&lt;/code&gt; 는 사용자가 처리하는 각 파일에 대해 Babel 구성의 사용자 정의 처리를 추가 할 수있는 로더 작성기 유틸리티를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a85183f418926f14a0922d986d8feeee56b0b216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel&lt;/code&gt;: Pass in a custom &lt;code&gt;babel-core&lt;/code&gt; instead. Default: &lt;code&gt;require(&quot;babel-core&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;babel&lt;/code&gt; : 대신 사용자 지정 &lt;code&gt;babel-core&lt;/code&gt; 를 전달하십시오. 기본값 : &lt;code&gt;require(&quot;babel-core&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a884729fb23d470cbec928a7342d772f840552fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babelrc&lt;/code&gt;: Default &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;false&lt;/code&gt;, no options from &lt;code&gt;.babelrc&lt;/code&gt; files will be used; only the options passed to &lt;code&gt;babel-loader&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;babelrc&lt;/code&gt; : 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 때 &lt;code&gt;false&lt;/code&gt; , 아무런 옵션 &lt;code&gt;.babelrc&lt;/code&gt; 파일은 사용되지 않습니다; &lt;code&gt;babel-loader&lt;/code&gt; 에 전달 된 옵션 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6bc28bfcc57fe3d265083e5a9d5176f914bf6cf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backend&lt;/code&gt;: Customize the backend, defaults to &lt;code&gt;webpack/lib/hmr/lazyCompilationBackend&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;backend&lt;/code&gt; : 백엔드를 맞춤 설정합니다. 기본값은 &lt;code&gt;webpack/lib/hmr/lazyCompilationBackend&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7642382d960d2d2b09122b1fe5753801121a1120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bail&lt;/code&gt; - whether to bail or not when an error occurs.</source>
          <target state="translated">&lt;code&gt;bail&lt;/code&gt; - whether to bail or not when an error occurs.</target>
        </trans-unit>
        <trans-unit id="690cc9966b631e5b01ffbfa474afd2f719712549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - block tie for &lt;code&gt;Chunk&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; - block tie for &lt;code&gt;Chunk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d1db437d6409195cbf1fd3b4b6a34941ac2b09f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - dependency block.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; - dependency block.</target>
        </trans-unit>
        <trans-unit id="1d99689e93d67b73236a1549a5b6c6496833ad16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocks&lt;/code&gt; - a set of dependency blocks to report from.</source>
          <target state="translated">&lt;code&gt;blocks&lt;/code&gt; - a set of dependency blocks to report from.</target>
        </trans-unit>
        <trans-unit id="c66d7d0de12a47a0f955a9629d9aa0099a8aac8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;function (compilerConfig) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;function (compilerConfig) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea9efe2781b9c5769e39fb806d3c72a568a365f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;function (filePath) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;function (filePath) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8515a4c2a5332e69951dbe155a63fe52a3114b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;function (module, chunks, cacheGroupKey) =&amp;gt; string&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;function (module, chunks, cacheGroupKey) =&amp;gt; string&lt;/code&gt; &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14c075dd7f13acc5bfaef10e4661f09d935d81bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="211fcf728ee69cf5072f473b6122b5135621b77c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;object: { errors boolean = false, warnings boolean = false }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;object: { errors boolean = false, warnings boolean = false }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="778e26251d2908c22444be14b30b3e99cc90b015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abdb7401067bc2f95b1ee79c0d898f0e78ddda3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'anonymous' | 'use-credentials'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;string: 'anonymous' | 'use-credentials'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="861fa025dd684502a81d42eb5b8afa03a4cd6241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'natural' | 'named' | 'deterministic' | 'size'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;string: 'natural' | 'named' | 'deterministic' | 'size'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52c9489ce0524d42ce224157e4961388681d3f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'natural' | 'named' | 'size' | 'total-size' | 'deterministic' &lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;string: 'natural' | 'named' | 'size' | 'total-size' | 'deterministic' &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ad5fb885c03a7700f7b08cff50172c72c54b469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'natural' | 'named' | 'size' | 'total-size' | 'deterministic'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'natural' | 'named' | 'size' | 'total-size' | 'deterministic'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="330c087d84e3902b1076a54c734bb13b049ad794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d8093c9075407574fbf593767fc5157b86172de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = false&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dbebbccc437a41676417d5bba726e9f908790d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = true&lt;/code&gt;&lt;code&gt;string = 'auto'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = true&lt;/code&gt; &lt;code&gt;string = 'auto'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0af2c3611cef5952bd1bd415996e340791b9924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = true&lt;/code&gt;&lt;code&gt;string: 'flag'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = true&lt;/code&gt; &lt;code&gt;string: 'flag'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="caec5a0807bcff895735eaa40403293e4860f901" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = true&lt;/code&gt;&lt;code&gt;string: 'global'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean = true&lt;/code&gt; &lt;code&gt;string: 'global'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50744a25d2868778b635318c2f55c183227d21f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean: false&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean: false&lt;/code&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b16a90a830191ec5bbb4b9b56ddb8f96d867657e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean: false&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean: false&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; &lt;code&gt;[string]&lt;/code&gt; &lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94e10ac85f5f9bddc0ab12c8be99298bfc5b4319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean: true&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean: true&lt;/code&gt; &lt;code&gt;function&lt;/code&gt; &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b90f6bf68d6871fa01d4f179af246aa41f9708aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt; (since webpack 3.1.0)</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; (웹팩 3.1.0부터)</target>
        </trans-unit>
        <trans-unit id="77ce23cc5bdfec10477c422ac41d461b485678b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;function (module)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;function (module)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e868289ed64280fae08519e316807bffbf4e883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33da9fab0b4b53f772b31ae8a9d70da1f9e4cd60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bec3919ac51ad4b9a3a65a4e3c4694d1c22f7807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string = &quot;auto&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string = &quot;auto&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af7d3fab5372b829d1691b4f3b4352ac58730da3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string: 'deterministic' | 'size'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;string: 'deterministic' | 'size'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="906baf8a8075d3014669735804f94a57b128088e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string: 'mock' | 'eval-only'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; &lt;code&gt;string: 'mock' | 'eval-only'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26e66bfc53301feacf65bf412bd63e668c6fb5e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="437c4090ec82119c0eb95098c2d8c950be0c5114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67b97847bcd6b9637ed909772802d29a33a0cbe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;{ dry?: boolean, keep?: RegExp | string | ((filename: string) =&amp;gt; boolean) }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;{ dry?: boolean, keep?: RegExp | string | ((filename: string) =&amp;gt; boolean) }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9390d54bb9906cf4784a018e4cab407ff614f199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean=true&lt;/code&gt;&lt;code&gt;string: 'verbose'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean=true&lt;/code&gt;&lt;code&gt;string: 'verbose'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51288f849bc5342c30f5661bc700fad511b54b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browser&lt;/code&gt;: Compatible with current Spec and stage 4 proposals at time of publishing the package. Polyfilling resp. transpiling must be handled on consumer side.</source>
          <target state="translated">&lt;code&gt;browser&lt;/code&gt; : Compatible with current Spec and stage 4 proposals at time of publishing the package. Polyfilling resp. transpiling must be handled on consumer side.</target>
        </trans-unit>
        <trans-unit id="f59726f760b50534420a868125aaf560fe991bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:/path/to/config:modern&lt;/code&gt; - explicitly specify browserslist config and an environment</source>
          <target state="translated">&lt;code&gt;browserslist:/path/to/config:modern&lt;/code&gt; - explicitly specify browserslist config and an environment</target>
        </trans-unit>
        <trans-unit id="4a2045c7a0d7e3feb6d4d6383bc5abb74607aa06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:/path/to/config&lt;/code&gt; - explicitly specify browserslist config</source>
          <target state="translated">&lt;code&gt;browserslist:/path/to/config&lt;/code&gt; - explicitly specify browserslist config</target>
        </trans-unit>
        <trans-unit id="ba1ae5ea25d4cbd4b2b75df412a2ec610709401c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:last 2 versions&lt;/code&gt; - use an explicit browserslist query (config will be ignored)</source>
          <target state="translated">&lt;code&gt;browserslist:last 2 versions&lt;/code&gt; - use an explicit browserslist query (config will be ignored)</target>
        </trans-unit>
        <trans-unit id="219aece5575a1c62c8de17e7afc928b1ae415e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:modern&lt;/code&gt; - use &lt;code&gt;modern&lt;/code&gt; environment from automatically resolved browserslist config</source>
          <target state="translated">&lt;code&gt;browserslist:modern&lt;/code&gt; - use &lt;code&gt;modern&lt;/code&gt; environment from automatically resolved browserslist config</target>
        </trans-unit>
        <trans-unit id="6c19b86f12941e482590277582587c66e6fedbb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist&lt;/code&gt; - use automatically resolved browserslist config and environment (from the nearest &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;BROWSERSLIST&lt;/code&gt; environment variable, see &lt;a href=&quot;https://github.com/browserslist/browserslist#queries&quot;&gt;browserslist documentation&lt;/a&gt; for details)</source>
          <target state="translated">&lt;code&gt;browserslist&lt;/code&gt; - use automatically resolved browserslist config and environment (from the nearest &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;BROWSERSLIST&lt;/code&gt; environment variable, see &lt;a href=&quot;https://github.com/browserslist/browserslist#queries&quot;&gt;browserslist documentation&lt;/a&gt; for details)</target>
        </trans-unit>
        <trans-unit id="3d38862bb688db87eee654f8041144c91cd6c1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buble-loader&lt;/code&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;buble-loader&lt;/code&gt; &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;를&lt;/a&gt; 사용하여 ES2015 + 코드를로드하고 ES5로 변환</target>
        </trans-unit>
        <trans-unit id="db8e8ed8dbde81dc1e225d85bc5ad5a8e712987f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;building&lt;/code&gt;: time to build the module (e.g. loaders and parsing)</source>
          <target state="translated">&lt;code&gt;building&lt;/code&gt; : 모듈 구축 시간 (예 : 로더 및 파싱)</target>
        </trans-unit>
        <trans-unit id="ec0ff384b43116996c321dc6fd7c07798bbd6a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundled code&lt;/code&gt; - You see all generated code as a big blob of code. You don't see modules separated from each other.</source>
          <target state="translated">&lt;code&gt;bundled code&lt;/code&gt; -생성 된 모든 코드를 큰 코드로 볼 수 있습니다. 모듈이 서로 분리되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e6ac8d3ebfd8baed8754691b26c933e61c95930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache-loader&lt;/code&gt;: The cache can be shared between multiple compilations.</source>
          <target state="translated">&lt;code&gt;cache-loader&lt;/code&gt; : 여러 컴파일간에 캐시를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fb5e53e48fdb59199e15d2689051744ebffc079" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.buildDependencies&lt;/code&gt; is an object of arrays of additional code dependencies for the build. webpack will use a hash of each of these items and all dependencies to invalidate the filesystem cache.</source>
          <target state="translated">&lt;code&gt;cache.buildDependencies&lt;/code&gt; is an object of arrays of additional code dependencies for the build. webpack will use a hash of each of these items and all dependencies to invalidate the filesystem cache.</target>
        </trans-unit>
        <trans-unit id="187120357b0c618475152b5c3a3624b0fe74dd56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.cacheDirectory&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cache.cacheDirectory&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt; &lt;code&gt;cache.type&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16c4b2653fa91040b52d15b97ad96201418c39c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.hashAlgorithm&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cache.hashAlgorithm&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt; &lt;code&gt;cache.type&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ab62e2aa422d60ae4dd2f5b910debedeb8ea8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.idleTimeout&lt;/code&gt; is only available when &lt;a href=&quot;#cachestore&quot;&gt;&lt;code&gt;cache.store&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'pack'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cache.idleTimeout&lt;/code&gt; is only available when &lt;a href=&quot;#cachestore&quot;&gt; &lt;code&gt;cache.store&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;'pack'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96e754f7cbf21e54693facf7097fc4d9560471cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is only available when &lt;a href=&quot;#cachestore&quot;&gt;&lt;code&gt;cache.store&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'pack'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is only available when &lt;a href=&quot;#cachestore&quot;&gt; &lt;code&gt;cache.store&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;'pack'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c917db5584cc51e6b206a48d7b2aeb444c9238b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.managedPaths&lt;/code&gt; is an array of package-manager only managed paths. webpack will avoid hashing and timestamping them, assume the version is unique and will use it as a snapshot (for both memory and filesystem cache).</source>
          <target state="translated">&lt;code&gt;cache.managedPaths&lt;/code&gt; is an array of package-manager only managed paths. webpack will avoid hashing and timestamping them, assume the version is unique and will use it as a snapshot (for both memory and filesystem cache).</target>
        </trans-unit>
        <trans-unit id="c2e117d2735b12b54a004b8110f2730b3189e236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.name&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cache.name&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt; &lt;code&gt;cache.type&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab78a1a86a87bd59b2d85fb88f07b89b2eca950b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.store&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cache.store&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt; &lt;code&gt;cache.type&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe8c1d266b381a04dacb43d2d1151fbafaa3f60f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.store&lt;/code&gt; tells webpack when to store data on the file system.</source>
          <target state="translated">&lt;code&gt;cache.store&lt;/code&gt; tells webpack when to store data on the file system.</target>
        </trans-unit>
        <trans-unit id="8b4a8d6a353025310be6d6af347a40976f1894aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.version&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cache.version&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt; &lt;code&gt;cache.type&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fb1a81730a9a109c17ae843851373bc820e1d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache&lt;/code&gt; (default: false)</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; (기본값 : false)</target>
        </trans-unit>
        <trans-unit id="6215ac974d81a73c6b717b785223abbca99053c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheCompression&lt;/code&gt;: Default &lt;code&gt;true&lt;/code&gt;. When set, each Babel transform output will be compressed with Gzip. If you want to opt-out of cache compression, set it to &lt;code&gt;false&lt;/code&gt; -- your project may benefit from this if it transpiles thousands of files.</source>
          <target state="translated">&lt;code&gt;cacheCompression&lt;/code&gt; : Default &lt;code&gt;true&lt;/code&gt; . When set, each Babel transform output will be compressed with Gzip. If you want to opt-out of cache compression, set it to &lt;code&gt;false&lt;/code&gt; -- your project may benefit from this if it transpiles thousands of files.</target>
        </trans-unit>
        <trans-unit id="de9aece0def1219e41de3e75bbacafbe66678c7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheDirectory&lt;/code&gt;: Default &lt;code&gt;false&lt;/code&gt;. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is blank (&lt;code&gt;loader: 'babel-loader?cacheDirectory'&lt;/code&gt;) or &lt;code&gt;true&lt;/code&gt; (&lt;code&gt;loader: babel-loader?cacheDirectory=true&lt;/code&gt;) the loader will use the default cache directory in &lt;code&gt;node_modules/.cache/babel-loader&lt;/code&gt; or fallback to the default OS temporary file directory if no &lt;code&gt;node_modules&lt;/code&gt; folder could be found in any root directory.</source>
          <target state="translated">&lt;code&gt;cacheDirectory&lt;/code&gt; : 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. 설정되면 주어진 디렉토리는 로더 결과를 캐시하는 데 사용됩니다. 향후 웹팩 빌드는 각 실행에서 잠재적으로 비싼 Babel 재 컴파일 프로세스를 실행할 필요가 없도록 캐시에서 읽습니다. 값이 비어 있으면 ( &lt;code&gt;loader: 'babel-loader?cacheDirectory'&lt;/code&gt; ) &lt;code&gt;true&lt;/code&gt; ( &lt;code&gt;loader: babel-loader?cacheDirectory=true&lt;/code&gt; ) 로더는 &lt;code&gt;node_modules/.cache/babel-loader&lt;/code&gt; 의 기본 캐시 디렉토리를 사용 하거나 루트 디렉토리에 &lt;code&gt;node_modules&lt;/code&gt; 폴더가 없는 경우 기본 OS 임시 파일 디렉토리</target>
        </trans-unit>
        <trans-unit id="6ad288ac0f7d22dde9b3b90a8e12e4a938a5ee73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheDirectory&lt;/code&gt;: Default &lt;code&gt;false&lt;/code&gt;. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is set to &lt;code&gt;true&lt;/code&gt; in options (&lt;code&gt;{cacheDirectory: true}&lt;/code&gt;), the loader will use the default cache directory in &lt;code&gt;node_modules/.cache/babel-loader&lt;/code&gt; or fallback to the default OS temporary file directory if no &lt;code&gt;node_modules&lt;/code&gt; folder could be found in any root directory.</source>
          <target state="translated">&lt;code&gt;cacheDirectory&lt;/code&gt; : Default &lt;code&gt;false&lt;/code&gt; . When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is set to &lt;code&gt;true&lt;/code&gt; in options ( &lt;code&gt;{cacheDirectory: true}&lt;/code&gt; ), the loader will use the default cache directory in &lt;code&gt;node_modules/.cache/babel-loader&lt;/code&gt; or fallback to the default OS temporary file directory if no &lt;code&gt;node_modules&lt;/code&gt; folder could be found in any root directory.</target>
        </trans-unit>
        <trans-unit id="5f4a40b61235a2d9b226c84ba349d9b70f09993f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheGroup&lt;/code&gt; - &lt;code&gt;cacheGroup&lt;/code&gt; of the module</source>
          <target state="translated">&lt;code&gt;cacheGroup&lt;/code&gt; - &lt;code&gt;cacheGroup&lt;/code&gt; of the module</target>
        </trans-unit>
        <trans-unit id="065a328d0842a2f967687cfa678c0a61195b1bce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheGroup&lt;/code&gt; - &lt;code&gt;cacheGroup&lt;/code&gt; of the module.</source>
          <target state="translated">&lt;code&gt;cacheGroup&lt;/code&gt; - &lt;code&gt;cacheGroup&lt;/code&gt; of the module.</target>
        </trans-unit>
        <trans-unit id="1fe5bec35c5389628bc7b8e8c40b7f03759b4f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheIdentifier&lt;/code&gt;: Default is a string composed by the &lt;code&gt;@babel/core&lt;/code&gt;'s version, the &lt;code&gt;babel-loader&lt;/code&gt;'s version, the contents of &lt;code&gt;.babelrc&lt;/code&gt; file if it exists, and the value of the environment variable &lt;code&gt;BABEL_ENV&lt;/code&gt; with a fallback to the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable. This can be set to a custom value to force cache busting if the identifier changes.</source>
          <target state="translated">&lt;code&gt;cacheIdentifier&lt;/code&gt; : Default is a string composed by the &lt;code&gt;@babel/core&lt;/code&gt; 's version, the &lt;code&gt;babel-loader&lt;/code&gt; 's version, the contents of &lt;code&gt;.babelrc&lt;/code&gt; file if it exists, and the value of the environment variable &lt;code&gt;BABEL_ENV&lt;/code&gt; with a fallback to the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable. This can be set to a custom value to force cache busting if the identifier changes.</target>
        </trans-unit>
        <trans-unit id="87e1de1b0e740946cabb42449c45c017841ef6aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheIdentifier&lt;/code&gt;: Default is a string composed by the babel-core's version, the babel-loader's version, the contents of .babelrc file if it exists and the value of the environment variable &lt;code&gt;BABEL_ENV&lt;/code&gt; with a fallback to the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable. This can be set to a custom value to force cache busting if the identifier changes.</source>
          <target state="translated">&lt;code&gt;cacheIdentifier&lt;/code&gt; 가 : 기본은 바벨 코어 버전으로 구성된 문자열, 바벨 - 로더의 버전, .babelrc 파일의 내용이 존재하는 경우 환경 변수의 값 &lt;code&gt;BABEL_ENV&lt;/code&gt; 받는 대체와 &lt;code&gt;NODE_ENV&lt;/code&gt; 의 환경 변수. 식별자가 변경되면 캐시 무효화를 강제로 수행하도록 사용자 지정 값으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54fba91058b69e5100d1b98cd10df7f95c49f5e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback(require)&lt;/code&gt; A callback function called once the chunk is loaded.</source>
          <target state="translated">&lt;code&gt;callback(require)&lt;/code&gt; 청크가로드되면 호출되는 콜백 함수입니다.</target>
        </trans-unit>
        <trans-unit id="bcf3be8328eecf5d9291f2ab9c9804af832b9cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; (&lt;code&gt;function (err, result, type)&lt;/code&gt;): Callback function used to indicate how the module should be externalized.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; ( &lt;code&gt;function (err, result, type)&lt;/code&gt; ): Callback function used to indicate how the module should be externalized.</target>
        </trans-unit>
        <trans-unit id="75d4cdf7a565b60134d26c77fbdcaa6f26b6a361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when addEntry finishes.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - function to be invoked when addEntry finishes.</target>
        </trans-unit>
        <trans-unit id="f16efca48afc1385c59f335e14fc764ef76dd473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when dependencies of the module had been processed.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - function to be invoked when dependencies of the module had been processed.</target>
        </trans-unit>
        <trans-unit id="8fde087bdcac07a7d17d8c477973da24cfc4f973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been finished.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been finished.</target>
        </trans-unit>
        <trans-unit id="9f90a4f82789029ed00f133e8308cc3ac413f47f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been sealed.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been sealed.</target>
        </trans-unit>
        <trans-unit id="6ae6f2379fe1e3f34ef3b441a48c3b69bc9b347a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been unsealed.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been unsealed.</target>
        </trans-unit>
        <trans-unit id="b9e6b5ad289322fc3042423b6b41197cb8b223e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to invoke after adding the module dependencies.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - function to invoke after adding the module dependencies.</target>
        </trans-unit>
        <trans-unit id="3608fae3f29710b6e877d8ba978d9e051df0cd33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - module callback that sends a module up one level.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - module callback that sends a module up one level.</target>
        </trans-unit>
        <trans-unit id="55e431ec57b31c24f61db1975d286af8a14ac145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - the function to be invoked.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; - the function to be invoked.</target>
        </trans-unit>
        <trans-unit id="f288048e33b77b3a315e88c8f02ad343c1a8ed59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is a normal Node.js-style callback function giving the resolved path.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 은 해결 된 경로를 제공하는 일반적인 Node.js 스타일 콜백 함수입니다.</target>
        </trans-unit>
        <trans-unit id="5bb6b1e711dd26e7d133f3b17e1b2dd21bb7f0b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;: A function that webpack will execute once the dependencies are loaded. An implementation of the &lt;code&gt;require&lt;/code&gt; function is sent as a parameter to this function. The function body can use this to further &lt;code&gt;require()&lt;/code&gt; modules it needs for execution.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; : 종속성이로드되면 웹팩이 실행되는 함수입니다. &lt;code&gt;require&lt;/code&gt; 함수 의 구현은 이 함수에 매개 변수로 전송됩니다. 함수 본문은 이것을 사용 하여 실행에 필요한 모듈 을 추가 &lt;code&gt;require()&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3f22118c50f5bc8e9a0298afdaff998debae1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-eval-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-source-map&lt;/code&gt;, each module is executed with &lt;code&gt;eval()&lt;/code&gt;. It is &quot;cheap&quot; because it doesn't have column mappings, it only maps line numbers. It ignores SourceMaps from Loaders and only display transpiled code similar to the &lt;code&gt;eval&lt;/code&gt; devtool.</source>
          <target state="translated">&lt;code&gt;cheap-eval-source-map&lt;/code&gt; - 유사 &lt;code&gt;eval-source-map&lt;/code&gt; , 각각의 모듈로 실행 &lt;code&gt;eval()&lt;/code&gt; . 열 매핑이 없기 때문에 &quot;저렴한&quot;상태이며 행 번호 만 매핑합니다. 로더의 SourceMap을 무시하고 &lt;code&gt;eval&lt;/code&gt; devtool 과 유사한 변환 된 코드 만 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="c1b92c4b745e5d3d836bc24b7ac7a5d3723cee83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-module-eval-source-map&lt;/code&gt; - Similar to &lt;code&gt;cheap-eval-source-map&lt;/code&gt;, however, in this case Source Maps from Loaders are processed for better results. However Loader Source Maps are simplified to a single mapping per line.</source>
          <target state="translated">&lt;code&gt;cheap-module-eval-source-map&lt;/code&gt; - &lt;code&gt;cheap-eval-source-map&lt;/code&gt; 과 유사 하지만이 경우 로더의 소스 맵이 더 나은 결과를 위해 처리됩니다. 그러나 로더 소스 맵은 라인 당 단일 맵핑으로 단순화됩니다.</target>
        </trans-unit>
        <trans-unit id="f13fa4c96080548353fed64f6941c5f5b4d4861d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-module-source-map&lt;/code&gt; - A SourceMap without column-mappings that simplifies loader Source Maps to a single mapping per line.</source>
          <target state="translated">&lt;code&gt;cheap-module-source-map&lt;/code&gt; map-열 매핑이없는 SourceMap은 로더 소스 맵을 한 줄에 단일 매핑으로 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="df7285414f5418fb615da687c047bd96b7085e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-source-map&lt;/code&gt; - A SourceMap without column-mappings ignoring loader Source Maps.</source>
          <target state="translated">&lt;code&gt;cheap-source-map&lt;/code&gt; map-로더 소스 맵을 무시하고 열 매핑이없는 SourceMap입니다.</target>
        </trans-unit>
        <trans-unit id="193def4dfdedce1582b9e1ed822b6b04e65a3b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap&lt;/code&gt; has not column information and minimizer generate only a single line, which leave only a single mapping.</source>
          <target state="translated">&lt;code&gt;cheap&lt;/code&gt; has not column information and minimizer generate only a single line, which leave only a single mapping.</target>
        </trans-unit>
        <trans-unit id="ee1ad7bb12d1bec1b65b33da88ae9e8f30b750fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkContext (context)&lt;/code&gt; was &lt;strong&gt;removed in webpack 5&lt;/strong&gt; as &lt;code&gt;checkResource&lt;/code&gt; already gets context.</source>
          <target state="translated">&lt;code&gt;checkContext (context)&lt;/code&gt; was &lt;strong&gt;removed in webpack 5&lt;/strong&gt; as &lt;code&gt;checkResource&lt;/code&gt; already gets context.</target>
        </trans-unit>
        <trans-unit id="049234677581919db8641baf77ac06247deb26e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkResource (resource, context)&lt;/code&gt; A Filter function that receives &lt;code&gt;resource&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; as arguments, must return boolean.</source>
          <target state="translated">&lt;code&gt;checkResource (resource, context)&lt;/code&gt; A Filter function that receives &lt;code&gt;resource&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; as arguments, must return boolean.</target>
        </trans-unit>
        <trans-unit id="bff73bfa0aca1196061d7c698005f32e3b24d15c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk&lt;/code&gt; - a chunk to patch tie.</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; - a chunk to patch tie.</target>
        </trans-unit>
        <trans-unit id="77f2bd21aa1a74e66f0858e13e7c090e510f06d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk&lt;/code&gt; - a chunk to remove from dependencies.</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; - a chunk to remove from dependencies.</target>
        </trans-unit>
        <trans-unit id="f614bffd1237acc7f21ad391d17339ded1248023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunkId&lt;/code&gt; The id for the chunk to load.</source>
          <target state="translated">&lt;code&gt;chunkId&lt;/code&gt; 로드 할 청크의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="0ff26499361a89f435e8639ba5141eeba0a7b005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunkName&lt;/code&gt;: A name given to the chunk created by this particular &lt;code&gt;require.ensure()&lt;/code&gt;. By passing the same &lt;code&gt;chunkName&lt;/code&gt; to various &lt;code&gt;require.ensure()&lt;/code&gt; calls, we can combine their code into a single chunk, resulting in only one bundle that the browser must load.</source>
          <target state="translated">&lt;code&gt;chunkName&lt;/code&gt; :이 특정 &lt;code&gt;require.ensure()&lt;/code&gt; 의해 생성 된 청크에 부여 된 이름 . 동일한 &lt;code&gt;chunkName&lt;/code&gt; 을 다양한 &lt;code&gt;require.ensure()&lt;/code&gt; 호출에 전달함으로써 코드를 단일 청크로 결합하여 브라우저가로드해야하는 하나의 번들 만 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95f8b5fd9b756185dd294195a96b20006571276f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client&lt;/code&gt;: Path to a custom client, defaults to &lt;code&gt;webpack/hot/lazy-compilation-{node|web}.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;client&lt;/code&gt; : 커스텀 클라이언트의 경로, 기본값은 &lt;code&gt;webpack/hot/lazy-compilation-{node|web}.js&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e9dba8a3205d94acdf36605f745791765e28402d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;columns = true&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether column mappings should be used.</source>
          <target state="translated">&lt;code&gt;columns = true&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ): Indicates whether column mappings should be used.</target>
        </trans-unit>
        <trans-unit id="d411a8c567e2ceddad9237b8b3830613706ffd50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;columns&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether column mappings should be used (defaults to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;columns&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ) : 열 맵핑을 사용해야하는지 여부를 나타냅니다 (기본값은 &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6439e694c858d8e4b698784c26742e8ffed593b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comments&lt;/code&gt;: Preserve Comments. Default: &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt;, falsy value to remove all comments. Accepts function, object with property test (regex), and values.</source>
          <target state="translated">&lt;code&gt;comments&lt;/code&gt; : 의견을 유지합니다. 기본값 : &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; , 잘못된 설명은 모든 주석을 제거합니다. 함수, 속성 테스트 (정규식)가있는 객체 및 값을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="08472ea55b5a59b3f31ce4fe08e4f9fcb8450c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler&lt;/code&gt;: The current webpack compiler (can be undefined)</source>
          <target state="translated">&lt;code&gt;compiler&lt;/code&gt; : The current webpack compiler (can be undefined)</target>
        </trans-unit>
        <trans-unit id="bc31dc16692ce244c00698aa7ec17e33adc64f05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/Breadcrumbs.js&lt;/code&gt;: No export is used, not flagged with sideEffects -&amp;gt; exclude it. This also excluded all dependencies like &lt;code&gt;components/Breadcrumbs.css&lt;/code&gt; even if they are flagged with sideEffects.</source>
          <target state="translated">&lt;code&gt;components/Breadcrumbs.js&lt;/code&gt; : No export is used, not flagged with sideEffects -&amp;gt; exclude it. This also excluded all dependencies like &lt;code&gt;components/Breadcrumbs.css&lt;/code&gt; even if they are flagged with sideEffects.</target>
        </trans-unit>
        <trans-unit id="f0bfaad02acac6a388234f62bfc849d34fc50f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/Button.css&lt;/code&gt;: No export is used, but flagged with sideEffects -&amp;gt; include it</source>
          <target state="translated">&lt;code&gt;components/Button.css&lt;/code&gt; : No export is used, but flagged with sideEffects -&amp;gt; include it</target>
        </trans-unit>
        <trans-unit id="915311b78374edb4f7d63eb1c2d1d31266bc44d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/Button.js&lt;/code&gt;: Direct export is used, not flagged with sideEffects -&amp;gt; include it</source>
          <target state="translated">&lt;code&gt;components/Button.js&lt;/code&gt; : Direct export is used, not flagged with sideEffects -&amp;gt; include it</target>
        </trans-unit>
        <trans-unit id="a4ae1cfdc78510c44c64de8878f08d40730b76fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/index.js&lt;/code&gt;: No direct export is used, not flagged with sideEffects, but reexported exports are used -&amp;gt; skip over</source>
          <target state="translated">&lt;code&gt;components/index.js&lt;/code&gt; : No direct export is used, not flagged with sideEffects, but reexported exports are used -&amp;gt; skip over</target>
        </trans-unit>
        <trans-unit id="bda6b352492d8da22987857c998bc2ef6ec18b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config-loader&lt;/code&gt; supports configuration modules which export an &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Promise&lt;/code&gt;, and &lt;code&gt;Function&lt;/code&gt; which returns a &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config-loader&lt;/code&gt; 수출 지원 구성 모듈 &lt;code&gt;Object&lt;/code&gt; , &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Function&lt;/code&gt; , &lt;code&gt;Promise&lt;/code&gt; 및 &lt;code&gt;Function&lt;/code&gt; 반환 &lt;code&gt;Promise&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e9cf0a3baa9e13e768dd9993de1a4d46d8bbad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configName&lt;/code&gt; allows you to customize the name of your configuration file. For example you can name it &lt;code&gt;webpack.base.js&lt;/code&gt; instead of the default &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;configName&lt;/code&gt; allows you to customize the name of your configuration file. For example you can name it &lt;code&gt;webpack.base.js&lt;/code&gt; instead of the default &lt;code&gt;webpack.config.js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f5ecd2312853e4c0d5f979c736315a1014faf801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configure.js&lt;/code&gt;: No export is used, but flagged with sideEffects -&amp;gt; include it</source>
          <target state="translated">&lt;code&gt;configure.js&lt;/code&gt; : No export is used, but flagged with sideEffects -&amp;gt; include it</target>
        </trans-unit>
        <trans-unit id="8779b6dc0f5d35f47dd22c916d5cbaa6f46af351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const logging = require('webpack/lib/logging/runtime')&lt;/code&gt;: to use the logger in runtime, require it directly from webpack</source>
          <target state="translated">&lt;code&gt;const logging = require('webpack/lib/logging/runtime')&lt;/code&gt; : to use the logger in runtime, require it directly from webpack</target>
        </trans-unit>
        <trans-unit id="76f8a6007f133257c7fb6f281a67fa289c30f485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content&lt;/code&gt; (optional): the mappings from request to module id (defaults to &lt;code&gt;manifest.content&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; (선택 사항) : 요청에서 모듈 ID 로의 맵핑 (기본값은 &lt;code&gt;manifest.content&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3859806df548eb7c1b3893de25006e28dfc126a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content&lt;/code&gt; - file content (require)</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; - file content (require)</target>
        </trans-unit>
        <trans-unit id="aa98c4ba04dea7226adfabb2e408cf5e531299ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The directory of the file which contains the import.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): The directory of the file which contains the import.</target>
        </trans-unit>
        <trans-unit id="51b736ced16f8a9e004eeece97896bc57eeaf76c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional): context of requests in the manifest file (defaults to the webpack context.)</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; (선택 사항) : 매니페스트 파일의 요청 컨텍스트 (기본값은 웹팩 컨텍스트)</target>
        </trans-unit>
        <trans-unit id="12b3c966be5a6113e61440ee7b1897c0a676d5d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; - context path for entry.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; - context path for entry.</target>
        </trans-unit>
        <trans-unit id="f210221583f018142383b98e5dda568db66d5970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; - context path.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; - context path.</target>
        </trans-unit>
        <trans-unit id="7ceec39829e785dddfac71f2cce203f13c350e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; must be an absolute path to a directory. This directory is used as the starting location for the resolving.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 는 디렉토리에 대한 절대 경로 여야합니다. 이 디렉토리는 해결을위한 시작 위치로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="43092c58c78f3eaea0490242c33f506f0f579076" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: (&lt;strong&gt;absolute path&lt;/strong&gt;) context of requests in the manifest (or content property)</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; : ( &lt;strong&gt;절대 경로&lt;/strong&gt; ) 매니페스트 (또는 콘텐츠 속성)의 요청 컨텍스트</target>
        </trans-unit>
        <trans-unit id="9598894e7963734ff8f867fb8ed60a2022b8a26a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: An absolute path to a directory</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; : 디렉토리의 절대 경로</target>
        </trans-unit>
        <trans-unit id="bc44489a0e7353e67e38c7d411ce8d92dcb34c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: Resolves a module within a given context.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; : Resolves a module within a given context.</target>
        </trans-unit>
        <trans-unit id="557006fb71a3113753c3cd2088f6084d542602b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: The context directory (&lt;strong&gt;absolute path&lt;/strong&gt;) for creating names.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; : The context directory (&lt;strong&gt;absolute path&lt;/strong&gt;) for creating names.</target>
        </trans-unit>
        <trans-unit id="1944cd235f033f2cba0638eb342272571f4e2544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextRegExp&lt;/code&gt; (optional) A RegExp to test the context (directory) against.</source>
          <target state="translated">&lt;code&gt;contextRegExp&lt;/code&gt; (선택 사항) 컨텍스트 (디렉토리)를 테스트 할 RegExp입니다.</target>
        </trans-unit>
        <trans-unit id="1ca5f723243a181a79c2baae52d76ba6efbc879b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextRegExp&lt;/code&gt;: (optional) A RegExp to test the context (directory) against.</source>
          <target state="translated">&lt;code&gt;contextRegExp&lt;/code&gt; : (optional) A RegExp to test the context (directory) against.</target>
        </trans-unit>
        <trans-unit id="979d60b518c0c17f52b5afa93668c4e9b1b3fe2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;core-js&lt;/code&gt; and &lt;code&gt;webpack/buildin&lt;/code&gt; will cause errors if they are transpiled by Babel.</source>
          <target state="translated">&lt;code&gt;core-js&lt;/code&gt; and &lt;code&gt;webpack/buildin&lt;/code&gt; will cause errors if they are transpiled by Babel.</target>
        </trans-unit>
        <trans-unit id="61d7fce23e088eaf890be6d95ad823ada36ae508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crossOriginLoading: &quot;anonymous&quot;&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;without credentials&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;crossOriginLoading: &quot;anonymous&quot;&lt;/code&gt; - &lt;strong&gt;신임 정보없이&lt;/strong&gt; 교차 출처로드 사용&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcbce380ba9373ad842a6a942fe0c674d31d8fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crossOriginLoading: &quot;use-credentials&quot;&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;with credentials&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;crossOriginLoading: &quot;use-credentials&quot;&lt;/code&gt; - 신임 정보로 교차 출처로드 &lt;strong&gt;사용&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25d4a7b868f9c153963f93fab6713bac72718546" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crossOriginLoading: false&lt;/code&gt; - Disable cross-origin loading (default)</source>
          <target state="translated">&lt;code&gt;crossOriginLoading: false&lt;/code&gt; 교차 출처로드 비활성화 (기본값)</target>
        </trans-unit>
        <trans-unit id="c29ef88b3bb567b524c7f01d15556d9b1c4dc1f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cson-loader&lt;/code&gt; Loads and transpiles a &lt;a href=&quot;https://github.com/bevry/cson#what-is-cson&quot;&gt;CSON&lt;/a&gt; file</source>
          <target state="translated">&lt;code&gt;cson-loader&lt;/code&gt; &lt;a href=&quot;https://github.com/bevry/cson#what-is-cson&quot;&gt;CSON&lt;/a&gt; 파일 로드 및 트랜스 파일</target>
        </trans-unit>
        <trans-unit id="a7b8282a3f16edb4ce2f2575c4dd33c8e1a2a87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.context&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The directory of the file which contains the import.</source>
          <target state="translated">&lt;code&gt;ctx.context&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : 가져 오기를 포함하는 파일의 디렉토리.</target>
        </trans-unit>
        <trans-unit id="8c91eedf922e09e3574e019e38e23d2649b621e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.contextInfo&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Contains information about the issuer (e.g. the layer).</source>
          <target state="translated">&lt;code&gt;ctx.contextInfo&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : 발급자 (예 : 레이어)에 대한 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="debd2e0a6810e3849f522f69991c028bc9c2310a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.getResolve&lt;/code&gt;5.15.0+: Get a resolve function with the current resolver options.</source>
          <target state="translated">&lt;code&gt;ctx.getResolve&lt;/code&gt; 5.15.0+ : 현재 리졸버 옵션으로 리졸 브 함수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="965fdc873d1f1f8806f50c5c68138d33d401e757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.request&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The import path being requested.</source>
          <target state="translated">&lt;code&gt;ctx.request&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : 요청중인 가져 오기 경로.</target>
        </trans-unit>
        <trans-unit id="d2ce2e18436669a1e16af18023cc55557020d748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx&lt;/code&gt; (&lt;code&gt;object&lt;/code&gt;): Object containing details of the file.</source>
          <target state="translated">&lt;code&gt;ctx&lt;/code&gt; ( &lt;code&gt;object&lt;/code&gt; ) : 파일의 세부 정보를 포함하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="d3c6be9ed50d5554c3890cb65f9767ed8dcae260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;customize&lt;/code&gt;: Default &lt;code&gt;null&lt;/code&gt;. The path of a module that exports a &lt;code&gt;custom&lt;/code&gt; callback &lt;a href=&quot;#customized-loader&quot;&gt;like the one that you'd pass to &lt;code&gt;.custom()&lt;/code&gt;&lt;/a&gt;. Since you already have to make a new file to use this, it is recommended that you instead use &lt;code&gt;.custom&lt;/code&gt; to create a wrapper loader. Only use this if you &lt;em&gt;must&lt;/em&gt; continue using &lt;code&gt;babel-loader&lt;/code&gt; directly, but still want to customize.</source>
          <target state="translated">&lt;code&gt;customize&lt;/code&gt; : Default &lt;code&gt;null&lt;/code&gt; . The path of a module that exports a &lt;code&gt;custom&lt;/code&gt; callback &lt;a href=&quot;#customized-loader&quot;&gt;like the one that you'd pass to &lt;code&gt;.custom()&lt;/code&gt; &lt;/a&gt;. Since you already have to make a new file to use this, it is recommended that you instead use &lt;code&gt;.custom&lt;/code&gt; to create a wrapper loader. Only use this if you &lt;em&gt;must&lt;/em&gt; continue using &lt;code&gt;babel-loader&lt;/code&gt; directly, but still want to customize.</target>
        </trans-unit>
        <trans-unit id="552ccbf9b7eca577383c588e6cc2440a02fe8ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data:&lt;/code&gt; url requests are supported.</source>
          <target state="translated">&lt;code&gt;data:&lt;/code&gt; url requests are supported.</target>
        </trans-unit>
        <trans-unit id="22e208e0b57c8dd6f86fa4bbc215dfee2667f089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; - data object.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; - data object.</target>
        </trans-unit>
        <trans-unit id="825c1f238cc8f039dc8066fbbe02aa2010efc3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decline&lt;/code&gt; (self)</source>
          <target state="translated">&lt;code&gt;decline&lt;/code&gt; (자기)</target>
        </trans-unit>
        <trans-unit id="8c9da1179faba2d4df0529615c4349562bc95a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;define&lt;/code&gt; (with factory)</source>
          <target state="translated">&lt;code&gt;define&lt;/code&gt; 공장에서 정의</target>
        </trans-unit>
        <trans-unit id="3a707e7c2023340458a2e992d25d10d97dcbe5fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;define&lt;/code&gt; (with value)</source>
          <target state="translated">&lt;code&gt;define&lt;/code&gt; (값)</target>
        </trans-unit>
        <trans-unit id="da9f327c6aae327b397d756687345e9a0279ffc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;definitions&lt;/code&gt; is an object.</source>
          <target state="translated">&lt;code&gt;definitions&lt;/code&gt; 는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="18c29e1fa6cc9e90f069ac14925f35e1e629ef36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleteOriginalAssets&lt;/code&gt;: Whether to delete the original assets or not. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;deleteOriginalAssets&lt;/code&gt; : 원본 자산을 삭제할지 여부입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="558e3a4face7980fb6b3f3635b8c8370d7d05d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deno&lt;/code&gt;: TBD</source>
          <target state="translated">&lt;code&gt;deno&lt;/code&gt; : TBD</target>
        </trans-unit>
        <trans-unit id="0b85e304c14e3b38dc4b466ffc4218820d9bc259" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependOn&lt;/code&gt; option can also accept an array of strings:</source>
          <target state="translated">&lt;code&gt;dependOn&lt;/code&gt; 옵션은 문자열 배열을 허용 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="39e09cfc6fa2d42214fc29a0202525a49f80cb8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependOn&lt;/code&gt;: The entry points that the current entry point depends on. They must be loaded before this entry point is loaded.</source>
          <target state="translated">&lt;code&gt;dependOn&lt;/code&gt; : 현재 진입 점이 의존하는 진입 점입니다. 이 진입 점을로드하기 전에로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="648ae8b28eb7ce825aa25328fd8752aa6e20db02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt; (&lt;code&gt;boolean = true&lt;/code&gt;): Shows the count of dependencies in progress message.</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; ( &lt;code&gt;boolean = true&lt;/code&gt; ): Shows the count of dependencies in progress message.</target>
        </trans-unit>
        <trans-unit id="4bd71d05a27cd41d447bd2bac7223515ca7f8a06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt; - optional dependencies of the module to be built.</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; - optional dependencies of the module to be built.</target>
        </trans-unit>
        <trans-unit id="c4dca03089454e9aef9b607e91be4a02bcb4c860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt; - set of sorted dependencies to iterate through and add to the module.</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; - set of sorted dependencies to iterate through and add to the module.</target>
        </trans-unit>
        <trans-unit id="7bb79bfc43ae722d9f31f8acbfdcd9a0df174bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt;: An array of strings declaring all modules required for the code in the &lt;code&gt;callback&lt;/code&gt; to execute.</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; : &lt;code&gt;callback&lt;/code&gt; 의 코드 를 실행 하는 데 필요한 모든 모듈을 선언하는 문자열 배열 .</target>
        </trans-unit>
        <trans-unit id="70bbb455605a0647773f3fd9fdaacbaf5c2e458c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt;: time to identify and connect the module&amp;rsquo;s dependencies</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; : 모듈의 의존성을 식별하고 연결하는 시간</target>
        </trans-unit>
        <trans-unit id="38ff0c031b0d06cce53d0ff29e1cb0ecbb78efe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependenciesCount&lt;/code&gt; (&lt;code&gt;number = 10000&lt;/code&gt;): A minimum dependencies count to start with. Takes effect when &lt;code&gt;dependencies&lt;/code&gt; property is enabled.</source>
          <target state="translated">&lt;code&gt;dependenciesCount&lt;/code&gt; ( &lt;code&gt;number = 10000&lt;/code&gt; ): A minimum dependencies count to start with. Takes effect when &lt;code&gt;dependencies&lt;/code&gt; property is enabled.</target>
        </trans-unit>
        <trans-unit id="b66059140cc103f0243fac8efbbd190b6aa8aeb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependency&lt;/code&gt; - the dependency that was used to create the module.</source>
          <target state="translated">&lt;code&gt;dependency&lt;/code&gt; - the dependency that was used to create the module.</target>
        </trans-unit>
        <trans-unit id="d1b4cf24c046a23bdda804bbeb06cc8002d2e4e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependency&lt;/code&gt; - the dependency to get reference to.</source>
          <target state="translated">&lt;code&gt;dependency&lt;/code&gt; - the dependency to get reference to.</target>
        </trans-unit>
        <trans-unit id="daf61508aa92350f3c8ffa68931c050de5e99997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deterministic&lt;/code&gt; option is useful for long term caching, but still results in smaller bundles compared to &lt;code&gt;hashed&lt;/code&gt;. Length of the numeric value is chosen to fill a maximum of 80% of the id space. By default a minimum length of 3 digits is used when &lt;code&gt;optimization.moduleIds&lt;/code&gt; is set to &lt;code&gt;deterministic&lt;/code&gt;. To override the default behaviour set &lt;code&gt;optimization.moduleIds&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and use the &lt;code&gt;webpack.ids.DeterministicModuleIdsPlugin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;deterministic&lt;/code&gt; option is useful for long term caching, but still results in smaller bundles compared to &lt;code&gt;hashed&lt;/code&gt; . Length of the numeric value is chosen to fill a maximum of 80% of the id space. By default a minimum length of 3 digits is used when &lt;code&gt;optimization.moduleIds&lt;/code&gt; is set to &lt;code&gt;deterministic&lt;/code&gt; . To override the default behaviour set &lt;code&gt;optimization.moduleIds&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and use the &lt;code&gt;webpack.ids.DeterministicModuleIdsPlugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5839872b73376a2ee12d6d5881b95aa01acfa8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.clientLogLevel&lt;/code&gt; may be too verbose, you can turn logging off by setting it to &lt;code&gt;'silent'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;devServer.clientLogLevel&lt;/code&gt; may be too verbose, you can turn logging off by setting it to &lt;code&gt;'silent'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d043952d79b49062314597942a925bc5d5d7e0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.color&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.color&lt;/code&gt; -CLI 만</target>
        </trans-unit>
        <trans-unit id="a818c7596baf7ec377e494a69e1dc9c3c327d7c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.filename&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.filename&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="f5a6a037cbb4cebbabec46635d395e87f4292f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.headers&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.headers&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="d46b5343594544afc3e28acf15e21ae306e85bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.info&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.info&lt;/code&gt; -CLI 만</target>
        </trans-unit>
        <trans-unit id="00dd162f47d2909a39159638e631115a59f8f614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.lazy&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.lazy&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="d70d9c4180db58248d7e4a4b3bb9ba592a128a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.mimeTypes&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.mimeTypes&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="3a2eb3a8426047fb257ecf28e5a6e6286cd9cf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.noInfo&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.noInfo&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="1aa953c587e807002c4b85cc1ce73d958205ed7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.progress&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.progress&lt;/code&gt; -CLI 만</target>
        </trans-unit>
        <trans-unit id="963deb03654f6cbe2d3c847185166da5393ffbd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.publicPath&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.publicPath&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="7c155caa75c85515cd2c61ace6cd1a076df0ed35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.quiet&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.quiet&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="82854a0227be3e8b94911bb262255a416c6b28c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.stats&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.stats&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="d818e97d350bd0b6682a48fca3f9dfa548c182f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.stdin&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.stdin&lt;/code&gt; -CLI 만</target>
        </trans-unit>
        <trans-unit id="48a145cdb78fef8a6297a987af9f72b83488f471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.watchOptions&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.watchOptions&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="c87a7c5a229b556466d1f51f797af3fba0f70506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.writeToDisk&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.writeToDisk&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="9e5929844e42a47c7279e523491c848942f2c0cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dispose&lt;/code&gt; (or &lt;code&gt;addDisposeHandler&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;dispose&lt;/code&gt; (또는 &lt;code&gt;addDisposeHandler&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cab4096ee68cd06d5fc47ac585dba608bd3f4acc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitError&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;emitError&lt;/code&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3b9e74c7e0d86c59bf5835067b320ed22c5355d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitWarning&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;emitWarning&lt;/code&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7491e86e11632fbb19a541d44207ae4648cd4682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entries&lt;/code&gt; (&lt;code&gt;boolean = true&lt;/code&gt;): Shows entries count in progress message.</source>
          <target state="translated">&lt;code&gt;entries&lt;/code&gt; ( &lt;code&gt;boolean = true&lt;/code&gt; ): Shows entries count in progress message.</target>
        </trans-unit>
        <trans-unit id="762b87424e8ed75c18e0a7fb66f943bb1d1e85d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entries&lt;/code&gt;: Enable lazy compilation for entries.</source>
          <target state="translated">&lt;code&gt;entries&lt;/code&gt; : 항목에 대해 지연 컴파일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4dd6de60dd37598ff3eecc464b633751ec48291b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entry&lt;/code&gt; - entry dependency.</source>
          <target state="translated">&lt;code&gt;entry&lt;/code&gt; - entry dependency.</target>
        </trans-unit>
        <trans-unit id="c23428dbee4cc8ebe7e269e1faf62a044ca3fd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entryOnly&lt;/code&gt; (boolean = true): if &lt;code&gt;true&lt;/code&gt;, only entry points will be exposed</source>
          <target state="translated">&lt;code&gt;entryOnly&lt;/code&gt; (boolean = true): if &lt;code&gt;true&lt;/code&gt; , only entry points will be exposed</target>
        </trans-unit>
        <trans-unit id="ddd7f65a5b108603c95589a7f21b79d33f3792c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;err&lt;/code&gt; (&lt;code&gt;Error&lt;/code&gt;): Used to indicate if there has been an error while externalizing the import. If there is an error, this should be the only parameter used.</source>
          <target state="translated">&lt;code&gt;err&lt;/code&gt; ( &lt;code&gt;Error&lt;/code&gt; ): Used to indicate if there has been an error while externalizing the import. If there is an error, this should be the only parameter used.</target>
        </trans-unit>
        <trans-unit id="8c010fd7e416a4c375db2fa45b9de6e4f4e6caae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errorCallback&lt;/code&gt;: A function that is executed when webpack fails to load the dependencies.</source>
          <target state="translated">&lt;code&gt;errorCallback&lt;/code&gt; : 웹팩이 종속성을로드하지 못할 때 실행되는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="5eb56a370e1c89773bafad3f2726382d8376b602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eslintPath&lt;/code&gt; (default: &quot;eslint&quot;)</source>
          <target state="translated">&lt;code&gt;eslintPath&lt;/code&gt; (기본값 : &quot;eslint&quot;)</target>
        </trans-unit>
        <trans-unit id="b101a35d85583654d32824a315832c7ccaf45543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-*&lt;/code&gt; addition</source>
          <target state="translated">&lt;code&gt;eval-*&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="aaf268832245a31155d3ac22bdd65e8bfb68cae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-cheap-module-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-cheap-source-map&lt;/code&gt;, however, in this case Source Maps from Loaders are processed for better results. However Loader Source Maps are simplified to a single mapping per line.</source>
          <target state="translated">&lt;code&gt;eval-cheap-module-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-cheap-source-map&lt;/code&gt; , however, in this case Source Maps from Loaders are processed for better results. However Loader Source Maps are simplified to a single mapping per line.</target>
        </trans-unit>
        <trans-unit id="15b7335784fbab7eb6e574d25e81c1daac793030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-cheap-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-source-map&lt;/code&gt;, each module is executed with &lt;code&gt;eval()&lt;/code&gt;. It is &quot;cheap&quot; because it doesn't have column mappings, it only maps line numbers. It ignores SourceMaps from Loaders and only display transpiled code similar to the &lt;code&gt;eval&lt;/code&gt; devtool.</source>
          <target state="translated">&lt;code&gt;eval-cheap-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-source-map&lt;/code&gt; , each module is executed with &lt;code&gt;eval()&lt;/code&gt; . It is &quot;cheap&quot; because it doesn't have column mappings, it only maps line numbers. It ignores SourceMaps from Loaders and only display transpiled code similar to the &lt;code&gt;eval&lt;/code&gt; devtool.</target>
        </trans-unit>
        <trans-unit id="511efc42e2a5eb6dd894434e44675ee7efe03e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-source-map&lt;/code&gt; - Each module is executed with &lt;code&gt;eval()&lt;/code&gt; and a SourceMap is added as a DataUrl to the &lt;code&gt;eval()&lt;/code&gt;. Initially it is slow, but it provides fast rebuild speed and yields real files. Line numbers are correctly mapped since it gets mapped to the original code. It yields the best quality SourceMaps for development.</source>
          <target state="translated">&lt;code&gt;eval-source-map&lt;/code&gt; map- 각 모듈은 &lt;code&gt;eval()&lt;/code&gt; 실행되고 SourceMap은 &lt;code&gt;eval()&lt;/code&gt; DataUrl로 추가됩니다 . 처음에는 느리지 만 빠른 재 구축 속도를 제공하고 실제 파일을 생성합니다. 줄 번호는 원래 코드에 매핑되므로 올바르게 매핑됩니다. 개발을위한 최고 품질의 SourceMap을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7ac72b362d1d53ce7f0e530afe43a018a4565763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; - Each module is executed with &lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;//@ sourceURL&lt;/code&gt;. This is pretty fast. The main disadvantage is that it doesn't display line numbers correctly since it gets mapped to transpiled code instead of the original code (No Source Maps from Loaders).</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; - 각 모듈은 &lt;code&gt;eval()&lt;/code&gt; 및 &lt;code&gt;//@ sourceURL&lt;/code&gt; 로 실행 됩니다. 이것은 매우 빠릅니다. 가장 큰 단점은 원래 코드 (로더의 소스 맵 없음) 대신 변환 된 코드에 맵핑되므로 행 번호를 올바르게 표시하지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8563f986ffd244f5b3af2de8897dbda869fbb88a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; wraps modules in &lt;code&gt;eval(&quot;string&quot;)&lt;/code&gt; and the minimizer does not handle strings.</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; wraps modules in &lt;code&gt;eval(&quot;string&quot;)&lt;/code&gt; and the minimizer does not handle strings.</target>
        </trans-unit>
        <trans-unit id="98f8a878d235fbac388dcee8b74796d274bb8706" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[string, RegExp]&lt;/code&gt;): Exclude modules that match the given value from source map generation.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;[string, RegExp]&lt;/code&gt; ): Exclude modules that match the given value from source map generation.</target>
        </trans-unit>
        <trans-unit id="e077dbe5854d522f43ce196e3a4c7f6173366207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; (&lt;code&gt;string|RegExp|array&lt;/code&gt;): Exclude modules that match the given value from source map generation.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; ( &lt;code&gt;string|RegExp|array&lt;/code&gt; ): Exclude modules that match the given value from source map generation.</target>
        </trans-unit>
        <trans-unit id="65785f61c837e302011bd0d153d8c6de1e14cb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; (&lt;code&gt;string|regex|array&lt;/code&gt;): Exclude modules that match the given value from source map generation.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; ( &lt;code&gt;string|regex|array&lt;/code&gt; ) : 소스 맵 생성에서 지정된 값과 일치하는 모듈을 제외합니다.</target>
        </trans-unit>
        <trans-unit id="f45e44d5770f7c803ac42c01ca4f24d0233e5583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt;: Files to &lt;code&gt;exclude&lt;/code&gt;. Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; : 파일을 &lt;code&gt;exclude&lt;/code&gt; . 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd0976f87faa82621ed3396126709bc384e353b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experiments&lt;/code&gt; option was introduced in webpack 5 to empower users with the ability to activate and try out experimental features.</source>
          <target state="translated">&lt;code&gt;experiments&lt;/code&gt; option was introduced in webpack 5 to empower users with the ability to activate and try out experimental features.</target>
        </trans-unit>
        <trans-unit id="03335aebeb2ae5658a2d5abbcf91ca6805039540" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export default&lt;/code&gt; (when &lt;code&gt;exportAsEs6Default&lt;/code&gt; param is set, es6 format). &quot;Hello world&quot; becomes &lt;code&gt;export default &quot;Hello world&quot;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;export default&lt;/code&gt; ( &lt;code&gt;exportAsEs6Default&lt;/code&gt; 매개 변수가 설정된 경우 es6 형식) &quot;Hello world&quot;는 &lt;code&gt;export default &quot;Hello world&quot;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a6cdfa6b16155bbcfac36e871749b2ba1847c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export&lt;/code&gt; label</source>
          <target state="translated">&lt;code&gt;export&lt;/code&gt; 라벨</target>
        </trans-unit>
        <trans-unit id="f2ef7f1f768e00ec18524a71ba926e0c174e0abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports.default&lt;/code&gt; (when &lt;code&gt;exportAsDefault&lt;/code&gt; param is set, es6to5 format). &quot;Hello world&quot; becomes &lt;code&gt;exports.default = &quot;Hello world&quot;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exports.default&lt;/code&gt; ( &lt;code&gt;exportAsDefault&lt;/code&gt; 매개 변수가 설정된 경우 es6to5 형식) &quot;Hello world&quot;는 &lt;code&gt;exports.default = &quot;Hello world&quot;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4965ef1aab94b4cf2bb01f6c2a5958de9a40219b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt; (CommonJS)</source>
          <target state="translated">&lt;code&gt;exports&lt;/code&gt; (CommonJS)</target>
        </trans-unit>
        <trans-unit id="d673d99e86319c5626f4264282cb9cd5b42125b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt; field is preferred over other package entry fields like &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;browser&lt;/code&gt; or custom ones.</source>
          <target state="translated">&lt;code&gt;exports&lt;/code&gt; field is preferred over other package entry fields like &lt;code&gt;main&lt;/code&gt; , &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;browser&lt;/code&gt; or custom ones.</target>
        </trans-unit>
        <trans-unit id="25c82bed9b45fd95a2fa96c1fca028f7225779ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt; should be written to use fallbacks for unknown future cases. &lt;code&gt;default&lt;/code&gt; condition can be used for that.</source>
          <target state="translated">&lt;code&gt;exports&lt;/code&gt; should be written to use fallbacks for unknown future cases. &lt;code&gt;default&lt;/code&gt; condition can be used for that.</target>
        </trans-unit>
        <trans-unit id="05a26142cab2a13647b0d3e2c3429b0346672b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extensions&lt;/code&gt;: Extensions used to resolve modules in the dll bundle (only used when using 'scope').</source>
          <target state="translated">&lt;code&gt;extensions&lt;/code&gt; : Extensions used to resolve modules in the dll bundle (only used when using 'scope').</target>
        </trans-unit>
        <trans-unit id="ef5b46f54a937f0a264c3005ca47c5b92260b684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extname&lt;/code&gt;, &lt;code&gt;dirname&lt;/code&gt;, &lt;code&gt;basename&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extname&lt;/code&gt; , &lt;code&gt;dirname&lt;/code&gt; , &lt;code&gt;basename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="078497fa1a8b319fd5ed801382f0b5eac2e06136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;factory&lt;/code&gt;: time to collect module metadata (e.g. resolving the filename)</source>
          <target state="translated">&lt;code&gt;factory&lt;/code&gt; : 모듈 메타 데이터 수집 시간 (예 : 파일 이름 확인)</target>
        </trans-unit>
        <trans-unit id="3202c3e83c13dc18a144ad59d6e011154c5e759b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;failOnError&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;failOnError&lt;/code&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a2856e0dea3315219568baa5e7d4d0c10153f2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;failOnWarning&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;failOnWarning&lt;/code&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="287290321ca1cda582ec637c857b0f800dfff55c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fallbackModuleFilenameTemplate&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See link above.</source>
          <target state="translated">&lt;code&gt;fallbackModuleFilenameTemplate&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : 위의 링크를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d5f7de33727ad14b2513c45d9e8195b27eac7f2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - disable css modules</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; - disable css modules</target>
        </trans-unit>
        <trans-unit id="af07a8ea95a418aa9dc1bd47834501d4ee724d1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - disables CSS modules or interoperable CSS format based on filename</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; - 파일 이름에 따라 CSS 모듈 또는 상호 운용 가능한 CSS 형식을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e519e61254043ad24c0e84519cfce2a1f6511511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; disables the link &lt;code&gt;type&lt;/code&gt; attribute</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; disables the link &lt;code&gt;type&lt;/code&gt; attribute</target>
        </trans-unit>
        <trans-unit id="e406c828dda2b03b74d6f4206d3a96e8ba175847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if &lt;a href=&quot;other-options#cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt; is disabled.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; if &lt;a href=&quot;other-options#cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt; is disabled.</target>
        </trans-unit>
        <trans-unit id="f6a3fd6c46ec57a3fd34873d4122cae9999dc4dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;'off'&lt;/code&gt; - suppresses errors and warnings</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;'off'&lt;/code&gt; - suppresses errors and warnings</target>
        </trans-unit>
        <trans-unit id="d917d533dd9996bddf9d4164e0749d0acd86f992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;'remove'&lt;/code&gt; - do not consume the source map and remove &lt;code&gt;SourceMappingURL&lt;/code&gt; comment</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;'remove'&lt;/code&gt; - do not consume the source map and remove &lt;code&gt;SourceMappingURL&lt;/code&gt; comment</target>
        </trans-unit>
        <trans-unit id="6279b1de745082a9cd81d1fa4aef09a23d846e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; when the export is known to be not provided</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; when the export is known to be not provided</target>
        </trans-unit>
        <trans-unit id="98e114a35e45f09b22c3ac008856c7c735219cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; when the export is known to be unused</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; when the export is known to be unused</target>
        </trans-unit>
        <trans-unit id="3e0188c2eb063fe2d3e1725a178f9fdfec445158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Not defined</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : 정의되지 않음</target>
        </trans-unit>
        <trans-unit id="f6e696ae93d78d596e70a2d7f5ec65dcc9b120c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Provide nothing. Code that expects this object may crash with a &lt;code&gt;ReferenceError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : Provide nothing. Code that expects this object may crash with a &lt;code&gt;ReferenceError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfe37e3505055eaa12461de3dd9ceb0b77867a76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Provide nothing. Code that expects this object may crash with a &lt;code&gt;ReferenceError&lt;/code&gt;. Code that attempts to import the module using &lt;code&gt;require('modulename')&lt;/code&gt; may trigger a &lt;code&gt;Cannot find module &quot;modulename&quot;&lt;/code&gt; error.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : 아무것도 제공하지 않습니다. 이 객체를 예상하는 코드는 &lt;code&gt;ReferenceError&lt;/code&gt; 와 충돌 할 수 있습니다 . 코드를 사용하여 모듈을 가져올 시도하는 것이 &lt;code&gt;require('modulename')&lt;/code&gt; 트리거 할 수 있습니다 &lt;code&gt;Cannot find module &quot;modulename&quot;&lt;/code&gt; 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="acd9e13b2ef78d923d13ec662e416fa89e506fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: The regular Node.js &lt;code&gt;__dirname&lt;/code&gt; behavior. The dirname of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : 일반 Node.js &lt;code&gt;__dirname&lt;/code&gt; 동작입니다. 의 dirname이 &lt;strong&gt;출력&lt;/strong&gt; 파일은 때 Node.js를 환경에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="0a6722d7e40b999ac1c7682e6e82b5a4836e3022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: The regular Node.js &lt;code&gt;__filename&lt;/code&gt; behavior. The filename of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : 일반 Node.js &lt;code&gt;__filename&lt;/code&gt; 동작입니다. Node.js 환경에서 실행될 때 &lt;strong&gt;출력&lt;/strong&gt; 파일 의 파일 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="027e7ea9a4144a31e8710125efc0b87a3b777544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Webpack won't touch your &lt;code&gt;__dirname&lt;/code&gt; code, which means you have the regular Node.js &lt;code&gt;__dirname&lt;/code&gt; behavior. The dirname of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : Webpack won't touch your &lt;code&gt;__dirname&lt;/code&gt; code, which means you have the regular Node.js &lt;code&gt;__dirname&lt;/code&gt; behavior. The dirname of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</target>
        </trans-unit>
        <trans-unit id="cc02df54623e7ba075853688760544b30182c387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Webpack won't touch your &lt;code&gt;__filename&lt;/code&gt; code, which means you have the regular Node.js &lt;code&gt;__filename&lt;/code&gt; behavior. The filename of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : Webpack won't touch your &lt;code&gt;__filename&lt;/code&gt; code, which means you have the regular Node.js &lt;code&gt;__filename&lt;/code&gt; behavior. The filename of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</target>
        </trans-unit>
        <trans-unit id="faa5763118488e063275efcbc4f3ab7ef54c990a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;&lt;code&gt;string: 'array-push' | 'commonjs' | &amp;lt;any string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; &lt;code&gt;string: 'array-push' | 'commonjs' | &amp;lt;any string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9740cfed85a9491a5940219bdba434675ea680f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;&lt;code&gt;string: 'jsonp' | 'import-scripts' | 'require' | 'async-node' | &amp;lt;any string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; &lt;code&gt;string: 'jsonp' | 'import-scripts' | 'require' | 'async-node' | &amp;lt;any string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="719a8d7dea0c9052acd0750ad362630eec93391b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; - absolute file path (require)</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; - absolute file path (require)</target>
        </trans-unit>
        <trans-unit id="58e88eae44554c42b84ed9ff50fbc11b10cc2059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; - file name (require)</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; - file name (require)</target>
        </trans-unit>
        <trans-unit id="44373302e3602d6a9d5587b57555c415d2d598f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; - file name of the asset</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; - file name of the asset</target>
        </trans-unit>
        <trans-unit id="a238a55ef505694c17670a93e2cb04c3895048ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; : A RegExp to select the origin file for the warning.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; : A RegExp to select the origin file for the warning.</target>
        </trans-unit>
        <trans-unit id="136e8a0e7755a4c6a4d9267e7464a375c6c4343e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileContext&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Makes the &lt;code&gt;[file]&lt;/code&gt; argument relative to this directory.</source>
          <target state="translated">&lt;code&gt;fileContext&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : &lt;code&gt;[file]&lt;/code&gt; 인수를이 디렉토리에 상대적으로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="aac6403eabf807f08426f030db20b728ddf6fccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Defines the output filename of the SourceMap (will be inlined if no value is provided).</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : SourceMap의 출력 파일 이름을 정의합니다 (값이 제공되지 않으면 인라인 됨).</target>
        </trans-unit>
        <trans-unit id="e69ba674e7ba8d2616b2c7a23fae634e7416cbff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; - used to get asset path with hash.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; - used to get asset path with hash.</target>
        </trans-unit>
        <trans-unit id="f65d8685d8fc2fb3a63715cc8cf164ec20e1b750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; has no effect when used without &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; has no effect when used without &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bb456c08cb3c9721bb05dc0677fdbb7a838fd16b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; has no effect when used without &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; &lt;strong&gt;게으른 모드&lt;/strong&gt; 없이 사용하면 filename 이 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7cc82ca3a029445d10693eb8de6a73979c11d4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; parameter could be &lt;code&gt;Function&lt;/code&gt;. It passes &lt;code&gt;getPath&lt;/code&gt; to process the format like &lt;code&gt;css/[name].css&lt;/code&gt; and returns the real file name, &lt;code&gt;css/js/a.css&lt;/code&gt;. You can replace &lt;code&gt;css/js&lt;/code&gt; with &lt;code&gt;css&lt;/code&gt; then you will get the new path &lt;code&gt;css/a.css&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 매개 변수는 &lt;code&gt;Function&lt;/code&gt; 일 수 있습니다 . &lt;code&gt;getPath&lt;/code&gt; 를 전달 하여 &lt;code&gt;css/[name].css&lt;/code&gt; 와 같은 형식을 처리하고 실제 파일 이름 &lt;code&gt;css/js/a.css&lt;/code&gt; 를 리턴 합니다. 당신은 대체 할 수있는 &lt;code&gt;css/js&lt;/code&gt; 와 &lt;code&gt;css&lt;/code&gt; 다음 새 경로를 얻을 것이다 &lt;code&gt;css/a.css&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf8e12a3b32e83814a012adaf250b19451cd310c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt;: A &lt;code&gt;function(asset)&lt;/code&gt; which receives the asset name (after processing &lt;code&gt;asset&lt;/code&gt; option) and returns the new asset name. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; : 자산 이름을 처리하고 ( &lt;code&gt;asset&lt;/code&gt; 옵션 처리 후 ) 새 자산 이름을 반환 하는 &lt;code&gt;function(asset)&lt;/code&gt; . 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ad2dac3efafd94e5e389a6287e1585e14e79b563" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt;: Specifies the name of each output file on disk.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; : 디스크에있는 각 출력 파일의 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d2bc4a194fc83f7a6749646ca671a9f8f7695868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fix&lt;/code&gt; (default: false)</source>
          <target state="translated">&lt;code&gt;fix&lt;/code&gt; (기본값 : false)</target>
        </trans-unit>
        <trans-unit id="39398c0f96bd66a09d4440a40a0ab55b2711ac94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; (boolean = false): If &lt;code&gt;true&lt;/code&gt;, manifest json file (output) will be formatted.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; (boolean = false): If &lt;code&gt;true&lt;/code&gt; , manifest json file (output) will be formatted.</target>
        </trans-unit>
        <trans-unit id="dd244a76da17ca39f80b63870f7c71ea364538c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter&lt;/code&gt; (default: eslint stylish formatter)</source>
          <target state="translated">&lt;code&gt;formatter&lt;/code&gt; (기본값 : eslint stylish formatter)</target>
        </trans-unit>
        <trans-unit id="60c1474a7c9fb64368530451fdc8868ab00c1af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullBuildTimeout&lt;/code&gt; (number): The delay between the two steps when &lt;code&gt;multiStep&lt;/code&gt; is enabled.</source>
          <target state="translated">&lt;code&gt;fullBuildTimeout&lt;/code&gt; (숫자) : &lt;code&gt;multiStep&lt;/code&gt; 이 활성화 된 경우 두 단계 사이의 지연 .</target>
        </trans-unit>
        <trans-unit id="44a2db2051e8dd545000f0939171b15e408e4ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function (module, chunk) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function (module, chunk) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6794b036f11e360ac7db17416fbac3804b8158ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function ({ context, request, contextInfo, getResolve }) =&amp;gt; promise&lt;/code&gt;5.15.0+</source>
          <target state="translated">&lt;code&gt;function ({ context, request, contextInfo, getResolve }) =&amp;gt; promise&lt;/code&gt;5.15.0+</target>
        </trans-unit>
        <trans-unit id="47d34e30a87e3be5eb5161040ecd2a2bb23b703a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48a5c6ca4d8d1edebe70695e36a5c59f7f3f95ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4589f0ac562c55f575e62b73c508056a77a41ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ffbbc8c2e826a7b9d54809aa0861d21556d2630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generated code&lt;/code&gt; - You see each module separated from each other, annotated with module names. You see the code generated by webpack. Example: Instead of &lt;code&gt;import {test} from &quot;module&quot;; test();&lt;/code&gt; you see something like &lt;code&gt;var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42); module__WEBPACK_IMPORTED_MODULE_1__.a();&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;generated code&lt;/code&gt; -각 모듈이 서로 분리되어 있고 모듈 이름으로 주석이 달린 것을 볼 수 있습니다. webpack에서 생성 한 코드가 표시됩니다. 예 : &lt;code&gt;import {test} from &quot;module&quot;; test();&lt;/code&gt; 대신 ; 테스트(); &lt;code&gt;var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42); module__WEBPACK_IMPORTED_MODULE_1__.a();&lt;/code&gt; 와 같은 것이 보입니다 . module__WEBPACK_IMPORTED_MODULE_1 __. a (); .</target>
        </trans-unit>
        <trans-unit id="51cb83aadcd353b845782a745722c1fd355a80c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="370bd1166b633ebd383ad3e4647f5a4ff671cdcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;globalName&lt;/code&gt; - the name in the global object, for example &lt;code&gt;window.$&lt;/code&gt; for a browser environment (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;globalName&lt;/code&gt; - the name in the global object, for example &lt;code&gt;window.$&lt;/code&gt; for a browser environment (&lt;strong&gt;required&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="808bb31ceb830e07fcb84f03194ea86877663d5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;groupOptions&lt;/code&gt; - options for the chunk group.</source>
          <target state="translated">&lt;code&gt;groupOptions&lt;/code&gt; - options for the chunk group.</target>
        </trans-unit>
        <trans-unit id="d56636ca2677f61e05f021b8f5edb9af254e29b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handlebars-loader&lt;/code&gt; Compiles Handlebars to HTML</source>
          <target state="translated">&lt;code&gt;handlebars-loader&lt;/code&gt; HTML로 핸들 바 컴파일</target>
        </trans-unit>
        <trans-unit id="29002dec485104653902d4fd5d65ab54393d2d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt; (See &lt;a href=&quot;#providing-function&quot;&gt;Providing function&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; (See &lt;a href=&quot;#providing-function&quot;&gt;Providing function&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d4a3c51833b9f5e1a1de34ffa246c2d70c40f06c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&lt;/code&gt;: Compare content hashes to determine invalidation (more expensive than &lt;code&gt;timestamp&lt;/code&gt;, but changes less often).</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; : Compare content hashes to determine invalidation (more expensive than &lt;code&gt;timestamp&lt;/code&gt; , but changes less often).</target>
        </trans-unit>
        <trans-unit id="044656e83cd29f097901ea3aa252e8334e1633d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashDigest&lt;/code&gt;: The encoding to use when generating the hash, defaults to &lt;code&gt;'base64'&lt;/code&gt;. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest&lt;/code&gt;&lt;/a&gt; are supported.</source>
          <target state="translated">&lt;code&gt;hashDigest&lt;/code&gt; : 해시를 생성 할 때 사용할 인코딩의 기본값은 &lt;code&gt;'base64'&lt;/code&gt; 입니다. Node.JS의 &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest&lt;/code&gt; 의&lt;/a&gt; 모든 인코딩 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7496498447b95ee522b28447077c5f42c746a09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashDigestLength&lt;/code&gt;: The prefix length of the hash digest to use, defaults to &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hashDigestLength&lt;/code&gt; : 사용할 해시 다이제스트의 접두사 길이이며 기본값은 &lt;code&gt;4&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="77d4962f92d139609ded1449e716b78c2246c529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashDigestLength&lt;/code&gt;: The prefix length of the hash digest to use, defaults to &lt;code&gt;4&lt;/code&gt;. Note that some generated ids might be longer than specified here, to avoid module id collisions.</source>
          <target state="translated">&lt;code&gt;hashDigestLength&lt;/code&gt; : The prefix length of the hash digest to use, defaults to &lt;code&gt;4&lt;/code&gt; . Note that some generated ids might be longer than specified here, to avoid module id collisions.</target>
        </trans-unit>
        <trans-unit id="76793878c0de9dfbb0498f04d846e231eb56b714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashFunction&lt;/code&gt;: The hashing algorithm to use, defaults to &lt;code&gt;'md4'&lt;/code&gt;. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt;&lt;code&gt;crypto.createHash&lt;/code&gt;&lt;/a&gt; are supported.</source>
          <target state="translated">&lt;code&gt;hashFunction&lt;/code&gt; : 사용할 해싱 알고리즘의 기본값은 &lt;code&gt;'md4'&lt;/code&gt; 입니다. Node.JS의 &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt; &lt;code&gt;crypto.createHash&lt;/code&gt; 의&lt;/a&gt; 모든 기능 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ec2c403630a153989c53652db244140e5ec9b62d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hidden-*&lt;/code&gt; addition</source>
          <target state="translated">&lt;code&gt;hidden-*&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="bcfb92f020d3ff4f5a6de94d5e76f8ba044511af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hidden-source-map&lt;/code&gt; - Same as &lt;code&gt;source-map&lt;/code&gt;, but doesn't add a reference comment to the bundle. Useful if you only want SourceMaps to map error stack traces from error reports, but don't want to expose your SourceMap for the browser development tools.</source>
          <target state="translated">&lt;code&gt;hidden-source-map&lt;/code&gt; - 동일 &lt;code&gt;source-map&lt;/code&gt; ,하지만 번들에 대한 참조 주석을 추가하지 않습니다. SourceMaps가 오류 보고서의 오류 스택 추적 만 맵핑하도록하고 브라우저 개발 도구에 SourceMap을 노출하지 않으려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5f8b73e0bbb5703e8728beba1a0ed5707b0241c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; is the module id of the context module. This may be useful for &lt;code&gt;module.hot.accept&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 는 컨텍스트 모듈의 모듈 ID입니다. 이것은 &lt;code&gt;module.hot.accept&lt;/code&gt; 에 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a10c43c69b4ac64d01a8b204053e9980eb68ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreDeclined&lt;/code&gt; (boolean): Ignore changes made to declined modules.</source>
          <target state="translated">&lt;code&gt;ignoreDeclined&lt;/code&gt; (부울) : 거부 된 모듈에 대한 변경 사항을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="281aad9900b6fc896fa94bf7540201b8c5394658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreErrored&lt;/code&gt; (boolean): Ignore errors throw in accept handlers, error handlers and while reevaluating module.</source>
          <target state="translated">&lt;code&gt;ignoreErrored&lt;/code&gt; (부울) : 승인 처리기, 오류 처리기 및 모듈을 재평가하는 동안 발생하는 오류를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="c927b59727016d069056a940a1c6a5ebb86d13ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreErrored&lt;/code&gt; (boolean): Ignore errors thrown in accept handlers, error handlers and while reevaluating module.</source>
          <target state="translated">&lt;code&gt;ignoreErrored&lt;/code&gt; (boolean): Ignore errors thrown in accept handlers, error handlers and while reevaluating module.</target>
        </trans-unit>
        <trans-unit id="cf25a7294ebf7e5968c3ca736572be0f6206802e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreUnaccepted&lt;/code&gt; (boolean): Ignore changes made to unaccepted modules.</source>
          <target state="translated">&lt;code&gt;ignoreUnaccepted&lt;/code&gt; (부울) : 허용되지 않는 모듈에 대한 변경 사항을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="57cfb4aafaafad275ec81e42f625e0ba19f2b7f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreWarnings&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above.</source>
          <target state="translated">&lt;code&gt;ignoreWarnings&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above.</target>
        </trans-unit>
        <trans-unit id="629929c7477ac60b887d1391124e2880dc21f16a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import()&lt;/code&gt; calls use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;promises&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers (e.g., IE 11), remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import()&lt;/code&gt; calls use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;promises&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers (e.g., IE 11), remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5cff04bb24eeb14c4d0754d5aec2d166a71b9ded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import()&lt;/code&gt; calls use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;promises&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import()&lt;/code&gt; 호출은 내부에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속을&lt;/a&gt; 사용 합니다 . 당신이 사용하는 경우 &lt;code&gt;import()&lt;/code&gt; 이전 버전의 브라우저로를 심은 기억 &lt;code&gt;Promise&lt;/code&gt; 같은 polyfill을 사용 &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;ES6-약속&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;약속-polyfill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e19124cb71c5d8716300184c34b45038b521c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import&lt;/code&gt;: Module(s) that are loaded upon startup.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; : 시작시로드되는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="9c449ada767de015a9f5303f4f130a02f5fa0db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt;5.20.0+: Enable lazy compilation for dynamic imports.</source>
          <target state="translated">&lt;code&gt;imports&lt;/code&gt; 5.20.0+ : 동적 가져 오기에 대해 지연 컴파일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fecc3b311c15a00f98d2b1422ff93a8179ac7e9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[string, RegExp]&lt;/code&gt;): Include source maps for module paths that match the given value.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;[string, RegExp]&lt;/code&gt; ): Include source maps for module paths that match the given value.</target>
        </trans-unit>
        <trans-unit id="9cf4e130ef6ed62e8569d385914a5dcd42ea4173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; (&lt;code&gt;string|RegExp|array&lt;/code&gt;): Include source maps for module paths that match the given value.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; ( &lt;code&gt;string|RegExp|array&lt;/code&gt; ): Include source maps for module paths that match the given value.</target>
        </trans-unit>
        <trans-unit id="0df80ca9342b2384f06ccae8dd35217c5d0cffcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; (&lt;code&gt;string|regex|array&lt;/code&gt;): Include source maps for module paths that match the given value.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; ( &lt;code&gt;string|regex|array&lt;/code&gt; ) : 주어진 값과 일치하는 모듈 경로에 대한 소스 맵을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="2d94deac92ff361b23f9f1614d5b12accb134373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt;: Files to &lt;code&gt;include&lt;/code&gt;. Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; : 파일을 &lt;code&gt;include&lt;/code&gt; . 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c93de1eae84efbf8b0ef7e59b896b9591de275a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.js&lt;/code&gt; may resolve to another file if defined in the &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index.js&lt;/code&gt; &lt;code&gt;package.json&lt;/code&gt; 에 정의 된 경우 index.js 가 다른 파일로 해석 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="450642438e83fc6449ac37feee5ad44e7136602b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.js&lt;/code&gt;: No direct export is used, but flagged with sideEffects -&amp;gt; include it</source>
          <target state="translated">&lt;code&gt;index.js&lt;/code&gt; : No direct export is used, but flagged with sideEffects -&amp;gt; include it</target>
        </trans-unit>
        <trans-unit id="47ac0b9af8f0cbeca1188329bbe0921621b24f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.js&lt;/code&gt;: pretty much empty</source>
          <target state="translated">&lt;code&gt;index.js&lt;/code&gt; : pretty much empty</target>
        </trans-unit>
        <trans-unit id="405355c95b69f45ad38c2d22597dac58c75af7f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info&lt;/code&gt; - asset info</source>
          <target state="translated">&lt;code&gt;info&lt;/code&gt; - asset info</target>
        </trans-unit>
        <trans-unit id="4f82e97508610a9343efd7ed31db6ab718b79898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initial&lt;/code&gt; is the main chunk for the entry point. This chunk contains all the modules and its dependencies that you specify for an entry point.</source>
          <target state="translated">&lt;code&gt;initial&lt;/code&gt; is the main chunk for the entry point. This chunk contains all the modules and its dependencies that you specify for an entry point.</target>
        </trans-unit>
        <trans-unit id="40b7cf0d52e54ff5ebd71fa0205244c48f4a4b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-*&lt;/code&gt; addition</source>
          <target state="translated">&lt;code&gt;inline-*&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="626340da5926d6b6e2a55b1a05bc430130dc7e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-cheap-module-source-map&lt;/code&gt; - Similar to &lt;code&gt;cheap-module-source-map&lt;/code&gt; but SourceMap is added as a DataUrl to the bundle.</source>
          <target state="translated">&lt;code&gt;inline-cheap-module-source-map&lt;/code&gt; - 유사 &lt;code&gt;cheap-module-source-map&lt;/code&gt; 하지만 SourceMap 번들에 DataUrl으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9e3fe18e68252f90fea421d18a022c4e02dbb642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-cheap-source-map&lt;/code&gt; - Similar to &lt;code&gt;cheap-source-map&lt;/code&gt; but SourceMap is added as a DataUrl to the bundle.</source>
          <target state="translated">&lt;code&gt;inline-cheap-source-map&lt;/code&gt; - 유사 &lt;code&gt;cheap-source-map&lt;/code&gt; 하지만 SourceMap 번들에 DataUrl으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9fa47ff8058795a4f1b92cd26a5f36341137b8e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-source-map&lt;/code&gt; - A SourceMap is added as a DataUrl to the bundle.</source>
          <target state="translated">&lt;code&gt;inline-source-map&lt;/code&gt; -SourceMap이 번들에 DataUrl로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="33d1e71a03990d96aca67f7db8d61929aec48ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inputChunkGroups&lt;/code&gt; - chunk groups that are processed.</source>
          <target state="translated">&lt;code&gt;inputChunkGroups&lt;/code&gt; - chunk groups that are processed.</target>
        </trans-unit>
        <trans-unit id="ba38476fcec1e0d46507e470ba3864d75bd20aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;issuer&lt;/code&gt;: The path to the module that is importing the module being loaded</source>
          <target state="translated">&lt;code&gt;issuer&lt;/code&gt; : The path to the module that is importing the module being loaded</target>
        </trans-unit>
        <trans-unit id="c48f79f0344e8e9ce2bf4c644972e28073207991" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jade-loader&lt;/code&gt; Loads Jade templates and returns a function</source>
          <target state="translated">&lt;code&gt;jade-loader&lt;/code&gt; Jade 템플릿을로드하고 함수를 반환</target>
        </trans-unit>
        <trans-unit id="4880d9db3a39784e480778ea7ab3f172c9a641be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jscs-loader&lt;/code&gt; PreLoader for code style checking using &lt;a href=&quot;http://jscs.info/&quot;&gt;JSCS&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;jscs-loader&lt;/code&gt; 사용한 코드 스타일 검사를위한 jscs-loader &lt;a href=&quot;http://jscs.info/&quot;&gt;PreLoader&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6861b9ba05a4e498561c80af8f072cc57f690ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keys&lt;/code&gt; is a function that returns an array of all possible requests that the context module can handle.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 는 컨텍스트 모듈이 처리 할 수있는 모든 가능한 요청의 배열을 반환하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1f7a217f331e5581f37b76b73345a98d9bcbbb35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layers&lt;/code&gt;: Enable module and chunk layers.</source>
          <target state="translated">&lt;code&gt;layers&lt;/code&gt; : 모듈 및 청크 레이어를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="17df494c22c5daf656cf31c874b858c2bbb6c5b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazyCompilation&lt;/code&gt;: Compile entrypoints and dynamic &lt;code&gt;import&lt;/code&gt;s only when they are in use.</source>
          <target state="translated">&lt;code&gt;lazyCompilation&lt;/code&gt; : 사용중인 경우에만 진입 점 및 동적 &lt;code&gt;import&lt;/code&gt; 컴파일 합니다.</target>
        </trans-unit>
        <trans-unit id="6d9e53e6ffbdef22ac4a32e87d94e15fc52e122e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;library&lt;/code&gt;: Options for library.</source>
          <target state="translated">&lt;code&gt;library&lt;/code&gt; : 라이브러리 옵션.</target>
        </trans-unit>
        <trans-unit id="9fcaa4825d5563a32a8a73627e94fce9f34af922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: &quot;MyModule&quot;&lt;/code&gt; - The &lt;strong&gt;specified module&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: &quot;MyModule&quot;&lt;/code&gt; - &lt;strong&gt;지정된 모듈&lt;/strong&gt; 이 라이브러리 대상에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="3725eb884278e9eafbfb25ad47a46c69444644d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: &quot;default&quot;&lt;/code&gt; - The &lt;strong&gt;default export of your entry point&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: &quot;default&quot;&lt;/code&gt; - &lt;strong&gt;진입 점&lt;/strong&gt; 의 &lt;strong&gt;기본 내보내기가&lt;/strong&gt; 라이브러리 대상에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="914abbf54ca7c61a75ab6452cd6883bf72a769f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: 'MyModule'&lt;/code&gt; - The &lt;strong&gt;specified module&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: 'MyModule'&lt;/code&gt; - The &lt;strong&gt;specified module&lt;/strong&gt; will be assigned to the library target:</target>
        </trans-unit>
        <trans-unit id="eea7ca5291871110f9302d7b636212a5644eb729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: 'default'&lt;/code&gt; - The &lt;strong&gt;default export of your entry point&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: 'default'&lt;/code&gt; - The &lt;strong&gt;default export of your entry point&lt;/strong&gt; will be assigned to the library target:</target>
        </trans-unit>
        <trans-unit id="0c7000080609b80f8fd7043ae8e138c7b229ae11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: [&quot;MyModule&quot;, &quot;MySubModule&quot;]&lt;/code&gt; - The array is interpreted as a &lt;strong&gt;path to a module&lt;/strong&gt; to be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: [&quot;MyModule&quot;, &quot;MySubModule&quot;]&lt;/code&gt; -배열은 라이브러리 대상에 지정할 &lt;strong&gt;모듈&lt;/strong&gt; 의 &lt;strong&gt;경로로&lt;/strong&gt; 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="896e837bfedb8545d3ee6841fd70b12078763124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: ['MyModule', 'MySubModule']&lt;/code&gt; - The array is interpreted as a &lt;strong&gt;path to a module&lt;/strong&gt; to be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: ['MyModule', 'MySubModule']&lt;/code&gt; - The array is interpreted as a &lt;strong&gt;path to a module&lt;/strong&gt; to be assigned to the library target:</target>
        </trans-unit>
        <trans-unit id="6f6d093882cd1c19132922fa9a80f84d9814c7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;amd&quot;&lt;/code&gt; - This will expose your library as an AMD module.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;amd&quot;&lt;/code&gt; -라이브러리를 AMD 모듈로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a4b55276a6f59d1bfa84faa8bd1b74e619693347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;assign&quot;&lt;/code&gt; - This will generate an implied global which has the potential to reassign an existing value (use with caution).</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;assign&quot;&lt;/code&gt; -기존 값을 재 할당 할 수있는 암시 적 전역을 생성합니다 (주의해서 사용).</target>
        </trans-unit>
        <trans-unit id="34a6cb2a10f3d7ff0c5813edacbed0ed16174f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;commonjs&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;exports&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value. As the name implies, this is used in CommonJS environments.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;commonjs&quot;&lt;/code&gt; - &lt;strong&gt;당신의 진입 점의 반환 값은&lt;/strong&gt; 받는 사람 할당됩니다 &lt;code&gt;exports&lt;/code&gt; 사용하여 객체 &lt;code&gt;output.library&lt;/code&gt; 값입니다. 이름에서 알 수 있듯이 이는 CommonJS 환경에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="33e527b211005349896e5f5c704b9fc727117b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;commonjs2&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;module.exports&lt;/code&gt;. As the name implies, this is used in CommonJS environments:</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;commonjs2&quot;&lt;/code&gt; - &lt;strong&gt;진입 점&lt;/strong&gt; 의 &lt;strong&gt;반환 값&lt;/strong&gt; 이 &lt;code&gt;module.exports&lt;/code&gt; 에 지정됩니다 . 이름에서 알 수 있듯이 이는 CommonJS 환경에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f948e6650483e5eab795b90137513a66be185e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;global&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;global&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;global&quot;&lt;/code&gt; - &lt;strong&gt;당신의 진입 점의 반환 값은&lt;/strong&gt; 받는 사람 할당됩니다 &lt;code&gt;global&lt;/code&gt; 사용하여 객체 &lt;code&gt;output.library&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="9461b215b3a312f36c6c8bfdfaca73e8615b15e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;jsonp&quot;&lt;/code&gt; - This will wrap the return value of your entry point into a jsonp wrapper.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;jsonp&quot;&lt;/code&gt; -시작점의 리턴 값을 jsonp 랩퍼로 랩핑합니다.</target>
        </trans-unit>
        <trans-unit id="6fb4cf39aa528982ae706e18759707acf8602414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;this&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to this under the property named by &lt;code&gt;output.library&lt;/code&gt;. The meaning of &lt;code&gt;this&lt;/code&gt; is up to you:</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;this&quot;&lt;/code&gt; - &lt;strong&gt;당신의 진입 점의 반환 값&lt;/strong&gt; 에 의해 명명 된 특성에 따라이 할당됩니다 &lt;code&gt;output.library&lt;/code&gt; . 의 의미 &lt;code&gt;this&lt;/code&gt; 당신에게 달려 있습니다 :</target>
        </trans-unit>
        <trans-unit id="040c7b4a41b5299703c19bf2e2cc38a49cedb075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; - This exposes your library under all the module definitions, allowing it to work with CommonJS, AMD and as global variable. Take a look at the &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD Repository&lt;/a&gt; to learn more.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; -라이브러리를 모든 모듈 정의에 노출시켜 CommonJS, AMD 및 전역 변수로 작업 할 수 있습니다. 자세한 내용 은 &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD 리포지토리&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e2c915eaf1c0837b6acfa18bfef231f0821eccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;var&quot;&lt;/code&gt; - (default) When your library is loaded, the &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to a variable:</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;var&quot;&lt;/code&gt; -(기본값) 라이브러리가로드되면 &lt;strong&gt;진입 점&lt;/strong&gt; 의 &lt;strong&gt;반환 값이&lt;/strong&gt; 변수에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="74450b7e9d49631b401e855cf3ce0b45c06afcaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;window&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;window&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;window&quot;&lt;/code&gt; - &lt;strong&gt;당신의 진입 점의 반환 값은&lt;/strong&gt; 에 할당됩니다 &lt;code&gt;window&lt;/code&gt; 사용하여 객체 &lt;code&gt;output.library&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="83cacf7fd6785d805c2291051cd5e3b5e88c9e9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'amd'&lt;/code&gt; - This will expose your library as an AMD module.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'amd'&lt;/code&gt; - This will expose your library as an AMD module.</target>
        </trans-unit>
        <trans-unit id="f49c84d619f511153a0aa864c08846a7d670616b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'amd-require'&lt;/code&gt; - This packages your output with an immediately-executed AMD &lt;code&gt;require(dependencies, factory)&lt;/code&gt; wrapper.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'amd-require'&lt;/code&gt; - This packages your output with an immediately-executed AMD &lt;code&gt;require(dependencies, factory)&lt;/code&gt; wrapper.</target>
        </trans-unit>
        <trans-unit id="0583ac9161d0a2bc58c2a4c9039f3930be85f4ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'assign'&lt;/code&gt; - This will generate an implied global which has the potential to reassign an existing value (use with caution).</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'assign'&lt;/code&gt; - This will generate an implied global which has the potential to reassign an existing value (use with caution).</target>
        </trans-unit>
        <trans-unit id="3b2830f0ce609069a28d766e090a96eed891289e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'assign-properties'&lt;/code&gt;5.16.0+</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'assign-properties'&lt;/code&gt;5.16.0+</target>
        </trans-unit>
        <trans-unit id="3efb1285d4b511f7a3424e56a568dc1f3a173ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'commonjs'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;exports&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value. As the name implies, this is used in CommonJS environments.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'commonjs'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;exports&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value. As the name implies, this is used in CommonJS environments.</target>
        </trans-unit>
        <trans-unit id="06e61643448d1ee8ec4e005049c5ee2955731bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'commonjs2'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;module.exports&lt;/code&gt;. As the name implies, this is used in CommonJS environments:</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'commonjs2'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;module.exports&lt;/code&gt; . As the name implies, this is used in CommonJS environments:</target>
        </trans-unit>
        <trans-unit id="7b220c95e46fbeec593a8a9642ae4b6f8c5fddcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'global'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;global&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'global'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;global&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="eba8f3b5c11ea6561e7f86775e073bd007eda94d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'jsonp'&lt;/code&gt; - This will wrap the return value of your entry point into a jsonp wrapper.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'jsonp'&lt;/code&gt; - This will wrap the return value of your entry point into a jsonp wrapper.</target>
        </trans-unit>
        <trans-unit id="c6b6d96220098c8fb9fb0ac2da600c283f87148e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'system'&lt;/code&gt; - This will expose your library as a &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md&quot;&gt;&lt;code&gt;System.register&lt;/code&gt;&lt;/a&gt; module. This feature was first released in &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.30.0&quot;&gt;webpack 4.30.0&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'system'&lt;/code&gt; - This will expose your library as a &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md&quot;&gt; &lt;code&gt;System.register&lt;/code&gt; &lt;/a&gt; module. This feature was first released in &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.30.0&quot;&gt;webpack 4.30.0&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="65f73d45627059088e23f915c7c488f4cd17f8b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'umd'&lt;/code&gt; - This exposes your library under all the module definitions, allowing it to work with CommonJS, AMD and as global variable. Take a look at the &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD Repository&lt;/a&gt; to learn more.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'umd'&lt;/code&gt; - This exposes your library under all the module definitions, allowing it to work with CommonJS, AMD and as global variable. Take a look at the &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD Repository&lt;/a&gt; to learn more.</target>
        </trans-unit>
        <trans-unit id="9dd0319804f8b4e1a0629ae3966b36c4be378d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'var'&lt;/code&gt; - (default) When your library is loaded, the &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to a variable:</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'var'&lt;/code&gt; - (default) When your library is loaded, the &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to a variable:</target>
        </trans-unit>
        <trans-unit id="ed9bcdd2b552b7e81de431fa0cc572b8e74421df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'window'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;window&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;libraryTarget: 'window'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;window&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="3550e2435ad8de0bffe1c222c62a8f1ec115d32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lineToLine&lt;/code&gt; (&lt;code&gt;object&lt;/code&gt;): Simplify and speed up source mapping by using line to line source mappings for matched modules.</source>
          <target state="translated">&lt;code&gt;lineToLine&lt;/code&gt; ( &lt;code&gt;object&lt;/code&gt; ) : 일치하는 모듈에 대한 라인-라인 소스 맵핑을 사용하여 소스 맵핑을 단순화하고 속도를 높입니다.</target>
        </trans-unit>
        <trans-unit id="3a964d34db5933f70cc747419c58c10bb496bba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loader&lt;/code&gt;: Resolves a webpack &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;loader&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;loader&lt;/code&gt; : Resolves a webpack &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;loader&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="338534818f2db9a3857a34aebf0d7fa840b0a0a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loaderContext&lt;/code&gt;: &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;The loader context&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;loaderContext&lt;/code&gt; : &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;The loader context&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d1d8843d34aeb22dd3c102ac72580b8f52b3e254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loc&lt;/code&gt; - the location from which the chunk group is referenced (inside of the module).</source>
          <target state="translated">&lt;code&gt;loc&lt;/code&gt; - the location from which the chunk group is referenced (inside of the module).</target>
        </trans-unit>
        <trans-unit id="60077aa09fcfa272d1d5d68a806ab2533f1bd69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.clear()&lt;/code&gt;: to print a horizontal line. Displayed like &lt;code&gt;logger.log&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;logger.clear()&lt;/code&gt; : to print a horizontal line. Displayed like &lt;code&gt;logger.log&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bb5c0728eb26bb33c81a6155d5d6fd59236040f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.debug(...)&lt;/code&gt;: for debugging information. These messages are displayed only when user had opted-in to see debug logging for specific modules</source>
          <target state="translated">&lt;code&gt;logger.debug(...)&lt;/code&gt; : for debugging information. These messages are displayed only when user had opted-in to see debug logging for specific modules</target>
        </trans-unit>
        <trans-unit id="a5323dfcd04d31ecf8daef4e70aea207bf9cdb6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.error(...)&lt;/code&gt;: for error messages</source>
          <target state="translated">&lt;code&gt;logger.error(...)&lt;/code&gt; : for error messages</target>
        </trans-unit>
        <trans-unit id="6a53288b1e3479c3a1c7458dde322e1037815b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.group(...)&lt;/code&gt;: to group messages. Displayed collapsed like &lt;code&gt;logger.log&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;logger.group(...)&lt;/code&gt; : to group messages. Displayed collapsed like &lt;code&gt;logger.log&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c81117a0857384b7cdc801456fef40374a8da12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.groupCollapsed(...)&lt;/code&gt;: to group messages together. Displayed collapsed like &lt;code&gt;logger.log&lt;/code&gt;. Displayed expanded when logging level is set to &lt;code&gt;'verbose'&lt;/code&gt; or &lt;code&gt;'debug'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logger.groupCollapsed(...)&lt;/code&gt; : to group messages together. Displayed collapsed like &lt;code&gt;logger.log&lt;/code&gt; . Displayed expanded when logging level is set to &lt;code&gt;'verbose'&lt;/code&gt; or &lt;code&gt;'debug'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c22c33a211857a6207c9d3c43f9b5da9f5272de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.groupEnd()&lt;/code&gt;: to end a logging group</source>
          <target state="translated">&lt;code&gt;logger.groupEnd()&lt;/code&gt; : to end a logging group</target>
        </trans-unit>
        <trans-unit id="10b39ba4de6665a7cb2ba5f55fdf51fcbb3f5680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.info(...)&lt;/code&gt;: for &lt;strong&gt;important&lt;/strong&gt; information messages. These messages are displayed by default. Only use this for messages that the user really needs to see</source>
          <target state="translated">&lt;code&gt;logger.info(...)&lt;/code&gt; : for &lt;strong&gt;important&lt;/strong&gt; information messages. These messages are displayed by default. Only use this for messages that the user really needs to see</target>
        </trans-unit>
        <trans-unit id="1f2b8ea116a17a55a326f3b515e21ddf60c39c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.log(...)&lt;/code&gt;: for &lt;strong&gt;unimportant&lt;/strong&gt; information messages. These messages are displayed only when user had opted-in to see them</source>
          <target state="translated">&lt;code&gt;logger.log(...)&lt;/code&gt; : for &lt;strong&gt;unimportant&lt;/strong&gt; information messages. These messages are displayed only when user had opted-in to see them</target>
        </trans-unit>
        <trans-unit id="044d9954130de09fa549a3d8abdb022d7495b8d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.profile(...)&lt;/code&gt;, &lt;code&gt;logger.profileEnd(...)&lt;/code&gt;: to capture a profile. Delegated to &lt;code&gt;console.profile&lt;/code&gt; when supported</source>
          <target state="translated">&lt;code&gt;logger.profile(...)&lt;/code&gt; , &lt;code&gt;logger.profileEnd(...)&lt;/code&gt; : to capture a profile. Delegated to &lt;code&gt;console.profile&lt;/code&gt; when supported</target>
        </trans-unit>
        <trans-unit id="187ceab1e235dab3656c059b457daae60910efb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.status&lt;/code&gt;: writes a temporary message, setting a new status, overrides the previous one</source>
          <target state="translated">&lt;code&gt;logger.status&lt;/code&gt; : writes a temporary message, setting a new status, overrides the previous one</target>
        </trans-unit>
        <trans-unit id="e73281f39232c9a08f2fba613f221ac0cacbd84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.trace()&lt;/code&gt;: to display a stack trace. Displayed like &lt;code&gt;logger.debug&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;logger.trace()&lt;/code&gt; : to display a stack trace. Displayed like &lt;code&gt;logger.debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25a1f30b33ee746ea326d83702ea11de7f2b8335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.warn(...)&lt;/code&gt;: for warnings</source>
          <target state="translated">&lt;code&gt;logger.warn(...)&lt;/code&gt; : for warnings</target>
        </trans-unit>
        <trans-unit id="3f355d1b296b107370c132b98cda13b25fd6bb94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.configureDefaultLogger(...)&lt;/code&gt;: to override the default logger.</source>
          <target state="translated">&lt;code&gt;logging.configureDefaultLogger(...)&lt;/code&gt; : to override the default logger.</target>
        </trans-unit>
        <trans-unit id="74da2d696c6f1f778ddc132ce29434970f466fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.getLogger('name')&lt;/code&gt;: to get individual logger by name</source>
          <target state="translated">&lt;code&gt;logging.getLogger('name')&lt;/code&gt; : to get individual logger by name</target>
        </trans-unit>
        <trans-unit id="8d507c14b6e2e7e7c2b08584226b27b1509de2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.hooks.log&lt;/code&gt;: to apply Plugins to the runtime logger</source>
          <target state="translated">&lt;code&gt;logging.hooks.log&lt;/code&gt; : to apply Plugins to the runtime logger</target>
        </trans-unit>
        <trans-unit id="b86005c3de889b154b56f011d9534d1ae4b13960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manifest&lt;/code&gt; : an object containing &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; or a string to the absolute path of the JSON manifest to be loaded upon compilation</source>
          <target state="translated">&lt;code&gt;manifest&lt;/code&gt; : &lt;code&gt;content&lt;/code&gt; 와 &lt;code&gt;name&lt;/code&gt; 포함 된 객체 또는 컴파일시로드 할 JSON 매니페스트의 절대 경로에 대한 문자열</target>
        </trans-unit>
        <trans-unit id="760109b85516fc83b069719af68f47f1109ba04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;markdown-loader&lt;/code&gt; Compiles Markdown to HTML</source>
          <target state="translated">&lt;code&gt;markdown-loader&lt;/code&gt; 는 HTML로 마크 다운을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="5c6828bca399febb4ca0edc276e1cf11f2a0c60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxChunks&lt;/code&gt;: Limit the maximum number of chunks using a value greater than or equal to &lt;code&gt;1&lt;/code&gt;. Using &lt;code&gt;1&lt;/code&gt; will prevent any additional chunks from being added as the entry/main chunk is also included in the count.</source>
          <target state="translated">&lt;code&gt;maxChunks&lt;/code&gt; : &lt;code&gt;1&lt;/code&gt; 이상의 값을 사용하여 최대 청크 수를 제한하십시오 . &lt;code&gt;1&lt;/code&gt; 을 사용 하면 진입 / 주 청크도 개수에 포함되므로 추가 청크가 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1daa1def675f3e33e49f4743c1e881b9a6dc59c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSize&lt;/code&gt; option is intended to be used with HTTP/2 and long term caching. It increases the request count for better caching. It could also be used to decrease the file size for faster rebuilding.</source>
          <target state="translated">&lt;code&gt;maxSize&lt;/code&gt; option is intended to be used with HTTP/2 and long term caching. It increases the request count for better caching. It could also be used to decrease the file size for faster rebuilding.</target>
        </trans-unit>
        <trans-unit id="268c02866ea1de6064ea9a53b05df2b227444443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSize&lt;/code&gt; options is intended to be used with HTTP/2 and long term caching. It increase the request count for better caching. It could also be used to decrease the file size for faster rebuilding.</source>
          <target state="translated">&lt;code&gt;maxSize&lt;/code&gt; 옵션은 HTTP / 2 및 장기 캐싱에 사용됩니다. 더 나은 캐싱을 위해 요청 횟수를 늘립니다. 더 빠른 재 구축을 위해 파일 크기를 줄이는 데 사용될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd77778d1045d638f8b88642d2021fdac3a88887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSize&lt;/code&gt; takes higher priority than &lt;code&gt;maxInitialRequest/maxAsyncRequests&lt;/code&gt;. Actual priority is &lt;code&gt;maxInitialRequest/maxAsyncRequests &amp;lt; maxSize &amp;lt; minSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maxSize&lt;/code&gt; 는 &lt;code&gt;maxInitialRequest/maxAsyncRequests&lt;/code&gt; 보다 우선 순위가 높습니다 . 실제 우선 순위는 &lt;code&gt;maxInitialRequest/maxAsyncRequests &amp;lt; maxSize &amp;lt; minSize&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5c606aebea77a14368add58edb3a210cf2d403d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; : A RegExp to select the warning message.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; : A RegExp to select the warning message.</target>
        </trans-unit>
        <trans-unit id="58260d9c004ec6becc5e2093a85496581e8c89b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt;: a short description of the currently-executing hook</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; : a short description of the currently-executing hook</target>
        </trans-unit>
        <trans-unit id="683becab2ad47e2dc167bdb83395c95dc70afc68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minChunkSize&lt;/code&gt;: Set a minimum chunk size.</source>
          <target state="translated">&lt;code&gt;minChunkSize&lt;/code&gt; : 최소 청크 크기를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="05f326f21c72edb80d38988b10c23067e1b02c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minRatio&lt;/code&gt;: Only assets that compress better that this ratio are processed. Defaults to &lt;code&gt;0.8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minRatio&lt;/code&gt; :이 비율보다 잘 압축되는 자산 만 처리됩니다. 기본값은 &lt;code&gt;0.8&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3796a9a4730748a1384bff16b3f123c5b63d765c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mini-css-extract-plugin&lt;/code&gt; is more often used in &lt;code&gt;production&lt;/code&gt; mode to get separate css files. For &lt;code&gt;development&lt;/code&gt; mode (including &lt;code&gt;webpack-dev-server&lt;/code&gt;) you can use &lt;code&gt;style-loader&lt;/code&gt;, because it injects CSS into the DOM using multiple</source>
          <target state="translated">&lt;code&gt;mini-css-extract-plugin&lt;/code&gt; is more often used in &lt;code&gt;production&lt;/code&gt; mode to get separate css files. For &lt;code&gt;development&lt;/code&gt; mode (including &lt;code&gt;webpack-dev-server&lt;/code&gt; ) you can use &lt;code&gt;style-loader&lt;/code&gt; , because it injects CSS into the DOM using multiple</target>
        </trans-unit>
        <trans-unit id="a342c4cf77088567a87c139a3ce668665bca7bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minifyOpts&lt;/code&gt; are passed on to babel-preset-minify. You can find a list of &lt;a href=&quot;https://github.com/babel/minify/tree/master/packages/babel-preset-minify#options&quot;&gt;all available options&lt;/a&gt; in the package directory.</source>
          <target state="translated">&lt;code&gt;minifyOpts&lt;/code&gt; 는 babel-preset- minify 로 전달됩니다. 패키지 디렉토리에서 &lt;a href=&quot;https://github.com/babel/minify/tree/master/packages/babel-preset-minify#options&quot;&gt;사용 가능한 모든 옵션&lt;/a&gt; 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b03d141feb63226e5155cd8de1c757f88ec30000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minifyPreset&lt;/code&gt;: Pass in a custom &lt;code&gt;babel-minify&lt;/code&gt; preset instead. Default: &lt;code&gt;require(&quot;babel-preset-minify&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;minifyPreset&lt;/code&gt; : 사용자 지정 &lt;code&gt;babel-minify&lt;/code&gt; minify 사전 설정을 대신 전달합니다. 기본값 : &lt;code&gt;require(&quot;babel-preset-minify&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23d0664125c0270bc9c66dd2819e33b96d46ff9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal &quot;/&quot;</source>
          <target state="translated">&lt;code&gt;mock&lt;/code&gt; : 동일 &quot;/&quot;</target>
        </trans-unit>
        <trans-unit id="76f8f45eb4c9ccc0680daccc15ef706a9903784e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal &quot;/index.js&quot;</source>
          <target state="translated">&lt;code&gt;mock&lt;/code&gt; : 동일 &quot;/index.js&quot;</target>
        </trans-unit>
        <trans-unit id="7593e5fbc4bd35ee0e1af84a7eba8790daf35097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal to &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mock&lt;/code&gt; : equal to &lt;code&gt;'/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29761c85ee86ecf643c7a353c0040abefc88793e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal to &lt;code&gt;'/index.js'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mock&lt;/code&gt; : equal to &lt;code&gt;'/index.js'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5706e358faebbb444611dbf915f28c50ab6ba5b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module = true&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether loaders should generate source maps.</source>
          <target state="translated">&lt;code&gt;module = true&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ): Indicates whether loaders should generate source maps.</target>
        </trans-unit>
        <trans-unit id="10a290109c6bfeb429a864ed7175ebd7a9bf8a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.context&lt;/code&gt;: The directory that stores the file. For example: &lt;code&gt;'/my_project/node_modules/example-dependency'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module.context&lt;/code&gt; : 파일을 저장하는 디렉토리입니다. 예 : &lt;code&gt;'/my_project/node_modules/example-dependency'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05df477f71867de3437954a511a6127c5fe97305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.exports&lt;/code&gt; (CommonJS)</source>
          <target state="translated">&lt;code&gt;module.exports&lt;/code&gt; (CommonJS)</target>
        </trans-unit>
        <trans-unit id="80f97e59b9f102c1ad7a3a47b3328d89fa349fe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.exports&lt;/code&gt; (default, cjs format). &quot;Hello world&quot; becomes &lt;code&gt;module.exports = &quot;Hello world&quot;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module.exports&lt;/code&gt; (기본값, cjs 형식) &quot;Hello world&quot;는 &lt;code&gt;module.exports = &quot;Hello world&quot;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98385e987d5c6559cb6070c4996091442a012da2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.hot&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;module.hot&lt;/code&gt; (웹팩 특정)</target>
        </trans-unit>
        <trans-unit id="4c901252a53fe35983be74ab91ca2e083024b221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.id&lt;/code&gt; (CommonJS)</source>
          <target state="translated">&lt;code&gt;module.id&lt;/code&gt; (CommonJS)</target>
        </trans-unit>
        <trans-unit id="31a2489977e266cf1aa556dba059a2bf917aeacb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.loaded&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;module.loaded&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="46ab5b3e1cb89e73c3f9ef1d46a2073997385ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.resource&lt;/code&gt;: The name of the file being processed. For example: &lt;code&gt;'/my_project/node_modules/example-dependency/index.js'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module.resource&lt;/code&gt; : 처리중인 파일의 이름입니다. 예 : &lt;code&gt;'/my_project/node_modules/example-dependency/index.js'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f5c6041683f7b79f0dcef7aff9a23158d84f43d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether loaders should generate source maps (defaults to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ) : 로더가 소스 맵을 생성해야하는지 여부를 나타냅니다 (기본값은 &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ade1d2f9a45906fd47ee048ffc3467f9a4304660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - a module relationship to be removed.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - a module relationship to be removed.</target>
        </trans-unit>
        <trans-unit id="87e6d5c1966f30f4af4fc0529d198f7da5166211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - a module that references the chunk group.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - a module that references the chunk group.</target>
        </trans-unit>
        <trans-unit id="ac14969eb5de0138561a5d9498d362a8faadd8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - a module to patch tie.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - a module to patch tie.</target>
        </trans-unit>
        <trans-unit id="31605170a6d743fca8807dd2b164f42a39395295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to add dependencies to.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - module to add dependencies to.</target>
        </trans-unit>
        <trans-unit id="92c53abf453d377590cbb89b03529dc7953b7a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be added</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - module to be added</target>
        </trans-unit>
        <trans-unit id="4b045a21232e50b331b4407086fac170550f6279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be fetched. The identifier is extracted from the module by the compilation using &lt;code&gt;module.identifier()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - module to be fetched. The identifier is extracted from the module by the compilation using &lt;code&gt;module.identifier()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="6be928c1617d747ae9371103e1ed8a6344cd2acd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be processed for the dependencies.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - module to be processed for the dependencies.</target>
        </trans-unit>
        <trans-unit id="d0cacdac881ab6521855e57562253128aa83cb55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be rebuilt.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - module to be rebuilt.</target>
        </trans-unit>
        <trans-unit id="b206761087541dc5cc88f694e39d85a702f460be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be searched for. The identifier is extracted from the module by the compilation using &lt;code&gt;module.identifier()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - module to be searched for. The identifier is extracted from the module by the compilation using &lt;code&gt;module.identifier()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="09cae5e65b13ad1add3787b7e7095b07de8cb321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module at question.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - the module at question.</target>
        </trans-unit>
        <trans-unit id="180ab56a98825d65aabeb1aa38a65c3d250a24b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module to assign depth to.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - the module to assign depth to.</target>
        </trans-unit>
        <trans-unit id="8e6f53ff4cb67dbdbbc6312099e19e9fa4470bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module to be built.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - the module to be built.</target>
        </trans-unit>
        <trans-unit id="406de7a43448d763fdef2902eb0a7acf4c7e2236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module whose errors and warnings are to be reported.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; - the module whose errors and warnings are to be reported.</target>
        </trans-unit>
        <trans-unit id="7deff814925b8f8b47bc582c9278b2c61c925c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; : A RegExp to select the origin module for the warning.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; : A RegExp to select the origin module for the warning.</target>
        </trans-unit>
        <trans-unit id="d60137401c939f12a90ed0ec9cbca0b5f992f944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleFilenameTemplate&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See &lt;a href=&quot;../configuration/output#output-devtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;moduleFilenameTemplate&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : &lt;a href=&quot;../configuration/output#output-devtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d9abae2960bdb7e95b3571eaeb095f09b51ad54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleFilenameTemplate&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See &lt;a href=&quot;../configuration/output#outputdevtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;moduleFilenameTemplate&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): See &lt;a href=&quot;../configuration/output#outputdevtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b4839f439320d6a06b5cf2a4ab5f4a6c46711e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleIds: 'deterministic'&lt;/code&gt; was added in webpack 5 and &lt;code&gt;moduleIds: 'hashed'&lt;/code&gt; is deprecated in favor of it.</source>
          <target state="translated">&lt;code&gt;moduleIds: 'deterministic'&lt;/code&gt; was added in webpack 5 and &lt;code&gt;moduleIds: 'hashed'&lt;/code&gt; is deprecated in favor of it.</target>
        </trans-unit>
        <trans-unit id="e2cfd5a144fdebe72c2bce7bea38bb6ce6901360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleIds: total-size&lt;/code&gt; has been removed in webpack 5.</source>
          <target state="translated">&lt;code&gt;moduleIds: total-size&lt;/code&gt; has been removed in webpack 5.</target>
        </trans-unit>
        <trans-unit id="bf6f5417f91b3f0622563c0da852266a41d6867e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleLocalName&lt;/code&gt; - the name of method/variable/etc of the module (the module must export it) (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;moduleLocalName&lt;/code&gt; - the name of method/variable/etc of the module (the module must export it) (&lt;strong&gt;may be omitted&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="240bb4acb10cdd97b04709a2c5419d7fdc4c3ba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleName&lt;/code&gt; - name of an imported module (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;moduleName&lt;/code&gt; - name of an imported module (&lt;strong&gt;required&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="841c52f84ba21dcc88a292557df51fcab8b71646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; (&lt;code&gt;boolean = true&lt;/code&gt;): Shows modules count in progress message.</source>
          <target state="translated">&lt;code&gt;modules&lt;/code&gt; ( &lt;code&gt;boolean = true&lt;/code&gt; ): Shows modules count in progress message.</target>
        </trans-unit>
        <trans-unit id="5b1fa32537987447b59564a7b1659cbbdfec3ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modulesCount&lt;/code&gt; (&lt;code&gt;number = 5000&lt;/code&gt;): A minimum modules count to start with. Takes effect when &lt;code&gt;modules&lt;/code&gt; property is enabled.</source>
          <target state="translated">&lt;code&gt;modulesCount&lt;/code&gt; ( &lt;code&gt;number = 5000&lt;/code&gt; ): A minimum modules count to start with. Takes effect when &lt;code&gt;modules&lt;/code&gt; property is enabled.</target>
        </trans-unit>
        <trans-unit id="3d99cd8645a565a54b32bd0ecae040ec8d3257ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiStep&lt;/code&gt; (boolean): If &lt;code&gt;true&lt;/code&gt;, the plugin will build in two steps -- first compiling the hot update chunks, and then the remaining normal assets.</source>
          <target state="translated">&lt;code&gt;multiStep&lt;/code&gt; (boolean) : &lt;code&gt;true&lt;/code&gt; 인 경우 플러그인은 먼저 핫 업데이트 청크를 컴파일 한 다음 나머지 일반 자산을 컴파일하는 두 단계로 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="779a008dc5b70d41f8a83a07fc35ff8336fd2ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.configName&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;myObj.configName&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="a6f9d66eae0f08aca954dd613054812e78304a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.merge&lt;/code&gt; (optional)</source>
          <target state="translated">&lt;code&gt;myObj.merge&lt;/code&gt; (optional)</target>
        </trans-unit>
        <trans-unit id="393047e8116b42bd43242246a428105275a4bf2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.topScope&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;myObj.topScope&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="24aec6ab7f89a681b8b4a6de163a723553f70199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.webpackOptions&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;myObj.webpackOptions&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="d3399db1dcbfd42351a4578a08097223a2cbce2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; (optional): an identifier where the dll is exposed (defaults to &lt;code&gt;manifest.name&lt;/code&gt;) (see also &lt;a href=&quot;../configuration/externals&quot;&gt;&lt;code&gt;externals&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; (optional): an identifier where the dll is exposed (defaults to &lt;code&gt;manifest.name&lt;/code&gt; ) (see also &lt;a href=&quot;../configuration/externals&quot;&gt; &lt;code&gt;externals&lt;/code&gt; &lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="ad3939af4c37393b76ecc9521829dd65019d12cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; (optional): the name where the dll is exposed (defaults to &lt;code&gt;manifest.name&lt;/code&gt;) (see also &lt;a href=&quot;../configuration/externals&quot;&gt;&lt;code&gt;externals&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; (선택 사항) : dll이 노출되는 이름 (기본값은 &lt;code&gt;manifest.name&lt;/code&gt; ) ( &lt;a href=&quot;../configuration/externals&quot;&gt; &lt;code&gt;externals&lt;/code&gt; &lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="88a2f26eb8f492845893cfb37cd73662578e40bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - name for the child &lt;code&gt;Compiler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - name for the child &lt;code&gt;Compiler&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67747ec77fa03bb8994ac28058fd9d0d04138d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - name of an exported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - name of an exported value (&lt;strong&gt;required&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="db02b55afff823933e6d6d9b49941d175181f21a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - name of an imported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - name of an imported value (&lt;strong&gt;required&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="2080bab705966f85a44840ce48e82deb81518e02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of entry.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - the name of entry.</target>
        </trans-unit>
        <trans-unit id="4caa030c0aaa07076eb60305e44ff95572751529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the asset to return</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - the name of the asset to return</target>
        </trans-unit>
        <trans-unit id="b6ce0fc93087404484619cb5fc6e3dd455ca4bd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the chunk.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - the name of the chunk.</target>
        </trans-unit>
        <trans-unit id="c684795df3bb92432954b3afacf6f71882852411" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: name of the exposed dll function (&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;TemplatePaths&lt;/a&gt;: &lt;code&gt;[fullhash]&lt;/code&gt; &amp;amp; &lt;code&gt;[name]&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : name of the exposed dll function (&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;TemplatePaths&lt;/a&gt;: &lt;code&gt;[fullhash]&lt;/code&gt; &amp;amp; &lt;code&gt;[name]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1cf4d2459538f292bf43f23a805da848b2315ced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: name of the exposed dll function (&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;TemplatePaths&lt;/a&gt;: &lt;code&gt;[hash]&lt;/code&gt; &amp;amp; &lt;code&gt;[name]&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : 노출 된 dll 함수의 이름 ( &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;TemplatePaths&lt;/a&gt; : &lt;code&gt;[hash]&lt;/code&gt; &amp;amp; &lt;code&gt;[name]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b54572e8c81e03cd6b8ceb7cd56b29aea304d8fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespace&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See &lt;a href=&quot;../configuration/output#outputdevtoolnamespace&quot;&gt;&lt;code&gt;output.devtoolNamespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;namespace&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): See &lt;a href=&quot;../configuration/output#outputdevtoolnamespace&quot;&gt; &lt;code&gt;output.devtoolNamespace&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="112d7f2c0b58e45e6ecdc7b9c744a90eaf52f591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newSourceOrFunction&lt;/code&gt; - new asset source or function converting old to new</source>
          <target state="translated">&lt;code&gt;newSourceOrFunction&lt;/code&gt; - new asset source or function converting old to new</target>
        </trans-unit>
        <trans-unit id="60c93acaad30fdb63103904b857554b14301c817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noSources = false&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Prevents the source file content from being included in the source map.</source>
          <target state="translated">&lt;code&gt;noSources = false&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ): Prevents the source file content from being included in the source map.</target>
        </trans-unit>
        <trans-unit id="541250e5d18f2fecb7a96ac8133e90f476bd432f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noSources&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Prevents the source file content from being included in the source map (defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;noSources&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ) : 소스 파일 내용이 소스 맵에 포함되지 않도록합니다 (기본값은 &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="89ae860624d7d93bc21a6d3486dcd281bad5b45a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node-sass&lt;/code&gt; has a bug which blocks threads from the Node.js thread pool. When using it with the &lt;code&gt;thread-loader&lt;/code&gt; set &lt;code&gt;workerParallelJobs: 2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node-sass&lt;/code&gt; 에는 Node.js 스레드 풀의 스레드를 차단하는 버그가 있습니다. 와 함께 사용하는 경우 &lt;code&gt;thread-loader&lt;/code&gt; 설정 &lt;code&gt;workerParallelJobs: 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f292215065d185c96bc05d04cf146c4de46c49e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt;: See &lt;code&gt;engines&lt;/code&gt; field for compatibility.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; : See &lt;code&gt;engines&lt;/code&gt; field for compatibility.</target>
        </trans-unit>
        <trans-unit id="db87783fe43fbbf46d56468113dfbe8df63d3238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;non-initial&lt;/code&gt; is a chunk that may be lazy-loaded. It may appear when &lt;a href=&quot;../guides/code-splitting#dynamic-imports&quot;&gt;dynamic import&lt;/a&gt; or &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; is being used.</source>
          <target state="translated">&lt;code&gt;non-initial&lt;/code&gt; is a chunk that may be lazy-loaded. It may appear when &lt;a href=&quot;../guides/code-splitting#dynamic-imports&quot;&gt;dynamic import&lt;/a&gt; or &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; is being used.</target>
        </trans-unit>
        <trans-unit id="fdaa3b6eb02b52a179e6961b7ee5553f68ff78cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; and &lt;code&gt;warning&lt;/code&gt; are going to be deprecated at the next major version.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; and &lt;code&gt;warning&lt;/code&gt; are going to be deprecated at the next major version.</target>
        </trans-unit>
        <trans-unit id="20ba3b8c8e21f36a15621a51763b66af843ed632" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt;: Resolves a module via an absolute or relative path.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; : Resolves a module via an absolute or relative path.</target>
        </trans-unit>
        <trans-unit id="702fc78632a6a48e0677e8cfa511cfe9bbdff611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nosources-*&lt;/code&gt; addition</source>
          <target state="translated">&lt;code&gt;nosources-*&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="e1edbe16091eb9f13925f630d6107241c8015cc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nosources-source-map&lt;/code&gt; - A SourceMap is created without the &lt;code&gt;sourcesContent&lt;/code&gt; in it. It can be used to map stack traces on the client without exposing all of the source code. You can deploy the Source Map file to the webserver.</source>
          <target state="translated">&lt;code&gt;nosources-source-map&lt;/code&gt; - &lt;code&gt;sourcesContent&lt;/code&gt; 가 없는 SourceMap이 작성 됩니다. 모든 소스 코드를 노출하지 않고 클라이언트에서 스택 추적을 맵핑하는 데 사용할 수 있습니다. 소스 맵 파일을 웹 서버에 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="525cbab43e5110d743a4134986f43ea74eea92bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; when the export provision could depend on runtime conditions</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; when the export provision could depend on runtime conditions</target>
        </trans-unit>
        <trans-unit id="5175ab86add34ec7382bb9ab57532b61c61ea6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; when the export usage could depend on runtime conditions</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; when the export usage could depend on runtime conditions</target>
        </trans-unit>
        <trans-unit id="8028b6836b472ed8a423e3528c7becca76431628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfea8a91ef09239116dff422db307719ccc336dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object = { encoding string = 'base64' | false, mimetype string = undefined | false }&lt;/code&gt;&lt;code&gt;function (content, { filename, module }) =&amp;gt; string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object = { encoding string = 'base64' | false, mimetype string = undefined | false }&lt;/code&gt; &lt;code&gt;function (content, { filename, module }) =&amp;gt; string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e58b0a954a4c8e31d83aa6a0b90425725230ec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object = { maxSize number = 8096 }&lt;/code&gt;&lt;code&gt;function (source, { filename, module }) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object = { maxSize number = 8096 }&lt;/code&gt; &lt;code&gt;function (source, { filename, module }) =&amp;gt; boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3c9ffcec0778b15ad191c593a064c008b2fa751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;[object, function]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; &lt;code&gt;[object, function]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1691e6112d552add5a06fd1a2d010c855270832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; &lt;code&gt;boolean: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="790981c6fe92f055715f1c5d486f0cd8fe9211ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a24dc9eb2b750e4e62e8a9cc96c4b950d2b0996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84b4c0712e54a50daddc088737be0c626269b584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5ebae651540e9505b31c9f490be3709fa2bea7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onAccepted&lt;/code&gt; (function(info)): Notifier for accepted modules</source>
          <target state="translated">&lt;code&gt;onAccepted&lt;/code&gt; (function (info)) : 승인 된 모듈에 대한 알리미</target>
        </trans-unit>
        <trans-unit id="eb6bec8a72830a3225b5a7a1881525d0327a6c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onDeclined&lt;/code&gt; (function(info)): Notifier for declined modules</source>
          <target state="translated">&lt;code&gt;onDeclined&lt;/code&gt; (function (info)) : 거부 된 모듈에 대한 알리미</target>
        </trans-unit>
        <trans-unit id="0e4ff39a4e37f4ef2ef104d8954258fa39171be2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onDisposed&lt;/code&gt; (function(info)): Notifier for disposed modules</source>
          <target state="translated">&lt;code&gt;onDisposed&lt;/code&gt; (function (info)) : 배치 된 모듈의 알리미</target>
        </trans-unit>
        <trans-unit id="b324d4b4eb29bd6df0587c6bba605a474e571c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onErrored&lt;/code&gt; (function(info)): Notifier for errors</source>
          <target state="translated">&lt;code&gt;onErrored&lt;/code&gt; (function (info)) : 오류 알림</target>
        </trans-unit>
        <trans-unit id="663214223257462185e028fad7855a59c6f8c45c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onUnaccepted&lt;/code&gt; (function(info)): Notifier for unaccepted modules</source>
          <target state="translated">&lt;code&gt;onUnaccepted&lt;/code&gt; (function (info)) : 허용되지 않는 모듈에 대한 알리미</target>
        </trans-unit>
        <trans-unit id="50193cd35175b714865bcb3e217581afeccf06d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.innerGraph&lt;/code&gt; tells webpack whether to conduct inner graph analysis for unused exports.</source>
          <target state="translated">&lt;code&gt;optimization.innerGraph&lt;/code&gt; tells webpack whether to conduct inner graph analysis for unused exports.</target>
        </trans-unit>
        <trans-unit id="ba0bb3f959ae2d58f20574a2fa16528cdbb0ce52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.mangleExports&lt;/code&gt; allows to control export mangling.</source>
          <target state="translated">&lt;code&gt;optimization.mangleExports&lt;/code&gt; allows to control export mangling.</target>
        </trans-unit>
        <trans-unit id="391eb87254c8f5b334769d34617095c4f945ed84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.portableRecords&lt;/code&gt; tells webpack to generate records with relative paths to be able to move the context folder.</source>
          <target state="translated">&lt;code&gt;optimization.portableRecords&lt;/code&gt; tells webpack to generate records with relative paths to be able to move the context folder.</target>
        </trans-unit>
        <trans-unit id="be5f78af0ae0c8d2786daf1c2c12f3ce2bbf6cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.removeAvailableModules&lt;/code&gt; reduces the performance of webpack, and will be disabled in &lt;code&gt;production&lt;/code&gt; mode by default in next major release. Disable it in &lt;code&gt;production&lt;/code&gt; mode if you want extra build performance.</source>
          <target state="translated">&lt;code&gt;optimization.removeAvailableModules&lt;/code&gt; reduces the performance of webpack, and will be disabled in &lt;code&gt;production&lt;/code&gt; mode by default in next major release. Disable it in &lt;code&gt;production&lt;/code&gt; mode if you want extra build performance.</target>
        </trans-unit>
        <trans-unit id="a687515719ef14b1b1fdacc0281ce83fdf3f8528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.sideEffects&lt;/code&gt; depends on &lt;a href=&quot;#optimization-providedexports&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt; to be enabled. This dependency has a build time cost, but eliminating modules has positive impact on performance because of less code generation. Effect of this optimization depends on your codebase, try it for possible performance wins.</source>
          <target state="translated">&lt;code&gt;optimization.sideEffects&lt;/code&gt; 가 에 따라 달라집니다 &lt;a href=&quot;#optimization-providedexports&quot;&gt; &lt;code&gt;optimization.providedExports&lt;/code&gt; &lt;/a&gt; 가 활성화되어 있어야합니다. 이 종속성은 빌드 시간 비용이 있지만 모듈을 제거하면 코드 생성이 적어 성능에 긍정적 인 영향을 미칩니다. 이 최적화의 효과는 코드베이스에 따라 다르므로 가능한 성능 향상을 위해 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="5a399b768cb19429c6ab9de8b6eeed4bbfb17a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.sideEffects&lt;/code&gt; depends on &lt;a href=&quot;#optimizationprovidedexports&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt; to be enabled. This dependency has a build time cost, but eliminating modules has positive impact on performance because of less code generation. Effect of this optimization depends on your codebase, try it for possible performance wins.</source>
          <target state="translated">&lt;code&gt;optimization.sideEffects&lt;/code&gt; depends on &lt;a href=&quot;#optimizationprovidedexports&quot;&gt; &lt;code&gt;optimization.providedExports&lt;/code&gt; &lt;/a&gt; to be enabled. This dependency has a build time cost, but eliminating modules has positive impact on performance because of less code generation. Effect of this optimization depends on your codebase, try it for possible performance wins.</target>
        </trans-unit>
        <trans-unit id="196a6f136eeb6567dded5445eba090c0c17eae09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.sideEffects&lt;/code&gt; will also flag modules as side effect free when they contain only side effect free statements.</source>
          <target state="translated">&lt;code&gt;optimization.sideEffects&lt;/code&gt; 는 또한 부작용이없는 명령문 만 포함하는 경우 모듈을 부작용없는 것으로 플래그를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="179d1a00fa0a89293c426d6554799e1a620fbe9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</source>
          <target state="translated">&lt;code&gt;optimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</target>
        </trans-unit>
        <trans-unit id="c3b805ab82081162564f88005fdd4b02f058c3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS_ASSETS_STAGE_* as a stage option)</source>
          <target state="translated">&lt;code&gt;optimizeChunkAssets&lt;/code&gt; 는 더 이상 사용되지 않습니다 ( 대신 &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; 를 사용하고 Compilation.PROCESS_ASSETS_STAGE_ * 중 하나를 단계 옵션으로 사용).</target>
        </trans-unit>
        <trans-unit id="03fe573a252122f57150ee1fa3d2dc5c2da4f246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional&lt;/code&gt; - optional flag.</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; - optional flag.</target>
        </trans-unit>
        <trans-unit id="b87611891ca033a081234b67c3bdcac957da4c05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.chunkFilename&lt;/code&gt; is the filename under that chunks are expected.</source>
          <target state="translated">&lt;code&gt;options.chunkFilename&lt;/code&gt; 은 해당 청크가 예상되는 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5876235af438fa796c9997d5dd5a4c97501f7a60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.debug&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Whether loaders should be in &lt;code&gt;debug&lt;/code&gt; mode or not. &lt;code&gt;debug&lt;/code&gt; will be removed as of webpack 3.</source>
          <target state="translated">&lt;code&gt;options.debug&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ) : 로더가 &lt;code&gt;debug&lt;/code&gt; 모드에 있어야하는지 여부 입니다. webpack 3에서 &lt;code&gt;debug&lt;/code&gt; 가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="c76b5cfbc3a1ce195bbef21e9b105d9c1366025c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.dependencyType&lt;/code&gt; is an additional option. It allows us to specify the type of dependency, which is used to resolve &lt;code&gt;byDependency&lt;/code&gt; from the &lt;code&gt;resolve&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;options.dependencyType&lt;/code&gt; 은 추가 옵션입니다. &lt;code&gt;resolve&lt;/code&gt; 옵션 에서 &lt;code&gt;byDependency&lt;/code&gt; 를 해결하는 데 사용되는 종속성 유형을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ab67f8227d2d87511d82dd32837d16269c6d253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.hotUpdateChunkFilename&lt;/code&gt; the filename for hot update chunks.</source>
          <target state="translated">&lt;code&gt;options.hotUpdateChunkFilename&lt;/code&gt; 파일 핫 업데이트 청크의 파일 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c35f8d9d48acf64d1f046baef76ac88b85d8df4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.hotUpdateFunction&lt;/code&gt; JSON function name for the hot update.</source>
          <target state="translated">&lt;code&gt;options.hotUpdateFunction&lt;/code&gt; 최신 업데이트를위한 JSON 함수 이름입니다.</target>
        </trans-unit>
        <trans-unit id="74761b4af85843843009fde5dbbfb9c965f51faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.hotUpdateMainFilename&lt;/code&gt; the filename for the hot update manifest.</source>
          <target state="translated">&lt;code&gt;options.hotUpdateMainFilename&lt;/code&gt; 핫 업데이트 매니페스트의 파일 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="76b3bf05ebce2ee9ff4d5f577362a9486b48b9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.jsonpFunction&lt;/code&gt; is the JSONP function.</source>
          <target state="translated">&lt;code&gt;options.jsonpFunction&lt;/code&gt; 은 JSONP 함수입니다.</target>
        </trans-unit>
        <trans-unit id="c95e532b5b958e984872de55a4c65c10414118c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.minimize&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Where loaders can be switched to minimize mode.</source>
          <target state="translated">&lt;code&gt;options.minimize&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; ) : 로더를 최소화하여 모드를 최소화 할 수있는 위치.</target>
        </trans-unit>
        <trans-unit id="b7439471127c01692400cd2d377a366ce85b559d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.options.context&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The context that can be used to configure older loaders.</source>
          <target state="translated">&lt;code&gt;options.options.context&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : 이전 로더를 구성하는 데 사용할 수있는 컨텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="0be06eae7b9b89c9a6929cfd0e59be8074263d44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.options&lt;/code&gt; (&lt;code&gt;object&lt;/code&gt;): A configuration object that can be used to configure older loaders - this will take the same schema a &lt;code&gt;webpack.config.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options.options&lt;/code&gt; ( &lt;code&gt;object&lt;/code&gt; ) : 이전 로더를 구성하는 데 사용할 수있는 구성 객체 &lt;code&gt;webpack.config.js&lt;/code&gt; 와 동일한 스키마를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="769c18b8dcce4374dfb4a74a0c472f35e1b53b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.publicPath&lt;/code&gt; is used as path for loading the chunks.</source>
          <target state="translated">&lt;code&gt;options.publicPath&lt;/code&gt; is used as path for loading the chunks.</target>
        </trans-unit>
        <trans-unit id="caf7f8db0bc66c1f709100690ace697819321cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.publicPath&lt;/code&gt; is uses as path for loading the chunks.</source>
          <target state="translated">&lt;code&gt;options.publicPath&lt;/code&gt; 는 청크를로드하기위한 경로로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="56eb4c281187e56c610ad8210855f5fa56de50c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; are the output options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 은 출력 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="a2197a7a73e508ecb5773bb3dc26889796168b45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; are uglifyjs options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 은 uglifyjs 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="d4311b68c19cb8d8c19f670434dcd0aad909ab0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;: The loader options (for instance provided in the webpack config. See the &lt;a href=&quot;#examples&quot;&gt;example&lt;/a&gt; below).</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; : The loader options (for instance provided in the webpack config. See the &lt;a href=&quot;#examples&quot;&gt;example&lt;/a&gt; below).</target>
        </trans-unit>
        <trans-unit id="bda9ae45eb4efcaa66cf27184b974afc73d34729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.failOnMissing&lt;/code&gt;: the default value is &lt;code&gt;false&lt;/code&gt;, which will show a warning message, if the mapping text cannot be found. If set to &lt;code&gt;true&lt;/code&gt;, the message will be an error message.</source>
          <target state="translated">&lt;code&gt;optionsObj.failOnMissing&lt;/code&gt; : 기본값은 &lt;code&gt;false&lt;/code&gt; 이며 맵핑 텍스트를 찾을 수없는 경우 경고 메시지를 표시합니다. &lt;code&gt;true&lt;/code&gt; 로 설정 되면 메시지는 오류 메시지가됩니다.</target>
        </trans-unit>
        <trans-unit id="974fd649a1aa8479103d7558a3d1063171933b3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.functionName&lt;/code&gt;: the default value is &lt;code&gt;__&lt;/code&gt;, you can change it to other function name.</source>
          <target state="translated">&lt;code&gt;optionsObj.functionName&lt;/code&gt; : 기본값은 &lt;code&gt;__&lt;/code&gt; 이며 다른 함수 이름으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b68777ea5147f99990efea492fbc55541b220f74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.hideMessage&lt;/code&gt;: the default value is &lt;code&gt;false&lt;/code&gt;, which will show the warning/error message. If set to &lt;code&gt;true&lt;/code&gt;, the message will be hidden.</source>
          <target state="translated">&lt;code&gt;optionsObj.hideMessage&lt;/code&gt; : 기본값은 &lt;code&gt;false&lt;/code&gt; 이며 경고 / 오류 메시지가 표시됩니다. &lt;code&gt;true&lt;/code&gt; 로 설정 하면 메시지가 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="73bf5a54f5989e87b61cdfb6f15bcba359bf6706" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.nested&lt;/code&gt;: the default value is &lt;code&gt;false&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt;, the keys in &lt;code&gt;languageConfig&lt;/code&gt; can be nested. This option is interpreted only if &lt;code&gt;languageConfig&lt;/code&gt; isn't a function.</source>
          <target state="translated">&lt;code&gt;optionsObj.nested&lt;/code&gt; : 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다. &lt;code&gt;true&lt;/code&gt; 로 설정하면 &lt;code&gt;languageConfig&lt;/code&gt; 의 키를 중첩 할 수 있습니다. 이 옵션은 &lt;code&gt;languageConfig&lt;/code&gt; 가 기능이 아닌 경우에만 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="737f50a5cc1ec4f703f667d1f18a3d86b59aaac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts.env.configuration.myObj&lt;/code&gt; (required)</source>
          <target state="translated">&lt;code&gt;opts.env.configuration.myObj&lt;/code&gt; (required)</target>
        </trans-unit>
        <trans-unit id="fc11d8b7b46177e5e294d8a88f96e14fe891e9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts.env.configuration&lt;/code&gt;(required)</source>
          <target state="translated">&lt;code&gt;opts.env.configuration&lt;/code&gt;(required)</target>
        </trans-unit>
        <trans-unit id="c790b79ef5e3fe1014046a950b7c74affdd5f6b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;origin&lt;/code&gt; - origin module from which this module build was requested.</source>
          <target state="translated">&lt;code&gt;origin&lt;/code&gt; - origin module from which this module build was requested.</target>
        </trans-unit>
        <trans-unit id="002f9c2fe443ea89deaab5a5751bf9b2d409cd42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;original source&lt;/code&gt; - You see each module separated from each other, annotated with module names. You see the code before transpilation, as you authored it. This depends on Loader support.</source>
          <target state="translated">&lt;code&gt;original source&lt;/code&gt; -각 모듈이 서로 분리되어 있고 모듈 이름으로 주석이 달린 것을 볼 수 있습니다. 코드를 작성한 것처럼 코드를 변환하기 전에 코드가 표시됩니다. 이것은 로더 지원에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="bf677a50f29c2dbe228bad8b769e86a83df259b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.futureEmitAssets&lt;/code&gt; option will be removed in webpack v5.0.0 and this behaviour will become the new default.</source>
          <target state="translated">&lt;code&gt;output.futureEmitAssets&lt;/code&gt; option will be removed in webpack v5.0.0 and this behaviour will become the new default.</target>
        </trans-unit>
        <trans-unit id="ebede2b81519f9ba054ba77b5ea514dd1cd3e627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.module&lt;/code&gt; is an experimental feature and can be enabled by setting &lt;a href=&quot;experiments#experiments&quot;&gt;&lt;code&gt;experiments.outputModule&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output.module&lt;/code&gt; is an experimental feature and can be enabled by setting &lt;a href=&quot;experiments#experiments&quot;&gt; &lt;code&gt;experiments.outputModule&lt;/code&gt; &lt;/a&gt; to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c42d4ee39484b57ac63ffa7a53459a9bd21c2650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.module&lt;/code&gt; is an experimental feature and can only be enabled by setting &lt;a href=&quot;experiments#experiments&quot;&gt;&lt;code&gt;experiments.outputModule&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;output.module&lt;/code&gt; 은 실험적인 기능이며 &lt;a href=&quot;experiments#experiments&quot;&gt; &lt;code&gt;experiments.outputModule&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정해야만 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2428a51881bb9ec91f32a88a971430b121bb900a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.publicPath&lt;/code&gt; defaults to &lt;code&gt;'auto'&lt;/code&gt; with &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;web-worker&lt;/code&gt; targets.</source>
          <target state="translated">&lt;code&gt;output.publicPath&lt;/code&gt; 의 기본값 은 &lt;code&gt;web&lt;/code&gt; 및 &lt;code&gt;web-worker&lt;/code&gt; 대상 에서 &lt;code&gt;'auto'&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="de7fd655dfab6cb2bba79f8ea5319af8c3f1c330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.uniqueName&lt;/code&gt; will be used to generate unique globals for:</source>
          <target state="translated">&lt;code&gt;output.uniqueName&lt;/code&gt; will be used to generate unique globals for:</target>
        </trans-unit>
        <trans-unit id="b0bb41fa02d85f03ad10cb7c2482e97583eceac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputModule&lt;/code&gt;: enables the use of &lt;a href=&quot;output#outputmodule&quot;&gt;&lt;code&gt;output.module&lt;/code&gt;&lt;/a&gt; configuration option and sets it to &lt;code&gt;true&lt;/code&gt;. Enables the use of &lt;code&gt;output.libraryTarget&lt;/code&gt; as &lt;code&gt;'module'&lt;/code&gt; and sets it to &lt;code&gt;'module'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;outputModule&lt;/code&gt; : enables the use of &lt;a href=&quot;output#outputmodule&quot;&gt; &lt;code&gt;output.module&lt;/code&gt; &lt;/a&gt; configuration option and sets it to &lt;code&gt;true&lt;/code&gt; . Enables the use of &lt;code&gt;output.libraryTarget&lt;/code&gt; as &lt;code&gt;'module'&lt;/code&gt; and sets it to &lt;code&gt;'module'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a285dc09781525743805daa4f5bc95dd75cc49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputOptions&lt;/code&gt; - output options object.</source>
          <target state="translated">&lt;code&gt;outputOptions&lt;/code&gt; - output options object.</target>
        </trans-unit>
        <trans-unit id="d4be8484e7f4dff3957aca8e7216e3b2b763238d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputPath&lt;/code&gt;: A relative path to a custom output file (json)</source>
          <target state="translated">&lt;code&gt;outputPath&lt;/code&gt; : 사용자 정의 출력 파일의 상대 경로 (json)</target>
        </trans-unit>
        <trans-unit id="0be788665ebf70411507c4365760351a83a9e623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputPath&lt;/code&gt;: An absolute path to a custom output file (json)</source>
          <target state="translated">&lt;code&gt;outputPath&lt;/code&gt; : An absolute path to a custom output file (json)</target>
        </trans-unit>
        <trans-unit id="c910182071447ca217ab408b31001c8b5a92969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputReport&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;outputReport&lt;/code&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="68e48f0350035d9f2118f736fff33a7f90f7c9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;override&lt;/code&gt; - allows to override existing value in the global object (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;override&lt;/code&gt; - allows to override existing value in the global object (&lt;strong&gt;may be omitted&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="51cc79294561195b1b083f211fbb5a4d19e91908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pack&lt;/code&gt; is the only supported mode since webpack 5.0.x</source>
          <target state="translated">&lt;code&gt;pack&lt;/code&gt; is the only supported mode since webpack 5.0.x</target>
        </trans-unit>
        <trans-unit id="2901c85220232393e9550d4fd5913351b49daaed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOpts&lt;/code&gt;: Configure babel with special parser options.</source>
          <target state="translated">&lt;code&gt;parserOpts&lt;/code&gt; : 특수 파서 옵션으로 babel을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5b217d4cc3ff6cff681583c9725cc45d96f63898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: &lt;strong&gt;absolute path&lt;/strong&gt; to the manifest json file (output)</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; : 매니페스트 json 파일의 &lt;strong&gt;절대 경로&lt;/strong&gt; (출력)</target>
        </trans-unit>
        <trans-unit id="92206ab819a2663081a449c8fff2c0622185da39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paths&lt;/code&gt; (&lt;code&gt;[string, RegExp]&lt;/code&gt;): A list of RegExps or absolute paths to directories or files that should be ignored</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; ( &lt;code&gt;[string, RegExp]&lt;/code&gt; ): A list of RegExps or absolute paths to directories or files that should be ignored</target>
        </trans-unit>
        <trans-unit id="d3c9d3bfd834dc4909a8d37661b4adfb5dfb8e3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paths&lt;/code&gt; (array): A list of RegExps or absolute paths to directories or files that should be ignored</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; (배열) : 무시해야하는 디렉토리 또는 파일에 대한 RegExps 또는 절대 경로 목록</target>
        </trans-unit>
        <trans-unit id="a16d67555fc1d0c269f00987662330fa097483b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percentBy&lt;/code&gt; (&lt;code&gt;string = null: 'entries' | 'dependencies' | 'modules' | null&lt;/code&gt;): Tells &lt;code&gt;ProgressPlugin&lt;/code&gt; how to calculate progress percentage.</source>
          <target state="translated">&lt;code&gt;percentBy&lt;/code&gt; ( &lt;code&gt;string = null: 'entries' | 'dependencies' | 'modules' | null&lt;/code&gt; ): Tells &lt;code&gt;ProgressPlugin&lt;/code&gt; how to calculate progress percentage.</target>
        </trans-unit>
        <trans-unit id="3576d6bd29378c40508e13ce63b8a3473cec274c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percentage&lt;/code&gt;: This argument is unused; instead, &lt;a href=&quot;../plugins/progress-plugin&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt; will calculate a percentage based on the current hook.</source>
          <target state="translated">&lt;code&gt;percentage&lt;/code&gt; : This argument is unused; instead, &lt;a href=&quot;../plugins/progress-plugin&quot;&gt; &lt;code&gt;ProgressPlugin&lt;/code&gt; &lt;/a&gt; will calculate a percentage based on the current hook.</target>
        </trans-unit>
        <trans-unit id="71ae9fba640d4cd02b2f349f9b1b56d8ec13e0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percentage&lt;/code&gt;: a number between 0 and 1 indicating the completion percentage of the compilation</source>
          <target state="translated">&lt;code&gt;percentage&lt;/code&gt; : a number between 0 and 1 indicating the completion percentage of the compilation</target>
        </trans-unit>
        <trans-unit id="ce16a27c164a9ff52d84f31e535ed9537894ba39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plugins&lt;/code&gt; - webpack plugins that will be applied.</source>
          <target state="translated">&lt;code&gt;plugins&lt;/code&gt; - webpack plugins that will be applied.</target>
        </trans-unit>
        <trans-unit id="9d52aeea116fe943823931edc1b17771372b3732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;polymer-loader&lt;/code&gt; Process HTML &amp;amp; CSS with preprocessor of choice and &lt;code&gt;require()&lt;/code&gt; Web Components like first-class modules</source>
          <target state="translated">&lt;code&gt;polymer-loader&lt;/code&gt; 프리 로더 를 선택하고 일급 모듈과 같은 &lt;code&gt;require()&lt;/code&gt; 웹 컴포넌트를 사용 하여 HTML 및 CSS를 처리하는 폴리머 로더</target>
        </trans-unit>
        <trans-unit id="fe2a251a8e80bdb94fe3dbaaac12141235792801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;postcss-loader&lt;/code&gt; exposes context &lt;code&gt;ctx&lt;/code&gt; to the config file, making your &lt;code&gt;postcss.config.js&lt;/code&gt; dynamic, so can use it to do some real magic ✨</source>
          <target state="translated">&lt;code&gt;postcss-loader&lt;/code&gt; 는 컨텍스트 &lt;code&gt;ctx&lt;/code&gt; 를 구성 파일에 노출 하여 &lt;code&gt;postcss.config.js&lt;/code&gt; 를 동적으로 만들 므로 실제 마법을 수행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd6d75707ed5911a35552e8dd1b7250e76c42265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;posthtml-loader&lt;/code&gt; Loads and transforms a HTML file using &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;posthtml-loader&lt;/code&gt; 로드 및 변환 사용하여 HTML 파일 &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c946fb0de53d9482d56d7d141f72613338eb17b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preferEntry&lt;/code&gt; If true, references in entry chunks have higher priority</source>
          <target state="translated">&lt;code&gt;preferEntry&lt;/code&gt; true 인 경우 엔트리 청크의 참조가 우선 순위가 높습니다.</target>
        </trans-unit>
        <trans-unit id="3c05dab785fbc778e2ef5d0e6e7dcc3224374d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="40cfd96112745eb8a46043ded332f13e496b5cca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;profile&lt;/code&gt; (&lt;code&gt;boolean = false&lt;/code&gt;): Tells &lt;code&gt;ProgressPlugin&lt;/code&gt; to collect profile data for progress steps.</source>
          <target state="translated">&lt;code&gt;profile&lt;/code&gt; ( &lt;code&gt;boolean = false&lt;/code&gt; ): Tells &lt;code&gt;ProgressPlugin&lt;/code&gt; to collect profile data for progress steps.</target>
        </trans-unit>
        <trans-unit id="5070b1009663ab28c4c69d82f444664cc74d39a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protocol&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Allows user to override default protocol (&lt;code&gt;webpack-internal://&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;protocol&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : 사용자가 기본 프로토콜 ( &lt;code&gt;webpack-internal://&lt;/code&gt; ) 을 무시할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e59da5d14629d1da15e5b2a9d9a6838cc618b2bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;publicPath&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Emits absolute URLs with public path prefix, e.g. &lt;code&gt;https://example.com/project/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;publicPath&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ) : &lt;code&gt;https://example.com/project/&lt;/code&gt; 와 같이 공개 경로 접두사가있는 절대 URL을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="cd37c611940cbeeea9d89503f2bda317f3f5257b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pug-loader&lt;/code&gt; Loads Pug templates and returns a function</source>
          <target state="translated">&lt;code&gt;pug-loader&lt;/code&gt; 퍼그 템플릿을로드하고 함수를 반환</target>
        </trans-unit>
        <trans-unit id="b0e6057e8e0a9c0a2d8f392591492c2923f93d4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quiet&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;quiet&lt;/code&gt; (기본값 : &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4fe01ee89ca625674ef6044c7dc03e33e3be59d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;react-native&lt;/code&gt;: TBD</source>
          <target state="translated">&lt;code&gt;react-native&lt;/code&gt; : TBD</target>
        </trans-unit>
        <trans-unit id="cc3939a3d0d927b05942b0fdee0ba260de581926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;realResource&lt;/code&gt;: Always the path to the module being loaded</source>
          <target state="translated">&lt;code&gt;realResource&lt;/code&gt; : Always the path to the module being loaded</target>
        </trans-unit>
        <trans-unit id="7c9d22ec5f89a6eeba30995826560eb9244b5711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recursive&lt;/code&gt; - whether it is a recursive traversal.</source>
          <target state="translated">&lt;code&gt;recursive&lt;/code&gt; - whether it is a recursive traversal.</target>
        </trans-unit>
        <trans-unit id="88e3073aca2924e4fd42e8000d0cb2c6da80146e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regex&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;regex&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a548645cd9563a8616755e72c578c2c3bfea435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The import path being requested.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): The import path being requested.</target>
        </trans-unit>
        <trans-unit id="93060a6c4b0f1af1bc938482c827460077e8d7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt; - the request from which the chunk group is referenced.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; - the request from which the chunk group is referenced.</target>
        </trans-unit>
        <trans-unit id="d00e2245ca0390275c976c44248ade3ea9c5fb1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt; is the request to be resolved. Usually either relative requests like &lt;code&gt;./relative&lt;/code&gt; or module requests like &lt;code&gt;module/path&lt;/code&gt; are used, but absolute paths like &lt;code&gt;/some/path&lt;/code&gt; are also possible as requests.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 는 해결할 요청입니다. 일반적으로 &lt;code&gt;./relative&lt;/code&gt; 와 같은 상대 요청 또는 module &lt;code&gt;module/path&lt;/code&gt; 와 같은 모듈 요청 이 사용되지만 &lt;code&gt;/some/path&lt;/code&gt; 와 같은 절대 경로 도 요청으로 가능합니다.</target>
        </trans-unit>
        <trans-unit id="b0a0a0ef29e0d7aea76c73b706a9ad1020aa0e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt;: A request string for a normal module</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; : 일반 모듈의 요청 문자열</target>
        </trans-unit>
        <trans-unit id="f0317ab28176aae9bb1d334745b9a36b4c1c7dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestRegExp&lt;/code&gt; A RegExp to test the request against.</source>
          <target state="translated">&lt;code&gt;requestRegExp&lt;/code&gt; 요청을 테스트 할 RegExp입니다.</target>
        </trans-unit>
        <trans-unit id="7ae6784e1df5b57ff680349a224fd880a5267f27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestTimeout&lt;/code&gt; (number): The timeout used for manifest download (since webpack 3.0.0)</source>
          <target state="translated">&lt;code&gt;requestTimeout&lt;/code&gt; (number) : 매니페스트 다운로드에 사용 된 시간 초과 (webpack 3.0.0부터)</target>
        </trans-unit>
        <trans-unit id="9e7f8edb04da78dbec443b8bb14e51aec8507f48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require(&quot;./templates/&quot; + expr)&lt;/code&gt; should not include subdirectories by default: &lt;code&gt;wrappedContextRecursive: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;require(&quot;./templates/&quot; + expr)&lt;/code&gt; 는 기본적으로 서브 디렉토리를 포함하지 않아야합니다. &lt;code&gt;wrappedContextRecursive: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ded99b86901f6b2ef966ff9ddeb47e3348373c35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require('./templates/' + expr)&lt;/code&gt; should not include subdirectories by default: &lt;code&gt;wrappedContextRecursive: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;require('./templates/' + expr)&lt;/code&gt; should not include subdirectories by default: &lt;code&gt;wrappedContextRecursive: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e07b103955c48710b9b089c8c90493a0a120237e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require(expr)&lt;/code&gt; should include the whole directory: &lt;code&gt;exprContextRegExp: /^\.\//&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;require(expr)&lt;/code&gt; 는 전체 디렉토리를 포함해야합니다 : &lt;code&gt;exprContextRegExp: /^\.\//&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25c3668d62a78b1a9c9ea66940d5fcab493aa6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require(expr)&lt;/code&gt; should include the whole directory: &lt;code&gt;exprContextRegExp: /^\\.\\//&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;require(expr)&lt;/code&gt; should include the whole directory: &lt;code&gt;exprContextRegExp: /^\\.\\//&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a67843ab282574af3b546e102491fdf74ccbdeec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require.ensure()&lt;/code&gt; is specific to webpack and superseded by &lt;code&gt;import()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require.ensure()&lt;/code&gt; 는 webpack에 국한되며 &lt;code&gt;import()&lt;/code&gt; 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="31ef40817c57b04fd2a065f79c7299cbf0cd2903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require.resolveWeak&lt;/code&gt; is the foundation of &lt;em&gt;universal rendering&lt;/em&gt; (SSR + Code Splitting), as used in packages such as &lt;a href=&quot;https://github.com/faceyspacey/react-universal-component&quot;&gt;react-universal-component&lt;/a&gt;. It allows code to render synchronously on both the server and initial page-loads on the client. It requires that chunks are manually served or somehow available. It's able to require modules without indicating they should be bundled into a chunk. It's used in conjunction with &lt;code&gt;import()&lt;/code&gt; which takes over when user navigation triggers additional imports.</source>
          <target state="translated">&lt;code&gt;require.resolveWeak&lt;/code&gt; 는 &lt;a href=&quot;https://github.com/faceyspacey/react-universal-component&quot;&gt;react-universal-component&lt;/a&gt; 와 같은 패키지에 사용되는 &lt;em&gt;범용 렌더링&lt;/em&gt; (SSR + 코드 분할) 의 기초입니다 . 서버의 코드와 클라이언트의 초기 페이지로드에서 동기식으로 코드를 렌더링 할 수 있습니다. 청크는 수동으로 제공되거나 사용 가능한 상태 여야합니다. 모듈을 청크로 묶어야한다는 것을 나타내지 않고 모듈을 요구할 수 있습니다. 사용자 탐색이 추가 가져 오기를 트리거 할 때 인계하는 &lt;code&gt;import()&lt;/code&gt; 와 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ef373103963a964cb8c268f7cbdfdeb38648af0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; (amd-version)</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; (amd 버전)</target>
        </trans-unit>
        <trans-unit id="fb46860ee9f64a4d666e477b4a7e3add69c3811f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; label</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 라벨 필요</target>
        </trans-unit>
        <trans-unit id="f162e5e0e2551379a1f318d70fd1c6a8605f0cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require[js].config&lt;/code&gt; is removed. &lt;code&gt;require.version&lt;/code&gt; is &lt;code&gt;0.0.0&lt;/code&gt;. &lt;code&gt;requirejs.onError&lt;/code&gt; is mapped to &lt;code&gt;require.onError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require[js].config&lt;/code&gt; 가 제거되었습니다. &lt;code&gt;require.version&lt;/code&gt; 은 &lt;code&gt;0.0.0&lt;/code&gt; 입니다. &lt;code&gt;requirejs.onError&lt;/code&gt; 는 &lt;code&gt;require.onError&lt;/code&gt; 에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="bd0458c8917e10126296fab86a82aaa449f386d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.alias&lt;/code&gt; takes precedence over other module resolutions.</source>
          <target state="translated">&lt;code&gt;resolve.alias&lt;/code&gt; takes precedence over other module resolutions.</target>
        </trans-unit>
        <trans-unit id="02e1d8d02ad4802a8122eb412d53a1a499f31f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.fullySpecified&lt;/code&gt; doesn't affect requests from &lt;a href=&quot;resolve#resolvemainfields&quot;&gt;mainFields&lt;/a&gt;, &lt;a href=&quot;resolve#resolvealiasfields&quot;&gt;aliasFields&lt;/a&gt; or &lt;a href=&quot;resolve#resolvealias&quot;&gt;aliases&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;resolve.fullySpecified&lt;/code&gt; doesn't affect requests from &lt;a href=&quot;resolve#resolvemainfields&quot;&gt;mainFields&lt;/a&gt;, &lt;a href=&quot;resolve#resolvealiasfields&quot;&gt;aliasFields&lt;/a&gt; or &lt;a href=&quot;resolve#resolvealias&quot;&gt;aliases&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cd055ad5cdf28a9f326e299836e0a83416c714ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.modules&lt;/code&gt; defaults to:</source>
          <target state="translated">&lt;code&gt;resolve.modules&lt;/code&gt; 의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="12da6376b5f43cb117afeb32934be0df8b394a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.symlinks&lt;/code&gt; defaults to:</source>
          <target state="translated">&lt;code&gt;resolve.symlinks&lt;/code&gt; 의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7844cae3d77e57ddb4e90a427a5936ae6e0bb3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve&lt;/code&gt; is a function and returns the module id of the parsed request.</source>
          <target state="translated">&lt;code&gt;resolve&lt;/code&gt; 는 함수이며 구문 분석 된 요청의 모듈 ID를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="033acda2689504dc69070eded2c42f0ccb08c6a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resource&lt;/code&gt;: The path to the module being loaded, it is usually equal to &lt;code&gt;realResource&lt;/code&gt; except when the resource name is overwritten via &lt;code&gt;!=!&lt;/code&gt; in request string</source>
          <target state="translated">&lt;code&gt;resource&lt;/code&gt; : The path to the module being loaded, it is usually equal to &lt;code&gt;realResource&lt;/code&gt; except when the resource name is overwritten via &lt;code&gt;!=!&lt;/code&gt; in request string</target>
        </trans-unit>
        <trans-unit id="3dd25fedaf0ac07e1915beeecfe774cd808e44cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resourceRegExp&lt;/code&gt;: A RegExp to test the resource against.</source>
          <target state="translated">&lt;code&gt;resourceRegExp&lt;/code&gt; : A RegExp to test the resource against.</target>
        </trans-unit>
        <trans-unit id="2b230099140cf24b2139d9073e232c76a8ef365d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;): Describes the external module. Can accept a string in the format &lt;code&gt;${type} ${path}&lt;/code&gt;, or one of the other standard external formats (&lt;a href=&quot;#string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#string-1&quot;&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;result&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; &lt;code&gt;[string]&lt;/code&gt; &lt;code&gt;object&lt;/code&gt; ): Describes the external module. Can accept a string in the format &lt;code&gt;${type} ${path}&lt;/code&gt; , or one of the other standard external formats (&lt;a href=&quot;#string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#string-1&quot;&gt; &lt;code&gt;[string]&lt;/code&gt; &lt;/a&gt;, or &lt;a href=&quot;#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="98e6a1ba0aeb19a1ad184f7a9df0d3bbbd0f3d8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtime&lt;/code&gt; and &lt;code&gt;dependOn&lt;/code&gt; should not be used together on a single entry, so the following config is invalid and would throw an error:</source>
          <target state="translated">&lt;code&gt;runtime&lt;/code&gt; 및 &lt;code&gt;dependOn&lt;/code&gt; 은 단일 항목에서 함께 사용해서는 안되므로 다음 구성은 유효하지 않으며 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5f04337c3738a7b9c855904e319d86ddd36809cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtime&lt;/code&gt;: The name of the runtime chunk. If set, a runtime chunk with this name is created otherwise an existing entry point is used as runtime.</source>
          <target state="translated">&lt;code&gt;runtime&lt;/code&gt; : 런타임 청크의 이름입니다. 설정되면이 이름의 런타임 청크가 생성됩니다. 그렇지 않으면 기존 진입 점이 런타임으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="550e8bd1db46d7f41f1ca66a4a150d54b0bbb832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sass-loader&lt;/code&gt; requires you to install either &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; on your own (more documentation can be found below).</source>
          <target state="translated">&lt;code&gt;sass-loader&lt;/code&gt; requires you to install either &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; on your own (more documentation can be found below).</target>
        </trans-unit>
        <trans-unit id="ec0b4e4f324345ff2bc530c1a377e444533d7bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt; (optional): prefix which is used for accessing the content of the dll</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; (선택 사항) : dll의 내용에 액세스하는 데 사용되는 접두사</target>
        </trans-unit>
        <trans-unit id="0785c139508c998f6d7613e6d62f6a6b2d087292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;script&lt;/code&gt; should only be set when no module system is supported. When the script is preprocessed by a system supporting CommonJs it should set &lt;code&gt;require&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;script&lt;/code&gt; should only be set when no module system is supported. When the script is preprocessed by a system supporting CommonJs it should set &lt;code&gt;require&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="8cd6e43f07cd151cca5e8931b34927ba2862a3b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skip&lt;/code&gt; - do not consume the source map and do not remove &lt;code&gt;SourceMappingURL&lt;/code&gt; comment</source>
          <target state="translated">&lt;code&gt;skip&lt;/code&gt; - do not consume the source map and do not remove &lt;code&gt;SourceMappingURL&lt;/code&gt; comment</target>
        </trans-unit>
        <trans-unit id="8539db862e0e0c6aa6d50f5493a2ce7bd577bfdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snapshot&lt;/code&gt; options decide how the file system snapshots are created and invalidated.</source>
          <target state="translated">&lt;code&gt;snapshot&lt;/code&gt; options decide how the file system snapshots are created and invalidated.</target>
        </trans-unit>
        <trans-unit id="3c07ba83301c6f19431e2e1776a6c045f746efee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source-map-loader&lt;/code&gt; extracts existing source maps from all JavaScript entries. This includes both inline source maps as well as those linked via URL. All source map data is passed to webpack for processing as per a chosen &lt;a href=&quot;../configuration/devtool&quot;&gt;source map style&lt;/a&gt; specified by the &lt;code&gt;devtool&lt;/code&gt; option in &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;webpack.config.js&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;source-map-loader&lt;/code&gt; 는 모든 JavaScript 항목에서 기존 소스 맵을 추출합니다. 여기에는 인라인 소스 맵과 URL을 통해 연결된 맵이 모두 포함됩니다. 모든 소스지도 데이터는 선택에 따라 처리 웹팩에 전달되는 &lt;a href=&quot;../configuration/devtool&quot;&gt;소스지도 스타일&lt;/a&gt; 에 의해 지정된 &lt;code&gt;devtool&lt;/code&gt; 의 에서 옵션 &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;webpack.config.js&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a34f9e4ceac503efb55df7011499f257da04224e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source-map-loader&lt;/code&gt; will extract from any JavaScript file, including those in the &lt;code&gt;node_modules&lt;/code&gt; directory. Be mindful in setting &lt;a href=&quot;../configuration/module#rule-include&quot;&gt;include&lt;/a&gt; and &lt;a href=&quot;../configuration/module#rule-exclude&quot;&gt;exclude&lt;/a&gt; rule conditions to maximize bundling performance.</source>
          <target state="translated">&lt;code&gt;source-map-loader&lt;/code&gt; 는 &lt;code&gt;node_modules&lt;/code&gt; 디렉토리의 파일을 포함하여 모든 JavaScript 파일에서 추출 합니다. &lt;a href=&quot;../configuration/module#rule-include&quot;&gt;포함&lt;/a&gt; 및 &lt;a href=&quot;../configuration/module#rule-exclude&quot;&gt;제외&lt;/a&gt; 규칙 조건을 설정 하여 번들 성능을 최대화하십시오.</target>
        </trans-unit>
        <trans-unit id="9efabbbfb2bf40d9e8ac245494bfc95bbe99cadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source-map&lt;/code&gt; - A full SourceMap is emitted as a separate file. It adds a reference comment to the bundle so development tools know where to find it.</source>
          <target state="translated">&lt;code&gt;source-map&lt;/code&gt; map-전체 SourceMap이 별도의 파일로 생성됩니다. 번들에 참조 주석을 추가하여 개발 도구가 해당 위치를 찾을 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="478da4694372986076c669f6e489699536b2af19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; - the source of the asset</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; - the source of the asset</target>
        </trans-unit>
        <trans-unit id="2352eee2a648f5776604f445e0d6f297e1855bec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceMap&lt;/code&gt; - sourceMap</source>
          <target state="translated">&lt;code&gt;sourceMap&lt;/code&gt; - sourceMap</target>
        </trans-unit>
        <trans-unit id="ba03e9219119c1848db6481b7465ba3801012a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceMap&lt;/code&gt;: Configure a sourcemap style. Default: &lt;a href=&quot;../configuration/devtool&quot;&gt;webpackConfig.devtool&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;sourceMap&lt;/code&gt; : 소스 맵 스타일을 구성합니다. 기본값 : &lt;a href=&quot;../configuration/devtool&quot;&gt;webpackConfig.devtool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bc9fbe4895a846ae52423d0e6995507616a0ede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceMapFilename&lt;/code&gt; the filename template of the SourceMap. &lt;code&gt;[hash]&lt;/code&gt;, &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt;, &lt;code&gt;[file]&lt;/code&gt; and &lt;code&gt;[filebase]&lt;/code&gt; are replaced. If this argument is missing, the SourceMap will be inlined as DataUrl.</source>
          <target state="translated">&lt;code&gt;sourceMapFilename&lt;/code&gt; SourceMap의 파일 이름 템플릿입니다. &lt;code&gt;[hash]&lt;/code&gt; , &lt;code&gt;[name]&lt;/code&gt; , &lt;code&gt;[id]&lt;/code&gt; , &lt;code&gt;[file]&lt;/code&gt; 및 &lt;code&gt;[filebase]&lt;/code&gt; 가 교체됩니다. 이 인수가 없으면 SourceMap은 DataUrl로 인라인됩니다.</target>
        </trans-unit>
        <trans-unit id="194e69f9f64b46d961ff925e3e155988e59ba2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceRoot&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Provide a custom value for the &lt;code&gt;sourceRoot&lt;/code&gt; property in the SourceMap.</source>
          <target state="translated">&lt;code&gt;sourceRoot&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): Provide a custom value for the &lt;code&gt;sourceRoot&lt;/code&gt; property in the SourceMap.</target>
        </trans-unit>
        <trans-unit id="cbdaa4d7d1e7a549dbed3e1d9f012cb1ffbc77e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt; (optional): how the dll is exposed (&lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt;libraryTarget&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;sourceType&lt;/code&gt; (선택 사항) : dll 노출 방법 ( &lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt;libraryTarget&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a7f2b6b85daacf4e273538469c300b1329b1ff16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt; (optional): how the dll is exposed (&lt;a href=&quot;../configuration/output#outputlibrarytarget&quot;&gt;libraryTarget&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;sourceType&lt;/code&gt; (optional): how the dll is exposed (&lt;a href=&quot;../configuration/output#outputlibrarytarget&quot;&gt;libraryTarget&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="cd1459cb45dd6f57b1d55da8b770bed0ca9bdfd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceURLTemplate&lt;/code&gt;: Define the sourceURL default: &lt;code&gt;webpack-internal:///${module.identifier}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sourceURLTemplate&lt;/code&gt; : sourceURL 기본값을 정의하십시오. &lt;code&gt;webpack-internal:///${module.identifier}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f02f06ec1a64b1f3c4d61207d33df98b3c9b720c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; only takes effect when a single chunk is remaining.</source>
          <target state="translated">&lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; only takes effect when a single chunk is remaining.</target>
        </trans-unit>
        <trans-unit id="3202d48705c6aa56d815d9a48663e146edb4fc91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; option was introduced in webpack 5 to avoid zero sized modules by ensuring that the minimum size of the chunk which remains after splitting is above a limit. Defaults to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;'development' mode&lt;/a&gt;. For other cases &lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; defaults to the value of &lt;code&gt;splitChunks.minSize&lt;/code&gt; so it doesn't need to be specified manually except for the rare cases where deep control is required.</source>
          <target state="translated">&lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; option was introduced in webpack 5 to avoid zero sized modules by ensuring that the minimum size of the chunk which remains after splitting is above a limit. Defaults to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;'development' mode&lt;/a&gt;. For other cases &lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; defaults to the value of &lt;code&gt;splitChunks.minSize&lt;/code&gt; so it doesn't need to be specified manually except for the rare cases where deep control is required.</target>
        </trans-unit>
        <trans-unit id="9db0f31fa3a697a6640a1d236e72f49553909209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stats.warningsFilter&lt;/code&gt; is deprecated in favor of &lt;a href=&quot;other-options#ignorewarnings&quot;&gt;&lt;code&gt;ignoreWarnings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;stats.warningsFilter&lt;/code&gt; is deprecated in favor of &lt;a href=&quot;other-options#ignorewarnings&quot;&gt; &lt;code&gt;ignoreWarnings&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="58e98f33efe1456f9f222d6874e8ab4269edfa21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strictExportPresence&lt;/code&gt; makes missing exports an error instead of warning</source>
          <target state="translated">&lt;code&gt;strictExportPresence&lt;/code&gt; 는 누락 된 내보내기를 경고 대신 오류로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f69b148551112162951c3b3067b4eacfe5ce69c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '/'&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = '/'&lt;/code&gt; &lt;code&gt;[string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6235ff7f6f8f1396465955e7f6222b7a00c2a49f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '[hash].hot-update.json'&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = '[hash].hot-update.json'&lt;/code&gt; &lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1c7e4421e0191da0e2f2edde555a044ff1befff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '[id].js'&lt;/code&gt;&lt;code&gt;function (pathData, assetInfo) =&amp;gt; string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = '[id].js'&lt;/code&gt; &lt;code&gt;function (pathData, assetInfo) =&amp;gt; string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38f41f63d8aaac76d2c5368c0a50c2c38d87ea85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '[runtime].[fullhash].hot-update.json'&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = '[runtime].[fullhash].hot-update.json'&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="314ac5128fd7e25096c948dc2425923bde207baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'async'&lt;/code&gt;&lt;code&gt;function (chunk)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = 'async'&lt;/code&gt; &lt;code&gt;function (chunk)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="462538eca03fc50c04966468cb0f2bc043d655d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'eval'&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = 'eval'&lt;/code&gt; &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a06392f2e4d15092dd54dadf44f7811011df048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'info': 'none' | 'error' | 'warn' | 'info' | 'log' | 'verbose'&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = 'info': 'none' | 'error' | 'warn' | 'info' | 'log' | 'verbose'&lt;/code&gt; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d383076b9d719cd93791f90a85379485327a81ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'md4'&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = 'md4'&lt;/code&gt; &lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3db2daf3f9a9de3918d8ddc24813ea09457444fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'sockjs': 'sockjs' | 'ws'&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = 'sockjs': 'sockjs' | 'ws'&lt;/code&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb51b692dc5bfc9a6508cf5f86d39cfbf8baaa95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'warning': 'error' | 'warning'&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = 'warning': 'error' | 'warning'&lt;/code&gt; &lt;code&gt;boolean: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce1623ff04e1ce014642177227619671ecfdc991" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'webpack://[namespace]/[resource-path]?[loaders]'&lt;/code&gt;&lt;code&gt;function (info) =&amp;gt; string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string = 'webpack://[namespace]/[resource-path]?[loaders]'&lt;/code&gt; &lt;code&gt;function (info) =&amp;gt; string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="574f2b309a3624228286589fb056efb59946b256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string: 'module' | 'text/javascript'&lt;/code&gt;&lt;code&gt;boolean = false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string: 'module' | 'text/javascript'&lt;/code&gt; &lt;code&gt;boolean = false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a263a18c29045e5476f2fb3e1c1167ccf9ecc4e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string: 'none' | 'errors-only' | 'minimal' | 'normal' | 'verbose'&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string: 'none' | 'errors-only' | 'minimal' | 'normal' | 'verbose'&lt;/code&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c28320294196e0f7480f517525b8775e001acc09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string: 'require' | 'import-scripts' | 'async-node' | 'import' | 'universal'&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string: 'require' | 'import-scripts' | 'async-node' | 'import' | 'universal'&lt;/code&gt; &lt;code&gt;boolean: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4f07fe0076978bde993bb7a079f6a6c491ea4d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;object&lt;/code&gt; (since webpack 3.1.0; for &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 또는 &lt;code&gt;object&lt;/code&gt; (webpack 3.1.0부터; &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f7d8702b179ba18b37538a545170ed8dba8229ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;string[]&lt;/code&gt; (since webpack 3.0.0)</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 또는 &lt;code&gt;string[]&lt;/code&gt; (웹팩 3.0.0부터)</target>
        </trans-unit>
        <trans-unit id="08a1a8d7083ff70729dda85422c0d56faf4e24cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: &lt;code&gt;none&lt;/code&gt;&lt;code&gt;info&lt;/code&gt;&lt;code&gt;verbose&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : &lt;code&gt;none&lt;/code&gt; &lt;code&gt;info&lt;/code&gt; &lt;code&gt;verbose&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1f468fedbc628f1fa7b897e907a0cf65bb25439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(name) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;[string, RegExp, function(name) =&amp;gt; boolean]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;function(name) =&amp;gt; boolean&lt;/code&gt; &lt;code&gt;[string, RegExp, function(name) =&amp;gt; boolean]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f27f45099cba0d8ba069952eeb9a8838716139a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="839f1a8e5c743b1931ca7254e904c5767a1f21f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cf95a5883f964602d22c2ba7935cecec61c3628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object = { &amp;lt;key&amp;gt; string | [string] | object = { import string | [string], dependOn string | [string], filename string }}&lt;/code&gt;&lt;code&gt;(function() =&amp;gt; string | [string] | object = { &amp;lt;key&amp;gt; string | [string] } | object = { import string | [string], dependOn string | [string], filename string })&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &lt;code&gt;[string]&lt;/code&gt; &lt;code&gt;object = { &amp;lt;key&amp;gt; string | [string] | object = { import string | [string], dependOn string | [string], filename string }}&lt;/code&gt; &lt;code&gt;(function() =&amp;gt; string | [string] | object = { &amp;lt;key&amp;gt; string | [string] } | object = { import string | [string], dependOn string | [string], filename string })&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2abda8660ef8aec0c9134673a42449e3e91107c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object = { &amp;lt;key&amp;gt; string | [string] | object = { import string | [string], dependOn string | [string], filename string, layer string }}&lt;/code&gt;&lt;code&gt;(function() =&amp;gt; string | [string] | object = { &amp;lt;key&amp;gt; string | [string] } | object = { import string | [string], dependOn string | [string], filename string })&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object = { &amp;lt;key&amp;gt; string | [string] | object = { import string | [string], dependOn string | [string], filename string, layer string }}&lt;/code&gt;&lt;code&gt;(function() =&amp;gt; string | [string] | object = { &amp;lt;key&amp;gt; string | [string] } | object = { import string | [string], dependOn string | [string], filename string })&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ad1a2dc00e34a34c7a6d210410781b34b558d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff0fc08588e8313b12c2276a9f6267967f4b5bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;bool: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &lt;code&gt;bool: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c4993b5a832f7ece1f7b99faad31ef6e93ee633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &lt;code&gt;boolean: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd2a5d99d6a3c58a34094e208c0907ca7d6dd50a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a78436d14553d7bd1fceeeff0417a8a465d526d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function (info)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &lt;code&gt;function (info)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8350d340d358fcf237dd030a0efa2ff129c61bcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function (pathData, assetInfo) =&amp;gt; string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &lt;code&gt;function (pathData, assetInfo) =&amp;gt; string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1d33b7c782696990a9ad54aa296740048514443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9f4b43f7a2cf03aecf02ecdf8aaa8da5e8670ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3cd77650c61414b3e1b50de855b54207965f2c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;regex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;regex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ef8dcb7a58ce13b8c8d4a880b431607ef8ee024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c212acb1597fa82c38a80be2ba7aca190f975bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27bcbf2e8f4a048c76c26749ef78e3dab5708c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylelint-webpack-plugin&lt;/code&gt; allows defining a &lt;a href=&quot;https://en.wikipedia.org/wiki/Glob_(programming&quot;&gt;glob pattern&lt;/a&gt;) matching the configuration and use of &lt;code&gt;stylelint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stylelint-webpack-plugin&lt;/code&gt; 결정적인 허용 &lt;a href=&quot;https://en.wikipedia.org/wiki/Glob_(programming&quot;&gt;글롭 패턴&lt;/a&gt; )의 구성 및 사용에 일치 &lt;code&gt;stylelint&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="06d5fc64b891aae49907ff60164910a84d99184b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylus-loader&lt;/code&gt; Loads and compiles a Stylus file</source>
          <target state="translated">&lt;code&gt;stylus-loader&lt;/code&gt; Stylus 파일로드 및 컴파일</target>
        </trans-unit>
        <trans-unit id="643558831cbb089be9a99ac07cba7d63646638f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtract: ['./math', 'subtract']&lt;/code&gt; allows you select part of a commonjs module, where &lt;code&gt;./math&lt;/code&gt; is the module and your bundle only requires the subset under the &lt;code&gt;subtract&lt;/code&gt; variable. This example would translate to &lt;code&gt;require('./math').subtract;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;subtract: ['./math', 'subtract']&lt;/code&gt; allows you select part of a commonjs module, where &lt;code&gt;./math&lt;/code&gt; is the module and your bundle only requires the subset under the &lt;code&gt;subtract&lt;/code&gt; variable. This example would translate to &lt;code&gt;require('./math').subtract;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="379b966b4e6cad868bcbf51b9ebbe72661b7b76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtract: ['./math', 'subtract']&lt;/code&gt; converts to a parent child construct, where &lt;code&gt;./math&lt;/code&gt; is the parent module and your bundle only requires the subset under &lt;code&gt;subtract&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;subtract: ['./math', 'subtract']&lt;/code&gt; 는 부모 자식 구문으로 변환됩니다. 여기서 &lt;code&gt;./math&lt;/code&gt; 는 부모 모듈이며 번들에는 &lt;code&gt;subtract&lt;/code&gt; 변수 아래에 하위 집합 만 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="ef5164b3c5d05f2a9ab4e67fd081b4a5841f0a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syncWebAssembly&lt;/code&gt;: Support the old WebAssembly like in webpack 4</source>
          <target state="translated">&lt;code&gt;syncWebAssembly&lt;/code&gt; : Support the old WebAssembly like in webpack 4</target>
        </trans-unit>
        <trans-unit id="53cc4db57b53df27e4f678449e1d14a88ff82981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syntax&lt;/code&gt; - can be &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;named&lt;/code&gt; for the &lt;code&gt;module&lt;/code&gt; type (&lt;code&gt;ES modules&lt;/code&gt; module format), and &lt;code&gt;single&lt;/code&gt; or &lt;code&gt;multiple&lt;/code&gt; for the &lt;code&gt;commonjs&lt;/code&gt; type (&lt;code&gt;CommonJS&lt;/code&gt; module format) (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="translated">&lt;code&gt;syntax&lt;/code&gt; - can be &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;named&lt;/code&gt; for the &lt;code&gt;module&lt;/code&gt; type ( &lt;code&gt;ES modules&lt;/code&gt; module format), and &lt;code&gt;single&lt;/code&gt; or &lt;code&gt;multiple&lt;/code&gt; for the &lt;code&gt;commonjs&lt;/code&gt; type ( &lt;code&gt;CommonJS&lt;/code&gt; module format) (&lt;strong&gt;may be omitted&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="e39ae5bbdd5d0cb92d2b4dc7316258ff6b741994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syntax&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;syntax&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="53b179ee26ae5800d8731bc2b3fb5dd393214fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[string, RegExp]&lt;/code&gt;): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.mjs&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;[string, RegExp]&lt;/code&gt; ): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt; , &lt;code&gt;.mjs&lt;/code&gt; , and &lt;code&gt;.css&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bfd6559104e78ca43f4eeb31bfc19b3fef898ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; (&lt;code&gt;string|RegExp|array&lt;/code&gt;): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.css&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ( &lt;code&gt;string|RegExp|array&lt;/code&gt; ): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.css&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="30f3d93d2484ca7387c45611ddf53f44d9f9e869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; (&lt;code&gt;string|regex|array&lt;/code&gt;): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.css&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ( &lt;code&gt;string|regex|array&lt;/code&gt; ) : 확장에 따라 모듈의 소스 맵을 포함합니다 (기본값은 &lt;code&gt;.js&lt;/code&gt; 및 &lt;code&gt;.css&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9ae4c3827bbd51d3886a6272aa9ffc56c93698bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;5.20.0+: Specify which imported modules should be lazily compiled.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 5.20.0+ : 어떤 임포트 모듈을 지연 컴파일해야하는지 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ea7a69f461af7cf49567ec7d870f273a16ea0c62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: All assets matching this RegExp are processed. Defaults to every asset.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; :이 RegExp와 일치하는 모든 자산이 처리됩니다. 모든 자산의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="630d88e8ee005d31146ea737a2b6bfdfd8addfca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: Test to match files against. Default: &lt;code&gt;/\.js($|\?)/i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; : 파일과 일치 하는지 테스트합니다. 기본값 : &lt;code&gt;/\.js($|\?)/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c33431aac1f8c562588138f4e7ddeaef97a95a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.loadModule&lt;/code&gt; in a loader context uses CommonJS resolve rules by default. Use &lt;code&gt;this.getResolve&lt;/code&gt; with an appropriate &lt;code&gt;dependencyType&lt;/code&gt;, e.g. &lt;code&gt;'esm'&lt;/code&gt;, &lt;code&gt;'commonjs'&lt;/code&gt; or a custom one before using a different semantic.</source>
          <target state="translated">&lt;code&gt;this.loadModule&lt;/code&gt; in a loader context uses CommonJS resolve rules by default. Use &lt;code&gt;this.getResolve&lt;/code&gt; with an appropriate &lt;code&gt;dependencyType&lt;/code&gt; , e.g. &lt;code&gt;'esm'&lt;/code&gt; , &lt;code&gt;'commonjs'&lt;/code&gt; or a custom one before using a different semantic.</target>
        </trans-unit>
        <trans-unit id="a78302180690ca8947ecbc792454de24149b155f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisCallback&lt;/code&gt; - function to be invoked when the module finishes rebuilding.</source>
          <target state="translated">&lt;code&gt;thisCallback&lt;/code&gt; - function to be invoked when the module finishes rebuilding.</target>
        </trans-unit>
        <trans-unit id="3d5120836d599429064eaf0cbdb8e320b6e4d0fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;threshold&lt;/code&gt;: Only assets bigger than this size are processed. In bytes. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;threshold&lt;/code&gt; :이 크기보다 큰 자산 만 처리됩니다. 바이트 단위. 기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fd305dd27a5a3d97ab8efbc635dae1b99eadccaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timestamp&lt;/code&gt;: Compare timestamps to determine invalidation.</source>
          <target state="translated">&lt;code&gt;timestamp&lt;/code&gt; : Compare timestamps to determine invalidation.</target>
        </trans-unit>
        <trans-unit id="cd18700d54680b68b451d511343f8dc5933a7633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topLevelAwait&lt;/code&gt;: Support the &lt;a href=&quot;https://github.com/tc39/proposal-top-level-await&quot;&gt;Top Level Await Stage 3 proposal&lt;/a&gt;, it makes the module an async module when &lt;code&gt;await&lt;/code&gt; is used on the top-level</source>
          <target state="translated">&lt;code&gt;topLevelAwait&lt;/code&gt; : Support the &lt;a href=&quot;https://github.com/tc39/proposal-top-level-await&quot;&gt;Top Level Await Stage 3 proposal&lt;/a&gt;, it makes the module an async module when &lt;code&gt;await&lt;/code&gt; is used on the top-level</target>
        </trans-unit>
        <trans-unit id="00bf0ebc163a4f3847264f5d395868510380ffaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;traceur-loader&lt;/code&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/google/traceur-compiler#readme&quot;&gt;Traceur&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;traceur-loader&lt;/code&gt; Traceur를 사용하여 &lt;a href=&quot;https://github.com/google/traceur-compiler#readme&quot;&gt;ES2015&lt;/a&gt; + 코드를로드하고 ES5로 변환</target>
        </trans-unit>
        <trans-unit id="87cf33416d775982275cab061668829fdb646a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transformed code&lt;/code&gt; - You see each module separated from each other, annotated with module names. You see the code before webpack transforms it, but after Loaders transpile it. Example: Instead of &lt;code&gt;import {test} from &quot;module&quot;; class A extends test {}&lt;/code&gt; you see something like &lt;code&gt;import {test} from &quot;module&quot;; var A = function(_test) { ... }(test);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;transformed code&lt;/code&gt; -각 모듈이 서로 분리되어 있고 모듈 이름으로 주석이 달린 것을 볼 수 있습니다. 웹팩이 코드를 변환하기 전이지만 로더가 코드를 변환 한 후에 코드가 표시됩니다. 예 : &lt;code&gt;import {test} from &quot;module&quot;; class A extends test {}&lt;/code&gt; 대신 ; 클래스 A는 {} 테스트를 확장합니다 &lt;code&gt;import {test} from &quot;module&quot;; var A = function(_test) { ... }(test);&lt;/code&gt; 와 같은 것이 보입니다 . var A = function (_test) {...} (test);</target>
        </trans-unit>
        <trans-unit id="9c019ab9945eb2edb2bbdb025c3d70fc6238dc0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transportMode&lt;/code&gt; is an experimental option, meaning its usage could potentially change without warning.</source>
          <target state="translated">&lt;code&gt;transportMode&lt;/code&gt; is an experimental option, meaning its usage could potentially change without warning.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
