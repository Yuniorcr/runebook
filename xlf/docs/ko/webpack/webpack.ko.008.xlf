<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="aa3afefe72790380f9808b4dff5a61622b6267d7" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.dirname&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;file.dirname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8b5890ce141620217849910ef33a2967576fd9f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.extname&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;file.extname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb9b2142304351efc8abbda97c00399b5e2d96a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.folder&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.folder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93524c6dfbaa1799587fcb958863ba6a56259b4a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.query&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.query&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf3c7cf42bbb64710fedd3042e2fade6c248c662" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;md4&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;md4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b97332f91a7fb4d7a6f0a6ca1c07ca2d66755569" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b40e8955703b7795ceda160c5ceadbd272eab79" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80a2859cf2d6869eaf9638fb16620ffcf5277e9f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;options.context|compiler.options.context&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;options.context|compiler.options.context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8388c10e54000d4de84160be8aca57b37c6901be" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;process.cwd()&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;process.cwd()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c585da8fcefc2ed263792cc9c85853571e8fbb7a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;styleTag&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;styleTag&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="856eda01ea92fee417c94b9f976fd41b8817e945" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59b2e26d84b0121a329aae253cc8ee15c7293d87" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: based on &lt;code&gt;output.chunkFilename&lt;/code&gt;, adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.chunkFilename: '[id].js'&lt;/code&gt; value of this option will be &lt;code&gt;[id].worker.js&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: based on &lt;code&gt;output.chunkFilename&lt;/code&gt; , adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.chunkFilename: '[id].js'&lt;/code&gt; value of this option will be &lt;code&gt;[id].worker.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cf40b3ba9663df4bddd3abf6f23c4f31bf0756a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: based on the &lt;code&gt;modules.namedExport&lt;/code&gt; option value, if &lt;code&gt;true&lt;/code&gt; - &lt;code&gt;camelCaseOnly&lt;/code&gt;, otherwise &lt;code&gt;asIs&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: based on the &lt;code&gt;modules.namedExport&lt;/code&gt; option value, if &lt;code&gt;true&lt;/code&gt; - &lt;code&gt;camelCaseOnly&lt;/code&gt; , otherwise &lt;code&gt;asIs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f83500ee648aa9833c754108f00ba4c21bd0bf50" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array&amp;lt;String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Array&amp;lt;String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13f6e2158fdac0cc588821ccc5e6373f2e06c702" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28844db8ffd87c45124157ecf76d46da54a4dbc2" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array[String]&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Array[String]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db8cb2d531af0482fa5e26cb76d4c1b4bd4ddf6e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array[String]&lt;/code&gt; Default: &lt;code&gt;'**/*.s?(a|c)ss'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Array[String]&lt;/code&gt; 기본값 : &lt;code&gt;'**/*.s?(a|c)ss'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5d6a274566e694fad73aaf0e1a035f901d9c71f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Boolean&lt;/code&gt; Default: &lt;code&gt;text/css&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Boolean&lt;/code&gt; Default: &lt;code&gt;text/css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0cfd43f77b19279843713625949db91e7de44cbc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Buffer&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;&lt;em&gt;Required&lt;/em&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Buffer&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt; &lt;em&gt;필수&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c952db2a957a0e68fdbb0804459d83d2054a50d1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[file].LICENSE.txt[query]&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[file].LICENSE.txt[query]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="373ac4265a6b36cab996be0158efe1f99468c92d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c03450e5e444ce147a92117d35e5438de7eba23b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific&quot;&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;&lt;/a&gt;+outputPath</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific&quot;&gt; &lt;code&gt;__webpack_public_path__&lt;/code&gt; &lt;/a&gt;+outputPath</target>
        </trans-unit>
        <trans-unit id="28283229d6030ab5c7fc80576b4f1863027b6f9e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific-&quot;&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Function&lt;/code&gt; 기본값 : &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific-&quot;&gt; &lt;code&gt;__webpack_public_path__&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a87da5454f7f257aef151e60977c28421e51cf00" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;&quot;[path][base].gz&quot;&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;&quot;[path][base].gz&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbad5e6df88ebed3953aa4a84674b9f46ceba6db" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[contenthash].[ext]'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[contenthash].[ext]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="360ab5e9d49ff583c21f7d76eb3d326afea79f20" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[hash].[ext]'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Function&lt;/code&gt; 기본값 : &lt;code&gt;'[hash].[ext]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d341e5b91c99fdd338e2c267ab557fac452e24d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'local'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'local'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7d12f3fc3362d6b95cbc5af61377f814a08add6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;[name].css&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;[name].css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cea08d8cc38de763c51013295d9c833262fa93f3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;based on filename&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;based on filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8905707a7cdd2f1bfcb2e08f747141ffe196f8f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;compiler.options.output&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Function&lt;/code&gt; 기본값 : &lt;code&gt;compiler.options.output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3ca759aa7b4b478627f625fc693bb2ed73b5e4d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;document.head.appendChild(linkTag);&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;document.head.appendChild(linkTag);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b593763afcd5e05cb97fb6b1c8b1f326f003b86e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;gzip&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;gzip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fab7e59215eaf65fb923d90715d7a93c7dd88efc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;head&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;head&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3091c75d84d793177ba7ea3b610ff90640c8fc55" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Function&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32626a800691e23867c96cc5b1de72fff7c4412" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.filename&lt;/code&gt;, adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.filename: '[name].js'&lt;/code&gt; value of this option will be &lt;code&gt;[name].worker.js&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.filename&lt;/code&gt; , adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.filename: '[name].js'&lt;/code&gt; value of this option will be &lt;code&gt;[name].worker.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c18c13b5d9fc9e0eb2c8c94f63d67e46c10feb91" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.publicPath&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.publicPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d26e9e323968365324d822faa5945c81e808ecd5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: the &lt;code&gt;publicPath&lt;/code&gt; in &lt;code&gt;webpackOptions.output&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: the &lt;code&gt;publicPath&lt;/code&gt; in &lt;code&gt;webpackOptions.output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee550ce7ace209afcbb5ab7d70ad24c469493180" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Object&lt;/code&gt; Default: &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Object&lt;/code&gt; Default: &lt;code&gt;Worker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f94280a8675aa87217323d81e29676113f9a627" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Object|Array&amp;lt;String|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Object|Array&amp;lt;String|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07e93852aca3bd1f3b2c32924cd64f9dcb7f9a63" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8113ae3d265d1a67acc2263bc2ca536d74c3ff2a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String,RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|RegExp|Array&amp;lt;String,RegExp&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5fe0a0f05442268f580aa161cdc944b91702948" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.css(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.css(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fb6ecbfcdbe169219c53a75e898160feb271bea" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.html(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.html(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d106a5ab125b4c4095e2d5da1adb13324e300f6e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.json(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.json(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eca9efcb50f187a5f0d48d1fdd2486fd7af1ab13" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.(jpe?g\|png\|gif\|tif\|webp\|svg\|avif)\$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.(jpe?g\|png\|gif\|tif\|webp\|svg\|avif)\$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="320946a2f8aa42823718e5ab474d626b42e6baff" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.m?js(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.m?js(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ce081b1c4c31411700b2d458dd1888a6339363e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8934b279910804f1f8bc4c336642d991000141ed" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;[type: string]: ResolveOptions&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;[type: string]: ResolveOptions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14a515b50af7c63ac2d08669f57e2fea411c6b39" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="843be23240f173585797170498921f34f2d45976" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efe869ac0809a32605659081106354bf706927c0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="c2d9ac914c647cad0dbcbcb87931238e275c6336" translate="yes" xml:space="preserve">
          <source>TypeScript Loader</source>
          <target state="translated">TypeScript 로더</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="1f7c2dd82181496d2b141ba86b492b3af4761c11" translate="yes" xml:space="preserve">
          <source>Typical Use Cases</source>
          <target state="translated">일반적인 사용 사례</target>
        </trans-unit>
        <trans-unit id="bdc2668b0893170109e3358e3f8b6cc8e3f68770" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.hotUpdateChunkFilename&lt;/code&gt;.</source>
          <target state="translated">Typically you don't need to change &lt;code&gt;output.hotUpdateChunkFilename&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80832d1efef1dbec926f99fc3dd7765908e985ec" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.hotUpdateMainFilename&lt;/code&gt;.</source>
          <target state="translated">Typically you don't need to change &lt;code&gt;output.hotUpdateMainFilename&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e8fa7ca58f14dbe0e88e31b82253c2fe8330c7" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.sourcePrefix&lt;/code&gt;.</source>
          <target state="translated">Typically you don't need to change &lt;code&gt;output.sourcePrefix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b1515c87f6a7ea85127e01e963023637ee473a4" translate="yes" xml:space="preserve">
          <source>Typically, only one master &lt;code&gt;Compiler&lt;/code&gt; instance is created, although child compilers can be created in order to delegate specific tasks. The &lt;code&gt;Compiler&lt;/code&gt; is ultimately just a function which performs bare minimum functionality to keep a lifecycle running. It delegates all the loading, bundling, and writing work to registered plugins.</source>
          <target state="translated">특정 작업을 위임하기 위해 자식 컴파일러를 만들 수 있지만 일반적으로 하나의 마스터 &lt;code&gt;Compiler&lt;/code&gt; 인스턴스 만 만들어집니다. &lt;code&gt;Compiler&lt;/code&gt; 궁극적으로 라이프 사이클을 계속 실행하기위한 최소한의 기능을 수행하는 단지 기능입니다. 모든로드, 번들 및 쓰기 작업을 등록 된 플러그인에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="c3f8e78bf56c04e550ab81796136efb41f9da8c9" translate="yes" xml:space="preserve">
          <source>UMD: available after AMD or CommonJS &lt;code&gt;require&lt;/code&gt; (&lt;code&gt;libraryTarget:'umd'&lt;/code&gt;).</source>
          <target state="translated">UMD : AMD 또는 CommonJS가 &lt;code&gt;require&lt;/code&gt; 후에 사용 가능 합니다 ( &lt;code&gt;libraryTarget:'umd'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="f94ecfbd0d2bcb50a727f623eb96ddebf3c848c2" translate="yes" xml:space="preserve">
          <source>URL assets</source>
          <target state="translated">URL assets</target>
        </trans-unit>
        <trans-unit id="a7306d507f537995a908cdc2c667543de98fc215" translate="yes" xml:space="preserve">
          <source>UglifyJsPlugin</source>
          <target state="translated">UglifyJsPlugin</target>
        </trans-unit>
        <trans-unit id="3d9844683293513f543c7b29de1eca0738819eb5" translate="yes" xml:space="preserve">
          <source>UglifyjsWebpackPlugin</source>
          <target state="translated">UglifyjsWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="6269c568a3b218ceca1f87557b01a5fd9630fc75" translate="yes" xml:space="preserve">
          <source>Under The Hood</source>
          <target state="translated">Under The Hood</target>
        </trans-unit>
        <trans-unit id="a97df0e9ab39030d7a23b49ea204e7804ae6467e" translate="yes" xml:space="preserve">
          <source>Unfortunately, Less doesn't map all options 1-by-1 to camelCase. When in doubt, &lt;a href=&quot;https://github.com/less/less.js/blob/3.x/bin/lessc&quot;&gt;check their executable&lt;/a&gt; and search for the dash-case option.</source>
          <target state="translated">불행히도 Less는 모든 옵션을 카멜 케이스에 하나씩 매핑하지 않습니다. 때 의심, &lt;a href=&quot;https://github.com/less/less.js/blob/3.x/bin/lessc&quot;&gt;자신의 실행 파일을 확인&lt;/a&gt; 하고 대시 경우의 옵션을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="02b28fce43a60e9b67980e224a3271b9d05a18d1" translate="yes" xml:space="preserve">
          <source>Unique ident for this plugin instance. (For advanced usage only, by default automatically generated)</source>
          <target state="translated">이 플러그인 인스턴스의 고유 ID입니다. (고급 사용의 경우 기본적으로 자동 생성됨)</target>
        </trans-unit>
        <trans-unit id="38096a0782d24be3f1ac8a005109a6f9e98a2e3c" translate="yes" xml:space="preserve">
          <source>Unlicense</source>
          <target state="translated">Unlicense</target>
        </trans-unit>
        <trans-unit id="87275ae56cb19d69dde22669d78018993c53c041" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt;, default values are applied to &lt;code&gt;JSON.stringify&lt;/code&gt; by the &lt;code&gt;EnvironmentPlugin&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; &lt;/a&gt; 과 달리 기본값 은 &lt;code&gt;EnvironmentPlugin&lt;/code&gt; 에 의해 &lt;code&gt;JSON.stringify&lt;/code&gt; 에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3f04a0cd74b23ebbf601fa4c959ce4e4655cc47" translate="yes" xml:space="preserve">
          <source>Unlike throwing an Error directly, it will NOT interrupt the compilation process of the current module.</source>
          <target state="translated">Unlike throwing an Error directly, it will NOT interrupt the compilation process of the current module.</target>
        </trans-unit>
        <trans-unit id="67460e2fd161078fefa4bc5f650d2ab4df1bb707" translate="yes" xml:space="preserve">
          <source>Unseals the compilation.</source>
          <target state="translated">Unseals the compilation.</target>
        </trans-unit>
        <trans-unit id="97906c9c9c0bfb96fc8e4c7b67d7ad433d30558b" translate="yes" xml:space="preserve">
          <source>Updates style &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;</source>
          <target state="translated">업데이트 스타일 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a64583707dd31180fe5a0ab3c47efa644fc29e01" translate="yes" xml:space="preserve">
          <source>Usable in web, Node.js, etc.</source>
          <target state="translated">Usable in web, Node.js, etc.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="855dfd5dbc4d5f3c81b2429eeef839b85bd8fb6b" translate="yes" xml:space="preserve">
          <source>Usage as a function:</source>
          <target state="translated">Usage as a function:</target>
        </trans-unit>
        <trans-unit id="3439e83eddd9b986dc9a370152a22cf7dcf9b189" translate="yes" xml:space="preserve">
          <source>Usage example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="9de2343e3dff906827854d6f9144e5566b51cab5" translate="yes" xml:space="preserve">
          <source>Usage via CLI</source>
          <target state="translated">Usage via CLI</target>
        </trans-unit>
        <trans-unit id="41cb38aef0f43893edb2a921684f2f6f40f9e95c" translate="yes" xml:space="preserve">
          <source>Usage via the CLI</source>
          <target state="translated">CLI를 통한 사용법</target>
        </trans-unit>
        <trans-unit id="049f5e1baa1376397ff904e81ced9390d85660bb" translate="yes" xml:space="preserve">
          <source>Usage with config file</source>
          <target state="translated">구성 파일 사용</target>
        </trans-unit>
        <trans-unit id="420dc5d6f5dd5e472ab220d4ffe705c20bd6dcc7" translate="yes" xml:space="preserve">
          <source>Usage with default values</source>
          <target state="translated">기본값이있는 사용법</target>
        </trans-unit>
        <trans-unit id="f0bda72188507cba1ef2ddbd4e83a886112b7438" translate="yes" xml:space="preserve">
          <source>Usage with require statement loader prefix</source>
          <target state="translated">require 문 로더 접두사와 함께 사용</target>
        </trans-unit>
        <trans-unit id="785ae0c3486e73e9f8b768557933a332df04dc7d" translate="yes" xml:space="preserve">
          <source>Usage without config file</source>
          <target state="translated">구성 파일이없는 사용법</target>
        </trans-unit>
        <trans-unit id="821e5fac998dd151dcf624b207788a33d5618f3d" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: string | [string]&lt;/code&gt;</source>
          <target state="translated">Usage: &lt;code&gt;entry: string | [string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71ee1172757fd42561b9cf137f9ab461f5d586e7" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: string|Array&amp;lt;string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">사용법 : &lt;code&gt;entry: string|Array&amp;lt;string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c731a73c08ff4c5db49b52bc479ab6f7d72672d6" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: { &amp;lt;entryChunkName&amp;gt; string | [string] } | {}&lt;/code&gt;</source>
          <target state="translated">Usage: &lt;code&gt;entry: { &amp;lt;entryChunkName&amp;gt; string | [string] } | {}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e054d435d046f8777136e4b00386b25fc845a634" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: {[entryChunkName: string]: string|Array&amp;lt;string&amp;gt;}&lt;/code&gt;</source>
          <target state="translated">사용법 : &lt;code&gt;entry: {[entryChunkName: string]: string|Array&amp;lt;string&amp;gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="048a95d8e63a18a35214152fa9cdd1ca3affe9c9" translate="yes" xml:space="preserve">
          <source>Usage: Lodash Map</source>
          <target state="translated">사용법 : Lodash Map</target>
        </trans-unit>
        <trans-unit id="bd71a2d8f7fdfbd229f3ddfe2c52c1ebc36f92b1" translate="yes" xml:space="preserve">
          <source>Usage: Vue.js</source>
          <target state="translated">사용법 : Vue.js</target>
        </trans-unit>
        <trans-unit id="c71a7f709525e96282aab1489390403a74f7af5e" translate="yes" xml:space="preserve">
          <source>Usage: custom &lt;code&gt;outputPath&lt;/code&gt;</source>
          <target state="translated">사용법 : 사용자 정의 &lt;code&gt;outputPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6074933fbc4d7ed357713b8393150012a221bc81" translate="yes" xml:space="preserve">
          <source>Usage: default</source>
          <target state="translated">사용법 : 기본값</target>
        </trans-unit>
        <trans-unit id="97aa9139b5759d53264af935bc8b66d67296c1c9" translate="yes" xml:space="preserve">
          <source>Usage: jQuery</source>
          <target state="translated">사용법 : jQuery</target>
        </trans-unit>
        <trans-unit id="c9948b5c3a0efb386160d78d9e95149d8988754d" translate="yes" xml:space="preserve">
          <source>Usage: jQuery with Angular 1</source>
          <target state="translated">사용법 : jQuery with Angular 1</target>
        </trans-unit>
        <trans-unit id="869ecff01bd52cd043623763e88d11d1b1ab5862" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../configuration/other-options#cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt; option in webpack configuration. Clear cache directory on &lt;code&gt;&quot;postinstall&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">웹팩 구성에서 &lt;a href=&quot;../configuration/other-options#cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt; 옵션을 사용하십시오 . &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;&quot;postinstall&quot;&lt;/code&gt; 에서 캐시 디렉토리를 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="10e8c6c7100f2e71b8c6dc58009dbebb98bbfdda" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/webpack/webpack-cli/tree/master/packages/init#cli-via-webpack-cli&quot;&gt;webpack-cli's &lt;code&gt;init&lt;/code&gt; command&lt;/a&gt; to rapidly generate webpack configuration file for your project requirements, it will ask you a couple of questions before creating a configuration file.</source>
          <target state="translated">Use &lt;a href=&quot;https://github.com/webpack/webpack-cli/tree/master/packages/init#cli-via-webpack-cli&quot;&gt;webpack-cli's &lt;code&gt;init&lt;/code&gt; command&lt;/a&gt; to rapidly generate webpack configuration file for your project requirements, it will ask you a couple of questions before creating a configuration file.</target>
        </trans-unit>
        <trans-unit id="a0d2dcef687f9ba1414902a7a171079ca116b9ab" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;script type=&quot;module&quot; src=&quot;es6_out_path.js&quot;&amp;gt;&lt;/code&gt; to target modern browsers and &lt;code&gt;&amp;lt;script nomodule src=&quot;es5_out_path.js&quot;&amp;gt;&lt;/code&gt; for older browsers.</source>
          <target state="translated">Use &lt;code&gt;&amp;lt;script type=&quot;module&quot; src=&quot;es6_out_path.js&quot;&amp;gt;&lt;/code&gt; to target modern browsers and &lt;code&gt;&amp;lt;script nomodule src=&quot;es5_out_path.js&quot;&amp;gt;&lt;/code&gt; for older browsers.</target>
        </trans-unit>
        <trans-unit id="72ddf696321a9a37dbaaa9b99e33eac9435e6327" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;'ws'&lt;/code&gt; mode:</source>
          <target state="translated">Use &lt;code&gt;'ws'&lt;/code&gt; mode:</target>
        </trans-unit>
        <trans-unit id="93595ae1c31d7eb0d098a603523c695f7167eb76" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;--conditions&lt;/code&gt; CLI argument.</source>
          <target state="translated">&lt;code&gt;--conditions&lt;/code&gt; CLI 인수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="90283442f2ef3d264ecbf048521f8735be3ab70f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; to create bundles of shared application code between each page. Multi-page applications that reuse a lot of code/modules between entry points can greatly benefit from these techniques, as the amount of entry points increase.</source>
          <target state="translated">&lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용 하여 각 페이지간에 공유 애플리케이션 코드 번들을 작성하십시오. 진입 점 사이에 많은 코드 / 모듈을 재사용하는 다중 페이지 응용 프로그램은 진입 점이 증가함에 따라 이러한 기술의 이점을 크게 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44a04866cd0fce029a56ce7562e4ba4562bd1bba" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;exportConditions&lt;/code&gt; option for &lt;code&gt;@rollup/plugin-node-resolve&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@rollup/plugin-node-resolve&lt;/code&gt; &lt;code&gt;exportConditions&lt;/code&gt; 옵션 사용</target>
        </trans-unit>
        <trans-unit id="6f1fed208551ff106887d8af5e80ff7ef296a976" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;module.rules&lt;/code&gt; whenever possible, as this will reduce boilerplate in your source code and allow you to debug or locate a loader faster if something goes south.</source>
          <target state="translated">가능하면 &lt;code&gt;module.rules&lt;/code&gt; 를 사용 하십시오. 소스 코드의 상용구가 줄어들고 남쪽으로가는 경우 로더를 더 빨리 디버깅하거나 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f901fde6dfa9e5f040de87dda47b0543bb37dc53" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;resolve.conditionNames&lt;/code&gt; configuration option.</source>
          <target state="translated">Use &lt;code&gt;resolve.conditionNames&lt;/code&gt; configuration option.</target>
        </trans-unit>
        <trans-unit id="9e6aa59a6c62d4bb8b5945f7bb54d8bf74de36ad" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;webpack [command] [entries...] [option]&lt;/code&gt; syntax because some options can accept multiple values so &lt;code&gt;webpack --target node ./entry.js&lt;/code&gt; means &lt;code&gt;target: ['node', './file.js']&lt;/code&gt;</source>
          <target state="translated">일부 옵션은 여러 값을 허용하므로 &lt;code&gt;webpack [command] [entries...] [option]&lt;/code&gt; 구문을 사용하십시오. 따라서 &lt;code&gt;webpack --target node ./entry.js&lt;/code&gt; 는 &lt;code&gt;target: ['node', './file.js']&lt;/code&gt; 의미 합니다. [ 'node', './file.js']</target>
        </trans-unit>
        <trans-unit id="cc3b4f270b753c9ce570c3f37d9231f10a431dfc" translate="yes" xml:space="preserve">
          <source>Use Case: Git Version</source>
          <target state="translated">Use Case: Git Version</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="9c64fb613f74d09a8921c473b4932e24ac5d67e8" translate="yes" xml:space="preserve">
          <source>Use ES modules syntax</source>
          <target state="translated">Use ES modules syntax</target>
        </trans-unit>
        <trans-unit id="a77d20ba66c81e5da2236c506b4a70906c3dff0e" translate="yes" xml:space="preserve">
          <source>Use ES modules syntax.</source>
          <target state="translated">Use ES modules syntax.</target>
        </trans-unit>
        <trans-unit id="e804363a0734db33e7dd8b2cf9fa692e9bd07cc6" translate="yes" xml:space="preserve">
          <source>Use ES2015 module syntax (i.e. &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;).</source>
          <target state="translated">ES2015 모듈 구문을 사용하십시오 (예 : &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;export&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8e3799199c2fd1385ca8a6679a7569bf770dc434" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;eval-source-map&lt;/code&gt; variant for incremental builds.</source>
          <target state="translated">증분 빌드 에는 &lt;code&gt;eval-source-map&lt;/code&gt; 변형을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3823015acd2a8397f2d349e0faf7bde67ec1677e" translate="yes" xml:space="preserve">
          <source>Use a different service URL in production/development builds:</source>
          <target state="translated">프로덕션 / 개발 빌드에서 다른 서비스 URL을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="29b08ddff54d134786e6d97bb5f981c57e922b1d" translate="yes" xml:space="preserve">
          <source>Use a value of &lt;code&gt;Infinity&lt;/code&gt; to process all assets even if they are larger than the original size or their original size is &lt;code&gt;0&lt;/code&gt; bytes (useful when you are pre-zipping all assets for AWS).</source>
          <target state="translated">Use a value of &lt;code&gt;Infinity&lt;/code&gt; to process all assets even if they are larger than the original size or their original size is &lt;code&gt;0&lt;/code&gt; bytes (useful when you are pre-zipping all assets for AWS).</target>
        </trans-unit>
        <trans-unit id="2445d385b53a4de72ebd7423a5eb95275a6bf0e0" translate="yes" xml:space="preserve">
          <source>Use a value of &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; to process all assets even if they are larger than the original size, excluding assets with their original size is &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Use a value of &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; to process all assets even if they are larger than the original size, excluding assets with their original size is &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="063f130f568e21683ee17bec01662f407d588a04" translate="yes" xml:space="preserve">
          <source>Use an object to pass options through to Less.</source>
          <target state="translated">Use an object to pass options through to Less.</target>
        </trans-unit>
        <trans-unit id="429433a3edb72c952be8fecdafc78c0a4adecac1" translate="yes" xml:space="preserve">
          <source>Use an object to pass options through to Stylus.</source>
          <target state="translated">Use an object to pass options through to Stylus.</target>
        </trans-unit>
        <trans-unit id="35e3a7aa8dc52f6313e8349c7c4d4b9e51cb4f88" translate="yes" xml:space="preserve">
          <source>Use and object for the Sass implementation setup.</source>
          <target state="translated">Use and object for the Sass implementation setup.</target>
        </trans-unit>
        <trans-unit id="14a29ba383c84d15925a42f871530f52904ae908" translate="yes" xml:space="preserve">
          <source>Use cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="3423fcc4dce73b33f44b7a08148fbae5735d3851" translate="yes" xml:space="preserve">
          <source>Use different config file</source>
          <target state="translated">다른 구성 파일 사용</target>
        </trans-unit>
        <trans-unit id="781efd5f450e0f981441f9f3b7b5fe1e6e74e82d" translate="yes" xml:space="preserve">
          <source>Use different configuration file</source>
          <target state="translated">Use different configuration file</target>
        </trans-unit>
        <trans-unit id="5f963deeb0b38ab886479137bc92905c39af1075" translate="yes" xml:space="preserve">
          <source>Use fewer/smaller libraries.</source>
          <target state="translated">더 적거나 더 작은 라이브러리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8fe70a122d979d6c4f0829a11979f8862aee57f2" translate="yes" xml:space="preserve">
          <source>Use it &lt;strong&gt;before&lt;/strong&gt;&lt;code&gt;css-loader&lt;/code&gt; and &lt;code&gt;style-loader&lt;/code&gt;, but &lt;strong&gt;after&lt;/strong&gt; other preprocessor loaders like e.g &lt;code&gt;sass|less|stylus-loader&lt;/code&gt;, if you use any (since &lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;webpack loaders evaluate right to left/bottom to top&lt;/a&gt;).</source>
          <target state="translated">Use it &lt;strong&gt;before&lt;/strong&gt; &lt;code&gt;css-loader&lt;/code&gt; and &lt;code&gt;style-loader&lt;/code&gt; , but &lt;strong&gt;after&lt;/strong&gt; other preprocessor loaders like e.g &lt;code&gt;sass|less|stylus-loader&lt;/code&gt; , if you use any (since &lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;webpack loaders evaluate right to left/bottom to top&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6ea91fd51d88210a0f6118413452bbea9e27499b" translate="yes" xml:space="preserve">
          <source>Use modules without having to use import/require</source>
          <target state="translated">가져 오기 / 필요없이 모듈 사용</target>
        </trans-unit>
        <trans-unit id="e2734a5814e4bc497b1db8f46457c27f5b96b2b7" translate="yes" xml:space="preserve">
          <source>Use multi-process parallel running to improve the build speed</source>
          <target state="translated">다중 프로세스 병렬 실행을 사용하여 빌드 속도 향상</target>
        </trans-unit>
        <trans-unit id="2f56bfa52ab19a884eb17c40d6e8a950a0ccd1d4" translate="yes" xml:space="preserve">
          <source>Use multi-process parallel running to improve the build speed. Default number of concurrent runs: &lt;code&gt;os.cpus().length - 1&lt;/code&gt;.</source>
          <target state="translated">빌드 속도를 높이려면 다중 프로세스 병렬 실행을 사용하십시오. 기본 동시 실행 수 : &lt;code&gt;os.cpus().length - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="852a5e5247d5f01d785e00d48cebc874527016c3" translate="yes" xml:space="preserve">
          <source>Use of HtmlWebpackPlugin</source>
          <target state="translated">HtmlWebpackPlugin 사용</target>
        </trans-unit>
        <trans-unit id="b8a1bc5d1840853cc471934d460a60e714be6e6f" translate="yes" xml:space="preserve">
          <source>Use source maps to map error message locations to modules (This slows down the compilation) ⚠️ &lt;strong&gt;&lt;code&gt;cheap-source-map&lt;/code&gt; options don't work with this plugin&lt;/strong&gt;</source>
          <target state="translated">소스 맵을 사용하여 오류 메시지 위치를 모듈에 맵핑하십시오 (컴파일 속도가 느려짐). ⚠️ &lt;strong&gt; &lt;code&gt;cheap-source-map&lt;/code&gt; 옵션이이 플러그인에서 작동하지 않습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3568250533b173a47606070650342da08e05889e" translate="yes" xml:space="preserve">
          <source>Use source maps to map error message locations to modules (this slows down the compilation). If you use your own &lt;code&gt;minify&lt;/code&gt; function please read the &lt;code&gt;minify&lt;/code&gt; section for handling source maps correctly.</source>
          <target state="translated">소스 맵을 사용하여 오류 메시지 위치를 모듈에 맵핑하십시오 (이로 인해 컴파일 속도가 느려짐). 자체 &lt;code&gt;minify&lt;/code&gt; 기능 을 사용하는 경우 소스 맵을 올바르게 처리하기위한 &lt;code&gt;minify&lt;/code&gt; 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="4c67aa0dbdd4d1f54297f868de879176bff2b4de" translate="yes" xml:space="preserve">
          <source>Use sourcemaps</source>
          <target state="translated">Use sourcemaps</target>
        </trans-unit>
        <trans-unit id="34b6dd9102de00b202f93084bc9cf07017df3a8b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;&lt;code&gt;production&lt;/code&gt;&lt;/a&gt;&lt;code&gt;mode&lt;/code&gt; configuration option to enable &lt;a href=&quot;../configuration/mode#usage&quot;&gt;various optimizations&lt;/a&gt; including minification and tree shaking.</source>
          <target state="translated">Use the &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt; &lt;code&gt;production&lt;/code&gt; &lt;/a&gt; &lt;code&gt;mode&lt;/code&gt; configuration option to enable &lt;a href=&quot;../configuration/mode#usage&quot;&gt;various optimizations&lt;/a&gt; including minification and tree shaking.</target>
        </trans-unit>
        <trans-unit id="03afd1f2b8a63af2efbeb43ec2fe23408b535c2c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#exports-loader&quot;&gt;exports-loader&lt;/a&gt; to add a module export to components which expect a symbol to be global.</source>
          <target state="translated">&lt;a href=&quot;../guides/shimming#exports-loader&quot;&gt;exports-loader&lt;/a&gt; 를 사용하여 심볼이 전역이 될 것으로 예상되는 컴포넌트에 모듈 내보내기를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7047a6a883604b0b16f8494074ad551fccc60e76" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#imports-loader&quot;&gt;imports-loader&lt;/a&gt; when a script expects the &lt;code&gt;this&lt;/code&gt; keyword to reference &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">스크립트에서 &lt;code&gt;this&lt;/code&gt; 키워드가 &lt;code&gt;window&lt;/code&gt; 를 참조 할 것으로 예상되면 &lt;a href=&quot;../guides/shimming#imports-loader&quot;&gt;imports-loader를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="29623b48270f1002c1bd8b54dc602f32f7ba9205" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#provideplugin&quot;&gt;ProvidePlugin&lt;/a&gt; to add a module import statement when a script expects a variable to be globally defined (but is now a module export).</source>
          <target state="translated">스크립트가 변수가 전역 적으로 정의 될 것으로 예상 할 때 (이제 모듈 내보내기 임) 모듈 가져 오기 명령문을 추가 하려면 &lt;a href=&quot;../guides/shimming#provideplugin&quot;&gt;ProvidePlugin&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f67fa4b9fb64dd98c2eb5ca8cdaa686cedc2d0b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../plugins/normal-module-replacement-plugin&quot;&gt;NormalModuleReplacementPlugin&lt;/a&gt; to have webpack swap a module-compliant version for a script.</source>
          <target state="translated">&lt;a href=&quot;../plugins/normal-module-replacement-plugin&quot;&gt;웹팩&lt;/a&gt; 이 스크립트를위한 모듈 호환 버전을 교환하도록 하려면 NormalModuleReplacementPlugin 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4c5aca3b91a835fa0116cb085e98809d051f74f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../plugins/source-map-dev-tool-plugin&quot;&gt;&lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt;&lt;/a&gt; for a more fine grained configuration. See the &lt;a href=&quot;../loaders/source-map-loader&quot;&gt;&lt;code&gt;source-map-loader&lt;/code&gt;&lt;/a&gt; to deal with existing source maps.</source>
          <target state="translated">보다 세밀한 구성을 위해서는 &lt;a href=&quot;../plugins/source-map-dev-tool-plugin&quot;&gt; &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 . 기존 소스 맵을 처리 하려면 &lt;a href=&quot;../loaders/source-map-loader&quot;&gt; &lt;code&gt;source-map-loader&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3fae1281abf983ea68fc5840def5bfe64a255ab" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt; or the &lt;a href=&quot;raw-loader&quot;&gt;raw-loader&lt;/a&gt; to turn it into a JS module and the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; to extract it into a separate file. Looking for the webpack 1 loader? Check out the &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/archive/webpack-1&quot;&gt;archive/webpack-1 branch&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;css-loader&quot;&gt;CSS 로더&lt;/a&gt; 또는 &lt;a href=&quot;raw-loader&quot;&gt;원시 로더를&lt;/a&gt; JS 모듈과로를 설정하는 &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; 별도의 파일로 압축을 풉니 다. webpack 1 로더를 찾고 계십니까? &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/archive/webpack-1&quot;&gt;archive / webpack-1 브랜치를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8f5053cc9a5b3edfd022be6aa3ad7bbe8a89ce2" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt;&lt;code&gt;getOptions&lt;/code&gt; method&lt;/a&gt; from &lt;code&gt;loader-utils&lt;/code&gt; to extract given loader options.</source>
          <target state="translated">주어진 로더 옵션을 추출하려면 &lt;code&gt;loader-utils&lt;/code&gt; 의 &lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt; &lt;code&gt;getOptions&lt;/code&gt; 메소드&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3246b4d7c38981b18ae1ec1216216ce55f906be" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://www.npmjs.com/package/stats-webpack-plugin&quot;&gt;StatsPlugin&lt;/a&gt; for more control over the generated profile.</source>
          <target state="translated">생성 된 프로파일을보다 세밀하게 제어 하려면 &lt;a href=&quot;https://www.npmjs.com/package/stats-webpack-plugin&quot;&gt;StatsPlugin&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="860721991110aab1ff27b582970ee9eb61d78c8b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</source>
          <target state="translated">다중 페이지 응용 프로그램의 &lt;code&gt;async&lt;/code&gt; 모드에서 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="951dd6398ced88957c9859db052edccc7d1f697e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; in Multi-Page Applications.</source>
          <target state="translated">다중 페이지 애플리케이션에서 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="407ed185a0e815fd28205b6737de4f430df23ea0" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;DllPlugin&lt;/code&gt; to move code that is changed less often into a separate compilation. This will improve the application's compilation speed, although it does increase complexity of the build process.</source>
          <target state="translated">덜 자주 변경되는 코드를 별도의 컴파일로 이동 하려면 &lt;code&gt;DllPlugin&lt;/code&gt; 을 사용하십시오 . 이렇게하면 빌드 프로세스의 복잡성이 증가하지만 응용 프로그램의 컴파일 속도가 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="5deb8470305817c4868baebdaee2ceecb3ad5836" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</source>
          <target state="translated">Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</target>
        </trans-unit>
        <trans-unit id="3ee86b374b58871f6c0609f27d2e0d89331fb78d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in Multi-Page Applications.</source>
          <target state="translated">Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in Multi-Page Applications.</target>
        </trans-unit>
        <trans-unit id="4d5dba36cefe992d08bc8c0b9e38d294640a1015" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for type checking in a separate process.</source>
          <target state="translated">별도의 프로세스에서 유형 검사에 &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="22116d89c5b9c5171f2fcb19c49f120558979cfa" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for typechecking in a separate process.</source>
          <target state="translated">Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for typechecking in a separate process.</target>
        </trans-unit>
        <trans-unit id="7c3fc2640668db5a714dcb9a0de5b946c89e2776" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;include&lt;/code&gt; field to only apply the loader modules that actually need to be transformed by it:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 필드를 사용하여 실제로 변환해야하는 로더 모듈을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="6b4ec7e4501faec29866e0df60d895bdba3b09ce" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;optimization.emitOnErrors&lt;/code&gt; to emit assets whenever there are errors while compiling. This ensures that erroring assets are emitted. Critical errors are emitted into the generated code and will cause errors at runtime.</source>
          <target state="translated">Use the &lt;code&gt;optimization.emitOnErrors&lt;/code&gt; to emit assets whenever there are errors while compiling. This ensures that erroring assets are emitted. Critical errors are emitted into the generated code and will cause errors at runtime.</target>
        </trans-unit>
        <trans-unit id="fbbfaa0dda995af3ea65e98d5191ff5346c703c6" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;optimization.noEmitOnErrors&lt;/code&gt; to skip the emitting phase whenever there are errors while compiling. This ensures that no erroring assets are emitted. The &lt;code&gt;emitted&lt;/code&gt; flag in the stats is &lt;code&gt;false&lt;/code&gt; for all assets.</source>
          <target state="translated">컴파일 중 오류가있을 때마다 발광 단계를 건너 뛰 려면 &lt;code&gt;optimization.noEmitOnErrors&lt;/code&gt; 를 사용하십시오 . 이를 통해 오류가있는 자산이 배출되지 않습니다. &lt;code&gt;emitted&lt;/code&gt; 통계에 플래그가 &lt;code&gt;false&lt;/code&gt; 모든 자산.</target>
        </trans-unit>
        <trans-unit id="2c737b0d8095d696499c652bd5e9095b5f62e204" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;output&lt;/code&gt; option to change the filenames of specific plugin instances.</source>
          <target state="translated">Use the &lt;code&gt;output&lt;/code&gt; option to change the filenames of specific plugin instances.</target>
        </trans-unit>
        <trans-unit id="3913a299d09b9025220f8c50bb09dcf00287f0af" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;ts-loader&lt;/code&gt; in &lt;code&gt;happyPackMode: true&lt;/code&gt; / &lt;code&gt;transpileOnly: true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;happyPackMode: true&lt;/code&gt; / &lt;code&gt;transpileOnly: true&lt;/code&gt; 에서 &lt;code&gt;ts-loader&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bdf28e3536c978c9d5da7c7b4624bdcdb610692" translate="yes" xml:space="preserve">
          <source>Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, &quot;app/folder&quot;)&lt;/code&gt; or &lt;code&gt;path.join(__dirname, &quot;app&quot;, &quot;folder&quot;)&lt;/code&gt;.</source>
          <target state="translated">올바른 구분 기호를 사용하십시오. 즉 &lt;code&gt;path.resolve(__dirname, &quot;app/folder&quot;)&lt;/code&gt; 또는 &lt;code&gt;path.join(__dirname, &quot;app&quot;, &quot;folder&quot;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="22307d7e5f9df5400081ef23d6fd7ceb1e6e265c" translate="yes" xml:space="preserve">
          <source>Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, 'app/folder')&lt;/code&gt; or &lt;code&gt;path.join(__dirname, 'app', 'folder')&lt;/code&gt;.</source>
          <target state="translated">Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, 'app/folder')&lt;/code&gt; or &lt;code&gt;path.join(__dirname, 'app', 'folder')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb44873658f96e0f3ed2aaf4b748dd1802eafd11" translate="yes" xml:space="preserve">
          <source>Use the latest webpack version. We are always making performance improvements. The latest recommended version of webpack is:</source>
          <target state="translated">Use the latest webpack version. We are always making performance improvements. The latest recommended version of webpack is:</target>
        </trans-unit>
        <trans-unit id="7379d2ab48a8375408752658fb495bfcc4fe6e48" translate="yes" xml:space="preserve">
          <source>Use the latest webpack version. We are always making performance improvements. The latest stable version of webpack is:</source>
          <target state="translated">최신 웹팩 버전을 사용하십시오. 우리는 항상 성능을 향상시키고 있습니다. 안정적인 최신 웹팩 버전은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3794e2f2ca3183e0a2f1f8a8ff68c88df08489dd" translate="yes" xml:space="preserve">
          <source>Use these features when appropriate.</source>
          <target state="translated">적절한 경우이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="44fb7f40b16f86e3c9d1a67800ba6d4f22b2a36d" translate="yes" xml:space="preserve">
          <source>Use this loader only for expensive operations!</source>
          <target state="translated">이 로더는 값 비싼 작업에만 사용하십시오!</target>
        </trans-unit>
        <trans-unit id="ea2e466bfb7e604f33c6e4ec30cac612a49935a6" translate="yes" xml:space="preserve">
          <source>Use this option to generate a JSON file containing webpack &quot;records&quot; &amp;ndash; pieces of data used to store module identifiers across multiple builds. You can use this file to track how modules change between builds. To generate one, simply specify a location:</source>
          <target state="translated">이 옵션을 사용하여 여러 빌드에서 모듈 식별자를 저장하는 데 사용되는 데이터 조각 인 웹팩 &quot;레코드&quot;를 포함하는 JSON 파일을 생성합니다. 이 파일을 사용하여 빌드간에 모듈이 변경되는 방식을 추적 할 수 있습니다. 생성하려면 위치를 지정하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="23a2d77df48f7534d7a83a9705ec7e9b4fd634be" translate="yes" xml:space="preserve">
          <source>Use this option to generate a JSON file containing webpack &quot;records&quot; -- pieces of data used to store module identifiers across multiple builds. You can use this file to track how modules change between builds. To generate one, simply specify a location:</source>
          <target state="translated">이 옵션을 사용하면 여러 빌드에서 모듈 식별자를 저장하는 데 사용되는 데이터 조각 인 웹팩 &quot;레코드&quot;를 포함하는 JSON 파일을 생성 할 수 있습니다. 이 파일을 사용하여 빌드 간 모듈 변경 방법을 추적 할 수 있습니다. 하나를 생성하려면 간단히 위치를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9610bd59c5133421c8f3e6dfbbb7d9634045caa3" translate="yes" xml:space="preserve">
          <source>Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</source>
          <target state="translated">웹팩의 시계 모드를 사용하십시오. 다른 도구를 사용하여 파일을보고 웹팩을 호출하지 마십시오. 내장 된 감시 모드는 타임 스탬프를 추적하고 캐시 무효화를 위해이 정보를 컴파일에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c32f58919dcf2dfd0b16dcfb070b3f7cbbf098d3" translate="yes" xml:space="preserve">
          <source>Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built-in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</source>
          <target state="translated">Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built-in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</target>
        </trans-unit>
        <trans-unit id="0b84f3bf4e0289f82295c4c1d5a1ffdb875f6fdb" translate="yes" xml:space="preserve">
          <source>Use with Babel (or other JS transpilers)</source>
          <target state="translated">Babel (또는 다른 JS 트랜스 필러)과 함께 사용</target>
        </trans-unit>
        <trans-unit id="35ca8091dbc2b566405680dbf80285e8b18d7b4b" translate="yes" xml:space="preserve">
          <source>UseEntry</source>
          <target state="translated">UseEntry</target>
        </trans-unit>
        <trans-unit id="e38960e325cc0f68417b6b1b71d40ee9740591d0" translate="yes" xml:space="preserve">
          <source>Used for migrating from webpack 1 to 2</source>
          <target state="translated">웹팩 1에서 2로 마이그레이션하는 데 사용</target>
        </trans-unit>
        <trans-unit id="7f595079968f3d9213466d2c5e54c9237bc84032" translate="yes" xml:space="preserve">
          <source>Useful when a source file does not contain exports or something does not export.</source>
          <target state="translated">Useful when a source file does not contain exports or something does not export.</target>
        </trans-unit>
        <trans-unit id="5625e334052514a17c6f9f3ca6f42e9e6e306a18" translate="yes" xml:space="preserve">
          <source>Users have a choice between two CLI packages:</source>
          <target state="translated">사용자는 두 개의 CLI 패키지 중에서 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c479f2d1ca6fe32e92cc9e767302871801f04b1" translate="yes" xml:space="preserve">
          <source>Users may also specify a length for the computed hash.</source>
          <target state="translated">사용자는 계산 된 해시의 길이를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e34d429e95d5b4e9d20547a9fa999b4ed8b00884" translate="yes" xml:space="preserve">
          <source>Uses ES modules syntax</source>
          <target state="translated">Uses ES modules syntax</target>
        </trans-unit>
        <trans-unit id="387e02566971155ce3659e487753ddfaa5b359a4" translate="yes" xml:space="preserve">
          <source>Uses Terser to minify the JS in your project</source>
          <target state="translated">Uses Terser to minify the JS in your project</target>
        </trans-unit>
        <trans-unit id="3e3cdd5350c2b6106de1f562e722761ec8a15825" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;mini-css-extract-plugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Using &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f6c166b3ef0053607efc557de01ce674fe87ed69" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://github.com/postcss/sugarss&quot;&gt;&lt;code&gt;SugarSS&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="translated">Using &lt;a href=&quot;https://github.com/postcss/sugarss&quot;&gt; &lt;code&gt;SugarSS&lt;/code&gt; &lt;/a&gt; syntax.</target>
        </trans-unit>
        <trans-unit id="b2c309e3d87f058ff51546089072d4faec76a7b4" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;loaders#thisemiterror&quot;&gt;this.emitError&lt;/a&gt;. Will report the errors without interrupting module's compilation.</source>
          <target state="translated">Using &lt;a href=&quot;loaders#thisemiterror&quot;&gt;this.emitError&lt;/a&gt;. Will report the errors without interrupting module's compilation.</target>
        </trans-unit>
        <trans-unit id="6f19a1425f83492a6dc46912f460f17b0da49482" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;...&lt;/code&gt; syntax allows you to extend &lt;a href=&quot;#attributes&quot;&gt;default supported tags and attributes&lt;/a&gt;.</source>
          <target state="translated">Using &lt;code&gt;...&lt;/code&gt; syntax allows you to extend &lt;a href=&quot;#attributes&quot;&gt;default supported tags and attributes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3f3f8775947de904822353745b492e5ef5a52581" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;...&lt;/code&gt; syntax allows you to extend &lt;a href=&quot;#sources&quot;&gt;default supported tags and attributes&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;code&gt;...&lt;/code&gt; 구문은 확장 할 수 있습니다 &lt;a href=&quot;#sources&quot;&gt;기본 지원되는 태그와 속성을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11c2660241dfe28d85f8e01f088c35d9527a0f22" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Function&lt;/code&gt; notation:</source>
          <target state="translated">Using &lt;code&gt;Function&lt;/code&gt; notation:</target>
        </trans-unit>
        <trans-unit id="991744bf0a475de8d6b3da6d73264b6855cacd5d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Object&lt;/code&gt; notation:</source>
          <target state="translated">Using &lt;code&gt;Object&lt;/code&gt; notation:</target>
        </trans-unit>
        <trans-unit id="be0faa338209b9e368cd67cf97e4d24ab36aba4d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;callback&lt;/code&gt; (in async mode). Pass an error to the callback will also cause module compilation failure.</source>
          <target state="translated">Using &lt;code&gt;callback&lt;/code&gt; (in async mode). Pass an error to the callback will also cause module compilation failure.</target>
        </trans-unit>
        <trans-unit id="33ae43a361f7f98f7a19d9d0f97e82b984f74fce" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;enhanced-resolve&lt;/code&gt;, webpack can resolve three kinds of file paths:</source>
          <target state="translated">&lt;code&gt;enhanced-resolve&lt;/code&gt; 사용하여 webpack은 세 가지 파일 경로를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="592ad84b68126878fbfdffb1f8716ad6233721a2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval()&lt;/code&gt;</source>
          <target state="translated">사용 &lt;code&gt;eval()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c34744d5c3820008c58709f64e15c880454dd825" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;externals&lt;/code&gt; to avoid bundling &lt;code&gt;lodash&lt;/code&gt;, so the consumer is required to load it.</source>
          <target state="translated">Using &lt;code&gt;externals&lt;/code&gt; to avoid bundling &lt;code&gt;lodash&lt;/code&gt; , so the consumer is required to load it.</target>
        </trans-unit>
        <trans-unit id="f0b29040b482ffe5f51c894270bc7be4230de55f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;false&lt;/code&gt; value increase performance because we avoid parsing &lt;strong&gt;CSS Modules&lt;/strong&gt; features, it will be useful for developers who use vanilla css or use other technologies.</source>
          <target state="translated">Using &lt;code&gt;false&lt;/code&gt; value increase performance because we avoid parsing &lt;strong&gt;CSS Modules&lt;/strong&gt; features, it will be useful for developers who use vanilla css or use other technologies.</target>
        </trans-unit>
        <trans-unit id="1933541d83ea871a9366e228923568909cbe9007" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;local&lt;/code&gt; value requires you to specify &lt;code&gt;:global&lt;/code&gt; classes. Using &lt;code&gt;global&lt;/code&gt; value requires you to specify &lt;code&gt;:local&lt;/code&gt; classes. Using &lt;code&gt;pure&lt;/code&gt; value requires selectors must contain at least one local class or id.</source>
          <target state="translated">Using &lt;code&gt;local&lt;/code&gt; value requires you to specify &lt;code&gt;:global&lt;/code&gt; classes. Using &lt;code&gt;global&lt;/code&gt; value requires you to specify &lt;code&gt;:local&lt;/code&gt; classes. Using &lt;code&gt;pure&lt;/code&gt; value requires selectors must contain at least one local class or id.</target>
        </trans-unit>
        <trans-unit id="62baa148726c0cc221de557fa5a44fdc43b80c8d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt;) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; bytes into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt;) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt;.</source>
          <target state="translated">Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt; ) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; bytes into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt; ) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe814a133302a983806b7c5cad0cad9106094c3b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt;) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt;) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maxSize&lt;/code&gt; 를 사용하면 ( 캐시 그룹당 글로벌 &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; 또는 폴백 캐시 그룹 &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt; .splitChunks.fallbackCacheGroup.maxSize 사용) webpack이 &lt;code&gt;maxSize&lt;/code&gt; 보다 큰 청크 를 작은 부분으로 분할하려고합니다. . 부분 크기 는 최소 &lt;code&gt;minSize&lt;/code&gt; ( &lt;code&gt;maxSize&lt;/code&gt; 옆 )입니다. 알고리즘은 결정 론적이며 모듈을 변경하면 로컬에 영향을 미칩니다. 따라서 장기 캐싱을 사용할 때 사용할 수 있으며 레코드가 필요하지 않습니다. &lt;code&gt;maxSize&lt;/code&gt; 는 힌트 일 뿐이며 모듈이 &lt;code&gt;maxSize&lt;/code&gt; 보다 큰 경우 위반 될 수 있습니다.분할하면 &lt;code&gt;minSize&lt;/code&gt; 를 위반하게 됩니다.</target>
        </trans-unit>
        <trans-unit id="740b61df4875ad440f461c1b5ae6eff138988a5c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;node&lt;/code&gt; preset will not bundle built-in modules and treats them as external and loads them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Using &lt;code&gt;node&lt;/code&gt; preset will not bundle built-in modules and treats them as external and loads them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="3f7745d5bf45766a5bdfd3a5a65bd99defea5262" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;throw&lt;/code&gt; (or other uncaught exception). Throwing an error while a loader is running will cause current module compilation failure.</source>
          <target state="translated">Using &lt;code&gt;throw&lt;/code&gt; (or other uncaught exception). Throwing an error while a loader is running will cause current module compilation failure.</target>
        </trans-unit>
        <trans-unit id="7eb388b7faf3e23b214a33a0d5906abfaadad16a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;watching.invalidate&lt;/code&gt;, you can manually invalidate the current compiling round, without stopping the watch process:</source>
          <target state="translated">사용 &lt;code&gt;watching.invalidate&lt;/code&gt; 은 수동으로 시계 프로세스를 중지하지 않고, 현재 컴파일 내내 무효화 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="60644ada565ccf86b1df97c9413263c37b65e43a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;webpackPreload&lt;/code&gt; incorrectly can actually hurt performance, so be careful when using it.</source>
          <target state="translated">Using &lt;code&gt;webpackPreload&lt;/code&gt; incorrectly can actually hurt performance, so be careful when using it.</target>
        </trans-unit>
        <trans-unit id="21d709ec8d8652ae065a8e7bb3066470d997ac2c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;~&lt;/code&gt; is deprecated and can be removed from your code (&lt;strong&gt;we recommend it&lt;/strong&gt;), but we still support it for historical reasons. Why you can removed it? The loader will first try to resolve &lt;code&gt;@import&lt;/code&gt; as relative, if it cannot be resolved, the loader will try to resolve &lt;code&gt;@import&lt;/code&gt; inside &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;node_modules&lt;/code&gt;&lt;/a&gt;. Just prepend them with a &lt;code&gt;~&lt;/code&gt; which tells webpack to look up the &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; 사용 은 더 이상 사용되지 않으며 코드에서 제거 할 수 있지만 ( &lt;strong&gt;권장&lt;/strong&gt; ) 역사적 이유로 여전히 지원합니다. 제거 할 수있는 이유는 무엇입니까? 로더는 먼저 해결하려고합니다 &lt;code&gt;@import&lt;/code&gt; 문제가 해결되지 않는 경우, 로더가 해결하기 위해 노력할 것입니다, 상대적으로 &lt;code&gt;@import&lt;/code&gt; 내부 &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt; &lt;code&gt;node_modules&lt;/code&gt; &lt;/a&gt; . 그냥 &lt;code&gt;~&lt;/code&gt; 를 붙여서 webpack에 &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt; 을 찾도록 지시 합니다 .</target>
        </trans-unit>
        <trans-unit id="f6cb8c72896a87c249e49d58e1f94f3d966f99d4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;~&lt;/code&gt; is deprecated and can be removed from your code (&lt;strong&gt;we recommend it&lt;/strong&gt;), but we still support it for historical reasons. Why you can removed it? The loader will first try to resolve &lt;code&gt;@import&lt;/code&gt;/&lt;code&gt;@require&lt;/code&gt; as relative, if it cannot be resolved, the loader will try to resolve &lt;code&gt;@import&lt;/code&gt;/&lt;code&gt;@require&lt;/code&gt; inside &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;node_modules&lt;/code&gt;&lt;/a&gt;. Just prepend them with a &lt;code&gt;~&lt;/code&gt; which tells webpack to look up the &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; 사용 은 더 이상 사용되지 않으며 코드에서 제거 할 수 있지만 ( &lt;strong&gt;권장&lt;/strong&gt; ) 역사적 이유로 여전히 지원합니다. 제거 할 수있는 이유는 무엇입니까? 로더는 첫 번째 해결하기 위해 노력할 것입니다 &lt;code&gt;@import&lt;/code&gt; / &lt;code&gt;@require&lt;/code&gt; , 상대적으로 문제가 해결되지 않는 경우, 로더는 해결하기 위해 노력할 것입니다 &lt;code&gt;@import&lt;/code&gt; / &lt;code&gt;@require&lt;/code&gt; 내부 &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt; &lt;code&gt;node_modules&lt;/code&gt; &lt;/a&gt; . 그냥 &lt;code&gt;~&lt;/code&gt; 를 붙여서 webpack에 &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt; 을 찾도록 지시 합니다 .</target>
        </trans-unit>
        <trans-unit id="61da05151fc0b4111508fca3f92835f1a473106b" translate="yes" xml:space="preserve">
          <source>Using Brotli</source>
          <target state="translated">Using Brotli</target>
        </trans-unit>
        <trans-unit id="5e4d9b578d4cbb835fbc9838e1bc9660f731175c" translate="yes" xml:space="preserve">
          <source>Using Configuration</source>
          <target state="translated">Using Configuration</target>
        </trans-unit>
        <trans-unit id="4864b84ad761309fe1200c9530d9247e825fecc4" translate="yes" xml:space="preserve">
          <source>Using Loaders</source>
          <target state="translated">로더 사용</target>
        </trans-unit>
        <trans-unit id="5855328d71e4db4f6dd615c5093f235d0d05f9d0" translate="yes" xml:space="preserve">
          <source>Using Records</source>
          <target state="translated">레코드 사용</target>
        </trans-unit>
        <trans-unit id="1dca7cbbab7fbff23530018b99c23edf26c5aec3" translate="yes" xml:space="preserve">
          <source>Using Third Party Libraries</source>
          <target state="translated">타사 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="8824c9d16039f13af26e6689d843673db147de08" translate="yes" xml:space="preserve">
          <source>Using Watch Mode</source>
          <target state="translated">시계 모드 사용</target>
        </trans-unit>
        <trans-unit id="dcf2baa87ac7edb1ea2511e3e5ed43f68568b57c" translate="yes" xml:space="preserve">
          <source>Using Zopfli</source>
          <target state="translated">Using Zopfli</target>
        </trans-unit>
        <trans-unit id="9017fb4a027adbde133dec30bfbabf7edbf77ed6" translate="yes" xml:space="preserve">
          <source>Using a Configuration</source>
          <target state="translated">구성 사용</target>
        </trans-unit>
        <trans-unit id="07f359d92bfecc39a52b2101c2e2de1b8742bd60" translate="yes" xml:space="preserve">
          <source>Using an alternative to &lt;code&gt;file-loader&lt;/code&gt; is enabled via the &lt;code&gt;fallback&lt;/code&gt; option.</source>
          <target state="translated">Using an alternative to &lt;code&gt;file-loader&lt;/code&gt; is enabled via the &lt;code&gt;fallback&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="6178a9f37c34f2b7890f00cce3ba62fe11247e9a" translate="yes" xml:space="preserve">
          <source>Using both &lt;code&gt;CSS Module&lt;/code&gt; functionality as well as SCSS variables directly in JavaScript.</source>
          <target state="translated">Using both &lt;code&gt;CSS Module&lt;/code&gt; functionality as well as SCSS variables directly in JavaScript.</target>
        </trans-unit>
        <trans-unit id="45d4e6efe497b458825a8cf329561b94dbb8de49" translate="yes" xml:space="preserve">
          <source>Using cache directly from eslint</source>
          <target state="translated">Using cache directly from eslint</target>
        </trans-unit>
        <trans-unit id="786d20a41b7020b1c743e573c5784e25c770332d" translate="yes" xml:space="preserve">
          <source>Using class exported by &lt;code&gt;CustomServer.js&lt;/code&gt;, a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</source>
          <target state="translated">Using class exported by &lt;code&gt;CustomServer.js&lt;/code&gt; , a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</target>
        </trans-unit>
        <trans-unit id="516aa555e14c6fd98d2549428ce368ad3f773027" translate="yes" xml:space="preserve">
          <source>Using context replacement module for date-fns</source>
          <target state="translated">Using context replacement module for date-fns</target>
        </trans-unit>
        <trans-unit id="9706633cff4e06c11d980c44e48ba7953e61907d" translate="yes" xml:space="preserve">
          <source>Using custom minifier &lt;a href=&quot;https://github.com/css/csso&quot;&gt;csso&lt;/a&gt;</source>
          <target state="translated">Using custom minifier &lt;a href=&quot;https://github.com/css/csso&quot;&gt;csso&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04882b482b4707c71134fe4969bffc50584b937e" translate="yes" xml:space="preserve">
          <source>Using custom minifier &lt;a href=&quot;https://github.com/jakubpawlowicz/clean-css&quot;&gt;clean-css&lt;/a&gt;</source>
          <target state="translated">Using custom minifier &lt;a href=&quot;https://github.com/jakubpawlowicz/clean-css&quot;&gt;clean-css&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1659fbe0af74bd202b9666719b03cd69f763eda7" translate="yes" xml:space="preserve">
          <source>Using custom, compatible WebSocket client and server implementations:</source>
          <target state="translated">Using custom, compatible WebSocket client and server implementations:</target>
        </trans-unit>
        <trans-unit id="a246793c7f0a39182d1aa8715b1258b8f768f028" translate="yes" xml:space="preserve">
          <source>Using entry name:</source>
          <target state="translated">항목 이름 사용 :</target>
        </trans-unit>
        <trans-unit id="472a33aa02e08edf1df7f17782b30f24d454043d" translate="yes" xml:space="preserve">
          <source>Using filter functions</source>
          <target state="translated">Using filter functions</target>
        </trans-unit>
        <trans-unit id="441250bf314d4863c43a078bd39c6b6a70ad2c6a" translate="yes" xml:space="preserve">
          <source>Using function to return the filename:</source>
          <target state="translated">함수를 사용하여 파일 이름을 반환 :</target>
        </trans-unit>
        <trans-unit id="86144617cdddceef8ae1a3144422cf66197f56c7" translate="yes" xml:space="preserve">
          <source>Using function you can insert the styles into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot&quot;&gt;ShadowRoot&lt;/a&gt;, e.g</source>
          <target state="translated">함수를 사용하면 스타일을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot&quot;&gt;ShadowRoot에&lt;/a&gt; 삽입 할 수 있습니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="3d0d49e6e3cd8df3d8c1dbd9691bc35d8fa6302a" translate="yes" xml:space="preserve">
          <source>Using hashes based on each chunks' content:</source>
          <target state="translated">각 청크 내용을 기반으로 해시 사용 :</target>
        </trans-unit>
        <trans-unit id="519add25ba62dcd513c51cda4eb83bad8ae41195" translate="yes" xml:space="preserve">
          <source>Using hashes generated for extracted content:</source>
          <target state="translated">추출 된 컨텐츠에 대해 생성 된 해시 사용 :</target>
        </trans-unit>
        <trans-unit id="4693e82c52452a804721ac31b4bd67215e75eb6e" translate="yes" xml:space="preserve">
          <source>Using hashes generated from the generated content:</source>
          <target state="translated">Using hashes generated from the generated content:</target>
        </trans-unit>
        <trans-unit id="ec7eaf4ab9e3973e2bee8828b33d1738fc29e3c6" translate="yes" xml:space="preserve">
          <source>Using internal chunk id:</source>
          <target state="translated">내부 청크 ID 사용 :</target>
        </trans-unit>
        <trans-unit id="700c14ddf1b1e6edd056f1272f178fca24f039ef" translate="yes" xml:space="preserve">
          <source>Using it asynchronously may not have the expected effect.</source>
          <target state="translated">비동기 적으로 사용하면 예상되는 효과가 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3200ec535332fa85a3bbf6cae69a6073171e40a3" translate="yes" xml:space="preserve">
          <source>Using it in an async function may not have the expected effect.</source>
          <target state="translated">비동기 함수에서 사용하면 예상 된 효과가 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f42e9968a263682c986dcf34ddb43fad454c41b0" translate="yes" xml:space="preserve">
          <source>Using javascript as entrypoint</source>
          <target state="translated">Using javascript as entrypoint</target>
        </trans-unit>
        <trans-unit id="21f37283471b990c6e063058bb25d6de2808d4c3" translate="yes" xml:space="preserve">
          <source>Using nib with stylus</source>
          <target state="translated">Using nib with stylus</target>
        </trans-unit>
        <trans-unit id="e8cff08e29703580b7ac86809f0f79615642a204" translate="yes" xml:space="preserve">
          <source>Using npm</source>
          <target state="translated">npm 사용</target>
        </trans-unit>
        <trans-unit id="58ceb1cc3d8510d4682fc763f7e2829dbfbad46e" translate="yes" xml:space="preserve">
          <source>Using other Configuration Languages</source>
          <target state="translated">다른 구성 언어 사용</target>
        </trans-unit>
        <trans-unit id="f3c8dad7dd1400a4fb43c3cb7e34a6fd72165a56" translate="yes" xml:space="preserve">
          <source>Using path to &lt;code&gt;CustomClient.js&lt;/code&gt;, a custom WebSocket client implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; server:</source>
          <target state="translated">Using path to &lt;code&gt;CustomClient.js&lt;/code&gt; , a custom WebSocket client implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; server:</target>
        </trans-unit>
        <trans-unit id="c2f58ff12aec9e1a423859725083d77e9e8da7b5" translate="yes" xml:space="preserve">
          <source>Using path to &lt;code&gt;CustomServer.js&lt;/code&gt;, a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</source>
          <target state="translated">Using path to &lt;code&gt;CustomServer.js&lt;/code&gt; , a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</target>
        </trans-unit>
        <trans-unit id="59c2cac5921f99904e0b4511c5a819676e6bd84b" translate="yes" xml:space="preserve">
          <source>Using plugins in your webpack config is straightforward - however, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</source>
          <target state="translated">webpack 설정에서 플러그인을 사용하는 것은 간단합니다. 그러나 더 많은 조사가 필요한 유스 케이스가 많이 있습니다. &lt;a href=&quot;plugins&quot;&gt;이에 대한 자세한 내용은 여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="765412d29ec5d2eee3c85edab48a13e4ed4b7c64" translate="yes" xml:space="preserve">
          <source>Using plugins in your webpack configuration is straightforward. However, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</source>
          <target state="translated">Using plugins in your webpack configuration is straightforward. However, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a8b8fdfd9b45b02f1be508c46368a7a4c4e384c6" translate="yes" xml:space="preserve">
          <source>Using preloaded or inlined CSS</source>
          <target state="translated">미리로드되거나 인라인 된 CSS 사용</target>
        </trans-unit>
        <trans-unit id="18988fc8caaba44179708163dbb1aad1050b3dcd" translate="yes" xml:space="preserve">
          <source>Using regular expressions</source>
          <target state="translated">정규 표현식 사용</target>
        </trans-unit>
        <trans-unit id="a981b01629c77966f89ccc6d2a2de1a77159b1fa" translate="yes" xml:space="preserve">
          <source>Using some kind of indentation makes bundles look prettier, but will cause issues with multi-line strings.</source>
          <target state="translated">Using some kind of indentation makes bundles look prettier, but will cause issues with multi-line strings.</target>
        </trans-unit>
        <trans-unit id="6518a5f2dc3744728446f85190c9fd202a9294a6" translate="yes" xml:space="preserve">
          <source>Using source maps</source>
          <target state="translated">소스 맵 사용</target>
        </trans-unit>
        <trans-unit id="80648489b1305d89e61e8b827ce72a3324581812" translate="yes" xml:space="preserve">
          <source>Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation.</source>
          <target state="translated">Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation.</target>
        </trans-unit>
        <trans-unit id="800f2b20749e8702f136a958be32bb1a50fe2d6b" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;module-methods#magic-comments&quot;&gt;&lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt;&lt;/a&gt; options allows you to add regex patterns that reduce the number of files that webpack will bundle for this import.</source>
          <target state="translated">Using the &lt;a href=&quot;module-methods#magic-comments&quot;&gt; &lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt; &lt;/a&gt; options allows you to add regex patterns that reduce the number of files that webpack will bundle for this import.</target>
        </trans-unit>
        <trans-unit id="467ce8c78e13c791befca2fb2c3b67684c469445" translate="yes" xml:space="preserve">
          <source>Using the unique hash generated for every build:</source>
          <target state="translated">모든 빌드에 대해 생성 된 고유 한 해시 사용</target>
        </trans-unit>
        <trans-unit id="6536132a79bf8af96ab8bfdefdbfab7d325013b8" translate="yes" xml:space="preserve">
          <source>Using these inline directives while declaring your imports allows webpack to output &amp;ldquo;Resource Hint&amp;rdquo; which tells the browser that for:</source>
          <target state="translated">가져 오기를 선언하면서 이러한 인라인 지시문을 사용하면 웹팩에서 &quot;Resource Hint&quot;를 출력하여 브라우저에 다음을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="d07483f679e606d7fb7e14d9533f6ea9b743b89b" translate="yes" xml:space="preserve">
          <source>Using this callback we can dynamically redirect requests to a new location:</source>
          <target state="translated">이 콜백을 사용하여 요청을 새로운 위치로 동적으로 리디렉션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c37734e5b4af8b8564bb62e88c0cf685f75a0550" translate="yes" xml:space="preserve">
          <source>Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions.</source>
          <target state="translated">Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions.</target>
        </trans-unit>
        <trans-unit id="1583a8e9f680bc09e6e3a1d5f218c361dd96f3b1" translate="yes" xml:space="preserve">
          <source>Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions. For modules that are imported with their extension, e.g. &lt;code&gt;import SomeFile from &quot;./somefile.ext&quot;&lt;/code&gt;, to be properly resolved, a string containing &quot;*&quot; must be included in the array.</source>
          <target state="translated">이것을 사용 &lt;strong&gt;하면 기본 배열&lt;/strong&gt; 이 &lt;strong&gt;재정의됩니다&lt;/strong&gt; . 즉, 웹팩은 더 이상 기본 확장을 사용하여 모듈을 분석하려고 시도하지 않습니다. 확장자가있는 모듈 (예 : &lt;code&gt;import SomeFile from &quot;./somefile.ext&quot;&lt;/code&gt; )을 올바르게 해석하려면 &quot;*&quot;가 포함 된 문자열이 배열에 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5d3bed423980b935928474859e7c216545e36176" translate="yes" xml:space="preserve">
          <source>Using webpack's resolver, you can import any file type. You just need a loader that exports valid Less code. Often, you will also want to set the &lt;code&gt;issuer&lt;/code&gt; condition to ensure that this rule is only applied on imports originating from Less files:</source>
          <target state="translated">webpack의 리졸버를 사용하여 모든 파일 유형을 가져올 수 있습니다. 유효한 Less 코드를 내보내는 로더 만 있으면됩니다. 종종 이 규칙이 적은 파일에서 발생하는 가져 오기에만 적용되도록 &lt;code&gt;issuer&lt;/code&gt; 조건 을 설정하고자 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7564130d0af85566bd3d5159841f2a0c0d22b57" translate="yes" xml:space="preserve">
          <source>Using webpack-dev-middleware</source>
          <target state="translated">webpack-dev-middleware 사용</target>
        </trans-unit>
        <trans-unit id="929b482a17818f7e179581abb73aad4f5bba1a17" translate="yes" xml:space="preserve">
          <source>Using webpack-dev-server</source>
          <target state="translated">webpack-dev-server 사용</target>
        </trans-unit>
        <trans-unit id="56404f43d6b2ed55415737b5df747c000d609a1b" translate="yes" xml:space="preserve">
          <source>Using webpackPreload incorrectly can actually hurt performance, so be careful when using it.</source>
          <target state="translated">webpackPreload를 잘못 사용하면 실제로 성능이 저하 될 수 있으므로 사용시주의하십시오.</target>
        </trans-unit>
        <trans-unit id="6a1672b1ef280cd31470e59f7fa4d154c08f1d09" translate="yes" xml:space="preserve">
          <source>Using yarn</source>
          <target state="translated">Using yarn</target>
        </trans-unit>
        <trans-unit id="1727983f3b0fbe806fa9f0e578aa1c2905c45395" translate="yes" xml:space="preserve">
          <source>Usually your projects will need to extend this functionality, for this you can create a &lt;code&gt;webpack.config.js&lt;/code&gt; file in the root folder and webpack will automatically use it.</source>
          <target state="translated">일반적으로 프로젝트는이 기능을 확장해야합니다.이를 위해 루트 폴더에 &lt;code&gt;webpack.config.js&lt;/code&gt; 파일을 만들면 webpack 에서 자동으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="130ffa8a755784a8fff6c2f1afcbd6b0f4165b82" translate="yes" xml:space="preserve">
          <source>Usually, it's recommended to extract the style sheets into a dedicated file in production using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;. This way your styles are not dependent on JavaScript.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin을&lt;/a&gt; 사용하여 프로덕션 환경에서 스타일 시트를 전용 파일로 추출하는 것이 좋습니다 . 이렇게하면 스타일이 JavaScript에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="230c0f6708f899e4998611800c671e1627e66bfb" translate="yes" xml:space="preserve">
          <source>Usually, it's recommended to extract the style sheets into a dedicated file in production using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;. This way your styles are not dependent on JavaScript:</source>
          <target state="translated">일반적으로 &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin을&lt;/a&gt; 사용하여 프로덕션 환경에서 스타일 시트를 전용 파일로 추출하는 것이 좋습니다 . 이렇게하면 스타일이 JavaScript에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="34e85f4bb052ab319812897a33197cd10dcd5033" translate="yes" xml:space="preserve">
          <source>Validate a webpack configuration.</source>
          <target state="translated">웹팩 구성을 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="1b0e3aa76a2d97a44a5da8cd5260f85eb167e2d5" translate="yes" xml:space="preserve">
          <source>Variable: as a global variable made available by a &lt;code&gt;script&lt;/code&gt; tag (&lt;code&gt;libraryTarget:'var'&lt;/code&gt;).</source>
          <target state="translated">변수 : &lt;code&gt;script&lt;/code&gt; 태그 ( &lt;code&gt;libraryTarget:'var'&lt;/code&gt; )에 의해 사용 가능한 전역 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="c1f31ae1f6a8b752e2c38c54066881ab58d1532d" translate="yes" xml:space="preserve">
          <source>Variables coming from &lt;code&gt;process.env&lt;/code&gt; are always strings.</source>
          <target state="translated">&lt;code&gt;process.env&lt;/code&gt; 에서 오는 변수 는 항상 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="eab065a9a4d4690f9b81041691e90f286b2d778b" translate="yes" xml:space="preserve">
          <source>Verify that webpack is not being notified of changes by running webpack with the --progress flag. If progress shows on save but no files are outputted, it is likely a configuration issue, not a file watching issue.</source>
          <target state="translated">--progress 플래그와 함께 webpack을 실행하여 webpack에 변경 사항을 알리지 않는지 확인하십시오. 저장시 진행률이 표시되지만 파일이 출력되지 않으면 파일 감시 문제가 아닌 구성 문제 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f649eb36cd354b29c703f5db06d75d8bb5d8758" translate="yes" xml:space="preserve">
          <source>Verify that you have enough available watchers in your system. If this value is too low, the file watcher in Webpack won't recognize the changes:</source>
          <target state="translated">시스템에 사용 가능한 감시자가 충분한 지 확인하십시오. 이 값이 너무 낮 으면 Webpack의 파일 감시자가 변경 사항을 인식하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="a9ad94597042a491f4c55e15e6796d1220ef197e" translate="yes" xml:space="preserve">
          <source>Version 2 of webpack supports ES6 module syntax natively, meaning you can use &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; without a tool like babel to handle this for you. Keep in mind that you will still probably need babel for other ES6+ features. The following methods are supported by webpack:</source>
          <target state="translated">webpack 버전 2는 기본적으로 ES6 모듈 구문을 지원하므로 babel과 같은 도구없이 &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;export&lt;/code&gt; 를 사용하여이를 처리 할 수 ​​있습니다. 다른 ES6 + 기능을 사용하려면 여전히 babel이 필요할 것입니다. 웹팩에서 지원하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b9e3937b398d8372e385fec3cba5f2c5a3933b47" translate="yes" xml:space="preserve">
          <source>Version of the cache data. Different versions won't allow to reuse the cache and override existing content. Update the version when configuration changed in a way which doesn't allow to reuse cache. This will invalidate the cache.</source>
          <target state="translated">Version of the cache data. Different versions won't allow to reuse the cache and override existing content. Update the version when configuration changed in a way which doesn't allow to reuse cache. This will invalidate the cache.</target>
        </trans-unit>
        <trans-unit id="b716503145807543ea3a2f18e364920799166f3a" translate="yes" xml:space="preserve">
          <source>Very detailed debugging info</source>
          <target state="translated">매우 상세한 디버깅 정보</target>
        </trans-unit>
        <trans-unit id="24756aad73cd051a11a3ab3c84b08e6eccd66d67" translate="yes" xml:space="preserve">
          <source>Via the Node.js API</source>
          <target state="translated">Node.js API를 통해</target>
        </trans-unit>
        <trans-unit id="a78ad277616170813560c5fab7aabae8ac9cfb23" translate="yes" xml:space="preserve">
          <source>Vim</source>
          <target state="translated">Vim</target>
        </trans-unit>
        <trans-unit id="5761ff1a7f5b6160ce8e6d3a6a69b9769b16ee3a" translate="yes" xml:space="preserve">
          <source>Vue: &lt;a href=&quot;https://alexjoverm.github.io/2017/07/16/Lazy-load-in-Vue-using-Webpack-s-code-splitting/&quot;&gt;Lazy Load in Vue using Webpack's code splitting&lt;/a&gt;</source>
          <target state="translated">Vue : &lt;a href=&quot;https://alexjoverm.github.io/2017/07/16/Lazy-load-in-Vue-using-Webpack-s-code-splitting/&quot;&gt;Webpack의 코드 분할을 사용하여 Vue의 지연로드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5afa9363b9313213d774ca18cfaadf46a10d5e78" translate="yes" xml:space="preserve">
          <source>Vue: &lt;a href=&quot;https://vuedose.tips/tips/dynamic-imports-in-vue-js-for-better-performance/&quot;&gt;Dynamic Imports in Vue.js for better performance&lt;/a&gt;</source>
          <target state="translated">Vue: &lt;a href=&quot;https://vuedose.tips/tips/dynamic-imports-in-vue-js-for-better-performance/&quot;&gt;Dynamic Imports in Vue.js for better performance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dbdcc7862fb1c14cc7943c7d3048725c557d8d4" translate="yes" xml:space="preserve">
          <source>WASM &lt;code&gt;import&lt;/code&gt; section</source>
          <target state="translated">WASM &lt;code&gt;import&lt;/code&gt; section</target>
        </trans-unit>
        <trans-unit id="db3e8c2c2fbe1c9fcd99b8675926cd59a846aa38" translate="yes" xml:space="preserve">
          <source>Want to rapidly generate webpack configuration file for your project requirements with few clicks away.</source>
          <target state="translated">몇 번의 클릭만으로 프로젝트 요구 사항에 맞는 웹팩 구성 파일을 신속하게 생성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="3f5d8257134cdb4ea1e1eef0dd093276a302a5ad" translate="yes" xml:space="preserve">
          <source>Warn for dynamic dependencies: &lt;code&gt;wrappedContextCritical: true&lt;/code&gt;.</source>
          <target state="translated">동적 종속성을 경고 : &lt;code&gt;wrappedContextCritical: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="201d07914ddb690a7ce7fc96defe98625d72e806" translate="yes" xml:space="preserve">
          <source>Warns to console about attributes from inside the &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt; 내부의 속성에 대해 콘솔에 경고합니다 .</target>
        </trans-unit>
        <trans-unit id="1e2aae0cdb6f3a79d62e669c768545f8953beef6" translate="yes" xml:space="preserve">
          <source>Watch Options</source>
          <target state="translated">시계 옵션</target>
        </trans-unit>
        <trans-unit id="106bff2cd8202eecc0e264527e1aa359ef59b79d" translate="yes" xml:space="preserve">
          <source>Watch and WatchOptions</source>
          <target state="translated">시계 및 시계 옵션</target>
        </trans-unit>
        <trans-unit id="2bc4d4d7a4c4d5f9a1769fc308fa26c2a0867f00" translate="yes" xml:space="preserve">
          <source>Watch compilation has been invalidated.</source>
          <target state="translated">시계 편집이 무효화되었습니다.</target>
        </trans-unit>
        <trans-unit id="427cebc1061b0e5b5851880b9f0dfb68e6f2a55d" translate="yes" xml:space="preserve">
          <source>Watch for file changes</source>
          <target state="translated">Watch for file changes</target>
        </trans-unit>
        <trans-unit id="b437f78f9d520f5fcbaf0f0382cb781be53b36aa" translate="yes" xml:space="preserve">
          <source>Watch mode has stopped.</source>
          <target state="translated">시계 모드가 중지되었습니다.</target>
        </trans-unit>
        <trans-unit id="1cd42ab7e86a7c69fdc818850cdaebf6ab4df744" translate="yes" xml:space="preserve">
          <source>Watch the filesystem for changes</source>
          <target state="translated">파일 시스템의 변경 사항 확인</target>
        </trans-unit>
        <trans-unit id="95597606870fb7c27f696ca54f1d8fcb4ed539c0" translate="yes" xml:space="preserve">
          <source>WatchIgnorePlugin</source>
          <target state="translated">WatchIgnorePlugin</target>
        </trans-unit>
        <trans-unit id="96d9e027ee25023055aac45ad3d6c069c69e6c19" translate="yes" xml:space="preserve">
          <source>Watching</source>
          <target state="translated">Watching</target>
        </trans-unit>
        <trans-unit id="6d03d61c1bf166452be4ae04b24c13ac9975c1c5" translate="yes" xml:space="preserve">
          <source>We Don't Work Offline Now</source>
          <target state="translated">우리는 지금 오프라인으로 일하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f430b691523ff1d9375dbaa59f361157ef2f8356" translate="yes" xml:space="preserve">
          <source>We also need to adjust our &lt;code&gt;package.json&lt;/code&gt; file in order to make sure we mark our package as &lt;code&gt;private&lt;/code&gt;, as well as removing the &lt;code&gt;main&lt;/code&gt; entry. This is to prevent an accidental publish of your code.</source>
          <target state="translated">패키지를 &lt;code&gt;private&lt;/code&gt; 으로 표시하고 &lt;code&gt;main&lt;/code&gt; 항목 을 제거하려면 &lt;code&gt;package.json&lt;/code&gt; 파일 도 조정해야합니다 . 실수로 코드를 게시하는 것을 방지하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="b467e0eb44fa319c7ebd09d36ac9fb75025a6e72" translate="yes" xml:space="preserve">
          <source>We assume at some point packages are no longer being maintained, but they are continued to be used.</source>
          <target state="translated">We assume at some point packages are no longer being maintained, but they are continued to be used.</target>
        </trans-unit>
        <trans-unit id="e659eafed1e06cd2eccf15fc3f46a5e90a86c159" translate="yes" xml:space="preserve">
          <source>We assume the following fallback make sense in general:</source>
          <target state="translated">We assume the following fallback make sense in general:</target>
        </trans-unit>
        <trans-unit id="23f13113c31128431fc9d0a255c1789dcd5c5794" translate="yes" xml:space="preserve">
          <source>We automatically inject the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package (setup &lt;code&gt;sassOptions.fiber&lt;/code&gt;) if is possible (i.e. you need install the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package).</source>
          <target state="translated">We automatically inject the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt; &lt;code&gt;fibers&lt;/code&gt; &lt;/a&gt; package (setup &lt;code&gt;sassOptions.fiber&lt;/code&gt; ) if is possible (i.e. you need install the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt; &lt;code&gt;fibers&lt;/code&gt; &lt;/a&gt; package).</target>
        </trans-unit>
        <trans-unit id="a9f11e7092e64e702c19ee5bf892367a156e5b70" translate="yes" xml:space="preserve">
          <source>We can also pass an array of file paths to the &lt;code&gt;entry&lt;/code&gt; property which creates what is known as a &lt;strong&gt;&quot;multi-main entry&quot;&lt;/strong&gt;. This is useful when you would like to inject multiple dependent files together and graph their dependencies into one &quot;chunk&quot;.</source>
          <target state="translated">We can also pass an array of file paths to the &lt;code&gt;entry&lt;/code&gt; property which creates what is known as a &lt;strong&gt;&quot;multi-main entry&quot;&lt;/strong&gt;. This is useful when you would like to inject multiple dependent files together and graph their dependencies into one &quot;chunk&quot;.</target>
        </trans-unit>
        <trans-unit id="36b83254e75e5a19d5c4cfaa006d12f741f4d823" translate="yes" xml:space="preserve">
          <source>We can also use the &lt;code&gt;ProvidePlugin&lt;/code&gt; to expose a single export of a module by configuring it with an &quot;array path&quot; (e.g. &lt;code&gt;[module, child, ...children?]&lt;/code&gt;). So let's imagine we only wanted to provide the &lt;code&gt;join&lt;/code&gt; method from &lt;code&gt;lodash&lt;/code&gt; wherever it's invoked:</source>
          <target state="translated">또한 &lt;code&gt;ProvidePlugin&lt;/code&gt; 을 사용하여 &quot;배열 경로&quot;(예 : &lt;code&gt;[module, child, ...children?]&lt;/code&gt; ) 로 구성하여 모듈의 단일 내보내기를 노출 할 수 있습니다 . 따라서 &lt;code&gt;lodash&lt;/code&gt; 가 호출 된 곳마다 &lt;code&gt;join&lt;/code&gt; 메소드 를 제공하려고한다고 상상해보십시오 .</target>
        </trans-unit>
        <trans-unit id="db530b33066f02b7472ab75814989f01e865334c" translate="yes" xml:space="preserve">
          <source>We can now see that our &lt;code&gt;main&lt;/code&gt; bundle does not contain &lt;code&gt;vendor&lt;/code&gt; code from &lt;code&gt;node_modules&lt;/code&gt; directory and is down in size to &lt;code&gt;240 bytes&lt;/code&gt;!</source>
          <target state="translated">우리는 지금 우리의 것을 볼 수 있습니다 &lt;code&gt;main&lt;/code&gt; 번들이 포함되지 않은 &lt;code&gt;vendor&lt;/code&gt; 에서 코드를 &lt;code&gt;node_modules&lt;/code&gt; 의 디렉토리에 크기 다운 &lt;code&gt;240 bytes&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="fe8c7c24676ac8c961e015d8356f493d6e9b7176" translate="yes" xml:space="preserve">
          <source>We can see that both builds yielded &lt;code&gt;55e79e5927a639d21a1b&lt;/code&gt; in the &lt;code&gt;vendor&lt;/code&gt; bundle's filename.</source>
          <target state="translated">&lt;code&gt;vendor&lt;/code&gt; 번들의 파일 이름 에 두 빌드 모두 &lt;code&gt;55e79e5927a639d21a1b&lt;/code&gt; 가 생성 된 것을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="751dd31f009f8d6497b7e09f7c2379b83804fcb7" translate="yes" xml:space="preserve">
          <source>We can see that the error also contains a reference to the file (&lt;code&gt;print.js&lt;/code&gt;) and line number (2) where the error occurred. This is great because now we know exactly where to look in order to fix the issue.</source>
          <target state="translated">오류에 오류가 발생한 파일 ( &lt;code&gt;print.js&lt;/code&gt; )과 줄 번호 (2)에 대한 참조도 포함되어 있음을 알 수 있습니다 . 이제이 문제를 해결하기 위해 어디를 찾아야하는지 정확히 알기 때문에 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ca2f28e217702f1ad5e4a98510fd7c1dab1700ed" translate="yes" xml:space="preserve">
          <source>We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;app.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</source>
          <target state="translated">webpack은 &lt;code&gt;print.bundle.js&lt;/code&gt; 및 &lt;code&gt;app.bundle.js&lt;/code&gt; 파일을 생성 하며 &lt;code&gt;index.html&lt;/code&gt; 파일 에도 지정되어 있음을 알 수 있습니다 . 브라우저에서 &lt;code&gt;index.html&lt;/code&gt; 을 열면 버튼을 클릭하면 어떻게되는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13ac810ac2827e8a4338aacc2a70cb3e9f51aa19" translate="yes" xml:space="preserve">
          <source>We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;index.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</source>
          <target state="translated">We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;index.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</target>
        </trans-unit>
        <trans-unit id="1a91536621f215bce27491619c8b48f6ef07ef93" translate="yes" xml:space="preserve">
          <source>We can start with this basic webpack configuration:</source>
          <target state="translated">이 기본 웹팩 구성으로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7939d70e5fa1891e68b4dea435faa4c40a99fa4" translate="yes" xml:space="preserve">
          <source>We can take advantage of this built-in support for Brotli in Node 10.16.0 and later by just passing in the appropriate &lt;code&gt;algorithm&lt;/code&gt; to the CompressionPlugin:</source>
          <target state="translated">We can take advantage of this built-in support for Brotli in Node 10.16.0 and later by just passing in the appropriate &lt;code&gt;algorithm&lt;/code&gt; to the CompressionPlugin:</target>
        </trans-unit>
        <trans-unit id="657bde688727955cba856cb54db5a72d4d37167c" translate="yes" xml:space="preserve">
          <source>We can use the &lt;code&gt;output.filename&lt;/code&gt;&lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; setting to define the names of our output files. webpack provides a method of templating the filenames using bracketed strings called &lt;strong&gt;substitutions&lt;/strong&gt;. The &lt;code&gt;[contenthash]&lt;/code&gt; substitution will add a unique hash based on the content of an asset. When the asset's content changes, &lt;code&gt;[contenthash]&lt;/code&gt; will change as well.</source>
          <target state="translated">We can use the &lt;code&gt;output.filename&lt;/code&gt; &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; setting to define the names of our output files. webpack provides a method of templating the filenames using bracketed strings called &lt;strong&gt;substitutions&lt;/strong&gt;. The &lt;code&gt;[contenthash]&lt;/code&gt; substitution will add a unique hash based on the content of an asset. When the asset's content changes, &lt;code&gt;[contenthash]&lt;/code&gt; will change as well.</target>
        </trans-unit>
        <trans-unit id="981fc9b2fc1796f07ef53b6d65996fa373499c5f" translate="yes" xml:space="preserve">
          <source>We distinguish between local and remote modules. Local modules are normal modules which are part of the current build. Remote modules are modules that are not part of the current build and loaded from a so-called container at the runtime.</source>
          <target state="translated">We distinguish between local and remote modules. Local modules are normal modules which are part of the current build. Remote modules are modules that are not part of the current build and loaded from a so-called container at the runtime.</target>
        </trans-unit>
        <trans-unit id="177ca5503ba9b50d48c9680cb6075d126fe313df" translate="yes" xml:space="preserve">
          <source>We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in &lt;em&gt;development&lt;/em&gt;:</source>
          <target state="translated">벤치 마크 테스트를 실행하고 디버깅하는 데 유용하므로 프로덕션에서 소스 맵을 활성화하는 것이 좋습니다. 즉, 프로덕션 용도로 권장되는 빌드 속도가 상당히 빠른 것을 선택해야합니다 ( &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 참조 ). 이 가이드에서는 &lt;em&gt;개발에&lt;/em&gt; 사용한 &lt;code&gt;inline-source-map&lt;/code&gt; 과 달리 &lt;em&gt;프로덕션&lt;/em&gt; 에서 &lt;code&gt;source-map&lt;/code&gt; 옵션을 사용합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d106b8f94e9705433e844dfdd49f6de112e6d76" translate="yes" xml:space="preserve">
          <source>We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in the &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in the &lt;em&gt;development&lt;/em&gt;:</source>
          <target state="translated">We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in the &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in the &lt;em&gt;development&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="4ccc239d831b8ab166a08dcb2f1c35699644be4a" translate="yes" xml:space="preserve">
          <source>We expect a certain pattern when validate devtool name, pay attention and dont mix up the sequence of devtool string. The pattern is: &lt;code&gt;[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map&lt;/code&gt;.</source>
          <target state="translated">We expect a certain pattern when validate devtool name, pay attention and dont mix up the sequence of devtool string. The pattern is: &lt;code&gt;[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d54e01dd03622ce6cba87877008ad2897307c563" translate="yes" xml:space="preserve">
          <source>We had been getting reports that &lt;code&gt;TS_NODE_PROJECT&lt;/code&gt; might not work with &lt;code&gt;&quot;TS_NODE_PROJECT&quot; unrecognized command&lt;/code&gt; error. Therefore running it with &lt;code&gt;cross-env&lt;/code&gt; seems to fix the issue, for more info &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/2733&quot;&gt;see this issue&lt;/a&gt;.</source>
          <target state="translated">We had been getting reports that &lt;code&gt;TS_NODE_PROJECT&lt;/code&gt; might not work with &lt;code&gt;&quot;TS_NODE_PROJECT&quot; unrecognized command&lt;/code&gt; error. Therefore running it with &lt;code&gt;cross-env&lt;/code&gt; seems to fix the issue, for more info &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/2733&quot;&gt;see this issue&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7aa2b226b3d4a6d958d1587b687dc8f773d58f1d" translate="yes" xml:space="preserve">
          <source>We made the Vagrant box accessible from a static IP, and then made &lt;code&gt;webpack-dev-server&lt;/code&gt; publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</source>
          <target state="translated">We made the Vagrant box accessible from a static IP, and then made &lt;code&gt;webpack-dev-server&lt;/code&gt; publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</target>
        </trans-unit>
        <trans-unit id="282749558ba5da53eeeb6f04c218363bf29d42ee" translate="yes" xml:space="preserve">
          <source>We made the Vagrant box accessible from a static IP, and then made webpack-dev-server publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</source>
          <target state="translated">우리는 고정 IP에서 Vagrant 상자에 액세스 할 수 있도록 한 다음 브라우저에서 접근 할 수 있도록 webpack-dev-server를 공개적으로 액세스 할 수있게했습니다. 그런 다음 VirtualBox가 파일 시스템 이벤트를 보내지 않아 서버가 파일 변경 사항을 다시로드하지 못하는 일반적인 문제를 해결했습니다.</target>
        </trans-unit>
        <trans-unit id="c1b70298e0fffa726b0a5545ddec5a20ae1b479a" translate="yes" xml:space="preserve">
          <source>We no longer support any &lt;code&gt;react&lt;/code&gt; specific features. Please see the wonderful &lt;a href=&quot;https://mdxjs.com/&quot;&gt;MDX&lt;/a&gt; project if you're interested in mixing JSX with Markdown.</source>
          <target state="translated">We no longer support any &lt;code&gt;react&lt;/code&gt; specific features. Please see the wonderful &lt;a href=&quot;https://mdxjs.com/&quot;&gt;MDX&lt;/a&gt; project if you're interested in mixing JSX with Markdown.</target>
        </trans-unit>
        <trans-unit id="2d422e0a1ddfb7d2994c16935e1081df8a6a2917" translate="yes" xml:space="preserve">
          <source>We prefer static detection of production/development mode via the &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;development&lt;/code&gt; condition.</source>
          <target state="translated">We prefer static detection of production/development mode via the &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;development&lt;/code&gt; condition.</target>
        </trans-unit>
        <trans-unit id="acb6a26a13705b56eaa896556f1c8c62488a1eba" translate="yes" xml:space="preserve">
          <source>We recommend do not specify &lt;code&gt;from&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; options, because this can lead to wrong path in source maps. If you need source maps please use the &lt;a href=&quot;#sourcemap&quot;&gt;&lt;code&gt;sourcemap&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">We recommend do not specify &lt;code&gt;from&lt;/code&gt; , &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; options, because this can lead to wrong path in source maps. If you need source maps please use the &lt;a href=&quot;#sourcemap&quot;&gt; &lt;code&gt;sourcemap&lt;/code&gt; &lt;/a&gt; option.</target>
        </trans-unit>
        <trans-unit id="62bfe828a31deb892992ffc5da3d8f564a5fdc92" translate="yes" xml:space="preserve">
          <source>We recommend use prefix &lt;code&gt;v-&lt;/code&gt; for values, &lt;code&gt;s-&lt;/code&gt; for selectors and &lt;code&gt;m-&lt;/code&gt; for media at-rules.</source>
          <target state="translated">We recommend use prefix &lt;code&gt;v-&lt;/code&gt; for values, &lt;code&gt;s-&lt;/code&gt; for selectors and &lt;code&gt;m-&lt;/code&gt; for media at-rules.</target>
        </trans-unit>
        <trans-unit id="b0fb8beee0ab69bd80149b7439291404838e0099" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;code&gt;percentBy: 'entries'&lt;/code&gt; setting for projects with &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;multiple configured entry points&lt;/a&gt;. Percentage calculation will become more accurate because the amount of entry points is known in advance.</source>
          <target state="translated">We recommend using &lt;code&gt;percentBy: 'entries'&lt;/code&gt; setting for projects with &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;multiple configured entry points&lt;/a&gt;. Percentage calculation will become more accurate because the amount of entry points is known in advance.</target>
        </trans-unit>
        <trans-unit id="3bdb9a9e4156622feff4a7d00b8dba672256e8c9" translate="yes" xml:space="preserve">
          <source>We recommend using DllPlugin only with &lt;code&gt;entryOnly: true&lt;/code&gt;, otherwise tree shaking in the DLL won't work as all the exports might be used.</source>
          <target state="translated">We recommend using DllPlugin only with &lt;code&gt;entryOnly: true&lt;/code&gt; , otherwise tree shaking in the DLL won't work as all the exports might be used.</target>
        </trans-unit>
        <trans-unit id="06ec5a34b709daa03d071a04f64967ef28de8f14" translate="yes" xml:space="preserve">
          <source>We strongly recommend using an asynchronous boundary. It will split out the initialization code of a larger chunk to avoid any additional round trips and improve performance in general.</source>
          <target state="translated">We strongly recommend using an asynchronous boundary. It will split out the initialization code of a larger chunk to avoid any additional round trips and improve performance in general.</target>
        </trans-unit>
        <trans-unit id="b98ff645900335c9d3e150d717301208cee1a585" translate="yes" xml:space="preserve">
          <source>We support yarn PnP version 3 &lt;a href=&quot;https://next.yarnpkg.com/features/pnp&quot;&gt;&lt;code&gt;yarn 2 berry&lt;/code&gt;&lt;/a&gt; for persistent caching.</source>
          <target state="translated">We support yarn PnP version 3 &lt;a href=&quot;https://next.yarnpkg.com/features/pnp&quot;&gt; &lt;code&gt;yarn 2 berry&lt;/code&gt; &lt;/a&gt; for persistent caching.</target>
        </trans-unit>
        <trans-unit id="c60a256179676ce3300896ec7d8194c72c21e859" translate="yes" xml:space="preserve">
          <source>We support yarn PnP version 3 &lt;a href=&quot;https://yarnpkg.com/features/pnp&quot;&gt;&lt;code&gt;yarn 2 berry&lt;/code&gt;&lt;/a&gt; for persistent caching.</source>
          <target state="translated">지속적인 캐싱을 위해 yarn PnP 버전 3 &lt;a href=&quot;https://yarnpkg.com/features/pnp&quot;&gt; &lt;code&gt;yarn 2 berry&lt;/code&gt; &lt;/a&gt; 를 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="e0be727f5fc53615fcc78dcf536f6d74c3da629c" translate="yes" xml:space="preserve">
          <source>We use &lt;code&gt;ts-loader&lt;/code&gt; in this guide as it makes enabling additional webpack features, such as importing other web assets, a bit easier.</source>
          <target state="translated">이 안내서 에서는 &lt;code&gt;ts-loader&lt;/code&gt; 를 사용 하여 다른 웹 자산 가져 오기와 같은 추가 웹팩 기능을 좀 더 쉽게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11c4352cb28f270b585c580614a1eb8f880ba669" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;module&lt;/code&gt; condition as optimization again.</source>
          <target state="translated">We use the &lt;code&gt;module&lt;/code&gt; condition as optimization again.</target>
        </trans-unit>
        <trans-unit id="f2451e4fe5b333bbb87a5328bbd6a54561cf3d37" translate="yes" xml:space="preserve">
          <source>We will use &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;MiniCssExtractPlugin&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;production&lt;/code&gt; mode for css as a best practice.</source>
          <target state="translated">We will use &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;MiniCssExtractPlugin&lt;/code&gt; &lt;/a&gt; in &lt;code&gt;production&lt;/code&gt; mode for css as a best practice.</target>
        </trans-unit>
        <trans-unit id="835362acb732e8765a43852621862db6316a6aa4" translate="yes" xml:space="preserve">
          <source>We won't go through a full example of how to use this plugin within your projects, but you can read up on &lt;a href=&quot;../concepts/manifest&quot;&gt;the concept page&lt;/a&gt; and the &lt;a href=&quot;caching&quot;&gt;caching guide&lt;/a&gt; to find out how this ties into long term caching.</source>
          <target state="translated">프로젝트 내에서이 플러그인을 사용하는 방법에 대한 전체 예는 다루지 않지만 &lt;a href=&quot;../concepts/manifest&quot;&gt;개념 페이지&lt;/a&gt; 와 &lt;a href=&quot;caching&quot;&gt;캐싱 안내서&lt;/a&gt; 를 읽고 이것이 장기 캐싱에 어떻게 연결되는지 알아볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29b47e47027f09109359877353a39b7379316d3c" translate="yes" xml:space="preserve">
          <source>We'll also update our project to remove the now unused files:</source>
          <target state="translated">We'll also update our project to remove the now unused files:</target>
        </trans-unit>
        <trans-unit id="e3fe058d1c44e5390193812c37403e5227e1a2c1" translate="yes" xml:space="preserve">
          <source>Web Workers</source>
          <target state="translated">웹 워커</target>
        </trans-unit>
        <trans-unit id="3a824bbf65f1269cef05402d818ccc1920e22bd0" translate="yes" xml:space="preserve">
          <source>WebAssembly modules</source>
          <target state="translated">WebAssembly modules</target>
        </trans-unit>
        <trans-unit id="1ecd172656b0bb7ce4a53fbe55278abe78cbe5dc" translate="yes" xml:space="preserve">
          <source>WebWorkerTemplatePlugin</source>
          <target state="translated">WebWorkerTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="642803d03826095e048310e6f6fdb2336f081224" translate="yes" xml:space="preserve">
          <source>Webpack</source>
          <target state="translated">Webpack</target>
        </trans-unit>
        <trans-unit id="50c9ef00c547d40f6538d1f95175ecf069daf741" translate="yes" xml:space="preserve">
          <source>Webpack 5 Module Federation: A game-changer in JavaScript architecture</source>
          <target state="translated">Webpack 5 Module Federation: A game-changer in JavaScript architecture</target>
        </trans-unit>
        <trans-unit id="21ec2c143e7d0f8cac0739840af4bce0cb753f35" translate="yes" xml:space="preserve">
          <source>Webpack CLI offers some &lt;a href=&quot;../api/cli#environment-variables&quot;&gt;built-in environment variables&lt;/a&gt; which you can access inside a webpack configuration.</source>
          <target state="translated">Webpack CLI는 웹팩 구성 내에서 액세스 할 수있는 몇 가지 &lt;a href=&quot;../api/cli#environment-variables&quot;&gt;기본&lt;/a&gt; 제공 환경 변수 를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="640b6d3bacf8affe8b9e407fae411f4e7999e3e2" translate="yes" xml:space="preserve">
          <source>Webpack Resolver</source>
          <target state="translated">Webpack 확인자</target>
        </trans-unit>
        <trans-unit id="27f4015b28e6a5391e9b051524576637eb061010" translate="yes" xml:space="preserve">
          <source>Webpack chat:</source>
          <target state="translated">Webpack chat:</target>
        </trans-unit>
        <trans-unit id="82b6b2e18d79f25873504926b5f944fcf9abaaba" translate="yes" xml:space="preserve">
          <source>Webpack is capable of adding &lt;code&gt;nonce&lt;/code&gt; to all scripts that it loads. To activate the feature set a &lt;code&gt;__webpack_nonce__&lt;/code&gt; variable needs to be included in your entry script. A unique hash based nonce should be generated and provided for each unique page view this is why &lt;code&gt;__webpack_nonce__&lt;/code&gt; is specified in the entry file and not in the configuration. Please note that &lt;code&gt;nonce&lt;/code&gt; should always be a base64-encoded string.</source>
          <target state="translated">Webpack은 로드하는 모든 스크립트에 &lt;code&gt;nonce&lt;/code&gt; 를 추가 할 수 있습니다. 기능 세트를 활성화하려면 입력 스크립트에 &lt;code&gt;__webpack_nonce__&lt;/code&gt; 변수가 포함되어야합니다. 고유 한 해시 기반 nonce가 생성되어 각 고유 페이지보기에 제공되어야하므로 이것이 구성 파일이 아닌 항목 파일에 &lt;code&gt;__webpack_nonce__&lt;/code&gt; 가 지정된 이유 입니다. 있습니다 &lt;code&gt;nonce&lt;/code&gt; 항상 base64로 인코딩 된 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="158e95469747971b9e26b9ccc964ebc1f958f27d" translate="yes" xml:space="preserve">
          <source>Webpack is used to compile JavaScript modules. Once &lt;a href=&quot;installation&quot;&gt;installed&lt;/a&gt;, you can interface with webpack either from its &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt; or &lt;a href=&quot;../api/node&quot;&gt;API&lt;/a&gt;. If you're still new to webpack, please read through the &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;core concepts&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/comparison&quot;&gt;this comparison&lt;/a&gt; to learn why you might use it over the other tools that are out in the community.</source>
          <target state="translated">Webpack은 JavaScript 모듈을 컴파일하는 데 사용됩니다. 일단 &lt;a href=&quot;installation&quot;&gt;설치&lt;/a&gt; 되면 &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt; 또는 &lt;a href=&quot;../api/node&quot;&gt;API&lt;/a&gt; 에서 웹팩과 인터페이스 할 수 있습니다 . 당신은 여전히 웹팩를 처음 사용하는 경우는 읽어주십시오 &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;핵심 개념&lt;/a&gt; 과 &lt;a href=&quot;https://webpack.js.org/comparison&quot;&gt;이 비교&lt;/a&gt; 는 지역 사회에서있는 다른 도구에 그것을 사용하는 이유를 알아.</target>
        </trans-unit>
        <trans-unit id="a314c0c0bef387cef98f2fd46509bd9f90f50109" translate="yes" xml:space="preserve">
          <source>Webpack provides an &lt;a href=&quot;../concepts/module-resolution&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;.</source>
          <target state="translated">Webpack provides an &lt;a href=&quot;../concepts/module-resolution&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1a141d60dd7559c084ac41a3271f7cc3c2133204" translate="yes" xml:space="preserve">
          <source>Webpack provides an &lt;a href=&quot;../configuration/resolve&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;. The &lt;code&gt;stylus-loader&lt;/code&gt; applies the webpack resolver when processing queries. Thus you can import your Stylus modules from &lt;code&gt;node_modules&lt;/code&gt;.</source>
          <target state="translated">Webpack은 &lt;a href=&quot;../configuration/resolve&quot;&gt;파일을 해결&lt;/a&gt; 하는 고급 메커니즘을 제공 합니다 . &lt;code&gt;stylus-loader&lt;/code&gt; 질의를 처리 할 때 웹팩 리졸버를 적용한다. 따라서 &lt;code&gt;node_modules&lt;/code&gt; 에서 Stylus 모듈을 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6cf8f28b1b8913ae0ae026a0b390c951e74c15c" translate="yes" xml:space="preserve">
          <source>Webpack provides an &lt;a href=&quot;../configuration/resolve&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;. The &lt;code&gt;stylus-loader&lt;/code&gt; applies the webpack resolver when processing queries. Thus you can import your Stylus modules from &lt;code&gt;node_modules&lt;/code&gt;. Just prepend them with a &lt;code&gt;~&lt;/code&gt; which tells webpack to look up the &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Webpack provides an &lt;a href=&quot;../configuration/resolve&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;. The &lt;code&gt;stylus-loader&lt;/code&gt; applies the webpack resolver when processing queries. Thus you can import your Stylus modules from &lt;code&gt;node_modules&lt;/code&gt; . Just prepend them with a &lt;code&gt;~&lt;/code&gt; which tells webpack to look up the &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="25fe02ecaec73c31328353b5ff61b7164208d7ac" translate="yes" xml:space="preserve">
          <source>Webpack specific properties</source>
          <target state="translated">Webpack 특정 속성</target>
        </trans-unit>
        <trans-unit id="6da2df5d302968b86d91eb2e28fbbf6b441efdb8" translate="yes" xml:space="preserve">
          <source>Webpack supports bundling multiple &lt;a href=&quot;../concepts/targets&quot;&gt;targets&lt;/a&gt;. For cases where you may want different Babel configurations for each target (like &lt;code&gt;web&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;node&lt;/code&gt;), this loader provides a &lt;code&gt;target&lt;/code&gt; property via Babel's &lt;a href=&quot;https://babeljs.io/docs/en/config-files#apicallercb&quot;&gt;caller&lt;/a&gt; API.</source>
          <target state="translated">Webpack supports bundling multiple &lt;a href=&quot;../concepts/targets&quot;&gt;targets&lt;/a&gt;. For cases where you may want different Babel configurations for each target (like &lt;code&gt;web&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;node&lt;/code&gt; ), this loader provides a &lt;code&gt;target&lt;/code&gt; property via Babel's &lt;a href=&quot;https://babeljs.io/docs/en/config-files#apicallercb&quot;&gt;caller&lt;/a&gt; API.</target>
        </trans-unit>
        <trans-unit id="c0c5210e932b790099cb080bd655498066252fad" translate="yes" xml:space="preserve">
          <source>Webpack then tries to load the &lt;code&gt;babel&lt;/code&gt; package instead of the &lt;code&gt;babel-loader&lt;/code&gt;.</source>
          <target state="translated">그런 다음 Webpack 은 &lt;code&gt;babel-loader&lt;/code&gt; 대신 &lt;code&gt;babel&lt;/code&gt; 패키지 를로드하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="f93227f09a36564ddcbcc64edc8672d9a999d0d9" translate="yes" xml:space="preserve">
          <source>Webpack's Devtool Source Map</source>
          <target state="translated">Webpack의 Devtool 소스 맵</target>
        </trans-unit>
        <trans-unit id="a57d36dd7547d0d01d63f5a0dca33743ac6b0190" translate="yes" xml:space="preserve">
          <source>What does that mean?</source>
          <target state="translated">그게 무슨 뜻이야?</target>
        </trans-unit>
        <trans-unit id="e23722e1d334532d959d84961060e3ab54e8b4a7" translate="yes" xml:space="preserve">
          <source>What good would these statistics be without some description of the compiled application's actual modules? Each module in the dependency graph is represented by the following structure:</source>
          <target state="translated">컴파일 된 응용 프로그램의 실제 모듈에 대한 설명이 없으면 이러한 통계가 어떻게 좋을까요? 종속성 그래프의 각 모듈은 다음 구조로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8a4ea7253eb5ae4c52f474dda583f9916cc9b4a3" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;CSS Modules&lt;/code&gt;? Please &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#modules&quot;&gt;read&lt;/a&gt;.</source>
          <target state="translated">What is &lt;code&gt;CSS Modules&lt;/code&gt; ? Please &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#modules&quot;&gt;read&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="80025f04bda332bda95338dd0b53da22365259c7" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;progressive&lt;/code&gt; image? &lt;a href=&quot;https://jmperezperez.com/medium-image-progressive-loading-placeholder/&quot;&gt;&lt;code&gt;Answer here&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">What is &lt;code&gt;progressive&lt;/code&gt; image? &lt;a href=&quot;https://jmperezperez.com/medium-image-progressive-loading-placeholder/&quot;&gt; &lt;code&gt;Answer here&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3c405e511522608969dda969a09ff67810928f7b" translate="yes" xml:space="preserve">
          <source>What is a webpack Module</source>
          <target state="translated">웹팩 모듈이란?</target>
        </trans-unit>
        <trans-unit id="a15063f1f366503c5eca45c22ee9ce5c854143a3" translate="yes" xml:space="preserve">
          <source>What we've essentially done here is tell webpack...</source>
          <target state="translated">우리가 여기서 본질적으로 한 일은 webpack에게 알리는 것입니다 ...</target>
        </trans-unit>
        <trans-unit id="3f6cf47fe8f7eb3ed631b1c9020062f7333087c0" translate="yes" xml:space="preserve">
          <source>What's the reasoning behind this? &lt;code&gt;react&lt;/code&gt; probably won't change as often as your application code. By moving it into a separate chunk this chunk can be cached separately from your app code (assuming you are using chunkhash, records, Cache-Control or other long term cache approach).</source>
          <target state="translated">이 뒤에 추론은 무엇입니까? &lt;code&gt;react&lt;/code&gt; 아마도 응용 프로그램 코드만큼 자주 변경되지 않을 것입니다. 이 청크를 별도의 청크로 이동하면 청크 해시, 레코드, Cache-Control 또는 기타 장기 캐시 방식을 사용한다고 가정 할 때이 청크를 앱 코드와 별도로 캐시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d96b3440b7eb625b8c1658e95f879d2671e0065" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../configuration/optimization#optimizationrealcontenthash&quot;&gt;&lt;code&gt;optimization.realContentHash&lt;/code&gt;&lt;/a&gt; option is enabled, webpack will apply &lt;code&gt;RealContentHashPlugin&lt;/code&gt; to compiler internally.</source>
          <target state="translated">때 &lt;a href=&quot;../configuration/optimization#optimizationrealcontenthash&quot;&gt; &lt;code&gt;optimization.realContentHash&lt;/code&gt; 의&lt;/a&gt; 옵션이 활성화되어, 웹팩이 적용됩니다 &lt;code&gt;RealContentHashPlugin&lt;/code&gt; 을 내부적으로 컴파일러.</target>
        </trans-unit>
        <trans-unit id="82ad2275dbd931d707609a926126e7d7fd192347" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; is set to &lt;code&gt;'none'&lt;/code&gt;, &lt;code&gt;optimization.nodeEnv&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">When &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; is set to &lt;code&gt;'none'&lt;/code&gt; , &lt;code&gt;optimization.nodeEnv&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3405963c0dcff8e80cd7e973f9b3a813e4e89a0d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Button&lt;/code&gt; is unused you can effectively remove the &lt;code&gt;export { Button$1 };&lt;/code&gt; which leaves all the remaining code. So the question is &quot;Does this code have any side effects or can it be safely removed?&quot;. Difficult to say, especially because of this line &lt;code&gt;withAppProvider()(Button)&lt;/code&gt;. &lt;code&gt;withAppProvider&lt;/code&gt; is called and the return value is also called. Are there any side effects when calling &lt;code&gt;merge&lt;/code&gt; or &lt;code&gt;hoistStatics&lt;/code&gt;? Are there side effects when assigning &lt;code&gt;WithProvider.contextTypes&lt;/code&gt; (Setter?) or when reading &lt;code&gt;WrappedComponent.contextTypes&lt;/code&gt; (Getter?).</source>
          <target state="translated">When &lt;code&gt;Button&lt;/code&gt; is unused you can effectively remove the &lt;code&gt;export { Button$1 };&lt;/code&gt; which leaves all the remaining code. So the question is &quot;Does this code have any side effects or can it be safely removed?&quot;. Difficult to say, especially because of this line &lt;code&gt;withAppProvider()(Button)&lt;/code&gt; . &lt;code&gt;withAppProvider&lt;/code&gt; is called and the return value is also called. Are there any side effects when calling &lt;code&gt;merge&lt;/code&gt; or &lt;code&gt;hoistStatics&lt;/code&gt; ? Are there side effects when assigning &lt;code&gt;WithProvider.contextTypes&lt;/code&gt; (Setter?) or when reading &lt;code&gt;WrappedComponent.contextTypes&lt;/code&gt; (Getter?).</target>
        </trans-unit>
        <trans-unit id="9c4f3ee1049ce087946296ad68f926f35642de55" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Rule.generator.dataUrl&lt;/code&gt; is used as an object, you can configure two properties:</source>
          <target state="translated">When &lt;code&gt;Rule.generator.dataUrl&lt;/code&gt; is used as an object, you can configure two properties:</target>
        </trans-unit>
        <trans-unit id="779590cabbfa59a5afb0bd916287b5bff4554d11" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;devServer.lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">When &lt;code&gt;devServer.lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="8ac79235f4bf956b13921f4562bf7915c76ae5e6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;invalidate&lt;/code&gt; is called, the &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; handler will be eventually called and fill &lt;code&gt;module.hot.data&lt;/code&gt;. If &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; handler is not registered, an empty object will be supplied to &lt;code&gt;module.hot.data&lt;/code&gt;.</source>
          <target state="translated">When &lt;code&gt;invalidate&lt;/code&gt; is called, the &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt; &lt;code&gt;dispose&lt;/code&gt; &lt;/a&gt; handler will be eventually called and fill &lt;code&gt;module.hot.data&lt;/code&gt; . If &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt; &lt;code&gt;dispose&lt;/code&gt; &lt;/a&gt; handler is not registered, an empty object will be supplied to &lt;code&gt;module.hot.data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="097e7a8a57c079b0550af45266e062d2a4b75f4b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">때 &lt;code&gt;lazy&lt;/code&gt; 활성화가 요구됩니다 때 DEV-서버는 번들을 컴파일합니다. 이는 웹팩이 파일 변경을 감시하지 않음을 의미합니다. 우리는 이것을 &lt;strong&gt;게으른 모드&lt;/strong&gt; 라고 부릅니다 .</target>
        </trans-unit>
        <trans-unit id="a918636379f114af885a0d73833efa42c23d80cd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;open&lt;/code&gt; is enabled, the dev server will open the browser.</source>
          <target state="translated">때 &lt;code&gt;open&lt;/code&gt; 활성화, dev에 서버가 브라우저를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="0370da265ef18c491f7b37b03ff50fe7bf0a9e2a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;stats.entrypoints&lt;/code&gt; is set to &lt;code&gt;'auto'&lt;/code&gt;, webpack will decide automatically whether to display the entry points in the stats output.</source>
          <target state="translated">When &lt;code&gt;stats.entrypoints&lt;/code&gt; is set to &lt;code&gt;'auto'&lt;/code&gt; , webpack will decide automatically whether to display the entry points in the stats output.</target>
        </trans-unit>
        <trans-unit id="cea2d3428fe315d551def013906b1f4d310fc261" translate="yes" xml:space="preserve">
          <source>When Node.js was released a new era started, and it came with new challenges. Now that JavaScript is not running in a browser, how are Node applications supposed to load new chunks of code? There are no html files and script tags that can be added to it.</source>
          <target state="translated">When Node.js was released a new era started, and it came with new challenges. Now that JavaScript is not running in a browser, how are Node applications supposed to load new chunks of code? There are no html files and script tags that can be added to it.</target>
        </trans-unit>
        <trans-unit id="c9f990327c881b65364364e79333e5e612769712" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;matchResource&lt;/code&gt; is set, it will be used to match with the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; instead of the original resource. This can be useful if further loaders should be applied to the resource, or if the module type needs to be changed. It's also displayed in the stats and used for matching &lt;a href=&quot;../configuration/module#ruleissuer&quot;&gt;&lt;code&gt;Rule.issuer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroupscachegrouptest&quot;&gt;&lt;code&gt;test&lt;/code&gt; in &lt;code&gt;splitChunks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">When a &lt;code&gt;matchResource&lt;/code&gt; is set, it will be used to match with the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; &lt;/a&gt; instead of the original resource. This can be useful if further loaders should be applied to the resource, or if the module type needs to be changed. It's also displayed in the stats and used for matching &lt;a href=&quot;../configuration/module#ruleissuer&quot;&gt; &lt;code&gt;Rule.issuer&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroupscachegrouptest&quot;&gt; &lt;code&gt;test&lt;/code&gt; in &lt;code&gt;splitChunks&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ab6541e3fc3548f8ffed0cb7a3c4975a90c82ea4" translate="yes" xml:space="preserve">
          <source>When a function is given, returning &lt;code&gt;true&lt;/code&gt; tells webpack to inject the module into the bundle as Base64-encoded string, otherwise module file will be emitted into the output directory.</source>
          <target state="translated">When a function is given, returning &lt;code&gt;true&lt;/code&gt; tells webpack to inject the module into the bundle as Base64-encoded string, otherwise module file will be emitted into the output directory.</target>
        </trans-unit>
        <trans-unit id="936d0ae63cdd310640f2be4edcef55d8a668d108" translate="yes" xml:space="preserve">
          <source>When a page which uses the &lt;code&gt;ChartComponent&lt;/code&gt; is requested, the charting-library-chunk is also requested via &lt;code&gt;&amp;lt;link rel=&quot;preload&quot;&amp;gt;&lt;/code&gt;. Assuming the page-chunk is smaller and finishes faster, the page will be displayed with a &lt;code&gt;LoadingIndicator&lt;/code&gt;, until the already requested &lt;code&gt;charting-library-chunk&lt;/code&gt; finishes. This will give a little load time boost since it only needs one round-trip instead of two. Especially in high-latency environments.</source>
          <target state="translated">&lt;code&gt;ChartComponent&lt;/code&gt; 를 사용하는 페이지 가 요청되면 &lt;code&gt;&amp;lt;link rel=&quot;preload&quot;&amp;gt;&lt;/code&gt; 를 통해 charting-library-chunk도 요청됩니다 . 페이지 청크가 더 작고 더 빨리 완료된다고 가정하면, 이미 요청 된 &lt;code&gt;charting-library-chunk&lt;/code&gt; 가 완료 될 때까지 페이지에 &lt;code&gt;LoadingIndicator&lt;/code&gt; 가 표시됩니다 . 두 번이 아닌 한 번만 왕복하면되므로로드 시간이 약간 증가합니다. 특히 대기 시간이 긴 환경에서.</target>
        </trans-unit>
        <trans-unit id="4254af549da477b1173d6e70e64d52344b144aaf" translate="yes" xml:space="preserve">
          <source>When assigning equal names to different split chunks, all vendor modules are placed into a single shared chunk, though it's not recommend since it can result in more code downloaded.</source>
          <target state="translated">다른 분할 청크에 동일한 이름을 할당하면 모든 공급 업체 모듈이 단일 공유 청크에 배치되지만 더 많은 코드를 다운로드 할 수 있으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d5b09223038225769f84c1f42ba9ae582c3aa8e" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;check&lt;/code&gt; state, this module will be added to the update when an update is available. If no update is available it will create a new update. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</source>
          <target state="translated">When called during the &lt;code&gt;check&lt;/code&gt; state, this module will be added to the update when an update is available. If no update is available it will create a new update. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</target>
        </trans-unit>
        <trans-unit id="f77d259475896e07ef292a542d6c6f90531181e2" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;dispose&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; state, HMR will pick it up after getting out of those states.</source>
          <target state="translated">When called during the &lt;code&gt;dispose&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; state, HMR will pick it up after getting out of those states.</target>
        </trans-unit>
        <trans-unit id="629b51e2c6676a4cd198f2c07be845c738c575dc" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;idle&lt;/code&gt; state, a new HMR update will be created containing this module. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</source>
          <target state="translated">When called during the &lt;code&gt;idle&lt;/code&gt; state, a new HMR update will be created containing this module. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</target>
        </trans-unit>
        <trans-unit id="252c5755307a122a2d89471e3b65082f4f711175" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;ready&lt;/code&gt; or &lt;code&gt;prepare&lt;/code&gt; state, this module will be added to the current HMR update.</source>
          <target state="translated">When called during the &lt;code&gt;ready&lt;/code&gt; or &lt;code&gt;prepare&lt;/code&gt; state, this module will be added to the current HMR update.</target>
        </trans-unit>
        <trans-unit id="c2a1936d8933244dd718faf821e675520875717c" translate="yes" xml:space="preserve">
          <source>When combining with the &lt;a href=&quot;output#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option: If an array is passed only the last item is exported.</source>
          <target state="translated">&lt;a href=&quot;output#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; 옵션 과 결합 할 때 : 배열이 전달되면 마지막 항목 만 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="eae6f736854059427f8c986bd296d99a4dd905c2" translate="yes" xml:space="preserve">
          <source>When combining with the &lt;a href=&quot;output#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option: If an array is passed only the last item is exported.</source>
          <target state="translated">When combining with the &lt;a href=&quot;output#outputlibrary&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; option: If an array is passed only the last item is exported.</target>
        </trans-unit>
        <trans-unit id="3546bb0ca2be567641a97a2d03578b6e40ea329f" translate="yes" xml:space="preserve">
          <source>When compiling source code with webpack, users can generate a JSON file containing statistics about modules. These statistics can be used to analyze an application's dependency graph as well as to optimize compilation speed. The file is typically generated with the following CLI command:</source>
          <target state="translated">웹팩으로 소스 코드를 컴파일 할 때 사용자는 모듈에 대한 통계가 포함 된 JSON 파일을 생성 할 수 있습니다. 이 통계는 응용 프로그램의 종속성 그래프를 분석하고 컴파일 속도를 최적화하는 데 사용할 수 있습니다. 파일은 일반적으로 다음 CLI 명령으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4c7353a246265e00b25d23635b72209bd3daa993" translate="yes" xml:space="preserve">
          <source>When consuming &lt;a href=&quot;https://github.com/webpack/webpack-sources&quot;&gt;&lt;code&gt;webpack-sources&lt;/code&gt;&lt;/a&gt; package in plugins, use &lt;code&gt;require('webpack').sources&lt;/code&gt; instead of &lt;code&gt;require('webpack-sources')&lt;/code&gt; to avoid version conflicts for persistent caching.</source>
          <target state="translated">When consuming &lt;a href=&quot;https://github.com/webpack/webpack-sources&quot;&gt; &lt;code&gt;webpack-sources&lt;/code&gt; &lt;/a&gt; package in plugins, use &lt;code&gt;require('webpack').sources&lt;/code&gt; instead of &lt;code&gt;require('webpack-sources')&lt;/code&gt; to avoid version conflicts for persistent caching.</target>
        </trans-unit>
        <trans-unit id="5afdd0296e171de866c508b740b84b8c21d1e603" translate="yes" xml:space="preserve">
          <source>When creating a bundle with this configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'default footer'. Let's set &lt;code&gt;Rule.resolve&lt;/code&gt; for &lt;code&gt;.js&lt;/code&gt; files, and alias &lt;code&gt;footer&lt;/code&gt; to &lt;code&gt;overridden.js&lt;/code&gt;.</source>
          <target state="translated">When creating a bundle with this configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'default footer'. Let's set &lt;code&gt;Rule.resolve&lt;/code&gt; for &lt;code&gt;.js&lt;/code&gt; files, and alias &lt;code&gt;footer&lt;/code&gt; to &lt;code&gt;overridden.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aac6a0a96ff5121dc13611a26f4cb1cfba3482ec" translate="yes" xml:space="preserve">
          <source>When creating a bundle with updated configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'overridden footer'.</source>
          <target state="translated">When creating a bundle with updated configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'overridden footer'.</target>
        </trans-unit>
        <trans-unit id="713580f1a6d5ae54743a4b9083ebeacf1983bef9" translate="yes" xml:space="preserve">
          <source>When declaring a local classname you can compose a local class from another local classname.</source>
          <target state="translated">로컬 클래스 이름을 선언 할 때 다른 로컬 클래스 이름에서 로컬 클래스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a64d141b958f5e87111733dd5f7d8d676c38709" translate="yes" xml:space="preserve">
          <source>When defining values for &lt;code&gt;process&lt;/code&gt; prefer &lt;code&gt;'process.env.NODE_ENV': JSON.stringify('production')&lt;/code&gt; over &lt;code&gt;process: { env: { NODE_ENV: JSON.stringify('production') } }&lt;/code&gt;. Using the latter will overwrite the &lt;code&gt;process&lt;/code&gt; object which can break compatibility with some modules that expect other values on the process object to be defined.</source>
          <target state="translated">에 대한 값을 정의 할 때 &lt;code&gt;process&lt;/code&gt; 선호 &lt;code&gt;'process.env.NODE_ENV': JSON.stringify('production')&lt;/code&gt; 통해 &lt;code&gt;process: { env: { NODE_ENV: JSON.stringify('production') } }&lt;/code&gt; . 후자를 사용하면 &lt;code&gt;process&lt;/code&gt; 개체를 덮어 쓰므로 프로세스 개체의 다른 값이 정의 될 것으로 예상되는 일부 모듈과의 호환성이 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="250af6c15c6b77347d259b8cfa2de3ce234b9bd0" translate="yes" xml:space="preserve">
          <source>When developing a plugin for webpack, you might want to know where each hook is called. To learn this, search for &lt;code&gt;hooks.&amp;lt;hook name&amp;gt;.call&lt;/code&gt; across the webpack source</source>
          <target state="translated">웹 팩용 플러그인을 개발할 때 각 후크가 호출되는 위치를 알고 싶을 수 있습니다. 이를 배우려면 웹팩 소스 에서 &lt;code&gt;hooks.&amp;lt;hook name&amp;gt;.call&lt;/code&gt; .call을 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="eac506339aaf8ca2ceab108281956c6327d3d307" translate="yes" xml:space="preserve">
          <source>When enabled, symlinked resources are resolved to their &lt;em&gt;real&lt;/em&gt; path, not their symlinked location. Note that this may cause module resolution to fail when using tools that symlink packages (like &lt;code&gt;npm link&lt;/code&gt;).</source>
          <target state="translated">활성화되면 심볼릭 링크 된 리소스는 심볼릭 링크 된 위치가 아닌 &lt;em&gt;실제&lt;/em&gt; 경로 로 확인됩니다 . 패키지를 심볼릭 링크하는 도구 (예 : &lt;code&gt;npm link&lt;/code&gt; )를 사용하면 모듈 확인에 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb0d5a03aa09265410943518308f54c19c4abeeb" translate="yes" xml:space="preserve">
          <source>When enabled, webpack will set &lt;a href=&quot;#outputiife&quot;&gt;&lt;code&gt;output.iife&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;#outputscripttype&quot;&gt;&lt;code&gt;output.scriptType&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;'module'&lt;/code&gt; and &lt;code&gt;terserOptions.module&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; internally.</source>
          <target state="translated">활성화되면 webpack은 &lt;a href=&quot;#outputiife&quot;&gt; &lt;code&gt;output.iife&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 , &lt;a href=&quot;#outputscripttype&quot;&gt; &lt;code&gt;output.scriptType&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;'module'&lt;/code&gt; 로 , &lt;code&gt;terserOptions.module&lt;/code&gt; 을 내부적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="0867e331fe64e063109c858345bb69d7dc4cc24b" translate="yes" xml:space="preserve">
          <source>When enabled, webpack would prefer to resolve module requests as relative requests instead of using modules from &lt;code&gt;node_modules&lt;/code&gt; directories.</source>
          <target state="translated">When enabled, webpack would prefer to resolve module requests as relative requests instead of using modules from &lt;code&gt;node_modules&lt;/code&gt; directories.</target>
        </trans-unit>
        <trans-unit id="d5298ec46ae9b14121ccdf8dcced94e35877a3bb" translate="yes" xml:space="preserve">
          <source>When enabled, you should provide the file extension when &lt;code&gt;import&lt;/code&gt;ing a module in &lt;code&gt;.mjs&lt;/code&gt; files or any other &lt;code&gt;.js&lt;/code&gt; files when their nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field with a value of &lt;code&gt;&quot;module&quot;&lt;/code&gt;, otherwise webpack would fail the compiling with a &lt;code&gt;Module not found&lt;/code&gt; error. And webpack won't resolve directories with filenames defined in the &lt;a href=&quot;resolve#resolvemainfiles&quot;&gt;&lt;code&gt;resolve.mainFiles&lt;/code&gt;&lt;/a&gt;, you have to specify the filename yourself.</source>
          <target state="translated">When enabled, you should provide the file extension when &lt;code&gt;import&lt;/code&gt; ing a module in &lt;code&gt;.mjs&lt;/code&gt; files or any other &lt;code&gt;.js&lt;/code&gt; files when their nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field with a value of &lt;code&gt;&quot;module&quot;&lt;/code&gt; , otherwise webpack would fail the compiling with a &lt;code&gt;Module not found&lt;/code&gt; error. And webpack won't resolve directories with filenames defined in the &lt;a href=&quot;resolve#resolvemainfiles&quot;&gt; &lt;code&gt;resolve.mainFiles&lt;/code&gt; &lt;/a&gt;, you have to specify the filename yourself.</target>
        </trans-unit>
        <trans-unit id="de4f213b38880204a9cc2ff95ea9d365e1a4a280" translate="yes" xml:space="preserve">
          <source>When executing &lt;code&gt;NODE_ENV=production webpack&lt;/code&gt; in the terminal to build, &lt;code&gt;entry.js&lt;/code&gt; becomes this:</source>
          <target state="translated">빌드 할 터미널에서 &lt;code&gt;NODE_ENV=production webpack&lt;/code&gt; 을 실행할 때 &lt;code&gt;entry.js&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0da06ca020ed0939df108b2df2d651ec354c048" translate="yes" xml:space="preserve">
          <source>When files paths are processed by webpack, they always contain &lt;code&gt;/&lt;/code&gt; on Unix systems and &lt;code&gt;\&lt;/code&gt; on Windows. That's why using &lt;code&gt;[\\/]&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; fields is necessary to represent a path separator. &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; will cause issues when used cross-platform.</source>
          <target state="translated">When files paths are processed by webpack, they always contain &lt;code&gt;/&lt;/code&gt; on Unix systems and &lt;code&gt;\&lt;/code&gt; on Windows. That's why using &lt;code&gt;[\\/]&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; fields is necessary to represent a path separator. &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; will cause issues when used cross-platform.</target>
        </trans-unit>
        <trans-unit id="7276358ec6a6b1b20a6f229f493f5bc89ee0a7a3" translate="yes" xml:space="preserve">
          <source>When following &lt;code&gt;require()&lt;/code&gt; call is evaluated:</source>
          <target state="translated">When following &lt;code&gt;require()&lt;/code&gt; call is evaluated:</target>
        </trans-unit>
        <trans-unit id="7a0a8c8cee49129be667bdabcc325bc5a1ea3345" translate="yes" xml:space="preserve">
          <source>When importing from an npm package, e.g. &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt;, this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; specified in your webpack configuration.</source>
          <target state="translated">npm 패키지에서 가져 오는 경우 (예 : &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; )이 옵션은 &lt;code&gt;package.json&lt;/code&gt; 의 어떤 필드를 검사 할지 결정합니다 . 기본값은 웹팩 구성에 지정된 &lt;a href=&quot;../concepts/targets&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="914299b827acf5949a2c3b90c84f3a98237eb0db" translate="yes" xml:space="preserve">
          <source>When importing from an npm package, e.g. &lt;code&gt;import * as D3 from 'd3'&lt;/code&gt;, this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; specified in your webpack configuration.</source>
          <target state="translated">When importing from an npm package, e.g. &lt;code&gt;import * as D3 from 'd3'&lt;/code&gt; , this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; specified in your webpack configuration.</target>
        </trans-unit>
        <trans-unit id="aac832abcc21fcde37f9dc201dae0be38b70997a" translate="yes" xml:space="preserve">
          <source>When installing a package that will be bundled into your production bundle, you should use &lt;code&gt;npm install --save&lt;/code&gt;. If you're installing a package for development purposes (e.g. a linter, testing libraries, etc.) then you should use &lt;code&gt;npm install --save-dev&lt;/code&gt;. More information can be found in the &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm documentation&lt;/a&gt;.</source>
          <target state="translated">프로덕션 번들에 번들로 제공 될 패키지를 &lt;code&gt;npm install --save&lt;/code&gt; 때는 npm install --save를 사용해야 합니다. 개발 목적으로 패키지 (예 : 린터, 테스트 라이브러리 등)를 &lt;code&gt;npm install --save-dev&lt;/code&gt; 하는 경우 npm install --save-dev 를 사용해야합니다 . 자세한 내용은 &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebd7d0c9e10b1536745313e0c7501b34e45c3140" translate="yes" xml:space="preserve">
          <source>When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;http://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</source>
          <target state="translated">npm에서 타사 라이브러리를 설치할 때는 해당 라이브러리에 대한 타이핑 정의를 설치해야합니다. 이러한 정의는 &lt;a href=&quot;http://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fba0b8b2797c9869cb7c60cf7f36728c3d9990c2" translate="yes" xml:space="preserve">
          <source>When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</source>
          <target state="translated">When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a7d63f2c961d1c468e0c64be6d7c2e3208937f14" translate="yes" xml:space="preserve">
          <source>When it's not possible to detect mode we fallback to the production version.</source>
          <target state="translated">When it's not possible to detect mode we fallback to the production version.</target>
        </trans-unit>
        <trans-unit id="0e3063869d9861574f92e937bd8e766cc68f510b" translate="yes" xml:space="preserve">
          <source>When loading code with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, the webpack runtime will try to find an existing &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that matches the &lt;code&gt;src&lt;/code&gt; attribute or has a specific &lt;code&gt;data-webpack&lt;/code&gt; attribute. For chunk loading &lt;code&gt;data-webpack&lt;/code&gt; attribute would have value of &lt;code&gt;'[output.uniqueName]:chunk-[chunkId]'&lt;/code&gt; while external script has value of &lt;code&gt;'[output.uniqueName]:[global]'&lt;/code&gt;.</source>
          <target state="translated">When loading code with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, the webpack runtime will try to find an existing &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that matches the &lt;code&gt;src&lt;/code&gt; attribute or has a specific &lt;code&gt;data-webpack&lt;/code&gt; attribute. For chunk loading &lt;code&gt;data-webpack&lt;/code&gt; attribute would have value of &lt;code&gt;'[output.uniqueName]:chunk-[chunkId]'&lt;/code&gt; while external script has value of &lt;code&gt;'[output.uniqueName]:[global]'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1ac815eb5669924512d67d056cd9a159cb6e5a9" translate="yes" xml:space="preserve">
          <source>When multiple targets are passed, then common subset of features will be used:</source>
          <target state="translated">When multiple targets are passed, then common subset of features will be used:</target>
        </trans-unit>
        <trans-unit id="54cf5ef4c81052dc0bb8e2761917ad0bfb136bf3" translate="yes" xml:space="preserve">
          <source>When nesting is used, providing overrides to one container will automatically override the modules with the same &quot;name&quot; in the nested container(s).</source>
          <target state="translated">When nesting is used, providing overrides to one container will automatically override the modules with the same &quot;name&quot; in the nested container(s).</target>
        </trans-unit>
        <trans-unit id="f54640db1624976533d90e49a88cd547e9b0d501" translate="yes" xml:space="preserve">
          <source>When no information about the target or the &lt;a href=&quot;output#outputenvironment&quot;&gt;environment&lt;/a&gt; features is provided, then ES2015 will be used.</source>
          <target state="translated">When no information about the target or the &lt;a href=&quot;output#outputenvironment&quot;&gt;environment&lt;/a&gt; features is provided, then ES2015 will be used.</target>
        </trans-unit>
        <trans-unit id="f9d2f82c23530b7b38fd825319b0c93915066903" translate="yes" xml:space="preserve">
          <source>When only a single entry (&lt;code&gt;&quot;.&quot;&lt;/code&gt;) into the package should be supported the &lt;code&gt;{ &quot;.&quot;: ... }&lt;/code&gt; object nesting can be omitted:</source>
          <target state="translated">When only a single entry ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; ) into the package should be supported the &lt;code&gt;{ &quot;.&quot;: ... }&lt;/code&gt; object nesting can be omitted:</target>
        </trans-unit>
        <trans-unit id="e5cf19aa9f8c4e22d16ba0921eab16e5689f657f" translate="yes" xml:space="preserve">
          <source>When processing modules with webpack, it is important to understand the different module syntaxes &amp;ndash; specifically the &lt;a href=&quot;module-methods&quot;&gt;methods&lt;/a&gt; and &lt;a href=&quot;module-variables&quot;&gt;variables&lt;/a&gt; &amp;ndash; that are supported.</source>
          <target state="translated">웹팩으로 모듈을 처리 할 때 지원되는 다양한 모듈 구문, 특히 &lt;a href=&quot;module-methods&quot;&gt;메서드&lt;/a&gt; 와 &lt;a href=&quot;module-variables&quot;&gt;변수&lt;/a&gt; 를 이해하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="58456700867017ff4232dd40aae854d5f72d63f9" translate="yes" xml:space="preserve">
          <source>When processing modules with webpack, it is important to understand the different module syntaxes -- specifically the &lt;a href=&quot;module-methods&quot;&gt;methods&lt;/a&gt; and &lt;a href=&quot;module-variables&quot;&gt;variables&lt;/a&gt; -- that are supported.</source>
          <target state="translated">웹팩으로 모듈을 처리 할 때 지원되는 다양한 모듈 구문 (특히 &lt;a href=&quot;module-methods&quot;&gt;메서드&lt;/a&gt; 및 &lt;a href=&quot;module-variables&quot;&gt;변수)&lt;/a&gt; 을 이해해야합니다 .</target>
        </trans-unit>
        <trans-unit id="28a57690cf9a948bf2bff9b360fff7054ca3f0d5" translate="yes" xml:space="preserve">
          <source>When providing a custom client and server implementation make sure that they are compatible with one another to communicate successfully.</source>
          <target state="translated">When providing a custom client and server implementation make sure that they are compatible with one another to communicate successfully.</target>
        </trans-unit>
        <trans-unit id="ef1efdebab988b74943d54fbfbcfff3b7721d936" translate="yes" xml:space="preserve">
          <source>When providing an &lt;code&gt;object&lt;/code&gt; to the &lt;code&gt;ProgressPlugin&lt;/code&gt;, following properties are supported:</source>
          <target state="translated">When providing an &lt;code&gt;object&lt;/code&gt; to the &lt;code&gt;ProgressPlugin&lt;/code&gt; , following properties are supported:</target>
        </trans-unit>
        <trans-unit id="60f74f8cf364bb2c3b358ef9a5c871a34dd697e0" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt;, the module is not removed from cache, which results in the exception getting thrown only on the first &lt;code&gt;require&lt;/code&gt; call (making it incompatible with node.js).</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 로 설정 하면 모듈이 캐시에서 제거되지 않으므로 첫 번째 &lt;code&gt;require&lt;/code&gt; 호출 (예 : node.js와 호환되지 않음) 에서만 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="f25a86f18aa4d9b660bcbd13b61019472052de54" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt; tells webpack to reduce the size of WASM by changing imports to shorter strings. It mangles module and export names.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정하면 가져 오기를 더 짧은 문자열로 변경하여 웹팩에 WASM 크기를 줄 이도록 지시합니다. 모듈과 내보내기 이름을 엉망으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6cfe5772eea6ac5b62145d24a208f58602379411" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt; this option bypasses host checking. &lt;strong&gt;THIS IS NOT RECOMMENDED&lt;/strong&gt; as apps that do not check the host are vulnerable to DNS rebinding attacks.</source>
          <target state="translated">When set to &lt;code&gt;true&lt;/code&gt; this option bypasses host checking. &lt;strong&gt;THIS IS NOT RECOMMENDED&lt;/strong&gt; as apps that do not check the host are vulnerable to DNS rebinding attacks.</target>
        </trans-unit>
        <trans-unit id="3e7756a0e6c1383ff6ce25f15f9104db9b4b9ff2" translate="yes" xml:space="preserve">
          <source>When set to true this option bypasses host checking. THIS IS NOT RECOMMENDED as apps that do not check the host are vulnerable to DNS rebinding attacks.</source>
          <target state="translated">true로 설정하면이 옵션은 호스트 검사를 무시합니다. 호스트를 확인하지 않는 앱은 DNS 리 바인딩 공격에 취약하므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a588827db4b10cf66e831c829a9e2a0293b21c20" translate="yes" xml:space="preserve">
          <source>When targeting a library, especially when &lt;code&gt;libraryTarget&lt;/code&gt; is &lt;code&gt;'umd'&lt;/code&gt;, this option indicates what global object will be used to mount the library. To make UMD build available on both browsers and Node.js, set &lt;code&gt;output.globalObject&lt;/code&gt; option to &lt;code&gt;'this'&lt;/code&gt;. Defaults to &lt;code&gt;self&lt;/code&gt; for Web-like targets.</source>
          <target state="translated">When targeting a library, especially when &lt;code&gt;libraryTarget&lt;/code&gt; is &lt;code&gt;'umd'&lt;/code&gt; , this option indicates what global object will be used to mount the library. To make UMD build available on both browsers and Node.js, set &lt;code&gt;output.globalObject&lt;/code&gt; option to &lt;code&gt;'this'&lt;/code&gt; . Defaults to &lt;code&gt;self&lt;/code&gt; for Web-like targets.</target>
        </trans-unit>
        <trans-unit id="838a0b02527f2c7edbcf02a32ebfc1e276d9e6dd" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;development&lt;/code&gt; condition is supported we use the version enhanced for development. Otherwise, in production or when mode is unknown, we use the optimized version.</source>
          <target state="translated">When the &lt;code&gt;development&lt;/code&gt; condition is supported we use the version enhanced for development. Otherwise, in production or when mode is unknown, we use the optimized version.</target>
        </trans-unit>
        <trans-unit id="139d0667f1eace4da938902de629746ba602a883" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;exports&lt;/code&gt; field is specified, only these module requests are available. Any other requests will lead to a ModuleNotFound Error.</source>
          <target state="translated">When the &lt;code&gt;exports&lt;/code&gt; field is specified, only these module requests are available. Any other requests will lead to a ModuleNotFound Error.</target>
        </trans-unit>
        <trans-unit id="8598222c4a511535ba42795fcaa12ff829a8437c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;target&lt;/code&gt; property is set to &lt;code&gt;webworker&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;, or left unspecified:</source>
          <target state="translated">때 &lt;code&gt;target&lt;/code&gt; 속성이 설정되어 &lt;code&gt;webworker&lt;/code&gt; , &lt;code&gt;web&lt;/code&gt; , 또는 지정되지 않은 상태 :</target>
        </trans-unit>
        <trans-unit id="06701e817af0679d68717f1453f2f36525b99925" translate="yes" xml:space="preserve">
          <source>When the chunk has a name already, each part will get a new name derived from that name. Depending on the value of &lt;code&gt;optimization.splitChunks.hidePathInfo&lt;/code&gt; it will add a key derived from the first module name or a hash of it.</source>
          <target state="translated">청크에 이미 이름이 있으면 각 부분은 해당 이름에서 파생 된 새 이름을 얻습니다. &lt;code&gt;optimization.splitChunks.hidePathInfo&lt;/code&gt; 의 값에 따라 첫 번째 모듈 이름 또는 그 해시에서 파생 된 키가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="deae5e0c9571595315c2198df6ddb413a1808f20" translate="yes" xml:space="preserve">
          <source>When the scaffold package is in your local file system you should point &lt;code&gt;init&lt;/code&gt; to its path:</source>
          <target state="translated">When the scaffold package is in your local file system you should point &lt;code&gt;init&lt;/code&gt; to its path:</target>
        </trans-unit>
        <trans-unit id="1e3fc46744fdb3b1a110fd3c2978521c4e860cb8" translate="yes" xml:space="preserve">
          <source>When the server is started, there will be a message prior to the list of resolved modules:</source>
          <target state="translated">서버가 시작되면 해결 된 모듈 목록 이전에 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0eaea81b241689b7665ce3045340a1e191fe43f4" translate="yes" xml:space="preserve">
          <source>When the webpack configuration &lt;a href=&quot;../configuration/configuration-types#exporting-a-function&quot;&gt;exports a function&lt;/a&gt;, an &quot;environment&quot; may be passed to it.</source>
          <target state="translated">웹팩 구성 &lt;a href=&quot;../configuration/configuration-types#exporting-a-function&quot;&gt;에서 함수를 내&lt;/a&gt; 보내면 &quot;환경&quot;이 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="104fe67f806e89dc0b4cb6167e899e6aaf78d66a" translate="yes" xml:space="preserve">
          <source>When there is no AMD/CommonJS version of the module and you want to include the &lt;code&gt;dist&lt;/code&gt;, you can flag this module in &lt;a href=&quot;../configuration/module#module-noparse&quot;&gt;&lt;code&gt;noParse&lt;/code&gt;&lt;/a&gt;. This will cause webpack to include the module without parsing it or resolving &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt; statements. This practice is also used to improve the build performance.</source>
          <target state="translated">AMD / CommonJS 버전의 모듈이없고 &lt;code&gt;dist&lt;/code&gt; 를 포함하려는 경우이 모듈을 &lt;a href=&quot;../configuration/module#module-noparse&quot;&gt; &lt;code&gt;noParse&lt;/code&gt; 에&lt;/a&gt; 플래그 지정할 수 있습니다 . 이로 인해 웹팩은 모듈을 파싱하거나 &lt;code&gt;require()&lt;/code&gt; 및 &lt;code&gt;import&lt;/code&gt; 문을 해결하지 않고 모듈을 포함하게됩니다 . 이 방법은 빌드 성능을 향상시키는 데에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9ccac2633e4376043f36ec015230868f6934c298" translate="yes" xml:space="preserve">
          <source>When there is no AMD/CommonJS version of the module and you want to include the &lt;code&gt;dist&lt;/code&gt;, you can flag this module in &lt;a href=&quot;../configuration/module#modulenoparse&quot;&gt;&lt;code&gt;noParse&lt;/code&gt;&lt;/a&gt;. This will cause webpack to include the module without parsing it or resolving &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt; statements. This practice is also used to improve the build performance.</source>
          <target state="translated">When there is no AMD/CommonJS version of the module and you want to include the &lt;code&gt;dist&lt;/code&gt; , you can flag this module in &lt;a href=&quot;../configuration/module#modulenoparse&quot;&gt; &lt;code&gt;noParse&lt;/code&gt; &lt;/a&gt;. This will cause webpack to include the module without parsing it or resolving &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt; statements. This practice is also used to improve the build performance.</target>
        </trans-unit>
        <trans-unit id="6c3edac4d7e24677449b34a30a3cf2f744e6b21b" translate="yes" xml:space="preserve">
          <source>When this module or dependencies are updated, this module can be disposed and re-evaluated without informing parents. This makes sense if this module has no exports (or exports are updated in another way).</source>
          <target state="translated">이 모듈 또는 종속성이 업데이트되면이 모듈을 부모에게 알리지 않고 폐기 및 재평가 할 수 있습니다. 이 모듈에 내보내기가없는 경우 (또는 다른 방법으로 내보내기가 업데이트되는 경우) 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a91d92f665575307fbc5e27ed8a9cc8f85d5a48" translate="yes" xml:space="preserve">
          <source>When trying to fulfill the last two conditions, bigger chunks are preferred.</source>
          <target state="translated">마지막 두 조건을 충족 시키려고 할 때 더 큰 청크가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="5029798a0f5296cf5ec6806bdf2c0abd98d3a69a" translate="yes" xml:space="preserve">
          <source>When used a a function, it executes for every module and must return a data URI string.</source>
          <target state="translated">When used a a function, it executes for every module and must return a data URI string.</target>
        </trans-unit>
        <trans-unit id="f13ec3e770ee9a2585f9ba44d513c7d97bbea033" translate="yes" xml:space="preserve">
          <source>When used in tandem with &lt;a href=&quot;#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#output-librarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt;, this option allows users to insert comments within the export wrapper. To insert the same comment for each &lt;code&gt;libraryTarget&lt;/code&gt; type, set &lt;code&gt;auxiliaryComment&lt;/code&gt; to a string:</source>
          <target state="translated">&lt;a href=&quot;#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#output-librarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt; 과 함께 사용되는 경우이 옵션을 사용하면 내보내기 래퍼 내에 주석을 삽입 할 수 있습니다. 각각 같은 코멘트를 삽입하려면 &lt;code&gt;libraryTarget&lt;/code&gt; 의 유형을 설정 &lt;code&gt;auxiliaryComment&lt;/code&gt; 를 문자열로 :</target>
        </trans-unit>
        <trans-unit id="ce88bd66388fd9167aa675f8a0d008fabd7d8217" translate="yes" xml:space="preserve">
          <source>When used in tandem with &lt;a href=&quot;#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#outputlibrarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt;, this option allows users to insert comments within the export wrapper. To insert the same comment for each &lt;code&gt;libraryTarget&lt;/code&gt; type, set &lt;code&gt;auxiliaryComment&lt;/code&gt; to a string:</source>
          <target state="translated">When used in tandem with &lt;a href=&quot;#outputlibrary&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#outputlibrarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt;, this option allows users to insert comments within the export wrapper. To insert the same comment for each &lt;code&gt;libraryTarget&lt;/code&gt; type, set &lt;code&gt;auxiliaryComment&lt;/code&gt; to a string:</target>
        </trans-unit>
        <trans-unit id="fe3acd69f18cf0fa025e30d33b88f225ea5c83d7" translate="yes" xml:space="preserve">
          <source>When used via the CLI, a path to an SSL .pfx file. If used in options, it should be the bytestream of the .pfx file.</source>
          <target state="translated">CLI를 통해 사용될 경우 SSL .pfx 파일의 경로입니다. 옵션에 사용되는 경우 .pfx 파일의 바이트 스트림이어야합니다.</target>
        </trans-unit>
        <trans-unit id="1c14be284346b2e05f05ffa004de1e194103d2d4" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://github.com/webpack/css-loader#css-scope&quot;&gt;local scoped CSS&lt;/a&gt; the module exports the generated identifiers (locals).</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;https://github.com/webpack/css-loader#css-scope&quot;&gt;지역 범위의 CSS를&lt;/a&gt; 모듈은 생성 된 식별자 (주민)을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="5e52b25343b4e7444f621c3662c930885bf482d3" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; and there are extracted chunks (from &lt;code&gt;ExtractTextPlugin.extract&lt;/code&gt;) in the commons chunk, &lt;code&gt;allChunks&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be set to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">사용하는 경우 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 (에서 덩어리를 거기 추출 &lt;code&gt;ExtractTextPlugin.extract&lt;/code&gt; 공유지 청크에서), &lt;code&gt;allChunks&lt;/code&gt; 는&lt;strong&gt;해야한다&lt;/strong&gt; 로 설정 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d584c7aa7efcdb09381d3f6b9d1482bbb06767a9" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;extends&lt;/code&gt; to extend a configuration which exists in a different package, care must be taken to ensure you don't hit module resolution issues if you are developing with these packages with symlinks (i.e. with &lt;code&gt;npm link&lt;/code&gt; or &lt;code&gt;yarn link&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; 을 사용하여 다른 패키지에 존재하는 구성을 확장 할 때 symlinks (예 : &lt;code&gt;npm link&lt;/code&gt; 또는 &lt;code&gt;yarn link&lt;/code&gt; )를 사용 하여 이러한 패키지로 개발하는 경우 모듈 해결 문제에 부딪치지 않도록주의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="85ff396bb8a6f029f875c76debb1c96c9fd2f559" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt;, setting &lt;code&gt;output.umdNamedDefine&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will name the AMD module of the UMD build. Otherwise an anonymous &lt;code&gt;define&lt;/code&gt; is used.</source>
          <target state="translated">When using &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; , setting &lt;code&gt;output.umdNamedDefine&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will name the AMD module of the UMD build. Otherwise an anonymous &lt;code&gt;define&lt;/code&gt; is used.</target>
        </trans-unit>
        <trans-unit id="42a1f70eb012f0ac279351ce1c8ae39dded51ef8" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt;, setting:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; , 설정 :</target>
        </trans-unit>
        <trans-unit id="b791644998ebff8bf847d14b66341e09936e4832" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;new URL('./path/to/asset', import.meta.url)&lt;/code&gt;, webpack creates an asset module too.</source>
          <target state="translated">When using &lt;code&gt;new URL('./path/to/asset', import.meta.url)&lt;/code&gt; , webpack creates an asset module too.</target>
        </trans-unit>
        <trans-unit id="51c78536d3347b009c05897af3dfb18a7bd275ce" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;web&lt;/code&gt; or &lt;code&gt;web-worker&lt;/code&gt; target, &lt;code&gt;publicPath&lt;/code&gt; defaults to &lt;code&gt;'auto'&lt;/code&gt; which will automatically determine the public path from either &lt;code&gt;import.meta.url&lt;/code&gt;, &lt;code&gt;document.currentScript&lt;/code&gt;, &lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt; or &lt;code&gt;self.location&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;web&lt;/code&gt; 또는 &lt;code&gt;web-worker&lt;/code&gt; 대상을 사용할 때 &lt;code&gt;publicPath&lt;/code&gt; 의 기본값은 &lt;code&gt;'auto'&lt;/code&gt; 이며 &lt;code&gt;import.meta.url&lt;/code&gt; , &lt;code&gt;document.currentScript&lt;/code&gt; , &lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;self.location&lt;/code&gt; 에서 공용 경로를 자동으로 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="d8509cf228c82b867eb33d3fca67143c84f437b4" translate="yes" xml:space="preserve">
          <source>When using &lt;em&gt;inline mode&lt;/em&gt; and you're proxying dev-server, the inline client script does not always know where to connect to. It will try to guess the URL of the server based on &lt;code&gt;window.location&lt;/code&gt;, but if that fails you'll need to use this.</source>
          <target state="translated">사용하는 경우 &lt;em&gt;인라인 모드를&lt;/em&gt; 하고 dev에 서버를 프록시하고, 인라인 클라이언트 스크립트는 항상 어디에 연결하는 방법을 알고하지 않습니다. &lt;code&gt;window.location&lt;/code&gt; 을 기반으로 서버의 URL을 추측하려고 시도 하지만 실패하면이 URL 을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="feb2c48af75182efc0c9ace4940a3eeb57cfbb8e" translate="yes" xml:space="preserve">
          <source>When using &lt;em&gt;inline mode&lt;/em&gt;, the console in your DevTools will show you messages e.g. before reloading, before an error or when &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; is enabled.</source>
          <target state="translated">When using &lt;em&gt;inline mode&lt;/em&gt;, the console in your DevTools will show you messages e.g. before reloading, before an error or when &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; is enabled.</target>
        </trans-unit>
        <trans-unit id="6a8fb2fcc0f83ebd6a8e17c48a53fa8fbfea74f0" translate="yes" xml:space="preserve">
          <source>When using &lt;em&gt;inline mode&lt;/em&gt;, the console in your DevTools will show you messages e.g. before reloading, before an error or when Hot Module Replacement is enabled. This may be too verbose.</source>
          <target state="translated">&lt;em&gt;인라인 모드를&lt;/em&gt; 사용하면 DevTools의 콘솔에 다시로드하기 전, 오류 전 또는 핫 모듈 교체가 활성화 된 경우 메시지가 표시됩니다. 너무 자세한 정보 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e77908eaf537ea00b0400a7f0669c1771a2c2d16" translate="yes" xml:space="preserve">
          <source>When using CommonJS you need to update dependencies manually by using &lt;code&gt;require()&lt;/code&gt; in the &lt;code&gt;callback&lt;/code&gt;. Omitting the &lt;code&gt;callback&lt;/code&gt; doesn't make sense here.</source>
          <target state="translated">CommonJS를 사용 &lt;code&gt;require()&lt;/code&gt; 경우 &lt;code&gt;callback&lt;/code&gt; 에서 require () 를 사용하여 종속성을 수동으로 업데이트해야합니다 . &lt;code&gt;callback&lt;/code&gt; 생략하는 것은 여기서 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2d1b2ed5e0a1638010c1de9b40f0ed9b77d94cd9" translate="yes" xml:space="preserve">
          <source>When using ESM &lt;code&gt;import&lt;/code&gt; all imported symbols from &lt;code&gt;dependencies&lt;/code&gt; are automatically updated. Note: The dependency string must match exactly with the &lt;code&gt;from&lt;/code&gt; string in the &lt;code&gt;import&lt;/code&gt;. In some cases &lt;code&gt;callback&lt;/code&gt; can even be omitted. Using &lt;code&gt;require()&lt;/code&gt; in the &lt;code&gt;callback&lt;/code&gt; doesn't make sense here.</source>
          <target state="translated">ESM &lt;code&gt;import&lt;/code&gt; 사용하면 &lt;code&gt;dependencies&lt;/code&gt; 에서 가져온 모든 심볼 이 자동으로 업데이트됩니다. 참고 : 종속성 문자열은 &lt;code&gt;import&lt;/code&gt; 의 &lt;code&gt;from&lt;/code&gt; 문자열 과 정확히 일치해야합니다 . 경우에 따라 &lt;code&gt;callback&lt;/code&gt; 을 생략 할 수도 있습니다. &lt;code&gt;callback&lt;/code&gt; 에서 &lt;code&gt;require()&lt;/code&gt; 를 사용 하는 것은 여기에서 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1fa046a03cd02035f2257c2025e95544e29659a3" translate="yes" xml:space="preserve">
          <source>When using Webpack Dev Server with the Node.js API, don't put the dev server options on the webpack config object. Instead, pass them as a second parameter upon creation. For example:</source>
          <target state="translated">Node.js API와 함께 Webpack Dev Server를 사용할 때 devpack 옵션을 webpack 구성 오브젝트에 두지 마십시오. 대신 생성시 두 번째 매개 변수로 전달하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75dd69d8e4ff37b7ed71c93b6d3ce5883bf9c4c5" translate="yes" xml:space="preserve">
          <source>When using Webpack Dev Server with the Node.js API, don't put the dev server options on the webpack configuration object. Instead, pass them as a second parameter upon creation. For example:</source>
          <target state="translated">When using Webpack Dev Server with the Node.js API, don't put the dev server options on the webpack configuration object. Instead, pass them as a second parameter upon creation. For example:</target>
        </trans-unit>
        <trans-unit id="6a766071a3193d76645f623381de365a55ccca2a" translate="yes" xml:space="preserve">
          <source>When using a configuration file that exports a &lt;code&gt;Function&lt;/code&gt;, users of &lt;code&gt;webpack-cli&lt;/code&gt; have become accustom to the function signature:</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 을 내보내는 구성 파일을 사용할 때 &lt;code&gt;webpack-cli&lt;/code&gt; 사용자 는 기능 서명에 익숙해졌습니다.</target>
        </trans-unit>
        <trans-unit id="310b24f99340893cb335c1ec87c6e0254c3bbfd0" translate="yes" xml:space="preserve">
          <source>When using a function, the same options are available camel-cased via the &lt;code&gt;info&lt;/code&gt; parameter:</source>
          <target state="translated">함수를 사용할 때 &lt;code&gt;info&lt;/code&gt; 매개 변수 를 통해 낙타의 경우와 동일한 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="919345ad6e389eced39029048b259a4cce500f9f" translate="yes" xml:space="preserve">
          <source>When using automatic compilation of your code, you could run into issues when saving your files. Some editors have a &quot;safe write&quot; feature that can potentially interfere with recompilation.</source>
          <target state="translated">코드 자동 컴파일을 사용하면 파일을 저장할 때 문제가 발생할 수 있습니다. 일부 편집자에게는 재 컴파일을 방해 할 수있는 &quot;안전한 쓰기&quot;기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3863f9978c0aa732f4c61cc2792a7f1e3151450e" translate="yes" xml:space="preserve">
          <source>When using dots in your path (common with Angular), you may need to use the &lt;code&gt;disableDotRule&lt;/code&gt;:</source>
          <target state="translated">경로에서 점을 사용할 때 (Angular와 공통) &lt;code&gt;disableDotRule&lt;/code&gt; 을 사용해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0eea2d0bc519971658ffa9706dc7a65f7b24df42" translate="yes" xml:space="preserve">
          <source>When using glob patterns, we convert them to regular expressions with &lt;a href=&quot;https://github.com/fitzgen/glob-to-regexp&quot;&gt;&lt;code&gt;glob-to-regexp&lt;/code&gt;&lt;/a&gt;, so make sure to get yourself familiar with it before you use glob patterns for &lt;code&gt;watchOptions.ignored&lt;/code&gt;.</source>
          <target state="translated">glob 패턴을 사용할 때 &lt;a href=&quot;https://github.com/fitzgen/glob-to-regexp&quot;&gt; &lt;code&gt;glob-to-regexp&lt;/code&gt; 를&lt;/a&gt; 사용하여 정규식으로 변환 하므로 &lt;code&gt;watchOptions.ignored&lt;/code&gt; 에 glob 패턴을 사용하기 전에 익숙해 져야 합니다.</target>
        </trans-unit>
        <trans-unit id="8761434d42f3a9b76e21d7ed21d75e64db995149" translate="yes" xml:space="preserve">
          <source>When using multiple compilations the following tools can help:</source>
          <target state="translated">여러 컴파일을 사용할 때 다음 도구가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cadaaea3e2fe70ca9d402f798b6d80b71df337c5" translate="yes" xml:space="preserve">
          <source>When using multiple compilations, the following tools can help:</source>
          <target state="translated">When using multiple compilations, the following tools can help:</target>
        </trans-unit>
        <trans-unit id="5c9f9461d94f164d19f38f901fe893ed8dd5d108" translate="yes" xml:space="preserve">
          <source>When using multiple conditions, all conditions must match.</source>
          <target state="translated">여러 조건을 사용하는 경우 모든 조건이 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c6742857305c123b8183a37b1172dc3b2fbc962" translate="yes" xml:space="preserve">
          <source>When using multiple plugins and loaders they use a common logging solution</source>
          <target state="translated">When using multiple plugins and loaders they use a common logging solution</target>
        </trans-unit>
        <trans-unit id="28d832ba7a2c1600182be2ad1031429a41cf868a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;#multicompiler&quot;&gt;&lt;code&gt;MultiCompiler&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;MultiStats&lt;/code&gt; instance is returned that fulfills the same interface as &lt;code&gt;stats&lt;/code&gt;, i.e. the methods described below.</source>
          <target state="translated">When using the &lt;a href=&quot;#multicompiler&quot;&gt; &lt;code&gt;MultiCompiler&lt;/code&gt; &lt;/a&gt;, a &lt;code&gt;MultiStats&lt;/code&gt; instance is returned that fulfills the same interface as &lt;code&gt;stats&lt;/code&gt; , i.e. the methods described below.</target>
        </trans-unit>
        <trans-unit id="dd0cc2f8465f531bd6706c4a0561dc824762abfc" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;&lt;code&gt;ExtractTextWebpackPlugin&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;[contenthash]&lt;/code&gt; to obtain a hash of the extracted file (neither &lt;code&gt;[hash]&lt;/code&gt; nor &lt;code&gt;[chunkhash]&lt;/code&gt; work).</source>
          <target state="translated">사용시 &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt; &lt;code&gt;ExtractTextWebpackPlugin&lt;/code&gt; 를&lt;/a&gt; 사용 &lt;code&gt;[contenthash]&lt;/code&gt; 는 추출 된 파일 (도 해시 얻었다 &lt;code&gt;[hash]&lt;/code&gt; 이나 &lt;code&gt;[chunkhash]&lt;/code&gt; 일).</target>
        </trans-unit>
        <trans-unit id="3dd7d530320299f4f43d3609170cb2858757ed73" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History&quot;&gt;HTML5 History API&lt;/a&gt;, the &lt;code&gt;index.html&lt;/code&gt; page will likely have to be served in place of any &lt;code&gt;404&lt;/code&gt; responses. Enable &lt;code&gt;devServer.historyApiFallback&lt;/code&gt; by setting it to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">When using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History&quot;&gt;HTML5 History API&lt;/a&gt;, the &lt;code&gt;index.html&lt;/code&gt; page will likely have to be served in place of any &lt;code&gt;404&lt;/code&gt; responses. Enable &lt;code&gt;devServer.historyApiFallback&lt;/code&gt; by setting it to &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="87f281f1720ce6c08dcd03d5e9cd497de40e5c97" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History&quot;&gt;HTML5 History API&lt;/a&gt;, the &lt;code&gt;index.html&lt;/code&gt; page will likely have to be served in place of any &lt;code&gt;404&lt;/code&gt; responses. Enable this by passing:</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History&quot;&gt;HTML5 역사 API를&lt;/a&gt; 의 &lt;code&gt;index.html&lt;/code&gt; 페이지 가능성이있는 대신에 제공되어야 할 것이다 &lt;code&gt;404&lt;/code&gt; 응답. 다음을 전달하여 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="276c7019670e4d400db3de358930e2316c327086" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;plugins/compiler#multicompiler&quot;&gt;&lt;code&gt;MultiCompiler&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;MultiStats&lt;/code&gt; instance is returned that fulfills the same interface as &lt;code&gt;stats&lt;/code&gt;, i.e. the methods described below.</source>
          <target state="translated">&lt;a href=&quot;plugins/compiler#multicompiler&quot;&gt; &lt;code&gt;MultiCompiler&lt;/code&gt; 를&lt;/a&gt; 사용할 때 &lt;code&gt;stats&lt;/code&gt; 와 동일한 인터페이스 , 즉 아래 설명 된 방법 을 충족 하는 &lt;code&gt;MultiStats&lt;/code&gt; 인스턴스가 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="1c7fbdbf018a042f288bca0480aac1a0dd935def" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;script-loader&lt;/code&gt;, the module is added as a string to the bundle. It is not minimized by &lt;code&gt;webpack&lt;/code&gt;, so use a minimized version. There is also no &lt;code&gt;devtool&lt;/code&gt; support for libraries added by this loader.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;script-loader&lt;/code&gt; , 모듈은 번들에 문자열로 추가됩니다. &lt;code&gt;webpack&lt;/code&gt; 으로 최소화되지 않았으므로 최소화 된 버전을 사용하십시오. 이 로더에 의해 추가 된 라이브러리에 대한 &lt;code&gt;devtool&lt;/code&gt; 지원 도 없습니다 .</target>
        </trans-unit>
        <trans-unit id="35bcd6894584cf84c4bbd4553695b7e117ff914a" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;uglifyjs-webpack-plugin&lt;/code&gt; you must provide the &lt;code&gt;sourceMap: true&lt;/code&gt; option to enable SourceMap support.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;uglifyjs-webpack-plugin&lt;/code&gt; 사용자가 제공해야 &lt;code&gt;sourceMap: true&lt;/code&gt; SourceMap 지원을 활성화하는 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="97233d852aa30f2553ea2f85b6692bafe80493d6" translate="yes" xml:space="preserve">
          <source>When using the JetBrains WebStorm IDE, you may find that saving changed files does not trigger the watcher as you might expect. Try disabling the &lt;code&gt;safe write&lt;/code&gt; option in the settings, which determines whether files are saved to a temporary location first before the originals are overwritten: uncheck &lt;code&gt;File &amp;gt; Settings... &amp;gt; System Settings &amp;gt; Use &quot;safe write&quot; (save changes to a temporary file first)&lt;/code&gt;.</source>
          <target state="translated">JetBrains WebStorm IDE를 사용할 때 변경된 파일을 저장해도 감시자가 트리거되지 않을 수 있습니다. 원본을 덮어 쓰기 전에 파일을 임시 위치에 저장할지 여부를 결정하는 설정에서 &lt;code&gt;safe write&lt;/code&gt; 옵션을 비활성화하십시오 . &lt;code&gt;File &amp;gt; Settings... &amp;gt; System Settings &amp;gt; Use &quot;safe write&quot; (save changes to a temporary file first)&lt;/code&gt; 선택 취소 하십시오 (임시 파일에 변경 사항 저장). 먼저) .</target>
        </trans-unit>
        <trans-unit id="668f7ac5b4f6f4e4a0c85535f50e5374e88818de" translate="yes" xml:space="preserve">
          <source>When using the JetBrains WebStorm IDE, you may find that saving changed files does not trigger the watcher as you might expect. Try disabling the &lt;code&gt;safe write&lt;/code&gt; option in the settings, which determines whether files are saved to a temporary location first before the originals are overwritten: uncheck &lt;code&gt;File &amp;gt; {Settings|Preferences} &amp;gt; Appearance &amp;amp; Behavior &amp;gt; System Settings &amp;gt; Use &quot;safe write&quot; (save changes to a temporary file first)&lt;/code&gt;.</source>
          <target state="translated">When using the JetBrains WebStorm IDE, you may find that saving changed files does not trigger the watcher as you might expect. Try disabling the &lt;code&gt;safe write&lt;/code&gt; option in the settings, which determines whether files are saved to a temporary location first before the originals are overwritten: uncheck &lt;code&gt;File &amp;gt; {Settings|Preferences} &amp;gt; Appearance &amp;amp; Behavior &amp;gt; System Settings &amp;gt; Use &quot;safe write&quot; (save changes to a temporary file first)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56b52754e7ad80111717977869ce23013cb7a6ec" translate="yes" xml:space="preserve">
          <source>When using the Node API, you can also pass plugins via the &lt;code&gt;plugins&lt;/code&gt; property in the configuration.</source>
          <target state="translated">Node API를 사용하는 경우 구성 의 &lt;code&gt;plugins&lt;/code&gt; 특성을 통해 플러그인을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdfe4d1930f53e0d9cfa9c220feace784474da21" translate="yes" xml:space="preserve">
          <source>When using the loader via a &lt;code&gt;require&lt;/code&gt; query string you may specify one of two types; a loader name, or a function index.</source>
          <target state="translated">요청 쿼리 문자열을 통해 로더를 사용하는 &lt;code&gt;require&lt;/code&gt; 두 가지 유형 중 하나를 지정할 수 있습니다. 로더 이름 또는 함수 색인.</target>
        </trans-unit>
        <trans-unit id="940f3692a1aba6172aebb45bdd64f262ecc72309" translate="yes" xml:space="preserve">
          <source>When using the old assets loaders (i.e. &lt;code&gt;file-loader&lt;/code&gt;/&lt;code&gt;url-loader&lt;/code&gt;/&lt;code&gt;raw-loader&lt;/code&gt;) along with Asset Module in webpack 5, you might want to stop Asset Module from processing your assets again as that would result in asset duplication. This can be done by setting asset's module type to &lt;code&gt;'javascript/auto'&lt;/code&gt;.</source>
          <target state="translated">When using the old assets loaders (i.e. &lt;code&gt;file-loader&lt;/code&gt; / &lt;code&gt;url-loader&lt;/code&gt; / &lt;code&gt;raw-loader&lt;/code&gt; ) along with Asset Module in webpack 5, you might want to stop Asset Module from processing your assets again as that would result in asset duplication. This can be done by setting asset's module type to &lt;code&gt;'javascript/auto'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ae702c3304830e5429bd20f4a649b33c4fb04db" translate="yes" xml:space="preserve">
          <source>When using the webpack CLI, the &lt;code&gt;--display-optimization-bailout&lt;/code&gt; flag will display bailout reasons. When using the webpack config, just add the following to the &lt;code&gt;stats&lt;/code&gt; object:</source>
          <target state="translated">웹팩 CLI를 사용할 때 &lt;code&gt;--display-optimization-bailout&lt;/code&gt; 플래그는 구제 이유를 표시합니다. webpack 설정을 사용할 때 &lt;code&gt;stats&lt;/code&gt; 객체에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="004d9ee41f05aa17b7744c631ce51c54f3d420a9" translate="yes" xml:space="preserve">
          <source>When using this option, an empty &lt;code&gt;output.library&lt;/code&gt; will result in a broken output bundle.</source>
          <target state="translated">이 옵션을 사용하면 비어있는 &lt;code&gt;output.library&lt;/code&gt; 가 출력 번들을 손상시킵니다.</target>
        </trans-unit>
        <trans-unit id="e896d01d12e1e189dc9114001aad48b3c763a86e" translate="yes" xml:space="preserve">
          <source>When using this option, an empty &lt;code&gt;output.library&lt;/code&gt; will result in no assignment.</source>
          <target state="translated">이 옵션을 사용하면 비어있는 &lt;code&gt;output.library&lt;/code&gt; 가 할당되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="db9f8cc21f6fd8bc5f78e4c898c05511d76c2ca3" translate="yes" xml:space="preserve">
          <source>When using with transpiling loaders (like &lt;code&gt;babel-loader&lt;/code&gt;), make sure they are in correct order (bottom to top). Otherwise files will be checked after being processed by &lt;code&gt;babel-loader&lt;/code&gt;</source>
          <target state="translated">트랜스 필링 로더 (예 : &lt;code&gt;babel-loader&lt;/code&gt; ) 와 함께 사용하는 경우 올바른 순서 (아래에서 위)인지 확인하십시오. 그렇지 않으면 &lt;code&gt;babel-loader&lt;/code&gt; 에서 처리 한 후 파일을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eff84f251e4f2836c562117fadfa335d58563df8" translate="yes" xml:space="preserve">
          <source>When we &lt;code&gt;import * as Upstream from 'upstream'&lt;/code&gt; this will actually resolve to the file in the &lt;code&gt;browser&lt;/code&gt; property. The &lt;code&gt;browser&lt;/code&gt; property takes precedence because it's the first item in &lt;code&gt;mainFields&lt;/code&gt;. Meanwhile, a Node.js application bundled by webpack will first try to resolve using the file in the &lt;code&gt;module&lt;/code&gt; field.</source>
          <target state="translated">When we &lt;code&gt;import * as Upstream from 'upstream'&lt;/code&gt; this will actually resolve to the file in the &lt;code&gt;browser&lt;/code&gt; property. The &lt;code&gt;browser&lt;/code&gt; property takes precedence because it's the first item in &lt;code&gt;mainFields&lt;/code&gt; . Meanwhile, a Node.js application bundled by webpack will first try to resolve using the file in the &lt;code&gt;module&lt;/code&gt; field.</target>
        </trans-unit>
        <trans-unit id="44264ff8810f39437b3ac96c0de9a14c153fd7ee" translate="yes" xml:space="preserve">
          <source>When webpack bundles your source code, it can become difficult to track down errors and warnings to their original location. For example, if you bundle three source files (&lt;code&gt;a.js&lt;/code&gt;, &lt;code&gt;b.js&lt;/code&gt;, and &lt;code&gt;c.js&lt;/code&gt;) into one bundle (&lt;code&gt;bundle.js&lt;/code&gt;) and one of the source files contains an error, the stack trace will simply point to &lt;code&gt;bundle.js&lt;/code&gt;. This isn't always helpful as you probably want to know exactly which source file the error came from.</source>
          <target state="translated">웹팩이 소스 코드를 번들로 제공하면 오류 및 경고를 원래 위치로 추적하기가 어려워 질 수 있습니다. 예를 들어, 3 개의 소스 파일 ( &lt;code&gt;a.js&lt;/code&gt; , &lt;code&gt;b.js&lt;/code&gt; 및 &lt;code&gt;c.js&lt;/code&gt; )을 하나의 번들 ( &lt;code&gt;bundle.js&lt;/code&gt; )로 묶고 소스 파일 중 하나에 오류가있는 경우 스택 추적은 단순히 &lt;code&gt;bundle.js&lt;/code&gt; 가리 킵니다 . JS . 오류가 발생한 소스 파일을 정확히 알고 싶을 때 항상 도움이되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f46f5ae2930894ac4decd988b473259db99c97b8" translate="yes" xml:space="preserve">
          <source>When webpack processes your application, it starts from a list of modules defined on the command line or in its config file. Starting from these &lt;em&gt;entry points&lt;/em&gt;, webpack recursively builds a &lt;em&gt;dependency graph&lt;/em&gt; that includes every module your application needs, then packages all of those modules into a small number of &lt;em&gt;bundles&lt;/em&gt; - often, just one - to be loaded by the browser.</source>
          <target state="translated">webpack이 응용 프로그램을 처리 할 때 명령 줄이나 구성 파일에 정의 된 모듈 목록에서 시작합니다. 이러한 &lt;em&gt;진입 점&lt;/em&gt; 에서 시작하여 webpack은 애플리케이션에 필요한 모든 모듈을 포함 하는 &lt;em&gt;종속성 그래프&lt;/em&gt; 를 재귀 적으로 빌드 한 다음 해당 모듈을 모두 소수의 &lt;em&gt;번들 (&lt;/em&gt; 일반적으로 하나의 브라우저)로로드하여 브라우저에서로드합니다.</target>
        </trans-unit>
        <trans-unit id="f1f5e5e7ad911ed9a34b279b4f8418149fcf4b3a" translate="yes" xml:space="preserve">
          <source>When webpack processes your application, it starts from a list of modules defined on the command line or in its configuration file. Starting from these &lt;a href=&quot;entry-points&quot;&gt;&lt;em&gt;entry points&lt;/em&gt;&lt;/a&gt;, webpack recursively builds a &lt;em&gt;dependency graph&lt;/em&gt; that includes every module your application needs, then bundles all of those modules into a small number of &lt;em&gt;bundles&lt;/em&gt; - often, just one - to be loaded by the browser.</source>
          <target state="translated">When webpack processes your application, it starts from a list of modules defined on the command line or in its configuration file. Starting from these &lt;a href=&quot;entry-points&quot;&gt;&lt;em&gt;entry points&lt;/em&gt;&lt;/a&gt;, webpack recursively builds a &lt;em&gt;dependency graph&lt;/em&gt; that includes every module your application needs, then bundles all of those modules into a small number of &lt;em&gt;bundles&lt;/em&gt; - often, just one - to be loaded by the browser.</target>
        </trans-unit>
        <trans-unit id="aef11ccc66d1ab692a1827836ba47687bb99f74f" translate="yes" xml:space="preserve">
          <source>When you exclude &lt;code&gt;node_modules&lt;/code&gt; from being run through the babel-loader, babel-minify optimizations are not applied to the excluded files as it doesn't pass through the minifier.</source>
          <target state="translated">babel-loader를 통해 &lt;code&gt;node_modules&lt;/code&gt; 가 실행되지 않도록 제외 하면 babel- minify 최적화는 제외자를 통과하지 않으므로 제외 된 파일에 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a86d44e112b7fb2b0b9608c5224ac55fdb54bb6" translate="yes" xml:space="preserve">
          <source>When you have pure CSS (without CSS modules), CSS modules and PostCSS in your project you can use this setup:</source>
          <target state="translated">When you have pure CSS (without CSS modules), CSS modules and PostCSS in your project you can use this setup:</target>
        </trans-unit>
        <trans-unit id="a7ddbe37af4e8529934dbc374d5393577cf53904" translate="yes" xml:space="preserve">
          <source>When you open &lt;code&gt;index.html&lt;/code&gt; and look at your console in your developer tools, you should be able to see your imported data being logged to the console!</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; 을 열고 개발자 도구에서 콘솔을 보면 가져온 데이터가 콘솔에 기록되는 것을 볼 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="f46663d990dfa702b8fa81974dab2190809ce73e" translate="yes" xml:space="preserve">
          <source>When you use the babel-loader with webpack, the code generated by webpack for the module system doesn't go through the loader and is not optimized by babel-minify.</source>
          <target state="translated">webpack과 함께 babel-loader를 사용하면 모듈 시스템을 위해 webpack에 의해 생성 된 코드는 로더를 거치지 않으며 babel-minify에 의해 최적화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d64af11708aba4c416ae2acd8bfbd9778ad5c37a" translate="yes" xml:space="preserve">
          <source>When your library is loaded, the &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to a variable:</source>
          <target state="translated">라이브러리가로드되면 &lt;strong&gt;진입 점&lt;/strong&gt; 의 &lt;strong&gt;반환 값이&lt;/strong&gt; 변수에 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="080e8f4a6d7029364d0c1220731365b8161ca200" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;code&gt;identifier&lt;/code&gt; is encountered as free variable in a module, the &lt;code&gt;module&lt;/code&gt; is loaded automatically and the &lt;code&gt;identifier&lt;/code&gt; is filled with the exports of the loaded &lt;code&gt;module&lt;/code&gt; (of &lt;code&gt;property&lt;/code&gt; in order to support named exports).</source>
          <target state="translated">&lt;code&gt;identifier&lt;/code&gt; 가 모듈에서 자유 변수로 발견 될 때마다 &lt;code&gt;module&lt;/code&gt; 이 자동으로 로드되고로드 된 &lt;code&gt;module&lt;/code&gt; 의 내보내기 ( 이름 지정된 내보내기를 지원하기 위해 &lt;code&gt;property&lt;/code&gt; 로 &lt;code&gt;identifier&lt;/code&gt; 가 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="66cc237bbe90adfcb6ec0143b377aa45dc6603de" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;code&gt;identifier&lt;/code&gt; is encountered as free variable in a module, the &lt;code&gt;module&lt;/code&gt; is loaded automatically and the &lt;code&gt;identifier&lt;/code&gt; is filled with the exports of the loaded &lt;code&gt;module&lt;/code&gt; (or &lt;code&gt;property&lt;/code&gt; in order to support named exports).</source>
          <target state="translated">Whenever the &lt;code&gt;identifier&lt;/code&gt; is encountered as free variable in a module, the &lt;code&gt;module&lt;/code&gt; is loaded automatically and the &lt;code&gt;identifier&lt;/code&gt; is filled with the exports of the loaded &lt;code&gt;module&lt;/code&gt; (or &lt;code&gt;property&lt;/code&gt; in order to support named exports).</target>
        </trans-unit>
        <trans-unit id="cc25856f57e27ee7b1d7d3124aa6b4a5336189b8" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;[type]&lt;/code&gt; is one of the three resolvers mention above, specified as:</source>
          <target state="translated">여기서 &lt;code&gt;[type]&lt;/code&gt; 은 위에서 언급 한 세 가지 확인자 중 하나이며 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a2495dd2f51b47df27fde957ba586843fb02bb5a" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;[type]&lt;/code&gt; is one of the three resolvers mentioned above.</source>
          <target state="translated">Where &lt;code&gt;[type]&lt;/code&gt; is one of the three resolvers mentioned above.</target>
        </trans-unit>
        <trans-unit id="da85b9f708a95b8a3eb295e5021aa34cfaa5dac2" translate="yes" xml:space="preserve">
          <source>Where the &lt;code&gt;statement.type&lt;/code&gt; could be:</source>
          <target state="translated">Where the &lt;code&gt;statement.type&lt;/code&gt; could be:</target>
        </trans-unit>
        <trans-unit id="025d15735b5989b451728608b194b798a897f35c" translate="yes" xml:space="preserve">
          <source>Where the expressions types are:</source>
          <target state="translated">Where the expressions types are:</target>
        </trans-unit>
        <trans-unit id="79ebb1900c58b27bcf1a37c17fdac56e056052ad" translate="yes" xml:space="preserve">
          <source>Whether comments shall be extracted to a separate file, (see &lt;a href=&quot;https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a&quot;&gt;details&lt;/a&gt; (&lt;code&gt;webpack &amp;gt;= 2.3.0&lt;/code&gt;)</source>
          <target state="translated">주석을 별도의 파일로 추출할지 여부 ( &lt;a href=&quot;https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a&quot;&gt;세부 사항 참조&lt;/a&gt; ( &lt;code&gt;webpack &amp;gt;= 2.3.0&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="203a35ccffd8ac25f845fb1d624ed57b1f9e0ac8" translate="yes" xml:space="preserve">
          <source>Whether comments shall be extracted to a separate file, (see &lt;a href=&quot;https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a&quot;&gt;details&lt;/a&gt;). By default extract only comments using &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; regexp condition and remove remaining comments. If the original file is named &lt;code&gt;foo.js&lt;/code&gt;, then the comments will be stored to &lt;code&gt;foo.js.LICENSE&lt;/code&gt;. The &lt;code&gt;terserOptions.output.comments&lt;/code&gt; option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.</source>
          <target state="translated">주석을 별도의 파일로 추출할지 여부 ( &lt;a href=&quot;https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a&quot;&gt;세부 사항 참조&lt;/a&gt; ). 기본적으로 &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; regexp 조건을 사용하여 주석 만 추출 하고 나머지 주석을 제거하십시오. 원본 파일의 이름이 &lt;code&gt;foo.js&lt;/code&gt; 이면 주석은 &lt;code&gt;foo.js.LICENSE&lt;/code&gt; 에 저장됩니다 . &lt;code&gt;terserOptions.output.comments&lt;/code&gt; 의 다른 사람을 추출 또는 추출 된 의견을 유지하면서 주석을 보존할지 여부 옵션을 지정합니다 (예 : 주석)은 몇 가지 의견을 보존 할 수 있습니다 즉.</target>
        </trans-unit>
        <trans-unit id="22cbc30084749308bf445b5c8a8f8a4dfe3d9f67" translate="yes" xml:space="preserve">
          <source>Whether comments shall be extracted to a separate file, (see &lt;a href=&quot;https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a&quot;&gt;details&lt;/a&gt;). By default extract only comments using &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt; regexp condition and remove remaining comments. If the original file is named &lt;code&gt;foo.js&lt;/code&gt;, then the comments will be stored to &lt;code&gt;foo.js.LICENSE.txt&lt;/code&gt;. The &lt;code&gt;terserOptions.format.comments&lt;/code&gt; option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.</source>
          <target state="translated">Whether comments shall be extracted to a separate file, (see &lt;a href=&quot;https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a&quot;&gt;details&lt;/a&gt;). By default extract only comments using &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt; regexp condition and remove remaining comments. If the original file is named &lt;code&gt;foo.js&lt;/code&gt; , then the comments will be stored to &lt;code&gt;foo.js.LICENSE.txt&lt;/code&gt; . The &lt;code&gt;terserOptions.format.comments&lt;/code&gt; option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.</target>
        </trans-unit>
        <trans-unit id="e9b17f79f6e341bfd915b100e6b6f6a8cf3abdcb" translate="yes" xml:space="preserve">
          <source>Whether to delete the original assets or not</source>
          <target state="translated">원본 자산을 삭제할지 여부</target>
        </trans-unit>
        <trans-unit id="d09427c92faee40557e5ea402d0dd04742f438db" translate="yes" xml:space="preserve">
          <source>Whether to delete the original assets or not.</source>
          <target state="translated">Whether to delete the original assets or not.</target>
        </trans-unit>
        <trans-unit id="40e41ac9d28aeb3dfb199e893fd052686b782a72" translate="yes" xml:space="preserve">
          <source>Whether to require to use an extension for modules (e.g. loaders). Default:</source>
          <target state="translated">모듈 (예 : 로더)에 확장을 사용해야하는지 여부입니다. 기본:</target>
        </trans-unit>
        <trans-unit id="899c5644850b9f680a11930564518fdc917caefd" translate="yes" xml:space="preserve">
          <source>Whether to resolve symlinks to their symlinked location.</source>
          <target state="translated">심볼릭 링크를 해당 심볼릭 링크 위치로 해결할지 여부</target>
        </trans-unit>
        <trans-unit id="3b4338e887cfaa68d8c8a1807d729bc1b02c66a4" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;code&gt;--save-dev&lt;/code&gt; or not depends on your use cases. Say you're using webpack only for bundling, then it's suggested that you install it with &lt;code&gt;--save-dev&lt;/code&gt; option since you're not going to include webpack in your production build. Otherwise you can ignore &lt;code&gt;--save-dev&lt;/code&gt;.</source>
          <target state="translated">Whether to use &lt;code&gt;--save-dev&lt;/code&gt; or not depends on your use cases. Say you're using webpack only for bundling, then it's suggested that you install it with &lt;code&gt;--save-dev&lt;/code&gt; option since you're not going to include webpack in your production build. Otherwise you can ignore &lt;code&gt;--save-dev&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acb77c7ff920751a5556066d72033f877d131b9c" translate="yes" xml:space="preserve">
          <source>While loaders are used to transform certain types of modules, plugins can be leveraged to perform a wider range of tasks like bundle optimization, asset management and injection of environment variables.</source>
          <target state="translated">로더는 특정 유형의 모듈을 변환하는 데 사용되지만 플러그인은 번들 최적화, 자산 관리 및 환경 변수 주입과 같은 광범위한 작업을 수행하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7463f4dddeb6f0e9da8e1c089bc6656e4667d6e" translate="yes" xml:space="preserve">
          <source>While merging chunks, webpack will try to identify those that have duplicate modules and merge them first. Nothing will be merged into the entry chunk, so as not to impact initial page loading time. Here's a small example:</source>
          <target state="translated">청크를 병합하는 동안 웹팩은 중복 모듈이있는 것을 식별하고 먼저 병합합니다. 초기 페이지로드 시간에 영향을 미치지 않도록 항목 청크에 아무것도 병합되지 않습니다. 다음은 작은 예입니다.</target>
        </trans-unit>
        <trans-unit id="9f260e047f557f0cc285e7fb1ad3a397bfc9d1d3" translate="yes" xml:space="preserve">
          <source>While most users can get away with just using the CLI along with a configuration file, more fine-grained control of the compilation can be achieved via the Node interface. This includes passing multiple configurations, programmatically running or watching, and collecting stats.</source>
          <target state="translated">대부분의 사용자는 구성 파일과 함께 CLI를 사용하여 벗어날 수 있지만 노드 인터페이스를 통해보다 세밀한 컴파일 제어를 수행 할 수 있습니다. 여기에는 여러 구성 전달, 프로그래밍 방식으로 실행 또는 관찰 및 통계 수집이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="eb8a8d39b32b4b4df146c54e20ad76ec1793f7cf" translate="yes" xml:space="preserve">
          <source>While setting &lt;code&gt;cache.type&lt;/code&gt; to &lt;code&gt;filesystem&lt;/code&gt; opens up more options for configuration.</source>
          <target state="translated">While setting &lt;code&gt;cache.type&lt;/code&gt; to &lt;code&gt;filesystem&lt;/code&gt; opens up more options for configuration.</target>
        </trans-unit>
        <trans-unit id="04cb1a6c7bc5326490f0b84415043d1e8449443e" translate="yes" xml:space="preserve">
          <source>While the data this comments can provide is useful during development when reading the generated code, it &lt;strong&gt;should not&lt;/strong&gt; be used in production.</source>
          <target state="translated">이 주석이 제공 할 수있는 데이터는 생성 된 코드를 읽을 때 개발 중에 유용하지만 프로덕션에서 사용 &lt;strong&gt;해서는 안됩니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="618a6129c7273b47da7b88dc7f09c407247264e4" translate="yes" xml:space="preserve">
          <source>While the data this comments can provide is very useful during development when reading the generated code, it &lt;strong&gt;should not&lt;/strong&gt; be used in production.</source>
          <target state="translated">이 주석이 제공 할 수있는 데이터는 개발 중에 생성 된 코드를 읽을 때 매우 유용하지만 프로덕션에서는 사용 &lt;strong&gt;하지 않아야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="394aa1bfc8d586082549d37618366c424d0e5ade" translate="yes" xml:space="preserve">
          <source>While these short hand methods are nice, we usually recommend just using the configuration as it's better to understand exactly what is being done for you in both cases. The configuration also gives you more control on fine tuning other options within both plugins.</source>
          <target state="translated">이 짧은 방법은 훌륭하지만 일반적으로 구성을 사용하는 것이 좋습니다. 두 경우 모두 수행되는 작업을 정확하게 이해하는 것이 좋습니다. 구성은 또한 두 플러그인 내에서 다른 옵션의 미세 조정에 대한 제어를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1864616d2eb18697fac0b9e891f8136a9009b937" translate="yes" xml:space="preserve">
          <source>While these shorthand methods are nice, we usually recommend just using the configuration as it's better to understand exactly what is being done for you in both cases. The configuration also gives you more control on fine-tuning other options within both plugins.</source>
          <target state="translated">While these shorthand methods are nice, we usually recommend just using the configuration as it's better to understand exactly what is being done for you in both cases. The configuration also gives you more control on fine-tuning other options within both plugins.</target>
        </trans-unit>
        <trans-unit id="43ec596bf2de4eba847364792bb3e1baa3047308" translate="yes" xml:space="preserve">
          <source>While these shorthand methods are useful, we recommend setting these options in a webpack configuration file for more configurability.</source>
          <target state="translated">이러한 약식 방법이 유용하지만 더 많은 구성을 위해 웹팩 구성 파일에서 이러한 옵션을 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="220c801a72c608bf89df64387e02e35dd12b5cc0" translate="yes" xml:space="preserve">
          <source>While they are technically feasible, &lt;strong&gt;the following practices should be avoided&lt;/strong&gt;:</source>
          <target state="translated">기술적으로 실현 가능하지만 &lt;strong&gt;다음과 같은 관행을 피해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3bc43142ff2adf0fed05e4f93e2b864229f2c73b" translate="yes" xml:space="preserve">
          <source>While we will separate the &lt;em&gt;production&lt;/em&gt; and &lt;em&gt;development&lt;/em&gt; specific bits out, note that we'll still maintain a &quot;common&quot; configuration to keep things DRY. In order to merge these configurations together, we'll use a utility called &lt;a href=&quot;https://github.com/survivejs/webpack-merge&quot;&gt;&lt;code&gt;webpack-merge&lt;/code&gt;&lt;/a&gt;. With the &quot;common&quot; configuration in place, we won't have to duplicate code within the environment-specific configurations.</source>
          <target state="translated">&lt;em&gt;프로덕션&lt;/em&gt; 및 &lt;em&gt;개발&lt;/em&gt; 관련 비트를 분리하지만 DRY를 유지하기 위해 여전히 &quot;공통&quot;구성을 유지합니다. 이러한 구성을 병합하기 위해 &lt;a href=&quot;https://github.com/survivejs/webpack-merge&quot;&gt; &lt;code&gt;webpack-merge&lt;/code&gt; &lt;/a&gt; 라는 유틸리티를 사용합니다 . &quot;공통&quot;구성을 사용하면 환경 별 구성 내에서 코드를 복제 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="33e5ea407a7fb8346158cdb3db478357d3de7403" translate="yes" xml:space="preserve">
          <source>While webpack 5 is likely to come with a CSS minimizer built-in, with webpack 4 you need to bring your own. To minify the output, use a plugin like &lt;a href=&quot;https://github.com/NMFR/optimize-css-assets-webpack-plugin&quot;&gt;optimize-css-assets-webpack-plugin&lt;/a&gt;. Setting &lt;code&gt;optimization.minimizer&lt;/code&gt; overrides the defaults provided by webpack, so make sure to also specify a JS minimizer:</source>
          <target state="translated">webpack 5에는 CSS 최소화 기능이 내장되어 있지만 webpack 4를 사용하면 직접 가져와야합니다. 출력을 &lt;a href=&quot;https://github.com/NMFR/optimize-css-assets-webpack-plugin&quot;&gt;최소화&lt;/a&gt; 하려면 optimize-css-assets-webpack-plugin 과 같은 플러그인을 사용하십시오 . &lt;code&gt;optimization.minimizer&lt;/code&gt; 를 설정하면 웹팩에서 제공 한 기본값이 대체되므로 JS 최소화기를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0abdbc5f3d438f746affce8cd61422c1ecbfafc8" translate="yes" xml:space="preserve">
          <source>While webpack supports multiple module syntaxes, we recommend following a single syntax for consistency and to avoid odd behaviors/bugs. Actually webpack would enforce the recommendation for &lt;code&gt;.mjs&lt;/code&gt; files, &lt;code&gt;.cjs&lt;/code&gt; files or &lt;code&gt;.js&lt;/code&gt; files when their nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field with a value of either &lt;code&gt;&quot;module&quot;&lt;/code&gt; or &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt;. Please pay attention to these enforcements before you read on:</source>
          <target state="translated">While webpack supports multiple module syntaxes, we recommend following a single syntax for consistency and to avoid odd behaviors/bugs. Actually webpack would enforce the recommendation for &lt;code&gt;.mjs&lt;/code&gt; files, &lt;code&gt;.cjs&lt;/code&gt; files or &lt;code&gt;.js&lt;/code&gt; files when their nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field with a value of either &lt;code&gt;&quot;module&quot;&lt;/code&gt; or &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; . Please pay attention to these enforcements before you read on:</target>
        </trans-unit>
        <trans-unit id="d1aa8b232efdd93b632345393245511271349dab" translate="yes" xml:space="preserve">
          <source>While webpack supports multiple module syntaxes, we recommend following a single syntax for consistency and to avoid odd behaviors/bugs. Here's &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/552&quot;&gt;one example&lt;/a&gt; of mixing ES6 and CommonJS, however there are surely others.</source>
          <target state="translated">웹팩은 여러 모듈 구문을 지원하지만 일관성을 유지하고 이상한 동작 / 버그를 피하려면 단일 구문을 따르는 것이 좋습니다. 다음은 ES6와 CommonJS를 혼합하는 &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/552&quot;&gt;한 가지 예&lt;/a&gt; 입니다. 그러나 분명히 다른 것이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5df3c6cc5749a0c1eff1d8bcf469fba2b74ad1ae" translate="yes" xml:space="preserve">
          <source>While writing your code, you may have already added many code split points to load stuff on demand. After compiling you might notice that some chunks are too small - creating larger HTTP overhead. &lt;code&gt;LimitChunkCountPlugin&lt;/code&gt; can post-process your chunks by merging them.</source>
          <target state="translated">While writing your code, you may have already added many code split points to load stuff on demand. After compiling you might notice that some chunks are too small - creating larger HTTP overhead. &lt;code&gt;LimitChunkCountPlugin&lt;/code&gt; can post-process your chunks by merging them.</target>
        </trans-unit>
        <trans-unit id="2b59ea3340e8a9f13a9b795729f77e661ab41f51" translate="yes" xml:space="preserve">
          <source>While writing your code, you may have already added many code split points to load stuff on demand. After compiling you might notice that some chunks are too small - creating larger HTTP overhead. Luckily, this plugin can post-process your chunks by merging them.</source>
          <target state="translated">코드를 작성하는 동안 필요에 따라 물건을로드하기 위해 많은 코드 분할 지점을 이미 추가했을 수 있습니다. 컴파일 후 일부 청크가 너무 작아서 HTTP 오버 헤드가 커질 수 있습니다. 운 좋게도이 플러그인은 청크를 병합하여 사후 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="107934a85fcddccb3d3830ce581ed05d88b01287" translate="yes" xml:space="preserve">
          <source>Who are the potential users and what user experience will look like for the users of your scaffold?</source>
          <target state="translated">Who are the potential users and what user experience will look like for the users of your scaffold?</target>
        </trans-unit>
        <trans-unit id="21e2caea4476d26af34541ca7c909c7ff2fa4a7f" translate="yes" xml:space="preserve">
          <source>Why</source>
          <target state="translated">Why</target>
        </trans-unit>
        <trans-unit id="7e6e7b83b33f331d16b3c89d2a359fd7618264c9" translate="yes" xml:space="preserve">
          <source>Why webpack</source>
          <target state="translated">Why webpack</target>
        </trans-unit>
        <trans-unit id="01bb3cc1876bfa59c8d1a9e7c71fc42eb2e30d27" translate="yes" xml:space="preserve">
          <source>Why:</source>
          <target state="translated">Why:</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="a4d2ea27a8635200b6f39eba6a16b15a0ac53bc1" translate="yes" xml:space="preserve">
          <source>Why? Because CSS support only these source map types.</source>
          <target state="translated">Why? Because CSS support only these source map types.</target>
        </trans-unit>
        <trans-unit id="03b20fd03d203ff3d8ec612738af75dfbd528616" translate="yes" xml:space="preserve">
          <source>Will always be provided, even if not used.</source>
          <target state="translated">Will always be provided, even if not used.</target>
        </trans-unit>
        <trans-unit id="570713d44c86dc013d3a88b02835fec8bea96fbb" translate="yes" xml:space="preserve">
          <source>Will always return errors, if set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Will always return errors, if set to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="747a96d8c9d1b42144b39692edabd98222ac4a16" translate="yes" xml:space="preserve">
          <source>Will always return warnings, if set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Will always return warnings, if set to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e3c113ea9160076617fab956352994c05ce3f4" translate="yes" xml:space="preserve">
          <source>Will cause an error. webpack does not support universal target for now.</source>
          <target state="translated">Will cause an error. webpack does not support universal target for now.</target>
        </trans-unit>
        <trans-unit id="8ee532b77fe9241f19ef353c3e7fed30623f04b3" translate="yes" xml:space="preserve">
          <source>Will cause the module build to fail if there are any errors, if set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Will cause the module build to fail if there are any errors, if set to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed3337f00ce7e935bda25dc9a755ccc1a020104b" translate="yes" xml:space="preserve">
          <source>Will cause the module build to fail if there are any errors, to disable set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">오류가있는 경우 모듈 빌드가 실패하고 비활성화 설정이 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="605aaae9812735ecacc2976d3a72bf93853b674c" translate="yes" xml:space="preserve">
          <source>Will cause the module build to fail if there are any warnings, if set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Will cause the module build to fail if there are any warnings, if set to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bc0642e2086e2f535702a4cfa607206718b00c6" translate="yes" xml:space="preserve">
          <source>Will enable &lt;a href=&quot;https://eslint.org/docs/developer-guide/nodejs-api#%e2%97%86-eslint-outputfixes-results&quot;&gt;ESLint autofix feature&lt;/a&gt;.</source>
          <target state="translated">Will enable &lt;a href=&quot;https://eslint.org/docs/developer-guide/nodejs-api#%e2%97%86-eslint-outputfixes-results&quot;&gt;ESLint autofix feature&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="dcb3cee8d44279967f3a42560de38af824539c5b" translate="yes" xml:space="preserve">
          <source>Will extract &lt;code&gt;requiredVersion&lt;/code&gt; from package.json at this position in the graph.</source>
          <target state="translated">Will extract &lt;code&gt;requiredVersion&lt;/code&gt; from package.json at this position in the graph.</target>
        </trans-unit>
        <trans-unit id="a0ee58ab81476421af29dde817ee00fe56e25a3a" translate="yes" xml:space="preserve">
          <source>Will match all used equal module requests in your build.</source>
          <target state="translated">Will match all used equal module requests in your build.</target>
        </trans-unit>
        <trans-unit id="f37bb709980845b713826b5c431c7e4cf42cdb30" translate="yes" xml:space="preserve">
          <source>Will process and report errors only and ignore warnings, if set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Will process and report errors only and ignore warnings, if set to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cb5dd4802cbd5e1f4424e1f24a53406f192c8c5" translate="yes" xml:space="preserve">
          <source>Will produce the following URL:</source>
          <target state="translated">다음 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f15cc343ecded87750ae79c2ca739a1759cb7f27" translate="yes" xml:space="preserve">
          <source>Will provide all matching modules.</source>
          <target state="translated">Will provide all matching modules.</target>
        </trans-unit>
        <trans-unit id="f8c3505d15fb2978cc3e0ab031ac6f9898c31498" translate="yes" xml:space="preserve">
          <source>Will resolve relative to &lt;code&gt;config.context&lt;/code&gt;.</source>
          <target state="translated">Will resolve relative to &lt;code&gt;config.context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee20b6fa529d9e0abe4a5415d47395d378d9b2b9" translate="yes" xml:space="preserve">
          <source>Will run lint tasks across a thread pool. The pool size is automatic unless you specify a number.</source>
          <target state="translated">스레드 풀에서 Lint 작업을 실행합니다. 숫자를 지정하지 않으면 풀 크기는 자동입니다.</target>
        </trans-unit>
        <trans-unit id="b4d24a76f44b8f84389c4c4ddd2472b1593f1ec9" translate="yes" xml:space="preserve">
          <source>Window: available through the &lt;code&gt;window&lt;/code&gt; object, in the browser (&lt;code&gt;libraryTarget:'window'&lt;/code&gt;).</source>
          <target state="translated">Window: available through the &lt;code&gt;window&lt;/code&gt; object, in the browser ( &lt;code&gt;libraryTarget:'window'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="33d8d326d6e4611e0a87cfaaea2feefed77ccd63" translate="yes" xml:space="preserve">
          <source>Window: available trough the &lt;code&gt;window&lt;/code&gt; object, in the browser (&lt;code&gt;libraryTarget:'window'&lt;/code&gt;).</source>
          <target state="translated">Window : 브라우저에서 &lt;code&gt;window&lt;/code&gt; 객체를 통해 사용할 수 있습니다 ( &lt;code&gt;libraryTarget:'window'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="444c4a26fea99b453258d90271520addbdddd9d9" translate="yes" xml:space="preserve">
          <source>Windows Paths</source>
          <target state="translated">Windows 경로</target>
        </trans-unit>
        <trans-unit id="d26570f5c2956a810d7f843712770764ed940275" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../configuration/resolve#resolveroots&quot;&gt;&lt;code&gt;resolve.roots&lt;/code&gt;&lt;/a&gt; can specify a list of directories where requests of server-relative URLs (starting with '/') are resolved.</source>
          <target state="translated">함께 &lt;a href=&quot;../configuration/resolve#resolveroots&quot;&gt; &lt;code&gt;resolve.roots&lt;/code&gt; 은&lt;/a&gt; 서버 상대 URL의 요청이 디렉토리의 목록을 지정할 수 있습니다 (로 시작하는 '/')가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="da613a4c8d9ac0d530d7b6f4b1027eff5b02dc20" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../guides/code-splitting&quot;&gt;Code Splitting&lt;/a&gt;, multiple child chunks of an entry chunk can have common dependencies. To prevent duplication these can be moved into the parent. This reduces overall size, but does have a negative effect on the initial load time. If it is expected that users will need to download many sibling chunks, i.e. children of the entry chunk, then this should improve load time overall.</source>
          <target state="translated">함께 &lt;a href=&quot;../guides/code-splitting&quot;&gt;코드 분할&lt;/a&gt; , 항목 청크의 여러 자식 덩어리 일반적인 종속성을 가질 수 있습니다. 중복을 방지하기 위해 부모로 이동할 수 있습니다. 이렇게하면 전체 크기가 줄어들지 만 초기로드 시간에는 부정적인 영향을 미칩니다. 사용자가 많은 형제 청크 (예 : 엔트리 청크의 자식)를 다운로드해야하는 경우 전체로드 시간이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="bbd80a59681363399f6dd172be13e509a8f7ad11" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;:local&lt;/code&gt; (without brackets) local mode can be switched on for this selector. &lt;code&gt;:global(.className)&lt;/code&gt; can be used to declare an explicit global selector. With &lt;code&gt;:global&lt;/code&gt; (without brackets) global mode can be switched on for this selector.</source>
          <target state="translated">하여 &lt;code&gt;:local&lt;/code&gt; (괄호)없이 로컬 모드 셀렉터에 대해 전환 될 수있다. &lt;code&gt;:global(.className)&lt;/code&gt; 을 사용하여 명시 적 전역 선택기를 선언 할 수 있습니다. 함께 &lt;code&gt;:global&lt;/code&gt; (괄호)없이 글로벌 모드 셀렉터에 대해 전환 될 수있다.</target>
        </trans-unit>
        <trans-unit id="98ea04e476bafea13b57640b21fca228aec6390f" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;:local&lt;/code&gt; (without brackets) local mode can be switched on for this selector. The &lt;code&gt;:global(.className)&lt;/code&gt; notation can be used to declare an explicit global selector. With &lt;code&gt;:global&lt;/code&gt; (without brackets) global mode can be switched on for this selector.</source>
          <target state="translated">With &lt;code&gt;:local&lt;/code&gt; (without brackets) local mode can be switched on for this selector. The &lt;code&gt;:global(.className)&lt;/code&gt; notation can be used to declare an explicit global selector. With &lt;code&gt;:global&lt;/code&gt; (without brackets) global mode can be switched on for this selector.</target>
        </trans-unit>
        <trans-unit id="c65e5d99fb9840e633d5b24233ff7e3b3ff6b45a" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;devServer.quiet&lt;/code&gt; enabled, nothing except the initial startup information will be written to the console. This also means that errors or warnings from webpack are not visible.</source>
          <target state="translated">With &lt;code&gt;devServer.quiet&lt;/code&gt; enabled, nothing except the initial startup information will be written to the console. This also means that errors or warnings from webpack are not visible.</target>
        </trans-unit>
        <trans-unit id="5b225ce3e980419fcedac5c168209f1893afb65e" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;noInfo&lt;/code&gt; enabled, messages like the webpack bundle information that is shown when starting up and after each save, will be hidden. Errors and warnings will still be shown.</source>
          <target state="translated">함께 &lt;code&gt;noInfo&lt;/code&gt; 가 활성화되어 각 저장 한 후 시작할 때 표시되고 웹팩 번들 정보와 같은 메시지가 표시되지 않습니다. 오류 및 경고가 계속 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1c1b3ec9c729a0c66fab9d9e13f38d92d5ea577c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;quiet&lt;/code&gt; enabled, nothing except the initial startup information will be written to the console. This also means that errors or warnings from webpack are not visible.</source>
          <target state="translated">함께 &lt;code&gt;quiet&lt;/code&gt; 가능, 초기 시작 정보를 제외하고 아무것도 콘솔에 기록되지 않습니다. 이는 또한 웹팩의 오류 또는 경고가 표시되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2261b00c5dbf984d31b8e8efe89283a28dff1f62" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;strictModuleExceptionHandling&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;, only the first &lt;code&gt;require&lt;/code&gt; throws an exception:</source>
          <target state="translated">함께 &lt;code&gt;strictModuleExceptionHandling&lt;/code&gt; 에 세트를 &lt;code&gt;false&lt;/code&gt; 만이 첫번째 &lt;code&gt;require&lt;/code&gt; 예외가 발생합니다 :</target>
        </trans-unit>
        <trans-unit id="fe4c2c21e00e57075c113d20fdba5c4969948365" translate="yes" xml:space="preserve">
          <source>With Node.js runtime detection</source>
          <target state="translated">With Node.js runtime detection</target>
        </trans-unit>
        <trans-unit id="64396abb449717c242f124f529cce2f09650c835" translate="yes" xml:space="preserve">
          <source>With a backend on &lt;code&gt;localhost:3000&lt;/code&gt;, you can use this to enable proxying:</source>
          <target state="translated">&lt;code&gt;localhost:3000&lt;/code&gt; 에 백엔드를 사용하면이를 사용하여 프록시를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb6a8ecee5a47fcee3409e523a4abb2ceedc1a1d" translate="yes" xml:space="preserve">
          <source>With an absolute path, it will only search in the given directory.</source>
          <target state="translated">절대 경로를 사용하면 지정된 디렉토리에서만 검색합니다.</target>
        </trans-unit>
        <trans-unit id="209df50c5a3ba65f566fa2d401edf9d7cb9fabf5" translate="yes" xml:space="preserve">
          <source>With configuration file</source>
          <target state="translated">With configuration file</target>
        </trans-unit>
        <trans-unit id="bdf18bc54e5096bd0a6188e6cf6be620da271522" translate="yes" xml:space="preserve">
          <source>With next config:</source>
          <target state="translated">다음 설정으로 :</target>
        </trans-unit>
        <trans-unit id="71ddcdb75862f1ccf43f751b9133266beb9cdfc8" translate="yes" xml:space="preserve">
          <source>With that in place, let's see what happens when we do an &lt;code&gt;npm run build&lt;/code&gt;:</source>
          <target state="translated">그 위치에서 &lt;code&gt;npm run build&lt;/code&gt; 를 수행하면 어떤 일이 발생하는지 봅시다 .</target>
        </trans-unit>
        <trans-unit id="eb60d89ccdec95062636744692239878a8311c6e" translate="yes" xml:space="preserve">
          <source>With that in place, let's update our entry script to utilize one of these new methods and remove &lt;code&gt;lodash&lt;/code&gt; for simplicity:</source>
          <target state="translated">그 자리에 입력 스크립트를 업데이트하여 다음과 같은 새로운 방법 중 하나를 활용 하고 간단하게 &lt;code&gt;lodash&lt;/code&gt; 를 제거 하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="29a9b2b6d1e673ae67e5cea0f4d0192bed6a7832" translate="yes" xml:space="preserve">
          <source>With that in place, we can add the logic to conditionally load our new &lt;code&gt;polyfills.bundle.js&lt;/code&gt; file. How you make this decision depends on the technologies and browsers you need to support. We'll just do some simple testing to determine whether our polyfills are needed:</source>
          <target state="translated">이를 통해 로직을 추가하여 새로운 &lt;code&gt;polyfills.bundle.js&lt;/code&gt; 파일 을 조건부로로드 할 수 있습니다 . 이 결정을 내리는 방법은 지원해야하는 기술 및 브라우저에 따라 다릅니다. 폴리 필이 필요한지 확인하기 위해 간단한 테스트를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="8a561e18dac29b32832d2f136d334bfd899388b2" translate="yes" xml:space="preserve">
          <source>With that said, let's run &lt;code&gt;npx webpack&lt;/code&gt;, which will take our script at &lt;code&gt;src/index.js&lt;/code&gt; as the &lt;a href=&quot;../concepts/entry-points&quot;&gt;entry point&lt;/a&gt;, and will generate &lt;code&gt;dist/main.js&lt;/code&gt; as the &lt;a href=&quot;../concepts/output&quot;&gt;output&lt;/a&gt;. The &lt;code&gt;npx&lt;/code&gt; command, which ships with Node 8.2/npm 5.2.0 or higher, runs the webpack binary (&lt;code&gt;./node_modules/.bin/webpack&lt;/code&gt;) of the webpack package we installed in the beginning:</source>
          <target state="translated">그렇게 말한다면, 이제 실행하자 &lt;code&gt;npx webpack&lt;/code&gt; 에서 우리의 스크립트를 취할 것이다, &lt;code&gt;src/index.js&lt;/code&gt; 는 AS &lt;a href=&quot;../concepts/entry-points&quot;&gt;진입 점&lt;/a&gt; , 그리고 생성 &lt;code&gt;dist/main.js&lt;/code&gt; 는 AS &lt;a href=&quot;../concepts/output&quot;&gt;출력을&lt;/a&gt; . Node 8.2 / npm 5.2.0 이상과 함께 제공 되는 &lt;code&gt;npx&lt;/code&gt; 명령 은 처음에 설치 한 웹팩 패키지 의 웹팩 바이너리 ( &lt;code&gt;./node_modules/.bin/webpack&lt;/code&gt; )를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="da94f4bc9bc2a74e22052ec871ba55495942d472" translate="yes" xml:space="preserve">
          <source>With that squared away, we can run another &lt;code&gt;npm run build&lt;/code&gt; and see if anything has changed.</source>
          <target state="translated">이를 제곱하면 다른 &lt;code&gt;npm run build&lt;/code&gt; 하고 변경된 것이 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11b8ad9c6db101c09c9ea40dfa534293e6654ae6" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunks&lt;/code&gt;&lt;/a&gt; in place, we should now see the duplicate dependency removed from our &lt;code&gt;index.bundle.js&lt;/code&gt; and &lt;code&gt;another.bundle.js&lt;/code&gt;. The plugin should notice that we've separated &lt;code&gt;lodash&lt;/code&gt; out to a separate chunk and remove the dead weight from our main bundle. Let's do an &lt;code&gt;npm run build&lt;/code&gt; to see if it worked:</source>
          <target state="translated">으로 &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt; &lt;code&gt;SplitChunks&lt;/code&gt; &lt;/a&gt; 장소에, 우리는 지금 우리의에서 제거 중복 의존성 볼 수 &lt;code&gt;index.bundle.js&lt;/code&gt; 및 &lt;code&gt;another.bundle.js&lt;/code&gt; 을 . 플러그인은 &lt;code&gt;lodash&lt;/code&gt; 를 별도의 덩어리로 분리하고 기본 번들에서 죽은 무게를 제거합니다. &lt;code&gt;npm run build&lt;/code&gt; 를 수행하여 작동하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a5f9f5bf89d80d0310ab30cd99ec0912d1497bef" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;../plugins/split-chunks-plugin#optimizationsplitchunks&quot;&gt;&lt;code&gt;optimization.splitChunks&lt;/code&gt;&lt;/a&gt; configuration option in place, we should now see the duplicate dependency removed from our &lt;code&gt;index.bundle.js&lt;/code&gt; and &lt;code&gt;another.bundle.js&lt;/code&gt;. The plugin should notice that we've separated &lt;code&gt;lodash&lt;/code&gt; out to a separate chunk and remove the dead weight from our main bundle. Let's do an &lt;code&gt;npm run build&lt;/code&gt; to see if it worked:</source>
          <target state="translated">With the &lt;a href=&quot;../plugins/split-chunks-plugin#optimizationsplitchunks&quot;&gt; &lt;code&gt;optimization.splitChunks&lt;/code&gt; &lt;/a&gt; configuration option in place, we should now see the duplicate dependency removed from our &lt;code&gt;index.bundle.js&lt;/code&gt; and &lt;code&gt;another.bundle.js&lt;/code&gt; . The plugin should notice that we've separated &lt;code&gt;lodash&lt;/code&gt; out to a separate chunk and remove the dead weight from our main bundle. Let's do an &lt;code&gt;npm run build&lt;/code&gt; to see if it worked:</target>
        </trans-unit>
        <trans-unit id="386e42de3645de6af0ea069871a210dc37d6a043" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;filename&lt;/code&gt; option you can use chunk data to customize the filename. This is particularly useful when dealing with multiple entry points and wanting to get more control out of the filename for a given entry point/chunk. In the example below, we'll use &lt;code&gt;filename&lt;/code&gt; to output the generated css into a different directory.</source>
          <target state="translated">With the &lt;code&gt;filename&lt;/code&gt; option you can use chunk data to customize the filename. This is particularly useful when dealing with multiple entry points and wanting to get more control out of the filename for a given entry point/chunk. In the example below, we'll use &lt;code&gt;filename&lt;/code&gt; to output the generated css into a different directory.</target>
        </trans-unit>
        <trans-unit id="8a95996403d0479861a6b4e7a89511aeea3f2ee3" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;libraryExport&lt;/code&gt; configurations specified above, the resulting libraries could be utilized as such:</source>
          <target state="translated">위에서 지정한 &lt;code&gt;libraryExport&lt;/code&gt; 구성을 사용하면 결과 라이브러리를 다음과 같이 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8cc9918374023b808c6be47d5d665f11ee02edf" translate="yes" xml:space="preserve">
          <source>With the above setting a self-signed certificate is used, but you can provide your own:</source>
          <target state="translated">위의 설정에서 자체 서명 된 인증서가 사용되지만 고유 한 인증서를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcb19a32c97929a256c7eac639d4e4cd3006d718" translate="yes" xml:space="preserve">
          <source>With the above setting, a self-signed certificate is used, but you can provide your own:</source>
          <target state="translated">With the above setting, a self-signed certificate is used, but you can provide your own:</target>
        </trans-unit>
        <trans-unit id="c79c4fbc27f3e16e9bcfa18c8785f3041b90c961" translate="yes" xml:space="preserve">
          <source>With the extract-loader, you are able to reference your &lt;code&gt;main.css&lt;/code&gt; as regular &lt;code&gt;entry&lt;/code&gt;. The following &lt;code&gt;webpack.config.js&lt;/code&gt; shows how to load your styles with the &lt;a href=&quot;style-loader&quot;&gt;style-loader&lt;/a&gt; in development and as separate file in production.</source>
          <target state="translated">추출 로더를 사용하면 &lt;code&gt;main.css&lt;/code&gt; 를 일반 &lt;code&gt;entry&lt;/code&gt; 으로 참조 할 수 있습니다. 다음 &lt;code&gt;webpack.config.js&lt;/code&gt; 는 개발시 &lt;a href=&quot;style-loader&quot;&gt;스타일 로더&lt;/a&gt; 를 사용하여 프로덕션에서 별도의 파일로 스타일을로드하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e879ed7ebe97ab514f9ac82d92789a1995b02f8a" translate="yes" xml:space="preserve">
          <source>With the loader configured and fonts in place, you can incorporate them via an &lt;code&gt;@font-face&lt;/code&gt; declaration. The local &lt;code&gt;url(...)&lt;/code&gt; directive will be picked up by webpack just as it was with the image:</source>
          <target state="translated">로더가 구성되고 글꼴이 배치 된 상태에서 &lt;code&gt;@font-face&lt;/code&gt; 선언을 통해 통합 할 수 있습니다 . 로컬 &lt;code&gt;url(...)&lt;/code&gt; 지시문은 이미지와 마찬가지로 webpack에 의해 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="9aa3992e4ce723673608e4cd88c8061c3cc47c1f" translate="yes" xml:space="preserve">
          <source>With the same configuration as above:</source>
          <target state="translated">위와 동일한 구성으로 :</target>
        </trans-unit>
        <trans-unit id="78baad31832aae9a26b4d470038e065784160b77" translate="yes" xml:space="preserve">
          <source>With the same configuration as in the CDN example:</source>
          <target state="translated">With the same configuration as in the CDN example:</target>
        </trans-unit>
        <trans-unit id="3170aa354fa67d9eba4231f67e3ae0e2464dc93f" translate="yes" xml:space="preserve">
          <source>With this configuration all the &lt;code&gt;html&lt;/code&gt; files will be emitted into a &lt;code&gt;static&lt;/code&gt; directory within the output directory.</source>
          <target state="translated">With this configuration all the &lt;code&gt;html&lt;/code&gt; files will be emitted into a &lt;code&gt;static&lt;/code&gt; directory within the output directory.</target>
        </trans-unit>
        <trans-unit id="87cceefb92302190536b2b8442673ced6c7194c6" translate="yes" xml:space="preserve">
          <source>With this configuration:</source>
          <target state="translated">이 구성으로 :</target>
        </trans-unit>
        <trans-unit id="06811735644847338c33db6263952f13bcba0f26" translate="yes" xml:space="preserve">
          <source>With this target, the library name is ignored.</source>
          <target state="translated">With this target, the library name is ignored.</target>
        </trans-unit>
        <trans-unit id="23fc7d1082b4dd2dcbf10b62f03eb29c07d54435" translate="yes" xml:space="preserve">
          <source>With webpack 3.5.5, using &lt;code&gt;libraryTarget: { root:'_' }&lt;/code&gt; doesn't work properly (as stated in &lt;a href=&quot;https://github.com/webpack/webpack/issues/4824&quot;&gt;issue 4824&lt;/a&gt;). However, you can set &lt;code&gt;libraryTarget: { var: '_' }&lt;/code&gt; to expect the library as a global variable.</source>
          <target state="translated">webpack 3.5.5에서 &lt;code&gt;libraryTarget: { root:'_' }&lt;/code&gt; 사용 하면 {root : '_'} 가 제대로 작동하지 않습니다 ( &lt;a href=&quot;https://github.com/webpack/webpack/issues/4824&quot;&gt;문제 4824에&lt;/a&gt; 설명 된대로 ). 그러나 라이브러리를 전역 변수로 예상하도록 &lt;code&gt;libraryTarget: { var: '_' }&lt;/code&gt; 을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c67419a0524cc26b0ccadbcd8a8d5d6cb6d1034f" translate="yes" xml:space="preserve">
          <source>Within ModuleFederationPlugin. Change the exposes from:</source>
          <target state="translated">Within ModuleFederationPlugin. Change the exposes from:</target>
        </trans-unit>
        <trans-unit id="8732f0a5e9a8bf5a55b6df25e3d01cfd8c8eef53" translate="yes" xml:space="preserve">
          <source>Within your webpack configuration object, you'll need to add the babel-loader to the list of modules, like so:</source>
          <target state="translated">웹팩 구성 객체 내에서 다음과 같이 babel-loader를 모듈 목록에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="bddb13c140d09d38ff9bdf2addfdbde63717f1a3" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;require.include('a')&lt;/code&gt; it would be duplicated in both anonymous chunks.</source>
          <target state="translated">&lt;code&gt;require.include('a')&lt;/code&gt; 가 없으면 익명의 두 덩어리에 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="c7811ce92da034c2aedb4415e9aea2d61d28afba" translate="yes" xml:space="preserve">
          <source>Without Node.js runtime detection</source>
          <target state="translated">Without Node.js runtime detection</target>
        </trans-unit>
        <trans-unit id="0b3f121ad6e6adf10645f307e2b236a6bd4df531" translate="yes" xml:space="preserve">
          <source>Without bundling &lt;code&gt;lodash&lt;/code&gt;, but requiring it to be loaded by the consumer using &lt;code&gt;externals&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 를 묶지 않고 &lt;code&gt;externals&lt;/code&gt; 사용하여 소비자가로드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="84971907a3cc84992ffb74c71ae3fd0595d8e77a" translate="yes" xml:space="preserve">
          <source>Without configuration file</source>
          <target state="translated">Without configuration file</target>
        </trans-unit>
        <trans-unit id="b87ebfe4d9449847cae77868b59700d8b37ff9ec" translate="yes" xml:space="preserve">
          <source>Wondering the difference between CommonJS and CommonJS2 is? While they are similar, there are some subtle differences between them that are not usually relevant in the context of webpack. (For further details, please &lt;a href=&quot;https://github.com/webpack/webpack/issues/1114&quot;&gt;read this issue&lt;/a&gt;.)</source>
          <target state="translated">CommonJS와 CommonJS2의 차이점이 궁금하십니까? 그것들은 비슷하지만 일반적으로 webpack의 맥락에서 관련이없는 약간의 미묘한 차이점이 있습니다. (자세한 내용 &lt;a href=&quot;https://github.com/webpack/webpack/issues/1114&quot;&gt;은이 문제&lt;/a&gt; 를 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="2bd1799686939d6c40b6fc6d1834a5070159c0aa" translate="yes" xml:space="preserve">
          <source>Worker Pool</source>
          <target state="translated">작업자 풀</target>
        </trans-unit>
        <trans-unit id="47da685d4ce43b86671c1b697e05862bb915ae12" translate="yes" xml:space="preserve">
          <source>Works beautifully with async/await</source>
          <target state="translated">async / await와 함께 아름답게 작동</target>
        </trans-unit>
        <trans-unit id="ef9e8f86f011a7a5216aeb048434a39924a869df" translate="yes" xml:space="preserve">
          <source>Works like &lt;a href=&quot;../configuration/output#outputchunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Works like &lt;a href=&quot;../configuration/output#outputchunkfilename&quot;&gt; &lt;code&gt;output.chunkFilename&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb1c75c3efc6bd80ea6951fa6b462165e1d6eddc" translate="yes" xml:space="preserve">
          <source>Works like &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Works like &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="137b5ff1cacdc4c279dfe977ba055c243684c2d7" translate="yes" xml:space="preserve">
          <source>Works with both webpack &lt;code&gt;^v1.12.0&lt;/code&gt; and &lt;code&gt;^2.1.0-beta.0&lt;/code&gt;.</source>
          <target state="translated">Works with both webpack &lt;code&gt;^v1.12.0&lt;/code&gt; and &lt;code&gt;^2.1.0-beta.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f410952d7196ced9147ef2a01e2e763b89af0dc" translate="yes" xml:space="preserve">
          <source>Wouldn't it be nice&amp;hellip;</source>
          <target state="translated">Wouldn't it be nice&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="1ea79d6e6f4d7547a74b5be4b620fb97f6b83c66" translate="yes" xml:space="preserve">
          <source>Wrapping up</source>
          <target state="translated">마무리</target>
        </trans-unit>
        <trans-unit id="2a6fd277f08359dea3f96c16af1ecd77632ea198" translate="yes" xml:space="preserve">
          <source>Wraps a react component in a proxy component to enable Code Splitting, which loads a react component and its dependencies on demand.</source>
          <target state="translated">반응 구성 요소 및 프록시 구성 요소를 랩하여 코드 분할을 사용 가능하게하여 반응 구성 요소 및 요청시 종속성을로드합니다.</target>
        </trans-unit>
        <trans-unit id="36713ec5106504c6078cdd85306fc98592f85b98" translate="yes" xml:space="preserve">
          <source>Write long configurations (instead split the configuration into multiple files)</source>
          <target state="translated">긴 구성 쓰기 (구성을 여러 파일로 나누지 않음)</target>
        </trans-unit>
        <trans-unit id="31860e6ece8d648f15b2880b9f13b39001ab849b" translate="yes" xml:space="preserve">
          <source>Write the output of the errors to a file, for example a checkstyle xml file for use for reporting on Jenkins CI</source>
          <target state="translated">Jenkins CI에 대한보고에 사용하기 위해 checkstyle xml 파일과 같은 오류 출력을 파일에 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="ae3c186cd86caa6f1831c7b2a8cf9559fdd8616c" translate="yes" xml:space="preserve">
          <source>Write the output of the errors to a file, for example a checkstyle xml file for use for reporting on Jenkins CI.</source>
          <target state="translated">Write the output of the errors to a file, for example a checkstyle xml file for use for reporting on Jenkins CI.</target>
        </trans-unit>
        <trans-unit id="37bfadc905779c774213cf05f99f7cb3cbfc1484" translate="yes" xml:space="preserve">
          <source>Write your source code as ESM and transpile to CJS via babel, typescript or similar tools.</source>
          <target state="translated">Write your source code as ESM and transpile to CJS via babel, typescript or similar tools.</target>
        </trans-unit>
        <trans-unit id="b02932a3bc97517b40567428fa2f5d40f4f8de18" translate="yes" xml:space="preserve">
          <source>Writing a scaffold</source>
          <target state="translated">Writing a scaffold</target>
        </trans-unit>
        <trans-unit id="373464ffb250a399e37ccfde5f51d09a03e0cfff" translate="yes" xml:space="preserve">
          <source>YAML frontmatter loader for webpack. Converts YAML in files to JSON.</source>
          <target state="translated">웹 팩용 YAML 프론트 매터 로더. 파일의 YAML을 JSON으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="76c7f40c6c36b0415ea83ef88312618e6fa1647e" translate="yes" xml:space="preserve">
          <source>You also have the ability to pass the &lt;code&gt;minChunks&lt;/code&gt; property a function. This function is called by the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; and calls the function with &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;code&gt;minChunks&lt;/code&gt; 속성에 함수 를 전달할 수도 있습니다 . 이 함수는 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 에 의해 호출되며 &lt;code&gt;module&lt;/code&gt; 및 &lt;code&gt;count&lt;/code&gt; 인수 와 함께 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="56f21244c978f171c4ac00017d56ac1d49857043" translate="yes" xml:space="preserve">
          <source>You are likely missing the remote container, make sure its added. If you have the container loaded for the remote you are trying to consume, but still see this error, add the host container's remote container file to the HTML as well.</source>
          <target state="translated">You are likely missing the remote container, make sure its added. If you have the container loaded for the remote you are trying to consume, but still see this error, add the host container's remote container file to the HTML as well.</target>
        </trans-unit>
        <trans-unit id="b03bf18e33540311a6a1a473f493da0a7d7626fd" translate="yes" xml:space="preserve">
          <source>You can access &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md#format-definition&quot;&gt;SystemJS context&lt;/a&gt; via &lt;code&gt;__system_context__&lt;/code&gt;:</source>
          <target state="translated">You can access &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md#format-definition&quot;&gt;SystemJS context&lt;/a&gt; via &lt;code&gt;__system_context__&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="486b1a7d7908638f53c8b0cdf3f2a4817683f74b" translate="yes" xml:space="preserve">
          <source>You can add the plugin multiple times. This easily allows you to target multiple output languages. Use &lt;code&gt;ECMASCRIPT_2015&lt;/code&gt; for modern browsers and &lt;code&gt;ECMASCRIPT5&lt;/code&gt; for older browsers.</source>
          <target state="translated">You can add the plugin multiple times. This easily allows you to target multiple output languages. Use &lt;code&gt;ECMASCRIPT_2015&lt;/code&gt; for modern browsers and &lt;code&gt;ECMASCRIPT5&lt;/code&gt; for older browsers.</target>
        </trans-unit>
        <trans-unit id="db647c4c53e3ad154e9bce694f1349a9ba302fb6" translate="yes" xml:space="preserve">
          <source>You can also &lt;code&gt;import&lt;/code&gt; Data URI:</source>
          <target state="translated">You can also &lt;code&gt;import&lt;/code&gt; Data URI:</target>
        </trans-unit>
        <trans-unit id="8780dbb2bcb64c2cd9413c17145ff1cfe7f58a7e" translate="yes" xml:space="preserve">
          <source>You can also inline the worker as a BLOB with the &lt;code&gt;inline&lt;/code&gt; parameter</source>
          <target state="translated">&lt;code&gt;inline&lt;/code&gt; 매개 변수를 사용하여 작업자를 BLOB으로 인라인 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd4349233181e0720f303ee495c8f6650f404dd3" translate="yes" xml:space="preserve">
          <source>You can also pass function to override default behavior and insert styles in your container, e.g</source>
          <target state="translated">기본 동작을 무시하고 컨테이너에 스타일을 삽입하는 함수를 전달할 수도 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="b44456a37a4989c7c79c8510bfb78ec0d2a29520" translate="yes" xml:space="preserve">
          <source>You can also pass multiple values:</source>
          <target state="translated">여러 값을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="761a52984c1b7fea199603367baae47da0358327" translate="yes" xml:space="preserve">
          <source>You can also pass options directly to [Node Sass][] or [Dart Sass][]:</source>
          <target state="translated">옵션을 [Node Sass] [] 또는 [Dart Sass] []에 직접 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d165368b55a4612786a3c888809b52465e29334" translate="yes" xml:space="preserve">
          <source>You can also pass the &lt;code&gt;fiber&lt;/code&gt; value using this code:</source>
          <target state="translated">You can also pass the &lt;code&gt;fiber&lt;/code&gt; value using this code:</target>
        </trans-unit>
        <trans-unit id="7b92d815f6bc6ef0c12fbf88ae3a3b807eb5add1" translate="yes" xml:space="preserve">
          <source>You can also set the &lt;code&gt;preprocessor&lt;/code&gt; option as an asynchronous function instance.</source>
          <target state="translated">You can also set the &lt;code&gt;preprocessor&lt;/code&gt; option as an asynchronous function instance.</target>
        </trans-unit>
        <trans-unit id="041eb7668ce604823bb93f74d19e5870f189e246" translate="yes" xml:space="preserve">
          <source>You can also specify the absolute path to your custom &lt;code&gt;getLocalIdent&lt;/code&gt; function to generate classname based on a different schema. This requires &lt;code&gt;webpack &amp;gt;= 2.2.1&lt;/code&gt; (it supports functions in the &lt;code&gt;options&lt;/code&gt; object).</source>
          <target state="translated">다른 스키마를 기반으로 클래스 이름을 생성 하기 위해 사용자 정의 &lt;code&gt;getLocalIdent&lt;/code&gt; 함수 의 절대 경로를 지정할 수도 있습니다 . &lt;code&gt;webpack &amp;gt;= 2.2.1&lt;/code&gt; 이 필요합니다 ( &lt;code&gt;options&lt;/code&gt; 객체의 기능을 지원 합니다).</target>
        </trans-unit>
        <trans-unit id="d81bd4c9a456b16d9683dbcca85d3a7f655c8398" translate="yes" xml:space="preserve">
          <source>You can also speed up babel-loader by as much as 2x by using the &lt;code&gt;cacheDirectory&lt;/code&gt; option. This will cache transformations to the filesystem.</source>
          <target state="translated">&lt;code&gt;cacheDirectory&lt;/code&gt; 옵션 을 사용하여 babel-loader의 속도를 2 배까지 높일 수도 있습니다. 이것은 변환을 파일 시스템에 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="bdf672d3d1b56fe885485c5286e800cac55a210d" translate="yes" xml:space="preserve">
          <source>You can also take a look at &lt;a href=&quot;https://github.com/jaketrent/html-webpack-template&quot;&gt;&lt;code&gt;html-webpack-template&lt;/code&gt;&lt;/a&gt; which provides a couple of extra features in addition to the default template.</source>
          <target state="translated">기본 템플릿 외에도 몇 가지 추가 기능을 제공하는 &lt;a href=&quot;https://github.com/jaketrent/html-webpack-template&quot;&gt; &lt;code&gt;html-webpack-template&lt;/code&gt; &lt;/a&gt; 을 살펴볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f040ea81d8921273ccde3ba74d7118274a9c6a16" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;babel-loader&lt;/a&gt; for webpack and include &lt;code&gt;minify&lt;/code&gt;&lt;a href=&quot;https://github.com/babel/minify#babel-preset&quot;&gt;as a preset&lt;/a&gt; and should be much faster than using this - as babel-minify will operate on smaller file sizes. But then, why does this plugin exist at all? -</source>
          <target state="translated">당신은 또한 사용할 수 있습니다 &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;바벨 로더를&lt;/a&gt; 웹팩과 포함 &lt;code&gt;minify&lt;/code&gt; &lt;a href=&quot;https://github.com/babel/minify#babel-preset&quot;&gt;사전 설정으로&lt;/a&gt; 훨씬 더 빠르게이를 사용하는 것보다해야 - 바벨 - 작게하다 작은 파일 크기에서 작동한다. 그런데 왜이 플러그인이 존재합니까? -</target>
        </trans-unit>
        <trans-unit id="617736dbb06e2cd8438887c3de0a15c79431e2f3" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;chunkFilename&lt;/code&gt; to add hash values to the filename, since putting &lt;code&gt;[hash]&lt;/code&gt; in the bundle options parameter does not work correctly.</source>
          <target state="translated">번들 옵션 매개 변수 에 &lt;code&gt;[hash]&lt;/code&gt; 를 넣는 것이 올바르게 작동하지 않으므로 &lt;code&gt;chunkFilename&lt;/code&gt; 을 사용 하여 파일 이름에 해시 값을 추가 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="413f4dab77612f47ae5bf8ec30785d909e8c27bc" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; to analyze your output bundles emitted by webpack. You can use &lt;code&gt;--analyze&lt;/code&gt; flag to invoke it via CLI.</source>
          <target state="translated">You can also use &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; to analyze your output bundles emitted by webpack. You can use &lt;code&gt;--analyze&lt;/code&gt; flag to invoke it via CLI.</target>
        </trans-unit>
        <trans-unit id="7e7743062b4a8ef0f7ad722150072b88b0173ecd" translate="yes" xml:space="preserve">
          <source>You can also use it with hook:</source>
          <target state="translated">후크와 함께 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c09e6d58a25024dfb7321b1ce2655144f6ba3ed3" translate="yes" xml:space="preserve">
          <source>You can also use loaders through the CLI:</source>
          <target state="translated">CLI를 통해 로더를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c26482c95ee16521a7eab2d3a318db4f16086f5b" translate="yes" xml:space="preserve">
          <source>You can also use the css-loader results directly as a string, such as in Angular's component style.</source>
          <target state="translated">You can also use the css-loader results directly as a string, such as in Angular's component style.</target>
        </trans-unit>
        <trans-unit id="f02c51640dcbff4fab526c848361216560976627" translate="yes" xml:space="preserve">
          <source>You can also use the css-loader results directly as string, such as in Angular's component style.</source>
          <target state="translated">css-loader 결과를 Angular의 구성 요소 스타일과 같은 문자열로 직접 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5fa58a1f470fbc9a3c3181fe1708557f60e11d1" translate="yes" xml:space="preserve">
          <source>You can also use the loader via:</source>
          <target state="translated">다음을 통해 로더를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a17f15632b8c066c27b7d9339b6ad47b47cd796" translate="yes" xml:space="preserve">
          <source>You can also use the shortcut syntax if you're not going to specify any properties:</source>
          <target state="translated">You can also use the shortcut syntax if you're not going to specify any properties:</target>
        </trans-unit>
        <trans-unit id="96d93eedea5698ffaa278c3c3b5f7ec83528fb88" translate="yes" xml:space="preserve">
          <source>You can also use the stateless pattern if you are able to isolate your package state in JSON files. JSON is consumable from CommonJs and ESM without polluting the graph with the other module system.</source>
          <target state="translated">You can also use the stateless pattern if you are able to isolate your package state in JSON files. JSON is consumable from CommonJs and ESM without polluting the graph with the other module system.</target>
        </trans-unit>
        <trans-unit id="fc06f24be44b6912ba536f69300c398cce723a3c" translate="yes" xml:space="preserve">
          <source>You can change this condition by setting a &lt;a href=&quot;../configuration/module#ruleparserdataurlcondition&quot;&gt;&lt;code&gt;Rule.parser.dataUrlCondition.maxSize&lt;/code&gt;&lt;/a&gt; option on the module rule level of your webpack configuration:</source>
          <target state="translated">You can change this condition by setting a &lt;a href=&quot;../configuration/module#ruleparserdataurlcondition&quot;&gt; &lt;code&gt;Rule.parser.dataUrlCondition.maxSize&lt;/code&gt; &lt;/a&gt; option on the module rule level of your webpack configuration:</target>
        </trans-unit>
        <trans-unit id="1e730148a496946a205ba9f1f83112cf0117cf5b" translate="yes" xml:space="preserve">
          <source>You can check further customization when including loaders in the &lt;a href=&quot;loaders&quot;&gt;loaders section&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;loaders&quot;&gt;로더 섹션에&lt;/a&gt; 로더를 포함시킬 때 추가 사용자 정의를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81e1b23ffcecf3cccd1495b43a37853210c7fe63" translate="yes" xml:space="preserve">
          <source>You can combine this configuration with the &lt;a href=&quot;html-webpack-plugin&quot;&gt;HtmlWebpackPlugin&lt;/a&gt;. It will inject all the generated vendor chunks for you.</source>
          <target state="translated">이 구성을 &lt;a href=&quot;html-webpack-plugin&quot;&gt;HtmlWebpackPlugin&lt;/a&gt; 과 결합 할 수 있습니다 . 생성 된 모든 공급 업체 청크를 주입합니다.</target>
        </trans-unit>
        <trans-unit id="c65677943710e48b99e950158171b3819c14ca64" translate="yes" xml:space="preserve">
          <source>You can configure the generated ident with the &lt;code&gt;localIdentName&lt;/code&gt; query parameter. See &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;loader-utils's documentation&lt;/a&gt; for more information on options.</source>
          <target state="translated">&lt;code&gt;localIdentName&lt;/code&gt; 쿼리 매개 변수를 사용하여 생성 된 ID를 구성 할 수 있습니다 . 옵션에 대한 자세한 내용 은 &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;loader-utils의 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ac56600c476e22d0da1a92f028132f8103ba01d0" translate="yes" xml:space="preserve">
          <source>You can configure this part of the process by specifying an &lt;code&gt;output&lt;/code&gt; field in your configuration:</source>
          <target state="translated">구성에서 &lt;code&gt;output&lt;/code&gt; 필드를 지정하여 프로세스의이 부분을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee5eb15af67ca4da7475b8f619104882a15137c5" translate="yes" xml:space="preserve">
          <source>You can create you own custom implementation for encoding data.</source>
          <target state="translated">You can create you own custom implementation for encoding data.</target>
        </trans-unit>
        <trans-unit id="37a7764535c2c96f4d8dd59ad1b7b7eb36730e2d" translate="yes" xml:space="preserve">
          <source>You can create your own context with the &lt;code&gt;require.context()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;require.context()&lt;/code&gt; 함수로 자신 만의 컨텍스트를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccb23d5eede1de777634d8744c88b5c6f20624ca" translate="yes" xml:space="preserve">
          <source>You can disable automatically injecting the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package by passing a &lt;code&gt;false&lt;/code&gt; value for the &lt;code&gt;sassOptions.fiber&lt;/code&gt; option.</source>
          <target state="translated">You can disable automatically injecting the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt; &lt;code&gt;fibers&lt;/code&gt; &lt;/a&gt; package by passing a &lt;code&gt;false&lt;/code&gt; value for the &lt;code&gt;sassOptions.fiber&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="f4694c57c8d198099628fe9415010e762c59cfb4" translate="yes" xml:space="preserve">
          <source>You can enable a CommonJS module syntax using:</source>
          <target state="translated">You can enable a CommonJS module syntax using:</target>
        </trans-unit>
        <trans-unit id="2b93e405b0df0df48eb2f27ea8eecafd1f56eb1f" translate="yes" xml:space="preserve">
          <source>You can enable a CommonJS modules syntax using:</source>
          <target state="translated">You can enable a CommonJS modules syntax using:</target>
        </trans-unit>
        <trans-unit id="a4e401d29bec049eea07c4a9026ce5f74e23374f" translate="yes" xml:space="preserve">
          <source>You can enable a CommonJS syntax using:</source>
          <target state="translated">You can enable a CommonJS syntax using:</target>
        </trans-unit>
        <trans-unit id="3c4579ad2cb09b732d3341b78d6b1abe40563253" translate="yes" xml:space="preserve">
          <source>You can enable a ES module named export using:</source>
          <target state="translated">You can enable a ES module named export using:</target>
        </trans-unit>
        <trans-unit id="75eefef317a6b7936e79424ee59d8c12e3e0005c" translate="yes" xml:space="preserve">
          <source>You can enable a ES module syntax using:</source>
          <target state="translated">You can enable a ES module syntax using:</target>
        </trans-unit>
        <trans-unit id="e84d58c60bb79fb0adbd43498e63742408e0e983" translate="yes" xml:space="preserve">
          <source>You can even add your &lt;code&gt;index.html&lt;/code&gt; as &lt;code&gt;entry&lt;/code&gt; and just reference your stylesheets from there. You just need to tell the html-loader to also pick up &lt;code&gt;link:href&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; 을 &lt;code&gt;entry&lt;/code&gt; 으로 추가 하고 스타일 시트를 참조 할 수도 있습니다 . html-loader에게 &lt;code&gt;link:href&lt;/code&gt; 도 선택하도록 지시하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="8a61d88c66101524bd701605f38e7674ce143a7d" translate="yes" xml:space="preserve">
          <source>You can even add your &lt;code&gt;index.html&lt;/code&gt; as &lt;code&gt;entry&lt;/code&gt; and reference your stylesheets from there. In that case, tell the html-loader to also pick up &lt;code&gt;link:href&lt;/code&gt;:</source>
          <target state="translated">You can even add your &lt;code&gt;index.html&lt;/code&gt; as &lt;code&gt;entry&lt;/code&gt; and reference your stylesheets from there. In that case, tell the html-loader to also pick up &lt;code&gt;link:href&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5e38747a75286c019a6250829a1fab77df9baa67" translate="yes" xml:space="preserve">
          <source>You can even use ES6+ features if you have the &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;&lt;code&gt;babel-loader&lt;/code&gt;&lt;/a&gt; configured.</source>
          <target state="translated">You can even use ES6+ features if you have the &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt; &lt;code&gt;babel-loader&lt;/code&gt; &lt;/a&gt; configured.</target>
        </trans-unit>
        <trans-unit id="9222f57573caa95f98daa813595d8eeea95b2e0c" translate="yes" xml:space="preserve">
          <source>You can expose the library in the following ways:</source>
          <target state="translated">다음과 같은 방법으로 라이브러리를 노출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b016ddf6a46c24f04d83670448ceecbe47b599e" translate="yes" xml:space="preserve">
          <source>You can find all options here &lt;a href=&quot;https://nodejs.org/api/zlib.html#zlib_class_options&quot;&gt;zlib&lt;/a&gt;.</source>
          <target state="translated">You can find all options here &lt;a href=&quot;https://nodejs.org/api/zlib.html#zlib_class_options&quot;&gt;zlib&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cbad14b7c029dc9656bd37cf6353c989afed3791" translate="yes" xml:space="preserve">
          <source>You can find more information &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">You can find more information &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="81d8b9ac87016044b7fcf31fda306fb4f151e86b" translate="yes" xml:space="preserve">
          <source>You can imagine your application as a tree. The source code and libraries you actually use represent the green, living leaves of the tree. Dead code represents the brown, dead leaves of the tree that are consumed by autumn. In order to get rid of the dead leaves, you have to shake the tree, causing them to fall.</source>
          <target state="translated">응용 프로그램을 트리로 상상할 수 있습니다. 실제로 사용하는 소스 코드와 라이브러리는 녹색의 살아있는 잎을 나타냅니다. 죽은 코드는 가을에 소비되는 나무의 갈색, 죽은 잎을 나타냅니다. 죽은 나뭇잎을 제거하려면 나무를 흔들어 떨어 뜨려야합니다.</target>
        </trans-unit>
        <trans-unit id="a49b1aef346643f600737b9c9adce130a8a380fd" translate="yes" xml:space="preserve">
          <source>You can instead require the Babel runtime as a separate module to avoid the duplication.</source>
          <target state="translated">You can instead require the Babel runtime as a separate module to avoid the duplication.</target>
        </trans-unit>
        <trans-unit id="e3dcd2790a0eae44bfbe2be4ea325c06a42bb0e6" translate="yes" xml:space="preserve">
          <source>You can instead require the babel runtime as a separate module to avoid the duplication.</source>
          <target state="translated">대신 중복을 피하기 위해 babel 런타임을 별도의 모듈로 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c3dc7f422b914ae1bd7eebc909a39372a9344da" translate="yes" xml:space="preserve">
          <source>You can instruct webpack to &quot;watch&quot; all files within your dependency graph for changes. If one of these files is updated, the code will be recompiled so you don't have to run the full build manually.</source>
          <target state="translated">변경 사항에 대한 종속성 그래프 내의 모든 파일을 &quot;감시&quot;하도록 webpack에 지시 할 수 있습니다. 이러한 파일 중 하나가 업데이트되면 코드가 다시 컴파일되므로 전체 빌드를 수동으로 실행할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b1a26c63c168e909835bb6c8a229e8e0c0ebd9cf" translate="yes" xml:space="preserve">
          <source>You can manually specify the path to search for your config (&lt;code&gt;postcss.config.js&lt;/code&gt;) with the &lt;code&gt;config.path&lt;/code&gt; option. This is needed if you store your config in a separate e.g &lt;code&gt;./config || ./.config&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;config.path&lt;/code&gt; 옵션 을 사용하여 구성을 검색 할 경로 ( &lt;code&gt;postcss.config.js&lt;/code&gt; )를 수동으로 지정할 수 있습니다 . 구성을 별도의 &lt;code&gt;./config || ./.config&lt;/code&gt; 에 저장하는 경우 필요합니다 ./config || ./.config 폴더.</target>
        </trans-unit>
        <trans-unit id="0cf7f7030276db2ed47506d11dff32b3a8cb579d" translate="yes" xml:space="preserve">
          <source>You can match config rules to data uri with &lt;code&gt;mimetype&lt;/code&gt;.</source>
          <target state="translated">You can match config rules to data uri with &lt;code&gt;mimetype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4da3d1e9eea80e03693a1d8dd4847cafa98ada8" translate="yes" xml:space="preserve">
          <source>You can merge two or more different webpack configurations with the help of &lt;code&gt;--merge&lt;/code&gt;:</source>
          <target state="translated">당신의 도움으로 두 개 이상의 서로 다른 웹팩 구성을 병합 할 수 있습니다 &lt;code&gt;--merge&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="a02139ade26b94db90a77cff74f297024178c630" translate="yes" xml:space="preserve">
          <source>You can modify this template by setting &lt;a href=&quot;../configuration/output#outputassetmodulefilename&quot;&gt;&lt;code&gt;output.assetModuleFilename&lt;/code&gt;&lt;/a&gt; in your webpack configuration:</source>
          <target state="translated">You can modify this template by setting &lt;a href=&quot;../configuration/output#outputassetmodulefilename&quot;&gt; &lt;code&gt;output.assetModuleFilename&lt;/code&gt; &lt;/a&gt; in your webpack configuration:</target>
        </trans-unit>
        <trans-unit id="812feb6af9007f60618bf8c006611b77fca0fcc0" translate="yes" xml:space="preserve">
          <source>You can not access these environment variables inside bundled code.</source>
          <target state="translated">번들 코드 내에서는 이러한 환경 변수에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4a9e1a22ed19e3d6feca90c11b06e5b56636e225" translate="yes" xml:space="preserve">
          <source>You can override properties in the loader context as webpack copies all properties that are defined in the &lt;code&gt;loader&lt;/code&gt; to the loader context.</source>
          <target state="translated">You can override properties in the loader context as webpack copies all properties that are defined in the &lt;code&gt;loader&lt;/code&gt; to the loader context.</target>
        </trans-unit>
        <trans-unit id="27129a62dfd905198fe6dba3dc207525e02dbcf5" translate="yes" xml:space="preserve">
          <source>You can override this property by passing your own function in:</source>
          <target state="translated">다음에 자신의 함수를 전달하여이 속성을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4abdad2c7b1098707f173e274bbc6d2550aa3940" translate="yes" xml:space="preserve">
          <source>You can pass &lt;a href=&quot;http://eslint.org/docs/developer-guide/nodejs-api#cliengine&quot;&gt;eslint options&lt;/a&gt; using standard webpack &lt;a href=&quot;../configuration/module#useentry&quot;&gt;loader options&lt;/a&gt;.</source>
          <target state="translated">표준 웹팩 &lt;a href=&quot;../configuration/module#useentry&quot;&gt;로더 옵션 &lt;/a&gt;&lt;a href=&quot;http://eslint.org/docs/developer-guide/nodejs-api#cliengine&quot;&gt;을&lt;/a&gt; 사용하여 eslint 옵션 을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="213c91278ac59345c4b459d33966c017869388a8" translate="yes" xml:space="preserve">
          <source>You can pass &lt;a href=&quot;https://eslint.org/docs/developer-guide/nodejs-api#%e2%97%86-new-eslint-options&quot;&gt;eslint options&lt;/a&gt;.</source>
          <target state="translated">You can pass &lt;a href=&quot;https://eslint.org/docs/developer-guide/nodejs-api#%e2%97%86-new-eslint-options&quot;&gt;eslint options&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0e88b65dc47b88deac8cb49f88b3467dc69ea19e" translate="yes" xml:space="preserve">
          <source>You can pass a &lt;code&gt;cache&lt;/code&gt; object, where the modules are cached. Otherwise one is created per plugin instance.</source>
          <target state="translated">모듈이 캐시되는 &lt;code&gt;cache&lt;/code&gt; 개체를 전달할 수 있습니다 . 그렇지 않으면 플러그인 인스턴스 당 하나가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="1c32aae7b46d364dbc68a494b799b8e554e95b56" translate="yes" xml:space="preserve">
          <source>You can pass any Less specific options to the &lt;code&gt;less-loader&lt;/code&gt; through the &lt;code&gt;lessOptions&lt;/code&gt; property in the &lt;a href=&quot;../configuration/module#ruleoptions--rulequery&quot;&gt;loader options&lt;/a&gt;. See the &lt;a href=&quot;http://lesscss.org/usage/#command-line-usage-options&quot;&gt;Less documentation&lt;/a&gt; for all available options in dash-case. Since we're passing these options to Less programmatically, you need to pass them in camelCase here:</source>
          <target state="translated">You can pass any Less specific options to the &lt;code&gt;less-loader&lt;/code&gt; through the &lt;code&gt;lessOptions&lt;/code&gt; property in the &lt;a href=&quot;../configuration/module#ruleoptions--rulequery&quot;&gt;loader options&lt;/a&gt;. See the &lt;a href=&quot;http://lesscss.org/usage/#command-line-usage-options&quot;&gt;Less documentation&lt;/a&gt; for all available options in dash-case. Since we're passing these options to Less programmatically, you need to pass them in camelCase here:</target>
        </trans-unit>
        <trans-unit id="aef4ad3023e402beb004c1702b78a0c56e0f6940" translate="yes" xml:space="preserve">
          <source>You can pass any Less specific options to the &lt;code&gt;less-loader&lt;/code&gt; via &lt;a href=&quot;../configuration/module#rule-options-rule-query&quot;&gt;loader options&lt;/a&gt;. See the &lt;a href=&quot;http://lesscss.org/usage/#command-line-usage-options&quot;&gt;Less documentation&lt;/a&gt; for all available options in dash-case. Since we're passing these options to Less programmatically, you need to pass them in camelCase here:</source>
          <target state="translated">&lt;a href=&quot;../configuration/module#rule-options-rule-query&quot;&gt;로더 옵션을&lt;/a&gt; 통해 덜 구체적인 옵션을 &lt;code&gt;less-loader&lt;/code&gt; 전달할 수 있습니다 . 사용 가능한 모든 옵션을 대소 문자로 표시 하려면 &lt;a href=&quot;http://lesscss.org/usage/#command-line-usage-options&quot;&gt;Less documentation&lt;/a&gt; 을 참조하십시오 . 이 옵션을 프로그래밍 방식으로 Less에 전달하고 있으므로 camelCase로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf118857ee4b2dd15dfe4d6ed6cbee2bff9f3a5e" translate="yes" xml:space="preserve">
          <source>You can pass any Stylus specific options to the &lt;code&gt;stylus-loader&lt;/code&gt; through the &lt;code&gt;stylusOptions&lt;/code&gt; property in the &lt;a href=&quot;../configuration/module#ruleoptions--rulequery&quot;&gt;loader options&lt;/a&gt;. See the &lt;a href=&quot;https://stylus-lang.com/docs/js.html&quot;&gt;Stylus documentation&lt;/a&gt;. Options in dash-case should use camelCase.</source>
          <target state="translated">You can pass any Stylus specific options to the &lt;code&gt;stylus-loader&lt;/code&gt; through the &lt;code&gt;stylusOptions&lt;/code&gt; property in the &lt;a href=&quot;../configuration/module#ruleoptions--rulequery&quot;&gt;loader options&lt;/a&gt;. See the &lt;a href=&quot;https://stylus-lang.com/docs/js.html&quot;&gt;Stylus documentation&lt;/a&gt;. Options in dash-case should use camelCase.</target>
        </trans-unit>
        <trans-unit id="a5abeec745e546c9081203b15f377defbfe4c6ad" translate="yes" xml:space="preserve">
          <source>You can pass empty object &lt;code&gt;{}&lt;/code&gt; to &lt;code&gt;entry&lt;/code&gt; when you have only entry points generated by plugins.</source>
          <target state="translated">플러그인에 의해 생성 된 진입 점 만있는 경우 빈 개체 &lt;code&gt;{}&lt;/code&gt; 를 &lt;code&gt;entry&lt;/code&gt; 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e1516f6bc6b4bfc105ff606871380163f99ece0" translate="yes" xml:space="preserve">
          <source>You can pass empty object &lt;code&gt;{}&lt;/code&gt; to &lt;code&gt;entry&lt;/code&gt; when you have only entrypoints generated by plugins.</source>
          <target state="translated">You can pass empty object &lt;code&gt;{}&lt;/code&gt; to &lt;code&gt;entry&lt;/code&gt; when you have only entrypoints generated by plugins.</target>
        </trans-unit>
        <trans-unit id="3b06afa23c1de47c44c56545299129b3b6430146" translate="yes" xml:space="preserve">
          <source>You can pass options to the loader by using the &lt;a href=&quot;../configuration/module#rule-options-rule-query&quot;&gt;options property&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../configuration/module#rule-options-rule-query&quot;&gt;options 속성&lt;/a&gt; 을 사용하여 옵션을 로더에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="786ca56628712945757ab33d8bc1fb37c3e0e3e2" translate="yes" xml:space="preserve">
          <source>You can pass options to the loader by using the &lt;a href=&quot;../configuration/module#ruleoptions--rulequery&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt; property:</source>
          <target state="translated">You can pass options to the loader by using the &lt;a href=&quot;../configuration/module#ruleoptions--rulequery&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt; property:</target>
        </trans-unit>
        <trans-unit id="8225b533fd04bef42ded925304519aad496b8786" translate="yes" xml:space="preserve">
          <source>You can prevent all these messages from showing, by using this option:</source>
          <target state="translated">이 옵션을 사용하여 이러한 모든 메시지가 표시되지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a31dfcff2c5d23e19f5533875be90f1ad063de25" translate="yes" xml:space="preserve">
          <source>You can provide a &lt;code&gt;Function&lt;/code&gt; to the &lt;code&gt;dev&lt;/code&gt; to make it dynamic:</source>
          <target state="translated">&lt;code&gt;dev&lt;/code&gt; 에게 &lt;code&gt;Function&lt;/code&gt; 을 제공하여 동적으로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a91500d3733c29467f9c84b046e184517d2a8f5" translate="yes" xml:space="preserve">
          <source>You can provide the &lt;code&gt;webpack&lt;/code&gt; function with an array of configurations. See the &lt;a href=&quot;#multicompiler&quot;&gt;MultiCompiler&lt;/a&gt; section below for more information.</source>
          <target state="translated">&lt;code&gt;webpack&lt;/code&gt; 기능에 구성 배열을 제공 할 수 있습니다 . 자세한 내용은 아래 &lt;a href=&quot;#multicompiler&quot;&gt;멀티 컴파일러&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="726cb4dae7b8caec2f60c94eb3906b0a9c0e5775" translate="yes" xml:space="preserve">
          <source>You can read more about common PostCSS Config &lt;a href=&quot;https://github.com/michael-ciniawsky/postcss-load-config&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">일반적인 PostCSS 구성에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/michael-ciniawsky/postcss-load-config&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b5e84df12d5ab7493038af6ff205b07dd0118c3d" translate="yes" xml:space="preserve">
          <source>You can report errors from inside a loader by:</source>
          <target state="translated">You can report errors from inside a loader by:</target>
        </trans-unit>
        <trans-unit id="a1242433c21188ff723a00f7388c5bfcebf798cd" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;preprocessor&lt;/code&gt; option as a &lt;code&gt;Function&lt;/code&gt; instance.</source>
          <target state="translated">You can set the &lt;code&gt;preprocessor&lt;/code&gt; option as a &lt;code&gt;Function&lt;/code&gt; instance.</target>
        </trans-unit>
        <trans-unit id="452166a0955200365aae47a7b2ae4b03747296d6" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;sourceMap: 'inline'&lt;/code&gt; option to inline the source map within the CSS directly as an annotation comment.</source>
          <target state="translated">&lt;code&gt;sourceMap: 'inline'&lt;/code&gt; 옵션을 설정하여 CSS 내에서 소스 맵을 주석 주석으로 직접 인라인 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8577c7fe8d33e793fb49b1cc5c311a48e98a40d7" translate="yes" xml:space="preserve">
          <source>You can set the dependency as eager inside the advanced API of Module Federation, which doesn&amp;rsquo;t put the modules in an async chunk, but provides them synchronously. This allows us to use these shared modules in the initial chunk. But be careful as all provided and fallback modules will always be downloaded. It&amp;rsquo;s recommended to provide it only at one point of your application, e.g. the shell.</source>
          <target state="translated">You can set the dependency as eager inside the advanced API of Module Federation, which doesn&amp;rsquo;t put the modules in an async chunk, but provides them synchronously. This allows us to use these shared modules in the initial chunk. But be careful as all provided and fallback modules will always be downloaded. It&amp;rsquo;s recommended to provide it only at one point of your application, e.g. the shell.</target>
        </trans-unit>
        <trans-unit id="7d5fbc85ae437cd57f4faae115e09857752b95cc" translate="yes" xml:space="preserve">
          <source>You can set up HMR so that this process happens automatically, or you can choose to require user interaction for updates to occur.</source>
          <target state="translated">이 프로세스가 자동으로 수행되도록 HMR을 설정하거나 업데이트가 발생하도록 사용자 상호 작용을 요구하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f402984eb0e7ef4f62138761b33b6dde332a8e80" translate="yes" xml:space="preserve">
          <source>You can setup invalidation keys using a function.</source>
          <target state="translated">You can setup invalidation keys using a function.</target>
        </trans-unit>
        <trans-unit id="b065d2a185e308e61d94dd7fc51cb3e71d3925f3" translate="yes" xml:space="preserve">
          <source>You can specify which tag-attribute combination should be processed by this loader via the query parameter &lt;code&gt;attrs&lt;/code&gt;. Pass an array or a space-separated list of &lt;code&gt;&amp;lt;tag&amp;gt;:&amp;lt;attribute&amp;gt;&lt;/code&gt; combinations. (Default: &lt;code&gt;attrs=img:src&lt;/code&gt;)</source>
          <target state="translated">query 매개 변수 &lt;code&gt;attrs&lt;/code&gt; 를 통해이 로더가 처리 할 태그 속성 조합을 지정할 수 있습니다 . 배열 또는 공백으로 구분 된 &lt;code&gt;&amp;lt;tag&amp;gt;:&amp;lt;attribute&amp;gt;&lt;/code&gt; 조합 목록을 전달하십시오 . (기본값 : &lt;code&gt;attrs=img:src&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fa6ccd219163227ca8c8c2c372179a320d9d3e28" translate="yes" xml:space="preserve">
          <source>You can specify your own terminal output colors using &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;ANSI escape sequences&lt;/a&gt;</source>
          <target state="translated">You can specify your own terminal output colors using &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;ANSI escape sequences&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b2b373f4561c9a596b1cbb78840dd74c0e1b7d4" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt; without any additional loaders.</source>
          <target state="translated">You can use &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt; without any additional loaders.</target>
        </trans-unit>
        <trans-unit id="dd1ff29808481ca80043eaeef103dfd24d246c9d" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;--node-env&lt;/code&gt; option to set &lt;code&gt;process.env.NODE_ENV&lt;/code&gt;:</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;code&gt;--node-env&lt;/code&gt; 설정 옵션을 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="acd4fe912fc68569ab528f2e567963c85c13eed0" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;1&lt;/code&gt; value to process assets that are smaller than the original.</source>
          <target state="translated">You can use &lt;code&gt;1&lt;/code&gt; value to process assets that are smaller than the original.</target>
        </trans-unit>
        <trans-unit id="288a1a59cb841a190d09d7459afa11411d98449d" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;:local(#someId)&lt;/code&gt;, but this is not recommended. Use classes instead of ids.</source>
          <target state="translated">&lt;code&gt;:local(#someId)&lt;/code&gt; 사용할 수 있지만 권장되지는 않습니다. ID 대신 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fa1a78a19b8b7d8c070a3f6779dcb590c55453e0" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;@value&lt;/code&gt; to specific values to be reused throughout a document.</source>
          <target state="translated">You can use &lt;code&gt;@value&lt;/code&gt; to specific values to be reused throughout a document.</target>
        </trans-unit>
        <trans-unit id="9370d69cd396461f56330edd46ed352539d47c47" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;interpolate&lt;/code&gt; flag to enable interpolation syntax for ES6 template strings, like so:</source>
          <target state="translated">&lt;code&gt;interpolate&lt;/code&gt; 플래그를 사용하여 다음과 같이 ES6 템플릿 문자열에 대한 보간 구문을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f235b10a0e3fd1aa6a0dcf5908360b030b4f67f" translate="yes" xml:space="preserve">
          <source>You can use any template system. Below is an example for &lt;a href=&quot;https://handlebarsjs.com/&quot;&gt;handlebars&lt;/a&gt;.</source>
          <target state="translated">You can use any template system. Below is an example for &lt;a href=&quot;https://handlebarsjs.com/&quot;&gt;handlebars&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b4f76c1bacc4eb6af44af5f764fdfb47d31f6ca0" translate="yes" xml:space="preserve">
          <source>You can use difference options (like &lt;code&gt;progressive&lt;/code&gt;/&lt;code&gt;interlaced&lt;/code&gt; and etc) based on image size (example - don't do progressive transformation for small images).</source>
          <target state="translated">You can use difference options (like &lt;code&gt;progressive&lt;/code&gt; / &lt;code&gt;interlaced&lt;/code&gt; and etc) based on image size (example - don't do progressive transformation for small images).</target>
        </trans-unit>
        <trans-unit id="c9c28548638024da9be71c5e42ec0aff2ec63f12" translate="yes" xml:space="preserve">
          <source>You can use different &lt;code&gt;postcss.config.js&lt;/code&gt; files in different directories. Config lookup starts from &lt;code&gt;path.dirname(file)&lt;/code&gt; and walks the file tree upwards until a config file is found.</source>
          <target state="translated">다른 디렉토리에서 다른 &lt;code&gt;postcss.config.js&lt;/code&gt; 파일을 사용할 수 있습니다 . 구성 조회는 &lt;code&gt;path.dirname(file)&lt;/code&gt; 에서 시작 하여 구성 파일을 찾을 때까지 파일 트리를 위로 걷습니다.</target>
        </trans-unit>
        <trans-unit id="c0c3babb0503ccc9bdd474d044df525a65ccaaf6" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;ContextReplacementPlugin&lt;/code&gt; to modify these values for individual dependencies. This also removes the warning.</source>
          <target state="translated">&lt;code&gt;ContextReplacementPlugin&lt;/code&gt; 을 사용하여 개별 종속성에 대한 이러한 값을 수정할 수 있습니다 . 또한 경고가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="ba65c415802e97ddd7141b7f0563ef1989931671" translate="yes" xml:space="preserve">
          <source>You can use the CLI to modify the &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration with the following command: &lt;code&gt;webpack serve --hot=only&lt;/code&gt;.</source>
          <target state="translated">You can use the CLI to modify the &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration with the following command: &lt;code&gt;webpack serve --hot=only&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="180fa5f2e225c8caf62c44b313b1e2e6264d15d7" translate="yes" xml:space="preserve">
          <source>You can use the CLI to modify the &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration with the following command: &lt;code&gt;webpack-dev-server --hotOnly&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webpack-dev-server --hotOnly&lt;/code&gt; 명령으로 CLI를 사용하여 &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; 구성 을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc1067fdd2afb90b95af5a104047e59ec6080bc2" translate="yes" xml:space="preserve">
          <source>You can use the above environment variables inside your webpack configuration:</source>
          <target state="translated">웹팩 구성 내에서 위의 환경 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="232670ad58a5bfc974451f1d09631c24bf7aa3d9" translate="yes" xml:space="preserve">
          <source>You can use the following code to replace the configuration option &lt;code&gt;devtool: eval-source-map&lt;/code&gt; with an equivalent custom plugin configuration:</source>
          <target state="translated">다음 코드를 사용하여 구성 옵션 &lt;code&gt;devtool: eval-source-map&lt;/code&gt; 을 동등한 사용자 정의 플러그인 구성 으로 바꿀 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7602cf1a1598f8268f67ccee66d3351dad1330cc" translate="yes" xml:space="preserve">
          <source>You can use the following code to replace the configuration option &lt;code&gt;devtool: inline-source-map&lt;/code&gt; with an equivalent custom plugin configuration:</source>
          <target state="translated">다음 코드를 사용하여 구성 옵션 &lt;code&gt;devtool: inline-source-map&lt;/code&gt; 을 동등한 사용자 정의 플러그인 구성 으로 바꿀 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3fe2384ac5a00f88d135e577cb13bd6a2ba58d8" translate="yes" xml:space="preserve">
          <source>You can use the loader either</source>
          <target state="translated">로더를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="674277dbab17cfb7cf3c743744d3501d96183f3b" translate="yes" xml:space="preserve">
          <source>You can use the loader either:</source>
          <target state="translated">You can use the loader either:</target>
        </trans-unit>
        <trans-unit id="b8f344fd29f21b8be63f656f724eb124cf44c6b4" translate="yes" xml:space="preserve">
          <source>You can use your custom filter to specify html elements to be processed.</source>
          <target state="translated">You can use your custom filter to specify html elements to be processed.</target>
        </trans-unit>
        <trans-unit id="12c6a60a750ea17285dc978e40d08a68e9b7bfb3" translate="yes" xml:space="preserve">
          <source>You cannot use the second &lt;code&gt;compiler&lt;/code&gt; argument (a callback) when using &lt;code&gt;WebpackDevServer&lt;/code&gt;.</source>
          <target state="translated">You cannot use the second &lt;code&gt;compiler&lt;/code&gt; argument (a callback) when using &lt;code&gt;WebpackDevServer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d9cfb98d211a4979bdac093959f5651519dc72c" translate="yes" xml:space="preserve">
          <source>You don't have to combine it with the mocha loader, it's independent. So if you want to cover a normal app usage, you can do so. The &lt;code&gt;reportHtml&lt;/code&gt; function just appends the output to the body.</source>
          <target state="translated">모카 로더와 결합 할 필요가 없으며 독립적입니다. 따라서 정상적인 앱 사용을 원한다면 그렇게 할 수 있습니다. &lt;code&gt;reportHtml&lt;/code&gt; 의 기능은 본체에 대한 출력을 추가한다.</target>
        </trans-unit>
        <trans-unit id="9bf571de2a4ed45db1ae7bbfcd15910c5ad88ef8" translate="yes" xml:space="preserve">
          <source>You have built an offline app using the Workbox project. You've started the journey of turning your web app into a PWA. You may now want to think about taking things further. A good resource to help you with that can be found &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Workbox 프로젝트를 사용하여 오프라인 앱을 빌드했습니다. 웹앱을 PWA로 전환하는 여정을 시작했습니다. 이제 더 나아가는 것에 대해 생각하고 싶을 수도 있습니다. 이에 대한 유용한 자료는 &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6eedf5f1237f3647dab3257fb507b963cd6c74cf" translate="yes" xml:space="preserve">
          <source>You may also extract the CSS based on the webpack entry name. This is especially useful if you import routes dynamically but want to keep your CSS bundled according to entry. This also prevents the CSS duplication issue one had with the ExtractTextPlugin.</source>
          <target state="translated">웹팩 항목 이름을 기반으로 CSS를 추출 할 수도 있습니다. 경로를 동적으로 가져 오지만 항목에 따라 CSS를 번들로 유지하려는 경우에 특히 유용합니다. 또한 ExtractTextPlugin과 관련된 CSS 복제 문제를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="01e4f01ee7386091dddf75b7d32bf4e02fd68bf4" translate="yes" xml:space="preserve">
          <source>You may have noticed that &lt;code&gt;index.html&lt;/code&gt; was created manually, even though it is now placed in the &lt;code&gt;dist&lt;/code&gt; directory. Later on in this guide, we will generate &lt;code&gt;index.html&lt;/code&gt; rather than edit it manually. Once this is done, it should be safe to empty the &lt;code&gt;dist&lt;/code&gt; directory and to regenerate all the files within it.</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; 이 현재 &lt;code&gt;dist&lt;/code&gt; 디렉토리 에 있지만 수동으로 생성 된 것을 눈치 채 셨을 것입니다 . 이 가이드의 뒷부분에서 수동으로 편집하는 대신 &lt;code&gt;index.html&lt;/code&gt; 을 생성 합니다. 이 작업이 완료되면 &lt;code&gt;dist&lt;/code&gt; 디렉토리 를 비우고 그 안에있는 모든 파일을 다시 생성 하는 것이 안전해야합니다. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="caead034ac4918fe71b09a769b5d0da39bf1f982" translate="yes" xml:space="preserve">
          <source>You may have noticed that few webpack configurations look exactly alike. This is because &lt;strong&gt;webpack's configuration file is a JavaScript file that exports a webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;configuration&lt;/a&gt;.&lt;/strong&gt; This configuration is then processed by webpack based upon its defined properties.</source>
          <target state="translated">You may have noticed that few webpack configurations look exactly alike. This is because &lt;strong&gt;webpack's configuration file is a JavaScript file that exports a webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;configuration&lt;/a&gt;.&lt;/strong&gt; This configuration is then processed by webpack based upon its defined properties.</target>
        </trans-unit>
        <trans-unit id="4ab74a6bd181314922cb11f1b00b83ab97895cba" translate="yes" xml:space="preserve">
          <source>You may have noticed that few webpack configurations look exactly alike. This is because &lt;strong&gt;webpack's configuration file is a JavaScript file that exports an object.&lt;/strong&gt; This object is then processed by webpack based upon its defined properties.</source>
          <target state="translated">거의 동일한 웹팩 구성이 거의 없음을 알 수 있습니다. 이는 &lt;strong&gt;웹팩의 구성 파일이 객체를 내보내는 JavaScript 파일&lt;/strong&gt; 이기 때문 &lt;strong&gt;입니다. &lt;/strong&gt;그런 다음이 객체는 정의 된 속성에 따라 웹팩에서 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="4d2e0f6efa99b91c9f3201c540a8cf5559639a4a" translate="yes" xml:space="preserve">
          <source>You may need to apply multiple shimming techniques to the same component.</source>
          <target state="translated">동일한 구성 요소에 여러 shimming 기술을 적용해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0ba57e1b1694ecb2ccd942cc07645773ae11d26" translate="yes" xml:space="preserve">
          <source>You may set name for a bundle using the &lt;code&gt;name&lt;/code&gt; options parameter. See &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; options 매개 변수를 사용하여 번들의 이름을 설정할 수 있습니다 . &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b1fe447a1107a77d12f3b8dee62427b88ae5f4e" translate="yes" xml:space="preserve">
          <source>You might be wondering how webpack and its plugins seem to &quot;know&quot; what files are being generated. The answer is in the manifest that webpack keeps to track how all the modules map to the output bundles. If you're interested in managing webpack's &lt;a href=&quot;../configuration/output&quot;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/a&gt; in other ways, the manifest would be a good place to start.</source>
          <target state="translated">웹팩과 플러그인이 어떤 파일이 생성되고 있는지 &quot;알고있는 것&quot;에 대해 궁금 할 것입니다. 정답은 webpack이 모든 모듈이 출력 번들에 매핑되는 방식을 추적한다는 점입니다. 다른 방법으로 웹팩의 &lt;a href=&quot;../configuration/output&quot;&gt; &lt;code&gt;output&lt;/code&gt; &lt;/a&gt; 을 관리하려는 경우 매니페스트를 시작하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="90558bee3690f8bd3c70e7eb292ce2174ee5ca61" translate="yes" xml:space="preserve">
          <source>You must install both the google-closure-compiler package as well as the closure-webpack-plugin.</source>
          <target state="translated">You must install both the google-closure-compiler package as well as the closure-webpack-plugin.</target>
        </trans-unit>
        <trans-unit id="6c226e3032853c9136efb09bb978ef3cc58876c4" translate="yes" xml:space="preserve">
          <source>You must load the generated chunk before the entry point:</source>
          <target state="translated">진입 점 전에 생성 된 청크를로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="46760b35e4b1e79efb1368444d395794ca3cd846" translate="yes" xml:space="preserve">
          <source>You must run the instrumentation as a post step</source>
          <target state="translated">인스 트루먼 테이션을 사후 단계로 실행해야합니다</target>
        </trans-unit>
        <trans-unit id="83a62b8c4b94146d3dba59226e32b2bf16471d5e" translate="yes" xml:space="preserve">
          <source>You need another option? Then you should think about:</source>
          <target state="translated">다른 옵션이 필요하십니까? 그런 다음에 대해 생각해야합니다.</target>
        </trans-unit>
        <trans-unit id="41db604d716a4704d075628d45b50206941f3163" translate="yes" xml:space="preserve">
          <source>You need to have only one &lt;strong&gt;default&lt;/strong&gt; export per style module</source>
          <target state="translated">스타일 모듈 당 하나의 &lt;strong&gt;기본&lt;/strong&gt; 내보내기 만 있으면됩니다.</target>
        </trans-unit>
        <trans-unit id="1c4f4ed4820a89b5aeafe108f449f54217a403c5" translate="yes" xml:space="preserve">
          <source>You need to have only one &lt;strong&gt;default&lt;/strong&gt; export per style module.</source>
          <target state="translated">You need to have only one &lt;strong&gt;default&lt;/strong&gt; export per style module.</target>
        </trans-unit>
        <trans-unit id="d438915a914dd1097bd719a48253e65d65af9c6b" translate="yes" xml:space="preserve">
          <source>You should configure your server to disallow access to the Source Map file for normal users!</source>
          <target state="translated">일반 사용자가 소스 맵 파일에 액세스하지 못하도록 서버를 구성해야합니다!</target>
        </trans-unit>
        <trans-unit id="6bba09816bef371ccb661f4e71d7dcb1bdfcd71b" translate="yes" xml:space="preserve">
          <source>You should not deploy the Source Map file to the webserver. Instead only use it for error report tooling.</source>
          <target state="translated">소스 맵 파일을 웹 서버에 배포해서는 안됩니다. 대신 오류보고 도구에만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f1f33d454440a9fe781bb8ea3510ce47d03bfc40" translate="yes" xml:space="preserve">
          <source>You should not use &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; plugin if you are using a &lt;code&gt;webpack-dev-server&lt;/code&gt;. &lt;code&gt;webpack-dev-server&lt;/code&gt; enables / disables HMR using &lt;code&gt;hot&lt;/code&gt; option.</source>
          <target state="translated">You should not use &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; plugin if you are using a &lt;code&gt;webpack-dev-server&lt;/code&gt; . &lt;code&gt;webpack-dev-server&lt;/code&gt; enables / disables HMR using &lt;code&gt;hot&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="151ba3065308dd0a485f1a2063af84aa00743469" translate="yes" xml:space="preserve">
          <source>You should only care about them if you are building your own compiler based on webpack, or introspect the internals.</source>
          <target state="translated">웹팩을 기반으로 자체 컴파일러를 작성하거나 내부를 검사하는 경우에만주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="aab8326932798418e8007970af9e08cd5c726d7d" translate="yes" xml:space="preserve">
          <source>You should tell the loader about all your locales, if you want to load them once and than want to use them synchronous.</source>
          <target state="translated">로케일을 한 번만로드하고 동기식으로 사용하려는 경우 모든 로케일에 대해 로더에 알려 주어야합니다.</target>
        </trans-unit>
        <trans-unit id="8b506489904e2c8198286d0ffe496aaf532bde7b" translate="yes" xml:space="preserve">
          <source>You will be disrupted by this first issue. It is natural to expect relative references to be resolved against the &lt;code&gt;.sass&lt;/code&gt;/&lt;code&gt;.scss&lt;/code&gt; file in which they are specified (like in regular &lt;code&gt;.css&lt;/code&gt; files).</source>
          <target state="translated">You will be disrupted by this first issue. It is natural to expect relative references to be resolved against the &lt;code&gt;.sass&lt;/code&gt; / &lt;code&gt;.scss&lt;/code&gt; file in which they are specified (like in regular &lt;code&gt;.css&lt;/code&gt; files).</target>
        </trans-unit>
        <trans-unit id="97ada6cfc932937e376b81eab73f25705532602a" translate="yes" xml:space="preserve">
          <source>You will need to exclude them form &lt;code&gt;babel-loader&lt;/code&gt;.</source>
          <target state="translated">You will need to exclude them form &lt;code&gt;babel-loader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73b0640ef36a07d01b3db0833bab58e4dfbf9e7c" translate="yes" xml:space="preserve">
          <source>You will see all generated code of a chunk in a single blob of code. This is the raw output file without any devtooling support</source>
          <target state="translated">단일 코드 blob에서 생성 된 모든 청크 코드를 볼 수 있습니다. 이것은 devtooling 지원이없는 원시 출력 파일입니다.</target>
        </trans-unit>
        <trans-unit id="e849badca627cbb8a624fefd4b881b45b7f9c13d" translate="yes" xml:space="preserve">
          <source>You will see generated code after the preprocessing by loaders but before additional webpack transformations. Only source lines will be mapped and column information will be discarded resp. not generated. This prevents setting breakpoints in the middle of lines which doesn't work together with minimizer.</source>
          <target state="translated">로더에 의한 전처리 후 추가 웹팩 변환 전에 생성 된 코드가 표시됩니다. 소스 라인 만 매핑되고 열 정보는 폐기됩니다. 생성되지 않았습니다. 이것은 최소화 기와 함께 작동하지 않는 줄 중간에 중단 점을 설정하는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="9c34d362c296fb0b44a68c987acdaaacda784985" translate="yes" xml:space="preserve">
          <source>You will see the generated code, but each module is shown as separate code file in browser devtools.</source>
          <target state="translated">생성 된 코드가 표시되지만 각 모듈은 브라우저 devtools에서 별도의 코드 파일로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f7858e086044ed4af25c6e2628f13796a5941cd4" translate="yes" xml:space="preserve">
          <source>You will see the original code that you wrote, assuming all loaders support SourceMapping.</source>
          <target state="translated">모든 로더가 SourceMapping을 지원한다고 가정하면 작성한 원본 코드가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="dc79f92d0f90b7d7fd05bbacfa1512ceefd1071f" translate="yes" xml:space="preserve">
          <source>You will see the original code that you wrote, assuming all loaders support SourceMapping. Only source lines will be mapped and column information will be discarded resp. not generated. This prevents setting breakpoints in the middle of lines which doesn't work together with minimizer.</source>
          <target state="translated">모든 로더가 SourceMapping을 지원한다고 가정하면 작성한 원본 코드가 표시됩니다. 소스 라인 만 매핑되고 열 정보는 폐기됩니다. 생성되지 않았습니다. 이것은 최소화 기와 함께 작동하지 않는 줄 중간에 중단 점을 설정하는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="a945692e30f1f669d0f6ce74ed667c2c8d6d8d70" translate="yes" xml:space="preserve">
          <source>You won't be able to exclude them from bundle by specifying &lt;code&gt;library&lt;/code&gt; in the externals. You'll either need to exclude them one by one or by using a regular expression.</source>
          <target state="translated">외부에서 &lt;code&gt;library&lt;/code&gt; 를 지정하여 번들에서 제외 할 수 없습니다 . 하나씩 또는 정규식을 사용하여 제외해야합니다.</target>
        </trans-unit>
        <trans-unit id="b172d8edd6418e7ca11958bd5ed9c768bf6272c3" translate="yes" xml:space="preserve">
          <source>You won't be able to exclude them from the bundle by specifying &lt;code&gt;library&lt;/code&gt; in the externals. You'll either need to exclude them one by one or by using a regular expression.</source>
          <target state="translated">You won't be able to exclude them from the bundle by specifying &lt;code&gt;library&lt;/code&gt; in the externals. You'll either need to exclude them one by one or by using a regular expression.</target>
        </trans-unit>
        <trans-unit id="98c1d36cf70d0f662490e7844d0794a86be45ed9" translate="yes" xml:space="preserve">
          <source>You'll need to install &lt;code&gt;@babel/core&lt;/code&gt; and &lt;code&gt;@babel/preset-env&lt;/code&gt; and then create a configuration file:</source>
          <target state="translated">You'll need to install &lt;code&gt;@babel/core&lt;/code&gt; and &lt;code&gt;@babel/preset-env&lt;/code&gt; and then create a configuration file:</target>
        </trans-unit>
        <trans-unit id="92ed09242787401791b35f69f83606672c585cc2" translate="yes" xml:space="preserve">
          <source>You'll need to install &lt;code&gt;autoprefixer&lt;/code&gt;:</source>
          <target state="translated">You'll need to install &lt;code&gt;autoprefixer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e29df5b5bfe9227c2d41134c2956d7377a6c4331" translate="yes" xml:space="preserve">
          <source>You'll need to install &lt;code&gt;postcss-js&lt;/code&gt;:</source>
          <target state="translated">You'll need to install &lt;code&gt;postcss-js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="145e9f615f94ff70751f14de5858c108969d9832" translate="yes" xml:space="preserve">
          <source>You'll need to install &lt;code&gt;postcss-preset-env&lt;/code&gt;:</source>
          <target state="translated">You'll need to install &lt;code&gt;postcss-preset-env&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="54cfd50d0471eed12bca94ed307eee81db8ca717" translate="yes" xml:space="preserve">
          <source>You'll need to install &lt;code&gt;sugarss&lt;/code&gt;:</source>
          <target state="translated">You'll need to install &lt;code&gt;sugarss&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6382546a69752ef62a153bfa771bf978f8839270" translate="yes" xml:space="preserve">
          <source>Your output may vary a bit, but if the build is successful then you are good to go.</source>
          <target state="translated">Your output may vary a bit, but if the build is successful then you are good to go.</target>
        </trans-unit>
        <trans-unit id="bd7e6bc12c4e4243a6724f828876d6d9b71a86dd" translate="yes" xml:space="preserve">
          <source>Your output may vary a bit, but if the build is successful then you are good to go. Also, don't worry about the warning, we'll tackle that later.</source>
          <target state="translated">출력은 약간 다를 수 있지만 빌드가 성공하면 갈 수 있습니다. 또한 경고에 대해 걱정하지 마십시오. 나중에 해결하겠습니다.</target>
        </trans-unit>
        <trans-unit id="9d93847251fd962634d2c1b682d6f42867f315d9" translate="yes" xml:space="preserve">
          <source>ZopfliWebpackPlugin</source>
          <target state="translated">ZopfliWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="2c7b84429f853fb7b4a3f3a2f7773e395410ff9f" translate="yes" xml:space="preserve">
          <source>[![chat][chat]][chat-url]</source>
          <target state="translated">[![chat][chat]][chat-url]</target>
        </trans-unit>
        <trans-unit id="4f4d3377b967788bdef63fa1f81110898d7a9435" translate="yes" xml:space="preserve">
          <source>[![npm][npm]][npm-url] [![deps][deps]][deps-url] [![tests][tests]][tests-url] [![coverage][cover]][cover-url] [![chat][chat]][chat-url]</source>
          <target state="translated">[! [npm] [npm]] [npm-url] [! [deps] [deps]] [deps-url] [! [tests] [tests]] [tests-url] [! [coverage] [cover] ] [표지 URL] [! [채팅] [채팅]] [채팅 URL]</target>
        </trans-unit>
        <trans-unit id="4fd70dc0cedd137cd9ba1362724fad4dc3f5c297" translate="yes" xml:space="preserve">
          <source>[![npm][npm]][npm-url] [![node][node]][node-url] [![deps][deps]][deps-url]</source>
          <target state="translated">[! [npm] [npm]] [npm-url] [! [노드] [노드]] [노드 URL] [! [deps] [deps]] [deps-url]</target>
        </trans-unit>
        <trans-unit id="402583b68a7d2ac5e67d347a26b94ede089f4184" translate="yes" xml:space="preserve">
          <source>[![npm][npm]][npm-url] [![node][node]][node-url] [![deps][deps]][deps-url] [![tests][tests]][tests-url] [![chat][chat]][chat-url]</source>
          <target state="translated">[! [npm] [npm]] [npm-url] [! [node] [node]] [node-url] [! [deps] [deps]] [deps-url] [! [tests] [테스트] ] [테스트 URL] [! [채팅] [채팅]] [채팅 URL]</target>
        </trans-unit>
        <trans-unit id="811c0a8ca534a3d58f92266564e43579526291e3" translate="yes" xml:space="preserve">
          <source>[![npm][npm]][npm-url] [![node][node]][node-url] [![deps][deps]][deps-url] [![tests][tests]][tests-url] [![chat][chat]][chat-url] [![size][size]][size-url]</source>
          <target state="translated">[! [npm] [npm]] [npm-url] [! [node] [node]] [node-url] [! [deps] [deps]] [deps-url] [! [tests] [테스트] ] [tests-url] [! [chat] [chat]] [chat-url] [! [size] [size]] [size-url]</target>
        </trans-unit>
        <trans-unit id="749837cb341d8e5515ab8aa6b3e21db80cd6596f" translate="yes" xml:space="preserve">
          <source>[![npm][npm]][npm-url] [![node][node]][node-url] [![deps][deps]][deps-url] [![tests][tests]][tests-url] [![cover][cover]][cover-url] [![chat][chat]][chat-url] [![size][size]][size-url]</source>
          <target state="translated">[! [npm] [npm]] [npm-url] [! [node] [node]] [node-url] [! [deps] [deps]] [deps-url] [! [tests] [테스트] ] [tests-url] [! [cover] [cover]] [cover-url] [! [chat] [chat]] [chat-url] [! [size] [size]] [size-url]</target>
        </trans-unit>
        <trans-unit id="9fcf7ff963a8a39a9042cb124c3d3c212277aaee" translate="yes" xml:space="preserve">
          <source>[Extract CSS][ExtractPlugin]</source>
          <target state="translated">[추출 CSS] [ExtractPlugin]</target>
        </trans-unit>
        <trans-unit id="d29bb6f279da5f69ea6de73ff6ede025081163f2" translate="yes" xml:space="preserve">
          <source>[absolute-resource-path]</source>
          <target state="translated">[absolute-resource-path]</target>
        </trans-unit>
        <trans-unit id="19629e812f1e956de8015880765b39e7a5c62e09" translate="yes" xml:space="preserve">
          <source>[all-loaders]</source>
          <target state="translated">[all-loaders]</target>
        </trans-unit>
        <trans-unit id="62059d5439fae53b12a44891375c426abf2d129b" translate="yes" xml:space="preserve">
          <source>[base]</source>
          <target state="translated">[base]</target>
        </trans-unit>
        <trans-unit id="3f59bf701e1ab11f381ca33f9f8eacc817f31df8" translate="yes" xml:space="preserve">
          <source>[chunkhash]</source>
          <target state="translated">[chunkhash]</target>
        </trans-unit>
        <trans-unit id="22bf8fb105dcd16ec18edf36e9c54bc4a9a86968" translate="yes" xml:space="preserve">
          <source>[contenthash]</source>
          <target state="translated">[contenthash]</target>
        </trans-unit>
        <trans-unit id="bc1faa71b468fb2b37dba5b8fc580b5adb689758" translate="yes" xml:space="preserve">
          <source>[ext]</source>
          <target state="translated">[ext]</target>
        </trans-unit>
        <trans-unit id="85b1884d520f3544fc1aca30484848f9a6fa5562" translate="yes" xml:space="preserve">
          <source>[file]</source>
          <target state="translated">[file]</target>
        </trans-unit>
        <trans-unit id="67be6d73c37ca7b75b5c451ba852a7db964bfe5a" translate="yes" xml:space="preserve">
          <source>[filebase]</source>
          <target state="translated">[filebase]</target>
        </trans-unit>
        <trans-unit id="ed4cffba70ce06cc2afaa22f24e8e7fde5ef5a9f" translate="yes" xml:space="preserve">
          <source>[fragment]</source>
          <target state="translated">[fragment]</target>
        </trans-unit>
        <trans-unit id="ec7656fafc2a7fc98f1d55b931f9e1624eca9978" translate="yes" xml:space="preserve">
          <source>[fullhash]</source>
          <target state="translated">[fullhash]</target>
        </trans-unit>
        <trans-unit id="9617e60a498b5f26f42196f0c6cc08db25a6cc6c" translate="yes" xml:space="preserve">
          <source>[function]</source>
          <target state="translated">[function]</target>
        </trans-unit>
        <trans-unit id="991feb81eae72df1c439757b479d831cdd83ce72" translate="yes" xml:space="preserve">
          <source>[hash]</source>
          <target state="translated">[hash]</target>
        </trans-unit>
        <trans-unit id="8b49952ceb43b5b1df5b07d332a546644384f1e5" translate="yes" xml:space="preserve">
          <source>[id]</source>
          <target state="translated">[id]</target>
        </trans-unit>
        <trans-unit id="620e1199ee26f17bfe8e0b57f69ad2fc22509d06" translate="yes" xml:space="preserve">
          <source>[loaders]</source>
          <target state="translated">[loaders]</target>
        </trans-unit>
        <trans-unit id="8af520ee68925a025211433b1341cc4ed55993b6" translate="yes" xml:space="preserve">
          <source>[modulehash]</source>
          <target state="translated">[modulehash]</target>
        </trans-unit>
        <trans-unit id="685b65574c92ceaf49dacb0cba7d7b979d631ced" translate="yes" xml:space="preserve">
          <source>[moduleid]</source>
          <target state="translated">[moduleid]</target>
        </trans-unit>
        <trans-unit id="48528972358e2c6f3b2abf88732e7f201b04e28c" translate="yes" xml:space="preserve">
          <source>[name]</source>
          <target state="translated">[name]</target>
        </trans-unit>
        <trans-unit id="ae0d58e3312ed8d9a2b9b1c9516ecb9adce14bbc" translate="yes" xml:space="preserve">
          <source>[name].js</source>
          <target state="translated">[name].js</target>
        </trans-unit>
        <trans-unit id="f0d3fa66277947abb49fd657977342aa04e9ca76" translate="yes" xml:space="preserve">
          <source>[name].map or [outputFilename].map</source>
          <target state="translated">[name] .map 또는 [outputFilename] .map</target>
        </trans-unit>
        <trans-unit id="f9767e8a57135ddb19f5f410427c94b407e8d96d" translate="yes" xml:space="preserve">
          <source>[namespace]</source>
          <target state="translated">[namespace]</target>
        </trans-unit>
        <trans-unit id="0c784e2f28324de18efaeb3bac3d938a3ea2bda1" translate="yes" xml:space="preserve">
          <source>[path]</source>
          <target state="translated">[path]</target>
        </trans-unit>
        <trans-unit id="047808b83e7198e67c0d028a35c37f0ce7bc4718" translate="yes" xml:space="preserve">
          <source>[query]</source>
          <target state="translated">[query]</target>
        </trans-unit>
        <trans-unit id="41c4b28957b4b0cdc1756cd61b551b99a18da11c" translate="yes" xml:space="preserve">
          <source>[resource-path]</source>
          <target state="translated">[resource-path]</target>
        </trans-unit>
        <trans-unit id="5d881a44cab78dbde51559f1ad136ce7c5884366" translate="yes" xml:space="preserve">
          <source>[resource]</source>
          <target state="translated">[resource]</target>
        </trans-unit>
        <trans-unit id="61ee483040e720bb27325a303e839d83e2b4ba58" translate="yes" xml:space="preserve">
          <source>[url]</source>
          <target state="translated">[url]</target>
        </trans-unit>
        <trans-unit id="9deb9f81529b6761273d4fbc12d3e8f59045d593" translate="yes" xml:space="preserve">
          <source>[x] Auto-installs &lt;code&gt;.babelrc&lt;/code&gt; plugins &amp;amp; presets.</source>
          <target state="translated">[x] &lt;code&gt;.babelrc&lt;/code&gt; 플러그인 및 사전 설정을 자동 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="ac2085b04d45c3541a85f554d751955f5f07aa31" translate="yes" xml:space="preserve">
          <source>[x] Auto-installs missing &lt;code&gt;peerDependencies&lt;/code&gt;. (e.g. &lt;code&gt;@cycle/core&lt;/code&gt; will automatically install &lt;code&gt;rx@*&lt;/code&gt;)</source>
          <target state="translated">[x] 누락 된 &lt;code&gt;peerDependencies&lt;/code&gt; 를 자동 설치합니다 . (예 : &lt;code&gt;@cycle/core&lt;/code&gt; 는 자동으로 &lt;code&gt;rx@*&lt;/code&gt; 설치합니다 )</target>
        </trans-unit>
        <trans-unit id="f07089d5e970b535ed16c618a2daaed2726a9045" translate="yes" xml:space="preserve">
          <source>[x] Supports CSS imports. (e.g. &lt;code&gt;@import &quot;~bootstrap&quot;&lt;/code&gt;)</source>
          <target state="translated">[x] CSS 가져 오기를 지원합니다. (예 : &lt;code&gt;@import &quot;~bootstrap&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a86bc5eec04895cd1b753f9892a247af868ddc8c" translate="yes" xml:space="preserve">
          <source>[x] Supports Dot-delimited packages. (e.g. &lt;code&gt;lodash.capitalize&lt;/code&gt;)</source>
          <target state="translated">[x] 도트로 구분 된 패키지를 지원합니다. (예 : &lt;code&gt;lodash.capitalize&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d1a4f8bbf82ee7d1f3f74953ee9de47a68214dc7" translate="yes" xml:space="preserve">
          <source>[x] Supports Namespaced packages. (e.g. &lt;code&gt;@cycle/dom&lt;/code&gt;)</source>
          <target state="translated">[x] 네임 스페이스 패키지를 지원합니다. (예 : &lt;code&gt;@cycle/dom&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2e0840b104754ea445def90d81183c350b00268e" translate="yes" xml:space="preserve">
          <source>[x] Supports Webpack loaders. (e.g. &lt;code&gt;babel-loader&lt;/code&gt;, &lt;code&gt;file-loader&lt;/code&gt;, etc.)</source>
          <target state="translated">[x] 웹팩 로더를 지원합니다. (예 : &lt;code&gt;babel-loader&lt;/code&gt; , &lt;code&gt;file-loader&lt;/code&gt; 등)</target>
        </trans-unit>
        <trans-unit id="4ef2d604c313fc275f413b0c1f8bf8c157f2d2e5" translate="yes" xml:space="preserve">
          <source>[x] Supports Webpack's &lt;code&gt;resolve.alias&lt;/code&gt; &amp;amp; &lt;code&gt;resolve.root&lt;/code&gt; configuration. (e.g. &lt;code&gt;require(&quot;react&quot;)&lt;/code&gt; can alias to &lt;code&gt;react-lite&lt;/code&gt;)</source>
          <target state="translated">[x] Webpack의 &lt;code&gt;resolve.alias&lt;/code&gt; &amp;amp; &lt;code&gt;resolve.root&lt;/code&gt; 구성을 지원 합니다. (예 : &lt;code&gt;require(&quot;react&quot;)&lt;/code&gt; 는 &lt;code&gt;react-lite&lt;/code&gt; 별명을 지정할 수 있습니다 )</target>
        </trans-unit>
        <trans-unit id="0adf984661373c49d08082a56961c84351781e4a" translate="yes" xml:space="preserve">
          <source>[x] Supports both ES5 &amp;amp; ES6 Modules. (e.g. &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;)</source>
          <target state="translated">[x] ES5 및 ES6 모듈을 모두 지원합니다. (예 : &lt;code&gt;require&lt;/code&gt; , &lt;code&gt;import&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="60e0427c6827151872d2dc06390cf8859e808275" translate="yes" xml:space="preserve">
          <source>[x] Supports inline Webpack loaders. (e.g. &lt;code&gt;require(&quot;bundle?lazy!./App&quot;&lt;/code&gt;)</source>
          <target state="translated">[x] 인라인 웹팩 로더를 지원합니다. (예 : &lt;code&gt;require(&quot;bundle?lazy!./App&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3949039a970e15173d308e03bd651e45d90f8bd6" translate="yes" xml:space="preserve">
          <source>[x] Works with both Webpack &lt;code&gt;^v1.12.0&lt;/code&gt; and &lt;code&gt;^2.1.0-beta.0&lt;/code&gt;.</source>
          <target state="translated">[x] &lt;code&gt;^v1.12.0&lt;/code&gt; 및 &lt;code&gt;^2.1.0-beta.0&lt;/code&gt; 모두에서 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="53f7bc27821060cd947c7d7099aab776de72eb98" translate="yes" xml:space="preserve">
          <source>__webpack_base_uri__ (webpack-specific)</source>
          <target state="translated">__webpack_base_uri __ (웹팩 관련)</target>
        </trans-unit>
        <trans-unit id="8185357a23b9bade6c9e87f003bcfdc79ec92d79" translate="yes" xml:space="preserve">
          <source>__webpack_chunk_load__ (webpack-specific)</source>
          <target state="translated">__webpack_chunk_load __ (웹팩 관련)</target>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="translated">`</target>
        </trans-unit>
        <trans-unit id="2988fb03cce6c67309f09b2ed75db0b2daaf7038" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;.postcss.json&lt;/code&gt;, &lt;code&gt;.postcss.yaml&lt;/code&gt;, &lt;code&gt;.postcss.yml&lt;/code&gt;, &lt;code&gt;.postcss.js&lt;/code&gt;, or &lt;code&gt;.postcss.cjs&lt;/code&gt; file</source>
          <target state="translated">a &lt;code&gt;.postcss.json&lt;/code&gt; , &lt;code&gt;.postcss.yaml&lt;/code&gt; , &lt;code&gt;.postcss.yml&lt;/code&gt; , &lt;code&gt;.postcss.js&lt;/code&gt; , or &lt;code&gt;.postcss.cjs&lt;/code&gt; file</target>
        </trans-unit>
        <trans-unit id="8bc53d681f3e72020a52a30add2263250477ea1c" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;.postcssrc.json&lt;/code&gt;, &lt;code&gt;.postcssrc.yaml&lt;/code&gt;, &lt;code&gt;.postcssrc.yml&lt;/code&gt;, &lt;code&gt;.postcssrc.js&lt;/code&gt;, or &lt;code&gt;.postcssrc.cjs&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;.postcssrc.json&lt;/code&gt; 는 , &lt;code&gt;.postcssrc.yaml&lt;/code&gt; , &lt;code&gt;.postcssrc.yml&lt;/code&gt; 는 , &lt;code&gt;.postcssrc.js&lt;/code&gt; 는 , 또는 &lt;code&gt;.postcssrc.cjs&lt;/code&gt; 파일을</target>
        </trans-unit>
        <trans-unit id="fe8d3be5143c15459742e60e2d61f939df9eccfe" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;.postcssrc&lt;/code&gt; file in JSON or YAML format</source>
          <target state="translated">a &lt;code&gt;.postcssrc&lt;/code&gt; file in JSON or YAML format</target>
        </trans-unit>
        <trans-unit id="6b4fcd2526a7d6a32d5596428825ccc069e923a9" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;postcss.config.js&lt;/code&gt; or &lt;code&gt;postcss.config.cjs&lt;/code&gt; CommonJS module exporting an object (&lt;strong&gt;recommended&lt;/strong&gt;)</source>
          <target state="translated">a &lt;code&gt;postcss.config.js&lt;/code&gt; or &lt;code&gt;postcss.config.cjs&lt;/code&gt; CommonJS module exporting an object (&lt;strong&gt;recommended&lt;/strong&gt;)</target>
        </trans-unit>
        <trans-unit id="1661cb4a74f008d82bc1dd4959d8ef6817ee7310" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;postcss&lt;/code&gt; property in &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">a &lt;code&gt;postcss&lt;/code&gt; property in &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68981685d8178272e33ecc83e5e86ff4bff19801" translate="yes" xml:space="preserve">
          <source>a dependency is currently compiling or invalid</source>
          <target state="translated">종속성이 현재 컴파일 중이거나 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="8a202e6e010db0dca4fec2ab58d674bc641bdfb8" translate="yes" xml:space="preserve">
          <source>account.css</source>
          <target state="translated">account.css</target>
        </trans-unit>
        <trans-unit id="279d744d991943afa0e441f96d36b4209dd5403f" translate="yes" xml:space="preserve">
          <source>account.js</source>
          <target state="translated">account.js</target>
        </trans-unit>
        <trans-unit id="fa123dc22cf915c5c7a5b997bd5d37d4f32926dc" translate="yes" xml:space="preserve">
          <source>addChunk</source>
          <target state="translated">addChunk</target>
        </trans-unit>
        <trans-unit id="669b22ae0783fc8ec2737c7bf58858729df0c062" translate="yes" xml:space="preserve">
          <source>addChunkInGroup</source>
          <target state="translated">addChunkInGroup</target>
        </trans-unit>
        <trans-unit id="6dd94caa71e0799d26dcf23069823100151e84f2" translate="yes" xml:space="preserve">
          <source>addEntry</source>
          <target state="translated">addEntry</target>
        </trans-unit>
        <trans-unit id="244a4e40880aa9e1688c1ad2f864c90ac3e6a5a6" translate="yes" xml:space="preserve">
          <source>addModule</source>
          <target state="translated">addModule</target>
        </trans-unit>
        <trans-unit id="c477c001a53cd24229369d55f2dfde4f4c74addc" translate="yes" xml:space="preserve">
          <source>addModuleDependencies</source>
          <target state="translated">addModuleDependencies</target>
        </trans-unit>
        <trans-unit id="8a396033c7ac748138a0a502f095a45ae6e9f866" translate="yes" xml:space="preserve">
          <source>additionalAssets*</source>
          <target state="translated">additionalAssets*</target>
        </trans-unit>
        <trans-unit id="9564ed86a4dbf91bc8fb3d526929a73f19faaf26" translate="yes" xml:space="preserve">
          <source>additionalChunkAssets*</source>
          <target state="translated">additionalChunkAssets*</target>
        </trans-unit>
        <trans-unit id="ff96a497376a63590ba54c7b51e264decd1fe3ae" translate="yes" xml:space="preserve">
          <source>advancedOptimizeModuleOrder*</source>
          <target state="translated">advancedOptimizeModuleOrder*</target>
        </trans-unit>
        <trans-unit id="d97b05416544be6ebfa0963613574aa37fcadfff" translate="yes" xml:space="preserve">
          <source>after the loader runs it becomes</source>
          <target state="translated">로더가 실행 된 후</target>
        </trans-unit>
        <trans-unit id="721df95148f28f8a4a4c112505f41eba73c2a94c" translate="yes" xml:space="preserve">
          <source>afterEmit*</source>
          <target state="translated">afterEmit*</target>
        </trans-unit>
        <trans-unit id="0afe3f93060e91a1077d7b9719f25adc694b5eeb" translate="yes" xml:space="preserve">
          <source>afterHash*</source>
          <target state="translated">afterHash*</target>
        </trans-unit>
        <trans-unit id="c9f35f428051490529fbb695458bf76f6008cee3" translate="yes" xml:space="preserve">
          <source>afterOptimizeAssets*</source>
          <target state="translated">afterOptimizeAssets*</target>
        </trans-unit>
        <trans-unit id="799eac0c7a229b7a213932902f0f6085624a9ee6" translate="yes" xml:space="preserve">
          <source>afterOptimizeChunkAssets*</source>
          <target state="translated">afterOptimizeChunkAssets*</target>
        </trans-unit>
        <trans-unit id="fbc5033384b9cfe5e83a1d3e9fefd3659a5adeeb" translate="yes" xml:space="preserve">
          <source>afterOptimizeChunkIds*</source>
          <target state="translated">afterOptimizeChunkIds*</target>
        </trans-unit>
        <trans-unit id="0eed8752146bd7cc439f32b81f675ee9637e5e0b" translate="yes" xml:space="preserve">
          <source>afterOptimizeChunkModules*</source>
          <target state="translated">afterOptimizeChunkModules*</target>
        </trans-unit>
        <trans-unit id="eff1acbbfd3fcd800b8e23d0e74eba2d8a72af86" translate="yes" xml:space="preserve">
          <source>afterOptimizeChunks*</source>
          <target state="translated">afterOptimizeChunks*</target>
        </trans-unit>
        <trans-unit id="3617c69a739f5cac9d1b60fcf137baa7822570d1" translate="yes" xml:space="preserve">
          <source>afterOptimizeDependencies*</source>
          <target state="translated">afterOptimizeDependencies*</target>
        </trans-unit>
        <trans-unit id="5da41e2c92217056c895496d53135c43eb152fd1" translate="yes" xml:space="preserve">
          <source>afterOptimizeModuleIds*</source>
          <target state="translated">afterOptimizeModuleIds*</target>
        </trans-unit>
        <trans-unit id="d198289dd33a1d296ca11270bf6a3a12367bf60e" translate="yes" xml:space="preserve">
          <source>afterOptimizeModules*</source>
          <target state="translated">afterOptimizeModules*</target>
        </trans-unit>
        <trans-unit id="a706dfed07e538075c9830050de973400a3334b9" translate="yes" xml:space="preserve">
          <source>afterOptimizeTree*</source>
          <target state="translated">afterOptimizeTree*</target>
        </trans-unit>
        <trans-unit id="744bac2ad5e7110b6f573455b7e40d40c0c85879" translate="yes" xml:space="preserve">
          <source>afterResolve</source>
          <target state="translated">afterResolve</target>
        </trans-unit>
        <trans-unit id="30bd92c5f9ca84a0096262c7173f2c75deed5a3a" translate="yes" xml:space="preserve">
          <source>afterSeal*</source>
          <target state="translated">afterSeal*</target>
        </trans-unit>
        <trans-unit id="15acf2518244bf102b70a9585dd8764a43e58849" translate="yes" xml:space="preserve">
          <source>alternative calls</source>
          <target state="translated">대체 전화</target>
        </trans-unit>
        <trans-unit id="7eeb36d238fe01471d027b5bfc2cb90f3c2e5b6e" translate="yes" xml:space="preserve">
          <source>alternativeRequests</source>
          <target state="translated">alternativeRequests</target>
        </trans-unit>
        <trans-unit id="1ea0b794e1acd33fc0e733b79c72bf9252569c11" translate="yes" xml:space="preserve">
          <source>amd</source>
          <target state="translated">amd</target>
        </trans-unit>
        <trans-unit id="d2f899e219749cf97ad2a89e84807049ac0aae2a" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;../guides/asset-modules&quot;&gt;&lt;code&gt;asset modules&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">및 &lt;a href=&quot;../guides/asset-modules&quot;&gt; &lt;code&gt;asset modules&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3588958c84036c085943e6745c5d672a856de1f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;import&lt;/code&gt; it so as to include it in our main bundle:</source>
          <target state="translated">및 &lt;code&gt;import&lt;/code&gt; 우리의 주요 번들에 포함하도록 그것을 :</target>
        </trans-unit>
        <trans-unit id="4f9bae135df2af57e1f5d6e0b651d465e82591fd" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;length&lt;/code&gt;, the length of the hash in chars</source>
          <target state="translated">및 &lt;code&gt;length&lt;/code&gt; , 문자의 해시의 길이</target>
        </trans-unit>
        <trans-unit id="523b31e5c39b84d98dd086d8c78fe9a77e2de2c2" translate="yes" xml:space="preserve">
          <source>and all their dependencies, except &lt;code&gt;./app.jsx&lt;/code&gt;</source>
          <target state="translated">and all their dependencies, except &lt;code&gt;./app.jsx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fd460853d64ad0e4ec9f4be0e57bd362fea8cb5" translate="yes" xml:space="preserve">
          <source>and if you'd like to exclude raw assets from being parsed by other loaders, use a negative lookahead:</source>
          <target state="translated">다른 로더에 의해 파싱되지 않도록 원시 자산을 제외하려면 부정적인 예측을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fd49a20984578292c09c14e3b4333ab39cf20f57" translate="yes" xml:space="preserve">
          <source>and in the webpack configuration:</source>
          <target state="translated">웹팩 구성에서 :</target>
        </trans-unit>
        <trans-unit id="263912cd04e981299a0b4a997ee36e775eb3645d" translate="yes" xml:space="preserve">
          <source>and then after a minification pass results in:</source>
          <target state="translated">그리고 축소 패스 후 다음과 같은 결과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c95140b09a780683661c547c5e1922d54b4fb0cc" translate="yes" xml:space="preserve">
          <source>and then proceed to write your configuration:</source>
          <target state="translated">그런 다음 구성을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7081003beba78ff21e15cb710769d76a1ef133b4" translate="yes" xml:space="preserve">
          <source>and works faster.</source>
          <target state="translated">and works faster.</target>
        </trans-unit>
        <trans-unit id="43af3d7b00495fb95684ae9c86ed246986e8a3e8" translate="yes" xml:space="preserve">
          <source>anonymous chunk: &lt;code&gt;b&lt;/code&gt;</source>
          <target state="translated">익명 청크 : &lt;code&gt;b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0db3d1830e79499ab126f91b7147b6bfafe04861" translate="yes" xml:space="preserve">
          <source>anonymous chunk: &lt;code&gt;c&lt;/code&gt;</source>
          <target state="translated">익명 청크 : &lt;code&gt;c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd26ce1d34aa6a6e34c6e6b94cdf3d95f6fd2a06" translate="yes" xml:space="preserve">
          <source>any other options allowed in a &lt;code&gt;webpack.config.js&lt;/code&gt;....</source>
          <target state="translated">&lt;code&gt;webpack.config.js&lt;/code&gt; 에서 허용되는 다른 옵션 ....</target>
        </trans-unit>
        <trans-unit id="90d5eea4263ab1720ba703181a9b7d5945e559fb" translate="yes" xml:space="preserve">
          <source>any string: the value to set &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to.</source>
          <target state="translated">모든 문자열 : &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 를 설정할 값 입니다.</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="9009b730f26e909d049a4a0c3612e3c61160f37f" translate="yes" xml:space="preserve">
          <source>assign</source>
          <target state="translated">assign</target>
        </trans-unit>
        <trans-unit id="f39f843b0272ada2ae79839655971c27c1a7f53d" translate="yes" xml:space="preserve">
          <source>assignDepth</source>
          <target state="translated">assignDepth</target>
        </trans-unit>
        <trans-unit id="c4407719eccaafa9bde053b1db60d6c0d61f7672" translate="yes" xml:space="preserve">
          <source>assigned</source>
          <target state="translated">assigned</target>
        </trans-unit>
        <trans-unit id="f71b715736823177d9a707372fbd78c1963c5431" translate="yes" xml:space="preserve">
          <source>babel is injecting helpers into each file and bloating my code!</source>
          <target state="translated">babel은 각 파일에 도우미를 주입하고 내 코드를 팽만하게합니다!</target>
        </trans-unit>
        <trans-unit id="e8dcfdd3317d0d09652e655a855e91efdab360d1" translate="yes" xml:space="preserve">
          <source>babel uses very small helpers for common functions such as &lt;code&gt;_extend&lt;/code&gt;. By default this will be added to every file that requires it.</source>
          <target state="translated">babel은 &lt;code&gt;_extend&lt;/code&gt; 와 같은 일반적인 기능에 매우 작은 도우미를 사용합니다 . 기본적으로 이것이 필요한 모든 파일에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="d87d642da0a52a75751d89abbf65b8dfba8be799" translate="yes" xml:space="preserve">
          <source>babel-loader</source>
          <target state="translated">babel-loader</target>
        </trans-unit>
        <trans-unit id="6e033238dccc8d189908c516271f4a7b743ddc4a" translate="yes" xml:space="preserve">
          <source>babel-loader is slow!</source>
          <target state="translated">바벨 로더가 느립니다!</target>
        </trans-unit>
        <trans-unit id="5e45d064f99e8d1f88b05bb3c44e7e3075a0519b" translate="yes" xml:space="preserve">
          <source>bail</source>
          <target state="translated">bail</target>
        </trans-unit>
        <trans-unit id="e5d4376657c1763b33bdde33033aa0941a5f35d3" translate="yes" xml:space="preserve">
          <source>banner-plugin-hashing test</source>
          <target state="translated">배너 플러그인 해싱 테스트</target>
        </trans-unit>
        <trans-unit id="10ebfc7a26f70f37465618898b8b8af59bd66144" translate="yes" xml:space="preserve">
          <source>based from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;</source>
          <target state="translated">based from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7947d5d8f3862a6ab6afa0861b0f23480ea0d28b" translate="yes" xml:space="preserve">
          <source>based on &lt;code&gt;output.chunkFilename&lt;/code&gt;</source>
          <target state="translated">based on &lt;code&gt;output.chunkFilename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19ff6a385faed9a93d220c680170a96b30f769d6" translate="yes" xml:space="preserve">
          <source>based on &lt;code&gt;output.filename&lt;/code&gt;</source>
          <target state="translated">based on &lt;code&gt;output.filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="607598ed9cbff985bcd4a69f96dadc596d5b17ae" translate="yes" xml:space="preserve">
          <source>based on &lt;code&gt;output.publicPath&lt;/code&gt;</source>
          <target state="translated">based on &lt;code&gt;output.publicPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60e36660009cc69b4a95f3af2cf1aa38fdf7aa9e" translate="yes" xml:space="preserve">
          <source>beforeChunkAssets*</source>
          <target state="translated">beforeChunkAssets*</target>
        </trans-unit>
        <trans-unit id="579109ff2e38b0de6d0d294b92344706d873f453" translate="yes" xml:space="preserve">
          <source>beforeChunkIds*</source>
          <target state="translated">beforeChunkIds*</target>
        </trans-unit>
        <trans-unit id="1394092c3a370aa99c00a65f56c4f0b1abb24727" translate="yes" xml:space="preserve">
          <source>beforeHash*</source>
          <target state="translated">beforeHash*</target>
        </trans-unit>
        <trans-unit id="44806e98f968a8ec5231fe12dc755097beb3ef0b" translate="yes" xml:space="preserve">
          <source>beforeModuleAssets*</source>
          <target state="translated">beforeModuleAssets*</target>
        </trans-unit>
        <trans-unit id="9c5d0a6a858aa412e4305a0f54e505ee197cc9b2" translate="yes" xml:space="preserve">
          <source>beforeModuleIds*</source>
          <target state="translated">beforeModuleIds*</target>
        </trans-unit>
        <trans-unit id="b53d98f73106bac90f193c697c59ab1dff1901e6" translate="yes" xml:space="preserve">
          <source>beforeResolve</source>
          <target state="translated">beforeResolve</target>
        </trans-unit>
        <trans-unit id="c24d20f4ac0dd15ea88af279f612e12106124eca" translate="yes" xml:space="preserve">
          <source>blocksplitting: Default: true,</source>
          <target state="translated">블록 분할 : 기본값 : true,</target>
        </trans-unit>
        <trans-unit id="09e34e9588175883b7f8969f92d14c93440513d1" translate="yes" xml:space="preserve">
          <source>blocksplittinglast: Default: false,</source>
          <target state="translated">blocksplittinglast : 기본값 : false,</target>
        </trans-unit>
        <trans-unit id="252393196f53b241d6257a4bf1b4256600f89021" translate="yes" xml:space="preserve">
          <source>blocksplittingmax: Default: 15</source>
          <target state="translated">blocksplittingmax : 기본값 : 15</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="ec671ab2566cdd1c7113229a8313c67a2c42fc1e" translate="yes" xml:space="preserve">
          <source>boolean, string</source>
          <target state="translated">boolean, string</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="a036ae05a791b2a8799014f5d842b27b22763cef" translate="yes" xml:space="preserve">
          <source>buildDependencies</source>
          <target state="translated">buildDependencies</target>
        </trans-unit>
        <trans-unit id="7b0cef04a74a783ee7c689f9c0648ef7770bda4b" translate="yes" xml:space="preserve">
          <source>buildModule</source>
          <target state="translated">buildModule</target>
        </trans-unit>
        <trans-unit id="d59795de8a4d83834e525b589b2bb0c12e4542c1" translate="yes" xml:space="preserve">
          <source>bundle</source>
          <target state="translated">bundle</target>
        </trans-unit>
        <trans-unit id="0fc47258c2c88e26b1dc963662f412875067898f" translate="yes" xml:space="preserve">
          <source>bundle-loader</source>
          <target state="translated">bundle-loader</target>
        </trans-unit>
        <trans-unit id="4db014d7d247fb448335176b6ee339130c830c53" translate="yes" xml:space="preserve">
          <source>bundled code</source>
          <target state="translated">번들 코드</target>
        </trans-unit>
        <trans-unit id="fab1148a2fbf53dbcf91377da69d1a2f83eaf907" translate="yes" xml:space="preserve">
          <source>by configuring the &lt;code&gt;json5-loader&lt;/code&gt; in the &lt;code&gt;module.loaders&lt;/code&gt; object of the webpack configuration, or</source>
          <target state="translated">웹팩 구성 의 &lt;code&gt;module.loaders&lt;/code&gt; 객체 에서 &lt;code&gt;json5-loader&lt;/code&gt; 를 구성하여</target>
        </trans-unit>
        <trans-unit id="68bcb283c2026eae25c952db03fc1e2fecb6e91e" translate="yes" xml:space="preserve">
          <source>by configuring the &lt;code&gt;json5-loader&lt;/code&gt; in the &lt;code&gt;module.rules&lt;/code&gt; object of the webpack configuration, or</source>
          <target state="translated">by configuring the &lt;code&gt;json5-loader&lt;/code&gt; in the &lt;code&gt;module.rules&lt;/code&gt; object of the webpack configuration, or</target>
        </trans-unit>
        <trans-unit id="f05a02089e59e2bac02447440bcbd1768e77a4cf" translate="yes" xml:space="preserve">
          <source>by directly using the &lt;code&gt;json5-loader!&lt;/code&gt; prefix to the require statement.</source>
          <target state="translated">&lt;code&gt;json5-loader!&lt;/code&gt; 를 직접 사용하여 ! require 문의 접두사.</target>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="translated">cache</target>
        </trans-unit>
        <trans-unit id="b9648657924a0b56798642b665603fba3470734e" translate="yes" xml:space="preserve">
          <source>cache-loader</source>
          <target state="translated">cache-loader</target>
        </trans-unit>
        <trans-unit id="a98d2dba96c5e4708bd58e13ea5245025d5e2c7b" translate="yes" xml:space="preserve">
          <source>cache.buildDependencies</source>
          <target state="translated">cache.buildDependencies</target>
        </trans-unit>
        <trans-unit id="d99562f6f27573790b12a29db9e2f4223dba8830" translate="yes" xml:space="preserve">
          <source>cache.cacheDirectory</source>
          <target state="translated">cache.cacheDirectory</target>
        </trans-unit>
        <trans-unit id="09382d349aebb9075df2275e16fb48fd089b2259" translate="yes" xml:space="preserve">
          <source>cache.cacheLocation</source>
          <target state="translated">cache.cacheLocation</target>
        </trans-unit>
        <trans-unit id="5eb07c036086eca46594d7f29ff3f3ae84e0d36a" translate="yes" xml:space="preserve">
          <source>cache.hashAlgorithm</source>
          <target state="translated">cache.hashAlgorithm</target>
        </trans-unit>
        <trans-unit id="eff3c2b2cfc6f63cc7577d4c6a304f873bce4dc4" translate="yes" xml:space="preserve">
          <source>cache.idleTimeout</source>
          <target state="translated">cache.idleTimeout</target>
        </trans-unit>
        <trans-unit id="7f7b00d266ec77752dc214b928e336cb4285f3da" translate="yes" xml:space="preserve">
          <source>cache.idleTimeoutForInitialStore</source>
          <target state="translated">cache.idleTimeoutForInitialStore</target>
        </trans-unit>
        <trans-unit id="60d1b696007118f44322a561977e974db2bd958e" translate="yes" xml:space="preserve">
          <source>cache.managedPaths</source>
          <target state="translated">cache.managedPaths</target>
        </trans-unit>
        <trans-unit id="aaee1ea209b8280e4d56e4daafc29afc98001af9" translate="yes" xml:space="preserve">
          <source>cache.name</source>
          <target state="translated">cache.name</target>
        </trans-unit>
        <trans-unit id="1f34071cf4466c6a12285b80d0fc7fe3162ab3c5" translate="yes" xml:space="preserve">
          <source>cache.store</source>
          <target state="translated">cache.store</target>
        </trans-unit>
        <trans-unit id="7251fb1d7e87c7402a1f8748f9967cfba7a191b3" translate="yes" xml:space="preserve">
          <source>cache.type</source>
          <target state="translated">cache.type</target>
        </trans-unit>
        <trans-unit id="4e2a61ecf25f083606024e8b8f5142a86c4454a7" translate="yes" xml:space="preserve">
          <source>cache.version</source>
          <target state="translated">cache.version</target>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="translated">call</target>
        </trans-unit>
        <trans-unit id="e6cb37d94273253af63bee74303ab5a14cbaecba" translate="yes" xml:space="preserve">
          <source>call it</source>
          <target state="translated">불러라</target>
        </trans-unit>
        <trans-unit id="14005bbfb119d3e2444462853a127c56d580fe7d" translate="yes" xml:space="preserve">
          <source>callAnyMember</source>
          <target state="translated">callAnyMember</target>
        </trans-unit>
        <trans-unit id="525c4bcc1767a626ad36d8a161d5c0fe9c3fa79e" translate="yes" xml:space="preserve">
          <source>callMemberChain</source>
          <target state="translated">callMemberChain</target>
        </trans-unit>
        <trans-unit id="c505b3a5320d0a837c0b0a449e48e2becddeb14e" translate="yes" xml:space="preserve">
          <source>canRename</source>
          <target state="translated">canRename</target>
        </trans-unit>
        <trans-unit id="430761aae4390d5cac7751ffb612640b99073feb" translate="yes" xml:space="preserve">
          <source>cheap-eval-source-map</source>
          <target state="translated">cheap-eval-source-map</target>
        </trans-unit>
        <trans-unit id="27dc9bc616e732dce0e59c29363dfaa6f3bc2f1a" translate="yes" xml:space="preserve">
          <source>cheap-module-eval-source-map</source>
          <target state="translated">cheap-module-eval-source-map</target>
        </trans-unit>
        <trans-unit id="7831d2c4427fb5e1c191c658ed3ec6c0e7e34b0f" translate="yes" xml:space="preserve">
          <source>cheap-module-source-map</source>
          <target state="translated">cheap-module-source-map</target>
        </trans-unit>
        <trans-unit id="b7dfe2c47abe121094023bcfd56e90b429550750" translate="yes" xml:space="preserve">
          <source>cheap-source-map</source>
          <target state="translated">cheap-source-map</target>
        </trans-unit>
        <trans-unit id="d56d985300d4b52eb6e189be006f44f8d23c5ec9" translate="yes" xml:space="preserve">
          <source>check</source>
          <target state="translated">check</target>
        </trans-unit>
        <trans-unit id="e88fd90d5f598bb07c847142bee60c065394c73b" translate="yes" xml:space="preserve">
          <source>checkConstraints</source>
          <target state="translated">checkConstraints</target>
        </trans-unit>
        <trans-unit id="2a9d7d42003829c09d6ec17e304f7d9d41b6dd2d" translate="yes" xml:space="preserve">
          <source>coffee-loader</source>
          <target state="translated">coffee-loader</target>
        </trans-unit>
        <trans-unit id="17743992630b612c89b77439b2b4c5f371672b57" translate="yes" xml:space="preserve">
          <source>coffee-redux-loader</source>
          <target state="translated">coffee-redux-loader</target>
        </trans-unit>
        <trans-unit id="1a48868d8a3b78b7aff2614464f02bcb294895b6" translate="yes" xml:space="preserve">
          <source>collapseWhitespace</source>
          <target state="translated">collapseWhitespace</target>
        </trans-unit>
        <trans-unit id="118a9989815489c24b81b160782015890ed2085e" translate="yes" xml:space="preserve">
          <source>comment</source>
          <target state="translated">comment</target>
        </trans-unit>
        <trans-unit id="f53207eefc4e801059d4386695738682735acaeb" translate="yes" xml:space="preserve">
          <source>commonjs</source>
          <target state="translated">commonjs</target>
        </trans-unit>
        <trans-unit id="023646ce8406be5b9700f2babded876beaf4396b" translate="yes" xml:space="preserve">
          <source>compilation</source>
          <target state="translated">compilation</target>
        </trans-unit>
        <trans-unit id="fedda5e8b6bbc93ddfef41f523f891b417a7be08" translate="yes" xml:space="preserve">
          <source>compilation object methods</source>
          <target state="translated">compilation object methods</target>
        </trans-unit>
        <trans-unit id="ac20d084c192f03422d4d714dfe9c4179807ef63" translate="yes" xml:space="preserve">
          <source>compiler</source>
          <target state="translated">compiler</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="2a6199259911fbd6bc7ee9638871dee6f5671312" translate="yes" xml:space="preserve">
          <source>config-loader</source>
          <target state="translated">config-loader</target>
        </trans-unit>
        <trans-unit id="8c1e67302369d295ec122d59a20f92bda19ba3ab" translate="yes" xml:space="preserve">
          <source>config-name</source>
          <target state="translated">config-name</target>
        </trans-unit>
        <trans-unit id="a6ac9864083e5af364a03091130af2faedc5cefc" translate="yes" xml:space="preserve">
          <source>conservativeCollapse</source>
          <target state="translated">conservativeCollapse</target>
        </trans-unit>
        <trans-unit id="ec2727b3b71f07635f726026bef44352ec89e452" translate="yes" xml:space="preserve">
          <source>context</source>
          <target state="translated">context</target>
        </trans-unit>
        <trans-unit id="afdd6acdb2ea6f78a681184468511675abe22d2d" translate="yes" xml:space="preserve">
          <source>context module API</source>
          <target state="translated">컨텍스트 모듈 API</target>
        </trans-unit>
        <trans-unit id="99000105ad6006eb0cee55d99ed7e0338ec8369c" translate="yes" xml:space="preserve">
          <source>contextModuleFiles</source>
          <target state="translated">contextModuleFiles</target>
        </trans-unit>
        <trans-unit id="f52bc96ae4b73128a43e10c19b526d7a1b1ef1fd" translate="yes" xml:space="preserve">
          <source>coverjs-loader</source>
          <target state="translated">coverjs-loader</target>
        </trans-unit>
        <trans-unit id="fe7eaaa895e99c4e165ac95e7a16e65a5f42cd96" translate="yes" xml:space="preserve">
          <source>createChildCompiler</source>
          <target state="translated">createChildCompiler</target>
        </trans-unit>
        <trans-unit id="636477216d7f68e45a76006c1ffdb3ee7b5451c6" translate="yes" xml:space="preserve">
          <source>createChunkAssets</source>
          <target state="translated">createChunkAssets</target>
        </trans-unit>
        <trans-unit id="6b63bcb84f323a1484b88dd705ebe348e4c1dcf9" translate="yes" xml:space="preserve">
          <source>createGenerator</source>
          <target state="translated">createGenerator</target>
        </trans-unit>
        <trans-unit id="b6bb501baacc0a29605121b45d2f80f1b6b06482" translate="yes" xml:space="preserve">
          <source>createHash</source>
          <target state="translated">createHash</target>
        </trans-unit>
        <trans-unit id="e0875b42c5ff4c4ee04958253161a236bc4545da" translate="yes" xml:space="preserve">
          <source>createModule</source>
          <target state="translated">createModule</target>
        </trans-unit>
        <trans-unit id="9d9a6108cb0eeff452a0cb4e7665057a76466ce0" translate="yes" xml:space="preserve">
          <source>createModuleAssets</source>
          <target state="translated">createModuleAssets</target>
        </trans-unit>
        <trans-unit id="9e2ca93c8a5a3ffaa132b583549846fcfefcb11b" translate="yes" xml:space="preserve">
          <source>createParser</source>
          <target state="translated">createParser</target>
        </trans-unit>
        <trans-unit id="be934c2683991e53d61817ce9038351b4a628e59" translate="yes" xml:space="preserve">
          <source>create_source_map</source>
          <target state="translated">create_source_map</target>
        </trans-unit>
        <trans-unit id="be90daa13d7f54c77ecd9449c98a37d9d98739f9" translate="yes" xml:space="preserve">
          <source>creates a CSS file per JS file which requires CSS</source>
          <target state="translated">CSS가 필요한 JS 파일 당 CSS 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e4f9ed043dbf4540c58db3144079cab0d0df3fb5" translate="yes" xml:space="preserve">
          <source>css-loader</source>
          <target state="translated">css-loader</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">data</target>
        </trans-unit>
        <trans-unit id="32faaecac742100f7753f0c1d0aa0add01b4046b" translate="yes" xml:space="preserve">
          <source>debug</source>
          <target state="translated">debug</target>
        </trans-unit>
        <trans-unit id="97c7c3a665b115e5ff6f7e5eb124b385c5f85b7b" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;classPrefix: false&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;classPrefix: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfab2c8dcd87e9fb65e4f5f25c3d99a718a3fef6" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;idPrefix: false&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;idPrefix: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c1630dc25c093bcb93ab5763444c52cd370a35f" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;removeSVGTagAttrs: true&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;removeSVGTagAttrs: true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d91679bb150c827be2530cca09f65f3aa94c952" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;removeTags: false&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;removeTags: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3f86ec3a91d0169fdf4c54edacc85c2d382b334" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;removingTagAttrs: []&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;removingTagAttrs: []&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d61c0279ea65d397f64593d406d98a8f63a3b7a9" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;removingTags: ['title', 'desc', 'defs', 'style']&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;removingTags: ['title', 'desc', 'defs', 'style']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d557d53a3b111be4c477087b2439dfe15fdb33b8" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;warnTagAttrs: []&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;warnTagAttrs: []&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e0fc8a7dd7a45591b7d0c2e0404e964d38c2315" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;warnTags: []&lt;/code&gt;</source>
          <target state="translated">기본값 : &lt;code&gt;warnTags: []&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a17b69f8526ce7cc3494b2605b02c01024a29f10" translate="yes" xml:space="preserve">
          <source>defaults values for Sass implementation</source>
          <target state="translated">defaults values for Sass implementation</target>
        </trans-unit>
        <trans-unit id="dc9e84ae64df06f4d9b7cede9ad30cb37c199f2f" translate="yes" xml:space="preserve">
          <source>delete options.; delete options.; delete options.;</source>
          <target state="translated">옵션 삭제.; 옵션 삭제.; 옵션 삭제.;</target>
        </trans-unit>
        <trans-unit id="f1f751571c2262b2268f2a213a12781adf219c9c" translate="yes" xml:space="preserve">
          <source>deleteAsset</source>
          <target state="translated">deleteAsset</target>
        </trans-unit>
        <trans-unit id="495117c3604f83ec4b52e22f12747ed7860f3ccc" translate="yes" xml:space="preserve">
          <source>dependencies</source>
          <target state="translated">dependencies</target>
        </trans-unit>
        <trans-unit id="d76bdc1f4586a2927c95efd7b982288727c82190" translate="yes" xml:space="preserve">
          <source>dependency_mode</source>
          <target state="translated">dependency_mode</target>
        </trans-unit>
        <trans-unit id="0619e729ea428557a596ea603c3e2d41c8fed64b" translate="yes" xml:space="preserve">
          <source>devServer</source>
          <target state="translated">devServer</target>
        </trans-unit>
        <trans-unit id="adbfc3ed1e606dd06859ec6b2b20b559f4cf9868" translate="yes" xml:space="preserve">
          <source>devServer.after</source>
          <target state="translated">devServer.after</target>
        </trans-unit>
        <trans-unit id="1a089a938852ca7e41d1074a7a318584cc3877ca" translate="yes" xml:space="preserve">
          <source>devServer.allowedHosts</source>
          <target state="translated">devServer.allowedHosts</target>
        </trans-unit>
        <trans-unit id="8d4090e9c72956469ee763120c4e1d96296d789c" translate="yes" xml:space="preserve">
          <source>devServer.before</source>
          <target state="translated">devServer.before</target>
        </trans-unit>
        <trans-unit id="31cd6ea3342eb0e7a2f334e0e8c3b9c90f68e38c" translate="yes" xml:space="preserve">
          <source>devServer.bonjour</source>
          <target state="translated">devServer.bonjour</target>
        </trans-unit>
        <trans-unit id="b410b3720af424ebdaf26cc69ecc0cd801e6d743" translate="yes" xml:space="preserve">
          <source>devServer.clientLogLevel</source>
          <target state="translated">devServer.clientLogLevel</target>
        </trans-unit>
        <trans-unit id="e1c17fecd2bdcc27d38558fd1bb2c997a14a7bcf" translate="yes" xml:space="preserve">
          <source>devServer.color</source>
          <target state="translated">devServer.color</target>
        </trans-unit>
        <trans-unit id="7d9b64c0d0377d25d4552416ed5bf97f433a16a8" translate="yes" xml:space="preserve">
          <source>devServer.compress</source>
          <target state="translated">devServer.compress</target>
        </trans-unit>
        <trans-unit id="73bbe43389b67d956ea1757ab68687b8d181754a" translate="yes" xml:space="preserve">
          <source>devServer.contentBase</source>
          <target state="translated">devServer.contentBase</target>
        </trans-unit>
        <trans-unit id="1ccd1ba416c9c104f3dee430eff67b18857251fb" translate="yes" xml:space="preserve">
          <source>devServer.contentBasePublicPath</source>
          <target state="translated">devServer.contentBasePublicPath</target>
        </trans-unit>
        <trans-unit id="051e270100f1cc8802839088aff687c816ae766d" translate="yes" xml:space="preserve">
          <source>devServer.disableHostCheck</source>
          <target state="translated">devServer.disableHostCheck</target>
        </trans-unit>
        <trans-unit id="cf4e1ba58058dc4a043c72bdcffa878bd188b29e" translate="yes" xml:space="preserve">
          <source>devServer.filename</source>
          <target state="translated">devServer.filename</target>
        </trans-unit>
        <trans-unit id="b02849916576170652a51fd2d650a7ce6b3f8fb4" translate="yes" xml:space="preserve">
          <source>devServer.headers</source>
          <target state="translated">devServer.headers</target>
        </trans-unit>
        <trans-unit id="355f955900a0e004c40588865fec93288ec25b0f" translate="yes" xml:space="preserve">
          <source>devServer.historyApiFallback</source>
          <target state="translated">devServer.historyApiFallback</target>
        </trans-unit>
        <trans-unit id="115b9804515a95eef9cf21a84e0c4a3de557354c" translate="yes" xml:space="preserve">
          <source>devServer.host</source>
          <target state="translated">devServer.host</target>
        </trans-unit>
        <trans-unit id="5773b3ebcaf0df1d789f244a7a39515235550f69" translate="yes" xml:space="preserve">
          <source>devServer.hot</source>
          <target state="translated">devServer.hot</target>
        </trans-unit>
        <trans-unit id="348d227c93c498832d95cd8441f79e980e8af9c9" translate="yes" xml:space="preserve">
          <source>devServer.hotOnly</source>
          <target state="translated">devServer.hotOnly</target>
        </trans-unit>
        <trans-unit id="08bb3810af5aea32f7135e24a798ac47ba500999" translate="yes" xml:space="preserve">
          <source>devServer.http2</source>
          <target state="translated">devServer.http2</target>
        </trans-unit>
        <trans-unit id="37350de1f17a92362b1c1f9c1d6b24993eda815b" translate="yes" xml:space="preserve">
          <source>devServer.https</source>
          <target state="translated">devServer.https</target>
        </trans-unit>
        <trans-unit id="63bb1ba48d1ea92b5a53e7c578eaca8bda6e3ddf" translate="yes" xml:space="preserve">
          <source>devServer.index</source>
          <target state="translated">devServer.index</target>
        </trans-unit>
        <trans-unit id="6f61d8820938ebf00af65d333eddebcea42a23b2" translate="yes" xml:space="preserve">
          <source>devServer.info</source>
          <target state="translated">devServer.info</target>
        </trans-unit>
        <trans-unit id="20617b9fc0e3faec3e9634ea7699e4d663e71c77" translate="yes" xml:space="preserve">
          <source>devServer.injectClient</source>
          <target state="translated">devServer.injectClient</target>
        </trans-unit>
        <trans-unit id="9becbc68988245cea6f7955f784fdd2cb49d2185" translate="yes" xml:space="preserve">
          <source>devServer.injectHot</source>
          <target state="translated">devServer.injectHot</target>
        </trans-unit>
        <trans-unit id="d44af65ac1c3bae1f4074c173c1ede3561b05452" translate="yes" xml:space="preserve">
          <source>devServer.inline</source>
          <target state="translated">devServer.inline</target>
        </trans-unit>
        <trans-unit id="3ba3052b7980b606d5f9dc011342c45341226236" translate="yes" xml:space="preserve">
          <source>devServer.lazy</source>
          <target state="translated">devServer.lazy</target>
        </trans-unit>
        <trans-unit id="db44e727decbc80874a261d2ff9ec4cba9d393e7" translate="yes" xml:space="preserve">
          <source>devServer.liveReload</source>
          <target state="translated">devServer.liveReload</target>
        </trans-unit>
        <trans-unit id="856a04a4784b9190e0a1d52dd2d51d2df49da54d" translate="yes" xml:space="preserve">
          <source>devServer.mimeTypes</source>
          <target state="translated">devServer.mimeTypes</target>
        </trans-unit>
        <trans-unit id="d8a1a425aca0ff6a8809060f91afecfa99308771" translate="yes" xml:space="preserve">
          <source>devServer.noInfo</source>
          <target state="translated">devServer.noInfo</target>
        </trans-unit>
        <trans-unit id="0c0236f6c6c123d4482c65fc2905ed4932172de3" translate="yes" xml:space="preserve">
          <source>devServer.onListening</source>
          <target state="translated">devServer.onListening</target>
        </trans-unit>
        <trans-unit id="e010d399945829c179c8e2fa245cb8226d6e0ab3" translate="yes" xml:space="preserve">
          <source>devServer.open</source>
          <target state="translated">devServer.open</target>
        </trans-unit>
        <trans-unit id="5a3111f28d0909e0bc54b190dc162758b67b8bcd" translate="yes" xml:space="preserve">
          <source>devServer.openPage</source>
          <target state="translated">devServer.openPage</target>
        </trans-unit>
        <trans-unit id="d42b610c750c33fb9410c2f9e6a8def2b31b2f98" translate="yes" xml:space="preserve">
          <source>devServer.overlay</source>
          <target state="translated">devServer.overlay</target>
        </trans-unit>
        <trans-unit id="8d3bde9576c97758e1c68cf6f1bea3a89b02f411" translate="yes" xml:space="preserve">
          <source>devServer.pfx</source>
          <target state="translated">devServer.pfx</target>
        </trans-unit>
        <trans-unit id="478265b9cc3dbd8ffed99271e3e44914b448fcc7" translate="yes" xml:space="preserve">
          <source>devServer.pfxPassphrase</source>
          <target state="translated">devServer.pfxPassphrase</target>
        </trans-unit>
        <trans-unit id="40960b45abe31e43887039a4f468bdaa1fe801e1" translate="yes" xml:space="preserve">
          <source>devServer.port</source>
          <target state="translated">devServer.port</target>
        </trans-unit>
        <trans-unit id="c543353d7f6af068cd62068ff4c14b216f24c289" translate="yes" xml:space="preserve">
          <source>devServer.progress</source>
          <target state="translated">devServer.progress</target>
        </trans-unit>
        <trans-unit id="09a9c31ac17dfbe63d32680e0b1b3d4b647944c9" translate="yes" xml:space="preserve">
          <source>devServer.proxy</source>
          <target state="translated">devServer.proxy</target>
        </trans-unit>
        <trans-unit id="499c32a780e1358dc09ec6674feb8197c4d64388" translate="yes" xml:space="preserve">
          <source>devServer.public</source>
          <target state="translated">devServer.public</target>
        </trans-unit>
        <trans-unit id="6bd04746ea83dd2966e127553aeec3afcbf43120" translate="yes" xml:space="preserve">
          <source>devServer.publicPath</source>
          <target state="translated">devServer.publicPath</target>
        </trans-unit>
        <trans-unit id="178278b9c8df825971a8b0e99e51f87d1c545053" translate="yes" xml:space="preserve">
          <source>devServer.quiet</source>
          <target state="translated">devServer.quiet</target>
        </trans-unit>
        <trans-unit id="27dc2a525b8ad382601a112183c26df1e4fed268" translate="yes" xml:space="preserve">
          <source>devServer.serveIndex</source>
          <target state="translated">devServer.serveIndex</target>
        </trans-unit>
        <trans-unit id="b36fa456198c976de202d38591f801906796617f" translate="yes" xml:space="preserve">
          <source>devServer.setup</source>
          <target state="translated">devServer.setup</target>
        </trans-unit>
        <trans-unit id="c2c74646aca587adb3e08d3b65a53a37943bcb7b" translate="yes" xml:space="preserve">
          <source>devServer.sockHost</source>
          <target state="translated">devServer.sockHost</target>
        </trans-unit>
        <trans-unit id="d5430224bb349ccf1e7814bbeca82a7a91bdaa68" translate="yes" xml:space="preserve">
          <source>devServer.sockPath</source>
          <target state="translated">devServer.sockPath</target>
        </trans-unit>
        <trans-unit id="727f366cb1d69325c3e92164160df5aff83e0d33" translate="yes" xml:space="preserve">
          <source>devServer.sockPort</source>
          <target state="translated">devServer.sockPort</target>
        </trans-unit>
        <trans-unit id="6a4061615411d89cb6fbfb8f52fce26a3309a932" translate="yes" xml:space="preserve">
          <source>devServer.socket</source>
          <target state="translated">devServer.socket</target>
        </trans-unit>
        <trans-unit id="873bb1099c660a7a55bccf3fcc7c7d5019697c9b" translate="yes" xml:space="preserve">
          <source>devServer.staticOptions</source>
          <target state="translated">devServer.staticOptions</target>
        </trans-unit>
        <trans-unit id="5cb854df2a8aefbf7342af8206431eaf6b472953" translate="yes" xml:space="preserve">
          <source>devServer.stats</source>
          <target state="translated">devServer.stats</target>
        </trans-unit>
        <trans-unit id="4121967318d43cda203051a9e6502a47dfa9a070" translate="yes" xml:space="preserve">
          <source>devServer.stdin</source>
          <target state="translated">devServer.stdin</target>
        </trans-unit>
        <trans-unit id="e43fe61db2f2f9fe239960913a8e6e0ca3c2ec03" translate="yes" xml:space="preserve">
          <source>devServer.transportMode</source>
          <target state="translated">devServer.transportMode</target>
        </trans-unit>
        <trans-unit id="a6345af52d6a8b4be99e706d0dc5f928f9ff6315" translate="yes" xml:space="preserve">
          <source>devServer.useLocalIp</source>
          <target state="translated">devServer.useLocalIp</target>
        </trans-unit>
        <trans-unit id="4535a6538db6fe7d7185fff46c04b8e3fb557b3b" translate="yes" xml:space="preserve">
          <source>devServer.watchContentBase</source>
          <target state="translated">devServer.watchContentBase</target>
        </trans-unit>
        <trans-unit id="ab60ecbfd6e7ac08ba64ece902c84323098f73f8" translate="yes" xml:space="preserve">
          <source>devServer.watchOptions</source>
          <target state="translated">devServer.watchOptions</target>
        </trans-unit>
        <trans-unit id="e78634282bdf2afdd209ab78c141d1eb2327f3f7" translate="yes" xml:space="preserve">
          <source>devServer.writeToDisk</source>
          <target state="translated">devServer.writeToDisk</target>
        </trans-unit>
        <trans-unit id="d57ccf01d34a664df794daf0a6b6a4593a5fa53f" translate="yes" xml:space="preserve">
          <source>devtool</source>
          <target state="translated">devtool</target>
        </trans-unit>
        <trans-unit id="d38626a856365c923733f74c0a626686693bcb9e" translate="yes" xml:space="preserve">
          <source>dispose</source>
          <target state="translated">dispose</target>
        </trans-unit>
        <trans-unit id="e5fd9cfe0e8039111d54b588e77b2bb0cad41c3a" translate="yes" xml:space="preserve">
          <source>done</source>
          <target state="translated">done</target>
        </trans-unit>
        <trans-unit id="6997a8a0b6a03839ea93910ad005d759fcd4270c" translate="yes" xml:space="preserve">
          <source>emit*</source>
          <target state="translated">emit*</target>
        </trans-unit>
        <trans-unit id="861f19423195b960f0efe155ebcc3507302773ab" translate="yes" xml:space="preserve">
          <source>emitAsset</source>
          <target state="translated">emitAsset</target>
        </trans-unit>
        <trans-unit id="6e066f0b515e8782b58f109a78a9fa28032f1047" translate="yes" xml:space="preserve">
          <source>encoding: When set to &lt;code&gt;'base64'&lt;/code&gt;, module source will be encoded using Base64 algorithm. Setting &lt;code&gt;encoding&lt;/code&gt; to false will disable encoding.</source>
          <target state="translated">encoding: When set to &lt;code&gt;'base64'&lt;/code&gt; , module source will be encoded using Base64 algorithm. Setting &lt;code&gt;encoding&lt;/code&gt; to false will disable encoding.</target>
        </trans-unit>
        <trans-unit id="61c4128c816142244cd9de5f843e1d0db31e567f" translate="yes" xml:space="preserve">
          <source>entry</source>
          <target state="translated">entry</target>
        </trans-unit>
        <trans-unit id="0f4f4cac2fcfaa13be3a5aab45c71ac3674770d2" translate="yes" xml:space="preserve">
          <source>entry chunk: &lt;code&gt;file.js&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">엔트리 청크 : &lt;code&gt;file.js&lt;/code&gt; 및 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e282a239bf74e94b819183c7a1dac059e866827" translate="yes" xml:space="preserve">
          <source>entry_point</source>
          <target state="translated">entry_point</target>
        </trans-unit>
        <trans-unit id="c6e454d960df4845f9d69eb11377c8b23882715b" translate="yes" xml:space="preserve">
          <source>environment</source>
          <target state="translated">environment</target>
        </trans-unit>
        <trans-unit id="11f9578d05e6f7bb58a3cdd00107e9f4e3882671" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="translated">error</target>
        </trans-unit>
        <trans-unit id="2be73a29f4cf50495b7f44da8c2d52a1cfef205c" translate="yes" xml:space="preserve">
          <source>es6 modules</source>
          <target state="translated">es6 모듈</target>
        </trans-unit>
        <trans-unit id="ccb77fe7a48429339a2e8658d719c06a43c621d3" translate="yes" xml:space="preserve">
          <source>esinstall</source>
          <target state="translated">esinstall</target>
        </trans-unit>
        <trans-unit id="43a05b67a517759369d942186a1974c70680cc5a" translate="yes" xml:space="preserve">
          <source>eslint loader for webpack</source>
          <target state="translated">webpack 용 eslint 로더</target>
        </trans-unit>
        <trans-unit id="0af82862213b08cacb2855ed5420b8d34e287604" translate="yes" xml:space="preserve">
          <source>eslint-loader</source>
          <target state="translated">eslint-loader</target>
        </trans-unit>
        <trans-unit id="e8347a0f3e9923ae305e0323658b0ce51a37b8fa" translate="yes" xml:space="preserve">
          <source>eslint-webpack-plugin</source>
          <target state="translated">eslint-webpack-plugin</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="01ecf680c98e1d70fd459d68bd5aaa2a6826803b" translate="yes" xml:space="preserve">
          <source>eval-cheap-module-source-map</source>
          <target state="translated">eval-cheap-module-source-map</target>
        </trans-unit>
        <trans-unit id="06b8bbf0544b4a0ae71fcbb9108704cccd389e1d" translate="yes" xml:space="preserve">
          <source>eval-cheap-source-map</source>
          <target state="translated">eval-cheap-source-map</target>
        </trans-unit>
        <trans-unit id="07b0989d4c449b0fb33a06c13d0e45fa7625d27b" translate="yes" xml:space="preserve">
          <source>eval-nosources-cheap-module-source-map</source>
          <target state="translated">eval-nosources-cheap-module-source-map</target>
        </trans-unit>
        <trans-unit id="599650ed0eb06026d9f7921d281b87a26f4d4cb9" translate="yes" xml:space="preserve">
          <source>eval-nosources-cheap-source-map</source>
          <target state="translated">eval-nosources-cheap-source-map</target>
        </trans-unit>
        <trans-unit id="0ee7c3f335b848783006de868898ece661a06ff1" translate="yes" xml:space="preserve">
          <source>eval-nosources-source-map</source>
          <target state="translated">eval-nosources-source-map</target>
        </trans-unit>
        <trans-unit id="c23fb9c71dbcfd94679f3b41c8d6f492e4f74804" translate="yes" xml:space="preserve">
          <source>eval-source-map</source>
          <target state="translated">eval-source-map</target>
        </trans-unit>
        <trans-unit id="3709214fb349c5b535a50e29c91d218f5afd8de8" translate="yes" xml:space="preserve">
          <source>evaluate</source>
          <target state="translated">evaluate</target>
        </trans-unit>
        <trans-unit id="6042da82f0e9fe97fc69d77002acbc0ac82e287d" translate="yes" xml:space="preserve">
          <source>evaluateCallExpressionMember</source>
          <target state="translated">evaluateCallExpressionMember</target>
        </trans-unit>
        <trans-unit id="2470226202655c02d126cc903a68553a39539852" translate="yes" xml:space="preserve">
          <source>evaluateDefinedIdentifier</source>
          <target state="translated">evaluateDefinedIdentifier</target>
        </trans-unit>
        <trans-unit id="9bd80b45ecf916cfbd86606c03fb3e0bae75c5cd" translate="yes" xml:space="preserve">
          <source>evaluateIdentifier</source>
          <target state="translated">evaluateIdentifier</target>
        </trans-unit>
        <trans-unit id="f0d8f7fb22288b1f0a33013f2f0930b21051dd61" translate="yes" xml:space="preserve">
          <source>evaluateTypeof</source>
          <target state="translated">evaluateTypeof</target>
        </trans-unit>
        <trans-unit id="11401d636763ccb2f33b69ad50997bedf44b3263" translate="yes" xml:space="preserve">
          <source>evaluating (asynchronous)</source>
          <target state="translated">evaluating (asynchronous)</target>
        </trans-unit>
        <trans-unit id="b4816adfd34ffe9521bd896001aad52df9a19cc7" translate="yes" xml:space="preserve">
          <source>evaluating the module (synchronous).</source>
          <target state="translated">evaluating the module (synchronous).</target>
        </trans-unit>
        <trans-unit id="af3890205f4655edc2d660f0393845c1003ecb8a" translate="yes" xml:space="preserve">
          <source>example - config file lookup will be in order of .webpack/webpack.config.development.js &amp;gt; webpack.config.development.js &amp;gt; webpack.config.js</source>
          <target state="translated">example - config file lookup will be in order of .webpack/webpack.config.development.js &amp;gt; webpack.config.development.js &amp;gt; webpack.config.js</target>
        </trans-unit>
        <trans-unit id="2d56f96058ac99f406b102f14f7a7a6b0e89f18d" translate="yes" xml:space="preserve">
          <source>example - config file lookup will be in order of .webpack/webpackfile &amp;gt; .webpack/webpack.config.js &amp;gt; webpack.config.js</source>
          <target state="translated">예-구성 파일 조회는 .webpack / webpackfile&amp;gt; .webpack / webpack.config.js&amp;gt; webpack.config.js 순서입니다.</target>
        </trans-unit>
        <trans-unit id="d3f74b439a6e479ab9bcb341318fa3f52da1f3b1" translate="yes" xml:space="preserve">
          <source>exclude it: don't include it, don't evaluate it and don't analyse dependencies</source>
          <target state="translated">exclude it: don't include it, don't evaluate it and don't analyse dependencies</target>
        </trans-unit>
        <trans-unit id="9bcbfdd459140d3931eb515f4b5dbdde69ad228f" translate="yes" xml:space="preserve">
          <source>exclude: Condition(s)</source>
          <target state="translated">제외 : 조건</target>
        </trans-unit>
        <trans-unit id="e15f073522e2bac7eedc1ee86d1da34982199825" translate="yes" xml:space="preserve">
          <source>executableFile</source>
          <target state="translated">executableFile</target>
        </trans-unit>
        <trans-unit id="c828076471935e6b0e12c70c56368cf19fbf3762" translate="yes" xml:space="preserve">
          <source>experiments</source>
          <target state="translated">experiments</target>
        </trans-unit>
        <trans-unit id="034068cc0be2c87aa7af73afc7ac003a2ad6ee96" translate="yes" xml:space="preserve">
          <source>experiments.lazyCompilation</source>
          <target state="translated">experiments.lazyCompilation</target>
        </trans-unit>
        <trans-unit id="73b8427ebc9e80db4f1373ae0d7951406a01acdc" translate="yes" xml:space="preserve">
          <source>explanation</source>
          <target state="translated">explanation</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="a7733acd7394f1778419950a5c83a9b04298cc1e" translate="yes" xml:space="preserve">
          <source>exportDeclaration</source>
          <target state="translated">exportDeclaration</target>
        </trans-unit>
        <trans-unit id="aa878bb98da8d8b56c30f3ee9a4ca2b665d24bf2" translate="yes" xml:space="preserve">
          <source>exportExpression</source>
          <target state="translated">exportExpression</target>
        </trans-unit>
        <trans-unit id="638b44ac78b9050a8e9f90a6f4fbf59e30bc510d" translate="yes" xml:space="preserve">
          <source>exportImport</source>
          <target state="translated">exportImport</target>
        </trans-unit>
        <trans-unit id="058e692904307cbc354f9fef3d6d3373415b5547" translate="yes" xml:space="preserve">
          <source>exportImportSpecifier</source>
          <target state="translated">exportImportSpecifier</target>
        </trans-unit>
        <trans-unit id="a1a83bb9fd249b34543abb78891b80e0c5f69086" translate="yes" xml:space="preserve">
          <source>exportSpecifier</source>
          <target state="translated">exportSpecifier</target>
        </trans-unit>
        <trans-unit id="f10bbaaea2c3b1f9c0e221f18ea4b3fa9de8580e" translate="yes" xml:space="preserve">
          <source>exports loader module for webpack</source>
          <target state="translated">webpack 용 로더 모듈 내보내기</target>
        </trans-unit>
        <trans-unit id="e41ddf8ac7b770578c32eeed7cd76b510e917c95" translate="yes" xml:space="preserve">
          <source>exports-loader</source>
          <target state="translated">exports-loader</target>
        </trans-unit>
        <trans-unit id="3678dcf682f1001b752386da0b76b4d885c73bef" translate="yes" xml:space="preserve">
          <source>expose loader module for webpack</source>
          <target state="translated">웹 팩용 로더 모듈 노출</target>
        </trans-unit>
        <trans-unit id="1de0ade89fde222e2fb7028d1a3b664c7d7faef4" translate="yes" xml:space="preserve">
          <source>expose-loader</source>
          <target state="translated">expose-loader</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="e4d34d8953fe4da06e4b450f591df11dd293411a" translate="yes" xml:space="preserve">
          <source>expressionAnyMember</source>
          <target state="translated">expressionAnyMember</target>
        </trans-unit>
        <trans-unit id="b3adc19eaf220ba0e284376852cfecf29bad9550" translate="yes" xml:space="preserve">
          <source>expressionConditionalOperator</source>
          <target state="translated">expressionConditionalOperator</target>
        </trans-unit>
        <trans-unit id="0397f5aad0651e7ec0c3d4a3463ba80ede202100" translate="yes" xml:space="preserve">
          <source>externals</source>
          <target state="translated">externals</target>
        </trans-unit>
        <trans-unit id="0bebc7b073345ef227bad6c9b77cd090a8d0d82f" translate="yes" xml:space="preserve">
          <source>externalsPresets</source>
          <target state="translated">externalsPresets</target>
        </trans-unit>
        <trans-unit id="d44423e3b3faffd7875560f385e5af77465fb457" translate="yes" xml:space="preserve">
          <source>externalsType</source>
          <target state="translated">externalsType</target>
        </trans-unit>
        <trans-unit id="60c194f7ed4f9421e63c0d5786912050303d00e5" translate="yes" xml:space="preserve">
          <source>extract-loader</source>
          <target state="translated">extract-loader</target>
        </trans-unit>
        <trans-unit id="4af226b23f18b8c8c5ad03e6976dd9a4bd43eb13" translate="yes" xml:space="preserve">
          <source>factorize</source>
          <target state="translated">factorize</target>
        </trans-unit>
        <trans-unit id="a602e216eb44a3ac5e096036eeaaef6bb9159677" translate="yes" xml:space="preserve">
          <source>fail</source>
          <target state="translated">fail</target>
        </trans-unit>
        <trans-unit id="318a2cda734cb8310f30b6ecfcac944f4728d2c4" translate="yes" xml:space="preserve">
          <source>failedModule</source>
          <target state="translated">failedModule</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="c098c56f89c8c71c7a935db6fc15e43dbcdfc041" translate="yes" xml:space="preserve">
          <source>false: do not modify/set the value of &lt;code&gt;process.env.NODE_ENV&lt;/code&gt;.</source>
          <target state="translated">false : &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 값을 수정 / 설정하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="0afde56699db99c43c6254d81ccc16fbb7096ad3" translate="yes" xml:space="preserve">
          <source>fast</source>
          <target state="translated">fast</target>
        </trans-unit>
        <trans-unit id="daf6b585b3e0bb97e7991afef1d50b2ed1e7106b" translate="yes" xml:space="preserve">
          <source>faster</source>
          <target state="translated">faster</target>
        </trans-unit>
        <trans-unit id="2374ca6b73aa674ba176387d4ec86a6819b121fd" translate="yes" xml:space="preserve">
          <source>fastest</source>
          <target state="translated">fastest</target>
        </trans-unit>
        <trans-unit id="1a8dcf8cfadce16357a561f7d94886598f695c36" translate="yes" xml:space="preserve">
          <source>file-loader</source>
          <target state="translated">file-loader</target>
        </trans-unit>
        <trans-unit id="a35a5c367dff6bf23f631092c88fb45bff4913af" translate="yes" xml:space="preserve">
          <source>filename with [id] instead of [name] or [id] prefixed</source>
          <target state="translated">[name] 또는 [id] 대신 [id]를 가진 filename</target>
        </trans-unit>
        <trans-unit id="6348d380cb703f62848f620d587cfdd5e6c5d8ac" translate="yes" xml:space="preserve">
          <source>filterSourceMappingUrl</source>
          <target state="translated">filterSourceMappingUrl</target>
        </trans-unit>
        <trans-unit id="f68fe3829d01a23e55b3e6650c2e569b4abd15ab" translate="yes" xml:space="preserve">
          <source>findModule</source>
          <target state="translated">findModule</target>
        </trans-unit>
        <trans-unit id="2cce4a92f41fe3d55a72c27b922c093bdd0a4267" translate="yes" xml:space="preserve">
          <source>finish</source>
          <target state="translated">finish</target>
        </trans-unit>
        <trans-unit id="2cbad9c1082f3a79d1ddd3cf368a73daabbb9150" translate="yes" xml:space="preserve">
          <source>finishModules*</source>
          <target state="translated">finishModules*</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="59a34313fb15a14e65ac63b2cbaf3934188940b6" translate="yes" xml:space="preserve">
          <source>generate SourceMap per module and attach it via eval. Recommended for development, because of improved rebuild performance. Note that there is a windows defender issue, which causes huge slowdown due to virus scanning.</source>
          <target state="translated">모듈별로 SourceMap을 생성하고 eval을 통해 첨부합니다. 재 구축 성능이 향상되었으므로 개발에 권장됩니다. Windows 방어자 문제가있어 바이러스 검사로 인해 속도가 크게 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="67bd5810ec8162548419905bc9769ccf95fe3a1f" translate="yes" xml:space="preserve">
          <source>generated</source>
          <target state="translated">generated</target>
        </trans-unit>
        <trans-unit id="3870c0e631f03181c1f15aaa84176d9e9d8d4573" translate="yes" xml:space="preserve">
          <source>generated code</source>
          <target state="translated">생성 된 코드</target>
        </trans-unit>
        <trans-unit id="4468e5deabf5e6d0740cd1a77df56f67093ec943" translate="yes" xml:space="preserve">
          <source>generator</source>
          <target state="translated">generator</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
