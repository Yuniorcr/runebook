<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="0cfad97c43a17797aefc167eac15bd9f1a110206" translate="yes" xml:space="preserve">
          <source>Scoped Mode</source>
          <target state="translated">범위 모드</target>
        </trans-unit>
        <trans-unit id="01a125b95ea399abf29e5f5dc66028b69520619e" translate="yes" xml:space="preserve">
          <source>Seals the compilation.</source>
          <target state="translated">Seals the compilation.</target>
        </trans-unit>
        <trans-unit id="0296c4f7165ae5d911d93aa8c65a69d0ac26d2ac" translate="yes" xml:space="preserve">
          <source>Second, if a loader delivers a result in the &lt;code&gt;pitch&lt;/code&gt; method the process turns around and skips the remaining loaders. In our example above, if the &lt;code&gt;b-loader&lt;/code&gt;s &lt;code&gt;pitch&lt;/code&gt; method returned something:</source>
          <target state="translated">둘째, 로더가 &lt;code&gt;pitch&lt;/code&gt; 방법 으로 결과를 전달 하면 프로세스가 돌아가고 나머지 로더를 건너 뜁니다. 위의 예에서 &lt;code&gt;b-loader&lt;/code&gt; 의 &lt;code&gt;pitch&lt;/code&gt; 방법이 무언가를 반환 한 경우 :</target>
        </trans-unit>
        <trans-unit id="ce51be73ebb99381523ee62a808df741010e35c8" translate="yes" xml:space="preserve">
          <source>Second, if a loader delivers a result in the &lt;code&gt;pitch&lt;/code&gt; method, the process turns around and skips the remaining loaders. In our example above, if the &lt;code&gt;b-loader&lt;/code&gt;s &lt;code&gt;pitch&lt;/code&gt; method returned something:</source>
          <target state="translated">Second, if a loader delivers a result in the &lt;code&gt;pitch&lt;/code&gt; method, the process turns around and skips the remaining loaders. In our example above, if the &lt;code&gt;b-loader&lt;/code&gt; s &lt;code&gt;pitch&lt;/code&gt; method returned something:</target>
        </trans-unit>
        <trans-unit id="32ba0fcce3464103683465320a9db31da75af1c9" translate="yes" xml:space="preserve">
          <source>Secondly, you may override the base download URL for your worker script via the &lt;a href=&quot;#publicpath&quot;&gt;&lt;code&gt;publicPath&lt;/code&gt;&lt;/a&gt; option</source>
          <target state="translated">둘째, &lt;a href=&quot;#publicpath&quot;&gt; &lt;code&gt;publicPath&lt;/code&gt; &lt;/a&gt; 옵션을 통해 작업자 스크립트의 기본 다운로드 URL을 무시할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="25ddd41a449ec2152e2df9c3f9f502da494e9418" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#nested-rules&quot;&gt;&lt;code&gt;Nested rules&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">See &lt;a href=&quot;#nested-rules&quot;&gt; &lt;code&gt;Nested rules&lt;/code&gt; &lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="75662d18bc6eb58412de0ef04751e322ada76bc7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50aeadb42cc3f37569d30b00c00fc40e5c4621c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#outputdevtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;#outputdevtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fca1eb0890db55bcc043ad6b58f4238447d28a30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#statsexcludemodules&quot;&gt;&lt;code&gt;stats.excludeModules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">See &lt;a href=&quot;#statsexcludemodules&quot;&gt; &lt;code&gt;stats.excludeModules&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6ca59bbc98e49f8c6c32052f6515131e707aaafa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#useentry&quot;&gt;UseEntry&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#useentry&quot;&gt;UseEntry&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6b9483237f06dfdd0d44a5a766bae77f7ae376b4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../configuration/resolve&quot;&gt;Resolve API&lt;/a&gt; to learn more about the configuration options mentioned above.</source>
          <target state="translated">See &lt;a href=&quot;../configuration/resolve&quot;&gt;Resolve API&lt;/a&gt; to learn more about the configuration options mentioned above.</target>
        </trans-unit>
        <trans-unit id="1681661e48e8bc821ee39d263a6afcdc1ca2272f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../configuration/resolve&quot;&gt;Resolve API&lt;/a&gt; to learn more on the configuration options mentioned above.</source>
          <target state="translated">위에서 언급 한 구성 옵션에 대한 자세한 내용은 &lt;a href=&quot;../configuration/resolve&quot;&gt;API 해결을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0cbcb55ca6f89fbddc6c15d96cd6700dabac888e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules guide&lt;/a&gt; for additional information and use cases.</source>
          <target state="translated">See &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules guide&lt;/a&gt; for additional information and use cases.</target>
        </trans-unit>
        <trans-unit id="8da8e9cd5246408a364a20de8205471deacf5ea5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules guide&lt;/a&gt; for more about &lt;code&gt;asset*&lt;/code&gt; type.</source>
          <target state="translated">See &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules guide&lt;/a&gt; for more about &lt;code&gt;asset*&lt;/code&gt; type.</target>
        </trans-unit>
        <trans-unit id="e0a3cbbc77ab575dc2209e8a42c3dc1c69e76016" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../guides/output-management#the-manifest&quot;&gt;the manifest section&lt;/a&gt; of our &lt;em&gt;Managing Built Files&lt;/em&gt; guide to learn how to extract the manifest, and read the guides below to learn more about the intricacies of long term caching.</source>
          <target state="translated">&lt;em&gt;내장 파일 관리&lt;/em&gt; 안내서 &lt;a href=&quot;../guides/output-management#the-manifest&quot;&gt;의 매니페스트 섹션&lt;/a&gt; 을 참조 하여 매니페스트 를 추출하는 방법을 배우고 아래 가이드를 읽고 장기 캐싱의 복잡성에 대해 자세히 알아보십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5153187d77875a911035996c8aec2dd0eba42148" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../guides/output-management#the-manifest&quot;&gt;the manifest section&lt;/a&gt; of our &lt;em&gt;Output management&lt;/em&gt; guide to learn how to extract the manifest, and read the guides below to learn more about the intricacies of long term caching.</source>
          <target state="translated">See &lt;a href=&quot;../guides/output-management#the-manifest&quot;&gt;the manifest section&lt;/a&gt; of our &lt;em&gt;Output management&lt;/em&gt; guide to learn how to extract the manifest, and read the guides below to learn more about the intricacies of long term caching.</target>
        </trans-unit>
        <trans-unit id="cabf7c2cd86f2d75cde0e99ba373a6c335a4afba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://stylelint.io/user-guide/node-api/#options&quot;&gt;stylelint's options&lt;/a&gt; for the complete list of options available. These options are passed through to the &lt;code&gt;stylelint&lt;/code&gt; directly.</source>
          <target state="translated">See &lt;a href=&quot;http://stylelint.io/user-guide/node-api/#options&quot;&gt;stylelint's options&lt;/a&gt; for the complete list of options available. These options are passed through to the &lt;code&gt;stylelint&lt;/code&gt; directly.</target>
        </trans-unit>
        <trans-unit id="bbe6660a7baefd0b2b987c2a5735dfcf932c4224" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env&quot;&gt;the babel-preset-env documentation&lt;/a&gt; for more information.</source>
          <target state="translated">See &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env&quot;&gt;the babel-preset-env documentation&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="21e04f153bcd9aba3321a1fec1f81b137078fe83" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/DanielRuf/html-minifier-terser&quot;&gt;html-minifier-terser&lt;/a&gt;'s documentation for more information on the available options.</source>
          <target state="translated">See &lt;a href=&quot;https://github.com/DanielRuf/html-minifier-terser&quot;&gt;html-minifier-terser&lt;/a&gt;'s documentation for more information on the available options.</target>
        </trans-unit>
        <trans-unit id="738fce0b08b68aaadd356b5e3d262658132d9ecd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/babel/babel-preset-env&quot;&gt;the repository&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보 &lt;a href=&quot;https://github.com/babel/babel-preset-env&quot;&gt;는 저장소&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="25eae184a7318828d608e70818c84dbc1ef149d5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/kangax/html-minifier#options-quick-reference&quot;&gt;html-minifier&lt;/a&gt;'s documentation for more information on the available options.</source>
          <target state="translated">사용 가능한 옵션에 대한 자세한 내용 은 &lt;a href=&quot;https://github.com/kangax/html-minifier#options-quick-reference&quot;&gt;html-minifier&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7a67af0e7b928549d8c164387b173b6152b733c3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/sass/node-sass/blob/master/README.md#options&quot;&gt;the Node Sass documentation&lt;/a&gt; for all available Sass options.</source>
          <target state="translated">사용 가능한 모든 Sass 옵션에 대해서는 &lt;a href=&quot;https://github.com/sass/node-sass/blob/master/README.md#options&quot;&gt;Node Sass 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a8521d09abe46eca5f89a9f249b428a47ad9b54" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/webpack-contrib/config-loader#supported-compilers&quot;&gt;Supported Compilers&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/webpack-contrib/config-loader#supported-compilers&quot;&gt;지원되는 컴파일러&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8bdce59079a8af254efa333591f385c2e4a1a6b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;loader-utils&lt;/a&gt; for hash options.</source>
          <target state="translated">해시 옵션에 대해서는 &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;loader-utils&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7798a3cbfb25129bb175d4b855aa5de15054151f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/webpack/the-big-test&quot;&gt;the-big-test&lt;/a&gt; for an example.</source>
          <target state="translated">예제는 &lt;a href=&quot;https://github.com/webpack/the-big-test&quot;&gt;가장 큰 테스트&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64ca0e010d0fda90861b087bd29640d09e0e0c01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/buildin/global.js&quot;&gt;the source&lt;/a&gt; for the exact behavior of this object.</source>
          <target state="translated">이 개체의 정확한 동작에 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/buildin/global.js&quot;&gt;대해서는 소스&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ff7aaaaaa00879584b0b6c995a6489b372a5b90" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/webpack/webpack/issues/2776#issuecomment-233208623&quot;&gt;this discussion&lt;/a&gt; for more information on &lt;code&gt;__webpack_public_path__&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__webpack_public_path__&lt;/code&gt; 에 대한 자세한 정보는 &lt;a href=&quot;https://github.com/webpack/webpack/issues/2776#issuecomment-233208623&quot;&gt;이 토론&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="96e8dd6b60df53db44e35db76f1e3338900f1aac" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://nodejs.org/api/globals.html#globals_global&quot;&gt;node.js global&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/globals.html#globals_global&quot;&gt;node.js global을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e42e31022fc6c9e2f13cb34eead633808bc8ac28" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://nodejs.org/api/globals.html#globals_global&quot;&gt;the Node.js documentation&lt;/a&gt; for the exact behavior of this object.</source>
          <target state="translated">See &lt;a href=&quot;https://nodejs.org/api/globals.html#globals_global&quot;&gt;the Node.js documentation&lt;/a&gt; for the exact behavior of this object.</target>
        </trans-unit>
        <trans-unit id="4b9e843ce89ca0779f59f3e04212aa21a01f8da7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;node.js process&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;node.js 프로세스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ff726a8e26537d00afbdf14b17879f9e968dbb2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; for the options in the configuration file.</source>
          <target state="translated">구성 파일의 옵션에 대해서는 &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;구성&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="01b280437ddaec027ef1957439b631695b9bc79e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript's documentation&lt;/a&gt; to learn more about &lt;code&gt;tsconfig.json&lt;/code&gt; configuration options.</source>
          <target state="translated">&lt;code&gt;tsconfig.json&lt;/code&gt; 구성 옵션 에 대한 자세한 내용은 &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="83cb4a0f1ad6cd59cfe32a45d7ce09134ab199d4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;lazy-loading&quot;&gt;Lazy Loading&lt;/a&gt; for a more concrete example of how &lt;code&gt;import()&lt;/code&gt; can be used in a real application and &lt;a href=&quot;caching&quot;&gt;Caching&lt;/a&gt; to learn how to split code more effectively.</source>
          <target state="translated">참조 &lt;a href=&quot;lazy-loading&quot;&gt;게으른로드하는&lt;/a&gt; 방법에 대한보다 구체적인 예를 들어 &lt;code&gt;import()&lt;/code&gt; 실제 응용 프로그램에서 사용 할 수 있습니다 &lt;a href=&quot;caching&quot;&gt;캐싱&lt;/a&gt; 보다 효과적으로 코드를 분할하는 방법을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4aa4a6053db1ce4338ec4397546a755bfbf845e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;module-variables#moduleid-commonjs&quot;&gt;&lt;code&gt;module.id&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">See &lt;a href=&quot;module-variables#moduleid-commonjs&quot;&gt; &lt;code&gt;module.id&lt;/code&gt; &lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="26d664192e5d4fc17436e485de9b6b6b860e2f68" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;output#output-sourcemapfilename&quot;&gt;&lt;code&gt;output.sourceMapFilename&lt;/code&gt;&lt;/a&gt; to customize the filenames of generated Source Maps.</source>
          <target state="translated">생성 된 소스 맵의 파일 이름을 사용자 정의하려면 &lt;a href=&quot;output#output-sourcemapfilename&quot;&gt; &lt;code&gt;output.sourceMapFilename&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd356deccc69ad6f2a86a9de7b84dcf3835c078c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;output#outputsourcemapfilename&quot;&gt;&lt;code&gt;output.sourceMapFilename&lt;/code&gt;&lt;/a&gt; to customize the filenames of generated Source Maps.</source>
          <target state="translated">See &lt;a href=&quot;output#outputsourcemapfilename&quot;&gt; &lt;code&gt;output.sourceMapFilename&lt;/code&gt; &lt;/a&gt; to customize the filenames of generated Source Maps.</target>
        </trans-unit>
        <trans-unit id="6f43b789c0293ed25a6e2e95688990a899db3700" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;watch&quot;&gt;WatchOptions&lt;/a&gt; for more options.</source>
          <target state="translated">자세한 옵션 은 &lt;a href=&quot;watch&quot;&gt;WatchOptions&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4bd6e6fcdb6dc003d1379a946a135f3ebdd8c90" translate="yes" xml:space="preserve">
          <source>See [Rule.exclude] and [Condition] in the webpack documentation. Paths matching this option will be excluded from processing by polymer-webpack-loader. NOTE: Files imported through a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; will not be excluded by this property. See &lt;code&gt;Options.ignoreLinks&lt;/code&gt;.</source>
          <target state="translated">웹팩 설명서의 [Rule.exclude] 및 [Condition]을 참조하십시오. 이 옵션과 일치하는 경로는 polymer-webpack-loader에 의한 처리에서 제외됩니다. 참고 : &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 를 통해 가져온 파일 은이 속성에서 제외되지 않습니다. &lt;code&gt;Options.ignoreLinks&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6e6566df68fce4fa01fb31ea13de78735f4852d" translate="yes" xml:space="preserve">
          <source>See [Rule.include] and [Condition] in the webpack documentation. Paths matching this option will be processed by polymer-webpack-loader. WARNING: If this property exists the loader will only process files matching the given conditions. If your component has a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; pointing to a component e.g. in another directory, the &lt;code&gt;include&lt;/code&gt; condition(s) MUST also match that directory.</source>
          <target state="translated">웹팩 설명서의 [Rule.include] 및 [Condition]을 참조하십시오. 이 옵션과 일치하는 경로는 polymer-webpack-loader에 의해 처리됩니다. 경고 :이 속성이 존재하면 로더는 주어진 조건과 일치하는 파일 만 처리합니다. 구성 요소에 다른 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 의 구성 요소를 가리키는 &amp;lt;link&amp;gt; 가있는 경우 &lt;code&gt;include&lt;/code&gt; 조건도 해당 디렉토리와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="540660cdb7a8095b32037f0d1b3255264eb36845" translate="yes" xml:space="preserve">
          <source>See an example use of scope</source>
          <target state="translated">범위 사용 예보기</target>
        </trans-unit>
        <trans-unit id="0c968ba1f2e68c9e547f9f5508a57b9a1247ee5f" translate="yes" xml:space="preserve">
          <source>See full implementation</source>
          <target state="translated">See full implementation</target>
        </trans-unit>
        <trans-unit id="9701a07560a9b8b7347be25b91e9e0417527fb9e" translate="yes" xml:space="preserve">
          <source>See stylelint's &lt;a href=&quot;http://stylelint.io/user-guide/node-api/#options&quot;&gt;options&lt;/a&gt; for the complete list of options available. These options are passed through to the &lt;code&gt;stylelint&lt;/code&gt; directly.</source>
          <target state="translated">사용 가능한 전체 옵션 목록은 stylelint의 &lt;a href=&quot;http://stylelint.io/user-guide/node-api/#options&quot;&gt;옵션&lt;/a&gt; 을 참조하십시오 . 이 옵션은 &lt;code&gt;stylelint&lt;/code&gt; 직접 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="b645f65aa6abcfc8ebb29cd64088194502e1abba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../api/hot-module-replacement&quot;&gt;HMR API page&lt;/a&gt; for details on the &lt;code&gt;module.hot&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;module.hot&lt;/code&gt; 인터페이스 에 대한 자세한 내용은 &lt;a href=&quot;../api/hot-module-replacement&quot;&gt;HMR API 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f06e17c42aad5bc5d45bd15cc43aa0215524eea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../configuration/devtool&quot;&gt;devtool documentation&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../configuration/devtool&quot;&gt;devtool 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="db124c35113d6d0e410502b0ae2ac04cb58f7f3f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../guides/environment-variables&quot;&gt;environment variables&lt;/a&gt; guide for more information on its usage.</source>
          <target state="translated">사용법에 대한 자세한 정보 는 &lt;a href=&quot;../guides/environment-variables&quot;&gt;환경 변수&lt;/a&gt; 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dfbbb35c1572ca31560ba547dd6c182eb9ae7d41" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;build-performance&quot;&gt;Build Performance&lt;/a&gt; guide on build tooling.</source>
          <target state="translated">빌드 툴링에 대한 &lt;a href=&quot;build-performance&quot;&gt;빌드 성능&lt;/a&gt; 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="399e32b3d68f8fd68a037b4d71f43fcc1e8b839f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;compiler-hooks&quot;&gt;compiler hooks&lt;/a&gt; section for a detailed listing of all the available &lt;code&gt;compiler&lt;/code&gt; hooks and the parameters they make available.</source>
          <target state="translated">사용 가능한 모든 &lt;code&gt;compiler&lt;/code&gt; 후크와 이들이 사용할 수있는 매개 변수 에 대한 자세한 목록은 &lt;a href=&quot;compiler-hooks&quot;&gt;컴파일러 후크&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59dc1d42f764f543a6b26fbcf0fff54f43822211" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-runtime/&quot;&gt;docs&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-runtime/&quot;&gt;문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b02a200e295054c6f6198fd1fd87e64f93ab872d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/isaacs/node-glob#options&quot;&gt;&lt;code&gt;node-glob&lt;/code&gt; options&lt;/a&gt; in addition to the ones below</source>
          <target state="translated">아래 &lt;a href=&quot;https://github.com/isaacs/node-glob#options&quot;&gt;옵션&lt;/a&gt; 외에 &lt;code&gt;node-glob&lt;/code&gt; 옵션 을 참조하십시오</target>
        </trans-unit>
        <trans-unit id="5e75f40a0487852583b0f91c2d37afff1362a3e4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/webpack-contrib/bundle-loader&quot;&gt;bundle-loader&lt;/a&gt; for a good example of how this process can be used in a more meaningful way.</source>
          <target state="translated">이 프로세스를보다 의미있게 사용할 수있는 방법에 대한 좋은 예 는 &lt;a href=&quot;https://github.com/webpack-contrib/bundle-loader&quot;&gt;번들 로더&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4a17a9dce4916d560a6c6f548a3354e5483e812" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/webpack-contrib/closure-webpack-plugin/tree/master/demo/es5-and-es6&quot;&gt;es5 and es6 output demo&lt;/a&gt; for an example.</source>
          <target state="translated">See the &lt;a href=&quot;https://github.com/webpack-contrib/closure-webpack-plugin/tree/master/demo/es5-and-es6&quot;&gt;es5 and es6 output demo&lt;/a&gt; for an example.</target>
        </trans-unit>
        <trans-unit id="1f44c3a56104228ae5ad924a541711f7050d6b83" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;&lt;code&gt;enhanced-resolve&lt;/code&gt; documentation&lt;/a&gt; for a full list of hooks and their description.</source>
          <target state="translated">See the &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt; &lt;code&gt;enhanced-resolve&lt;/code&gt; documentation&lt;/a&gt; for a full list of hooks and their description.</target>
        </trans-unit>
        <trans-unit id="6ab807fc583820aba669270a2b70a2bd6419044c" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;babel&lt;/code&gt;&lt;a href=&quot;https://babeljs.io/docs/en/options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">See the &lt;code&gt;babel&lt;/code&gt; &lt;a href=&quot;https://babeljs.io/docs/en/options&quot;&gt;options&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="16d9c4ceca390558339c46f282c756d25df67250" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;babel&lt;/code&gt;&lt;a href=&quot;https://babeljs.io/docs/usage/api/#options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;babel&lt;/code&gt; &lt;a href=&quot;https://babeljs.io/docs/usage/api/#options&quot;&gt;옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b15fe73f9453e16c4c0e90bfaffeaefac53438e" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;enhanced-resolve&lt;/code&gt;&lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;documentation&lt;/a&gt; for a full list of hooks and descriptions.</source>
          <target state="translated">후크 및 설명의 전체 목록은 &lt;code&gt;enhanced-resolve&lt;/code&gt; &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="51d046b4332307e92bffdc554b7be2b2c13a49cf" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;styelint&lt;/code&gt;&lt;a href=&quot;https://stylelint.io/user-guide/node-api/#syntax&quot;&gt;user guide&lt;/a&gt; for more info. e.g. use &lt;code&gt;'scss'&lt;/code&gt; to lint .scss files.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;styelint&lt;/code&gt; &lt;a href=&quot;https://stylelint.io/user-guide/node-api/#syntax&quot;&gt;사용 설명서&lt;/a&gt; 를 참조하십시오. 예를 들어 &lt;code&gt;'scss'&lt;/code&gt; 를 사용 하여 .scss 파일을 보푸라기하십시오.</target>
        </trans-unit>
        <trans-unit id="bb048f274dce089db76ee8dbf26c81686597d4d9" translate="yes" xml:space="preserve">
          <source>See the example above. The property name &lt;code&gt;jquery&lt;/code&gt; indicates that the module &lt;code&gt;jquery&lt;/code&gt; in &lt;code&gt;import $ from 'jquery'&lt;/code&gt; should be excluded. In order to replace this module, the value &lt;code&gt;jQuery&lt;/code&gt; will be used to retrieve a global &lt;code&gt;jQuery&lt;/code&gt; variable. In other words, when a string is provided it will be treated as &lt;code&gt;root&lt;/code&gt; (defined above and below).</source>
          <target state="translated">위의 예를 참조하십시오. &lt;code&gt;jquery&lt;/code&gt; 속성 이름 &lt;code&gt;import $ from 'jquery'&lt;/code&gt; 에서 import $의 &lt;code&gt;jquery&lt;/code&gt; 모듈을 제외해야 함을 나타냅니다 . 이 모듈을 대체하기 위해 &lt;code&gt;jQuery&lt;/code&gt; 값 은 글로벌 &lt;code&gt;jQuery&lt;/code&gt; 변수 를 검색하는 데 사용됩니다 . 즉, 문자열이 제공되면 &lt;code&gt;root&lt;/code&gt; (위와 아래 정의) 로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="98ca989d1cebbea761fbf920b84b0ba2fce28481" translate="yes" xml:space="preserve">
          <source>Select &lt;a href=&quot;../configuration/stats&quot;&gt;display preset&lt;/a&gt; (verbose, detailed, normal, minimal, errors-only, none; since webpack 3.0.0)</source>
          <target state="translated">&lt;a href=&quot;../configuration/stats&quot;&gt;디스플레이 사전 설정&lt;/a&gt; 선택 (상세, 상세, 보통, 최소, 오류 만, 없음, 웹팩 3.0.0 이후)</target>
        </trans-unit>
        <trans-unit id="02a4683da7fa051577215d359f49323d1fed0daa" translate="yes" xml:space="preserve">
          <source>Separate App and Vendor Entries</source>
          <target state="translated">별도의 앱 및 공급 업체 항목</target>
        </trans-unit>
        <trans-unit id="25a9ee26c4b89932fb8aeb3410c5bf076f99b63b" translate="yes" xml:space="preserve">
          <source>Separate builds per page</source>
          <target state="translated">Separate builds per page</target>
        </trans-unit>
        <trans-unit id="7af62966614896fe31f4d73a8cd2298b678f5820" translate="yes" xml:space="preserve">
          <source>Separating &lt;code&gt;Interoperable CSS&lt;/code&gt;-only and &lt;code&gt;CSS Module&lt;/code&gt; features</source>
          <target state="translated">Separating &lt;code&gt;Interoperable CSS&lt;/code&gt; -only and &lt;code&gt;CSS Module&lt;/code&gt; features</target>
        </trans-unit>
        <trans-unit id="7a4cb28099ed5c8050dff47fea1337f4ce7c368b" translate="yes" xml:space="preserve">
          <source>Separating a Manifest</source>
          <target state="translated">매니페스트 분리</target>
        </trans-unit>
        <trans-unit id="b39339ce6050cb58d9e6b10477fe4097d2e16fe1" translate="yes" xml:space="preserve">
          <source>Serve over HTTP/2 using &lt;a href=&quot;https://www.npmjs.com/package/spdy&quot;&gt;spdy&lt;/a&gt;. This option is ignored for Node 10.0.0 and above, as spdy is broken for those versions. The dev server will migrate over to Node's built-in HTTP/2 once &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; supports it.</source>
          <target state="translated">Serve over HTTP/2 using &lt;a href=&quot;https://www.npmjs.com/package/spdy&quot;&gt;spdy&lt;/a&gt;. This option is ignored for Node 10.0.0 and above, as spdy is broken for those versions. The dev server will migrate over to Node's built-in HTTP/2 once &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; supports it.</target>
        </trans-unit>
        <trans-unit id="1fdcef2523a6cd581a7dc712082aaf03e4c19355" translate="yes" xml:space="preserve">
          <source>Service URLs</source>
          <target state="translated">서비스 URL</target>
        </trans-unit>
        <trans-unit id="b6726e4199f82bfd68e09b44585c9d961069ec19" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;PostCSS&lt;/code&gt; options and plugins</source>
          <target state="translated">Set &lt;code&gt;PostCSS&lt;/code&gt; options and plugins</target>
        </trans-unit>
        <trans-unit id="57926fa1fd18f54e0b1e889ca065a0bf9d064139" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;postcss.config.js&lt;/code&gt; config path &amp;amp;&amp;amp; &lt;code&gt;ctx&lt;/code&gt;</source>
          <target state="translated">설정 &lt;code&gt;postcss.config.js&lt;/code&gt; config (설정) 경로 &amp;amp;&amp;amp; &lt;code&gt;ctx&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="977a1dca06237783c7ed884a1cd060dca428d020" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;resolve.cacheWithContext: false&lt;/code&gt; if you use custom resolving plugins, that are not context specific.</source>
          <target state="translated">상황에 맞지 않는 사용자 지정 해결 플러그인을 사용하는 경우 &lt;code&gt;resolve.cacheWithContext: false&lt;/code&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="da926ee652c5e2b64bb43ec67d341055922ff2d3" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;resolve.symlinks: false&lt;/code&gt; if you don't use symlinks (e.g. &lt;code&gt;npm link&lt;/code&gt; or &lt;code&gt;yarn link&lt;/code&gt;).</source>
          <target state="translated">symlink를 사용하지 않는 경우 &lt;code&gt;resolve.symlinks: false&lt;/code&gt; 설정하십시오 (예 : &lt;code&gt;npm link&lt;/code&gt; 또는 &lt;code&gt;yarn link&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c190e60485a6f44f7f126542d35e28d4b7e47165" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;target&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; if none of the predefined targets from the list above meet your needs, no plugins will be applied.</source>
          <target state="translated">Set &lt;code&gt;target&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; if none of the predefined targets from the list above meet your needs, no plugins will be applied.</target>
        </trans-unit>
        <trans-unit id="66427df2669361795db97f8973e9a5586225aa6f" translate="yes" xml:space="preserve">
          <source>Set PostCSS Parser</source>
          <target state="translated">PostCSS 파서 설정</target>
        </trans-unit>
        <trans-unit id="d8e30afabd93d52638b2f5f15db249db2a634e27" translate="yes" xml:space="preserve">
          <source>Set PostCSS Plugins</source>
          <target state="translated">PostCSS 플러그인 설정</target>
        </trans-unit>
        <trans-unit id="5c24d7387e93e5be721f9d2dd7f45029a6a59e95" translate="yes" xml:space="preserve">
          <source>Set PostCSS Stringifier</source>
          <target state="translated">PostCSS Stringifier 설정</target>
        </trans-unit>
        <trans-unit id="7650971a575a6117fb73040adce9f05b233748e4" translate="yes" xml:space="preserve">
          <source>Set PostCSS Syntax</source>
          <target state="translated">PostCSS 구문 설정</target>
        </trans-unit>
        <trans-unit id="b4665e2e65095495165596b5446a1974f42fb344" translate="yes" xml:space="preserve">
          <source>Set a URL for source maps. Useful for avoiding cross-origin issues such as:</source>
          <target state="translated">소스 맵의 URL을 설정하십시오. 다음과 같은 출처 간 문제를 피하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b9b598d854e43db0d0151008e3fd5f86873a7bdc" translate="yes" xml:space="preserve">
          <source>Set a URL for source maps. Useful for hosting them on a host that requires authorization.</source>
          <target state="translated">소스 맵의 URL을 설정하십시오. 인증이 필요한 호스트에서 호스트하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d2d23439aa12147ad1bf33f7b346add960b19f8d" translate="yes" xml:space="preserve">
          <source>Set min/max limits for chunking to better control chunking</source>
          <target state="translated">청킹을보다 잘 제어하기 위해 청킹에 대한 최소 / 최대 한계 설정</target>
        </trans-unit>
        <trans-unit id="0207023c93088679bd649f17d88fdab51785c76a" translate="yes" xml:space="preserve">
          <source>Set module ID base (DLLPlugin)</source>
          <target state="translated">모듈 ID베이스 설정 (DLLPlugin)</target>
        </trans-unit>
        <trans-unit id="561fbe0dc88f915a9b7ac6bdc9b28365b143eada" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;mode&lt;/code&gt; configuration option to &lt;a href=&quot;../concepts/mode#mode-development&quot;&gt;development&lt;/a&gt; to make sure that the bundle is not minified:</source>
          <target state="translated">설정 &lt;code&gt;mode&lt;/code&gt; 로 구성 옵션 &lt;a href=&quot;../concepts/mode#mode-development&quot;&gt;개발을&lt;/a&gt; 번들이 축소 된하지 않아야합니다 :</target>
        </trans-unit>
        <trans-unit id="921b8993e82f242c1e163d25be3cc3115373d5f5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;mode&lt;/code&gt; configuration option to &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;development&lt;/a&gt; to make sure that the bundle is not minified:</source>
          <target state="translated">Set the &lt;code&gt;mode&lt;/code&gt; configuration option to &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;development&lt;/a&gt; to make sure that the bundle is not minified:</target>
        </trans-unit>
        <trans-unit id="ebec1a5c0fe60a9d3ac8934cc3644b31604057a1" translate="yes" xml:space="preserve">
          <source>Set the inner regular expression for partial dynamic dependencies : &lt;code&gt;wrappedContextRegExp: /\\.\\*/&lt;/code&gt;</source>
          <target state="translated">Set the inner regular expression for partial dynamic dependencies : &lt;code&gt;wrappedContextRegExp: /\\.\\*/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c64c2e007b59db562c0f3dc27d8a46c95fb790b" translate="yes" xml:space="preserve">
          <source>Set the value of &lt;code&gt;require.amd&lt;/code&gt; or &lt;code&gt;define.amd&lt;/code&gt;. Setting &lt;code&gt;amd&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will disable webpack's AMD support.</source>
          <target state="translated">Set the value of &lt;code&gt;require.amd&lt;/code&gt; or &lt;code&gt;define.amd&lt;/code&gt; . Setting &lt;code&gt;amd&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will disable webpack's AMD support.</target>
        </trans-unit>
        <trans-unit id="4af885ecb6c1963071180f884af4e9eefe7b8bbe" translate="yes" xml:space="preserve">
          <source>Set the value of &lt;code&gt;require.amd&lt;/code&gt; or &lt;code&gt;define.amd&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;require.amd&lt;/code&gt; 또는 &lt;code&gt;define.amd&lt;/code&gt; 값을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5c81da2bb237f955713f59fd470c2efd450cc8a" translate="yes" xml:space="preserve">
          <source>Set the worker type.</source>
          <target state="translated">Set the worker type.</target>
        </trans-unit>
        <trans-unit id="a6900da3a5e926ee28a5cf95f4b9a4ea69c97c3f" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to allow return statements outside of functions</source>
          <target state="translated">함수 외부에서 리턴 문을 허용 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7034ab7e3f15d92c7322de7f7c5d4c03e1200953" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to instrument ES2015 Modules</source>
          <target state="translated">ES2015 모듈을 인스트루먼트 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="27232a53dc74afb89b57230060952fc6fe9ded4f" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to produce a source map for the instrumented code</source>
          <target state="translated">인스 트루먼 테이션 된 코드의 소스 맵을 생성 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2d480762f2fe245b7aa18c4fc3067dcc709d69a8" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; on &lt;code&gt;DefinePlugin&lt;/code&gt; to value &lt;code&gt;development&lt;/code&gt;. Enables &lt;code&gt;NamedChunksPlugin&lt;/code&gt; and &lt;code&gt;NamedModulesPlugin&lt;/code&gt;.</source>
          <target state="translated">설정 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 을 에 &lt;code&gt;DefinePlugin&lt;/code&gt; 값으로 &lt;code&gt;development&lt;/code&gt; . &lt;code&gt;NamedChunksPlugin&lt;/code&gt; 및 &lt;code&gt;NamedModulesPlugin&lt;/code&gt; 을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="4da7a2da1d13d72e6d6d6222f44ab4cb6443d256" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; on &lt;code&gt;DefinePlugin&lt;/code&gt; to value &lt;code&gt;development&lt;/code&gt;. Enables useful names for modules and chunks.</source>
          <target state="translated">Sets &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; on &lt;code&gt;DefinePlugin&lt;/code&gt; to value &lt;code&gt;development&lt;/code&gt; . Enables useful names for modules and chunks.</target>
        </trans-unit>
        <trans-unit id="acfa30009e3a81fd4a2170737da9348495586e0e" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; on &lt;code&gt;DefinePlugin&lt;/code&gt; to value &lt;code&gt;production&lt;/code&gt;. Enables &lt;code&gt;FlagDependencyUsagePlugin&lt;/code&gt;, &lt;code&gt;FlagIncludedChunksPlugin&lt;/code&gt;, &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt;, &lt;code&gt;NoEmitOnErrorsPlugin&lt;/code&gt;, &lt;code&gt;OccurrenceOrderPlugin&lt;/code&gt;, &lt;code&gt;SideEffectsFlagPlugin&lt;/code&gt; and &lt;code&gt;UglifyJsPlugin&lt;/code&gt;.</source>
          <target state="translated">설정 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 을 에 &lt;code&gt;DefinePlugin&lt;/code&gt; 값에 &lt;code&gt;production&lt;/code&gt; . 가능 &lt;code&gt;FlagDependencyUsagePlugin&lt;/code&gt; , &lt;code&gt;FlagIncludedChunksPlugin&lt;/code&gt; , &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; , &lt;code&gt;NoEmitOnErrorsPlugin&lt;/code&gt; , &lt;code&gt;OccurrenceOrderPlugin&lt;/code&gt; , &lt;code&gt;SideEffectsFlagPlugin&lt;/code&gt; 및 &lt;code&gt;UglifyJsPlugin&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="9619c22b98ea2e31eac12f69d8e0d3fcadf9058f" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; on &lt;code&gt;DefinePlugin&lt;/code&gt; to value &lt;code&gt;production&lt;/code&gt;. Enables deterministic mangled names for modules and chunks, &lt;code&gt;FlagDependencyUsagePlugin&lt;/code&gt;, &lt;code&gt;FlagIncludedChunksPlugin&lt;/code&gt;, &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt;, &lt;code&gt;NoEmitOnErrorsPlugin&lt;/code&gt; and &lt;code&gt;TerserPlugin&lt;/code&gt;.</source>
          <target state="translated">Sets &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; on &lt;code&gt;DefinePlugin&lt;/code&gt; to value &lt;code&gt;production&lt;/code&gt; . Enables deterministic mangled names for modules and chunks, &lt;code&gt;FlagDependencyUsagePlugin&lt;/code&gt; , &lt;code&gt;FlagIncludedChunksPlugin&lt;/code&gt; , &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; , &lt;code&gt;NoEmitOnErrorsPlugin&lt;/code&gt; and &lt;code&gt;TerserPlugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="750a2ccd76902472baeba86abf16b74d3bb4724c" translate="yes" xml:space="preserve">
          <source>Sets module ID base (DLLPlugin)</source>
          <target state="translated">Sets module ID base (DLLPlugin)</target>
        </trans-unit>
        <trans-unit id="9516a7e8b65caaaccca85e1c01699243ffcde455" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;stats#stats-presets&quot;&gt;preset&lt;/a&gt; for the type of information that gets displayed. It is useful for &lt;a href=&quot;stats#extending-stats-behaviours&quot;&gt;extending stats behaviours&lt;/a&gt;.</source>
          <target state="translated">Sets the &lt;a href=&quot;stats#stats-presets&quot;&gt;preset&lt;/a&gt; for the type of information that gets displayed. It is useful for &lt;a href=&quot;stats#extending-stats-behaviours&quot;&gt;extending stats behaviours&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9394fdd1a8c4f17fcb036340aa1e03f4efa1d799" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;cache&lt;/code&gt; type to either in memory or on the file system. The &lt;code&gt;memory&lt;/code&gt; option is very straightforward, it tells webpack to store cache in memory and doesn't allow additional configuration:</source>
          <target state="translated">Sets the &lt;code&gt;cache&lt;/code&gt; type to either in memory or on the file system. The &lt;code&gt;memory&lt;/code&gt; option is very straightforward, it tells webpack to store cache in memory and doesn't allow additional configuration:</target>
        </trans-unit>
        <trans-unit id="80b3fc3e555c76d3e9f9249a5a30228bda49860b" translate="yes" xml:space="preserve">
          <source>Sets the MIME type for the file to be transformed.</source>
          <target state="translated">Sets the MIME type for the file to be transformed.</target>
        </trans-unit>
        <trans-unit id="b44057d8fee68da59cba19ea8a30d01487d12379" translate="yes" xml:space="preserve">
          <source>Sets the MIME type for the file to be transformed. If unspecified the file extensions will be used to lookup the MIME type.</source>
          <target state="translated">변환 될 파일의 ​​MIME 유형을 설정합니다. 지정하지 않으면 파일 확장자가 MIME 유형을 조회하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6391b22e3020eb475858abab762483b734b3dc5e" translate="yes" xml:space="preserve">
          <source>Sets the build target</source>
          <target state="translated">Sets the build target</target>
        </trans-unit>
        <trans-unit id="cbba182d8305005408a9f7ebb0a5d5eb2d951e84" translate="yes" xml:space="preserve">
          <source>Sets the context directory for shortening the request information.</source>
          <target state="translated">Sets the context directory for shortening the request information.</target>
        </trans-unit>
        <trans-unit id="0c654ed0e592201e7e229b29859e6217fbf4a8fc" translate="yes" xml:space="preserve">
          <source>Sets the hint for chunk id. It will be added to chunk's filename.</source>
          <target state="translated">Sets the hint for chunk id. It will be added to chunk's filename.</target>
        </trans-unit>
        <trans-unit id="84f08e40df2d52003b9253d4b374af00516b0e38" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of visible modules in output</source>
          <target state="translated">출력에서 보이는 모듈의 최대 개수를 설정합니다</target>
        </trans-unit>
        <trans-unit id="346bfc94aa795074409443bbe565c205d691ceef" translate="yes" xml:space="preserve">
          <source>Sets the name prefix for created chunks.</source>
          <target state="translated">Sets the name prefix for created chunks.</target>
        </trans-unit>
        <trans-unit id="b08ef6dbc58ea19c63523b605805c1a53f79b5d4" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;eager: true&lt;/code&gt; for dependency via the &lt;code&gt;ModuleFederationPlugin&lt;/code&gt;</source>
          <target state="translated">Setting &lt;code&gt;eager: true&lt;/code&gt; for dependency via the &lt;code&gt;ModuleFederationPlugin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a47602f69b4e0b1e2c30e2f90d0726e6edf2054c" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;module&lt;/code&gt; and/or &lt;code&gt;columns&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will yield less accurate source maps but will also improve compilation performance significantly.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 및 / 또는 &lt;code&gt;columns&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하면 소스 맵의 정확도가 떨어지지 만 컴파일 성능이 크게 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="9abe39d8332987f77fd24151008ae6f5f333482e" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;optimization.runtimeChunk&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;&quot;multiple&quot;&lt;/code&gt; adds an additional chunk to each entrypoint containing only the runtime. This setting is an alias for:</source>
          <target state="translated">&lt;code&gt;optimization.runtimeChunk&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;&quot;multiple&quot;&lt;/code&gt; 로 설정 하면 런타임 만 포함하는 각 진입 점에 추가 청크가 추가됩니다. 이 설정은 다음에 대한 별명입니다.</target>
        </trans-unit>
        <trans-unit id="9a68369aae104c40767e16c0b3be89cf3e2b01d5" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;optimization.runtimeChunk&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;'multiple'&lt;/code&gt; adds an additional chunk containing only the runtime to each entrypoint. This setting is an alias for:</source>
          <target state="translated">Setting &lt;code&gt;optimization.runtimeChunk&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;'multiple'&lt;/code&gt; adds an additional chunk containing only the runtime to each entrypoint. This setting is an alias for:</target>
        </trans-unit>
        <trans-unit id="35be3cd36e2f343b1e5d629adb4f1a692d4b0cbf" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;recordsPath&lt;/code&gt; will essentially set &lt;code&gt;recordsInputPath&lt;/code&gt; and &lt;code&gt;recordsOutputPath&lt;/code&gt; to the same location. This is usually all that's necessary unless you decide to change the name of the file containing the records. See below for an example.</source>
          <target state="translated">설정 &lt;code&gt;recordsPath&lt;/code&gt; 은 기본적으로 설정됩니다 &lt;code&gt;recordsInputPath&lt;/code&gt; 및 &lt;code&gt;recordsOutputPath&lt;/code&gt; 을 같은 위치에. 레코드가 포함 된 파일 이름을 변경하지 않는 한 일반적으로 필요한 모든 것입니다. 예는 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8d6929ae3e73cd73efc0bf627e56d68b870bed49" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;resolve.alias&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will tell webpack to ignore a module.</source>
          <target state="translated">Setting &lt;code&gt;resolve.alias&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will tell webpack to ignore a module.</target>
        </trans-unit>
        <trans-unit id="cc4f76dce0360734ac3333dd77298fd604d0b93d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;stats.excludeModules&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will disable the exclude behaviour.</source>
          <target state="translated">Setting &lt;code&gt;stats.excludeModules&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will disable the exclude behaviour.</target>
        </trans-unit>
        <trans-unit id="ecc7e910e2161aa171ae2455c116705909b33182" translate="yes" xml:space="preserve">
          <source>Setting sourceURL</source>
          <target state="translated">sourceURL 설정</target>
        </trans-unit>
        <trans-unit id="732e38a76ab7d2824c4816c5a2bea3d58d51d17a" translate="yes" xml:space="preserve">
          <source>Setting the library name as &lt;code&gt;webpack-numbers&lt;/code&gt;.</source>
          <target state="translated">같은 라이브러리 이름 설정 &lt;code&gt;webpack-numbers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad3a69c8a9beb9ffb90bf70ea832910c0071e097" translate="yes" xml:space="preserve">
          <source>Setting the option to &lt;code&gt;false&lt;/code&gt; disables the parser.</source>
          <target state="translated">옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하면 파서가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="38226df5919c60847b352cb49dbd61d50c50ade7" translate="yes" xml:space="preserve">
          <source>Setting the option to &lt;code&gt;true&lt;/code&gt; or leaving it &lt;code&gt;undefined&lt;/code&gt; enables the parser.</source>
          <target state="translated">옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정 하거나 &lt;code&gt;undefined&lt;/code&gt; 하지 않은 상태로두면 파서가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="746e4755adbf722eb3c4ec78507c6a19b58fedd6" translate="yes" xml:space="preserve">
          <source>Setting the value for &lt;code&gt;maxSize&lt;/code&gt; sets the value for both &lt;code&gt;maxAsyncSize&lt;/code&gt; and &lt;code&gt;maxInitialSize&lt;/code&gt;.</source>
          <target state="translated">Setting the value for &lt;code&gt;maxSize&lt;/code&gt; sets the value for both &lt;code&gt;maxAsyncSize&lt;/code&gt; and &lt;code&gt;maxInitialSize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b98a94c3f9ab2f10447cacefc1ecd547f3eb476" translate="yes" xml:space="preserve">
          <source>Setting up HtmlWebpackPlugin</source>
          <target state="translated">HtmlWebpackPlugin 설정</target>
        </trans-unit>
        <trans-unit id="fc1c20bdfc8c7649ce4c9e6c0d21928b7e5fdf1f" translate="yes" xml:space="preserve">
          <source>Setting up your &lt;code&gt;env&lt;/code&gt; variable without assignment, &lt;code&gt;--env production&lt;/code&gt; sets &lt;code&gt;env.production&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; by default. There are also other syntaxes that you can use. See the &lt;a href=&quot;../api/cli#environment-options&quot;&gt;webpack CLI&lt;/a&gt; documentation for more information.</source>
          <target state="translated">Setting up your &lt;code&gt;env&lt;/code&gt; variable without assignment, &lt;code&gt;--env production&lt;/code&gt; sets &lt;code&gt;env.production&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; by default. There are also other syntaxes that you can use. See the &lt;a href=&quot;../api/cli#environment-options&quot;&gt;webpack CLI&lt;/a&gt; documentation for more information.</target>
        </trans-unit>
        <trans-unit id="3b1a1740689e27b23eb98ff1b2e6b556d00f3a2f" translate="yes" xml:space="preserve">
          <source>Setting up your &lt;code&gt;env&lt;/code&gt; variable without assignment, &lt;code&gt;--env.production&lt;/code&gt; sets &lt;code&gt;--env.production&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; by default. There are also other syntaxes that you can use. See the &lt;a href=&quot;../api/cli#environment-options&quot;&gt;webpack CLI&lt;/a&gt; documentation for more information.</source>
          <target state="translated">당신의 설정 &lt;code&gt;env&lt;/code&gt; 할당없이 변수를 &lt;code&gt;--env.production&lt;/code&gt; 세트 &lt;code&gt;--env.production&lt;/code&gt; 에 &lt;code&gt;true&lt;/code&gt; 기본적으로. 사용할 수있는 다른 구문도 있습니다. 자세한 내용은 &lt;a href=&quot;../api/cli#environment-options&quot;&gt;webpack CLI&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f091807cce6228669a85e022a61d7b0cdf8d5c14" translate="yes" xml:space="preserve">
          <source>Setting value of &lt;code&gt;stats.preset&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; tells webpack to use &lt;code&gt;'none'&lt;/code&gt;&lt;a href=&quot;stats#stats-presets&quot;&gt;stats preset&lt;/a&gt;.</source>
          <target state="translated">Setting value of &lt;code&gt;stats.preset&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; tells webpack to use &lt;code&gt;'none'&lt;/code&gt; &lt;a href=&quot;stats#stats-presets&quot;&gt;stats preset&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="a417cedf4b903f725fb28bbec6e6b1c6ad32e448" translate="yes" xml:space="preserve">
          <source>Setup &lt;code&gt;mode&lt;/code&gt; option. You can omit the value when you want &lt;code&gt;local&lt;/code&gt; mode.</source>
          <target state="translated">Setup &lt;code&gt;mode&lt;/code&gt; option. You can omit the value when you want &lt;code&gt;local&lt;/code&gt; mode.</target>
        </trans-unit>
        <trans-unit id="06343539d4b09a539dc93bc4ce9a53d7620487f7" translate="yes" xml:space="preserve">
          <source>Setup &lt;code&gt;parser&lt;/code&gt;:</source>
          <target state="translated">Setup &lt;code&gt;parser&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e9f3d54d7f76ee4ed58e446b5d8bd2cc396dd4d5" translate="yes" xml:space="preserve">
          <source>Setup &lt;code&gt;plugins&lt;/code&gt;:</source>
          <target state="translated">Setup &lt;code&gt;plugins&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a58e381443f8dae9920c25241a24e22bef5b4b1e" translate="yes" xml:space="preserve">
          <source>Setup &lt;code&gt;stringifier&lt;/code&gt;:</source>
          <target state="translated">Setup &lt;code&gt;stringifier&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4430078cc3f17efcd67906a764962adfbabe4451" translate="yes" xml:space="preserve">
          <source>Setup &lt;code&gt;syntax&lt;/code&gt;:</source>
          <target state="translated">Setup &lt;code&gt;syntax&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb4d920494999ce00b8ac41d3d56ec520fa5dac7" translate="yes" xml:space="preserve">
          <source>Setup Sass implementation to use.</source>
          <target state="translated">Setup Sass implementation to use.</target>
        </trans-unit>
        <trans-unit id="0add13475db107be44c2f21884cadaf95cb57326" translate="yes" xml:space="preserve">
          <source>Setup a module alias for resolving</source>
          <target state="translated">해결을위한 모듈 별명 설정</target>
        </trans-unit>
        <trans-unit id="247c67df3b13b6b80d98b21ae8f6284a9a668318" translate="yes" xml:space="preserve">
          <source>Setup extensions that should be used to resolve modules</source>
          <target state="translated">모듈을 해결하는 데 사용해야하는 설치 확장</target>
        </trans-unit>
        <trans-unit id="670aedbae56fc7266636f0d87893e55633606f9a" translate="yes" xml:space="preserve">
          <source>Setup the &lt;code&gt;target&lt;/code&gt; option to &lt;code&gt;node&lt;/code&gt;/&lt;code&gt;electron-main&lt;/code&gt;/&lt;code&gt;electron-main&lt;/code&gt; value and do not mock the &lt;code&gt;__dirname&lt;/code&gt; global variable.</source>
          <target state="translated">Setup the &lt;code&gt;target&lt;/code&gt; option to &lt;code&gt;node&lt;/code&gt; / &lt;code&gt;electron-main&lt;/code&gt; / &lt;code&gt;electron-main&lt;/code&gt; value and do not mock the &lt;code&gt;__dirname&lt;/code&gt; global variable.</target>
        </trans-unit>
        <trans-unit id="35b744601436a99f3c336760ff9e68609dbdd3d2" translate="yes" xml:space="preserve">
          <source>Shared modules are modules that are both overridable and provided as overrides to nested container. They usually point to the same module in each build, e.g. the same library.</source>
          <target state="translated">Shared modules are modules that are both overridable and provided as overrides to nested container. They usually point to the same module in each build, e.g. the same library.</target>
        </trans-unit>
        <trans-unit id="5f32428e1f0599d3254f040dfbc73145a6af61f4" translate="yes" xml:space="preserve">
          <source>Shimming</source>
          <target state="translated">Shimming</target>
        </trans-unit>
        <trans-unit id="3ddfa9ff00acfac3af6747689d59e9b1f7145615" translate="yes" xml:space="preserve">
          <source>Shimming Globals</source>
          <target state="translated">쉬밍 글로벌</target>
        </trans-unit>
        <trans-unit id="7a22f823528311add4d99a1cb48b73839ac1ae57" translate="yes" xml:space="preserve">
          <source>Short names - usually a single char - focused on minimal download size.</source>
          <target state="translated">Short names - usually a single char - focused on minimal download size.</target>
        </trans-unit>
        <trans-unit id="81cea26f857d5e5810f11505a8c297b46cc6b639" translate="yes" xml:space="preserve">
          <source>Short names - usually two chars - which will not change when adding or removing exports. Good for long term caching.</source>
          <target state="translated">Short names - usually two chars - which will not change when adding or removing exports. Good for long term caching.</target>
        </trans-unit>
        <trans-unit id="d6976882d7f88872a4a0b0b41d37418d42e07418" translate="yes" xml:space="preserve">
          <source>Short numeric ids which will not be changing between compilation. Good for long term caching. Enabled by default for production mode.</source>
          <target state="translated">Short numeric ids which will not be changing between compilation. Good for long term caching. Enabled by default for production mode.</target>
        </trans-unit>
        <trans-unit id="e2012dea310d50697bda7f1580ccc7095c8e5a90" translate="yes" xml:space="preserve">
          <source>Shortcut</source>
          <target state="translated">Shortcut</target>
        </trans-unit>
        <trans-unit id="90c93523ff95f6469ea7fab8ffa47ed0ddc9bc0c" translate="yes" xml:space="preserve">
          <source>Shortcuts</source>
          <target state="translated">Shortcuts</target>
        </trans-unit>
        <trans-unit id="0496dde020b028d805418e01d53e7ca651c2ed52" translate="yes" xml:space="preserve">
          <source>Shorthand for using the &lt;a href=&quot;define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;process.env&lt;/code&gt; keys</source>
          <target state="translated">사용 속기 &lt;a href=&quot;define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; 을&lt;/a&gt; 에 &lt;code&gt;process.env&lt;/code&gt; 의 키</target>
        </trans-unit>
        <trans-unit id="18221a52d33769e702d76dbbd39a1214ff4f221c" translate="yes" xml:space="preserve">
          <source>Should a source map be generated. Since generating source maps can be an expensive task, you should check if source maps are actually requested.</source>
          <target state="translated">소스 맵이 생성되어야합니다. 소스 맵 생성은 비용이 많이 드는 작업이므로 소스 맵이 실제로 요청되는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="e758d3d06c2c5929685b246142ce8e59564afca0" translate="yes" xml:space="preserve">
          <source>Should the result be minimized.</source>
          <target state="translated">결과가 최소화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6d79faae46113c53e1ab36a416991f347af2a116" translate="yes" xml:space="preserve">
          <source>Show more details</source>
          <target state="translated">자세한 내용 표시</target>
        </trans-unit>
        <trans-unit id="d327f0da075e2fae319bf6069e1a422c8736e4f2" translate="yes" xml:space="preserve">
          <source>Shows a full-screen overlay in the browser when there are compiler errors or warnings. Disabled by default. If you want to show only compiler errors:</source>
          <target state="translated">컴파일러 오류 또는 경고가있는 경우 브라우저에 전체 화면 오버레이를 표시합니다. 기본적으로 비활성화되어 있습니다. 컴파일러 오류 만 표시하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b2fb6a5e22d7e871b0703756457bd7f297a8c14d" translate="yes" xml:space="preserve">
          <source>Shows a full-screen overlay in the browser when there are compiler errors or warnings. If you want to show only compiler errors:</source>
          <target state="translated">Shows a full-screen overlay in the browser when there are compiler errors or warnings. If you want to show only compiler errors:</target>
        </trans-unit>
        <trans-unit id="8a99cbea4a95872d667cc46d8128f7f43ef75039" translate="yes" xml:space="preserve">
          <source>Sibling containers cannot override each other's modules.</source>
          <target state="translated">Sibling containers cannot override each other's modules.</target>
        </trans-unit>
        <trans-unit id="68db8a594997290744bfc0d3f60cbcaa3bfee219" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;require.ensure&lt;/code&gt;, this will split the given &lt;code&gt;dependencies&lt;/code&gt; into a separate bundle that will be loaded asynchronously. The &lt;code&gt;callback&lt;/code&gt; will be called with the exports of each dependency in the &lt;code&gt;dependencies&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;require.ensure&lt;/code&gt; 와 유사하게 , 이것은 주어진 &lt;code&gt;dependencies&lt;/code&gt; 을 비동기 적으로로드 될 별도의 번들로 나눕니다. &lt;code&gt;dependencies&lt;/code&gt; 배열 의 각 종속성 내보내기를 통해 &lt;code&gt;callback&lt;/code&gt; 이 호출 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a6f3a1e1f354c12ccb006ee799c04b144ddcef6f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;require.resolve&lt;/code&gt;, but this won't pull the &lt;code&gt;module&lt;/code&gt; into the bundle. It's what is considered a &quot;weak&quot; dependency.</source>
          <target state="translated">유사합니다 &lt;code&gt;require.resolve&lt;/code&gt; , 그러나 이것은 당겨하지 않습니다 &lt;code&gt;module&lt;/code&gt; 번들로. &quot;약한&quot;종속성으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a78dd3565d3ca963abe26663b75b346fcd6a29d2" translate="yes" xml:space="preserve">
          <source>Similar to the above one, but instead of moving common modules into the parent (which increases initial load time) a new async-loaded additional commons chunk is used. This is automatically downloaded in parallel when the additional chunk is downloaded.</source>
          <target state="translated">위와 유사하지만 공통 모듈을 상위로 이동하는 대신 (초기로드 시간이 증가 함) 새로운 비동기로드 된 추가 공통 청크가 사용됩니다. 추가 청크를 다운로드하면 자동으로 병렬로 다운로드됩니다.</target>
        </trans-unit>
        <trans-unit id="4e92266701ea10892f677e28bfdc47255c556b12" translate="yes" xml:space="preserve">
          <source>Similar to what &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; does, the CSS can be extracted in one CSS file using &lt;code&gt;optimization.splitChunks.cacheGroups&lt;/code&gt;.</source>
          <target state="translated">것과 유사 &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;추출물 - 텍스트 웹팩 - 플러그인&lt;/a&gt; 않습니다, CSS를 하나 개의 CSS 파일을 사용하여 추출 할 수 &lt;code&gt;optimization.splitChunks.cacheGroups&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0785bdec9485cf289af79fa7f5707a7cbc518227" translate="yes" xml:space="preserve">
          <source>Similarly, to use &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt;, you would first install the necessary dependencies:</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; 를 사용 하려면 먼저 필요한 종속성을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b94d5c09e893d4a1b6cd3665645a9a5ad691a741" translate="yes" xml:space="preserve">
          <source>Similarly, to use &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt;, you would first install the necessary dependencies:</source>
          <target state="translated">Similarly, to use &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt;, you would first install the necessary dependencies:</target>
        </trans-unit>
        <trans-unit id="6a54cd02186f2196136676e6657a0a8d2e2d69ed" translate="yes" xml:space="preserve">
          <source>Similarly, when implementing the HMR interface in a module, you can describe what should happen when the module is updated. However, in most cases, it's not mandatory to write HMR code in every module. If a module has no HMR handlers, the update bubbles up. This means that a single handler can update a complete module tree. If a single module from the tree is updated, the entire set of dependencies is reloaded.</source>
          <target state="translated">마찬가지로 모듈에서 HMR 인터페이스를 구현할 때 모듈이 업데이트 될 때 발생하는 상황을 설명 할 수 있습니다. 그러나 대부분의 경우 모든 모듈에서 HMR 코드를 작성해야하는 것은 아닙니다. 모듈에 HMR 처리기가 없으면 업데이트가 시작됩니다. 이는 단일 핸들러가 완전한 모듈 트리를 업데이트 할 수 있음을 의미합니다. 트리에서 단일 모듈이 업데이트되면 전체 종속성 세트가 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="7efef6f32b9aee814f5e770483cd5c591105998c" translate="yes" xml:space="preserve">
          <source>Simple Configuration</source>
          <target state="translated">간단한 구성</target>
        </trans-unit>
        <trans-unit id="60a582320e94817aedf4402d3e0f6ea7c1579518" translate="yes" xml:space="preserve">
          <source>Simple function:</source>
          <target state="translated">Simple function:</target>
        </trans-unit>
        <trans-unit id="9d259e43250c65f449f9618bcb5b8a51f9bbc632" translate="yes" xml:space="preserve">
          <source>Simple prefetch example can be having a &lt;code&gt;HomePage&lt;/code&gt; component, which renders a &lt;code&gt;LoginButton&lt;/code&gt; component which then on demand loads a &lt;code&gt;LoginModal&lt;/code&gt; component after being clicked.</source>
          <target state="translated">간단한 프리 페치 예제에는 &lt;code&gt;HomePage&lt;/code&gt; 구성 요소 가있을 수 있으며 ,이 구성 요소는 클릭하면 &lt;code&gt;LoginModal&lt;/code&gt; 구성 요소를 로드하는 &lt;code&gt;LoginButton&lt;/code&gt; 구성 요소를 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="228f8b425edcd5e53740dc2dc5966c87dfe007ce" translate="yes" xml:space="preserve">
          <source>Simple preload example can be having a &lt;code&gt;Component&lt;/code&gt; which always depends on a big library that should be in a separate chunk.</source>
          <target state="translated">간단한 프리로드 예제 에는 항상 별도의 청크에 있어야하는 큰 라이브러리에 의존 하는 &lt;code&gt;Component&lt;/code&gt; 가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65ef5410be05cb89e60cabc1457ef7dabf6053ba" translate="yes" xml:space="preserve">
          <source>Simple rule: The URL of your &lt;a href=&quot;#output-path&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; from the view of the HTML page.</source>
          <target state="translated">간단한 규칙 : HTML 페이지보기에서 &lt;a href=&quot;#output-path&quot;&gt; &lt;code&gt;output.path&lt;/code&gt; &lt;/a&gt; 의 URL입니다 .</target>
        </trans-unit>
        <trans-unit id="108cb0eddad410e28385d9656de34dafdf3cd100" translate="yes" xml:space="preserve">
          <source>Simple rule: The URL of your &lt;a href=&quot;#outputpath&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; from the view of the HTML page.</source>
          <target state="translated">Simple rule: The URL of your &lt;a href=&quot;#outputpath&quot;&gt; &lt;code&gt;output.path&lt;/code&gt; &lt;/a&gt; from the view of the HTML page.</target>
        </trans-unit>
        <trans-unit id="032755a968e7ece37d3cc818cc27da692b03e94f" translate="yes" xml:space="preserve">
          <source>Simple rule: one entry point per HTML page. SPA: one entry point, MPA: multiple entry points.</source>
          <target state="translated">간단한 규칙 : HTML 페이지 당 하나의 진입 점. SPA : 하나의 진입 점, MPA : 여러 진입 점.</target>
        </trans-unit>
        <trans-unit id="2163d6e3cc7a704a0ac03d8177c00be1cef615d4" translate="yes" xml:space="preserve">
          <source>Simply add configuration object to &lt;code&gt;module.loaders&lt;/code&gt; like this.</source>
          <target state="translated">&lt;code&gt;module.loaders&lt;/code&gt; 같이 구성 객체를 module.loaders에 추가하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="9e333f564bbc6ec1a19005225d29ff4dc69603b0" translate="yes" xml:space="preserve">
          <source>Simply add the loader to your configuration, and pass options.</source>
          <target state="translated">Simply add the loader to your configuration, and pass options.</target>
        </trans-unit>
        <trans-unit id="eaa02916805fbceffac33dedf00c7cf53d8a601a" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-runtime&quot;&gt;@babel/plugin-transform-runtime&lt;/a&gt; includes a polyfill that includes a custom &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;regenerator-runtime&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;, the following usual shimming method using &lt;code&gt;webpack.ProvidePlugin&lt;/code&gt; will not work:</source>
          <target state="translated">Since &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-runtime&quot;&gt;@babel/plugin-transform-runtime&lt;/a&gt; includes a polyfill that includes a custom &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;regenerator-runtime&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt;, the following usual shimming method using &lt;code&gt;webpack.ProvidePlugin&lt;/code&gt; will not work:</target>
        </trans-unit>
        <trans-unit id="bac32b0b00e4110b7f59981ae16e482f54e07a1f" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-runtime&quot;&gt;babel-plugin-transform-runtime&lt;/a&gt; includes a polyfill that includes a custom &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;regenerator runtime&lt;/a&gt; and &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core.js&lt;/a&gt;, the following usual shimming method using &lt;code&gt;webpack.ProvidePlugin&lt;/code&gt; will not work:</source>
          <target state="translated">이후 &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-runtime&quot;&gt;바벨 - 플러그인 - 변환 - 런타임은&lt;/a&gt; 사용자 정의가 포함 된 polyfill 포함 &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;재생기 런타임&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core.js&lt;/a&gt; 다음과 같은 일반적인 shimming 방법을 사용하여, &lt;code&gt;webpack.ProvidePlugin&lt;/code&gt; 가 작동하지 않습니다를 :</target>
        </trans-unit>
        <trans-unit id="3a0b4df48665f5e543e93aae4f1b0aef234d64a1" translate="yes" xml:space="preserve">
          <source>Since &lt;strong&gt;plugins&lt;/strong&gt; can take arguments/options, you must pass a &lt;code&gt;new&lt;/code&gt; instance to the &lt;code&gt;plugins&lt;/code&gt; property in your webpack configuration.</source>
          <target state="translated">&lt;strong&gt;플러그인&lt;/strong&gt; 은 인수 / 옵션을 &lt;strong&gt;사용할&lt;/strong&gt; 수 있으므로 웹팩 구성 의 &lt;code&gt;plugins&lt;/code&gt; 특성에 &lt;code&gt;new&lt;/code&gt; 인스턴스를 전달해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c47b0ddd56229a4a114c9593ea4904aa88d461bb" translate="yes" xml:space="preserve">
          <source>Since Sass implementations don't provide &lt;a href=&quot;https://github.com/sass/libsass/issues/532&quot;&gt;url rewriting&lt;/a&gt;, all linked assets must be relative to the output.</source>
          <target state="translated">Since Sass implementations don't provide &lt;a href=&quot;https://github.com/sass/libsass/issues/532&quot;&gt;url rewriting&lt;/a&gt;, all linked assets must be relative to the output.</target>
        </trans-unit>
        <trans-unit id="ee55505b5c3ca34633f55534b5500cc482530643" translate="yes" xml:space="preserve">
          <source>Since Sass/&lt;a href=&quot;https://github.com/sass/libsass&quot;&gt;libsass&lt;/a&gt; does not provide &lt;a href=&quot;https://github.com/sass/libsass/issues/532&quot;&gt;url rewriting&lt;/a&gt;, all linked assets must be relative to the output.</source>
          <target state="translated">Sass / &lt;a href=&quot;https://github.com/sass/libsass&quot;&gt;libsass&lt;/a&gt; 는 &lt;a href=&quot;https://github.com/sass/libsass/issues/532&quot;&gt;URL 재 작성을&lt;/a&gt; 제공하지 않으므로 링크 된 모든 자산은 출력을 기준으로해야합니다.</target>
        </trans-unit>
        <trans-unit id="60e97caba52671f289097a28a68dae3cc71a6345" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;vendor&lt;/code&gt; and &lt;code&gt;manifest&lt;/code&gt; chunk use a different definition for &lt;code&gt;minChunks&lt;/code&gt;, you need to invoke the plugin twice:</source>
          <target state="translated">때문에 &lt;code&gt;vendor&lt;/code&gt; 및 &lt;code&gt;manifest&lt;/code&gt; 에 대한 청크 사용하는 다른 정의 &lt;code&gt;minChunks&lt;/code&gt; , 당신은 두 번 플러그인을 호출해야합니다</target>
        </trans-unit>
        <trans-unit id="e0e01bc51c7f3118838decb471d7c0cbe67b4287" translate="yes" xml:space="preserve">
          <source>Since there are multiple versions of each environment the following guidelines apply:</source>
          <target state="translated">Since there are multiple versions of each environment the following guidelines apply:</target>
        </trans-unit>
        <trans-unit id="63d3dcb6e6d740fa309f368882b0ddc2f47f11f3" translate="yes" xml:space="preserve">
          <source>Since version 4 webpack runs optimizations for you depending on the chosen &lt;a href=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt;, still all optimizations are available for manual configuration and overrides.</source>
          <target state="translated">Since version 4 webpack runs optimizations for you depending on the chosen &lt;a href=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;, still all optimizations are available for manual configuration and overrides.</target>
        </trans-unit>
        <trans-unit id="68b40dfd90a4960aa92216b835ec43d3ce1464fc" translate="yes" xml:space="preserve">
          <source>Since version 4 webpack runs optimizations for you depending on the chosen &lt;code&gt;mode&lt;/code&gt;, still all optimizations are available for manual configuration and overrides.</source>
          <target state="translated">버전 4 웹팩은 선택한 &lt;code&gt;mode&lt;/code&gt; 에 따라 최적화를 실행하므로 모든 구성을 수동 구성 및 재정의에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1c8a9fc91d1ca9652793041de879c53fc83eb09" translate="yes" xml:space="preserve">
          <source>Since version 4.0.0, &lt;strong&gt;webpack does not require a configuration file&lt;/strong&gt; to bundle your project, nevertheless it is &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;incredibly configurable&lt;/a&gt; to better fit your needs.</source>
          <target state="translated">버전 4.0.0부터 &lt;strong&gt;웹팩에는&lt;/strong&gt; 프로젝트를 번들링하기 위해 &lt;strong&gt;구성 파일&lt;/strong&gt; 이 &lt;strong&gt;필요하지 않지만, 필요에 따라&lt;/strong&gt; 더 잘 &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;구성&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d7330118ce17eeace0a81f5c1f63842a0bb939b" translate="yes" xml:space="preserve">
          <source>Since version 4.0.0, &lt;strong&gt;webpack does not require a configuration file&lt;/strong&gt; to bundle your project. Nevertheless, it is &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;incredibly configurable&lt;/a&gt; to better fit your needs.</source>
          <target state="translated">Since version 4.0.0, &lt;strong&gt;webpack does not require a configuration file&lt;/strong&gt; to bundle your project. Nevertheless, it is &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;incredibly configurable&lt;/a&gt; to better fit your needs.</target>
        </trans-unit>
        <trans-unit id="f86b2dfe84249c763566d31412fce8ad477d3a22" translate="yes" xml:space="preserve">
          <source>Since we already have the absolute path to the file, no further resolution is required.</source>
          <target state="translated">파일에 대한 절대 경로가 이미 있으므로 추가 해결이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31fa5f1a5887e32b08b6b1cc470dbe36b39d7423" translate="yes" xml:space="preserve">
          <source>Since webpack 2.5.0, placeholders are evaluated in the &lt;code&gt;banner&lt;/code&gt; string:</source>
          <target state="translated">웹팩 2.5.0부터 플레이스 홀더는 &lt;code&gt;banner&lt;/code&gt; 문자열 에서 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="56e03fc77f95de6cfa56121e0a49127882f8d418" translate="yes" xml:space="preserve">
          <source>Since webpack 3.0.0, the &lt;code&gt;node&lt;/code&gt; option may be set to &lt;code&gt;false&lt;/code&gt; to completely turn off the &lt;code&gt;NodeStuffPlugin&lt;/code&gt; and &lt;code&gt;NodeSourcePlugin&lt;/code&gt; plugins.</source>
          <target state="translated">웹팩 3.0.0 이후, &lt;code&gt;node&lt;/code&gt; 옵션으로 설정 될 수 &lt;code&gt;false&lt;/code&gt; 완전히 끄려면 &lt;code&gt;NodeStuffPlugin&lt;/code&gt; 및 &lt;code&gt;NodeSourcePlugin&lt;/code&gt; 플러그인을.</target>
        </trans-unit>
        <trans-unit id="ab7f4f44fb8fbaea0afab9a8a29574cba00b7a36" translate="yes" xml:space="preserve">
          <source>Since webpack 3.0.0, the &lt;code&gt;node&lt;/code&gt; option may be set to &lt;code&gt;false&lt;/code&gt; to completely turn off the &lt;code&gt;NodeStuffPlugin&lt;/code&gt; plugin.</source>
          <target state="translated">Since webpack 3.0.0, the &lt;code&gt;node&lt;/code&gt; option may be set to &lt;code&gt;false&lt;/code&gt; to completely turn off the &lt;code&gt;NodeStuffPlugin&lt;/code&gt; plugin.</target>
        </trans-unit>
        <trans-unit id="f15ee1dcf21fba9cafb7c1f19fc6a788cacb6f32" translate="yes" xml:space="preserve">
          <source>Since webpack 3.1.0, you may specify an object for &lt;code&gt;library&lt;/code&gt; for differing names per targets:</source>
          <target state="translated">webpack 3.1.0부터 대상마다 다른 이름으로 &lt;code&gt;library&lt;/code&gt; 대한 오브젝트를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7499b38c1514e9f68a948f8d810614a8dc13cafb" translate="yes" xml:space="preserve">
          <source>Since webpack 4, the formerly &lt;code&gt;this.options.context&lt;/code&gt; is provided as &lt;code&gt;this.rootContext&lt;/code&gt;.</source>
          <target state="translated">Since webpack 4, the formerly &lt;code&gt;this.options.context&lt;/code&gt; is provided as &lt;code&gt;this.rootContext&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="577525b5867fcb39dc12c1d6345741d98772adb2" translate="yes" xml:space="preserve">
          <source>Since webpack 5, &lt;code&gt;this.getOptions&lt;/code&gt; is available in loader context. It substitutes &lt;code&gt;getOptions&lt;/code&gt; method from &lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt;loader-utils&lt;/a&gt;.</source>
          <target state="translated">Since webpack 5, &lt;code&gt;this.getOptions&lt;/code&gt; is available in loader context. It substitutes &lt;code&gt;getOptions&lt;/code&gt; method from &lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt;loader-utils&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4e0e70d21107e6ffd8cf279e47034a71ba23c5b8" translate="yes" xml:space="preserve">
          <source>Since webpack 5, passing an entry name to &lt;code&gt;{cacheGroup}.test&lt;/code&gt; and using a name of an existing chunk for &lt;code&gt;{cacheGroup}.name&lt;/code&gt; is no longer allowed.</source>
          <target state="translated">Since webpack 5, passing an entry name to &lt;code&gt;{cacheGroup}.test&lt;/code&gt; and using a name of an existing chunk for &lt;code&gt;{cacheGroup}.name&lt;/code&gt; is no longer allowed.</target>
        </trans-unit>
        <trans-unit id="a0b0aa6b4272b3381b66ed9e4051b3488dd8cbcc" translate="yes" xml:space="preserve">
          <source>Since webpack v4, the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; was removed in favor of &lt;code&gt;optimization.splitChunks&lt;/code&gt;.</source>
          <target state="translated">webpack v4 이후, &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 은 &lt;code&gt;optimization.splitChunks&lt;/code&gt; 를 위해 제거되었습니다 .splitChunks .</target>
        </trans-unit>
        <trans-unit id="1fd21bb9ba937354974f09d1c7c8c2610575161b" translate="yes" xml:space="preserve">
          <source>Since webpack v5 &lt;code&gt;normalModuleLoader&lt;/code&gt; hook was removed. Now to access the loader use &lt;code&gt;NormalModule.getCompilationHooks(compilation).loader&lt;/code&gt; instead.</source>
          <target state="translated">Since webpack v5 &lt;code&gt;normalModuleLoader&lt;/code&gt; hook was removed. Now to access the loader use &lt;code&gt;NormalModule.getCompilationHooks(compilation).loader&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="497b435af752c8851a2653fa69911a3902989e2f" translate="yes" xml:space="preserve">
          <source>Single Entry (Shorthand) Syntax</source>
          <target state="translated">단일 항목 (단일) 구문</target>
        </trans-unit>
        <trans-unit id="12648a472da82a76e13a7b45f3f9ba1100ec982c" translate="yes" xml:space="preserve">
          <source>Single Entry Syntax is a great choice when you are looking to quickly setup a webpack configuration for an application or tool with one entry point (i.e. a library). However, there is not much flexibility in extending or scaling your configuration with this syntax.</source>
          <target state="translated">Single Entry Syntax is a great choice when you are looking to quickly setup a webpack configuration for an application or tool with one entry point (i.e. a library). However, there is not much flexibility in extending or scaling your configuration with this syntax.</target>
        </trans-unit>
        <trans-unit id="8279243d4ea238c13b2c6c9ed189bf5c690d8d3d" translate="yes" xml:space="preserve">
          <source>SingleEntryPlugin</source>
          <target state="translated">SingleEntryPlugin</target>
        </trans-unit>
        <trans-unit id="17f0884db1f4f5bba641845fc74ff055d4257f99" translate="yes" xml:space="preserve">
          <source>Size threshold at which splitting is enforced and other restrictions (minRemainingSize, maxAsyncRequests, maxInitialRequests) are ignored.</source>
          <target state="translated">Size threshold at which splitting is enforced and other restrictions (minRemainingSize, maxAsyncRequests, maxInitialRequests) are ignored.</target>
        </trans-unit>
        <trans-unit id="97eb6389589df226213ed12bd022910728530b14" translate="yes" xml:space="preserve">
          <source>Skip the emitting phase when there are compilation errors</source>
          <target state="translated">컴파일 오류가있을 때 방출 단계 건너 뛰기</target>
        </trans-unit>
        <trans-unit id="e497bfa0fd175cf475f6b30dd2c52dfb46e6c197" translate="yes" xml:space="preserve">
          <source>Smaller = Faster</source>
          <target state="translated">작을수록 빠름</target>
        </trans-unit>
        <trans-unit id="4d0de72510f1fdef4e68c9fbb95544e223a852e9" translate="yes" xml:space="preserve">
          <source>Snapshots for build dependencies when using the persistent cache.</source>
          <target state="translated">Snapshots for build dependencies when using the persistent cache.</target>
        </trans-unit>
        <trans-unit id="6393161b34b7256189675a67e8eb40c7224e2c40" translate="yes" xml:space="preserve">
          <source>Snapshots for building modules.</source>
          <target state="translated">Snapshots for building modules.</target>
        </trans-unit>
        <trans-unit id="6694e2d090159ac8add71af08f37b4bb31d6ba7c" translate="yes" xml:space="preserve">
          <source>Snapshots for resolving of build dependencies when using the persistent cache.</source>
          <target state="translated">Snapshots for resolving of build dependencies when using the persistent cache.</target>
        </trans-unit>
        <trans-unit id="e80991b294c42a889b4cf7cab32dd3322e1860ef" translate="yes" xml:space="preserve">
          <source>Snapshots for resolving of requests.</source>
          <target state="translated">Snapshots for resolving of requests.</target>
        </trans-unit>
        <trans-unit id="bcc197ab00cbf259b4527808fb5fef5b6337c025" translate="yes" xml:space="preserve">
          <source>So depending on which event you &lt;code&gt;tap&lt;/code&gt; into, the plugin may run differently. For example, when hooking into the &lt;code&gt;compile&lt;/code&gt; stage, only the synchronous &lt;code&gt;tap&lt;/code&gt; method can be used:</source>
          <target state="translated">So depending on which event you &lt;code&gt;tap&lt;/code&gt; into, the plugin may run differently. For example, when hooking into the &lt;code&gt;compile&lt;/code&gt; stage, only the synchronous &lt;code&gt;tap&lt;/code&gt; method can be used:</target>
        </trans-unit>
        <trans-unit id="10c5787a9c54232eef85c2d844281db59a4bd375" translate="yes" xml:space="preserve">
          <source>So depending which event you &lt;code&gt;tap&lt;/code&gt; into, the plugin may run differently. For example, when hooking into &lt;code&gt;compile&lt;/code&gt; stage, only the synchronous &lt;code&gt;tap&lt;/code&gt; method can be used:</source>
          <target state="translated">당신이 어떤 이벤트 따라 그래서 &lt;code&gt;tap&lt;/code&gt; 으로, 플러그인 다르게 실행할 수 있습니다. 예를 들어, &lt;code&gt;compile&lt;/code&gt; 단계에 연결할 때 동기식 &lt;code&gt;tap&lt;/code&gt; 방법 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58cd91eff5be8cc2a5a1355abc2ac7555d4f4780" translate="yes" xml:space="preserve">
          <source>So far we've manually included all our assets in our &lt;code&gt;index.html&lt;/code&gt; file, but as your application grows and once you start &lt;a href=&quot;caching&quot;&gt;using hashes in filenames&lt;/a&gt; and outputting &lt;a href=&quot;code-splitting&quot;&gt;multiple bundles&lt;/a&gt;, it will be difficult to keep managing your &lt;code&gt;index.html&lt;/code&gt; file manually. However, a few plugins exist that will make this process much easier to manage.</source>
          <target state="translated">지금까지 모든 자산을 &lt;code&gt;index.html&lt;/code&gt; 파일 에 수동으로 포함 시켰지만 응용 프로그램이 커지고 &lt;a href=&quot;caching&quot;&gt;파일 이름에 해시를 사용&lt;/a&gt; 하고 &lt;a href=&quot;code-splitting&quot;&gt;여러 번들을&lt;/a&gt; 출력 하기 시작 하면 &lt;code&gt;index.html&lt;/code&gt; 파일을 수동으로 관리하기가 어려울 것 입니다. 그러나이 프로세스를 훨씬 쉽게 관리 할 수있는 몇 가지 플러그인이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d6e19d3e275c6f61a080e96e703a390e5f68085" translate="yes" xml:space="preserve">
          <source>So far, we've been viewing the output by going directly to the local file system. Typically though, a real user accesses a web app over a network; their browser talking to a &lt;strong&gt;server&lt;/strong&gt; which will serve up the required assets (e.g. &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt; files).</source>
          <target state="translated">지금까지 로컬 파일 시스템으로 직접 이동하여 출력을 확인했습니다. 그러나 일반적으로 실제 사용자는 네트워크를 통해 웹앱에 액세스합니다. 브라우저 가 필요한 자산 (예 : &lt;code&gt;.html&lt;/code&gt; , &lt;code&gt;.js&lt;/code&gt; 및 &lt;code&gt;.css&lt;/code&gt; 파일) 을 제공 할 &lt;strong&gt;서버&lt;/strong&gt; 와 통신 합니다.</target>
        </trans-unit>
        <trans-unit id="95019c6a782da25d705699c3eb48b8d5bf24705d" translate="yes" xml:space="preserve">
          <source>So if you want to see ESLint warnings in console during development using &lt;code&gt;WebpackDevServer&lt;/code&gt; remove &lt;code&gt;NoErrorsPlugin&lt;/code&gt; from webpack config.</source>
          <target state="translated">그래서 당신은 사용하여 개발하는 동안 콘솔에서 ESLint 경고를보고 싶다면 &lt;code&gt;WebpackDevServer&lt;/code&gt; 의 제거 &lt;code&gt;NoErrorsPlugin&lt;/code&gt; 을 웹팩 설정에서.</target>
        </trans-unit>
        <trans-unit id="7b46dcd69a49e970d5b52492d5e957dbf20a0952" translate="yes" xml:space="preserve">
          <source>So let's test what the current experience is like using a simple server. Let's use the &lt;a href=&quot;https://www.npmjs.com/package/http-server&quot;&gt;http-server&lt;/a&gt; package: &lt;code&gt;npm install http-server --save-dev&lt;/code&gt;. We'll also amend the &lt;code&gt;scripts&lt;/code&gt; section of our &lt;code&gt;package.json&lt;/code&gt; to add in a &lt;code&gt;start&lt;/code&gt; script:</source>
          <target state="translated">간단한 서버를 사용하여 현재 경험이 어떤지 테스트 해 봅시다. 하자가 사용하는 &lt;a href=&quot;https://www.npmjs.com/package/http-server&quot;&gt;HTTP 서버&lt;/a&gt; 패키지를 : &lt;code&gt;npm install http-server --save-dev&lt;/code&gt; . 또한 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;scripts&lt;/code&gt; 섹션을 수정하여 &lt;code&gt;start&lt;/code&gt; 스크립트 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5ce3cc3efd25a62a2948115da3652c7ae89c4acb" translate="yes" xml:space="preserve">
          <source>So now we're pulling in our CSS, but what about our images like backgrounds and icons? As of webpack 5, using the built-in &lt;a href=&quot;asset-modules&quot;&gt;Asset Modules&lt;/a&gt; we can easily incorporate those in our system as well:</source>
          <target state="translated">So now we're pulling in our CSS, but what about our images like backgrounds and icons? As of webpack 5, using the built-in &lt;a href=&quot;asset-modules&quot;&gt;Asset Modules&lt;/a&gt; we can easily incorporate those in our system as well:</target>
        </trans-unit>
        <trans-unit id="ba4289ea84f8f4d0175d8d74412c93e181745c7d" translate="yes" xml:space="preserve">
          <source>So now we're pulling in our CSS, but what about our images like backgrounds and icons? Using the &lt;a href=&quot;../loaders/file-loader&quot;&gt;file-loader&lt;/a&gt; we can easily incorporate those in our system as well:</source>
          <target state="translated">이제 CSS를 사용하고 있지만 배경과 아이콘 같은 이미지는 어떻습니까? &lt;a href=&quot;../loaders/file-loader&quot;&gt;파일 로더를&lt;/a&gt; 사용하여 시스템에 파일 로더 를 쉽게 통합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44da497b118d9848267e6b84f67e032a297cc683" translate="yes" xml:space="preserve">
          <source>So now you have a little bit of insight about how webpack works behind the scenes. &quot;But, how does this affect me?&quot;, you might ask. The simple answer is that most of the time it doesn't. The runtime will do its thing, utilizing the manifest, and everything will appear to just magically work once your application hits the browser. However, if you decide to improve the performance of your projects by utilizing browser caching, this process will all of a sudden become an important thing to understand.</source>
          <target state="translated">So now you have a little bit of insight about how webpack works behind the scenes. &quot;But, how does this affect me?&quot;, you might ask. The simple answer is that most of the time it doesn't. The runtime will do its thing, utilizing the manifest, and everything will appear to just magically work once your application hits the browser. However, if you decide to improve the performance of your projects by utilizing browser caching, this process will all of a sudden become an important thing to understand.</target>
        </trans-unit>
        <trans-unit id="10baeed4fc445ebdf29a83716129062c75380166" translate="yes" xml:space="preserve">
          <source>So now you have a little bit of insight about how webpack works behind the scenes. &quot;But, how does this affect me?&quot;, you might ask. The simple answer is that most of the time it doesn't. The runtime will do its thing, utilizing the manifest, and everything will appear to just magically work once your application hits the browser. However, if you decide to improve your projects performance by utilizing browser caching, this process will all of a sudden become an important thing to understand.</source>
          <target state="translated">이제 웹 팩이 어떻게 작동하는지에 대한 약간의 통찰력을 얻었습니다. &quot;그러나 이것이 어떻게 나에게 영향을 미칩니 까?&quot;라고 물을 수 있습니다. 간단한 대답은 대부분 그렇지 않다는 것입니다. 런타임은 매니페스트를 사용하여 작업을 수행하며 응용 프로그램이 브라우저에 도달하면 모든 것이 마술처럼 작동하는 것처럼 보입니다. 그러나 브라우저 캐싱을 사용하여 프로젝트 성능을 개선하기로 결정한 경우이 프로세스는 갑자기 이해해야 할 중요한 요소가됩니다.</target>
        </trans-unit>
        <trans-unit id="8811715af11f4dc22420e4ef2694617f93e100b9" translate="yes" xml:space="preserve">
          <source>So we're now at the happy point of having produced a Service Worker. What's next?</source>
          <target state="translated">이제 우리는 서비스 워커를 생산하는 것이 행복한 시점에 있습니다. 무엇 향후 계획?</target>
        </trans-unit>
        <trans-unit id="5e140431e2d6b71d292f90c69aa4f89d709763fe" translate="yes" xml:space="preserve">
          <source>So we're using webpack to bundle our modular application which yields a deployable &lt;code&gt;/dist&lt;/code&gt; directory. Once the contents of &lt;code&gt;/dist&lt;/code&gt; have been deployed to a server, clients (typically browsers) will hit that server to grab the site and its assets. The last step can be time consuming, which is why browsers use a technique called &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_(computing)&quot;&gt;caching&lt;/a&gt;. This allows sites to load faster with less unnecessary network traffic. However, it can also cause headaches when you need new code to be picked up.</source>
          <target state="translated">So we're using webpack to bundle our modular application which yields a deployable &lt;code&gt;/dist&lt;/code&gt; directory. Once the contents of &lt;code&gt;/dist&lt;/code&gt; have been deployed to a server, clients (typically browsers) will hit that server to grab the site and its assets. The last step can be time consuming, which is why browsers use a technique called &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_(computing)&quot;&gt;caching&lt;/a&gt;. This allows sites to load faster with less unnecessary network traffic. However, it can also cause headaches when you need new code to be picked up.</target>
        </trans-unit>
        <trans-unit id="19448037ca889443fe3d0c814ea05c08dbaa6850" translate="yes" xml:space="preserve">
          <source>So we're using webpack to bundle our modular application which yields a deployable &lt;code&gt;/dist&lt;/code&gt; directory. Once the contents of &lt;code&gt;/dist&lt;/code&gt; have been deployed to a server, clients (typically browsers) will hit that server to grab the site and its assets. The last step can be time consuming, which is why browsers use a technique called &lt;a href=&quot;https://searchstorage.techtarget.com/definition/cache&quot;&gt;caching&lt;/a&gt;. This allows sites to load faster with less unnecessary network traffic, however it can also cause headaches when you need new code to be picked up.</source>
          <target state="translated">따라서 웹팩을 사용하여 모듈 식 애플리케이션을 번들로 제공하여 배포 가능한 &lt;code&gt;/dist&lt;/code&gt; 디렉토리 를 생성합니다 . &lt;code&gt;/dist&lt;/code&gt; 의 내용이 서버에 배포되면 클라이언트 (일반적으로 브라우저)는 해당 서버를 방문하여 사이트와 해당 자산을 가져옵니다. 마지막 단계는 시간이 오래 걸리기 때문에 브라우저는 &lt;a href=&quot;https://searchstorage.techtarget.com/definition/cache&quot;&gt;캐싱&lt;/a&gt; 이라는 기술을 사용합니다 . 이를 통해 불필요한 네트워크 트래픽을 줄이면서 사이트를 더 빠르게로드 할 수 있지만 새 코드를 가져와야 할 때 두통이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ffcfa776ae1426094b768366541d8226da7895" translate="yes" xml:space="preserve">
          <source>So we've cued up our &quot;dead code&quot; to be dropped by using the &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax, but we still need to drop it from the bundle. To do that, set the &lt;code&gt;mode&lt;/code&gt; configuration option to &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;&lt;code&gt;production&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">So we've cued up our &quot;dead code&quot; to be dropped by using the &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax, but we still need to drop it from the bundle. To do that, set the &lt;code&gt;mode&lt;/code&gt; configuration option to &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt; &lt;code&gt;production&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cc580457d44ca3f0fccb18e8a90fb8ae243eeccb" translate="yes" xml:space="preserve">
          <source>So we've cued up our &quot;dead code&quot; to be dropped by using the &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax, but we still need to drop it from the bundle. To do that, we'll use the &lt;code&gt;-p&lt;/code&gt; (production) webpack compilation flag to enable &lt;code&gt;UglifyJSPlugin&lt;/code&gt;.</source>
          <target state="translated">따라서 &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;export&lt;/code&gt; 구문 을 사용하여 &quot;데드 코드&quot;를 삭제하도록 요청 했지만 여전히 번들에서 삭제해야합니다. 이를 위해 &lt;code&gt;-p&lt;/code&gt; (생산) 웹팩 컴파일 플래그를 사용하여 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; 을 활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="eff4c42c5e1ebd3152856a43de2d039710fe0ef1" translate="yes" xml:space="preserve">
          <source>So what about other assets like fonts? The Asset Modules will take any file you load through them and output it to your build directory. This means we can use them for any kind of file, including fonts. Let's update our &lt;code&gt;webpack.config.js&lt;/code&gt; to handle font files:</source>
          <target state="translated">So what about other assets like fonts? The Asset Modules will take any file you load through them and output it to your build directory. This means we can use them for any kind of file, including fonts. Let's update our &lt;code&gt;webpack.config.js&lt;/code&gt; to handle font files:</target>
        </trans-unit>
        <trans-unit id="02d98868e9fba9245aabc21fac3c93011835485d" translate="yes" xml:space="preserve">
          <source>So what about other assets like fonts? The file and url loaders will take any file you load through them and output it to your build directory. This means we can use them for any kind of file, including fonts. Let's update our &lt;code&gt;webpack.config.js&lt;/code&gt; to handle font files:</source>
          <target state="translated">글꼴과 같은 다른 자산은 어떻습니까? 파일 및 URL 로더는로드 한 모든 파일을 가져 와서 빌드 디렉토리로 출력합니다. 즉, 글꼴을 포함한 모든 종류의 파일에 사용할 수 있습니다. 글꼴 파일을 처리하기 위해 &lt;code&gt;webpack.config.js&lt;/code&gt; 를 업데이트 하십시오 :</target>
        </trans-unit>
        <trans-unit id="e62b04886f5dc15927b1ffe710caeecd62c0379f" translate="yes" xml:space="preserve">
          <source>So while webpack's core focus is bundling, there are a variety of extensions that can enable you to use it for jobs typical of a task runner. Integrating a separate tool adds complexity, so be sure to weigh the pros and cons before going forward.</source>
          <target state="translated">따라서 웹팩의 핵심 초점은 번들로 제공되지만 작업 확장 프로그램의 일반적인 작업에 사용할 수있는 다양한 확장 기능이 있습니다. 별도의 도구를 통합하면 복잡성이 증가하므로 계속 진행하기 전에 장단점을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1e5009e238a4bad3ef05684680da843d8779ff6" translate="yes" xml:space="preserve">
          <source>So why might a loader take advantage of the &quot;pitching&quot; phase?</source>
          <target state="translated">그렇다면 로더가 왜 &quot;피칭&quot;단계를 이용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="fe488648ec5012f734cc9841c5f3ff7d83733d41" translate="yes" xml:space="preserve">
          <source>So, once your application hits the browser in the form of an &lt;code&gt;index.html&lt;/code&gt; file, some bundles, and a variety of other assets, what does it look like? That &lt;code&gt;/src&lt;/code&gt; directory you meticulously laid out is now gone, so how does webpack manage the interaction between all of your modules? This is where the manifest data comes in...</source>
          <target state="translated">따라서 애플리케이션이 &lt;code&gt;index.html&lt;/code&gt; 파일, 일부 번들 및 다양한 기타 자산 의 형태로 브라우저에 도달 하면 어떻게 생겼습니까? 그 &lt;code&gt;/src&lt;/code&gt; 당신이 꼼꼼하게 배치 디렉토리는 이제 어떻게 웹팩 당신의 모든 모듈 간의 상호 작용을 관리 않습니다 사라? 이것은 매니페스트 데이터가 들어오는 곳입니다 ...</target>
        </trans-unit>
        <trans-unit id="145b40facbc75f15ef63692477108cef3bda6d8f" translate="yes" xml:space="preserve">
          <source>So, what we've learned is that in order to take advantage of &lt;em&gt;tree shaking&lt;/em&gt;, you must...</source>
          <target state="translated">우리가 배운 것은 &lt;em&gt;나무 흔들림&lt;/em&gt; 을 이용하기 위해서는 ...</target>
        </trans-unit>
        <trans-unit id="f4481462b06413ebd81e68e2e4acc8de9e7d99ba" translate="yes" xml:space="preserve">
          <source>So, with the following configuration...</source>
          <target state="translated">따라서 다음 구성으로 ...</target>
        </trans-unit>
        <trans-unit id="2020a1b36d31f40fb51a15e6678fec25e6225a02" translate="yes" xml:space="preserve">
          <source>Some legacy modules rely on &lt;code&gt;this&lt;/code&gt; being the &lt;code&gt;window&lt;/code&gt; object. Let's update our &lt;code&gt;index.js&lt;/code&gt; so this is the case:</source>
          <target state="translated">일부 레거시 모듈은 &lt;code&gt;this&lt;/code&gt; 를 &lt;code&gt;window&lt;/code&gt; 개체로 사용합니다. 우리의 &lt;code&gt;index.js&lt;/code&gt; 를 업데이트하자 .</target>
        </trans-unit>
        <trans-unit id="fdbfcf6e2fd8eed232593b845e306ba7435e17dd" translate="yes" xml:space="preserve">
          <source>Some of these values are suited for development and some for production. For development you typically want fast Source Maps at the cost of bundle size, but for production you want separate Source Maps that are accurate and support minimizing.</source>
          <target state="translated">이러한 가치 중 일부는 개발에 적합하고 일부는 생산에 적합합니다. 개발의 경우 일반적으로 번들 크기의 비용으로 빠른 소스 맵을 원하지만 프로덕션의 경우 정확하고 최소화를 지원하는 별도의 소스 맵을 원합니다.</target>
        </trans-unit>
        <trans-unit id="02ad40664b6fc632706c755cfc3229760fe1b330" translate="yes" xml:space="preserve">
          <source>Some of what has been described above can also be achieved by using the command line. For example, the &lt;code&gt;--optimize-minimize&lt;/code&gt; flag will include the &lt;code&gt;TerserPlugin&lt;/code&gt; behind the scenes. The &lt;code&gt;--define process.env.NODE_ENV=&quot;'production'&quot;&lt;/code&gt; will do the same for the &lt;code&gt;DefinePlugin&lt;/code&gt; instance described above. And, &lt;code&gt;webpack -p&lt;/code&gt; will automatically invoke both those flags and thus the plugins to be included.</source>
          <target state="translated">Some of what has been described above can also be achieved by using the command line. For example, the &lt;code&gt;--optimize-minimize&lt;/code&gt; flag will include the &lt;code&gt;TerserPlugin&lt;/code&gt; behind the scenes. The &lt;code&gt;--define process.env.NODE_ENV=&quot;'production'&quot;&lt;/code&gt; will do the same for the &lt;code&gt;DefinePlugin&lt;/code&gt; instance described above. And, &lt;code&gt;webpack -p&lt;/code&gt; will automatically invoke both those flags and thus the plugins to be included.</target>
        </trans-unit>
        <trans-unit id="fb26ce8cc86dbfea643748ddc6d2bc17426133a4" translate="yes" xml:space="preserve">
          <source>Some of what has been described above is also achievable via the command line. For example, the &lt;code&gt;--optimize-minimize&lt;/code&gt; flag will include the &lt;code&gt;UglifyJSPlugin&lt;/code&gt; behind the scenes. The &lt;code&gt;--define process.env.NODE_ENV=&quot;'production'&quot;&lt;/code&gt; will do the same for the &lt;code&gt;DefinePlugin&lt;/code&gt; instance described above. And, &lt;code&gt;webpack -p&lt;/code&gt; will automatically invoke both those flags and thus the plugins to be included.</source>
          <target state="translated">위에서 설명한 내용 중 일부는 명령 줄을 통해 얻을 수도 있습니다. 예를 들어 &lt;code&gt;--optimize-minimize&lt;/code&gt; 플래그는 장면 뒤에 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; 을 포함합니다 . &lt;code&gt;--define process.env.NODE_ENV=&quot;'production'&quot;&lt;/code&gt; 대해 동일 할 것이다 &lt;code&gt;DefinePlugin&lt;/code&gt; 의 인스턴스 상술. 그리고 &lt;code&gt;webpack -p&lt;/code&gt; 는 이러한 플래그와 플러그인을 모두 자동으로 호출합니다.</target>
        </trans-unit>
        <trans-unit id="21759e4d2e1f7c7025ce0a09dce7a2473a20f08f" translate="yes" xml:space="preserve">
          <source>Some text editors have a &quot;safe write&quot; function that might interfere with some of the following tools. Read &lt;a href=&quot;#adjusting-your-text-editor&quot;&gt;Adjusting Your Text Editor&lt;/a&gt; for a solution to these issues.</source>
          <target state="translated">Some text editors have a &quot;safe write&quot; function that might interfere with some of the following tools. Read &lt;a href=&quot;#adjusting-your-text-editor&quot;&gt;Adjusting Your Text Editor&lt;/a&gt; for a solution to these issues.</target>
        </trans-unit>
        <trans-unit id="ac4e4baeeb778d89bc9b4402d323e503a39f4162" translate="yes" xml:space="preserve">
          <source>Some text editors have a &quot;safe write&quot; function that might interfere with some of the following tools. Read &lt;a href=&quot;#adjusting-your-text-editor&quot;&gt;Adjusting Your text Editor&lt;/a&gt; for a solution to these issues.</source>
          <target state="translated">일부 텍스트 편집기에는 &quot;안전한 쓰기&quot;기능이있어 다음 도구 중 일부를 방해 할 수 있습니다. 읽기 &lt;a href=&quot;#adjusting-your-text-editor&quot;&gt;당신의 텍스트 편집기를 조정&lt;/a&gt; 이러한 문제에 대한 해결책을.</target>
        </trans-unit>
        <trans-unit id="0bf67f20d45a3a5370b2a285ca9c2d95700ec9fe" translate="yes" xml:space="preserve">
          <source>Sometimes you don't want to proxy everything. It is possible to bypass the proxy based on the return value of a function.</source>
          <target state="translated">때로는 모든 것을 프록시하고 싶지 않습니다. 함수의 반환 값을 기반으로 프록시를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f62ebe1d014e418ab38c032f83eac4d518dfc608" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to use a combination of the above syntaxes. This can be done in the following manner:</source>
          <target state="translated">Sometimes you may want to use a combination of the above syntaxes. This can be done in the following manner:</target>
        </trans-unit>
        <trans-unit id="d3199416626a4109ce446b38ef450734fa400bc9" translate="yes" xml:space="preserve">
          <source>Sort the chunks in from most to least important.</source>
          <target state="translated">청크를 가장 중요하지 않은 순서로 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="9aecb68f08700b120a7d90d0debe00264d3a327c" translate="yes" xml:space="preserve">
          <source>Sort the modules in from most to least important.</source>
          <target state="translated">가장 중요하지 않은 것부터 가장 중요하지 않은 것까지 모듈을 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="ad59d6b2747838fd265cdbb0bb67cc8efff4ade3" translate="yes" xml:space="preserve">
          <source>Sorting fields</source>
          <target state="translated">Sorting fields</target>
        </trans-unit>
        <trans-unit id="b1d254566526dbbd891bc147d36c80c6c32df941" translate="yes" xml:space="preserve">
          <source>Sorts the assets list by property in asset</source>
          <target state="translated">자산의 속성별로 자산 목록을 정렬합니다</target>
        </trans-unit>
        <trans-unit id="9606d3765b363987df978d5ebfb80f8098bec19b" translate="yes" xml:space="preserve">
          <source>Sorts the chunks list by property in chunk</source>
          <target state="translated">청크의 속성별로 청크 목록을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="db344fb262e131e1a3c6db3bf098ff78609e7d35" translate="yes" xml:space="preserve">
          <source>Sorts the modules list by property in module</source>
          <target state="translated">모듈의 속성별로 모듈 목록을 정렬합니다</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="25d717b62000ca836854004fccb956e8d68a764b" translate="yes" xml:space="preserve">
          <source>Source Mapping</source>
          <target state="translated">소스 매핑</target>
        </trans-unit>
        <trans-unit id="5774da7b802f7af9150c4273aaf57f7387c8eb1d" translate="yes" xml:space="preserve">
          <source>Source Maps</source>
          <target state="translated">소스 맵</target>
        </trans-unit>
        <trans-unit id="01473e7480f3a28583f07fc0a4f767d7c42b9c76" translate="yes" xml:space="preserve">
          <source>Source assets</source>
          <target state="translated">Source assets</target>
        </trans-unit>
        <trans-unit id="30e86ffbe954826823e73c12cfc55bea76005dff" translate="yes" xml:space="preserve">
          <source>Source maps</source>
          <target state="translated">소스 맵</target>
        </trans-unit>
        <trans-unit id="b2587eef1d6187c444242c987752c5ffb686abef" translate="yes" xml:space="preserve">
          <source>Source maps are always produced.</source>
          <target state="translated">소스 맵은 항상 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d84d17e0e9668faad9c456ecf99d44d8405a021f" translate="yes" xml:space="preserve">
          <source>Source maps are really expensive. Do you really need them?</source>
          <target state="translated">소스 맵은 정말 비쌉니다. 정말로 필요합니까?</target>
        </trans-unit>
        <trans-unit id="1e6cb736dce56ea37e670ea09f5f1f998b68e681" translate="yes" xml:space="preserve">
          <source>Source maps is a useful debugging tool that allows you to view where the minified code originated from.</source>
          <target state="translated">Source maps is a useful debugging tool that allows you to view where the minified code originated from.</target>
        </trans-unit>
        <trans-unit id="ff1f1aa681b89c1378ecf41cee15808c010c6906" translate="yes" xml:space="preserve">
          <source>SourceMapDevToolPlugin</source>
          <target state="translated">SourceMapDevToolPlugin</target>
        </trans-unit>
        <trans-unit id="75f613a38c9a77eef52fd9053dd584ff64dc4df0" translate="yes" xml:space="preserve">
          <source>Special cases</source>
          <target state="translated">특수한 상황들</target>
        </trans-unit>
        <trans-unit id="c0d8c0c0a4ec9262cc89dc60627539d515b79764" translate="yes" xml:space="preserve">
          <source>Specific Tooling Issues</source>
          <target state="translated">특정 툴링 문제</target>
        </trans-unit>
        <trans-unit id="b3aa5454f5b0dfb11123b5819bc91609022f1d6c" translate="yes" xml:space="preserve">
          <source>Specific to CSS</source>
          <target state="translated">CSS에만 해당</target>
        </trans-unit>
        <trans-unit id="20209bd671a2bcc3f315bd80119ae9043244bd92" translate="yes" xml:space="preserve">
          <source>Specifically per matching resource(s):</source>
          <target state="translated">Specifically per matching resource(s):</target>
        </trans-unit>
        <trans-unit id="b7c38b38615d145709664c9bc8f6c6a62a6b10b9" translate="yes" xml:space="preserve">
          <source>Specifies a Regular Expression to one or many parts of the target file path. The capture groups can be reused in the &lt;code&gt;name&lt;/code&gt; property using &lt;code&gt;[N]&lt;/code&gt;&lt;a href=&quot;https://github.com/webpack-contrib/file-loader#placeholders&quot;&gt;placeholder&lt;/a&gt;.</source>
          <target state="translated">대상 파일 경로의 하나 이상의 부분에 정규식을 지정합니다. 캡처 그룹은 &lt;code&gt;[N]&lt;/code&gt; &lt;a href=&quot;https://github.com/webpack-contrib/file-loader#placeholders&quot;&gt;플레이스 홀더를&lt;/a&gt; 사용하여 &lt;code&gt;name&lt;/code&gt; 특성 에서 재사용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="879965cc2c1f185af16e722049ebaed20e3790a2" translate="yes" xml:space="preserve">
          <source>Specifies a custom file context.</source>
          <target state="translated">사용자 정의 파일 컨텍스트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="84ab6058ed40a01e379f0582c1af643799c945a0" translate="yes" xml:space="preserve">
          <source>Specifies a custom filename template for the target file(s) using the query parameter &lt;code&gt;name&lt;/code&gt;. For example, to copy a file from your &lt;code&gt;context&lt;/code&gt; directory into the output directory retaining the full directory structure, you might use:</source>
          <target state="translated">query parameter &lt;code&gt;name&lt;/code&gt; 을 사용하여 대상 파일에 대한 사용자 정의 파일 이름 템플릿을 지정합니다 . 예를 들어, &lt;code&gt;context&lt;/code&gt; 디렉토리에서 전체 디렉토리 구조를 유지하는 출력 디렉토리로 파일을 복사 하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d2a03ce829912f1b848b145a807705d0a1c6b72" translate="yes" xml:space="preserve">
          <source>Specifies a custom filename template for the target file(s) using the query parameter &lt;code&gt;name&lt;/code&gt;. For example, to emit a file from your &lt;code&gt;context&lt;/code&gt; directory into the output directory retaining the full directory structure, you might use:</source>
          <target state="translated">Specifies a custom filename template for the target file(s) using the query parameter &lt;code&gt;name&lt;/code&gt; . For example, to emit a file from your &lt;code&gt;context&lt;/code&gt; directory into the output directory retaining the full directory structure, you might use:</target>
        </trans-unit>
        <trans-unit id="4737e83f85676161760e83a8109850e13f958c82" translate="yes" xml:space="preserve">
          <source>Specifies a custom filename template for the target file(s).</source>
          <target state="translated">Specifies a custom filename template for the target file(s).</target>
        </trans-unit>
        <trans-unit id="f888fd9f4ae8f865e053c4251564cf41bd88dbfc" translate="yes" xml:space="preserve">
          <source>Specifies a custom function to post-process the generated public path. This can be used to prepend or append dynamic global variables that are only available at runtime, like &lt;code&gt;__webpack_public_path__&lt;/code&gt;. This would not be possible with just &lt;code&gt;publicPath&lt;/code&gt;, since it stringifies the values.</source>
          <target state="translated">Specifies a custom function to post-process the generated public path. This can be used to prepend or append dynamic global variables that are only available at runtime, like &lt;code&gt;__webpack_public_path__&lt;/code&gt; . This would not be possible with just &lt;code&gt;publicPath&lt;/code&gt; , since it stringifies the values.</target>
        </trans-unit>
        <trans-unit id="e9e06b40f3daa25d5c4784cbc01ecbbbde1fbf80" translate="yes" xml:space="preserve">
          <source>Specifies a custom public path for the external resources like images, files, etc</source>
          <target state="translated">Specifies a custom public path for the external resources like images, files, etc</target>
        </trans-unit>
        <trans-unit id="571ab491da4f39c64e632d1a037fcaadcf6f405b" translate="yes" xml:space="preserve">
          <source>Specifies a custom public path for the external resources like images, files, etc inside &lt;code&gt;CSS&lt;/code&gt;. Works like &lt;a href=&quot;../configuration/output#outputpublicpath&quot;&gt;&lt;code&gt;output.publicPath&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Specifies a custom public path for the external resources like images, files, etc inside &lt;code&gt;CSS&lt;/code&gt; . Works like &lt;a href=&quot;../configuration/output#outputpublicpath&quot;&gt; &lt;code&gt;output.publicPath&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d1a1617f78af92e2776d9c995c243f41a529a4f" translate="yes" xml:space="preserve">
          <source>Specifies a custom public path for the target file(s).</source>
          <target state="translated">대상 파일의 사용자 정의 공용 경로를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cac6202929181ac3f54bb3e72b77ff4be95286fa" translate="yes" xml:space="preserve">
          <source>Specifies a different &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; file to pick up. Use this if you want to specify something different from &lt;code&gt;webpack.config.js&lt;/code&gt;, which is one of the default.</source>
          <target state="translated">Specifies a different &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; file to pick up. Use this if you want to specify something different from &lt;code&gt;webpack.config.js&lt;/code&gt; , which is one of the default.</target>
        </trans-unit>
        <trans-unit id="72ec7449f82690a64ea1fe85c71ca14dd2c8bc13" translate="yes" xml:space="preserve">
          <source>Specifies a different &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; file to pick up. Use this if you want to specify something different than &lt;code&gt;webpack.config.js&lt;/code&gt;, which is the default.</source>
          <target state="translated">선택할 다른 &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;구성&lt;/a&gt; 파일을 지정 합니다. 기본값 인 &lt;code&gt;webpack.config.js&lt;/code&gt; 와 다른 것을 지정하려면이 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b04472ec1e127e502c166b357787f38f6d2c875" translate="yes" xml:space="preserve">
          <source>Specifies an absolute path to a valid configuration file on the filesystem.</source>
          <target state="translated">파일 시스템에서 유효한 구성 파일의 절대 경로를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9d0798e89c25e70403528df1315a7715cfa2c0de" translate="yes" xml:space="preserve">
          <source>Specifies an alternative loader to use when a target file's size exceeds the limit set in the &lt;code&gt;limit&lt;/code&gt; option.</source>
          <target state="translated">대상 파일의 크기가 &lt;code&gt;limit&lt;/code&gt; 옵션에 설정된 한계를 초과 할 때 사용할 대체 로더를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="a7237c6247c2519ce77a983f1f4ba8132658dd5b" translate="yes" xml:space="preserve">
          <source>Specifies an alternative loader to use when a target file's size exceeds the limit.</source>
          <target state="translated">Specifies an alternative loader to use when a target file's size exceeds the limit.</target>
        </trans-unit>
        <trans-unit id="0863024865f449432b82f45424554cf2cdd37989" translate="yes" xml:space="preserve">
          <source>Specifies an filesystem path from which point &lt;code&gt;config-loader&lt;/code&gt; will begin looking for a configuration file.</source>
          <target state="translated">&lt;code&gt;config-loader&lt;/code&gt; 가 구성 파일을 찾기 시작할 파일 시스템 경로를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="973530054bf4151384693c547dda2192964092e7" translate="yes" xml:space="preserve">
          <source>Specifies compiler(s) to use when loading modules from files containing the configuration. For example:</source>
          <target state="translated">구성이 포함 된 파일에서 모듈을로드 할 때 사용할 컴파일러를 지정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b2aa5e351074790f824f05fd8370fb0799e435f2" translate="yes" xml:space="preserve">
          <source>Specifies the category of the loader. No value means normal loader.</source>
          <target state="translated">로더의 카테고리를 지정합니다. 값이 없으면 일반 로더를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="63a43b523ce3399edd3a02250f01cfe1ee483bc6" translate="yes" xml:space="preserve">
          <source>Specifies the default type of externals. &lt;code&gt;amd&lt;/code&gt;, &lt;code&gt;umd&lt;/code&gt;, &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;jsonp&lt;/code&gt; externals &lt;strong&gt;depend on the &lt;a href=&quot;output#outputlibrarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; being set to the same value e.g. you can only consume &lt;code&gt;amd&lt;/code&gt; externals within an &lt;code&gt;amd&lt;/code&gt; library.</source>
          <target state="translated">Specifies the default type of externals. &lt;code&gt;amd&lt;/code&gt; , &lt;code&gt;umd&lt;/code&gt; , &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;jsonp&lt;/code&gt; externals &lt;strong&gt;depend on the &lt;a href=&quot;output#outputlibrarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt; being set to the same value e.g. you can only consume &lt;code&gt;amd&lt;/code&gt; externals within an &lt;code&gt;amd&lt;/code&gt; library.</target>
        </trans-unit>
        <trans-unit id="3ac9a41991ed0aa09f47012142ec97f2cfd01a04" translate="yes" xml:space="preserve">
          <source>Specifies the hash method to use for hashing the file content.</source>
          <target state="translated">Specifies the hash method to use for hashing the file content.</target>
        </trans-unit>
        <trans-unit id="241834609b4e73c0844125b7003ab35c9b37d2ee" translate="yes" xml:space="preserve">
          <source>Specifies the hash method to use for hashing the file content. See &lt;a href=&quot;https://github.com/webpack-contrib/file-loader#hashes&quot;&gt;Hashes&lt;/a&gt;.</source>
          <target state="translated">파일 내용을 해시하는 데 사용할 해시 방법을 지정합니다. &lt;a href=&quot;https://github.com/webpack-contrib/file-loader#hashes&quot;&gt;해시를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d20c8b08d4e7f04f72cf541a97ca7abcb26683c" translate="yes" xml:space="preserve">
          <source>Specifies whether or not to generate a relative URI for each target file context.</source>
          <target state="translated">각 대상 파일 컨텍스트에 상대 URI를 생성할지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="aadbb1e7be1626e4e57d5c300b33bb34352ea804" translate="yes" xml:space="preserve">
          <source>Specify a custom formatter to format errors printed to the console.</source>
          <target state="translated">콘솔에 인쇄 된 오류를 형식화하려면 사용자 정의 포맷터를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="7de147d31cbdba74b03e5be6c5bc6dcd0a10d8b5" translate="yes" xml:space="preserve">
          <source>Specify a field, such as &lt;code&gt;browser&lt;/code&gt;, to be parsed according to &lt;a href=&quot;https://github.com/defunctzombie/package-browser-field-spec&quot;&gt;this specification&lt;/a&gt;.</source>
          <target state="translated">Specify a field, such as &lt;code&gt;browser&lt;/code&gt; , to be parsed according to &lt;a href=&quot;https://github.com/defunctzombie/package-browser-field-spec&quot;&gt;this specification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cd1c6cd3673817c28ee3bd855e67cc875f4df81e" translate="yes" xml:space="preserve">
          <source>Specify a field, such as &lt;code&gt;browser&lt;/code&gt;, to be parsed according to &lt;a href=&quot;https://github.com/defunctzombie/package-browser-field-spec&quot;&gt;this specification&lt;/a&gt;. Default:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/defunctzombie/package-browser-field-spec&quot;&gt;이 스펙&lt;/a&gt; 에 따라 구문 분석 할 &lt;code&gt;browser&lt;/code&gt; 와 같은 필드를 지정하십시오 . 기본:</target>
        </trans-unit>
        <trans-unit id="c66b711f602441dbfe41affd2e1c9c62b4084b4b" translate="yes" xml:space="preserve">
          <source>Specify a filesystem path where target the file(s) will be placed.</source>
          <target state="translated">대상 파일이 위치 할 파일 시스템 경로를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="def47f765d5d900063865ea3bc250bfaf5f7cfae" translate="yes" xml:space="preserve">
          <source>Specify a filesystem path where the target file(s) will be placed.</source>
          <target state="translated">Specify a filesystem path where the target file(s) will be placed.</target>
        </trans-unit>
        <trans-unit id="955d1a09a26d8e964dd4a5fe391a094a4f5a9066" translate="yes" xml:space="preserve">
          <source>Specify a host to use. By default this is &lt;code&gt;localhost&lt;/code&gt;. If you want your server to be accessible externally, specify it like this:</source>
          <target state="translated">사용할 호스트를 지정하십시오. 기본적으로 이것은 &lt;code&gt;localhost&lt;/code&gt; 입니다. 서버가 외부에서 액세스 가능하도록하려면 다음과 같이 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="962f9334d32168a1695a00f6b73cd97b234eacd4" translate="yes" xml:space="preserve">
          <source>Specify a host to use. If you want your server to be accessible externally, specify it like this:</source>
          <target state="translated">Specify a host to use. If you want your server to be accessible externally, specify it like this:</target>
        </trans-unit>
        <trans-unit id="271a9f6f25b95c50650ef30d0a047e823cfd2194" translate="yes" xml:space="preserve">
          <source>Specify a page to navigate to when opening the browser.</source>
          <target state="translated">브라우저를 열 때 탐색 할 페이지를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="527e84c85d0d2c1cdc4ede8f54ad03ad9844d94e" translate="yes" xml:space="preserve">
          <source>Specify a port number to listen for requests on:</source>
          <target state="translated">다음에서 요청을 청취 할 포트 번호를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="aecc957d17245d32f10a464590c3ede23c1175e1" translate="yes" xml:space="preserve">
          <source>Specify a whole group of dependencies using a path to the &lt;code&gt;directory&lt;/code&gt;, an option to &lt;code&gt;includeSubdirs&lt;/code&gt;, a &lt;code&gt;filter&lt;/code&gt; for more fine grained control of the modules included, and a &lt;code&gt;mode&lt;/code&gt; to define the way how loading will work. Underlying modules can then be easily resolved later on:</source>
          <target state="translated">Specify a whole group of dependencies using a path to the &lt;code&gt;directory&lt;/code&gt; , an option to &lt;code&gt;includeSubdirs&lt;/code&gt; , a &lt;code&gt;filter&lt;/code&gt; for more fine grained control of the modules included, and a &lt;code&gt;mode&lt;/code&gt; to define the way how loading will work. Underlying modules can then be easily resolved later on:</target>
        </trans-unit>
        <trans-unit id="5c2e525c6e4e62824f782a966fe6452c405bfe5d" translate="yes" xml:space="preserve">
          <source>Specify a whole group of dependencies using a path to the &lt;code&gt;directory&lt;/code&gt;, an option to &lt;code&gt;includeSubdirs&lt;/code&gt;, and a &lt;code&gt;filter&lt;/code&gt; for more fine grained control of the modules included. These can then be easily resolved later on:</source>
          <target state="translated">&lt;code&gt;directory&lt;/code&gt; 경로 , &lt;code&gt;includeSubdirs&lt;/code&gt; 옵션 및 포함 된 모듈에 대한보다 세밀한 제어를위한 &lt;code&gt;filter&lt;/code&gt; 를 사용하여 전체 종속성 그룹을 지정하십시오 . 그런 다음 나중에 쉽게 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a772bf8d2af5c9062ab6018821e45b195a180ae" translate="yes" xml:space="preserve">
          <source>Specify directories, files, or globs. Must be relative to &lt;code&gt;options.context&lt;/code&gt;. Directories are traveresed recursively looking for files matching &lt;code&gt;options.extensions&lt;/code&gt;. File and glob patterns ignore &lt;code&gt;options.extensions&lt;/code&gt;.</source>
          <target state="translated">Specify directories, files, or globs. Must be relative to &lt;code&gt;options.context&lt;/code&gt; . Directories are traveresed recursively looking for files matching &lt;code&gt;options.extensions&lt;/code&gt; . File and glob patterns ignore &lt;code&gt;options.extensions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e256865ced61a786b7c7bb3c7c7dae3e942ab2c9" translate="yes" xml:space="preserve">
          <source>Specify extensions that should be checked.</source>
          <target state="translated">Specify extensions that should be checked.</target>
        </trans-unit>
        <trans-unit id="d24787c755da4255293166f31b91e5e1d3ed7cd0" translate="yes" xml:space="preserve">
          <source>Specify the &lt;code&gt;encoding&lt;/code&gt; which the file will be inlined with. If unspecified the &lt;code&gt;encoding&lt;/code&gt; will be &lt;code&gt;base64&lt;/code&gt;.</source>
          <target state="translated">Specify the &lt;code&gt;encoding&lt;/code&gt; which the file will be inlined with. If unspecified the &lt;code&gt;encoding&lt;/code&gt; will be &lt;code&gt;base64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa186276c23f8d7b34ec39edd8c5e808ffb08f61" translate="yes" xml:space="preserve">
          <source>Specify the &lt;code&gt;mimetype&lt;/code&gt; which the file will be inlined with. If unspecified the &lt;code&gt;mimetype&lt;/code&gt; value will be used from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;.</source>
          <target state="translated">Specify the &lt;code&gt;mimetype&lt;/code&gt; which the file will be inlined with. If unspecified the &lt;code&gt;mimetype&lt;/code&gt; value will be used from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c6f4f98b083e85b8dfa64e3ef4caa73817951792" translate="yes" xml:space="preserve">
          <source>Specify the Mode</source>
          <target state="translated">모드 지정</target>
        </trans-unit>
        <trans-unit id="9f8c555874edaf2657d6b410369932d946537f12" translate="yes" xml:space="preserve">
          <source>Specify the config file location to be used by &lt;code&gt;stylelint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stylelint&lt;/code&gt; 가 사용할 구성 파일 위치를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="043687a40f1e1a35319239c9857f4824854524c1" translate="yes" xml:space="preserve">
          <source>Specify the encoding which the file will be inlined with.</source>
          <target state="translated">Specify the encoding which the file will be inlined with.</target>
        </trans-unit>
        <trans-unit id="2c2248e21bef3373a587a20483d4a33ba6006988" translate="yes" xml:space="preserve">
          <source>Specify the file from which to read the last set of records. This can be used to rename a records file. See the example below.</source>
          <target state="translated">마지막 레코드 세트를 읽을 파일을 지정하십시오. 레코드 파일의 이름을 바꾸는 데 사용할 수 있습니다. 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="660220cad54fafde7483850048e9faabf5357dbe" translate="yes" xml:space="preserve">
          <source>Specify the files and/or directories to exclude. Must be relative to &lt;code&gt;options.context&lt;/code&gt;.</source>
          <target state="translated">Specify the files and/or directories to exclude. Must be relative to &lt;code&gt;options.context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5ea5952f4d6885786cb8e9ac22874494977d69" translate="yes" xml:space="preserve">
          <source>Specify the formatter that you would like to use to format your results. See &lt;a href=&quot;https://stylelint.io/user-guide/node-api#formatter&quot;&gt;formatter option&lt;/a&gt;.</source>
          <target state="translated">Specify the formatter that you would like to use to format your results. See &lt;a href=&quot;https://stylelint.io/user-guide/node-api#formatter&quot;&gt;formatter option&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b2c64f6ba34b6840ed8dc33850b6cbac5edb9c68" translate="yes" xml:space="preserve">
          <source>Specify the glob pattern for finding files. Must be relative to &lt;code&gt;options.context&lt;/code&gt;.</source>
          <target state="translated">파일 찾기를위한 glob 패턴을 지정하십시오. &lt;code&gt;options.context&lt;/code&gt; 에 상대적이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="baf6be52bba84219b9fda6d0c8bcf12622deac70" translate="yes" xml:space="preserve">
          <source>Specify where the records should be written. The following example shows how you might use this option in combination with &lt;code&gt;recordsInputPath&lt;/code&gt; to rename a records file:</source>
          <target state="translated">레코드를 작성할 위치를 지정하십시오. 다음 예제는 &lt;code&gt;recordsInputPath&lt;/code&gt; 와 함께이 옵션을 사용 하여 레코드 파일의 이름을 바꾸는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5e547294117895ac538e6241ce8725cf87ce5f4a" translate="yes" xml:space="preserve">
          <source>Specifying the maximum size of a file in bytes.</source>
          <target state="translated">Specifying the maximum size of a file in bytes.</target>
        </trans-unit>
        <trans-unit id="bc4274265bc2b427a0ab3c9fac43c1ce79052b5a" translate="yes" xml:space="preserve">
          <source>Speed up development by &lt;b&gt;automatically installing &amp;amp; saving dependencies&lt;/b&gt; with Webpack.</source>
          <target state="translated">Webpack으로 &lt;b&gt;종속성&lt;/b&gt; 을 &lt;b&gt;자동으로 설치 및 저장&lt;/b&gt; 하여 개발 속도를 높 입니다.</target>
        </trans-unit>
        <trans-unit id="5e0d508b45713ed3d17ba20bb553920ced378bf5" translate="yes" xml:space="preserve">
          <source>Split Chunks: Example 1</source>
          <target state="translated">스플릿 청크 : 예 1</target>
        </trans-unit>
        <trans-unit id="3221d75c5e6671a885b0095735c2a4e694aa6fb8" translate="yes" xml:space="preserve">
          <source>Split Chunks: Example 2</source>
          <target state="translated">스플릿 청크 : 예 2</target>
        </trans-unit>
        <trans-unit id="bc88172c53c17dcca4ce42ad64663c8d8bacffa1" translate="yes" xml:space="preserve">
          <source>Split Chunks: Example 3</source>
          <target state="translated">Split Chunks: Example 3</target>
        </trans-unit>
        <trans-unit id="d5ebf585bdd5fc69fcb794642a985b1162dc9b3f" translate="yes" xml:space="preserve">
          <source>Split bundles in order to drastically improve build time</source>
          <target state="translated">빌드 시간을 대폭 향상시키기 위해 번들을 분할</target>
        </trans-unit>
        <trans-unit id="927453c2e794e1ac63fb3f57afdf09e07718d4bf" translate="yes" xml:space="preserve">
          <source>Split out the given &lt;code&gt;dependencies&lt;/code&gt; to a separate bundle that that will be loaded asynchronously. When using CommonJS module syntax, this is the only way to dynamically load dependencies. Meaning, this code can be run within execution, only loading the &lt;code&gt;dependencies&lt;/code&gt; if certain conditions are met.</source>
          <target state="translated">주어진 &lt;code&gt;dependencies&lt;/code&gt; 을 비동기식으로로드 될 별도의 번들로 분할하십시오 . CommonJS 모듈 구문을 사용할 때 이것이 종속성을 동적으로로드하는 유일한 방법입니다. 즉,이 코드는 실행 내에서 실행될 수 있으며 특정 조건이 충족되는 경우 에만 &lt;code&gt;dependencies&lt;/code&gt; 로드합니다 .</target>
        </trans-unit>
        <trans-unit id="88b68ea85c77cd800f83368a5c32bcf5ed80dd09" translate="yes" xml:space="preserve">
          <source>Split out the given &lt;code&gt;dependencies&lt;/code&gt; to a separate bundle that will be loaded asynchronously. When using CommonJS module syntax, this is the only way to dynamically load dependencies. Meaning, this code can be run within execution, only loading the &lt;code&gt;dependencies&lt;/code&gt; if certain conditions are met.</source>
          <target state="translated">Split out the given &lt;code&gt;dependencies&lt;/code&gt; to a separate bundle that will be loaded asynchronously. When using CommonJS module syntax, this is the only way to dynamically load dependencies. Meaning, this code can be run within execution, only loading the &lt;code&gt;dependencies&lt;/code&gt; if certain conditions are met.</target>
        </trans-unit>
        <trans-unit id="6c9cee0a9ceb9ae2830482807a857b1955aaab84" translate="yes" xml:space="preserve">
          <source>Split your code into vendor and application.</source>
          <target state="translated">코드를 공급 업체와 응용 프로그램으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="49c4c7e4435b9c73d00e501300fe2e540e68c446" translate="yes" xml:space="preserve">
          <source>SplitChunksPlugin</source>
          <target state="translated">SplitChunksPlugin</target>
        </trans-unit>
        <trans-unit id="82cebd0cac45c28817fad5367f93a5bced93dca0" translate="yes" xml:space="preserve">
          <source>Sponsors</source>
          <target state="translated">Sponsors</target>
        </trans-unit>
        <trans-unit id="627875cde8c51637fd6f7811def1a5cfc9d84fdb" translate="yes" xml:space="preserve">
          <source>Standalone Loader</source>
          <target state="translated">Standalone Loader</target>
        </trans-unit>
        <trans-unit id="0a9111e91eb868049e2bc0cfc450c81abf9a41ef" translate="yes" xml:space="preserve">
          <source>Standalone Plugin</source>
          <target state="translated">Standalone Plugin</target>
        </trans-unit>
        <trans-unit id="f0c190c767162b85b2737615c113b0c355e166fe" translate="yes" xml:space="preserve">
          <source>Standard output</source>
          <target state="translated">표준 출력</target>
        </trans-unit>
        <trans-unit id="92916447b1d556f23631a7576a1a04b6192188a7" translate="yes" xml:space="preserve">
          <source>Start changing the &lt;code&gt;console.log&lt;/code&gt; statement in &lt;code&gt;print.js&lt;/code&gt;, and you should see the following output in the browser console (don't worry about that &lt;code&gt;button.onclick = printMe&lt;/code&gt; output for now, we will also update that part later).</source>
          <target state="translated">Start changing the &lt;code&gt;console.log&lt;/code&gt; statement in &lt;code&gt;print.js&lt;/code&gt; , and you should see the following output in the browser console (don't worry about that &lt;code&gt;button.onclick = printMe&lt;/code&gt; output for now, we will also update that part later).</target>
        </trans-unit>
        <trans-unit id="0cf2ba46a63f72b57431c5fc427239fef3027329" translate="yes" xml:space="preserve">
          <source>Start changing the &lt;code&gt;console.log&lt;/code&gt; statement in &lt;code&gt;print.js&lt;/code&gt;, and you should see the following output in the browser console.</source>
          <target state="translated">&lt;code&gt;print.js&lt;/code&gt; 에서 &lt;code&gt;console.log&lt;/code&gt; 문 변경을 시작 하면 브라우저 콘솔에 다음 출력이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d22d076c1e8d90d7483f91c0fc6fa1cb22953b81" translate="yes" xml:space="preserve">
          <source>Starting CLI v4 and webpack v5, CLI imports the entire configuration schema from webpack core to allow tuning almost every configuration option from the command line.</source>
          <target state="translated">Starting CLI v4 and webpack v5, CLI imports the entire configuration schema from webpack core to allow tuning almost every configuration option from the command line.</target>
        </trans-unit>
        <trans-unit id="58e7d62d7bd658b8a8605105a1796904b717d894" translate="yes" xml:space="preserve">
          <source>Starting with &lt;code&gt;less-loader&lt;/code&gt; 4, you can now choose between Less' builtin resolver and webpack's resolver. By default, webpack's resolver is used.</source>
          <target state="translated">&lt;code&gt;less-loader&lt;/code&gt; 4 부터는 Less '내장 리졸버와 webpack 리졸버 중에서 선택할 수 있습니다. 기본적으로 webpack의 리졸버가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0bffa02f42fb4f0bca025609a90d7321a00c4243" translate="yes" xml:space="preserve">
          <source>Starting with webpack 4, the formerly &lt;code&gt;this.options.context&lt;/code&gt; is provided as &lt;code&gt;this.rootContext&lt;/code&gt;.</source>
          <target state="translated">웹팩 4부터는 이전의 &lt;code&gt;this.options.context&lt;/code&gt; 가 &lt;code&gt;this.rootContext&lt;/code&gt; 로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="7ceb1f582ce2cefa5129f9f6b527d3fe56348d88" translate="yes" xml:space="preserve">
          <source>Statically &lt;code&gt;import&lt;/code&gt; the &lt;code&gt;export&lt;/code&gt;s of another module.</source>
          <target state="translated">다른 모듈 의 &lt;code&gt;export&lt;/code&gt; 정적으로 &lt;code&gt;import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be763e9aba2af6b8baabada85d5e26c043c93fed" translate="yes" xml:space="preserve">
          <source>Stats</source>
          <target state="translated">Stats</target>
        </trans-unit>
        <trans-unit id="4a308b7413e7f6d7fc81466205aa2f57a128e0a3" translate="yes" xml:space="preserve">
          <source>Stats Data</source>
          <target state="translated">통계 데이터</target>
        </trans-unit>
        <trans-unit id="f69d3c28b5a6791ada7c1ca0a84062a6d7b8b064" translate="yes" xml:space="preserve">
          <source>Stats Object</source>
          <target state="translated">통계 객체</target>
        </trans-unit>
        <trans-unit id="604f77a78acb0ea9173e4be9e0d1b78afe0f269a" translate="yes" xml:space="preserve">
          <source>Stats Options</source>
          <target state="translated">통계 옵션</target>
        </trans-unit>
        <trans-unit id="c392dcfa524294a937f6252ae93ca59892e9e8e2" translate="yes" xml:space="preserve">
          <source>Stats Presets</source>
          <target state="translated">Stats Presets</target>
        </trans-unit>
        <trans-unit id="9f3748f4e17121939aba10060bea304c0fa9d44f" translate="yes" xml:space="preserve">
          <source>Stats presets affect logging output</source>
          <target state="translated">Stats presets affect logging output</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="fb275fd06cf16b7ace28649a477c15f702dcd76f" translate="yes" xml:space="preserve">
          <source>Stay Up to Date</source>
          <target state="translated">최신 상태 유지</target>
        </trans-unit>
        <trans-unit id="e9a94c30e84ff4156f74ce9371f4186545b157ad" translate="yes" xml:space="preserve">
          <source>Staying up to date with &lt;strong&gt;Node.js&lt;/strong&gt; can also help with performance. On top of this, keeping your package manager (e.g. &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;) up to date can also help. Newer versions create more efficient module trees and increase resolving speed.</source>
          <target state="translated">&lt;strong&gt;Node.js&lt;/strong&gt; 를 최신 상태로 유지 하면 성능에 도움이 될 수 있습니다. 또한 패키지 관리자 (예 : &lt;code&gt;npm&lt;/code&gt; 또는 &lt;code&gt;yarn&lt;/code&gt; )를 최신 상태로 유지하면 도움이 될 수 있습니다. 최신 버전은보다 효율적인 모듈 트리를 생성하고 해결 속도를 높입니다.</target>
        </trans-unit>
        <trans-unit id="835907ad5d2926a084e36ff827109a25a2b25f77" translate="yes" xml:space="preserve">
          <source>Staying up-to-date with &lt;strong&gt;Node.js&lt;/strong&gt; can also help with performance. On top of this, keeping your package manager (e.g. &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;) up-to-date can also help. Newer versions create more efficient module trees and increase resolving speed.</source>
          <target state="translated">Staying up-to-date with &lt;strong&gt;Node.js&lt;/strong&gt; can also help with performance. On top of this, keeping your package manager (e.g. &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt; ) up-to-date can also help. Newer versions create more efficient module trees and increase resolving speed.</target>
        </trans-unit>
        <trans-unit id="3d01c0fdb9ab52f545fa0939216be00e3879dbfb" translate="yes" xml:space="preserve">
          <source>Step 1 will be done during the chunk loading. Step 2 will be done during the module evaluation interleaved with other (local and remote) modules. This way, evaluation order is unaffected by converting a module from local to remote or the other way around.</source>
          <target state="translated">Step 1 will be done during the chunk loading. Step 2 will be done during the module evaluation interleaved with other (local and remote) modules. This way, evaluation order is unaffected by converting a module from local to remote or the other way around.</target>
        </trans-unit>
        <trans-unit id="b42aafe14616527f09805ec11d38279b9b31d741" translate="yes" xml:space="preserve">
          <source>Store chunk info to the records.</source>
          <target state="translated">청크 정보를 레코드에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="05ec51b4be3008b587e499dc2addce336ed321c6" translate="yes" xml:space="preserve">
          <source>Store chunk info to the records. This is only triggered if &lt;a href=&quot;#shouldrecord&quot;&gt;&lt;code&gt;shouldRecord&lt;/code&gt;&lt;/a&gt; returns a truthy value.</source>
          <target state="translated">Store chunk info to the records. This is only triggered if &lt;a href=&quot;#shouldrecord&quot;&gt; &lt;code&gt;shouldRecord&lt;/code&gt; &lt;/a&gt; returns a truthy value.</target>
        </trans-unit>
        <trans-unit id="1ff4d31bb5eae1bf01b6d9ef6b13118938f87390" translate="yes" xml:space="preserve">
          <source>Store information about record hash to the &lt;code&gt;records&lt;/code&gt;. This is only triggered if &lt;a href=&quot;#shouldrecord&quot;&gt;&lt;code&gt;shouldRecord&lt;/code&gt;&lt;/a&gt; returns a truthy value.</source>
          <target state="translated">Store information about record hash to the &lt;code&gt;records&lt;/code&gt; . This is only triggered if &lt;a href=&quot;#shouldrecord&quot;&gt; &lt;code&gt;shouldRecord&lt;/code&gt; &lt;/a&gt; returns a truthy value.</target>
        </trans-unit>
        <trans-unit id="1f08f597445621fb711a4071c39688f20dcd5f31" translate="yes" xml:space="preserve">
          <source>Store information about the &lt;code&gt;compilation&lt;/code&gt; to the &lt;code&gt;records&lt;/code&gt;.</source>
          <target state="translated">[정보 저장소 정보를 &lt;code&gt;compilation&lt;/code&gt; 받는 &lt;code&gt;records&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04ff079f9d1e4f24af18470a8828fd33b2455bb4" translate="yes" xml:space="preserve">
          <source>Store information about the &lt;code&gt;compilation&lt;/code&gt; to the &lt;code&gt;records&lt;/code&gt;. This is only triggered if &lt;a href=&quot;#shouldrecord&quot;&gt;&lt;code&gt;shouldRecord&lt;/code&gt;&lt;/a&gt; returns a truthy value.</source>
          <target state="translated">Store information about the &lt;code&gt;compilation&lt;/code&gt; to the &lt;code&gt;records&lt;/code&gt; . This is only triggered if &lt;a href=&quot;#shouldrecord&quot;&gt; &lt;code&gt;shouldRecord&lt;/code&gt; &lt;/a&gt; returns a truthy value.</target>
        </trans-unit>
        <trans-unit id="dad7091a0230ac04d8dc6aaea8c173ee760c66da" translate="yes" xml:space="preserve">
          <source>Store module info to the records.</source>
          <target state="translated">모듈 정보를 레코드에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="797ad8889c2951edad9dea37be8102233b52d1b3" translate="yes" xml:space="preserve">
          <source>Store module info to the records. This is triggered if &lt;a href=&quot;#shouldrecord&quot;&gt;&lt;code&gt;shouldRecord&lt;/code&gt;&lt;/a&gt; returns a truthy value.</source>
          <target state="translated">Store module info to the records. This is triggered if &lt;a href=&quot;#shouldrecord&quot;&gt; &lt;code&gt;shouldRecord&lt;/code&gt; &lt;/a&gt; returns a truthy value.</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="90d8657f70af8384ba00419bffaa59489246a3e7" translate="yes" xml:space="preserve">
          <source>String syntax - &lt;code&gt;[[globalName] [moduleLocalName] [override]]&lt;/code&gt; or &lt;code&gt;[[globalName]|[moduleLocalName]|[override]]&lt;/code&gt;, where:</source>
          <target state="translated">String syntax - &lt;code&gt;[[globalName] [moduleLocalName] [override]]&lt;/code&gt; or &lt;code&gt;[[globalName]|[moduleLocalName]|[override]]&lt;/code&gt; , where:</target>
        </trans-unit>
        <trans-unit id="61f2069da820eb14c3bf6ac7027884264d6c6abb" translate="yes" xml:space="preserve">
          <source>String syntax - &lt;code&gt;[[syntax] [moduleName] [name] [alias]]&lt;/code&gt; or &lt;code&gt;[[syntax]|[moduleName]|[name]|[alias]]&lt;/code&gt;, where:</source>
          <target state="translated">String syntax - &lt;code&gt;[[syntax] [moduleName] [name] [alias]]&lt;/code&gt; or &lt;code&gt;[[syntax]|[moduleName]|[name]|[alias]]&lt;/code&gt; , where:</target>
        </trans-unit>
        <trans-unit id="83ea1f5fb672b4e93b19855c9ab7620f652e746a" translate="yes" xml:space="preserve">
          <source>String syntax - &lt;code&gt;[[syntax] [name] [alias]]&lt;/code&gt; or &lt;code&gt;[[syntax]|[name]|[alias]]&lt;/code&gt;, where:</source>
          <target state="translated">String syntax - &lt;code&gt;[[syntax] [name] [alias]]&lt;/code&gt; or &lt;code&gt;[[syntax]|[name]|[alias]]&lt;/code&gt; , where:</target>
        </trans-unit>
        <trans-unit id="9482c5d5bfbed584fddcc442794dd8d3d9813064" translate="yes" xml:space="preserve">
          <source>Structure</source>
          <target state="translated">Structure</target>
        </trans-unit>
        <trans-unit id="f85ef5c2f14d323c0f20ca83e1a366ccf556f68f" translate="yes" xml:space="preserve">
          <source>Style of exported class names.</source>
          <target state="translated">Style of exported class names.</target>
        </trans-unit>
        <trans-unit id="67c58f81c1c8b9a2b8de4af65b762cc8ca9b0dff" translate="yes" xml:space="preserve">
          <source>StylelintWebpackPlugin</source>
          <target state="translated">StylelintWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="c7bb535582186462aee87302ed2c2d97f2a58126" translate="yes" xml:space="preserve">
          <source>Styles are not added on &lt;code&gt;import/require()&lt;/code&gt;, but instead on call to &lt;code&gt;use&lt;/code&gt;/&lt;code&gt;ref&lt;/code&gt;. Styles are removed from page if &lt;code&gt;unuse&lt;/code&gt;/&lt;code&gt;unref&lt;/code&gt; is called exactly as often as &lt;code&gt;use&lt;/code&gt;/&lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">스타일은 &lt;code&gt;import/require()&lt;/code&gt; 에 추가되지 않고 대신 / &lt;code&gt;ref&lt;/code&gt; 를 &lt;code&gt;use&lt;/code&gt; 호출 할 때 추가됩니다 . 경우 스타일은 페이지에서 제거 &lt;code&gt;unuse&lt;/code&gt; / &lt;code&gt;unref&lt;/code&gt; 가 정확히 자주이라고 &lt;code&gt;use&lt;/code&gt; / &lt;code&gt;ref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb60cb3c991466704d14cea04a43b236abb1ba8" translate="yes" xml:space="preserve">
          <source>Styles can be locally scoped to avoid globally scoping styles.</source>
          <target state="translated">Styles can be locally scoped to avoid globally scoping styles.</target>
        </trans-unit>
        <trans-unit id="55f2816ed3aa70bc8d652134d376b07d16de4aac" translate="yes" xml:space="preserve">
          <source>Styling</source>
          <target state="translated">Styling</target>
        </trans-unit>
        <trans-unit id="957400ac1d92f82a856a3f939ce5438d5096957c" translate="yes" xml:space="preserve">
          <source>Stylus</source>
          <target state="translated">Stylus</target>
        </trans-unit>
        <trans-unit id="65ba7c7ba55f3e611a003f5367f12c0bd7c6b931" translate="yes" xml:space="preserve">
          <source>Stylus does not provide resolving capabilities in the &lt;code&gt;json&lt;/code&gt; function. Therefore webpack resolver does not work for &lt;code&gt;.json&lt;/code&gt; files. Use &lt;a href=&quot;#stylus-resolver&quot;&gt;&lt;code&gt;stylus resolver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Stylus does not provide resolving capabilities in the &lt;code&gt;json&lt;/code&gt; function. Therefore webpack resolver does not work for &lt;code&gt;.json&lt;/code&gt; files. Use &lt;a href=&quot;#stylus-resolver&quot;&gt; &lt;code&gt;stylus resolver&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1a7cb1648cad43743fd1bc077fbe560542e5e6d3" translate="yes" xml:space="preserve">
          <source>Stylus resolver</source>
          <target state="translated">Stylus resolver</target>
        </trans-unit>
        <trans-unit id="638b3d310ef5e4c7058bd97eacdddecec620698d" translate="yes" xml:space="preserve">
          <source>Substitutions available on Chunk-level:</source>
          <target state="translated">Substitutions available on Chunk-level:</target>
        </trans-unit>
        <trans-unit id="d0c3144b90114bae03b2e610866d05187543acb4" translate="yes" xml:space="preserve">
          <source>Substitutions available on Compilation-level:</source>
          <target state="translated">Substitutions available on Compilation-level:</target>
        </trans-unit>
        <trans-unit id="19f38f9561a9c35a6236703e9b7cf487fc26dbd0" translate="yes" xml:space="preserve">
          <source>Substitutions available on File-level:</source>
          <target state="translated">Substitutions available on File-level:</target>
        </trans-unit>
        <trans-unit id="c7176853f6ae6dcd127497fb3914d19a3cab8450" translate="yes" xml:space="preserve">
          <source>Substitutions available on Module-level:</source>
          <target state="translated">Substitutions available on Module-level:</target>
        </trans-unit>
        <trans-unit id="1fb91eccca7a6a0a3f446baca97336ad659aa5ab" translate="yes" xml:space="preserve">
          <source>Substitutions available on URL-level:</source>
          <target state="translated">Substitutions available on URL-level:</target>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="8b99bfeaa30e4742de56be74e5203fdb9b4adaff" translate="yes" xml:space="preserve">
          <source>SugarSS</source>
          <target state="translated">SugarSS</target>
        </trans-unit>
        <trans-unit id="0bf8509ba5ecde4589d8872597ed2ff4969a9a4c" translate="yes" xml:space="preserve">
          <source>Supported</source>
          <target state="translated">Supported</target>
        </trans-unit>
        <trans-unit id="a65b7f12a991185f44b505808bc867e90d749e20" translate="yes" xml:space="preserve">
          <source>Supported Compilers</source>
          <target state="translated">지원되는 컴파일러</target>
        </trans-unit>
        <trans-unit id="42366eb58c525dced3d9089466359736d08d1070" translate="yes" xml:space="preserve">
          <source>Supported ECMAScript Version (&lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;8&lt;/code&gt;). Affects &lt;code&gt;parse&lt;/code&gt;, &lt;code&gt;compress&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;output&lt;/code&gt; options</source>
          <target state="translated">지원되는 ECMAScript 버전 ( &lt;code&gt;5&lt;/code&gt; , &lt;code&gt;6&lt;/code&gt; , &lt;code&gt;7&lt;/code&gt; 또는 &lt;code&gt;8&lt;/code&gt; ). 영향 &lt;code&gt;parse&lt;/code&gt; , &lt;code&gt;compress&lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt;output&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="c2069795a54a4beb3effffa6ccc08c7db1858df1" translate="yes" xml:space="preserve">
          <source>Supported Hooks</source>
          <target state="translated">Supported Hooks</target>
        </trans-unit>
        <trans-unit id="6824265fc63ded1e35f74fdfb95bc3bc82cba17f" translate="yes" xml:space="preserve">
          <source>Supported Module Types</source>
          <target state="translated">지원되는 모듈 유형</target>
        </trans-unit>
        <trans-unit id="be6d6177a613b2aaffaa93b95f580586cd48f7ec" translate="yes" xml:space="preserve">
          <source>Supported browserslist values:</source>
          <target state="translated">Supported browserslist values:</target>
        </trans-unit>
        <trans-unit id="1c163efec7adb0da9d3adf88b202afc08c1f9fbe" translate="yes" xml:space="preserve">
          <source>Supported by</source>
          <target state="translated">지원</target>
        </trans-unit>
        <trans-unit id="e0d7a8726645549cb27da59c2ec34062c2b23e65" translate="yes" xml:space="preserve">
          <source>Supported tags and attributes:</source>
          <target state="translated">Supported tags and attributes:</target>
        </trans-unit>
        <trans-unit id="be8759e614c84bf4aa1ab490c6a68e3e469c7bdd" translate="yes" xml:space="preserve">
          <source>Supported types:</source>
          <target state="translated">지원되는 유형 :</target>
        </trans-unit>
        <trans-unit id="10d28d13aa586ebb9371074d2ca71efd5983e3b6" translate="yes" xml:space="preserve">
          <source>Supports CSS imports. (e.g. &lt;code&gt;@import &quot;~bootstrap&quot;&lt;/code&gt;)</source>
          <target state="translated">Supports CSS imports. (e.g. &lt;code&gt;@import &quot;~bootstrap&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ae09747c881ed0a49edd1b67e07001aea6a475aa" translate="yes" xml:space="preserve">
          <source>Supports Dot-delimited packages. (e.g. &lt;code&gt;lodash.capitalize&lt;/code&gt;)</source>
          <target state="translated">Supports Dot-delimited packages. (e.g. &lt;code&gt;lodash.capitalize&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0b60cbb9a8602860955f04b3a53e40c99f0119ad" translate="yes" xml:space="preserve">
          <source>Supports Namespaced packages. (e.g. &lt;code&gt;@cycle/dom&lt;/code&gt;)</source>
          <target state="translated">Supports Namespaced packages. (e.g. &lt;code&gt;@cycle/dom&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="73458c3d5de2e9ce02f4cbf33116a6ea64bdc68f" translate="yes" xml:space="preserve">
          <source>Supports both ES5 &amp;amp; ES6 Modules. (e.g. &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;)</source>
          <target state="translated">Supports both ES5 &amp;amp; ES6 Modules. (e.g. &lt;code&gt;require&lt;/code&gt; , &lt;code&gt;import&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="710e73c6452a475a7ed6c31b013cea08babd4256" translate="yes" xml:space="preserve">
          <source>Supports inline webpack loaders. (e.g. &lt;code&gt;require(&quot;bundle?lazy!./App&quot;&lt;/code&gt;)</source>
          <target state="translated">Supports inline webpack loaders. (e.g. &lt;code&gt;require(&quot;bundle?lazy!./App&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="aa3dbb86e6217840070c2819c16a0acca237c123" translate="yes" xml:space="preserve">
          <source>Supports synchronous and asynchronous worker functions</source>
          <target state="translated">동기식 및 비동기식 작업자 기능 지원</target>
        </trans-unit>
        <trans-unit id="c0ac5350e04e42826b54216b59f04b7ab52b3bf8" translate="yes" xml:space="preserve">
          <source>Supports webpack loaders. (e.g. &lt;code&gt;babel-loader&lt;/code&gt;, &lt;code&gt;file-loader&lt;/code&gt;, etc.)</source>
          <target state="translated">Supports webpack loaders. (e.g. &lt;code&gt;babel-loader&lt;/code&gt; , &lt;code&gt;file-loader&lt;/code&gt; , etc.)</target>
        </trans-unit>
        <trans-unit id="2d089a76e07d4ff754a9f679edacd3c5f7119d14" translate="yes" xml:space="preserve">
          <source>Supports webpack's &lt;code&gt;resolve.alias&lt;/code&gt; &amp;amp; &lt;code&gt;resolve.root&lt;/code&gt; configuration. (e.g. &lt;code&gt;require(&quot;react&quot;)&lt;/code&gt; can alias to &lt;code&gt;react-lite&lt;/code&gt;)</source>
          <target state="translated">Supports webpack's &lt;code&gt;resolve.alias&lt;/code&gt; &amp;amp; &lt;code&gt;resolve.root&lt;/code&gt; configuration. (e.g. &lt;code&gt;require(&quot;react&quot;)&lt;/code&gt; can alias to &lt;code&gt;react-lite&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5c7758242ce33fd5e1bba527f9db9b8ba14a50e6" translate="yes" xml:space="preserve">
          <source>Suppose we have the following &lt;code&gt;json5&lt;/code&gt; file</source>
          <target state="translated">다음 &lt;code&gt;json5&lt;/code&gt; 파일 이 있다고 가정 하십시오.</target>
        </trans-unit>
        <trans-unit id="56776efc2af43f0bb1126d26787ed0b6ac576cc5" translate="yes" xml:space="preserve">
          <source>Suppose we have the following &lt;code&gt;json5&lt;/code&gt; file:</source>
          <target state="translated">Suppose we have the following &lt;code&gt;json5&lt;/code&gt; file:</target>
        </trans-unit>
        <trans-unit id="c6cc061254b7980d8dc92932de44c580913ed833" translate="yes" xml:space="preserve">
          <source>Switch loaders to debug mode</source>
          <target state="translated">로더를 디버그 모드로 전환</target>
        </trans-unit>
        <trans-unit id="905f63092ff26517a7aa8083857b3c8af9707002" translate="yes" xml:space="preserve">
          <source>Sync</source>
          <target state="translated">Sync</target>
        </trans-unit>
        <trans-unit id="787a08df5a570ca10a502ea5b32dd8a467dfc445" translate="yes" xml:space="preserve">
          <source>Synchronous Loaders</source>
          <target state="translated">동기 로더</target>
        </trans-unit>
        <trans-unit id="bb01023d48c8f58e053cada9bb70a5c2febc2b06" translate="yes" xml:space="preserve">
          <source>Synchronously retrieve a module's ID. The compiler will ensure that the dependency is available in the output bundle. It is recommended to treat it as an opaque value which can only be used with &lt;code&gt;require.cache[id]&lt;/code&gt; or &lt;code&gt;__webpack_require__(id)&lt;/code&gt; (best to avoid such usage).</source>
          <target state="translated">Synchronously retrieve a module's ID. The compiler will ensure that the dependency is available in the output bundle. It is recommended to treat it as an opaque value which can only be used with &lt;code&gt;require.cache[id]&lt;/code&gt; or &lt;code&gt;__webpack_require__(id)&lt;/code&gt; (best to avoid such usage).</target>
        </trans-unit>
        <trans-unit id="73a2ab444440a9a93c26fed67d5ed607f2d75c7a" translate="yes" xml:space="preserve">
          <source>Synchronously retrieve a module's ID. The compiler will ensure that the dependency is available in the output bundle. See &lt;a href=&quot;module-variables#module-id-commonjs-&quot;&gt;&lt;code&gt;module.id&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">모듈의 ID를 동 기적으로 검색합니다. 컴파일러는 출력 번들에서 종속성을 사용할 수 있는지 확인합니다. 자세한 내용은 &lt;a href=&quot;module-variables#module-id-commonjs-&quot;&gt; &lt;code&gt;module.id&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a0cb60196f3d5ef223c010b6bc1d8a5b79eee62a" translate="yes" xml:space="preserve">
          <source>Synchronously retrieve the exports from another module. The compiler will ensure that the dependency is available in the output bundle.</source>
          <target state="translated">다른 모듈에서 내보내기를 동 기적으로 검색합니다. 컴파일러는 출력 번들에서 종속성을 사용할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="41e9ffd1919d34f9c7983010746657d5863be8b4" translate="yes" xml:space="preserve">
          <source>System modules require that a global variable &lt;code&gt;System&lt;/code&gt; is present in the browser when the webpack bundle is executed. Compiling to &lt;code&gt;System.register&lt;/code&gt; format allows you to &lt;code&gt;System.import('/bundle.js')&lt;/code&gt; without additional configuration and have your webpack bundle loaded into the System module registry.</source>
          <target state="translated">System modules require that a global variable &lt;code&gt;System&lt;/code&gt; is present in the browser when the webpack bundle is executed. Compiling to &lt;code&gt;System.register&lt;/code&gt; format allows you to &lt;code&gt;System.import('/bundle.js')&lt;/code&gt; without additional configuration and have your webpack bundle loaded into the System module registry.</target>
        </trans-unit>
        <trans-unit id="2db728216720705fa5f530d0d1a1de00c43e5eb0" translate="yes" xml:space="preserve">
          <source>TODO:</source>
          <target state="translated">TODO:</target>
        </trans-unit>
        <trans-unit id="4d795e4cf5fa1aaecdf870a34e0202ec5f468b04" translate="yes" xml:space="preserve">
          <source>Take caution when installing these bleeding edge releases! They may still contain bugs and therefore should not be used in production.</source>
          <target state="translated">이 블리딩 에지 ​​릴리스를 설치할 때주의하십시오! 버그가 여전히 포함되어있을 수 있으므로 프로덕션 환경에서 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="491d74eef0c4b3ab8d59266a22f5f2b2cf62f9bb" translate="yes" xml:space="preserve">
          <source>Take for example the following file structure:</source>
          <target state="translated">Take for example the following file structure:</target>
        </trans-unit>
        <trans-unit id="f8315068ea71991e2dfa9c8df96ee0db2c0f4771" translate="yes" xml:space="preserve">
          <source>Tapable</source>
          <target state="translated">Tapable</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="c7fb5c6a643a19b32cc4d41e9e2d4e96ea4a1fc0" translate="yes" xml:space="preserve">
          <source>Target environment</source>
          <target state="translated">Target environment</target>
        </trans-unit>
        <trans-unit id="3691cdfd8d2b9d8cb591016ff8b996c0c2a79284" translate="yes" xml:space="preserve">
          <source>Target environment independent packages</source>
          <target state="translated">Target environment independent packages</target>
        </trans-unit>
        <trans-unit id="2478527eeae38abf9fca0c3ca3badc4eff20092a" translate="yes" xml:space="preserve">
          <source>Target of compilation. Passed from configuration options.</source>
          <target state="translated">편집 대상. 구성 옵션에서 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="ddc21bfcb72e2fe7cca84fbb1e347825448d6b17" translate="yes" xml:space="preserve">
          <source>Targeted modules of this loader must export a &lt;code&gt;Function&lt;/code&gt; that returns an object, or a &lt;code&gt;Promise&lt;/code&gt; resolving an object (e.g. async function), containing a &lt;code&gt;code&lt;/code&gt; property at a minimum, but can contain any number of additional properties.</source>
          <target state="translated">Targeted modules of this loader must export a &lt;code&gt;Function&lt;/code&gt; that returns an object, or a &lt;code&gt;Promise&lt;/code&gt; resolving an object (e.g. async function), containing a &lt;code&gt;code&lt;/code&gt; property at a minimum, but can contain any number of additional properties.</target>
        </trans-unit>
        <trans-unit id="2d8a95e4db20a5baed4f682053222211756aa583" translate="yes" xml:space="preserve">
          <source>Targeted modules of this loader must export either a &lt;code&gt;Function&lt;/code&gt; or &lt;code&gt;Promise&lt;/code&gt; that returns an object containing a &lt;code&gt;code&lt;/code&gt; property at a minimum, but can contain any number of additional properties.</source>
          <target state="translated">이 로더의 대상 모듈은 최소한 &lt;code&gt;code&lt;/code&gt; 특성을 포함하는 오브젝트를 리턴하는 &lt;code&gt;Function&lt;/code&gt; 또는 &lt;code&gt;Promise&lt;/code&gt; 을 내 보내야 하지만 추가 특성을 여러 개 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d35260a00f655f27edcc35a7eb16da44a4f671a6" translate="yes" xml:space="preserve">
          <source>Targets</source>
          <target state="translated">Targets</target>
        </trans-unit>
        <trans-unit id="45471e9213df8d8312d92d340acd4ec7518b19db" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;NODE_ENV&lt;/code&gt; is a system environment variable that Node.js exposes into running scripts. It is used by convention to determine dev-vs-prod behavior by server tools, build scripts, and client-side libraries. Contrary to expectations, &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; is not set to &lt;code&gt;&quot;production&quot;&lt;/code&gt;&lt;strong&gt;within&lt;/strong&gt; the build script &lt;code&gt;webpack.config.js&lt;/code&gt;, see &lt;a href=&quot;https://github.com/webpack/webpack/issues/2537&quot;&gt;#2537&lt;/a&gt;. Thus, conditionals like &lt;code&gt;process.env.NODE_ENV === 'production' ? '[name].[hash].bundle.js' : '[name].bundle.js'&lt;/code&gt; within webpack configurations do not work as expected.</source>
          <target state="translated">기술적으로 &lt;code&gt;NODE_ENV&lt;/code&gt; 는 Node.js가 실행중인 스크립트에 노출하는 시스템 환경 변수입니다. 서버 도구, 빌드 스크립트 및 클라이언트 측 라이브러리에 의한 dev-vs-prod 동작을 결정하기 위해 규칙에 의해 사용됩니다. 예상과 달리 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 는 빌드 스크립트 &lt;code&gt;webpack.config.js&lt;/code&gt; &lt;strong&gt;내&lt;/strong&gt; 에서 &lt;code&gt;&quot;production&quot;&lt;/code&gt; 으로 설정되어 있지 않습니다 ( &lt;a href=&quot;https://github.com/webpack/webpack/issues/2537&quot;&gt;# 2537&lt;/a&gt; 참조) . 따라서 &lt;code&gt;process.env.NODE_ENV === 'production' ? '[name].[hash].bundle.js' : '[name].bundle.js'&lt;/code&gt; 과 같은 조건은 ? 웹팩 구성 내의 '[name]. [hash] .bundle.js': '[name] .bundle.js' 가 예상대로 작동하지 않습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8372333699d1af8bbcba6679930861399051749" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;NODE_ENV&lt;/code&gt; is a system environment variable that Node.js exposes into running scripts. It is used by convention to determine dev-vs-prod behavior by server tools, build scripts, and client-side libraries. Contrary to expectations, &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; is not set to &lt;code&gt;'production'&lt;/code&gt;&lt;strong&gt;within&lt;/strong&gt; the build script &lt;code&gt;webpack.config.js&lt;/code&gt;, see &lt;a href=&quot;https://github.com/webpack/webpack/issues/2537&quot;&gt;#2537&lt;/a&gt;. Thus, conditionals like &lt;code&gt;process.env.NODE_ENV === 'production' ? '[name].[contenthash].bundle.js' : '[name].bundle.js'&lt;/code&gt; within webpack configurations do not work as expected.</source>
          <target state="translated">Technically, &lt;code&gt;NODE_ENV&lt;/code&gt; is a system environment variable that Node.js exposes into running scripts. It is used by convention to determine dev-vs-prod behavior by server tools, build scripts, and client-side libraries. Contrary to expectations, &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; is not set to &lt;code&gt;'production'&lt;/code&gt; &lt;strong&gt;within&lt;/strong&gt; the build script &lt;code&gt;webpack.config.js&lt;/code&gt; , see &lt;a href=&quot;https://github.com/webpack/webpack/issues/2537&quot;&gt;#2537&lt;/a&gt;. Thus, conditionals like &lt;code&gt;process.env.NODE_ENV === 'production' ? '[name].[contenthash].bundle.js' : '[name].bundle.js'&lt;/code&gt; within webpack configurations do not work as expected.</target>
        </trans-unit>
        <trans-unit id="04e20d62bc9e308225e4e6b88b096a811dd945dd" translate="yes" xml:space="preserve">
          <source>Technically, this is &lt;code&gt;**/*&lt;/code&gt; with a predefined context equal to the specified directory.</source>
          <target state="translated">Technically, this is &lt;code&gt;**/*&lt;/code&gt; with a predefined context equal to the specified directory.</target>
        </trans-unit>
        <trans-unit id="a90530a60aefcb9d837e9c73c7f5f24272ae8eb3" translate="yes" xml:space="preserve">
          <source>Technically, this is a filename with a predefined context equal to &lt;code&gt;path.dirname(pathToFile)&lt;/code&gt;.</source>
          <target state="translated">Technically, this is a filename with a predefined context equal to &lt;code&gt;path.dirname(pathToFile)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd0c9dcadde4012e82339edfe19c7a2425388c6" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;CleanWebpackPlugin&lt;/code&gt; that we don't want to remove the &lt;code&gt;index.html&lt;/code&gt; file after the incremental build triggered by watch. We do this with the &lt;a href=&quot;https://github.com/johnagan/clean-webpack-plugin#options-and-defaults-optional&quot;&gt;&lt;code&gt;cleanStaleWebpackAssets&lt;/code&gt; option&lt;/a&gt;:</source>
          <target state="translated">Tell &lt;code&gt;CleanWebpackPlugin&lt;/code&gt; that we don't want to remove the &lt;code&gt;index.html&lt;/code&gt; file after the incremental build triggered by watch. We do this with the &lt;a href=&quot;https://github.com/johnagan/clean-webpack-plugin#options-and-defaults-optional&quot;&gt; &lt;code&gt;cleanStaleWebpackAssets&lt;/code&gt; option&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="6590bb874fdab5bd796817c088ecde32d8e4e7dc" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;html-loader&lt;/code&gt; to minimize HTML</source>
          <target state="translated">Tell &lt;code&gt;html-loader&lt;/code&gt; to minimize HTML</target>
        </trans-unit>
        <trans-unit id="f70e32f2b1327096ac57f254dbd61a4b0b290072" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;html-loader&lt;/code&gt; to minimize HTML.</source>
          <target state="translated">Tell &lt;code&gt;html-loader&lt;/code&gt; to minimize HTML.</target>
        </trans-unit>
        <trans-unit id="3aa10c0dc9a4e6b0e2e22c5b806eef67e1e2b437" translate="yes" xml:space="preserve">
          <source>Tell dev-server to watch the files served by the &lt;a href=&quot;#devservercontentbase&quot;&gt;&lt;code&gt;devServer.contentBase&lt;/code&gt;&lt;/a&gt; option. It is disabled by default. When enabled, file changes will trigger a full page reload.</source>
          <target state="translated">Tell dev-server to watch the files served by the &lt;a href=&quot;#devservercontentbase&quot;&gt; &lt;code&gt;devServer.contentBase&lt;/code&gt; &lt;/a&gt; option. It is disabled by default. When enabled, file changes will trigger a full page reload.</target>
        </trans-unit>
        <trans-unit id="552959922cff4ed5aeacc056ef7b0f5f0f028773" translate="yes" xml:space="preserve">
          <source>Tell the server at what URL to serve &lt;code&gt;devServer.contentBase&lt;/code&gt; static content. If there was a file &lt;code&gt;assets/manifest.json&lt;/code&gt;, it would be served at &lt;code&gt;/serve-content-base-at-this-url/manifest.json&lt;/code&gt;</source>
          <target state="translated">Tell the server at what URL to serve &lt;code&gt;devServer.contentBase&lt;/code&gt; static content. If there was a file &lt;code&gt;assets/manifest.json&lt;/code&gt; , it would be served at &lt;code&gt;/serve-content-base-at-this-url/manifest.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e370f5ffe24ac7d3c786805283b6450e6061395b" translate="yes" xml:space="preserve">
          <source>Tell the server to watch the files served by the &lt;code&gt;devServer.contentBase&lt;/code&gt; option. File changes will trigger a full page reload.</source>
          <target state="translated">&lt;code&gt;devServer.contentBase&lt;/code&gt; 옵션이 제공하는 파일을 보도록 서버에 지시하십시오 . 파일 변경으로 전체 페이지 다시로드가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="8eaf46561f2c82818e5487f1fad2c2c1a9b03109" translate="yes" xml:space="preserve">
          <source>Tell the server where to serve content from. This is only necessary if you want to serve static files. &lt;a href=&quot;#devserver-publicpath-&quot;&gt;&lt;code&gt;devServer.publicPath&lt;/code&gt;&lt;/a&gt; will be used to determine where the bundles should be served from, and takes precedence.</source>
          <target state="translated">서버에게 컨텐츠를 제공 할 위치를 알려줍니다. 정적 파일을 제공하려는 경우에만 필요합니다. &lt;a href=&quot;#devserver-publicpath-&quot;&gt; &lt;code&gt;devServer.publicPath&lt;/code&gt; &lt;/a&gt; 는 번들이 제공 될 위치를 결정하고 우선 순위를 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="34db4b895c2ffe5805e9e95e4b507f5292966152" translate="yes" xml:space="preserve">
          <source>Tell the server where to serve content from. This is only necessary if you want to serve static files. &lt;a href=&quot;#devserverpublicpath-&quot;&gt;&lt;code&gt;devServer.publicPath&lt;/code&gt;&lt;/a&gt; will be used to determine where the bundles should be served from, and takes precedence.</source>
          <target state="translated">Tell the server where to serve content from. This is only necessary if you want to serve static files. &lt;a href=&quot;#devserverpublicpath-&quot;&gt; &lt;code&gt;devServer.publicPath&lt;/code&gt; &lt;/a&gt; will be used to determine where the bundles should be served from, and takes precedence.</target>
        </trans-unit>
        <trans-unit id="d2932fc13f3b686b8323bf897871d4135135855f" translate="yes" xml:space="preserve">
          <source>Tell webpack to minimize the bundle using the &lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt;TerserPlugin&lt;/a&gt; or the plugin(s) specified in &lt;a href=&quot;#optimizationminimizer&quot;&gt;&lt;code&gt;optimization.minimizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tell webpack to minimize the bundle using the &lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt;TerserPlugin&lt;/a&gt; or the plugin(s) specified in &lt;a href=&quot;#optimizationminimizer&quot;&gt; &lt;code&gt;optimization.minimizer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6eed8e8f3698f73914c4b5b2e893f7b06987d73d" translate="yes" xml:space="preserve">
          <source>Tell webpack to minimize the bundle using the &lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;UglifyjsWebpackPlugin&lt;/a&gt;.</source>
          <target state="translated">UglifyjsWebpackPlugin을 사용하여 번들을 최소화하도록 &lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;webpack에 지시하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4addd77c60356ceaa8d70fc96c0d83183363874" translate="yes" xml:space="preserve">
          <source>Tell webpack to remove a module from the module instance cache (&lt;code&gt;require.cache&lt;/code&gt;) if it throws an exception when it is &lt;code&gt;require&lt;/code&gt;d.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 때 예외가 발생하면 모듈 인스턴스 캐시 ( &lt;code&gt;require.cache&lt;/code&gt; ) 에서 모듈을 제거하도록 webpack에 지시하십시오 . d.</target>
        </trans-unit>
        <trans-unit id="ad1cc548590d63ecaaf377363e425ba51831d6f1" translate="yes" xml:space="preserve">
          <source>Tell webpack what directories should be searched when resolving modules.</source>
          <target state="translated">모듈을 해결할 때 어떤 디렉토리를 검색해야하는지 webpack에 알려주십시오.</target>
        </trans-unit>
        <trans-unit id="0ba9b2bbb3e0b6aaba2b8cfe0634a2c12f344f24" translate="yes" xml:space="preserve">
          <source>Tell webpack what kind of ES-features may be used in the generated runtime-code.</source>
          <target state="translated">Tell webpack what kind of ES-features may be used in the generated runtime-code.</target>
        </trans-unit>
        <trans-unit id="9aa30e153413e42d9eee6cfcd6443140fcd787bf" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;devServer&lt;/code&gt; to inject a Hot Module Replacement. Setting &lt;code&gt;devServer.injectHot&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will result in always injecting. It is possible to provide a function to inject conditionally:</source>
          <target state="translated">Tells &lt;code&gt;devServer&lt;/code&gt; to inject a Hot Module Replacement. Setting &lt;code&gt;devServer.injectHot&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will result in always injecting. It is possible to provide a function to inject conditionally:</target>
        </trans-unit>
        <trans-unit id="499b6a0a71442985a46492f60e6a9c9a26a5756f" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;devServer&lt;/code&gt; to inject a client. Setting &lt;code&gt;devServer.injectClient&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will result in always injecting a client. It is possible to provide a function to inject conditionally:</source>
          <target state="translated">Tells &lt;code&gt;devServer&lt;/code&gt; to inject a client. Setting &lt;code&gt;devServer.injectClient&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will result in always injecting a client. It is possible to provide a function to inject conditionally:</target>
        </trans-unit>
        <trans-unit id="e64f06ad98e7339d33a453db207c80bb8293a126" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;devServer&lt;/code&gt; to write generated assets to the disk. The output is written to the &lt;a href=&quot;output#outputpath&quot;&gt;output.path&lt;/a&gt; directory.</source>
          <target state="translated">Tells &lt;code&gt;devServer&lt;/code&gt; to write generated assets to the disk. The output is written to the &lt;a href=&quot;output#outputpath&quot;&gt;output.path&lt;/a&gt; directory.</target>
        </trans-unit>
        <trans-unit id="ee3b5c6692e57258fc7aded637bebfde1c6a1dab" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; how many items of assets should be displayed (groups will be collapsed to fit this space).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; how many items of assets should be displayed (groups will be collapsed to fit this space).</target>
        </trans-unit>
        <trans-unit id="21a0f03bef58900234a1d6e4a7545613653fd0b1" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; how many items of chunk modules should be displayed (groups will be collapsed to fit this space).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; how many items of chunk modules should be displayed (groups will be collapsed to fit this space).</target>
        </trans-unit>
        <trans-unit id="ffb78d302da358156a64ebc4662a55bb88cc36bf" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; how many items of modules should be displayed (groups will be collapsed to fit this space).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; how many items of modules should be displayed (groups will be collapsed to fit this space).</target>
        </trans-unit>
        <trans-unit id="3f564ba34261ff72b4e37ad7f77d9b61e40ef9ec" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; how many items of nested modules should be displayed (groups will be collapsed to fit this space).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; how many items of nested modules should be displayed (groups will be collapsed to fit this space).</target>
        </trans-unit>
        <trans-unit id="bb689551c8fe3c4b5d8c5e678de5fb8cb67c4290" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to add information about the reasons of why modules are included.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to add information about the reasons of why modules are included.</target>
        </trans-unit>
        <trans-unit id="10407345b66141c680f553871797635e817c3728" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to add information about the webpack version used.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to add information about the webpack version used.</target>
        </trans-unit>
        <trans-unit id="f417d8493b4cff0ead796f28659e0ceff31bf4e8" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to add the source code of modules.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to add the source code of modules.</target>
        </trans-unit>
        <trans-unit id="93ae09d37bad2782c48f95cd00eaf7a6e05f3e75" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to add the timing information.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to add the timing information.</target>
        </trans-unit>
        <trans-unit id="a065f92aa168920e298dab5b5db31a8f8abdd0f9" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to add warnings.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to add warnings.</target>
        </trans-unit>
        <trans-unit id="626710a9cc0ed44b8b6e7c7e41d4828d3b214aa6" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to display chunk parents, children and siblings.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to display chunk parents, children and siblings.</target>
        </trans-unit>
        <trans-unit id="2b8a6995f900d1eeb77cbe0c3bf5f8a2ba0ba71e" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to exclude the matching assets information. This can be done with a &lt;code&gt;string&lt;/code&gt;, a &lt;code&gt;RegExp&lt;/code&gt;, a &lt;code&gt;function&lt;/code&gt; that is getting the assets name as an argument and returns a &lt;code&gt;boolean&lt;/code&gt;. &lt;code&gt;stats.excludeAssets&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to exclude the matching assets information. This can be done with a &lt;code&gt;string&lt;/code&gt; , a &lt;code&gt;RegExp&lt;/code&gt; , a &lt;code&gt;function&lt;/code&gt; that is getting the assets name as an argument and returns a &lt;code&gt;boolean&lt;/code&gt; . &lt;code&gt;stats.excludeAssets&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above.</target>
        </trans-unit>
        <trans-unit id="45beb4910baf1bcc76c82a64af6b0c2b24658850" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to exclude the matching modules information. This can be done with a &lt;code&gt;string&lt;/code&gt;, a &lt;code&gt;RegExp&lt;/code&gt;, a &lt;code&gt;function&lt;/code&gt; that is getting the module's source as an argument and returns a &lt;code&gt;boolean&lt;/code&gt;. &lt;code&gt;stats.excludeModules&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above. &lt;code&gt;stats.excludeModules&lt;/code&gt;'s configuration &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/Stats.js#L215&quot;&gt;is merged&lt;/a&gt; with the &lt;code&gt;stats.exclude&lt;/code&gt;'s configuration value.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to exclude the matching modules information. This can be done with a &lt;code&gt;string&lt;/code&gt; , a &lt;code&gt;RegExp&lt;/code&gt; , a &lt;code&gt;function&lt;/code&gt; that is getting the module's source as an argument and returns a &lt;code&gt;boolean&lt;/code&gt; . &lt;code&gt;stats.excludeModules&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above. &lt;code&gt;stats.excludeModules&lt;/code&gt; 's configuration &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/Stats.js#L215&quot;&gt;is merged&lt;/a&gt; with the &lt;code&gt;stats.exclude&lt;/code&gt; 's configuration value.</target>
        </trans-unit>
        <trans-unit id="034853ecb90bd491bd3fe753a782a9b955fe624b" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to exclude the warnings that are matching given filters. This can be done with a &lt;code&gt;string&lt;/code&gt;, a &lt;code&gt;RegExp&lt;/code&gt;, a &lt;code&gt;function&lt;/code&gt; that is getting a warning as an argument and returns a &lt;code&gt;boolean&lt;/code&gt;. &lt;code&gt;stats.warningsFilter&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to exclude the warnings that are matching given filters. This can be done with a &lt;code&gt;string&lt;/code&gt; , a &lt;code&gt;RegExp&lt;/code&gt; , a &lt;code&gt;function&lt;/code&gt; that is getting a warning as an argument and returns a &lt;code&gt;boolean&lt;/code&gt; . &lt;code&gt;stats.warningsFilter&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above.</target>
        </trans-unit>
        <trans-unit id="e8075191b39d35080de69fffada293a1345dcc41" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to include the debug information of the specified loggers such as Plugins or Loaders. When &lt;a href=&quot;#statslogging&quot;&gt;&lt;code&gt;stats.logging&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;stats.loggingDebug&lt;/code&gt; option is ignored.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to include the debug information of the specified loggers such as Plugins or Loaders. When &lt;a href=&quot;#statslogging&quot;&gt; &lt;code&gt;stats.logging&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;stats.loggingDebug&lt;/code&gt; option is ignored.</target>
        </trans-unit>
        <trans-unit id="7aa947806b4ac5c7fcc66ee46ce4d944c0c0823a" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to show dependencies and the origin of warnings/errors. &lt;code&gt;stats.moduleTrace&lt;/code&gt; is available since webpack 2.5.0.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to show dependencies and the origin of warnings/errors. &lt;code&gt;stats.moduleTrace&lt;/code&gt; is available since webpack 2.5.0.</target>
        </trans-unit>
        <trans-unit id="e82eff4868ad10cd4f402647f36e8b7f36150720" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to show performance hint when the file size exceeds &lt;a href=&quot;performance#performancemaxassetsize&quot;&gt;&lt;code&gt;performance.maxAssetSize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to show performance hint when the file size exceeds &lt;a href=&quot;performance#performancemaxassetsize&quot;&gt; &lt;code&gt;performance.maxAssetSize&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bee6e181453469c702770c470f83894c8c173d29" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to show the &lt;code&gt;outputPath&lt;/code&gt;.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to show the &lt;code&gt;outputPath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb2c59b576299f63de293a87a6974392000677e0" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to show the &lt;code&gt;publicPath&lt;/code&gt;.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to show the &lt;code&gt;publicPath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b25208f9624ef25637928588f85c14f6fb6b6c9" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to show the exports of the modules.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to show the exports of the modules.</target>
        </trans-unit>
        <trans-unit id="a22aaab81e2990093801072d6a161dcf05b515ee" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to sort the assets by a given field. All of the &lt;a href=&quot;#sorting-fields&quot;&gt;sorting fields&lt;/a&gt; are allowed to be used as values for &lt;code&gt;stats.assetsSort&lt;/code&gt;. Use &lt;code&gt;!&lt;/code&gt; prefix in the value to reverse the sort order by a given field.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to sort the assets by a given field. All of the &lt;a href=&quot;#sorting-fields&quot;&gt;sorting fields&lt;/a&gt; are allowed to be used as values for &lt;code&gt;stats.assetsSort&lt;/code&gt; . Use &lt;code&gt;!&lt;/code&gt; prefix in the value to reverse the sort order by a given field.</target>
        </trans-unit>
        <trans-unit id="b4b9fc4b64439385a1e103dd3431820e81076b2b" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to sort the chunks by a given field. All of the &lt;a href=&quot;#sorting-fields&quot;&gt;sorting fields&lt;/a&gt; are allowed to be used as values for &lt;code&gt;stats.chunksSort&lt;/code&gt;. Use &lt;code&gt;!&lt;/code&gt; prefix in the value to reverse the sort order by a given field.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to sort the chunks by a given field. All of the &lt;a href=&quot;#sorting-fields&quot;&gt;sorting fields&lt;/a&gt; are allowed to be used as values for &lt;code&gt;stats.chunksSort&lt;/code&gt; . Use &lt;code&gt;!&lt;/code&gt; prefix in the value to reverse the sort order by a given field.</target>
        </trans-unit>
        <trans-unit id="9efdf8e622969630af7954f5c6a2e2928da6ed25" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; to sort the modules by a given field. All of the &lt;a href=&quot;#sorting-fields&quot;&gt;sorting fields&lt;/a&gt; are allowed to be used as values for &lt;code&gt;stats.modulesSort&lt;/code&gt;. Use &lt;code&gt;!&lt;/code&gt; prefix in the value to reverse the sort order by a given field.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; to sort the modules by a given field. All of the &lt;a href=&quot;#sorting-fields&quot;&gt;sorting fields&lt;/a&gt; are allowed to be used as values for &lt;code&gt;stats.modulesSort&lt;/code&gt; . Use &lt;code&gt;!&lt;/code&gt; prefix in the value to reverse the sort order by a given field.</target>
        </trans-unit>
        <trans-unit id="7200bad022c86de11462a46cf027262f76899442" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about assets inside modules. Set &lt;code&gt;stats.moduleAssets&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to hide it.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about assets inside modules. Set &lt;code&gt;stats.moduleAssets&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to hide it.</target>
        </trans-unit>
        <trans-unit id="0a65e8dfa6357178583a6e9e06516e6fe9e2a000" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about assets that are related to other assets (like SourceMaps for assets).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about assets that are related to other assets (like SourceMaps for assets).</target>
        </trans-unit>
        <trans-unit id="4ee6f177a9cd46ebc764eaab06571c467abde489" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about cached (not built) modules.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about cached (not built) modules.</target>
        </trans-unit>
        <trans-unit id="d840377b948703512588660f7f94c75ec8c826f0" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about runtime modules.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about runtime modules.</target>
        </trans-unit>
        <trans-unit id="550a79ca8da20c554b7b8ebe5d42a651a1a7f5c8" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the &lt;code&gt;namedChunkGroups&lt;/code&gt;.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the &lt;code&gt;namedChunkGroups&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4a1719f9f6fa4bccec51c74d3cc3cec6b86019a" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the built modules to information about the chunk.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the built modules to information about the chunk.</target>
        </trans-unit>
        <trans-unit id="62278a2e7fa6c9fd2a32b7ffb8d7a947d079664b" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the built modules.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the built modules.</target>
        </trans-unit>
        <trans-unit id="41c24b0dcf4dc2e983ac43f96b66cfb0d2ffd8a3" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the cached assets. Setting &lt;code&gt;stats.cachedAssets&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will tell &lt;code&gt;stats&lt;/code&gt; to only show the emitted files (not the ones that were built).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the cached assets. Setting &lt;code&gt;stats.cachedAssets&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will tell &lt;code&gt;stats&lt;/code&gt; to only show the emitted files (not the ones that were built).</target>
        </trans-unit>
        <trans-unit id="360b102df0dd7a4fadae24a9c1a94f9a5bc37310" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the cached modules (not the ones that were built).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the cached modules (not the ones that were built).</target>
        </trans-unit>
        <trans-unit id="c2b6209d2722809af7ce81730f37c99de1553a2f" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the children.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the children.</target>
        </trans-unit>
        <trans-unit id="57d00329fb5a7de98c8b06085f758109e0395643" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the chunk. Setting &lt;code&gt;stats.chunks&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; results in a less verbose output.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the chunk. Setting &lt;code&gt;stats.chunks&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; results in a less verbose output.</target>
        </trans-unit>
        <trans-unit id="6c5a60f11644960ba667bc67f07f3c3075589a14" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the hash of the compilation.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the hash of the compilation.</target>
        </trans-unit>
        <trans-unit id="731308cefe5cbdf12566080e952bd4878f1b4431" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the origins of chunks and chunk merging.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add information about the origins of chunks and chunk merging.</target>
        </trans-unit>
        <trans-unit id="667f80ac0876ceba6f3d3eb2a33ab34b6d12f72b" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add logging output.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add logging output.</target>
        </trans-unit>
        <trans-unit id="06c072db8bd3a107dd64c692747c1cce2bbd57b8" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add the build date and the build time information. Set &lt;code&gt;stats.builtAt&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to hide it.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add the build date and the build time information. Set &lt;code&gt;stats.builtAt&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to hide it.</target>
        </trans-unit>
        <trans-unit id="f4331a15d86041529f6795c64909be40562e5569" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to add the details to the errors.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to add the details to the errors.</target>
        </trans-unit>
        <trans-unit id="5f0987faab80635eaf080a009920e43fea7c7f98" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to display the &lt;code&gt;--env&lt;/code&gt; information.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to display the &lt;code&gt;--env&lt;/code&gt; information.</target>
        </trans-unit>
        <trans-unit id="1e0071ffbe6bf2d4733b24d5bc29727459ac4c1f" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to display the distance from the entry point for each module.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to display the distance from the entry point for each module.</target>
        </trans-unit>
        <trans-unit id="c108172dff599d8eeef5c5a9ab4c13d6fb049f9f" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to display the entry points with the corresponding bundles.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to display the entry points with the corresponding bundles.</target>
        </trans-unit>
        <trans-unit id="64b89f9eb2339742f0d25868e1b65fe4fc5584d5" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to display the errors.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to display the errors.</target>
        </trans-unit>
        <trans-unit id="e879532e6ae73160981e0a9df65d5bdcd9d7763c" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to group assets by how their are related to chunks.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to group assets by how their are related to chunks.</target>
        </trans-unit>
        <trans-unit id="12a296549ee6d5549456268e25d7f134813aa87b" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to group assets by their asset info (immutable, development, hotModuleReplacement, etc).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to group assets by their asset info (immutable, development, hotModuleReplacement, etc).</target>
        </trans-unit>
        <trans-unit id="c4ec348747de9ede0cc265cb9a839eb7c2b7df1a" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to group assets by their status (emitted, compared for emit or cached).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to group assets by their status (emitted, compared for emit or cached).</target>
        </trans-unit>
        <trans-unit id="59ec1bbd331072af3ddaf83bc7a1299dad92b043" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to group modules by their attributes (errors, warnings, assets, optional, orphan, or dependent).</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to group modules by their attributes (errors, warnings, assets, optional, orphan, or dependent).</target>
        </trans-unit>
        <trans-unit id="df485738be31ec821ae5301deb8b4a6df563f68f" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to hide &lt;code&gt;orphan&lt;/code&gt; modules. A module is an &lt;code&gt;orphan&lt;/code&gt; if it is not included in any chunk. Orphan modules are hidden by default in &lt;code&gt;stats&lt;/code&gt;.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to hide &lt;code&gt;orphan&lt;/code&gt; modules. A module is an &lt;code&gt;orphan&lt;/code&gt; if it is not included in any chunk. Orphan modules are hidden by default in &lt;code&gt;stats&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d40bcfb2382dc120ebe0da826ee5de90f0ac4d23" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to output in the different colors.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to output in the different colors.</target>
        </trans-unit>
        <trans-unit id="82209417c1f00f4eb01861be845e166385203de3" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to show chunk modules that are dependencies of other modules of the chunk.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to show chunk modules that are dependencies of other modules of the chunk.</target>
        </trans-unit>
        <trans-unit id="1354299c2eb6c178ae159e43e8fa10279d4aed3e" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to show stack trace of errors.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to show stack trace of errors.</target>
        </trans-unit>
        <trans-unit id="739a6811a3a22d544acf5d13868fa53ecf20b9c7" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to show the asset information. Set &lt;code&gt;stats.assets&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to hide it.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to show the asset information. Set &lt;code&gt;stats.assets&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to hide it.</target>
        </trans-unit>
        <trans-unit id="d7ec3604f68c2f67ea1324e9dc10c45a17cae788" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;stats&lt;/code&gt; whether to show which exports of a module are used.</source>
          <target state="translated">Tells &lt;code&gt;stats&lt;/code&gt; whether to show which exports of a module are used.</target>
        </trans-unit>
        <trans-unit id="df138909483646e5a35c3a6796edfeffe65eb91c" translate="yes" xml:space="preserve">
          <source>Tells clients connected to &lt;code&gt;devServer&lt;/code&gt; to use provided socket host.</source>
          <target state="translated">Tells clients connected to &lt;code&gt;devServer&lt;/code&gt; to use provided socket host.</target>
        </trans-unit>
        <trans-unit id="eaedc73854c57d3f29d48bd03032034331b74e83" translate="yes" xml:space="preserve">
          <source>Tells clients connected to &lt;code&gt;devServer&lt;/code&gt; to use provided socket port.</source>
          <target state="translated">Tells clients connected to &lt;code&gt;devServer&lt;/code&gt; to use provided socket port.</target>
        </trans-unit>
        <trans-unit id="ed0e77b9958a798d7db3ec927a76636ddc78d8e4" translate="yes" xml:space="preserve">
          <source>Tells dev-server to open the browser after server had been started. Set it to &lt;code&gt;true&lt;/code&gt; to open your default browser.</source>
          <target state="translated">Tells dev-server to open the browser after server had been started. Set it to &lt;code&gt;true&lt;/code&gt; to open your default browser.</target>
        </trans-unit>
        <trans-unit id="63c31652658e9f03316b8a10c887083bcee61c7c" translate="yes" xml:space="preserve">
          <source>Tells dev-server to suppress messages like the webpack bundle information. Errors and warnings will still be shown.</source>
          <target state="translated">Tells dev-server to suppress messages like the webpack bundle information. Errors and warnings will still be shown.</target>
        </trans-unit>
        <trans-unit id="f503cdc8ed7fc4ec9d8d6772e7da3760ab698557" translate="yes" xml:space="preserve">
          <source>Tells dev-server to use &lt;a href=&quot;https://github.com/expressjs/serve-index&quot;&gt;&lt;code&gt;serveIndex&lt;/code&gt;&lt;/a&gt; middleware when enabled.</source>
          <target state="translated">Tells dev-server to use &lt;a href=&quot;https://github.com/expressjs/serve-index&quot;&gt; &lt;code&gt;serveIndex&lt;/code&gt; &lt;/a&gt; middleware when enabled.</target>
        </trans-unit>
        <trans-unit id="070435baf1bd4d2acfa8957a777701c8ed9571e3" translate="yes" xml:space="preserve">
          <source>Tells if result should be minimized.</source>
          <target state="translated">Tells if result should be minimized.</target>
        </trans-unit>
        <trans-unit id="066018b53e7aacd2fb906ab1a629d6d72e92c472" translate="yes" xml:space="preserve">
          <source>Tells if source map should be generated. Since generating source maps can be an expensive task, you should check if source maps are actually requested.</source>
          <target state="translated">Tells if source map should be generated. Since generating source maps can be an expensive task, you should check if source maps are actually requested.</target>
        </trans-unit>
        <trans-unit id="002f265592e0a31a76086e3fa4ac479ad83d1202" translate="yes" xml:space="preserve">
          <source>Tells the &lt;a href=&quot;https://github.com/webpack/loader-runner&quot;&gt;loader-runner&lt;/a&gt; that the loader intends to call back asynchronously. Returns &lt;code&gt;this.callback&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/loader-runner&quot;&gt;로더가&lt;/a&gt; 비동기 적으로 콜백 할 것을 로더 러너 에게 알려줍니다 . &lt;code&gt;this.callback&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b03d1c7f588b7610c47bde7b77fbfcc7c1cc0f41" translate="yes" xml:space="preserve">
          <source>Tells webpack to add &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt; wrapper around emitted code.</source>
          <target state="translated">Tells webpack to add &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt; wrapper around emitted code.</target>
        </trans-unit>
        <trans-unit id="fb3a6cc8712fd7540919f0877a27cda86a852f72" translate="yes" xml:space="preserve">
          <source>Tells webpack to add &lt;code&gt;charset=&quot;utf-8&quot;&lt;/code&gt; to the HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Tells webpack to add &lt;code&gt;charset=&quot;utf-8&quot;&lt;/code&gt; to the HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.</target>
        </trans-unit>
        <trans-unit id="9d83274274c73903a1f8ce6b28a1e27881628a17" translate="yes" xml:space="preserve">
          <source>Tells webpack to check if to be emitted file already exists and has the same content before writing to the output file system.</source>
          <target state="translated">Tells webpack to check if to be emitted file already exists and has the same content before writing to the output file system.</target>
        </trans-unit>
        <trans-unit id="678849cdcfae499dc3bf39b28e35e9ed9493aec2" translate="yes" xml:space="preserve">
          <source>Tells webpack to detect and remove chunks which are empty. Setting &lt;code&gt;optimization.removeEmptyChunks&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will disable this optimization.</source>
          <target state="translated">비어있는 청크를 감지하고 제거하도록 웹팩에 지시합니다. 설정 &lt;code&gt;optimization.removeEmptyChunks&lt;/code&gt; 을 에 &lt;code&gt;false&lt;/code&gt; 이 최적화를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="5ff451f631199311fa712e6d24be429e485ab51b" translate="yes" xml:space="preserve">
          <source>Tells webpack to detect and remove modules from chunks when these modules are already included in all parents. Setting &lt;code&gt;optimization.removeAvailableModules&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will disable this optimization.</source>
          <target state="translated">이러한 모듈이 이미 모든 부모에 포함 된 경우 청크에서 모듈을 감지하고 제거하도록 웹팩에 지시합니다. 설정 &lt;code&gt;optimization.removeAvailableModules&lt;/code&gt; 을 에 &lt;code&gt;false&lt;/code&gt; 이 최적화를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="421dfd09bdcd9fd9ea2241c34e14e211508b7d74" translate="yes" xml:space="preserve">
          <source>Tells webpack to detect and remove modules from chunks when these modules are already included in all parents. Setting &lt;code&gt;optimization.removeAvailableModules&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will enable this optimization. Enabled by default in &lt;a href=&quot;mode&quot;&gt;&lt;code&gt;production&lt;/code&gt; mode&lt;/a&gt;.</source>
          <target state="translated">Tells webpack to detect and remove modules from chunks when these modules are already included in all parents. Setting &lt;code&gt;optimization.removeAvailableModules&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will enable this optimization. Enabled by default in &lt;a href=&quot;mode&quot;&gt; &lt;code&gt;production&lt;/code&gt; mode&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4d555ade81cd8447fdc4e7d090f9249ae596d436" translate="yes" xml:space="preserve">
          <source>Tells webpack to determine and flag chunks which are subsets of other chunks in a way that subsets don&amp;rsquo;t have to be loaded when the bigger chunk has been already loaded. By default &lt;code&gt;optimization.flagIncludedChunks&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</source>
          <target state="translated">더 큰 청크가 이미로드 된 경우 서브 세트를로드 할 필요가없는 방식으로 다른 청크의 서브 세트 인 청크를 결정하고 플래그를 지정하도록 웹팩에 지시합니다. 기본적으로 &lt;code&gt;optimization.flagIncludedChunks&lt;/code&gt; 는 &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;../concepts/mode&quot;&gt;모드&lt;/a&gt; 에서 활성화되고 그렇지 않으면 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="2b4a2c5de7d7b9ee28bda1c95d4d431787856adf" translate="yes" xml:space="preserve">
          <source>Tells webpack to determine and flag chunks which are subsets of other chunks in a way that subsets don&amp;rsquo;t have to be loaded when the bigger chunk has been already loaded. By default &lt;code&gt;optimization.flagIncludedChunks&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</source>
          <target state="translated">Tells webpack to determine and flag chunks which are subsets of other chunks in a way that subsets don&amp;rsquo;t have to be loaded when the bigger chunk has been already loaded. By default &lt;code&gt;optimization.flagIncludedChunks&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</target>
        </trans-unit>
        <trans-unit id="49b0cf198c848627a5a85418a4e575b1c5ef1e2c" translate="yes" xml:space="preserve">
          <source>Tells webpack to determine used exports for each module. This depends on &lt;a href=&quot;#optimization-occurrenceorder&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt;. Information collected by &lt;code&gt;optimization.usedExports&lt;/code&gt; is used by other optimizations or code generation i.e. exports are not generated for unused exports, export names are mangled to single char identifiers when all usages are compatible. Dead code elimination in minimizers will benefit from this and can remove unused exports. By default &lt;code&gt;optimization.usedExports&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</source>
          <target state="translated">각 모듈에 사용 된 내보내기를 결정하도록 웹팩에 지시합니다. 이것은 &lt;a href=&quot;#optimization-occurrenceorder&quot;&gt; &lt;code&gt;optimization.providedExports&lt;/code&gt; 에&lt;/a&gt; 의존 합니다 . &lt;code&gt;optimization.usedExports&lt;/code&gt; 에 의해 수집 된 정보 는 다른 최적화 또는 코드 생성에 의해 사용됩니다. 즉, 사용되지 않은 내보내기에 대해 내보내기가 생성되지 않으며, 모든 사용이 호환되는 경우 내보내기 이름이 단일 문자 식별자로 엉망이됩니다. 최소화 기의 데드 코드 제거는 이로 인해 혜택을 받고 사용하지 않는 내보내기를 제거 할 수 있습니다. 기본적으로 &lt;code&gt;optimization.usedExports&lt;/code&gt; .usedExports 는 &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;../concepts/mode&quot;&gt;모드&lt;/a&gt; 에서 활성화되고 그렇지 않으면 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="915583af81bccb894772e920327cfd2f82be2b59" translate="yes" xml:space="preserve">
          <source>Tells webpack to determine used exports for each module. This depends on &lt;a href=&quot;#optimizationoccurrenceorder&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt;. Information collected by &lt;code&gt;optimization.usedExports&lt;/code&gt; is used by other optimizations or code generation i.e. exports are not generated for unused exports, export names are mangled to single char identifiers when all usages are compatible. Dead code elimination in minimizers will benefit from this and can remove unused exports.</source>
          <target state="translated">Tells webpack to determine used exports for each module. This depends on &lt;a href=&quot;#optimizationoccurrenceorder&quot;&gt; &lt;code&gt;optimization.providedExports&lt;/code&gt; &lt;/a&gt;. Information collected by &lt;code&gt;optimization.usedExports&lt;/code&gt; is used by other optimizations or code generation i.e. exports are not generated for unused exports, export names are mangled to single char identifiers when all usages are compatible. Dead code elimination in minimizers will benefit from this and can remove unused exports.</target>
        </trans-unit>
        <trans-unit id="95a4221a6a38b856bbdcd3527901d792e6507753" translate="yes" xml:space="preserve">
          <source>Tells webpack to enable &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/HTML/Element/script#attr-crossorigin&quot;&gt;cross-origin&lt;/a&gt; loading of chunks. Only takes effect when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'web'&lt;/code&gt;, which uses JSONP for loading on-demand chunks, by adding script tags.</source>
          <target state="translated">Tells webpack to enable &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/HTML/Element/script#attr-crossorigin&quot;&gt;cross-origin&lt;/a&gt; loading of chunks. Only takes effect when &lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;'web'&lt;/code&gt; , which uses JSONP for loading on-demand chunks, by adding script tags.</target>
        </trans-unit>
        <trans-unit id="53346d778cc236a954ab23a350d012de81c68945" translate="yes" xml:space="preserve">
          <source>Tells webpack to figure out an order of modules which will result in the smallest initial bundle. By default &lt;code&gt;optimization.occurrenceOrder&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</source>
          <target state="translated">가장 작은 초기 번들을 생성하는 모듈 순서를 파악하도록 웹팩에 지시합니다. 기본적으로 &lt;code&gt;optimization.occurrenceOrder&lt;/code&gt; 는 &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;../concepts/mode&quot;&gt;모드&lt;/a&gt; 에서 사용 가능하고 그렇지 않으면 사용 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="492522051e2dfcb47f48ceb261fc17820a31d711" translate="yes" xml:space="preserve">
          <source>Tells webpack to figure out an order of modules which will result in the smallest initial bundle. By default &lt;code&gt;optimization.occurrenceOrder&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</source>
          <target state="translated">Tells webpack to figure out an order of modules which will result in the smallest initial bundle. By default &lt;code&gt;optimization.occurrenceOrder&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</target>
        </trans-unit>
        <trans-unit id="767b81cab8dc96a3bac18a6ba2b717cfba1c8930" translate="yes" xml:space="preserve">
          <source>Tells webpack to figure out which exports are provided by modules to generate more efficient code for &lt;code&gt;export * from ...&lt;/code&gt;. By default &lt;code&gt;optimization.providedExports&lt;/code&gt; is enabled.</source>
          <target state="translated">webpack에게 모듈에서 어떤 내보내기가 제공되는지 알아내어보다 효율적인 &lt;code&gt;export * from ...&lt;/code&gt; 코드를 생성하도록 지시 합니다. 기본적으로 &lt;code&gt;optimization.providedExports&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3471cdb0c7bb551a61a5f66be480922f5f06b708" translate="yes" xml:space="preserve">
          <source>Tells webpack to find segments of the module graph which can be safely concatenated into a single module. Depends on &lt;a href=&quot;#optimization-providedexports&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#optimization-usedexports&quot;&gt;&lt;code&gt;optimization.usedExports&lt;/code&gt;&lt;/a&gt;. By default &lt;code&gt;optimization.concatenateModules&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</source>
          <target state="translated">단일 모듈로 안전하게 연결할 수있는 모듈 그래프의 세그먼트를 찾도록 webpack에 지시합니다. 에 따라 다름 &lt;a href=&quot;#optimization-providedexports&quot;&gt; &lt;code&gt;optimization.providedExports&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#optimization-usedexports&quot;&gt; &lt;code&gt;optimization.usedExports&lt;/code&gt; &lt;/a&gt; . 기본적으로 &lt;code&gt;optimization.concatenateModules&lt;/code&gt; 는 &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;../concepts/mode&quot;&gt;모드&lt;/a&gt; 에서 활성화되고 그렇지 않으면 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="354e94011c1a9bfb0245b94f3ebc132e24a5f52f" translate="yes" xml:space="preserve">
          <source>Tells webpack to find segments of the module graph which can be safely concatenated into a single module. Depends on &lt;a href=&quot;#optimizationprovidedexports&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#optimizationusedexports&quot;&gt;&lt;code&gt;optimization.usedExports&lt;/code&gt;&lt;/a&gt;. By default &lt;code&gt;optimization.concatenateModules&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</source>
          <target state="translated">Tells webpack to find segments of the module graph which can be safely concatenated into a single module. Depends on &lt;a href=&quot;#optimizationprovidedexports&quot;&gt; &lt;code&gt;optimization.providedExports&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#optimizationusedexports&quot;&gt; &lt;code&gt;optimization.usedExports&lt;/code&gt; &lt;/a&gt;. By default &lt;code&gt;optimization.concatenateModules&lt;/code&gt; is enabled in &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; and disabled elsewise.</target>
        </trans-unit>
        <trans-unit id="a14999958e319f2a7d1c5599256d260c3a463b6c" translate="yes" xml:space="preserve">
          <source>Tells webpack to ignore &lt;a href=&quot;#splitchunksminsize&quot;&gt;&lt;code&gt;splitChunks.minSize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#splitchunksminchunks&quot;&gt;&lt;code&gt;splitChunks.minChunks&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#splitchunksmaxasyncrequests&quot;&gt;&lt;code&gt;splitChunks.maxAsyncRequests&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#splitchunksmaxinitialrequests&quot;&gt;&lt;code&gt;splitChunks.maxInitialRequests&lt;/code&gt;&lt;/a&gt; options and always create chunks for this cache group.</source>
          <target state="translated">Tells webpack to ignore &lt;a href=&quot;#splitchunksminsize&quot;&gt; &lt;code&gt;splitChunks.minSize&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#splitchunksminchunks&quot;&gt; &lt;code&gt;splitChunks.minChunks&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#splitchunksmaxasyncrequests&quot;&gt; &lt;code&gt;splitChunks.maxAsyncRequests&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#splitchunksmaxinitialrequests&quot;&gt; &lt;code&gt;splitChunks.maxInitialRequests&lt;/code&gt; &lt;/a&gt; options and always create chunks for this cache group.</target>
        </trans-unit>
        <trans-unit id="09eedbb5d29703695b8d4d9c51df22f60951a3ee" translate="yes" xml:space="preserve">
          <source>Tells webpack to ignore specific warnings. This can be done with a &lt;code&gt;RegExp&lt;/code&gt;, a custom &lt;code&gt;function&lt;/code&gt; to select warnings based on the raw warning instance which is getting &lt;code&gt;WebpackError&lt;/code&gt; and &lt;code&gt;Compilation&lt;/code&gt; as arguments and returns a &lt;code&gt;boolean&lt;/code&gt;, an &lt;code&gt;object&lt;/code&gt; with the following properties:</source>
          <target state="translated">Tells webpack to ignore specific warnings. This can be done with a &lt;code&gt;RegExp&lt;/code&gt; , a custom &lt;code&gt;function&lt;/code&gt; to select warnings based on the raw warning instance which is getting &lt;code&gt;WebpackError&lt;/code&gt; and &lt;code&gt;Compilation&lt;/code&gt; as arguments and returns a &lt;code&gt;boolean&lt;/code&gt; , an &lt;code&gt;object&lt;/code&gt; with the following properties:</target>
        </trans-unit>
        <trans-unit id="35aec2c0f0349e1f86c07ebb33883970eccbfd46" translate="yes" xml:space="preserve">
          <source>Tells webpack to include comments in bundles with information about the contained modules. This option defaults to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; respectively.</source>
          <target state="translated">포함 된 모듈에 대한 정보가있는 번들에 주석을 포함하도록 웹팩에 지시합니다. 이 옵션은 기본적으로 &lt;code&gt;true&lt;/code&gt; 에 &lt;code&gt;development&lt;/code&gt; 과 &lt;code&gt;false&lt;/code&gt; 의 &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;../concepts/mode&quot;&gt;모드&lt;/a&gt; 각각.</target>
        </trans-unit>
        <trans-unit id="a9779a6e9b148d3c3b80843cb438b27b90281cb7" translate="yes" xml:space="preserve">
          <source>Tells webpack to include comments in bundles with information about the contained modules. This option defaults to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;production&lt;/code&gt;&lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; respectively.</source>
          <target state="translated">Tells webpack to include comments in bundles with information about the contained modules. This option defaults to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;production&lt;/code&gt; &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; respectively.</target>
        </trans-unit>
        <trans-unit id="e51482cc3f1d2bedf8bced5bba0c82b5d42c230b" translate="yes" xml:space="preserve">
          <source>Tells webpack to merge chunks which contain the same modules. Setting &lt;code&gt;optimization.mergeDuplicateChunks&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will disable this optimization.</source>
          <target state="translated">동일한 모듈을 포함하는 청크를 병합하도록 웹팩에 지시합니다. 설정 &lt;code&gt;optimization.mergeDuplicateChunks&lt;/code&gt; 을 에 &lt;code&gt;false&lt;/code&gt; 이 최적화를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b58296314b274ed9f5e0ac6d182c74666bcd178f" translate="yes" xml:space="preserve">
          <source>Tells webpack to recognise the &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/examples/side-effects/README.md&quot;&gt;&lt;code&gt;sideEffects&lt;/code&gt;&lt;/a&gt; flag in &lt;code&gt;package.json&lt;/code&gt; or rules to skip over modules which are flagged to contain no side effects when exports are not used.</source>
          <target state="translated">webpack이 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/examples/side-effects/README.md&quot;&gt; &lt;code&gt;sideEffects&lt;/code&gt; &lt;/a&gt; 플래그 를 인식하도록 지시 하거나 내보내기를 사용하지 않을 때 부작용이없는 것으로 플래그가 지정된 모듈을 건너 뛰도록 규칙에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="29f35228e53a433d0b2ca4e42a82a658b3ba86ed" translate="yes" xml:space="preserve">
          <source>Tells webpack to set &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to a given string value. &lt;code&gt;optimization.nodeEnv&lt;/code&gt; uses &lt;a href=&quot;../plugins/define-plugin&quot;&gt;DefinePlugin&lt;/a&gt; unless set to &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;optimization.nodeEnv&lt;/code&gt;&lt;strong&gt;defaults&lt;/strong&gt; to &lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; if set, else falls back to &lt;code&gt;&quot;production&quot;&lt;/code&gt;.</source>
          <target state="translated">webpack에 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 를 지정된 문자열 값 으로 설정하도록 지시 합니다. &lt;code&gt;optimization.nodeEnv&lt;/code&gt; 는 &lt;code&gt;false&lt;/code&gt; 로 설정되지 않는 한 &lt;a href=&quot;../plugins/define-plugin&quot;&gt;DefinePlugin을&lt;/a&gt; 사용합니다 . &lt;code&gt;optimization.nodeEnv&lt;/code&gt; 는&lt;strong&gt;기본적&lt;/strong&gt; 으로 &lt;a href=&quot;../concepts/mode&quot;&gt;mode로&lt;/a&gt; 설정되고 그렇지 않으면 &lt;code&gt;&quot;production&quot;&lt;/code&gt; 으로 대체됩니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c13b17631b14af32393d330e0959eaf88ada3c9" translate="yes" xml:space="preserve">
          <source>Tells webpack to set &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to a given string value. &lt;code&gt;optimization.nodeEnv&lt;/code&gt; uses &lt;a href=&quot;../plugins/define-plugin&quot;&gt;DefinePlugin&lt;/a&gt; unless set to &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;optimization.nodeEnv&lt;/code&gt;&lt;strong&gt;defaults&lt;/strong&gt; to &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; if set, else falls back to &lt;code&gt;'production'&lt;/code&gt;.</source>
          <target state="translated">Tells webpack to set &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to a given string value. &lt;code&gt;optimization.nodeEnv&lt;/code&gt; uses &lt;a href=&quot;../plugins/define-plugin&quot;&gt;DefinePlugin&lt;/a&gt; unless set to &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;optimization.nodeEnv&lt;/code&gt; &lt;strong&gt;defaults&lt;/strong&gt; to &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; if set, else falls back to &lt;code&gt;'production'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c2c5b8993daed03b59d36b12cfb045e9697ee0b" translate="yes" xml:space="preserve">
          <source>Tells webpack to use readable chunk identifiers for better debugging. This option is enabled by default for &lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt;&lt;code&gt;development&lt;/code&gt; and disabled for &lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt;&lt;code&gt;production&lt;/code&gt; if no option is provided in webpack config.</source>
          <target state="translated">더 나은 디버깅을 위해 읽을 수있는 청크 식별자를 사용하도록 웹팩에 지시합니다. 이 옵션은 기본적으로 &lt;a href=&quot;../concepts/mode&quot;&gt;모드 &lt;/a&gt; &lt;code&gt;development&lt;/code&gt; 에 사용 되며 webpack 구성에 옵션이 제공되지 않으면 &lt;a href=&quot;../concepts/mode&quot;&gt;모드 &lt;/a&gt; &lt;code&gt;production&lt;/code&gt; 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f2f2c942de55c59c53a2f31de1a4dd6e58cd92e" translate="yes" xml:space="preserve">
          <source>Tells webpack to use readable module identifiers for better debugging. When &lt;code&gt;optimization.namedModules&lt;/code&gt; is not set in webpack config, webpack will enable it by default for &lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt;&lt;code&gt;development&lt;/code&gt; and disable for &lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt;&lt;code&gt;production&lt;/code&gt;.</source>
          <target state="translated">더 나은 디버깅을 위해 읽을 수있는 모듈 식별자를 사용하도록 웹팩에 지시합니다. 때 &lt;code&gt;optimization.namedModules&lt;/code&gt; 가 웹팩 설정, 웹팩에 설정되지 않은 경우 기본적으로 활성화됩니다 &lt;a href=&quot;../concepts/mode&quot;&gt;모드 &lt;/a&gt; &lt;code&gt;development&lt;/code&gt; 및 비활성화 &lt;a href=&quot;../concepts/mode&quot;&gt;모드 &lt;/a&gt; &lt;code&gt;production&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb838d073a4c7312ce1cda4da406796d7630688d" translate="yes" xml:space="preserve">
          <source>Tells webpack to use the future version of asset emitting logic, which allows freeing memory of assets after emitting. It could break plugins which assume that assets are still readable after they were emitted.</source>
          <target state="translated">Tells webpack to use the future version of asset emitting logic, which allows freeing memory of assets after emitting. It could break plugins which assume that assets are still readable after they were emitted.</target>
        </trans-unit>
        <trans-unit id="48bcbe5270c1f7eaad1272c2a1c1d7854440abc5" translate="yes" xml:space="preserve">
          <source>Tells webpack whether to require to use an extension for modules (e.g. loaders).</source>
          <target state="translated">Tells webpack whether to require to use an extension for modules (e.g. loaders).</target>
        </trans-unit>
        <trans-unit id="f1b21603e9ebfb4b57b65e7d815815662e7e4ab1" translate="yes" xml:space="preserve">
          <source>Tells webpack which algorithm to use when choosing chunk ids. Setting &lt;code&gt;optimization.chunkIds&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; tells webpack that none of built-in algorithms should be used, as custom one can be provided via plugin. There are couple of defaults for &lt;code&gt;optimization.chunkIds&lt;/code&gt;:</source>
          <target state="translated">Tells webpack which algorithm to use when choosing chunk ids. Setting &lt;code&gt;optimization.chunkIds&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; tells webpack that none of built-in algorithms should be used, as custom one can be provided via plugin. There are couple of defaults for &lt;code&gt;optimization.chunkIds&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="37e612d0a3179abdfd6d8cc456b280f8a66490ce" translate="yes" xml:space="preserve">
          <source>Tells webpack which algorithm to use when choosing module ids. Setting &lt;code&gt;optimization.moduleIds&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; tells webpack that none of built-in algorithms should be used, as custom one can be provided via plugin. By default &lt;code&gt;optimization.moduleIds&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Tells webpack which algorithm to use when choosing module ids. Setting &lt;code&gt;optimization.moduleIds&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; tells webpack that none of built-in algorithms should be used, as custom one can be provided via plugin. By default &lt;code&gt;optimization.moduleIds&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="dc68610743d7021a571f80b8ceb084cbd65c3e6a" translate="yes" xml:space="preserve">
          <source>Template strings</source>
          <target state="translated">템플릿 문자열</target>
        </trans-unit>
        <trans-unit id="200be3445e2bde1ede81d4c95d33bd1076a8277f" translate="yes" xml:space="preserve">
          <source>Templating</source>
          <target state="translated">Templating</target>
        </trans-unit>
        <trans-unit id="9dd6b98a1a71c8b5a41c77224c64f63faaf64130" translate="yes" xml:space="preserve">
          <source>Terser actually tries to figure it out, but it doesn't know for sure in many cases. This doesn't mean that terser is not doing its job well because it can't figure it out. It's just too difficult to determine it reliably in a dynamic language like JavaScript.</source>
          <target state="translated">Terser actually tries to figure it out, but it doesn't know for sure in many cases. This doesn't mean that terser is not doing its job well because it can't figure it out. It's just too difficult to determine it reliably in a dynamic language like JavaScript.</target>
        </trans-unit>
        <trans-unit id="2e3e005407299d2421c38e780268205f1057d593" translate="yes" xml:space="preserve">
          <source>Terser minify &lt;a href=&quot;https://github.com/terser-js/terser#minify-options&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">Terser minify &lt;a href=&quot;https://github.com/terser-js/terser#minify-options&quot;&gt;options&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f8dcbd31ecdaba6d4d938252d7d557647540e187" translate="yes" xml:space="preserve">
          <source>Terser minify options.</source>
          <target state="translated">Terser 축소 옵션.</target>
        </trans-unit>
        <trans-unit id="cca680f3e51dedd055b5b7479ead7486d3946d3b" translate="yes" xml:space="preserve">
          <source>TerserWebpackPlugin</source>
          <target state="translated">TerserWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="cb1dc79df1cb9310379fcd3a272451d5d79e44e9" translate="yes" xml:space="preserve">
          <source>Test all loaded modules for updates and, if updates exist, &lt;code&gt;apply&lt;/code&gt; them.</source>
          <target state="translated">로드 된 모든 모듈의 업데이트를 테스트하고 업데이트가 있으면 &lt;code&gt;apply&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18180da60ee4b39df19792be2645538d6c578338" translate="yes" xml:space="preserve">
          <source>Test to match files against</source>
          <target state="translated">파일과 일치하도록 테스트</target>
        </trans-unit>
        <trans-unit id="fae6e75610ee85d5156a1dc129b2d22f8fb6fe80" translate="yes" xml:space="preserve">
          <source>Test to match files against.</source>
          <target state="translated">파일이 일치하는지 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="50dbbe37990bafc325edea02edc1d82e5ea8b60d" translate="yes" xml:space="preserve">
          <source>Thankfully there are a two solutions to this problem:</source>
          <target state="translated">Thankfully there are a two solutions to this problem:</target>
        </trans-unit>
        <trans-unit id="5f768c28a658c6bc08900e35d9efed4bd2ce04c9" translate="yes" xml:space="preserve">
          <source>Thanks to Javier (&lt;a href=&quot;https://github.com/vieron&quot;&gt;@vieron&lt;/a&gt;) for authoring this plugin.</source>
          <target state="translated">이 플러그인을 &lt;a href=&quot;https://github.com/vieron&quot;&gt;작성해 주신&lt;/a&gt; Javier ( @vieron )에게 감사합니다 .</target>
        </trans-unit>
        <trans-unit id="16f1b9980bfe0cab0829dfb2682d18033b865745" translate="yes" xml:space="preserve">
          <source>That's all you need. Since we're already using the &lt;code&gt;DefinePlugin&lt;/code&gt; on our configuration, &lt;code&gt;process.env.ASSET_PATH&lt;/code&gt; will always be defined so we can safely do that.</source>
          <target state="translated">그게 당신이 필요한 전부입니다. 구성 에서 &lt;code&gt;DefinePlugin&lt;/code&gt; 을 이미 사용하고 있으므로 &lt;code&gt;process.env.ASSET_PATH&lt;/code&gt; 가 항상 정의되어 있으므로 안전하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5aed75fadc485a43ba5d84a71779dcd723dd4182" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rule-enforce&quot;&gt;&lt;code&gt;enforce&lt;/code&gt;&lt;/a&gt; property affects the loader category. Whether it's a normal, pre- or post- loader.</source>
          <target state="translated">&lt;a href=&quot;#rule-enforce&quot;&gt; &lt;code&gt;enforce&lt;/code&gt; &lt;/a&gt; 속성은 로더 범주에 영향을 미칩니다. 일반, 프리 로더 또는 포스트 로더인지 여부.</target>
        </trans-unit>
        <trans-unit id="e63386709206a80b9a4b95abfe8e4511c665fc19" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rule-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; property affects the parser options.</source>
          <target state="translated">&lt;a href=&quot;#rule-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt; 속성은 파서 옵션에 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="4c40a2ea246832127f09ec0e7a72826858b57361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ruleenforce&quot;&gt;&lt;code&gt;enforce&lt;/code&gt;&lt;/a&gt; property affects the loader category. Whether it's a normal, pre- or post- loader.</source>
          <target state="translated">The &lt;a href=&quot;#ruleenforce&quot;&gt; &lt;code&gt;enforce&lt;/code&gt; &lt;/a&gt; property affects the loader category. Whether it's a normal, pre- or post- loader.</target>
        </trans-unit>
        <trans-unit id="a90d6d00488aa11c3a9fa7405621e13165fb2048" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ruleparser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; property affects the parser options.</source>
          <target state="translated">The &lt;a href=&quot;#ruleparser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt; property affects the parser options.</target>
        </trans-unit>
        <trans-unit id="e14e11d1390c3b062e08607169bdeeea5d147e37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../configuration/entry-context#dependencies&quot;&gt;&lt;code&gt;dependOn&lt;/code&gt; option&lt;/a&gt; allows to share the modules between the chunks:</source>
          <target state="translated">The &lt;a href=&quot;../configuration/entry-context#dependencies&quot;&gt; &lt;code&gt;dependOn&lt;/code&gt; option&lt;/a&gt; allows to share the modules between the chunks:</target>
        </trans-unit>
        <trans-unit id="21209c1336894328250405b1f9671f6d33f7f912" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../configuration/optimization#optimizationconcatenatemodules&quot;&gt;concatenatedModules optimization&lt;/a&gt; is not compatible with this mode since Closure-Compiler performs an equivalent optimization). The plugin will emit a warning if this optimization is not disabled.</source>
          <target state="translated">The &lt;a href=&quot;../configuration/optimization#optimizationconcatenatemodules&quot;&gt;concatenatedModules optimization&lt;/a&gt; is not compatible with this mode since Closure-Compiler performs an equivalent optimization). The plugin will emit a warning if this optimization is not disabled.</target>
        </trans-unit>
        <trans-unit id="3dd783e086888e4ee76fcb7bfdb736f16816c856" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../configuration/optimization#optimizationsideeffects&quot;&gt;&lt;code&gt;sideEffects&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../configuration/optimization#optimizationusedexports&quot;&gt;&lt;code&gt;usedExports&lt;/code&gt;&lt;/a&gt; (more known as tree shaking) optimizations are two different things.</source>
          <target state="translated">The &lt;a href=&quot;../configuration/optimization#optimizationsideeffects&quot;&gt; &lt;code&gt;sideEffects&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../configuration/optimization#optimizationusedexports&quot;&gt; &lt;code&gt;usedExports&lt;/code&gt; &lt;/a&gt; (more known as tree shaking) optimizations are two different things.</target>
        </trans-unit>
        <trans-unit id="984f0c2ce0cdc62b5cb0946806fd79297dc76335" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../configuration/target&quot;&gt;targeted&lt;/a&gt; execution environment</source>
          <target state="translated">&lt;a href=&quot;../configuration/target&quot;&gt;대상으로&lt;/a&gt; 실행 환경</target>
        </trans-unit>
        <trans-unit id="65096c8d5d07c0fb9a0318f78ab4250c620ce1b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../loaders/script-loader&quot;&gt;&lt;code&gt;script-loader&lt;/code&gt;&lt;/a&gt; evaluates code in the global context, similar to inclusion via a &lt;code&gt;script&lt;/code&gt; tag. In this mode, every normal library should work. &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, etc. are undefined.</source>
          <target state="translated">&lt;a href=&quot;../loaders/script-loader&quot;&gt; &lt;code&gt;script-loader&lt;/code&gt; &lt;/a&gt; 비아를 포함 유사한 국제적인 맥락에서 코드를 평가 &lt;code&gt;script&lt;/code&gt; 태그입니다. 이 모드에서는 모든 일반 라이브러리가 작동해야합니다. &lt;code&gt;require&lt;/code&gt; , &lt;code&gt;module&lt;/code&gt; 등은 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73fd6aaf9d6e2fa659d002e4ff65bdd6d7bf958e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../plugins/commons-chunk-plugin&quot;&gt;&lt;code&gt;CommonsChunkPlugin&lt;/code&gt;&lt;/a&gt; is also used to split vendor modules from core application code using &lt;a href=&quot;../plugins/commons-chunk-plugin#explicit-vendor-chunk&quot;&gt;explicit vendor chunks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../plugins/commons-chunk-plugin&quot;&gt; &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 은&lt;/a&gt; 또한 사용 코어 애플리케이션 코드로부터 분할 공급 모듈에 사용되는 &lt;a href=&quot;../plugins/commons-chunk-plugin#explicit-vendor-chunk&quot;&gt;명시 벤더 덩어리&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1574a4cf4f0909c897124163660f02b2b549ff5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../plugins/provide-plugin&quot;&gt;&lt;code&gt;ProvidePlugin&lt;/code&gt;&lt;/a&gt; makes a package available as a variable in every module compiled through webpack. If webpack sees that variable used, it will include the given package in the final bundle. Let's go ahead by removing the &lt;code&gt;import&lt;/code&gt; statement for &lt;code&gt;lodash&lt;/code&gt; and instead provide it via the plugin:</source>
          <target state="translated">The &lt;a href=&quot;../plugins/provide-plugin&quot;&gt; &lt;code&gt;ProvidePlugin&lt;/code&gt; &lt;/a&gt; makes a package available as a variable in every module compiled through webpack. If webpack sees that variable used, it will include the given package in the final bundle. Let's go ahead by removing the &lt;code&gt;import&lt;/code&gt; statement for &lt;code&gt;lodash&lt;/code&gt; and instead provide it via the plugin:</target>
        </trans-unit>
        <trans-unit id="03d0dd7e91926471fe0f29a0fdc35aea2f423d79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../plugins/provide-plugin&quot;&gt;&lt;code&gt;ProvidePlugin&lt;/code&gt;&lt;/a&gt; makes a package available as a variable in every module compiled through webpack. If webpack sees that variable used, it will include the given package in the final bundle. Let's go ahead by removing the &lt;code&gt;import&lt;/code&gt; statement for &lt;code&gt;lodash&lt;/code&gt; and instead providing it via the plugin:</source>
          <target state="translated">&lt;a href=&quot;../plugins/provide-plugin&quot;&gt; &lt;code&gt;ProvidePlugin&lt;/code&gt; 는&lt;/a&gt; 웹팩을 통해 컴파일 된 모든 모듈의 변수로 사용할 수있는 패키지를합니다. 웹팩에서 사용 된 변수를 발견하면 최종 패키지에 지정된 패키지가 포함됩니다. &lt;code&gt;lodash&lt;/code&gt; 에 대한 &lt;code&gt;import&lt;/code&gt; 문을 제거 하고 대신 플러그인을 통해 제공해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="1e2a49bbe348f32531395726882d0edadf5b7798" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunks&lt;/code&gt;&lt;/a&gt; allows us to extract common dependencies into an existing entry chunk or an entirely new chunk. Let's use this to de-duplicate the &lt;code&gt;lodash&lt;/code&gt; dependency from the previous example:</source>
          <target state="translated">&lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt; &lt;code&gt;SplitChunks&lt;/code&gt; 은&lt;/a&gt; 우리가 기존 항목 청크 또는 완전히 새로운 덩어리로 일반적인 종속성을 추출 할 수 있습니다. 이것을 사용 하여 이전 예제에서 &lt;code&gt;lodash&lt;/code&gt; 종속성을 중복 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4f51c8aedf5cc5b5b8c320556fbad38b349f499" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunksPlugin&lt;/code&gt;&lt;/a&gt; allows us to extract common dependencies into an existing entry chunk or an entirely new chunk. Let's use this to de-duplicate the &lt;code&gt;lodash&lt;/code&gt; dependency from the previous example:</source>
          <target state="translated">The &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt; &lt;code&gt;SplitChunksPlugin&lt;/code&gt; &lt;/a&gt; allows us to extract common dependencies into an existing entry chunk or an entirely new chunk. Let's use this to de-duplicate the &lt;code&gt;lodash&lt;/code&gt; dependency from the previous example:</target>
        </trans-unit>
        <trans-unit id="0dea7e34dbdd9c4b5a070e1afdd0a51fda969ff2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cli&quot;&gt;webpack CLI&lt;/a&gt; uses this information to display nicely formatted output in your console.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;웹팩 CLI는&lt;/a&gt; 콘솔에 잘 형식화 된 출력을 표시하려면이 정보를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="91e94616a5c40bcb0c5f9ea9235af3cbf7916a68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt; statements have been standardized in &lt;a href=&quot;https://babeljs.io/docs/en/learn/&quot;&gt;ES2015&lt;/a&gt;. They are supported in most of the browsers at this moment, however there are some browsers that don't recognize the new syntax. But don't worry, webpack does support them out of the box.</source>
          <target state="translated">The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export&quot;&gt; &lt;code&gt;export&lt;/code&gt; &lt;/a&gt; statements have been standardized in &lt;a href=&quot;https://babeljs.io/docs/en/learn/&quot;&gt;ES2015&lt;/a&gt;. They are supported in most of the browsers at this moment, however there are some browsers that don't recognize the new syntax. But don't worry, webpack does support them out of the box.</target>
        </trans-unit>
        <trans-unit id="172e8069c798268e6ac5af79ba1c2895a1cbf705" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt; statements have been standardized in &lt;a href=&quot;https://babeljs.io/learn-es2015/&quot;&gt;ES2015&lt;/a&gt; and &lt;a href=&quot;https://caniuse.com/#search=modules&quot;&gt;are supported in most browsers&lt;/a&gt;. Some older browsers still lag behind but webpack supports modules out of the box.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export&quot;&gt; &lt;code&gt;export&lt;/code&gt; &lt;/a&gt; 문은 표준화 된 &lt;a href=&quot;https://babeljs.io/learn-es2015/&quot;&gt;ES2015&lt;/a&gt; 과 &lt;a href=&quot;https://caniuse.com/#search=modules&quot;&gt;대부분의 브라우저에서 지원됩니다&lt;/a&gt; . 일부 구형 브라우저는 여전히 뒤쳐져 있지만 웹팩은 기본적으로 모듈을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5b464e9919940e8342cebed4d751a8883d9f4d56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_hash_function&quot;&gt;digest&lt;/a&gt; that the hash function should use. Valid values include: base26, base32, base36, base49, base52, base58, base62, base64, and hex.</source>
          <target state="translated">는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_hash_function&quot;&gt;다이제스트&lt;/a&gt; 해시 함수를 사용하도록. 유효한 값은 base26, base32, base36, base49, base52, base58, base62, base64 및 hex입니다.</target>
        </trans-unit>
        <trans-unit id="2a0d507b74b1361bbb471f7da349d2e25a854d48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt;&lt;code&gt;HtmlWebpackPlugin&lt;/code&gt;&lt;/a&gt; simplifies creation of HTML files to serve your webpack bundles. This is especially useful for webpack bundles that include a hash in the filename which changes every compilation. You can either let the plugin generate an HTML file for you, supply your own template using &lt;a href=&quot;https://lodash.com/docs#template&quot;&gt;lodash templates&lt;/a&gt;, or use your own &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;loader&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt; &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; &lt;/a&gt; HTML의 단순화 창조는 당신의 웹팩 번들을 제공하기 위해 파일. 이것은 모든 컴파일을 변경하는 파일 이름에 해시를 포함하는 웹팩 번들에 특히 유용합니다. 플러그인이 HTML 파일을 생성하도록 하거나 &lt;a href=&quot;https://lodash.com/docs#template&quot;&gt;lodash 템플릿을&lt;/a&gt; 사용하여 고유 한 템플릿 을 제공하거나 고유 한 &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;로더를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88bb274fd4fe206846ce7f3e91467f530bc06a11" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt;&lt;code&gt;karma-webpack&lt;/code&gt;&lt;/a&gt; package allows you to use webpack to pre-process files in &lt;a href=&quot;http://karma-runner.github.io/1.0/index.html&quot;&gt;Karma&lt;/a&gt;. It also makes use of &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;&lt;code&gt;webpack-dev-middleware&lt;/code&gt;&lt;/a&gt; and allows passing configurations for both. A simple example may look something like this:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt; &lt;code&gt;karma-webpack&lt;/code&gt; &lt;/a&gt; 패키지는 당신이 파일 프로세스 사전 웹팩을 사용할 수 있습니다 &lt;a href=&quot;http://karma-runner.github.io/1.0/index.html&quot;&gt;카르마&lt;/a&gt; . 또한 &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt; &lt;code&gt;webpack-dev-middleware&lt;/code&gt; &lt;/a&gt; 를 사용하며 두 구성에 모두 구성을 전달할 수 있습니다. 간단한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c45f9fcefcb9219d7f8d3d8e6eb4126356bae2e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt;&lt;code&gt;karma-webpack&lt;/code&gt;&lt;/a&gt; package allows you to use webpack to pre-process files in &lt;a href=&quot;https://karma-runner.github.io/1.0/index.html&quot;&gt;Karma&lt;/a&gt;. It also makes use of &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;&lt;code&gt;webpack-dev-middleware&lt;/code&gt;&lt;/a&gt; and allows passing configurations for both. A simple example may look something like this:</source>
          <target state="translated">The &lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt; &lt;code&gt;karma-webpack&lt;/code&gt; &lt;/a&gt; package allows you to use webpack to pre-process files in &lt;a href=&quot;https://karma-runner.github.io/1.0/index.html&quot;&gt;Karma&lt;/a&gt;. It also makes use of &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt; &lt;code&gt;webpack-dev-middleware&lt;/code&gt; &lt;/a&gt; and allows passing configurations for both. A simple example may look something like this:</target>
        </trans-unit>
        <trans-unit id="1ca847605a463d73a62672d6de824616533f7c10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/zinserjan/mocha-webpack&quot;&gt;&lt;code&gt;mocha-webpack&lt;/code&gt;&lt;/a&gt; utility can be used for a clean integration with Mocha. The repository offers more details on the pros and cons but essentially &lt;code&gt;mocha-webpack&lt;/code&gt; is a simple wrapper that provides almost the same CLI as Mocha itself and provides various webpack functionality like an improved watch mode and improved path resolution. Here is a small example of how you would install it and use it to run a test suite (found within &lt;code&gt;./test&lt;/code&gt;):</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zinserjan/mocha-webpack&quot;&gt; &lt;code&gt;mocha-webpack&lt;/code&gt; &lt;/a&gt; 유틸리티는 모카와 깨끗한 통합을 위해 사용할 수 있습니다. 이 저장소는 장단점에 대한 자세한 내용을 제공하지만 본질적으로 &lt;code&gt;mocha-webpack&lt;/code&gt; 은 Mocha 자체와 거의 동일한 CLI를 제공하고 개선 된 감시 모드 및 개선 된 경로 확인과 같은 다양한 웹팩 기능을 제공하는 간단한 래퍼입니다. 다음은 설치 및 테스트 스위트 실행 방법 ( &lt;code&gt;./test&lt;/code&gt; 내에 있음 )에 대한 작은 예입니다 .</target>
        </trans-unit>
        <trans-unit id="0c507e93dd92050022154621cc61d736d4327733" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://nodejs.org/api/all.html#modules_require_resolve&quot;&gt;&lt;code&gt;require.resolve&lt;/code&gt;&lt;/a&gt; call is a Node.js function (unrelated to &lt;code&gt;require.resolve&lt;/code&gt; in webpack processing). &lt;code&gt;require.resolve&lt;/code&gt; gives you the absolute path to the module (&lt;code&gt;&quot;/.../app/node_modules/react/react.js&quot;&lt;/code&gt;). So the expose only applies to the react module. And it's only exposed when used in the bundle.</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/all.html#modules_require_resolve&quot;&gt; &lt;code&gt;require.resolve&lt;/code&gt; 의&lt;/a&gt; 호출 (관계없는 Node.js를 함수이다 &lt;code&gt;require.resolve&lt;/code&gt; 웹팩 처리). &lt;code&gt;require.resolve&lt;/code&gt; 는 모듈의 절대 경로를 제공합니다 ( &lt;code&gt;&quot;/.../app/node_modules/react/react.js&quot;&lt;/code&gt; ). 따라서 노출은 반응 모듈에만 적용됩니다. 그리고 번들에서 사용될 때만 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="d7527bc60cb7caebcb29e8c3c0c9c6c3ceae93a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_require_resolve_request_options&quot;&gt;&lt;code&gt;require.resolve&lt;/code&gt;&lt;/a&gt; call is a Node.js function (unrelated to &lt;code&gt;require.resolve&lt;/code&gt; in webpack processing). &lt;code&gt;require.resolve&lt;/code&gt; gives you the absolute path to the module (&lt;code&gt;&quot;/.../app/node_modules/jquery/dist/jquery.js&quot;&lt;/code&gt;). So the expose only applies to the &lt;code&gt;jquery&lt;/code&gt; module. And it's only exposed when used in the bundle.</source>
          <target state="translated">The &lt;a href=&quot;https://nodejs.org/api/modules.html#modules_require_resolve_request_options&quot;&gt; &lt;code&gt;require.resolve&lt;/code&gt; &lt;/a&gt; call is a Node.js function (unrelated to &lt;code&gt;require.resolve&lt;/code&gt; in webpack processing). &lt;code&gt;require.resolve&lt;/code&gt; gives you the absolute path to the module ( &lt;code&gt;&quot;/.../app/node_modules/jquery/dist/jquery.js&quot;&lt;/code&gt; ). So the expose only applies to the &lt;code&gt;jquery&lt;/code&gt; module. And it's only exposed when used in the bundle.</target>
        </trans-unit>
        <trans-unit id="f2bbd217d1f4c8709483289baec1094e4af77573" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://whatwg.github.io/loader/&quot;&gt;ES2015 Loader spec&lt;/a&gt; defines &lt;code&gt;import()&lt;/code&gt; as method to load ES2015 modules dynamically on runtime.</source>
          <target state="translated">&lt;a href=&quot;https://whatwg.github.io/loader/&quot;&gt;ES2015 로더 사양&lt;/a&gt; 정의는 &lt;code&gt;import()&lt;/code&gt; 런타임에 동적 ES2015 모듈을 로딩 방법으로서.</target>
        </trans-unit>
        <trans-unit id="bb315f44e4a902716f2a7db4393abe189c7c96a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'amd-require'&lt;/code&gt; target allows for the use of AMD dependencies without needing a separate later invocation. As with the &lt;code&gt;'amd'&lt;/code&gt; target, this depends on the appropriate &lt;a href=&quot;https://github.com/amdjs/amdjs-api/blob/master/require.md&quot;&gt;&lt;code&gt;require&lt;/code&gt; function&lt;/a&gt; being available in the environment in which the webpack output is loaded.</source>
          <target state="translated">The &lt;code&gt;'amd-require'&lt;/code&gt; target allows for the use of AMD dependencies without needing a separate later invocation. As with the &lt;code&gt;'amd'&lt;/code&gt; target, this depends on the appropriate &lt;a href=&quot;https://github.com/amdjs/amdjs-api/blob/master/require.md&quot;&gt; &lt;code&gt;require&lt;/code&gt; function&lt;/a&gt; being available in the environment in which the webpack output is loaded.</target>
        </trans-unit>
        <trans-unit id="1d4ceea676a0dc4f72c17f6c8e79b7333f549174" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'commonjs ' + request&lt;/code&gt; defines the type of module that needs to be externalized.</source>
          <target state="translated">&lt;code&gt;'commonjs ' + request&lt;/code&gt; 요구 외부화 해당 모듈의 유형을 정의한다.</target>
        </trans-unit>
        <trans-unit id="fa05ba686183a6426ffb912d7b938976da334d09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'flag'&lt;/code&gt; value is used by default in non-production builds.</source>
          <target state="translated">The &lt;code&gt;'flag'&lt;/code&gt; value is used by default in non-production builds.</target>
        </trans-unit>
        <trans-unit id="b5e769b064abeac8f2d9f1df53a82faa93d01e23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--env&lt;/code&gt; argument accepts multiple values:</source>
          <target state="translated">The &lt;code&gt;--env&lt;/code&gt; argument accepts multiple values:</target>
        </trans-unit>
        <trans-unit id="8e28c37fb671c088eac2ae6cc1422587c9c06286" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--env&lt;/code&gt; argument accepts various syntaxes:</source>
          <target state="translated">&lt;code&gt;--env&lt;/code&gt; 인수는 다양한 구문을 허용합니다</target>
        </trans-unit>
        <trans-unit id="468a640ae6f8d45f738ff5d3259257ff8609ccf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--json &amp;gt; compilation-stats.json&lt;/code&gt; flag indicates to webpack that it should emit the &lt;code&gt;compilation-stats.json&lt;/code&gt; containing the dependency graph and various other build information. Typically, the &lt;code&gt;--profile&lt;/code&gt; flag is also added so that a &lt;code&gt;profile&lt;/code&gt; section is added to each &lt;a href=&quot;#module-objects&quot;&gt;&lt;code&gt;modules&lt;/code&gt; object&lt;/a&gt; containing module-specific compilation stats.</source>
          <target state="translated">&lt;code&gt;--json &amp;gt; compilation-stats.json&lt;/code&gt; 플래그가 발광해야 할 웹팩 나타내는 &lt;code&gt;compilation-stats.json&lt;/code&gt; 종속성 그래프 등 다양한 빌드 정보를 포함한다. 일반적으로 &lt;code&gt;--profile&lt;/code&gt; 플래그도 추가되어 &lt;code&gt;profile&lt;/code&gt; 섹션이 모듈 별 컴파일 통계를 포함하는 각 &lt;a href=&quot;#module-objects&quot;&gt; &lt;code&gt;modules&lt;/code&gt; 객체에&lt;/a&gt; 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c70e73b803827a95816e2c064e16a024ac534a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--profile&lt;/code&gt; option captures timing information for each step of the compilation and includes this in the output.</source>
          <target state="translated">&lt;code&gt;--profile&lt;/code&gt; 컴파일 각 단계 옵션 캡처 타이밍 정보가 출력이 포함된다.</target>
        </trans-unit>
        <trans-unit id="0c35b3fcaf6ac18ef5f8234261238cae474e94ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AutomaticPrefetchPlugin&lt;/code&gt; discovers &lt;strong&gt;all modules&lt;/strong&gt; from the previous compilation upfront while watching for changes, trying to improve the incremental build times. Compared to &lt;a href=&quot;prefetch-plugin&quot;&gt;&lt;code&gt;PrefetchPlugin&lt;/code&gt;&lt;/a&gt; which discovers a &lt;strong&gt;single module&lt;/strong&gt; upfront.</source>
          <target state="translated">&lt;code&gt;AutomaticPrefetchPlugin&lt;/code&gt; 는 발견 &lt;strong&gt;모든 모듈을&lt;/strong&gt; 증분 빌드 시간을 개선하기 위해 노력하고, 변화를 보면서 이전 컴파일 선행에서. &lt;strong&gt;단일 모듈을&lt;/strong&gt; 미리 발견하는 &lt;a href=&quot;prefetch-plugin&quot;&gt; &lt;code&gt;PrefetchPlugin&lt;/code&gt; &lt;/a&gt; 과 비교합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01c891b15ca8f85929028eb5d51f636779e61b69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; is an opt-in feature that creates a separate file (known as a chunk), consisting of common modules shared between multiple entry points.</source>
          <target state="translated">&lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 가 옵트 인 기능 다중 엔트리 포인트간에 공유되는 공통 모듈로 이루어진, (청크라고 함)를 별도의 파일을 생성한다.</target>
        </trans-unit>
        <trans-unit id="c70b8ad61375954fcc9153bfd2c445225bd7e75e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compilation&lt;/code&gt; class also extends &lt;code&gt;Tapable&lt;/code&gt; and provides the following lifecycle hooks. They can be tapped the same way as compiler hooks:</source>
          <target state="translated">&lt;code&gt;Compilation&lt;/code&gt; 클래스는 확장 &lt;code&gt;Tapable&lt;/code&gt; 을 다음과 같은 라이프 사이클 후크를 제공합니다. 컴파일러 후크와 같은 방식으로 탭핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73fa0a0250e3aa593b96eb19e97b237fe917e574" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compilation&lt;/code&gt; module is used by the &lt;code&gt;Compiler&lt;/code&gt; to create new compilations (or builds). A &lt;code&gt;compilation&lt;/code&gt; instance has access to all modules and their dependencies (most of which are circular references). It is the literal compilation of all the modules in the dependency graph of an application. During the compilation phase, modules are loaded, sealed, optimized, chunked, hashed and restored.</source>
          <target state="translated">&lt;code&gt;Compilation&lt;/code&gt; 모듈에 의해 사용되는 &lt;code&gt;Compiler&lt;/code&gt; 새로 컴파일을 만드는 데 (또는 빌드). &lt;code&gt;compilation&lt;/code&gt; 인스턴스는 모든 모듈 및 종속성 (그 중 대부분이 순환 참조입니다)에 액세스 할 수 있습니다. 응용 프로그램의 종속성 그래프에있는 모든 모듈의 리터럴 컴파일입니다. 컴파일 단계에서 모듈은로드, 봉인, 최적화, 청크, 해시 및 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="9dd316958031d96ce135ceaf6610378edf9a60ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; module is the main engine that creates a compilation instance with all the options passed through the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; or &lt;a href=&quot;node&quot;&gt;Node API&lt;/a&gt;. It extends the &lt;code&gt;Tapable&lt;/code&gt; class in order to register and call plugins. Most user facing plugins are first registered on the &lt;code&gt;Compiler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; 모듈은 통과 모든 옵션과 함께 컴파일 인스턴스를 생성하는 주요 엔진입니다 &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; 또는 &lt;a href=&quot;node&quot;&gt;노드 API를&lt;/a&gt; . 플러그인을 등록하고 호출하기 위해 &lt;code&gt;Tapable&lt;/code&gt; 클래스를 확장합니다 . 대부분의 사용자 용 플러그인은 먼저 &lt;code&gt;Compiler&lt;/code&gt; 등록됩니다 .</target>
        </trans-unit>
        <trans-unit id="5c434c0055358215a66a00b62876f8493d91a621" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; supports &lt;a href=&quot;node#watching&quot;&gt;watching&lt;/a&gt; which monitors the file system and recompiles as files change. When in watch mode, the compiler will emit the additional events such as &lt;code&gt;watchRun&lt;/code&gt;, &lt;code&gt;watchClose&lt;/code&gt;, and &lt;code&gt;invalid&lt;/code&gt;. This is typically used in &lt;a href=&quot;../guides/development&quot;&gt;development&lt;/a&gt;, usually under the hood of tools like &lt;code&gt;webpack-dev-server&lt;/code&gt;, so that the developer doesn't need to re-compile manually every time. Watch mode can also be entered via the &lt;a href=&quot;cli#watch-options&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; 지원 &lt;a href=&quot;node#watching&quot;&gt;보고&lt;/a&gt; 파일 변경 등의 파일 시스템과 재 컴파일을 모니터링한다. watch 모드에있을 때 컴파일러는 &lt;code&gt;watchRun&lt;/code&gt; , &lt;code&gt;watchClose&lt;/code&gt; 및 &lt;code&gt;invalid&lt;/code&gt; 와 같은 추가 이벤트를 생성 합니다. 일반적으로 &lt;a href=&quot;../guides/development&quot;&gt;개발 단계&lt;/a&gt; 에서 일반적으로 &lt;code&gt;webpack-dev-server&lt;/code&gt; 와 같은 도구를 사용 하므로 개발자는 매번 수동으로 다시 컴파일 할 필요가 없습니다. &lt;a href=&quot;cli#watch-options&quot;&gt;CLI&lt;/a&gt; 를 통해 감시 모드로 들어갈 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="396d6017d122a6fcfc5c00162a856325ffa3e8cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContextExclusionPlugin&lt;/code&gt; allows you to exclude context. Provide RegExp as an argument when initializing the Plugin to exclude all context that matches it.</source>
          <target state="translated">The &lt;code&gt;ContextExclusionPlugin&lt;/code&gt; allows you to exclude context. Provide RegExp as an argument when initializing the Plugin to exclude all context that matches it.</target>
        </trans-unit>
        <trans-unit id="9de4640dc1cf3d5a03b561edc521bf2fe418e2a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContextReplacementPlugin&lt;/code&gt; allows you to override the inferred information. There are various ways to configure the plugin:</source>
          <target state="translated">&lt;code&gt;ContextReplacementPlugin&lt;/code&gt; 는 당신이 추정 정보를 대체 할 수 있습니다. 플러그인을 구성하는 방법에는 여러 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="08d365ec3e08538604c8ecb39ddb51ca3f47cae3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefinePlugin&lt;/code&gt; allows you to create global constants which can be configured at &lt;strong&gt;compile&lt;/strong&gt; time. This can be useful for allowing different behavior between development builds and production builds. If you perform logging in your development build but not in the production build you might use a global constant to determine whether logging takes place. That's where &lt;code&gt;DefinePlugin&lt;/code&gt; shines, set it and forget it rules for development and production builds.</source>
          <target state="translated">The &lt;code&gt;DefinePlugin&lt;/code&gt; allows you to create global constants which can be configured at &lt;strong&gt;compile&lt;/strong&gt; time. This can be useful for allowing different behavior between development builds and production builds. If you perform logging in your development build but not in the production build you might use a global constant to determine whether logging takes place. That's where &lt;code&gt;DefinePlugin&lt;/code&gt; shines, set it and forget it rules for development and production builds.</target>
        </trans-unit>
        <trans-unit id="e2b3dbb477bb74d901776059eefe25b97e65b6b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefinePlugin&lt;/code&gt; allows you to create global constants which can be configured at &lt;strong&gt;compile&lt;/strong&gt; time. This can be useful for allowing different behavior between development builds and release builds. If you perform logging in your development build but not in the release build you might use a global constant to determine whether logging takes place. That's where &lt;code&gt;DefinePlugin&lt;/code&gt; shines, set it and forget it rules for development and release builds.</source>
          <target state="translated">&lt;code&gt;DefinePlugin&lt;/code&gt; 는 당신이 구성 할 수 있습니다 전역 상수 만들 수 있습니다 &lt;strong&gt;컴파일&lt;/strong&gt; 시간을. 이는 개발 빌드와 릴리스 빌드간에 다른 동작을 허용하는 데 유용 할 수 있습니다. 개발 빌드에서는 로깅을 수행하지만 릴리스 빌드에서는 로깅을 수행하지 않는 경우 글로벌 상수를 사용하여 로깅 발생 여부를 판별 할 수 있습니다. 여기에서 &lt;code&gt;DefinePlugin&lt;/code&gt; 이 빛을 발하고 설정하고 개발 및 릴리스 빌드 규칙을 잊어 버립니다.</target>
        </trans-unit>
        <trans-unit id="367e8377d371646e4dc3d8685d9a61a01cf7f9d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DllPlugin&lt;/code&gt; and &lt;code&gt;DllReferencePlugin&lt;/code&gt; provide means to split bundles in a way that can drastically improve build time performance.</source>
          <target state="translated">&lt;code&gt;DllPlugin&lt;/code&gt; 및 &lt;code&gt;DllReferencePlugin&lt;/code&gt; 은 크게 빌드시 성능을 향상시킬 수있는 방법으로 분할 번들 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dd240c6cada2313f7d6753b7f4bbbd23157de1f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DllPlugin&lt;/code&gt; and &lt;code&gt;DllReferencePlugin&lt;/code&gt; provide means to split bundles in a way that can drastically improve build time performance. The term &quot;DLL&quot; stands for Dynamic-link library which was originally introduced by Microsoft.</source>
          <target state="translated">The &lt;code&gt;DllPlugin&lt;/code&gt; and &lt;code&gt;DllReferencePlugin&lt;/code&gt; provide means to split bundles in a way that can drastically improve build time performance. The term &quot;DLL&quot; stands for Dynamic-link library which was originally introduced by Microsoft.</target>
        </trans-unit>
        <trans-unit id="557f7aaf93c67ec25d77447cf5baa46aa5b3d28f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EnvironmentPlugin&lt;/code&gt; accepts either an array of keys or an object mapping its keys to their default values.</source>
          <target state="translated">&lt;code&gt;EnvironmentPlugin&lt;/code&gt; 는 키의 배열 또는 기본값으로 그 키를 매핑하는 객체 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="529504bcf17aec34f1796b4d3aac75440813d169" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EnvironmentPlugin&lt;/code&gt; is shorthand for using the &lt;a href=&quot;define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;https://nodejs.org/api/process.html#process_process_env&quot;&gt;&lt;code&gt;process.env&lt;/code&gt;&lt;/a&gt; keys.</source>
          <target state="translated">&lt;code&gt;EnvironmentPlugin&lt;/code&gt; 는 사용 속기 &lt;a href=&quot;define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; 을&lt;/a&gt; 에 &lt;a href=&quot;https://nodejs.org/api/process.html#process_process_env&quot;&gt; &lt;code&gt;process.env&lt;/code&gt; 의&lt;/a&gt; 키.</target>
        </trans-unit>
        <trans-unit id="c7dbd12a03472b0bafe433439b4a86e42ba3b280" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoaderOptionsPlugin&lt;/code&gt; is unlike other plugins in that it is built for migration from webpack 1 to 2. In webpack 2, the schema for a &lt;code&gt;webpack.config.js&lt;/code&gt; became stricter; no longer open for extension by other loaders and plugins. The intention is that you pass &lt;code&gt;options&lt;/code&gt; directly to loaders and plugins (i.e. &lt;code&gt;options&lt;/code&gt; are &lt;strong&gt;not&lt;/strong&gt; global or shared).</source>
          <target state="translated">&lt;code&gt;LoaderOptionsPlugin&lt;/code&gt; 는 이 웹팩 (2),의 스키마에서 2로 웹팩 1에서 마이그레이션을 위해 만들어진된다는 점에서 다른 플러그인 달리 &lt;code&gt;webpack.config.js&lt;/code&gt; 이 강화되었다; 더 이상 다른 로더 및 플러그인에 의한 확장을 위해 열리지 않습니다. 의도는 &lt;code&gt;options&lt;/code&gt; 을 로더 및 플러그인에 직접 전달하는 것입니다 (즉, &lt;code&gt;options&lt;/code&gt; 이 전역 또는 공유 &lt;strong&gt;되지 않음&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="dcf9d138a1015dff10cd93930ad6483f1758e98a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiCompiler&lt;/code&gt; module allows webpack to run multiple configurations in separate compilers. If the &lt;code&gt;options&lt;/code&gt; parameter in the webpack's NodeJS api is an array of options, webpack applies separate compilers and calls the &lt;code&gt;callback&lt;/code&gt; after all compilers have been executed.</source>
          <target state="translated">The &lt;code&gt;MultiCompiler&lt;/code&gt; module allows webpack to run multiple configurations in separate compilers. If the &lt;code&gt;options&lt;/code&gt; parameter in the webpack's NodeJS api is an array of options, webpack applies separate compilers and calls the &lt;code&gt;callback&lt;/code&gt; after all compilers have been executed.</target>
        </trans-unit>
        <trans-unit id="758b1aa7bc2934fb9f463d6b2fe62ac3f7f812ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiCompiler&lt;/code&gt; module allows webpack to run multiple configurations in separate compilers. If the &lt;code&gt;options&lt;/code&gt; parameter in the webpack's NodeJS api is an array of options, webpack applies separate compilers and calls the &lt;code&gt;callback&lt;/code&gt; method at the end of each compiler execution.</source>
          <target state="translated">&lt;code&gt;MultiCompiler&lt;/code&gt; 의 모듈은 별도의 컴파일러에서 여러 구성을 실행 웹팩 수 있습니다. 경우] &lt;code&gt;options&lt;/code&gt; 웹팩의 NodeJS API의 파라미터 옵션들의 어레이이다 웹팩 별도 컴파일러를 적용하고 호출 &lt;code&gt;callback&lt;/code&gt; 각 컴파일러 실행 끝에 방법.</target>
        </trans-unit>
        <trans-unit id="fd6ac73907fb52536495374f47b5111710430240" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NoEmitOnErrorsPlugin&lt;/code&gt; allows you to avoid emitting assets when there are any errors. Enabled by default, you can disable using &lt;a href=&quot;../configuration/optimization#optimizationemitonerrors&quot;&gt;&lt;code&gt;optimization.emitOnErrors&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">The &lt;code&gt;NoEmitOnErrorsPlugin&lt;/code&gt; allows you to avoid emitting assets when there are any errors. Enabled by default, you can disable using &lt;a href=&quot;../configuration/optimization#optimizationemitonerrors&quot;&gt; &lt;code&gt;optimization.emitOnErrors&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0384e3cf0c84ae1fe040c1a2858cc9d50c384db2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NormalModuleReplacementPlugin&lt;/code&gt; allows you to replace resources that match &lt;code&gt;resourceRegExp&lt;/code&gt; with &lt;code&gt;newResource&lt;/code&gt;. If &lt;code&gt;newResource&lt;/code&gt; is relative, it is resolved relative to the previous resource. If &lt;code&gt;newResource&lt;/code&gt; is a function, it is expected to overwrite the request attribute of the supplied resource.</source>
          <target state="translated">&lt;code&gt;NormalModuleReplacementPlugin&lt;/code&gt; 은 당신이 일치하는 자원을 대체 할 수 있습니다 &lt;code&gt;resourceRegExp&lt;/code&gt; 을 함께 &lt;code&gt;newResource&lt;/code&gt; 을 . &lt;code&gt;newResource&lt;/code&gt; 가 상대적인 경우 이전 자원을 기준으로 분석됩니다. 경우 &lt;code&gt;newResource&lt;/code&gt; 는 함수이고, 이는 제공된 리소스의 요구 특성을 덮어 예상된다.</target>
        </trans-unit>
        <trans-unit id="c257bbfd888d661365b431974e37048421af8a34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProgressPlugin&lt;/code&gt; provides a way to customize how progress is reported during a compilation.</source>
          <target state="translated">The &lt;code&gt;ProgressPlugin&lt;/code&gt; provides a way to customize how progress is reported during a compilation.</target>
        </trans-unit>
        <trans-unit id="cfecad6270f6a1aa650ea7fda9edf400757676f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[local]&lt;/code&gt; placeholder contains original class.</source>
          <target state="translated">The &lt;code&gt;[local]&lt;/code&gt; placeholder contains original class.</target>
        </trans-unit>
        <trans-unit id="6b2ecd01f48f6fff5910d403614801c3be1e5823" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt;, &lt;code&gt;[fullhash]&lt;/code&gt; and &lt;code&gt;[chunkhash]&lt;/code&gt; substitutions from &lt;a href=&quot;#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; can be used. In addition to those, you can use substitutions listed under Filename-level in &lt;a href=&quot;output#template-strings&quot;&gt;Template strings&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;[name]&lt;/code&gt; , &lt;code&gt;[id]&lt;/code&gt; , &lt;code&gt;[fullhash]&lt;/code&gt; and &lt;code&gt;[chunkhash]&lt;/code&gt; substitutions from &lt;a href=&quot;#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; can be used. In addition to those, you can use substitutions listed under Filename-level in &lt;a href=&quot;output#template-strings&quot;&gt;Template strings&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d095d6c691b6167c5bd5fda19eccfdfd9ef79f68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt;, &lt;code&gt;[hash]&lt;/code&gt; and &lt;code&gt;[chunkhash]&lt;/code&gt; substitutions from &lt;a href=&quot;#output-filename&quot;&gt;#output-filename&lt;/a&gt; can be used. In addition to those, you can use substitutions listed below. The &lt;code&gt;[file]&lt;/code&gt; placeholder is replaced with the filename of the original file. We recommend &lt;strong&gt;only using the &lt;code&gt;[file]&lt;/code&gt; placeholder&lt;/strong&gt;, as the other placeholders won't work when generating SourceMaps for non-chunk files.</source>
          <target state="translated">&lt;code&gt;[name]&lt;/code&gt; , &lt;code&gt;[id]&lt;/code&gt; , &lt;code&gt;[hash]&lt;/code&gt; 및 &lt;code&gt;[chunkhash]&lt;/code&gt; 에서 대체 &lt;a href=&quot;#output-filename&quot;&gt;# - 출력 파일명이&lt;/a&gt; 사용될 수있다. 그 외에도 아래 나열된 대체를 사용할 수 있습니다. &lt;code&gt;[file]&lt;/code&gt; 자리는 원본 파일의 파일명으로 대체된다. 청크 이외의 파일에 대한 SourceMap을 생성 할 때는 다른 플레이스 홀더가 작동하지 않으므로 &lt;strong&gt; &lt;code&gt;[file]&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; 플레이스 홀더 &lt;/strong&gt;&lt;strong&gt;만 사용하는&lt;/strong&gt; 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="490e96ae3fa8594ef4f5a155082862a7c5512e4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; chunk will not contain the modules that &lt;code&gt;react-vendors&lt;/code&gt; has.</source>
          <target state="translated">The &lt;code&gt;app&lt;/code&gt; chunk will not contain the modules that &lt;code&gt;react-vendors&lt;/code&gt; has.</target>
        </trans-unit>
        <trans-unit id="d5e58eefd13d2e79cd01743b2a2668988072f0e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply&lt;/code&gt; method flags all updated modules as invalid. For each invalid module, there needs to be an update handler in the module or in its parent(s). Otherwise, the invalid flag bubbles up and invalidates parent(s) as well. Each bubble continues until the app's entry point or a module with an update handler is reached (whichever comes first). If it bubbles up from an entry point, the process fails.</source>
          <target state="translated">는 &lt;code&gt;apply&lt;/code&gt; 무효로 방법 플래그를 업데이트 된 모든 모듈을. 유효하지 않은 각 모듈마다 모듈 또는 해당 상위에 업데이트 핸들러가 있어야합니다. 그렇지 않으면 유효하지 않은 플래그가 버블 링되고 부모도 무효화됩니다. 각 버블은 앱의 진입 점 또는 업데이트 처리기가있는 모듈에 도달 할 때까지 계속됩니다 (둘 중 빠른 것). 진입 점에서 버블 링되면 프로세스가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="197ed7042dd4c4fae277edc431967fab263cb1fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoApply&lt;/code&gt; parameter can either be a boolean or &lt;code&gt;options&lt;/code&gt; to pass to the &lt;code&gt;apply&lt;/code&gt; method when called.</source>
          <target state="translated">&lt;code&gt;autoApply&lt;/code&gt; 의 매개 변수 중 하나 부울 또는 수 있습니다 &lt;code&gt;options&lt;/code&gt; 에 전달할 &lt;code&gt;apply&lt;/code&gt; 호출 할 때 방법.</target>
        </trans-unit>
        <trans-unit id="4faaa4e5b1a7548b490fc1441ee50109812afec6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;babel-preset-env&lt;/code&gt; package uses &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;browserslist&lt;/a&gt; to transpile only what is not supported in your browsers matrix. This preset comes with the &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env#usebuiltins&quot;&gt;&lt;code&gt;useBuiltIns&lt;/code&gt;&lt;/a&gt; option, &lt;code&gt;false&lt;/code&gt; by default, which converts your global &lt;code&gt;babel-polyfill&lt;/code&gt; import to a more granular feature by feature &lt;code&gt;import&lt;/code&gt; pattern:</source>
          <target state="translated">The &lt;code&gt;babel-preset-env&lt;/code&gt; package uses &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;browserslist&lt;/a&gt; to transpile only what is not supported in your browsers matrix. This preset comes with the &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env#usebuiltins&quot;&gt; &lt;code&gt;useBuiltIns&lt;/code&gt; &lt;/a&gt; option, &lt;code&gt;false&lt;/code&gt; by default, which converts your global &lt;code&gt;babel-polyfill&lt;/code&gt; import to a more granular feature by feature &lt;code&gt;import&lt;/code&gt; pattern:</target>
        </trans-unit>
        <trans-unit id="c2873faf34087491ab56ed7bbc7b9c4e199b8217" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;babel-preset-env&lt;/code&gt; package uses &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;browserslist&lt;/a&gt; to transpile only what is not supported in your browsers matrix. This preset comes with the &lt;code&gt;useBuiltIns&lt;/code&gt; option, &lt;code&gt;false&lt;/code&gt; by default, which converts your global &lt;code&gt;babel-polyfill&lt;/code&gt; import to a more granular feature by feature &lt;code&gt;import&lt;/code&gt; pattern:</source>
          <target state="translated">&lt;code&gt;babel-preset-env&lt;/code&gt; 패키지 사용은 &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;browserslist&lt;/a&gt; 귀하의 브라우저 매트릭스에서 지원되지 않는 것만 transpile 할 수 있습니다. 이 사전 설정은 &lt;code&gt;useBuiltIns&lt;/code&gt; 옵션 과 함께 기본적으로 &lt;code&gt;false&lt;/code&gt; 이며, 기능 &lt;code&gt;import&lt;/code&gt; 패턴에 따라 전역 &lt;code&gt;babel-polyfill&lt;/code&gt; 가져 오기를보다 세부적인 기능으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="9066d7b725436f54b33250467e5607dcfa020a4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache-loader&lt;/code&gt; allow to Caches the result of following loaders on disk (default) or in the database.</source>
          <target state="translated">The &lt;code&gt;cache-loader&lt;/code&gt; allow to Caches the result of following loaders on disk (default) or in the database.</target>
        </trans-unit>
        <trans-unit id="c4da3eca5eb52599c9056b6c35669178255dbde7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cheap-source-map&lt;/code&gt; variants are more performant if you can live with the slightly worse mapping quality.</source>
          <target state="translated">The &lt;code&gt;cheap-source-map&lt;/code&gt; variants are more performant if you can live with the slightly worse mapping quality.</target>
        </trans-unit>
        <trans-unit id="5df287b045d05393a528ac0d2dc007acad13c3be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cheap-source-map&lt;/code&gt; variants are more performant, if you can live with the slightly worse mapping quality.</source>
          <target state="translated">&lt;code&gt;cheap-source-map&lt;/code&gt; 이 약간 더 매핑 품질로 살 수있는 경우 변형, 더 확대됨에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b156180554ea770e4ec3a2a43529512fc6e19c5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chunks&lt;/code&gt; object will also contain a list of &lt;code&gt;origins&lt;/code&gt; describing how the given chunk originated. Each &lt;code&gt;origins&lt;/code&gt; object follows the following schema:</source>
          <target state="translated">&lt;code&gt;chunks&lt;/code&gt; 객체는 목록 포함 &lt;code&gt;origins&lt;/code&gt; 지정된 청크 유래 방법을 설명한다. 각 &lt;code&gt;origins&lt;/code&gt; 개체는 다음 스키마를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="afacb4f04d587c3593459833ab6755d16d95e20c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compilationParams&lt;/code&gt; variable is initialized as follows:</source>
          <target state="translated">The &lt;code&gt;compilationParams&lt;/code&gt; variable is initialized as follows:</target>
        </trans-unit>
        <trans-unit id="fd1284f55766687bad81fba54f0b368882a9eefe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; behaves differently depending on what the &lt;code&gt;from&lt;/code&gt; is (&lt;code&gt;glob&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;dir&lt;/code&gt;). More &lt;a href=&quot;#examples&quot;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">The &lt;code&gt;context&lt;/code&gt; behaves differently depending on what the &lt;code&gt;from&lt;/code&gt; is ( &lt;code&gt;glob&lt;/code&gt; , &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;dir&lt;/code&gt; ). More &lt;a href=&quot;#examples&quot;&gt; &lt;code&gt;examples&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27e47c71981628e7c25bcd8448dad939c5bc4012" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; option can be an absolute or relative path. If &lt;code&gt;context&lt;/code&gt; is a relative, then it is converted to absolute based to &lt;code&gt;compiler.options.context&lt;/code&gt;</source>
          <target state="translated">The &lt;code&gt;context&lt;/code&gt; option can be an absolute or relative path. If &lt;code&gt;context&lt;/code&gt; is a relative, then it is converted to absolute based to &lt;code&gt;compiler.options.context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d04ec951d561035013ce10196eb45f6875a4a4ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; argument represents how many chunks the &lt;code&gt;module&lt;/code&gt; is used in.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 인수는 얼마나 많은 덩어리 나타냅니다 &lt;code&gt;module&lt;/code&gt; 에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ecb4a6fa013e770c5aea51a42d6cc36866052e23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;css-loader&lt;/code&gt; interprets &lt;code&gt;@import&lt;/code&gt; and &lt;code&gt;url()&lt;/code&gt; like &lt;code&gt;import/require()&lt;/code&gt; and will resolve them.</source>
          <target state="translated">&lt;code&gt;css-loader&lt;/code&gt; 해석은 &lt;code&gt;@import&lt;/code&gt; 및 &lt;code&gt;url()&lt;/code&gt; 와 같은 &lt;code&gt;import/require()&lt;/code&gt; 와이를 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="9e59e1aaf4f1e81f5b28039b148fcc1a71b85705" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;err&lt;/code&gt; object &lt;strong&gt;will not&lt;/strong&gt; include compilation errors and those must be handled separately using &lt;code&gt;stats.hasErrors()&lt;/code&gt; which will be covered in detail in &lt;a href=&quot;#error-handling&quot;&gt;Error Handling&lt;/a&gt; section of this guide. The &lt;code&gt;err&lt;/code&gt; object will only contain webpack-related issues, such as misconfiguration, etc.</source>
          <target state="translated">&lt;code&gt;err&lt;/code&gt; 객체가 &lt;strong&gt;되지 않습니다&lt;/strong&gt; 컴파일 오류를 포함하고 그 사용 별도로 처리해야 &lt;code&gt;stats.hasErrors()&lt;/code&gt; 에서 자세히 설명 될 &lt;a href=&quot;#error-handling&quot;&gt;오류 처리&lt;/a&gt; 이 안내서의 섹션을 참조하십시오. &lt;code&gt;err&lt;/code&gt; 객체는 등 잘못된 같은 웹팩 관련 문제를 포함합니다</target>
        </trans-unit>
        <trans-unit id="6316d272613b9ebead3b9188dbe60bae0226dc9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;err&lt;/code&gt; object &lt;strong&gt;will not&lt;/strong&gt; include compilation errors. Those must be handled separately using &lt;code&gt;stats.hasErrors()&lt;/code&gt;, which will be covered in detail in the &lt;a href=&quot;#error-handling&quot;&gt;Error Handling&lt;/a&gt; section of this guide. The &lt;code&gt;err&lt;/code&gt; object will only contain webpack-related issues, such as misconfiguration, etc.</source>
          <target state="translated">The &lt;code&gt;err&lt;/code&gt; object &lt;strong&gt;will not&lt;/strong&gt; include compilation errors. Those must be handled separately using &lt;code&gt;stats.hasErrors()&lt;/code&gt; , which will be covered in detail in the &lt;a href=&quot;#error-handling&quot;&gt;Error Handling&lt;/a&gt; section of this guide. The &lt;code&gt;err&lt;/code&gt; object will only contain webpack-related issues, such as misconfiguration, etc.</target>
        </trans-unit>
        <trans-unit id="bb371008522bc9f3a06d993b0234da62c0417680" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errorHandler&lt;/code&gt; is fired when the evaluation of this module (or dependencies) has thrown an exception.</source>
          <target state="translated">&lt;code&gt;errorHandler&lt;/code&gt; 이 모듈 (또는 의존성)의 평가 예외가 발생 될 때 연소된다.</target>
        </trans-unit>
        <trans-unit id="1fe57923ecba9453902c3f4116b04e18cc172108" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;warnings&lt;/code&gt; properties each contain a list of objects. Each object contains a message, a stack trace and various other properties:</source>
          <target state="translated">The &lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;warnings&lt;/code&gt; properties each contain a list of objects. Each object contains a message, a stack trace and various other properties:</target>
        </trans-unit>
        <trans-unit id="15a6063eedfa1b8f8d44562d7e1aa8a218b4f303" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;warnings&lt;/code&gt; properties each contain a list of strings. Each string contains a message and stack trace:</source>
          <target state="translated">&lt;code&gt;errors&lt;/code&gt; 및 &lt;code&gt;warnings&lt;/code&gt; 특성을 각각 문자열 목록이 포함되어 있습니다. 각 문자열에는 메시지 및 스택 추적이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a30da37a0d5f5f08a3c6e62a79f140b581d47fbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;export&lt;/code&gt; keyword allows to expose things from an ESM to other modules:</source>
          <target state="translated">The &lt;code&gt;export&lt;/code&gt; keyword allows to expose things from an ESM to other modules:</target>
        </trans-unit>
        <trans-unit id="99904445efe371f8e3e683431fc098c714736010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exports&lt;/code&gt; field in the &lt;code&gt;package.json&lt;/code&gt; of a package allows to declare which module should be used when using module requests like &lt;code&gt;import &quot;package&quot;&lt;/code&gt; or &lt;code&gt;import &quot;package/sub/path&quot;&lt;/code&gt;. It replaces the default implementation that returns &lt;code&gt;main&lt;/code&gt; field resp. &lt;code&gt;index.js&lt;/code&gt; files for &lt;code&gt;&quot;package&quot;&lt;/code&gt; and the file system lookup for &lt;code&gt;&quot;package/sub/path&quot;&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;exports&lt;/code&gt; field in the &lt;code&gt;package.json&lt;/code&gt; of a package allows to declare which module should be used when using module requests like &lt;code&gt;import &quot;package&quot;&lt;/code&gt; or &lt;code&gt;import &quot;package/sub/path&quot;&lt;/code&gt; . It replaces the default implementation that returns &lt;code&gt;main&lt;/code&gt; field resp. &lt;code&gt;index.js&lt;/code&gt; files for &lt;code&gt;&quot;package&quot;&lt;/code&gt; and the file system lookup for &lt;code&gt;&quot;package/sub/path&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21649147367c735a062f33236b143143440ec509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expose-loader&lt;/code&gt; loader allows to expose a module (in whole or in part) to global object (&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt;).</source>
          <target state="translated">The &lt;code&gt;expose-loader&lt;/code&gt; loader allows to expose a module (in whole or in part) to global object ( &lt;code&gt;self&lt;/code&gt; , &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ebe7a596ff5e54934592c106b89d332d3bba5c9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; property also supports naming installed NPM modules which export webpack configurations. Various configuration properties can also be filtered in different ways based on need.</source>
          <target state="translated">가 &lt;code&gt;extends&lt;/code&gt; 되는 수출 웹팩 구성 설치 NPM 모듈을 이름도 재산 지원합니다. 필요에 따라 다양한 구성 속성을 다른 방식으로 필터링 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2efafe435f960ea040388058af44883824b2dfe7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;externals&lt;/code&gt; configuration option provides a way of excluding dependencies from the output bundles. Instead, the created bundle relies on that dependency to be present in the consumer's (any end-user application) environment. This feature is typically most useful to &lt;strong&gt;library developers&lt;/strong&gt;, however there are a variety of applications for it.</source>
          <target state="translated">The &lt;code&gt;externals&lt;/code&gt; configuration option provides a way of excluding dependencies from the output bundles. Instead, the created bundle relies on that dependency to be present in the consumer's (any end-user application) environment. This feature is typically most useful to &lt;strong&gt;library developers&lt;/strong&gt;, however there are a variety of applications for it.</target>
        </trans-unit>
        <trans-unit id="8915101d6d0cf049bfb4b9f1127093b8d16acda4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;externals&lt;/code&gt; configuration option provides a way of excluding dependencies from the output bundles. Instead, the created bundle relies on that dependency to be present in the consumer's environment. This feature is typically most useful to &lt;strong&gt;library developers&lt;/strong&gt;, however there are a variety of applications for it.</source>
          <target state="translated">&lt;code&gt;externals&lt;/code&gt; 구성 옵션은 출력 번들에서 종속성을 제외하는 방법을 제공합니다. 대신, 작성된 번들은 해당 종속성을 사용하여 소비자 환경에 존재합니다. 이 기능은 일반적으로 &lt;strong&gt;라이브러리 개발자&lt;/strong&gt; 에게 가장 유용 하지만 다양한 응용 프로그램이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d120a1f6196b25d1da372c140fadf32f3fc67614" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file-loader&lt;/code&gt; resolves &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;require()&lt;/code&gt; on a file into a url and emits the file into the output directory.</source>
          <target state="translated">The &lt;code&gt;file-loader&lt;/code&gt; resolves &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;require()&lt;/code&gt; on a file into a url and emits the file into the output directory.</target>
        </trans-unit>
        <trans-unit id="b0f3b799fe5485060fbb228471725b1fc4660161" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fileContext&lt;/code&gt; option is useful when you want to store source maps in an upper level directory to avoid &lt;code&gt;../../&lt;/code&gt; appearing in the absolute &lt;code&gt;[url]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fileContext&lt;/code&gt; 의 당신이 저장 소스로 할 때 옵션을 피하기 위해 상위 디렉토리에 매핑 유용 &lt;code&gt;../../&lt;/code&gt; 절대에 나타나는 &lt;code&gt;[url]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d58f2904d0c86283f6d5802742147c71f24aadf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filePath&lt;/code&gt; is an absolute path or relative to the webpack config: &lt;code&gt;output.path&lt;/code&gt;. You can pass in a different &lt;code&gt;formatter&lt;/code&gt; for the output file, if none is passed in the default/configured formatter will be used.</source>
          <target state="translated">The &lt;code&gt;filePath&lt;/code&gt; is an absolute path or relative to the webpack config: &lt;code&gt;output.path&lt;/code&gt; . You can pass in a different &lt;code&gt;formatter&lt;/code&gt; for the output file, if none is passed in the default/configured formatter will be used.</target>
        </trans-unit>
        <trans-unit id="3ac9d0d856894e31e9e35e5216961c4e21678205" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filePath&lt;/code&gt; is relative to the webpack config: output.path You can pass in a different formatter for the output file, if none is passed in the default/configured formatter will be used</source>
          <target state="translated">&lt;code&gt;filePath&lt;/code&gt; 웹팩 설정에 상대적입니다 : 당신은 출력 파일에 대해 다른 포맷으로 전달할 수 있습니다 output.path, 아무도 기본 / 구성 포맷터에서 사용되는 전달되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="b868542b51503c013e1a88153361f8b6c8030d37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; argument is an integer that allows to specify dlopen behavior. See the [&lt;code&gt;process.dlopen&lt;/code&gt;][https://nodejs.org/api/process.html#process_process_dlopen_module_filename_flags] documentation for details.</source>
          <target state="translated">The &lt;code&gt;flags&lt;/code&gt; argument is an integer that allows to specify dlopen behavior. See the [ &lt;code&gt;process.dlopen&lt;/code&gt; ][https://nodejs.org/api/process.html#process_process_dlopen_module_filename_flags] documentation for details.</target>
        </trans-unit>
        <trans-unit id="8e867fda39d4db878de512a003165a4320ef3ec0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hooks&lt;/code&gt; property on a &lt;code&gt;Compiler&lt;/code&gt; instance is used to register a plugin to any hook event in the &lt;code&gt;Compiler&lt;/code&gt;'s lifecycle. The &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsDefaulter.js&quot;&gt;&lt;code&gt;WebpackOptionsDefaulter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js&quot;&gt;&lt;code&gt;WebpackOptionsApply&lt;/code&gt;&lt;/a&gt; utilities are used by webpack to configure its &lt;code&gt;Compiler&lt;/code&gt; instance with all the built-in plugins.</source>
          <target state="translated">&lt;code&gt;hooks&lt;/code&gt; A의 속성 &lt;code&gt;Compiler&lt;/code&gt; 인스턴스는 임의 훅 이벤트 플러그인 등록하는데 사용되는 &lt;code&gt;Compiler&lt;/code&gt; 의 라이프 사이클. &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsDefaulter.js&quot;&gt; &lt;code&gt;WebpackOptionsDefaulter&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js&quot;&gt; &lt;code&gt;WebpackOptionsApply&lt;/code&gt; &lt;/a&gt; 유틸리티의 구성 웹팩에서 사용하는 &lt;code&gt;Compiler&lt;/code&gt; 모두와 함께 인스턴스를 내장 플러그인.</target>
        </trans-unit>
        <trans-unit id="e489f359a446669afc55ea6d3f26f8766a21668c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;implementation&lt;/code&gt; options either accepts &lt;code&gt;sass&lt;/code&gt; (&lt;code&gt;Dart Sass&lt;/code&gt;) or &lt;code&gt;node-sass&lt;/code&gt; as a module.</source>
          <target state="translated">The &lt;code&gt;implementation&lt;/code&gt; options either accepts &lt;code&gt;sass&lt;/code&gt; ( &lt;code&gt;Dart Sass&lt;/code&gt; ) or &lt;code&gt;node-sass&lt;/code&gt; as a module.</target>
        </trans-unit>
        <trans-unit id="9c9f4d014ce207eb08f16b3575e688ddf602d259" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import()&lt;/code&gt; must contain at least some information about where the module is located. Bundling can be limited to a specific directory or set of files so that when you are using a dynamic expression - every module that could potentially be requested on an &lt;code&gt;import()&lt;/code&gt; call is included. For example, &lt;code&gt;import(`./locale/${language}.json`)&lt;/code&gt; will cause every &lt;code&gt;.json&lt;/code&gt; file in the &lt;code&gt;./locale&lt;/code&gt; directory to be bundled into the new chunk. At run time, when the variable &lt;code&gt;language&lt;/code&gt; has been computed, any file like &lt;code&gt;english.json&lt;/code&gt; or &lt;code&gt;german.json&lt;/code&gt; will be available for consumption.</source>
          <target state="translated">The &lt;code&gt;import()&lt;/code&gt; must contain at least some information about where the module is located. Bundling can be limited to a specific directory or set of files so that when you are using a dynamic expression - every module that could potentially be requested on an &lt;code&gt;import()&lt;/code&gt; call is included. For example, &lt;code&gt;import(`./locale/${language}.json`)&lt;/code&gt; will cause every &lt;code&gt;.json&lt;/code&gt; file in the &lt;code&gt;./locale&lt;/code&gt; directory to be bundled into the new chunk. At run time, when the variable &lt;code&gt;language&lt;/code&gt; has been computed, any file like &lt;code&gt;english.json&lt;/code&gt; or &lt;code&gt;german.json&lt;/code&gt; will be available for consumption.</target>
        </trans-unit>
        <trans-unit id="1cd0eed36440fa7bd25b12493d8769f0be66b762" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; keyword allows to get references to things from other modules into an ESM:</source>
          <target state="translated">The &lt;code&gt;import&lt;/code&gt; keyword allows to get references to things from other modules into an ESM:</target>
        </trans-unit>
        <trans-unit id="ba0645fbb47172caa84d26173146ecd57347cd38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;info&lt;/code&gt; object parameter has the following fields:</source>
          <target state="translated">The &lt;code&gt;info&lt;/code&gt; object parameter has the following fields:</target>
        </trans-unit>
        <trans-unit id="c3bb9fd1827769306a6587d4f6b4960bfdea0b4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;info&lt;/code&gt; parameter will be an object containing some of the following values:</source>
          <target state="translated">&lt;code&gt;info&lt;/code&gt; 매개 변수는 다음 값의 일부를 포함하는 객체가 될 것입니다 :</target>
        </trans-unit>
        <trans-unit id="ac2bce6f0611a346f5fe5bcff1092028d81fbe9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;less-loader&lt;/code&gt; requires &lt;a href=&quot;https://github.com/less/less.js&quot;&gt;less&lt;/a&gt; as &lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt;&lt;code&gt;peerDependency&lt;/code&gt;&lt;/a&gt;. Thus you are able to control the versions accurately.</source>
          <target state="translated">&lt;code&gt;less-loader&lt;/code&gt; 필요 &lt;a href=&quot;https://github.com/less/less.js&quot;&gt;덜&lt;/a&gt; 등&lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt; &lt;code&gt;peerDependency&lt;/code&gt; &lt;/a&gt; . 따라서 버전을 정확하게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a7a85e47b4bb57e8a7c7a53a9c528cc33f8ac72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lineToLine&lt;/code&gt; object allows for the same &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, and &lt;code&gt;exclude&lt;/code&gt; options described above.</source>
          <target state="translated">&lt;code&gt;lineToLine&lt;/code&gt; 의 객체는 같은 수 있습니다 &lt;code&gt;test&lt;/code&gt; , &lt;code&gt;include&lt;/code&gt; 및 &lt;code&gt;exclude&lt;/code&gt; 상술 옵션.</target>
        </trans-unit>
        <trans-unit id="2bba46138c47a0a7cf087fb38225f589eeebb1c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main&lt;/code&gt; bundle changed because of its new content.</source>
          <target state="translated">그만큼 &lt;code&gt;main&lt;/code&gt; 번들이 때문에 새로운 내용의 변경.</target>
        </trans-unit>
        <trans-unit id="03227d93aca0adfcd004a03c5326a8b22e10009d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; supports hot reloading of actual css files in development. Some options are provided to enable HMR of both standard stylesheets and locally scoped CSS or CSS modules. Below is an example configuration of mini-css for HMR use with CSS modules.</source>
          <target state="translated">The &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; supports hot reloading of actual css files in development. Some options are provided to enable HMR of both standard stylesheets and locally scoped CSS or CSS modules. Below is an example configuration of mini-css for HMR use with CSS modules.</target>
        </trans-unit>
        <trans-unit id="95e185eaa4f7fa01feafa7f198567ac6d46bf21d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module&lt;/code&gt; argument represents each module in the chunks you have provided via the &lt;code&gt;name&lt;/code&gt;/&lt;code&gt;names&lt;/code&gt; property. &lt;code&gt;module&lt;/code&gt; has the shape of a &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NormalModule.js&quot;&gt;NormalModule&lt;/a&gt;, which has two particularly useful properties for this use case:</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 인수는을 통해 제공 한 덩어리의 각 모듈을 나타내는 &lt;code&gt;name&lt;/code&gt; / &lt;code&gt;names&lt;/code&gt; 속성을. &lt;code&gt;module&lt;/code&gt; 은 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NormalModule.js&quot;&gt;NormalModule&lt;/a&gt; 의 모양을 가지며이 사용 사례에 특히 유용한 두 가지 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbd01ba4f4fc84b360a7cec7e7dc3785dbd17b21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module&lt;/code&gt; condition is used as optimization when preprocessing node-targeted code with a tool that supports ESM for &lt;code&gt;require()&lt;/code&gt; (like a bundler, when bundling for Node.js). For such a tool the exception is skipped. This is technically optional, but bundlers would include the package source code twice otherwise.</source>
          <target state="translated">The &lt;code&gt;module&lt;/code&gt; condition is used as optimization when preprocessing node-targeted code with a tool that supports ESM for &lt;code&gt;require()&lt;/code&gt; (like a bundler, when bundling for Node.js). For such a tool the exception is skipped. This is technically optional, but bundlers would include the package source code twice otherwise.</target>
        </trans-unit>
        <trans-unit id="07a2ddaa292445cd51cc216f5cd3ee7a21c25be0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module&lt;/code&gt; handles &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; scoping and &lt;code&gt;@value&lt;/code&gt; values. The &lt;code&gt;icss&lt;/code&gt; will only compile the low level &lt;code&gt;Interoperable CSS&lt;/code&gt; format for declaring &lt;code&gt;:import&lt;/code&gt; and &lt;code&gt;:export&lt;/code&gt; dependencies between CSS and other languages.</source>
          <target state="translated">The &lt;code&gt;module&lt;/code&gt; handles &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; scoping and &lt;code&gt;@value&lt;/code&gt; values. The &lt;code&gt;icss&lt;/code&gt; will only compile the low level &lt;code&gt;Interoperable CSS&lt;/code&gt; format for declaring &lt;code&gt;:import&lt;/code&gt; and &lt;code&gt;:export&lt;/code&gt; dependencies between CSS and other languages.</target>
        </trans-unit>
        <trans-unit id="a3cfb3d5cb7336d9511e7a4c809c722704ca080e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module&lt;/code&gt; property should point to a script that utilizes ES2015 module syntax but no other syntax features that aren't yet supported by browsers or node. This enables webpack to parse the module syntax itself, allowing for lighter bundles via &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; if users are only consuming certain parts of the library.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 속성은 ES2015 모듈 구문 아직 브라우저 또는 노드에서 지원하지 않는 다른 구문 기능을 활용하는 스크립트를 가리켜 야합니다. 이를 통해 웹팩은 모듈 구문 자체를 구문 분석하여보다 가벼운 번들을 통해&lt;a href=&quot;tree-shaking&quot;&gt;&lt;/a&gt; 사용자가 라이브러리의 특정 부분 만 소비 하는 경우 트리 흔들림을 .</target>
        </trans-unit>
        <trans-unit id="b9e6c5b232abe43edf24961bb5319e6155c57952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modules&lt;/code&gt; option enables/disables the &lt;strong&gt;&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS Modules&lt;/a&gt;&lt;/strong&gt; specification and setup basic behaviour.</source>
          <target state="translated">The &lt;code&gt;modules&lt;/code&gt; option enables/disables the &lt;strong&gt;&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS Modules&lt;/a&gt;&lt;/strong&gt; specification and setup basic behaviour.</target>
        </trans-unit>
        <trans-unit id="f6e16ff706d3ad9a7f34ca2ac321ba5759f3186f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moment/locale&lt;/code&gt; context is restricted to files matching &lt;code&gt;/de|fr|hu/&lt;/code&gt;. Thus only those locales are included (see &lt;a href=&quot;https://github.com/moment/moment/issues/2373&quot;&gt;this issue&lt;/a&gt; for more information).</source>
          <target state="translated">&lt;code&gt;moment/locale&lt;/code&gt; 컨텍스트가 일치하는 파일로 제한됩니다 &lt;code&gt;/de|fr|hu/&lt;/code&gt; . 따라서 해당 로케일 만 포함됩니다 ( 자세한 내용 은 &lt;a href=&quot;https://github.com/moment/moment/issues/2373&quot;&gt;이 문제&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="69c7a1beab39f0986a8084e3f514abc10bb5b07b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newContentCallback&lt;/code&gt; function is given a &lt;a href=&quot;../api/plugins/module-factories&quot;&gt;&lt;code&gt;data&lt;/code&gt; object of the &lt;code&gt;ContextModuleFactory&lt;/code&gt;&lt;/a&gt; and is expected to overwrite the &lt;code&gt;request&lt;/code&gt; attribute of the supplied object.</source>
          <target state="translated">&lt;code&gt;newContentCallback&lt;/code&gt; 의 함수는 주어진 &lt;a href=&quot;../api/plugins/module-factories&quot;&gt; &lt;code&gt;data&lt;/code&gt; 의 오브젝트 &lt;code&gt;ContextModuleFactory&lt;/code&gt; 를&lt;/a&gt; 상기 덮어 예상 &lt;code&gt;request&lt;/code&gt; 제공된 객체의 속성.</target>
        </trans-unit>
        <trans-unit id="d93a803cfd822e9f080183ae5a4bf2fc1cc0d823" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newContentResource&lt;/code&gt; and &lt;code&gt;newContentCreateContextMap&lt;/code&gt; parameters are also available:</source>
          <target state="translated">&lt;code&gt;newContentResource&lt;/code&gt; 및 &lt;code&gt;newContentCreateContextMap&lt;/code&gt; 매개 변수도 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a19a4d88397a085c68dfd0c0f7af1b957ed12287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; property has been deprecated in webpack 3 and removed in webpack 4.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 속성은 웹팩 3에서 사용되지 및 웹팩 4에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="77d82bf40f2e270972ea89ce304490f1b508185b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output&lt;/code&gt; property has &lt;a href=&quot;../configuration/output&quot;&gt;many more configurable features&lt;/a&gt; and if you like to know more about the concepts behind it, you can &lt;a href=&quot;output&quot;&gt;read more in the output section&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 속성을 가지고 &lt;a href=&quot;../configuration/output&quot;&gt;더 많은 구성 가능한 기능을&lt;/a&gt; 하고 그 뒤에 개념에 대한 자세한 내용을 알고 싶은 경우에, 당신은 할 수&lt;a href=&quot;output&quot;&gt; 더 많은 출력 섹션에 읽을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="302068d8083f2cfbbe2ede6a8805fb37c7de6dcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output&lt;/code&gt; property has &lt;a href=&quot;../configuration/output&quot;&gt;many more configurable features&lt;/a&gt;. If you want to learn about the concepts behind it, you can &lt;a href=&quot;output&quot;&gt;read more in the output section&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;output&lt;/code&gt; property has &lt;a href=&quot;../configuration/output&quot;&gt;many more configurable features&lt;/a&gt;. If you want to learn about the concepts behind it, you can &lt;a href=&quot;output&quot;&gt;read more in the output section&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="017373fdcf3bc098cb054d076c11ba924956de1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;packageName&lt;/code&gt; option allows setting a package name to look for a &lt;code&gt;requiredVersion&lt;/code&gt;. It is automatically inferred for the module requests by default, set &lt;code&gt;requiredVersion&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; when automatic infer should be disabled.</source>
          <target state="translated">The &lt;code&gt;packageName&lt;/code&gt; option allows setting a package name to look for a &lt;code&gt;requiredVersion&lt;/code&gt; . It is automatically inferred for the module requests by default, set &lt;code&gt;requiredVersion&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; when automatic infer should be disabled.</target>
        </trans-unit>
        <trans-unit id="00a1ab1dde43ec150840bd4f6b6641f52c20f76a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parser&lt;/code&gt; instance, found in the &lt;code&gt;compiler&lt;/code&gt;, is used to parse each module being processed by webpack. The &lt;code&gt;parser&lt;/code&gt; is yet another webpack class that extends &lt;code&gt;tapable&lt;/code&gt; and provides a variety of &lt;code&gt;tapable&lt;/code&gt; hooks that can be used by plugin authors to customize the parsing process.</source>
          <target state="translated">&lt;code&gt;parser&lt;/code&gt; 검색된 경우, &lt;code&gt;compiler&lt;/code&gt; , 웹팩 의해 처리되는 각 모듈을 분석하는 데 사용된다. &lt;code&gt;parser&lt;/code&gt; 확장 또 다른 웹팩 클래스입니다 &lt;code&gt;tapable&lt;/code&gt; 과의 다양한 제공 &lt;code&gt;tapable&lt;/code&gt; 을 파싱 과정을 사용자 정의 플러그인 저자에 의해 사용될 수 후크를.</target>
        </trans-unit>
        <trans-unit id="7687177981a2fd47de4971bcb71521b7fdd4ee22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parser&lt;/code&gt; is found within &lt;a href=&quot;compiler-hooks#normalmodulefactory&quot;&gt;module factories&lt;/a&gt; and therefore takes little more work to access:</source>
          <target state="translated">&lt;code&gt;parser&lt;/code&gt; 내에서 발견된다&lt;a href=&quot;compiler-hooks#normalmodulefactory&quot;&gt; 모듈 공장&lt;/a&gt; 때문에 접근에 조금 더 많은 일을한다 :</target>
        </trans-unit>
        <trans-unit id="6488a14de4d3fe74f40f47ee86a3be5f2a35a824" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plugins&lt;/code&gt; option is used to customize the webpack build process in a variety of ways. webpack comes with a variety built-in plugins available under &lt;code&gt;webpack.[plugin-name]&lt;/code&gt;. See &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;Plugins page&lt;/a&gt; for a list of plugins and documentation but note that there are a lot more out in the community.</source>
          <target state="translated">The &lt;code&gt;plugins&lt;/code&gt; option is used to customize the webpack build process in a variety of ways. webpack comes with a variety built-in plugins available under &lt;code&gt;webpack.[plugin-name]&lt;/code&gt; . See &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;Plugins page&lt;/a&gt; for a list of plugins and documentation but note that there are a lot more out in the community.</target>
        </trans-unit>
        <trans-unit id="7ba56a2710d7efe8d8ee49077d7d9a0b872efb5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plugins&lt;/code&gt; option is used to customize the webpack build process in a variety of ways. webpack comes with a variety built-in plugins available under &lt;code&gt;webpack.[plugin-name]&lt;/code&gt;. See &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;this page&lt;/a&gt; for a list of plugins and documentation but note that there are a lot more out in the community.</source>
          <target state="translated">&lt;code&gt;plugins&lt;/code&gt; 옵션은 다양한 방법으로 웹팩 빌드 프로세스를 사용자 지정하는 데 사용됩니다. webpack은 &lt;code&gt;webpack.[plugin-name]&lt;/code&gt; 에서 사용 가능한 다양한 내장 플러그인과 함께 제공됩니다 . 보다&lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;&lt;/a&gt;플러그인 및 설명서 목록은 이 페이지 를 . 커뮤니티에는 더 많은 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="440b7e1d609564f2203fd525c43f9da6f0a213ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxy_set_header&lt;/code&gt; lines are important, because they allow the WebSockets to work correctly.</source>
          <target state="translated">&lt;code&gt;proxy_set_header&lt;/code&gt; 그들이 WebSocket을 제대로 작동 할 수 있기 때문에 라인이 중요하다.</target>
        </trans-unit>
        <trans-unit id="959497ef27be2ffe34adb1545ac77f2b65dccb71" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;publicPath&lt;/code&gt; can be changed so the bundle is put in a directory:</source>
          <target state="translated">&lt;code&gt;publicPath&lt;/code&gt; 번들이 디렉토리에 넣어되도록 변경 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="67beac7259210a810639de807db709b25609a215" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;publicPath&lt;/code&gt; configuration option can be quite useful in a variety of scenarios. It allows you to specify the base path for all the assets within your application.</source>
          <target state="translated">&lt;code&gt;publicPath&lt;/code&gt; 구성 옵션은 다양한 시나리오에서 매우 유용 할 수 있습니다. 애플리케이션 내 모든 자산의 기본 경로를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bede5a9dcfa7a56a6eef780d9032af1e110e5234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;publicPath&lt;/code&gt; option as function</source>
          <target state="translated">The &lt;code&gt;publicPath&lt;/code&gt; option as function</target>
        </trans-unit>
        <trans-unit id="f910c8b0717528b3a5180d00de7739fbaf9dcd5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;publicPath&lt;/code&gt; specifies the public URL address of the output files when referenced in a browser. If not specified, the same public path used for other webpack assets is used.</source>
          <target state="translated">The &lt;code&gt;publicPath&lt;/code&gt; specifies the public URL address of the output files when referenced in a browser. If not specified, the same public path used for other webpack assets is used.</target>
        </trans-unit>
        <trans-unit id="2cd29ccbf03730a8b2edc90124528dbcf16d9bf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;publicPath&lt;/code&gt; will be used within our server script as well in order to make sure files are served correctly on &lt;code&gt;http://localhost:3000&lt;/code&gt;. We'll specify the port number later. The next step is setting up our custom &lt;code&gt;express&lt;/code&gt; server:</source>
          <target state="translated">&lt;code&gt;publicPath&lt;/code&gt; 는 잘 확인 파일이 제대로 제공하고 있는지 확인하기 위해 우리의 서버 스크립트 내에서 사용됩니다 &lt;code&gt;http://localhost:3000&lt;/code&gt; . 나중에 포트 번호를 지정하겠습니다. 다음 단계는 커스텀 &lt;code&gt;express&lt;/code&gt; 서버를 설정하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="66659c55829751e46a5bd66c1071f7d7b1d5ee06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reportProgress&lt;/code&gt; function may be called with these arguments:</source>
          <target state="translated">The &lt;code&gt;reportProgress&lt;/code&gt; function may be called with these arguments:</target>
        </trans-unit>
        <trans-unit id="bfa85c6fb79a4dfb066d5382813b76a6d20780bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;requestRegExp&lt;/code&gt; parameter passed to &lt;code&gt;IgnorePlugin&lt;/code&gt; is not tested against the resolved file names or absolute module names being imported or required, but rather against the &lt;em&gt;string&lt;/em&gt; passed to &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt;&lt;em&gt;within the source code where the import is taking place&lt;/em&gt;. For example, if you're trying to exclude &lt;code&gt;node_modules/moment/locale/*.js&lt;/code&gt;, this won't work:</source>
          <target state="translated">&lt;code&gt;requestRegExp&lt;/code&gt; 의 전달 매개 변수 &lt;code&gt;IgnorePlugin&lt;/code&gt; 가 해결 된 파일 이름 또는 절대 모듈 이름에 대해 테스트되지는 수입 또는 필요하지만 오히려에 대한되는 &lt;em&gt;문자열&lt;/em&gt; 에 전달 &lt;code&gt;require&lt;/code&gt; 하거나 &lt;code&gt;import&lt;/code&gt; &lt;em&gt;가져 오기가 진행되는 소스 코드 내에서&lt;/em&gt; . 예를 들어 &lt;code&gt;node_modules/moment/locale/*.js&lt;/code&gt; 를 제외하려고 시도하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1533850dd988e700b0ea3046325ff8329c91ef0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resourceRegExp&lt;/code&gt; parameter passed to &lt;code&gt;IgnorePlugin&lt;/code&gt; is not tested against the resolved file names or absolute module names being imported or required, but rather against the &lt;em&gt;string&lt;/em&gt; passed to &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt;&lt;em&gt;within the source code where the import is taking place&lt;/em&gt;. For example, if you're trying to exclude &lt;code&gt;node_modules/moment/locale/*.js&lt;/code&gt;, this won't work:</source>
          <target state="translated">The &lt;code&gt;resourceRegExp&lt;/code&gt; parameter passed to &lt;code&gt;IgnorePlugin&lt;/code&gt; is not tested against the resolved file names or absolute module names being imported or required, but rather against the &lt;em&gt;string&lt;/em&gt; passed to &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt; &lt;em&gt;within the source code where the import is taking place&lt;/em&gt;. For example, if you're trying to exclude &lt;code&gt;node_modules/moment/locale/*.js&lt;/code&gt; , this won't work:</target>
        </trans-unit>
        <trans-unit id="aa343c1130af70aabd487d99912dab97138f9348" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run&lt;/code&gt; method is then used to kickstart all compilation work. Upon completion, the given &lt;code&gt;callback&lt;/code&gt; function is executed. The final logging of stats and errors should be done in this &lt;code&gt;callback&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 방법은 모든 편집 작업을 킥 스타트하는 데 사용됩니다. 완료되면 주어진 &lt;code&gt;callback&lt;/code&gt; 함수가 실행됩니다. 이 &lt;code&gt;callback&lt;/code&gt; 함수 에서 통계 및 오류의 최종 로깅을 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c21dd4fb782936d086fe68e859553dafb411be4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass-loader&lt;/code&gt; uses Sass's custom importer feature to pass all queries to the Webpack resolving engine. Thus you can import your Sass modules from &lt;code&gt;node_modules&lt;/code&gt;. Just prepend them with a &lt;code&gt;~&lt;/code&gt; to tell Webpack that this is not a relative import:</source>
          <target state="translated">The &lt;code&gt;sass-loader&lt;/code&gt; uses Sass's custom importer feature to pass all queries to the Webpack resolving engine. Thus you can import your Sass modules from &lt;code&gt;node_modules&lt;/code&gt; . Just prepend them with a &lt;code&gt;~&lt;/code&gt; to tell Webpack that this is not a relative import:</target>
        </trans-unit>
        <trans-unit id="577d0f623cf7514831fd73382a3029ca1099d2fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source-map-loader&lt;/code&gt; extracts existing source maps from all JavaScript entries. This includes both inline source maps as well as those linked via URL. All source map data is passed to webpack for processing as per a chosen &lt;a href=&quot;../configuration/devtool&quot;&gt;source map style&lt;/a&gt; specified by the &lt;code&gt;devtool&lt;/code&gt; option in &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;webpack.config.js&lt;/a&gt;. This loader is especially useful when using 3rd-party libraries having their own source maps. If not extracted and processed into the source map of the webpack bundle, browsers may misinterpret source map data. &lt;code&gt;source-map-loader&lt;/code&gt; allows webpack to maintain source map data continuity across libraries so ease of debugging is preserved. The &lt;code&gt;source-map-loader&lt;/code&gt; will extract from any JavaScript file, including those in the &lt;code&gt;node_modules&lt;/code&gt; directory. Be mindful in setting &lt;a href=&quot;../configuration/module#ruleinclude&quot;&gt;include&lt;/a&gt; and &lt;a href=&quot;../configuration/module#ruleexclude&quot;&gt;exclude&lt;/a&gt; rule conditions to maximize bundling performance.</source>
          <target state="translated">The &lt;code&gt;source-map-loader&lt;/code&gt; extracts existing source maps from all JavaScript entries. This includes both inline source maps as well as those linked via URL. All source map data is passed to webpack for processing as per a chosen &lt;a href=&quot;../configuration/devtool&quot;&gt;source map style&lt;/a&gt; specified by the &lt;code&gt;devtool&lt;/code&gt; option in &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;webpack.config.js&lt;/a&gt;. This loader is especially useful when using 3rd-party libraries having their own source maps. If not extracted and processed into the source map of the webpack bundle, browsers may misinterpret source map data. &lt;code&gt;source-map-loader&lt;/code&gt; allows webpack to maintain source map data continuity across libraries so ease of debugging is preserved. The &lt;code&gt;source-map-loader&lt;/code&gt; will extract from any JavaScript file, including those in the &lt;code&gt;node_modules&lt;/code&gt; directory. Be mindful in setting &lt;a href=&quot;../configuration/module#ruleinclude&quot;&gt;include&lt;/a&gt; and &lt;a href=&quot;../configuration/module#ruleexclude&quot;&gt;exclude&lt;/a&gt; rule conditions to maximize bundling performance.</target>
        </trans-unit>
        <trans-unit id="369de0da94b134923519e2b8cf18cb58b1484b59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stats&lt;/code&gt; object that is passed as a second argument of the &lt;a href=&quot;#webpack&quot;&gt;&lt;code&gt;webpack()&lt;/code&gt;&lt;/a&gt; callback, is a good source of information about the code compilation process. It includes:</source>
          <target state="translated">The &lt;code&gt;stats&lt;/code&gt; object that is passed as a second argument of the &lt;a href=&quot;#webpack&quot;&gt; &lt;code&gt;webpack()&lt;/code&gt; &lt;/a&gt; callback, is a good source of information about the code compilation process. It includes:</target>
        </trans-unit>
        <trans-unit id="0fa1ceeebc223dab1f3f6c432ee757cc7bd5987b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stats&lt;/code&gt; object that is passed as a second argument of the &lt;a href=&quot;#webpack-&quot;&gt;&lt;code&gt;webpack()&lt;/code&gt;&lt;/a&gt; callback, is a good source of information about the code compilation process. It includes:</source>
          <target state="translated">&lt;a href=&quot;#webpack-&quot;&gt; &lt;code&gt;webpack()&lt;/code&gt; &lt;/a&gt; 콜백 의 두 번째 인수로 전달 되는 &lt;code&gt;stats&lt;/code&gt; 객체 는 코드 컴파일 프로세스에 대한 좋은 정보 소스입니다. 다음을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="9dff24e3b8a34791e7bc80a01e4ab6eed1e802b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stats&lt;/code&gt; option lets you precisely control what bundle information gets displayed. This can be a nice middle ground if you don't want to use &lt;code&gt;quiet&lt;/code&gt; or &lt;code&gt;noInfo&lt;/code&gt; because you want some bundle information, but not all of it.</source>
          <target state="translated">&lt;code&gt;stats&lt;/code&gt; 옵션은 정확하게 번들 정보가 표시됩니다 무엇을 제어 할 수 있습니다. 일부 번들 정보를 원하지만 모든 정보를 원하지 않기 때문에 &lt;code&gt;quiet&lt;/code&gt; 또는 &lt;code&gt;noInfo&lt;/code&gt; 를 사용하지 않으려는 경우 좋은 중간 지점이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c79769622f460ee03342b8e1cd130200177a876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;style-loader&lt;/code&gt; injects the styles lazily making them useable on-demand via &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;style-loader&lt;/code&gt; 게으르게 그들을 통해 온 디맨드 가능한 만드는 스타일을 주입 &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77a959b54b097574b4bea60118a29fb435f0f872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; property identifies which file or files should be transformed.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 하는 파일이나 파일 속성 식별이 변화되어야한다.</target>
        </trans-unit>
        <trans-unit id="c92c3b6d9a4ff7441cc25b272c0de894b3c2d423" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this.callback&lt;/code&gt; method is more flexible as it allows multiple arguments to be passed as opposed to just the &lt;code&gt;content&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this.callback&lt;/code&gt; 그것은 그냥 반대로 여러 인수가 전달 될 수 있도록 같은 방법은 더 유연 &lt;code&gt;content&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6345b4bc86354b4abc5d07dca6da56646b9e249" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thread-loader&lt;/code&gt; can be used to offload expensive loaders to a worker pool.</source>
          <target state="translated">&lt;code&gt;thread-loader&lt;/code&gt; 작업자 풀에 비싼 로더를 오프로드하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4eda0951d22d9b1d93047f81ffce0eed62f89b3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;topScope&lt;/code&gt; property is where you write all the code needed by your configuration, like module imports and functions/variables declarations:</source>
          <target state="translated">The &lt;code&gt;topScope&lt;/code&gt; property is where you write all the code needed by your configuration, like module imports and functions/variables declarations:</target>
        </trans-unit>
        <trans-unit id="e8f6290ba910c5da5fd2262b8a3a9306a1acf1cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;true&lt;/code&gt; value allows to generation the &lt;code&gt;mimetype&lt;/code&gt; part from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;. The &lt;code&gt;false&lt;/code&gt; value removes the &lt;code&gt;mediatype&lt;/code&gt; part from a Data URL (if omitted, defaults to &lt;code&gt;text/plain;charset=US-ASCII&lt;/code&gt;).</source>
          <target state="translated">The &lt;code&gt;true&lt;/code&gt; value allows to generation the &lt;code&gt;mimetype&lt;/code&gt; part from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;. The &lt;code&gt;false&lt;/code&gt; value removes the &lt;code&gt;mediatype&lt;/code&gt; part from a Data URL (if omitted, defaults to &lt;code&gt;text/plain;charset=US-ASCII&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4af9db82c8603ebbd34a359670e4de9921a50c22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;true&lt;/code&gt; value enables processing of all default elements and attributes, the &lt;code&gt;false&lt;/code&gt; disable processing of all attributes.</source>
          <target state="translated">The &lt;code&gt;true&lt;/code&gt; value enables processing of all default elements and attributes, the &lt;code&gt;false&lt;/code&gt; disable processing of all attributes.</target>
        </trans-unit>
        <trans-unit id="20f8772fda6c35ab683bfd8148d1a50c11515e74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;use&lt;/code&gt; property indicates which loader should be used to do the transforming.</source>
          <target state="translated">&lt;code&gt;use&lt;/code&gt; 속성은 변형을 수행하는 데 사용되어야하는 로더를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e6e2e9ef8dbc3d5383c141533d231f09eb89ee0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendor&lt;/code&gt; bundle changed because its &lt;code&gt;module.id&lt;/code&gt; was changed.</source>
          <target state="translated">&lt;code&gt;vendor&lt;/code&gt; 의 때문에 번들 변경 &lt;code&gt;module.id&lt;/code&gt; 이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="82960aa0f6caf9f5689cf5935d850c7f66ec1a40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;watch&lt;/code&gt; method returns a &lt;code&gt;Watching&lt;/code&gt; instance that exposes &lt;code&gt;.close(callback)&lt;/code&gt; method. Calling this method will end watching:</source>
          <target state="translated">&lt;code&gt;watch&lt;/code&gt; 방법은 반환 &lt;code&gt;Watching&lt;/code&gt; 노출하는 것을 예를 &lt;code&gt;.close(callback)&lt;/code&gt; 방법. 이 메소드를 호출하면 시청이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="4a0b36b6ece61696347cc27cab3d20af2ce94c6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webpack-dev-server&lt;/code&gt; comes with many configurable options. Head over to the &lt;a href=&quot;../configuration/dev-server&quot;&gt;documentation&lt;/a&gt; to learn more.</source>
          <target state="translated">&lt;code&gt;webpack-dev-server&lt;/code&gt; 많은 구성 옵션이 함께 제공됩니다. 자세한 내용 은 &lt;a href=&quot;../configuration/dev-server&quot;&gt;설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7fc0861e809d209dbbcf6f243915a671c9cd26a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webpack-dev-server&lt;/code&gt; provides you with a simple web server and the ability to use live reloading. Let's set it up:</source>
          <target state="translated">&lt;code&gt;webpack-dev-server&lt;/code&gt; 간단한 웹 서버와 라이브 다시로드를 사용할 수있는 기능을 제공합니다. 설정해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="48c48bfe39c90a41f2aa4d0d5851ecb894e963e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webpack.config.js&lt;/code&gt; file will be intelligently extended with properties from &lt;code&gt;base.config.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webpack.config.js&lt;/code&gt; 의 파일은 지능적에서 속성으로 확장됩니다 &lt;code&gt;base.config.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ad3e989709e306fec071f2cefb6ed11206b1cf9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webpack&lt;/code&gt; compiler can understand modules written as ES2015 modules, CommonJS or AMD. However, some third party libraries may expect global dependencies (e.g. &lt;code&gt;$&lt;/code&gt; for &lt;code&gt;jQuery&lt;/code&gt;). The libraries might also create globals which need to be exported. These &quot;broken modules&quot; are one instance where &lt;em&gt;shimming&lt;/em&gt; comes into play.</source>
          <target state="translated">&lt;code&gt;webpack&lt;/code&gt; 컴파일러는 ES2015 모듈, CommonJS 또는 AMD로 작성 모듈을 이해할 수있다. 그러나 일부 타사 라이브러리는 전역 종속성 (예 : &lt;code&gt;$&lt;/code&gt; for &lt;code&gt;jQuery&lt;/code&gt; )을 기대할 수 있습니다 . 라이브러리는 내 보내야하는 전역을 만들 수도 있습니다. 이러한 &quot;손상된 모듈&quot;은 &lt;em&gt;shimming&lt;/em&gt; 이 발생하는 한 예입니다&lt;em&gt;&lt;/em&gt; 이 작동 입니다.</target>
        </trans-unit>
        <trans-unit id="78a77c4f98145ee3b0c9f55f1bdf0d93d8263529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;globalName&lt;/code&gt;, &lt;code&gt;moduleLocalName&lt;/code&gt; and &lt;code&gt;override&lt;/code&gt; of expose.</source>
          <target state="translated">The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;globalName&lt;/code&gt; , &lt;code&gt;moduleLocalName&lt;/code&gt; and &lt;code&gt;override&lt;/code&gt; of expose.</target>
        </trans-unit>
        <trans-unit id="61320feb332209234e64d9fd69da5920a7dffadc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;globalName&lt;/code&gt;, &lt;code&gt;moduleLocalName&lt;/code&gt; and &lt;code&gt;override&lt;/code&gt; of expose. The documentation and syntax examples can be read &lt;a href=&quot;#syntax&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;globalName&lt;/code&gt; , &lt;code&gt;moduleLocalName&lt;/code&gt; and &lt;code&gt;override&lt;/code&gt; of expose. The documentation and syntax examples can be read &lt;a href=&quot;#syntax&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9f5e006fb405f3ff52dafc448923f505d80642e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt;, &lt;code&gt;moduleName&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of import.</source>
          <target state="translated">The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt; , &lt;code&gt;moduleName&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of import.</target>
        </trans-unit>
        <trans-unit id="7e1d777a1ef940e9309807c77ad94077914eae2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt;, &lt;code&gt;moduleName&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of import. The documentation and syntax examples can be read &lt;a href=&quot;#syntax&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt; , &lt;code&gt;moduleName&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of import. The documentation and syntax examples can be read &lt;a href=&quot;#syntax&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9baa55ff42dc4a065cf63ef88d6a2fee99d2d5b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of export.</source>
          <target state="translated">The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of export.</target>
        </trans-unit>
        <trans-unit id="a267638d1313624e68b2657cbd6e434feb65497a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of export. The documentation and syntax examples can be read &lt;a href=&quot;#syntax&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; (space) allow to separate the &lt;code&gt;syntax&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; of export. The documentation and syntax examples can be read &lt;a href=&quot;#syntax&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="635124a1b4ade80ec417a236748826993e343c3c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;first option&lt;/strong&gt; is to open your &lt;code&gt;tsconfig.json&lt;/code&gt; file and look for &lt;code&gt;compilerOptions&lt;/code&gt;. Set &lt;code&gt;target&lt;/code&gt; to &lt;code&gt;&quot;ES5&quot;&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; to &lt;code&gt;&quot;CommonJS&quot;&lt;/code&gt; (or completely remove the &lt;code&gt;module&lt;/code&gt; option).</source>
          <target state="translated">첫 &lt;strong&gt;번째 옵션&lt;/strong&gt; 은 &lt;code&gt;tsconfig.json&lt;/code&gt; 파일 을 열고 &lt;code&gt;compilerOptions&lt;/code&gt; 를 찾는 것입니다 . 설정 &lt;code&gt;target&lt;/code&gt; 에 &lt;code&gt;&quot;ES5&quot;&lt;/code&gt; 및 &lt;code&gt;module&lt;/code&gt; 에 &lt;code&gt;&quot;CommonJS&quot;&lt;/code&gt; (또는 완전히 제거 &lt;code&gt;module&lt;/code&gt; 옵션).</target>
        </trans-unit>
        <trans-unit id="4b753724968fd4a8aa6110a6c955d7aa4b30e944" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;output&lt;/strong&gt; property tells webpack where to emit the &lt;em&gt;bundles&lt;/em&gt; it creates and how to name these files. It defaults to &lt;code&gt;./dist/main.js&lt;/code&gt; for the main output file and to the &lt;code&gt;./dist&lt;/code&gt; folder for any other generated file.</source>
          <target state="translated">&lt;strong&gt;출력&lt;/strong&gt; 속성은 어디 방출하는 웹팩 알려줍니다 &lt;em&gt;번들&lt;/em&gt; 이 생성을하는 방법과 이러한 파일의 이름을 지정합니다. 기본 출력 파일의 경우 기본적으로 &lt;code&gt;./dist/main.js&lt;/code&gt; 및 &lt;code&gt;./dist&lt;/code&gt; 다른 생성 된 파일의 폴더입니다.</target>
        </trans-unit>
        <trans-unit id="2b7f1d87a6236de23ae9ee9e25e2ea1b90bec2d2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;second option&lt;/strong&gt; is to install the &lt;code&gt;tsconfig-paths&lt;/code&gt; package:</source>
          <target state="translated">두 &lt;strong&gt;번째 옵션&lt;/strong&gt; 은 &lt;code&gt;tsconfig-paths&lt;/code&gt; 패키지 를 설치하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="12fb1858a3514d997f15b5204dc79149205e49c3" translate="yes" xml:space="preserve">
          <source>The API only supports a single concurrent compilation at a time. When using &lt;code&gt;run&lt;/code&gt;, wait for it to finish before calling &lt;code&gt;run&lt;/code&gt; or &lt;code&gt;watch&lt;/code&gt; again. When using &lt;code&gt;watch&lt;/code&gt;, call &lt;code&gt;close&lt;/code&gt; and wait for it to finish before calling &lt;code&gt;run&lt;/code&gt; or &lt;code&gt;watch&lt;/code&gt; again. Concurrent compilations will corrupt the output files.</source>
          <target state="translated">API는 한 번에 하나의 동시 컴파일 만 지원합니다. 사용하는 경우 &lt;code&gt;run&lt;/code&gt; 이 호출하기 전에 끝날 때까지 기다리 &lt;code&gt;run&lt;/code&gt; 또는 &lt;code&gt;watch&lt;/code&gt; 다시. 사용하는 경우 &lt;code&gt;watch&lt;/code&gt; , 전화 &lt;code&gt;close&lt;/code&gt; 과 대기 그것은 호출하기 전에 종료 될 때까지 &lt;code&gt;run&lt;/code&gt; 하거나 &lt;code&gt;watch&lt;/code&gt; 다시. 동시 컴파일은 출력 파일을 손상시킵니다.</target>
        </trans-unit>
        <trans-unit id="528e6048b5cc3fba8fce8478ded614669654a929" translate="yes" xml:space="preserve">
          <source>The CSS can be extracted in one CSS file using &lt;code&gt;optimization.splitChunks.cacheGroups&lt;/code&gt;.</source>
          <target state="translated">The CSS can be extracted in one CSS file using &lt;code&gt;optimization.splitChunks.cacheGroups&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88ba40bb955abdf273b70c745a2a619b15008f9a" translate="yes" xml:space="preserve">
          <source>The Closure Library Plugin is only compatible with the &lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; mode of the Closure-Compiler webpack plugin.</source>
          <target state="translated">The Closure Library Plugin is only compatible with the &lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; mode of the Closure-Compiler webpack plugin.</target>
        </trans-unit>
        <trans-unit id="5ce1205cb2c56dae5668475d974ac376cca81c42" translate="yes" xml:space="preserve">
          <source>The Command Line Interface (CLI) to configure and interact with your build. It is especially useful in the case of early prototyping and profiling. For the most part, the CLI is simply used to kick off the process using a configuration file and a few flags (e.g. &lt;code&gt;--env&lt;/code&gt;).</source>
          <target state="translated">빌드를 구성하고 상호 작용하기위한 CLI (명령 줄 인터페이스) 초기 프로토 타이핑 및 프로파일 링의 경우 특히 유용합니다. 대부분의 경우 CLI는 구성 파일과 몇 가지 플래그 (예 : &lt;code&gt;--env&lt;/code&gt; )를 사용하여 프로세스를 시작하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5234b711ebe571f702de271664fe3fad3a23178e" translate="yes" xml:space="preserve">
          <source>The CommonsChunkPlugin has been removed in webpack v4 legato. To learn how chunks are treated in the latest version, check out the &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt;.</source>
          <target state="translated">CommonsChunkPlugin은 webpack v4 legato에서 제거되었습니다. 최신 버전에서 청크를 처리하는 방법을 알아 &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;보려면 SplitChunksPlugin을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="229e84c0b0f542eaf2480b8ad349fd816795c9e4" translate="yes" xml:space="preserve">
          <source>The CommonsChunkPlugin has been removed in webpack v4 legato. To learn how chunks are treated in the latest version, check out the &lt;a href=&quot;split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt;.</source>
          <target state="translated">CommonsChunkPlugin은 webpack v4 legato에서 제거되었습니다. 최신 버전에서 청크를 처리하는 방법을 알아 &lt;a href=&quot;split-chunks-plugin&quot;&gt;보려면 SplitChunksPlugin을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0045699beb0cd690ebabd7c8105167d01de1bac" translate="yes" xml:space="preserve">
          <source>The Compilation object has many methods and hooks available. On this page, we will list the available methods and properties.</source>
          <target state="translated">The Compilation object has many methods and hooks available. On this page, we will list the available methods and properties.</target>
        </trans-unit>
        <trans-unit id="4507304153be0db0cb962df914f0c5b2ab856e13" translate="yes" xml:space="preserve">
          <source>The Fine Art of the webpack 3 Config</source>
          <target state="translated">웹팩 3 구성의 순수 기술</target>
        </trans-unit>
        <trans-unit id="8f1c9a65c709ce00b5fa298f4d3eabb7b056dca5" translate="yes" xml:space="preserve">
          <source>The ID of the chunk</source>
          <target state="translated">The ID of the chunk</target>
        </trans-unit>
        <trans-unit id="b1c2b221613da1e5b10aea2457d7a2fd9e875d85" translate="yes" xml:space="preserve">
          <source>The ID of the current module.</source>
          <target state="translated">현재 모듈의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="98eb04f8af01a453e93f28ea56e0c65eb3147c31" translate="yes" xml:space="preserve">
          <source>The ID of the module</source>
          <target state="translated">The ID of the module</target>
        </trans-unit>
        <trans-unit id="837ab1e9e050240207cd57bba270555a72d22a92" translate="yes" xml:space="preserve">
          <source>The JSON files to use for descriptions.</source>
          <target state="translated">The JSON files to use for descriptions.</target>
        </trans-unit>
        <trans-unit id="c723a58153b1097bc6e5d48b2d40385bb0879aef" translate="yes" xml:space="preserve">
          <source>The JSON files to use for descriptions. Default:</source>
          <target state="translated">설명에 사용할 JSON 파일. 기본:</target>
        </trans-unit>
        <trans-unit id="2bd6ce3e5799557f02fb6ef11c6634c82897b1b8" translate="yes" xml:space="preserve">
          <source>The Loader Context</source>
          <target state="translated">로더 컨텍스트</target>
        </trans-unit>
        <trans-unit id="8c69b75adc810300f3fa44f52599a074382fbe2c" translate="yes" xml:space="preserve">
          <source>The Manifest</source>
          <target state="translated">매니페스트</target>
        </trans-unit>
        <trans-unit id="1fb1f63b586df68ac8225a0a4949a554713c3e6a" translate="yes" xml:space="preserve">
          <source>The Node.js API for &lt;code&gt;babel&lt;/code&gt; has been moved to &lt;code&gt;babel-core&lt;/code&gt;.</source>
          <target state="translated">The Node.js API for &lt;code&gt;babel&lt;/code&gt; has been moved to &lt;code&gt;babel-core&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20f70436a9d57cb1461c13fd70b6f74f082ee97c" translate="yes" xml:space="preserve">
          <source>The Node.js API is useful in scenarios in which you need to customize the build or development process since all the reporting and error handling must be done manually and webpack only does the compiling part. For this reason the &lt;a href=&quot;../configuration/stats&quot;&gt;&lt;code&gt;stats&lt;/code&gt;&lt;/a&gt; configuration options will not have any effect in the &lt;code&gt;webpack()&lt;/code&gt; call.</source>
          <target state="translated">Node.js API는 모든보고 및 오류 처리를 수동으로 수행해야하고 웹팩은 컴파일 부분 만 수행하므로 빌드 또는 개발 프로세스를 사용자 정의해야하는 시나리오에 유용합니다. 이러한 이유로 &lt;a href=&quot;../configuration/stats&quot;&gt; &lt;code&gt;stats&lt;/code&gt; &lt;/a&gt; 구성 옵션은 &lt;code&gt;webpack()&lt;/code&gt; 호출에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="355c15d3884285cbe9de6e8c0623457a61fdc6ca" translate="yes" xml:space="preserve">
          <source>The Problem</source>
          <target state="translated">문제</target>
        </trans-unit>
        <trans-unit id="fd5fa9a5b25de9fdd4bc4bc759ae247c0b3e4737" translate="yes" xml:space="preserve">
          <source>The Unix socket to listen to (instead of a host).</source>
          <target state="translated">청취하는 유닉스 소켓 (호스트 대신).</target>
        </trans-unit>
        <trans-unit id="eb35c252800397908f509c6c09e6b3ccf7cdfb2e" translate="yes" xml:space="preserve">
          <source>The above order of loaders should be maintained: &lt;a href=&quot;../loaders/style-loader&quot;&gt;&lt;code&gt;'style-loader'&lt;/code&gt;&lt;/a&gt; comes first and followed by &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;'css-loader'&lt;/code&gt;&lt;/a&gt;. If this convention is not followed, webpack is likely to throw errors.</source>
          <target state="translated">The above order of loaders should be maintained: &lt;a href=&quot;../loaders/style-loader&quot;&gt; &lt;code&gt;'style-loader'&lt;/code&gt; &lt;/a&gt; comes first and followed by &lt;a href=&quot;../loaders/css-loader&quot;&gt; &lt;code&gt;'css-loader'&lt;/code&gt; &lt;/a&gt;. If this convention is not followed, webpack is likely to throw errors.</target>
        </trans-unit>
        <trans-unit id="4d5406ba559c1d91f6260313b9fbba08b5f54e12" translate="yes" xml:space="preserve">
          <source>The absolute filename</source>
          <target state="translated">절대 파일 이름</target>
        </trans-unit>
        <trans-unit id="6437f32e4b9c795567c8e4264f7c48e297cfbf8c" translate="yes" xml:space="preserve">
          <source>The algorithm is taken from &lt;a href=&quot;https://nodejs.org/api/zlib.html&quot;&gt;zlib&lt;/a&gt;.</source>
          <target state="translated">The algorithm is taken from &lt;a href=&quot;https://nodejs.org/api/zlib.html&quot;&gt;zlib&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="63cd9df0f8725b031bddd6167b7fadab8bda770f" translate="yes" xml:space="preserve">
          <source>The allowances were the ability to restrict registrations to a specific version or to support different sandboxes with different defined modules.</source>
          <target state="translated">허용량은 등록을 특정 버전으로 제한하거나 정의 된 모듈이 서로 다른 샌드 박스를 지원하는 기능이었습니다.</target>
        </trans-unit>
        <trans-unit id="16b86c144a0a521ee168253a8c4f98de7b78f15d" translate="yes" xml:space="preserve">
          <source>The application asks the HMR runtime to check for updates.</source>
          <target state="translated">응용 프로그램은 HMR 런타임에 업데이트를 확인하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="79efe6cfd5949a3507bf3917f34b31f489dabef7" translate="yes" xml:space="preserve">
          <source>The application is eagerly executing an application which is operating as an omnidirectional host. There are options to choose from:</source>
          <target state="translated">The application is eagerly executing an application which is operating as an omnidirectional host. There are options to choose from:</target>
        </trans-unit>
        <trans-unit id="1ebbe790435ed6809e144b26b79df8536bc5f553" translate="yes" xml:space="preserve">
          <source>The application then asks the runtime to apply the updates.</source>
          <target state="translated">그런 다음 응용 프로그램은 런타임에 업데이트를 적용하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="d824c0a8e805904e477cac16a6a89a050cf96b63" translate="yes" xml:space="preserve">
          <source>The arguments passed to &lt;code&gt;require.context&lt;/code&gt; must be literals!</source>
          <target state="translated">&lt;code&gt;require.context&lt;/code&gt; 에 전달 된 인수는 리터럴이어야합니다!</target>
        </trans-unit>
        <trans-unit id="3b269a2b9e4dd52dc81aafc9c739893dbdcca239" translate="yes" xml:space="preserve">
          <source>The array accepts relative, absolute, and glob patterns to the relevant files. It uses &lt;a href=&quot;https://github.com/micromatch/micromatch#matching-features&quot;&gt;micromatch&lt;/a&gt; under the hood.</source>
          <target state="translated">배열은 관련 파일에 대한 상대, 절대 및 글로브 패턴을 허용합니다. 후드 아래에서 &lt;a href=&quot;https://github.com/micromatch/micromatch#matching-features&quot;&gt;마이크로 매치&lt;/a&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="7d7bfe627061e5f7c789904410a966a413748c03" translate="yes" xml:space="preserve">
          <source>The array accepts simple glob patterns to the relevant files. It uses &lt;a href=&quot;https://github.com/fitzgen/glob-to-regexp&quot;&gt;glob-to-regexp&lt;/a&gt; under the hood (Supports: &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;{a,b}&lt;/code&gt;, &lt;code&gt;[a-z]&lt;/code&gt;). Patterns like &lt;code&gt;*.css&lt;/code&gt;, which do not include a &lt;code&gt;/&lt;/code&gt;, will be treated like &lt;code&gt;**/*.css&lt;/code&gt;.</source>
          <target state="translated">The array accepts simple glob patterns to the relevant files. It uses &lt;a href=&quot;https://github.com/fitzgen/glob-to-regexp&quot;&gt;glob-to-regexp&lt;/a&gt; under the hood (Supports: &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; , &lt;code&gt;{a,b}&lt;/code&gt; , &lt;code&gt;[a-z]&lt;/code&gt; ). Patterns like &lt;code&gt;*.css&lt;/code&gt; , which do not include a &lt;code&gt;/&lt;/code&gt; , will be treated like &lt;code&gt;**/*.css&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f24e06847c7c8c09a6910743fe0e2b89b2d5d81" translate="yes" xml:space="preserve">
          <source>The assets has been optimized.</source>
          <target state="translated">자산이 최적화되었습니다.</target>
        </trans-unit>
        <trans-unit id="97db01edba497ef233257f289d55d0a23667758c" translate="yes" xml:space="preserve">
          <source>The assets have been optimized.</source>
          <target state="translated">The assets have been optimized.</target>
        </trans-unit>
        <trans-unit id="ea0a14dc5dc1e08c4a5a1dc6beb6d1e2c9344cfc" translate="yes" xml:space="preserve">
          <source>The available conditions vary depending on the module system and tool used.</source>
          <target state="translated">The available conditions vary depending on the module system and tool used.</target>
        </trans-unit>
        <trans-unit id="2bad31d0c6e7fc07307f1bde0b4eadebf87145fb" translate="yes" xml:space="preserve">
          <source>The banner text that points to the extracted file and will be added on top of the original file. Can be &lt;code&gt;false&lt;/code&gt; (no banner), a &lt;code&gt;String&lt;/code&gt;, or a &lt;code&gt;Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; that will be called with the filename where extracted comments have been stored. Will be wrapped into comment.</source>
          <target state="translated">추출 된 파일을 가리키고 원본 파일 위에 추가 될 배너 텍스트입니다. 할 수 &lt;code&gt;false&lt;/code&gt; (NO 배너)하는 &lt;code&gt;String&lt;/code&gt; , 또는 &lt;code&gt;Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; 추출 된 의견이 저장되어있는 파일 이름으로 호출됩니다. 댓글로 포장됩니다.</target>
        </trans-unit>
        <trans-unit id="1f097a937bb4ef262288a8da73a495320626168c" translate="yes" xml:space="preserve">
          <source>The banner text that points to the extracted file and will be added on top of the original file. Can be &lt;code&gt;false&lt;/code&gt; (no banner), a &lt;code&gt;{String}&lt;/code&gt;, or a &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&lt;/code&gt; that will be called with the filename where extracted comments have been stored. Will be wrapped into comment</source>
          <target state="translated">추출 된 파일을 가리키고 원본 파일 위에 추가 될 배너 텍스트입니다. 할 수 &lt;code&gt;false&lt;/code&gt; (NO 배너)하는 &lt;code&gt;{String}&lt;/code&gt; 또는 &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&lt;/code&gt; 추출 된 의견이 저장되어있는 파일 이름으로 호출됩니다. 댓글로 포장됩니다</target>
        </trans-unit>
        <trans-unit id="ea0c3fb19eeb0a5ca2d5f787f8510cd22467c43d" translate="yes" xml:space="preserve">
          <source>The base directory, an &lt;strong&gt;absolute path&lt;/strong&gt;, for resolving entry points and loaders from configuration.</source>
          <target state="translated">구성에서 진입 점 및 로더를 해석하기위한 기본 &lt;strong&gt;경로&lt;/strong&gt; 인 &lt;strong&gt;절대 경로&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dade99eb4c9c3fd9dd88d5f0ba2df781c3d633a2" translate="yes" xml:space="preserve">
          <source>The basename of the file/resource.</source>
          <target state="translated">파일 / 리소스의 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d328278dab4c04b62fd3bf91761c4b0d051ef9fa" translate="yes" xml:space="preserve">
          <source>The basic project structure may look like this:</source>
          <target state="translated">기본 프로젝트 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="642f1b4d1aedf7984db5518b2965ddf6c4c68db8" translate="yes" xml:space="preserve">
          <source>The browser application name is platform dependent. Don't hard code it in reusable modules. For example, &lt;code&gt;'Chrome'&lt;/code&gt; is &lt;code&gt;'Google Chrome'&lt;/code&gt; on macOS, &lt;code&gt;'google-chrome'&lt;/code&gt; on Linux and &lt;code&gt;'chrome'&lt;/code&gt; on Windows.</source>
          <target state="translated">The browser application name is platform dependent. Don't hard code it in reusable modules. For example, &lt;code&gt;'Chrome'&lt;/code&gt; is &lt;code&gt;'Google Chrome'&lt;/code&gt; on macOS, &lt;code&gt;'google-chrome'&lt;/code&gt; on Linux and &lt;code&gt;'chrome'&lt;/code&gt; on Windows.</target>
        </trans-unit>
        <trans-unit id="829bc837727bbafc63b76aeeb9da90175a1667ce" translate="yes" xml:space="preserve">
          <source>The browser provides a &lt;code&gt;console&lt;/code&gt; object with a very similar interface to the Node.js &lt;code&gt;console&lt;/code&gt;, so a polyfill is generally not needed.</source>
          <target state="translated">브라우저는 Node.js &lt;code&gt;console&lt;/code&gt; 과 매우 유사한 인터페이스를 가진 &lt;code&gt;console&lt;/code&gt; 객체를 제공 하므로 일반적으로 폴리 필이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa3f5c75700c8ef9230b4071d77253ca4fd0187a" translate="yes" xml:space="preserve">
          <source>The bundle can be included as part of a script tag, and the bundle can be invoked like so:</source>
          <target state="translated">번들은 스크립트 태그의 일부로 포함될 수 있으며 다음과 같이 번들을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba7f6b7207278a6abb170c11f3d09b65779ebeaa" translate="yes" xml:space="preserve">
          <source>The bundle will also be available as &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt;.</source>
          <target state="translated">번들은 &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt; 로도 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="217dc2584c0fb5dc2dc7d41450dd433af073e169" translate="yes" xml:space="preserve">
          <source>The bundle will now be available as &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt;.</source>
          <target state="translated">번들은 이제 &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt; 로 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="117b01d486ab05dc2a1b9418e5da87dc9698edff" translate="yes" xml:space="preserve">
          <source>The bundle with external dependencies can be used in various module contexts, such as &lt;a href=&quot;../concepts/modules&quot;&gt;CommonJS, AMD, global and ES2015 modules&lt;/a&gt;. The external library may be available in any of these forms:</source>
          <target state="translated">외부 종속성이있는 번들은 &lt;a href=&quot;../concepts/modules&quot;&gt;CommonJS, AMD, 글로벌 및 ES2015 모듈과&lt;/a&gt; 같은 다양한 모듈 컨텍스트에서 사용될 수 있습니다 . 외부 라이브러리는 다음 형식 중 하나로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8ac10f7b894229890ea38ddef1c239a04440579" translate="yes" xml:space="preserve">
          <source>The bundled files will be available in the browser under this path.</source>
          <target state="translated">번들 파일은이 경로 아래의 브라우저에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36d8698b636210d44251d2af577f761d0daad332" translate="yes" xml:space="preserve">
          <source>The bundling is a function that takes some files and emits others.</source>
          <target state="translated">The bundling is a function that takes some files and emits others.</target>
        </trans-unit>
        <trans-unit id="2fd596b7597dbfb276b29cfda53a436c72a8fe5f" translate="yes" xml:space="preserve">
          <source>The callback function takes three arguments:</source>
          <target state="translated">The callback function takes three arguments:</target>
        </trans-unit>
        <trans-unit id="5b301ff5f26e6e3457e880e7aa52e034b6cdffe9" translate="yes" xml:space="preserve">
          <source>The chunk assets have been optimized.</source>
          <target state="translated">청크 자산이 최적화되었습니다.</target>
        </trans-unit>
        <trans-unit id="f12d781d5ccfce31d9164c466ca027e17c249776" translate="yes" xml:space="preserve">
          <source>The chunk is requested, when you require the bundle.</source>
          <target state="translated">번들이 필요할 때 청크가 요청됩니다.</target>
        </trans-unit>
        <trans-unit id="81ef41469690d0bbf8026dc3cdeda400cf40c231" translate="yes" xml:space="preserve">
          <source>The command to start &lt;code&gt;webpack-dev-server&lt;/code&gt; can then be changed to this:</source>
          <target state="translated">The command to start &lt;code&gt;webpack-dev-server&lt;/code&gt; can then be changed to this:</target>
        </trans-unit>
        <trans-unit id="34a6deff48e1d6a0c1e725fa06e2ce2bc0d257ae" translate="yes" xml:space="preserve">
          <source>The command to start webpack-dev-server can then be changed to this:</source>
          <target state="translated">그런 다음 webpack-dev-server를 시작하는 명령을 다음과 같이 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3789f3b9960fd99acb1e00a2ccf2ffd85b4a7fd4" translate="yes" xml:space="preserve">
          <source>The compiler ensures that module IDs and chunk IDs are consistent between these builds. It typically stores these IDs in memory (e.g. with &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;), but it's also possible to store them in a JSON file.</source>
          <target state="translated">컴파일러는 이러한 빌드간에 모듈 ID와 청크 ID가 일관되도록합니다. 일반적으로 이러한 ID를 메모리에 저장하지만 (예 : &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server 사용&lt;/a&gt; ) JSON 파일에 저장할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fee4edceee7fcb408d89ed61453c6f792e395031" translate="yes" xml:space="preserve">
          <source>The compression algorithm/function</source>
          <target state="translated">The compression algorithm/function</target>
        </trans-unit>
        <trans-unit id="ff8c9806ce1e0f7f3b65580f88da7706f9f23de9" translate="yes" xml:space="preserve">
          <source>The compression algorithm/function.</source>
          <target state="translated">The compression algorithm/function.</target>
        </trans-unit>
        <trans-unit id="a788f2ca0f3e40c85c64806e9b2de8d22c971d5e" translate="yes" xml:space="preserve">
          <source>The configuration above has defined a &lt;code&gt;rules&lt;/code&gt; property for a single module with two required properties: &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt;. This tells webpack's compiler the following:</source>
          <target state="translated">위의 구성은 두 개의 필수 특성 ( &lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;use&lt;/code&gt; )이 있는 단일 모듈 의 &lt;code&gt;rules&lt;/code&gt; 특성을 정의했습니다 . 이것은 webpack의 컴파일러에게 다음을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="a9919e757b665eea3b236fa8b39ebf3977dac665" translate="yes" xml:space="preserve">
          <source>The configuration is the same, switch out &lt;code&gt;sass-loader&lt;/code&gt; for &lt;code&gt;less-loader&lt;/code&gt; when necessary.</source>
          <target state="translated">구성은 동일 합니다. 필요할 때 &lt;code&gt;less-loader&lt;/code&gt; &lt;code&gt;sass-loader&lt;/code&gt; 위해 sass-loader 를 끄십시오 .</target>
        </trans-unit>
        <trans-unit id="7f4253f2f740bbba896793645215e3f4e3bbd342" translate="yes" xml:space="preserve">
          <source>The consumer also can use the library by loading it via a script tag:</source>
          <target state="translated">소비자는 스크립트 태그를 통해 라이브러리를로드하여 라이브러리를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="142e06a80b8adb00883cd7ba1de5598af662eacb" translate="yes" xml:space="preserve">
          <source>The container interface supports &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;init&lt;/code&gt; methods. &lt;code&gt;init&lt;/code&gt; is a &lt;code&gt;async&lt;/code&gt; compatible method that is called with one argument: the shared scope object. This object is used as a shared scope in the remote container and is filled with the provided modules from a host. It can be leveraged to connect remote containers to a host container dynamically at runtime.</source>
          <target state="translated">The container interface supports &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;init&lt;/code&gt; methods. &lt;code&gt;init&lt;/code&gt; is a &lt;code&gt;async&lt;/code&gt; compatible method that is called with one argument: the shared scope object. This object is used as a shared scope in the remote container and is filled with the provided modules from a host. It can be leveraged to connect remote containers to a host container dynamically at runtime.</target>
        </trans-unit>
        <trans-unit id="2ff8a81147746430acedd9eba5dd186382bc0736" translate="yes" xml:space="preserve">
          <source>The container tries to provide shared modules, but if the shared module has already been used, a warning and the provided shared module will be ignored. The container might still use it as a fallback.</source>
          <target state="translated">The container tries to provide shared modules, but if the shared module has already been used, a warning and the provided shared module will be ignored. The container might still use it as a fallback.</target>
        </trans-unit>
        <trans-unit id="39ed83f663c2187e3c359ec8156856103f546c45" translate="yes" xml:space="preserve">
          <source>The container will manage overridable modules in a way that they do not need to be downloaded when they have been overridden by the consumer. This usually happens by placing them into separate chunks.</source>
          <target state="translated">The container will manage overridable modules in a way that they do not need to be downloaded when they have been overridden by the consumer. This usually happens by placing them into separate chunks.</target>
        </trans-unit>
        <trans-unit id="2364eb772d89ad06b53d703338f09b71a5aff0a6" translate="yes" xml:space="preserve">
          <source>The content of the dll is accessible under a module prefix. i.e. with &lt;code&gt;scope = &quot;xyz&quot;&lt;/code&gt; a file &lt;code&gt;abc&lt;/code&gt; in the dll can be access via &lt;code&gt;require(&quot;xyz/abc&quot;)&lt;/code&gt;.</source>
          <target state="translated">dll의 내용은 모듈 접두사로 액세스 할 수 있습니다. 즉, &lt;code&gt;scope = &quot;xyz&quot;&lt;/code&gt; 경우 dll의 &lt;code&gt;abc&lt;/code&gt; 파일 &lt;code&gt;require(&quot;xyz/abc&quot;)&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af0989a346c523d5dd22cadb4680decdbc511fe1" translate="yes" xml:space="preserve">
          <source>The content of the dll is accessible under a module prefix. i.e. with &lt;code&gt;scope = 'xyz'&lt;/code&gt; a file &lt;code&gt;abc&lt;/code&gt; in the dll can be access via &lt;code&gt;require('xyz/abc')&lt;/code&gt;.</source>
          <target state="translated">The content of the dll is accessible under a module prefix. i.e. with &lt;code&gt;scope = 'xyz'&lt;/code&gt; a file &lt;code&gt;abc&lt;/code&gt; in the dll can be access via &lt;code&gt;require('xyz/abc')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11ae20ea60d038bb99e3a1098b149daca67d4310" translate="yes" xml:space="preserve">
          <source>The content of the dll is mapped to the current directory. If a required file matches a file in the dll (after resolving), then the file from the dll is used instead.</source>
          <target state="translated">dll의 내용은 현재 디렉토리에 매핑됩니다. 필요한 파일이 dll의 파일과 일치하면 (해결 후) dll의 파일이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="708e4611472f279bbeba23fd301b7b262d8b3c33" translate="yes" xml:space="preserve">
          <source>The context module also contains some runtime logic to access the map.</source>
          <target state="translated">컨텍스트 모듈에는 맵에 액세스하기위한 런타임 로직도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b48d4374f64931e52bb9ebc1178260ec8a201fe" translate="yes" xml:space="preserve">
          <source>The coolest part of everything mentioned above, is that loading assets this way allows you to group modules and assets in a more intuitive way. Instead of relying on a global &lt;code&gt;/assets&lt;/code&gt; directory that contains everything, you can group assets with the code that uses them. For example, a structure like this can be useful:</source>
          <target state="translated">The coolest part of everything mentioned above, is that loading assets this way allows you to group modules and assets in a more intuitive way. Instead of relying on a global &lt;code&gt;/assets&lt;/code&gt; directory that contains everything, you can group assets with the code that uses them. For example, a structure like this can be useful:</target>
        </trans-unit>
        <trans-unit id="3bb6021b3aba746e4cb4d8440fb0a5fe485718c3" translate="yes" xml:space="preserve">
          <source>The coolest part of everything mentioned above, is that loading assets this way allows you to group modules and assets together in a more intuitive way. Instead of relying on a global &lt;code&gt;/assets&lt;/code&gt; directory that contains everything, you can group assets with the code that uses them. For example, a structure like this can be very useful:</source>
          <target state="translated">위에서 언급 한 모든 것의 가장 멋진 부분은이 방법으로 자산을로드하면 모듈과 자산을보다 직관적 인 방식으로 그룹화 할 수 있다는 것입니다. 모든 것을 포함 하는 전역 &lt;code&gt;/assets&lt;/code&gt; 디렉토리 에 의존하는 대신 자산을 사용하는 코드로 자산을 그룹화 할 수 있습니다. 예를 들어, 이와 같은 구조는 매우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="933d8380bf7e621fb0ce538df103291319e3c3b8" translate="yes" xml:space="preserve">
          <source>The current default mode is &lt;a href=&quot;https://www.npmjs.com/package/sockjs&quot;&gt;&lt;code&gt;'sockjs'&lt;/code&gt;&lt;/a&gt;. This mode uses &lt;a href=&quot;https://github.com/sockjs/sockjs-node&quot;&gt;SockJS-node&lt;/a&gt; as a server, and &lt;a href=&quot;https://www.npmjs.com/package/sockjs-client&quot;&gt;SockJS-client&lt;/a&gt; on the client.</source>
          <target state="translated">The current default mode is &lt;a href=&quot;https://www.npmjs.com/package/sockjs&quot;&gt; &lt;code&gt;'sockjs'&lt;/code&gt; &lt;/a&gt;. This mode uses &lt;a href=&quot;https://github.com/sockjs/sockjs-node&quot;&gt;SockJS-node&lt;/a&gt; as a server, and &lt;a href=&quot;https://www.npmjs.com/package/sockjs-client&quot;&gt;SockJS-client&lt;/a&gt; on the client.</target>
        </trans-unit>
        <trans-unit id="28d8e8da70d2e7516d426239a1e09d1a1b27ac71" translate="yes" xml:space="preserve">
          <source>The default configuration was chosen to fit web performance best practices, but the optimal strategy for your project might differ. If you're changing the configuration, you should measure the impact of your changes to ensure there's a real benefit.</source>
          <target state="translated">The default configuration was chosen to fit web performance best practices, but the optimal strategy for your project might differ. If you're changing the configuration, you should measure the impact of your changes to ensure there's a real benefit.</target>
        </trans-unit>
        <trans-unit id="7c6b6d9ad88f92d2a4adcce1cece50a729a0b6af" translate="yes" xml:space="preserve">
          <source>The default value can be affected by different &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">The default value can be affected by different &lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="b2e84093acbe0b8b8fa8037e5115b1748d3fb127" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt; in webpack 4.</source>
          <target state="translated">The default value is &lt;code&gt;true&lt;/code&gt; in webpack 4.</target>
        </trans-unit>
        <trans-unit id="f3e4f99776cfd10bf043a53e3dc62767ec7acb98" translate="yes" xml:space="preserve">
          <source>The default value is an empty string &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3b83612f6b170d039b2461a7b028c7466e3f153b" translate="yes" xml:space="preserve">
          <source>The default value of this option is depending on the &lt;code&gt;target&lt;/code&gt; setting. For more details, search for &lt;code&gt;&quot;workerChunkLoading&quot;&lt;/code&gt;: &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/config/defaults.js&quot;&gt;in the webpack defaults&lt;/a&gt;.</source>
          <target state="translated">The default value of this option is depending on the &lt;code&gt;target&lt;/code&gt; setting. For more details, search for &lt;code&gt;&quot;workerChunkLoading&quot;&lt;/code&gt; : &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/config/defaults.js&quot;&gt;in the webpack defaults&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a277b5f476831566008bc5f4d942a1241cc34d01" translate="yes" xml:space="preserve">
          <source>The dependencies are necessary for webpack to understand when it needs to run recompilation on the changed files.</source>
          <target state="translated">The dependencies are necessary for webpack to understand when it needs to run recompilation on the changed files.</target>
        </trans-unit>
        <trans-unit id="a0f3744670086d967a82bcb9b8b24e02fa908f0e" translate="yes" xml:space="preserve">
          <source>The dependencies for your library will be defined by the &lt;a href=&quot;externals&quot;&gt;&lt;code&gt;externals&lt;/code&gt;&lt;/a&gt; config.</source>
          <target state="translated">라이브러리의 종속성은 &lt;a href=&quot;externals&quot;&gt; &lt;code&gt;externals&lt;/code&gt; &lt;/a&gt; 구성에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="e550230c9fc8a5a10bf3c0c43fb181c596afa9bd" translate="yes" xml:space="preserve">
          <source>The dependency module can be from the application code or a third party library. The resolver helps webpack find the module code that needs to be included in the bundle for every such &lt;code&gt;require&lt;/code&gt;/&lt;code&gt;import&lt;/code&gt; statement. webpack uses &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;enhanced-resolve&lt;/a&gt; to resolve file paths while bundling modules.</source>
          <target state="translated">종속성 모듈은 응용 프로그램 코드 또는 타사 라이브러리에서 제공 될 수 있습니다. 리졸버는 웹팩이 그러한 &lt;code&gt;require&lt;/code&gt; / &lt;code&gt;import&lt;/code&gt; 문 마다 번들에 포함되어야하는 모듈 코드를 찾도록 도와줍니다 . webpack은 &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;확장&lt;/a&gt; 번들을 사용하여 모듈을 번들링하는 동안 파일 경로를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e73f460edb61e6d26866d82d4c8fcf151ddf6e89" translate="yes" xml:space="preserve">
          <source>The dependency module can be from the application code or a third-party library. The resolver helps webpack find the module code that needs to be included in the bundle for every such &lt;code&gt;require&lt;/code&gt;/&lt;code&gt;import&lt;/code&gt; statement. webpack uses &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;enhanced-resolve&lt;/a&gt; to resolve file paths while bundling modules.</source>
          <target state="translated">The dependency module can be from the application code or a third-party library. The resolver helps webpack find the module code that needs to be included in the bundle for every such &lt;code&gt;require&lt;/code&gt; / &lt;code&gt;import&lt;/code&gt; statement. webpack uses &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;enhanced-resolve&lt;/a&gt; to resolve file paths while bundling modules.</target>
        </trans-unit>
        <trans-unit id="8d540fc23da7657e0a52f955d13989f2f80069e5" translate="yes" xml:space="preserve">
          <source>The deprecated webpack 1 constructor &lt;code&gt;new webpack.optimize.CommonsChunkPlugin(options, filenameTemplate, selectedChunks, minChunks)&lt;/code&gt; is no longer supported. Use a corresponding options object instead.</source>
          <target state="translated">더 이상 사용되지 않는 webpack 1 생성자 인 &lt;code&gt;new webpack.optimize.CommonsChunkPlugin(options, filenameTemplate, selectedChunks, minChunks)&lt;/code&gt; 은 더 이상 지원되지 않습니다. 대신 해당 옵션 개체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aaab335bd8539ddd56eb0154bbbbdd3a57ab1fc0" translate="yes" xml:space="preserve">
          <source>The dev-server makes use of the powerful &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; package. Check out its &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;documentation&lt;/a&gt; for more advanced usages. Note that some of &lt;code&gt;http-proxy-middleware&lt;/code&gt;'s features do not require a &lt;code&gt;target&lt;/code&gt; key, e.g. its &lt;code&gt;router&lt;/code&gt; feature, but you will still need to include a &lt;code&gt;target&lt;/code&gt; key in your configuration here, otherwise &lt;code&gt;webpack-dev-server&lt;/code&gt; won't pass it along to &lt;code&gt;http-proxy-middleware&lt;/code&gt;).</source>
          <target state="translated">The dev-server makes use of the powerful &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; package. Check out its &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;documentation&lt;/a&gt; for more advanced usages. Note that some of &lt;code&gt;http-proxy-middleware&lt;/code&gt; 's features do not require a &lt;code&gt;target&lt;/code&gt; key, e.g. its &lt;code&gt;router&lt;/code&gt; feature, but you will still need to include a &lt;code&gt;target&lt;/code&gt; key in your configuration here, otherwise &lt;code&gt;webpack-dev-server&lt;/code&gt; won't pass it along to &lt;code&gt;http-proxy-middleware&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="72453a9bde8a4946f5cce2f9940ffc13f8a61a43" translate="yes" xml:space="preserve">
          <source>The dev-server makes use of the powerful &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; package. Checkout its &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;documentation&lt;/a&gt; for more advanced usages.</source>
          <target state="translated">dev-server는 강력한 &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; 패키지를 사용합니다. 그 체크 아웃 &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;문서를&lt;/a&gt; 고급 용도로.</target>
        </trans-unit>
        <trans-unit id="6ff0c0bd95cbb9d226a93e472ae5eebbebdf485b" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;maxAsyncSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxAsyncSize&lt;/code&gt; will only affect on-demand loading chunks.</source>
          <target state="translated">The difference between &lt;code&gt;maxAsyncSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxAsyncSize&lt;/code&gt; will only affect on-demand loading chunks.</target>
        </trans-unit>
        <trans-unit id="808e96d4b904728e7f3fc410be4e4569724e0dda" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;maxInitialSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxInitialSize&lt;/code&gt; will only affect initial load chunks.</source>
          <target state="translated">The difference between &lt;code&gt;maxInitialSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxInitialSize&lt;/code&gt; will only affect initial load chunks.</target>
        </trans-unit>
        <trans-unit id="6c18a4469d6bbf0544a03a7f1589a9b97bc3e787" translate="yes" xml:space="preserve">
          <source>The enabled rules for minimizing by default are the following ones:</source>
          <target state="translated">기본적으로 최소화하기 위해 활성화 된 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bd76b56f90cc7ad0a0f72461fe52bce7d07a8517" translate="yes" xml:space="preserve">
          <source>The encoding to use when generating the hash, defaults to &lt;code&gt;'hex'&lt;/code&gt;. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest&lt;/code&gt;&lt;/a&gt; are supported. Using &lt;code&gt;'base64'&lt;/code&gt; for filenames might be problematic since it has the character &lt;code&gt;/&lt;/code&gt; in its alphabet. Likewise &lt;code&gt;'latin1'&lt;/code&gt; could contain any character.</source>
          <target state="translated">해시를 생성 할 때 사용할 인코딩은 기본적으로 &lt;code&gt;'hex'&lt;/code&gt; 입니다. Node.JS의 &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest&lt;/code&gt; 의&lt;/a&gt; 모든 인코딩 이 지원됩니다. 파일 이름에 &lt;code&gt;'base64'&lt;/code&gt; 를 사용하면 알파벳 문자 &lt;code&gt;/&lt;/code&gt; 가 있으므로 문제가 될 수 있습니다 . 마찬가지로 &lt;code&gt;'latin1'&lt;/code&gt; 은 모든 문자를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31e9d5b8ee6a480f19671a36d4f4067621c60dfd" translate="yes" xml:space="preserve">
          <source>The encoding to use when generating the hash. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest&lt;/code&gt;&lt;/a&gt; are supported. Using &lt;code&gt;'base64'&lt;/code&gt; for filenames might be problematic since it has the character &lt;code&gt;/&lt;/code&gt; in its alphabet. Likewise &lt;code&gt;'latin1'&lt;/code&gt; could contain any character.</source>
          <target state="translated">The encoding to use when generating the hash. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest&lt;/code&gt; &lt;/a&gt; are supported. Using &lt;code&gt;'base64'&lt;/code&gt; for filenames might be problematic since it has the character &lt;code&gt;/&lt;/code&gt; in its alphabet. Likewise &lt;code&gt;'latin1'&lt;/code&gt; could contain any character.</target>
        </trans-unit>
        <trans-unit id="b02a1c64523524bd6887bba721827df362037305" translate="yes" xml:space="preserve">
          <source>The entries chunks are decorated to form a library &lt;code&gt;name&lt;/code&gt; of type &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">항목 청크는 type &lt;code&gt;type&lt;/code&gt; 의 라이브러리 &lt;code&gt;name&lt;/code&gt; 을 형성하도록 장식되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6cf3d762c8a748dfe2b4b1ed7cec7a292cb77cb" translate="yes" xml:space="preserve">
          <source>The entry object is where webpack looks to start building the bundle. The context is an absolute string to the directory that contains the entry files.</source>
          <target state="translated">entry 객체는 webpack이 번들 빌드를 시작하는 곳입니다. 컨텍스트는 항목 파일이 포함 된 디렉토리의 절대 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="435f9882df580a04c2a3e7ec98307219f22e1c02" translate="yes" xml:space="preserve">
          <source>The entry point(s) of your application e.g. &lt;code&gt;./src/main.js&lt;/code&gt;</source>
          <target state="translated">The entry point(s) of your application e.g. &lt;code&gt;./src/main.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0607d4a03e47e5ea4019d6170f114d90e541894a" translate="yes" xml:space="preserve">
          <source>The example above will create a &lt;code&gt;lib.js&lt;/code&gt; and &lt;code&gt;lib.node.js&lt;/code&gt; file in your &lt;code&gt;dist&lt;/code&gt; folder.</source>
          <target state="translated">위 예제는 &lt;code&gt;dist&lt;/code&gt; 폴더 에 &lt;code&gt;lib.js&lt;/code&gt; 및 &lt;code&gt;lib.node.js&lt;/code&gt; 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="550fb5db8af67f8ea949e6d036a7d750562bb809" translate="yes" xml:space="preserve">
          <source>The example above will only give you performance hints based on &lt;code&gt;.js&lt;/code&gt; files.</source>
          <target state="translated">위의 예는 &lt;code&gt;.js&lt;/code&gt; 파일을 기반으로 한 성능 힌트 만 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="3db532cae8766ac1f04fe8609540dcabd0918362" translate="yes" xml:space="preserve">
          <source>The examples below describe how webpack's configuration can be both expressive and configurable because &lt;em&gt;it is code&lt;/em&gt;:</source>
          <target state="translated">The examples below describe how webpack's configuration can be both expressive and configurable because &lt;em&gt;it is code&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="8cd99ede41e0d24db8a2e291b6738350a5b14058" translate="yes" xml:space="preserve">
          <source>The examples in this guide stem from &lt;a href=&quot;getting-started&quot;&gt;getting started&lt;/a&gt;, &lt;a href=&quot;output-management&quot;&gt;output management&lt;/a&gt; and &lt;a href=&quot;code-splitting&quot;&gt;code splitting&lt;/a&gt;.</source>
          <target state="translated">이 안내서의 예제는 &lt;a href=&quot;getting-started&quot;&gt;시작&lt;/a&gt; , &lt;a href=&quot;output-management&quot;&gt;출력 관리&lt;/a&gt; 및 &lt;a href=&quot;code-splitting&quot;&gt;코드 분할&lt;/a&gt; 에서 비롯됩니다 .</target>
        </trans-unit>
        <trans-unit id="2e118d1734b9ca216adaa508bfc0d9a7da7241a5" translate="yes" xml:space="preserve">
          <source>The exported function has 3 properties: &lt;code&gt;resolve&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">내 보낸 함수에는 &lt;code&gt;resolve&lt;/code&gt; , &lt;code&gt;keys&lt;/code&gt; , &lt;code&gt;id&lt;/code&gt; 의 3 가지 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="50bd1bd96b003419b47ab5f8f8c1b4340c19dce1" translate="yes" xml:space="preserve">
          <source>The extensions/suffixes that are used when resolving loaders. Since version two, we &lt;a href=&quot;https://webpack.js.org/migrate/3/#automatic--loader-module-name-extension-removed&quot;&gt;strongly recommend&lt;/a&gt; using the full name, e.g. &lt;code&gt;example-loader&lt;/code&gt;, as much as possible for clarity. However, if you really wanted to exclude the &lt;code&gt;-loader&lt;/code&gt; bit, i.e. just use &lt;code&gt;example&lt;/code&gt;, you can use this option to do so:</source>
          <target state="translated">The extensions/suffixes that are used when resolving loaders. Since version two, we &lt;a href=&quot;https://webpack.js.org/migrate/3/#automatic--loader-module-name-extension-removed&quot;&gt;strongly recommend&lt;/a&gt; using the full name, e.g. &lt;code&gt;example-loader&lt;/code&gt; , as much as possible for clarity. However, if you really wanted to exclude the &lt;code&gt;-loader&lt;/code&gt; bit, i.e. just use &lt;code&gt;example&lt;/code&gt; , you can use this option to do so:</target>
        </trans-unit>
        <trans-unit id="389b350eb8413c4a925b5a6a40afccde32eca5c0" translate="yes" xml:space="preserve">
          <source>The extensions/suffixes which that are used when resolving loaders. Since version two, we &lt;a href=&quot;../guides/migrating#automatic-loader-module-name-extension-removed&quot;&gt;strongly recommend&lt;/a&gt; using the full name, e.g. &lt;code&gt;example-loader&lt;/code&gt;, as much as possible for clarity. However, if you really wanted to exclude the &lt;code&gt;-loader&lt;/code&gt; bit, i.e. just use &lt;code&gt;example&lt;/code&gt;, you can use this option to do so:</source>
          <target state="translated">로더를 해석 할 때 사용되는 확장 / 접미사. 버전 2부터는 명확성을 위해 전체 이름 (예 : &lt;code&gt;example-loader&lt;/code&gt; )을 사용하는 &lt;a href=&quot;../guides/migrating#automatic-loader-module-name-extension-removed&quot;&gt;것이 좋습니다&lt;/a&gt; . 그러나 &lt;code&gt;-loader&lt;/code&gt; 비트 를 제외하고 싶다면 , 예를 &lt;code&gt;example&lt;/code&gt; 그냥 사용하십시오.이 옵션을 사용하여 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="794aa4e261a7c6a0554650d5905cee89cc73cfa7" translate="yes" xml:space="preserve">
          <source>The extract-loader evaluates the given source code on the fly and returns the result as string. Its main use-case is to resolve urls within HTML and CSS coming from their respective loaders. Use the &lt;a href=&quot;file-loader&quot;&gt;file-loader&lt;/a&gt; to emit the extract-loader's result as separate file.</source>
          <target state="translated">추출 로더는 주어진 소스 코드를 즉시 평가하고 결과를 문자열로 리턴합니다. 주요 사용 사례는 해당 로더에서 오는 HTML 및 CSS 내의 URL을 확인하는 것입니다. &lt;a href=&quot;file-loader&quot;&gt;파일 로더&lt;/a&gt; 를 사용하여 추출 로더의 결과를 별도의 파일로 내보내십시오.</target>
        </trans-unit>
        <trans-unit id="453084e89f5428bcc7e5ed45107b51b910c05098" translate="yes" xml:space="preserve">
          <source>The extract-loader works similar to the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; and is meant as a lean alternative to it. When evaluating the source code, it provides a fake context which was especially designed to cope with the code generated by the &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; or the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt;. Thus it might not work in other situations.</source>
          <target state="translated">추출 로더는 &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; 과 유사하게 작동 하며 이에 대한 대체 대안으로 사용됩니다. 소스 코드를 평가할 때 &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; 또는 &lt;a href=&quot;css-loader&quot;&gt;css-loader에&lt;/a&gt; 의해 생성 된 코드를 처리하도록 특별히 설계된 가짜 컨텍스트를 제공합니다 . 따라서 다른 상황에서는 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0e83cedb787e8fdb96980744feaad893d123b30" translate="yes" xml:space="preserve">
          <source>The extract-loader works similar to the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; and the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; and is meant as a lean alternative to it. When evaluating the source code, it provides a fake context which was especially designed to cope with the code generated by the &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; or the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt;. Thus it might not work in other situations.</source>
          <target state="translated">The extract-loader works similar to the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; and the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; and is meant as a lean alternative to it. When evaluating the source code, it provides a fake context which was especially designed to cope with the code generated by the &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; or the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt;. Thus it might not work in other situations.</target>
        </trans-unit>
        <trans-unit id="16d5d63de6fda830696b84c6adce09e4cc8d99c4" translate="yes" xml:space="preserve">
          <source>The fallback loader will receive the same configuration options as url-loader.</source>
          <target state="translated">대체 로더에는 url-loader와 동일한 구성 옵션이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0795b4e5fc07744afbf074537a8f64cce79c5701" translate="yes" xml:space="preserve">
          <source>The file extension is then resolved in a similar way using the &lt;a href=&quot;../configuration/resolve#resolveextensions&quot;&gt;&lt;code&gt;resolve.extensions&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">The file extension is then resolved in a similar way using the &lt;a href=&quot;../configuration/resolve#resolveextensions&quot;&gt; &lt;code&gt;resolve.extensions&lt;/code&gt; &lt;/a&gt; option.</target>
        </trans-unit>
        <trans-unit id="24a12e3645cc54e3f1d24478d16f98c7ce1b82c6" translate="yes" xml:space="preserve">
          <source>The file extension is then resolved in a similar way using the &lt;code&gt;resolve.extensions&lt;/code&gt; option.</source>
          <target state="translated">그런 다음 &lt;code&gt;resolve.extensions&lt;/code&gt; 옵션을 사용하여 유사한 방식으로 파일 확장자를 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="19c2603ed5d45d2ba7f1dcca02a02345da1c6750" translate="yes" xml:space="preserve">
          <source>The file extension of the target file/resource.</source>
          <target state="translated">대상 파일 / 리소스의 파일 확장자입니다.</target>
        </trans-unit>
        <trans-unit id="8117b59c7f4e6ea23fdb3229936a65a8a033880e" translate="yes" xml:space="preserve">
          <source>The file is requested when you require the &lt;code&gt;bundle-loader&lt;/code&gt;. If you want it to request it lazy, use:</source>
          <target state="translated">파일은 &lt;code&gt;bundle-loader&lt;/code&gt; 가 필요할 때 요청됩니다 . 지연을 요청하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="66e51225d686d671805bbc321a2ba8d33de15225" translate="yes" xml:space="preserve">
          <source>The file where the extracted comments will be stored. Can be either a &lt;code&gt;{String}&lt;/code&gt; or a &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;}&lt;/code&gt;, which will be given the original filename. Default is to append the suffix &lt;code&gt;.LICENSE&lt;/code&gt; to the original filename</source>
          <target state="translated">추출 된 주석이 저장 될 파일입니다. 될 수 중 하나 &lt;code&gt;{String}&lt;/code&gt; 또는 &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;}&lt;/code&gt; , 원래의 파일 이름을 부여 할 것이다. 기본값은 접미사 &lt;code&gt;.LICENSE&lt;/code&gt; 를 원래 파일 이름 에 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1a52d902ede779f8aedcefceb6c5761fd37addf5" translate="yes" xml:space="preserve">
          <source>The file where the extracted comments will be stored. Default is to append the suffix &lt;code&gt;.LICENSE.txt&lt;/code&gt; to the original filename.</source>
          <target state="translated">The file where the extracted comments will be stored. Default is to append the suffix &lt;code&gt;.LICENSE.txt&lt;/code&gt; to the original filename.</target>
        </trans-unit>
        <trans-unit id="5c0ad8e4b7dc560580c3d7f3e7a9b350ee96549f" translate="yes" xml:space="preserve">
          <source>The file where the extracted comments will be stored. Default is to append the suffix &lt;code&gt;.LICENSE&lt;/code&gt; to the original filename.</source>
          <target state="translated">추출 된 주석이 저장 될 파일입니다. 기본값은 접미사 &lt;code&gt;.LICENSE&lt;/code&gt; 를 원래 파일 이름 에 추가하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="2abdea845896b85bb089325305fabc74a5095e89" translate="yes" xml:space="preserve">
          <source>The filename of entry chunks for web workers</source>
          <target state="translated">The filename of entry chunks for web workers</target>
        </trans-unit>
        <trans-unit id="4a61f3dd6517c4ea22c5343ab7602963b88540b1" translate="yes" xml:space="preserve">
          <source>The filename of entry chunks for web workers.</source>
          <target state="translated">The filename of entry chunks for web workers.</target>
        </trans-unit>
        <trans-unit id="ffd056b174ffe8ad630fac5041d1b37b9de42730" translate="yes" xml:space="preserve">
          <source>The filename of non-entry chunks for web workers</source>
          <target state="translated">The filename of non-entry chunks for web workers</target>
        </trans-unit>
        <trans-unit id="2042f0e861e377e9088f09df08ad3f19a4353d4a" translate="yes" xml:space="preserve">
          <source>The filename of non-entry chunks for web workers.</source>
          <target state="translated">The filename of non-entry chunks for web workers.</target>
        </trans-unit>
        <trans-unit id="42691448a39272a04c7623d4ac9237529f167323" translate="yes" xml:space="preserve">
          <source>The filename that is considered the index file.</source>
          <target state="translated">인덱스 파일로 간주되는 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6265cd364a45ae95000867ee2a076cb217cff18f" translate="yes" xml:space="preserve">
          <source>The filename to be used while resolving directories.</source>
          <target state="translated">The filename to be used while resolving directories.</target>
        </trans-unit>
        <trans-unit id="9a7fe9404151c99b0fe504095a9cff5fbb57d21c" translate="yes" xml:space="preserve">
          <source>The filename to be used while resolving directories. Default:</source>
          <target state="translated">디렉토리를 분석 할 때 사용할 파일 이름입니다. 기본:</target>
        </trans-unit>
        <trans-unit id="4675b7019de2215d025f035289f9016a1f62a783" translate="yes" xml:space="preserve">
          <source>The final location of the cache is a combination of &lt;code&gt;cache.cacheDirectory&lt;/code&gt; + &lt;code&gt;cache.name&lt;/code&gt;.</source>
          <target state="translated">The final location of the cache is a combination of &lt;code&gt;cache.cacheDirectory&lt;/code&gt; + &lt;code&gt;cache.name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1adb1b5390fbdfac478c72a15607cdb2748376e0" translate="yes" xml:space="preserve">
          <source>The first and last are expected -- it's the &lt;code&gt;vendor&lt;/code&gt; hash we want to fix. Luckily, there are two plugins we can use to resolve this issue. The first is the &lt;code&gt;NamedModulesPlugin&lt;/code&gt;, which will use the path to the module rather than a numerical identifier. While this plugin is useful during development for more readable output, it does take a bit longer to run. The second option is the &lt;a href=&quot;../plugins/hashed-module-ids-plugin&quot;&gt;&lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt;&lt;/a&gt;, which is recommended for production builds:</source>
          <target state="translated">첫 번째와 마지막이 예상 됩니다. 수정하려는 &lt;code&gt;vendor&lt;/code&gt; 해시입니다. 다행히이 문제를 해결하는 데 사용할 수있는 두 가지 플러그인이 있습니다. 첫 번째는 &lt;code&gt;NamedModulesPlugin&lt;/code&gt; 이며, 숫자 식별자 대신 모듈의 경로를 사용합니다. 이 플러그인은 개발 중에 더 읽기 쉬운 출력을 위해 유용하지만 실행하는 데 시간이 조금 더 걸립니다. 두 번째 옵션은 &lt;a href=&quot;../plugins/hashed-module-ids-plugin&quot;&gt; &lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt; &lt;/a&gt; 이며 프로덕션 빌드에 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="bd39890da8b625a8684975fbf6349927a2721a8e" translate="yes" xml:space="preserve">
          <source>The first and last are expected, it's the &lt;code&gt;vendor&lt;/code&gt; hash we want to fix. Let's use &lt;a href=&quot;../configuration/optimization#optimizationmoduleids&quot;&gt;&lt;code&gt;optimization.moduleIds&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;'deterministic'&lt;/code&gt; option:</source>
          <target state="translated">The first and last are expected, it's the &lt;code&gt;vendor&lt;/code&gt; hash we want to fix. Let's use &lt;a href=&quot;../configuration/optimization#optimizationmoduleids&quot;&gt; &lt;code&gt;optimization.moduleIds&lt;/code&gt; &lt;/a&gt; with &lt;code&gt;'deterministic'&lt;/code&gt; option:</target>
        </trans-unit>
        <trans-unit id="285df81918288a75eff9819c28e80e90c6e6647c" translate="yes" xml:space="preserve">
          <source>The first argument must be an &lt;code&gt;Error&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">첫 번째 인수는 &lt;code&gt;Error&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 이어야합니다</target>
        </trans-unit>
        <trans-unit id="6baa2b9c23677a35073f9bdacb05028ae17a78b5" translate="yes" xml:space="preserve">
          <source>The first argument of the &lt;code&gt;webpack.DefinePlugin.runtimeValue&lt;/code&gt; is a &lt;code&gt;function&lt;/code&gt; that should return the value to be assigned to the definition.</source>
          <target state="translated">The first argument of the &lt;code&gt;webpack.DefinePlugin.runtimeValue&lt;/code&gt; is a &lt;code&gt;function&lt;/code&gt; that should return the value to be assigned to the definition.</target>
        </trans-unit>
        <trans-unit id="5d624090a9474a6049647db4976a8af625747830" translate="yes" xml:space="preserve">
          <source>The first loader is passed one argument: the content of the resource file. The compiler expects a result from the last loader. The result should be a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Buffer&lt;/code&gt; (which is converted to a string), representing the JavaScript source code of the module. An optional SourceMap result (as JSON object) may also be passed.</source>
          <target state="translated">첫 번째 로더에는 하나의 인수, 즉 리소스 파일의 내용이 전달됩니다. 컴파일러는 마지막 로더의 결과를 기대합니다. 결과는 모듈의 JavaScript 소스 코드를 나타내는 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;Buffer&lt;/code&gt; (문자열로 변환 됨) 여야합니다 . 선택적 SourceMap 결과 (JSON 객체)도 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08210d6a93346bbd17560e1fcb340926b15ad7a1" translate="yes" xml:space="preserve">
          <source>The first loader is passed one argument: the content of the resource file. The compiler expects a result from the last loader. The result should be a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Buffer&lt;/code&gt; (which is converted to a string), representing the JavaScript source code of the module. An optional SourceMap result (as a JSON object) may also be passed.</source>
          <target state="translated">The first loader is passed one argument: the content of the resource file. The compiler expects a result from the last loader. The result should be a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Buffer&lt;/code&gt; (which is converted to a string), representing the JavaScript source code of the module. An optional SourceMap result (as a JSON object) may also be passed.</target>
        </trans-unit>
        <trans-unit id="526e4cbb061a7ecff58a71d4a1abe32510b836e6" translate="yes" xml:space="preserve">
          <source>The first of these two points is definitely an issue for our example, as &lt;code&gt;lodash&lt;/code&gt; is also imported within &lt;code&gt;./src/index.js&lt;/code&gt; and will thus be duplicated in both bundles. Let's remove this duplication by using the &lt;code&gt;SplitChunks&lt;/code&gt; plugin.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 도 &lt;code&gt;./src/index.js&lt;/code&gt; 내에서 가져 와서 두 번들에 복제 되므로이 두 점 중 첫 번째 점은이 예에서 분명히 문제 가됩니다. &lt;code&gt;SplitChunks&lt;/code&gt; 플러그인 을 사용하여이 중복을 제거합시다 .</target>
        </trans-unit>
        <trans-unit id="146764a0b36866667a031a8325e9976afc652767" translate="yes" xml:space="preserve">
          <source>The first of these two points is definitely an issue for our example, as &lt;code&gt;lodash&lt;/code&gt; is also imported within &lt;code&gt;./src/index.js&lt;/code&gt; and will thus be duplicated in both bundles. Let's remove this duplication in next section.</source>
          <target state="translated">The first of these two points is definitely an issue for our example, as &lt;code&gt;lodash&lt;/code&gt; is also imported within &lt;code&gt;./src/index.js&lt;/code&gt; and will thus be duplicated in both bundles. Let's remove this duplication in next section.</target>
        </trans-unit>
        <trans-unit id="7d9234d6eea4d64eafd089788ed4bb6c494468bd" translate="yes" xml:space="preserve">
          <source>The first parameter of the tap method of the compiler hook should be a camelized version of the plugin name. It is advisable to use a constant for this so it can be reused in all hooks.</source>
          <target state="translated">컴파일러 후크의 탭 메소드의 첫 번째 매개 변수는 플러그인 이름의 낙타 버전이어야합니다. 모든 후크에서 재사용 할 수 있도록 상수를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="bf141e95df1de73d45323ec796f1723e3a9413bb" translate="yes" xml:space="preserve">
          <source>The folder of the resource is in.</source>
          <target state="translated">The folder of the resource is in.</target>
        </trans-unit>
        <trans-unit id="093e10ad7457afb67646ecdc23d37c05d5f7c2a2" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;EnvironmentPlugin&lt;/code&gt; configuration provides &lt;code&gt;process.env.GIT_VERSION&lt;/code&gt; (such as &quot;v5.4.0-2-g25139f57f&quot;) and &lt;code&gt;process.env.GIT_AUTHOR_DATE&lt;/code&gt; (such as &quot;2020-11-04T12:25:16+01:00&quot;) corresponding to the last Git commit of the repository:</source>
          <target state="translated">The following &lt;code&gt;EnvironmentPlugin&lt;/code&gt; configuration provides &lt;code&gt;process.env.GIT_VERSION&lt;/code&gt; (such as &quot;v5.4.0-2-g25139f57f&quot;) and &lt;code&gt;process.env.GIT_AUTHOR_DATE&lt;/code&gt; (such as &quot;2020-11-04T12:25:16+01:00&quot;) corresponding to the last Git commit of the repository:</target>
        </trans-unit>
        <trans-unit id="4ef7ab2fdbe131166ce0f45896431e42dc48f933" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;webpack.config.js&lt;/code&gt; can load CSS files, embed small PNG/JPG/GIF/SVG images as well as fonts as &lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt;Data URLs&lt;/a&gt; and copy larger files to the output directory.</source>
          <target state="translated">다음 &lt;code&gt;webpack.config.js&lt;/code&gt; 는 CSS 파일을로드하고 작은 PNG / JPG / GIF / SVG 이미지와 글꼴을 &lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt;데이터 URL로 포함&lt;/a&gt; 하고 더 큰 파일을 출력 디렉토리에 복사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e09c768c657b45613fcdaaddfbfe084cc9e39dd6" translate="yes" xml:space="preserve">
          <source>The following NPM installation will make &lt;code&gt;webpack&lt;/code&gt; available globally:</source>
          <target state="translated">다음 NPM 설치는 &lt;code&gt;webpack&lt;/code&gt; 전 세계적으로 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="c50610b612001be3f0b94e2290089629c37f4acd" translate="yes" xml:space="preserve">
          <source>The following Node.js options configure whether to polyfill or mock certain &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js globals&lt;/a&gt;.</source>
          <target state="translated">The following Node.js options configure whether to polyfill or mock certain &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js globals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e57f2c4591b00f570d0a42bac7dba6e81f6332bc" translate="yes" xml:space="preserve">
          <source>The following approach will not work either:</source>
          <target state="translated">다음 방법도 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a2f57e1f4b8865d88e8bbdcf153e1450567e0da" translate="yes" xml:space="preserve">
          <source>The following article will walk through both of these use cases.</source>
          <target state="translated">다음 기사에서는 이러한 두 가지 사용 사례를 모두 설명합니다.</target>
        </trans-unit>
        <trans-unit id="678973c41a6b79f5b722e9b40c1f281d633c89b0" translate="yes" xml:space="preserve">
          <source>The following best practices should help whether or not you are in &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; or building for &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</source>
          <target state="translated">다음 모범 사례는 &lt;a href=&quot;development&quot;&gt;개발&lt;/a&gt; 또는 &lt;a href=&quot;production&quot;&gt;프로덕션&lt;/a&gt; 용 건물 인지 여부에 도움이됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7eeb221fe638ecee1d71399a6f741d2113bd296" translate="yes" xml:space="preserve">
          <source>The following best practices should help, whether you're running build scripts in &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; or &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</source>
          <target state="translated">The following best practices should help, whether you're running build scripts in &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; or &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bd3d71fbc90b4965eee8e8c2d91c6a81f72260f9" translate="yes" xml:space="preserve">
          <source>The following code would exclude source maps for any modules in the &lt;code&gt;vendor.js&lt;/code&gt; bundle:</source>
          <target state="translated">다음 코드는 &lt;code&gt;vendor.js&lt;/code&gt; 번들의 모든 모듈에 대한 소스 맵을 제외 합니다.</target>
        </trans-unit>
        <trans-unit id="4bae8bd33f64798315f4b9a7a6fa6f94f186c42d" translate="yes" xml:space="preserve">
          <source>The following conditions are set depending on the target environment:</source>
          <target state="translated">The following conditions are set depending on the target environment:</target>
        </trans-unit>
        <trans-unit id="7ae433e95547aea5875cdefe77fda4e1fe0fbe74" translate="yes" xml:space="preserve">
          <source>The following conditions are set depending on which tool preprocesses the source code.</source>
          <target state="translated">The following conditions are set depending on which tool preprocesses the source code.</target>
        </trans-unit>
        <trans-unit id="28d00fabb2a8570ca16641499e5ae03d6dbd6dd6" translate="yes" xml:space="preserve">
          <source>The following conditions are set for various optimizations:</source>
          <target state="translated">The following conditions are set for various optimizations:</target>
        </trans-unit>
        <trans-unit id="82ad836ded4b99729d81a979590b01af6ca4f2c8" translate="yes" xml:space="preserve">
          <source>The following configuration disables automatic per-file runtime injection in Babel, requiring &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; instead and making all helper references use it.</source>
          <target state="translated">The following configuration disables automatic per-file runtime injection in Babel, requiring &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; instead and making all helper references use it.</target>
        </trans-unit>
        <trans-unit id="8709f36c191d4f117275510a4bc1f38092fe4b33" translate="yes" xml:space="preserve">
          <source>The following configuration disables automatic per-file runtime injection in babel, instead requiring &lt;code&gt;babel-plugin-transform-runtime&lt;/code&gt; and making all helper references use it.</source>
          <target state="translated">다음 구성은 babel에서 파일 당 자동 런타임 주입을 비활성화하고 대신 &lt;code&gt;babel-plugin-transform-runtime&lt;/code&gt; 을 필요로하고 모든 도우미 참조가이를 사용하도록합니다.</target>
        </trans-unit>
        <trans-unit id="8fe90b1288f44498fb756129bc5a0a2af786bb67" translate="yes" xml:space="preserve">
          <source>The following configurations are supported:</source>
          <target state="translated">다음 구성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b13725a6ae447ef21a0afad19188e76009a3e8cf" translate="yes" xml:space="preserve">
          <source>The following examples below describe how webpack's configuration object can be both expressive and configurable because &lt;em&gt;it is code&lt;/em&gt;:</source>
          <target state="translated">아래의 예제는 웹팩의 구성 객체 &lt;em&gt;가 코드&lt;/em&gt; 이기 때문에 표현적이고 구성 가능한 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="d845fb6e558a229ab97eb2a6aba515891d721d5b" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate a few ways this plugin can be used.</source>
          <target state="translated">다음 예제는이 플러그인을 사용할 수있는 몇 가지 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="26f4af435cad2a96ac6af4b806fbcad458532c0d" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate some common use cases for this plugin.</source>
          <target state="translated">다음 예제는이 플러그인의 일반적인 사용 사례를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1849f61df45d0162d9079faaf0c67c7edbd85004" translate="yes" xml:space="preserve">
          <source>The following examples show how one might use &lt;code&gt;file-loader&lt;/code&gt; and what the result would be.</source>
          <target state="translated">다음 예제는 &lt;code&gt;file-loader&lt;/code&gt; 사용하는 방법 과 결과를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="68b1d67823b044c93381d7264c1cf2ace34ecaeb" translate="yes" xml:space="preserve">
          <source>The following examples show how to use &lt;code&gt;file-loader&lt;/code&gt; for CDN uses query params.</source>
          <target state="translated">The following examples show how to use &lt;code&gt;file-loader&lt;/code&gt; for CDN uses query params.</target>
        </trans-unit>
        <trans-unit id="44d44bb2f64a1979b129bd0f1ec4f5b13fc76e58" translate="yes" xml:space="preserve">
          <source>The following hooks report progress information to &lt;code&gt;ProgressPlugin&lt;/code&gt;.</source>
          <target state="translated">The following hooks report progress information to &lt;code&gt;ProgressPlugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c40477b0ccf58dde30ff4d3095e2b4524b76a06f" translate="yes" xml:space="preserve">
          <source>The following import statement will trigger the hook once:</source>
          <target state="translated">The following import statement will trigger the hook once:</target>
        </trans-unit>
        <trans-unit id="3103956137f2ddc4a8ea8dd89ac9999002f056f3" translate="yes" xml:space="preserve">
          <source>The following import statement will trigger the hook twice:</source>
          <target state="translated">The following import statement will trigger the hook twice:</target>
        </trans-unit>
        <trans-unit id="a052f6a1445904f054ec0a6caedf2123b8ca8e0e" translate="yes" xml:space="preserve">
          <source>The following lifecycle hooks are exposed by the &lt;code&gt;compiler&lt;/code&gt; and can be accessed as such:</source>
          <target state="translated">다음 수명주기 후크는 &lt;code&gt;compiler&lt;/code&gt; 의해 노출되며 그대로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0b945c38650ddf7d6afcf4290fc738ecb312a93" translate="yes" xml:space="preserve">
          <source>The following lifecycle hooks are exposed by the &lt;code&gt;parser&lt;/code&gt; and can be accessed as such:</source>
          <target state="translated">다음 수명주기 후크는 &lt;code&gt;parser&lt;/code&gt; 의해 노출되며 그대로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d72a562a0b2950b13a0175ee7b8eb0439c9a57b5" translate="yes" xml:space="preserve">
          <source>The following methods are supported...</source>
          <target state="translated">다음과 같은 방법이 지원됩니다 ...</target>
        </trans-unit>
        <trans-unit id="e4d77afab2cb5c0e79177397fed4c21c74e5e9f3" translate="yes" xml:space="preserve">
          <source>The following options are accepted:</source>
          <target state="translated">다음과 같은 옵션이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c50a926ca6ac44ce44b0b0c4408cf022677665b6" translate="yes" xml:space="preserve">
          <source>The following options are ideal for development:</source>
          <target state="translated">다음 옵션은 개발에 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="d84d03f469cd5c6bd18b7e42fd7802b60d6ad892" translate="yes" xml:space="preserve">
          <source>The following options are not ideal for development nor production. They are needed for some special cases, i. e. for some 3rd party tools.</source>
          <target state="translated">다음 옵션은 개발이나 생산에 적합하지 않습니다. 특수한 경우, 즉 일부 타사 도구에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3ab6a9f1a0bbaef19cacfbc5c31136467bf2e22d" translate="yes" xml:space="preserve">
          <source>The following options are supported:</source>
          <target state="translated">다음과 같은 옵션이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="df764edfdfccdeb5073770c5372a6d62f6fea17c" translate="yes" xml:space="preserve">
          <source>The following parameters are supported in the order specified above:</source>
          <target state="translated">다음 매개 변수는 위에서 지정한 순서대로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f0dd5a0b610e80f1bc7f0e825cff0c25a34dce73" translate="yes" xml:space="preserve">
          <source>The following pseudo JavaScript explains the algorithm:</source>
          <target state="translated">다음 의사 JavaScript는 알고리즘을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b78ac2bb7487b9b97617ca300f935d78befc5713" translate="yes" xml:space="preserve">
          <source>The following sections provide some basic examples of the different types of loaders. Note that the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt; parameters are optional, see &lt;a href=&quot;#thiscallback&quot;&gt;&lt;code&gt;this.callback&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">The following sections provide some basic examples of the different types of loaders. Note that the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt; parameters are optional, see &lt;a href=&quot;#thiscallback&quot;&gt; &lt;code&gt;this.callback&lt;/code&gt; &lt;/a&gt; below.</target>
        </trans-unit>
        <trans-unit id="358a3d576958f5f1b3e7c42e523d1d2554052390" translate="yes" xml:space="preserve">
          <source>The following sections provide some basic examples of the different types of loaders. Note that the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt; parameters are optional, see &lt;a href=&quot;loaders#this-callback&quot;&gt;&lt;code&gt;this.callback&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">다음 섹션에서는 다양한 유형의 로더에 대한 몇 가지 기본 예를 제공합니다. 참고 것을 &lt;code&gt;map&lt;/code&gt; 및 &lt;code&gt;meta&lt;/code&gt; 매개 변수는 선택 사항을 참조 &lt;a href=&quot;loaders#this-callback&quot;&gt; &lt;code&gt;this.callback&lt;/code&gt; &lt;/a&gt; 아래.</target>
        </trans-unit>
        <trans-unit id="a531a0077512a0466129920af78d3a3e2dc49daf" translate="yes" xml:space="preserve">
          <source>The following setup is an example of allowing &lt;code&gt;Interoperable CSS&lt;/code&gt; features only (such as &lt;code&gt;:import&lt;/code&gt; and &lt;code&gt;:export&lt;/code&gt;) without using further &lt;code&gt;CSS Module&lt;/code&gt; functionality by setting &lt;code&gt;compileType&lt;/code&gt; option for all files that do not match &lt;code&gt;*.module.scss&lt;/code&gt; naming convention. This is for reference as having &lt;code&gt;ICSS&lt;/code&gt; features applied to all files was default &lt;code&gt;css-loader&lt;/code&gt; behavior before v4. Meanwhile all files matching &lt;code&gt;*.module.scss&lt;/code&gt; are treated as &lt;code&gt;CSS Modules&lt;/code&gt; in this example.</source>
          <target state="translated">The following setup is an example of allowing &lt;code&gt;Interoperable CSS&lt;/code&gt; features only (such as &lt;code&gt;:import&lt;/code&gt; and &lt;code&gt;:export&lt;/code&gt; ) without using further &lt;code&gt;CSS Module&lt;/code&gt; functionality by setting &lt;code&gt;compileType&lt;/code&gt; option for all files that do not match &lt;code&gt;*.module.scss&lt;/code&gt; naming convention. This is for reference as having &lt;code&gt;ICSS&lt;/code&gt; features applied to all files was default &lt;code&gt;css-loader&lt;/code&gt; behavior before v4. Meanwhile all files matching &lt;code&gt;*.module.scss&lt;/code&gt; are treated as &lt;code&gt;CSS Modules&lt;/code&gt; in this example.</target>
        </trans-unit>
        <trans-unit id="1c2f6bec656ab12985a3d65fbee3d5f476e86100" translate="yes" xml:space="preserve">
          <source>The following steps allow modules to be swapped in and out of an application:</source>
          <target state="translated">다음 단계를 통해 모듈을 응용 프로그램 내외부로 교환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb00badcb3449f08d67086ef9131607ceef57096" translate="yes" xml:space="preserve">
          <source>The following steps are especially useful in &lt;em&gt;development&lt;/em&gt;.</source>
          <target state="translated">다음 단계는 특히 &lt;em&gt;개발에&lt;/em&gt; 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="4308c488d5fc825f759c2149b59c6977cd8020af" translate="yes" xml:space="preserve">
          <source>The following steps are especially useful in &lt;em&gt;production&lt;/em&gt;.</source>
          <target state="translated">다음 단계는 특히 &lt;em&gt;생산에&lt;/em&gt; 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="5f0e7e81e5d142099d152c7594561b3e8c300b10" translate="yes" xml:space="preserve">
          <source>The following steps can increase resolving speed:</source>
          <target state="translated">The following steps can increase resolving speed:</target>
        </trans-unit>
        <trans-unit id="b7cdaed98fa9728f3dcb7fbd1bd9e9dde0fef43e" translate="yes" xml:space="preserve">
          <source>The following steps can increase the speed of resolving:</source>
          <target state="translated">다음 단계는 해결 속도를 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78064ebad412dafd7f97cab0302ad0ffbb211b83" translate="yes" xml:space="preserve">
          <source>The following string values are supported via &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js&quot;&gt;&lt;code&gt;WebpackOptionsApply&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 문자열 값은 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js&quot;&gt; &lt;code&gt;WebpackOptionsApply&lt;/code&gt; &lt;/a&gt; 를 통해 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="58f9d8bd855a58eaf844f5bdd0eb9e6333c59dbe" translate="yes" xml:space="preserve">
          <source>The following string values are supported:</source>
          <target state="translated">다음 문자열 값이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="292d4638ace13f846ef8f5e4299bbc764dab8797" translate="yes" xml:space="preserve">
          <source>The following substitutions are available in template strings (via webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/ModuleFilenameHelpers.js&quot;&gt;&lt;code&gt;ModuleFilenameHelpers&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">다음 대체는 템플릿 문자열에서 사용할 수 있습니다 (웹팩의 내부 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/ModuleFilenameHelpers.js&quot;&gt; &lt;code&gt;ModuleFilenameHelpers&lt;/code&gt; 사용&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d43ba6fd87e03b99bf4c08264e8937a094bc5a6c" translate="yes" xml:space="preserve">
          <source>The following substitutions are available in template strings (via webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;&lt;code&gt;TemplatedPathPlugin&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">웹 문자열의 내부 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt; &lt;code&gt;TemplatedPathPlugin&lt;/code&gt; 을&lt;/a&gt; 통해 템플리트 문자열에서 다음 대체를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="956e6a8d3eefecc9bc6b08a8650be6b46a2d275b" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;asset&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;asset&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="fea29774d87f3fe2af810c0c9e39d683fa3cdbf5" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;import&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;import&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="3944714b7516accbbd62efb5a7f911578d6fc4df" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;require&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;require&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="20e048fd4c527d735ff7fb116aca6ca9beb07204" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;script&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;script&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="5b3519b0a4ff61bc242bed7ac2e9ee3829a5393a" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;style&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;style&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="00c83362a2351fb229e86b82b5cc384b190a6627" translate="yes" xml:space="preserve">
          <source>The following syntaxes are accepted...</source>
          <target state="translated">다음과 같은 구문이 허용됩니다 ...</target>
        </trans-unit>
        <trans-unit id="cdcae432bd2b6c399318440c9434100436e71338" translate="yes" xml:space="preserve">
          <source>The following table explains other cases:</source>
          <target state="translated">다음 표는 다른 경우에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="e8d6fb0b5a199393021b21ed46adcf28660dbc55" translate="yes" xml:space="preserve">
          <source>The following tools have certain problems that can degrade build performance.</source>
          <target state="translated">다음 도구에는 빌드 성능을 저하시킬 수있는 특정 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8de98242ee7b3d02c80fdb699692121f062581da" translate="yes" xml:space="preserve">
          <source>The following tools have certain problems that can degrade build performance:</source>
          <target state="translated">The following tools have certain problems that can degrade build performance:</target>
        </trans-unit>
        <trans-unit id="86a17425a417d3f21dc03cbde46985454bf993c4" translate="yes" xml:space="preserve">
          <source>The following tools support custom conditions:</source>
          <target state="translated">The following tools support custom conditions:</target>
        </trans-unit>
        <trans-unit id="3b4ce38a560cabaa301d282bfce9aac7becbf9e2" translate="yes" xml:space="preserve">
          <source>The following utilities improve performance by compiling and serving assets in memory rather than writing to disk:</source>
          <target state="translated">다음 유틸리티는 디스크에 쓰지 않고 메모리에서 자산을 컴파일하고 제공하여 성능을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="2936d5adb9e240b503a66e2c87b97599cd38ff58" translate="yes" xml:space="preserve">
          <source>The following values are supported:</source>
          <target state="translated">다음과 같은 값이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b1a4d3fc2e43494645fd26eb34e527854b882091" translate="yes" xml:space="preserve">
          <source>The format of chunks (formats included by default are 'array-push' (web/WebWorker), 'commonjs' (node.js), but others might be added by plugins).</source>
          <target state="translated">The format of chunks (formats included by default are 'array-push' (web/WebWorker), 'commonjs' (node.js), but others might be added by plugins).</target>
        </trans-unit>
        <trans-unit id="adb760b46a74652ab1343797c2772e58108b9d71" translate="yes" xml:space="preserve">
          <source>The full hash of compilation</source>
          <target state="translated">The full hash of compilation</target>
        </trans-unit>
        <trans-unit id="fbd2a40b20776c068f57487a9554e83f00e6ea55" translate="yes" xml:space="preserve">
          <source>The full list of available modes and their behavior is described in &lt;a href=&quot;#import-1&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">The full list of available modes and their behavior is described in &lt;a href=&quot;#import-1&quot;&gt; &lt;code&gt;import()&lt;/code&gt; &lt;/a&gt; documentation.</target>
        </trans-unit>
        <trans-unit id="02d451fad6416a0cc511a895bf55cb6593cb7b80" translate="yes" xml:space="preserve">
          <source>The function must return one of the values:</source>
          <target state="translated">The function must return one of the values:</target>
        </trans-unit>
        <trans-unit id="f119c0fa5b73286d19fec4335349b142a571bc1e" translate="yes" xml:space="preserve">
          <source>The function normalizes configuration (converts plugins names and options to &lt;code&gt;Function&lt;/code&gt;s) for using in &lt;code&gt;imagemin&lt;/code&gt; package directly.</source>
          <target state="translated">The function normalizes configuration (converts plugins names and options to &lt;code&gt;Function&lt;/code&gt; s) for using in &lt;code&gt;imagemin&lt;/code&gt; package directly.</target>
        </trans-unit>
        <trans-unit id="0d4c0f2596233928ed15a307410bb9cbcb4a1763" translate="yes" xml:space="preserve">
          <source>The function receives three arguments:</source>
          <target state="translated">The function receives three arguments:</target>
        </trans-unit>
        <trans-unit id="ca15d1d0d8aa11d93d6ca1a567cc9ff1370ac2c0" translate="yes" xml:space="preserve">
          <source>The function, which can return filename [string]</source>
          <target state="translated">파일 이름 [문자열]을 반환 할 수있는 함수</target>
        </trans-unit>
        <trans-unit id="59c7450e94d45d1d7509992f8d7fb34895023310" translate="yes" xml:space="preserve">
          <source>The generated output will be defined with the name &quot;MyLibrary&quot;, i.e.</source>
          <target state="translated">생성 된 출력은 &quot;MyLibrary&quot;라는 이름으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="175fff95d48e044762395bdd73eb8a40d3c60bc6" translate="yes" xml:space="preserve">
          <source>The global variable used by webpack for loading of chunks.</source>
          <target state="translated">The global variable used by webpack for loading of chunks.</target>
        </trans-unit>
        <trans-unit id="4ee640bb2b9cec6c071382b82b303d30815f1e04" translate="yes" xml:space="preserve">
          <source>The goal of CommonJS is to specify an ecosystem for JavaScript outside the browser. The following CommonJS methods are supported by webpack:</source>
          <target state="translated">CommonJS의 목표는 브라우저 외부에서 JavaScript를위한 에코 시스템을 지정하는 것입니다. 다음과 같은 CommonJS 메소드가 웹팩에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="89250071811de7ae2e1e9e79e9c0f6750a60c64b" translate="yes" xml:space="preserve">
          <source>The goals of &lt;em&gt;development&lt;/em&gt; and &lt;em&gt;production&lt;/em&gt; builds differ greatly. In &lt;em&gt;development&lt;/em&gt;, we want strong source mapping and a localhost server with live reloading or hot module replacement. In &lt;em&gt;production&lt;/em&gt;, our goals shift to a focus on minified bundles, lighter weight source maps, and optimized assets to improve load time. With this logical separation at hand, we typically recommend writing &lt;strong&gt;separate webpack configurations&lt;/strong&gt; for each environment.</source>
          <target state="translated">&lt;em&gt;개발&lt;/em&gt; 및 &lt;em&gt;생산&lt;/em&gt; 빌드 의 목표는 크게 다릅니다. 에서 &lt;em&gt;개발&lt;/em&gt; , 우리는 강력한 소스 매핑 및 라이브 다시로드 또는 뜨거운 모듈 교체와 함께 로컬 호스트 서버를합니다. 에서 &lt;em&gt;생산&lt;/em&gt; , 우리의 목표는로드 시간을 개선하기 위해 축소 된 번들, 가벼운 무게 소스지도, 최적화 된 자산을 중심으로 이동. 이러한 논리적 분리가 가능 &lt;strong&gt;하므로&lt;/strong&gt; 일반적으로 각 환경에 대해 &lt;strong&gt;별도의 웹팩 구성&lt;/strong&gt; 을 작성하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7be5fa44f2388062fa483ac74de7f28c7276fcd4" translate="yes" xml:space="preserve">
          <source>The good news for web projects is that modules are becoming an official feature in the ECMAScript standard. However, browser support is incomplete and bundling is still faster and currently recommended over these early module implementations.</source>
          <target state="translated">The good news for web projects is that modules are becoming an official feature in the ECMAScript standard. However, browser support is incomplete and bundling is still faster and currently recommended over these early module implementations.</target>
        </trans-unit>
        <trans-unit id="e60ad30497663537eaf49d2e92c1776638d808a4" translate="yes" xml:space="preserve">
          <source>The good news is that, while there is some overlap, task runners and bundlers can play well together if approached in the right way. This guide provides a high-level overview of how webpack can be integrated into some of the more popular task runners.</source>
          <target state="translated">좋은 소식은 겹치는 부분이 있지만 올바른 방식으로 접근하면 작업 주자와 번 들러가 함께 재생할 수 있다는 것입니다. 이 안내서는 웹팩을 널리 사용되는 일부 작업 러너에 통합하는 방법에 대한 고급 개요를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="29bce317db54dddeab6ad47336eb7a5f82c4b936" translate="yes" xml:space="preserve">
          <source>The guides get more advanced as you go on. Most serve as a starting point, and once completed you should feel more comfortable diving into the actual &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">The guides get more advanced as you go on. Most serve as a starting point, and once completed you should feel more comfortable diving into the actual &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6791ae6e37e5d1649383b3ad158ea70d586c7f09" translate="yes" xml:space="preserve">
          <source>The guides get more and more advanced as you go on. Most serve as a starting point, and once completed you should feel more comfortable diving into the actual &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">진행하면서 가이드가 점점 더 고급화됩니다. 대부분은 출발점으로 사용되며, 완료되면 실제 &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;문서&lt;/a&gt; 를보다 편안하게 다이빙 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17a8abbce059f5dd51ed7fe6e3a105c0703d77b4" translate="yes" xml:space="preserve">
          <source>The hash of options.content (Buffer) (by default it's the hex digest of the hash).</source>
          <target state="translated">The hash of options.content (Buffer) (by default it's the hex digest of the hash).</target>
        </trans-unit>
        <trans-unit id="4ed4a6a2f4161a7511f3c084677b67ac58fdbd34" translate="yes" xml:space="preserve">
          <source>The hash of the chunk content</source>
          <target state="translated">청크 내용의 해시</target>
        </trans-unit>
        <trans-unit id="9f45f1f5064788d5bb5bc67a87612b757a73368f" translate="yes" xml:space="preserve">
          <source>The hash of the chunk, including all elements of the chunk</source>
          <target state="translated">The hash of the chunk, including all elements of the chunk</target>
        </trans-unit>
        <trans-unit id="2149de6ebc9ce8fd4c0f28e8775c835c3d89a631" translate="yes" xml:space="preserve">
          <source>The hash of the chunk, including only elements of this content type (affected by &lt;code&gt;optimization.realContentHash&lt;/code&gt;)</source>
          <target state="translated">The hash of the chunk, including only elements of this content type (affected by &lt;code&gt;optimization.realContentHash&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fa043967113f8c63dae3857d4d86e057b2869bf7" translate="yes" xml:space="preserve">
          <source>The hash of the content of the module</source>
          <target state="translated">The hash of the content of the module</target>
        </trans-unit>
        <trans-unit id="8726aff8400cc61a3bd93b0c1e76bf262f43fd0b" translate="yes" xml:space="preserve">
          <source>The hash of the module</source>
          <target state="translated">The hash of the module</target>
        </trans-unit>
        <trans-unit id="5cbf4bef2adda69cc22f1bbb6067da1d45217eae" translate="yes" xml:space="preserve">
          <source>The hash of the module identifier</source>
          <target state="translated">모듈 식별자의 해시</target>
        </trans-unit>
        <trans-unit id="0463d3a8c9f9c6747f6d1cdde4358b6206cbd3fe" translate="yes" xml:space="preserve">
          <source>The hashing algorithm to use, defaults to &lt;code&gt;'md4'&lt;/code&gt;. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt;&lt;code&gt;crypto.createHash&lt;/code&gt;&lt;/a&gt; are supported. Since &lt;code&gt;4.0.0-alpha2&lt;/code&gt;, the &lt;code&gt;hashFunction&lt;/code&gt; can now be a constructor to a custom hash function. You can provide a non-crypto hash function for performance reasons.</source>
          <target state="translated">사용할 해시 알고리즘의 기본값은 &lt;code&gt;'md4'&lt;/code&gt; 입니다. Node.JS의 &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt; &lt;code&gt;crypto.createHash&lt;/code&gt; 의&lt;/a&gt; 모든 기능 이 지원됩니다. 이후 &lt;code&gt;4.0.0-alpha2&lt;/code&gt; 의 &lt;code&gt;hashFunction&lt;/code&gt; 는 이제 사용자 정의 해시 함수에 생성자가 될 수 있습니다. 성능상의 이유로 비 암호화 해시 기능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3d044d7a47605be75dda574e5d35e32ce48ea03" translate="yes" xml:space="preserve">
          <source>The hashing algorithm to use. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt;&lt;code&gt;crypto.createHash&lt;/code&gt;&lt;/a&gt; are supported. Since &lt;code&gt;4.0.0-alpha2&lt;/code&gt;, the &lt;code&gt;hashFunction&lt;/code&gt; can now be a constructor to a custom hash function. You can provide a non-crypto hash function for performance reasons.</source>
          <target state="translated">The hashing algorithm to use. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt; &lt;code&gt;crypto.createHash&lt;/code&gt; &lt;/a&gt; are supported. Since &lt;code&gt;4.0.0-alpha2&lt;/code&gt; , the &lt;code&gt;hashFunction&lt;/code&gt; can now be a constructor to a custom hash function. You can provide a non-crypto hash function for performance reasons.</target>
        </trans-unit>
        <trans-unit id="878c17956b8381cfc39a06c30d11d4d9bbcdeec7" translate="yes" xml:space="preserve">
          <source>The html-loader will parse the URLs, require the images and everything you expect. The extract loader will parse the javascript back into a proper html file, ensuring images are required and point to proper path, and the file loader will write the &lt;em&gt;.html&lt;/em&gt; file for you. Example:</source>
          <target state="translated">html-loader는 URL을 구문 분석하고 이미지와 필요한 모든 것을 요구합니다. 추출 로더는 자바 스크립트를 올바른 html 파일로 다시 구문 분석하여 이미지가 필요하고 올바른 경로를 가리 키도록하고 파일 로더가 &lt;em&gt;.html&lt;/em&gt; 파일을 작성합니다. 예:</target>
        </trans-unit>
        <trans-unit id="cb4462897b8bd3c12c191602b87d8b211ce96cd9" translate="yes" xml:space="preserve">
          <source>The imported &lt;code&gt;webpack&lt;/code&gt; function is fed a webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;Configuration Object&lt;/a&gt; and runs the webpack compiler if a callback function is provided:</source>
          <target state="translated">가져온 &lt;code&gt;webpack&lt;/code&gt; 함수에는 웹팩 &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;구성 오브젝트&lt;/a&gt; 가 제공되며 콜백 함수가 제공되는 경우 웹팩 컴파일러를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="33a4cf0e8036e462ed9b4942a05234b23e76115e" translate="yes" xml:space="preserve">
          <source>The imports loader allows you to use modules that depend on specific global variables.</source>
          <target state="translated">가져 오기 로더를 사용하면 특정 전역 변수에 의존하는 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7185d7d5136017864a86f672276402ec9aa6fdb6" translate="yes" xml:space="preserve">
          <source>The index in the loaders array of the current loader.</source>
          <target state="translated">현재 로더의 로더 배열에있는 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="622eb7846c820895ecfaad87d57f13ab3bfdab01" translate="yes" xml:space="preserve">
          <source>The index of a function contained within &lt;code&gt;options.transforms&lt;/code&gt; which to use to transform the target file(s).</source>
          <target state="translated">&lt;code&gt;options.transforms&lt;/code&gt; 에 포함 된 함수의 색인으로 대상 파일을 변환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f184dd511af3ce37021703d7bf7ff188cfdcd35" translate="yes" xml:space="preserve">
          <source>The inner workings here are heavily inspired by &lt;a href=&quot;worker-loader&quot;&gt;worker-loader&lt;/a&gt;. It's worth a read!</source>
          <target state="translated">내부 작업은 &lt;a href=&quot;worker-loader&quot;&gt;worker-loader에서&lt;/a&gt; 큰 영향을받습니다 . 읽을 가치가 있습니다!</target>
        </trans-unit>
        <trans-unit id="43e822b9d87b538c0f6aa00d47a247647f62e872" translate="yes" xml:space="preserve">
          <source>The internal &lt;code&gt;LabeledModulesPlugin&lt;/code&gt; enables you to use the following methods for exporting and requiring within your modules:</source>
          <target state="translated">내부 &lt;code&gt;LabeledModulesPlugin&lt;/code&gt; 을 사용하면 모듈 내에서 내보내기 및 요구에 다음 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4301641a17ae1438d40dabf59f4701492ac2fb96" translate="yes" xml:space="preserve">
          <source>The internal chunk loading function. Takes two arguments:</source>
          <target state="translated">내부 청크 로딩 기능. 두 가지 주장을 취합니다.</target>
        </trans-unit>
        <trans-unit id="3efc7bf124d5e8cb340af1ccedcabdd90e4fa1d3" translate="yes" xml:space="preserve">
          <source>The issuer: An absolute path to the file of the module which requested the resource. It's the location of the import.</source>
          <target state="translated">발급자 : 리소스를 요청한 모듈 파일의 절대 경로입니다. 가져 오기 위치입니다.</target>
        </trans-unit>
        <trans-unit id="e0f5006bb4c868b9ea27a3396647799ddfdd1706" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;main&lt;/code&gt; refers to the &lt;a href=&quot;https://docs.npmjs.com/files/package.json#main&quot;&gt;standard from &lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;module&lt;/code&gt; to &lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md&quot;&gt;a&lt;/a&gt;&lt;a href=&quot;https://github.com/rollup/rollup/wiki/pkg.module&quot;&gt;proposal&lt;/a&gt; to allow the JavaScript ecosystem upgrade to use ES2015 modules without breaking backwards compatibility.</source>
          <target state="translated">주요 &lt;code&gt;main&lt;/code&gt; 받는 의미 &lt;a href=&quot;https://docs.npmjs.com/files/package.json#main&quot;&gt;에서 표준 &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;module&lt;/code&gt; 에 &lt;a href=&quot;https://github.com/rollup/rollup/wiki/pkg.module&quot;&gt;제안&lt;/a&gt; 자바 스크립트 생태계가 이전 버전과의 호환성을 깨지 않고 ES2015 모듈을 사용하도록 업그레이드 할 수 있도록.&lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md&quot;&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f081d9f5b8fdd6618bb1b1f831080b06f01eb1f" translate="yes" xml:space="preserve">
          <source>The keyword here is &lt;strong&gt;statically&lt;/strong&gt;. A normal &lt;code&gt;import&lt;/code&gt; statement cannot be used dynamically within other logic or contain variables. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;spec&lt;/a&gt; for more information and &lt;code&gt;import()&lt;/code&gt; below for dynamic usage.</source>
          <target state="translated">The keyword here is &lt;strong&gt;statically&lt;/strong&gt;. A normal &lt;code&gt;import&lt;/code&gt; statement cannot be used dynamically within other logic or contain variables. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;spec&lt;/a&gt; for more information and &lt;code&gt;import()&lt;/code&gt; below for dynamic usage.</target>
        </trans-unit>
        <trans-unit id="e003c18060496c40fdaa02f7ca1fc43ec879fc1c" translate="yes" xml:space="preserve">
          <source>The keyword here is &lt;strong&gt;statically&lt;/strong&gt;. Normal &lt;code&gt;import&lt;/code&gt; statement cannot be used dynamically within other logic or contain variables. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;spec&lt;/a&gt; for more information and &lt;code&gt;import()&lt;/code&gt; below for dynamic usage.</source>
          <target state="translated">키워드는 &lt;strong&gt;정적으로&lt;/strong&gt; 입니다. 일반 &lt;code&gt;import&lt;/code&gt; 문은 다른 논리 내에서 동적으로 사용되거나 변수를 포함 할 수 없습니다. 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;사양&lt;/a&gt; 을 참조하고 동적 사용에 대해서는 아래 &lt;code&gt;import()&lt;/code&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a9d54d05466f8e81e809ba86dee0999b728a7661" translate="yes" xml:space="preserve">
          <source>The latest webpack release is:</source>
          <target state="translated">최신 웹팩 릴리스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9d0658bcac0fb911632d057be396c56ab4c5cb81" translate="yes" xml:space="preserve">
          <source>The length of hashes (&lt;code&gt;[hash]&lt;/code&gt;, &lt;code&gt;[contenthash]&lt;/code&gt; or &lt;code&gt;[chunkhash]&lt;/code&gt;) can be specified using &lt;code&gt;[hash:16]&lt;/code&gt; (defaults to 20). Alternatively, specify &lt;a href=&quot;#outputhashdigestlength&quot;&gt;&lt;code&gt;output.hashDigestLength&lt;/code&gt;&lt;/a&gt; to configure the length globally.</source>
          <target state="translated">The length of hashes ( &lt;code&gt;[hash]&lt;/code&gt; , &lt;code&gt;[contenthash]&lt;/code&gt; or &lt;code&gt;[chunkhash]&lt;/code&gt; ) can be specified using &lt;code&gt;[hash:16]&lt;/code&gt; (defaults to 20). Alternatively, specify &lt;a href=&quot;#outputhashdigestlength&quot;&gt; &lt;code&gt;output.hashDigestLength&lt;/code&gt; &lt;/a&gt; to configure the length globally.</target>
        </trans-unit>
        <trans-unit id="5500211f9001a63bab0626a741e206c512be6985" translate="yes" xml:space="preserve">
          <source>The lengths of &lt;code&gt;[hash]&lt;/code&gt; and &lt;code&gt;[chunkhash]&lt;/code&gt; can be specified using &lt;code&gt;[hash:16]&lt;/code&gt; (defaults to 20). Alternatively, specify &lt;a href=&quot;#output-hashdigestlength&quot;&gt;&lt;code&gt;output.hashDigestLength&lt;/code&gt;&lt;/a&gt; to configure the length globally.</source>
          <target state="translated">&lt;code&gt;[hash]&lt;/code&gt; 및 &lt;code&gt;[chunkhash]&lt;/code&gt; 의 길이는 [hash &lt;code&gt;[hash:16]&lt;/code&gt; (기본값은 20)을 사용하여 지정할 수 있습니다 . 또는 &lt;a href=&quot;#output-hashdigestlength&quot;&gt; &lt;code&gt;output.hashDigestLength&lt;/code&gt; &lt;/a&gt; 를 지정 하여 길이를 전체적으로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="75512c1d03470514d5cf05338997168251cab9bd" translate="yes" xml:space="preserve">
          <source>The limit can be specified via loader options and defaults to no limit.</source>
          <target state="translated">제한은 로더 옵션을 통해 지정할 수 있으며 기본값은 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a10c0959fe08b11aa0f20df6f5f1b5ec7e7d9e80" translate="yes" xml:space="preserve">
          <source>The loader &lt;code&gt;eslint-loader&lt;/code&gt; will be deprecated soon, please use this plugin instead.</source>
          <target state="translated">The loader &lt;code&gt;eslint-loader&lt;/code&gt; will be deprecated soon, please use this plugin instead.</target>
        </trans-unit>
        <trans-unit id="c590edafbccf5a13ba624e90ca3c81af93245611" translate="yes" xml:space="preserve">
          <source>The loader &lt;strong&gt;automatically&lt;/strong&gt; searches for configuration files.</source>
          <target state="translated">The loader &lt;strong&gt;automatically&lt;/strong&gt; searches for configuration files.</target>
        </trans-unit>
        <trans-unit id="02717a18cddb27586d8d91e9a2358d691d091400" translate="yes" xml:space="preserve">
          <source>The loader allows you to write mixed HTML, CSS and JavaScript Polymer elements and still use the full webpack ecosystem including module bundling and code splitting.</source>
          <target state="translated">로더를 사용하면 혼합 HTML, CSS 및 JavaScript Polymer 요소를 작성하고 모듈 번들링 및 코드 분할을 포함한 전체 웹팩 에코 시스템을 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ee66e0520a3a70a7375d49641abef0787bb8e0c" translate="yes" xml:space="preserve">
          <source>The loader automatically inject source maps when previous loader emit them. Therefore, to generate source maps, set the &lt;code&gt;sourceMap&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; for the previous loader.</source>
          <target state="translated">The loader automatically inject source maps when previous loader emit them. Therefore, to generate source maps, set the &lt;code&gt;sourceMap&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; for the previous loader.</target>
        </trans-unit>
        <trans-unit id="ae685df6df8c28074d878a1e547602dd9d6ae5cd" translate="yes" xml:space="preserve">
          <source>The loader context represents the properties that are available inside of a loader assigned to the &lt;code&gt;this&lt;/code&gt; property.</source>
          <target state="translated">로더의 콘텍스트는 할당 된 로더 가능한 내부에 나타내는 속성 &lt;code&gt;this&lt;/code&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="98992f65d6c9889f7c07d0bc0dfd8b5a0e2d752d" translate="yes" xml:space="preserve">
          <source>The loader could look like this:</source>
          <target state="translated">The loader could look like this:</target>
        </trans-unit>
        <trans-unit id="dc28a2430b76edc60a5453ebccdb80a69e91a904" translate="yes" xml:space="preserve">
          <source>The loader generate this:</source>
          <target state="translated">The loader generate this:</target>
        </trans-unit>
        <trans-unit id="fcf67d9606614595aba3d7371f19e9afae35cf8d" translate="yes" xml:space="preserve">
          <source>The loader generate:</source>
          <target state="translated">The loader generate:</target>
        </trans-unit>
        <trans-unit id="6850229fa73c51d30b9860ce808297b30b581ca8" translate="yes" xml:space="preserve">
          <source>The loader inject styles like:</source>
          <target state="translated">The loader inject styles like:</target>
        </trans-unit>
        <trans-unit id="f8f37428026e9b156a0238193c78b0e4ddb2426b" translate="yes" xml:space="preserve">
          <source>The loader path in the error is displayed since webpack 4.12</source>
          <target state="translated">The loader path in the error is displayed since webpack 4.12</target>
        </trans-unit>
        <trans-unit id="d03169a0e1bc93b67ce76a356e5aa2a01a1c77e1" translate="yes" xml:space="preserve">
          <source>The loader processes Polymer 3 template elements to minify the html and add images, fonts and imported stylesheets to the webpack dependency graph.</source>
          <target state="translated">The loader processes Polymer 3 template elements to minify the html and add images, fonts and imported stylesheets to the webpack dependency graph.</target>
        </trans-unit>
        <trans-unit id="607e721094d3631e0620ceb231f0a7e78b6a13d9" translate="yes" xml:space="preserve">
          <source>The loader replaces local selectors with unique identifiers. The choosen unique identifiers are exported by the module.</source>
          <target state="translated">로더는 로컬 선택기를 고유 식별자로 대체합니다. 선택한 고유 식별자는 모듈에서 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="12c3056a92f9c4c42bdf9f8f6c031124f4fc2fc1" translate="yes" xml:space="preserve">
          <source>The loader replaces local selectors with unique identifiers. The chosen unique identifiers are exported by the module.</source>
          <target state="translated">The loader replaces local selectors with unique identifiers. The chosen unique identifiers are exported by the module.</target>
        </trans-unit>
        <trans-unit id="299350ec237fdcb85e12d63661c686bb20a1954e" translate="yes" xml:space="preserve">
          <source>The loader supports all options supported by &lt;code&gt;istanbul-lib-instrument&lt;/code&gt;</source>
          <target state="translated">로더는 &lt;code&gt;istanbul-lib-instrument&lt;/code&gt; 가 지원하는 모든 옵션을 지원 합니다</target>
        </trans-unit>
        <trans-unit id="b31bd1bb8fc2430ef42ba02f03db77c3e1639cff" translate="yes" xml:space="preserve">
          <source>The loader transforms your components:</source>
          <target state="translated">로더는 컴포넌트를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1aeead07c2f08f9b8fc8d5b0f49d1e895dc026c7" translate="yes" xml:space="preserve">
          <source>The loader will only replace a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; if the href is a relative path. Any link attempting to access an external link i.e. &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt; will not be replaced.</source>
          <target state="translated">href가 상대 경로 인 경우 로더는 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 만 대체합니다 . 외부 링크 (예 : &lt;code&gt;http&lt;/code&gt; , &lt;code&gt;https&lt;/code&gt; 또는 &lt;code&gt;//&lt;/code&gt; ) 에 액세스하려는 링크 는 대체되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64ad8874256193d8fad16b6cb03431251ac206d1" translate="yes" xml:space="preserve">
          <source>The loader will search up the directory tree for configuration in the following places:</source>
          <target state="translated">The loader will search up the directory tree for configuration in the following places:</target>
        </trans-unit>
        <trans-unit id="ff94098ec9e21443e23e9b6ad5f42779492bd9ea" translate="yes" xml:space="preserve">
          <source>The main parts</source>
          <target state="translated">The main parts</target>
        </trans-unit>
        <trans-unit id="50aa09ae1377da238a1a8574aee2960a5a76e525" translate="yes" xml:space="preserve">
          <source>The manifest contains the new compilation hash and a list of all updated chunks. Each of these chunks contains the new code for all updated modules (or a flag indicating that the module was removed).</source>
          <target state="translated">매니페스트에는 새로운 컴파일 해시와 모든 업데이트 된 청크 목록이 포함되어 있습니다. 이러한 각 청크에는 업데이트 된 모든 모듈에 대한 새 코드 (또는 모듈이 제거되었음을 나타내는 플래그)가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="22f4b76b689d538d97a9f56b12c6f429c5ca6101" translate="yes" xml:space="preserve">
          <source>The manifest data can be extracted into a json file for easy consumption using the &lt;a href=&quot;https://github.com/danethurber/webpack-manifest-plugin&quot;&gt;&lt;code&gt;WebpackManifestPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/danethurber/webpack-manifest-plugin&quot;&gt; &lt;code&gt;WebpackManifestPlugin&lt;/code&gt; 을&lt;/a&gt; 사용하면 매니페스트 데이터를 json 파일로 추출하여 쉽게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4adb149cac28b10ad6472a4476aff1c8179b51c" translate="yes" xml:space="preserve">
          <source>The manifest data can be extracted into a json file for easy consumption using the &lt;a href=&quot;https://github.com/shellscape/webpack-manifest-plugin&quot;&gt;&lt;code&gt;WebpackManifestPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The manifest data can be extracted into a json file for easy consumption using the &lt;a href=&quot;https://github.com/shellscape/webpack-manifest-plugin&quot;&gt; &lt;code&gt;WebpackManifestPlugin&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7fcf4844a873556aa5a937dd01b092ce6a741e02" translate="yes" xml:space="preserve">
          <source>The message should contain the following fields:</source>
          <target state="translated">The message should contain the following fields:</target>
        </trans-unit>
        <trans-unit id="8e7bee649828a4b2a2df4403824fcefa6e0eab7e" translate="yes" xml:space="preserve">
          <source>The method to load chunks (methods included by default are 'jsonp' (web), 'importScripts' (WebWorker), 'require' (sync node.js), 'async-node' (async node.js), but others might be added by plugins).</source>
          <target state="translated">The method to load chunks (methods included by default are 'jsonp' (web), 'importScripts' (WebWorker), 'require' (sync node.js), 'async-node' (async node.js), but others might be added by plugins).</target>
        </trans-unit>
        <trans-unit id="a7f574fb0ede81d5ac10e894649b28adefcada6b" translate="yes" xml:space="preserve">
          <source>The minimum requirement for the &lt;code&gt;output&lt;/code&gt; property in your webpack configuration is to set its value to an object and provide an &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; to use for the output file(s):</source>
          <target state="translated">The minimum requirement for the &lt;code&gt;output&lt;/code&gt; property in your webpack configuration is to set its value to an object and provide an &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; to use for the output file(s):</target>
        </trans-unit>
        <trans-unit id="ca8c533ca9e0eeb7b0f1a5cf47de1c99d487b8a5" translate="yes" xml:space="preserve">
          <source>The minimum requirements for the &lt;code&gt;output&lt;/code&gt; property in your webpack config is to set its value to an object including the following thing:</source>
          <target state="translated">webpack 설정에서 &lt;code&gt;output&lt;/code&gt; 속성 의 최소 ​​요구 사항 은 다음을 포함하여 값을 객체로 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8d79c212d54a66b872806296bbabd60c49c0ad07" translate="yes" xml:space="preserve">
          <source>The minimum supported Node.js version to run webpack 5 is 10.13.0 (LTS)</source>
          <target state="translated">The minimum supported Node.js version to run webpack 5 is 10.13.0 (LTS)</target>
        </trans-unit>
        <trans-unit id="f51cb967bd5a63ed817746d4a2210c7604937c57" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;https://nodejs.org/api/path.html#path_path_basename_path_ext&quot;&gt;basename&lt;/a&gt;</source>
          <target state="translated">모듈 &lt;a href=&quot;https://nodejs.org/api/path.html#path_path_basename_path_ext&quot;&gt;기본 이름&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cf9a0f6cdd1a3915e69f0d5d77882cc041b2b99" translate="yes" xml:space="preserve">
          <source>The module also validates found configurations against webpack's options schema to ensure that the configuration is correct before webpack attempts to use it.</source>
          <target state="translated">이 모듈은 또한 웹팩이 사용하기 전에 구성이 올바른지 확인하기 위해 웹팩의 옵션 스키마에 대해 찾은 구성의 유효성을 검증합니다.</target>
        </trans-unit>
        <trans-unit id="449ce0de57d3e2a0be319a99debc55b86880760c" translate="yes" xml:space="preserve">
          <source>The module filename</source>
          <target state="translated">모듈 파일 이름</target>
        </trans-unit>
        <trans-unit id="88e0aa6c2168cb0078e139454481c7292d3e21ab" translate="yes" xml:space="preserve">
          <source>The module identifier</source>
          <target state="translated">모듈 식별자</target>
        </trans-unit>
        <trans-unit id="90462cd9df48197a4f39715938a23e7e8c5fa7a7" translate="yes" xml:space="preserve">
          <source>The module is also tested with the following compilers:</source>
          <target state="translated">이 모듈은 다음 컴파일러로도 테스트됩니다.</target>
        </trans-unit>
        <trans-unit id="1635800c659f8343bb6f76cf0577b6d8050a774a" translate="yes" xml:space="preserve">
          <source>The module name</source>
          <target state="translated">모듈 이름</target>
        </trans-unit>
        <trans-unit id="afd3b0e2f82e2ca4daf7fc9a50ca4e0078eb08f5" translate="yes" xml:space="preserve">
          <source>The module query, i.e., the string following &lt;code&gt;?&lt;/code&gt; in the filename</source>
          <target state="translated">모듈 쿼리, 즉 &lt;code&gt;?&lt;/code&gt; 파일 이름에</target>
        </trans-unit>
        <trans-unit id="129e370a3b0c1b11ce05b9dc9f69f25d26a473b2" translate="yes" xml:space="preserve">
          <source>The module will get bundled like this:</source>
          <target state="translated">The module will get bundled like this:</target>
        </trans-unit>
        <trans-unit id="af18f009cb9333df7606f5912ce79a0a55814780" translate="yes" xml:space="preserve">
          <source>The modules namespace. This is usually the library name when building as a library, empty otherwise</source>
          <target state="translated">모듈 네임 스페이스 일반적으로 라이브러리로 빌드 할 때 라이브러리 이름이며, 그렇지 않으면 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="479f4a5514e62fd84fc68ed0da97f9dd5e36b267" translate="yes" xml:space="preserve">
          <source>The moral of the story is that there are a variety of ways to &lt;code&gt;hook&lt;/code&gt; into the &lt;code&gt;compiler&lt;/code&gt;, each one allowing your plugin to run as it sees fit.</source>
          <target state="translated">이야기의 교훈은에 다양한 방법이 있다는 것입니다 &lt;code&gt;hook&lt;/code&gt; 에 &lt;code&gt;compiler&lt;/code&gt; , 각각이 적절하게 인식하는 것과 동일한 플러그인 실행을 허용.</target>
        </trans-unit>
        <trans-unit id="ff7aa3f3b92830a27310d668b1d59b019023d65e" translate="yes" xml:space="preserve">
          <source>The most important part to take away from this document is that there are many different ways to format and style your webpack configuration. The key is to stick with something consistent that you and your team can understand and maintain.</source>
          <target state="translated">이 문서에서 제거해야 할 가장 중요한 부분은 웹팩 구성을 형식화하고 스타일을 지정하는 여러 가지 방법이 있다는 것입니다. 열쇠는 당신과 당신 팀이 이해하고 유지할 수있는 일관된 것을 고수하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a4b885c9fa2e8cc5ecd04b02c7caa6ce10feeb63" translate="yes" xml:space="preserve">
          <source>The n-th match obtained from matching the current file name against the &lt;code&gt;regExp&lt;/code&gt;.</source>
          <target state="translated">The n-th match obtained from matching the current file name against the &lt;code&gt;regExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d25fd948c0de18e0c4fa3e7b34e3ac980bb16168" translate="yes" xml:space="preserve">
          <source>The n-th match obtained from matching the current file name against the regExp</source>
          <target state="translated">현재 파일 이름과 regExp를 일치시켜 얻은 n 번째 일치</target>
        </trans-unit>
        <trans-unit id="cc5db90aa6110a9fe0f180ed9cf1911aa9dcb8db" translate="yes" xml:space="preserve">
          <source>The name in the global object. (&lt;strong&gt;required&lt;/strong&gt;).</source>
          <target state="translated">The name in the global object. (&lt;strong&gt;required&lt;/strong&gt;).</target>
        </trans-unit>
        <trans-unit id="54d6c009e997de6f2a825c25208aa6d12f233c15" translate="yes" xml:space="preserve">
          <source>The name of method/variable/etc of the module (the module must export it). If &lt;code&gt;moduleLocalName&lt;/code&gt; is specified, it exposes only the value of &lt;code&gt;moduleLocalName&lt;/code&gt;.</source>
          <target state="translated">The name of method/variable/etc of the module (the module must export it). If &lt;code&gt;moduleLocalName&lt;/code&gt; is specified, it exposes only the value of &lt;code&gt;moduleLocalName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6d69ad1e3c80b8f04fd87e8a4a8826c68af723f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;browserify&lt;/code&gt; transform you wish to use.</source>
          <target state="translated">사용하려는 &lt;code&gt;browserify&lt;/code&gt; 변환 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="304749ae004320108b2d78b3c7dc01ae50172e2e" translate="yes" xml:space="preserve">
          <source>The name of the JSONP function used for chunk loading</source>
          <target state="translated">청크로드에 사용되는 JSONP 함수의 이름</target>
        </trans-unit>
        <trans-unit id="2a6ad2fcd2bab8910f354fa27cb1be872df13236" translate="yes" xml:space="preserve">
          <source>The name of the chunk, if set, otherwise the ID of the chunk</source>
          <target state="translated">The name of the chunk, if set, otherwise the ID of the chunk</target>
        </trans-unit>
        <trans-unit id="237abd324292923b6851d79c3de40c9df8cfed7f" translate="yes" xml:space="preserve">
          <source>The name of the native &lt;code&gt;import()&lt;/code&gt; function. Can be used for polyfilling, e.g. with &lt;a href=&quot;https://github.com/GoogleChromeLabs/dynamic-import-polyfill&quot;&gt;&lt;code&gt;dynamic-import-polyfill&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The name of the native &lt;code&gt;import()&lt;/code&gt; function. Can be used for polyfilling, e.g. with &lt;a href=&quot;https://github.com/GoogleChromeLabs/dynamic-import-polyfill&quot;&gt; &lt;code&gt;dynamic-import-polyfill&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7f90780bc0827bafcd9895b011a83db2a55c2170" translate="yes" xml:space="preserve">
          <source>The name of the split chunk. Providing &lt;code&gt;false&lt;/code&gt; will keep the same name of the chunks so it doesn't change names unnecessarily. It is the recommended value for production builds.</source>
          <target state="translated">The name of the split chunk. Providing &lt;code&gt;false&lt;/code&gt; will keep the same name of the chunks so it doesn't change names unnecessarily. It is the recommended value for production builds.</target>
        </trans-unit>
        <trans-unit id="bd981b17d1b1d68795c45fcc3ef348cad98e993a" translate="yes" xml:space="preserve">
          <source>The name of the split chunk. Providing &lt;code&gt;true&lt;/code&gt; will automatically generate a name based on chunks and cache group key. Providing a string or function will allow you to use a custom name. If the name matches an entry point name, the entry point will be removed.</source>
          <target state="translated">스플릿 청크의 이름입니다. &lt;code&gt;true&lt;/code&gt; 를 제공 하면 청크 및 캐시 그룹 키를 기반으로 이름이 자동으로 생성됩니다. 문자열이나 함수를 제공하면 사용자 정의 이름을 사용할 수 있습니다. 이름이 진입 점 이름과 일치하면 진입 점이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="c08bdaf133b6ce0622cf9cabf9ca21c324824188" translate="yes" xml:space="preserve">
          <source>The names of the output files are affected by the two fields in the config:</source>
          <target state="translated">The names of the output files are affected by the two fields in the config:</target>
        </trans-unit>
        <trans-unit id="6d88cb86dabce438937b048a328ba5a2b474953b" translate="yes" xml:space="preserve">
          <source>The new option &lt;code&gt;workerChunkLoading&lt;/code&gt; controls the chunk loading of workers.</source>
          <target state="translated">The new option &lt;code&gt;workerChunkLoading&lt;/code&gt; controls the chunk loading of workers.</target>
        </trans-unit>
        <trans-unit id="a224dab019a12c6616086a01e53970556f85c794" translate="yes" xml:space="preserve">
          <source>The node API for &lt;code&gt;babel&lt;/code&gt; has been moved to &lt;code&gt;babel-core&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;babel&lt;/code&gt; 의 노드 API 가 &lt;code&gt;babel-core&lt;/code&gt; 로 이동되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8b076d7bad0e04847bd9e1af7347fa7a6f1a813c" translate="yes" xml:space="preserve">
          <source>The normal module loader is the function that actually loads all the modules in the module graph (one-by-one).</source>
          <target state="translated">일반 모듈 로더는 실제로 모듈 그래프의 모든 모듈을 하나씩로드하는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="4f1d19f9faa2d8d0722a0e1e23f02607e587a9c1" translate="yes" xml:space="preserve">
          <source>The object syntax is more verbose. However, this is the most scalable way of defining entry/entries in your application.</source>
          <target state="translated">객체 구문이 더 장황합니다. 그러나 이것은 응용 프로그램에서 항목 / 항목을 정의하는 가장 확장 가능한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5189c0c0e672b6631024f822bf03b16042fe64e1" translate="yes" xml:space="preserve">
          <source>The ones performed by &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;Terser&lt;/a&gt;</source>
          <target state="translated">The ones performed by &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;Terser&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5154efdb42e2cf3f6948724e000c0d2ef408a7f6" translate="yes" xml:space="preserve">
          <source>The ones performed by UglifyJS</source>
          <target state="translated">UglifyJS가 수행 한 것</target>
        </trans-unit>
        <trans-unit id="09bda428bc2298b8b7539bca171a741433df356b" translate="yes" xml:space="preserve">
          <source>The ones performed by webpack</source>
          <target state="translated">webpack에 의해 수행되는 것들</target>
        </trans-unit>
        <trans-unit id="4bfd2812dad7481714822f78b90c34b30c6ddfde" translate="yes" xml:space="preserve">
          <source>The only downside is that you have to refresh your browser in order to see the changes. It would be much nicer if that would happen automatically as well, so let's try &lt;code&gt;webpack-dev-server&lt;/code&gt; which will do exactly that.</source>
          <target state="translated">유일한 단점은 변경 사항을 보려면 브라우저를 새로 고쳐야한다는 것입니다. 자동으로 발생하면 훨씬 좋을 &lt;code&gt;webpack-dev-server&lt;/code&gt; 를 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="9970124635086c07500f383cb7b08142f6b26d7d" translate="yes" xml:space="preserve">
          <source>The only placeholders allowed here are &lt;code&gt;[id]&lt;/code&gt; and &lt;code&gt;[hash]&lt;/code&gt;, the default being:</source>
          <target state="translated">여기에서 허용되는 유일한 자리 표시자는 &lt;code&gt;[id]&lt;/code&gt; 및 &lt;code&gt;[hash]&lt;/code&gt; 이며 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="396320c0f7e143551169eeaada1f51e98c1dcf71" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;importLoaders&lt;/code&gt; allows you to configure how many loaders before &lt;code&gt;css-loader&lt;/code&gt; should be applied to &lt;code&gt;@import&lt;/code&gt;ed resources.</source>
          <target state="translated">The option &lt;code&gt;importLoaders&lt;/code&gt; allows you to configure how many loaders before &lt;code&gt;css-loader&lt;/code&gt; should be applied to &lt;code&gt;@import&lt;/code&gt; ed resources.</target>
        </trans-unit>
        <trans-unit id="d67957273bfa0ed43d68187e13270aeec8738d11" translate="yes" xml:space="preserve">
          <source>The option can be set to a function:</source>
          <target state="translated">옵션은 기능으로 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ca2f308489f3cb4c9753c5ecdf071432bde39e75" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; object can include the following properties:</source>
          <target state="translated">선택적 &lt;code&gt;options&lt;/code&gt; 오브젝트는 다음 특성을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="473ac21de70831732dc9c0261c986382ed098a3d" translate="yes" xml:space="preserve">
          <source>The order of evaluation is as follows:</source>
          <target state="translated">The order of evaluation is as follows:</target>
        </trans-unit>
        <trans-unit id="13d2b81e1335f4b4f1ec4bbe1102fcca1d0d4c92" translate="yes" xml:space="preserve">
          <source>The origin of the host header is kept when proxying by default, you can set &lt;code&gt;changeOrigin&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to override this behaviour. It is useful in some cases like using &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_hosting#Name-based&quot;&gt;name-based virtual hosted sites&lt;/a&gt;.</source>
          <target state="translated">The origin of the host header is kept when proxying by default, you can set &lt;code&gt;changeOrigin&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to override this behaviour. It is useful in some cases like using &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_hosting#Name-based&quot;&gt;name-based virtual hosted sites&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="31ed028b00e592643594c4ed1b5accbc50db710c" translate="yes" xml:space="preserve">
          <source>The output directory as an &lt;strong&gt;absolute&lt;/strong&gt; path.</source>
          <target state="translated">출력 경로 는 &lt;strong&gt;절대&lt;/strong&gt; 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3d39fb2dccd697e1450cca6b83dff11da76a49b5" translate="yes" xml:space="preserve">
          <source>The output file system you provide needs to be compatible with Node&amp;rsquo;s own &lt;a href=&quot;https://nodejs.org/api/fs.html&quot;&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/a&gt; interface, which requires the &lt;code&gt;mkdirp&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; helper methods.</source>
          <target state="translated">제공하는 출력 파일 시스템 은 &lt;code&gt;mkdirp&lt;/code&gt; 및 &lt;code&gt;join&lt;/code&gt; helper 메소드 가 필요한 Node의 자체 &lt;a href=&quot;https://nodejs.org/api/fs.html&quot;&gt; &lt;code&gt;fs&lt;/code&gt; &lt;/a&gt; 인터페이스 와 호환 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="97cfcf8af47a75058c06094f0eff166707f2e3f7" translate="yes" xml:space="preserve">
          <source>The output filename for additional chunks</source>
          <target state="translated">추가 청크의 출력 파일 이름</target>
        </trans-unit>
        <trans-unit id="267ff8bf01e4b400d5b984269cf06c01ded82d1d" translate="yes" xml:space="preserve">
          <source>The output filename for the SourceMap</source>
          <target state="translated">SourceMap의 출력 파일 이름</target>
        </trans-unit>
        <trans-unit id="a550b694aeec3339247a8ab6597116fefa3e71ad" translate="yes" xml:space="preserve">
          <source>The output filename of the bundle</source>
          <target state="translated">번들의 출력 파일 이름</target>
        </trans-unit>
        <trans-unit id="3c0e63df9024e8b756c01e045992b68f60f8d2a8" translate="yes" xml:space="preserve">
          <source>The output in webpack CLI will usually be:</source>
          <target state="translated">webpack CLI의 출력은 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="819f3534522471c5ea0e340b7688ce6e2986c41e" translate="yes" xml:space="preserve">
          <source>The output path for compilation assets</source>
          <target state="translated">컴파일 자산의 출력 경로</target>
        </trans-unit>
        <trans-unit id="5b70b3de61d22026ac799699106326bd75dce5d5" translate="yes" xml:space="preserve">
          <source>The output shown from running webpack in the guides may differ slightly from the output of newer versions. This is to be expected. As long as the bundles look similar and run correctly, then there shouldn't be any issues. If you do come across an example that seems to be broken by a new version, please &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/new/choose&quot;&gt;create an issue&lt;/a&gt; and we will do our best to resolve the discrepancy.</source>
          <target state="translated">The output shown from running webpack in the guides may differ slightly from the output of newer versions. This is to be expected. As long as the bundles look similar and run correctly, then there shouldn't be any issues. If you do come across an example that seems to be broken by a new version, please &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/new/choose&quot;&gt;create an issue&lt;/a&gt; and we will do our best to resolve the discrepancy.</target>
        </trans-unit>
        <trans-unit id="d5cc37f8dd4438bd7f133d72882c40b943ab6a5b" translate="yes" xml:space="preserve">
          <source>The output shown from running webpack in the guides may differ slightly from the output of newer versions. This is to be expected. As long as the bundles look similar and run correctly, then there shouldn't be any issues. If you do come across an example that seems to be broken by a new version, please create an issue and we will do our best to resolve the discrepancy.</source>
          <target state="translated">안내서에서 웹팩을 실행 한 결과는 최신 버전의 결과와 약간 다를 수 있습니다. 이것은 예상됩니다. 번들이 비슷하게 보이고 올바르게 실행되는 한 아무런 문제가 없습니다. 새 버전으로 인해 깨진 것처럼 보이는 예를 발견 한 경우 문제를 작성하십시오. 불일치를 해결하기 위해 최선을 다하겠습니다.</target>
        </trans-unit>
        <trans-unit id="d7864ae5ef3f0b7a2f3aacd5831a1402dbade9c3" translate="yes" xml:space="preserve">
          <source>The output will be:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ac4f620d683122799ae83cf0db02aafdf66bbefc" translate="yes" xml:space="preserve">
          <source>The overhead for each chunks is provided by &lt;code&gt;options.chunkOverhead&lt;/code&gt; or defaults to 10000. Entry chunks sizes are multiplied by &lt;code&gt;options.entryChunkMultiplicator&lt;/code&gt; (or 10).</source>
          <target state="translated">각 청크의 오버 헤드는 &lt;code&gt;options.chunkOverhead&lt;/code&gt; 에 의해 제공 되거나 기본값은 10000입니다. 엔트리 청크 크기에는 &lt;code&gt;options.entryChunkMultiplicator&lt;/code&gt; (또는 10) 가 곱해집니다 .</target>
        </trans-unit>
        <trans-unit id="1ffc4454ec79ccce614792e0786030f568ed2f17" translate="yes" xml:space="preserve">
          <source>The parent rule</source>
          <target state="translated">The parent rule</target>
        </trans-unit>
        <trans-unit id="48346b22135d618621c9aadccdd01f3e12289eee" translate="yes" xml:space="preserve">
          <source>The passphrase to a SSL PFX file.</source>
          <target state="translated">SSL PFX 파일의 암호입니다.</target>
        </trans-unit>
        <trans-unit id="1e43a8c0fc7e1a7585805dedf3aee4f47e59de85" translate="yes" xml:space="preserve">
          <source>The path at which to connect to the reloading socket.</source>
          <target state="translated">The path at which to connect to the reloading socket.</target>
        </trans-unit>
        <trans-unit id="c529bebc1780eafbec77ee894590317e3f962db7" translate="yes" xml:space="preserve">
          <source>The path of the resource relative to the webpack/config &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">The path of the resource relative to the webpack/config &lt;code&gt;context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="548967eebc482b64ca17750fb858725c0c97647c" translate="yes" xml:space="preserve">
          <source>The path of the resource relative to the webpack/config context.</source>
          <target state="translated">webpack / config 컨텍스트와 관련된 리소스의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="4c78e5d4376b497fb07e64c8073838d051cabd9d" translate="yes" xml:space="preserve">
          <source>The path used to resolve the file and any query params used on the first loader</source>
          <target state="translated">파일을 해결하는 데 사용되는 경로 및 첫 번째 로더에서 사용 된 모든 쿼리 매개 변수</target>
        </trans-unit>
        <trans-unit id="bc1748e296ada53329650dd514e6aaa68127c896" translate="yes" xml:space="preserve">
          <source>The path used to resolve the file without any query params</source>
          <target state="translated">쿼리 매개 변수없이 파일을 확인하는 데 사용되는 경로</target>
        </trans-unit>
        <trans-unit id="9e5f9675a08ce5ea1088e52bf48cd5689de48a41" translate="yes" xml:space="preserve">
          <source>The plugin adds extra functionality to support using Closure Library without Closure Compiler. This is typically used during development mode. When the webpack mode is &lt;code&gt;production&lt;/code&gt;, only dependency information is provided to webpack as Closure Compiler will natively recognize the Closure Library primitives.</source>
          <target state="translated">The plugin adds extra functionality to support using Closure Library without Closure Compiler. This is typically used during development mode. When the webpack mode is &lt;code&gt;production&lt;/code&gt; , only dependency information is provided to webpack as Closure Compiler will natively recognize the Closure Library primitives.</target>
        </trans-unit>
        <trans-unit id="b0beb6d3ff727ba937ba38f74f40c0298b2547ed" translate="yes" xml:space="preserve">
          <source>The plugin controls several compiler flags. The following flags should not be used in any mode:</source>
          <target state="translated">플러그인은 여러 컴파일러 플래그를 제어합니다. 다음 플래그는 어떤 모드에서도 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="9b11e7a0a95723e0438e10960cc010fdaf0de33c" translate="yes" xml:space="preserve">
          <source>The plugin interface allows users to tap directly into the compilation process. Plugins can register handlers on lifecycle hooks that run at different points throughout a compilation. When each hook is executed, the plugin will have full access to the current state of the compilation.</source>
          <target state="translated">플러그인 인터페이스를 통해 사용자는 컴파일 프로세스에 직접 액세스 할 수 있습니다. 플러그인은 컴파일 과정에서 다른 지점에서 실행되는 수명주기 후크에 핸들러를 등록 할 수 있습니다. 각 후크가 실행될 때 플러그인은 현재 컴파일 상태에 대한 전체 액세스 권한을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8cb735eab1dadd7d0602dbeaa5ae09439eae8e73" translate="yes" xml:space="preserve">
          <source>The plugin respect the &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; and using the &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin. Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation. Using &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; with enabled the &lt;code&gt;columns&lt;/code&gt; option enables source map generation.</source>
          <target state="translated">The plugin respect the &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; and using the &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin. Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation. Using &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; with enabled the &lt;code&gt;columns&lt;/code&gt; option enables source map generation.</target>
        </trans-unit>
        <trans-unit id="dd0b5545647ecbd76f1acc1cdea0d7a0971d8269" translate="yes" xml:space="preserve">
          <source>The plugin supports addons. For a list see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#plugins&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">The plugin supports addons. For a list see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#plugins&quot;&gt;documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a775448e75f0a6a6305222c79f1e629ab2a7f917" translate="yes" xml:space="preserve">
          <source>The plugin supports addons. For a list see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#third-party-addons&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">플러그인은 애드온을 지원합니다. 목록은 &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#third-party-addons&quot;&gt;설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="084e87901929b57ce0c6f43558d337b7b316c97b" translate="yes" xml:space="preserve">
          <source>The plugin was born with the purpose of solving some problems of the &lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt;.</source>
          <target state="translated">The plugin was born with the purpose of solving some problems of the &lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="72e5541fb2a2286d59ee1b4f3ca68de005f71fb2" translate="yes" xml:space="preserve">
          <source>The plugin will generate an HTML5 file for you that includes all your webpack bundles in the body using &lt;code&gt;script&lt;/code&gt; tags. Just add the plugin to your webpack config as follows:</source>
          <target state="translated">플러그인은 &lt;code&gt;script&lt;/code&gt; 태그를 사용하여 본문에 모든 웹팩 번들을 포함하는 HTML5 파일을 생성 합니다. 다음과 같이 웹팩 구성에 플러그인을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3ed2e536f6a275fdefcc3672ce01ba8618d99e24" translate="yes" xml:space="preserve">
          <source>The plugin will generate an HTML5 file for you that includes all your webpack bundles in the body using &lt;code&gt;script&lt;/code&gt; tags. Just add the plugin to your webpack configuration as follows:</source>
          <target state="translated">The plugin will generate an HTML5 file for you that includes all your webpack bundles in the body using &lt;code&gt;script&lt;/code&gt; tags. Just add the plugin to your webpack configuration as follows:</target>
        </trans-unit>
        <trans-unit id="b8fd921987632c61c52ab716b36342323513a6bc" translate="yes" xml:space="preserve">
          <source>The plugin's signature:</source>
          <target state="translated">The plugin's signature:</target>
        </trans-unit>
        <trans-unit id="23dbb446b166d9f36a900050b47f2d3ab1a6afa9" translate="yes" xml:space="preserve">
          <source>The plugins should be used if you run the bundle in a Node.js environment.</source>
          <target state="translated">Node.js 환경에서 번들을 실행하는 경우 플러그인을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6472732673cddb28039954632e457f1b136ce099" translate="yes" xml:space="preserve">
          <source>The point or points to enter the application. At this point the application starts executing. If an array is passed all items will be executed.</source>
          <target state="translated">응용 프로그램을 시작할 지점입니다. 이 시점에서 응용 프로그램이 실행되기 시작합니다. 배열이 전달되면 모든 항목이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="77842ff7ef8a6f211f993de98ff39ff3f8f41102" translate="yes" xml:space="preserve">
          <source>The point or points where to start the application bundling process. If an array is passed then all items will be processed.</source>
          <target state="translated">The point or points where to start the application bundling process. If an array is passed then all items will be processed.</target>
        </trans-unit>
        <trans-unit id="dbc0c621862eb10035838f19d0cd0730d204ee81" translate="yes" xml:space="preserve">
          <source>The polling interval for watching (also enable polling)</source>
          <target state="translated">시청을위한 폴링 간격 (폴링 사용 가능)</target>
        </trans-unit>
        <trans-unit id="96824a1c75210ba1ee627b59831b3225278df6a3" translate="yes" xml:space="preserve">
          <source>The pre-bundled version looks like this:</source>
          <target state="translated">The pre-bundled version looks like this:</target>
        </trans-unit>
        <trans-unit id="c11efdad805348277f06f272a3b9067b34acad77" translate="yes" xml:space="preserve">
          <source>The prefix length of the hash digest to use, defaults to &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">사용할 해시 다이제스트의 접두사 길이는 기본적으로 &lt;code&gt;20&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ee8c61dcc774a14c4a2fb47133c38c892d234e4" translate="yes" xml:space="preserve">
          <source>The prefix length of the hash digest to use.</source>
          <target state="translated">The prefix length of the hash digest to use.</target>
        </trans-unit>
        <trans-unit id="cfe78750ed83bb76df27ef5f00b72ad4f03945b1" translate="yes" xml:space="preserve">
          <source>The previous &lt;code&gt;Promise&lt;/code&gt; library is referenced and used before it is overridden.</source>
          <target state="translated">이전 &lt;code&gt;Promise&lt;/code&gt; 라이브러리는 재정의되기 전에 참조되고 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="392b59f1ddb5800fa5975bed7c141104e2fb531e" translate="yes" xml:space="preserve">
          <source>The process is calling the &lt;code&gt;accept&lt;/code&gt; handlers and re-executing self-accepted modules</source>
          <target state="translated">프로세스가 &lt;code&gt;accept&lt;/code&gt; 핸들러를 호출하고 자체 승인 모듈을 다시 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6521adb388facad5268660cc975a5e88f24fce11" translate="yes" xml:space="preserve">
          <source>The process is calling the &lt;code&gt;dispose&lt;/code&gt; handlers on the modules that will be replaced</source>
          <target state="translated">프로세스가 대체 될 모듈 에서 &lt;code&gt;dispose&lt;/code&gt; 핸들러를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ad173f9a14c3ddc81844b3f1137e787fca15d523" translate="yes" xml:space="preserve">
          <source>The process is checking for updates</source>
          <target state="translated">프로세스가 업데이트 확인 중입니다</target>
        </trans-unit>
        <trans-unit id="4759bc6ae5559dc09c35f8668d736f2ae3508206" translate="yes" xml:space="preserve">
          <source>The process is getting ready for the update (e.g. downloading the updated module)</source>
          <target state="translated">프로세스가 업데이트 준비 중입니다 (예 : 업데이트 된 모듈 다운로드)</target>
        </trans-unit>
        <trans-unit id="39b0a4c5329372428d4ac3023ae6b4a24f3adef6" translate="yes" xml:space="preserve">
          <source>The process is waiting for a call to &lt;code&gt;check&lt;/code&gt; (see below)</source>
          <target state="translated">프로세스가 통화 &lt;code&gt;check&lt;/code&gt; 기다리는 중입니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="da0d9c2bcbd05524ccb997bcead89cb202e57f85" translate="yes" xml:space="preserve">
          <source>The public path for the assets</source>
          <target state="translated">자산의 공개 경로</target>
        </trans-unit>
        <trans-unit id="cb86a22bbc4606b38567e92006152c02a74c9252" translate="yes" xml:space="preserve">
          <source>The query of the resource, i.e. &lt;code&gt;?foo=bar&lt;/code&gt;.</source>
          <target state="translated">The query of the resource, i.e. &lt;code&gt;?foo=bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e000088ad11082bbbe5a98b178ad198d4f76470" translate="yes" xml:space="preserve">
          <source>The query of the resource.</source>
          <target state="translated">자원의 질의.</target>
        </trans-unit>
        <trans-unit id="9ffb3bc216dc8a7e0d1139c2c7c1d7964b2fcb6e" translate="yes" xml:space="preserve">
          <source>The query parameter &lt;code&gt;importLoaders&lt;/code&gt; allows to configure how many loaders before &lt;code&gt;css-loader&lt;/code&gt; should be applied to &lt;code&gt;@import&lt;/code&gt;ed resources.</source>
          <target state="translated">쿼리 매개 변수 &lt;code&gt;importLoaders&lt;/code&gt; 를 사용하면 &lt;code&gt;css-loader&lt;/code&gt; 를 &lt;code&gt;@import&lt;/code&gt; ed 리소스에 적용 하기 전에 로더 수를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6676ec8ba190e154043d97da697c1d7c9a7c0d0" translate="yes" xml:space="preserve">
          <source>The query parameter &lt;code&gt;modules&lt;/code&gt; enables the &lt;strong&gt;CSS Modules&lt;/strong&gt; spec.</source>
          <target state="translated">쿼리 매개 변수 &lt;code&gt;modules&lt;/code&gt; 은 &lt;strong&gt;CSS 모듈&lt;/strong&gt; 사양을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="3505e465d18f3771163a660a2e747e533a6a0c35" translate="yes" xml:space="preserve">
          <source>The raw require function. This expression isn't parsed by the Parser for dependencies.</source>
          <target state="translated">원시 기능이 필요합니다. 이 표현은 파서가 의존성을 위해 파싱하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="839aba6b25dd0c8b662bb331ab8b59ee74817839" translate="yes" xml:space="preserve">
          <source>The reason we need &lt;code&gt;default&lt;/code&gt; is that since webpack 4, when importing a CommonJS module, the import will no longer resolve to the value of &lt;code&gt;module.exports&lt;/code&gt;, it will instead create an artificial namespace object for the CommonJS module. For more information on the reason behind this, read &lt;a href=&quot;https://medium.com/webpack/webpack-4-import-and-commonjs-d619d626b655&quot;&gt;webpack 4: import() and CommonJs&lt;/a&gt;.</source>
          <target state="translated">The reason we need &lt;code&gt;default&lt;/code&gt; is that since webpack 4, when importing a CommonJS module, the import will no longer resolve to the value of &lt;code&gt;module.exports&lt;/code&gt; , it will instead create an artificial namespace object for the CommonJS module. For more information on the reason behind this, read &lt;a href=&quot;https://medium.com/webpack/webpack-4-import-and-commonjs-d619d626b655&quot;&gt;webpack 4: import() and CommonJs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="092899a9890c9149ab3ac8291fc14610f558cc74" translate="yes" xml:space="preserve">
          <source>The remainder of this guide will stem from &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. If you haven't read through that guide already, please do so now.</source>
          <target state="translated">이 안내서의 나머지 부분은 &lt;a href=&quot;getting-started&quot;&gt;시작하기&lt;/a&gt; 에서 나옵니다 . 이 안내서를 아직 읽지 않았다면 지금 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="f1829880bae1c785aa269cd8ac49c93162f07fa2" translate="yes" xml:space="preserve">
          <source>The reporter function will be excuted with the loader context as &lt;code&gt;this&lt;/code&gt;. You may emit messages using &lt;code&gt;this.emitWarning(...)&lt;/code&gt; or &lt;code&gt;this.emitError(...)&lt;/code&gt;. See &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;webpack docs on loader context&lt;/a&gt;.</source>
          <target state="translated">로더 컨텍스트는 &lt;code&gt;this&lt;/code&gt; 과 같이 리포터 기능이 수행됩니다 . &lt;code&gt;this.emitWarning(...)&lt;/code&gt; 또는 &lt;code&gt;this.emitError(...)&lt;/code&gt; 사용하여 메시지를 생성 할 수 있습니다 . &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;로더 컨텍스트에서 webpack 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="46056f0f9b6a95a54bd9a4410020bf916e27bee7" translate="yes" xml:space="preserve">
          <source>The reporter function will be passed an array of errors/warnings produced by JSHint with the following structure:</source>
          <target state="translated">리포터 기능은 JSHint가 다음과 같은 구조로 생성 한 오류 / 경고 배열을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9832e252c089a76e52186789fa74082b68c95b94" translate="yes" xml:space="preserve">
          <source>The resolved request string.</source>
          <target state="translated">해결 된 요청 문자열</target>
        </trans-unit>
        <trans-unit id="9d809278234aebfd0e7cff2e2c8af4a8c69b9ff5" translate="yes" xml:space="preserve">
          <source>The resolver plugins, e.g. &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt;&lt;code&gt;DirectoryNamedPlugin&lt;/code&gt;&lt;/a&gt;, can be included directly in &lt;code&gt;resolve.plugins&lt;/code&gt; rather than using directly in &lt;a href=&quot;../configuration/plugins#plugins&quot;&gt;&lt;code&gt;plugins&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="translated">The resolver plugins, e.g. &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt; &lt;code&gt;DirectoryNamedPlugin&lt;/code&gt; &lt;/a&gt;, can be included directly in &lt;code&gt;resolve.plugins&lt;/code&gt; rather than using directly in &lt;a href=&quot;../configuration/plugins#plugins&quot;&gt; &lt;code&gt;plugins&lt;/code&gt; configuration option&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ce32757da121c3a937bde8602723d7dd668a47da" translate="yes" xml:space="preserve">
          <source>The resolver plugins, e.g. &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt;&lt;code&gt;DirectoryNamedPlugin&lt;/code&gt;&lt;/a&gt;, can be included directly in &lt;code&gt;resolve.plugins&lt;/code&gt; rather than using standard plugins. Note that the &lt;code&gt;resolve&lt;/code&gt; configuration affects the &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; resolvers while &lt;code&gt;resolveLoader&lt;/code&gt; is used to modify the &lt;code&gt;loader&lt;/code&gt; resolver.</source>
          <target state="translated">리졸버 플러그인 (예 : &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt; &lt;code&gt;DirectoryNamedPlugin&lt;/code&gt; &lt;/a&gt; )은 표준 플러그인을 사용하지 않고 &lt;code&gt;resolve.plugins&lt;/code&gt; 에 직접 포함될 수 있습니다 . 점을 유의 &lt;code&gt;resolve&lt;/code&gt; 구성이 영향을 &lt;code&gt;normal&lt;/code&gt; 및 &lt;code&gt;context&lt;/code&gt; 동안 리졸버를 &lt;code&gt;resolveLoader&lt;/code&gt; 을 수정하는 데 사용됩니다 &lt;code&gt;loader&lt;/code&gt; 해결합니다.</target>
        </trans-unit>
        <trans-unit id="f0f4846e8028f9a80dd0d8c0ef30ddcd09e4241e" translate="yes" xml:space="preserve">
          <source>The resolvers mentioned above can also be customized via a configuration file with the &lt;a href=&quot;../configuration/resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt;&lt;code&gt;resolveLoader&lt;/code&gt;&lt;/a&gt; options. These options allow users to change the resolving behavior through a variety of options including through resolve &lt;code&gt;plugins&lt;/code&gt;.</source>
          <target state="translated">위에서 언급 한 리졸버는 &lt;a href=&quot;../configuration/resolve&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt; &lt;code&gt;resolveLoader&lt;/code&gt; &lt;/a&gt; 옵션 으로 구성 파일을 통해 사용자 정의 할 수도 있습니다. 이 옵션을 통해 사용자는 resolve &lt;code&gt;plugins&lt;/code&gt; 을 포함한 다양한 옵션을 통해 해결 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d0fd93852dd662bc6b879642ac9e4e4d5b03796" translate="yes" xml:space="preserve">
          <source>The resource file.</source>
          <target state="translated">리소스 파일</target>
        </trans-unit>
        <trans-unit id="a4cd8313da62b6881779fdfaa0180a987b0cdd4f" translate="yes" xml:space="preserve">
          <source>The resource part of the request, including query.</source>
          <target state="translated">쿼리를 포함한 요청의 리소스 부분.</target>
        </trans-unit>
        <trans-unit id="6f290b949856d1410b77b558b0c660ec9cabd3a5" translate="yes" xml:space="preserve">
          <source>The resource query of the current module. If the following &lt;code&gt;require&lt;/code&gt; call was made, then the query string would be available in &lt;code&gt;file.js&lt;/code&gt;.</source>
          <target state="translated">The resource query of the current module. If the following &lt;code&gt;require&lt;/code&gt; call was made, then the query string would be available in &lt;code&gt;file.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4c514f8ccaf5649c6351763537ef961c30fd000" translate="yes" xml:space="preserve">
          <source>The resource query of the current module. If the following &lt;code&gt;require&lt;/code&gt; call were made, then the query string would be available in &lt;code&gt;file.js&lt;/code&gt;.</source>
          <target state="translated">현재 모듈의 리소스 쿼리 다음과 같은 호출이 &lt;code&gt;require&lt;/code&gt; 경우 &lt;code&gt;file.js&lt;/code&gt; 에서 쿼리 문자열을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4780d56cbc686c5ce3270f7769038e13ae838f0" translate="yes" xml:space="preserve">
          <source>The resource: An absolute path to the file requested. It's already resolved according to the &lt;a href=&quot;resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt; rules&lt;/a&gt;.</source>
          <target state="translated">리소스 : 요청 된 파일의 절대 경로입니다. &lt;a href=&quot;resolve&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; 규칙&lt;/a&gt; 에 따라 이미 해결되었습니다 .</target>
        </trans-unit>
        <trans-unit id="01c6e113f51546fcaa75367b348564232431d01b" translate="yes" xml:space="preserve">
          <source>The resulting configuration object would resemble:</source>
          <target state="translated">결과 구성 오브젝트는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="d5fcb09293cddfb6fac196a1f2ae3817a3ca173b" translate="yes" xml:space="preserve">
          <source>The rules can be disabled using the following options in your &lt;code&gt;webpack.conf.js&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;webpack.conf.js&lt;/code&gt; 에서 다음 옵션을 사용하여 규칙을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97262fc608fb5c3c1ca59507abc23b2d97ffaa58" translate="yes" xml:space="preserve">
          <source>The runtime asynchronously downloads the updates and notifies the application.</source>
          <target state="translated">런타임은 비동기 적으로 업데이트를 다운로드하고 애플리케이션에 알립니다.</target>
        </trans-unit>
        <trans-unit id="6fca03cfbb7a42f44c98900865cadf2c926101c4" translate="yes" xml:space="preserve">
          <source>The runtime code detects already added CSS via &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag. This can be useful when injecting CSS on server-side for Server-Side-Rendering. The &lt;code&gt;href&lt;/code&gt; of the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag has to match the URL that will be used for loading the CSS chunk. The &lt;code&gt;data-href&lt;/code&gt; attribute can be used for &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; too. When inlining CSS &lt;code&gt;data-href&lt;/code&gt; must be used.</source>
          <target state="translated">런타임 코드는 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그 를 통해 이미 추가 된 CSS를 감지 합니다. 서버 측 렌더링을 위해 서버 측에 CSS를 삽입 할 때 유용 할 수 있습니다. &lt;code&gt;href&lt;/code&gt; 의 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 태그는 CSS 청크를로드하기 위해 사용되는 URL과 일치해야합니다. &lt;code&gt;data-href&lt;/code&gt; 속성은 사용할 수 있습니다 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 과 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 도. CSS를 인라인 할 때는 &lt;code&gt;data-href&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a78efb0808055f65bb7c8c45f825cc95b4914fbe" translate="yes" xml:space="preserve">
          <source>The runtime synchronously applies the updates.</source>
          <target state="translated">런타임은 업데이트를 동 기적으로 적용합니다.</target>
        </trans-unit>
        <trans-unit id="22c88bf74eeb1c895a2476d06df2afcbf140bbb5" translate="yes" xml:space="preserve">
          <source>The runtime, along with the manifest data, is basically all the code webpack needs to connect your modularized application while it's running in the browser. It contains the loading and resolving logic needed to connect your modules as they interact. This includes connecting modules that have already been loaded into the browser as well as logic to lazy-load the ones that haven't.</source>
          <target state="translated">The runtime, along with the manifest data, is basically all the code webpack needs to connect your modularized application while it's running in the browser. It contains the loading and resolving logic needed to connect your modules as they interact. This includes connecting modules that have already been loaded into the browser as well as logic to lazy-load the ones that haven't.</target>
        </trans-unit>
        <trans-unit id="70b63872573cf38e68d77c29277931f4da8eb8e5" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; but for &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules&lt;/a&gt;</source>
          <target state="translated">The same as &lt;a href=&quot;#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; but for &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc2c4ae26a6eae362e4487bbd392bf0a2e98d3a8" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;output#outputassetmodulefilename&quot;&gt;&lt;code&gt;output.assetModuleFilename&lt;/code&gt;&lt;/a&gt; but for specific rule. Overrides &lt;code&gt;output.assetModuleFilename&lt;/code&gt; and works only with &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;asset/resource&lt;/code&gt; module types.</source>
          <target state="translated">The same as &lt;a href=&quot;output#outputassetmodulefilename&quot;&gt; &lt;code&gt;output.assetModuleFilename&lt;/code&gt; &lt;/a&gt; but for specific rule. Overrides &lt;code&gt;output.assetModuleFilename&lt;/code&gt; and works only with &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;asset/resource&lt;/code&gt; module types.</target>
        </trans-unit>
        <trans-unit id="3c2d69006c9f2c04928fcb8a9dcc73f5a62b5cf3" translate="yes" xml:space="preserve">
          <source>The same as &lt;code&gt;node-webkit&lt;/code&gt;</source>
          <target state="translated">The same as &lt;code&gt;node-webkit&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
