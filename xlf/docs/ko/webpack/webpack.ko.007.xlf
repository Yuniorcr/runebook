<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="16b86c144a0a521ee168253a8c4f98de7b78f15d" translate="yes" xml:space="preserve">
          <source>The application asks the HMR runtime to check for updates.</source>
          <target state="translated">응용 프로그램은 HMR 런타임에 업데이트를 확인하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="79efe6cfd5949a3507bf3917f34b31f489dabef7" translate="yes" xml:space="preserve">
          <source>The application is eagerly executing an application which is operating as an omnidirectional host. There are options to choose from:</source>
          <target state="translated">The application is eagerly executing an application which is operating as an omnidirectional host. There are options to choose from:</target>
        </trans-unit>
        <trans-unit id="1ebbe790435ed6809e144b26b79df8536bc5f553" translate="yes" xml:space="preserve">
          <source>The application then asks the runtime to apply the updates.</source>
          <target state="translated">그런 다음 응용 프로그램은 런타임에 업데이트를 적용하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="d824c0a8e805904e477cac16a6a89a050cf96b63" translate="yes" xml:space="preserve">
          <source>The arguments passed to &lt;code&gt;require.context&lt;/code&gt; must be literals!</source>
          <target state="translated">&lt;code&gt;require.context&lt;/code&gt; 에 전달 된 인수는 리터럴이어야합니다!</target>
        </trans-unit>
        <trans-unit id="3b269a2b9e4dd52dc81aafc9c739893dbdcca239" translate="yes" xml:space="preserve">
          <source>The array accepts relative, absolute, and glob patterns to the relevant files. It uses &lt;a href=&quot;https://github.com/micromatch/micromatch#matching-features&quot;&gt;micromatch&lt;/a&gt; under the hood.</source>
          <target state="translated">배열은 관련 파일에 대한 상대, 절대 및 글로브 패턴을 허용합니다. 후드 아래에서 &lt;a href=&quot;https://github.com/micromatch/micromatch#matching-features&quot;&gt;마이크로 매치&lt;/a&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="7d7bfe627061e5f7c789904410a966a413748c03" translate="yes" xml:space="preserve">
          <source>The array accepts simple glob patterns to the relevant files. It uses &lt;a href=&quot;https://github.com/fitzgen/glob-to-regexp&quot;&gt;glob-to-regexp&lt;/a&gt; under the hood (Supports: &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;{a,b}&lt;/code&gt;, &lt;code&gt;[a-z]&lt;/code&gt;). Patterns like &lt;code&gt;*.css&lt;/code&gt;, which do not include a &lt;code&gt;/&lt;/code&gt;, will be treated like &lt;code&gt;**/*.css&lt;/code&gt;.</source>
          <target state="translated">The array accepts simple glob patterns to the relevant files. It uses &lt;a href=&quot;https://github.com/fitzgen/glob-to-regexp&quot;&gt;glob-to-regexp&lt;/a&gt; under the hood (Supports: &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; , &lt;code&gt;{a,b}&lt;/code&gt; , &lt;code&gt;[a-z]&lt;/code&gt; ). Patterns like &lt;code&gt;*.css&lt;/code&gt; , which do not include a &lt;code&gt;/&lt;/code&gt; , will be treated like &lt;code&gt;**/*.css&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f24e06847c7c8c09a6910743fe0e2b89b2d5d81" translate="yes" xml:space="preserve">
          <source>The assets has been optimized.</source>
          <target state="translated">자산이 최적화되었습니다.</target>
        </trans-unit>
        <trans-unit id="97db01edba497ef233257f289d55d0a23667758c" translate="yes" xml:space="preserve">
          <source>The assets have been optimized.</source>
          <target state="translated">The assets have been optimized.</target>
        </trans-unit>
        <trans-unit id="ea0a14dc5dc1e08c4a5a1dc6beb6d1e2c9344cfc" translate="yes" xml:space="preserve">
          <source>The available conditions vary depending on the module system and tool used.</source>
          <target state="translated">The available conditions vary depending on the module system and tool used.</target>
        </trans-unit>
        <trans-unit id="2bad31d0c6e7fc07307f1bde0b4eadebf87145fb" translate="yes" xml:space="preserve">
          <source>The banner text that points to the extracted file and will be added on top of the original file. Can be &lt;code&gt;false&lt;/code&gt; (no banner), a &lt;code&gt;String&lt;/code&gt;, or a &lt;code&gt;Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; that will be called with the filename where extracted comments have been stored. Will be wrapped into comment.</source>
          <target state="translated">추출 된 파일을 가리키고 원본 파일 위에 추가 될 배너 텍스트입니다. 할 수 &lt;code&gt;false&lt;/code&gt; (NO 배너)하는 &lt;code&gt;String&lt;/code&gt; , 또는 &lt;code&gt;Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; 추출 된 의견이 저장되어있는 파일 이름으로 호출됩니다. 댓글로 포장됩니다.</target>
        </trans-unit>
        <trans-unit id="1f097a937bb4ef262288a8da73a495320626168c" translate="yes" xml:space="preserve">
          <source>The banner text that points to the extracted file and will be added on top of the original file. Can be &lt;code&gt;false&lt;/code&gt; (no banner), a &lt;code&gt;{String}&lt;/code&gt;, or a &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&lt;/code&gt; that will be called with the filename where extracted comments have been stored. Will be wrapped into comment</source>
          <target state="translated">추출 된 파일을 가리키고 원본 파일 위에 추가 될 배너 텍스트입니다. 할 수 &lt;code&gt;false&lt;/code&gt; (NO 배너)하는 &lt;code&gt;{String}&lt;/code&gt; 또는 &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&lt;/code&gt; 추출 된 의견이 저장되어있는 파일 이름으로 호출됩니다. 댓글로 포장됩니다</target>
        </trans-unit>
        <trans-unit id="ea0c3fb19eeb0a5ca2d5f787f8510cd22467c43d" translate="yes" xml:space="preserve">
          <source>The base directory, an &lt;strong&gt;absolute path&lt;/strong&gt;, for resolving entry points and loaders from configuration.</source>
          <target state="translated">구성에서 진입 점 및 로더를 해석하기위한 기본 &lt;strong&gt;경로&lt;/strong&gt; 인 &lt;strong&gt;절대 경로&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dade99eb4c9c3fd9dd88d5f0ba2df781c3d633a2" translate="yes" xml:space="preserve">
          <source>The basename of the file/resource.</source>
          <target state="translated">파일 / 리소스의 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d328278dab4c04b62fd3bf91761c4b0d051ef9fa" translate="yes" xml:space="preserve">
          <source>The basic project structure may look like this:</source>
          <target state="translated">기본 프로젝트 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="642f1b4d1aedf7984db5518b2965ddf6c4c68db8" translate="yes" xml:space="preserve">
          <source>The browser application name is platform dependent. Don't hard code it in reusable modules. For example, &lt;code&gt;'Chrome'&lt;/code&gt; is &lt;code&gt;'Google Chrome'&lt;/code&gt; on macOS, &lt;code&gt;'google-chrome'&lt;/code&gt; on Linux and &lt;code&gt;'chrome'&lt;/code&gt; on Windows.</source>
          <target state="translated">The browser application name is platform dependent. Don't hard code it in reusable modules. For example, &lt;code&gt;'Chrome'&lt;/code&gt; is &lt;code&gt;'Google Chrome'&lt;/code&gt; on macOS, &lt;code&gt;'google-chrome'&lt;/code&gt; on Linux and &lt;code&gt;'chrome'&lt;/code&gt; on Windows.</target>
        </trans-unit>
        <trans-unit id="829bc837727bbafc63b76aeeb9da90175a1667ce" translate="yes" xml:space="preserve">
          <source>The browser provides a &lt;code&gt;console&lt;/code&gt; object with a very similar interface to the Node.js &lt;code&gt;console&lt;/code&gt;, so a polyfill is generally not needed.</source>
          <target state="translated">브라우저는 Node.js &lt;code&gt;console&lt;/code&gt; 과 매우 유사한 인터페이스를 가진 &lt;code&gt;console&lt;/code&gt; 객체를 제공 하므로 일반적으로 폴리 필이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa3f5c75700c8ef9230b4071d77253ca4fd0187a" translate="yes" xml:space="preserve">
          <source>The bundle can be included as part of a script tag, and the bundle can be invoked like so:</source>
          <target state="translated">번들은 스크립트 태그의 일부로 포함될 수 있으며 다음과 같이 번들을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba7f6b7207278a6abb170c11f3d09b65779ebeaa" translate="yes" xml:space="preserve">
          <source>The bundle will also be available as &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt;.</source>
          <target state="translated">번들은 &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt; 로도 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="217dc2584c0fb5dc2dc7d41450dd433af073e169" translate="yes" xml:space="preserve">
          <source>The bundle will now be available as &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt;.</source>
          <target state="translated">번들은 이제 &lt;code&gt;http://localhost:8080/assets/bundle.js&lt;/code&gt; 로 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="117b01d486ab05dc2a1b9418e5da87dc9698edff" translate="yes" xml:space="preserve">
          <source>The bundle with external dependencies can be used in various module contexts, such as &lt;a href=&quot;../concepts/modules&quot;&gt;CommonJS, AMD, global and ES2015 modules&lt;/a&gt;. The external library may be available in any of these forms:</source>
          <target state="translated">외부 종속성이있는 번들은 &lt;a href=&quot;../concepts/modules&quot;&gt;CommonJS, AMD, 글로벌 및 ES2015 모듈과&lt;/a&gt; 같은 다양한 모듈 컨텍스트에서 사용될 수 있습니다 . 외부 라이브러리는 다음 형식 중 하나로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8ac10f7b894229890ea38ddef1c239a04440579" translate="yes" xml:space="preserve">
          <source>The bundled files will be available in the browser under this path.</source>
          <target state="translated">번들 파일은이 경로 아래의 브라우저에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36d8698b636210d44251d2af577f761d0daad332" translate="yes" xml:space="preserve">
          <source>The bundling is a function that takes some files and emits others.</source>
          <target state="translated">The bundling is a function that takes some files and emits others.</target>
        </trans-unit>
        <trans-unit id="2fd596b7597dbfb276b29cfda53a436c72a8fe5f" translate="yes" xml:space="preserve">
          <source>The callback function takes three arguments:</source>
          <target state="translated">The callback function takes three arguments:</target>
        </trans-unit>
        <trans-unit id="5b301ff5f26e6e3457e880e7aa52e034b6cdffe9" translate="yes" xml:space="preserve">
          <source>The chunk assets have been optimized.</source>
          <target state="translated">청크 자산이 최적화되었습니다.</target>
        </trans-unit>
        <trans-unit id="f12d781d5ccfce31d9164c466ca027e17c249776" translate="yes" xml:space="preserve">
          <source>The chunk is requested, when you require the bundle.</source>
          <target state="translated">번들이 필요할 때 청크가 요청됩니다.</target>
        </trans-unit>
        <trans-unit id="81ef41469690d0bbf8026dc3cdeda400cf40c231" translate="yes" xml:space="preserve">
          <source>The command to start &lt;code&gt;webpack-dev-server&lt;/code&gt; can then be changed to this:</source>
          <target state="translated">The command to start &lt;code&gt;webpack-dev-server&lt;/code&gt; can then be changed to this:</target>
        </trans-unit>
        <trans-unit id="34a6deff48e1d6a0c1e725fa06e2ce2bc0d257ae" translate="yes" xml:space="preserve">
          <source>The command to start webpack-dev-server can then be changed to this:</source>
          <target state="translated">그런 다음 webpack-dev-server를 시작하는 명령을 다음과 같이 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3789f3b9960fd99acb1e00a2ccf2ffd85b4a7fd4" translate="yes" xml:space="preserve">
          <source>The compiler ensures that module IDs and chunk IDs are consistent between these builds. It typically stores these IDs in memory (e.g. with &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;), but it's also possible to store them in a JSON file.</source>
          <target state="translated">컴파일러는 이러한 빌드간에 모듈 ID와 청크 ID가 일관되도록합니다. 일반적으로 이러한 ID를 메모리에 저장하지만 (예 : &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server 사용&lt;/a&gt; ) JSON 파일에 저장할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fee4edceee7fcb408d89ed61453c6f792e395031" translate="yes" xml:space="preserve">
          <source>The compression algorithm/function</source>
          <target state="translated">The compression algorithm/function</target>
        </trans-unit>
        <trans-unit id="ff8c9806ce1e0f7f3b65580f88da7706f9f23de9" translate="yes" xml:space="preserve">
          <source>The compression algorithm/function.</source>
          <target state="translated">The compression algorithm/function.</target>
        </trans-unit>
        <trans-unit id="a788f2ca0f3e40c85c64806e9b2de8d22c971d5e" translate="yes" xml:space="preserve">
          <source>The configuration above has defined a &lt;code&gt;rules&lt;/code&gt; property for a single module with two required properties: &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt;. This tells webpack's compiler the following:</source>
          <target state="translated">위의 구성은 두 개의 필수 특성 ( &lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;use&lt;/code&gt; )이 있는 단일 모듈 의 &lt;code&gt;rules&lt;/code&gt; 특성을 정의했습니다 . 이것은 webpack의 컴파일러에게 다음을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="a9919e757b665eea3b236fa8b39ebf3977dac665" translate="yes" xml:space="preserve">
          <source>The configuration is the same, switch out &lt;code&gt;sass-loader&lt;/code&gt; for &lt;code&gt;less-loader&lt;/code&gt; when necessary.</source>
          <target state="translated">구성은 동일 합니다. 필요할 때 &lt;code&gt;less-loader&lt;/code&gt; &lt;code&gt;sass-loader&lt;/code&gt; 위해 sass-loader 를 끄십시오 .</target>
        </trans-unit>
        <trans-unit id="7f4253f2f740bbba896793645215e3f4e3bbd342" translate="yes" xml:space="preserve">
          <source>The consumer also can use the library by loading it via a script tag:</source>
          <target state="translated">소비자는 스크립트 태그를 통해 라이브러리를로드하여 라이브러리를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="142e06a80b8adb00883cd7ba1de5598af662eacb" translate="yes" xml:space="preserve">
          <source>The container interface supports &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;init&lt;/code&gt; methods. &lt;code&gt;init&lt;/code&gt; is a &lt;code&gt;async&lt;/code&gt; compatible method that is called with one argument: the shared scope object. This object is used as a shared scope in the remote container and is filled with the provided modules from a host. It can be leveraged to connect remote containers to a host container dynamically at runtime.</source>
          <target state="translated">The container interface supports &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;init&lt;/code&gt; methods. &lt;code&gt;init&lt;/code&gt; is a &lt;code&gt;async&lt;/code&gt; compatible method that is called with one argument: the shared scope object. This object is used as a shared scope in the remote container and is filled with the provided modules from a host. It can be leveraged to connect remote containers to a host container dynamically at runtime.</target>
        </trans-unit>
        <trans-unit id="2ff8a81147746430acedd9eba5dd186382bc0736" translate="yes" xml:space="preserve">
          <source>The container tries to provide shared modules, but if the shared module has already been used, a warning and the provided shared module will be ignored. The container might still use it as a fallback.</source>
          <target state="translated">The container tries to provide shared modules, but if the shared module has already been used, a warning and the provided shared module will be ignored. The container might still use it as a fallback.</target>
        </trans-unit>
        <trans-unit id="39ed83f663c2187e3c359ec8156856103f546c45" translate="yes" xml:space="preserve">
          <source>The container will manage overridable modules in a way that they do not need to be downloaded when they have been overridden by the consumer. This usually happens by placing them into separate chunks.</source>
          <target state="translated">The container will manage overridable modules in a way that they do not need to be downloaded when they have been overridden by the consumer. This usually happens by placing them into separate chunks.</target>
        </trans-unit>
        <trans-unit id="2364eb772d89ad06b53d703338f09b71a5aff0a6" translate="yes" xml:space="preserve">
          <source>The content of the dll is accessible under a module prefix. i.e. with &lt;code&gt;scope = &quot;xyz&quot;&lt;/code&gt; a file &lt;code&gt;abc&lt;/code&gt; in the dll can be access via &lt;code&gt;require(&quot;xyz/abc&quot;)&lt;/code&gt;.</source>
          <target state="translated">dll의 내용은 모듈 접두사로 액세스 할 수 있습니다. 즉, &lt;code&gt;scope = &quot;xyz&quot;&lt;/code&gt; 경우 dll의 &lt;code&gt;abc&lt;/code&gt; 파일 &lt;code&gt;require(&quot;xyz/abc&quot;)&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af0989a346c523d5dd22cadb4680decdbc511fe1" translate="yes" xml:space="preserve">
          <source>The content of the dll is accessible under a module prefix. i.e. with &lt;code&gt;scope = 'xyz'&lt;/code&gt; a file &lt;code&gt;abc&lt;/code&gt; in the dll can be access via &lt;code&gt;require('xyz/abc')&lt;/code&gt;.</source>
          <target state="translated">The content of the dll is accessible under a module prefix. i.e. with &lt;code&gt;scope = 'xyz'&lt;/code&gt; a file &lt;code&gt;abc&lt;/code&gt; in the dll can be access via &lt;code&gt;require('xyz/abc')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11ae20ea60d038bb99e3a1098b149daca67d4310" translate="yes" xml:space="preserve">
          <source>The content of the dll is mapped to the current directory. If a required file matches a file in the dll (after resolving), then the file from the dll is used instead.</source>
          <target state="translated">dll의 내용은 현재 디렉토리에 매핑됩니다. 필요한 파일이 dll의 파일과 일치하면 (해결 후) dll의 파일이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="708e4611472f279bbeba23fd301b7b262d8b3c33" translate="yes" xml:space="preserve">
          <source>The context module also contains some runtime logic to access the map.</source>
          <target state="translated">컨텍스트 모듈에는 맵에 액세스하기위한 런타임 로직도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b48d4374f64931e52bb9ebc1178260ec8a201fe" translate="yes" xml:space="preserve">
          <source>The coolest part of everything mentioned above, is that loading assets this way allows you to group modules and assets in a more intuitive way. Instead of relying on a global &lt;code&gt;/assets&lt;/code&gt; directory that contains everything, you can group assets with the code that uses them. For example, a structure like this can be useful:</source>
          <target state="translated">The coolest part of everything mentioned above, is that loading assets this way allows you to group modules and assets in a more intuitive way. Instead of relying on a global &lt;code&gt;/assets&lt;/code&gt; directory that contains everything, you can group assets with the code that uses them. For example, a structure like this can be useful:</target>
        </trans-unit>
        <trans-unit id="3bb6021b3aba746e4cb4d8440fb0a5fe485718c3" translate="yes" xml:space="preserve">
          <source>The coolest part of everything mentioned above, is that loading assets this way allows you to group modules and assets together in a more intuitive way. Instead of relying on a global &lt;code&gt;/assets&lt;/code&gt; directory that contains everything, you can group assets with the code that uses them. For example, a structure like this can be very useful:</source>
          <target state="translated">위에서 언급 한 모든 것의 가장 멋진 부분은이 방법으로 자산을로드하면 모듈과 자산을보다 직관적 인 방식으로 그룹화 할 수 있다는 것입니다. 모든 것을 포함 하는 전역 &lt;code&gt;/assets&lt;/code&gt; 디렉토리 에 의존하는 대신 자산을 사용하는 코드로 자산을 그룹화 할 수 있습니다. 예를 들어, 이와 같은 구조는 매우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="933d8380bf7e621fb0ce538df103291319e3c3b8" translate="yes" xml:space="preserve">
          <source>The current default mode is &lt;a href=&quot;https://www.npmjs.com/package/sockjs&quot;&gt;&lt;code&gt;'sockjs'&lt;/code&gt;&lt;/a&gt;. This mode uses &lt;a href=&quot;https://github.com/sockjs/sockjs-node&quot;&gt;SockJS-node&lt;/a&gt; as a server, and &lt;a href=&quot;https://www.npmjs.com/package/sockjs-client&quot;&gt;SockJS-client&lt;/a&gt; on the client.</source>
          <target state="translated">The current default mode is &lt;a href=&quot;https://www.npmjs.com/package/sockjs&quot;&gt; &lt;code&gt;'sockjs'&lt;/code&gt; &lt;/a&gt;. This mode uses &lt;a href=&quot;https://github.com/sockjs/sockjs-node&quot;&gt;SockJS-node&lt;/a&gt; as a server, and &lt;a href=&quot;https://www.npmjs.com/package/sockjs-client&quot;&gt;SockJS-client&lt;/a&gt; on the client.</target>
        </trans-unit>
        <trans-unit id="28d8e8da70d2e7516d426239a1e09d1a1b27ac71" translate="yes" xml:space="preserve">
          <source>The default configuration was chosen to fit web performance best practices, but the optimal strategy for your project might differ. If you're changing the configuration, you should measure the impact of your changes to ensure there's a real benefit.</source>
          <target state="translated">The default configuration was chosen to fit web performance best practices, but the optimal strategy for your project might differ. If you're changing the configuration, you should measure the impact of your changes to ensure there's a real benefit.</target>
        </trans-unit>
        <trans-unit id="7c6b6d9ad88f92d2a4adcce1cece50a729a0b6af" translate="yes" xml:space="preserve">
          <source>The default value can be affected by different &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">The default value can be affected by different &lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="b2e84093acbe0b8b8fa8037e5115b1748d3fb127" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt; in webpack 4.</source>
          <target state="translated">The default value is &lt;code&gt;true&lt;/code&gt; in webpack 4.</target>
        </trans-unit>
        <trans-unit id="f3e4f99776cfd10bf043a53e3dc62767ec7acb98" translate="yes" xml:space="preserve">
          <source>The default value is an empty string &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3b83612f6b170d039b2461a7b028c7466e3f153b" translate="yes" xml:space="preserve">
          <source>The default value of this option is depending on the &lt;code&gt;target&lt;/code&gt; setting. For more details, search for &lt;code&gt;&quot;workerChunkLoading&quot;&lt;/code&gt;: &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/config/defaults.js&quot;&gt;in the webpack defaults&lt;/a&gt;.</source>
          <target state="translated">The default value of this option is depending on the &lt;code&gt;target&lt;/code&gt; setting. For more details, search for &lt;code&gt;&quot;workerChunkLoading&quot;&lt;/code&gt; : &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/config/defaults.js&quot;&gt;in the webpack defaults&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a277b5f476831566008bc5f4d942a1241cc34d01" translate="yes" xml:space="preserve">
          <source>The dependencies are necessary for webpack to understand when it needs to run recompilation on the changed files.</source>
          <target state="translated">The dependencies are necessary for webpack to understand when it needs to run recompilation on the changed files.</target>
        </trans-unit>
        <trans-unit id="a0f3744670086d967a82bcb9b8b24e02fa908f0e" translate="yes" xml:space="preserve">
          <source>The dependencies for your library will be defined by the &lt;a href=&quot;externals&quot;&gt;&lt;code&gt;externals&lt;/code&gt;&lt;/a&gt; config.</source>
          <target state="translated">라이브러리의 종속성은 &lt;a href=&quot;externals&quot;&gt; &lt;code&gt;externals&lt;/code&gt; &lt;/a&gt; 구성에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="e550230c9fc8a5a10bf3c0c43fb181c596afa9bd" translate="yes" xml:space="preserve">
          <source>The dependency module can be from the application code or a third party library. The resolver helps webpack find the module code that needs to be included in the bundle for every such &lt;code&gt;require&lt;/code&gt;/&lt;code&gt;import&lt;/code&gt; statement. webpack uses &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;enhanced-resolve&lt;/a&gt; to resolve file paths while bundling modules.</source>
          <target state="translated">종속성 모듈은 응용 프로그램 코드 또는 타사 라이브러리에서 제공 될 수 있습니다. 리졸버는 웹팩이 그러한 &lt;code&gt;require&lt;/code&gt; / &lt;code&gt;import&lt;/code&gt; 문 마다 번들에 포함되어야하는 모듈 코드를 찾도록 도와줍니다 . webpack은 &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;확장&lt;/a&gt; 번들을 사용하여 모듈을 번들링하는 동안 파일 경로를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e73f460edb61e6d26866d82d4c8fcf151ddf6e89" translate="yes" xml:space="preserve">
          <source>The dependency module can be from the application code or a third-party library. The resolver helps webpack find the module code that needs to be included in the bundle for every such &lt;code&gt;require&lt;/code&gt;/&lt;code&gt;import&lt;/code&gt; statement. webpack uses &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;enhanced-resolve&lt;/a&gt; to resolve file paths while bundling modules.</source>
          <target state="translated">The dependency module can be from the application code or a third-party library. The resolver helps webpack find the module code that needs to be included in the bundle for every such &lt;code&gt;require&lt;/code&gt; / &lt;code&gt;import&lt;/code&gt; statement. webpack uses &lt;a href=&quot;https://github.com/webpack/enhanced-resolve&quot;&gt;enhanced-resolve&lt;/a&gt; to resolve file paths while bundling modules.</target>
        </trans-unit>
        <trans-unit id="8d540fc23da7657e0a52f955d13989f2f80069e5" translate="yes" xml:space="preserve">
          <source>The deprecated webpack 1 constructor &lt;code&gt;new webpack.optimize.CommonsChunkPlugin(options, filenameTemplate, selectedChunks, minChunks)&lt;/code&gt; is no longer supported. Use a corresponding options object instead.</source>
          <target state="translated">더 이상 사용되지 않는 webpack 1 생성자 인 &lt;code&gt;new webpack.optimize.CommonsChunkPlugin(options, filenameTemplate, selectedChunks, minChunks)&lt;/code&gt; 은 더 이상 지원되지 않습니다. 대신 해당 옵션 개체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aaab335bd8539ddd56eb0154bbbbdd3a57ab1fc0" translate="yes" xml:space="preserve">
          <source>The dev-server makes use of the powerful &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; package. Check out its &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;documentation&lt;/a&gt; for more advanced usages. Note that some of &lt;code&gt;http-proxy-middleware&lt;/code&gt;'s features do not require a &lt;code&gt;target&lt;/code&gt; key, e.g. its &lt;code&gt;router&lt;/code&gt; feature, but you will still need to include a &lt;code&gt;target&lt;/code&gt; key in your configuration here, otherwise &lt;code&gt;webpack-dev-server&lt;/code&gt; won't pass it along to &lt;code&gt;http-proxy-middleware&lt;/code&gt;).</source>
          <target state="translated">The dev-server makes use of the powerful &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; package. Check out its &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;documentation&lt;/a&gt; for more advanced usages. Note that some of &lt;code&gt;http-proxy-middleware&lt;/code&gt; 's features do not require a &lt;code&gt;target&lt;/code&gt; key, e.g. its &lt;code&gt;router&lt;/code&gt; feature, but you will still need to include a &lt;code&gt;target&lt;/code&gt; key in your configuration here, otherwise &lt;code&gt;webpack-dev-server&lt;/code&gt; won't pass it along to &lt;code&gt;http-proxy-middleware&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="72453a9bde8a4946f5cce2f9940ffc13f8a61a43" translate="yes" xml:space="preserve">
          <source>The dev-server makes use of the powerful &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; package. Checkout its &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;documentation&lt;/a&gt; for more advanced usages.</source>
          <target state="translated">dev-server는 강력한 &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; 패키지를 사용합니다. 그 체크 아웃 &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#options&quot;&gt;문서를&lt;/a&gt; 고급 용도로.</target>
        </trans-unit>
        <trans-unit id="6ff0c0bd95cbb9d226a93e472ae5eebbebdf485b" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;maxAsyncSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxAsyncSize&lt;/code&gt; will only affect on-demand loading chunks.</source>
          <target state="translated">The difference between &lt;code&gt;maxAsyncSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxAsyncSize&lt;/code&gt; will only affect on-demand loading chunks.</target>
        </trans-unit>
        <trans-unit id="808e96d4b904728e7f3fc410be4e4569724e0dda" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;maxInitialSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxInitialSize&lt;/code&gt; will only affect initial load chunks.</source>
          <target state="translated">The difference between &lt;code&gt;maxInitialSize&lt;/code&gt; and &lt;code&gt;maxSize&lt;/code&gt; is that &lt;code&gt;maxInitialSize&lt;/code&gt; will only affect initial load chunks.</target>
        </trans-unit>
        <trans-unit id="6c18a4469d6bbf0544a03a7f1589a9b97bc3e787" translate="yes" xml:space="preserve">
          <source>The enabled rules for minimizing by default are the following ones:</source>
          <target state="translated">기본적으로 최소화하기 위해 활성화 된 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bd76b56f90cc7ad0a0f72461fe52bce7d07a8517" translate="yes" xml:space="preserve">
          <source>The encoding to use when generating the hash, defaults to &lt;code&gt;'hex'&lt;/code&gt;. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest&lt;/code&gt;&lt;/a&gt; are supported. Using &lt;code&gt;'base64'&lt;/code&gt; for filenames might be problematic since it has the character &lt;code&gt;/&lt;/code&gt; in its alphabet. Likewise &lt;code&gt;'latin1'&lt;/code&gt; could contain any character.</source>
          <target state="translated">해시를 생성 할 때 사용할 인코딩은 기본적으로 &lt;code&gt;'hex'&lt;/code&gt; 입니다. Node.JS의 &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest&lt;/code&gt; 의&lt;/a&gt; 모든 인코딩 이 지원됩니다. 파일 이름에 &lt;code&gt;'base64'&lt;/code&gt; 를 사용하면 알파벳 문자 &lt;code&gt;/&lt;/code&gt; 가 있으므로 문제가 될 수 있습니다 . 마찬가지로 &lt;code&gt;'latin1'&lt;/code&gt; 은 모든 문자를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31e9d5b8ee6a480f19671a36d4f4067621c60dfd" translate="yes" xml:space="preserve">
          <source>The encoding to use when generating the hash. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest&lt;/code&gt;&lt;/a&gt; are supported. Using &lt;code&gt;'base64'&lt;/code&gt; for filenames might be problematic since it has the character &lt;code&gt;/&lt;/code&gt; in its alphabet. Likewise &lt;code&gt;'latin1'&lt;/code&gt; could contain any character.</source>
          <target state="translated">The encoding to use when generating the hash. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest&lt;/code&gt; &lt;/a&gt; are supported. Using &lt;code&gt;'base64'&lt;/code&gt; for filenames might be problematic since it has the character &lt;code&gt;/&lt;/code&gt; in its alphabet. Likewise &lt;code&gt;'latin1'&lt;/code&gt; could contain any character.</target>
        </trans-unit>
        <trans-unit id="b02a1c64523524bd6887bba721827df362037305" translate="yes" xml:space="preserve">
          <source>The entries chunks are decorated to form a library &lt;code&gt;name&lt;/code&gt; of type &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">항목 청크는 type &lt;code&gt;type&lt;/code&gt; 의 라이브러리 &lt;code&gt;name&lt;/code&gt; 을 형성하도록 장식되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6cf3d762c8a748dfe2b4b1ed7cec7a292cb77cb" translate="yes" xml:space="preserve">
          <source>The entry object is where webpack looks to start building the bundle. The context is an absolute string to the directory that contains the entry files.</source>
          <target state="translated">entry 객체는 webpack이 번들 빌드를 시작하는 곳입니다. 컨텍스트는 항목 파일이 포함 된 디렉토리의 절대 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="435f9882df580a04c2a3e7ec98307219f22e1c02" translate="yes" xml:space="preserve">
          <source>The entry point(s) of your application e.g. &lt;code&gt;./src/main.js&lt;/code&gt;</source>
          <target state="translated">The entry point(s) of your application e.g. &lt;code&gt;./src/main.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d539779f73e35e879cabf3d6e5714e7a6309bc7b" translate="yes" xml:space="preserve">
          <source>The errors found will always be emitted, to disable set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">발견 된 오류는 항상 발생하여 비활성화 설정을 &lt;code&gt;false&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="0607d4a03e47e5ea4019d6170f114d90e541894a" translate="yes" xml:space="preserve">
          <source>The example above will create a &lt;code&gt;lib.js&lt;/code&gt; and &lt;code&gt;lib.node.js&lt;/code&gt; file in your &lt;code&gt;dist&lt;/code&gt; folder.</source>
          <target state="translated">위 예제는 &lt;code&gt;dist&lt;/code&gt; 폴더 에 &lt;code&gt;lib.js&lt;/code&gt; 및 &lt;code&gt;lib.node.js&lt;/code&gt; 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="550fb5db8af67f8ea949e6d036a7d750562bb809" translate="yes" xml:space="preserve">
          <source>The example above will only give you performance hints based on &lt;code&gt;.js&lt;/code&gt; files.</source>
          <target state="translated">위의 예는 &lt;code&gt;.js&lt;/code&gt; 파일을 기반으로 한 성능 힌트 만 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="3db532cae8766ac1f04fe8609540dcabd0918362" translate="yes" xml:space="preserve">
          <source>The examples below describe how webpack's configuration can be both expressive and configurable because &lt;em&gt;it is code&lt;/em&gt;:</source>
          <target state="translated">The examples below describe how webpack's configuration can be both expressive and configurable because &lt;em&gt;it is code&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="8cd99ede41e0d24db8a2e291b6738350a5b14058" translate="yes" xml:space="preserve">
          <source>The examples in this guide stem from &lt;a href=&quot;getting-started&quot;&gt;getting started&lt;/a&gt;, &lt;a href=&quot;output-management&quot;&gt;output management&lt;/a&gt; and &lt;a href=&quot;code-splitting&quot;&gt;code splitting&lt;/a&gt;.</source>
          <target state="translated">이 안내서의 예제는 &lt;a href=&quot;getting-started&quot;&gt;시작&lt;/a&gt; , &lt;a href=&quot;output-management&quot;&gt;출력 관리&lt;/a&gt; 및 &lt;a href=&quot;code-splitting&quot;&gt;코드 분할&lt;/a&gt; 에서 비롯됩니다 .</target>
        </trans-unit>
        <trans-unit id="2e118d1734b9ca216adaa508bfc0d9a7da7241a5" translate="yes" xml:space="preserve">
          <source>The exported function has 3 properties: &lt;code&gt;resolve&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">내 보낸 함수에는 &lt;code&gt;resolve&lt;/code&gt; , &lt;code&gt;keys&lt;/code&gt; , &lt;code&gt;id&lt;/code&gt; 의 3 가지 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="50bd1bd96b003419b47ab5f8f8c1b4340c19dce1" translate="yes" xml:space="preserve">
          <source>The extensions/suffixes that are used when resolving loaders. Since version two, we &lt;a href=&quot;https://webpack.js.org/migrate/3/#automatic--loader-module-name-extension-removed&quot;&gt;strongly recommend&lt;/a&gt; using the full name, e.g. &lt;code&gt;example-loader&lt;/code&gt;, as much as possible for clarity. However, if you really wanted to exclude the &lt;code&gt;-loader&lt;/code&gt; bit, i.e. just use &lt;code&gt;example&lt;/code&gt;, you can use this option to do so:</source>
          <target state="translated">The extensions/suffixes that are used when resolving loaders. Since version two, we &lt;a href=&quot;https://webpack.js.org/migrate/3/#automatic--loader-module-name-extension-removed&quot;&gt;strongly recommend&lt;/a&gt; using the full name, e.g. &lt;code&gt;example-loader&lt;/code&gt; , as much as possible for clarity. However, if you really wanted to exclude the &lt;code&gt;-loader&lt;/code&gt; bit, i.e. just use &lt;code&gt;example&lt;/code&gt; , you can use this option to do so:</target>
        </trans-unit>
        <trans-unit id="389b350eb8413c4a925b5a6a40afccde32eca5c0" translate="yes" xml:space="preserve">
          <source>The extensions/suffixes which that are used when resolving loaders. Since version two, we &lt;a href=&quot;../guides/migrating#automatic-loader-module-name-extension-removed&quot;&gt;strongly recommend&lt;/a&gt; using the full name, e.g. &lt;code&gt;example-loader&lt;/code&gt;, as much as possible for clarity. However, if you really wanted to exclude the &lt;code&gt;-loader&lt;/code&gt; bit, i.e. just use &lt;code&gt;example&lt;/code&gt;, you can use this option to do so:</source>
          <target state="translated">로더를 해석 할 때 사용되는 확장 / 접미사. 버전 2부터는 명확성을 위해 전체 이름 (예 : &lt;code&gt;example-loader&lt;/code&gt; )을 사용하는 &lt;a href=&quot;../guides/migrating#automatic-loader-module-name-extension-removed&quot;&gt;것이 좋습니다&lt;/a&gt; . 그러나 &lt;code&gt;-loader&lt;/code&gt; 비트 를 제외하고 싶다면 , 예를 &lt;code&gt;example&lt;/code&gt; 그냥 사용하십시오.이 옵션을 사용하여 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="794aa4e261a7c6a0554650d5905cee89cc73cfa7" translate="yes" xml:space="preserve">
          <source>The extract-loader evaluates the given source code on the fly and returns the result as string. Its main use-case is to resolve urls within HTML and CSS coming from their respective loaders. Use the &lt;a href=&quot;file-loader&quot;&gt;file-loader&lt;/a&gt; to emit the extract-loader's result as separate file.</source>
          <target state="translated">추출 로더는 주어진 소스 코드를 즉시 평가하고 결과를 문자열로 리턴합니다. 주요 사용 사례는 해당 로더에서 오는 HTML 및 CSS 내의 URL을 확인하는 것입니다. &lt;a href=&quot;file-loader&quot;&gt;파일 로더&lt;/a&gt; 를 사용하여 추출 로더의 결과를 별도의 파일로 내보내십시오.</target>
        </trans-unit>
        <trans-unit id="453084e89f5428bcc7e5ed45107b51b910c05098" translate="yes" xml:space="preserve">
          <source>The extract-loader works similar to the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; and is meant as a lean alternative to it. When evaluating the source code, it provides a fake context which was especially designed to cope with the code generated by the &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; or the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt;. Thus it might not work in other situations.</source>
          <target state="translated">추출 로더는 &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; 과 유사하게 작동 하며 이에 대한 대체 대안으로 사용됩니다. 소스 코드를 평가할 때 &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; 또는 &lt;a href=&quot;css-loader&quot;&gt;css-loader에&lt;/a&gt; 의해 생성 된 코드를 처리하도록 특별히 설계된 가짜 컨텍스트를 제공합니다 . 따라서 다른 상황에서는 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0e83cedb787e8fdb96980744feaad893d123b30" translate="yes" xml:space="preserve">
          <source>The extract-loader works similar to the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; and the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; and is meant as a lean alternative to it. When evaluating the source code, it provides a fake context which was especially designed to cope with the code generated by the &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; or the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt;. Thus it might not work in other situations.</source>
          <target state="translated">The extract-loader works similar to the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; and the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; and is meant as a lean alternative to it. When evaluating the source code, it provides a fake context which was especially designed to cope with the code generated by the &lt;a href=&quot;html-loader&quot;&gt;html-&lt;/a&gt; or the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt;. Thus it might not work in other situations.</target>
        </trans-unit>
        <trans-unit id="16d5d63de6fda830696b84c6adce09e4cc8d99c4" translate="yes" xml:space="preserve">
          <source>The fallback loader will receive the same configuration options as url-loader.</source>
          <target state="translated">대체 로더에는 url-loader와 동일한 구성 옵션이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="0795b4e5fc07744afbf074537a8f64cce79c5701" translate="yes" xml:space="preserve">
          <source>The file extension is then resolved in a similar way using the &lt;a href=&quot;../configuration/resolve#resolveextensions&quot;&gt;&lt;code&gt;resolve.extensions&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">The file extension is then resolved in a similar way using the &lt;a href=&quot;../configuration/resolve#resolveextensions&quot;&gt; &lt;code&gt;resolve.extensions&lt;/code&gt; &lt;/a&gt; option.</target>
        </trans-unit>
        <trans-unit id="24a12e3645cc54e3f1d24478d16f98c7ce1b82c6" translate="yes" xml:space="preserve">
          <source>The file extension is then resolved in a similar way using the &lt;code&gt;resolve.extensions&lt;/code&gt; option.</source>
          <target state="translated">그런 다음 &lt;code&gt;resolve.extensions&lt;/code&gt; 옵션을 사용하여 유사한 방식으로 파일 확장자를 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="19c2603ed5d45d2ba7f1dcca02a02345da1c6750" translate="yes" xml:space="preserve">
          <source>The file extension of the target file/resource.</source>
          <target state="translated">대상 파일 / 리소스의 파일 확장자입니다.</target>
        </trans-unit>
        <trans-unit id="8117b59c7f4e6ea23fdb3229936a65a8a033880e" translate="yes" xml:space="preserve">
          <source>The file is requested when you require the &lt;code&gt;bundle-loader&lt;/code&gt;. If you want it to request it lazy, use:</source>
          <target state="translated">파일은 &lt;code&gt;bundle-loader&lt;/code&gt; 가 필요할 때 요청됩니다 . 지연을 요청하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="66e51225d686d671805bbc321a2ba8d33de15225" translate="yes" xml:space="preserve">
          <source>The file where the extracted comments will be stored. Can be either a &lt;code&gt;{String}&lt;/code&gt; or a &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;}&lt;/code&gt;, which will be given the original filename. Default is to append the suffix &lt;code&gt;.LICENSE&lt;/code&gt; to the original filename</source>
          <target state="translated">추출 된 주석이 저장 될 파일입니다. 될 수 중 하나 &lt;code&gt;{String}&lt;/code&gt; 또는 &lt;code&gt;{Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;}&lt;/code&gt; , 원래의 파일 이름을 부여 할 것이다. 기본값은 접미사 &lt;code&gt;.LICENSE&lt;/code&gt; 를 원래 파일 이름 에 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1a52d902ede779f8aedcefceb6c5761fd37addf5" translate="yes" xml:space="preserve">
          <source>The file where the extracted comments will be stored. Default is to append the suffix &lt;code&gt;.LICENSE.txt&lt;/code&gt; to the original filename.</source>
          <target state="translated">The file where the extracted comments will be stored. Default is to append the suffix &lt;code&gt;.LICENSE.txt&lt;/code&gt; to the original filename.</target>
        </trans-unit>
        <trans-unit id="5c0ad8e4b7dc560580c3d7f3e7a9b350ee96549f" translate="yes" xml:space="preserve">
          <source>The file where the extracted comments will be stored. Default is to append the suffix &lt;code&gt;.LICENSE&lt;/code&gt; to the original filename.</source>
          <target state="translated">추출 된 주석이 저장 될 파일입니다. 기본값은 접미사 &lt;code&gt;.LICENSE&lt;/code&gt; 를 원래 파일 이름 에 추가하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="2abdea845896b85bb089325305fabc74a5095e89" translate="yes" xml:space="preserve">
          <source>The filename of entry chunks for web workers</source>
          <target state="translated">The filename of entry chunks for web workers</target>
        </trans-unit>
        <trans-unit id="4a61f3dd6517c4ea22c5343ab7602963b88540b1" translate="yes" xml:space="preserve">
          <source>The filename of entry chunks for web workers.</source>
          <target state="translated">The filename of entry chunks for web workers.</target>
        </trans-unit>
        <trans-unit id="ffd056b174ffe8ad630fac5041d1b37b9de42730" translate="yes" xml:space="preserve">
          <source>The filename of non-entry chunks for web workers</source>
          <target state="translated">The filename of non-entry chunks for web workers</target>
        </trans-unit>
        <trans-unit id="2042f0e861e377e9088f09df08ad3f19a4353d4a" translate="yes" xml:space="preserve">
          <source>The filename of non-entry chunks for web workers.</source>
          <target state="translated">The filename of non-entry chunks for web workers.</target>
        </trans-unit>
        <trans-unit id="42691448a39272a04c7623d4ac9237529f167323" translate="yes" xml:space="preserve">
          <source>The filename that is considered the index file.</source>
          <target state="translated">인덱스 파일로 간주되는 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6265cd364a45ae95000867ee2a076cb217cff18f" translate="yes" xml:space="preserve">
          <source>The filename to be used while resolving directories.</source>
          <target state="translated">The filename to be used while resolving directories.</target>
        </trans-unit>
        <trans-unit id="9a7fe9404151c99b0fe504095a9cff5fbb57d21c" translate="yes" xml:space="preserve">
          <source>The filename to be used while resolving directories. Default:</source>
          <target state="translated">디렉토리를 분석 할 때 사용할 파일 이름입니다. 기본:</target>
        </trans-unit>
        <trans-unit id="4675b7019de2215d025f035289f9016a1f62a783" translate="yes" xml:space="preserve">
          <source>The final location of the cache is a combination of &lt;code&gt;cache.cacheDirectory&lt;/code&gt; + &lt;code&gt;cache.name&lt;/code&gt;.</source>
          <target state="translated">The final location of the cache is a combination of &lt;code&gt;cache.cacheDirectory&lt;/code&gt; + &lt;code&gt;cache.name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1adb1b5390fbdfac478c72a15607cdb2748376e0" translate="yes" xml:space="preserve">
          <source>The first and last are expected -- it's the &lt;code&gt;vendor&lt;/code&gt; hash we want to fix. Luckily, there are two plugins we can use to resolve this issue. The first is the &lt;code&gt;NamedModulesPlugin&lt;/code&gt;, which will use the path to the module rather than a numerical identifier. While this plugin is useful during development for more readable output, it does take a bit longer to run. The second option is the &lt;a href=&quot;../plugins/hashed-module-ids-plugin&quot;&gt;&lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt;&lt;/a&gt;, which is recommended for production builds:</source>
          <target state="translated">첫 번째와 마지막이 예상 됩니다. 수정하려는 &lt;code&gt;vendor&lt;/code&gt; 해시입니다. 다행히이 문제를 해결하는 데 사용할 수있는 두 가지 플러그인이 있습니다. 첫 번째는 &lt;code&gt;NamedModulesPlugin&lt;/code&gt; 이며, 숫자 식별자 대신 모듈의 경로를 사용합니다. 이 플러그인은 개발 중에 더 읽기 쉬운 출력을 위해 유용하지만 실행하는 데 시간이 조금 더 걸립니다. 두 번째 옵션은 &lt;a href=&quot;../plugins/hashed-module-ids-plugin&quot;&gt; &lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt; &lt;/a&gt; 이며 프로덕션 빌드에 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="bd39890da8b625a8684975fbf6349927a2721a8e" translate="yes" xml:space="preserve">
          <source>The first and last are expected, it's the &lt;code&gt;vendor&lt;/code&gt; hash we want to fix. Let's use &lt;a href=&quot;../configuration/optimization#optimizationmoduleids&quot;&gt;&lt;code&gt;optimization.moduleIds&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;'deterministic'&lt;/code&gt; option:</source>
          <target state="translated">The first and last are expected, it's the &lt;code&gt;vendor&lt;/code&gt; hash we want to fix. Let's use &lt;a href=&quot;../configuration/optimization#optimizationmoduleids&quot;&gt; &lt;code&gt;optimization.moduleIds&lt;/code&gt; &lt;/a&gt; with &lt;code&gt;'deterministic'&lt;/code&gt; option:</target>
        </trans-unit>
        <trans-unit id="285df81918288a75eff9819c28e80e90c6e6647c" translate="yes" xml:space="preserve">
          <source>The first argument must be an &lt;code&gt;Error&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">첫 번째 인수는 &lt;code&gt;Error&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 이어야합니다</target>
        </trans-unit>
        <trans-unit id="6baa2b9c23677a35073f9bdacb05028ae17a78b5" translate="yes" xml:space="preserve">
          <source>The first argument of the &lt;code&gt;webpack.DefinePlugin.runtimeValue&lt;/code&gt; is a &lt;code&gt;function&lt;/code&gt; that should return the value to be assigned to the definition.</source>
          <target state="translated">The first argument of the &lt;code&gt;webpack.DefinePlugin.runtimeValue&lt;/code&gt; is a &lt;code&gt;function&lt;/code&gt; that should return the value to be assigned to the definition.</target>
        </trans-unit>
        <trans-unit id="5d624090a9474a6049647db4976a8af625747830" translate="yes" xml:space="preserve">
          <source>The first loader is passed one argument: the content of the resource file. The compiler expects a result from the last loader. The result should be a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Buffer&lt;/code&gt; (which is converted to a string), representing the JavaScript source code of the module. An optional SourceMap result (as JSON object) may also be passed.</source>
          <target state="translated">첫 번째 로더에는 하나의 인수, 즉 리소스 파일의 내용이 전달됩니다. 컴파일러는 마지막 로더의 결과를 기대합니다. 결과는 모듈의 JavaScript 소스 코드를 나타내는 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;Buffer&lt;/code&gt; (문자열로 변환 됨) 여야합니다 . 선택적 SourceMap 결과 (JSON 객체)도 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08210d6a93346bbd17560e1fcb340926b15ad7a1" translate="yes" xml:space="preserve">
          <source>The first loader is passed one argument: the content of the resource file. The compiler expects a result from the last loader. The result should be a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Buffer&lt;/code&gt; (which is converted to a string), representing the JavaScript source code of the module. An optional SourceMap result (as a JSON object) may also be passed.</source>
          <target state="translated">The first loader is passed one argument: the content of the resource file. The compiler expects a result from the last loader. The result should be a &lt;code&gt;String&lt;/code&gt; or a &lt;code&gt;Buffer&lt;/code&gt; (which is converted to a string), representing the JavaScript source code of the module. An optional SourceMap result (as a JSON object) may also be passed.</target>
        </trans-unit>
        <trans-unit id="526e4cbb061a7ecff58a71d4a1abe32510b836e6" translate="yes" xml:space="preserve">
          <source>The first of these two points is definitely an issue for our example, as &lt;code&gt;lodash&lt;/code&gt; is also imported within &lt;code&gt;./src/index.js&lt;/code&gt; and will thus be duplicated in both bundles. Let's remove this duplication by using the &lt;code&gt;SplitChunks&lt;/code&gt; plugin.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 도 &lt;code&gt;./src/index.js&lt;/code&gt; 내에서 가져 와서 두 번들에 복제 되므로이 두 점 중 첫 번째 점은이 예에서 분명히 문제 가됩니다. &lt;code&gt;SplitChunks&lt;/code&gt; 플러그인 을 사용하여이 중복을 제거합시다 .</target>
        </trans-unit>
        <trans-unit id="146764a0b36866667a031a8325e9976afc652767" translate="yes" xml:space="preserve">
          <source>The first of these two points is definitely an issue for our example, as &lt;code&gt;lodash&lt;/code&gt; is also imported within &lt;code&gt;./src/index.js&lt;/code&gt; and will thus be duplicated in both bundles. Let's remove this duplication in next section.</source>
          <target state="translated">The first of these two points is definitely an issue for our example, as &lt;code&gt;lodash&lt;/code&gt; is also imported within &lt;code&gt;./src/index.js&lt;/code&gt; and will thus be duplicated in both bundles. Let's remove this duplication in next section.</target>
        </trans-unit>
        <trans-unit id="7d9234d6eea4d64eafd089788ed4bb6c494468bd" translate="yes" xml:space="preserve">
          <source>The first parameter of the tap method of the compiler hook should be a camelized version of the plugin name. It is advisable to use a constant for this so it can be reused in all hooks.</source>
          <target state="translated">컴파일러 후크의 탭 메소드의 첫 번째 매개 변수는 플러그인 이름의 낙타 버전이어야합니다. 모든 후크에서 재사용 할 수 있도록 상수를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="bf141e95df1de73d45323ec796f1723e3a9413bb" translate="yes" xml:space="preserve">
          <source>The folder of the resource is in.</source>
          <target state="translated">The folder of the resource is in.</target>
        </trans-unit>
        <trans-unit id="093e10ad7457afb67646ecdc23d37c05d5f7c2a2" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;EnvironmentPlugin&lt;/code&gt; configuration provides &lt;code&gt;process.env.GIT_VERSION&lt;/code&gt; (such as &quot;v5.4.0-2-g25139f57f&quot;) and &lt;code&gt;process.env.GIT_AUTHOR_DATE&lt;/code&gt; (such as &quot;2020-11-04T12:25:16+01:00&quot;) corresponding to the last Git commit of the repository:</source>
          <target state="translated">The following &lt;code&gt;EnvironmentPlugin&lt;/code&gt; configuration provides &lt;code&gt;process.env.GIT_VERSION&lt;/code&gt; (such as &quot;v5.4.0-2-g25139f57f&quot;) and &lt;code&gt;process.env.GIT_AUTHOR_DATE&lt;/code&gt; (such as &quot;2020-11-04T12:25:16+01:00&quot;) corresponding to the last Git commit of the repository:</target>
        </trans-unit>
        <trans-unit id="4ef7ab2fdbe131166ce0f45896431e42dc48f933" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;webpack.config.js&lt;/code&gt; can load CSS files, embed small PNG/JPG/GIF/SVG images as well as fonts as &lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt;Data URLs&lt;/a&gt; and copy larger files to the output directory.</source>
          <target state="translated">다음 &lt;code&gt;webpack.config.js&lt;/code&gt; 는 CSS 파일을로드하고 작은 PNG / JPG / GIF / SVG 이미지와 글꼴을 &lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt;데이터 URL로 포함&lt;/a&gt; 하고 더 큰 파일을 출력 디렉토리에 복사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e09c768c657b45613fcdaaddfbfe084cc9e39dd6" translate="yes" xml:space="preserve">
          <source>The following NPM installation will make &lt;code&gt;webpack&lt;/code&gt; available globally:</source>
          <target state="translated">다음 NPM 설치는 &lt;code&gt;webpack&lt;/code&gt; 전 세계적으로 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="c50610b612001be3f0b94e2290089629c37f4acd" translate="yes" xml:space="preserve">
          <source>The following Node.js options configure whether to polyfill or mock certain &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js globals&lt;/a&gt;.</source>
          <target state="translated">The following Node.js options configure whether to polyfill or mock certain &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js globals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e57f2c4591b00f570d0a42bac7dba6e81f6332bc" translate="yes" xml:space="preserve">
          <source>The following approach will not work either:</source>
          <target state="translated">다음 방법도 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a2f57e1f4b8865d88e8bbdcf153e1450567e0da" translate="yes" xml:space="preserve">
          <source>The following article will walk through both of these use cases.</source>
          <target state="translated">다음 기사에서는 이러한 두 가지 사용 사례를 모두 설명합니다.</target>
        </trans-unit>
        <trans-unit id="678973c41a6b79f5b722e9b40c1f281d633c89b0" translate="yes" xml:space="preserve">
          <source>The following best practices should help whether or not you are in &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; or building for &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</source>
          <target state="translated">다음 모범 사례는 &lt;a href=&quot;development&quot;&gt;개발&lt;/a&gt; 또는 &lt;a href=&quot;production&quot;&gt;프로덕션&lt;/a&gt; 용 건물 인지 여부에 도움이됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7eeb221fe638ecee1d71399a6f741d2113bd296" translate="yes" xml:space="preserve">
          <source>The following best practices should help, whether you're running build scripts in &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; or &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</source>
          <target state="translated">The following best practices should help, whether you're running build scripts in &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; or &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bd3d71fbc90b4965eee8e8c2d91c6a81f72260f9" translate="yes" xml:space="preserve">
          <source>The following code would exclude source maps for any modules in the &lt;code&gt;vendor.js&lt;/code&gt; bundle:</source>
          <target state="translated">다음 코드는 &lt;code&gt;vendor.js&lt;/code&gt; 번들의 모든 모듈에 대한 소스 맵을 제외 합니다.</target>
        </trans-unit>
        <trans-unit id="4bae8bd33f64798315f4b9a7a6fa6f94f186c42d" translate="yes" xml:space="preserve">
          <source>The following conditions are set depending on the target environment:</source>
          <target state="translated">The following conditions are set depending on the target environment:</target>
        </trans-unit>
        <trans-unit id="7ae433e95547aea5875cdefe77fda4e1fe0fbe74" translate="yes" xml:space="preserve">
          <source>The following conditions are set depending on which tool preprocesses the source code.</source>
          <target state="translated">The following conditions are set depending on which tool preprocesses the source code.</target>
        </trans-unit>
        <trans-unit id="28d00fabb2a8570ca16641499e5ae03d6dbd6dd6" translate="yes" xml:space="preserve">
          <source>The following conditions are set for various optimizations:</source>
          <target state="translated">The following conditions are set for various optimizations:</target>
        </trans-unit>
        <trans-unit id="82ad836ded4b99729d81a979590b01af6ca4f2c8" translate="yes" xml:space="preserve">
          <source>The following configuration disables automatic per-file runtime injection in Babel, requiring &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; instead and making all helper references use it.</source>
          <target state="translated">The following configuration disables automatic per-file runtime injection in Babel, requiring &lt;code&gt;@babel/plugin-transform-runtime&lt;/code&gt; instead and making all helper references use it.</target>
        </trans-unit>
        <trans-unit id="8709f36c191d4f117275510a4bc1f38092fe4b33" translate="yes" xml:space="preserve">
          <source>The following configuration disables automatic per-file runtime injection in babel, instead requiring &lt;code&gt;babel-plugin-transform-runtime&lt;/code&gt; and making all helper references use it.</source>
          <target state="translated">다음 구성은 babel에서 파일 당 자동 런타임 주입을 비활성화하고 대신 &lt;code&gt;babel-plugin-transform-runtime&lt;/code&gt; 을 필요로하고 모든 도우미 참조가이를 사용하도록합니다.</target>
        </trans-unit>
        <trans-unit id="8fe90b1288f44498fb756129bc5a0a2af786bb67" translate="yes" xml:space="preserve">
          <source>The following configurations are supported:</source>
          <target state="translated">다음 구성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b13725a6ae447ef21a0afad19188e76009a3e8cf" translate="yes" xml:space="preserve">
          <source>The following examples below describe how webpack's configuration object can be both expressive and configurable because &lt;em&gt;it is code&lt;/em&gt;:</source>
          <target state="translated">아래의 예제는 웹팩의 구성 객체 &lt;em&gt;가 코드&lt;/em&gt; 이기 때문에 표현적이고 구성 가능한 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="d845fb6e558a229ab97eb2a6aba515891d721d5b" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate a few ways this plugin can be used.</source>
          <target state="translated">다음 예제는이 플러그인을 사용할 수있는 몇 가지 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="26f4af435cad2a96ac6af4b806fbcad458532c0d" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate some common use cases for this plugin.</source>
          <target state="translated">다음 예제는이 플러그인의 일반적인 사용 사례를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1849f61df45d0162d9079faaf0c67c7edbd85004" translate="yes" xml:space="preserve">
          <source>The following examples show how one might use &lt;code&gt;file-loader&lt;/code&gt; and what the result would be.</source>
          <target state="translated">다음 예제는 &lt;code&gt;file-loader&lt;/code&gt; 사용하는 방법 과 결과를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="68b1d67823b044c93381d7264c1cf2ace34ecaeb" translate="yes" xml:space="preserve">
          <source>The following examples show how to use &lt;code&gt;file-loader&lt;/code&gt; for CDN uses query params.</source>
          <target state="translated">The following examples show how to use &lt;code&gt;file-loader&lt;/code&gt; for CDN uses query params.</target>
        </trans-unit>
        <trans-unit id="44d44bb2f64a1979b129bd0f1ec4f5b13fc76e58" translate="yes" xml:space="preserve">
          <source>The following hooks report progress information to &lt;code&gt;ProgressPlugin&lt;/code&gt;.</source>
          <target state="translated">The following hooks report progress information to &lt;code&gt;ProgressPlugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c40477b0ccf58dde30ff4d3095e2b4524b76a06f" translate="yes" xml:space="preserve">
          <source>The following import statement will trigger the hook once:</source>
          <target state="translated">The following import statement will trigger the hook once:</target>
        </trans-unit>
        <trans-unit id="3103956137f2ddc4a8ea8dd89ac9999002f056f3" translate="yes" xml:space="preserve">
          <source>The following import statement will trigger the hook twice:</source>
          <target state="translated">The following import statement will trigger the hook twice:</target>
        </trans-unit>
        <trans-unit id="a052f6a1445904f054ec0a6caedf2123b8ca8e0e" translate="yes" xml:space="preserve">
          <source>The following lifecycle hooks are exposed by the &lt;code&gt;compiler&lt;/code&gt; and can be accessed as such:</source>
          <target state="translated">다음 수명주기 후크는 &lt;code&gt;compiler&lt;/code&gt; 의해 노출되며 그대로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0b945c38650ddf7d6afcf4290fc738ecb312a93" translate="yes" xml:space="preserve">
          <source>The following lifecycle hooks are exposed by the &lt;code&gt;parser&lt;/code&gt; and can be accessed as such:</source>
          <target state="translated">다음 수명주기 후크는 &lt;code&gt;parser&lt;/code&gt; 의해 노출되며 그대로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d72a562a0b2950b13a0175ee7b8eb0439c9a57b5" translate="yes" xml:space="preserve">
          <source>The following methods are supported...</source>
          <target state="translated">다음과 같은 방법이 지원됩니다 ...</target>
        </trans-unit>
        <trans-unit id="e4d77afab2cb5c0e79177397fed4c21c74e5e9f3" translate="yes" xml:space="preserve">
          <source>The following options are accepted:</source>
          <target state="translated">다음과 같은 옵션이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c50a926ca6ac44ce44b0b0c4408cf022677665b6" translate="yes" xml:space="preserve">
          <source>The following options are ideal for development:</source>
          <target state="translated">다음 옵션은 개발에 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="d84d03f469cd5c6bd18b7e42fd7802b60d6ad892" translate="yes" xml:space="preserve">
          <source>The following options are not ideal for development nor production. They are needed for some special cases, i. e. for some 3rd party tools.</source>
          <target state="translated">다음 옵션은 개발이나 생산에 적합하지 않습니다. 특수한 경우, 즉 일부 타사 도구에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3ab6a9f1a0bbaef19cacfbc5c31136467bf2e22d" translate="yes" xml:space="preserve">
          <source>The following options are supported:</source>
          <target state="translated">다음과 같은 옵션이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="df764edfdfccdeb5073770c5372a6d62f6fea17c" translate="yes" xml:space="preserve">
          <source>The following parameters are supported in the order specified above:</source>
          <target state="translated">다음 매개 변수는 위에서 지정한 순서대로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f0dd5a0b610e80f1bc7f0e825cff0c25a34dce73" translate="yes" xml:space="preserve">
          <source>The following pseudo JavaScript explains the algorithm:</source>
          <target state="translated">다음 의사 JavaScript는 알고리즘을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b78ac2bb7487b9b97617ca300f935d78befc5713" translate="yes" xml:space="preserve">
          <source>The following sections provide some basic examples of the different types of loaders. Note that the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt; parameters are optional, see &lt;a href=&quot;#thiscallback&quot;&gt;&lt;code&gt;this.callback&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">The following sections provide some basic examples of the different types of loaders. Note that the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt; parameters are optional, see &lt;a href=&quot;#thiscallback&quot;&gt; &lt;code&gt;this.callback&lt;/code&gt; &lt;/a&gt; below.</target>
        </trans-unit>
        <trans-unit id="358a3d576958f5f1b3e7c42e523d1d2554052390" translate="yes" xml:space="preserve">
          <source>The following sections provide some basic examples of the different types of loaders. Note that the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt; parameters are optional, see &lt;a href=&quot;loaders#this-callback&quot;&gt;&lt;code&gt;this.callback&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">다음 섹션에서는 다양한 유형의 로더에 대한 몇 가지 기본 예를 제공합니다. 참고 것을 &lt;code&gt;map&lt;/code&gt; 및 &lt;code&gt;meta&lt;/code&gt; 매개 변수는 선택 사항을 참조 &lt;a href=&quot;loaders#this-callback&quot;&gt; &lt;code&gt;this.callback&lt;/code&gt; &lt;/a&gt; 아래.</target>
        </trans-unit>
        <trans-unit id="a531a0077512a0466129920af78d3a3e2dc49daf" translate="yes" xml:space="preserve">
          <source>The following setup is an example of allowing &lt;code&gt;Interoperable CSS&lt;/code&gt; features only (such as &lt;code&gt;:import&lt;/code&gt; and &lt;code&gt;:export&lt;/code&gt;) without using further &lt;code&gt;CSS Module&lt;/code&gt; functionality by setting &lt;code&gt;compileType&lt;/code&gt; option for all files that do not match &lt;code&gt;*.module.scss&lt;/code&gt; naming convention. This is for reference as having &lt;code&gt;ICSS&lt;/code&gt; features applied to all files was default &lt;code&gt;css-loader&lt;/code&gt; behavior before v4. Meanwhile all files matching &lt;code&gt;*.module.scss&lt;/code&gt; are treated as &lt;code&gt;CSS Modules&lt;/code&gt; in this example.</source>
          <target state="translated">The following setup is an example of allowing &lt;code&gt;Interoperable CSS&lt;/code&gt; features only (such as &lt;code&gt;:import&lt;/code&gt; and &lt;code&gt;:export&lt;/code&gt; ) without using further &lt;code&gt;CSS Module&lt;/code&gt; functionality by setting &lt;code&gt;compileType&lt;/code&gt; option for all files that do not match &lt;code&gt;*.module.scss&lt;/code&gt; naming convention. This is for reference as having &lt;code&gt;ICSS&lt;/code&gt; features applied to all files was default &lt;code&gt;css-loader&lt;/code&gt; behavior before v4. Meanwhile all files matching &lt;code&gt;*.module.scss&lt;/code&gt; are treated as &lt;code&gt;CSS Modules&lt;/code&gt; in this example.</target>
        </trans-unit>
        <trans-unit id="1c2f6bec656ab12985a3d65fbee3d5f476e86100" translate="yes" xml:space="preserve">
          <source>The following steps allow modules to be swapped in and out of an application:</source>
          <target state="translated">다음 단계를 통해 모듈을 응용 프로그램 내외부로 교환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb00badcb3449f08d67086ef9131607ceef57096" translate="yes" xml:space="preserve">
          <source>The following steps are especially useful in &lt;em&gt;development&lt;/em&gt;.</source>
          <target state="translated">다음 단계는 특히 &lt;em&gt;개발에&lt;/em&gt; 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="4308c488d5fc825f759c2149b59c6977cd8020af" translate="yes" xml:space="preserve">
          <source>The following steps are especially useful in &lt;em&gt;production&lt;/em&gt;.</source>
          <target state="translated">다음 단계는 특히 &lt;em&gt;생산에&lt;/em&gt; 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="5f0e7e81e5d142099d152c7594561b3e8c300b10" translate="yes" xml:space="preserve">
          <source>The following steps can increase resolving speed:</source>
          <target state="translated">The following steps can increase resolving speed:</target>
        </trans-unit>
        <trans-unit id="b7cdaed98fa9728f3dcb7fbd1bd9e9dde0fef43e" translate="yes" xml:space="preserve">
          <source>The following steps can increase the speed of resolving:</source>
          <target state="translated">다음 단계는 해결 속도를 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78064ebad412dafd7f97cab0302ad0ffbb211b83" translate="yes" xml:space="preserve">
          <source>The following string values are supported via &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js&quot;&gt;&lt;code&gt;WebpackOptionsApply&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 문자열 값은 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js&quot;&gt; &lt;code&gt;WebpackOptionsApply&lt;/code&gt; &lt;/a&gt; 를 통해 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="58f9d8bd855a58eaf844f5bdd0eb9e6333c59dbe" translate="yes" xml:space="preserve">
          <source>The following string values are supported:</source>
          <target state="translated">다음 문자열 값이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="292d4638ace13f846ef8f5e4299bbc764dab8797" translate="yes" xml:space="preserve">
          <source>The following substitutions are available in template strings (via webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/ModuleFilenameHelpers.js&quot;&gt;&lt;code&gt;ModuleFilenameHelpers&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">다음 대체는 템플릿 문자열에서 사용할 수 있습니다 (웹팩의 내부 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/ModuleFilenameHelpers.js&quot;&gt; &lt;code&gt;ModuleFilenameHelpers&lt;/code&gt; 사용&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d43ba6fd87e03b99bf4c08264e8937a094bc5a6c" translate="yes" xml:space="preserve">
          <source>The following substitutions are available in template strings (via webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;&lt;code&gt;TemplatedPathPlugin&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">웹 문자열의 내부 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt; &lt;code&gt;TemplatedPathPlugin&lt;/code&gt; 을&lt;/a&gt; 통해 템플리트 문자열에서 다음 대체를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="956e6a8d3eefecc9bc6b08a8650be6b46a2d275b" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;asset&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;asset&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="fea29774d87f3fe2af810c0c9e39d683fa3cdbf5" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;import&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;import&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="3944714b7516accbbd62efb5a7f911578d6fc4df" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;require&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;require&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="20e048fd4c527d735ff7fb116aca6ca9beb07204" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;script&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;script&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="5b3519b0a4ff61bc242bed7ac2e9ee3829a5393a" translate="yes" xml:space="preserve">
          <source>The following syntax will set the &lt;code&gt;style&lt;/code&gt; condition:</source>
          <target state="translated">The following syntax will set the &lt;code&gt;style&lt;/code&gt; condition:</target>
        </trans-unit>
        <trans-unit id="00c83362a2351fb229e86b82b5cc384b190a6627" translate="yes" xml:space="preserve">
          <source>The following syntaxes are accepted...</source>
          <target state="translated">다음과 같은 구문이 허용됩니다 ...</target>
        </trans-unit>
        <trans-unit id="cdcae432bd2b6c399318440c9434100436e71338" translate="yes" xml:space="preserve">
          <source>The following table explains other cases:</source>
          <target state="translated">다음 표는 다른 경우에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="e8d6fb0b5a199393021b21ed46adcf28660dbc55" translate="yes" xml:space="preserve">
          <source>The following tools have certain problems that can degrade build performance.</source>
          <target state="translated">다음 도구에는 빌드 성능을 저하시킬 수있는 특정 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8de98242ee7b3d02c80fdb699692121f062581da" translate="yes" xml:space="preserve">
          <source>The following tools have certain problems that can degrade build performance:</source>
          <target state="translated">The following tools have certain problems that can degrade build performance:</target>
        </trans-unit>
        <trans-unit id="86a17425a417d3f21dc03cbde46985454bf993c4" translate="yes" xml:space="preserve">
          <source>The following tools support custom conditions:</source>
          <target state="translated">The following tools support custom conditions:</target>
        </trans-unit>
        <trans-unit id="3b4ce38a560cabaa301d282bfce9aac7becbf9e2" translate="yes" xml:space="preserve">
          <source>The following utilities improve performance by compiling and serving assets in memory rather than writing to disk:</source>
          <target state="translated">다음 유틸리티는 디스크에 쓰지 않고 메모리에서 자산을 컴파일하고 제공하여 성능을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="2936d5adb9e240b503a66e2c87b97599cd38ff58" translate="yes" xml:space="preserve">
          <source>The following values are supported:</source>
          <target state="translated">다음과 같은 값이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b1a4d3fc2e43494645fd26eb34e527854b882091" translate="yes" xml:space="preserve">
          <source>The format of chunks (formats included by default are 'array-push' (web/WebWorker), 'commonjs' (node.js), but others might be added by plugins).</source>
          <target state="translated">The format of chunks (formats included by default are 'array-push' (web/WebWorker), 'commonjs' (node.js), but others might be added by plugins).</target>
        </trans-unit>
        <trans-unit id="adb760b46a74652ab1343797c2772e58108b9d71" translate="yes" xml:space="preserve">
          <source>The full hash of compilation</source>
          <target state="translated">The full hash of compilation</target>
        </trans-unit>
        <trans-unit id="fbd2a40b20776c068f57487a9554e83f00e6ea55" translate="yes" xml:space="preserve">
          <source>The full list of available modes and their behavior is described in &lt;a href=&quot;#import-1&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">The full list of available modes and their behavior is described in &lt;a href=&quot;#import-1&quot;&gt; &lt;code&gt;import()&lt;/code&gt; &lt;/a&gt; documentation.</target>
        </trans-unit>
        <trans-unit id="02d451fad6416a0cc511a895bf55cb6593cb7b80" translate="yes" xml:space="preserve">
          <source>The function must return one of the values:</source>
          <target state="translated">The function must return one of the values:</target>
        </trans-unit>
        <trans-unit id="f119c0fa5b73286d19fec4335349b142a571bc1e" translate="yes" xml:space="preserve">
          <source>The function normalizes configuration (converts plugins names and options to &lt;code&gt;Function&lt;/code&gt;s) for using in &lt;code&gt;imagemin&lt;/code&gt; package directly.</source>
          <target state="translated">The function normalizes configuration (converts plugins names and options to &lt;code&gt;Function&lt;/code&gt; s) for using in &lt;code&gt;imagemin&lt;/code&gt; package directly.</target>
        </trans-unit>
        <trans-unit id="0d4c0f2596233928ed15a307410bb9cbcb4a1763" translate="yes" xml:space="preserve">
          <source>The function receives three arguments:</source>
          <target state="translated">The function receives three arguments:</target>
        </trans-unit>
        <trans-unit id="ca15d1d0d8aa11d93d6ca1a567cc9ff1370ac2c0" translate="yes" xml:space="preserve">
          <source>The function, which can return filename [string]</source>
          <target state="translated">파일 이름 [문자열]을 반환 할 수있는 함수</target>
        </trans-unit>
        <trans-unit id="59c7450e94d45d1d7509992f8d7fb34895023310" translate="yes" xml:space="preserve">
          <source>The generated output will be defined with the name &quot;MyLibrary&quot;, i.e.</source>
          <target state="translated">생성 된 출력은 &quot;MyLibrary&quot;라는 이름으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="175fff95d48e044762395bdd73eb8a40d3c60bc6" translate="yes" xml:space="preserve">
          <source>The global variable used by webpack for loading of chunks.</source>
          <target state="translated">The global variable used by webpack for loading of chunks.</target>
        </trans-unit>
        <trans-unit id="4ee640bb2b9cec6c071382b82b303d30815f1e04" translate="yes" xml:space="preserve">
          <source>The goal of CommonJS is to specify an ecosystem for JavaScript outside the browser. The following CommonJS methods are supported by webpack:</source>
          <target state="translated">CommonJS의 목표는 브라우저 외부에서 JavaScript를위한 에코 시스템을 지정하는 것입니다. 다음과 같은 CommonJS 메소드가 웹팩에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="89250071811de7ae2e1e9e79e9c0f6750a60c64b" translate="yes" xml:space="preserve">
          <source>The goals of &lt;em&gt;development&lt;/em&gt; and &lt;em&gt;production&lt;/em&gt; builds differ greatly. In &lt;em&gt;development&lt;/em&gt;, we want strong source mapping and a localhost server with live reloading or hot module replacement. In &lt;em&gt;production&lt;/em&gt;, our goals shift to a focus on minified bundles, lighter weight source maps, and optimized assets to improve load time. With this logical separation at hand, we typically recommend writing &lt;strong&gt;separate webpack configurations&lt;/strong&gt; for each environment.</source>
          <target state="translated">&lt;em&gt;개발&lt;/em&gt; 및 &lt;em&gt;생산&lt;/em&gt; 빌드 의 목표는 크게 다릅니다. 에서 &lt;em&gt;개발&lt;/em&gt; , 우리는 강력한 소스 매핑 및 라이브 다시로드 또는 뜨거운 모듈 교체와 함께 로컬 호스트 서버를합니다. 에서 &lt;em&gt;생산&lt;/em&gt; , 우리의 목표는로드 시간을 개선하기 위해 축소 된 번들, 가벼운 무게 소스지도, 최적화 된 자산을 중심으로 이동. 이러한 논리적 분리가 가능 &lt;strong&gt;하므로&lt;/strong&gt; 일반적으로 각 환경에 대해 &lt;strong&gt;별도의 웹팩 구성&lt;/strong&gt; 을 작성하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7be5fa44f2388062fa483ac74de7f28c7276fcd4" translate="yes" xml:space="preserve">
          <source>The good news for web projects is that modules are becoming an official feature in the ECMAScript standard. However, browser support is incomplete and bundling is still faster and currently recommended over these early module implementations.</source>
          <target state="translated">The good news for web projects is that modules are becoming an official feature in the ECMAScript standard. However, browser support is incomplete and bundling is still faster and currently recommended over these early module implementations.</target>
        </trans-unit>
        <trans-unit id="e60ad30497663537eaf49d2e92c1776638d808a4" translate="yes" xml:space="preserve">
          <source>The good news is that, while there is some overlap, task runners and bundlers can play well together if approached in the right way. This guide provides a high-level overview of how webpack can be integrated into some of the more popular task runners.</source>
          <target state="translated">좋은 소식은 겹치는 부분이 있지만 올바른 방식으로 접근하면 작업 주자와 번 들러가 함께 재생할 수 있다는 것입니다. 이 안내서는 웹팩을 널리 사용되는 일부 작업 러너에 통합하는 방법에 대한 고급 개요를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="29bce317db54dddeab6ad47336eb7a5f82c4b936" translate="yes" xml:space="preserve">
          <source>The guides get more advanced as you go on. Most serve as a starting point, and once completed you should feel more comfortable diving into the actual &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">The guides get more advanced as you go on. Most serve as a starting point, and once completed you should feel more comfortable diving into the actual &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6791ae6e37e5d1649383b3ad158ea70d586c7f09" translate="yes" xml:space="preserve">
          <source>The guides get more and more advanced as you go on. Most serve as a starting point, and once completed you should feel more comfortable diving into the actual &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">진행하면서 가이드가 점점 더 고급화됩니다. 대부분은 출발점으로 사용되며, 완료되면 실제 &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;문서&lt;/a&gt; 를보다 편안하게 다이빙 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17a8abbce059f5dd51ed7fe6e3a105c0703d77b4" translate="yes" xml:space="preserve">
          <source>The hash of options.content (Buffer) (by default it's the hex digest of the hash).</source>
          <target state="translated">The hash of options.content (Buffer) (by default it's the hex digest of the hash).</target>
        </trans-unit>
        <trans-unit id="4ed4a6a2f4161a7511f3c084677b67ac58fdbd34" translate="yes" xml:space="preserve">
          <source>The hash of the chunk content</source>
          <target state="translated">청크 내용의 해시</target>
        </trans-unit>
        <trans-unit id="9f45f1f5064788d5bb5bc67a87612b757a73368f" translate="yes" xml:space="preserve">
          <source>The hash of the chunk, including all elements of the chunk</source>
          <target state="translated">The hash of the chunk, including all elements of the chunk</target>
        </trans-unit>
        <trans-unit id="2149de6ebc9ce8fd4c0f28e8775c835c3d89a631" translate="yes" xml:space="preserve">
          <source>The hash of the chunk, including only elements of this content type (affected by &lt;code&gt;optimization.realContentHash&lt;/code&gt;)</source>
          <target state="translated">The hash of the chunk, including only elements of this content type (affected by &lt;code&gt;optimization.realContentHash&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fa043967113f8c63dae3857d4d86e057b2869bf7" translate="yes" xml:space="preserve">
          <source>The hash of the content of the module</source>
          <target state="translated">The hash of the content of the module</target>
        </trans-unit>
        <trans-unit id="8726aff8400cc61a3bd93b0c1e76bf262f43fd0b" translate="yes" xml:space="preserve">
          <source>The hash of the module</source>
          <target state="translated">The hash of the module</target>
        </trans-unit>
        <trans-unit id="5cbf4bef2adda69cc22f1bbb6067da1d45217eae" translate="yes" xml:space="preserve">
          <source>The hash of the module identifier</source>
          <target state="translated">모듈 식별자의 해시</target>
        </trans-unit>
        <trans-unit id="0463d3a8c9f9c6747f6d1cdde4358b6206cbd3fe" translate="yes" xml:space="preserve">
          <source>The hashing algorithm to use, defaults to &lt;code&gt;'md4'&lt;/code&gt;. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt;&lt;code&gt;crypto.createHash&lt;/code&gt;&lt;/a&gt; are supported. Since &lt;code&gt;4.0.0-alpha2&lt;/code&gt;, the &lt;code&gt;hashFunction&lt;/code&gt; can now be a constructor to a custom hash function. You can provide a non-crypto hash function for performance reasons.</source>
          <target state="translated">사용할 해시 알고리즘의 기본값은 &lt;code&gt;'md4'&lt;/code&gt; 입니다. Node.JS의 &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt; &lt;code&gt;crypto.createHash&lt;/code&gt; 의&lt;/a&gt; 모든 기능 이 지원됩니다. 이후 &lt;code&gt;4.0.0-alpha2&lt;/code&gt; 의 &lt;code&gt;hashFunction&lt;/code&gt; 는 이제 사용자 정의 해시 함수에 생성자가 될 수 있습니다. 성능상의 이유로 비 암호화 해시 기능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3d044d7a47605be75dda574e5d35e32ce48ea03" translate="yes" xml:space="preserve">
          <source>The hashing algorithm to use. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt;&lt;code&gt;crypto.createHash&lt;/code&gt;&lt;/a&gt; are supported. Since &lt;code&gt;4.0.0-alpha2&lt;/code&gt;, the &lt;code&gt;hashFunction&lt;/code&gt; can now be a constructor to a custom hash function. You can provide a non-crypto hash function for performance reasons.</source>
          <target state="translated">The hashing algorithm to use. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt; &lt;code&gt;crypto.createHash&lt;/code&gt; &lt;/a&gt; are supported. Since &lt;code&gt;4.0.0-alpha2&lt;/code&gt; , the &lt;code&gt;hashFunction&lt;/code&gt; can now be a constructor to a custom hash function. You can provide a non-crypto hash function for performance reasons.</target>
        </trans-unit>
        <trans-unit id="4552e0a1f696228480d29e4a92784c593d69aee9" translate="yes" xml:space="preserve">
          <source>The html-loader will parse the URLs, require the images and everything you expect. The extract loader will parse the javascript back into a proper html file, ensuring images are required and point to proper path, and the &lt;a href=&quot;../guides/asset-modules&quot;&gt;&lt;code&gt;asset modules&lt;/code&gt;&lt;/a&gt; will write the &lt;em&gt;.html&lt;/em&gt; file for you. Example:</source>
          <target state="translated">html 로더는 URL을 구문 분석하고 이미지와 예상되는 모든 것을 요구합니다. 추출 로더는 자바 스크립트를 적절한 html 파일로 다시 구문 분석하여 이미지가 필요하고 적절한 경로를 가리키고 &lt;a href=&quot;../guides/asset-modules&quot;&gt; &lt;code&gt;asset modules&lt;/code&gt; &lt;/a&gt; 이 &lt;em&gt;.html&lt;/em&gt; 파일을 작성합니다. 예:</target>
        </trans-unit>
        <trans-unit id="878c17956b8381cfc39a06c30d11d4d9bbcdeec7" translate="yes" xml:space="preserve">
          <source>The html-loader will parse the URLs, require the images and everything you expect. The extract loader will parse the javascript back into a proper html file, ensuring images are required and point to proper path, and the file loader will write the &lt;em&gt;.html&lt;/em&gt; file for you. Example:</source>
          <target state="translated">html-loader는 URL을 구문 분석하고 이미지와 필요한 모든 것을 요구합니다. 추출 로더는 자바 스크립트를 올바른 html 파일로 다시 구문 분석하여 이미지가 필요하고 올바른 경로를 가리 키도록하고 파일 로더가 &lt;em&gt;.html&lt;/em&gt; 파일을 작성합니다. 예:</target>
        </trans-unit>
        <trans-unit id="cb4462897b8bd3c12c191602b87d8b211ce96cd9" translate="yes" xml:space="preserve">
          <source>The imported &lt;code&gt;webpack&lt;/code&gt; function is fed a webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;Configuration Object&lt;/a&gt; and runs the webpack compiler if a callback function is provided:</source>
          <target state="translated">가져온 &lt;code&gt;webpack&lt;/code&gt; 함수에는 웹팩 &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;구성 오브젝트&lt;/a&gt; 가 제공되며 콜백 함수가 제공되는 경우 웹팩 컴파일러를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="33a4cf0e8036e462ed9b4942a05234b23e76115e" translate="yes" xml:space="preserve">
          <source>The imports loader allows you to use modules that depend on specific global variables.</source>
          <target state="translated">가져 오기 로더를 사용하면 특정 전역 변수에 의존하는 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7185d7d5136017864a86f672276402ec9aa6fdb6" translate="yes" xml:space="preserve">
          <source>The index in the loaders array of the current loader.</source>
          <target state="translated">현재 로더의 로더 배열에있는 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="622eb7846c820895ecfaad87d57f13ab3bfdab01" translate="yes" xml:space="preserve">
          <source>The index of a function contained within &lt;code&gt;options.transforms&lt;/code&gt; which to use to transform the target file(s).</source>
          <target state="translated">&lt;code&gt;options.transforms&lt;/code&gt; 에 포함 된 함수의 색인으로 대상 파일을 변환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f184dd511af3ce37021703d7bf7ff188cfdcd35" translate="yes" xml:space="preserve">
          <source>The inner workings here are heavily inspired by &lt;a href=&quot;worker-loader&quot;&gt;worker-loader&lt;/a&gt;. It's worth a read!</source>
          <target state="translated">내부 작업은 &lt;a href=&quot;worker-loader&quot;&gt;worker-loader에서&lt;/a&gt; 큰 영향을받습니다 . 읽을 가치가 있습니다!</target>
        </trans-unit>
        <trans-unit id="43e822b9d87b538c0f6aa00d47a247647f62e872" translate="yes" xml:space="preserve">
          <source>The internal &lt;code&gt;LabeledModulesPlugin&lt;/code&gt; enables you to use the following methods for exporting and requiring within your modules:</source>
          <target state="translated">내부 &lt;code&gt;LabeledModulesPlugin&lt;/code&gt; 을 사용하면 모듈 내에서 내보내기 및 요구에 다음 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f3eeb68c1db87109909ad8adabec192440632b1" translate="yes" xml:space="preserve">
          <source>The internal chunk loading function. Takes one argument:</source>
          <target state="translated">내부 청크 로딩 기능. 하나의 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4301641a17ae1438d40dabf59f4701492ac2fb96" translate="yes" xml:space="preserve">
          <source>The internal chunk loading function. Takes two arguments:</source>
          <target state="translated">내부 청크 로딩 기능. 두 가지 주장을 취합니다.</target>
        </trans-unit>
        <trans-unit id="3efc7bf124d5e8cb340af1ccedcabdd90e4fa1d3" translate="yes" xml:space="preserve">
          <source>The issuer: An absolute path to the file of the module which requested the resource. It's the location of the import.</source>
          <target state="translated">발급자 : 리소스를 요청한 모듈 파일의 절대 경로입니다. 가져 오기 위치입니다.</target>
        </trans-unit>
        <trans-unit id="e0f5006bb4c868b9ea27a3396647799ddfdd1706" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;main&lt;/code&gt; refers to the &lt;a href=&quot;https://docs.npmjs.com/files/package.json#main&quot;&gt;standard from &lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;module&lt;/code&gt; to &lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md&quot;&gt;a&lt;/a&gt;&lt;a href=&quot;https://github.com/rollup/rollup/wiki/pkg.module&quot;&gt;proposal&lt;/a&gt; to allow the JavaScript ecosystem upgrade to use ES2015 modules without breaking backwards compatibility.</source>
          <target state="translated">주요 &lt;code&gt;main&lt;/code&gt; 받는 의미 &lt;a href=&quot;https://docs.npmjs.com/files/package.json#main&quot;&gt;에서 표준 &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;module&lt;/code&gt; 에 &lt;a href=&quot;https://github.com/rollup/rollup/wiki/pkg.module&quot;&gt;제안&lt;/a&gt; 자바 스크립트 생태계가 이전 버전과의 호환성을 깨지 않고 ES2015 모듈을 사용하도록 업그레이드 할 수 있도록.&lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md&quot;&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f081d9f5b8fdd6618bb1b1f831080b06f01eb1f" translate="yes" xml:space="preserve">
          <source>The keyword here is &lt;strong&gt;statically&lt;/strong&gt;. A normal &lt;code&gt;import&lt;/code&gt; statement cannot be used dynamically within other logic or contain variables. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;spec&lt;/a&gt; for more information and &lt;code&gt;import()&lt;/code&gt; below for dynamic usage.</source>
          <target state="translated">The keyword here is &lt;strong&gt;statically&lt;/strong&gt;. A normal &lt;code&gt;import&lt;/code&gt; statement cannot be used dynamically within other logic or contain variables. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;spec&lt;/a&gt; for more information and &lt;code&gt;import()&lt;/code&gt; below for dynamic usage.</target>
        </trans-unit>
        <trans-unit id="e003c18060496c40fdaa02f7ca1fc43ec879fc1c" translate="yes" xml:space="preserve">
          <source>The keyword here is &lt;strong&gt;statically&lt;/strong&gt;. Normal &lt;code&gt;import&lt;/code&gt; statement cannot be used dynamically within other logic or contain variables. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;spec&lt;/a&gt; for more information and &lt;code&gt;import()&lt;/code&gt; below for dynamic usage.</source>
          <target state="translated">키워드는 &lt;strong&gt;정적으로&lt;/strong&gt; 입니다. 일반 &lt;code&gt;import&lt;/code&gt; 문은 다른 논리 내에서 동적으로 사용되거나 변수를 포함 할 수 없습니다. 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;사양&lt;/a&gt; 을 참조하고 동적 사용에 대해서는 아래 &lt;code&gt;import()&lt;/code&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a9d54d05466f8e81e809ba86dee0999b728a7661" translate="yes" xml:space="preserve">
          <source>The latest webpack release is:</source>
          <target state="translated">최신 웹팩 릴리스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9d0658bcac0fb911632d057be396c56ab4c5cb81" translate="yes" xml:space="preserve">
          <source>The length of hashes (&lt;code&gt;[hash]&lt;/code&gt;, &lt;code&gt;[contenthash]&lt;/code&gt; or &lt;code&gt;[chunkhash]&lt;/code&gt;) can be specified using &lt;code&gt;[hash:16]&lt;/code&gt; (defaults to 20). Alternatively, specify &lt;a href=&quot;#outputhashdigestlength&quot;&gt;&lt;code&gt;output.hashDigestLength&lt;/code&gt;&lt;/a&gt; to configure the length globally.</source>
          <target state="translated">The length of hashes ( &lt;code&gt;[hash]&lt;/code&gt; , &lt;code&gt;[contenthash]&lt;/code&gt; or &lt;code&gt;[chunkhash]&lt;/code&gt; ) can be specified using &lt;code&gt;[hash:16]&lt;/code&gt; (defaults to 20). Alternatively, specify &lt;a href=&quot;#outputhashdigestlength&quot;&gt; &lt;code&gt;output.hashDigestLength&lt;/code&gt; &lt;/a&gt; to configure the length globally.</target>
        </trans-unit>
        <trans-unit id="5500211f9001a63bab0626a741e206c512be6985" translate="yes" xml:space="preserve">
          <source>The lengths of &lt;code&gt;[hash]&lt;/code&gt; and &lt;code&gt;[chunkhash]&lt;/code&gt; can be specified using &lt;code&gt;[hash:16]&lt;/code&gt; (defaults to 20). Alternatively, specify &lt;a href=&quot;#output-hashdigestlength&quot;&gt;&lt;code&gt;output.hashDigestLength&lt;/code&gt;&lt;/a&gt; to configure the length globally.</source>
          <target state="translated">&lt;code&gt;[hash]&lt;/code&gt; 및 &lt;code&gt;[chunkhash]&lt;/code&gt; 의 길이는 [hash &lt;code&gt;[hash:16]&lt;/code&gt; (기본값은 20)을 사용하여 지정할 수 있습니다 . 또는 &lt;a href=&quot;#output-hashdigestlength&quot;&gt; &lt;code&gt;output.hashDigestLength&lt;/code&gt; &lt;/a&gt; 를 지정 하여 길이를 전체적으로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="75512c1d03470514d5cf05338997168251cab9bd" translate="yes" xml:space="preserve">
          <source>The limit can be specified via loader options and defaults to no limit.</source>
          <target state="translated">제한은 로더 옵션을 통해 지정할 수 있으며 기본값은 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a10c0959fe08b11aa0f20df6f5f1b5ec7e7d9e80" translate="yes" xml:space="preserve">
          <source>The loader &lt;code&gt;eslint-loader&lt;/code&gt; will be deprecated soon, please use this plugin instead.</source>
          <target state="translated">The loader &lt;code&gt;eslint-loader&lt;/code&gt; will be deprecated soon, please use this plugin instead.</target>
        </trans-unit>
        <trans-unit id="c590edafbccf5a13ba624e90ca3c81af93245611" translate="yes" xml:space="preserve">
          <source>The loader &lt;strong&gt;automatically&lt;/strong&gt; searches for configuration files.</source>
          <target state="translated">The loader &lt;strong&gt;automatically&lt;/strong&gt; searches for configuration files.</target>
        </trans-unit>
        <trans-unit id="02717a18cddb27586d8d91e9a2358d691d091400" translate="yes" xml:space="preserve">
          <source>The loader allows you to write mixed HTML, CSS and JavaScript Polymer elements and still use the full webpack ecosystem including module bundling and code splitting.</source>
          <target state="translated">로더를 사용하면 혼합 HTML, CSS 및 JavaScript Polymer 요소를 작성하고 모듈 번들링 및 코드 분할을 포함한 전체 웹팩 에코 시스템을 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ee66e0520a3a70a7375d49641abef0787bb8e0c" translate="yes" xml:space="preserve">
          <source>The loader automatically inject source maps when previous loader emit them. Therefore, to generate source maps, set the &lt;code&gt;sourceMap&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; for the previous loader.</source>
          <target state="translated">The loader automatically inject source maps when previous loader emit them. Therefore, to generate source maps, set the &lt;code&gt;sourceMap&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; for the previous loader.</target>
        </trans-unit>
        <trans-unit id="ae685df6df8c28074d878a1e547602dd9d6ae5cd" translate="yes" xml:space="preserve">
          <source>The loader context represents the properties that are available inside of a loader assigned to the &lt;code&gt;this&lt;/code&gt; property.</source>
          <target state="translated">로더의 콘텍스트는 할당 된 로더 가능한 내부에 나타내는 속성 &lt;code&gt;this&lt;/code&gt; 속성.</target>
        </trans-unit>
        <trans-unit id="98992f65d6c9889f7c07d0bc0dfd8b5a0e2d752d" translate="yes" xml:space="preserve">
          <source>The loader could look like this:</source>
          <target state="translated">The loader could look like this:</target>
        </trans-unit>
        <trans-unit id="dc28a2430b76edc60a5453ebccdb80a69e91a904" translate="yes" xml:space="preserve">
          <source>The loader generate this:</source>
          <target state="translated">The loader generate this:</target>
        </trans-unit>
        <trans-unit id="fcf67d9606614595aba3d7371f19e9afae35cf8d" translate="yes" xml:space="preserve">
          <source>The loader generate:</source>
          <target state="translated">The loader generate:</target>
        </trans-unit>
        <trans-unit id="6850229fa73c51d30b9860ce808297b30b581ca8" translate="yes" xml:space="preserve">
          <source>The loader inject styles like:</source>
          <target state="translated">The loader inject styles like:</target>
        </trans-unit>
        <trans-unit id="a94eb23586afe06cc2c3ee1e482bd23aea1c63bc" translate="yes" xml:space="preserve">
          <source>The loader interface provides all module relate information. However in rare cases you might need access to the compiler api itself.</source>
          <target state="translated">로더 인터페이스는 모든 모듈 관련 정보를 제공합니다. 그러나 드물게 컴파일러 API 자체에 액세스해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8f37428026e9b156a0238193c78b0e4ddb2426b" translate="yes" xml:space="preserve">
          <source>The loader path in the error is displayed since webpack 4.12</source>
          <target state="translated">The loader path in the error is displayed since webpack 4.12</target>
        </trans-unit>
        <trans-unit id="d03169a0e1bc93b67ce76a356e5aa2a01a1c77e1" translate="yes" xml:space="preserve">
          <source>The loader processes Polymer 3 template elements to minify the html and add images, fonts and imported stylesheets to the webpack dependency graph.</source>
          <target state="translated">The loader processes Polymer 3 template elements to minify the html and add images, fonts and imported stylesheets to the webpack dependency graph.</target>
        </trans-unit>
        <trans-unit id="607e721094d3631e0620ceb231f0a7e78b6a13d9" translate="yes" xml:space="preserve">
          <source>The loader replaces local selectors with unique identifiers. The choosen unique identifiers are exported by the module.</source>
          <target state="translated">로더는 로컬 선택기를 고유 식별자로 대체합니다. 선택한 고유 식별자는 모듈에서 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="12c3056a92f9c4c42bdf9f8f6c031124f4fc2fc1" translate="yes" xml:space="preserve">
          <source>The loader replaces local selectors with unique identifiers. The chosen unique identifiers are exported by the module.</source>
          <target state="translated">The loader replaces local selectors with unique identifiers. The chosen unique identifiers are exported by the module.</target>
        </trans-unit>
        <trans-unit id="299350ec237fdcb85e12d63661c686bb20a1954e" translate="yes" xml:space="preserve">
          <source>The loader supports all options supported by &lt;code&gt;istanbul-lib-instrument&lt;/code&gt;</source>
          <target state="translated">로더는 &lt;code&gt;istanbul-lib-instrument&lt;/code&gt; 가 지원하는 모든 옵션을 지원 합니다</target>
        </trans-unit>
        <trans-unit id="b31bd1bb8fc2430ef42ba02f03db77c3e1639cff" translate="yes" xml:space="preserve">
          <source>The loader transforms your components:</source>
          <target state="translated">로더는 컴포넌트를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="1aeead07c2f08f9b8fc8d5b0f49d1e895dc026c7" translate="yes" xml:space="preserve">
          <source>The loader will only replace a &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; if the href is a relative path. Any link attempting to access an external link i.e. &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt; or &lt;code&gt;//&lt;/code&gt; will not be replaced.</source>
          <target state="translated">href가 상대 경로 인 경우 로더는 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 만 대체합니다 . 외부 링크 (예 : &lt;code&gt;http&lt;/code&gt; , &lt;code&gt;https&lt;/code&gt; 또는 &lt;code&gt;//&lt;/code&gt; ) 에 액세스하려는 링크 는 대체되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64ad8874256193d8fad16b6cb03431251ac206d1" translate="yes" xml:space="preserve">
          <source>The loader will search up the directory tree for configuration in the following places:</source>
          <target state="translated">The loader will search up the directory tree for configuration in the following places:</target>
        </trans-unit>
        <trans-unit id="ff94098ec9e21443e23e9b6ad5f42779492bd9ea" translate="yes" xml:space="preserve">
          <source>The main parts</source>
          <target state="translated">The main parts</target>
        </trans-unit>
        <trans-unit id="50aa09ae1377da238a1a8574aee2960a5a76e525" translate="yes" xml:space="preserve">
          <source>The manifest contains the new compilation hash and a list of all updated chunks. Each of these chunks contains the new code for all updated modules (or a flag indicating that the module was removed).</source>
          <target state="translated">매니페스트에는 새로운 컴파일 해시와 모든 업데이트 된 청크 목록이 포함되어 있습니다. 이러한 각 청크에는 업데이트 된 모든 모듈에 대한 새 코드 (또는 모듈이 제거되었음을 나타내는 플래그)가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="22f4b76b689d538d97a9f56b12c6f429c5ca6101" translate="yes" xml:space="preserve">
          <source>The manifest data can be extracted into a json file for easy consumption using the &lt;a href=&quot;https://github.com/danethurber/webpack-manifest-plugin&quot;&gt;&lt;code&gt;WebpackManifestPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/danethurber/webpack-manifest-plugin&quot;&gt; &lt;code&gt;WebpackManifestPlugin&lt;/code&gt; 을&lt;/a&gt; 사용하면 매니페스트 데이터를 json 파일로 추출하여 쉽게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4adb149cac28b10ad6472a4476aff1c8179b51c" translate="yes" xml:space="preserve">
          <source>The manifest data can be extracted into a json file for easy consumption using the &lt;a href=&quot;https://github.com/shellscape/webpack-manifest-plugin&quot;&gt;&lt;code&gt;WebpackManifestPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The manifest data can be extracted into a json file for easy consumption using the &lt;a href=&quot;https://github.com/shellscape/webpack-manifest-plugin&quot;&gt; &lt;code&gt;WebpackManifestPlugin&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7fcf4844a873556aa5a937dd01b092ce6a741e02" translate="yes" xml:space="preserve">
          <source>The message should contain the following fields:</source>
          <target state="translated">The message should contain the following fields:</target>
        </trans-unit>
        <trans-unit id="8e7bee649828a4b2a2df4403824fcefa6e0eab7e" translate="yes" xml:space="preserve">
          <source>The method to load chunks (methods included by default are 'jsonp' (web), 'importScripts' (WebWorker), 'require' (sync node.js), 'async-node' (async node.js), but others might be added by plugins).</source>
          <target state="translated">The method to load chunks (methods included by default are 'jsonp' (web), 'importScripts' (WebWorker), 'require' (sync node.js), 'async-node' (async node.js), but others might be added by plugins).</target>
        </trans-unit>
        <trans-unit id="a7f574fb0ede81d5ac10e894649b28adefcada6b" translate="yes" xml:space="preserve">
          <source>The minimum requirement for the &lt;code&gt;output&lt;/code&gt; property in your webpack configuration is to set its value to an object and provide an &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; to use for the output file(s):</source>
          <target state="translated">The minimum requirement for the &lt;code&gt;output&lt;/code&gt; property in your webpack configuration is to set its value to an object and provide an &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; to use for the output file(s):</target>
        </trans-unit>
        <trans-unit id="ca8c533ca9e0eeb7b0f1a5cf47de1c99d487b8a5" translate="yes" xml:space="preserve">
          <source>The minimum requirements for the &lt;code&gt;output&lt;/code&gt; property in your webpack config is to set its value to an object including the following thing:</source>
          <target state="translated">webpack 설정에서 &lt;code&gt;output&lt;/code&gt; 속성 의 최소 ​​요구 사항 은 다음을 포함하여 값을 객체로 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8d79c212d54a66b872806296bbabd60c49c0ad07" translate="yes" xml:space="preserve">
          <source>The minimum supported Node.js version to run webpack 5 is 10.13.0 (LTS)</source>
          <target state="translated">The minimum supported Node.js version to run webpack 5 is 10.13.0 (LTS)</target>
        </trans-unit>
        <trans-unit id="1ba58e68e946922d33fa08bdd3f4ddb95220425c" translate="yes" xml:space="preserve">
          <source>The minimum times must a module be shared among chunks before splitting.</source>
          <target state="translated">분할하기 전에 모듈이 청크간에 공유되어야하는 최소 시간입니다.</target>
        </trans-unit>
        <trans-unit id="f51cb967bd5a63ed817746d4a2210c7604937c57" translate="yes" xml:space="preserve">
          <source>The module &lt;a href=&quot;https://nodejs.org/api/path.html#path_path_basename_path_ext&quot;&gt;basename&lt;/a&gt;</source>
          <target state="translated">모듈 &lt;a href=&quot;https://nodejs.org/api/path.html#path_path_basename_path_ext&quot;&gt;기본 이름&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cf9a0f6cdd1a3915e69f0d5d77882cc041b2b99" translate="yes" xml:space="preserve">
          <source>The module also validates found configurations against webpack's options schema to ensure that the configuration is correct before webpack attempts to use it.</source>
          <target state="translated">이 모듈은 또한 웹팩이 사용하기 전에 구성이 올바른지 확인하기 위해 웹팩의 옵션 스키마에 대해 찾은 구성의 유효성을 검증합니다.</target>
        </trans-unit>
        <trans-unit id="449ce0de57d3e2a0be319a99debc55b86880760c" translate="yes" xml:space="preserve">
          <source>The module filename</source>
          <target state="translated">모듈 파일 이름</target>
        </trans-unit>
        <trans-unit id="88e0aa6c2168cb0078e139454481c7292d3e21ab" translate="yes" xml:space="preserve">
          <source>The module identifier</source>
          <target state="translated">모듈 식별자</target>
        </trans-unit>
        <trans-unit id="90462cd9df48197a4f39715938a23e7e8c5fa7a7" translate="yes" xml:space="preserve">
          <source>The module is also tested with the following compilers:</source>
          <target state="translated">이 모듈은 다음 컴파일러로도 테스트됩니다.</target>
        </trans-unit>
        <trans-unit id="1635800c659f8343bb6f76cf0577b6d8050a774a" translate="yes" xml:space="preserve">
          <source>The module name</source>
          <target state="translated">모듈 이름</target>
        </trans-unit>
        <trans-unit id="afd3b0e2f82e2ca4daf7fc9a50ca4e0078eb08f5" translate="yes" xml:space="preserve">
          <source>The module query, i.e., the string following &lt;code&gt;?&lt;/code&gt; in the filename</source>
          <target state="translated">모듈 쿼리, 즉 &lt;code&gt;?&lt;/code&gt; 파일 이름에</target>
        </trans-unit>
        <trans-unit id="129e370a3b0c1b11ce05b9dc9f69f25d26a473b2" translate="yes" xml:space="preserve">
          <source>The module will get bundled like this:</source>
          <target state="translated">The module will get bundled like this:</target>
        </trans-unit>
        <trans-unit id="af18f009cb9333df7606f5912ce79a0a55814780" translate="yes" xml:space="preserve">
          <source>The modules namespace. This is usually the library name when building as a library, empty otherwise</source>
          <target state="translated">모듈 네임 스페이스 일반적으로 라이브러리로 빌드 할 때 라이브러리 이름이며, 그렇지 않으면 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="479f4a5514e62fd84fc68ed0da97f9dd5e36b267" translate="yes" xml:space="preserve">
          <source>The moral of the story is that there are a variety of ways to &lt;code&gt;hook&lt;/code&gt; into the &lt;code&gt;compiler&lt;/code&gt;, each one allowing your plugin to run as it sees fit.</source>
          <target state="translated">이야기의 교훈은에 다양한 방법이 있다는 것입니다 &lt;code&gt;hook&lt;/code&gt; 에 &lt;code&gt;compiler&lt;/code&gt; , 각각이 적절하게 인식하는 것과 동일한 플러그인 실행을 허용.</target>
        </trans-unit>
        <trans-unit id="ff7aa3f3b92830a27310d668b1d59b019023d65e" translate="yes" xml:space="preserve">
          <source>The most important part to take away from this document is that there are many different ways to format and style your webpack configuration. The key is to stick with something consistent that you and your team can understand and maintain.</source>
          <target state="translated">이 문서에서 제거해야 할 가장 중요한 부분은 웹팩 구성을 형식화하고 스타일을 지정하는 여러 가지 방법이 있다는 것입니다. 열쇠는 당신과 당신 팀이 이해하고 유지할 수있는 일관된 것을 고수하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a4b885c9fa2e8cc5ecd04b02c7caa6ce10feeb63" translate="yes" xml:space="preserve">
          <source>The n-th match obtained from matching the current file name against the &lt;code&gt;regExp&lt;/code&gt;.</source>
          <target state="translated">The n-th match obtained from matching the current file name against the &lt;code&gt;regExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d25fd948c0de18e0c4fa3e7b34e3ac980bb16168" translate="yes" xml:space="preserve">
          <source>The n-th match obtained from matching the current file name against the regExp</source>
          <target state="translated">현재 파일 이름과 regExp를 일치시켜 얻은 n 번째 일치</target>
        </trans-unit>
        <trans-unit id="cc5db90aa6110a9fe0f180ed9cf1911aa9dcb8db" translate="yes" xml:space="preserve">
          <source>The name in the global object. (&lt;strong&gt;required&lt;/strong&gt;).</source>
          <target state="translated">The name in the global object. (&lt;strong&gt;required&lt;/strong&gt;).</target>
        </trans-unit>
        <trans-unit id="54d6c009e997de6f2a825c25208aa6d12f233c15" translate="yes" xml:space="preserve">
          <source>The name of method/variable/etc of the module (the module must export it). If &lt;code&gt;moduleLocalName&lt;/code&gt; is specified, it exposes only the value of &lt;code&gt;moduleLocalName&lt;/code&gt;.</source>
          <target state="translated">The name of method/variable/etc of the module (the module must export it). If &lt;code&gt;moduleLocalName&lt;/code&gt; is specified, it exposes only the value of &lt;code&gt;moduleLocalName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6d69ad1e3c80b8f04fd87e8a4a8826c68af723f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;browserify&lt;/code&gt; transform you wish to use.</source>
          <target state="translated">사용하려는 &lt;code&gt;browserify&lt;/code&gt; 변환 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="304749ae004320108b2d78b3c7dc01ae50172e2e" translate="yes" xml:space="preserve">
          <source>The name of the JSONP function used for chunk loading</source>
          <target state="translated">청크로드에 사용되는 JSONP 함수의 이름</target>
        </trans-unit>
        <trans-unit id="2a6ad2fcd2bab8910f354fa27cb1be872df13236" translate="yes" xml:space="preserve">
          <source>The name of the chunk, if set, otherwise the ID of the chunk</source>
          <target state="translated">The name of the chunk, if set, otherwise the ID of the chunk</target>
        </trans-unit>
        <trans-unit id="237abd324292923b6851d79c3de40c9df8cfed7f" translate="yes" xml:space="preserve">
          <source>The name of the native &lt;code&gt;import()&lt;/code&gt; function. Can be used for polyfilling, e.g. with &lt;a href=&quot;https://github.com/GoogleChromeLabs/dynamic-import-polyfill&quot;&gt;&lt;code&gt;dynamic-import-polyfill&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The name of the native &lt;code&gt;import()&lt;/code&gt; function. Can be used for polyfilling, e.g. with &lt;a href=&quot;https://github.com/GoogleChromeLabs/dynamic-import-polyfill&quot;&gt; &lt;code&gt;dynamic-import-polyfill&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7f90780bc0827bafcd9895b011a83db2a55c2170" translate="yes" xml:space="preserve">
          <source>The name of the split chunk. Providing &lt;code&gt;false&lt;/code&gt; will keep the same name of the chunks so it doesn't change names unnecessarily. It is the recommended value for production builds.</source>
          <target state="translated">The name of the split chunk. Providing &lt;code&gt;false&lt;/code&gt; will keep the same name of the chunks so it doesn't change names unnecessarily. It is the recommended value for production builds.</target>
        </trans-unit>
        <trans-unit id="bd981b17d1b1d68795c45fcc3ef348cad98e993a" translate="yes" xml:space="preserve">
          <source>The name of the split chunk. Providing &lt;code&gt;true&lt;/code&gt; will automatically generate a name based on chunks and cache group key. Providing a string or function will allow you to use a custom name. If the name matches an entry point name, the entry point will be removed.</source>
          <target state="translated">스플릿 청크의 이름입니다. &lt;code&gt;true&lt;/code&gt; 를 제공 하면 청크 및 캐시 그룹 키를 기반으로 이름이 자동으로 생성됩니다. 문자열이나 함수를 제공하면 사용자 정의 이름을 사용할 수 있습니다. 이름이 진입 점 이름과 일치하면 진입 점이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="c08bdaf133b6ce0622cf9cabf9ca21c324824188" translate="yes" xml:space="preserve">
          <source>The names of the output files are affected by the two fields in the config:</source>
          <target state="translated">The names of the output files are affected by the two fields in the config:</target>
        </trans-unit>
        <trans-unit id="6d88cb86dabce438937b048a328ba5a2b474953b" translate="yes" xml:space="preserve">
          <source>The new option &lt;code&gt;workerChunkLoading&lt;/code&gt; controls the chunk loading of workers.</source>
          <target state="translated">The new option &lt;code&gt;workerChunkLoading&lt;/code&gt; controls the chunk loading of workers.</target>
        </trans-unit>
        <trans-unit id="a224dab019a12c6616086a01e53970556f85c794" translate="yes" xml:space="preserve">
          <source>The node API for &lt;code&gt;babel&lt;/code&gt; has been moved to &lt;code&gt;babel-core&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;babel&lt;/code&gt; 의 노드 API 가 &lt;code&gt;babel-core&lt;/code&gt; 로 이동되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8b076d7bad0e04847bd9e1af7347fa7a6f1a813c" translate="yes" xml:space="preserve">
          <source>The normal module loader is the function that actually loads all the modules in the module graph (one-by-one).</source>
          <target state="translated">일반 모듈 로더는 실제로 모듈 그래프의 모든 모듈을 하나씩로드하는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="4f1d19f9faa2d8d0722a0e1e23f02607e587a9c1" translate="yes" xml:space="preserve">
          <source>The object syntax is more verbose. However, this is the most scalable way of defining entry/entries in your application.</source>
          <target state="translated">객체 구문이 더 장황합니다. 그러나 이것은 응용 프로그램에서 항목 / 항목을 정의하는 가장 확장 가능한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5189c0c0e672b6631024f822bf03b16042fe64e1" translate="yes" xml:space="preserve">
          <source>The ones performed by &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;Terser&lt;/a&gt;</source>
          <target state="translated">The ones performed by &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;Terser&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5154efdb42e2cf3f6948724e000c0d2ef408a7f6" translate="yes" xml:space="preserve">
          <source>The ones performed by UglifyJS</source>
          <target state="translated">UglifyJS가 수행 한 것</target>
        </trans-unit>
        <trans-unit id="09bda428bc2298b8b7539bca171a741433df356b" translate="yes" xml:space="preserve">
          <source>The ones performed by webpack</source>
          <target state="translated">webpack에 의해 수행되는 것들</target>
        </trans-unit>
        <trans-unit id="4bfd2812dad7481714822f78b90c34b30c6ddfde" translate="yes" xml:space="preserve">
          <source>The only downside is that you have to refresh your browser in order to see the changes. It would be much nicer if that would happen automatically as well, so let's try &lt;code&gt;webpack-dev-server&lt;/code&gt; which will do exactly that.</source>
          <target state="translated">유일한 단점은 변경 사항을 보려면 브라우저를 새로 고쳐야한다는 것입니다. 자동으로 발생하면 훨씬 좋을 &lt;code&gt;webpack-dev-server&lt;/code&gt; 를 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="675b305d4ff63e3176149aaef33ef4f487388862" translate="yes" xml:space="preserve">
          <source>The only placeholders allowed here are &lt;code&gt;[id]&lt;/code&gt; and &lt;code&gt;[fullhash]&lt;/code&gt;, the default being:</source>
          <target state="translated">여기서 허용되는 유일한 자리 표시자는 &lt;code&gt;[id]&lt;/code&gt; 및 &lt;code&gt;[fullhash]&lt;/code&gt; 이며 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9970124635086c07500f383cb7b08142f6b26d7d" translate="yes" xml:space="preserve">
          <source>The only placeholders allowed here are &lt;code&gt;[id]&lt;/code&gt; and &lt;code&gt;[hash]&lt;/code&gt;, the default being:</source>
          <target state="translated">여기에서 허용되는 유일한 자리 표시자는 &lt;code&gt;[id]&lt;/code&gt; 및 &lt;code&gt;[hash]&lt;/code&gt; 이며 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="396320c0f7e143551169eeaada1f51e98c1dcf71" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;importLoaders&lt;/code&gt; allows you to configure how many loaders before &lt;code&gt;css-loader&lt;/code&gt; should be applied to &lt;code&gt;@import&lt;/code&gt;ed resources.</source>
          <target state="translated">The option &lt;code&gt;importLoaders&lt;/code&gt; allows you to configure how many loaders before &lt;code&gt;css-loader&lt;/code&gt; should be applied to &lt;code&gt;@import&lt;/code&gt; ed resources.</target>
        </trans-unit>
        <trans-unit id="d67957273bfa0ed43d68187e13270aeec8738d11" translate="yes" xml:space="preserve">
          <source>The option can be set to a function:</source>
          <target state="translated">옵션은 기능으로 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ca2f308489f3cb4c9753c5ecdf071432bde39e75" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;options&lt;/code&gt; object can include the following properties:</source>
          <target state="translated">선택적 &lt;code&gt;options&lt;/code&gt; 오브젝트는 다음 특성을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="473ac21de70831732dc9c0261c986382ed098a3d" translate="yes" xml:space="preserve">
          <source>The order of evaluation is as follows:</source>
          <target state="translated">The order of evaluation is as follows:</target>
        </trans-unit>
        <trans-unit id="13d2b81e1335f4b4f1ec4bbe1102fcca1d0d4c92" translate="yes" xml:space="preserve">
          <source>The origin of the host header is kept when proxying by default, you can set &lt;code&gt;changeOrigin&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to override this behaviour. It is useful in some cases like using &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_hosting#Name-based&quot;&gt;name-based virtual hosted sites&lt;/a&gt;.</source>
          <target state="translated">The origin of the host header is kept when proxying by default, you can set &lt;code&gt;changeOrigin&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to override this behaviour. It is useful in some cases like using &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_hosting#Name-based&quot;&gt;name-based virtual hosted sites&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="31ed028b00e592643594c4ed1b5accbc50db710c" translate="yes" xml:space="preserve">
          <source>The output directory as an &lt;strong&gt;absolute&lt;/strong&gt; path.</source>
          <target state="translated">출력 경로 는 &lt;strong&gt;절대&lt;/strong&gt; 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3d39fb2dccd697e1450cca6b83dff11da76a49b5" translate="yes" xml:space="preserve">
          <source>The output file system you provide needs to be compatible with Node&amp;rsquo;s own &lt;a href=&quot;https://nodejs.org/api/fs.html&quot;&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/a&gt; interface, which requires the &lt;code&gt;mkdirp&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; helper methods.</source>
          <target state="translated">제공하는 출력 파일 시스템 은 &lt;code&gt;mkdirp&lt;/code&gt; 및 &lt;code&gt;join&lt;/code&gt; helper 메소드 가 필요한 Node의 자체 &lt;a href=&quot;https://nodejs.org/api/fs.html&quot;&gt; &lt;code&gt;fs&lt;/code&gt; &lt;/a&gt; 인터페이스 와 호환 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="97cfcf8af47a75058c06094f0eff166707f2e3f7" translate="yes" xml:space="preserve">
          <source>The output filename for additional chunks</source>
          <target state="translated">추가 청크의 출력 파일 이름</target>
        </trans-unit>
        <trans-unit id="267ff8bf01e4b400d5b984269cf06c01ded82d1d" translate="yes" xml:space="preserve">
          <source>The output filename for the SourceMap</source>
          <target state="translated">SourceMap의 출력 파일 이름</target>
        </trans-unit>
        <trans-unit id="a550b694aeec3339247a8ab6597116fefa3e71ad" translate="yes" xml:space="preserve">
          <source>The output filename of the bundle</source>
          <target state="translated">번들의 출력 파일 이름</target>
        </trans-unit>
        <trans-unit id="3c0e63df9024e8b756c01e045992b68f60f8d2a8" translate="yes" xml:space="preserve">
          <source>The output in webpack CLI will usually be:</source>
          <target state="translated">webpack CLI의 출력은 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="819f3534522471c5ea0e340b7688ce6e2986c41e" translate="yes" xml:space="preserve">
          <source>The output path for compilation assets</source>
          <target state="translated">컴파일 자산의 출력 경로</target>
        </trans-unit>
        <trans-unit id="5b70b3de61d22026ac799699106326bd75dce5d5" translate="yes" xml:space="preserve">
          <source>The output shown from running webpack in the guides may differ slightly from the output of newer versions. This is to be expected. As long as the bundles look similar and run correctly, then there shouldn't be any issues. If you do come across an example that seems to be broken by a new version, please &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/new/choose&quot;&gt;create an issue&lt;/a&gt; and we will do our best to resolve the discrepancy.</source>
          <target state="translated">The output shown from running webpack in the guides may differ slightly from the output of newer versions. This is to be expected. As long as the bundles look similar and run correctly, then there shouldn't be any issues. If you do come across an example that seems to be broken by a new version, please &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/new/choose&quot;&gt;create an issue&lt;/a&gt; and we will do our best to resolve the discrepancy.</target>
        </trans-unit>
        <trans-unit id="d5cc37f8dd4438bd7f133d72882c40b943ab6a5b" translate="yes" xml:space="preserve">
          <source>The output shown from running webpack in the guides may differ slightly from the output of newer versions. This is to be expected. As long as the bundles look similar and run correctly, then there shouldn't be any issues. If you do come across an example that seems to be broken by a new version, please create an issue and we will do our best to resolve the discrepancy.</source>
          <target state="translated">안내서에서 웹팩을 실행 한 결과는 최신 버전의 결과와 약간 다를 수 있습니다. 이것은 예상됩니다. 번들이 비슷하게 보이고 올바르게 실행되는 한 아무런 문제가 없습니다. 새 버전으로 인해 깨진 것처럼 보이는 예를 발견 한 경우 문제를 작성하십시오. 불일치를 해결하기 위해 최선을 다하겠습니다.</target>
        </trans-unit>
        <trans-unit id="d7864ae5ef3f0b7a2f3aacd5831a1402dbade9c3" translate="yes" xml:space="preserve">
          <source>The output will be:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ac4f620d683122799ae83cf0db02aafdf66bbefc" translate="yes" xml:space="preserve">
          <source>The overhead for each chunks is provided by &lt;code&gt;options.chunkOverhead&lt;/code&gt; or defaults to 10000. Entry chunks sizes are multiplied by &lt;code&gt;options.entryChunkMultiplicator&lt;/code&gt; (or 10).</source>
          <target state="translated">각 청크의 오버 헤드는 &lt;code&gt;options.chunkOverhead&lt;/code&gt; 에 의해 제공 되거나 기본값은 10000입니다. 엔트리 청크 크기에는 &lt;code&gt;options.entryChunkMultiplicator&lt;/code&gt; (또는 10) 가 곱해집니다 .</target>
        </trans-unit>
        <trans-unit id="1ffc4454ec79ccce614792e0786030f568ed2f17" translate="yes" xml:space="preserve">
          <source>The parent rule</source>
          <target state="translated">The parent rule</target>
        </trans-unit>
        <trans-unit id="48346b22135d618621c9aadccdd01f3e12289eee" translate="yes" xml:space="preserve">
          <source>The passphrase to a SSL PFX file.</source>
          <target state="translated">SSL PFX 파일의 암호입니다.</target>
        </trans-unit>
        <trans-unit id="1e43a8c0fc7e1a7585805dedf3aee4f47e59de85" translate="yes" xml:space="preserve">
          <source>The path at which to connect to the reloading socket.</source>
          <target state="translated">The path at which to connect to the reloading socket.</target>
        </trans-unit>
        <trans-unit id="c529bebc1780eafbec77ee894590317e3f962db7" translate="yes" xml:space="preserve">
          <source>The path of the resource relative to the webpack/config &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">The path of the resource relative to the webpack/config &lt;code&gt;context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="548967eebc482b64ca17750fb858725c0c97647c" translate="yes" xml:space="preserve">
          <source>The path of the resource relative to the webpack/config context.</source>
          <target state="translated">webpack / config 컨텍스트와 관련된 리소스의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="4c78e5d4376b497fb07e64c8073838d051cabd9d" translate="yes" xml:space="preserve">
          <source>The path used to resolve the file and any query params used on the first loader</source>
          <target state="translated">파일을 해결하는 데 사용되는 경로 및 첫 번째 로더에서 사용 된 모든 쿼리 매개 변수</target>
        </trans-unit>
        <trans-unit id="bc1748e296ada53329650dd514e6aaa68127c896" translate="yes" xml:space="preserve">
          <source>The path used to resolve the file without any query params</source>
          <target state="translated">쿼리 매개 변수없이 파일을 확인하는 데 사용되는 경로</target>
        </trans-unit>
        <trans-unit id="9e5f9675a08ce5ea1088e52bf48cd5689de48a41" translate="yes" xml:space="preserve">
          <source>The plugin adds extra functionality to support using Closure Library without Closure Compiler. This is typically used during development mode. When the webpack mode is &lt;code&gt;production&lt;/code&gt;, only dependency information is provided to webpack as Closure Compiler will natively recognize the Closure Library primitives.</source>
          <target state="translated">The plugin adds extra functionality to support using Closure Library without Closure Compiler. This is typically used during development mode. When the webpack mode is &lt;code&gt;production&lt;/code&gt; , only dependency information is provided to webpack as Closure Compiler will natively recognize the Closure Library primitives.</target>
        </trans-unit>
        <trans-unit id="b0beb6d3ff727ba937ba38f74f40c0298b2547ed" translate="yes" xml:space="preserve">
          <source>The plugin controls several compiler flags. The following flags should not be used in any mode:</source>
          <target state="translated">플러그인은 여러 컴파일러 플래그를 제어합니다. 다음 플래그는 어떤 모드에서도 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="9b11e7a0a95723e0438e10960cc010fdaf0de33c" translate="yes" xml:space="preserve">
          <source>The plugin interface allows users to tap directly into the compilation process. Plugins can register handlers on lifecycle hooks that run at different points throughout a compilation. When each hook is executed, the plugin will have full access to the current state of the compilation.</source>
          <target state="translated">플러그인 인터페이스를 통해 사용자는 컴파일 프로세스에 직접 액세스 할 수 있습니다. 플러그인은 컴파일 과정에서 다른 지점에서 실행되는 수명주기 후크에 핸들러를 등록 할 수 있습니다. 각 후크가 실행될 때 플러그인은 현재 컴파일 상태에 대한 전체 액세스 권한을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8cb735eab1dadd7d0602dbeaa5ae09439eae8e73" translate="yes" xml:space="preserve">
          <source>The plugin respect the &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; and using the &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin. Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation. Using &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; with enabled the &lt;code&gt;columns&lt;/code&gt; option enables source map generation.</source>
          <target state="translated">The plugin respect the &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; and using the &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin. Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation. Using &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; with enabled the &lt;code&gt;columns&lt;/code&gt; option enables source map generation.</target>
        </trans-unit>
        <trans-unit id="dd0b5545647ecbd76f1acc1cdea0d7a0971d8269" translate="yes" xml:space="preserve">
          <source>The plugin supports addons. For a list see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#plugins&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">The plugin supports addons. For a list see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#plugins&quot;&gt;documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a775448e75f0a6a6305222c79f1e629ab2a7f917" translate="yes" xml:space="preserve">
          <source>The plugin supports addons. For a list see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#third-party-addons&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">플러그인은 애드온을 지원합니다. 목록은 &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#third-party-addons&quot;&gt;설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="084e87901929b57ce0c6f43558d337b7b316c97b" translate="yes" xml:space="preserve">
          <source>The plugin was born with the purpose of solving some problems of the &lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt;.</source>
          <target state="translated">The plugin was born with the purpose of solving some problems of the &lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="72e5541fb2a2286d59ee1b4f3ca68de005f71fb2" translate="yes" xml:space="preserve">
          <source>The plugin will generate an HTML5 file for you that includes all your webpack bundles in the body using &lt;code&gt;script&lt;/code&gt; tags. Just add the plugin to your webpack config as follows:</source>
          <target state="translated">플러그인은 &lt;code&gt;script&lt;/code&gt; 태그를 사용하여 본문에 모든 웹팩 번들을 포함하는 HTML5 파일을 생성 합니다. 다음과 같이 웹팩 구성에 플러그인을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3ed2e536f6a275fdefcc3672ce01ba8618d99e24" translate="yes" xml:space="preserve">
          <source>The plugin will generate an HTML5 file for you that includes all your webpack bundles in the body using &lt;code&gt;script&lt;/code&gt; tags. Just add the plugin to your webpack configuration as follows:</source>
          <target state="translated">The plugin will generate an HTML5 file for you that includes all your webpack bundles in the body using &lt;code&gt;script&lt;/code&gt; tags. Just add the plugin to your webpack configuration as follows:</target>
        </trans-unit>
        <trans-unit id="b8fd921987632c61c52ab716b36342323513a6bc" translate="yes" xml:space="preserve">
          <source>The plugin's signature:</source>
          <target state="translated">The plugin's signature:</target>
        </trans-unit>
        <trans-unit id="23dbb446b166d9f36a900050b47f2d3ab1a6afa9" translate="yes" xml:space="preserve">
          <source>The plugins should be used if you run the bundle in a Node.js environment.</source>
          <target state="translated">Node.js 환경에서 번들을 실행하는 경우 플러그인을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6472732673cddb28039954632e457f1b136ce099" translate="yes" xml:space="preserve">
          <source>The point or points to enter the application. At this point the application starts executing. If an array is passed all items will be executed.</source>
          <target state="translated">응용 프로그램을 시작할 지점입니다. 이 시점에서 응용 프로그램이 실행되기 시작합니다. 배열이 전달되면 모든 항목이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="77842ff7ef8a6f211f993de98ff39ff3f8f41102" translate="yes" xml:space="preserve">
          <source>The point or points where to start the application bundling process. If an array is passed then all items will be processed.</source>
          <target state="translated">The point or points where to start the application bundling process. If an array is passed then all items will be processed.</target>
        </trans-unit>
        <trans-unit id="dbc0c621862eb10035838f19d0cd0730d204ee81" translate="yes" xml:space="preserve">
          <source>The polling interval for watching (also enable polling)</source>
          <target state="translated">시청을위한 폴링 간격 (폴링 사용 가능)</target>
        </trans-unit>
        <trans-unit id="96824a1c75210ba1ee627b59831b3225278df6a3" translate="yes" xml:space="preserve">
          <source>The pre-bundled version looks like this:</source>
          <target state="translated">The pre-bundled version looks like this:</target>
        </trans-unit>
        <trans-unit id="c11efdad805348277f06f272a3b9067b34acad77" translate="yes" xml:space="preserve">
          <source>The prefix length of the hash digest to use, defaults to &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">사용할 해시 다이제스트의 접두사 길이는 기본적으로 &lt;code&gt;20&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ee8c61dcc774a14c4a2fb47133c38c892d234e4" translate="yes" xml:space="preserve">
          <source>The prefix length of the hash digest to use.</source>
          <target state="translated">The prefix length of the hash digest to use.</target>
        </trans-unit>
        <trans-unit id="cfe78750ed83bb76df27ef5f00b72ad4f03945b1" translate="yes" xml:space="preserve">
          <source>The previous &lt;code&gt;Promise&lt;/code&gt; library is referenced and used before it is overridden.</source>
          <target state="translated">이전 &lt;code&gt;Promise&lt;/code&gt; 라이브러리는 재정의되기 전에 참조되고 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="392b59f1ddb5800fa5975bed7c141104e2fb531e" translate="yes" xml:space="preserve">
          <source>The process is calling the &lt;code&gt;accept&lt;/code&gt; handlers and re-executing self-accepted modules</source>
          <target state="translated">프로세스가 &lt;code&gt;accept&lt;/code&gt; 핸들러를 호출하고 자체 승인 모듈을 다시 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6521adb388facad5268660cc975a5e88f24fce11" translate="yes" xml:space="preserve">
          <source>The process is calling the &lt;code&gt;dispose&lt;/code&gt; handlers on the modules that will be replaced</source>
          <target state="translated">프로세스가 대체 될 모듈 에서 &lt;code&gt;dispose&lt;/code&gt; 핸들러를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ad173f9a14c3ddc81844b3f1137e787fca15d523" translate="yes" xml:space="preserve">
          <source>The process is checking for updates</source>
          <target state="translated">프로세스가 업데이트 확인 중입니다</target>
        </trans-unit>
        <trans-unit id="4759bc6ae5559dc09c35f8668d736f2ae3508206" translate="yes" xml:space="preserve">
          <source>The process is getting ready for the update (e.g. downloading the updated module)</source>
          <target state="translated">프로세스가 업데이트 준비 중입니다 (예 : 업데이트 된 모듈 다운로드)</target>
        </trans-unit>
        <trans-unit id="39b0a4c5329372428d4ac3023ae6b4a24f3adef6" translate="yes" xml:space="preserve">
          <source>The process is waiting for a call to &lt;code&gt;check&lt;/code&gt; (see below)</source>
          <target state="translated">프로세스가 통화 &lt;code&gt;check&lt;/code&gt; 기다리는 중입니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="da0d9c2bcbd05524ccb997bcead89cb202e57f85" translate="yes" xml:space="preserve">
          <source>The public path for the assets</source>
          <target state="translated">자산의 공개 경로</target>
        </trans-unit>
        <trans-unit id="cb86a22bbc4606b38567e92006152c02a74c9252" translate="yes" xml:space="preserve">
          <source>The query of the resource, i.e. &lt;code&gt;?foo=bar&lt;/code&gt;.</source>
          <target state="translated">The query of the resource, i.e. &lt;code&gt;?foo=bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e000088ad11082bbbe5a98b178ad198d4f76470" translate="yes" xml:space="preserve">
          <source>The query of the resource.</source>
          <target state="translated">자원의 질의.</target>
        </trans-unit>
        <trans-unit id="9ffb3bc216dc8a7e0d1139c2c7c1d7964b2fcb6e" translate="yes" xml:space="preserve">
          <source>The query parameter &lt;code&gt;importLoaders&lt;/code&gt; allows to configure how many loaders before &lt;code&gt;css-loader&lt;/code&gt; should be applied to &lt;code&gt;@import&lt;/code&gt;ed resources.</source>
          <target state="translated">쿼리 매개 변수 &lt;code&gt;importLoaders&lt;/code&gt; 를 사용하면 &lt;code&gt;css-loader&lt;/code&gt; 를 &lt;code&gt;@import&lt;/code&gt; ed 리소스에 적용 하기 전에 로더 수를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6676ec8ba190e154043d97da697c1d7c9a7c0d0" translate="yes" xml:space="preserve">
          <source>The query parameter &lt;code&gt;modules&lt;/code&gt; enables the &lt;strong&gt;CSS Modules&lt;/strong&gt; spec.</source>
          <target state="translated">쿼리 매개 변수 &lt;code&gt;modules&lt;/code&gt; 은 &lt;strong&gt;CSS 모듈&lt;/strong&gt; 사양을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="3505e465d18f3771163a660a2e747e533a6a0c35" translate="yes" xml:space="preserve">
          <source>The raw require function. This expression isn't parsed by the Parser for dependencies.</source>
          <target state="translated">원시 기능이 필요합니다. 이 표현은 파서가 의존성을 위해 파싱하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="839aba6b25dd0c8b662bb331ab8b59ee74817839" translate="yes" xml:space="preserve">
          <source>The reason we need &lt;code&gt;default&lt;/code&gt; is that since webpack 4, when importing a CommonJS module, the import will no longer resolve to the value of &lt;code&gt;module.exports&lt;/code&gt;, it will instead create an artificial namespace object for the CommonJS module. For more information on the reason behind this, read &lt;a href=&quot;https://medium.com/webpack/webpack-4-import-and-commonjs-d619d626b655&quot;&gt;webpack 4: import() and CommonJs&lt;/a&gt;.</source>
          <target state="translated">The reason we need &lt;code&gt;default&lt;/code&gt; is that since webpack 4, when importing a CommonJS module, the import will no longer resolve to the value of &lt;code&gt;module.exports&lt;/code&gt; , it will instead create an artificial namespace object for the CommonJS module. For more information on the reason behind this, read &lt;a href=&quot;https://medium.com/webpack/webpack-4-import-and-commonjs-d619d626b655&quot;&gt;webpack 4: import() and CommonJs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="092899a9890c9149ab3ac8291fc14610f558cc74" translate="yes" xml:space="preserve">
          <source>The remainder of this guide will stem from &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. If you haven't read through that guide already, please do so now.</source>
          <target state="translated">이 안내서의 나머지 부분은 &lt;a href=&quot;getting-started&quot;&gt;시작하기&lt;/a&gt; 에서 나옵니다 . 이 안내서를 아직 읽지 않았다면 지금 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="f1829880bae1c785aa269cd8ac49c93162f07fa2" translate="yes" xml:space="preserve">
          <source>The reporter function will be excuted with the loader context as &lt;code&gt;this&lt;/code&gt;. You may emit messages using &lt;code&gt;this.emitWarning(...)&lt;/code&gt; or &lt;code&gt;this.emitError(...)&lt;/code&gt;. See &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;webpack docs on loader context&lt;/a&gt;.</source>
          <target state="translated">로더 컨텍스트는 &lt;code&gt;this&lt;/code&gt; 과 같이 리포터 기능이 수행됩니다 . &lt;code&gt;this.emitWarning(...)&lt;/code&gt; 또는 &lt;code&gt;this.emitError(...)&lt;/code&gt; 사용하여 메시지를 생성 할 수 있습니다 . &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;로더 컨텍스트에서 webpack 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="46056f0f9b6a95a54bd9a4410020bf916e27bee7" translate="yes" xml:space="preserve">
          <source>The reporter function will be passed an array of errors/warnings produced by JSHint with the following structure:</source>
          <target state="translated">리포터 기능은 JSHint가 다음과 같은 구조로 생성 한 오류 / 경고 배열을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9832e252c089a76e52186789fa74082b68c95b94" translate="yes" xml:space="preserve">
          <source>The resolved request string.</source>
          <target state="translated">해결 된 요청 문자열</target>
        </trans-unit>
        <trans-unit id="9d809278234aebfd0e7cff2e2c8af4a8c69b9ff5" translate="yes" xml:space="preserve">
          <source>The resolver plugins, e.g. &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt;&lt;code&gt;DirectoryNamedPlugin&lt;/code&gt;&lt;/a&gt;, can be included directly in &lt;code&gt;resolve.plugins&lt;/code&gt; rather than using directly in &lt;a href=&quot;../configuration/plugins#plugins&quot;&gt;&lt;code&gt;plugins&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="translated">The resolver plugins, e.g. &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt; &lt;code&gt;DirectoryNamedPlugin&lt;/code&gt; &lt;/a&gt;, can be included directly in &lt;code&gt;resolve.plugins&lt;/code&gt; rather than using directly in &lt;a href=&quot;../configuration/plugins#plugins&quot;&gt; &lt;code&gt;plugins&lt;/code&gt; configuration option&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ce32757da121c3a937bde8602723d7dd668a47da" translate="yes" xml:space="preserve">
          <source>The resolver plugins, e.g. &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt;&lt;code&gt;DirectoryNamedPlugin&lt;/code&gt;&lt;/a&gt;, can be included directly in &lt;code&gt;resolve.plugins&lt;/code&gt; rather than using standard plugins. Note that the &lt;code&gt;resolve&lt;/code&gt; configuration affects the &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; resolvers while &lt;code&gt;resolveLoader&lt;/code&gt; is used to modify the &lt;code&gt;loader&lt;/code&gt; resolver.</source>
          <target state="translated">리졸버 플러그인 (예 : &lt;a href=&quot;https://github.com/shaketbaby/directory-named-webpack-plugin&quot;&gt; &lt;code&gt;DirectoryNamedPlugin&lt;/code&gt; &lt;/a&gt; )은 표준 플러그인을 사용하지 않고 &lt;code&gt;resolve.plugins&lt;/code&gt; 에 직접 포함될 수 있습니다 . 점을 유의 &lt;code&gt;resolve&lt;/code&gt; 구성이 영향을 &lt;code&gt;normal&lt;/code&gt; 및 &lt;code&gt;context&lt;/code&gt; 동안 리졸버를 &lt;code&gt;resolveLoader&lt;/code&gt; 을 수정하는 데 사용됩니다 &lt;code&gt;loader&lt;/code&gt; 해결합니다.</target>
        </trans-unit>
        <trans-unit id="f0f4846e8028f9a80dd0d8c0ef30ddcd09e4241e" translate="yes" xml:space="preserve">
          <source>The resolvers mentioned above can also be customized via a configuration file with the &lt;a href=&quot;../configuration/resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt;&lt;code&gt;resolveLoader&lt;/code&gt;&lt;/a&gt; options. These options allow users to change the resolving behavior through a variety of options including through resolve &lt;code&gt;plugins&lt;/code&gt;.</source>
          <target state="translated">위에서 언급 한 리졸버는 &lt;a href=&quot;../configuration/resolve&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt; &lt;code&gt;resolveLoader&lt;/code&gt; &lt;/a&gt; 옵션 으로 구성 파일을 통해 사용자 정의 할 수도 있습니다. 이 옵션을 통해 사용자는 resolve &lt;code&gt;plugins&lt;/code&gt; 을 포함한 다양한 옵션을 통해 해결 동작을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d0fd93852dd662bc6b879642ac9e4e4d5b03796" translate="yes" xml:space="preserve">
          <source>The resource file.</source>
          <target state="translated">리소스 파일</target>
        </trans-unit>
        <trans-unit id="a4cd8313da62b6881779fdfaa0180a987b0cdd4f" translate="yes" xml:space="preserve">
          <source>The resource part of the request, including query.</source>
          <target state="translated">쿼리를 포함한 요청의 리소스 부분.</target>
        </trans-unit>
        <trans-unit id="6f290b949856d1410b77b558b0c660ec9cabd3a5" translate="yes" xml:space="preserve">
          <source>The resource query of the current module. If the following &lt;code&gt;require&lt;/code&gt; call was made, then the query string would be available in &lt;code&gt;file.js&lt;/code&gt;.</source>
          <target state="translated">The resource query of the current module. If the following &lt;code&gt;require&lt;/code&gt; call was made, then the query string would be available in &lt;code&gt;file.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4c514f8ccaf5649c6351763537ef961c30fd000" translate="yes" xml:space="preserve">
          <source>The resource query of the current module. If the following &lt;code&gt;require&lt;/code&gt; call were made, then the query string would be available in &lt;code&gt;file.js&lt;/code&gt;.</source>
          <target state="translated">현재 모듈의 리소스 쿼리 다음과 같은 호출이 &lt;code&gt;require&lt;/code&gt; 경우 &lt;code&gt;file.js&lt;/code&gt; 에서 쿼리 문자열을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4780d56cbc686c5ce3270f7769038e13ae838f0" translate="yes" xml:space="preserve">
          <source>The resource: An absolute path to the file requested. It's already resolved according to the &lt;a href=&quot;resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt; rules&lt;/a&gt;.</source>
          <target state="translated">리소스 : 요청 된 파일의 절대 경로입니다. &lt;a href=&quot;resolve&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; 규칙&lt;/a&gt; 에 따라 이미 해결되었습니다 .</target>
        </trans-unit>
        <trans-unit id="01c6e113f51546fcaa75367b348564232431d01b" translate="yes" xml:space="preserve">
          <source>The resulting configuration object would resemble:</source>
          <target state="translated">결과 구성 오브젝트는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="d5fcb09293cddfb6fac196a1f2ae3817a3ca173b" translate="yes" xml:space="preserve">
          <source>The rules can be disabled using the following options in your &lt;code&gt;webpack.conf.js&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;webpack.conf.js&lt;/code&gt; 에서 다음 옵션을 사용하여 규칙을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97262fc608fb5c3c1ca59507abc23b2d97ffaa58" translate="yes" xml:space="preserve">
          <source>The runtime asynchronously downloads the updates and notifies the application.</source>
          <target state="translated">런타임은 비동기 적으로 업데이트를 다운로드하고 애플리케이션에 알립니다.</target>
        </trans-unit>
        <trans-unit id="6fca03cfbb7a42f44c98900865cadf2c926101c4" translate="yes" xml:space="preserve">
          <source>The runtime code detects already added CSS via &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag. This can be useful when injecting CSS on server-side for Server-Side-Rendering. The &lt;code&gt;href&lt;/code&gt; of the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag has to match the URL that will be used for loading the CSS chunk. The &lt;code&gt;data-href&lt;/code&gt; attribute can be used for &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; too. When inlining CSS &lt;code&gt;data-href&lt;/code&gt; must be used.</source>
          <target state="translated">런타임 코드는 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그 를 통해 이미 추가 된 CSS를 감지 합니다. 서버 측 렌더링을 위해 서버 측에 CSS를 삽입 할 때 유용 할 수 있습니다. &lt;code&gt;href&lt;/code&gt; 의 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 태그는 CSS 청크를로드하기 위해 사용되는 URL과 일치해야합니다. &lt;code&gt;data-href&lt;/code&gt; 속성은 사용할 수 있습니다 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 과 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 도. CSS를 인라인 할 때는 &lt;code&gt;data-href&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a78efb0808055f65bb7c8c45f825cc95b4914fbe" translate="yes" xml:space="preserve">
          <source>The runtime synchronously applies the updates.</source>
          <target state="translated">런타임은 업데이트를 동 기적으로 적용합니다.</target>
        </trans-unit>
        <trans-unit id="22c88bf74eeb1c895a2476d06df2afcbf140bbb5" translate="yes" xml:space="preserve">
          <source>The runtime, along with the manifest data, is basically all the code webpack needs to connect your modularized application while it's running in the browser. It contains the loading and resolving logic needed to connect your modules as they interact. This includes connecting modules that have already been loaded into the browser as well as logic to lazy-load the ones that haven't.</source>
          <target state="translated">The runtime, along with the manifest data, is basically all the code webpack needs to connect your modularized application while it's running in the browser. It contains the loading and resolving logic needed to connect your modules as they interact. This includes connecting modules that have already been loaded into the browser as well as logic to lazy-load the ones that haven't.</target>
        </trans-unit>
        <trans-unit id="70b63872573cf38e68d77c29277931f4da8eb8e5" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; but for &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules&lt;/a&gt;</source>
          <target state="translated">The same as &lt;a href=&quot;#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; but for &lt;a href=&quot;../guides/asset-modules&quot;&gt;Asset Modules&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc2c4ae26a6eae362e4487bbd392bf0a2e98d3a8" translate="yes" xml:space="preserve">
          <source>The same as &lt;a href=&quot;output#outputassetmodulefilename&quot;&gt;&lt;code&gt;output.assetModuleFilename&lt;/code&gt;&lt;/a&gt; but for specific rule. Overrides &lt;code&gt;output.assetModuleFilename&lt;/code&gt; and works only with &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;asset/resource&lt;/code&gt; module types.</source>
          <target state="translated">The same as &lt;a href=&quot;output#outputassetmodulefilename&quot;&gt; &lt;code&gt;output.assetModuleFilename&lt;/code&gt; &lt;/a&gt; but for specific rule. Overrides &lt;code&gt;output.assetModuleFilename&lt;/code&gt; and works only with &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;asset/resource&lt;/code&gt; module types.</target>
        </trans-unit>
        <trans-unit id="3c2d69006c9f2c04928fcb8a9dcc73f5a62b5cf3" translate="yes" xml:space="preserve">
          <source>The same as &lt;code&gt;node-webkit&lt;/code&gt;</source>
          <target state="translated">The same as &lt;code&gt;node-webkit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0acfe5a92bfd936f558865b7784ff994e921d19f" translate="yes" xml:space="preserve">
          <source>The same shortcut as an array can be used for the return value (i.e. &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt;).</source>
          <target state="translated">The same shortcut as an array can be used for the return value (i.e. &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2b665da5e519d5e540da3b313a41a99cd0ecf3a1" translate="yes" xml:space="preserve">
          <source>The sass-loader requires &lt;a href=&quot;https://github.com/webpack&quot;&gt;webpack&lt;/a&gt; as a &lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt;&lt;code&gt;peerDependency&lt;/code&gt;&lt;/a&gt; and it requires you to install either &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; on your own. This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</source>
          <target state="translated">sass-loader에는 &lt;a href=&quot;https://github.com/webpack&quot;&gt;peerDependency&lt;/a&gt; 로 &lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt; &lt;code&gt;peerDependency&lt;/code&gt; &lt;/a&gt; 이 필요하며 &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; 를 직접 설치해야합니다 . 이를 통해 모든 종속성의 버전을 제어하고 사용할 Sass 구현을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34aa382924eb34a97b5ff040bbe8c678d0951eb6" translate="yes" xml:space="preserve">
          <source>The second argument a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 번째 인수는 &lt;code&gt;string&lt;/code&gt; 또는 &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f40ba461a9658ddbae40cc1a6452af405d39a0a" translate="yes" xml:space="preserve">
          <source>The second argument is a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The second argument is a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="df04995c9f49009e24f0c183707f430b6ea80c03" translate="yes" xml:space="preserve">
          <source>The second argument is an array of file paths to watch for. Pass &lt;code&gt;true&lt;/code&gt; instead of &lt;code&gt;[string]&lt;/code&gt; here to flag the module as uncacheable.</source>
          <target state="translated">The second argument is an array of file paths to watch for. Pass &lt;code&gt;true&lt;/code&gt; instead of &lt;code&gt;[string]&lt;/code&gt; here to flag the module as uncacheable.</target>
        </trans-unit>
        <trans-unit id="9eb3a2178fb08052e95c8397dfaf7a97e66d1c0a" translate="yes" xml:space="preserve">
          <source>The server should be accessible on &lt;code&gt;http://10.10.10.61:8080&lt;/code&gt; now. If you make a change in &lt;code&gt;app.js&lt;/code&gt;, it should live reload.</source>
          <target state="translated">서버는 &lt;code&gt;http://10.10.10.61:8080&lt;/code&gt; 에서 액세스 할 수 있어야합니다 . &lt;code&gt;app.js&lt;/code&gt; 를 변경 하면 실시간으로 새로 고침됩니다.</target>
        </trans-unit>
        <trans-unit id="36694462fb15a2bc75a3fea2f02d4342fbda1a03" translate="yes" xml:space="preserve">
          <source>The single entry syntax for the &lt;code&gt;entry&lt;/code&gt; property is a shorthand for:</source>
          <target state="translated">&lt;code&gt;entry&lt;/code&gt; 속성 의 단일 항목 구문 은 다음과 같은 약어입니다.</target>
        </trans-unit>
        <trans-unit id="115c455da79a8006628c20e59f638f4b9b64b4d0" translate="yes" xml:space="preserve">
          <source>The source code you, and maybe your team, have written.</source>
          <target state="translated">당신과 아마도 당신의 팀이 작성한 소스 코드.</target>
        </trans-unit>
        <trans-unit id="28cb8cd49852f753c9f2be8f92238b51bbe3f7ae" translate="yes" xml:space="preserve">
          <source>The spec for &lt;code&gt;import&lt;/code&gt; doesn't allow control over the chunk's name or other properties as &quot;chunks&quot; are only a concept within webpack. Luckily webpack allows some special parameters via comments so as to not break the spec:</source>
          <target state="translated">&quot;청크&quot;는 웹팩 내의 개념 일 뿐이므로 &lt;code&gt;import&lt;/code&gt; 사양 에서는 청크 이름 또는 기타 속성을 제어 할 수 없습니다. 운 좋게 webpack은 사양을 위반하지 않도록 주석을 통해 일부 특수 매개 변수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="05f9d310d6b1645304fb71809f2e5decd348a40d" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Less to use. Overrides the locally installed &lt;code&gt;peerDependency&lt;/code&gt; version of &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">특수 &lt;code&gt;implementation&lt;/code&gt; 옵션은 사용할 Less 구현을 결정합니다. 오버라이드 (override) 로컬 설치 &lt;code&gt;peerDependency&lt;/code&gt; 의 버전 &lt;code&gt;less&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9db5546b423fb98bd6ac711ec8bcb1997664853" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of PostCSS to use. Overrides the locally installed &lt;code&gt;peerDependency&lt;/code&gt; version of &lt;code&gt;postcss&lt;/code&gt;.</source>
          <target state="translated">특수 &lt;code&gt;implementation&lt;/code&gt; 옵션은 사용할 PostCSS 구현을 결정합니다. &lt;code&gt;peerDependency&lt;/code&gt; 의 로컬로 설치된 peerDependency 버전을 &lt;code&gt;postcss&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3b0675c0031efa142feb44abd09373964cd599c1" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use.</source>
          <target state="translated">The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use.</target>
        </trans-unit>
        <trans-unit id="13755577ac5a47dc78ee4c995fe1dfc9e99d9c04" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use. It takes either a [Node Sass][] or a [Dart Sass][] module. For example, to use Dart Sass, you'd pass:</source>
          <target state="translated">특수 &lt;code&gt;implementation&lt;/code&gt; 옵션은 사용할 Sass 구현을 결정합니다. [Node Sass] [] 또는 [Dart Sass] [] 모듈이 필요합니다. 예를 들어 Dart Sass를 사용하려면 다음을 통과하십시오.</target>
        </trans-unit>
        <trans-unit id="5c4b162f681173ae925ce59ee2d62441d980bbc0" translate="yes" xml:space="preserve">
          <source>The steps above would be shortened to:</source>
          <target state="translated">위의 단계는 다음과 같이 단축됩니다.</target>
        </trans-unit>
        <trans-unit id="c086ef368c2e61193dc23f5a88ecd75a1567c8f6" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;:local(.className)&lt;/code&gt; can be used to declare &lt;code&gt;className&lt;/code&gt; in the local scope. The local identifiers are exported by the module.</source>
          <target state="translated">&lt;code&gt;:local(.className)&lt;/code&gt; 구문을 사용 하여 로컬 범위에서 &lt;code&gt;className&lt;/code&gt; 을 선언 할 수 있습니다 . 로컬 식별자는 모듈에서 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="6c080a2f2285ca1d1604a8b397e768aea30b9793" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fc0e5cab2c02c3cbb325fe5bd464f4e5ea7336eb" translate="yes" xml:space="preserve">
          <source>The syntax was chosen to allow running code without bundler, it is also available in native ECMAScript modules in the browser.</source>
          <target state="translated">이 구문은 번 들러없이 코드를 실행할 수 있도록 선택되었으며 브라우저의 기본 ECMAScript 모듈에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1a16d57fa62224eed23c5bf7c1e111292049ad9" translate="yes" xml:space="preserve">
          <source>The target asset filename</source>
          <target state="translated">The target asset filename</target>
        </trans-unit>
        <trans-unit id="2716905e673426c395a43315d25accc4c07f4a9b" translate="yes" xml:space="preserve">
          <source>The target asset filename.</source>
          <target state="translated">The target asset filename.</target>
        </trans-unit>
        <trans-unit id="636a5736cf2581279ebfb2a0261adf16ae389bb9" translate="yes" xml:space="preserve">
          <source>The target asset name. &lt;code&gt;[file]&lt;/code&gt; is replaced with the original asset. &lt;code&gt;[path]&lt;/code&gt; is replaced with the path of the original asset and &lt;code&gt;[query]&lt;/code&gt; with the query</source>
          <target state="translated">대상 자산 이름 &lt;code&gt;[file]&lt;/code&gt; 이 원래 자산으로 교체되었습니다. &lt;code&gt;[path]&lt;/code&gt; 는 원래 자산의 경로로 대체되고 &lt;code&gt;[query]&lt;/code&gt; 는 쿼리 로 대체됩니다</target>
        </trans-unit>
        <trans-unit id="177bdd7144528e0a066a492e3ba76b2ce123f46a" translate="yes" xml:space="preserve">
          <source>The target module is called with two arguments: &lt;code&gt;(options, loaderContext)&lt;/code&gt;</source>
          <target state="translated">The target module is called with two arguments: &lt;code&gt;(options, loaderContext)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eba2325dc692f9ab9bafbbb2beda8299b674eba5" translate="yes" xml:space="preserve">
          <source>The third-party &lt;a href=&quot;https://github.com/mrsteele/dotenv-webpack&quot;&gt;&lt;code&gt;DotenvPlugin&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;dotenv-webpack&lt;/code&gt;) allows you to expose (a subset of) &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv variables&lt;/a&gt;:</source>
          <target state="translated">타사 &lt;a href=&quot;https://github.com/mrsteele/dotenv-webpack&quot;&gt; &lt;code&gt;DotenvPlugin&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;dotenv-webpack&lt;/code&gt; )을 사용하면 &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv 변수를&lt;/a&gt; 서브 세트로 노출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba0623dec4dcfaa3539a27d267af37d4a6c6159b" translate="yes" xml:space="preserve">
          <source>The tools in this guide are &lt;strong&gt;only meant for development&lt;/strong&gt;, please &lt;strong&gt;avoid&lt;/strong&gt; using them in production!</source>
          <target state="translated">이 안내서의 도구는 &lt;strong&gt;개발 용&lt;/strong&gt; 이므로 프로덕션 &lt;strong&gt;환경&lt;/strong&gt; 에서는 사용 &lt;strong&gt;하지 마십시오&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="d03833fb081139e2861c0b6bac6df6e16c42c69b" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;output&lt;/code&gt; key contains set of options instructing webpack on how and where it should output your bundles, assets and anything else you bundle or load with webpack.</source>
          <target state="translated">최상위 레벨 &lt;code&gt;output&lt;/code&gt; 키에는 번들, 자산 및 웹팩과 함께 번들 또는로드하는 항목을 출력하는 방법과 위치에 대한 웹팩을 지시하는 옵션 세트가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="23ddc8426f41fcf0c2f24729e02738cbc0c4ea94" translate="yes" xml:space="preserve">
          <source>The top-level structure of the output JSON file is fairly straightforward but there are a few nested data structures as well. Each nested structure has a dedicated section below to make this document more consumable. Note that you can click links within the top-level structure below to jump to relevant sections and documentation:</source>
          <target state="translated">출력 JSON 파일의 최상위 구조는 매우 간단하지만 중첩 된 데이터 구조도 있습니다. 각 중첩 구조에는 아래에 전용 섹션이있어이 문서를보다 소모품으로 만들 수 있습니다. 아래의 최상위 구조 내에서 링크를 클릭하면 관련 섹션 및 문서로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21fac4f66ee3d2ee67766bb850f5c7ffd7ea15c9" translate="yes" xml:space="preserve">
          <source>The total modules count is unknown in advance and changes during the build. This may cause inaccurate progress percentage.</source>
          <target state="translated">The total modules count is unknown in advance and changes during the build. This may cause inaccurate progress percentage.</target>
        </trans-unit>
        <trans-unit id="bcc561d5b45341ac9ae52e7eceff1b71c210b154" translate="yes" xml:space="preserve">
          <source>The type for exposing the exports of the entry point as library</source>
          <target state="translated">진입 점 내보내기를 라이브러리로 노출하기위한 유형</target>
        </trans-unit>
        <trans-unit id="1b0130c377a6b1943c155f390a9bb614091aca89" translate="yes" xml:space="preserve">
          <source>The type of hash that the has function should use. Valid values include: &lt;code&gt;md4&lt;/code&gt;, &lt;code&gt;md5&lt;/code&gt;, &lt;code&gt;sha1&lt;/code&gt;, &lt;code&gt;sha256&lt;/code&gt;, and &lt;code&gt;sha512&lt;/code&gt;.</source>
          <target state="translated">The type of hash that the has function should use. Valid values include: &lt;code&gt;md4&lt;/code&gt; , &lt;code&gt;md5&lt;/code&gt; , &lt;code&gt;sha1&lt;/code&gt; , &lt;code&gt;sha256&lt;/code&gt; , and &lt;code&gt;sha512&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52496825e602d46c2484208661a0dbf58d19c31d" translate="yes" xml:space="preserve">
          <source>The type of hash that the has function should use. Valid values include: md5, sha1, sha256, and sha512.</source>
          <target state="translated">has 함수가 사용해야하는 해시 유형입니다. 유효한 값은 md5, sha1, sha256 및 sha512입니다.</target>
        </trans-unit>
        <trans-unit id="eb1ba693e91aeced7bfd7d3c4973add619d0c630" translate="yes" xml:space="preserve">
          <source>The update is prepared and available</source>
          <target state="translated">업데이트 준비 및 사용 가능</target>
        </trans-unit>
        <trans-unit id="61a9637f0952375cb9aed04469dd726cfd952673" translate="yes" xml:space="preserve">
          <source>The updated &lt;a href=&quot;manifest&quot;&gt;manifest&lt;/a&gt; (JSON)</source>
          <target state="translated">업데이트 된 &lt;a href=&quot;manifest&quot;&gt;매니페스트&lt;/a&gt; (JSON)</target>
        </trans-unit>
        <trans-unit id="b7f04ddab5440093506974af2f71afb5c69d6443" translate="yes" xml:space="preserve">
          <source>The usage of these properties is highly discouraged since we are planning to remove them from the context. They are still listed here for documentation purposes.</source>
          <target state="translated">이러한 속성은 컨텍스트에서 제거 할 계획이므로 사용하지 않는 것이 좋습니다. 문서화 목적으로 여기에 계속 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="09a01ba6fc5ac28730420b58f620f492ea97a0a5" translate="yes" xml:space="preserve">
          <source>The usage specification for the library use will be as follows:</source>
          <target state="translated">라이브러리 사용에 대한 사용 사양은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad8f6ee6214c162258ff694b7015ecaf7841b5c9" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;System.import&lt;/code&gt; in webpack &lt;a href=&quot;https://github.com/webpack/webpack/issues/2163&quot;&gt;did not fit the proposed spec&lt;/a&gt;, so it was deprecated in webpack &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v2.1.0-beta.28&quot;&gt;2.1.0-beta.28&lt;/a&gt; in favor of &lt;code&gt;import()&lt;/code&gt;.</source>
          <target state="translated">webpack에서 &lt;code&gt;System.import&lt;/code&gt; 를 사용하는 &lt;a href=&quot;https://github.com/webpack/webpack/issues/2163&quot;&gt;것이 제안 된 사양에 맞지&lt;/a&gt; 않으므로 &lt;code&gt;import()&lt;/code&gt; 를 위해 webpack &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v2.1.0-beta.28&quot;&gt;2.1.0-beta.28&lt;/a&gt; 에서 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="29aed52fbed5a1ee08cf94c8c33cc34833f0cd7d" translate="yes" xml:space="preserve">
          <source>The use of IIFEs led to tools like Make, Gulp, Grunt, Broccoli or Brunch. These tools are known as task runners, and they concatenate all your project files together.</source>
          <target state="translated">The use of IIFEs led to tools like Make, Gulp, Grunt, Broccoli or Brunch. These tools are known as task runners, and they concatenate all your project files together.</target>
        </trans-unit>
        <trans-unit id="43ce4cf602e81313a6d20c96af3f2f1a73a256a9" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;&quot;single&quot;&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</source>
          <target state="translated">&lt;code&gt;&quot;single&quot;&lt;/code&gt; 값 은 대신 생성 된 모든 청크에 대해 공유 할 런타임 파일을 작성합니다. 이 설정은 다음에 대한 별명입니다.</target>
        </trans-unit>
        <trans-unit id="790b8c06e5a192fd1f0e912883db250944958c91" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;'single'&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</source>
          <target state="translated">The value &lt;code&gt;'single'&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</target>
        </trans-unit>
        <trans-unit id="0781638151e5add1c7a964dc64eef876b353008e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;BUILT_AT&lt;/code&gt; would be the time at which the &lt;code&gt;'sample.txt'&lt;/code&gt; was last updated in the file system, e.g. &lt;code&gt;1597953013291&lt;/code&gt;.</source>
          <target state="translated">The value of &lt;code&gt;BUILT_AT&lt;/code&gt; would be the time at which the &lt;code&gt;'sample.txt'&lt;/code&gt; was last updated in the file system, e.g. &lt;code&gt;1597953013291&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1229e71274c5a0848ada24997f99c0e90c13985" translate="yes" xml:space="preserve">
          <source>The value of the option is prefixed to every URL created by the runtime or loaders. Because of this &lt;strong&gt;the value of this option ends with &lt;code&gt;/&lt;/code&gt;&lt;/strong&gt; in most cases.</source>
          <target state="translated">옵션 값은 런타임 또는 로더가 작성한 모든 URL 앞에 접두어가 붙습니다. 이 때문에 &lt;strong&gt;이 옵션 종료의 값 &lt;code&gt;/&lt;/code&gt; &lt;/strong&gt; 대부분의 경우이다.</target>
        </trans-unit>
        <trans-unit id="89761bd1af99839698fc977f7b95894b8d804bab" translate="yes" xml:space="preserve">
          <source>The values will be inlined into the code allowing a minification pass to remove the redundant conditional.</source>
          <target state="translated">값이 코드에 인라인되어 최소화 조건이 중복 제거되도록 최소화 단계가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a9aa12557f06576dffeddc570ca96e258d06e4f9" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;MyLibrary&lt;/code&gt; will be bound with the return value of your entry file, if the resulting output is included as a script tag in an HTML page.</source>
          <target state="translated">결과 출력이 HTML 페이지에 스크립트 태그로 포함 된 경우 &lt;code&gt;MyLibrary&lt;/code&gt; 변수 는 입력 파일의 반환 값에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="5266dcf83baacd57ef40f73a540394d3aff1883c" translate="yes" xml:space="preserve">
          <source>The warnings found will always be emitted, to disable set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">발견 된 경고는 항상 &lt;code&gt;false&lt;/code&gt; 로 설정되어 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="adc4f01ea35788d18caa049991ad53d743ab4a33" translate="yes" xml:space="preserve">
          <source>The way this is accomplished is the &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; package.json property.</source>
          <target state="translated">이것이 달성되는 방식은 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; package.json 특성입니다.</target>
        </trans-unit>
        <trans-unit id="cc0f8180a2809a16c731d6f278b809d648c76948" translate="yes" xml:space="preserve">
          <source>The webcomponent polyfills must be added in a specific order. If you do not delay loading the main bundle with your components, you will see the following exceptions in the browser console:</source>
          <target state="translated">웹 컴포넌트 폴리 필은 특정 순서로 추가해야합니다. 컴포넌트와 함께 기본 번들로드를 지연하지 않으면 브라우저 콘솔에 다음 예외가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="891b65ff2555253127d610f04559b1a2a11cfb73" translate="yes" xml:space="preserve">
          <source>The webpack 2 release came with built-in support for ES2015 modules (alias &lt;em&gt;harmony modules&lt;/em&gt;) as well as unused module export detection. The new webpack 4 release expands on this capability with a way to provide hints to the compiler via the &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt;&lt;code&gt;package.json&lt;/code&gt; property to denote which files in your project are &quot;pure&quot; and therefore safe to prune if unused.</source>
          <target state="translated">webpack 2 릴리스에는 ES2015 모듈 (별칭 &lt;em&gt;하모니 모듈&lt;/em&gt; ) 및 사용되지 않은 모듈 내보내기 감지 기능이 내장되어 있습니다. 새로운 webpack 4 릴리스는 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; &lt;code&gt;package.json&lt;/code&gt; 속성을 통해 컴파일러에 힌트를 제공 하여 프로젝트에서 &quot;순수한&quot;파일을 나타내므로 사용하지 않을 경우 정리할 수있는 방법으로이 기능을 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="478a5519b2320811d6017390c8de571fe8e886eb" translate="yes" xml:space="preserve">
          <source>The webpack &lt;code&gt;target&lt;/code&gt; property is not to be confused with the &lt;code&gt;output.libraryTarget&lt;/code&gt; property. For more information see &lt;a href=&quot;output&quot;&gt;our guide&lt;/a&gt; on the &lt;code&gt;output&lt;/code&gt; property.</source>
          <target state="translated">웹팩 &lt;code&gt;target&lt;/code&gt; 특성을 &lt;code&gt;output.libraryTarget&lt;/code&gt; 특성 과 혼동하지 마십시오 . 자세한 내용 은 &lt;code&gt;output&lt;/code&gt; 속성 에 &lt;a href=&quot;output&quot;&gt;대한 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8eed51fad4553755fee39d9ff56da10a140db934" translate="yes" xml:space="preserve">
          <source>The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt;&lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt;. For example, &lt;code&gt;--env production&lt;/code&gt; or &lt;code&gt;--env NODE_ENV=local&lt;/code&gt; (&lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="translated">The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt; &lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt; . For example, &lt;code&gt;--env production&lt;/code&gt; or &lt;code&gt;--env NODE_ENV=local&lt;/code&gt; ( &lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</target>
        </trans-unit>
        <trans-unit id="67d0c64e1b2084b3dd8a7172e708b0db5df6c2ff" translate="yes" xml:space="preserve">
          <source>The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt;&lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt;. For example, &lt;code&gt;--env.production&lt;/code&gt; or &lt;code&gt;--env.NODE_ENV=local&lt;/code&gt; (&lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="translated">webpack 명령 줄 &lt;a href=&quot;../api/cli#environment-options&quot;&gt;환경 옵션 &lt;/a&gt; &lt;code&gt;--env&lt;/code&gt; 를 사용하면 원하는만큼 환경 변수를 전달할 수 있습니다. 환경 변수는 &lt;code&gt;webpack.config.js&lt;/code&gt; 에서 액세스 할 수 있습니다 . 예를 들어 &lt;code&gt;--env.production&lt;/code&gt; 또는 &lt;code&gt;--env.NODE_ENV=local&lt;/code&gt; ( &lt;code&gt;NODE_ENV&lt;/code&gt; 는 일반적으로 환경 유형을 정의하는 데 사용됩니다 ( &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;여기&lt;/a&gt; 참조 )).</target>
        </trans-unit>
        <trans-unit id="2fd569f3866762654c84dc07b32b03a8679ee57a" translate="yes" xml:space="preserve">
          <source>The webpack repository contains an &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;example showing the effect of all &lt;code&gt;devtool&lt;/code&gt; variants&lt;/a&gt;. Those examples will likely help you to understand the differences.</source>
          <target state="translated">웹팩 저장소에는 &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;모든 &lt;code&gt;devtool&lt;/code&gt; 변형 의 영향을 보여주는 예제&lt;/a&gt; 가 포함되어 있습니다 . 이러한 예는 차이점을 이해하는 데 도움이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="2124200555434f2d7def0b1a661c16c179c98b22" translate="yes" xml:space="preserve">
          <source>The webpack-dev-server also takes a hint from &lt;code&gt;publicPath&lt;/code&gt;, using it to determine where to serve the output files from.</source>
          <target state="translated">webpack-dev-server는 &lt;code&gt;publicPath&lt;/code&gt; 에서 힌트를 가져 와서 출력 파일을 제공 할 위치를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a1a810a24b9f17b1d07f0266bc2e5374f6b81734" translate="yes" xml:space="preserve">
          <source>The worker file can import dependencies just like any other file:</source>
          <target state="translated">작업자 파일은 다른 파일과 마찬가지로 종속성을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f318d1321d0bcb60d6c6c01420fcb068660bff69" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;import&lt;/code&gt; the target file somewhere in your app:</source>
          <target state="translated">그런 다음 앱 어딘가에 대상 파일을 &lt;code&gt;import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09595a03296cb3c16fa26d3351525c0c0ce44925" translate="yes" xml:space="preserve">
          <source>Then add the loader and the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">Then add the loader and the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</target>
        </trans-unit>
        <trans-unit id="d0a1f0c3e9f53d1794b531be56e8b463d1ffeef7" translate="yes" xml:space="preserve">
          <source>Then add the loader to the desired &lt;code&gt;import&lt;/code&gt; statement or &lt;code&gt;require&lt;/code&gt; calls. For example:</source>
          <target state="translated">Then add the loader to the desired &lt;code&gt;import&lt;/code&gt; statement or &lt;code&gt;require&lt;/code&gt; calls. For example:</target>
        </trans-unit>
        <trans-unit id="35f38ddf8489e854be4dc0f70af5f6fa83090c8f" translate="yes" xml:space="preserve">
          <source>Then add the loader to the desired &lt;code&gt;require&lt;/code&gt; calls. For example:</source>
          <target state="translated">그런 다음 원하는 &lt;code&gt;require&lt;/code&gt; 호출에 로더를 추가하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ffad5e3e9f9bce8ff26817bbf8bcb40fe6825333" translate="yes" xml:space="preserve">
          <source>Then add the loader to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">그런 다음 로더를 &lt;code&gt;webpack&lt;/code&gt; 구성에 추가하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ea0023f11d6d17c7ac2dae0c06423102bd8bdcb" translate="yes" xml:space="preserve">
          <source>Then add the loader to your Webpack configuration. For example:</source>
          <target state="translated">Then add the loader to your Webpack configuration. For example:</target>
        </trans-unit>
        <trans-unit id="5ecc72b143ba414bace5339e99ab892cad6a01ae" translate="yes" xml:space="preserve">
          <source>Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">그런 다음 &lt;code&gt;webpack&lt;/code&gt; 구성에 플러그인을 추가하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0b2c9085fe12a59ddcd2718f3bb1bb0dfc95a710" translate="yes" xml:space="preserve">
          <source>Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; configuration. For example:</source>
          <target state="translated">Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; configuration. For example:</target>
        </trans-unit>
        <trans-unit id="aa553c5c8715ed65e20b9514b424640be97e4c70" translate="yes" xml:space="preserve">
          <source>Then import that config using the keyword you're looking for in the regexp:</source>
          <target state="translated">그런 다음 정규 표현식에서 찾고있는 키워드를 사용하여 해당 구성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c8f64d12495baa2edb4cc73d230c9c5b8f381f64" translate="yes" xml:space="preserve">
          <source>Then import that configuration using the keyword you're looking for in the regexp:</source>
          <target state="translated">Then import that configuration using the keyword you're looking for in the regexp:</target>
        </trans-unit>
        <trans-unit id="cb2125d4922a805933e12a6b7b007a9414ad8b65" translate="yes" xml:space="preserve">
          <source>Then in any of our source code:</source>
          <target state="translated">그런 다음 소스 코드 중 하나에서</target>
        </trans-unit>
        <trans-unit id="eba20bf51e1fac8e7c59f5ae2aa0c0f1ac3c67fd" translate="yes" xml:space="preserve">
          <source>Then invoke the loader through a require like so:</source>
          <target state="translated">그런 다음 요구 사항을 통해 로더를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="d73eb206650f19435ae7b09b1dd4c91b4d7875da" translate="yes" xml:space="preserve">
          <source>Then modify your &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;webpack.config.js&lt;/code&gt; 를 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ece6c64eaee4ab7ee3f8b124192a78d7721667b" translate="yes" xml:space="preserve">
          <source>Then register a configuration and load the task:</source>
          <target state="translated">그런 다음 구성을 등록하고 태스크를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="1079055dbdfefa1ebd4ed5f99bb4f3a3ab94f6aa" translate="yes" xml:space="preserve">
          <source>Then require the webpack module in your Node.js script:</source>
          <target state="translated">그런 다음 Node.js 스크립트에 웹팩 모듈이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="59ed0740687cc965bad0e350a9024363567dd315" translate="yes" xml:space="preserve">
          <source>Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-path&lt;/code&gt; like so:</source>
          <target state="translated">그런 다음 &lt;code&gt;tsconfig-path&lt;/code&gt; 에서 제공 한 환경 변수 &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; 를 다음과 같이 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a9898e443fcd095f3f8aadd44457f429c751689" translate="yes" xml:space="preserve">
          <source>Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-paths&lt;/code&gt; like so:</source>
          <target state="translated">Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-paths&lt;/code&gt; like so:</target>
        </trans-unit>
        <trans-unit id="1cf2753baac23274b2f50819a0b259179670e04c" translate="yes" xml:space="preserve">
          <source>Then the build output will also display the error (Similar to &lt;code&gt;this.emitError&lt;/code&gt;):</source>
          <target state="translated">Then the build output will also display the error (Similar to &lt;code&gt;this.emitError&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="2d06c116838f1f06f475188bff07edbe869d71d5" translate="yes" xml:space="preserve">
          <source>Then use &lt;code&gt;this.answer&lt;/code&gt; to get its value in the loader:</source>
          <target state="translated">Then use &lt;code&gt;this.answer&lt;/code&gt; to get its value in the loader:</target>
        </trans-unit>
        <trans-unit id="188304fa613a9305300549e92dfb0591f625001b" translate="yes" xml:space="preserve">
          <source>Then use it in code:</source>
          <target state="translated">Then use it in code:</target>
        </trans-unit>
        <trans-unit id="667f02d92bdbdede5b7c2dd5cadd7691d23cc47e" translate="yes" xml:space="preserve">
          <source>Then you can easily disable the AMD path by writing</source>
          <target state="translated">그런 다음 작성하여 AMD 경로를 쉽게 비활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7ab49abdc1733cccc9bfac6c1720ae703f04d3a7" translate="yes" xml:space="preserve">
          <source>Then you can inject the &lt;code&gt;jquery&lt;/code&gt; value into the module by configuring the &lt;code&gt;imports-loader&lt;/code&gt; using two approaches.</source>
          <target state="translated">Then you can inject the &lt;code&gt;jquery&lt;/code&gt; value into the module by configuring the &lt;code&gt;imports-loader&lt;/code&gt; using two approaches.</target>
        </trans-unit>
        <trans-unit id="e51ce7f29090f5b48fe3eae8cd4bcd7660d2697a" translate="yes" xml:space="preserve">
          <source>Then you can use the &lt;code&gt;expose-loader&lt;/code&gt; using two approaches.</source>
          <target state="translated">Then you can use the &lt;code&gt;expose-loader&lt;/code&gt; using two approaches.</target>
        </trans-unit>
        <trans-unit id="da73ede351abacaec57b8883eebc3e85b7c8c032" translate="yes" xml:space="preserve">
          <source>There are a couple of different options available in webpack that help you automatically compile your code whenever it changes:</source>
          <target state="translated">웹팩에는 코드가 변경 될 때마다 자동으로 컴파일하는 데 도움이되는 몇 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="98fc5926f0ed61dca265bd1d5a8cfdd128aec8ab" translate="yes" xml:space="preserve">
          <source>There are a few other tools that can help when dealing with legacy modules.</source>
          <target state="translated">레거시 모듈을 처리 할 때 도움이되는 몇 가지 다른 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a1d4e9ccad0c8085ac2c42a3a84ab4c7625d32e" translate="yes" xml:space="preserve">
          <source>There are a few use cases in real applications where this feature becomes especially neat. Essentially, every file emitted to your &lt;code&gt;output.path&lt;/code&gt; directory will be referenced from the &lt;code&gt;output.publicPath&lt;/code&gt; location. This includes child chunks (created via &lt;a href=&quot;code-splitting&quot;&gt;code splitting&lt;/a&gt;) and any other assets (e.g. images, fonts, etc.) that are a part of your dependency graph.</source>
          <target state="translated">이 기능이 특히 깔끔 해지는 실제 응용 프로그램에는 몇 가지 사용 사례가 있습니다. 기본적으로 &lt;code&gt;output.path&lt;/code&gt; 디렉토리로 방출 된 모든 파일 은 &lt;code&gt;output.publicPath&lt;/code&gt; 위치 에서 참조 됩니다. 여기에는 하위 &lt;a href=&quot;code-splitting&quot;&gt;코드&lt;/a&gt; ( 코드 분할을 통해 생성됨 ) 및 종속성 그래프의 일부인 기타 자산 (예 : 이미지, 글꼴 등)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f59b5b432af60faa3acb5fbb371c18c640f63351" translate="yes" xml:space="preserve">
          <source>There are a lot of &lt;a href=&quot;../configuration/devtool&quot;&gt;different options&lt;/a&gt; available when it comes to source maps. Be sure to check them out so you can configure them to your needs.</source>
          <target state="translated">소스 맵과 관련하여 사용할 수 있는 &lt;a href=&quot;../configuration/devtool&quot;&gt;다양한 옵션이&lt;/a&gt; 있습니다. 필요에 따라 구성 할 수 있도록 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8d407574a6dd2574ff77db703ce9dc21ace6991e" translate="yes" xml:space="preserve">
          <source>There are different export formats available:</source>
          <target state="translated">사용 가능한 다른 내보내기 형식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ec1856436537a88e242c66fae83ad8d15cb9bb3" translate="yes" xml:space="preserve">
          <source>There are many modules that check for a &lt;code&gt;define&lt;/code&gt; function before using CommonJS. Since webpack is capable of both, they default to AMD in this case, which can be a problem if the implementation is quirky.</source>
          <target state="translated">CommonJS를 사용하기 전에 &lt;code&gt;define&lt;/code&gt; 함수 를 확인하는 많은 모듈이 있습니다 . 웹팩은 두 가지를 모두 지원할 수 있으므로이 경우 기본적으로 AMD로 설정되며, 구현이 기발한 경우 문제가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="231f8d33886d63700143f71de278ecc37e1e9ea7" translate="yes" xml:space="preserve">
          <source>There are many other loaders and examples out in the community to make HMR interact smoothly with a variety of frameworks and libraries...</source>
          <target state="translated">HMR이 다양한 프레임 워크 및 라이브러리와 원활하게 상호 작용할 수 있도록 커뮤니티에 다른 로더와 예제가 많이 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="53aa2c97152f93fa32cbf84d5d7317fbd59e3f34" translate="yes" xml:space="preserve">
          <source>There are many plugins that webpack provides out of the box! Check out the &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="translated">webpack이 기본적으로 제공하는 많은 플러그인이 있습니다! &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;플러그인 목록을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="71e77a34d84d086ac72c127ae4906c48c99dd408" translate="yes" xml:space="preserve">
          <source>There are multiple optimizations in production mode regarding dead branches:</source>
          <target state="translated">운영 중단 모드에서는 죽은 분기에 대한 여러 최적화가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bcc2fea8cf939a9d3651476df04dc1a6ee79e59" translate="yes" xml:space="preserve">
          <source>There are problems with managing JavaScript projects this way:</source>
          <target state="translated">이런 식으로 JavaScript 프로젝트를 관리하는 데 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8a5e694fb4dd9cf39f7fab90a3bcd585a74cb9" translate="yes" xml:space="preserve">
          <source>There are some cases in which using ES modules is beneficial, like in the case of &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;module concatenation&lt;/a&gt; and &lt;a href=&quot;../guides/tree-shaking&quot;&gt;tree shaking&lt;/a&gt;.</source>
          <target state="translated">There are some cases in which using ES modules is beneficial, like in the case of &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;module concatenation&lt;/a&gt; and &lt;a href=&quot;../guides/tree-shaking&quot;&gt;tree shaking&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4993d4d2cc5cb72c5891a9d1ab5d8f7272cf5966" translate="yes" xml:space="preserve">
          <source>There are some issues with Source Maps in Chrome. &lt;a href=&quot;https://github.com/webpack/webpack/issues/3165&quot;&gt;We need your help!&lt;/a&gt;.</source>
          <target state="translated">Chrome의 소스 맵에 문제가 있습니다. &lt;a href=&quot;https://github.com/webpack/webpack/issues/3165&quot;&gt;우리는 당신의 도움이 필요합니다! &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9295a056060a1cd9d98ae0dd581e17215a4f5384" translate="yes" xml:space="preserve">
          <source>There are some presets available to use as a shortcut. Use them like this:</source>
          <target state="translated">바로 가기로 사용할 수있는 몇 가지 사전 설정이 있습니다. 다음과 같이 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="635b1a30cc14512dd700d2c6b33056a04cc5290a" translate="yes" xml:space="preserve">
          <source>There are three general approaches to code splitting available:</source>
          <target state="translated">사용 가능한 코드 분할에는 세 가지 일반적인 접근 방식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="267e07e43a45d9a1ca7399cfda987a9aee4304fd" translate="yes" xml:space="preserve">
          <source>There are three types of built-in resolvers available on the &lt;code&gt;compiler&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;compiler&lt;/code&gt; 클래스 에는 세 가지 유형의 내장 리졸버가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f92300c3888d24aa7e5e015926b4dda7365ed5a" translate="yes" xml:space="preserve">
          <source>There are three ways to use loaders in your application:</source>
          <target state="translated">애플리케이션에서 로더를 사용하는 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfbf2ca72bd8b5e52cf781d5d1d0ed6763357e5f" translate="yes" xml:space="preserve">
          <source>There are two input values for the conditions:</source>
          <target state="translated">조건에 대한 두 가지 입력 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c7bd6cb5a385da0b04381463b8a65bb5f007ab0" translate="yes" xml:space="preserve">
          <source>There are two output values of a Rule:</source>
          <target state="translated">규칙에는 두 가지 출력 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="421884df0658635b32d095b666151cd8fdaeb897" translate="yes" xml:space="preserve">
          <source>There are two phases that all loaders enter one after the other:</source>
          <target state="translated">모든 로더가 차례로 들어가는 두 단계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6af33372ea92fb3a1592ac062e55d75a6290f0e" translate="yes" xml:space="preserve">
          <source>There are two possibilities to extract a style sheet from the bundle:</source>
          <target state="translated">번들에서 스타일 시트를 추출 할 수있는 두 가지 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2d870d1394aaba2ab5f8a4c5504447f9a976509" translate="yes" xml:space="preserve">
          <source>There are two solutions to this issue:</source>
          <target state="translated">이 문제에 대한 두 가지 해결책이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5887025a3ed16f628b946b1010aa383ff70a6420" translate="yes" xml:space="preserve">
          <source>There are two way to add dependencies:</source>
          <target state="translated">There are two way to add dependencies:</target>
        </trans-unit>
        <trans-unit id="9ab0314c79cc74488806140e45e7d806b8fb6d8c" translate="yes" xml:space="preserve">
          <source>There are two ways to run JavaScript in a browser. First, include a script for each functionality; this solution is hard to scale because loading too many scripts can cause a network bottleneck. The second option is to use a big &lt;code&gt;.js&lt;/code&gt; file containing all your project code, but this leads to problems in scope, size, readability and maintainability.</source>
          <target state="translated">There are two ways to run JavaScript in a browser. First, include a script for each functionality; this solution is hard to scale because loading too many scripts can cause a network bottleneck. The second option is to use a big &lt;code&gt;.js&lt;/code&gt; file containing all your project code, but this leads to problems in scope, size, readability and maintainability.</target>
        </trans-unit>
        <trans-unit id="9347f0cc0834919ebc20e81c6b93cbb9b7aeb89b" translate="yes" xml:space="preserve">
          <source>There are two ways to work with &lt;code&gt;nonce&lt;/code&gt;:</source>
          <target state="translated">There are two ways to work with &lt;code&gt;nonce&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b5634a53b77237f4e15313722897fff9e4771845" translate="yes" xml:space="preserve">
          <source>There are two workarounds:</source>
          <target state="translated">There are two workarounds:</target>
        </trans-unit>
        <trans-unit id="087002361fdbdb981291d1d8ab5e2c39508ac8de" translate="yes" xml:space="preserve">
          <source>There are various resources where you can learn how to write a scaffold, you can start by reading &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-scaffold/&quot;&gt;Writing a Scaffold&lt;/a&gt; tutorial.</source>
          <target state="translated">There are various resources where you can learn how to write a scaffold, you can start by reading &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-scaffold/&quot;&gt;Writing a Scaffold&lt;/a&gt; tutorial.</target>
        </trans-unit>
        <trans-unit id="96f079b98b93fb7f704da117338a35992b2e29f7" translate="yes" xml:space="preserve">
          <source>There has been a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in the latest stable versions of Node.js and its ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. A fix has been merged in master, but a release has yet to be made. In the meantime, to get the most out of incremental build speeds, try to stick with version 8.9.x (problem exists between 8.9.10 - 9.11.1). webpack has moved to using those ES2015 data structures liberally, and it will improve the initial build times as well.</source>
          <target state="translated">이 있었다 &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;성능 저하&lt;/a&gt; Node.js를하고 ES2015의 최신 안정 버전의 &lt;code&gt;Map&lt;/code&gt; 및 &lt;code&gt;Set&lt;/code&gt; 구현. 수정 프로그램이 마스터에 병합되었지만 아직 릴리스되지 않았습니다. 그 동안 증분 빌드 속도를 최대한 활용하려면 버전 8.9.x를 사용하십시오 (문제는 8.9.10-9.11.1 사이에 있음). webpack은 이러한 ES2015 데이터 구조를 자유롭게 사용하기 시작했으며 초기 빌드 시간도 향상시킬 것입니다.</target>
        </trans-unit>
        <trans-unit id="d9d05322318799384d1e0b0c5b64e4a53b00f44d" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fast-incremental-builds&quot;&gt;full example&lt;/a&gt; on the ts-loader github repository</source>
          <target state="translated">ts-loader github 저장소에 대한 &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fast-incremental-builds&quot;&gt;전체 예가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="24f6afef7bfd23746f67918b835f6fc6565a3d0e" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fork-ts-checker-webpack-plugin&quot;&gt;full example&lt;/a&gt; on the &lt;code&gt;ts-loader&lt;/code&gt; GitHub repository.</source>
          <target state="translated">There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fork-ts-checker-webpack-plugin&quot;&gt;full example&lt;/a&gt; on the &lt;code&gt;ts-loader&lt;/code&gt; GitHub repository.</target>
        </trans-unit>
        <trans-unit id="028fda8bd113b7126322aeb6aa11e8851c9e9ab8" translate="yes" xml:space="preserve">
          <source>There is a known problem with Less and &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS modules&lt;/a&gt; regarding relative file paths in &lt;code&gt;url(...)&lt;/code&gt; statements. &lt;a href=&quot;https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335&quot;&gt;See this issue for an explanation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;url(...)&lt;/code&gt; 문의 상대 파일 경로와 관련 하여 Less 및 &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS 모듈&lt;/a&gt; 에 알려진 문제가 있습니다. &lt;a href=&quot;https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335&quot;&gt;설명은이 문제를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="272aa1d3353918deab85d3eb9bbe747c9dc3ae29" translate="yes" xml:space="preserve">
          <source>There is a slight difference between the &lt;code&gt;sass&lt;/code&gt; (&lt;code&gt;dart-sass&lt;/code&gt;) and &lt;code&gt;node-sass&lt;/code&gt; options.</source>
          <target state="translated">There is a slight difference between the &lt;code&gt;sass&lt;/code&gt; ( &lt;code&gt;dart-sass&lt;/code&gt; ) and &lt;code&gt;node-sass&lt;/code&gt; options.</target>
        </trans-unit>
        <trans-unit id="7f98e90c6aa491e1ad9072a05a6ec97f5153bcc4" translate="yes" xml:space="preserve">
          <source>There is also an &lt;code&gt;extract&lt;/code&gt; function on the instance. You should use this if you have more than one instance of &lt;code&gt;ExtractTextPlugin&lt;/code&gt;.</source>
          <target state="translated">인스턴스 에는 &lt;code&gt;extract&lt;/code&gt; 기능 도 있습니다 . &lt;code&gt;ExtractTextPlugin&lt;/code&gt; 의 인스턴스가 둘 이상인 경우이를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aca6f0f8988a8ba1fdf3cdcb454b3a2847afa5c5" translate="yes" xml:space="preserve">
          <source>There is also an additional category &quot;inlined loader&quot; which are loaders applied inline of the import/require.</source>
          <target state="translated">가져 오기 / 요구 사항의 인라인으로 적용되는 로더 인 추가 범주 &quot;인라인 로더&quot;도 있습니다.</target>
        </trans-unit>
        <trans-unit id="63dc4b8122508bfde5c2b3cd6c0dbba7d8b69700" translate="yes" xml:space="preserve">
          <source>There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt;. If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#output-publicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt;, you might need this to account for the location of your extracted file.</source>
          <target state="translated">현재 정확히 하나의 옵션 인 &lt;code&gt;publicPath&lt;/code&gt; 가 있습니다. webpack의 &lt;a href=&quot;../configuration/output#output-publicpath&quot;&gt;출력 옵션&lt;/a&gt; 에서 상대 &lt;code&gt;publicPath&lt;/code&gt; 를 사용하고 &lt;code&gt;file-loader&lt;/code&gt; 로 파일을 추출하는 경우 추출 된 파일의 위치를 ​​설명하기 위해 이것이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed255eb1347137d75a802ce92f40bff602d6e7bf" translate="yes" xml:space="preserve">
          <source>There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt;. If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#outputpublicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt;, you might need this to account for the location of your extracted file. &lt;code&gt;publicPath&lt;/code&gt; may be defined as a string or a function that accepts current &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt; as single argument.</source>
          <target state="translated">There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt; . If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#outputpublicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt; , you might need this to account for the location of your extracted file. &lt;code&gt;publicPath&lt;/code&gt; may be defined as a string or a function that accepts current &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt; as single argument.</target>
        </trans-unit>
        <trans-unit id="9b97843cd1416b0f8c95b15bcea142c8b9e09f01" translate="yes" xml:space="preserve">
          <source>There is no need to change it.</source>
          <target state="translated">변경할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="46994b7b987e4c2023ce27e138386b6cdc8bd10d" translate="yes" xml:space="preserve">
          <source>There is no option to provide a chunk name.</source>
          <target state="translated">청크 이름을 제공하는 옵션이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b8ed6d814eca2d0cbf9ffca110d21faeddc6d1fe" translate="yes" xml:space="preserve">
          <source>There is one change that you will have to make to your webpack config. Typically, &lt;code&gt;module.exports&lt;/code&gt; points to the configuration object. To use the &lt;code&gt;env&lt;/code&gt; variable, you must convert &lt;code&gt;module.exports&lt;/code&gt; to a function:</source>
          <target state="translated">웹팩 설정을 변경해야합니다. 일반적으로 &lt;code&gt;module.exports&lt;/code&gt; 는 구성 객체를 가리 킵니다. &lt;code&gt;env&lt;/code&gt; 변수 를 사용하려면 &lt;code&gt;module.exports&lt;/code&gt; 를 함수 로 변환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7e73630e624742075c75e7bc3771463c12b92f4a" translate="yes" xml:space="preserve">
          <source>There might be more than one chunk in a chunk group. For example &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; splits a chunk into one or more chunks.</source>
          <target state="translated">There might be more than one chunk in a chunk group. For example &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; splits a chunk into one or more chunks.</target>
        </trans-unit>
        <trans-unit id="f70753b8f31e00036ee915afbab312783b5229ca" translate="yes" xml:space="preserve">
          <source>There was a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in Node.js versions 8.9.10 - 9.11.1 in the ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. webpack uses those data structures liberally, so this regression affects compile times.</source>
          <target state="translated">There was a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in Node.js versions 8.9.10 - 9.11.1 in the ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. webpack uses those data structures liberally, so this regression affects compile times.</target>
        </trans-unit>
        <trans-unit id="d70ba15e08cd0adf83a907141216d6e816aef455" translate="yes" xml:space="preserve">
          <source>There're many stages to use:</source>
          <target state="translated">There're many stages to use:</target>
        </trans-unit>
        <trans-unit id="0ebe232476ab6d5eab4f199f18a86b0873c75900" translate="yes" xml:space="preserve">
          <source>There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/en/babel-polyfill/&quot;&gt;&lt;code&gt;babel-polyfill&lt;/code&gt;&lt;/a&gt; we might simply:</source>
          <target state="translated">There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/en/babel-polyfill/&quot;&gt; &lt;code&gt;babel-polyfill&lt;/code&gt; &lt;/a&gt; we might simply:</target>
        </trans-unit>
        <trans-unit id="52799d35176455f8706d99232f96e666a9d333a5" translate="yes" xml:space="preserve">
          <source>There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt;&lt;code&gt;babel-polyfill&lt;/code&gt;&lt;/a&gt; we might simply:</source>
          <target state="translated">폴리 필을로드하는 방법에는 여러 가지가 있습니다. 예를 들어 &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt; &lt;code&gt;babel-polyfill&lt;/code&gt; &lt;/a&gt; 을 포함시키기 위해 간단히 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31a20b97d55d79fa507d3c1d198dfe57d066102f" translate="yes" xml:space="preserve">
          <source>Therefore you should only use them as a last resort. Using them will reduce the portability of your loader.</source>
          <target state="translated">따라서 마지막 수단으로 만 사용해야합니다. 그것들을 사용하면 로더의 이식성이 감소합니다.</target>
        </trans-unit>
        <trans-unit id="d94ad9229ad8612f68566c5b1de57d970fdc31a1" translate="yes" xml:space="preserve">
          <source>These allow you to configure the webpack &lt;a href=&quot;../configuration/resolve&quot;&gt;resolver&lt;/a&gt; with aliases and extensions.</source>
          <target state="translated">이를 통해 별명 및 확장자로 웹팩 &lt;a href=&quot;../configuration/resolve&quot;&gt;분석기&lt;/a&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2566a954a0d02deae7eb0cd9561460980b0c8c7b" translate="yes" xml:space="preserve">
          <source>These are the defaults:</source>
          <target state="translated">이것이 기본값입니다 :</target>
        </trans-unit>
        <trans-unit id="5c0bd375a87af39a4fcc4d939a8d4bc34eb2793b" translate="yes" xml:space="preserve">
          <source>These are the remaining configuration options supported by webpack.</source>
          <target state="translated">이들은 웹팩에서 지원하는 나머지 구성 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="febcff69af775a3bfcf0e1a7bf703ea42925d2f8" translate="yes" xml:space="preserve">
          <source>These conditions might also be set additionally:</source>
          <target state="translated">These conditions might also be set additionally:</target>
        </trans-unit>
        <trans-unit id="ccf6d61b4ad3823e787101eb37a3b1386c459707" translate="yes" xml:space="preserve">
          <source>These options allow webpack to display various &lt;a href=&quot;../configuration/stats&quot;&gt;stats&lt;/a&gt; and style them differently in the console output.</source>
          <target state="translated">이 옵션을 사용하면 웹팩에서 다양한 &lt;a href=&quot;../configuration/stats&quot;&gt;통계&lt;/a&gt; 를 표시 하고 콘솔 출력에서 ​​다르게 스타일을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e0869eb46e5f04ea6e2b1f165c826b5b338ead2" translate="yes" xml:space="preserve">
          <source>These options allow you to bind &lt;a href=&quot;../configuration/module&quot;&gt;modules&lt;/a&gt; as allowed by webpack</source>
          <target state="translated">이 옵션을 사용하면 웹팩에서 허용하는대로 &lt;a href=&quot;../configuration/module&quot;&gt;모듈&lt;/a&gt; 을 바인딩 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d8bf2146c955380560f55188ae1ce7347c666b6e" translate="yes" xml:space="preserve">
          <source>These options allow you to manipulate optimisations for a production build using webpack</source>
          <target state="translated">이 옵션을 사용하면 웹팩을 사용하여 프로덕션 빌드에 대한 최적화를 조작 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="1007a4ad40966f93fd98a21ab15571601e8096f3" translate="yes" xml:space="preserve">
          <source>These options allows you to control how webpack notifies you of assets and entry points that exceed a specific file limit. This feature was inspired by the idea of &lt;a href=&quot;https://github.com/webpack/webpack/issues/3216&quot;&gt;webpack Performance Budgets&lt;/a&gt;.</source>
          <target state="translated">이 옵션을 사용하면 특정 파일 제한을 초과하는 자산 및 진입 점을 웹팩에 알리는 방법을 제어 할 수 있습니다. 이 기능은 &lt;a href=&quot;https://github.com/webpack/webpack/issues/3216&quot;&gt;webpack 성능 예산&lt;/a&gt; 이라는 아이디어에서 영감을 얻었습니다 .</target>
        </trans-unit>
        <trans-unit id="79407cc7a6ab20b192d9e99545132870bb628e82" translate="yes" xml:space="preserve">
          <source>These options are experimental and may be deprecated. As mentioned above, they are typically not necessary and including a &lt;code&gt;new webpack.HotModuleReplacementPlugin()&lt;/code&gt; is enough.</source>
          <target state="translated">이 옵션은 실험용이므로 더 이상 사용되지 않을 수 있습니다. 위에서 언급했듯이, 그것들은 일반적으로 필요하지 않으며 &lt;code&gt;new webpack.HotModuleReplacementPlugin()&lt;/code&gt; 포함합니다 . HotModuleReplacementPlugin () 이면 충분합니다.</target>
        </trans-unit>
        <trans-unit id="0103698eace700deceff10513d7687368a419e01" translate="yes" xml:space="preserve">
          <source>These options are typically used in production:</source>
          <target state="translated">이러한 옵션은 일반적으로 프로덕션에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a79b628e2c2b80d262daaaf5e89a2b05a2721975" translate="yes" xml:space="preserve">
          <source>These options assign the return value of the entry point (e.g. whatever the entry point exported) to a specific object under the name defined by &lt;code&gt;output.library&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;output.library&lt;/code&gt; 에 의해 정의 된 이름으로 특정 객체에 진입 점의 반환 값 (예 : 내 보낸 진입 점)을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="dc064ac635490f42b16b5f65e94f8546f034edec" translate="yes" xml:space="preserve">
          <source>These options assign the return value of the entry point (e.g. whatever the entry point exported) to the name provided by &lt;a href=&quot;#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; at whatever scope the bundle was included at.</source>
          <target state="translated">이 옵션 은 번들이 포함 된 범위에서 &lt;a href=&quot;#outputlibrary&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; 가 제공 한 이름에 진입 점의 반환 값 (예 : 내 보낸 진입 점에 관계없이)을 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="22b90ab37b5ba5275785aeca2a1aaf4ff18b86db" translate="yes" xml:space="preserve">
          <source>These options assign the return value of the entry point (e.g. whatever the entry point exported) to the name provided by &lt;code&gt;output.library&lt;/code&gt; at whatever scope the bundle was included at.</source>
          <target state="translated">이 옵션 은 번들이 포함 된 모든 범위에서 &lt;code&gt;output.library&lt;/code&gt; 가 제공 한 이름에 진입 점 (예 : 내 보낸 진입 점)의 반환 값을 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="a7d8234fcb48114f73a0a6667f67ab696c51cde7" translate="yes" xml:space="preserve">
          <source>These options change how modules are resolved. webpack provides reasonable defaults, but it is possible to change the resolving in detail. Have a look at &lt;a href=&quot;../concepts/module-resolution&quot;&gt;Module Resolution&lt;/a&gt; for more explanation of how the resolver works.</source>
          <target state="translated">이 옵션은 모듈 해결 방법을 변경합니다. webpack은 합리적인 기본값을 제공하지만 해결 방법을 자세히 변경할 수 있습니다. 한 번 봐 가지고 &lt;a href=&quot;../concepts/module-resolution&quot;&gt;모듈 분해능&lt;/a&gt; 리졸버의 작동 방식을 더 설명에 대한합니다.</target>
        </trans-unit>
        <trans-unit id="502f606f9f22867ba7b4202ff6f348f30f97e661" translate="yes" xml:space="preserve">
          <source>These options configure whether to polyfill or mock certain &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js globals&lt;/a&gt; and modules. This allows code originally written for the Node.js environment to run in other environments like the browser.</source>
          <target state="translated">이 옵션은 특정 &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js 전역&lt;/a&gt; 및 모듈 을 폴리 필할지 모의할지 구성합니다 . 이를 통해 원래 Node.js 환경 용으로 작성된 코드가 브라우저와 같은 다른 환경에서 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5748337f019e8736c4c08ddb1aaa946717932550" translate="yes" xml:space="preserve">
          <source>These options describe the default settings for the context created when a dynamic dependency is encountered.</source>
          <target state="translated">이 옵션은 동적 종속성이 발생할 때 작성된 컨텍스트의 기본 설정을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="fe61c54946c1acdaaac5a110beb75c2abe251578" translate="yes" xml:space="preserve">
          <source>These options determine how the &lt;a href=&quot;../concepts/modules&quot;&gt;different types of modules&lt;/a&gt; within a project will be treated.</source>
          <target state="translated">이 옵션 은 프로젝트 내의 &lt;a href=&quot;../concepts/modules&quot;&gt;다른 유형의 모듈을&lt;/a&gt; 처리 하는 방법을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="4f6511d8b476377c46f5d4c2dc3654f0c2d86dd1" translate="yes" xml:space="preserve">
          <source>These options makes the build &lt;a href=&quot;../configuration/watch&quot;&gt;watch&lt;/a&gt; for changes in files of the dependency graph and perform the build again.</source>
          <target state="translated">이 옵션을 사용하면 빌드 가 종속성 그래프 파일의 변경 사항을 &lt;a href=&quot;../configuration/watch&quot;&gt;감시&lt;/a&gt; 하고 빌드를 다시 수행합니다.</target>
        </trans-unit>
        <trans-unit id="d4e48f43abb204bb9d2e2dbddbf01ae454f6d1ec" translate="yes" xml:space="preserve">
          <source>These options will result in a bundle that comes with a complete header to ensure compatibility with various module systems. The &lt;code&gt;output.library&lt;/code&gt; option will take on a different meaning under the following &lt;code&gt;output.libraryTarget&lt;/code&gt; options.</source>
          <target state="translated">이러한 옵션은 다양한 모듈 시스템과의 호환성을 보장하기 위해 완전한 헤더와 함께 제공되는 번들을 생성합니다. &lt;code&gt;output.library&lt;/code&gt; 옵션은 다음에 따라 다른 의미에 걸립니다 &lt;code&gt;output.libraryTarget&lt;/code&gt; 의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="454c972b24168045e7370d16bc161582d1d9c81e" translate="yes" xml:space="preserve">
          <source>These options will result in a bundle that comes with a more complete header to ensure compatibility with various module systems. The &lt;code&gt;output.library&lt;/code&gt; option will take on a different meaning under the following &lt;code&gt;output.libraryTarget&lt;/code&gt; options.</source>
          <target state="translated">이러한 옵션은 다양한 모듈 시스템과의 호환성을 보장하기 위해보다 완벽한 헤더와 함께 번들을 제공합니다. &lt;code&gt;output.library&lt;/code&gt; 옵션은 다음에 따라 다른 의미에 걸립니다 &lt;code&gt;output.libraryTarget&lt;/code&gt; 의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="106c4e5dbb58168e46b7c5c9dadb7d240d1978c2" translate="yes" xml:space="preserve">
          <source>These pattern are based on the following list of goals/assumptions:</source>
          <target state="translated">These pattern are based on the following list of goals/assumptions:</target>
        </trans-unit>
        <trans-unit id="9132b5d3865d002e95b734e01e6504c0fcb71cd0" translate="yes" xml:space="preserve">
          <source>These pattern should be used as guide not as strict ruleset. They can be adapted to the individual packages.</source>
          <target state="translated">These pattern should be used as guide not as strict ruleset. They can be adapted to the individual packages.</target>
        </trans-unit>
        <trans-unit id="42263b58dfe9ecaa589cb4cac45029b77ee6aa8e" translate="yes" xml:space="preserve">
          <source>These patterns make sense for packages that do not use environment specific APIs.</source>
          <target state="translated">These patterns make sense for packages that do not use environment specific APIs.</target>
        </trans-unit>
        <trans-unit id="9f26efe3ba05c2068ab581177a9b790860ec5ce5" translate="yes" xml:space="preserve">
          <source>These patterns make sense when a package contains two versions, one for development and one for production. E. g. the development version could include additional code for better error message or additional warnings.</source>
          <target state="translated">These patterns make sense when a package contains two versions, one for development and one for production. E. g. the development version could include additional code for better error message or additional warnings.</target>
        </trans-unit>
        <trans-unit id="08cf024ae104b7e9e8a8a0d48311f520b3337630" translate="yes" xml:space="preserve">
          <source>These properties affect the loaders: &lt;a href=&quot;#rule-loader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-options-rule-query&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 특성은 로더에 영향을줍니다 ( &lt;a href=&quot;#rule-loader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#rule-options-rule-query&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;use&lt;/code&gt; )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bd4f2e0f0514e3e6f6ce0621c32a64266577737" translate="yes" xml:space="preserve">
          <source>These properties affect the loaders: &lt;a href=&quot;#ruleloader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">These properties affect the loaders: &lt;a href=&quot;#ruleloader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#ruleuse&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="057e3f7528fc7e3767f893e10ed751260d9bd0d5" translate="yes" xml:space="preserve">
          <source>These rules are evaluated only when the parent Rule condition matches. Each nested rule can contain its own conditions.</source>
          <target state="translated">These rules are evaluated only when the parent Rule condition matches. Each nested rule can contain its own conditions.</target>
        </trans-unit>
        <trans-unit id="f724bae2af621776d8e318cd6c0f8e5bb1bcca74" translate="yes" xml:space="preserve">
          <source>These rules are evaluated when the Rule condition matches.</source>
          <target state="translated">이러한 규칙은 규칙 조건이 일치 할 때 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="012c1550965907b42ec6d480f2bfaac07754c8c0" translate="yes" xml:space="preserve">
          <source>These steps would occur:</source>
          <target state="translated">이 단계는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57d372ece1047febfc2ceef2a98e5fe436082e4a" translate="yes" xml:space="preserve">
          <source>These two parameters can be used together to redirect requests in a more targeted way. The &lt;code&gt;newContentCreateContextMap&lt;/code&gt; allows you to map runtime requests to compile requests in the form of an object:</source>
          <target state="translated">이 두 매개 변수를 함께 사용하면보다 구체적인 방식으로 요청을 리디렉션 할 수 있습니다. &lt;code&gt;newContentCreateContextMap&lt;/code&gt; 는 당신이 객체의 형태로 컴파일 요청에 대한 런타임 요청을 매핑 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f2417bbde2d2cb573d2628acc3066e13e3600335" translate="yes" xml:space="preserve">
          <source>They also serve the purpose of doing &lt;strong&gt;anything else&lt;/strong&gt; that a &lt;a href=&quot;loaders&quot;&gt;loader&lt;/a&gt; cannot do.</source>
          <target state="translated">또한 수행의 목적으로 제공 &lt;strong&gt;아무것도&lt;/strong&gt; &amp;bull; 그래도 &lt;a href=&quot;loaders&quot;&gt;로더가&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d4c374abb62de5d26d0baf6648ec4bfbb523c24" translate="yes" xml:space="preserve">
          <source>They are not enabled by default because they expose a runtime overhead and increase in bundle size (JS source maps do not). In addition to that relative paths are buggy and you need to use an absolute public path which include the server URL.</source>
          <target state="translated">런타임 오버 헤드가 노출되고 번들 크기가 증가하므로 기본적으로 사용되지 않습니다 (JS 소스 맵은 그렇지 않음). 또한 상대 경로는 버그가 있으므로 서버 URL을 포함하는 절대 공용 경로를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3be8d3fafa2f11f4d807cab33b9addaeb88267eb" translate="yes" xml:space="preserve">
          <source>They must not point to files outside of the package.</source>
          <target state="translated">They must not point to files outside of the package.</target>
        </trans-unit>
        <trans-unit id="6967131bc5ac15c7eedbcd99737fb8d7b6bcbf81" translate="yes" xml:space="preserve">
          <source>Third party addons</source>
          <target state="translated">타사 애드온</target>
        </trans-unit>
        <trans-unit id="7049c64126a5ef56b2771dde6ee8579603f61c49" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;stats&lt;/code&gt; object exposes the following methods:</source>
          <target state="translated">이 &lt;code&gt;stats&lt;/code&gt; 객체는 다음과 같은 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c856cbc45e829c1fa37cb33d1001f29567b6f09e" translate="yes" xml:space="preserve">
          <source>This CANNOT be used in an async function.</source>
          <target state="translated">비동기 기능에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5ede9a9f06a97791ce57472a51006e343016b504" translate="yes" xml:space="preserve">
          <source>This CANNOT be used in an asynchronous function.</source>
          <target state="translated">비동기 기능에는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d6fcf631173dfe5541552e3cd115c778ac244bb4" translate="yes" xml:space="preserve">
          <source>This Webpack loader inlines SVG as module. If you use Adobe suite or Sketch to export SVGs, you will get auto-generated, unneeded crusts. This loader removes it for you, too.</source>
          <target state="translated">이 웹팩 로더는 SVG를 모듈로 인라인합니다. Adobe 제품군 또는 Sketch를 사용하여 SVG를 내 보내면 자동으로 생성되고 불필요한 크러스트가 생성됩니다. 이 로더도 당신을 위해 그것을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="8c495b2f5e535333feb3a4586360cff0743ba26a" translate="yes" xml:space="preserve">
          <source>This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</source>
          <target state="translated">This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</target>
        </trans-unit>
        <trans-unit id="9bbc872ea1fac7265c2fd82e9ad634bb871e11e4" translate="yes" xml:space="preserve">
          <source>This article will focus on the last of these three parts, the runtime and in particular the manifest.</source>
          <target state="translated">이 기사에서는 이러한 세 부분 중 마지막 부분 인 런타임과 특히 매니페스트에 중점을 둘 것입니다.</target>
        </trans-unit>
        <trans-unit id="2e37d12719405c39b28ec72e5b413bbc6c7508c4" translate="yes" xml:space="preserve">
          <source>This article will focus on the last of these three parts: the runtime and, in particular, the manifest.</source>
          <target state="translated">This article will focus on the last of these three parts: the runtime and, in particular, the manifest.</target>
        </trans-unit>
        <trans-unit id="a21549500935266e3533d6a74c4979f993c4dcf4" translate="yes" xml:space="preserve">
          <source>This becomes a problem when the module is executed in a CommonJS context where &lt;code&gt;this&lt;/code&gt; is equal to &lt;code&gt;module.exports&lt;/code&gt;. In this case you can override &lt;code&gt;this&lt;/code&gt; using the &lt;a href=&quot;../loaders/imports-loader&quot;&gt;&lt;code&gt;imports-loader&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">모듈은 CommonJS 콘텍스트에서 실행되는 경우에 문제가된다 &lt;code&gt;this&lt;/code&gt; 같은지 &lt;code&gt;module.exports&lt;/code&gt; . 이 경우 대체 할 수 있습니다 &lt;code&gt;this&lt;/code&gt; 사용하여 &lt;a href=&quot;../loaders/imports-loader&quot;&gt; &lt;code&gt;imports-loader&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="baec1fec2435cd7acf759f93d8b8be9e1c4855c5" translate="yes" xml:space="preserve">
          <source>This boolean is set to true when this is compiled by webpack.</source>
          <target state="translated">이 부울은 웹팩에 의해 컴파일 될 때 true로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f899d8d2c6f2c05b71df74eabdec78e2e7328f65" translate="yes" xml:space="preserve">
          <source>This boots the max number of workers in the pool and loads specified modules into the node.js module cache.</source>
          <target state="translated">그러면 풀의 최대 작업자 수가 부팅되고 지정된 모듈이 node.js 모듈 캐시에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="c0bc6ef24b6b80a9bf49aeb98312bc918d80974b" translate="yes" xml:space="preserve">
          <source>This bundle will not work as expected, or not work at all (in the case of the almond loader) if loaded directly with a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. It will only work through a RequireJS compatible asynchronous module loader through the actual path to that file, so in this case, the &lt;code&gt;output.path&lt;/code&gt; and &lt;code&gt;output.filename&lt;/code&gt; may become important for this particular setup if these are exposed directly on the server.</source>
          <target state="translated">이 번들은 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그로 직접로드 된 경우 예상대로 작동하지 않거나 아몬드 로더의 경우 전혀 작동하지 않습니다 . 해당 파일의 실제 경로를 통해 RequireJS 호환 비동기 모듈 로더를 통해서만 작동하므로이 경우 &lt;code&gt;output.path&lt;/code&gt; 및 &lt;code&gt;output.filename&lt;/code&gt; 이 서버에 직접 노출되는 경우이 특정 설정에 중요 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01881267fbb71bd4e8be6e5ecca674685a340399" translate="yes" xml:space="preserve">
          <source>This can be achieved by using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; to extract the CSS when running in production mode.</source>
          <target state="translated">This can be achieved by using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; to extract the CSS when running in production mode.</target>
        </trans-unit>
        <trans-unit id="3bbdfa3acc96c26d61ba3ce08b93f184f93f43db" translate="yes" xml:space="preserve">
          <source>This can be done using the &lt;code&gt;externals&lt;/code&gt; configuration:</source>
          <target state="translated">&lt;code&gt;externals&lt;/code&gt; 구성을 사용하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9580dc90d48db5f49636b2d7b71da6ad0884a869" translate="yes" xml:space="preserve">
          <source>This can be especially helpful when implementing some sort of data visualization using a tool like &lt;a href=&quot;https://github.com/d3&quot;&gt;d3&lt;/a&gt;. Instead of making an ajax request and parsing the data at runtime you can load it into your module during the build process so that the parsed data is ready to go as soon as the module hits the browser.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://github.com/d3&quot;&gt;d3&lt;/a&gt; 과 같은 도구를 사용하여 일종의 데이터 시각화를 구현할 때 특히 유용 합니다. 런타임에 Ajax 요청을 작성하고 데이터를 구문 분석하는 대신 모듈이 브라우저에 충돌하자마자 구문 분석 된 데이터가 준비 될 수 있도록 빌드 프로세스 중에 모듈에 데이터를로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e1bf4407126d15752d86781be25b8cf248f1d37" translate="yes" xml:space="preserve">
          <source>This can be fixed by using Node's &lt;code&gt;--preserve-symlinks&lt;/code&gt; flag which will allow you to develop cross-module, without experiencing inconsistencies when comparing against a normal, non-linked install:</source>
          <target state="translated">이는 노드의 &lt;code&gt;--preserve-symlinks&lt;/code&gt; 플래그를 사용하여 해결할 수 있습니다.이 플래그를 사용하면 일반 비 링크 설치와 비교할 때 불일치하지 않고 크로스 모듈을 개발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb1652868b3142e361ae8e70d6e1db4dfbc49f14" translate="yes" xml:space="preserve">
          <source>This can be useful for allowing different behaviour between builds.</source>
          <target state="translated">빌드간에 다른 동작을 허용하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44f088e20304c744db728f5661a86aa4d21f05b1" translate="yes" xml:space="preserve">
          <source>This can be useful if you want to require all files in a directory or matching a pattern, Example:</source>
          <target state="translated">이것은 디렉토리의 모든 파일을 요구하거나 패턴과 일치하려는 경우에 유용 할 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="8676024628a920433edffaa7ae6a6bad09d7f6a9" translate="yes" xml:space="preserve">
          <source>This can either be a &lt;code&gt;boolean&lt;/code&gt; value or the cache directory path(ex: &lt;code&gt;'./.eslint-loader-cache'&lt;/code&gt;).</source>
          <target state="translated">이 중 하나가 될 수 &lt;code&gt;boolean&lt;/code&gt; (: 예 값 또는 캐시 디렉터리 경로 &lt;code&gt;'./.eslint-loader-cache'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="00fe4f196235a0bd98a186c356729387256cb42f" translate="yes" xml:space="preserve">
          <source>This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work.</source>
          <target state="translated">This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work.</target>
        </trans-unit>
        <trans-unit id="90feb19f191bf3c2f898593139ee44562c490b72" translate="yes" xml:space="preserve">
          <source>This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work. You can pass own &lt;code&gt;importer&lt;/code&gt; to solve this (see &lt;a href=&quot;https://github.com/sass/node-sass#importer--v200---experimental&quot;&gt;&lt;code&gt;importer docs&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work. You can pass own &lt;code&gt;importer&lt;/code&gt; to solve this (see &lt;a href=&quot;https://github.com/sass/node-sass#importer--v200---experimental&quot;&gt; &lt;code&gt;importer docs&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="5aa95a44f7b56fa270e7540b0c4516d6afc23ae5" translate="yes" xml:space="preserve">
          <source>This concatenation behavior is called &amp;ldquo;scope hoisting.&amp;rdquo;</source>
          <target state="translated">이 연결 동작을 &quot;스코프 호이 스팅&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="a1b60edc5c47b09819f1b28410a8fcf699414214" translate="yes" xml:space="preserve">
          <source>This concept may be used to obtain implicit common vendor chunks:</source>
          <target state="translated">이 개념은 암시 적 공통 공급 업체 청크를 얻는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d59c040af16a3e1a5f7645e2762906f183f9fd1b" translate="yes" xml:space="preserve">
          <source>This condition should be used when looking for a javascript file that can be injected as script tag in a HTML page without additional preprocessing.</source>
          <target state="translated">This condition should be used when looking for a javascript file that can be injected as script tag in a HTML page without additional preprocessing.</target>
        </trans-unit>
        <trans-unit id="8b14c6199ca975479eddf0911297de4ba6c2b77a" translate="yes" xml:space="preserve">
          <source>This configuration can enlarge your initial bundles, it is recommended to use dynamic imports when a module is not immediately needed.</source>
          <target state="translated">이 구성은 초기 번들을 확대 할 수 있으므로 모듈이 즉시 필요하지 않은 경우 동적 가져 오기를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f8178aeab727f5b2ae39ef8a55f0f3db44980db5" translate="yes" xml:space="preserve">
          <source>This configuration object represents the default behavior of the &lt;code&gt;SplitChunksPlugin&lt;/code&gt;.</source>
          <target state="translated">이 구성 객체는 &lt;code&gt;SplitChunksPlugin&lt;/code&gt; 의 기본 동작을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b426c6694d3980dd6d187a7b69ccfdfdc20ed06a" translate="yes" xml:space="preserve">
          <source>This configuration would output a single &lt;code&gt;bundle.js&lt;/code&gt; file into the &lt;code&gt;dist&lt;/code&gt; directory.</source>
          <target state="translated">이 구성은 단일 &lt;code&gt;bundle.js&lt;/code&gt; 파일을 &lt;code&gt;dist&lt;/code&gt; 디렉토리에 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="fa12d5e0203ded4efe2f2beb27f665fe78f5300e" translate="yes" xml:space="preserve">
          <source>This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept specific use cases.</source>
          <target state="translated">이 문서는 제공하기위한 것입니다 &lt;strong&gt;높은 수준의&lt;/strong&gt; 상세한 개념 특정 사용 사례에 대한 링크를 제공하면서, 이러한 개념의 개요.</target>
        </trans-unit>
        <trans-unit id="6f90b031461d4914e663e4293c5ba433153cecd3" translate="yes" xml:space="preserve">
          <source>This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept-specific use cases.</source>
          <target state="translated">This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept-specific use cases.</target>
        </trans-unit>
        <trans-unit id="3b55640f7b32656e0d1d0d69041cf653588b5957" translate="yes" xml:space="preserve">
          <source>This doesn't result in any change to the CSS itself but exports multiple classnames.</source>
          <target state="translated">CSS 자체는 변경되지 않지만 여러 클래스 이름을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="599f08e0438def7468d189bca38955cb98998e6b" translate="yes" xml:space="preserve">
          <source>This enables local scoped CSS by default. (You can switch it off with &lt;code&gt;:global(...)&lt;/code&gt; or &lt;code&gt;:global&lt;/code&gt; for selectors and/or rules.).</source>
          <target state="translated">기본적으로 로컬 범위 CSS를 활성화합니다. 선택기 및 / 또는 규칙의 경우 &lt;code&gt;:global(...)&lt;/code&gt; 또는 &lt;code&gt;:global&lt;/code&gt; 을 사용 하여 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3bad9fc6c6d0140a761114db8b4526c2bdc7ed1a" translate="yes" xml:space="preserve">
          <source>This enables you to &lt;code&gt;import './style.css'&lt;/code&gt; into the file that depends on that styling. Now, when that module is run, a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag with the stringified css will be inserted into the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your html file.</source>
          <target state="translated">이를 통해 &lt;code&gt;import './style.css'&lt;/code&gt; 를 해당 스타일에 따라 파일로 가져올 수 있습니다 . 이제 해당 모듈이 실행되면 문자열로 된 CSS가 포함 된 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그가 html 파일 의 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 에 삽입 됩니다.</target>
        </trans-unit>
        <trans-unit id="bd65cf352aa69ab40ac2d0a4ed9c1dfdf6de6cea" translate="yes" xml:space="preserve">
          <source>This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add the different options about how the library can be exposed.</source>
          <target state="translated">그러면 라이브러리 번들을 가져올 때 &lt;code&gt;webpackNumbers&lt;/code&gt; 라는 전역 변수로 사용할 수 있습니다 . 라이브러리가 다른 환경과 호환되도록하려면 &lt;code&gt;libraryTarget&lt;/code&gt; 특성을 구성에 추가하십시오 . 라이브러리 노출 방법에 대한 다양한 옵션이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e4f8fee3199cc793be9ddd412547afaade1fd229" translate="yes" xml:space="preserve">
          <source>This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add various options about how the library can be exposed.</source>
          <target state="translated">This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add various options about how the library can be exposed.</target>
        </trans-unit>
        <trans-unit id="625c67813916e5c3bace943816ef36fc46242906" translate="yes" xml:space="preserve">
          <source>This exposes your library under all the module definitions, allowing it to work with CommonJS, AMD and as global variable. Take a look at the &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD Repository&lt;/a&gt; to learn more.</source>
          <target state="translated">이렇게하면 모든 모듈 정의 아래에 라이브러리가 노출되어 CommonJS, AMD 및 전역 변수와 함께 작동 할 수 있습니다. 자세한 내용 은 &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD 저장소&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0b052c558cba2236dd392c04e60b71c7d78db1ae" translate="yes" xml:space="preserve">
          <source>This expression will trigger the hook:</source>
          <target state="translated">This expression will trigger the hook:</target>
        </trans-unit>
        <trans-unit id="69ef084d40688e7b5d5d8996554e04e0ca6cfd1c" translate="yes" xml:space="preserve">
          <source>This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</source>
          <target state="translated">이 기능은 생산성에 좋습니다. &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; 설정을 업데이트하고 내장 된 HMR 플러그인을 사용하기 만하면됩니다. 또한 &lt;code&gt;index.js&lt;/code&gt; 모듈에 의해 사용될 &lt;code&gt;print.js&lt;/code&gt; 의 진입 점도 제거 할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c92b3bdf66deb3e19c2225ce04f1e41433492b7e" translate="yes" xml:space="preserve">
          <source>This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built-in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</source>
          <target state="translated">This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built-in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</target>
        </trans-unit>
        <trans-unit id="404dddeb1ceb60699ded778054d7f5ef9fc9fa12" translate="yes" xml:space="preserve">
          <source>This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt;&lt;code&gt;NodeStuffPlugin&lt;/code&gt;&lt;/a&gt; plugin.</source>
          <target state="translated">This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt; &lt;code&gt;NodeStuffPlugin&lt;/code&gt; &lt;/a&gt; plugin.</target>
        </trans-unit>
        <trans-unit id="79ad76420d55e87371fad64492f2963aea24c4eb" translate="yes" xml:space="preserve">
          <source>This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt;&lt;code&gt;NodeStuffPlugin&lt;/code&gt;&lt;/a&gt; plugin. If the target is &quot;web&quot; (default) or &quot;webworker&quot;, the &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/node/NodeSourcePlugin.js&quot;&gt;&lt;code&gt;NodeSourcePlugin&lt;/code&gt;&lt;/a&gt; plugin is also activated.</source>
          <target state="translated">이 기능은 웹팩의 내부 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt; &lt;code&gt;NodeStuffPlugin&lt;/code&gt; &lt;/a&gt; 플러그인에 의해 제공됩니다 . 대상이 &quot;web&quot;(기본값) 또는 &quot;webworker&quot;인 경우 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/node/NodeSourcePlugin.js&quot;&gt; &lt;code&gt;NodeSourcePlugin&lt;/code&gt; &lt;/a&gt; 플러그인도 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="b704dfb503dd69b6a849b0e22a57a5d32765f8b9" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">이 기능은 내부적 으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . 당신이 사용하는 경우 &lt;code&gt;import()&lt;/code&gt; 이전 버전의 브라우저로를 심은 기억 &lt;code&gt;Promise&lt;/code&gt; 같은 polyfill을 사용 &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;ES6-약속&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;약속-polyfill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a46c09f986aa73dc78c4b47b58c94cabba924769" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use &lt;code&gt;require.ensure&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">이 기능은 내부적 으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . 구형 브라우저에서 &lt;code&gt;require.ensure&lt;/code&gt; 를 사용하는 경우 &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt; 과 같은 polyfill을 사용하여 &lt;code&gt;Promise&lt;/code&gt; 를 shim 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1784fa4ee081d52871ddd8875156431960fca6ae" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use AMD with older browsers (e.g. Internet Explorer 11), remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">이 기능은 내부적 으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . 이전 브라우저 (예 : Internet Explorer 11)에서 AMD를 사용하는 경우 &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt; 과 같은 폴리 필을 사용하여 &lt;code&gt;Promise&lt;/code&gt; 를 shim 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2f10d727220baca2938b1a342e008a2d35949f1c" translate="yes" xml:space="preserve">
          <source>This follows the same rules as those specified for file resolution. But the &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt;&lt;code&gt;resolveLoader&lt;/code&gt;&lt;/a&gt; configuration option can be used to have separate resolution rules for loaders.</source>
          <target state="translated">이는 파일 확인에 지정된 규칙과 동일한 규칙을 따릅니다. 그러나 &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt; &lt;code&gt;resolveLoader&lt;/code&gt; &lt;/a&gt; 구성 옵션을 사용하여 로더에 대한 별도의 분석 규칙을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f32268d39ceea09d3d6306eb50cca10ac3efd123" translate="yes" xml:space="preserve">
          <source>This guide contains some useful tips for improving build/compilation performance.</source>
          <target state="translated">이 안내서에는 빌드 / 컴파일 성능을 향상시키는 데 유용한 팁이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e74ee278b6483e63e246262d4b0558794583866" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;asset-management&quot;&gt;&lt;code&gt;Asset Management&lt;/code&gt;&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;asset-management&quot;&gt; &lt;code&gt;Asset Management&lt;/code&gt; &lt;/a&gt; 안내서 에있는 코드 예제를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="5b251b76cf265164795401de844aec084670ed8b" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;development&quot;&gt;Development&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;development&quot;&gt;개발&lt;/a&gt; 안내서 에있는 코드 예제를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="e695885af13bd16faad41148a2a86747da0469ea" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;output-management&quot;&gt;출력 관리&lt;/a&gt; 안내서 에있는 코드 예제를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="8177ec7567235499917c71e39fc37b8bec828620" translate="yes" xml:space="preserve">
          <source>This guide extends the example provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. Please make sure you are at least familiar with the example provided there and the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; chapter.</source>
          <target state="translated">This guide extends the example provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. Please make sure you are at least familiar with the example provided there and the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; chapter.</target>
        </trans-unit>
        <trans-unit id="e586717908f30e2eb3dae17b0c51e6aa57c70149" translate="yes" xml:space="preserve">
          <source>This guide extends the examples provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt; and &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt;. Please make sure you are at least familiar with the examples provided in them.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;getting-started&quot;&gt;시작&lt;/a&gt; 및 &lt;a href=&quot;output-management&quot;&gt;출력 관리에&lt;/a&gt; 제공된 예제를 확장합니다 . 최소한 제공된 예제에 익숙해 지십시오.</target>
        </trans-unit>
        <trans-unit id="b10dfffc8f2cd75e2c9419cc6320a9b42af80acc" translate="yes" xml:space="preserve">
          <source>This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their content has changed.</source>
          <target state="translated">This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their content has changed.</target>
        </trans-unit>
        <trans-unit id="73feb60d4ff54e1bed9cecb930b3d4cb4688b9bd" translate="yes" xml:space="preserve">
          <source>This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their contents has changed.</source>
          <target state="translated">이 안내서는 웹팩 컴파일에 의해 생성 된 파일의 내용이 변경되지 않는 한 캐시 된 상태를 유지하는 데 필요한 구성에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="28ff626f461f33c15358e30a2a67dd11c6916c34" translate="yes" xml:space="preserve">
          <source>This guide goes through the various methods used to install webpack.</source>
          <target state="translated">이 안내서는 웹팩 설치에 사용되는 다양한 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="04ab105d2ba31796ba8058507be23bb87f5478d3" translate="yes" xml:space="preserve">
          <source>This guide is a small follow-up to &lt;a href=&quot;code-splitting&quot;&gt;Code Splitting&lt;/a&gt;. If you have not yet read through that guide, please do so now.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;code-splitting&quot;&gt;코드 분할에&lt;/a&gt; 대한 간단한 후속 조치 입니다. 이 안내서를 아직 읽지 않았다면 지금 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="9515b6e28f5a9f26a4966a59ee8efe94d078667b" translate="yes" xml:space="preserve">
          <source>This guide stems from the &lt;a href=&quot;getting-started&quot;&gt;&lt;em&gt;Getting Started&lt;/em&gt;&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;getting-started&quot;&gt;&lt;em&gt;시작&lt;/em&gt;&lt;/a&gt; 안내서 에서 발췌 한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="6a5c8a77e65080c1a87ac1b102bd2352b9720587" translate="yes" xml:space="preserve">
          <source>This hook allows you to do a one more additional pass of the build.</source>
          <target state="translated">This hook allows you to do a one more additional pass of the build.</target>
        </trans-unit>
        <trans-unit id="54dabb78d9165f59094c77b77fbfd1102990aee5" translate="yes" xml:space="preserve">
          <source>This hook can be used to add/modify the compilation parameters:</source>
          <target state="translated">This hook can be used to add/modify the compilation parameters:</target>
        </trans-unit>
        <trans-unit id="7db5a0744cb411b222f5ddf37115a92427f093c9" translate="yes" xml:space="preserve">
          <source>This indicates which chunks will be selected for optimization. If a string is provided, possible values are &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, and &lt;code&gt;initial&lt;/code&gt;. Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful because it means that chunks can be shared even between async and non-async chunks.</source>
          <target state="translated">최적화를 위해 어떤 청크가 선택 될지를 나타냅니다. 문자열이 제공되면 가능한 값은 &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;async&lt;/code&gt; 및 &lt;code&gt;initial&lt;/code&gt; 입니다. 청크와 비동기가 아닌 청크 간에도 청크를 공유 할 수 있으므로 &lt;code&gt;all&lt;/code&gt; 제공 하는 것이 특히 강력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f1794885ce10056eb9bb0faddc4d3cad727c4ef" translate="yes" xml:space="preserve">
          <source>This indicates which chunks will be selected for optimization. When a string is provided, valid values are &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, and &lt;code&gt;initial&lt;/code&gt;. Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful, because it means that chunks can be shared even between async and non-async chunks.</source>
          <target state="translated">This indicates which chunks will be selected for optimization. When a string is provided, valid values are &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;async&lt;/code&gt; , and &lt;code&gt;initial&lt;/code&gt; . Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful, because it means that chunks can be shared even between async and non-async chunks.</target>
        </trans-unit>
        <trans-unit id="8df877acd9008859a1bdb1efea3293a6acf64ffc" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;false&lt;/code&gt; if the module is currently executing, and &lt;code&gt;true&lt;/code&gt; if the sync execution has finished.</source>
          <target state="translated">이다 &lt;code&gt;false&lt;/code&gt; 모듈이 현재 실행되는 경우와 &lt;code&gt;true&lt;/code&gt; 동기 실행이 완료된 경우.</target>
        </trans-unit>
        <trans-unit id="ecb3ef0422ffd6e3c5b0a329b020146b6b6f51bb" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;true&lt;/code&gt; by default in &lt;code&gt;production&lt;/code&gt; mode.</source>
          <target state="translated">이다 &lt;code&gt;true&lt;/code&gt; 에 기본적으로 &lt;code&gt;production&lt;/code&gt; 모드.</target>
        </trans-unit>
        <trans-unit id="df1f3325933036ef23805a4ec9f47646d400ceed" translate="yes" xml:space="preserve">
          <source>This is a great choice when you are looking to quickly setup a webpack configuration for an application or tool with one entry point (i.e., a library). However, there is not much flexibility in extending or scaling your configuration with this syntax.</source>
          <target state="translated">하나의 진입 점 (예 : 라이브러리)으로 응용 프로그램 또는 도구에 대한 웹팩 구성을 신속하게 설정하려는 경우이 옵션을 선택하십시오. 그러나이 구문을 사용하여 구성을 확장하거나 확장 할 때 유연성이 그리 크지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c87ce6ad59d4ba0a8d22cf3002d88ef702a80d86" translate="yes" xml:space="preserve">
          <source>This is a list of plugins which are used by webpack internally.</source>
          <target state="translated">웹팩에서 내부적으로 사용되는 플러그인 목록입니다.</target>
        </trans-unit>
        <trans-unit id="cc7419b23a9e92d52227ca5c5b7cee9ef1527623" translate="yes" xml:space="preserve">
          <source>This is an example for a package that has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version</source>
          <target state="translated">This is an example for a package that has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version</target>
        </trans-unit>
        <trans-unit id="5bd6e99edd725757c93ffeb71735a604163063ec" translate="yes" xml:space="preserve">
          <source>This is an example for a package that supports Node.js, browser and electron, has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version.</source>
          <target state="translated">This is an example for a package that supports Node.js, browser and electron, has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version.</target>
        </trans-unit>
        <trans-unit id="8886144b094f0f97dada64e907fc12e5eda8ec9e" translate="yes" xml:space="preserve">
          <source>This is an important option when using on-demand-loading or loading external resources like images, files, etc. If an incorrect value is specified you'll receive 404 errors while loading these resources.</source>
          <target state="translated">이 옵션은 주문형로드를 사용하거나 이미지, 파일 등과 같은 외부 리소스를로드 할 때 중요한 옵션입니다. 잘못된 값을 지정하면 이러한 리소스를로드하는 동안 404 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0757868f46be2aa16e1835586e0d7a20832c2a91" translate="yes" xml:space="preserve">
          <source>This is an object where each property is the name of a Node global or module and each value may be one of the following...</source>
          <target state="translated">이것은 각 속성이 Node 전역 또는 모듈의 이름이고 각 값이 다음 중 하나 일 수있는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="48cde90b57a464eb3fff794ce73eb3c3ac1fa916" translate="yes" xml:space="preserve">
          <source>This is because webpack includes certain boilerplate, specifically the runtime and manifest, in the entry chunk.</source>
          <target state="translated">이는 웹팩에 항목 청크에 특정 상용구, 특히 런타임 및 매니페스트가 포함되어 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="53b087237e060748cf7c076f6a909fb930480aaf" translate="yes" xml:space="preserve">
          <source>This is by far the easiest and most intuitive way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</source>
          <target state="translated">This is by far the easiest and most intuitive way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</target>
        </trans-unit>
        <trans-unit id="560b1952bb069ebc7dec6531e687fec09448474f" translate="yes" xml:space="preserve">
          <source>This is by far the easiest, and most intuitive, way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</source>
          <target state="translated">이것은 코드를 분할하는 가장 쉽고 직관적 인 방법입니다. 그러나 더 수동적이며 우리가 극복해야 할 함정이 있습니다. 메인 번들에서 다른 모듈을 분리하는 방법을 살펴 보겠습니다 :</target>
        </trans-unit>
        <trans-unit id="ca9966a9a13a33427ba2eee45f8d198dd3978467" translate="yes" xml:space="preserve">
          <source>This is discouraged in webpack 4. Instead, the &lt;a href=&quot;../configuration/optimization#optimizationsplitchunks&quot;&gt;&lt;code&gt;optimization.splitChunks&lt;/code&gt;&lt;/a&gt; option takes care of separating vendors and app modules and creating a separate file. &lt;strong&gt;Do not&lt;/strong&gt; create an entry for vendors or other stuff that is not the starting point of execution.</source>
          <target state="translated">This is discouraged in webpack 4. Instead, the &lt;a href=&quot;../configuration/optimization#optimizationsplitchunks&quot;&gt; &lt;code&gt;optimization.splitChunks&lt;/code&gt; &lt;/a&gt; option takes care of separating vendors and app modules and creating a separate file. &lt;strong&gt;Do not&lt;/strong&gt; create an entry for vendors or other stuff that is not the starting point of execution.</target>
        </trans-unit>
        <trans-unit id="e22332e1691cc2177c430d4688ce63cb96fe89c0" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following &lt;code&gt;DefinePlugin&lt;/code&gt; application:</source>
          <target state="translated">이것은 다음 &lt;code&gt;DefinePlugin&lt;/code&gt; 응용 프로그램 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="19b0d712c36cad578318f77cf36dd5f57263a1e8" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Less variables depend on the environment:</source>
          <target state="translated">This is especially useful when some of your Less variables depend on the environment:</target>
        </trans-unit>
        <trans-unit id="d4b2fe2586ad8a0f46131537b6cfc86b305d7d08" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Sass variables depend on the environment:</source>
          <target state="translated">This is especially useful when some of your Sass variables depend on the environment:</target>
        </trans-unit>
        <trans-unit id="3b0161a59d14f3b8c460f7f5aa031fcaab9998c8" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Stylus variables depend on the environment:</source>
          <target state="translated">This is especially useful when some of your Stylus variables depend on the environment:</target>
        </trans-unit>
        <trans-unit id="a247f4b44e6328f72d37accf666f7af5287fe2f2" translate="yes" xml:space="preserve">
          <source>This is happening because the button's &lt;code&gt;onclick&lt;/code&gt; event handler is still bound to the original &lt;code&gt;printMe&lt;/code&gt; function.</source>
          <target state="translated">버튼의 &lt;code&gt;onclick&lt;/code&gt; 이벤트 핸들러가 여전히 원래 &lt;code&gt;printMe&lt;/code&gt; 함수에 바인딩되어 있기 때문에 이런 일이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="cfbbab771cd3e0d8e7090c42bd261a535ae96610" translate="yes" xml:space="preserve">
          <source>This is just one example, but there are many others that can easily trip people up. Luckily, there are a lot of loaders out there (some of which are mentioned below) that will make hot module replacement much easier.</source>
          <target state="translated">이것은 하나의 예일 뿐이지 만 사람들을 쉽게 여행 할 수있는 다른 많은 것들이 있습니다. 운 좋게도, 핫 모듈을 훨씬 쉽게 교체 할 수있는 로더가 많이 있습니다 (일부는 아래에 언급 됨).</target>
        </trans-unit>
        <trans-unit id="bcb367cbad1664c6b3ecb131586bd7694252d3ae" translate="yes" xml:space="preserve">
          <source>This is often known as Micro-Frontends, but is not limited to that.</source>
          <target state="translated">This is often known as Micro-Frontends, but is not limited to that.</target>
        </trans-unit>
        <trans-unit id="ed595ad5f73af435979138b3d3627bf88533699b" translate="yes" xml:space="preserve">
          <source>This is only needed in rare cases for compatibility!</source>
          <target state="translated">호환성을 위해 드문 경우에만 필요합니다!</target>
        </trans-unit>
        <trans-unit id="8b0007fbd5e6cd4e550680e629295f8a99260ae0" translate="yes" xml:space="preserve">
          <source>This is the entry point your configuration, initialize it inside the constructor of your generator in order for the CLI to work:</source>
          <target state="translated">This is the entry point your configuration, initialize it inside the constructor of your generator in order for the CLI to work:</target>
        </trans-unit>
        <trans-unit id="5f23724bb8bbb634b7fc1909897bbd4c353c40fa" translate="yes" xml:space="preserve">
          <source>This is the lookup priority in increasing order</source>
          <target state="translated">이것은 오름차순으로 조회 우선 순위입니다.</target>
        </trans-unit>
        <trans-unit id="0a04aff2cecd73b8ca74cfcee6fa3f22d2d86581" translate="yes" xml:space="preserve">
          <source>This is useful for third-party modules that rely on global variables like &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;this&lt;/code&gt; being the &lt;code&gt;window&lt;/code&gt; object. The imports loader can add the necessary &lt;code&gt;require('whatever')&lt;/code&gt; calls, so those modules work with webpack.</source>
          <target state="translated">이것은 세계와 같은 변수에 의존하는 타사 모듈에 유용 &lt;code&gt;$&lt;/code&gt; 또는 &lt;code&gt;this&lt;/code&gt; 되는 &lt;code&gt;window&lt;/code&gt; 객체입니다. 가져 오기 로더는 필요한 &lt;code&gt;require('whatever')&lt;/code&gt; 호출을 추가 할 수 있으므로 해당 모듈은 웹팩에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5c2df09178c8def03e43ef498bdd896740082e04" translate="yes" xml:space="preserve">
          <source>This is what we aim to change. Once we reach the end of this module we should be able to stop the server, hit refresh and still see our application.</source>
          <target state="translated">이것이 우리의 목표입니다. 이 모듈의 끝에 도달하면 서버를 중지하고 새로 고침을 누르고 응용 프로그램을 계속 볼 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a59dc7c1a8af0ea046bb3f848c62fef2a133578c" translate="yes" xml:space="preserve">
          <source>This is why webpack exists. It's a tool that lets you bundle your JavaScript applications (supporting both ESM and CommonJS), and it can be extended to support many different assets such as images, fonts and stylesheets.</source>
          <target state="translated">This is why webpack exists. It's a tool that lets you bundle your JavaScript applications (supporting both ESM and CommonJS), and it can be extended to support many different assets such as images, fonts and stylesheets.</target>
        </trans-unit>
        <trans-unit id="4ea053504b20d1c076639a62986210dce7e9fa8e" translate="yes" xml:space="preserve">
          <source>This is your scaffold, you add the options that the CLI will transform into a webpack configuration here. You can have many different scaffolds named as you prefer, representing different configurations like &lt;code&gt;dev.config&lt;/code&gt; or &lt;code&gt;prod.config&lt;/code&gt;:</source>
          <target state="translated">This is your scaffold, you add the options that the CLI will transform into a webpack configuration here. You can have many different scaffolds named as you prefer, representing different configurations like &lt;code&gt;dev.config&lt;/code&gt; or &lt;code&gt;prod.config&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b668cc02a4cd081db5c06a436730503d648f4ee3" translate="yes" xml:space="preserve">
          <source>This isn't a problem for most tools, but Node.js is again an exception here. For Node.js we always use the CommonJs version and expose named exports in the ESM with a ESM wrapper.</source>
          <target state="translated">This isn't a problem for most tools, but Node.js is again an exception here. For Node.js we always use the CommonJs version and expose named exports in the ESM with a ESM wrapper.</target>
        </trans-unit>
        <trans-unit id="b45f7eb5f9affbddb392058c7d7f4abfaa7fad00" translate="yes" xml:space="preserve">
          <source>This leaves any dependent modules unchanged, i.e. the code shown below will still work:</source>
          <target state="translated">이렇게하면 종속 모듈이 변경되지 않습니다. 즉, 아래 표시된 코드는 여전히 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a70c73df8117e18869be65bde0f3fe97bb191d83" translate="yes" xml:space="preserve">
          <source>This leaves any dependent modules unchanged, i.e. the code shown below:</source>
          <target state="translated">This leaves any dependent modules unchanged, i.e. the code shown below:</target>
        </trans-unit>
        <trans-unit id="46a3f41a9605c3c4e04a060a9596421064960a0d" translate="yes" xml:space="preserve">
          <source>This loader [cannot be used] with [CSS Modules] out of the box due to the way &lt;code&gt;css-loader&lt;/code&gt; processes file imports. To make them work properly, either add the css-loader&amp;rsquo;s [&lt;code&gt;importLoaders&lt;/code&gt;] option.</source>
          <target state="translated">&lt;code&gt;css-loader&lt;/code&gt; 가 파일 가져 오기를 처리 하는 방식으로 인해이 로더 는 즉시 [CSS 모듈]과 함께 사용할 수 없습니다 . 제대로 작동하게하려면 css-loader의 [ &lt;code&gt;importLoaders&lt;/code&gt; ] 옵션을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d190b8c7f6d0f3902b044fdeec81f5b5fe3f35d" translate="yes" xml:space="preserve">
          <source>This loader allows use of &lt;a href=&quot;https://github.com/substack/node-browserify/wiki/list-of-transforms&quot;&gt;browserify transforms&lt;/a&gt; via a webpack loader.</source>
          <target state="translated">이 로더를 사용 하면 웹팩 로더를 통해 browserify &lt;a href=&quot;https://github.com/substack/node-browserify/wiki/list-of-transforms&quot;&gt;변환&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe9d535f7bc40b833c73bb475459fe6f55acdbac" translate="yes" xml:space="preserve">
          <source>This loader also supports the following loader-specific option:</source>
          <target state="translated">이 로더는 다음 로더 특정 옵션도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7f1d3b58142cc368ab79e7a3d3404472a3fa8c0c" translate="yes" xml:space="preserve">
          <source>This loader is especially useful when using 3rd-party libraries having their own source maps. If not extracted and processed into the source map of the webpack bundle, browsers may misinterpret source map data. &lt;code&gt;source-map-loader&lt;/code&gt; allows webpack to maintain source map data continuity across libraries so ease of debugging is preserved.</source>
          <target state="translated">이 로더는 자체 소스 맵이있는 타사 라이브러리를 사용할 때 특히 유용합니다. 웹팩 번들의 소스 맵으로 추출되어 처리되지 않으면 브라우저가 소스 맵 데이터를 잘못 해석 할 수 있습니다. &lt;code&gt;source-map-loader&lt;/code&gt; 를 사용하면 웹팩이 라이브러리에서 소스 맵 데이터 연속성을 유지하므로 디버깅이 쉬워집니다.</target>
        </trans-unit>
        <trans-unit id="d7a42ee1ed1780a3d402296f3b86d6e6d37090a0" translate="yes" xml:space="preserve">
          <source>This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt;, which is fine because nginx takes care of making it available on your host PC.</source>
          <target state="translated">This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt; , which is fine because nginx takes care of making it available on your host PC.</target>
        </trans-unit>
        <trans-unit id="c13ed36167d63c496c0f6f91ea0830c119623ac7" translate="yes" xml:space="preserve">
          <source>This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt;, which is fine, because nginx takes care of making it available on your host PC.</source>
          <target state="translated">이것은 nginx가 호스트 PC 에서 서버를 사용할 수 있도록 관리하기 때문에 &lt;code&gt;127.0.0.1&lt;/code&gt; 에서만 서버에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8fc2cdf752fdcd706973b9e47dcc84ed0a7d59a" translate="yes" xml:space="preserve">
          <source>This may change in the future when the module system (i. e. webpack) supports loader matching by origin.</source>
          <target state="translated">This may change in the future when the module system (i. e. webpack) supports loader matching by origin.</target>
        </trans-unit>
        <trans-unit id="f6d2ee006876cf0259837350ed2e7e14e3c6e566" translate="yes" xml:space="preserve">
          <source>This may change in the future, when the module system (i. e. webpack) supports loader matching by origin.</source>
          <target state="translated">모듈 시스템 (예 : 웹팩)이 원점에 따라 로더 일치를 지원할 때 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa062b6d5cead179ec54169c8e5af773c2ed6f12" translate="yes" xml:space="preserve">
          <source>This may degrade build performance.</source>
          <target state="translated">빌드 성능이 저하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c215681acf404e7577ad3619555fa95e88e52edf" translate="yes" xml:space="preserve">
          <source>This means dynamic requires are supported but will cause all matching modules to be included in the bundle.</source>
          <target state="translated">This means dynamic requires are supported but will cause all matching modules to be included in the bundle.</target>
        </trans-unit>
        <trans-unit id="d33959ca5bc487e790d0b48b89538a6812c28404" translate="yes" xml:space="preserve">
          <source>This means dynamic requires are supported but will cause all possible modules to be included in the bundle.</source>
          <target state="translated">이는 동적 요구가 지원되지만 가능한 모든 모듈이 번들에 포함되도록합니다.</target>
        </trans-unit>
        <trans-unit id="d283638a7cf787c4d96d0cb34244baab95292b27" translate="yes" xml:space="preserve">
          <source>This means that when we &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; this will really resolve to the file in the &lt;code&gt;browser&lt;/code&gt; property. The &lt;code&gt;browser&lt;/code&gt; property takes precedence here because it's the first item in &lt;code&gt;mainFields&lt;/code&gt;. Meanwhile, a Node.js application bundled by webpack will resolve by default to the file in the &lt;code&gt;module&lt;/code&gt; field.</source>
          <target state="translated">즉 &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; 때 &lt;code&gt;browser&lt;/code&gt; 속성 의 파일로 실제로 해석됩니다 . &lt;code&gt;browser&lt;/code&gt; 가의 첫 번째 항목이기 때문에 속성은 여기에 우선합니다 &lt;code&gt;mainFields&lt;/code&gt; . 한편, 웹팩에 번들로 제공되는 Node.js 애플리케이션은 기본적으로 &lt;code&gt;module&lt;/code&gt; 필드 의 파일로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="a5409a29ade1ec4c17b7eaa00e7d86e1af4d2f79" translate="yes" xml:space="preserve">
          <source>This means that your library expects a dependency named &lt;code&gt;lodash&lt;/code&gt; to be available in the consumer's environment.</source>
          <target state="translated">이는 라이브러리가 &lt;code&gt;lodash&lt;/code&gt; 라는 종속성 이 소비자 환경에서 사용 가능할 것으로 예상 함을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="b223fb461d993b0f22bdb24ced3b1fa69b9e092f" translate="yes" xml:space="preserve">
          <source>This method works but can have limitations or drawbacks.</source>
          <target state="translated">This method works but can have limitations or drawbacks.</target>
        </trans-unit>
        <trans-unit id="f777fcccade65135ca746231b68bbfa503391afc" translate="yes" xml:space="preserve">
          <source>This might result in a large chunk containing all external packages. It is recommended to only include your core frameworks and utilities and dynamically load the rest of the dependencies.</source>
          <target state="translated">이로 인해 모든 외부 패키지가 포함 된 큰 덩어리가 생길 수 있습니다. 핵심 프레임 워크와 유틸리티 만 포함하고 나머지 종속성을 동적으로로드하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d526e1e403decb2661013c42f1e3e331b6d3a771" translate="yes" xml:space="preserve">
          <source>This module adds stuff from Node.js that is not available in non Node.js environments.</source>
          <target state="translated">이 모듈은 Node.js가 아닌 환경에서는 사용할 수없는 Node.js의 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6ab0268836547089f2dcf783f9be200724a579dd" translate="yes" xml:space="preserve">
          <source>This module can support non-standard JavaScript file formats when a compatible compiler is registered via the &lt;code&gt;require&lt;/code&gt; option. If the option is defined, &lt;code&gt;config-loader&lt;/code&gt; will attempt to require the specified module(s) before the target config is found and loaded.</source>
          <target state="translated">이 모듈은 호환 옵션 이 &lt;code&gt;require&lt;/code&gt; 옵션을 통해 등록 될 때 비표준 JavaScript 파일 형식을 지원할 수 있습니다 . 옵션이 정의되면 &lt;code&gt;config-loader&lt;/code&gt; 는 대상 구성을 찾아서로드하기 전에 지정된 모듈을 요구합니다.</target>
        </trans-unit>
        <trans-unit id="f45c003c14dd79dda08fe5ed461cf012badc0fdf" translate="yes" xml:space="preserve">
          <source>This module is exposed as &lt;code&gt;webpack.Compiler&lt;/code&gt; and can be used directly. See &lt;a href=&quot;https://github.com/pksjce/webpack-internal-examples/tree/master/compiler-example&quot;&gt;this example&lt;/a&gt; for more information.</source>
          <target state="translated">이 모듈은 &lt;code&gt;webpack.Compiler&lt;/code&gt; 로 제공되며 직접 사용할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://github.com/pksjce/webpack-internal-examples/tree/master/compiler-example&quot;&gt;이 예&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6cba27f11c42ca7da5420b0f4d9f2641d3844e73" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and Webpack v4.0.0.</source>
          <target state="translated">이 모듈에는 최소 노드 v6.9.0 및 Webpack v4.0.0이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b3a35d9e538001d0d628d180d914a08e8f5c0837" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and webpack v4.0.0.</source>
          <target state="translated">이 모듈에는 최소 노드 v6.9.0 및 웹팩 v4.0.0이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f881a340456fac03baeb3dd035c116286f43e93a" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and works with Webpack v3 and Webpack v4.</source>
          <target state="translated">이 모듈에는 최소 노드 v6.9.0이 필요하며 Webpack v3 및 Webpack v4에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c109cc9d524df5e8821464e562a600dcd9557732" translate="yes" xml:space="preserve">
          <source>This module supports extending webpack configuration files with &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring#extending-configuration-files&quot;&gt;ESLint-style&lt;/a&gt;&lt;code&gt;extends&lt;/code&gt; functionality. This feature allows users to create a &quot;base&quot; config and in essence, &quot;inherit&quot; from that base config in a separate config. A bare-bones example:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring#extending-configuration-files&quot;&gt;ESLint 스타일 &lt;/a&gt; &lt;code&gt;extends&lt;/code&gt; 기능 으로 웹팩 구성 파일 확장을 지원 합니다. 이 기능을 통해 사용자는 &quot;기본&quot;구성을 만들 수 있으며 본질적으로 별도의 구성으로 해당 기본 구성에서 &quot;상속&quot;할 수 있습니다. 베어 본 예제 :</target>
        </trans-unit>
        <trans-unit id="0dba5974c2e26fd236ce4621f1e4d99eac196b30" translate="yes" xml:space="preserve">
          <source>This module utilizes &lt;a href=&quot;https://github.com/davidtheclark/cosmiconfig&quot;&gt;&lt;code&gt;cosmiconfig&lt;/code&gt;&lt;/a&gt; which supports declaring a webpack configuration in a number of different file formats including; &lt;code&gt;.webpackrc&lt;/code&gt;, &lt;code&gt;webpack.config.js&lt;/code&gt;, and a &lt;code&gt;webpack&lt;/code&gt; property in a &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://github.com/davidtheclark/cosmiconfig&quot;&gt; &lt;code&gt;cosmiconfig&lt;/code&gt; &lt;/a&gt; 를 사용 하여 다음과 같은 다양한 파일 형식으로 웹팩 구성 선언을 지원합니다. &lt;code&gt;.webpackrc&lt;/code&gt; 는 , &lt;code&gt;webpack.config.js&lt;/code&gt; 및 &lt;code&gt;webpack&lt;/code&gt; A의 특성 &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="005b9fb11eab47f37d7ae0f0642a6320e8d309df" translate="yes" xml:space="preserve">
          <source>This needs to be changed if multiple webpack runtimes (from different compilation) are used on the same webpage.</source>
          <target state="translated">동일한 웹 페이지에서 여러 웹팩 런타임 (다른 컴파일의)을 사용하는 경우이를 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="c74a7f7edee3d3ffa14340a6baee7f2198b5a2fb" translate="yes" xml:space="preserve">
          <source>This object has the same format as a regular webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;configuration&lt;/a&gt;. Declare the properties that you want to scaffold here, e.g. &lt;code&gt;entry&lt;/code&gt;, &lt;code&gt;output&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt;. You can initialize this inside a yeoman method:</source>
          <target state="translated">This object has the same format as a regular webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;configuration&lt;/a&gt;. Declare the properties that you want to scaffold here, e.g. &lt;code&gt;entry&lt;/code&gt; , &lt;code&gt;output&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; . You can initialize this inside a yeoman method:</target>
        </trans-unit>
        <trans-unit id="fade0e5971b52e5136488a11c9a7a0a582ad3d8b" translate="yes" xml:space="preserve">
          <source>This object is passed straight to Node.js HTTPS module, so see the &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS documentation&lt;/a&gt; for more information.</source>
          <target state="translated">이 객체는 Node.js HTTPS 모듈로 바로 전달되므로 자세한 내용은 &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="685cd065e94f550102a632c29e095a4cbc23cdf9" translate="yes" xml:space="preserve">
          <source>This only works when using &lt;a href=&quot;#devservercontentbase&quot;&gt;&lt;code&gt;devServer.contentBase&lt;/code&gt;&lt;/a&gt; as a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">This only works when using &lt;a href=&quot;#devservercontentbase&quot;&gt; &lt;code&gt;devServer.contentBase&lt;/code&gt; &lt;/a&gt; as a &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4aaf96997e7b0c90746fd6c3567a4f7aa2c8ac4" translate="yes" xml:space="preserve">
          <source>This only works when using &lt;code&gt;contentBase&lt;/code&gt; as a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;contentBase&lt;/code&gt; 를 &lt;code&gt;string&lt;/code&gt; 로 사용할 때만 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="ec5d2041cc832230955cf30ad539432dc4dd1fba" translate="yes" xml:space="preserve">
          <source>This option allows loading asynchronous chunks with a custom link type, such as &amp;lt;link type=&quot;text/css&quot; ...&amp;gt;.</source>
          <target state="translated">This option allows loading asynchronous chunks with a custom link type, such as &amp;lt;link type=&quot;text/css&quot; ...&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="196e634a22e9d51b4ed72f6eb5f594f4af592b70" translate="yes" xml:space="preserve">
          <source>This option allows loading asynchronous chunks with a custom script type, such as &lt;code&gt;&amp;lt;script type=&quot;module&quot; ...&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">This option allows loading asynchronous chunks with a custom script type, such as &lt;code&gt;&amp;lt;script type=&quot;module&quot; ...&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f67294efb05edc94de65dd07b8ff77f19fd6be87" translate="yes" xml:space="preserve">
          <source>This option allows us either to choose the current &lt;code&gt;devServer&lt;/code&gt; transport mode for client/server individually or to provide custom client/server implementation. This allows to specify how browser or other client communicates with the &lt;code&gt;devServer&lt;/code&gt;.</source>
          <target state="translated">This option allows us either to choose the current &lt;code&gt;devServer&lt;/code&gt; transport mode for client/server individually or to provide custom client/server implementation. This allows to specify how browser or other client communicates with the &lt;code&gt;devServer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79925c99f93c2ec0087ae0ffced8f00ba5d1c9ed" translate="yes" xml:space="preserve">
          <source>This option allows you to set the key your module looks for to a truthy value. As it happens, the AMD support in webpack ignores the defined name anyways.</source>
          <target state="translated">이 옵션을 사용하면 모듈이 찾는 키를 정확한 값으로 설정할 수 있습니다. 웹팩의 AMD 지원은 정의 된 이름을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a6afd747886b88535614a5e26c65d541e9551535" translate="yes" xml:space="preserve">
          <source>This option allows you to whitelist services that are allowed to access the dev server.</source>
          <target state="translated">이 옵션을 사용하면 개발자 서버에 액세스 할 수있는 서비스를 허용 목록에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91fe393093d77872ac5f2cd6643dfc72c4819f36" translate="yes" xml:space="preserve">
          <source>This option broadcasts the server via &lt;a href=&quot;http://www.zeroconf.org/&quot;&gt;ZeroConf&lt;/a&gt; networking on start</source>
          <target state="translated">This option broadcasts the server via &lt;a href=&quot;http://www.zeroconf.org/&quot;&gt;ZeroConf&lt;/a&gt; networking on start</target>
        </trans-unit>
        <trans-unit id="81ebe300973eaab68c9516ed46654327e6a950da" translate="yes" xml:space="preserve">
          <source>This option broadcasts the server via ZeroConf networking on start</source>
          <target state="translated">이 옵션은 시작시 ZeroConf 네트워킹을 통해 서버를 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="4922f9a5470048d8fffcf5c1830182dbd96b1c5a" translate="yes" xml:space="preserve">
          <source>This option can also be set globally in &lt;code&gt;splitChunks.filename&lt;/code&gt;, but this isn't recommended and will likely lead to an error if &lt;a href=&quot;#splitchunkschunks&quot;&gt;&lt;code&gt;splitChunks.chunks&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;'initial'&lt;/code&gt;. Avoid setting it globally.</source>
          <target state="translated">This option can also be set globally in &lt;code&gt;splitChunks.filename&lt;/code&gt; , but this isn't recommended and will likely lead to an error if &lt;a href=&quot;#splitchunkschunks&quot;&gt; &lt;code&gt;splitChunks.chunks&lt;/code&gt; &lt;/a&gt; is not set to &lt;code&gt;'initial'&lt;/code&gt; . Avoid setting it globally.</target>
        </trans-unit>
        <trans-unit id="ea6a426438d914faf36d6b6546285906e19b322a" translate="yes" xml:space="preserve">
          <source>This option can be used to apply loaders to the dependencies of a specific module or set of modules.</source>
          <target state="translated">이 옵션은 로더를 특정 모듈 또는 모듈 세트의 종속성에 적용하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c5b0689cf315f1fa55cc15e5495f2b28e91801e" translate="yes" xml:space="preserve">
          <source>This option closes the server when stdin ends.</source>
          <target state="translated">이 옵션은 stdin이 종료되면 서버를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="e40c156196854884ee36846872a829a5ea05f019" translate="yes" xml:space="preserve">
          <source>This option controls if and how source maps are generated.</source>
          <target state="translated">이 옵션은 소스 맵 생성 여부와 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="25a84ffd7582fe4058e843c749db628513a0ab92" translate="yes" xml:space="preserve">
          <source>This option determines the modules namespace used with the &lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;. It's used to prevent source file path collisions in source maps when loading multiple libraries built with webpack.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt; 과 함께 사용되는 모듈 네임 스페이스를 결정합니다 . 지정하지 않으면 기본값은 &lt;a href=&quot;#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; 입니다. 웹팩으로 빌드 된 여러 라이브러리를로드 할 때 소스 맵에서 소스 파일 경로 충돌을 방지하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b798351fdd70c6c1546c48e9fb9352acce8a0d9a" translate="yes" xml:space="preserve">
          <source>This option determines the modules namespace used with the &lt;a href=&quot;#outputdevtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;. It's used to prevent source file path collisions in sourcemaps when loading multiple libraries built with webpack.</source>
          <target state="translated">This option determines the modules namespace used with the &lt;a href=&quot;#outputdevtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#outputlibrary&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;. It's used to prevent source file path collisions in sourcemaps when loading multiple libraries built with webpack.</target>
        </trans-unit>
        <trans-unit id="e871c5ed20a0fe73dfb6f10eee67818e5bb0feee" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output CSS file</source>
          <target state="translated">This option determines the name of each output CSS file</target>
        </trans-unit>
        <trans-unit id="9253fc678dd3f1afddea078670e8fc30e7bbc955" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output CSS file.</source>
          <target state="translated">This option determines the name of each output CSS file.</target>
        </trans-unit>
        <trans-unit id="0b05266442b54b0e6cddc19a8b33de324b93c206" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#output-path&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이 옵션은 각 출력 번들의 이름을 결정합니다. 번들은 &lt;a href=&quot;#output-path&quot;&gt; &lt;code&gt;output.path&lt;/code&gt; &lt;/a&gt; 옵션으로 지정된 디렉토리에 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="60241ba64e943004863c8b69a47d6d28d8ba2161" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#outputpath&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#outputpath&quot;&gt; &lt;code&gt;output.path&lt;/code&gt; &lt;/a&gt; option.</target>
        </trans-unit>
        <trans-unit id="39ed67201ea950fac924dc321c8d6d5c052e39fd" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files</source>
          <target state="translated">This option determines the name of non-entry chunk files</target>
        </trans-unit>
        <trans-unit id="7abc716259255844aa6458bc599fc9537f73a262" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files.</source>
          <target state="translated">This option determines the name of non-entry chunk files.</target>
        </trans-unit>
        <trans-unit id="134a18d88afd40fa1eb2c26f1e4104950925ab2d" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files. See &lt;a href=&quot;#output-filename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; option for details on the possible values.</source>
          <target state="translated">이 옵션은 비 입력 청크 파일의 이름을 결정합니다. 가능한 값에 대한 자세한 내용 은 &lt;a href=&quot;#output-filename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="82c7b9bcf9864d6fe60a43dee4779cc300d255d6" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-initial chunk files. See &lt;a href=&quot;#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; option for details on the possible values.</source>
          <target state="translated">This option determines the name of non-initial chunk files. See &lt;a href=&quot;#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; option for details on the possible values.</target>
        </trans-unit>
        <trans-unit id="d4e4e471712f459632f09e0c39bf27d36a6dbdb0" translate="yes" xml:space="preserve">
          <source>This option does not have any effect when using the Node.js API.</source>
          <target state="translated">Node.js API를 사용할 때는이 옵션이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="824c7689eabb060c5f385b5bcd7c002c693b5204" translate="yes" xml:space="preserve">
          <source>This option does not have any effect when using the Node.js API. You need to pass the stats options to the &lt;code&gt;stats.toString()&lt;/code&gt; resp. &lt;code&gt;stats.toJson()&lt;/code&gt; calls instead.</source>
          <target state="translated">이 옵션은 Node.js API를 사용할 때 효과가 없습니다. stats 옵션을 &lt;code&gt;stats.toString()&lt;/code&gt; resp 에 전달해야 합니다. 대신 &lt;code&gt;stats.toJson()&lt;/code&gt; 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5458bee731a283c4d30a78fb34bb6abbb6b5e834" translate="yes" xml:space="preserve">
          <source>This option has no effect when used with &lt;code&gt;quiet&lt;/code&gt; or &lt;code&gt;noInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quiet&lt;/code&gt; 또는 &lt;code&gt;noInfo&lt;/code&gt; 와 함께 사용하면이 옵션이 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7889b2624541bc39b33a2e993ca202b95b6a36e3" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;a href=&quot;#devserverbefore&quot;&gt;&lt;code&gt;devServer.before&lt;/code&gt;&lt;/a&gt; and will be removed in v3.0.0.</source>
          <target state="translated">This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;a href=&quot;#devserverbefore&quot;&gt; &lt;code&gt;devServer.before&lt;/code&gt; &lt;/a&gt; and will be removed in v3.0.0.</target>
        </trans-unit>
        <trans-unit id="5bfcabd6c992e600f41a1aa251ee7329a7ba5fb6" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;code&gt;Rule.use&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;Rule.use&lt;/code&gt; 대신 &lt;strong&gt;사용되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0b2615cafe4c11a02e3c6b641329caeb2b73812b" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;code&gt;before&lt;/code&gt; and will be removed in v3.0.0.</source>
          <target state="translated">이 옵션은 &lt;strong&gt;사용되지&lt;/strong&gt; 찬성 &lt;code&gt;before&lt;/code&gt; 및 v3.0.0에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="eeeee94e8478cf5a5c7d08179d6f3b8a21bf53e1" translate="yes" xml:space="preserve">
          <source>This option is only activated (via &lt;code&gt;NodeSourcePlugin&lt;/code&gt;) when the target is unspecified, &quot;web&quot; or &quot;webworker&quot;.</source>
          <target state="translated">이 옵션은 대상이 지정되지 않은 경우 ( &quot;web&quot;또는 &quot;webworker&quot;인 경우 에만 &lt;code&gt;NodeSourcePlugin&lt;/code&gt; 을 통해 ) 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="a526b9466ed989feda820cb55f9f69f26039a4f1" translate="yes" xml:space="preserve">
          <source>This option is only used when &lt;a href=&quot;devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; uses a SourceMap option which writes an output file.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 이 출력 파일을 쓰는 SourceMap 옵션을 사용하는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9d105f5fd42ba76d220e6270bcb29980c2aad7c5" translate="yes" xml:space="preserve">
          <source>This option is only used when &lt;a href=&quot;devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; uses an options which requires module names.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 이 모듈 이름이 필요한 옵션을 사용하는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="de31799adc89f7a4cd6058f2c07e2539b194dca6" translate="yes" xml:space="preserve">
          <source>This option is useful when you want to have fine-grained control over how the CommonsChunk algorithm determines where modules should be moved to.</source>
          <target state="translated">이 옵션은 CommonsChunk 알고리즘이 모듈을 이동할 위치를 결정하는 방법을 세밀하게 제어하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fc94bd5f6db752fb7c18f0955317532502daaadf" translate="yes" xml:space="preserve">
          <source>This option lets the browser open with your local IP.</source>
          <target state="translated">이 옵션을 사용하면 브라우저가 로컬 IP로 열립니다.</target>
        </trans-unit>
        <trans-unit id="28aab3ea772c4e463a58a18eed36c7b2231756dc" translate="yes" xml:space="preserve">
          <source>This option lets you precisely control what bundle information gets displayed. This can be a nice middle ground if you want some bundle information, but not all of it.</source>
          <target state="translated">이 옵션을 사용하면 표시 할 번들 정보를 정확하게 제어 할 수 있습니다. 번들 정보를 원한다면 모두 좋은 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7109dd2cd4f2ad4d9088875a13900004670acc13" translate="yes" xml:space="preserve">
          <source>This option lets you reduce the compilations in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;. By default in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt;, it's possible to only compile when a certain file is requested.</source>
          <target state="translated">This option lets you reduce the compilations in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;. By default in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt; , it's possible to only compile when a certain file is requested.</target>
        </trans-unit>
        <trans-unit id="7179b6103bce281929f60e10386c1b58232fbfd9" translate="yes" xml:space="preserve">
          <source>This option lets you reduce the compilations in &lt;strong&gt;lazy mode&lt;/strong&gt;. By default in &lt;strong&gt;lazy mode&lt;/strong&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt;, it's possible to only compile when a certain file is requested.</source>
          <target state="translated">이 옵션을 사용하면 &lt;strong&gt;지연 모드&lt;/strong&gt; 에서 컴파일을 줄일 수 있습니다 . &lt;strong&gt;지연 모드&lt;/strong&gt; 에서는 기본적으로 모든 요청에 ​​새로운 컴파일이 수행됩니다. &lt;code&gt;filename&lt;/code&gt; 을 사용하면 특정 파일이 요청 된 경우에만 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="792f455240a68f9b61e21b9e79e2fc861945d378" translate="yes" xml:space="preserve">
          <source>This option specifies the &lt;strong&gt;public URL&lt;/strong&gt; of the output directory when referenced in a browser. A relative URL is resolved relative to the HTML page (or &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag). Server-relative URLs, protocol-relative URLs or absolute URLs are also possible and sometimes required, i. e. when hosting assets on a CDN.</source>
          <target state="translated">이 옵션 은 브라우저에서 참조 될 때 출력 디렉토리 의 &lt;strong&gt;공용 URL&lt;/strong&gt; 을 지정 합니다. 상대 URL은 HTML 페이지 (또는 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 태그)를 기준으로 확인됩니다. 서버 기준 URL, 프로토콜 기준 URL 또는 절대 URL도 가능하며 때로는 CDN에서 자산을 호스팅 할 때 필요합니다.</target>
        </trans-unit>
        <trans-unit id="60acf0ba0bbca59f35e19be67e124a4e268482f8" translate="yes" xml:space="preserve">
          <source>This option will enable &lt;a href=&quot;http://eslint.org/docs/user-guide/command-line-interface#fix&quot;&gt;ESLint autofix feature&lt;/a&gt;.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;http://eslint.org/docs/user-guide/command-line-interface#fix&quot;&gt;ESLint 자동 수정 기능&lt;/a&gt; 을 활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="e44d33ad69dc261c348171441ef0d4d67723a9af" translate="yes" xml:space="preserve">
          <source>This option will enable caching of the linting results into a file. This is particularly useful in reducing linting time when doing a full build.</source>
          <target state="translated">이 옵션은 린트 결과를 파일로 캐싱 할 수 있습니다. 이것은 전체 빌드를 수행 할 때 보푸라기 시간을 줄이는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b43f40ea06f007473435e0404327c4b4d96e7f5c" translate="yes" xml:space="preserve">
          <source>This package allows transpiling JavaScript files using &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack&lt;/a&gt;.</source>
          <target state="translated">이 패키지는 &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack을&lt;/a&gt; 사용하여 JavaScript 파일을 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="033391a02a8eaac3735870ff0be89d4ab0d9252c" translate="yes" xml:space="preserve">
          <source>This packages your output with an immediately-executed AMD &lt;code&gt;require(dependencies, factory)&lt;/code&gt; wrapper.</source>
          <target state="translated">이것은 즉시 실행되는 AMD &lt;code&gt;require(dependencies, factory)&lt;/code&gt; 래퍼로 출력을 패키징합니다 .</target>
        </trans-unit>
        <trans-unit id="e114be6f0d2032ec10de78d94815095479360859" translate="yes" xml:space="preserve">
          <source>This page describes the options that affect the behavior of webpack-dev-server (short: dev-server).</source>
          <target state="translated">이 페이지는 webpack-dev-server의 동작에 영향을주는 옵션에 대해 설명합니다 (약식 : dev-server).</target>
        </trans-unit>
        <trans-unit id="a824680e81d3e233a63095d5ac7ebc89dee47393" translate="yes" xml:space="preserve">
          <source>This plugin adds specific references to containers as externals and allows to import remote modules from these containers. It also calls the &lt;code&gt;override&lt;/code&gt; API of these containers to provide overrides to them. Local overrides (via &lt;code&gt;__webpack_override__&lt;/code&gt; or &lt;code&gt;override&lt;/code&gt; API when build is also a container) and specified overrides are provided to all referenced containers.</source>
          <target state="translated">This plugin adds specific references to containers as externals and allows to import remote modules from these containers. It also calls the &lt;code&gt;override&lt;/code&gt; API of these containers to provide overrides to them. Local overrides (via &lt;code&gt;__webpack_override__&lt;/code&gt; or &lt;code&gt;override&lt;/code&gt; API when build is also a container) and specified overrides are provided to all referenced containers.</target>
        </trans-unit>
        <trans-unit id="f8fbd038fa70bb58f9637ee789bafc084098c6e1" translate="yes" xml:space="preserve">
          <source>This plugin and it's options can also be invoked via the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;:</source>
          <target state="translated">This plugin and it's options can also be invoked via the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="eee9d72cff11504900ba3d87265458efdd7aab58" translate="yes" xml:space="preserve">
          <source>This plugin and it's options can also be invoked via the CLI:</source>
          <target state="translated">이 플러그인과 옵션은 CLI를 통해 호출 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d6ec8e843f819d7e74de36d5d13f0736352ecb7" translate="yes" xml:space="preserve">
          <source>This plugin can be used in two different modes, &lt;em&gt;scoped&lt;/em&gt; and &lt;em&gt;mapped&lt;/em&gt;.</source>
          <target state="translated">이 플러그인은 &lt;em&gt;scoped&lt;/em&gt; 및 &lt;em&gt;map의&lt;/em&gt; 두 가지 모드로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a797b2fc195f28c7da8671fb5c79b902eebe34d" translate="yes" xml:space="preserve">
          <source>This plugin combines &lt;code&gt;ContainerPlugin&lt;/code&gt; and &lt;code&gt;ContainerReferencePlugin&lt;/code&gt;. Overrides and overridables are combined into a single list of specified shared modules.</source>
          <target state="translated">This plugin combines &lt;code&gt;ContainerPlugin&lt;/code&gt; and &lt;code&gt;ContainerReferencePlugin&lt;/code&gt; . Overrides and overridables are combined into a single list of specified shared modules.</target>
        </trans-unit>
        <trans-unit id="7140c8d286fb2760850dbfe926da824f55b8f42d" translate="yes" xml:space="preserve">
          <source>This plugin creates an additional container entry with the specified exposed modules. It also uses the &lt;code&gt;OverridablesPlugin&lt;/code&gt; internally and exposes the &lt;code&gt;override&lt;/code&gt; API to consumer of the container.</source>
          <target state="translated">This plugin creates an additional container entry with the specified exposed modules. It also uses the &lt;code&gt;OverridablesPlugin&lt;/code&gt; internally and exposes the &lt;code&gt;override&lt;/code&gt; API to consumer of the container.</target>
        </trans-unit>
        <trans-unit id="fda8ea39c72e0e691ebbc3795728b5fc978d18df" translate="yes" xml:space="preserve">
          <source>This plugin creates bundles with translations baked in. So you can serve the translated bundle to your clients.</source>
          <target state="translated">이 플러그인은 번역이 포함 된 번들을 작성하므로 번역 된 번들을 클라이언트에 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46f3843161330f7496c2a700471ef010db97a960" translate="yes" xml:space="preserve">
          <source>This plugin enables more fine grained control of source map generation. It is also enabled automatically by certain settings of the &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">이 플러그인을 사용하면 소스 맵 생성을보다 세밀하게 제어 할 수 있습니다. 또한 &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 구성 옵션 의 특정 설정에 의해 자동으로 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="308436c86675d805a1b54d3185c57d08f2121250" translate="yes" xml:space="preserve">
          <source>This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</source>
          <target state="translated">이 플러그인은 CSS를 별도의 파일로 추출합니다. CSS를 포함하는 JS 파일 당 CSS 파일을 작성합니다. CSS 및 SourceMap의 주문형 로딩을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="52604672e0fee1f1648352992bdf12b764549a3c" translate="yes" xml:space="preserve">
          <source>This plugin is used in a separate webpack config exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;dll-plugin#dllreferenceplugin&quot;&gt;&lt;code&gt;DllReferencePlugin&lt;/code&gt;&lt;/a&gt; to map dependencies.</source>
          <target state="translated">이 플러그인은 별도의 webpack 설정에서 독점적으로 dll 전용 번들을 만드는 데 사용됩니다. &lt;a href=&quot;dll-plugin#dllreferenceplugin&quot;&gt; &lt;code&gt;DllReferencePlugin&lt;/code&gt; &lt;/a&gt; 이 종속성을 맵핑하는 데 사용 하는 &lt;code&gt;manifest.json&lt;/code&gt; 파일을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="81adc70be0ff9e1f95105beec6a31427593ebda0" translate="yes" xml:space="preserve">
          <source>This plugin is used in a separate webpack configuration exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;#dllreferenceplugin&quot;&gt;&lt;code&gt;DllReferencePlugin&lt;/code&gt;&lt;/a&gt; to map dependencies.</source>
          <target state="translated">This plugin is used in a separate webpack configuration exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;#dllreferenceplugin&quot;&gt; &lt;code&gt;DllReferencePlugin&lt;/code&gt; &lt;/a&gt; to map dependencies.</target>
        </trans-unit>
        <trans-unit id="95ab448688001829beed83209692c645fd511719" translate="yes" xml:space="preserve">
          <source>This plugin is used in the primary webpack config, it references the dll-only-bundle(s) to require pre-built dependencies.</source>
          <target state="translated">이 플러그인은 기본 웹팩 구성에서 사용되며 사전 빌드 된 종속성을 요구하기 위해 dll 전용 번들을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="2a588056406d111134a66418e199500eed93ea9b" translate="yes" xml:space="preserve">
          <source>This plugin makes specific modules &quot;overridable&quot;. A local API (&lt;code&gt;__webpack_override__&lt;/code&gt;) allows to provide overrides.</source>
          <target state="translated">This plugin makes specific modules &quot;overridable&quot;. A local API ( &lt;code&gt;__webpack_override__&lt;/code&gt; ) allows to provide overrides.</target>
        </trans-unit>
        <trans-unit id="8f11ee21edd3718f762dd02cff0cac34b96334ca" translate="yes" xml:space="preserve">
          <source>This plugin should be used only on &lt;code&gt;production&lt;/code&gt; builds without &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain, especially if you want to have HMR in &lt;code&gt;development&lt;/code&gt;.</source>
          <target state="translated">이 플러그인은 로더 체인에 &lt;code&gt;style-loader&lt;/code&gt; 가 없는 &lt;code&gt;production&lt;/code&gt; 빌드 , 특히 HMR을 &lt;code&gt;development&lt;/code&gt; 하려는 경우에만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="678af3938c3be10d5d0d4625ea9d01b638693180" translate="yes" xml:space="preserve">
          <source>This plugin should not be used with &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain.</source>
          <target state="translated">This plugin should not be used with &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain.</target>
        </trans-unit>
        <trans-unit id="f5cca03718053fc9520367846f9709b01dcb7529" translate="yes" xml:space="preserve">
          <source>This plugin supports the following options:</source>
          <target state="translated">이 플러그인은 다음 옵션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="feee9da7ca86409cd9c2790742caad4fc594057c" translate="yes" xml:space="preserve">
          <source>This plugin supports the use of Google's Closure Tools with webpack.</source>
          <target state="translated">이 플러그인은 웹팩에서 Google의 폐쇄 도구 사용을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9d78bb9481a5f3f627cce3d98de1d0a37c73f18f" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://cssnano.co/&quot;&gt;cssnano&lt;/a&gt; to optimize and minify your CSS.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://cssnano.co/&quot;&gt;cssnano&lt;/a&gt; to optimize and minify your CSS.</target>
        </trans-unit>
        <trans-unit id="03210a1e739a155ac82e779ddeef11361c965db2" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify()&lt;/a&gt; to minify your JSON.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify()&lt;/a&gt; to minify your JSON.</target>
        </trans-unit>
        <trans-unit id="b06506995ff20545e054b285bfd17c9d57869022" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</source>
          <target state="translated">이 플러그인은 &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;terser&lt;/a&gt; 를 사용 하여 JavaScript를 축소합니다.</target>
        </trans-unit>
        <trans-unit id="c537f96d0b90551bdb8c425afb315d141ed85e22" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;imagemin&lt;/a&gt; to optimize your images.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;imagemin&lt;/a&gt; to optimize your images.</target>
        </trans-unit>
        <trans-unit id="2ccca80fad8f11ea1ca02f91ea558e659f64b4f4" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;UglifyJS v3 &lt;/a&gt;&lt;a href=&quot;https://npmjs.com/package/uglify-es&quot;&gt;(&lt;code&gt;uglify-es&lt;/code&gt;)&lt;/a&gt; to minify your JavaScript</source>
          <target state="translated">이 플러그인은 &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;UglifyJS v3 &lt;/a&gt;&lt;a href=&quot;https://npmjs.com/package/uglify-es&quot;&gt;( &lt;code&gt;uglify-es&lt;/code&gt; )&lt;/a&gt; 를 사용하여 JavaScript를 축소 합니다</target>
        </trans-unit>
        <trans-unit id="7a92893dc06658363c932ed4b067127319ce2731" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/terser-js/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://github.com/terser-js/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</target>
        </trans-unit>
        <trans-unit id="7d1f3177c67193f6bb115a3f0c3321ffe0b2f66b" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/terser/html-minifier-terser&quot;&gt;html-minifier-terser&lt;/a&gt; to optimize and minify your HTML.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://github.com/terser/html-minifier-terser&quot;&gt;html-minifier-terser&lt;/a&gt; to optimize and minify your HTML.</target>
        </trans-unit>
        <trans-unit id="a87a75bf8d2601bfb557a819c4f455325b79b898" translate="yes" xml:space="preserve">
          <source>This plugin will be removed in the future as it only exists for migration.</source>
          <target state="translated">이 플러그인은 마이그레이션 용으로 만 존재하므로 향후에 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="417ca5f69549104dc84916c24cec679ccbbff0a8" translate="yes" xml:space="preserve">
          <source>This plugin will cause hashes to be based on the relative path of the module, generating a four character string as the module id. Suggested for use in production.</source>
          <target state="translated">이 플러그인은 해시가 모듈의 상대 경로를 기반으로하여 모듈 ID로 4 개의 문자열을 생성합니다. 생산에 사용하도록 제안합니다.</target>
        </trans-unit>
        <trans-unit id="69190150b569dd2720829fe25dc4429844f6fdb0" translate="yes" xml:space="preserve">
          <source>This plugin will enable the same concatenation behavior in webpack.</source>
          <target state="translated">이 플러그인은 웹팩에서 동일한 연결 동작을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="79648c5f02c1648bcbbf1396b0968514a67250e6" translate="yes" xml:space="preserve">
          <source>This plugin will enable the same concatenation behavior in webpack. By default this plugin is already enabled in &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;production &lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; and disabled otherwise. If you need to override the production &lt;code&gt;mode&lt;/code&gt; optimization, set the &lt;a href=&quot;../configuration/optimization#optimizationconcatenatemodules&quot;&gt;&lt;code&gt;optimization.concatenateModules&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;. To enable concatenation behavior in other modes, you can add &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; manually or use the &lt;code&gt;optimization.concatenateModules&lt;/code&gt; option:</source>
          <target state="translated">This plugin will enable the same concatenation behavior in webpack. By default this plugin is already enabled in &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;production &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt; and disabled otherwise. If you need to override the production &lt;code&gt;mode&lt;/code&gt; optimization, set the &lt;a href=&quot;../configuration/optimization#optimizationconcatenatemodules&quot;&gt; &lt;code&gt;optimization.concatenateModules&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt; . To enable concatenation behavior in other modes, you can add &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; manually or use the &lt;code&gt;optimization.concatenateModules&lt;/code&gt; option:</target>
        </trans-unit>
        <trans-unit id="e20365f34269feb4c5eead0efe10e444b9130e1c" translate="yes" xml:space="preserve">
          <source>This project was inspired by, and is a heavily modified version of &lt;code&gt;sasslint-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">이 프로젝트는 영감을 받았으며 크게 수정 된 &lt;code&gt;sasslint-webpack-plugin&lt;/code&gt; 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="7bdb7bc7b7c2ba2cfe5e9ae00a3972492e0d233d" translate="yes" xml:space="preserve">
          <source>This project was inspired the following open source work:</source>
          <target state="translated">This project was inspired the following open source work:</target>
        </trans-unit>
        <trans-unit id="790283d62998f77b2077ace49fbf145534de7451" translate="yes" xml:space="preserve">
          <source>This property allows webpack to control what files are used to calculate performance hints. The default function is seen below:</source>
          <target state="translated">이 속성을 사용하면 웹팩에서 성능 힌트를 계산하는 데 사용되는 파일을 제어 할 수 있습니다. 기본 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a8a42a8482756c98603a8fd3196d37d5d11f455" translate="yes" xml:space="preserve">
          <source>This property allows webpack to control what files are used to calculate performance hints. The default function is:</source>
          <target state="translated">This property allows webpack to control what files are used to calculate performance hints. The default function is:</target>
        </trans-unit>
        <trans-unit id="7f1939ad5234336835a3746ffcaab10be52bf776" translate="yes" xml:space="preserve">
          <source>This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/getting-started&quot;&gt;getting started&lt;/a&gt;.</source>
          <target state="translated">This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/getting-started&quot;&gt;getting started&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5ce7936b8dd1ab00c6a839051bb3b049b5d0046c" translate="yes" xml:space="preserve">
          <source>This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/installation&quot;&gt;installation&lt;/a&gt;.</source>
          <target state="translated">이 섹션에는 웹팩이 제공하는 다양한 도구 및 기능을 이해하고 마스터하기위한 안내서가 포함되어 있습니다. 첫 번째는 &lt;a href=&quot;guides/installation&quot;&gt;설치 과정을&lt;/a&gt; 안내하는 간단한 안내서입니다 .</target>
        </trans-unit>
        <trans-unit id="766149f8898bac17386a9e716229c762e8f543e5" translate="yes" xml:space="preserve">
          <source>This section covers all &lt;strong&gt;variables&lt;/strong&gt; available in code compiled with webpack. Modules will have access to certain data from the compilation process through &lt;code&gt;module&lt;/code&gt; and other variables.</source>
          <target state="translated">이 섹션은 웹팩으로 컴파일 된 코드에서 사용 가능한 모든 &lt;strong&gt;변수를&lt;/strong&gt; 다룹니다 . 모듈은 &lt;code&gt;module&lt;/code&gt; 및 기타 변수를 통해 컴파일 프로세스에서 특정 데이터에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a158e22d6effe6b38eb57854423c9c249557bde" translate="yes" xml:space="preserve">
          <source>This section covers all methods available in code compiled with webpack. When using webpack to bundle your application, you can pick from a variety of module syntax styles including &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ES6&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/CommonJS&quot;&gt;CommonJS&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Asynchronous_module_definition&quot;&gt;AMD&lt;/a&gt;.</source>
          <target state="translated">이 섹션은 웹팩으로 컴파일 된 코드에서 사용 가능한 모든 메소드를 다룹니다. 웹팩을 사용하여 애플리케이션을 번들링 할 때 &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ES6&lt;/a&gt; , &lt;a href=&quot;https://en.wikipedia.org/wiki/CommonJS&quot;&gt;CommonJS&lt;/a&gt; 및 &lt;a href=&quot;https://en.wikipedia.org/wiki/Asynchronous_module_definition&quot;&gt;AMD를&lt;/a&gt; 포함한 다양한 모듈 구문 스타일 중에서 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1dc3345120a2ce199a3597985ded51c910d2491c" translate="yes" xml:space="preserve">
          <source>This section describes webpack internals and can be useful for plugin developers</source>
          <target state="translated">This section describes webpack internals and can be useful for plugin developers</target>
        </trans-unit>
        <trans-unit id="86a104a27c2cf4c551b1216d744083e3310b40f0" translate="yes" xml:space="preserve">
          <source>This section will focus on adding an offline experience to our app. We'll achieve this using a Google project called &lt;a href=&quot;https://github.com/GoogleChrome/workbox&quot;&gt;Workbox&lt;/a&gt; which provides tools that help make offline support for web apps easier to setup.</source>
          <target state="translated">이 섹션에서는 앱에 오프라인 환경을 추가하는 데 중점을 둡니다. &lt;a href=&quot;https://github.com/GoogleChrome/workbox&quot;&gt;웹앱&lt;/a&gt; 에 대한 오프라인 지원을보다 쉽게 ​​설정할 수있는 도구를 제공하는 Workbox 라는 Google 프로젝트를 사용하여이를 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3efc36ab784fb7c924e3fdee5581efb69eaec3d5" translate="yes" xml:space="preserve">
          <source>This set of options allows you to better debug the application containing assets compiled with webpack</source>
          <target state="translated">이 옵션 세트를 사용하면 웹팩으로 컴파일 된 자산이 포함 된 응용 프로그램을보다 효과적으로 디버깅 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="98aa68cf05a9c0e5328953ace43257566681626c" translate="yes" xml:space="preserve">
          <source>This set of options allows you to manipulate certain &lt;a href=&quot;../configuration/output&quot;&gt;output&lt;/a&gt; parameters of your build.</source>
          <target state="translated">이 옵션 세트를 사용하면 빌드의 특정 &lt;a href=&quot;../configuration/output&quot;&gt;출력&lt;/a&gt; 매개 변수 를 조작 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e6daec4f6bdcb4007ef4577b7c389610dcd3bc0" translate="yes" xml:space="preserve">
          <source>This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages.</source>
          <target state="translated">This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages.</target>
        </trans-unit>
        <trans-unit id="1b7899ac54672adc98b8151b2866a403aa9d27ff" translate="yes" xml:space="preserve">
          <source>This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages. Default:</source>
          <target state="translated">이 옵션 세트는 위에 설정된 &lt;code&gt;resolve&lt;/code&gt; 속성 과 동일 하지만 webpack의 &lt;a href=&quot;../concepts/loaders&quot;&gt;로더&lt;/a&gt; 패키지 를 확인하는 데만 사용됩니다 . 기본:</target>
        </trans-unit>
        <trans-unit id="e8b7b6e71fdb01ac9c18b2d93058863c80b0f482" translate="yes" xml:space="preserve">
          <source>This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory in the project root:</source>
          <target state="translated">This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory in the project root:</target>
        </trans-unit>
        <trans-unit id="1f833ed9c75f47b94fbdc43cd56d37d70b51115f" translate="yes" xml:space="preserve">
          <source>This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory:</source>
          <target state="translated">이 옵션 세트는 &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server에&lt;/a&gt; 의해 선택 되며 다양한 방식으로 동작을 변경하는 데 사용될 수 있습니다. 다음은 &lt;code&gt;dist/&lt;/code&gt; 디렉토리 에서 모든 것을 압축하고 제공하는 간단한 예제입니다 :</target>
        </trans-unit>
        <trans-unit id="a8eecff3ab5954bf0b0246b89e983ae677f253d2" translate="yes" xml:space="preserve">
          <source>This setting is primarily used as a workaround for &lt;a href=&quot;https://github.com/webpack-contrib/style-loader/issues/163&quot;&gt;css clashes&lt;/a&gt; when using one or more &lt;a href=&quot;https://robertknight.github.io/posts/webpack-dll-plugins/&quot;&gt;DllPlugin&lt;/a&gt;'s. &lt;code&gt;base&lt;/code&gt; allows you to prevent either the &lt;em&gt;app&lt;/em&gt;'s css (or &lt;em&gt;DllPlugin2&lt;/em&gt;'s css) from overwriting &lt;em&gt;DllPlugin1&lt;/em&gt;'s css by specifying a css module id base which is greater than the range used by &lt;em&gt;DllPlugin1&lt;/em&gt; e.g.:</source>
          <target state="translated">이 설정은 주로 하나 이상의 &lt;a href=&quot;https://robertknight.github.io/posts/webpack-dll-plugins/&quot;&gt;DllPlugin을&lt;/a&gt; 사용할 때 &lt;a href=&quot;https://github.com/webpack-contrib/style-loader/issues/163&quot;&gt;CSS 충돌에&lt;/a&gt; 대한 해결 방법으로 사용됩니다 . &lt;code&gt;base&lt;/code&gt; 는 어느 것을 방지 할 수 있도록 &lt;em&gt;응용 프로그램&lt;/em&gt; 의 CSS (또는 &lt;em&gt;DllPlugin2&lt;/em&gt; 덮어의 CSS)를 &lt;em&gt;DllPlugin1&lt;/em&gt; 에서 사용하는 범위보다 큰 CSS 모듈 ID베이스 지정의 CSS를 &lt;em&gt;DllPlugin1&lt;/em&gt; 예를 :&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8fccd0349e08bbe9dad684332c1fd923a8ec939" translate="yes" xml:space="preserve">
          <source>This setup makes your code a lot more portable as everything that is closely coupled now lives together. Let's say you want to use &lt;code&gt;/my-component&lt;/code&gt; in another project, simply copy or move it into the &lt;code&gt;/components&lt;/code&gt; directory over there. As long as you've installed any &lt;em&gt;external dependencies&lt;/em&gt; and your &lt;em&gt;configuration has the same loaders&lt;/em&gt; defined, you should be good to go.</source>
          <target state="translated">이 설정은 밀접하게 결합 된 모든 것이 함께 존재하므로 코드를 훨씬 더 이식성있게 만듭니다. 다른 프로젝트에서 &lt;code&gt;/my-component&lt;/code&gt; 를 사용하고 싶은 경우 간단히 &lt;code&gt;/components&lt;/code&gt; 디렉토리 로 복사하거나 이동하십시오 . &lt;em&gt;외부 종속성을&lt;/em&gt; 설치 하고 &lt;em&gt;구성에 동일한 로더가&lt;/em&gt; 정의되어 있으면 계속 진행해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ea123abc7292c6bf233ab48356c85638b29b540" translate="yes" xml:space="preserve">
          <source>This simply prepends &lt;code&gt;var $ = require(&quot;jquery&quot;);&lt;/code&gt; to &lt;code&gt;example.js&lt;/code&gt;.</source>
          <target state="translated">이것은 단순히 앞에 추가합니다. &lt;code&gt;var $ = require(&quot;jquery&quot;);&lt;/code&gt; 에 &lt;code&gt;example.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e10024d095957cbce567008893996f42ae796af8" translate="yes" xml:space="preserve">
          <source>This small library is a core utility in webpack but can also be used elsewhere to provide a similar plugin interface. Many objects in webpack extend the &lt;code&gt;Tapable&lt;/code&gt; class. The class exposes &lt;code&gt;tap&lt;/code&gt;, &lt;code&gt;tapAsync&lt;/code&gt;, and &lt;code&gt;tapPromise&lt;/code&gt; methods which plugins can use to inject custom build steps that will be fired throughout a compilation.</source>
          <target state="translated">이 작은 라이브러리는 웹팩의 핵심 유틸리티이지만 유사한 플러그인 인터페이스를 제공하기 위해 다른 곳에서도 사용할 수 있습니다. 웹팩의 많은 객체는 &lt;code&gt;Tapable&lt;/code&gt; 클래스를 확장합니다 . 이 클래스는 &lt;code&gt;tap&lt;/code&gt; , &lt;code&gt;tapAsync&lt;/code&gt; 및 &lt;code&gt;tapPromise&lt;/code&gt; 메소드를 제공 합니다.이 메소드는 플러그인이 컴파일 과정 에서 시작될 사용자 정의 빌드 단계를 주입하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5ea9cb5352fb456a9a9457c25f28a4bfdc7c1d4" translate="yes" xml:space="preserve">
          <source>This syntax is used to describe all the possible ways that an external library can be available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt;).</source>
          <target state="translated">이 구문은 외부 라이브러리를 사용할 수있는 모든 가능한 방법을 설명하는 데 사용됩니다. &lt;code&gt;lodash&lt;/code&gt; 는 AMD 및 CommonJS 모듈 시스템에서 &lt;code&gt;lodash&lt;/code&gt; 로 사용할 수 있지만 전역 변수 형식 으로 &lt;code&gt;_&lt;/code&gt; 로 사용할 수 있습니다 . &lt;code&gt;subtract&lt;/code&gt; 여기하는 속성을 통해 볼 수 있습니다 &lt;code&gt;subtract&lt;/code&gt; 세계에서 &lt;code&gt;math&lt;/code&gt; 객체 (예 : &lt;code&gt;window['math']['subtract']&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="36e03fd539edd94f1786822559caa0e0ba678475" translate="yes" xml:space="preserve">
          <source>This syntax is used to describe all the possible ways that an external library can be made available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt;).</source>
          <target state="translated">This syntax is used to describe all the possible ways that an external library can be made available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="427ef31c4a006d01b5992ffbd53818e83fa34ef1" translate="yes" xml:space="preserve">
          <source>This tells &lt;code&gt;webpack-dev-server&lt;/code&gt; to serve the files from the &lt;code&gt;dist&lt;/code&gt; directory on &lt;code&gt;localhost:8080&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;webpack-dev-server&lt;/code&gt; 가 &lt;code&gt;localhost:8080&lt;/code&gt; 의 &lt;code&gt;dist&lt;/code&gt; 디렉토리에서 파일을 제공하도록 지시 합니다 .</target>
        </trans-unit>
        <trans-unit id="25afacdd59de37cfa49edcf6f68266b1dd1e952a" translate="yes" xml:space="preserve">
          <source>This translates to something like:</source>
          <target state="translated">This translates to something like:</target>
        </trans-unit>
        <trans-unit id="4cc861c1f2b80d6e02a543239491223597388780" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;jade-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">이것은 사용 &lt;code&gt;jade-loader&lt;/code&gt; 에 대한 &lt;code&gt;.jade&lt;/code&gt; 파일 및 &lt;a href=&quot;../loaders/style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../loaders/css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;code&gt;.css&lt;/code&gt; 파일을.</target>
        </trans-unit>
        <trans-unit id="f9e99c7cf1029abbb4fbb5d7e231d7ca99dccb10" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;pug-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">This uses the &lt;code&gt;pug-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; &lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</target>
        </trans-unit>
        <trans-unit id="7c17361464bcd8285937109314dec7f4ead3d25c" translate="yes" xml:space="preserve">
          <source>This variable is equal to default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</source>
          <target state="translated">이 변수는 &lt;code&gt;module.exports&lt;/code&gt; 의 기본값 (예 : 객체)과 같습니다. 경우 &lt;code&gt;module.exports&lt;/code&gt; 가 덮어 도착, &lt;code&gt;exports&lt;/code&gt; 더 이상 수출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f73885cf12c1cd2817d5d1be8d01158624c8f077" translate="yes" xml:space="preserve">
          <source>This variable is equal to the default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</source>
          <target state="translated">This variable is equal to the default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</target>
        </trans-unit>
        <trans-unit id="d39d49f3373eb27aa1cf74db3b29f828968cc1a8" translate="yes" xml:space="preserve">
          <source>This variable is only available with the &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; or the &lt;code&gt;ExtendedAPIPlugin&lt;/code&gt;. It provides access to the hash of the compilation.</source>
          <target state="translated">이 변수는 &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; 또는 &lt;code&gt;ExtendedAPIPlugin&lt;/code&gt; 에서만 사용할 수 있습니다 . 컴파일 해시에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c7b6d958a04307a8e984f741ba381d787423c0c9" translate="yes" xml:space="preserve">
          <source>This walkthrough stems from &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; and &lt;a href=&quot;development&quot;&gt;Development&lt;/a&gt;. Please ensure you are familiar with the concepts/setup introduced in those guides before continuing on.</source>
          <target state="translated">이 연습은 &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; and &lt;a href=&quot;development&quot;&gt;Development에서 시작&lt;/a&gt; 됩니다. 계속하기 전에 해당 안내서에 소개 된 개념 / 설정에 익숙해야합니다.</target>
        </trans-unit>
        <trans-unit id="9530095a465e229292ca12606b608bacc0045a8a" translate="yes" xml:space="preserve">
          <source>This way you could dynamically load an A/B test which provides a different version of a shared module.</source>
          <target state="translated">This way you could dynamically load an A/B test which provides a different version of a shared module.</target>
        </trans-unit>
        <trans-unit id="39b032e2d15b2635b3b2ab29289187ca5c1a282c" translate="yes" xml:space="preserve">
          <source>This will add a dependency to &lt;code&gt;extract-style-loader/getStyles!./file.js&lt;/code&gt; and treat the result as &lt;code&gt;file.js.css&lt;/code&gt;. Because &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; has a rule matching &lt;code&gt;/\.css$/&lt;/code&gt; and it will apply to this dependency.</source>
          <target state="translated">This will add a dependency to &lt;code&gt;extract-style-loader/getStyles!./file.js&lt;/code&gt; and treat the result as &lt;code&gt;file.js.css&lt;/code&gt; . Because &lt;a href=&quot;../configuration/module#modulerules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; &lt;/a&gt; has a rule matching &lt;code&gt;/\.css$/&lt;/code&gt; and it will apply to this dependency.</target>
        </trans-unit>
        <trans-unit id="a6ba31004997005b6c7977fd4e63f3ec4f27b1b2" translate="yes" xml:space="preserve">
          <source>This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt; and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt; and the filename will be &lt;code&gt;bundle.js&lt;/code&gt;</source>
          <target state="translated">그러면 소스 코드가 &lt;code&gt;index.js&lt;/code&gt; 로 입력되고 출력 번들 파일의 경로는 &lt;code&gt;dist&lt;/code&gt; 이며 파일 이름은 &lt;code&gt;bundle.js&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af43d0785eaf13b9ffe0c34aa1c2ebf9013d579c" translate="yes" xml:space="preserve">
          <source>This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt;, and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt;.</source>
          <target state="translated">This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt; , and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="974910be502dc0a84469dbdf2c5a0b42eda9befe" translate="yes" xml:space="preserve">
          <source>This will direct webpack to &lt;em&gt;enter&lt;/em&gt; through &lt;code&gt;./index.ts&lt;/code&gt;, &lt;em&gt;load&lt;/em&gt; all &lt;code&gt;.ts&lt;/code&gt; and &lt;code&gt;.tsx&lt;/code&gt; files through the &lt;code&gt;ts-loader&lt;/code&gt;, and &lt;em&gt;output&lt;/em&gt; a &lt;code&gt;bundle.js&lt;/code&gt; file in our current directory.</source>
          <target state="translated">이렇게하는 웹팩 지시합니다 &lt;em&gt;입력&lt;/em&gt; 을 통해 &lt;code&gt;./index.ts&lt;/code&gt; , &lt;em&gt;로드&lt;/em&gt; 모든 &lt;code&gt;.ts&lt;/code&gt; 및 &lt;code&gt;.tsx&lt;/code&gt; 관통 파일을 &lt;code&gt;ts-loader&lt;/code&gt; 및 &lt;em&gt;출력&lt;/em&gt; a는 &lt;code&gt;bundle.js&lt;/code&gt; 우리의 현재 디렉토리에 파일을.</target>
        </trans-unit>
        <trans-unit id="edf3fb18a3410f577281b1111c384f0b6a24b89d" translate="yes" xml:space="preserve">
          <source>This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f0b4fa31173e3380b49ecab8f7606a590fbbd56" translate="yes" xml:space="preserve">
          <source>This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to true.</source>
          <target state="translated">This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to true.</target>
        </trans-unit>
        <trans-unit id="a1718346a9979d283f39dc2471103c14f678ca38" translate="yes" xml:space="preserve">
          <source>This will enable HTML optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">This will enable HTML optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a33e18425357f58a8da5ab2270892ccffc68f88a" translate="yes" xml:space="preserve">
          <source>This will enable JSON optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">This will enable JSON optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3d380dbf9a3ab55f5a63a7e68fc7a2985963c17" translate="yes" xml:space="preserve">
          <source>This will expose your library as a &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md&quot;&gt;&lt;code&gt;System.register&lt;/code&gt;&lt;/a&gt; module. This feature was first released in &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.30.0&quot;&gt;webpack 4.30.0&lt;/a&gt;.</source>
          <target state="translated">그러면 라이브러리가 &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md&quot;&gt; &lt;code&gt;System.register&lt;/code&gt; &lt;/a&gt; 모듈 로 노출됩니다 . 이 기능은 &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.30.0&quot;&gt;webpack 4.30.0&lt;/a&gt; 에서 처음 출시되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ef23a5d560a808c67a55370c9f88ecfe3a952594" translate="yes" xml:space="preserve">
          <source>This will expose your library as an AMD module.</source>
          <target state="translated">그러면 라이브러리가 AMD 모듈로 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="55f886a1ec8370f98de9de4e1874a73184be8854" translate="yes" xml:space="preserve">
          <source>This will force webpack to exit its bundling process.</source>
          <target state="translated">그러면 웹팩이 번들링 프로세스를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="00541a540816f3e9bbd4c867606284cd75c32912" translate="yes" xml:space="preserve">
          <source>This will form the bundle with both the files as separate entry points.</source>
          <target state="translated">이렇게하면 두 파일이 모두 별도의 진입 점으로 번들이 형성됩니다.</target>
        </trans-unit>
        <trans-unit id="7f4446d56893c546a3bc2bc1c768154f63d09482" translate="yes" xml:space="preserve">
          <source>This will generate a file &lt;code&gt;dist/index.html&lt;/code&gt; containing the following:</source>
          <target state="translated">다음을 포함하는 &lt;code&gt;dist/index.html&lt;/code&gt; 파일이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="1bf9dfe78bc3e7d3031c19501d26d5fd36006676" translate="yes" xml:space="preserve">
          <source>This will generate an implied global which has the potential to reassign an existing value (use with caution):</source>
          <target state="translated">이렇게하면 기존 값을 재 할당 할 수있는 암시 적 전역이 생성됩니다 (주의해서 사용).</target>
        </trans-unit>
        <trans-unit id="3ce9d6bfe9df3261a2599afcc3f70fc1122e72f4" translate="yes" xml:space="preserve">
          <source>This will output the following result:</source>
          <target state="translated">그러면 다음과 같은 결과가 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="7160226d2ca3d86e071b9fa526002cfef710b369" translate="yes" xml:space="preserve">
          <source>This will result in &lt;code&gt;&amp;lt;link rel=&quot;prefetch&quot; href=&quot;login-modal-chunk.js&quot;&amp;gt;&lt;/code&gt; being appended in the head of the page, which will instruct the browser to prefetch in idle time the &lt;code&gt;login-modal-chunk.js&lt;/code&gt; file.</source>
          <target state="translated">그러면 페이지 헤드 에 &lt;code&gt;&amp;lt;link rel=&quot;prefetch&quot; href=&quot;login-modal-chunk.js&quot;&amp;gt;&lt;/code&gt; 가 추가되어 브라우저가 유휴 시간에 &lt;code&gt;login-modal-chunk.js&lt;/code&gt; 를 프리 페치하도록 지시합니다. 파일.</target>
        </trans-unit>
        <trans-unit id="c85e87d9ec602f1d997bca703285880f56410641" translate="yes" xml:space="preserve">
          <source>This will result in following output:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4ac30989a90a0b71fb88d88da6109d1c138e172f" translate="yes" xml:space="preserve">
          <source>This will result in splitting &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; into a separate chunk. If you're not sure what packages have been included in a chunk you may refer to &lt;a href=&quot;../guides/code-splitting#bundle-analysis&quot;&gt;Bundle Analysis&lt;/a&gt; section for details.</source>
          <target state="translated">This will result in splitting &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; into a separate chunk. If you're not sure what packages have been included in a chunk you may refer to &lt;a href=&quot;../guides/code-splitting#bundle-analysis&quot;&gt;Bundle Analysis&lt;/a&gt; section for details.</target>
        </trans-unit>
        <trans-unit id="899806b06bf180ab4287827d162ab9f78154c6bd" translate="yes" xml:space="preserve">
          <source>This will result in the following output:</source>
          <target state="translated">This will result in the following output:</target>
        </trans-unit>
        <trans-unit id="dd75db9f1ff33f0b55c972ee38e1768f886c967a" translate="yes" xml:space="preserve">
          <source>This will simply export the provided &lt;code&gt;value&lt;/code&gt;. The &lt;code&gt;value&lt;/code&gt; here can be anything except a function.</source>
          <target state="translated">제공된 &lt;code&gt;value&lt;/code&gt; 간단히 내 보냅니다 . 여기서 &lt;code&gt;value&lt;/code&gt; 은 함수를 제외한 모든 것이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7416b1d07afa4e2b0585443cfa1b58ec3bd5d4db" translate="yes" xml:space="preserve">
          <source>This will trigger the &lt;code&gt;evaluateTypeof&lt;/code&gt; hook:</source>
          <target state="translated">This will trigger the &lt;code&gt;evaluateTypeof&lt;/code&gt; hook:</target>
        </trans-unit>
        <trans-unit id="bbfc51253cda4d1bb26a188796425eaeb9f6e0ab" translate="yes" xml:space="preserve">
          <source>This will wrap the return value of your entry point into a jsonp wrapper.</source>
          <target state="translated">이것은 진입 점의 반환 값을 jsonp 래퍼로 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="efed152efc8461a74df43e343c4dd0ad810e7a79" translate="yes" xml:space="preserve">
          <source>This will yield the following build result:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9bbe133d1fd6efcfd0e829d8259bc2e5163a63ab" translate="yes" xml:space="preserve">
          <source>This won't trigger:</source>
          <target state="translated">This won't trigger:</target>
        </trans-unit>
        <trans-unit id="4df81b30369adbeaf367a4758423836e4cb12a34" translate="yes" xml:space="preserve">
          <source>This would allow to remove this piece of code. But there are still questions with the imports which need to be included/evaluated because they could contain side effects.</source>
          <target state="translated">This would allow to remove this piece of code. But there are still questions with the imports which need to be included/evaluated because they could contain side effects.</target>
        </trans-unit>
        <trans-unit id="945fcbc1787185641ce61384de9325b8f50d7afe" translate="yes" xml:space="preserve">
          <source>This would expose your index.html file to the polymer-webpack-loader based on the process used by the html-loader. In this case you would need to exclude your html file from the polymer-webpack-loader or look for other ways to avoid this conflict. See: &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md&quot;&gt;html-webpack-plugin template options&lt;/a&gt;</source>
          <target state="translated">그러면 html-loader가 사용하는 프로세스를 기반으로 index.html 파일이 polymer-webpack-loader에 노출됩니다. 이 경우 polymer-webpack-loader에서 html 파일을 제외하거나이 충돌을 피할 수있는 다른 방법을 찾아야합니다. &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md&quot;&gt;html-webpack-plugin 템플릿 옵션을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ea4357ef4b413d69e9589461b2acd2f1ec82b54" translate="yes" xml:space="preserve">
          <source>This would go nicely with &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; as the rest of the &lt;code&gt;lodash&lt;/code&gt; library should get dropped.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 라이브러리 의 나머지 부분을 제거 해야하기 때문에 &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; 과 잘 어울립니다 .</target>
        </trans-unit>
        <trans-unit id="b166a6d72bc0ecd96b32dc3dc3968cf48187e1f5" translate="yes" xml:space="preserve">
          <source>This wraps the &lt;code&gt;require('file.js')&lt;/code&gt; in a &lt;code&gt;require.ensure&lt;/code&gt; block</source>
          <target state="translated">이것은 &lt;code&gt;require('file.js')&lt;/code&gt; 를 &lt;code&gt;require.ensure&lt;/code&gt; 블록으로 감싸줍니다.</target>
        </trans-unit>
        <trans-unit id="db0f1255d05986e69c5d921d1eea45817e63296f" translate="yes" xml:space="preserve">
          <source>This: available through the &lt;code&gt;this&lt;/code&gt; object (&lt;code&gt;libraryTarget:'this'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;libraryTarget:'this'&lt;/code&gt; &lt;code&gt;this&lt;/code&gt; 객체를 통해 사용할 수 있습니다 ( libraryTarget : 'this' ).</target>
        </trans-unit>
        <trans-unit id="0705c3b770969e27f7a00fe2cf8c2bc003dbc17b" translate="yes" xml:space="preserve">
          <source>Those exports will trigger this hook:</source>
          <target state="translated">Those exports will trigger this hook:</target>
        </trans-unit>
        <trans-unit id="3ffef249f4c6fcea2923ee5d65836d74d834ecab" translate="yes" xml:space="preserve">
          <source>Three simple ways to inspect a webpack bundle</source>
          <target state="translated">웹팩 번들을 검사하는 세 가지 간단한 방법</target>
        </trans-unit>
        <trans-unit id="22975e15fe01eb83dd38a4fdd63bcdb34c745980" translate="yes" xml:space="preserve">
          <source>Throughout the Guides we will use &lt;code&gt;diff&lt;/code&gt; blocks to show you what changes we're making to directories, files, and code.</source>
          <target state="translated">가이드 전체에서 &lt;code&gt;diff&lt;/code&gt; 블록을 사용 하여 디렉토리, 파일 및 코드에 어떤 변경 사항이 있는지 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8c6fde5245f850996f4fa47b43e3d6f2119f9b90" translate="yes" xml:space="preserve">
          <source>Throughout the Guides we will use &lt;strong&gt;&lt;code&gt;diff&lt;/code&gt;&lt;/strong&gt; blocks to show you what changes we're making to directories, files, and code. For instance:</source>
          <target state="translated">Throughout the Guides we will use &lt;strong&gt; &lt;code&gt;diff&lt;/code&gt; &lt;/strong&gt; blocks to show you what changes we're making to directories, files, and code. For instance:</target>
        </trans-unit>
        <trans-unit id="098329a4e0a780055cca74efd7b36afeccfbe21e" translate="yes" xml:space="preserve">
          <source>Throwing an error from loader:</source>
          <target state="translated">Throwing an error from loader:</target>
        </trans-unit>
        <trans-unit id="921008c663ca39740d7eff1fc3116a1d5032c017" translate="yes" xml:space="preserve">
          <source>Thus, &lt;code&gt;window.$&lt;/code&gt; is then available in the browser console.</source>
          <target state="translated">따라서 브라우저 콘솔에서 &lt;code&gt;window.$&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c929173c9f4dfa1ce427bc6782df85c0786c6b97" translate="yes" xml:space="preserve">
          <source>Time in milliseconds. &lt;code&gt;cache.idleTimeout&lt;/code&gt; denotes the time period after which the cache storing should happen.</source>
          <target state="translated">Time in milliseconds. &lt;code&gt;cache.idleTimeout&lt;/code&gt; denotes the time period after which the cache storing should happen.</target>
        </trans-unit>
        <trans-unit id="be05cb967fa89095d05e7e54631c6f7bc59b4d38" translate="yes" xml:space="preserve">
          <source>Time in milliseconds. &lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is the time period after which the initial cache storing should happen.</source>
          <target state="translated">Time in milliseconds. &lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is the time period after which the initial cache storing should happen.</target>
        </trans-unit>
        <trans-unit id="03dcb8ddd180c79b7cbef1fbef09bd9b811c6229" translate="yes" xml:space="preserve">
          <source>Timeout for gathering changes while watching</source>
          <target state="translated">시청하는 동안 변경 사항을 수집하기위한 제한 시간</target>
        </trans-unit>
        <trans-unit id="661d4063b8ec8980f63428513015c42d7d7a39d4" translate="yes" xml:space="preserve">
          <source>Timings</source>
          <target state="translated">Timings</target>
        </trans-unit>
        <trans-unit id="54963bcda5c44c101aba88a7600754b4d08bd65b" translate="yes" xml:space="preserve">
          <source>Tips for Use</source>
          <target state="translated">사용 팁</target>
        </trans-unit>
        <trans-unit id="b2660960645189e282a8a216a50f1f554af01560" translate="yes" xml:space="preserve">
          <source>To approach this problem you can easily use a good old environment variable. Let's say we have a variable &lt;code&gt;ASSET_PATH&lt;/code&gt;:</source>
          <target state="translated">이 문제에 접근하기 위해 좋은 오래된 환경 변수를 쉽게 사용할 수 있습니다. &lt;code&gt;ASSET_PATH&lt;/code&gt; 변수가 있다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="dcbc79a6d6d80f687151d525406640646c99705e" translate="yes" xml:space="preserve">
          <source>To automatically load &lt;code&gt;jquery&lt;/code&gt; we can simply point both variables it exposes to the corresponding node module:</source>
          <target state="translated">&lt;code&gt;jquery&lt;/code&gt; 를 자동으로로드 하기 위해 해당 노드 모듈에 노출되는 두 변수를 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cff0b80a6edf97df3a239f888cd3d2406dca34c" translate="yes" xml:space="preserve">
          <source>To be compatible with existing css files (if not in CSS Module mode).</source>
          <target state="translated">CSS 모듈 모드가 아닌 경우 기존 CSS 파일과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="07015a6889ed2ed55c54e13b2a92e0506c83e9bb" translate="yes" xml:space="preserve">
          <source>To be safe, you can use &lt;code&gt;enforce: &quot;pre&quot;&lt;/code&gt; section to check source files, not modified by other loaders (like &lt;code&gt;babel-loader&lt;/code&gt;)</source>
          <target state="translated">안전을 위해, &lt;code&gt;enforce: &quot;pre&quot;&lt;/code&gt; 섹션을 사용 하여 다른 로더 (예 : &lt;code&gt;babel-loader&lt;/code&gt; )에 의해 수정되지 않은 소스 파일을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cc256b5ec71d9d9a4b9f72f7f96365afb242e4a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;@gfx/zopfli&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;@gfx/zopfli&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="300217b5e3ca451bfede33b8a39b09a6509dd6a3" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;cache-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;cache-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="72aac05bc13982f6c6a5067c2ddd9e569185b48a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;coffeescript&lt;/code&gt; and &lt;code&gt;coffee-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;coffeescript&lt;/code&gt; and &lt;code&gt;coffee-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9601d39f4fea47b62aff47d6c20f03c448c47e46" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;compression-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;compression-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="82bf60baa207e3a2a73e2e85ad00daef03147bec" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;config-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;config-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fb3f78b10623af49e63dfb9f9c6ea2b45590fdac" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;copy-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;copy-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb549bbd66f44aa000a2e44c782cff06519919f1" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;css-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;css-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ad8394811af31096e15488fd4006bd1cd5812a2b" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;css-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;css-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fce74b425fc9b393fe6da8939201756b11c8ae82" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;exports-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;exports-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="411e791be25b2b16d7093ec79dbcbde9a51e71f2" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;expose-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;expose-loader&lt;/code&gt; 를 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="0fc7fc961b47a051b19e226656bde393653c4789" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;file-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;file-loader&lt;/code&gt; 를 설치해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="d371f2a3cfa7666741ca0629308aa3441dce2dbd" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;html-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;html-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="549e68511a14dbc3601a5558ba8c50a965161b29" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;html-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;html-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dca628ea3f00b632b6b81454cd714c9799755185" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;image-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;image-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="372f0605496cf13295d68fa17070ff1afbf41d0f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;imports-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;imports-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="94d3f896c040c5941000c3f6d1a93ff1345b8612" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;jshint-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;jshint-loader&lt;/code&gt; 를 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="d89de220ed59f227e2f0883cba7f15e710771f4a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;json-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;json-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6dbbf4b1854d000f1b0f5b51db964f7aa3e8cf1e" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;json5-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;json5-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a41ac440dc6238694d68258e618bb49fc94caf83" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;less-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;less-loader&lt;/code&gt; 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="966ccb2b770321693105fb2146058043db61d21d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;less-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;less-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b262c7ab30ff7bd247b5f85aaa7cc70b115efc69" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mini-css-extract-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="549149f55ee616dfb950726ec9162fa32d17da0d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt; and &lt;code&gt;mocha&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt; and &lt;code&gt;mocha&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="746daaee86d341274baa9bbbb6cb39c7d79f5f35" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;mocha-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="89e5dc0915c471dd5741c80947af93e44d49291a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;multi-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;multi-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="00fb7c36e27d5f602e02b051008f9368bbec1510" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;node-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;node-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ac04354afe29bdc0eb01bb123082874b29e12c09" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;null-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;null-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3f4caa2d4531e6a67c0096ffd202479b086289cf" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;postcss-loader&lt;/code&gt; and &lt;code&gt;postcss&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;postcss-loader&lt;/code&gt; and &lt;code&gt;postcss&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ed9f11b49e3b0ac8754e0ab515a232c4c7bab089" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;raw-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;raw-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5336d91f3599dbace4c9133e6c80c99d248c2d4f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;react-proxy-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;react-proxy-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8cb07cd9d5847e41c7193ffd78f6a5328bbf55e2" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;sass-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;sass-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2ecf4f291c2cf94cfdee052bf9ea1afec889db8d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;source-map-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;source-map-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d7a998a4ac2f536dd8aaf633bc8007df7c8bde21" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;style-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;style-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c6f54944c9d87a57b6782a0d8c4ab4d25eb93f5f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;stylelint-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;stylelint-webpack-plugin&lt;/code&gt; 을 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="36231f4a116c3e0b429bb1621d54bfcf456d6f2e" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;stylus&lt;/code&gt; and &lt;code&gt;stylus-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;stylus&lt;/code&gt; and &lt;code&gt;stylus-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="38782f5d9cd214d47d0d542d22e218c43a6dee53" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;terser-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;terser-webpack-plugin&lt;/code&gt; 을 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="ee9d1d253ebff7e4e9d72665d987bd70ba4b9a08" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;transform-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;transform-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3c3ed3c5eaa5eefb4adabc155747e61cb046b303" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;url-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;url-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e5d36d38e77ff2fe0084bc1096c8a1da57aa1351" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;val-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;val-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="829c18e6ac496ea95656902cbe84d34833c84385" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;worker-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;worker-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bfeceae384afd1256e3e284ec202d194d889bbda" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;yaml-frontmatter-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;yaml-frontmatter-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="06c638119ebe6bdd9660a0f8df0f71a8e0b13de5" translate="yes" xml:space="preserve">
          <source>To bundle the &lt;code&gt;lodash&lt;/code&gt; dependency with &lt;code&gt;index.js&lt;/code&gt;, we'll need to install the library locally:</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 종속성을 &lt;code&gt;index.js&lt;/code&gt; 와 번들 로 제공하려면 라이브러리를 로컬로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f5a5b45b7f4a04dd9e2ce0185126dc8553156c30" translate="yes" xml:space="preserve">
          <source>To check the progress of any webpack compilation you can use the &lt;code&gt;--progress&lt;/code&gt; flag.</source>
          <target state="translated">To check the progress of any webpack compilation you can use the &lt;code&gt;--progress&lt;/code&gt; flag.</target>
        </trans-unit>
        <trans-unit id="459eedab9edc3e65ea20dcf600414bd17dc32d72" translate="yes" xml:space="preserve">
          <source>To collect profile data for progress steps you can pass &lt;code&gt;profile&lt;/code&gt; as value to &lt;code&gt;--progress&lt;/code&gt; flag.</source>
          <target state="translated">To collect profile data for progress steps you can pass &lt;code&gt;profile&lt;/code&gt; as value to &lt;code&gt;--progress&lt;/code&gt; flag.</target>
        </trans-unit>
        <trans-unit id="dfa7d608afec42e0cdc2c58c9c250dda0d690d1a" translate="yes" xml:space="preserve">
          <source>To completely disable tag-attribute processing (for instance, if you're handling image loading on the client side) you can pass in &lt;code&gt;attrs=false&lt;/code&gt;.</source>
          <target state="translated">태그 속성 처리를 완전히 비활성화하려면 (예 : 클라이언트 측에서 이미지로드를 처리하는 경우) &lt;code&gt;attrs=false&lt;/code&gt; 를 전달하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="1309003de522e7c17d3c5a1287a3717198d9d74b" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;scaffold&lt;/code&gt;, you must create a &lt;a href=&quot;http://yeoman.io/authoring/&quot;&gt;&lt;code&gt;yeoman-generator&lt;/code&gt;&lt;/a&gt;. Thanks to it, you can optionally extend your generator to include methods from the &lt;a href=&quot;http://yeoman.io/learning/&quot;&gt;Yeoman API&lt;/a&gt;. It's worth noting that we support all the properties of a regular webpack configuration. In order for us to do this, there's a thing you need to remember:</source>
          <target state="translated">To create a &lt;code&gt;scaffold&lt;/code&gt; , you must create a &lt;a href=&quot;http://yeoman.io/authoring/&quot;&gt; &lt;code&gt;yeoman-generator&lt;/code&gt; &lt;/a&gt;. Thanks to it, you can optionally extend your generator to include methods from the &lt;a href=&quot;http://yeoman.io/learning/&quot;&gt;Yeoman API&lt;/a&gt;. It's worth noting that we support all the properties of a regular webpack configuration. In order for us to do this, there's a thing you need to remember:</target>
        </trans-unit>
        <trans-unit id="f72579134926fff1a800442bd52c8ff45bbcd816" translate="yes" xml:space="preserve">
          <source>To create a code coverage report for all components (even for those for which you have no tests yet) you have to require all the 1) sources and 2) tests. Something like it's described in &lt;a href=&quot;https://github.com/webpack/karma-webpack#alternative-usage&quot;&gt;&quot;alternative usage&quot; of karma-webpack&lt;/a&gt;</source>
          <target state="translated">모든 구성 요소 (아직 테스트가없는 구성 요소에 대해서도)에 대한 코드 적용 범위 보고서를 만들려면 1) 소스 및 2) 테스트가 모두 필요합니다. &lt;a href=&quot;https://github.com/webpack/karma-webpack#alternative-usage&quot;&gt;karma-webpack의 &quot;대체 사용법&quot;에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="97cfbbf176fb99a211b09905e5e5c9dfcaa08a80" translate="yes" xml:space="preserve">
          <source>To create a custom client implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/client-src/clients/BaseClient.js&quot;&gt;&lt;code&gt;BaseClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To create a custom client implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/client-src/clients/BaseClient.js&quot;&gt; &lt;code&gt;BaseClient&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cb3dac4cd8002b11b5009a5f3065cd8cbade1f61" translate="yes" xml:space="preserve">
          <source>To create a custom server implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/lib/servers/BaseServer.js&quot;&gt;&lt;code&gt;BaseServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To create a custom server implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/lib/servers/BaseServer.js&quot;&gt; &lt;code&gt;BaseServer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="64b16bf8ed307590d7c4c616d19178c256a1d1f3" translate="yes" xml:space="preserve">
          <source>To determine the structure from which the found resources will be copied to the destination folder, the &lt;code&gt;context&lt;/code&gt; option is used.</source>
          <target state="translated">To determine the structure from which the found resources will be copied to the destination folder, the &lt;code&gt;context&lt;/code&gt; option is used.</target>
        </trans-unit>
        <trans-unit id="869e6e2ac6874691b0a280a2def88cb61d298df9" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;@import&lt;/code&gt; resolving by &lt;code&gt;css-loader&lt;/code&gt; set the option to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;css-loader&lt;/code&gt; 로 &lt;code&gt;@import&lt;/code&gt; 해결 을 비활성화하려면 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="361551aaf1d19b454740101d98c789ddb47cdcd1" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;contentBase&lt;/code&gt;:</source>
          <target state="translated">사용하지 않으려면 &lt;code&gt;contentBase&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe870f47c32f3704bff3eff2d3ef13906efa0316" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;url()&lt;/code&gt; resolving by &lt;code&gt;css-loader&lt;/code&gt; set the option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;css-loader&lt;/code&gt; 로 &lt;code&gt;url()&lt;/code&gt; 확인 을 비활성화하려면 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e02862c99560640eb94080cfcb8a40ef213be8f5" translate="yes" xml:space="preserve">
          <source>To disable this feature in some common editors, see the list below:</source>
          <target state="translated">일부 일반적인 편집기에서이 기능을 비활성화하려면 아래 목록을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="41c8815ef9e8f8a631a2f83b99b5626c9ea326d0" translate="yes" xml:space="preserve">
          <source>To disambiguate in your &lt;code&gt;webpack.config.js&lt;/code&gt; between &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; and &lt;a href=&quot;production&quot;&gt;production builds&lt;/a&gt; you may use environment variables.</source>
          <target state="translated">&lt;a href=&quot;development&quot;&gt;개발&lt;/a&gt; 및 &lt;a href=&quot;production&quot;&gt;프로덕션 빌드&lt;/a&gt; 간에 &lt;code&gt;webpack.config.js&lt;/code&gt; 를 명확하게하기 위해 환경 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="500ff0470316e19a35544952710d7f6e843d15e4" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;less-loader&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; the &lt;code&gt;css-loader&lt;/code&gt;. Your &lt;code&gt;webpack.config.js&lt;/code&gt; should look like this:</source>
          <target state="translated">CSS 소스지도를 사용하려면 통과해야합니다 &lt;code&gt;sourceMap&lt;/code&gt; 를 받는 옵션을 &lt;code&gt;less-loader&lt;/code&gt; &lt;em&gt;와 &lt;/em&gt; &lt;code&gt;css-loader&lt;/code&gt; . 귀하의 &lt;code&gt;webpack.config.js&lt;/code&gt; 다음과 같아야합니다 :</target>
        </trans-unit>
        <trans-unit id="e6f9cb39ea18350ef2bbae97768a1f50000995d1" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;sass-loader&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; the css-loader.</source>
          <target state="translated">To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;sass-loader&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; the css-loader.</target>
        </trans-unit>
        <trans-unit id="29ddb3ba3e454446fe1a7da01fa6a7ea800f1aca" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the sass-loader &lt;em&gt;and&lt;/em&gt; the css-loader. Your &lt;code&gt;webpack.config.js&lt;/code&gt; should look like this:</source>
          <target state="translated">CSS 소스 맵을 활성화하려면 &lt;code&gt;sourceMap&lt;/code&gt; 옵션을 sass-loader &lt;em&gt;및&lt;/em&gt; css-loader 에 전달해야합니다 . 귀하의 &lt;code&gt;webpack.config.js&lt;/code&gt; 다음과 같아야합니다 :</target>
        </trans-unit>
        <trans-unit id="5f7892b1e37621678647b50e59d05e015a186798" translate="yes" xml:space="preserve">
          <source>To enable HMR, you also need to modify your webpack configuration object to include the HMR entry points. The &lt;code&gt;webpack-dev-server&lt;/code&gt; package includes a method called &lt;code&gt;addDevServerEntrypoints&lt;/code&gt; which you can use to do this. Here's a small example of how that might look:</source>
          <target state="translated">HMR을 사용 가능하게하려면 HMR 진입 점을 포함하도록 웹팩 구성 오브젝트도 수정해야합니다. &lt;code&gt;webpack-dev-server&lt;/code&gt; 패키지라는 방법은, &lt;code&gt;addDevServerEntrypoints&lt;/code&gt; 이 작업을 수행하는 데 사용할 수 있습니다. 다음은 그 모습을 보여주는 작은 예입니다.</target>
        </trans-unit>
        <trans-unit id="b2fc05b2ff61f26beeae4af670843b3d9e871698" translate="yes" xml:space="preserve">
          <source>To enable source maps, we must configure TypeScript to output inline source maps to our compiled JavaScript files. The following line must be added to our TypeScript configuration:</source>
          <target state="translated">소스 맵을 사용하려면 인라인 소스 맵을 컴파일 된 JavaScript 파일로 출력하도록 TypeScript를 구성해야합니다. TypeScript 구성에 다음 줄을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="c0f0f5be6d78b1c705d6d755ee8f1d70e5d8fdf8" translate="yes" xml:space="preserve">
          <source>To enable sourcemaps for CSS, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; property in the loader's options. If this is not passed, the loader will respect the setting for webpack source maps, set in &lt;code&gt;devtool&lt;/code&gt;.</source>
          <target state="translated">To enable sourcemaps for CSS, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; property in the loader's options. If this is not passed, the loader will respect the setting for webpack source maps, set in &lt;code&gt;devtool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a389a84023632649f39402ea3de4ce188a82054" translate="yes" xml:space="preserve">
          <source>To exclude &lt;code&gt;node_modules&lt;/code&gt;, see the &lt;code&gt;exclude&lt;/code&gt; option in the &lt;code&gt;loaders&lt;/code&gt; config as documented above.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; 를 제외하려면 위에서 설명한대로 &lt;code&gt;loaders&lt;/code&gt; 설정 에서 &lt;code&gt;exclude&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c69b5dfdb2bfb7ff464008d2cd81168638addc9d" translate="yes" xml:space="preserve">
          <source>To exclude assets that came from new URL calls from the asset loaders add &lt;code&gt;dependency: { not: ['url'] }&lt;/code&gt; to the loader configuration.</source>
          <target state="translated">To exclude assets that came from new URL calls from the asset loaders add &lt;code&gt;dependency: { not: ['url'] }&lt;/code&gt; to the loader configuration.</target>
        </trans-unit>
        <trans-unit id="da6c1a6b4127fd44ba0769c8077129ced921f313" translate="yes" xml:space="preserve">
          <source>To exclude sourcemaps from compression</source>
          <target state="translated">To exclude sourcemaps from compression</target>
        </trans-unit>
        <trans-unit id="38a9c27a9e0ab77f048bbdd92dbf6f8e9201f83c" translate="yes" xml:space="preserve">
          <source>To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;&lt;code&gt;ExtractTextPlugin&lt;/code&gt;&lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</source>
          <target state="translated">라이브러리와 연관된 스타일 시트를 표시하려면 &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt; &lt;code&gt;ExtractTextPlugin&lt;/code&gt; 을&lt;/a&gt; 사용해야합니다. 그런 다음 사용자는 다른 스타일 시트와 마찬가지로 소비하고로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e290f5e27fdf132aed76f6df77c9e1ce86165b82" translate="yes" xml:space="preserve">
          <source>To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;MiniCssExtractPlugin&lt;/code&gt;&lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</source>
          <target state="translated">To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;MiniCssExtractPlugin&lt;/code&gt; &lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</target>
        </trans-unit>
        <trans-unit id="b58c10e9810b7cd86447de7048c410bbfbdf9685" translate="yes" xml:space="preserve">
          <source>To extract the webpack bootstrap logic into a separate file, use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; on a &lt;code&gt;name&lt;/code&gt; which is not defined as &lt;code&gt;entry&lt;/code&gt;. Commonly the name &lt;code&gt;manifest&lt;/code&gt; is used. See the &lt;a href=&quot;../guides/caching&quot;&gt;caching guide&lt;/a&gt; for details.</source>
          <target state="translated">웹팩 부트 스트랩 로직을 별도의 파일로 추출하려면 &lt;code&gt;entry&lt;/code&gt; 로 정의되지 않은 &lt;code&gt;name&lt;/code&gt; &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용하십시오 . 일반적으로 이름 &lt;code&gt;manifest&lt;/code&gt; 가 사용됩니다. 자세한 내용은 &lt;a href=&quot;../guides/caching&quot;&gt;캐싱 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38ed89ed4d2d579580e96d0f69f192abda5d4002" translate="yes" xml:space="preserve">
          <source>To fix this you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt; as it is deprecated in babel v6. (instead install &lt;code&gt;babel-cli&lt;/code&gt; or &lt;code&gt;babel-core&lt;/code&gt;) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</source>
          <target state="translated">이 문제를 해결하려면 babel v6에서 더 이상 사용되지 않는 npm 패키지 &lt;code&gt;babel&lt;/code&gt; 을 제거해야합니다 . (대신 &lt;code&gt;babel-cli&lt;/code&gt; 또는 &lt;code&gt;babel-core&lt;/code&gt; 설치) 의존성 중 하나가 &lt;code&gt;babel&lt;/code&gt; 을 설치하고 직접 제거 할 수없는 경우 webpack 구성에서 로더의 전체 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1471f3354f1fee4747c660cc657f7ec5e39d8aba" translate="yes" xml:space="preserve">
          <source>To fix this, you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt;, as it is deprecated in Babel v6. (Instead, install &lt;code&gt;@babel/cli&lt;/code&gt; or &lt;code&gt;@babel/core&lt;/code&gt;.) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</source>
          <target state="translated">To fix this, you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt; , as it is deprecated in Babel v6. (Instead, install &lt;code&gt;@babel/cli&lt;/code&gt; or &lt;code&gt;@babel/core&lt;/code&gt; .) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</target>
        </trans-unit>
        <trans-unit id="8e0d84621b40671cd3f4fbb8a84b74dd3ba1a2e8" translate="yes" xml:space="preserve">
          <source>To force override the value that is already present in the global object you can set the &lt;code&gt;override&lt;/code&gt; option to the &lt;code&gt;true&lt;/code&gt; value.</source>
          <target state="translated">To force override the value that is already present in the global object you can set the &lt;code&gt;override&lt;/code&gt; option to the &lt;code&gt;true&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="6021058192262f03686a1a0bd715439d2f2cf191" translate="yes" xml:space="preserve">
          <source>To gain typechecking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt;&lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형 검사를 다시 &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt; &lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5a8d8bcb7e0b4e71b403076278fddf67b12775e" translate="yes" xml:space="preserve">
          <source>To generate and compress the original assets:</source>
          <target state="translated">To generate and compress the original assets:</target>
        </trans-unit>
        <trans-unit id="d651b67a431c78e3bd983224bcba2b0132dfb37c" translate="yes" xml:space="preserve">
          <source>To get html, need to add &lt;a href=&quot;https://github.com/wooorm/remark-html&quot;&gt;&lt;code&gt;remark-html&lt;/code&gt;&lt;/a&gt; to the remark plugins and add &lt;a href=&quot;html-loader&quot;&gt;&lt;code&gt;html-loader&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;webpack.config&lt;/code&gt;</source>
          <target state="translated">To get html, need to add &lt;a href=&quot;https://github.com/wooorm/remark-html&quot;&gt; &lt;code&gt;remark-html&lt;/code&gt; &lt;/a&gt; to the remark plugins and add &lt;a href=&quot;html-loader&quot;&gt; &lt;code&gt;html-loader&lt;/code&gt; &lt;/a&gt; to the &lt;code&gt;webpack.config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1a1f2b68224bef3bc79c709c34bf3103ba22925" translate="yes" xml:space="preserve">
          <source>To get started you only need to understand its &lt;strong&gt;Core Concepts&lt;/strong&gt;:</source>
          <target state="translated">시작하려면 &lt;strong&gt;핵심 개념&lt;/strong&gt; 만 이해하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="257ccb781a8edd61b316f2c1ae7c4bfadcec5946" translate="yes" xml:space="preserve">
          <source>To ignore warnings, you can use the following configuration:</source>
          <target state="translated">To ignore warnings, you can use the following configuration:</target>
        </trans-unit>
        <trans-unit id="348e1ea64c185f95f73506889858e9ce259285e2" translate="yes" xml:space="preserve">
          <source>To import a built-in module, use &lt;a href=&quot;../api/module-variables#__non_webpack_require__-webpack-specific-&quot;&gt;&lt;code&gt;__non_webpack_require__&lt;/code&gt;&lt;/a&gt;, i.e. &lt;code&gt;__non_webpack_require__('modulename')&lt;/code&gt; instead of &lt;code&gt;require('modulename')&lt;/code&gt;.</source>
          <target state="translated">내장 된 모듈을 사용 가져 오려면 &lt;a href=&quot;../api/module-variables#__non_webpack_require__-webpack-specific-&quot;&gt; &lt;code&gt;__non_webpack_require__&lt;/code&gt; &lt;/a&gt; , 즉 &lt;code&gt;__non_webpack_require__('modulename')&lt;/code&gt; 대신 &lt;code&gt;require('modulename')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5ae4d7aa8a104c8ccb3aa651a7bc57b7fa04613" translate="yes" xml:space="preserve">
          <source>To import a local classname from another module.</source>
          <target state="translated">다른 모듈에서 로컬 클래스 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="49cba4d2623a4fdecd91fd15da0c4fa945088144" translate="yes" xml:space="preserve">
          <source>To import assets from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt;) and for &lt;code&gt;alias&lt;/code&gt;, prefix it with a &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="translated">To import assets from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt; ) and for &lt;code&gt;alias&lt;/code&gt; , prefix it with a &lt;code&gt;~&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e2c64aae8fc990d22b375b4c008a28a50ef2b4f0" translate="yes" xml:space="preserve">
          <source>To import from multiple modules use multiple &lt;code&gt;composes:&lt;/code&gt; rules.</source>
          <target state="translated">여러 모듈에서 가져 오려면 여러 &lt;code&gt;composes:&lt;/code&gt; 규칙을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e7df80ba57a4d21c600ef74569b1a8d6021c36bf" translate="yes" xml:space="preserve">
          <source>To import styles from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt;) and for &lt;code&gt;alias&lt;/code&gt;, prefix it with a &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="translated">To import styles from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt; ) and for &lt;code&gt;alias&lt;/code&gt; , prefix it with a &lt;code&gt;~&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d59ea396c382cc546a109b1b257f90cc44f98106" translate="yes" xml:space="preserve">
          <source>To improve the build time when using &lt;code&gt;ts-loader&lt;/code&gt;, use the &lt;code&gt;transpileOnly&lt;/code&gt; loader option. On its own, this option turns off type checking. To gain type checking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt;&lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt;&lt;/a&gt;. This speeds up TypeScript type checking and ESLint linting by moving each to a separate process.</source>
          <target state="translated">To improve the build time when using &lt;code&gt;ts-loader&lt;/code&gt; , use the &lt;code&gt;transpileOnly&lt;/code&gt; loader option. On its own, this option turns off type checking. To gain type checking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt; &lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt; &lt;/a&gt;. This speeds up TypeScript type checking and ESLint linting by moving each to a separate process.</target>
        </trans-unit>
        <trans-unit id="47e9aa3b08def6333cf943d0fb6cd429f52aa435" translate="yes" xml:space="preserve">
          <source>To include source maps set the &lt;code&gt;sourceMap&lt;/code&gt; option.</source>
          <target state="translated">소스 맵을 포함하려면 &lt;code&gt;sourceMap&lt;/code&gt; 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4bbe95bbc8dfa0c4d6a1de7a82704d67d3526f2a" translate="yes" xml:space="preserve">
          <source>To inspect the version of &lt;code&gt;webpack&lt;/code&gt; and &lt;code&gt;webpack-cli&lt;/code&gt; you are using just run command:</source>
          <target state="translated">&lt;code&gt;webpack&lt;/code&gt; 및 &lt;code&gt;webpack-cli&lt;/code&gt; 의 버전을 검사하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0804f1fbb9a37f05062092192d402a0233d1abfa" translate="yes" xml:space="preserve">
          <source>To inspect the version of any &lt;code&gt;webpack-cli&lt;/code&gt; sub-package (like &lt;code&gt;@webpack-cli/init&lt;/code&gt;) just run command similar to the following:</source>
          <target state="translated">&lt;code&gt;webpack-cli&lt;/code&gt; 하위 패키지 (예 : &lt;code&gt;@webpack-cli/init&lt;/code&gt; ) 의 버전을 검사하려면 다음과 유사한 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a1015f4201a74cca3e3ac70cdc79b7f3b6a6d867" translate="yes" xml:space="preserve">
          <source>To install the latest release or a specific version, run one of the following commands:</source>
          <target state="translated">최신 릴리스 또는 특정 버전을 설치하려면 다음 명령 중 하나를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1884df3f25a3bbb6d7b71df607746c88bfb41cb2" translate="yes" xml:space="preserve">
          <source>To integrate with TypeScript, you will need to define a custom module for the exports of your worker</source>
          <target state="translated">TypeScript와 통합하려면 작업자 내보내기를위한 사용자 정의 모듈을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="5bbe431ff9314e12f762f84eabbf4794bcc69b80" translate="yes" xml:space="preserve">
          <source>To integrate with TypeScript, you will need to define a custom module for the exports of your worker.</source>
          <target state="translated">To integrate with TypeScript, you will need to define a custom module for the exports of your worker.</target>
        </trans-unit>
        <trans-unit id="6bcc914a800145c90ef98d17eac32a8bc02e16aa" translate="yes" xml:space="preserve">
          <source>To learn more about source maps, see the &lt;a href=&quot;development&quot;&gt;development guide&lt;/a&gt;.</source>
          <target state="translated">소스 맵에 대한 자세한 내용은 &lt;a href=&quot;development&quot;&gt;개발 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a177cf38e45191d1a14eeceb328a37a99ad1a1a" translate="yes" xml:space="preserve">
          <source>To learn more about webpack configuration, see the &lt;a href=&quot;../concepts/configuration&quot;&gt;configuration concepts&lt;/a&gt;.</source>
          <target state="translated">웹팩 구성에 대한 자세한 내용은 &lt;a href=&quot;../concepts/configuration&quot;&gt;구성 개념을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f6d9d37d8ba6374305d57b794829b7bce4b11d2" translate="yes" xml:space="preserve">
          <source>To make imports do this by default and keep &lt;code&gt;import _ from 'lodash';&lt;/code&gt; syntax in TypeScript, set &lt;code&gt;&quot;allowSyntheticDefaultImports&quot; : true&lt;/code&gt; and &lt;code&gt;&quot;esModuleInterop&quot; : true&lt;/code&gt; in your &lt;strong&gt;tsconfig.json&lt;/strong&gt; file. This is related to TypeScript configuration and mentioned in our guide only for your information.</source>
          <target state="translated">To make imports do this by default and keep &lt;code&gt;import _ from 'lodash';&lt;/code&gt; syntax in TypeScript, set &lt;code&gt;&quot;allowSyntheticDefaultImports&quot; : true&lt;/code&gt; and &lt;code&gt;&quot;esModuleInterop&quot; : true&lt;/code&gt; in your &lt;strong&gt;tsconfig.json&lt;/strong&gt; file. This is related to TypeScript configuration and mentioned in our guide only for your information.</target>
        </trans-unit>
        <trans-unit id="3e748d8b605e30f64d9404df3cdd168090d45ff8" translate="yes" xml:space="preserve">
          <source>To make this work with HMR we need to update that binding to the new &lt;code&gt;printMe&lt;/code&gt; function using &lt;code&gt;module.hot.accept&lt;/code&gt;:</source>
          <target state="translated">HMR에서이 작업을 수행하려면 &lt;code&gt;module.hot.accept&lt;/code&gt; 를 사용하여 새 &lt;code&gt;printMe&lt;/code&gt; 함수 에 대한 바인딩을 업데이트해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b00037db6e6c3f6baec9ee9566ee8706baef31c4" translate="yes" xml:space="preserve">
          <source>To mimic a more production-like environment, it is also possible to proxy the &lt;code&gt;webpack-dev-server&lt;/code&gt; with nginx.</source>
          <target state="translated">To mimic a more production-like environment, it is also possible to proxy the &lt;code&gt;webpack-dev-server&lt;/code&gt; with nginx.</target>
        </trans-unit>
        <trans-unit id="06ca871bf3949e7877aca45fc526601107359dd1" translate="yes" xml:space="preserve">
          <source>To mimic a more production-like environment, it is also possible to proxy the webpack-dev-server with nginx.</source>
          <target state="translated">보다 생산적인 환경을 모방하기 위해 nginx로 webpack-dev-server를 프록시하는 것도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="ae527e4c710ed9a7353edef23e497137a1f06dfe" translate="yes" xml:space="preserve">
          <source>To minify the output, use a plugin like &lt;a href=&quot;css-minimizer-webpack-plugin&quot;&gt;css-minimizer-webpack-plugin&lt;/a&gt;.</source>
          <target state="translated">To minify the output, use a plugin like &lt;a href=&quot;css-minimizer-webpack-plugin&quot;&gt;css-minimizer-webpack-plugin&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="628c7d2253f28d8603b993e75263711dfb0ad973" translate="yes" xml:space="preserve">
          <source>To only use the manual flag and do not analyse source code:</source>
          <target state="translated">To only use the manual flag and do not analyse source code:</target>
        </trans-unit>
        <trans-unit id="4d5cefa57cd7873c74c9575f3d9b2d6d222b5caf" translate="yes" xml:space="preserve">
          <source>To opt-out from used exports analysis per runtime:</source>
          <target state="translated">To opt-out from used exports analysis per runtime:</target>
        </trans-unit>
        <trans-unit id="bc330b2b1a81faa80abe33d44510a51885be8781" translate="yes" xml:space="preserve">
          <source>To pass arguments directly to Node.js process, you can use the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; option.</source>
          <target state="translated">To pass arguments directly to Node.js process, you can use the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="63c9385d34fe76b0b46414f529a97ef068c93512" translate="yes" xml:space="preserve">
          <source>To pass your own certificate via CLI, use the following options</source>
          <target state="translated">To pass your own certificate via CLI, use the following options</target>
        </trans-unit>
        <trans-unit id="19f8115b103436185bc4f73cf8023e4431cc5a22" translate="yes" xml:space="preserve">
          <source>To pass your own certificate via the CLI use the following options</source>
          <target state="translated">CLI를 통해 자신의 인증서를 전달하려면 다음 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6647a87d1cb201b2abb16749321598ec33fa1589" translate="yes" xml:space="preserve">
          <source>To prevent the high delay when booting workers it possible to warmup the worker pool.</source>
          <target state="translated">작업자를 부팅 할 때 높은 지연을 방지하기 위해 작업자 풀을 예열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1016a714864b36370272ce33473888774449f263" translate="yes" xml:space="preserve">
          <source>To report progress, a plugin must &lt;code&gt;tap&lt;/code&gt; into a hook using the &lt;code&gt;context: true&lt;/code&gt; option:</source>
          <target state="translated">To report progress, a plugin must &lt;code&gt;tap&lt;/code&gt; into a hook using the &lt;code&gt;context: true&lt;/code&gt; option:</target>
        </trans-unit>
        <trans-unit id="ffeef99e565e8137a276e248b438f53bf32076a0" translate="yes" xml:space="preserve">
          <source>To run only the &lt;code&gt;second&lt;/code&gt; configuration:</source>
          <target state="translated">&lt;code&gt;second&lt;/code&gt; 구성 만 실행하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="6472c575009f9527693ccb1eb7975cf2b5bb6a74" translate="yes" xml:space="preserve">
          <source>To run the local installation of webpack you can access its bin version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt;.</source>
          <target state="translated">웹팩의 로컬 설치를 실행하려면 bin 버전에 &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt; 으로 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14c3502b5d0c3ef1e7cca5247b15e5302cae180a" translate="yes" xml:space="preserve">
          <source>To run the local installation of webpack you can access its binary version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt;. Alternatively, if you are using npm v5.2.0 or greater, you can run &lt;code&gt;npx webpack&lt;/code&gt; to do it.</source>
          <target state="translated">To run the local installation of webpack you can access its binary version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt; . Alternatively, if you are using npm v5.2.0 or greater, you can run &lt;code&gt;npx webpack&lt;/code&gt; to do it.</target>
        </trans-unit>
        <trans-unit id="c1fe53d810ee24cc9207067a8d95fa1e63e196ff" translate="yes" xml:space="preserve">
          <source>To see code examples please refer to &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;webpack repository&lt;/a&gt;</source>
          <target state="translated">To see code examples please refer to &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;webpack repository&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a6e637bcd7f8c82f7ecb2b72b80d94077bbbc98" translate="yes" xml:space="preserve">
          <source>To set a custom name for the output script, use the &lt;code&gt;name&lt;/code&gt; parameter. The name may contain the string &lt;code&gt;[hash]&lt;/code&gt;, which will be replaced with a content dependent hash for caching purposes. When using &lt;code&gt;name&lt;/code&gt; alone &lt;code&gt;[hash]&lt;/code&gt; is omitted.</source>
          <target state="translated">출력 스크립트의 사용자 정의 이름을 설정하려면 &lt;code&gt;name&lt;/code&gt; 매개 변수를 사용하십시오 . 이름에는 문자열 &lt;code&gt;[hash]&lt;/code&gt; 가 포함될 수 있으며 캐싱 목적으로 컨텐츠 종속 해시로 대체됩니다. &lt;code&gt;name&lt;/code&gt; 만 사용할 경우 &lt;code&gt;[hash]&lt;/code&gt; 는 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="dac38352ca87e4dd20fd92ae4b4d17c3a6910808" translate="yes" xml:space="preserve">
          <source>To set the &lt;code&gt;target&lt;/code&gt; property, you simply set the target value in your webpack config:</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 속성 을 설정하려면 웹팩 구성에서 대상 값을 설정하면됩니다.</target>
        </trans-unit>
        <trans-unit id="d7739566e3958f0e427ab0f8fd3a0e62883980cf" translate="yes" xml:space="preserve">
          <source>To show only errors in your bundle:</source>
          <target state="translated">번들에 오류 만 표시하려면</target>
        </trans-unit>
        <trans-unit id="aebf79cbf09ef128e596372a5721d38fb978a82d" translate="yes" xml:space="preserve">
          <source>To solve this problem &lt;code&gt;ProgressPlugin&lt;/code&gt; caches the last known total modules count and reuses this value on the next build. The first build will warm the cache but the following builds will use and update this value.</source>
          <target state="translated">To solve this problem &lt;code&gt;ProgressPlugin&lt;/code&gt; caches the last known total modules count and reuses this value on the next build. The first build will warm the cache but the following builds will use and update this value.</target>
        </trans-unit>
        <trans-unit id="144def8245316e56bae55c0aa633ce63f74cdd87" translate="yes" xml:space="preserve">
          <source>To specify an unset default value, use &lt;code&gt;null&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">설정되지 않은 기본값을 지정하려면 &lt;code&gt;undefined&lt;/code&gt; 대신 &lt;code&gt;null&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="80ba1fc80757c6220f2d25b4d686f35e12c0c9a4" translate="yes" xml:space="preserve">
          <source>To start using the webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</source>
          <target state="translated">To start using the webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</target>
        </trans-unit>
        <trans-unit id="7929162fe7ecd963c36f31e3a8c0790d5dcf5b99" translate="yes" xml:space="preserve">
          <source>To start using webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</source>
          <target state="translated">webpack Node.js API를 사용하려면 먼저 webpack을 설치하지 않은 경우 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="9c156f8d22007693b411c0a6e5d1ef4987eb8bdf" translate="yes" xml:space="preserve">
          <source>To start, make sure that the &lt;code&gt;Vagrantfile&lt;/code&gt; has a static IP;</source>
          <target state="translated">시작하려면 &lt;code&gt;Vagrantfile&lt;/code&gt; 에 고정 IP가 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="1051af58ed5337486309cda3c2d1ba1cd6199906" translate="yes" xml:space="preserve">
          <source>To tackle this, we use the &lt;a href=&quot;tree-shaking#mark-the-file-as-side-effect-free&quot;&gt;&lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt;&lt;/a&gt; property in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">To tackle this, we use the &lt;a href=&quot;tree-shaking#mark-the-file-as-side-effect-free&quot;&gt; &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; &lt;/a&gt; property in &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b40ceb97056440b94d088a384a85d5fd8c3add01" translate="yes" xml:space="preserve">
          <source>To understand why you should use webpack, let's recap how we used JavaScript on the web before bundlers were a thing.</source>
          <target state="translated">To understand why you should use webpack, let's recap how we used JavaScript on the web before bundlers were a thing.</target>
        </trans-unit>
        <trans-unit id="559f3ffdd386200d39a9e0ed2f0bf1bcfb8133ef" translate="yes" xml:space="preserve">
          <source>To use non-code assets with TypeScript, we need to defer the type for these imports. This requires a &lt;code&gt;custom.d.ts&lt;/code&gt; file which signifies custom definitions for TypeScript in our project. Let's set up a declaration for &lt;code&gt;.svg&lt;/code&gt; files:</source>
          <target state="translated">TypeScript에서 비 코드 자산을 사용하려면 이러한 가져 오기에 대한 유형을 연기해야합니다. 여기에는 프로젝트에서 TypeScript에 대한 사용자 정의를 나타내는 &lt;code&gt;custom.d.ts&lt;/code&gt; 파일 이 필요합니다 . &lt;code&gt;.svg&lt;/code&gt; 파일에 대한 선언을 설정합시다 :</target>
        </trans-unit>
        <trans-unit id="f47e2685aba87fc596fb60b79c57346015b6eeaf" translate="yes" xml:space="preserve">
          <source>To use this option with the CLI pass the &lt;code&gt;--allowed-hosts&lt;/code&gt; option a comma-delimited string.</source>
          <target state="translated">CLI와 함께이 옵션을 사용하려면 &lt;code&gt;--allowed-hosts&lt;/code&gt; 옵션을 쉼표로 구분 된 문자열로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7251e927f90574f1c93d0aab322bd244ce7bc38" translate="yes" xml:space="preserve">
          <source>To wait until the chunk is available (and get the exports) you need to async wait for it.</source>
          <target state="translated">청크를 사용할 수있을 때까지 기다렸다가 (내보내기를 가져 오려면) 청크를 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="2861b68689f07956f2c1c5c688dc56b07fc7f5de" translate="yes" xml:space="preserve">
          <source>To write a asset from PostCSS plugin to the webpack, need to add a message in &lt;code&gt;result.messages&lt;/code&gt;.</source>
          <target state="translated">To write a asset from PostCSS plugin to the webpack, need to add a message in &lt;code&gt;result.messages&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12cf88bed11b20e54e263c18116589d8c63d4211" translate="yes" xml:space="preserve">
          <source>To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies, i.e., TypeScript and the relevant type definitions from the &lt;a href=&quot;https://definitelytyped.org/&quot;&gt;DefinitelyTyped&lt;/a&gt; project:</source>
          <target state="translated">To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies, i.e., TypeScript and the relevant type definitions from the &lt;a href=&quot;https://definitelytyped.org/&quot;&gt;DefinitelyTyped&lt;/a&gt; project:</target>
        </trans-unit>
        <trans-unit id="cb9583a28cf56d89a0848b6749cfcca0381af814" translate="yes" xml:space="preserve">
          <source>To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies:</source>
          <target state="translated">에서 웹팩 구성을 작성하려면 &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;타이프 라이터를&lt;/a&gt; 먼저 필요한 패키지를 설치합니다 :</target>
        </trans-unit>
        <trans-unit id="ac1ee07aba30a9f1218d50f37979c7d480deb72f" translate="yes" xml:space="preserve">
          <source>To write the webpack configuration in &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies, i.e., TypeScript and the relevant type definitions from the &lt;a href=&quot;https://definitelytyped.org/&quot;&gt;DefinitelyTyped&lt;/a&gt; project:</source>
          <target state="translated">에서 웹팩 구성을 작성하려면 &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;타이프 라이터를&lt;/a&gt; 먼저 필요한 의존성, 즉, 타이프 라이터와의 관련 유형 정의 설치합니다 &lt;a href=&quot;https://definitelytyped.org/&quot;&gt;DefinitelyTyped의&lt;/a&gt; 프로젝트를 :</target>
        </trans-unit>
        <trans-unit id="b3ca19b09afec2f63af696e7e940998ab6ae784f" translate="yes" xml:space="preserve">
          <source>Toggle between the dev-server's two different modes. By default the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</source>
          <target state="translated">개발자 서버의 두 가지 모드 간을 전환합니다. 기본적으로 응용 프로그램은 &lt;em&gt;인라인 모드가&lt;/em&gt; 활성화 된 상태 로 제공됩니다 . 즉, 라이브 재로드를 처리하기 위해 스크립트가 번들에 삽입되고 빌드 메시지가 브라우저 콘솔에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="64ef870ae95d6fc2864d94e9edd1f087d3109f10" translate="yes" xml:space="preserve">
          <source>Toggle between the dev-server's two different modes. By default, the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</source>
          <target state="translated">Toggle between the dev-server's two different modes. By default, the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</target>
        </trans-unit>
        <trans-unit id="9a830c714bb2b52b8f817649335855437ebcb701" translate="yes" xml:space="preserve">
          <source>Tool</source>
          <target state="translated">Tool</target>
        </trans-unit>
        <trans-unit id="0bf58158bf93b5f1ff9e6303d80c0572926cad82" translate="yes" xml:space="preserve">
          <source>Tradeoff choice for development builds.</source>
          <target state="translated">개발 빌드를위한 트레이드 오프 선택.</target>
        </trans-unit>
        <trans-unit id="1a02f440362f76dd74ced4f9fbfee17146a758be" translate="yes" xml:space="preserve">
          <source>Transform/Conditionally load CSS by passing a transform/condition function</source>
          <target state="translated">변환 / 조건 함수를 전달하여 CSS를 변환 / 조건부로드</target>
        </trans-unit>
        <trans-unit id="626a681bf03395c3c640839f0d5ec24dccbb5e1f" translate="yes" xml:space="preserve">
          <source>Transpiling</source>
          <target state="translated">Transpiling</target>
        </trans-unit>
        <trans-unit id="238d67a83a75343b4c8e8402f4d70c59f71583f1" translate="yes" xml:space="preserve">
          <source>Treat &lt;code&gt;NW.js&lt;/code&gt; legacy &lt;code&gt;nw.gui&lt;/code&gt; module as external and load it via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat &lt;code&gt;NW.js&lt;/code&gt; legacy &lt;code&gt;nw.gui&lt;/code&gt; module as external and load it via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="87f16b9ff027c997e1c9d6f0bceb088b55cf14aa" translate="yes" xml:space="preserve">
          <source>Treat common electron built-in modules in main and preload context like &lt;code&gt;electron&lt;/code&gt;, &lt;code&gt;ipc&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat common electron built-in modules in main and preload context like &lt;code&gt;electron&lt;/code&gt; , &lt;code&gt;ipc&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="e9f41ae02b90a760fcabd383b15366a234d56ecd" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the main context like &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;ipc-main&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat electron built-in modules in the main context like &lt;code&gt;app&lt;/code&gt; , &lt;code&gt;ipc-main&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="ee569634d3cf0444081dd9cc64a066fc484cabbf" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the preload context like &lt;code&gt;web-frame&lt;/code&gt;, &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via require() when used.</source>
          <target state="translated">Treat electron built-in modules in the preload context like &lt;code&gt;web-frame&lt;/code&gt; , &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via require() when used.</target>
        </trans-unit>
        <trans-unit id="9991d90656eeda9f407b7adf531ad346ce9d05f8" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the renderer context like &lt;code&gt;web-frame&lt;/code&gt;, &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat electron built-in modules in the renderer context like &lt;code&gt;web-frame&lt;/code&gt; , &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="0c517d46707745686e1a7a1e2283d08565be6aa3" translate="yes" xml:space="preserve">
          <source>Treat node.js built-in modules like &lt;code&gt;fs&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;vm&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat node.js built-in modules like &lt;code&gt;fs&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;vm&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="5f15f4ea76883ddf6eed88e2cd6c93acefa401ed" translate="yes" xml:space="preserve">
          <source>Treat references to 'http(s)://...' and 'std:...' as external and load them via &lt;code&gt;async import()&lt;/code&gt; when used &lt;strong&gt;(Note that this external type is an &lt;code&gt;async&lt;/code&gt; module, which has various effects on the execution)&lt;/strong&gt;.</source>
          <target state="translated">Treat references to 'http(s)://...' and 'std:...' as external and load them via &lt;code&gt;async import()&lt;/code&gt; when used &lt;strong&gt;(Note that this external type is an &lt;code&gt;async&lt;/code&gt; module, which has various effects on the execution)&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="83e979056329425cb3a0b7ed82c183df1f5885cd" translate="yes" xml:space="preserve">
          <source>Treat references to &lt;code&gt;http(s)://...&lt;/code&gt; and &lt;code&gt;std:...&lt;/code&gt; as external and load them via &lt;code&gt;async import()&lt;/code&gt; when used &lt;strong&gt;(Note that this external type is an &lt;code&gt;async&lt;/code&gt; module, which has various effects on the execution)&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;http(s)://...&lt;/code&gt; 및 &lt;code&gt;std:...&lt;/code&gt; 에 대한 참조를 외부로 처리하고 사용시 &lt;code&gt;async import()&lt;/code&gt; 를 통해로드합니다 &lt;strong&gt;(이 외부 유형은 실행에 다양한 영향을 미치는 &lt;code&gt;async&lt;/code&gt; 모듈입니다).&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="eb5b85afca38d7c1fd75ac57da3aa838b7ac9ad9" translate="yes" xml:space="preserve">
          <source>Treat references to &lt;code&gt;http(s)://...&lt;/code&gt; and &lt;code&gt;std:...&lt;/code&gt; as external and load them via &lt;code&gt;import&lt;/code&gt; when used. &lt;strong&gt;(Note that this changes execution order as externals are executed before any other code in the chunk)&lt;/strong&gt;.</source>
          <target state="translated">Treat references to &lt;code&gt;http(s)://...&lt;/code&gt; and &lt;code&gt;std:...&lt;/code&gt; as external and load them via &lt;code&gt;import&lt;/code&gt; when used. &lt;strong&gt;(Note that this changes execution order as externals are executed before any other code in the chunk)&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="0342403a32191cb5b268774041560f46a913b84c" translate="yes" xml:space="preserve">
          <source>Tree Shaking</source>
          <target state="translated">나무 동요</target>
        </trans-unit>
        <trans-unit id="92ee5435c87b7237526ef2d2b3c89bdeda428523" translate="yes" xml:space="preserve">
          <source>Tries to evaluate expressions in &lt;code&gt;if (...)&lt;/code&gt; statements and ternaries to replace them with &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; for further possible dead branch elimination using hooks fired by the parser.</source>
          <target state="translated">파서에 의해 발생 된 후크를 사용하여 죽은 분기 제거를 가능하게 하기 위해 &lt;code&gt;if (...)&lt;/code&gt; 문과 삼항 에서 식을 평가 하여 &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; 로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="f48dbb4a06d50125f4b45400d23b5309c350e2b5" translate="yes" xml:space="preserve">
          <source>Triggered after chunk &lt;code&gt;id&lt;/code&gt; optimization has finished.</source>
          <target state="translated">청크 &lt;code&gt;id&lt;/code&gt; 최적화가 완료된 후 트리거 됩니다.</target>
        </trans-unit>
        <trans-unit id="7d61f3536f41d0452d7d9b53a7eecd3906189939" translate="yes" xml:space="preserve">
          <source>Triggered after resolver setup is complete.</source>
          <target state="translated">Triggered after resolver setup is complete.</target>
        </trans-unit>
        <trans-unit id="016425652fe92febb10e1a63fc9cd2be53ec09b2" translate="yes" xml:space="preserve">
          <source>Triggered at the beginning of the optimization phase.</source>
          <target state="translated">최적화 단계 시작시 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="56011266a2b4eca29eee0fd1e875499fc201e75f" translate="yes" xml:space="preserve">
          <source>Triggered before a module build has started, can be used to modify the module.</source>
          <target state="translated">Triggered before a module build has started, can be used to modify the module.</target>
        </trans-unit>
        <trans-unit id="728b9f27106bfa00dc2e96b9deec761104277599" translate="yes" xml:space="preserve">
          <source>Triggered before a module build has started.</source>
          <target state="translated">모듈 빌드가 시작되기 전에 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="6fd7fc94807f7511ee573ecde4a783dbf2b73661" translate="yes" xml:space="preserve">
          <source>Triggered before renaming an identifier to determine if the renaming is allowed. This is usually used together with the &lt;code&gt;rename&lt;/code&gt; hook.</source>
          <target state="translated">Triggered before renaming an identifier to determine if the renaming is allowed. This is usually used together with the &lt;code&gt;rename&lt;/code&gt; hook.</target>
        </trans-unit>
        <trans-unit id="12e4ce8c8ac65e98f4f7ccf18c4f4bb82a1b7ef3" translate="yes" xml:space="preserve">
          <source>Triggered to emit the hash for each chunk.</source>
          <target state="translated">Triggered to emit the hash for each chunk.</target>
        </trans-unit>
        <trans-unit id="062b6f416211a2b05dbf4d9f9fecffbdfd04964e" translate="yes" xml:space="preserve">
          <source>Triggered when an asset from a chunk was added to the compilation.</source>
          <target state="translated">Triggered when an asset from a chunk was added to the compilation.</target>
        </trans-unit>
        <trans-unit id="51bc6ac2c044f6b9afa7de612939dadb10997045" translate="yes" xml:space="preserve">
          <source>Triggered when evaluating an expression consisting in a &lt;code&gt;typeof&lt;/code&gt; of a free variable</source>
          <target state="translated">Triggered when evaluating an expression consisting in a &lt;code&gt;typeof&lt;/code&gt; of a free variable</target>
        </trans-unit>
        <trans-unit id="38a030d567f426ffe99aba462766d8b8c251af8b" translate="yes" xml:space="preserve">
          <source>Triggered when parsing a call to a member function of an object.</source>
          <target state="translated">Triggered when parsing a call to a member function of an object.</target>
        </trans-unit>
        <trans-unit id="ff6db867a66d00712678ba838427fd977f1c8d65" translate="yes" xml:space="preserve">
          <source>Triggered when parsing the &lt;code&gt;typeof&lt;/code&gt; of an identifier</source>
          <target state="translated">Triggered when parsing the &lt;code&gt;typeof&lt;/code&gt; of an identifier</target>
        </trans-unit>
        <trans-unit id="44825eac0a17d933f58f835331868e14e67ea739" translate="yes" xml:space="preserve">
          <source>Triggered when renaming to get the new identifier. This hook will be called only if &lt;code&gt;canRename&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Triggered when renaming to get the new identifier. This hook will be called only if &lt;code&gt;canRename&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e56bcdca9e64b81d4b708a360cc55517cb3865c" translate="yes" xml:space="preserve">
          <source>Triggers a re-build of the module.</source>
          <target state="translated">Triggers a re-build of the module.</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="ffb2ecf6611790daff972e263d7001c037770c42" translate="yes" xml:space="preserve">
          <source>Try to keep the chunk count below a limit</source>
          <target state="translated">청크 수를 제한 아래로 유지하십시오</target>
        </trans-unit>
        <trans-unit id="b525bcfcdd619ae45cbe7b652f2a2e93cc867f70" translate="yes" xml:space="preserve">
          <source>Try to keep the chunk size above a limit</source>
          <target state="translated">청크 크기를 제한보다 높게 유지하십시오</target>
        </trans-unit>
        <trans-unit id="d72027e0c8836ef57ef4be1e1d4b0be280682157" translate="yes" xml:space="preserve">
          <source>Turn on &lt;a href=&quot;https://en.wikipedia.org/wiki/Polling_(computer_science)&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt;, or specifying a poll interval in milliseconds:</source>
          <target state="translated">Turn on &lt;a href=&quot;https://en.wikipedia.org/wiki/Polling_(computer_science)&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt; , or specifying a poll interval in milliseconds:</target>
        </trans-unit>
        <trans-unit id="6b517438de5f4b79f54fb3ec50b752a1392cebdf" translate="yes" xml:space="preserve">
          <source>Turn on &lt;a href=&quot;https://whatis.techtarget.com/definition/polling&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt;, or specifying a poll interval in milliseconds:</source>
          <target state="translated">를 켜고 &lt;a href=&quot;https://whatis.techtarget.com/definition/polling&quot;&gt;폴링&lt;/a&gt; 전달하여 &lt;code&gt;true&lt;/code&gt; 또는 밀리 초 단위로 폴링 간격을 지정 :</target>
        </trans-unit>
        <trans-unit id="38fca6ee99a8e2eb5692ba03fc79c782860fdf0d" translate="yes" xml:space="preserve">
          <source>Turn on debugging mode</source>
          <target state="translated">디버깅 모드를 켭니다</target>
        </trans-unit>
        <trans-unit id="2b8055ed62d8e4280ad68eb434e81c48a5a0540b" translate="yes" xml:space="preserve">
          <source>Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files.</source>
          <target state="translated">Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files.</target>
        </trans-unit>
        <trans-unit id="0b364042060d283631bdc472627fff2ec14242bf" translate="yes" xml:space="preserve">
          <source>Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files. Watch mode is turned off by default:</source>
          <target state="translated">시계 모드를 켭니다. 즉, 초기 빌드 후에도 웹팩은 해결 된 파일의 변경 사항을 계속 감시합니다. 시계 모드는 기본적으로 꺼져 있습니다.</target>
        </trans-unit>
        <trans-unit id="5745eba8f5a78750634eaf8eae2c0b439123ade7" translate="yes" xml:space="preserve">
          <source>Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found.</source>
          <target state="translated">Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found.</target>
        </trans-unit>
        <trans-unit id="b9173d10bd7a6471f8b2bcda45935dfcb7aa6ea4" translate="yes" xml:space="preserve">
          <source>Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found. This property is set to &lt;code&gt;&quot;warning&quot;&lt;/code&gt; by default.</source>
          <target state="translated">힌트를 켜거나 끕니다. 또한 힌트를 찾을 때 오류나 경고가 발생하도록 웹팩에 지시합니다. 이 속성은 기본적 으로 &lt;code&gt;&quot;warning&quot;&lt;/code&gt; 로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ce6d5323234bd0947f55f8ac9407c285c721c2b" translate="yes" xml:space="preserve">
          <source>Tweak styling faster -- almost comparable to changing styles in the browser's debugger.</source>
          <target state="translated">브라우저 디버거에서 스타일을 변경하는 것과 거의 비슷한 스타일을 더 빠르게 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e9716466491e421116d059d46096213e7207c3f" translate="yes" xml:space="preserve">
          <source>Two chunk groups with names &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;about&lt;/code&gt; are created. Each of them has a chunk with a module - &lt;code&gt;./home.js&lt;/code&gt; for &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;./about.js&lt;/code&gt; for &lt;code&gt;about&lt;/code&gt;</source>
          <target state="translated">Two chunk groups with names &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;about&lt;/code&gt; are created. Each of them has a chunk with a module - &lt;code&gt;./home.js&lt;/code&gt; for &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;./about.js&lt;/code&gt; for &lt;code&gt;about&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e1a738f77891efb46fed43843ce712380ab54a1" translate="yes" xml:space="preserve">
          <source>Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-&quot;&gt;&lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#require-ensure&quot;&gt;&lt;code&gt;require.ensure&lt;/code&gt;&lt;/a&gt;. Let's try using the first of these two approaches...</source>
          <target state="translated">동적 코드 분할과 관련하여 웹팩에서 유사한 두 가지 기술을 지원합니다. 첫 번째 권장 방법은 동적 가져 오기에 대한 &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript 제안&lt;/a&gt; 을 준수 하는 &lt;a href=&quot;../api/module-methods#import-&quot;&gt; &lt;code&gt;import()&lt;/code&gt; 구문&lt;/a&gt; 을 사용하는 것 입니다. 기존의 웹 팩별 접근 방식은 &lt;a href=&quot;../api/module-methods#require-ensure&quot;&gt; &lt;code&gt;require.ensure&lt;/code&gt; &lt;/a&gt; 를 사용하는 것 입니다. 이 두 가지 방법 중 첫 번째 방법을 사용해 봅시다 ...</target>
        </trans-unit>
        <trans-unit id="79f786196af9807f2487c7f9f2c9c5b0e6bcefa0" translate="yes" xml:space="preserve">
          <source>Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-1&quot;&gt;&lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#requireensure&quot;&gt;&lt;code&gt;require.ensure&lt;/code&gt;&lt;/a&gt;. Let's try using the first of these two approaches...</source>
          <target state="translated">Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-1&quot;&gt; &lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#requireensure&quot;&gt; &lt;code&gt;require.ensure&lt;/code&gt; &lt;/a&gt;. Let's try using the first of these two approaches...</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="428777bf43ef12ea8627eb1b9ee0316b607ca80d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'fallback' | 'no-fallback'&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;'fallback' | 'no-fallback'&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ae1b145c4a39b0e7e83ae72e8f4111b86eed8e4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'module' | 'icss'&lt;/code&gt; Default: &lt;code&gt;'module'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;'module' | 'icss'&lt;/code&gt; Default: &lt;code&gt;'module'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d797f14d50313225620e9264aa69fc680580d0c8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;String\|Array&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Array&amp;lt;String\|Array&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab51657c51263d09aaad7589ff69e3c291fc2a56" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;String|Array&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Array&amp;lt;String|Array&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b66e2538b107060adcf2b101da9724ea50ebdbb" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;a href=&quot;#attributes&quot;&gt;supported tags and attributes&lt;/a&gt;.</source>
          <target state="translated">Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;a href=&quot;#attributes&quot;&gt;supported tags and attributes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="72112c57d88f6876b177934d44bae43b95877719" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;a href=&quot;#sources&quot;&gt;supported tags and attributes&lt;/a&gt;.</source>
          <target state="translated">유형 : &lt;code&gt;Array&lt;/code&gt; 기본값 : &lt;a href=&quot;#sources&quot;&gt;지원되는 태그 및 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94a229b08fb0895570dee34d92dd44e883395943" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[Function]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Array[Function]&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f15a23ea737e87dd7451dd5e0e9e29e27f4055b6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[Object]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Array[Object]&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99b4afaa36767e15dfc4084c10fbd22041b73af8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[String]&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Array[String]&lt;/code&gt; 기본값 : &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea43aa3b9bbcad220f5118da59721ce74d5876e8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean | 'keep-source-map'&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean | 'keep-source-map'&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe15db9e5caa0b84ef69c71fa55abc833556b106" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean | Number&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean | Number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1786d5f336b7023a095ff9d273b42e018467359" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48f390c9de4ea544dff9d1ec37c3523911fa118e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f822f4d91655775283eeb9acc861e91bb8593e6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt; 기본값 : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24d4453466129b8bf2e49bdf3cd712902713dd56" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93214bd39518ce99d8068fefd7f1edc5a8a7f3f1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: depends on the &lt;code&gt;compiler.devtool&lt;/code&gt; value</source>
          <target state="translated">Type: &lt;code&gt;Boolean&lt;/code&gt; Default: depends on the &lt;code&gt;compiler.devtool&lt;/code&gt; value</target>
        </trans-unit>
        <trans-unit id="d0cd7a32d303176f22a8a47fdbbc0c0402bf5df0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean\|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean\|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c3a84f78b9d3e392a8a1e606b20988e0735c342" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Function&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Function&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b84b9bc7aaebed88083d6cb3754bfb6954242dfe" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|Number&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c62e5b8c87e9d032ff183d6f9cd74472f99bd24d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17d862ded5f60594aaa5a4aabca994ffc0c7fb32" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Number|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faedbfd673ffabf3607ce178a4072cbd053dfb2d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2af825aa5b7de869bcdcd5a9fc87ff4eaff1317b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|Object&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d4d0914369c702e38a062873836b30ee0b138b5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt; (see below for details around &lt;code&gt;devtool&lt;/code&gt; value and &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin)</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt; (see below for details around &lt;code&gt;devtool&lt;/code&gt; value and &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin)</target>
        </trans-unit>
        <trans-unit id="dca87b7b4cae45a1d3ccaaab1fe59d018992a8a4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7511ed55d65f2776bfe6abe75b8133b9740c4f53" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt; in production mode, otherwise &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt; in production mode, otherwise &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3e2c3627ef890c719fc9b134a179935ff2387a5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|RegExp|Function&lt;/code&gt; Default: &lt;code&gt;'true'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|RegExp|Function&lt;/code&gt; Default: &lt;code&gt;'true'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="057522ad3882aff07200321caa3a07f469a2cead" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;'auto'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;'auto'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a30c25942f7bc483ed30429fb6dc547c6680a4e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;base64&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;base64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a45789cbb27a158b6b7a1d196c4567be588ed494" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fb36b090b010171442989619a012304a77f870f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3c6f014e4aa52e4a8bc8886f59fb01087a593d8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8bc98d2d5284dfada844aa73542007514bbde53" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: based from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: based from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c102d3840abe1451f84b0caecaf1f118a0f7975e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/*! For license information please see ${commentsFile} */&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;/*! For license information please see ${commentsFile} */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89d948d309ca4eaddf50a8918ca60c8e8f6d2f83" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc391969d33770757256cb055768d96590ebb7a3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cad21ca15fec76b4ab2909c223d32ff5cbcd86b2" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: based on filename, &lt;code&gt;true&lt;/code&gt; for all files matching &lt;code&gt;/\.module\.\w+$/i.test(filename)&lt;/code&gt; regular expression, more information you can read &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#auto&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: based on filename, &lt;code&gt;true&lt;/code&gt; for all files matching &lt;code&gt;/\.module\.\w+$/i.test(filename)&lt;/code&gt; regular expression, more information you can read &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#auto&quot;&gt;here&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8868d15eb3fe0352c846a246f7ea008f1e7c3180" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2765b2640ca4d35ed492a2c7d20819253ddc2db8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2ce1551a2de3757ecac787eb21b737c666f1d63" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="260402fdd52f9d5162c6febf7c4529ca530706d0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(defaultCacheKeys, file) -&amp;gt; Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;defaultCacheKeys =&amp;gt; defaultCacheKeys&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function&amp;lt;(defaultCacheKeys, file) -&amp;gt; Object&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;defaultCacheKeys =&amp;gt; defaultCacheKeys&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="232775346e1ad8a667d0d298e7c0e473ece45de5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(warning, file, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Function&amp;lt;(warning, file, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5b22bb98280473acea9cd815eda355202cba26a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(warning, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function&amp;lt;(warning, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5833556be7f1faaca60ae6285cccf1d31bdf684" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21907eb9edf04f7610f5c798fdb575c9852fcaa9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="487fc2d2b16308cc82996b1776bbdb64fed169d9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;(mimetype, encoding, content, resourcePath) =&amp;gt; mimetype;encoding,base64_content&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;(mimetype, encoding, content, resourcePath) =&amp;gt; mimetype;encoding,base64_content&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ed6bae83b76c8a2fcf92f4b5e1cf90a0af91066" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89890a91238d28b89af456ee79a5469a9bc6dd45" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function|Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function|Object&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68be30dbb80b283998a4620ae5f2cdfd8a10de7a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32ff5d99cf47a5f4a586c2e015fec8c7af2f831d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0.8&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0.8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a975206f2485cebaf2024e62ab2604b7a355028" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c50fda292f228e964a3c134d2d898e59768354f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;9999&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Number&lt;/code&gt; 기본값 : &lt;code&gt;9999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c6e568c15b55b37e63744b174b2e3ca5a7ffc31" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;Math.max(1, os.cpus().length - 1)&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;Math.max(1, os.cpus().length - 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0df7a0769e52452e3df73f39fb7b1a59df2977b3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Number&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87a72a4a194580af6f23ca7095e7565efd80de57" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa1722ad0036438a3b69cf0e3b5d3e0af63f80d4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/fabiosantoscode/terser#minify-options&quot;&gt;default&lt;/a&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt; 기본값 : &lt;a href=&quot;https://github.com/fabiosantoscode/terser#minify-options&quot;&gt;기본값&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f3586819985ed75b8b2d02a46f0e8aaf553b492" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/terser-js/terser#minify-options&quot;&gt;default&lt;/a&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/terser-js/terser#minify-options&quot;&gt;default&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="690a74e8c6ac1a54d1b06a87192c7609fc70939c" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;require('stylelint').formatters.string&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt; 기본값 : &lt;code&gt;require('stylelint').formatters.string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e767c91c234faccef21d5915638af3d37264e2cd" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;sass&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;sass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a00bf287d8473e657b95694eeeebd890a935fbff" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00286afe4bf29a7632e5621860e7cf14fbbeb610" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ bare: true }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ bare: true }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac88d9846b5205b48538e6913fecc3b59ec6b9fe" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ caseSensitive: true, collapseWhitespace: true, conservativeCollapse: true, keepClosingSlash: true, minifyCSS: true, minifyJS: true, removeComments: true, removeScriptTypeAttributes: true, removeStyleLinkTypeAttributes: true, }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ caseSensitive: true, collapseWhitespace: true, conservativeCollapse: true, keepClosingSlash: true, minifyCSS: true, minifyJS: true, removeComments: true, removeScriptTypeAttributes: true, removeStyleLinkTypeAttributes: true, }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="383bd82c3075c01f42b60082fe4014b73dff736e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ level: 9 }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ level: 9 }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f88059faf76f0131224a4309063319047c83e5f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ plugins: [] }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ plugins: [] }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be10b6ef21673118a1241c6f0b47058097bddac1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ preset: 'default' }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ preset: 'default' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55dffc0c58cd2987f27cc35a619490ed080aa712" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ replacer: null, space: null }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ replacer: null, space: null }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bbb462263241cd2ba3ee41e7774865902f57d06" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d50a1962b00c1ebe4e15df59e3ba006efd8e2e76" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&amp;lt;Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object|Function&amp;lt;Object&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3090c9a1f4e5c2003962edd1f7ff139b04f44e6b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb7cf8ded73876568c09a569a8a085e063aae549" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{ relativeUrls: true }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{ relativeUrls: true }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb52c5e9b3ebe3a7d25c0a508a20473276138ca9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d80c0b8a01c0dab53d1f380627bfecbf1beb280a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: defaults values for Sass implementation</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: defaults values for Sass implementation</target>
        </trans-unit>
        <trans-unit id="f1e7391bdda68bf329c48bd6c9153a513715a424" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;RegExp&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ad0c59a95b0e6d486f10a3a9d7eba6a82efa298" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Regex|Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;&lt;/code&gt; Default: &lt;code&gt;${file}.LICENSE&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Regex|Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;${file}.LICENSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9497118568642094db37dca1d955af12afd5eca" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.js(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;/\.js(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ec6af7a195975bd36af2b460624abae040ba7ce" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c3e574cd51824e490cce46575d42da6d5fbe4e3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String | Array[String]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String | Array[String]&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dad081ed1244c0f0182b6af2ed80d0835e74f031" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b67b322475209b0ccffe39f447c84533fd7ff84d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;a href=&quot;../configuration/entry-context#context&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;a href=&quot;../configuration/entry-context#context&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9daedfc49f97abea259191b53260374e4b184e0b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[hash:base64]'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[hash:base64]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c20abb3d6638283db62af7b659a1c54606b93ac9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[path][name][ext]'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[path][name][ext]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54223bad6aa67e8e06b399d5a079e2fe042e5381" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'file-loader'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;'file-loader'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3450d9d063d640321d1424d901a3cc0370a43af5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'hex'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;'hex'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eef1e4b6ef8dbdfffcb778a4aa5c069e90145b08" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md4'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md4'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f09c525848a9e04af4422213f7421822bdec9703" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md5'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;'md5'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d338a21826be5e359d37d9946a8a9cc06244641e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;(file extension)&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;(file extension)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="458860cc8794fa1dce5c93964ce4854602e52c79" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;[hash].worker.js&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;[hash].worker.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64522537628ac15d313112de255758c15749456e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.context&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;compiler.context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8032c017e30faabb2408749fe2fd317dc850d226" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.options.output&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.options.output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2eabe9055d6691bbf54d928e4538a230fed05fc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.basename&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;file.basename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="585c4c6c689042508af37c0e2edc914428880476" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.directory&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.directory&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
