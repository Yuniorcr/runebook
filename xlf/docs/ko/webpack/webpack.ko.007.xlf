<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="0acfe5a92bfd936f558865b7784ff994e921d19f" translate="yes" xml:space="preserve">
          <source>The same shortcut as an array can be used for the return value (i.e. &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt;).</source>
          <target state="translated">The same shortcut as an array can be used for the return value (i.e. &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2b665da5e519d5e540da3b313a41a99cd0ecf3a1" translate="yes" xml:space="preserve">
          <source>The sass-loader requires &lt;a href=&quot;https://github.com/webpack&quot;&gt;webpack&lt;/a&gt; as a &lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt;&lt;code&gt;peerDependency&lt;/code&gt;&lt;/a&gt; and it requires you to install either &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; on your own. This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</source>
          <target state="translated">sass-loader에는 &lt;a href=&quot;https://github.com/webpack&quot;&gt;peerDependency&lt;/a&gt; 로 &lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt; &lt;code&gt;peerDependency&lt;/code&gt; &lt;/a&gt; 이 필요하며 &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; 를 직접 설치해야합니다 . 이를 통해 모든 종속성의 버전을 제어하고 사용할 Sass 구현을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34aa382924eb34a97b5ff040bbe8c678d0951eb6" translate="yes" xml:space="preserve">
          <source>The second argument a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 번째 인수는 &lt;code&gt;string&lt;/code&gt; 또는 &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f40ba461a9658ddbae40cc1a6452af405d39a0a" translate="yes" xml:space="preserve">
          <source>The second argument is a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The second argument is a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="df04995c9f49009e24f0c183707f430b6ea80c03" translate="yes" xml:space="preserve">
          <source>The second argument is an array of file paths to watch for. Pass &lt;code&gt;true&lt;/code&gt; instead of &lt;code&gt;[string]&lt;/code&gt; here to flag the module as uncacheable.</source>
          <target state="translated">The second argument is an array of file paths to watch for. Pass &lt;code&gt;true&lt;/code&gt; instead of &lt;code&gt;[string]&lt;/code&gt; here to flag the module as uncacheable.</target>
        </trans-unit>
        <trans-unit id="9eb3a2178fb08052e95c8397dfaf7a97e66d1c0a" translate="yes" xml:space="preserve">
          <source>The server should be accessible on &lt;code&gt;http://10.10.10.61:8080&lt;/code&gt; now. If you make a change in &lt;code&gt;app.js&lt;/code&gt;, it should live reload.</source>
          <target state="translated">서버는 &lt;code&gt;http://10.10.10.61:8080&lt;/code&gt; 에서 액세스 할 수 있어야합니다 . &lt;code&gt;app.js&lt;/code&gt; 를 변경 하면 실시간으로 새로 고침됩니다.</target>
        </trans-unit>
        <trans-unit id="36694462fb15a2bc75a3fea2f02d4342fbda1a03" translate="yes" xml:space="preserve">
          <source>The single entry syntax for the &lt;code&gt;entry&lt;/code&gt; property is a shorthand for:</source>
          <target state="translated">&lt;code&gt;entry&lt;/code&gt; 속성 의 단일 항목 구문 은 다음과 같은 약어입니다.</target>
        </trans-unit>
        <trans-unit id="115c455da79a8006628c20e59f638f4b9b64b4d0" translate="yes" xml:space="preserve">
          <source>The source code you, and maybe your team, have written.</source>
          <target state="translated">당신과 아마도 당신의 팀이 작성한 소스 코드.</target>
        </trans-unit>
        <trans-unit id="28cb8cd49852f753c9f2be8f92238b51bbe3f7ae" translate="yes" xml:space="preserve">
          <source>The spec for &lt;code&gt;import&lt;/code&gt; doesn't allow control over the chunk's name or other properties as &quot;chunks&quot; are only a concept within webpack. Luckily webpack allows some special parameters via comments so as to not break the spec:</source>
          <target state="translated">&quot;청크&quot;는 웹팩 내의 개념 일 뿐이므로 &lt;code&gt;import&lt;/code&gt; 사양 에서는 청크 이름 또는 기타 속성을 제어 할 수 없습니다. 운 좋게 webpack은 사양을 위반하지 않도록 주석을 통해 일부 특수 매개 변수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3b0675c0031efa142feb44abd09373964cd599c1" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use.</source>
          <target state="translated">The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use.</target>
        </trans-unit>
        <trans-unit id="13755577ac5a47dc78ee4c995fe1dfc9e99d9c04" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use. It takes either a [Node Sass][] or a [Dart Sass][] module. For example, to use Dart Sass, you'd pass:</source>
          <target state="translated">특수 &lt;code&gt;implementation&lt;/code&gt; 옵션은 사용할 Sass 구현을 결정합니다. [Node Sass] [] 또는 [Dart Sass] [] 모듈이 필요합니다. 예를 들어 Dart Sass를 사용하려면 다음을 통과하십시오.</target>
        </trans-unit>
        <trans-unit id="5c4b162f681173ae925ce59ee2d62441d980bbc0" translate="yes" xml:space="preserve">
          <source>The steps above would be shortened to:</source>
          <target state="translated">위의 단계는 다음과 같이 단축됩니다.</target>
        </trans-unit>
        <trans-unit id="c086ef368c2e61193dc23f5a88ecd75a1567c8f6" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;:local(.className)&lt;/code&gt; can be used to declare &lt;code&gt;className&lt;/code&gt; in the local scope. The local identifiers are exported by the module.</source>
          <target state="translated">&lt;code&gt;:local(.className)&lt;/code&gt; 구문을 사용 하여 로컬 범위에서 &lt;code&gt;className&lt;/code&gt; 을 선언 할 수 있습니다 . 로컬 식별자는 모듈에서 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="6c080a2f2285ca1d1604a8b397e768aea30b9793" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1a16d57fa62224eed23c5bf7c1e111292049ad9" translate="yes" xml:space="preserve">
          <source>The target asset filename</source>
          <target state="translated">The target asset filename</target>
        </trans-unit>
        <trans-unit id="2716905e673426c395a43315d25accc4c07f4a9b" translate="yes" xml:space="preserve">
          <source>The target asset filename.</source>
          <target state="translated">The target asset filename.</target>
        </trans-unit>
        <trans-unit id="636a5736cf2581279ebfb2a0261adf16ae389bb9" translate="yes" xml:space="preserve">
          <source>The target asset name. &lt;code&gt;[file]&lt;/code&gt; is replaced with the original asset. &lt;code&gt;[path]&lt;/code&gt; is replaced with the path of the original asset and &lt;code&gt;[query]&lt;/code&gt; with the query</source>
          <target state="translated">대상 자산 이름 &lt;code&gt;[file]&lt;/code&gt; 이 원래 자산으로 교체되었습니다. &lt;code&gt;[path]&lt;/code&gt; 는 원래 자산의 경로로 대체되고 &lt;code&gt;[query]&lt;/code&gt; 는 쿼리 로 대체됩니다</target>
        </trans-unit>
        <trans-unit id="177bdd7144528e0a066a492e3ba76b2ce123f46a" translate="yes" xml:space="preserve">
          <source>The target module is called with two arguments: &lt;code&gt;(options, loaderContext)&lt;/code&gt;</source>
          <target state="translated">The target module is called with two arguments: &lt;code&gt;(options, loaderContext)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eba2325dc692f9ab9bafbbb2beda8299b674eba5" translate="yes" xml:space="preserve">
          <source>The third-party &lt;a href=&quot;https://github.com/mrsteele/dotenv-webpack&quot;&gt;&lt;code&gt;DotenvPlugin&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;dotenv-webpack&lt;/code&gt;) allows you to expose (a subset of) &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv variables&lt;/a&gt;:</source>
          <target state="translated">타사 &lt;a href=&quot;https://github.com/mrsteele/dotenv-webpack&quot;&gt; &lt;code&gt;DotenvPlugin&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;dotenv-webpack&lt;/code&gt; )을 사용하면 &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv 변수를&lt;/a&gt; 서브 세트로 노출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba0623dec4dcfaa3539a27d267af37d4a6c6159b" translate="yes" xml:space="preserve">
          <source>The tools in this guide are &lt;strong&gt;only meant for development&lt;/strong&gt;, please &lt;strong&gt;avoid&lt;/strong&gt; using them in production!</source>
          <target state="translated">이 안내서의 도구는 &lt;strong&gt;개발 용&lt;/strong&gt; 이므로 프로덕션 &lt;strong&gt;환경&lt;/strong&gt; 에서는 사용 &lt;strong&gt;하지 마십시오&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="d03833fb081139e2861c0b6bac6df6e16c42c69b" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;output&lt;/code&gt; key contains set of options instructing webpack on how and where it should output your bundles, assets and anything else you bundle or load with webpack.</source>
          <target state="translated">최상위 레벨 &lt;code&gt;output&lt;/code&gt; 키에는 번들, 자산 및 웹팩과 함께 번들 또는로드하는 항목을 출력하는 방법과 위치에 대한 웹팩을 지시하는 옵션 세트가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="23ddc8426f41fcf0c2f24729e02738cbc0c4ea94" translate="yes" xml:space="preserve">
          <source>The top-level structure of the output JSON file is fairly straightforward but there are a few nested data structures as well. Each nested structure has a dedicated section below to make this document more consumable. Note that you can click links within the top-level structure below to jump to relevant sections and documentation:</source>
          <target state="translated">출력 JSON 파일의 최상위 구조는 매우 간단하지만 중첩 된 데이터 구조도 있습니다. 각 중첩 구조에는 아래에 전용 섹션이있어이 문서를보다 소모품으로 만들 수 있습니다. 아래의 최상위 구조 내에서 링크를 클릭하면 관련 섹션 및 문서로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21fac4f66ee3d2ee67766bb850f5c7ffd7ea15c9" translate="yes" xml:space="preserve">
          <source>The total modules count is unknown in advance and changes during the build. This may cause inaccurate progress percentage.</source>
          <target state="translated">The total modules count is unknown in advance and changes during the build. This may cause inaccurate progress percentage.</target>
        </trans-unit>
        <trans-unit id="bcc561d5b45341ac9ae52e7eceff1b71c210b154" translate="yes" xml:space="preserve">
          <source>The type for exposing the exports of the entry point as library</source>
          <target state="translated">진입 점 내보내기를 라이브러리로 노출하기위한 유형</target>
        </trans-unit>
        <trans-unit id="1b0130c377a6b1943c155f390a9bb614091aca89" translate="yes" xml:space="preserve">
          <source>The type of hash that the has function should use. Valid values include: &lt;code&gt;md4&lt;/code&gt;, &lt;code&gt;md5&lt;/code&gt;, &lt;code&gt;sha1&lt;/code&gt;, &lt;code&gt;sha256&lt;/code&gt;, and &lt;code&gt;sha512&lt;/code&gt;.</source>
          <target state="translated">The type of hash that the has function should use. Valid values include: &lt;code&gt;md4&lt;/code&gt; , &lt;code&gt;md5&lt;/code&gt; , &lt;code&gt;sha1&lt;/code&gt; , &lt;code&gt;sha256&lt;/code&gt; , and &lt;code&gt;sha512&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52496825e602d46c2484208661a0dbf58d19c31d" translate="yes" xml:space="preserve">
          <source>The type of hash that the has function should use. Valid values include: md5, sha1, sha256, and sha512.</source>
          <target state="translated">has 함수가 사용해야하는 해시 유형입니다. 유효한 값은 md5, sha1, sha256 및 sha512입니다.</target>
        </trans-unit>
        <trans-unit id="eb1ba693e91aeced7bfd7d3c4973add619d0c630" translate="yes" xml:space="preserve">
          <source>The update is prepared and available</source>
          <target state="translated">업데이트 준비 및 사용 가능</target>
        </trans-unit>
        <trans-unit id="61a9637f0952375cb9aed04469dd726cfd952673" translate="yes" xml:space="preserve">
          <source>The updated &lt;a href=&quot;manifest&quot;&gt;manifest&lt;/a&gt; (JSON)</source>
          <target state="translated">업데이트 된 &lt;a href=&quot;manifest&quot;&gt;매니페스트&lt;/a&gt; (JSON)</target>
        </trans-unit>
        <trans-unit id="b7f04ddab5440093506974af2f71afb5c69d6443" translate="yes" xml:space="preserve">
          <source>The usage of these properties is highly discouraged since we are planning to remove them from the context. They are still listed here for documentation purposes.</source>
          <target state="translated">이러한 속성은 컨텍스트에서 제거 할 계획이므로 사용하지 않는 것이 좋습니다. 문서화 목적으로 여기에 계속 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="09a01ba6fc5ac28730420b58f620f492ea97a0a5" translate="yes" xml:space="preserve">
          <source>The usage specification for the library use will be as follows:</source>
          <target state="translated">라이브러리 사용에 대한 사용 사양은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad8f6ee6214c162258ff694b7015ecaf7841b5c9" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;System.import&lt;/code&gt; in webpack &lt;a href=&quot;https://github.com/webpack/webpack/issues/2163&quot;&gt;did not fit the proposed spec&lt;/a&gt;, so it was deprecated in webpack &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v2.1.0-beta.28&quot;&gt;2.1.0-beta.28&lt;/a&gt; in favor of &lt;code&gt;import()&lt;/code&gt;.</source>
          <target state="translated">webpack에서 &lt;code&gt;System.import&lt;/code&gt; 를 사용하는 &lt;a href=&quot;https://github.com/webpack/webpack/issues/2163&quot;&gt;것이 제안 된 사양에 맞지&lt;/a&gt; 않으므로 &lt;code&gt;import()&lt;/code&gt; 를 위해 webpack &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v2.1.0-beta.28&quot;&gt;2.1.0-beta.28&lt;/a&gt; 에서 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="29aed52fbed5a1ee08cf94c8c33cc34833f0cd7d" translate="yes" xml:space="preserve">
          <source>The use of IIFEs led to tools like Make, Gulp, Grunt, Broccoli or Brunch. These tools are known as task runners, and they concatenate all your project files together.</source>
          <target state="translated">The use of IIFEs led to tools like Make, Gulp, Grunt, Broccoli or Brunch. These tools are known as task runners, and they concatenate all your project files together.</target>
        </trans-unit>
        <trans-unit id="43ce4cf602e81313a6d20c96af3f2f1a73a256a9" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;&quot;single&quot;&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</source>
          <target state="translated">&lt;code&gt;&quot;single&quot;&lt;/code&gt; 값 은 대신 생성 된 모든 청크에 대해 공유 할 런타임 파일을 작성합니다. 이 설정은 다음에 대한 별명입니다.</target>
        </trans-unit>
        <trans-unit id="790b8c06e5a192fd1f0e912883db250944958c91" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;'single'&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</source>
          <target state="translated">The value &lt;code&gt;'single'&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</target>
        </trans-unit>
        <trans-unit id="0781638151e5add1c7a964dc64eef876b353008e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;BUILT_AT&lt;/code&gt; would be the time at which the &lt;code&gt;'sample.txt'&lt;/code&gt; was last updated in the file system, e.g. &lt;code&gt;1597953013291&lt;/code&gt;.</source>
          <target state="translated">The value of &lt;code&gt;BUILT_AT&lt;/code&gt; would be the time at which the &lt;code&gt;'sample.txt'&lt;/code&gt; was last updated in the file system, e.g. &lt;code&gt;1597953013291&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1229e71274c5a0848ada24997f99c0e90c13985" translate="yes" xml:space="preserve">
          <source>The value of the option is prefixed to every URL created by the runtime or loaders. Because of this &lt;strong&gt;the value of this option ends with &lt;code&gt;/&lt;/code&gt;&lt;/strong&gt; in most cases.</source>
          <target state="translated">옵션 값은 런타임 또는 로더가 작성한 모든 URL 앞에 접두어가 붙습니다. 이 때문에 &lt;strong&gt;이 옵션 종료의 값 &lt;code&gt;/&lt;/code&gt; &lt;/strong&gt; 대부분의 경우이다.</target>
        </trans-unit>
        <trans-unit id="89761bd1af99839698fc977f7b95894b8d804bab" translate="yes" xml:space="preserve">
          <source>The values will be inlined into the code allowing a minification pass to remove the redundant conditional.</source>
          <target state="translated">값이 코드에 인라인되어 최소화 조건이 중복 제거되도록 최소화 단계가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a9aa12557f06576dffeddc570ca96e258d06e4f9" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;MyLibrary&lt;/code&gt; will be bound with the return value of your entry file, if the resulting output is included as a script tag in an HTML page.</source>
          <target state="translated">결과 출력이 HTML 페이지에 스크립트 태그로 포함 된 경우 &lt;code&gt;MyLibrary&lt;/code&gt; 변수 는 입력 파일의 반환 값에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="adc4f01ea35788d18caa049991ad53d743ab4a33" translate="yes" xml:space="preserve">
          <source>The way this is accomplished is the &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; package.json property.</source>
          <target state="translated">이것이 달성되는 방식은 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; package.json 특성입니다.</target>
        </trans-unit>
        <trans-unit id="cc0f8180a2809a16c731d6f278b809d648c76948" translate="yes" xml:space="preserve">
          <source>The webcomponent polyfills must be added in a specific order. If you do not delay loading the main bundle with your components, you will see the following exceptions in the browser console:</source>
          <target state="translated">웹 컴포넌트 폴리 필은 특정 순서로 추가해야합니다. 컴포넌트와 함께 기본 번들로드를 지연하지 않으면 브라우저 콘솔에 다음 예외가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="891b65ff2555253127d610f04559b1a2a11cfb73" translate="yes" xml:space="preserve">
          <source>The webpack 2 release came with built-in support for ES2015 modules (alias &lt;em&gt;harmony modules&lt;/em&gt;) as well as unused module export detection. The new webpack 4 release expands on this capability with a way to provide hints to the compiler via the &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt;&lt;code&gt;package.json&lt;/code&gt; property to denote which files in your project are &quot;pure&quot; and therefore safe to prune if unused.</source>
          <target state="translated">webpack 2 릴리스에는 ES2015 모듈 (별칭 &lt;em&gt;하모니 모듈&lt;/em&gt; ) 및 사용되지 않은 모듈 내보내기 감지 기능이 내장되어 있습니다. 새로운 webpack 4 릴리스는 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; &lt;code&gt;package.json&lt;/code&gt; 속성을 통해 컴파일러에 힌트를 제공 하여 프로젝트에서 &quot;순수한&quot;파일을 나타내므로 사용하지 않을 경우 정리할 수있는 방법으로이 기능을 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="478a5519b2320811d6017390c8de571fe8e886eb" translate="yes" xml:space="preserve">
          <source>The webpack &lt;code&gt;target&lt;/code&gt; property is not to be confused with the &lt;code&gt;output.libraryTarget&lt;/code&gt; property. For more information see &lt;a href=&quot;output&quot;&gt;our guide&lt;/a&gt; on the &lt;code&gt;output&lt;/code&gt; property.</source>
          <target state="translated">웹팩 &lt;code&gt;target&lt;/code&gt; 특성을 &lt;code&gt;output.libraryTarget&lt;/code&gt; 특성 과 혼동하지 마십시오 . 자세한 내용 은 &lt;code&gt;output&lt;/code&gt; 속성 에 &lt;a href=&quot;output&quot;&gt;대한 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8eed51fad4553755fee39d9ff56da10a140db934" translate="yes" xml:space="preserve">
          <source>The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt;&lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt;. For example, &lt;code&gt;--env production&lt;/code&gt; or &lt;code&gt;--env NODE_ENV=local&lt;/code&gt; (&lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="translated">The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt; &lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt; . For example, &lt;code&gt;--env production&lt;/code&gt; or &lt;code&gt;--env NODE_ENV=local&lt;/code&gt; ( &lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</target>
        </trans-unit>
        <trans-unit id="67d0c64e1b2084b3dd8a7172e708b0db5df6c2ff" translate="yes" xml:space="preserve">
          <source>The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt;&lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt;. For example, &lt;code&gt;--env.production&lt;/code&gt; or &lt;code&gt;--env.NODE_ENV=local&lt;/code&gt; (&lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="translated">webpack 명령 줄 &lt;a href=&quot;../api/cli#environment-options&quot;&gt;환경 옵션 &lt;/a&gt; &lt;code&gt;--env&lt;/code&gt; 를 사용하면 원하는만큼 환경 변수를 전달할 수 있습니다. 환경 변수는 &lt;code&gt;webpack.config.js&lt;/code&gt; 에서 액세스 할 수 있습니다 . 예를 들어 &lt;code&gt;--env.production&lt;/code&gt; 또는 &lt;code&gt;--env.NODE_ENV=local&lt;/code&gt; ( &lt;code&gt;NODE_ENV&lt;/code&gt; 는 일반적으로 환경 유형을 정의하는 데 사용됩니다 ( &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;여기&lt;/a&gt; 참조 )).</target>
        </trans-unit>
        <trans-unit id="2fd569f3866762654c84dc07b32b03a8679ee57a" translate="yes" xml:space="preserve">
          <source>The webpack repository contains an &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;example showing the effect of all &lt;code&gt;devtool&lt;/code&gt; variants&lt;/a&gt;. Those examples will likely help you to understand the differences.</source>
          <target state="translated">웹팩 저장소에는 &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;모든 &lt;code&gt;devtool&lt;/code&gt; 변형 의 영향을 보여주는 예제&lt;/a&gt; 가 포함되어 있습니다 . 이러한 예는 차이점을 이해하는 데 도움이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="2124200555434f2d7def0b1a661c16c179c98b22" translate="yes" xml:space="preserve">
          <source>The webpack-dev-server also takes a hint from &lt;code&gt;publicPath&lt;/code&gt;, using it to determine where to serve the output files from.</source>
          <target state="translated">webpack-dev-server는 &lt;code&gt;publicPath&lt;/code&gt; 에서 힌트를 가져 와서 출력 파일을 제공 할 위치를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a1a810a24b9f17b1d07f0266bc2e5374f6b81734" translate="yes" xml:space="preserve">
          <source>The worker file can import dependencies just like any other file:</source>
          <target state="translated">작업자 파일은 다른 파일과 마찬가지로 종속성을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f318d1321d0bcb60d6c6c01420fcb068660bff69" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;import&lt;/code&gt; the target file somewhere in your app:</source>
          <target state="translated">그런 다음 앱 어딘가에 대상 파일을 &lt;code&gt;import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09595a03296cb3c16fa26d3351525c0c0ce44925" translate="yes" xml:space="preserve">
          <source>Then add the loader and the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">Then add the loader and the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</target>
        </trans-unit>
        <trans-unit id="d0a1f0c3e9f53d1794b531be56e8b463d1ffeef7" translate="yes" xml:space="preserve">
          <source>Then add the loader to the desired &lt;code&gt;import&lt;/code&gt; statement or &lt;code&gt;require&lt;/code&gt; calls. For example:</source>
          <target state="translated">Then add the loader to the desired &lt;code&gt;import&lt;/code&gt; statement or &lt;code&gt;require&lt;/code&gt; calls. For example:</target>
        </trans-unit>
        <trans-unit id="35f38ddf8489e854be4dc0f70af5f6fa83090c8f" translate="yes" xml:space="preserve">
          <source>Then add the loader to the desired &lt;code&gt;require&lt;/code&gt; calls. For example:</source>
          <target state="translated">그런 다음 원하는 &lt;code&gt;require&lt;/code&gt; 호출에 로더를 추가하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ffad5e3e9f9bce8ff26817bbf8bcb40fe6825333" translate="yes" xml:space="preserve">
          <source>Then add the loader to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">그런 다음 로더를 &lt;code&gt;webpack&lt;/code&gt; 구성에 추가하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ea0023f11d6d17c7ac2dae0c06423102bd8bdcb" translate="yes" xml:space="preserve">
          <source>Then add the loader to your Webpack configuration. For example:</source>
          <target state="translated">Then add the loader to your Webpack configuration. For example:</target>
        </trans-unit>
        <trans-unit id="5ecc72b143ba414bace5339e99ab892cad6a01ae" translate="yes" xml:space="preserve">
          <source>Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">그런 다음 &lt;code&gt;webpack&lt;/code&gt; 구성에 플러그인을 추가하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0b2c9085fe12a59ddcd2718f3bb1bb0dfc95a710" translate="yes" xml:space="preserve">
          <source>Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; configuration. For example:</source>
          <target state="translated">Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; configuration. For example:</target>
        </trans-unit>
        <trans-unit id="aa553c5c8715ed65e20b9514b424640be97e4c70" translate="yes" xml:space="preserve">
          <source>Then import that config using the keyword you're looking for in the regexp:</source>
          <target state="translated">그런 다음 정규 표현식에서 찾고있는 키워드를 사용하여 해당 구성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c8f64d12495baa2edb4cc73d230c9c5b8f381f64" translate="yes" xml:space="preserve">
          <source>Then import that configuration using the keyword you're looking for in the regexp:</source>
          <target state="translated">Then import that configuration using the keyword you're looking for in the regexp:</target>
        </trans-unit>
        <trans-unit id="cb2125d4922a805933e12a6b7b007a9414ad8b65" translate="yes" xml:space="preserve">
          <source>Then in any of our source code:</source>
          <target state="translated">그런 다음 소스 코드 중 하나에서</target>
        </trans-unit>
        <trans-unit id="eba20bf51e1fac8e7c59f5ae2aa0c0f1ac3c67fd" translate="yes" xml:space="preserve">
          <source>Then invoke the loader through a require like so:</source>
          <target state="translated">그런 다음 요구 사항을 통해 로더를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="d73eb206650f19435ae7b09b1dd4c91b4d7875da" translate="yes" xml:space="preserve">
          <source>Then modify your &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;webpack.config.js&lt;/code&gt; 를 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ece6c64eaee4ab7ee3f8b124192a78d7721667b" translate="yes" xml:space="preserve">
          <source>Then register a configuration and load the task:</source>
          <target state="translated">그런 다음 구성을 등록하고 태스크를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="1079055dbdfefa1ebd4ed5f99bb4f3a3ab94f6aa" translate="yes" xml:space="preserve">
          <source>Then require the webpack module in your Node.js script:</source>
          <target state="translated">그런 다음 Node.js 스크립트에 웹팩 모듈이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="59ed0740687cc965bad0e350a9024363567dd315" translate="yes" xml:space="preserve">
          <source>Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-path&lt;/code&gt; like so:</source>
          <target state="translated">그런 다음 &lt;code&gt;tsconfig-path&lt;/code&gt; 에서 제공 한 환경 변수 &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; 를 다음과 같이 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a9898e443fcd095f3f8aadd44457f429c751689" translate="yes" xml:space="preserve">
          <source>Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-paths&lt;/code&gt; like so:</source>
          <target state="translated">Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-paths&lt;/code&gt; like so:</target>
        </trans-unit>
        <trans-unit id="1cf2753baac23274b2f50819a0b259179670e04c" translate="yes" xml:space="preserve">
          <source>Then the build output will also display the error (Similar to &lt;code&gt;this.emitError&lt;/code&gt;):</source>
          <target state="translated">Then the build output will also display the error (Similar to &lt;code&gt;this.emitError&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="2d06c116838f1f06f475188bff07edbe869d71d5" translate="yes" xml:space="preserve">
          <source>Then use &lt;code&gt;this.answer&lt;/code&gt; to get its value in the loader:</source>
          <target state="translated">Then use &lt;code&gt;this.answer&lt;/code&gt; to get its value in the loader:</target>
        </trans-unit>
        <trans-unit id="188304fa613a9305300549e92dfb0591f625001b" translate="yes" xml:space="preserve">
          <source>Then use it in code:</source>
          <target state="translated">Then use it in code:</target>
        </trans-unit>
        <trans-unit id="667f02d92bdbdede5b7c2dd5cadd7691d23cc47e" translate="yes" xml:space="preserve">
          <source>Then you can easily disable the AMD path by writing</source>
          <target state="translated">그런 다음 작성하여 AMD 경로를 쉽게 비활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7ab49abdc1733cccc9bfac6c1720ae703f04d3a7" translate="yes" xml:space="preserve">
          <source>Then you can inject the &lt;code&gt;jquery&lt;/code&gt; value into the module by configuring the &lt;code&gt;imports-loader&lt;/code&gt; using two approaches.</source>
          <target state="translated">Then you can inject the &lt;code&gt;jquery&lt;/code&gt; value into the module by configuring the &lt;code&gt;imports-loader&lt;/code&gt; using two approaches.</target>
        </trans-unit>
        <trans-unit id="e51ce7f29090f5b48fe3eae8cd4bcd7660d2697a" translate="yes" xml:space="preserve">
          <source>Then you can use the &lt;code&gt;expose-loader&lt;/code&gt; using two approaches.</source>
          <target state="translated">Then you can use the &lt;code&gt;expose-loader&lt;/code&gt; using two approaches.</target>
        </trans-unit>
        <trans-unit id="da73ede351abacaec57b8883eebc3e85b7c8c032" translate="yes" xml:space="preserve">
          <source>There are a couple of different options available in webpack that help you automatically compile your code whenever it changes:</source>
          <target state="translated">웹팩에는 코드가 변경 될 때마다 자동으로 컴파일하는 데 도움이되는 몇 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="98fc5926f0ed61dca265bd1d5a8cfdd128aec8ab" translate="yes" xml:space="preserve">
          <source>There are a few other tools that can help when dealing with legacy modules.</source>
          <target state="translated">레거시 모듈을 처리 할 때 도움이되는 몇 가지 다른 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a1d4e9ccad0c8085ac2c42a3a84ab4c7625d32e" translate="yes" xml:space="preserve">
          <source>There are a few use cases in real applications where this feature becomes especially neat. Essentially, every file emitted to your &lt;code&gt;output.path&lt;/code&gt; directory will be referenced from the &lt;code&gt;output.publicPath&lt;/code&gt; location. This includes child chunks (created via &lt;a href=&quot;code-splitting&quot;&gt;code splitting&lt;/a&gt;) and any other assets (e.g. images, fonts, etc.) that are a part of your dependency graph.</source>
          <target state="translated">이 기능이 특히 깔끔 해지는 실제 응용 프로그램에는 몇 가지 사용 사례가 있습니다. 기본적으로 &lt;code&gt;output.path&lt;/code&gt; 디렉토리로 방출 된 모든 파일 은 &lt;code&gt;output.publicPath&lt;/code&gt; 위치 에서 참조 됩니다. 여기에는 하위 &lt;a href=&quot;code-splitting&quot;&gt;코드&lt;/a&gt; ( 코드 분할을 통해 생성됨 ) 및 종속성 그래프의 일부인 기타 자산 (예 : 이미지, 글꼴 등)이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f59b5b432af60faa3acb5fbb371c18c640f63351" translate="yes" xml:space="preserve">
          <source>There are a lot of &lt;a href=&quot;../configuration/devtool&quot;&gt;different options&lt;/a&gt; available when it comes to source maps. Be sure to check them out so you can configure them to your needs.</source>
          <target state="translated">소스 맵과 관련하여 사용할 수 있는 &lt;a href=&quot;../configuration/devtool&quot;&gt;다양한 옵션이&lt;/a&gt; 있습니다. 필요에 따라 구성 할 수 있도록 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8d407574a6dd2574ff77db703ce9dc21ace6991e" translate="yes" xml:space="preserve">
          <source>There are different export formats available:</source>
          <target state="translated">사용 가능한 다른 내보내기 형식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ec1856436537a88e242c66fae83ad8d15cb9bb3" translate="yes" xml:space="preserve">
          <source>There are many modules that check for a &lt;code&gt;define&lt;/code&gt; function before using CommonJS. Since webpack is capable of both, they default to AMD in this case, which can be a problem if the implementation is quirky.</source>
          <target state="translated">CommonJS를 사용하기 전에 &lt;code&gt;define&lt;/code&gt; 함수 를 확인하는 많은 모듈이 있습니다 . 웹팩은 두 가지를 모두 지원할 수 있으므로이 경우 기본적으로 AMD로 설정되며, 구현이 기발한 경우 문제가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="231f8d33886d63700143f71de278ecc37e1e9ea7" translate="yes" xml:space="preserve">
          <source>There are many other loaders and examples out in the community to make HMR interact smoothly with a variety of frameworks and libraries...</source>
          <target state="translated">HMR이 다양한 프레임 워크 및 라이브러리와 원활하게 상호 작용할 수 있도록 커뮤니티에 다른 로더와 예제가 많이 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="53aa2c97152f93fa32cbf84d5d7317fbd59e3f34" translate="yes" xml:space="preserve">
          <source>There are many plugins that webpack provides out of the box! Check out the &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="translated">webpack이 기본적으로 제공하는 많은 플러그인이 있습니다! &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;플러그인 목록을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="71e77a34d84d086ac72c127ae4906c48c99dd408" translate="yes" xml:space="preserve">
          <source>There are multiple optimizations in production mode regarding dead branches:</source>
          <target state="translated">운영 중단 모드에서는 죽은 분기에 대한 여러 최적화가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bcc2fea8cf939a9d3651476df04dc1a6ee79e59" translate="yes" xml:space="preserve">
          <source>There are problems with managing JavaScript projects this way:</source>
          <target state="translated">이런 식으로 JavaScript 프로젝트를 관리하는 데 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8a5e694fb4dd9cf39f7fab90a3bcd585a74cb9" translate="yes" xml:space="preserve">
          <source>There are some cases in which using ES modules is beneficial, like in the case of &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;module concatenation&lt;/a&gt; and &lt;a href=&quot;../guides/tree-shaking&quot;&gt;tree shaking&lt;/a&gt;.</source>
          <target state="translated">There are some cases in which using ES modules is beneficial, like in the case of &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;module concatenation&lt;/a&gt; and &lt;a href=&quot;../guides/tree-shaking&quot;&gt;tree shaking&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4993d4d2cc5cb72c5891a9d1ab5d8f7272cf5966" translate="yes" xml:space="preserve">
          <source>There are some issues with Source Maps in Chrome. &lt;a href=&quot;https://github.com/webpack/webpack/issues/3165&quot;&gt;We need your help!&lt;/a&gt;.</source>
          <target state="translated">Chrome의 소스 맵에 문제가 있습니다. &lt;a href=&quot;https://github.com/webpack/webpack/issues/3165&quot;&gt;우리는 당신의 도움이 필요합니다! &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9295a056060a1cd9d98ae0dd581e17215a4f5384" translate="yes" xml:space="preserve">
          <source>There are some presets available to use as a shortcut. Use them like this:</source>
          <target state="translated">바로 가기로 사용할 수있는 몇 가지 사전 설정이 있습니다. 다음과 같이 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="635b1a30cc14512dd700d2c6b33056a04cc5290a" translate="yes" xml:space="preserve">
          <source>There are three general approaches to code splitting available:</source>
          <target state="translated">사용 가능한 코드 분할에는 세 가지 일반적인 접근 방식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="267e07e43a45d9a1ca7399cfda987a9aee4304fd" translate="yes" xml:space="preserve">
          <source>There are three types of built-in resolvers available on the &lt;code&gt;compiler&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;compiler&lt;/code&gt; 클래스 에는 세 가지 유형의 내장 리졸버가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f92300c3888d24aa7e5e015926b4dda7365ed5a" translate="yes" xml:space="preserve">
          <source>There are three ways to use loaders in your application:</source>
          <target state="translated">애플리케이션에서 로더를 사용하는 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfbf2ca72bd8b5e52cf781d5d1d0ed6763357e5f" translate="yes" xml:space="preserve">
          <source>There are two input values for the conditions:</source>
          <target state="translated">조건에 대한 두 가지 입력 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c7bd6cb5a385da0b04381463b8a65bb5f007ab0" translate="yes" xml:space="preserve">
          <source>There are two output values of a Rule:</source>
          <target state="translated">규칙에는 두 가지 출력 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="421884df0658635b32d095b666151cd8fdaeb897" translate="yes" xml:space="preserve">
          <source>There are two phases that all loaders enter one after the other:</source>
          <target state="translated">모든 로더가 차례로 들어가는 두 단계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6af33372ea92fb3a1592ac062e55d75a6290f0e" translate="yes" xml:space="preserve">
          <source>There are two possibilities to extract a style sheet from the bundle:</source>
          <target state="translated">번들에서 스타일 시트를 추출 할 수있는 두 가지 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2d870d1394aaba2ab5f8a4c5504447f9a976509" translate="yes" xml:space="preserve">
          <source>There are two solutions to this issue:</source>
          <target state="translated">이 문제에 대한 두 가지 해결책이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5887025a3ed16f628b946b1010aa383ff70a6420" translate="yes" xml:space="preserve">
          <source>There are two way to add dependencies:</source>
          <target state="translated">There are two way to add dependencies:</target>
        </trans-unit>
        <trans-unit id="9ab0314c79cc74488806140e45e7d806b8fb6d8c" translate="yes" xml:space="preserve">
          <source>There are two ways to run JavaScript in a browser. First, include a script for each functionality; this solution is hard to scale because loading too many scripts can cause a network bottleneck. The second option is to use a big &lt;code&gt;.js&lt;/code&gt; file containing all your project code, but this leads to problems in scope, size, readability and maintainability.</source>
          <target state="translated">There are two ways to run JavaScript in a browser. First, include a script for each functionality; this solution is hard to scale because loading too many scripts can cause a network bottleneck. The second option is to use a big &lt;code&gt;.js&lt;/code&gt; file containing all your project code, but this leads to problems in scope, size, readability and maintainability.</target>
        </trans-unit>
        <trans-unit id="9347f0cc0834919ebc20e81c6b93cbb9b7aeb89b" translate="yes" xml:space="preserve">
          <source>There are two ways to work with &lt;code&gt;nonce&lt;/code&gt;:</source>
          <target state="translated">There are two ways to work with &lt;code&gt;nonce&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b5634a53b77237f4e15313722897fff9e4771845" translate="yes" xml:space="preserve">
          <source>There are two workarounds:</source>
          <target state="translated">There are two workarounds:</target>
        </trans-unit>
        <trans-unit id="087002361fdbdb981291d1d8ab5e2c39508ac8de" translate="yes" xml:space="preserve">
          <source>There are various resources where you can learn how to write a scaffold, you can start by reading &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-scaffold/&quot;&gt;Writing a Scaffold&lt;/a&gt; tutorial.</source>
          <target state="translated">There are various resources where you can learn how to write a scaffold, you can start by reading &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-scaffold/&quot;&gt;Writing a Scaffold&lt;/a&gt; tutorial.</target>
        </trans-unit>
        <trans-unit id="96f079b98b93fb7f704da117338a35992b2e29f7" translate="yes" xml:space="preserve">
          <source>There has been a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in the latest stable versions of Node.js and its ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. A fix has been merged in master, but a release has yet to be made. In the meantime, to get the most out of incremental build speeds, try to stick with version 8.9.x (problem exists between 8.9.10 - 9.11.1). webpack has moved to using those ES2015 data structures liberally, and it will improve the initial build times as well.</source>
          <target state="translated">이 있었다 &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;성능 저하&lt;/a&gt; Node.js를하고 ES2015의 최신 안정 버전의 &lt;code&gt;Map&lt;/code&gt; 및 &lt;code&gt;Set&lt;/code&gt; 구현. 수정 프로그램이 마스터에 병합되었지만 아직 릴리스되지 않았습니다. 그 동안 증분 빌드 속도를 최대한 활용하려면 버전 8.9.x를 사용하십시오 (문제는 8.9.10-9.11.1 사이에 있음). webpack은 이러한 ES2015 데이터 구조를 자유롭게 사용하기 시작했으며 초기 빌드 시간도 향상시킬 것입니다.</target>
        </trans-unit>
        <trans-unit id="d9d05322318799384d1e0b0c5b64e4a53b00f44d" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fast-incremental-builds&quot;&gt;full example&lt;/a&gt; on the ts-loader github repository</source>
          <target state="translated">ts-loader github 저장소에 대한 &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fast-incremental-builds&quot;&gt;전체 예가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="24f6afef7bfd23746f67918b835f6fc6565a3d0e" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fork-ts-checker-webpack-plugin&quot;&gt;full example&lt;/a&gt; on the &lt;code&gt;ts-loader&lt;/code&gt; GitHub repository.</source>
          <target state="translated">There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fork-ts-checker-webpack-plugin&quot;&gt;full example&lt;/a&gt; on the &lt;code&gt;ts-loader&lt;/code&gt; GitHub repository.</target>
        </trans-unit>
        <trans-unit id="028fda8bd113b7126322aeb6aa11e8851c9e9ab8" translate="yes" xml:space="preserve">
          <source>There is a known problem with Less and &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS modules&lt;/a&gt; regarding relative file paths in &lt;code&gt;url(...)&lt;/code&gt; statements. &lt;a href=&quot;https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335&quot;&gt;See this issue for an explanation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;url(...)&lt;/code&gt; 문의 상대 파일 경로와 관련 하여 Less 및 &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS 모듈&lt;/a&gt; 에 알려진 문제가 있습니다. &lt;a href=&quot;https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335&quot;&gt;설명은이 문제를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="272aa1d3353918deab85d3eb9bbe747c9dc3ae29" translate="yes" xml:space="preserve">
          <source>There is a slight difference between the &lt;code&gt;sass&lt;/code&gt; (&lt;code&gt;dart-sass&lt;/code&gt;) and &lt;code&gt;node-sass&lt;/code&gt; options.</source>
          <target state="translated">There is a slight difference between the &lt;code&gt;sass&lt;/code&gt; ( &lt;code&gt;dart-sass&lt;/code&gt; ) and &lt;code&gt;node-sass&lt;/code&gt; options.</target>
        </trans-unit>
        <trans-unit id="7f98e90c6aa491e1ad9072a05a6ec97f5153bcc4" translate="yes" xml:space="preserve">
          <source>There is also an &lt;code&gt;extract&lt;/code&gt; function on the instance. You should use this if you have more than one instance of &lt;code&gt;ExtractTextPlugin&lt;/code&gt;.</source>
          <target state="translated">인스턴스 에는 &lt;code&gt;extract&lt;/code&gt; 기능 도 있습니다 . &lt;code&gt;ExtractTextPlugin&lt;/code&gt; 의 인스턴스가 둘 이상인 경우이를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aca6f0f8988a8ba1fdf3cdcb454b3a2847afa5c5" translate="yes" xml:space="preserve">
          <source>There is also an additional category &quot;inlined loader&quot; which are loaders applied inline of the import/require.</source>
          <target state="translated">가져 오기 / 요구 사항의 인라인으로 적용되는 로더 인 추가 범주 &quot;인라인 로더&quot;도 있습니다.</target>
        </trans-unit>
        <trans-unit id="63dc4b8122508bfde5c2b3cd6c0dbba7d8b69700" translate="yes" xml:space="preserve">
          <source>There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt;. If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#output-publicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt;, you might need this to account for the location of your extracted file.</source>
          <target state="translated">현재 정확히 하나의 옵션 인 &lt;code&gt;publicPath&lt;/code&gt; 가 있습니다. webpack의 &lt;a href=&quot;../configuration/output#output-publicpath&quot;&gt;출력 옵션&lt;/a&gt; 에서 상대 &lt;code&gt;publicPath&lt;/code&gt; 를 사용하고 &lt;code&gt;file-loader&lt;/code&gt; 로 파일을 추출하는 경우 추출 된 파일의 위치를 ​​설명하기 위해 이것이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed255eb1347137d75a802ce92f40bff602d6e7bf" translate="yes" xml:space="preserve">
          <source>There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt;. If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#outputpublicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt;, you might need this to account for the location of your extracted file. &lt;code&gt;publicPath&lt;/code&gt; may be defined as a string or a function that accepts current &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt; as single argument.</source>
          <target state="translated">There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt; . If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#outputpublicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt; , you might need this to account for the location of your extracted file. &lt;code&gt;publicPath&lt;/code&gt; may be defined as a string or a function that accepts current &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt; as single argument.</target>
        </trans-unit>
        <trans-unit id="9b97843cd1416b0f8c95b15bcea142c8b9e09f01" translate="yes" xml:space="preserve">
          <source>There is no need to change it.</source>
          <target state="translated">변경할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="46994b7b987e4c2023ce27e138386b6cdc8bd10d" translate="yes" xml:space="preserve">
          <source>There is no option to provide a chunk name.</source>
          <target state="translated">청크 이름을 제공하는 옵션이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b8ed6d814eca2d0cbf9ffca110d21faeddc6d1fe" translate="yes" xml:space="preserve">
          <source>There is one change that you will have to make to your webpack config. Typically, &lt;code&gt;module.exports&lt;/code&gt; points to the configuration object. To use the &lt;code&gt;env&lt;/code&gt; variable, you must convert &lt;code&gt;module.exports&lt;/code&gt; to a function:</source>
          <target state="translated">웹팩 설정을 변경해야합니다. 일반적으로 &lt;code&gt;module.exports&lt;/code&gt; 는 구성 객체를 가리 킵니다. &lt;code&gt;env&lt;/code&gt; 변수 를 사용하려면 &lt;code&gt;module.exports&lt;/code&gt; 를 함수 로 변환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7e73630e624742075c75e7bc3771463c12b92f4a" translate="yes" xml:space="preserve">
          <source>There might be more than one chunk in a chunk group. For example &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; splits a chunk into one or more chunks.</source>
          <target state="translated">There might be more than one chunk in a chunk group. For example &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; splits a chunk into one or more chunks.</target>
        </trans-unit>
        <trans-unit id="f70753b8f31e00036ee915afbab312783b5229ca" translate="yes" xml:space="preserve">
          <source>There was a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in Node.js versions 8.9.10 - 9.11.1 in the ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. webpack uses those data structures liberally, so this regression affects compile times.</source>
          <target state="translated">There was a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in Node.js versions 8.9.10 - 9.11.1 in the ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. webpack uses those data structures liberally, so this regression affects compile times.</target>
        </trans-unit>
        <trans-unit id="d70ba15e08cd0adf83a907141216d6e816aef455" translate="yes" xml:space="preserve">
          <source>There're many stages to use:</source>
          <target state="translated">There're many stages to use:</target>
        </trans-unit>
        <trans-unit id="0ebe232476ab6d5eab4f199f18a86b0873c75900" translate="yes" xml:space="preserve">
          <source>There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/en/babel-polyfill/&quot;&gt;&lt;code&gt;babel-polyfill&lt;/code&gt;&lt;/a&gt; we might simply:</source>
          <target state="translated">There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/en/babel-polyfill/&quot;&gt; &lt;code&gt;babel-polyfill&lt;/code&gt; &lt;/a&gt; we might simply:</target>
        </trans-unit>
        <trans-unit id="52799d35176455f8706d99232f96e666a9d333a5" translate="yes" xml:space="preserve">
          <source>There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt;&lt;code&gt;babel-polyfill&lt;/code&gt;&lt;/a&gt; we might simply:</source>
          <target state="translated">폴리 필을로드하는 방법에는 여러 가지가 있습니다. 예를 들어 &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt; &lt;code&gt;babel-polyfill&lt;/code&gt; &lt;/a&gt; 을 포함시키기 위해 간단히 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d94ad9229ad8612f68566c5b1de57d970fdc31a1" translate="yes" xml:space="preserve">
          <source>These allow you to configure the webpack &lt;a href=&quot;../configuration/resolve&quot;&gt;resolver&lt;/a&gt; with aliases and extensions.</source>
          <target state="translated">이를 통해 별명 및 확장자로 웹팩 &lt;a href=&quot;../configuration/resolve&quot;&gt;분석기&lt;/a&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2566a954a0d02deae7eb0cd9561460980b0c8c7b" translate="yes" xml:space="preserve">
          <source>These are the defaults:</source>
          <target state="translated">이것이 기본값입니다 :</target>
        </trans-unit>
        <trans-unit id="5c0bd375a87af39a4fcc4d939a8d4bc34eb2793b" translate="yes" xml:space="preserve">
          <source>These are the remaining configuration options supported by webpack.</source>
          <target state="translated">이들은 웹팩에서 지원하는 나머지 구성 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="febcff69af775a3bfcf0e1a7bf703ea42925d2f8" translate="yes" xml:space="preserve">
          <source>These conditions might also be set additionally:</source>
          <target state="translated">These conditions might also be set additionally:</target>
        </trans-unit>
        <trans-unit id="ccf6d61b4ad3823e787101eb37a3b1386c459707" translate="yes" xml:space="preserve">
          <source>These options allow webpack to display various &lt;a href=&quot;../configuration/stats&quot;&gt;stats&lt;/a&gt; and style them differently in the console output.</source>
          <target state="translated">이 옵션을 사용하면 웹팩에서 다양한 &lt;a href=&quot;../configuration/stats&quot;&gt;통계&lt;/a&gt; 를 표시 하고 콘솔 출력에서 ​​다르게 스타일을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e0869eb46e5f04ea6e2b1f165c826b5b338ead2" translate="yes" xml:space="preserve">
          <source>These options allow you to bind &lt;a href=&quot;../configuration/module&quot;&gt;modules&lt;/a&gt; as allowed by webpack</source>
          <target state="translated">이 옵션을 사용하면 웹팩에서 허용하는대로 &lt;a href=&quot;../configuration/module&quot;&gt;모듈&lt;/a&gt; 을 바인딩 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d8bf2146c955380560f55188ae1ce7347c666b6e" translate="yes" xml:space="preserve">
          <source>These options allow you to manipulate optimisations for a production build using webpack</source>
          <target state="translated">이 옵션을 사용하면 웹팩을 사용하여 프로덕션 빌드에 대한 최적화를 조작 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="1007a4ad40966f93fd98a21ab15571601e8096f3" translate="yes" xml:space="preserve">
          <source>These options allows you to control how webpack notifies you of assets and entry points that exceed a specific file limit. This feature was inspired by the idea of &lt;a href=&quot;https://github.com/webpack/webpack/issues/3216&quot;&gt;webpack Performance Budgets&lt;/a&gt;.</source>
          <target state="translated">이 옵션을 사용하면 특정 파일 제한을 초과하는 자산 및 진입 점을 웹팩에 알리는 방법을 제어 할 수 있습니다. 이 기능은 &lt;a href=&quot;https://github.com/webpack/webpack/issues/3216&quot;&gt;webpack 성능 예산&lt;/a&gt; 이라는 아이디어에서 영감을 얻었습니다 .</target>
        </trans-unit>
        <trans-unit id="79407cc7a6ab20b192d9e99545132870bb628e82" translate="yes" xml:space="preserve">
          <source>These options are experimental and may be deprecated. As mentioned above, they are typically not necessary and including a &lt;code&gt;new webpack.HotModuleReplacementPlugin()&lt;/code&gt; is enough.</source>
          <target state="translated">이 옵션은 실험용이므로 더 이상 사용되지 않을 수 있습니다. 위에서 언급했듯이, 그것들은 일반적으로 필요하지 않으며 &lt;code&gt;new webpack.HotModuleReplacementPlugin()&lt;/code&gt; 포함합니다 . HotModuleReplacementPlugin () 이면 충분합니다.</target>
        </trans-unit>
        <trans-unit id="0103698eace700deceff10513d7687368a419e01" translate="yes" xml:space="preserve">
          <source>These options are typically used in production:</source>
          <target state="translated">이러한 옵션은 일반적으로 프로덕션에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a79b628e2c2b80d262daaaf5e89a2b05a2721975" translate="yes" xml:space="preserve">
          <source>These options assign the return value of the entry point (e.g. whatever the entry point exported) to a specific object under the name defined by &lt;code&gt;output.library&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;output.library&lt;/code&gt; 에 의해 정의 된 이름으로 특정 객체에 진입 점의 반환 값 (예 : 내 보낸 진입 점)을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="22b90ab37b5ba5275785aeca2a1aaf4ff18b86db" translate="yes" xml:space="preserve">
          <source>These options assign the return value of the entry point (e.g. whatever the entry point exported) to the name provided by &lt;code&gt;output.library&lt;/code&gt; at whatever scope the bundle was included at.</source>
          <target state="translated">이 옵션 은 번들이 포함 된 모든 범위에서 &lt;code&gt;output.library&lt;/code&gt; 가 제공 한 이름에 진입 점 (예 : 내 보낸 진입 점)의 반환 값을 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="a7d8234fcb48114f73a0a6667f67ab696c51cde7" translate="yes" xml:space="preserve">
          <source>These options change how modules are resolved. webpack provides reasonable defaults, but it is possible to change the resolving in detail. Have a look at &lt;a href=&quot;../concepts/module-resolution&quot;&gt;Module Resolution&lt;/a&gt; for more explanation of how the resolver works.</source>
          <target state="translated">이 옵션은 모듈 해결 방법을 변경합니다. webpack은 합리적인 기본값을 제공하지만 해결 방법을 자세히 변경할 수 있습니다. 한 번 봐 가지고 &lt;a href=&quot;../concepts/module-resolution&quot;&gt;모듈 분해능&lt;/a&gt; 리졸버의 작동 방식을 더 설명에 대한합니다.</target>
        </trans-unit>
        <trans-unit id="502f606f9f22867ba7b4202ff6f348f30f97e661" translate="yes" xml:space="preserve">
          <source>These options configure whether to polyfill or mock certain &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js globals&lt;/a&gt; and modules. This allows code originally written for the Node.js environment to run in other environments like the browser.</source>
          <target state="translated">이 옵션은 특정 &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js 전역&lt;/a&gt; 및 모듈 을 폴리 필할지 모의할지 구성합니다 . 이를 통해 원래 Node.js 환경 용으로 작성된 코드가 브라우저와 같은 다른 환경에서 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5748337f019e8736c4c08ddb1aaa946717932550" translate="yes" xml:space="preserve">
          <source>These options describe the default settings for the context created when a dynamic dependency is encountered.</source>
          <target state="translated">이 옵션은 동적 종속성이 발생할 때 작성된 컨텍스트의 기본 설정을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="fe61c54946c1acdaaac5a110beb75c2abe251578" translate="yes" xml:space="preserve">
          <source>These options determine how the &lt;a href=&quot;../concepts/modules&quot;&gt;different types of modules&lt;/a&gt; within a project will be treated.</source>
          <target state="translated">이 옵션 은 프로젝트 내의 &lt;a href=&quot;../concepts/modules&quot;&gt;다른 유형의 모듈을&lt;/a&gt; 처리 하는 방법을 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="4f6511d8b476377c46f5d4c2dc3654f0c2d86dd1" translate="yes" xml:space="preserve">
          <source>These options makes the build &lt;a href=&quot;../configuration/watch&quot;&gt;watch&lt;/a&gt; for changes in files of the dependency graph and perform the build again.</source>
          <target state="translated">이 옵션을 사용하면 빌드 가 종속성 그래프 파일의 변경 사항을 &lt;a href=&quot;../configuration/watch&quot;&gt;감시&lt;/a&gt; 하고 빌드를 다시 수행합니다.</target>
        </trans-unit>
        <trans-unit id="454c972b24168045e7370d16bc161582d1d9c81e" translate="yes" xml:space="preserve">
          <source>These options will result in a bundle that comes with a more complete header to ensure compatibility with various module systems. The &lt;code&gt;output.library&lt;/code&gt; option will take on a different meaning under the following &lt;code&gt;output.libraryTarget&lt;/code&gt; options.</source>
          <target state="translated">이러한 옵션은 다양한 모듈 시스템과의 호환성을 보장하기 위해보다 완벽한 헤더와 함께 번들을 제공합니다. &lt;code&gt;output.library&lt;/code&gt; 옵션은 다음에 따라 다른 의미에 걸립니다 &lt;code&gt;output.libraryTarget&lt;/code&gt; 의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="106c4e5dbb58168e46b7c5c9dadb7d240d1978c2" translate="yes" xml:space="preserve">
          <source>These pattern are based on the following list of goals/assumptions:</source>
          <target state="translated">These pattern are based on the following list of goals/assumptions:</target>
        </trans-unit>
        <trans-unit id="9132b5d3865d002e95b734e01e6504c0fcb71cd0" translate="yes" xml:space="preserve">
          <source>These pattern should be used as guide not as strict ruleset. They can be adapted to the individual packages.</source>
          <target state="translated">These pattern should be used as guide not as strict ruleset. They can be adapted to the individual packages.</target>
        </trans-unit>
        <trans-unit id="42263b58dfe9ecaa589cb4cac45029b77ee6aa8e" translate="yes" xml:space="preserve">
          <source>These patterns make sense for packages that do not use environment specific APIs.</source>
          <target state="translated">These patterns make sense for packages that do not use environment specific APIs.</target>
        </trans-unit>
        <trans-unit id="9f26efe3ba05c2068ab581177a9b790860ec5ce5" translate="yes" xml:space="preserve">
          <source>These patterns make sense when a package contains two versions, one for development and one for production. E. g. the development version could include additional code for better error message or additional warnings.</source>
          <target state="translated">These patterns make sense when a package contains two versions, one for development and one for production. E. g. the development version could include additional code for better error message or additional warnings.</target>
        </trans-unit>
        <trans-unit id="08cf024ae104b7e9e8a8a0d48311f520b3337630" translate="yes" xml:space="preserve">
          <source>These properties affect the loaders: &lt;a href=&quot;#rule-loader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-options-rule-query&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 특성은 로더에 영향을줍니다 ( &lt;a href=&quot;#rule-loader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#rule-options-rule-query&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;use&lt;/code&gt; )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bd4f2e0f0514e3e6f6ce0621c32a64266577737" translate="yes" xml:space="preserve">
          <source>These properties affect the loaders: &lt;a href=&quot;#ruleloader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">These properties affect the loaders: &lt;a href=&quot;#ruleloader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#ruleuse&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="057e3f7528fc7e3767f893e10ed751260d9bd0d5" translate="yes" xml:space="preserve">
          <source>These rules are evaluated only when the parent Rule condition matches. Each nested rule can contain its own conditions.</source>
          <target state="translated">These rules are evaluated only when the parent Rule condition matches. Each nested rule can contain its own conditions.</target>
        </trans-unit>
        <trans-unit id="f724bae2af621776d8e318cd6c0f8e5bb1bcca74" translate="yes" xml:space="preserve">
          <source>These rules are evaluated when the Rule condition matches.</source>
          <target state="translated">이러한 규칙은 규칙 조건이 일치 할 때 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="012c1550965907b42ec6d480f2bfaac07754c8c0" translate="yes" xml:space="preserve">
          <source>These steps would occur:</source>
          <target state="translated">이 단계는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57d372ece1047febfc2ceef2a98e5fe436082e4a" translate="yes" xml:space="preserve">
          <source>These two parameters can be used together to redirect requests in a more targeted way. The &lt;code&gt;newContentCreateContextMap&lt;/code&gt; allows you to map runtime requests to compile requests in the form of an object:</source>
          <target state="translated">이 두 매개 변수를 함께 사용하면보다 구체적인 방식으로 요청을 리디렉션 할 수 있습니다. &lt;code&gt;newContentCreateContextMap&lt;/code&gt; 는 당신이 객체의 형태로 컴파일 요청에 대한 런타임 요청을 매핑 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f2417bbde2d2cb573d2628acc3066e13e3600335" translate="yes" xml:space="preserve">
          <source>They also serve the purpose of doing &lt;strong&gt;anything else&lt;/strong&gt; that a &lt;a href=&quot;loaders&quot;&gt;loader&lt;/a&gt; cannot do.</source>
          <target state="translated">또한 수행의 목적으로 제공 &lt;strong&gt;아무것도&lt;/strong&gt; &amp;bull; 그래도 &lt;a href=&quot;loaders&quot;&gt;로더가&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d4c374abb62de5d26d0baf6648ec4bfbb523c24" translate="yes" xml:space="preserve">
          <source>They are not enabled by default because they expose a runtime overhead and increase in bundle size (JS source maps do not). In addition to that relative paths are buggy and you need to use an absolute public path which include the server URL.</source>
          <target state="translated">런타임 오버 헤드가 노출되고 번들 크기가 증가하므로 기본적으로 사용되지 않습니다 (JS 소스 맵은 그렇지 않음). 또한 상대 경로는 버그가 있으므로 서버 URL을 포함하는 절대 공용 경로를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3be8d3fafa2f11f4d807cab33b9addaeb88267eb" translate="yes" xml:space="preserve">
          <source>They must not point to files outside of the package.</source>
          <target state="translated">They must not point to files outside of the package.</target>
        </trans-unit>
        <trans-unit id="6967131bc5ac15c7eedbcd99737fb8d7b6bcbf81" translate="yes" xml:space="preserve">
          <source>Third party addons</source>
          <target state="translated">타사 애드온</target>
        </trans-unit>
        <trans-unit id="7049c64126a5ef56b2771dde6ee8579603f61c49" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;stats&lt;/code&gt; object exposes the following methods:</source>
          <target state="translated">이 &lt;code&gt;stats&lt;/code&gt; 객체는 다음과 같은 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c856cbc45e829c1fa37cb33d1001f29567b6f09e" translate="yes" xml:space="preserve">
          <source>This CANNOT be used in an async function.</source>
          <target state="translated">비동기 기능에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5ede9a9f06a97791ce57472a51006e343016b504" translate="yes" xml:space="preserve">
          <source>This CANNOT be used in an asynchronous function.</source>
          <target state="translated">비동기 기능에는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d6fcf631173dfe5541552e3cd115c778ac244bb4" translate="yes" xml:space="preserve">
          <source>This Webpack loader inlines SVG as module. If you use Adobe suite or Sketch to export SVGs, you will get auto-generated, unneeded crusts. This loader removes it for you, too.</source>
          <target state="translated">이 웹팩 로더는 SVG를 모듈로 인라인합니다. Adobe 제품군 또는 Sketch를 사용하여 SVG를 내 보내면 자동으로 생성되고 불필요한 크러스트가 생성됩니다. 이 로더도 당신을 위해 그것을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="8c495b2f5e535333feb3a4586360cff0743ba26a" translate="yes" xml:space="preserve">
          <source>This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</source>
          <target state="translated">This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</target>
        </trans-unit>
        <trans-unit id="9bbc872ea1fac7265c2fd82e9ad634bb871e11e4" translate="yes" xml:space="preserve">
          <source>This article will focus on the last of these three parts, the runtime and in particular the manifest.</source>
          <target state="translated">이 기사에서는 이러한 세 부분 중 마지막 부분 인 런타임과 특히 매니페스트에 중점을 둘 것입니다.</target>
        </trans-unit>
        <trans-unit id="2e37d12719405c39b28ec72e5b413bbc6c7508c4" translate="yes" xml:space="preserve">
          <source>This article will focus on the last of these three parts: the runtime and, in particular, the manifest.</source>
          <target state="translated">This article will focus on the last of these three parts: the runtime and, in particular, the manifest.</target>
        </trans-unit>
        <trans-unit id="a21549500935266e3533d6a74c4979f993c4dcf4" translate="yes" xml:space="preserve">
          <source>This becomes a problem when the module is executed in a CommonJS context where &lt;code&gt;this&lt;/code&gt; is equal to &lt;code&gt;module.exports&lt;/code&gt;. In this case you can override &lt;code&gt;this&lt;/code&gt; using the &lt;a href=&quot;../loaders/imports-loader&quot;&gt;&lt;code&gt;imports-loader&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">모듈은 CommonJS 콘텍스트에서 실행되는 경우에 문제가된다 &lt;code&gt;this&lt;/code&gt; 같은지 &lt;code&gt;module.exports&lt;/code&gt; . 이 경우 대체 할 수 있습니다 &lt;code&gt;this&lt;/code&gt; 사용하여 &lt;a href=&quot;../loaders/imports-loader&quot;&gt; &lt;code&gt;imports-loader&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="baec1fec2435cd7acf759f93d8b8be9e1c4855c5" translate="yes" xml:space="preserve">
          <source>This boolean is set to true when this is compiled by webpack.</source>
          <target state="translated">이 부울은 웹팩에 의해 컴파일 될 때 true로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f899d8d2c6f2c05b71df74eabdec78e2e7328f65" translate="yes" xml:space="preserve">
          <source>This boots the max number of workers in the pool and loads specified modules into the node.js module cache.</source>
          <target state="translated">그러면 풀의 최대 작업자 수가 부팅되고 지정된 모듈이 node.js 모듈 캐시에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="c0bc6ef24b6b80a9bf49aeb98312bc918d80974b" translate="yes" xml:space="preserve">
          <source>This bundle will not work as expected, or not work at all (in the case of the almond loader) if loaded directly with a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. It will only work through a RequireJS compatible asynchronous module loader through the actual path to that file, so in this case, the &lt;code&gt;output.path&lt;/code&gt; and &lt;code&gt;output.filename&lt;/code&gt; may become important for this particular setup if these are exposed directly on the server.</source>
          <target state="translated">이 번들은 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그로 직접로드 된 경우 예상대로 작동하지 않거나 아몬드 로더의 경우 전혀 작동하지 않습니다 . 해당 파일의 실제 경로를 통해 RequireJS 호환 비동기 모듈 로더를 통해서만 작동하므로이 경우 &lt;code&gt;output.path&lt;/code&gt; 및 &lt;code&gt;output.filename&lt;/code&gt; 이 서버에 직접 노출되는 경우이 특정 설정에 중요 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01881267fbb71bd4e8be6e5ecca674685a340399" translate="yes" xml:space="preserve">
          <source>This can be achieved by using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; to extract the CSS when running in production mode.</source>
          <target state="translated">This can be achieved by using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; to extract the CSS when running in production mode.</target>
        </trans-unit>
        <trans-unit id="3bbdfa3acc96c26d61ba3ce08b93f184f93f43db" translate="yes" xml:space="preserve">
          <source>This can be done using the &lt;code&gt;externals&lt;/code&gt; configuration:</source>
          <target state="translated">&lt;code&gt;externals&lt;/code&gt; 구성을 사용하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9580dc90d48db5f49636b2d7b71da6ad0884a869" translate="yes" xml:space="preserve">
          <source>This can be especially helpful when implementing some sort of data visualization using a tool like &lt;a href=&quot;https://github.com/d3&quot;&gt;d3&lt;/a&gt;. Instead of making an ajax request and parsing the data at runtime you can load it into your module during the build process so that the parsed data is ready to go as soon as the module hits the browser.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://github.com/d3&quot;&gt;d3&lt;/a&gt; 과 같은 도구를 사용하여 일종의 데이터 시각화를 구현할 때 특히 유용 합니다. 런타임에 Ajax 요청을 작성하고 데이터를 구문 분석하는 대신 모듈이 브라우저에 충돌하자마자 구문 분석 된 데이터가 준비 될 수 있도록 빌드 프로세스 중에 모듈에 데이터를로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e1bf4407126d15752d86781be25b8cf248f1d37" translate="yes" xml:space="preserve">
          <source>This can be fixed by using Node's &lt;code&gt;--preserve-symlinks&lt;/code&gt; flag which will allow you to develop cross-module, without experiencing inconsistencies when comparing against a normal, non-linked install:</source>
          <target state="translated">이는 노드의 &lt;code&gt;--preserve-symlinks&lt;/code&gt; 플래그를 사용하여 해결할 수 있습니다.이 플래그를 사용하면 일반 비 링크 설치와 비교할 때 불일치하지 않고 크로스 모듈을 개발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb1652868b3142e361ae8e70d6e1db4dfbc49f14" translate="yes" xml:space="preserve">
          <source>This can be useful for allowing different behaviour between builds.</source>
          <target state="translated">빌드간에 다른 동작을 허용하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44f088e20304c744db728f5661a86aa4d21f05b1" translate="yes" xml:space="preserve">
          <source>This can be useful if you want to require all files in a directory or matching a pattern, Example:</source>
          <target state="translated">이것은 디렉토리의 모든 파일을 요구하거나 패턴과 일치하려는 경우에 유용 할 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="8676024628a920433edffaa7ae6a6bad09d7f6a9" translate="yes" xml:space="preserve">
          <source>This can either be a &lt;code&gt;boolean&lt;/code&gt; value or the cache directory path(ex: &lt;code&gt;'./.eslint-loader-cache'&lt;/code&gt;).</source>
          <target state="translated">이 중 하나가 될 수 &lt;code&gt;boolean&lt;/code&gt; (: 예 값 또는 캐시 디렉터리 경로 &lt;code&gt;'./.eslint-loader-cache'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="00fe4f196235a0bd98a186c356729387256cb42f" translate="yes" xml:space="preserve">
          <source>This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work.</source>
          <target state="translated">This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work.</target>
        </trans-unit>
        <trans-unit id="90feb19f191bf3c2f898593139ee44562c490b72" translate="yes" xml:space="preserve">
          <source>This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work. You can pass own &lt;code&gt;importer&lt;/code&gt; to solve this (see &lt;a href=&quot;https://github.com/sass/node-sass#importer--v200---experimental&quot;&gt;&lt;code&gt;importer docs&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work. You can pass own &lt;code&gt;importer&lt;/code&gt; to solve this (see &lt;a href=&quot;https://github.com/sass/node-sass#importer--v200---experimental&quot;&gt; &lt;code&gt;importer docs&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="5aa95a44f7b56fa270e7540b0c4516d6afc23ae5" translate="yes" xml:space="preserve">
          <source>This concatenation behavior is called &amp;ldquo;scope hoisting.&amp;rdquo;</source>
          <target state="translated">이 연결 동작을 &quot;스코프 호이 스팅&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="a1b60edc5c47b09819f1b28410a8fcf699414214" translate="yes" xml:space="preserve">
          <source>This concept may be used to obtain implicit common vendor chunks:</source>
          <target state="translated">이 개념은 암시 적 공통 공급 업체 청크를 얻는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d59c040af16a3e1a5f7645e2762906f183f9fd1b" translate="yes" xml:space="preserve">
          <source>This condition should be used when looking for a javascript file that can be injected as script tag in a HTML page without additional preprocessing.</source>
          <target state="translated">This condition should be used when looking for a javascript file that can be injected as script tag in a HTML page without additional preprocessing.</target>
        </trans-unit>
        <trans-unit id="8b14c6199ca975479eddf0911297de4ba6c2b77a" translate="yes" xml:space="preserve">
          <source>This configuration can enlarge your initial bundles, it is recommended to use dynamic imports when a module is not immediately needed.</source>
          <target state="translated">이 구성은 초기 번들을 확대 할 수 있으므로 모듈이 즉시 필요하지 않은 경우 동적 가져 오기를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f8178aeab727f5b2ae39ef8a55f0f3db44980db5" translate="yes" xml:space="preserve">
          <source>This configuration object represents the default behavior of the &lt;code&gt;SplitChunksPlugin&lt;/code&gt;.</source>
          <target state="translated">이 구성 객체는 &lt;code&gt;SplitChunksPlugin&lt;/code&gt; 의 기본 동작을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b426c6694d3980dd6d187a7b69ccfdfdc20ed06a" translate="yes" xml:space="preserve">
          <source>This configuration would output a single &lt;code&gt;bundle.js&lt;/code&gt; file into the &lt;code&gt;dist&lt;/code&gt; directory.</source>
          <target state="translated">이 구성은 단일 &lt;code&gt;bundle.js&lt;/code&gt; 파일을 &lt;code&gt;dist&lt;/code&gt; 디렉토리에 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="fa12d5e0203ded4efe2f2beb27f665fe78f5300e" translate="yes" xml:space="preserve">
          <source>This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept specific use cases.</source>
          <target state="translated">이 문서는 제공하기위한 것입니다 &lt;strong&gt;높은 수준의&lt;/strong&gt; 상세한 개념 특정 사용 사례에 대한 링크를 제공하면서, 이러한 개념의 개요.</target>
        </trans-unit>
        <trans-unit id="6f90b031461d4914e663e4293c5ba433153cecd3" translate="yes" xml:space="preserve">
          <source>This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept-specific use cases.</source>
          <target state="translated">This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept-specific use cases.</target>
        </trans-unit>
        <trans-unit id="3b55640f7b32656e0d1d0d69041cf653588b5957" translate="yes" xml:space="preserve">
          <source>This doesn't result in any change to the CSS itself but exports multiple classnames.</source>
          <target state="translated">CSS 자체는 변경되지 않지만 여러 클래스 이름을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="599f08e0438def7468d189bca38955cb98998e6b" translate="yes" xml:space="preserve">
          <source>This enables local scoped CSS by default. (You can switch it off with &lt;code&gt;:global(...)&lt;/code&gt; or &lt;code&gt;:global&lt;/code&gt; for selectors and/or rules.).</source>
          <target state="translated">기본적으로 로컬 범위 CSS를 활성화합니다. 선택기 및 / 또는 규칙의 경우 &lt;code&gt;:global(...)&lt;/code&gt; 또는 &lt;code&gt;:global&lt;/code&gt; 을 사용 하여 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3bad9fc6c6d0140a761114db8b4526c2bdc7ed1a" translate="yes" xml:space="preserve">
          <source>This enables you to &lt;code&gt;import './style.css'&lt;/code&gt; into the file that depends on that styling. Now, when that module is run, a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag with the stringified css will be inserted into the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your html file.</source>
          <target state="translated">이를 통해 &lt;code&gt;import './style.css'&lt;/code&gt; 를 해당 스타일에 따라 파일로 가져올 수 있습니다 . 이제 해당 모듈이 실행되면 문자열로 된 CSS가 포함 된 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그가 html 파일 의 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 에 삽입 됩니다.</target>
        </trans-unit>
        <trans-unit id="bd65cf352aa69ab40ac2d0a4ed9c1dfdf6de6cea" translate="yes" xml:space="preserve">
          <source>This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add the different options about how the library can be exposed.</source>
          <target state="translated">그러면 라이브러리 번들을 가져올 때 &lt;code&gt;webpackNumbers&lt;/code&gt; 라는 전역 변수로 사용할 수 있습니다 . 라이브러리가 다른 환경과 호환되도록하려면 &lt;code&gt;libraryTarget&lt;/code&gt; 특성을 구성에 추가하십시오 . 라이브러리 노출 방법에 대한 다양한 옵션이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e4f8fee3199cc793be9ddd412547afaade1fd229" translate="yes" xml:space="preserve">
          <source>This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add various options about how the library can be exposed.</source>
          <target state="translated">This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add various options about how the library can be exposed.</target>
        </trans-unit>
        <trans-unit id="0b052c558cba2236dd392c04e60b71c7d78db1ae" translate="yes" xml:space="preserve">
          <source>This expression will trigger the hook:</source>
          <target state="translated">This expression will trigger the hook:</target>
        </trans-unit>
        <trans-unit id="69ef084d40688e7b5d5d8996554e04e0ca6cfd1c" translate="yes" xml:space="preserve">
          <source>This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</source>
          <target state="translated">이 기능은 생산성에 좋습니다. &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; 설정을 업데이트하고 내장 된 HMR 플러그인을 사용하기 만하면됩니다. 또한 &lt;code&gt;index.js&lt;/code&gt; 모듈에 의해 사용될 &lt;code&gt;print.js&lt;/code&gt; 의 진입 점도 제거 할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c92b3bdf66deb3e19c2225ce04f1e41433492b7e" translate="yes" xml:space="preserve">
          <source>This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built-in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</source>
          <target state="translated">This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built-in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</target>
        </trans-unit>
        <trans-unit id="404dddeb1ceb60699ded778054d7f5ef9fc9fa12" translate="yes" xml:space="preserve">
          <source>This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt;&lt;code&gt;NodeStuffPlugin&lt;/code&gt;&lt;/a&gt; plugin.</source>
          <target state="translated">This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt; &lt;code&gt;NodeStuffPlugin&lt;/code&gt; &lt;/a&gt; plugin.</target>
        </trans-unit>
        <trans-unit id="79ad76420d55e87371fad64492f2963aea24c4eb" translate="yes" xml:space="preserve">
          <source>This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt;&lt;code&gt;NodeStuffPlugin&lt;/code&gt;&lt;/a&gt; plugin. If the target is &quot;web&quot; (default) or &quot;webworker&quot;, the &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/node/NodeSourcePlugin.js&quot;&gt;&lt;code&gt;NodeSourcePlugin&lt;/code&gt;&lt;/a&gt; plugin is also activated.</source>
          <target state="translated">이 기능은 웹팩의 내부 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt; &lt;code&gt;NodeStuffPlugin&lt;/code&gt; &lt;/a&gt; 플러그인에 의해 제공됩니다 . 대상이 &quot;web&quot;(기본값) 또는 &quot;webworker&quot;인 경우 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/node/NodeSourcePlugin.js&quot;&gt; &lt;code&gt;NodeSourcePlugin&lt;/code&gt; &lt;/a&gt; 플러그인도 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="b704dfb503dd69b6a849b0e22a57a5d32765f8b9" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">이 기능은 내부적 으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . 당신이 사용하는 경우 &lt;code&gt;import()&lt;/code&gt; 이전 버전의 브라우저로를 심은 기억 &lt;code&gt;Promise&lt;/code&gt; 같은 polyfill을 사용 &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;ES6-약속&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;약속-polyfill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a46c09f986aa73dc78c4b47b58c94cabba924769" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use &lt;code&gt;require.ensure&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">이 기능은 내부적 으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . 구형 브라우저에서 &lt;code&gt;require.ensure&lt;/code&gt; 를 사용하는 경우 &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt; 과 같은 polyfill을 사용하여 &lt;code&gt;Promise&lt;/code&gt; 를 shim 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1784fa4ee081d52871ddd8875156431960fca6ae" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use AMD with older browsers (e.g. Internet Explorer 11), remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">이 기능은 내부적 으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . 이전 브라우저 (예 : Internet Explorer 11)에서 AMD를 사용하는 경우 &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt; 과 같은 폴리 필을 사용하여 &lt;code&gt;Promise&lt;/code&gt; 를 shim 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2f10d727220baca2938b1a342e008a2d35949f1c" translate="yes" xml:space="preserve">
          <source>This follows the same rules as those specified for file resolution. But the &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt;&lt;code&gt;resolveLoader&lt;/code&gt;&lt;/a&gt; configuration option can be used to have separate resolution rules for loaders.</source>
          <target state="translated">이는 파일 확인에 지정된 규칙과 동일한 규칙을 따릅니다. 그러나 &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt; &lt;code&gt;resolveLoader&lt;/code&gt; &lt;/a&gt; 구성 옵션을 사용하여 로더에 대한 별도의 분석 규칙을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f32268d39ceea09d3d6306eb50cca10ac3efd123" translate="yes" xml:space="preserve">
          <source>This guide contains some useful tips for improving build/compilation performance.</source>
          <target state="translated">이 안내서에는 빌드 / 컴파일 성능을 향상시키는 데 유용한 팁이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e74ee278b6483e63e246262d4b0558794583866" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;asset-management&quot;&gt;&lt;code&gt;Asset Management&lt;/code&gt;&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;asset-management&quot;&gt; &lt;code&gt;Asset Management&lt;/code&gt; &lt;/a&gt; 안내서 에있는 코드 예제를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="5b251b76cf265164795401de844aec084670ed8b" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;development&quot;&gt;Development&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;development&quot;&gt;개발&lt;/a&gt; 안내서 에있는 코드 예제를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="e695885af13bd16faad41148a2a86747da0469ea" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;output-management&quot;&gt;출력 관리&lt;/a&gt; 안내서 에있는 코드 예제를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="8177ec7567235499917c71e39fc37b8bec828620" translate="yes" xml:space="preserve">
          <source>This guide extends the example provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. Please make sure you are at least familiar with the example provided there and the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; chapter.</source>
          <target state="translated">This guide extends the example provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. Please make sure you are at least familiar with the example provided there and the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; chapter.</target>
        </trans-unit>
        <trans-unit id="e586717908f30e2eb3dae17b0c51e6aa57c70149" translate="yes" xml:space="preserve">
          <source>This guide extends the examples provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt; and &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt;. Please make sure you are at least familiar with the examples provided in them.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;getting-started&quot;&gt;시작&lt;/a&gt; 및 &lt;a href=&quot;output-management&quot;&gt;출력 관리에&lt;/a&gt; 제공된 예제를 확장합니다 . 최소한 제공된 예제에 익숙해 지십시오.</target>
        </trans-unit>
        <trans-unit id="b10dfffc8f2cd75e2c9419cc6320a9b42af80acc" translate="yes" xml:space="preserve">
          <source>This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their content has changed.</source>
          <target state="translated">This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their content has changed.</target>
        </trans-unit>
        <trans-unit id="73feb60d4ff54e1bed9cecb930b3d4cb4688b9bd" translate="yes" xml:space="preserve">
          <source>This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their contents has changed.</source>
          <target state="translated">이 안내서는 웹팩 컴파일에 의해 생성 된 파일의 내용이 변경되지 않는 한 캐시 된 상태를 유지하는 데 필요한 구성에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="28ff626f461f33c15358e30a2a67dd11c6916c34" translate="yes" xml:space="preserve">
          <source>This guide goes through the various methods used to install webpack.</source>
          <target state="translated">이 안내서는 웹팩 설치에 사용되는 다양한 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="04ab105d2ba31796ba8058507be23bb87f5478d3" translate="yes" xml:space="preserve">
          <source>This guide is a small follow-up to &lt;a href=&quot;code-splitting&quot;&gt;Code Splitting&lt;/a&gt;. If you have not yet read through that guide, please do so now.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;code-splitting&quot;&gt;코드 분할에&lt;/a&gt; 대한 간단한 후속 조치 입니다. 이 안내서를 아직 읽지 않았다면 지금 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="9515b6e28f5a9f26a4966a59ee8efe94d078667b" translate="yes" xml:space="preserve">
          <source>This guide stems from the &lt;a href=&quot;getting-started&quot;&gt;&lt;em&gt;Getting Started&lt;/em&gt;&lt;/a&gt; guide.</source>
          <target state="translated">이 안내서는 &lt;a href=&quot;getting-started&quot;&gt;&lt;em&gt;시작&lt;/em&gt;&lt;/a&gt; 안내서 에서 발췌 한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="6a5c8a77e65080c1a87ac1b102bd2352b9720587" translate="yes" xml:space="preserve">
          <source>This hook allows you to do a one more additional pass of the build.</source>
          <target state="translated">This hook allows you to do a one more additional pass of the build.</target>
        </trans-unit>
        <trans-unit id="54dabb78d9165f59094c77b77fbfd1102990aee5" translate="yes" xml:space="preserve">
          <source>This hook can be used to add/modify the compilation parameters:</source>
          <target state="translated">This hook can be used to add/modify the compilation parameters:</target>
        </trans-unit>
        <trans-unit id="7db5a0744cb411b222f5ddf37115a92427f093c9" translate="yes" xml:space="preserve">
          <source>This indicates which chunks will be selected for optimization. If a string is provided, possible values are &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, and &lt;code&gt;initial&lt;/code&gt;. Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful because it means that chunks can be shared even between async and non-async chunks.</source>
          <target state="translated">최적화를 위해 어떤 청크가 선택 될지를 나타냅니다. 문자열이 제공되면 가능한 값은 &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;async&lt;/code&gt; 및 &lt;code&gt;initial&lt;/code&gt; 입니다. 청크와 비동기가 아닌 청크 간에도 청크를 공유 할 수 있으므로 &lt;code&gt;all&lt;/code&gt; 제공 하는 것이 특히 강력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f1794885ce10056eb9bb0faddc4d3cad727c4ef" translate="yes" xml:space="preserve">
          <source>This indicates which chunks will be selected for optimization. When a string is provided, valid values are &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, and &lt;code&gt;initial&lt;/code&gt;. Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful, because it means that chunks can be shared even between async and non-async chunks.</source>
          <target state="translated">This indicates which chunks will be selected for optimization. When a string is provided, valid values are &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;async&lt;/code&gt; , and &lt;code&gt;initial&lt;/code&gt; . Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful, because it means that chunks can be shared even between async and non-async chunks.</target>
        </trans-unit>
        <trans-unit id="8df877acd9008859a1bdb1efea3293a6acf64ffc" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;false&lt;/code&gt; if the module is currently executing, and &lt;code&gt;true&lt;/code&gt; if the sync execution has finished.</source>
          <target state="translated">이다 &lt;code&gt;false&lt;/code&gt; 모듈이 현재 실행되는 경우와 &lt;code&gt;true&lt;/code&gt; 동기 실행이 완료된 경우.</target>
        </trans-unit>
        <trans-unit id="ecb3ef0422ffd6e3c5b0a329b020146b6b6f51bb" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;true&lt;/code&gt; by default in &lt;code&gt;production&lt;/code&gt; mode.</source>
          <target state="translated">이다 &lt;code&gt;true&lt;/code&gt; 에 기본적으로 &lt;code&gt;production&lt;/code&gt; 모드.</target>
        </trans-unit>
        <trans-unit id="df1f3325933036ef23805a4ec9f47646d400ceed" translate="yes" xml:space="preserve">
          <source>This is a great choice when you are looking to quickly setup a webpack configuration for an application or tool with one entry point (i.e., a library). However, there is not much flexibility in extending or scaling your configuration with this syntax.</source>
          <target state="translated">하나의 진입 점 (예 : 라이브러리)으로 응용 프로그램 또는 도구에 대한 웹팩 구성을 신속하게 설정하려는 경우이 옵션을 선택하십시오. 그러나이 구문을 사용하여 구성을 확장하거나 확장 할 때 유연성이 그리 크지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c87ce6ad59d4ba0a8d22cf3002d88ef702a80d86" translate="yes" xml:space="preserve">
          <source>This is a list of plugins which are used by webpack internally.</source>
          <target state="translated">웹팩에서 내부적으로 사용되는 플러그인 목록입니다.</target>
        </trans-unit>
        <trans-unit id="cc7419b23a9e92d52227ca5c5b7cee9ef1527623" translate="yes" xml:space="preserve">
          <source>This is an example for a package that has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version</source>
          <target state="translated">This is an example for a package that has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version</target>
        </trans-unit>
        <trans-unit id="5bd6e99edd725757c93ffeb71735a604163063ec" translate="yes" xml:space="preserve">
          <source>This is an example for a package that supports Node.js, browser and electron, has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version.</source>
          <target state="translated">This is an example for a package that supports Node.js, browser and electron, has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version.</target>
        </trans-unit>
        <trans-unit id="8886144b094f0f97dada64e907fc12e5eda8ec9e" translate="yes" xml:space="preserve">
          <source>This is an important option when using on-demand-loading or loading external resources like images, files, etc. If an incorrect value is specified you'll receive 404 errors while loading these resources.</source>
          <target state="translated">이 옵션은 주문형로드를 사용하거나 이미지, 파일 등과 같은 외부 리소스를로드 할 때 중요한 옵션입니다. 잘못된 값을 지정하면 이러한 리소스를로드하는 동안 404 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0757868f46be2aa16e1835586e0d7a20832c2a91" translate="yes" xml:space="preserve">
          <source>This is an object where each property is the name of a Node global or module and each value may be one of the following...</source>
          <target state="translated">이것은 각 속성이 Node 전역 또는 모듈의 이름이고 각 값이 다음 중 하나 일 수있는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="48cde90b57a464eb3fff794ce73eb3c3ac1fa916" translate="yes" xml:space="preserve">
          <source>This is because webpack includes certain boilerplate, specifically the runtime and manifest, in the entry chunk.</source>
          <target state="translated">이는 웹팩에 항목 청크에 특정 상용구, 특히 런타임 및 매니페스트가 포함되어 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="53b087237e060748cf7c076f6a909fb930480aaf" translate="yes" xml:space="preserve">
          <source>This is by far the easiest and most intuitive way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</source>
          <target state="translated">This is by far the easiest and most intuitive way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</target>
        </trans-unit>
        <trans-unit id="560b1952bb069ebc7dec6531e687fec09448474f" translate="yes" xml:space="preserve">
          <source>This is by far the easiest, and most intuitive, way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</source>
          <target state="translated">이것은 코드를 분할하는 가장 쉽고 직관적 인 방법입니다. 그러나 더 수동적이며 우리가 극복해야 할 함정이 있습니다. 메인 번들에서 다른 모듈을 분리하는 방법을 살펴 보겠습니다 :</target>
        </trans-unit>
        <trans-unit id="ca9966a9a13a33427ba2eee45f8d198dd3978467" translate="yes" xml:space="preserve">
          <source>This is discouraged in webpack 4. Instead, the &lt;a href=&quot;../configuration/optimization#optimizationsplitchunks&quot;&gt;&lt;code&gt;optimization.splitChunks&lt;/code&gt;&lt;/a&gt; option takes care of separating vendors and app modules and creating a separate file. &lt;strong&gt;Do not&lt;/strong&gt; create an entry for vendors or other stuff that is not the starting point of execution.</source>
          <target state="translated">This is discouraged in webpack 4. Instead, the &lt;a href=&quot;../configuration/optimization#optimizationsplitchunks&quot;&gt; &lt;code&gt;optimization.splitChunks&lt;/code&gt; &lt;/a&gt; option takes care of separating vendors and app modules and creating a separate file. &lt;strong&gt;Do not&lt;/strong&gt; create an entry for vendors or other stuff that is not the starting point of execution.</target>
        </trans-unit>
        <trans-unit id="e22332e1691cc2177c430d4688ce63cb96fe89c0" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following &lt;code&gt;DefinePlugin&lt;/code&gt; application:</source>
          <target state="translated">이것은 다음 &lt;code&gt;DefinePlugin&lt;/code&gt; 응용 프로그램 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="19b0d712c36cad578318f77cf36dd5f57263a1e8" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Less variables depend on the environment:</source>
          <target state="translated">This is especially useful when some of your Less variables depend on the environment:</target>
        </trans-unit>
        <trans-unit id="d4b2fe2586ad8a0f46131537b6cfc86b305d7d08" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Sass variables depend on the environment:</source>
          <target state="translated">This is especially useful when some of your Sass variables depend on the environment:</target>
        </trans-unit>
        <trans-unit id="3b0161a59d14f3b8c460f7f5aa031fcaab9998c8" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Stylus variables depend on the environment:</source>
          <target state="translated">This is especially useful when some of your Stylus variables depend on the environment:</target>
        </trans-unit>
        <trans-unit id="a247f4b44e6328f72d37accf666f7af5287fe2f2" translate="yes" xml:space="preserve">
          <source>This is happening because the button's &lt;code&gt;onclick&lt;/code&gt; event handler is still bound to the original &lt;code&gt;printMe&lt;/code&gt; function.</source>
          <target state="translated">버튼의 &lt;code&gt;onclick&lt;/code&gt; 이벤트 핸들러가 여전히 원래 &lt;code&gt;printMe&lt;/code&gt; 함수에 바인딩되어 있기 때문에 이런 일이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="cfbbab771cd3e0d8e7090c42bd261a535ae96610" translate="yes" xml:space="preserve">
          <source>This is just one example, but there are many others that can easily trip people up. Luckily, there are a lot of loaders out there (some of which are mentioned below) that will make hot module replacement much easier.</source>
          <target state="translated">이것은 하나의 예일 뿐이지 만 사람들을 쉽게 여행 할 수있는 다른 많은 것들이 있습니다. 운 좋게도, 핫 모듈을 훨씬 쉽게 교체 할 수있는 로더가 많이 있습니다 (일부는 아래에 언급 됨).</target>
        </trans-unit>
        <trans-unit id="bcb367cbad1664c6b3ecb131586bd7694252d3ae" translate="yes" xml:space="preserve">
          <source>This is often known as Micro-Frontends, but is not limited to that.</source>
          <target state="translated">This is often known as Micro-Frontends, but is not limited to that.</target>
        </trans-unit>
        <trans-unit id="ed595ad5f73af435979138b3d3627bf88533699b" translate="yes" xml:space="preserve">
          <source>This is only needed in rare cases for compatibility!</source>
          <target state="translated">호환성을 위해 드문 경우에만 필요합니다!</target>
        </trans-unit>
        <trans-unit id="8b0007fbd5e6cd4e550680e629295f8a99260ae0" translate="yes" xml:space="preserve">
          <source>This is the entry point your configuration, initialize it inside the constructor of your generator in order for the CLI to work:</source>
          <target state="translated">This is the entry point your configuration, initialize it inside the constructor of your generator in order for the CLI to work:</target>
        </trans-unit>
        <trans-unit id="0a04aff2cecd73b8ca74cfcee6fa3f22d2d86581" translate="yes" xml:space="preserve">
          <source>This is useful for third-party modules that rely on global variables like &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;this&lt;/code&gt; being the &lt;code&gt;window&lt;/code&gt; object. The imports loader can add the necessary &lt;code&gt;require('whatever')&lt;/code&gt; calls, so those modules work with webpack.</source>
          <target state="translated">이것은 세계와 같은 변수에 의존하는 타사 모듈에 유용 &lt;code&gt;$&lt;/code&gt; 또는 &lt;code&gt;this&lt;/code&gt; 되는 &lt;code&gt;window&lt;/code&gt; 객체입니다. 가져 오기 로더는 필요한 &lt;code&gt;require('whatever')&lt;/code&gt; 호출을 추가 할 수 있으므로 해당 모듈은 웹팩에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5c2df09178c8def03e43ef498bdd896740082e04" translate="yes" xml:space="preserve">
          <source>This is what we aim to change. Once we reach the end of this module we should be able to stop the server, hit refresh and still see our application.</source>
          <target state="translated">이것이 우리의 목표입니다. 이 모듈의 끝에 도달하면 서버를 중지하고 새로 고침을 누르고 응용 프로그램을 계속 볼 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a59dc7c1a8af0ea046bb3f848c62fef2a133578c" translate="yes" xml:space="preserve">
          <source>This is why webpack exists. It's a tool that lets you bundle your JavaScript applications (supporting both ESM and CommonJS), and it can be extended to support many different assets such as images, fonts and stylesheets.</source>
          <target state="translated">This is why webpack exists. It's a tool that lets you bundle your JavaScript applications (supporting both ESM and CommonJS), and it can be extended to support many different assets such as images, fonts and stylesheets.</target>
        </trans-unit>
        <trans-unit id="4ea053504b20d1c076639a62986210dce7e9fa8e" translate="yes" xml:space="preserve">
          <source>This is your scaffold, you add the options that the CLI will transform into a webpack configuration here. You can have many different scaffolds named as you prefer, representing different configurations like &lt;code&gt;dev.config&lt;/code&gt; or &lt;code&gt;prod.config&lt;/code&gt;:</source>
          <target state="translated">This is your scaffold, you add the options that the CLI will transform into a webpack configuration here. You can have many different scaffolds named as you prefer, representing different configurations like &lt;code&gt;dev.config&lt;/code&gt; or &lt;code&gt;prod.config&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b668cc02a4cd081db5c06a436730503d648f4ee3" translate="yes" xml:space="preserve">
          <source>This isn't a problem for most tools, but Node.js is again an exception here. For Node.js we always use the CommonJs version and expose named exports in the ESM with a ESM wrapper.</source>
          <target state="translated">This isn't a problem for most tools, but Node.js is again an exception here. For Node.js we always use the CommonJs version and expose named exports in the ESM with a ESM wrapper.</target>
        </trans-unit>
        <trans-unit id="b45f7eb5f9affbddb392058c7d7f4abfaa7fad00" translate="yes" xml:space="preserve">
          <source>This leaves any dependent modules unchanged, i.e. the code shown below will still work:</source>
          <target state="translated">이렇게하면 종속 모듈이 변경되지 않습니다. 즉, 아래 표시된 코드는 여전히 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a70c73df8117e18869be65bde0f3fe97bb191d83" translate="yes" xml:space="preserve">
          <source>This leaves any dependent modules unchanged, i.e. the code shown below:</source>
          <target state="translated">This leaves any dependent modules unchanged, i.e. the code shown below:</target>
        </trans-unit>
        <trans-unit id="46a3f41a9605c3c4e04a060a9596421064960a0d" translate="yes" xml:space="preserve">
          <source>This loader [cannot be used] with [CSS Modules] out of the box due to the way &lt;code&gt;css-loader&lt;/code&gt; processes file imports. To make them work properly, either add the css-loader&amp;rsquo;s [&lt;code&gt;importLoaders&lt;/code&gt;] option.</source>
          <target state="translated">&lt;code&gt;css-loader&lt;/code&gt; 가 파일 가져 오기를 처리 하는 방식으로 인해이 로더 는 즉시 [CSS 모듈]과 함께 사용할 수 없습니다 . 제대로 작동하게하려면 css-loader의 [ &lt;code&gt;importLoaders&lt;/code&gt; ] 옵션을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d190b8c7f6d0f3902b044fdeec81f5b5fe3f35d" translate="yes" xml:space="preserve">
          <source>This loader allows use of &lt;a href=&quot;https://github.com/substack/node-browserify/wiki/list-of-transforms&quot;&gt;browserify transforms&lt;/a&gt; via a webpack loader.</source>
          <target state="translated">이 로더를 사용 하면 웹팩 로더를 통해 browserify &lt;a href=&quot;https://github.com/substack/node-browserify/wiki/list-of-transforms&quot;&gt;변환&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe9d535f7bc40b833c73bb475459fe6f55acdbac" translate="yes" xml:space="preserve">
          <source>This loader also supports the following loader-specific option:</source>
          <target state="translated">이 로더는 다음 로더 특정 옵션도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7f1d3b58142cc368ab79e7a3d3404472a3fa8c0c" translate="yes" xml:space="preserve">
          <source>This loader is especially useful when using 3rd-party libraries having their own source maps. If not extracted and processed into the source map of the webpack bundle, browsers may misinterpret source map data. &lt;code&gt;source-map-loader&lt;/code&gt; allows webpack to maintain source map data continuity across libraries so ease of debugging is preserved.</source>
          <target state="translated">이 로더는 자체 소스 맵이있는 타사 라이브러리를 사용할 때 특히 유용합니다. 웹팩 번들의 소스 맵으로 추출되어 처리되지 않으면 브라우저가 소스 맵 데이터를 잘못 해석 할 수 있습니다. &lt;code&gt;source-map-loader&lt;/code&gt; 를 사용하면 웹팩이 라이브러리에서 소스 맵 데이터 연속성을 유지하므로 디버깅이 쉬워집니다.</target>
        </trans-unit>
        <trans-unit id="d7a42ee1ed1780a3d402296f3b86d6e6d37090a0" translate="yes" xml:space="preserve">
          <source>This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt;, which is fine because nginx takes care of making it available on your host PC.</source>
          <target state="translated">This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt; , which is fine because nginx takes care of making it available on your host PC.</target>
        </trans-unit>
        <trans-unit id="c13ed36167d63c496c0f6f91ea0830c119623ac7" translate="yes" xml:space="preserve">
          <source>This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt;, which is fine, because nginx takes care of making it available on your host PC.</source>
          <target state="translated">이것은 nginx가 호스트 PC 에서 서버를 사용할 수 있도록 관리하기 때문에 &lt;code&gt;127.0.0.1&lt;/code&gt; 에서만 서버에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8fc2cdf752fdcd706973b9e47dcc84ed0a7d59a" translate="yes" xml:space="preserve">
          <source>This may change in the future when the module system (i. e. webpack) supports loader matching by origin.</source>
          <target state="translated">This may change in the future when the module system (i. e. webpack) supports loader matching by origin.</target>
        </trans-unit>
        <trans-unit id="f6d2ee006876cf0259837350ed2e7e14e3c6e566" translate="yes" xml:space="preserve">
          <source>This may change in the future, when the module system (i. e. webpack) supports loader matching by origin.</source>
          <target state="translated">모듈 시스템 (예 : 웹팩)이 원점에 따라 로더 일치를 지원할 때 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa062b6d5cead179ec54169c8e5af773c2ed6f12" translate="yes" xml:space="preserve">
          <source>This may degrade build performance.</source>
          <target state="translated">빌드 성능이 저하 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c215681acf404e7577ad3619555fa95e88e52edf" translate="yes" xml:space="preserve">
          <source>This means dynamic requires are supported but will cause all matching modules to be included in the bundle.</source>
          <target state="translated">This means dynamic requires are supported but will cause all matching modules to be included in the bundle.</target>
        </trans-unit>
        <trans-unit id="d33959ca5bc487e790d0b48b89538a6812c28404" translate="yes" xml:space="preserve">
          <source>This means dynamic requires are supported but will cause all possible modules to be included in the bundle.</source>
          <target state="translated">이는 동적 요구가 지원되지만 가능한 모든 모듈이 번들에 포함되도록합니다.</target>
        </trans-unit>
        <trans-unit id="d283638a7cf787c4d96d0cb34244baab95292b27" translate="yes" xml:space="preserve">
          <source>This means that when we &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; this will really resolve to the file in the &lt;code&gt;browser&lt;/code&gt; property. The &lt;code&gt;browser&lt;/code&gt; property takes precedence here because it's the first item in &lt;code&gt;mainFields&lt;/code&gt;. Meanwhile, a Node.js application bundled by webpack will resolve by default to the file in the &lt;code&gt;module&lt;/code&gt; field.</source>
          <target state="translated">즉 &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; 때 &lt;code&gt;browser&lt;/code&gt; 속성 의 파일로 실제로 해석됩니다 . &lt;code&gt;browser&lt;/code&gt; 가의 첫 번째 항목이기 때문에 속성은 여기에 우선합니다 &lt;code&gt;mainFields&lt;/code&gt; . 한편, 웹팩에 번들로 제공되는 Node.js 애플리케이션은 기본적으로 &lt;code&gt;module&lt;/code&gt; 필드 의 파일로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="a5409a29ade1ec4c17b7eaa00e7d86e1af4d2f79" translate="yes" xml:space="preserve">
          <source>This means that your library expects a dependency named &lt;code&gt;lodash&lt;/code&gt; to be available in the consumer's environment.</source>
          <target state="translated">이는 라이브러리가 &lt;code&gt;lodash&lt;/code&gt; 라는 종속성 이 소비자 환경에서 사용 가능할 것으로 예상 함을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="b223fb461d993b0f22bdb24ced3b1fa69b9e092f" translate="yes" xml:space="preserve">
          <source>This method works but can have limitations or drawbacks.</source>
          <target state="translated">This method works but can have limitations or drawbacks.</target>
        </trans-unit>
        <trans-unit id="f777fcccade65135ca746231b68bbfa503391afc" translate="yes" xml:space="preserve">
          <source>This might result in a large chunk containing all external packages. It is recommended to only include your core frameworks and utilities and dynamically load the rest of the dependencies.</source>
          <target state="translated">이로 인해 모든 외부 패키지가 포함 된 큰 덩어리가 생길 수 있습니다. 핵심 프레임 워크와 유틸리티 만 포함하고 나머지 종속성을 동적으로로드하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d526e1e403decb2661013c42f1e3e331b6d3a771" translate="yes" xml:space="preserve">
          <source>This module adds stuff from Node.js that is not available in non Node.js environments.</source>
          <target state="translated">이 모듈은 Node.js가 아닌 환경에서는 사용할 수없는 Node.js의 항목을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6ab0268836547089f2dcf783f9be200724a579dd" translate="yes" xml:space="preserve">
          <source>This module can support non-standard JavaScript file formats when a compatible compiler is registered via the &lt;code&gt;require&lt;/code&gt; option. If the option is defined, &lt;code&gt;config-loader&lt;/code&gt; will attempt to require the specified module(s) before the target config is found and loaded.</source>
          <target state="translated">이 모듈은 호환 옵션 이 &lt;code&gt;require&lt;/code&gt; 옵션을 통해 등록 될 때 비표준 JavaScript 파일 형식을 지원할 수 있습니다 . 옵션이 정의되면 &lt;code&gt;config-loader&lt;/code&gt; 는 대상 구성을 찾아서로드하기 전에 지정된 모듈을 요구합니다.</target>
        </trans-unit>
        <trans-unit id="f45c003c14dd79dda08fe5ed461cf012badc0fdf" translate="yes" xml:space="preserve">
          <source>This module is exposed as &lt;code&gt;webpack.Compiler&lt;/code&gt; and can be used directly. See &lt;a href=&quot;https://github.com/pksjce/webpack-internal-examples/tree/master/compiler-example&quot;&gt;this example&lt;/a&gt; for more information.</source>
          <target state="translated">이 모듈은 &lt;code&gt;webpack.Compiler&lt;/code&gt; 로 제공되며 직접 사용할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://github.com/pksjce/webpack-internal-examples/tree/master/compiler-example&quot;&gt;이 예&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6cba27f11c42ca7da5420b0f4d9f2641d3844e73" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and Webpack v4.0.0.</source>
          <target state="translated">이 모듈에는 최소 노드 v6.9.0 및 Webpack v4.0.0이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b3a35d9e538001d0d628d180d914a08e8f5c0837" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and webpack v4.0.0.</source>
          <target state="translated">이 모듈에는 최소 노드 v6.9.0 및 웹팩 v4.0.0이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f881a340456fac03baeb3dd035c116286f43e93a" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and works with Webpack v3 and Webpack v4.</source>
          <target state="translated">이 모듈에는 최소 노드 v6.9.0이 필요하며 Webpack v3 및 Webpack v4에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c109cc9d524df5e8821464e562a600dcd9557732" translate="yes" xml:space="preserve">
          <source>This module supports extending webpack configuration files with &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring#extending-configuration-files&quot;&gt;ESLint-style&lt;/a&gt;&lt;code&gt;extends&lt;/code&gt; functionality. This feature allows users to create a &quot;base&quot; config and in essence, &quot;inherit&quot; from that base config in a separate config. A bare-bones example:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring#extending-configuration-files&quot;&gt;ESLint 스타일 &lt;/a&gt; &lt;code&gt;extends&lt;/code&gt; 기능 으로 웹팩 구성 파일 확장을 지원 합니다. 이 기능을 통해 사용자는 &quot;기본&quot;구성을 만들 수 있으며 본질적으로 별도의 구성으로 해당 기본 구성에서 &quot;상속&quot;할 수 있습니다. 베어 본 예제 :</target>
        </trans-unit>
        <trans-unit id="0dba5974c2e26fd236ce4621f1e4d99eac196b30" translate="yes" xml:space="preserve">
          <source>This module utilizes &lt;a href=&quot;https://github.com/davidtheclark/cosmiconfig&quot;&gt;&lt;code&gt;cosmiconfig&lt;/code&gt;&lt;/a&gt; which supports declaring a webpack configuration in a number of different file formats including; &lt;code&gt;.webpackrc&lt;/code&gt;, &lt;code&gt;webpack.config.js&lt;/code&gt;, and a &lt;code&gt;webpack&lt;/code&gt; property in a &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://github.com/davidtheclark/cosmiconfig&quot;&gt; &lt;code&gt;cosmiconfig&lt;/code&gt; &lt;/a&gt; 를 사용 하여 다음과 같은 다양한 파일 형식으로 웹팩 구성 선언을 지원합니다. &lt;code&gt;.webpackrc&lt;/code&gt; 는 , &lt;code&gt;webpack.config.js&lt;/code&gt; 및 &lt;code&gt;webpack&lt;/code&gt; A의 특성 &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="005b9fb11eab47f37d7ae0f0642a6320e8d309df" translate="yes" xml:space="preserve">
          <source>This needs to be changed if multiple webpack runtimes (from different compilation) are used on the same webpage.</source>
          <target state="translated">동일한 웹 페이지에서 여러 웹팩 런타임 (다른 컴파일의)을 사용하는 경우이를 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="c74a7f7edee3d3ffa14340a6baee7f2198b5a2fb" translate="yes" xml:space="preserve">
          <source>This object has the same format as a regular webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;configuration&lt;/a&gt;. Declare the properties that you want to scaffold here, e.g. &lt;code&gt;entry&lt;/code&gt;, &lt;code&gt;output&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt;. You can initialize this inside a yeoman method:</source>
          <target state="translated">This object has the same format as a regular webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;configuration&lt;/a&gt;. Declare the properties that you want to scaffold here, e.g. &lt;code&gt;entry&lt;/code&gt; , &lt;code&gt;output&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; . You can initialize this inside a yeoman method:</target>
        </trans-unit>
        <trans-unit id="fade0e5971b52e5136488a11c9a7a0a582ad3d8b" translate="yes" xml:space="preserve">
          <source>This object is passed straight to Node.js HTTPS module, so see the &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS documentation&lt;/a&gt; for more information.</source>
          <target state="translated">이 객체는 Node.js HTTPS 모듈로 바로 전달되므로 자세한 내용은 &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="685cd065e94f550102a632c29e095a4cbc23cdf9" translate="yes" xml:space="preserve">
          <source>This only works when using &lt;a href=&quot;#devservercontentbase&quot;&gt;&lt;code&gt;devServer.contentBase&lt;/code&gt;&lt;/a&gt; as a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">This only works when using &lt;a href=&quot;#devservercontentbase&quot;&gt; &lt;code&gt;devServer.contentBase&lt;/code&gt; &lt;/a&gt; as a &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4aaf96997e7b0c90746fd6c3567a4f7aa2c8ac4" translate="yes" xml:space="preserve">
          <source>This only works when using &lt;code&gt;contentBase&lt;/code&gt; as a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;contentBase&lt;/code&gt; 를 &lt;code&gt;string&lt;/code&gt; 로 사용할 때만 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="ec5d2041cc832230955cf30ad539432dc4dd1fba" translate="yes" xml:space="preserve">
          <source>This option allows loading asynchronous chunks with a custom link type, such as &amp;lt;link type=&quot;text/css&quot; ...&amp;gt;.</source>
          <target state="translated">This option allows loading asynchronous chunks with a custom link type, such as &amp;lt;link type=&quot;text/css&quot; ...&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="196e634a22e9d51b4ed72f6eb5f594f4af592b70" translate="yes" xml:space="preserve">
          <source>This option allows loading asynchronous chunks with a custom script type, such as &lt;code&gt;&amp;lt;script type=&quot;module&quot; ...&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">This option allows loading asynchronous chunks with a custom script type, such as &lt;code&gt;&amp;lt;script type=&quot;module&quot; ...&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f67294efb05edc94de65dd07b8ff77f19fd6be87" translate="yes" xml:space="preserve">
          <source>This option allows us either to choose the current &lt;code&gt;devServer&lt;/code&gt; transport mode for client/server individually or to provide custom client/server implementation. This allows to specify how browser or other client communicates with the &lt;code&gt;devServer&lt;/code&gt;.</source>
          <target state="translated">This option allows us either to choose the current &lt;code&gt;devServer&lt;/code&gt; transport mode for client/server individually or to provide custom client/server implementation. This allows to specify how browser or other client communicates with the &lt;code&gt;devServer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79925c99f93c2ec0087ae0ffced8f00ba5d1c9ed" translate="yes" xml:space="preserve">
          <source>This option allows you to set the key your module looks for to a truthy value. As it happens, the AMD support in webpack ignores the defined name anyways.</source>
          <target state="translated">이 옵션을 사용하면 모듈이 찾는 키를 정확한 값으로 설정할 수 있습니다. 웹팩의 AMD 지원은 정의 된 이름을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a6afd747886b88535614a5e26c65d541e9551535" translate="yes" xml:space="preserve">
          <source>This option allows you to whitelist services that are allowed to access the dev server.</source>
          <target state="translated">이 옵션을 사용하면 개발자 서버에 액세스 할 수있는 서비스를 허용 목록에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91fe393093d77872ac5f2cd6643dfc72c4819f36" translate="yes" xml:space="preserve">
          <source>This option broadcasts the server via &lt;a href=&quot;http://www.zeroconf.org/&quot;&gt;ZeroConf&lt;/a&gt; networking on start</source>
          <target state="translated">This option broadcasts the server via &lt;a href=&quot;http://www.zeroconf.org/&quot;&gt;ZeroConf&lt;/a&gt; networking on start</target>
        </trans-unit>
        <trans-unit id="81ebe300973eaab68c9516ed46654327e6a950da" translate="yes" xml:space="preserve">
          <source>This option broadcasts the server via ZeroConf networking on start</source>
          <target state="translated">이 옵션은 시작시 ZeroConf 네트워킹을 통해 서버를 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="4922f9a5470048d8fffcf5c1830182dbd96b1c5a" translate="yes" xml:space="preserve">
          <source>This option can also be set globally in &lt;code&gt;splitChunks.filename&lt;/code&gt;, but this isn't recommended and will likely lead to an error if &lt;a href=&quot;#splitchunkschunks&quot;&gt;&lt;code&gt;splitChunks.chunks&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;'initial'&lt;/code&gt;. Avoid setting it globally.</source>
          <target state="translated">This option can also be set globally in &lt;code&gt;splitChunks.filename&lt;/code&gt; , but this isn't recommended and will likely lead to an error if &lt;a href=&quot;#splitchunkschunks&quot;&gt; &lt;code&gt;splitChunks.chunks&lt;/code&gt; &lt;/a&gt; is not set to &lt;code&gt;'initial'&lt;/code&gt; . Avoid setting it globally.</target>
        </trans-unit>
        <trans-unit id="ea6a426438d914faf36d6b6546285906e19b322a" translate="yes" xml:space="preserve">
          <source>This option can be used to apply loaders to the dependencies of a specific module or set of modules.</source>
          <target state="translated">이 옵션은 로더를 특정 모듈 또는 모듈 세트의 종속성에 적용하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c5b0689cf315f1fa55cc15e5495f2b28e91801e" translate="yes" xml:space="preserve">
          <source>This option closes the server when stdin ends.</source>
          <target state="translated">이 옵션은 stdin이 종료되면 서버를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="e40c156196854884ee36846872a829a5ea05f019" translate="yes" xml:space="preserve">
          <source>This option controls if and how source maps are generated.</source>
          <target state="translated">이 옵션은 소스 맵 생성 여부와 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="25a84ffd7582fe4058e843c749db628513a0ab92" translate="yes" xml:space="preserve">
          <source>This option determines the modules namespace used with the &lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;. It's used to prevent source file path collisions in source maps when loading multiple libraries built with webpack.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt; 과 함께 사용되는 모듈 네임 스페이스를 결정합니다 . 지정하지 않으면 기본값은 &lt;a href=&quot;#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; 입니다. 웹팩으로 빌드 된 여러 라이브러리를로드 할 때 소스 맵에서 소스 파일 경로 충돌을 방지하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b798351fdd70c6c1546c48e9fb9352acce8a0d9a" translate="yes" xml:space="preserve">
          <source>This option determines the modules namespace used with the &lt;a href=&quot;#outputdevtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;. It's used to prevent source file path collisions in sourcemaps when loading multiple libraries built with webpack.</source>
          <target state="translated">This option determines the modules namespace used with the &lt;a href=&quot;#outputdevtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#outputlibrary&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;. It's used to prevent source file path collisions in sourcemaps when loading multiple libraries built with webpack.</target>
        </trans-unit>
        <trans-unit id="e871c5ed20a0fe73dfb6f10eee67818e5bb0feee" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output CSS file</source>
          <target state="translated">This option determines the name of each output CSS file</target>
        </trans-unit>
        <trans-unit id="9253fc678dd3f1afddea078670e8fc30e7bbc955" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output CSS file.</source>
          <target state="translated">This option determines the name of each output CSS file.</target>
        </trans-unit>
        <trans-unit id="0b05266442b54b0e6cddc19a8b33de324b93c206" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#output-path&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">이 옵션은 각 출력 번들의 이름을 결정합니다. 번들은 &lt;a href=&quot;#output-path&quot;&gt; &lt;code&gt;output.path&lt;/code&gt; &lt;/a&gt; 옵션으로 지정된 디렉토리에 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="60241ba64e943004863c8b69a47d6d28d8ba2161" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#outputpath&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#outputpath&quot;&gt; &lt;code&gt;output.path&lt;/code&gt; &lt;/a&gt; option.</target>
        </trans-unit>
        <trans-unit id="39ed67201ea950fac924dc321c8d6d5c052e39fd" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files</source>
          <target state="translated">This option determines the name of non-entry chunk files</target>
        </trans-unit>
        <trans-unit id="7abc716259255844aa6458bc599fc9537f73a262" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files.</source>
          <target state="translated">This option determines the name of non-entry chunk files.</target>
        </trans-unit>
        <trans-unit id="134a18d88afd40fa1eb2c26f1e4104950925ab2d" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files. See &lt;a href=&quot;#output-filename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; option for details on the possible values.</source>
          <target state="translated">이 옵션은 비 입력 청크 파일의 이름을 결정합니다. 가능한 값에 대한 자세한 내용 은 &lt;a href=&quot;#output-filename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="82c7b9bcf9864d6fe60a43dee4779cc300d255d6" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-initial chunk files. See &lt;a href=&quot;#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; option for details on the possible values.</source>
          <target state="translated">This option determines the name of non-initial chunk files. See &lt;a href=&quot;#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; option for details on the possible values.</target>
        </trans-unit>
        <trans-unit id="d4e4e471712f459632f09e0c39bf27d36a6dbdb0" translate="yes" xml:space="preserve">
          <source>This option does not have any effect when using the Node.js API.</source>
          <target state="translated">Node.js API를 사용할 때는이 옵션이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5458bee731a283c4d30a78fb34bb6abbb6b5e834" translate="yes" xml:space="preserve">
          <source>This option has no effect when used with &lt;code&gt;quiet&lt;/code&gt; or &lt;code&gt;noInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quiet&lt;/code&gt; 또는 &lt;code&gt;noInfo&lt;/code&gt; 와 함께 사용하면이 옵션이 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7889b2624541bc39b33a2e993ca202b95b6a36e3" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;a href=&quot;#devserverbefore&quot;&gt;&lt;code&gt;devServer.before&lt;/code&gt;&lt;/a&gt; and will be removed in v3.0.0.</source>
          <target state="translated">This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;a href=&quot;#devserverbefore&quot;&gt; &lt;code&gt;devServer.before&lt;/code&gt; &lt;/a&gt; and will be removed in v3.0.0.</target>
        </trans-unit>
        <trans-unit id="5bfcabd6c992e600f41a1aa251ee7329a7ba5fb6" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;code&gt;Rule.use&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;Rule.use&lt;/code&gt; 대신 &lt;strong&gt;사용되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0b2615cafe4c11a02e3c6b641329caeb2b73812b" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;code&gt;before&lt;/code&gt; and will be removed in v3.0.0.</source>
          <target state="translated">이 옵션은 &lt;strong&gt;사용되지&lt;/strong&gt; 찬성 &lt;code&gt;before&lt;/code&gt; 및 v3.0.0에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="eeeee94e8478cf5a5c7d08179d6f3b8a21bf53e1" translate="yes" xml:space="preserve">
          <source>This option is only activated (via &lt;code&gt;NodeSourcePlugin&lt;/code&gt;) when the target is unspecified, &quot;web&quot; or &quot;webworker&quot;.</source>
          <target state="translated">이 옵션은 대상이 지정되지 않은 경우 ( &quot;web&quot;또는 &quot;webworker&quot;인 경우 에만 &lt;code&gt;NodeSourcePlugin&lt;/code&gt; 을 통해 ) 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="a526b9466ed989feda820cb55f9f69f26039a4f1" translate="yes" xml:space="preserve">
          <source>This option is only used when &lt;a href=&quot;devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; uses a SourceMap option which writes an output file.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 이 출력 파일을 쓰는 SourceMap 옵션을 사용하는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9d105f5fd42ba76d220e6270bcb29980c2aad7c5" translate="yes" xml:space="preserve">
          <source>This option is only used when &lt;a href=&quot;devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; uses an options which requires module names.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 이 모듈 이름이 필요한 옵션을 사용하는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="de31799adc89f7a4cd6058f2c07e2539b194dca6" translate="yes" xml:space="preserve">
          <source>This option is useful when you want to have fine-grained control over how the CommonsChunk algorithm determines where modules should be moved to.</source>
          <target state="translated">이 옵션은 CommonsChunk 알고리즘이 모듈을 이동할 위치를 결정하는 방법을 세밀하게 제어하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fc94bd5f6db752fb7c18f0955317532502daaadf" translate="yes" xml:space="preserve">
          <source>This option lets the browser open with your local IP.</source>
          <target state="translated">이 옵션을 사용하면 브라우저가 로컬 IP로 열립니다.</target>
        </trans-unit>
        <trans-unit id="28aab3ea772c4e463a58a18eed36c7b2231756dc" translate="yes" xml:space="preserve">
          <source>This option lets you precisely control what bundle information gets displayed. This can be a nice middle ground if you want some bundle information, but not all of it.</source>
          <target state="translated">이 옵션을 사용하면 표시 할 번들 정보를 정확하게 제어 할 수 있습니다. 번들 정보를 원한다면 모두 좋은 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7109dd2cd4f2ad4d9088875a13900004670acc13" translate="yes" xml:space="preserve">
          <source>This option lets you reduce the compilations in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;. By default in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt;, it's possible to only compile when a certain file is requested.</source>
          <target state="translated">This option lets you reduce the compilations in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;. By default in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt; , it's possible to only compile when a certain file is requested.</target>
        </trans-unit>
        <trans-unit id="7179b6103bce281929f60e10386c1b58232fbfd9" translate="yes" xml:space="preserve">
          <source>This option lets you reduce the compilations in &lt;strong&gt;lazy mode&lt;/strong&gt;. By default in &lt;strong&gt;lazy mode&lt;/strong&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt;, it's possible to only compile when a certain file is requested.</source>
          <target state="translated">이 옵션을 사용하면 &lt;strong&gt;지연 모드&lt;/strong&gt; 에서 컴파일을 줄일 수 있습니다 . &lt;strong&gt;지연 모드&lt;/strong&gt; 에서는 기본적으로 모든 요청에 ​​새로운 컴파일이 수행됩니다. &lt;code&gt;filename&lt;/code&gt; 을 사용하면 특정 파일이 요청 된 경우에만 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="792f455240a68f9b61e21b9e79e2fc861945d378" translate="yes" xml:space="preserve">
          <source>This option specifies the &lt;strong&gt;public URL&lt;/strong&gt; of the output directory when referenced in a browser. A relative URL is resolved relative to the HTML page (or &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag). Server-relative URLs, protocol-relative URLs or absolute URLs are also possible and sometimes required, i. e. when hosting assets on a CDN.</source>
          <target state="translated">이 옵션 은 브라우저에서 참조 될 때 출력 디렉토리 의 &lt;strong&gt;공용 URL&lt;/strong&gt; 을 지정 합니다. 상대 URL은 HTML 페이지 (또는 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 태그)를 기준으로 확인됩니다. 서버 기준 URL, 프로토콜 기준 URL 또는 절대 URL도 가능하며 때로는 CDN에서 자산을 호스팅 할 때 필요합니다.</target>
        </trans-unit>
        <trans-unit id="60acf0ba0bbca59f35e19be67e124a4e268482f8" translate="yes" xml:space="preserve">
          <source>This option will enable &lt;a href=&quot;http://eslint.org/docs/user-guide/command-line-interface#fix&quot;&gt;ESLint autofix feature&lt;/a&gt;.</source>
          <target state="translated">이 옵션은 &lt;a href=&quot;http://eslint.org/docs/user-guide/command-line-interface#fix&quot;&gt;ESLint 자동 수정 기능&lt;/a&gt; 을 활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="e44d33ad69dc261c348171441ef0d4d67723a9af" translate="yes" xml:space="preserve">
          <source>This option will enable caching of the linting results into a file. This is particularly useful in reducing linting time when doing a full build.</source>
          <target state="translated">이 옵션은 린트 결과를 파일로 캐싱 할 수 있습니다. 이것은 전체 빌드를 수행 할 때 보푸라기 시간을 줄이는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b43f40ea06f007473435e0404327c4b4d96e7f5c" translate="yes" xml:space="preserve">
          <source>This package allows transpiling JavaScript files using &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack&lt;/a&gt;.</source>
          <target state="translated">이 패키지는 &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack을&lt;/a&gt; 사용하여 JavaScript 파일을 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e114be6f0d2032ec10de78d94815095479360859" translate="yes" xml:space="preserve">
          <source>This page describes the options that affect the behavior of webpack-dev-server (short: dev-server).</source>
          <target state="translated">이 페이지는 webpack-dev-server의 동작에 영향을주는 옵션에 대해 설명합니다 (약식 : dev-server).</target>
        </trans-unit>
        <trans-unit id="a824680e81d3e233a63095d5ac7ebc89dee47393" translate="yes" xml:space="preserve">
          <source>This plugin adds specific references to containers as externals and allows to import remote modules from these containers. It also calls the &lt;code&gt;override&lt;/code&gt; API of these containers to provide overrides to them. Local overrides (via &lt;code&gt;__webpack_override__&lt;/code&gt; or &lt;code&gt;override&lt;/code&gt; API when build is also a container) and specified overrides are provided to all referenced containers.</source>
          <target state="translated">This plugin adds specific references to containers as externals and allows to import remote modules from these containers. It also calls the &lt;code&gt;override&lt;/code&gt; API of these containers to provide overrides to them. Local overrides (via &lt;code&gt;__webpack_override__&lt;/code&gt; or &lt;code&gt;override&lt;/code&gt; API when build is also a container) and specified overrides are provided to all referenced containers.</target>
        </trans-unit>
        <trans-unit id="f8fbd038fa70bb58f9637ee789bafc084098c6e1" translate="yes" xml:space="preserve">
          <source>This plugin and it's options can also be invoked via the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;:</source>
          <target state="translated">This plugin and it's options can also be invoked via the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="eee9d72cff11504900ba3d87265458efdd7aab58" translate="yes" xml:space="preserve">
          <source>This plugin and it's options can also be invoked via the CLI:</source>
          <target state="translated">이 플러그인과 옵션은 CLI를 통해 호출 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d6ec8e843f819d7e74de36d5d13f0736352ecb7" translate="yes" xml:space="preserve">
          <source>This plugin can be used in two different modes, &lt;em&gt;scoped&lt;/em&gt; and &lt;em&gt;mapped&lt;/em&gt;.</source>
          <target state="translated">이 플러그인은 &lt;em&gt;scoped&lt;/em&gt; 및 &lt;em&gt;map의&lt;/em&gt; 두 가지 모드로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a797b2fc195f28c7da8671fb5c79b902eebe34d" translate="yes" xml:space="preserve">
          <source>This plugin combines &lt;code&gt;ContainerPlugin&lt;/code&gt; and &lt;code&gt;ContainerReferencePlugin&lt;/code&gt;. Overrides and overridables are combined into a single list of specified shared modules.</source>
          <target state="translated">This plugin combines &lt;code&gt;ContainerPlugin&lt;/code&gt; and &lt;code&gt;ContainerReferencePlugin&lt;/code&gt; . Overrides and overridables are combined into a single list of specified shared modules.</target>
        </trans-unit>
        <trans-unit id="7140c8d286fb2760850dbfe926da824f55b8f42d" translate="yes" xml:space="preserve">
          <source>This plugin creates an additional container entry with the specified exposed modules. It also uses the &lt;code&gt;OverridablesPlugin&lt;/code&gt; internally and exposes the &lt;code&gt;override&lt;/code&gt; API to consumer of the container.</source>
          <target state="translated">This plugin creates an additional container entry with the specified exposed modules. It also uses the &lt;code&gt;OverridablesPlugin&lt;/code&gt; internally and exposes the &lt;code&gt;override&lt;/code&gt; API to consumer of the container.</target>
        </trans-unit>
        <trans-unit id="fda8ea39c72e0e691ebbc3795728b5fc978d18df" translate="yes" xml:space="preserve">
          <source>This plugin creates bundles with translations baked in. So you can serve the translated bundle to your clients.</source>
          <target state="translated">이 플러그인은 번역이 포함 된 번들을 작성하므로 번역 된 번들을 클라이언트에 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46f3843161330f7496c2a700471ef010db97a960" translate="yes" xml:space="preserve">
          <source>This plugin enables more fine grained control of source map generation. It is also enabled automatically by certain settings of the &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">이 플러그인을 사용하면 소스 맵 생성을보다 세밀하게 제어 할 수 있습니다. 또한 &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 구성 옵션 의 특정 설정에 의해 자동으로 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="308436c86675d805a1b54d3185c57d08f2121250" translate="yes" xml:space="preserve">
          <source>This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</source>
          <target state="translated">이 플러그인은 CSS를 별도의 파일로 추출합니다. CSS를 포함하는 JS 파일 당 CSS 파일을 작성합니다. CSS 및 SourceMap의 주문형 로딩을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="52604672e0fee1f1648352992bdf12b764549a3c" translate="yes" xml:space="preserve">
          <source>This plugin is used in a separate webpack config exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;dll-plugin#dllreferenceplugin&quot;&gt;&lt;code&gt;DllReferencePlugin&lt;/code&gt;&lt;/a&gt; to map dependencies.</source>
          <target state="translated">이 플러그인은 별도의 webpack 설정에서 독점적으로 dll 전용 번들을 만드는 데 사용됩니다. &lt;a href=&quot;dll-plugin#dllreferenceplugin&quot;&gt; &lt;code&gt;DllReferencePlugin&lt;/code&gt; &lt;/a&gt; 이 종속성을 맵핑하는 데 사용 하는 &lt;code&gt;manifest.json&lt;/code&gt; 파일을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="81adc70be0ff9e1f95105beec6a31427593ebda0" translate="yes" xml:space="preserve">
          <source>This plugin is used in a separate webpack configuration exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;#dllreferenceplugin&quot;&gt;&lt;code&gt;DllReferencePlugin&lt;/code&gt;&lt;/a&gt; to map dependencies.</source>
          <target state="translated">This plugin is used in a separate webpack configuration exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;#dllreferenceplugin&quot;&gt; &lt;code&gt;DllReferencePlugin&lt;/code&gt; &lt;/a&gt; to map dependencies.</target>
        </trans-unit>
        <trans-unit id="95ab448688001829beed83209692c645fd511719" translate="yes" xml:space="preserve">
          <source>This plugin is used in the primary webpack config, it references the dll-only-bundle(s) to require pre-built dependencies.</source>
          <target state="translated">이 플러그인은 기본 웹팩 구성에서 사용되며 사전 빌드 된 종속성을 요구하기 위해 dll 전용 번들을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="2a588056406d111134a66418e199500eed93ea9b" translate="yes" xml:space="preserve">
          <source>This plugin makes specific modules &quot;overridable&quot;. A local API (&lt;code&gt;__webpack_override__&lt;/code&gt;) allows to provide overrides.</source>
          <target state="translated">This plugin makes specific modules &quot;overridable&quot;. A local API ( &lt;code&gt;__webpack_override__&lt;/code&gt; ) allows to provide overrides.</target>
        </trans-unit>
        <trans-unit id="8f11ee21edd3718f762dd02cff0cac34b96334ca" translate="yes" xml:space="preserve">
          <source>This plugin should be used only on &lt;code&gt;production&lt;/code&gt; builds without &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain, especially if you want to have HMR in &lt;code&gt;development&lt;/code&gt;.</source>
          <target state="translated">이 플러그인은 로더 체인에 &lt;code&gt;style-loader&lt;/code&gt; 가 없는 &lt;code&gt;production&lt;/code&gt; 빌드 , 특히 HMR을 &lt;code&gt;development&lt;/code&gt; 하려는 경우에만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="678af3938c3be10d5d0d4625ea9d01b638693180" translate="yes" xml:space="preserve">
          <source>This plugin should not be used with &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain.</source>
          <target state="translated">This plugin should not be used with &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain.</target>
        </trans-unit>
        <trans-unit id="f5cca03718053fc9520367846f9709b01dcb7529" translate="yes" xml:space="preserve">
          <source>This plugin supports the following options:</source>
          <target state="translated">이 플러그인은 다음 옵션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="feee9da7ca86409cd9c2790742caad4fc594057c" translate="yes" xml:space="preserve">
          <source>This plugin supports the use of Google's Closure Tools with webpack.</source>
          <target state="translated">이 플러그인은 웹팩에서 Google의 폐쇄 도구 사용을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9d78bb9481a5f3f627cce3d98de1d0a37c73f18f" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://cssnano.co/&quot;&gt;cssnano&lt;/a&gt; to optimize and minify your CSS.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://cssnano.co/&quot;&gt;cssnano&lt;/a&gt; to optimize and minify your CSS.</target>
        </trans-unit>
        <trans-unit id="03210a1e739a155ac82e779ddeef11361c965db2" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify()&lt;/a&gt; to minify your JSON.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify()&lt;/a&gt; to minify your JSON.</target>
        </trans-unit>
        <trans-unit id="b06506995ff20545e054b285bfd17c9d57869022" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</source>
          <target state="translated">이 플러그인은 &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;terser&lt;/a&gt; 를 사용 하여 JavaScript를 축소합니다.</target>
        </trans-unit>
        <trans-unit id="c537f96d0b90551bdb8c425afb315d141ed85e22" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;imagemin&lt;/a&gt; to optimize your images.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;imagemin&lt;/a&gt; to optimize your images.</target>
        </trans-unit>
        <trans-unit id="2ccca80fad8f11ea1ca02f91ea558e659f64b4f4" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;UglifyJS v3 &lt;/a&gt;&lt;a href=&quot;https://npmjs.com/package/uglify-es&quot;&gt;(&lt;code&gt;uglify-es&lt;/code&gt;)&lt;/a&gt; to minify your JavaScript</source>
          <target state="translated">이 플러그인은 &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;UglifyJS v3 &lt;/a&gt;&lt;a href=&quot;https://npmjs.com/package/uglify-es&quot;&gt;( &lt;code&gt;uglify-es&lt;/code&gt; )&lt;/a&gt; 를 사용하여 JavaScript를 축소 합니다</target>
        </trans-unit>
        <trans-unit id="7a92893dc06658363c932ed4b067127319ce2731" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/terser-js/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://github.com/terser-js/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</target>
        </trans-unit>
        <trans-unit id="7d1f3177c67193f6bb115a3f0c3321ffe0b2f66b" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/terser/html-minifier-terser&quot;&gt;html-minifier-terser&lt;/a&gt; to optimize and minify your HTML.</source>
          <target state="translated">This plugin uses &lt;a href=&quot;https://github.com/terser/html-minifier-terser&quot;&gt;html-minifier-terser&lt;/a&gt; to optimize and minify your HTML.</target>
        </trans-unit>
        <trans-unit id="a87a75bf8d2601bfb557a819c4f455325b79b898" translate="yes" xml:space="preserve">
          <source>This plugin will be removed in the future as it only exists for migration.</source>
          <target state="translated">이 플러그인은 마이그레이션 용으로 만 존재하므로 향후에 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="417ca5f69549104dc84916c24cec679ccbbff0a8" translate="yes" xml:space="preserve">
          <source>This plugin will cause hashes to be based on the relative path of the module, generating a four character string as the module id. Suggested for use in production.</source>
          <target state="translated">이 플러그인은 해시가 모듈의 상대 경로를 기반으로하여 모듈 ID로 4 개의 문자열을 생성합니다. 생산에 사용하도록 제안합니다.</target>
        </trans-unit>
        <trans-unit id="69190150b569dd2720829fe25dc4429844f6fdb0" translate="yes" xml:space="preserve">
          <source>This plugin will enable the same concatenation behavior in webpack.</source>
          <target state="translated">이 플러그인은 웹팩에서 동일한 연결 동작을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="79648c5f02c1648bcbbf1396b0968514a67250e6" translate="yes" xml:space="preserve">
          <source>This plugin will enable the same concatenation behavior in webpack. By default this plugin is already enabled in &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;production &lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; and disabled otherwise. If you need to override the production &lt;code&gt;mode&lt;/code&gt; optimization, set the &lt;a href=&quot;../configuration/optimization#optimizationconcatenatemodules&quot;&gt;&lt;code&gt;optimization.concatenateModules&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;. To enable concatenation behavior in other modes, you can add &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; manually or use the &lt;code&gt;optimization.concatenateModules&lt;/code&gt; option:</source>
          <target state="translated">This plugin will enable the same concatenation behavior in webpack. By default this plugin is already enabled in &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;production &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt; and disabled otherwise. If you need to override the production &lt;code&gt;mode&lt;/code&gt; optimization, set the &lt;a href=&quot;../configuration/optimization#optimizationconcatenatemodules&quot;&gt; &lt;code&gt;optimization.concatenateModules&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt; . To enable concatenation behavior in other modes, you can add &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; manually or use the &lt;code&gt;optimization.concatenateModules&lt;/code&gt; option:</target>
        </trans-unit>
        <trans-unit id="e20365f34269feb4c5eead0efe10e444b9130e1c" translate="yes" xml:space="preserve">
          <source>This project was inspired by, and is a heavily modified version of &lt;code&gt;sasslint-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">이 프로젝트는 영감을 받았으며 크게 수정 된 &lt;code&gt;sasslint-webpack-plugin&lt;/code&gt; 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="7bdb7bc7b7c2ba2cfe5e9ae00a3972492e0d233d" translate="yes" xml:space="preserve">
          <source>This project was inspired the following open source work:</source>
          <target state="translated">This project was inspired the following open source work:</target>
        </trans-unit>
        <trans-unit id="790283d62998f77b2077ace49fbf145534de7451" translate="yes" xml:space="preserve">
          <source>This property allows webpack to control what files are used to calculate performance hints. The default function is seen below:</source>
          <target state="translated">이 속성을 사용하면 웹팩에서 성능 힌트를 계산하는 데 사용되는 파일을 제어 할 수 있습니다. 기본 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a8a42a8482756c98603a8fd3196d37d5d11f455" translate="yes" xml:space="preserve">
          <source>This property allows webpack to control what files are used to calculate performance hints. The default function is:</source>
          <target state="translated">This property allows webpack to control what files are used to calculate performance hints. The default function is:</target>
        </trans-unit>
        <trans-unit id="7f1939ad5234336835a3746ffcaab10be52bf776" translate="yes" xml:space="preserve">
          <source>This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/getting-started&quot;&gt;getting started&lt;/a&gt;.</source>
          <target state="translated">This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/getting-started&quot;&gt;getting started&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5ce7936b8dd1ab00c6a839051bb3b049b5d0046c" translate="yes" xml:space="preserve">
          <source>This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/installation&quot;&gt;installation&lt;/a&gt;.</source>
          <target state="translated">이 섹션에는 웹팩이 제공하는 다양한 도구 및 기능을 이해하고 마스터하기위한 안내서가 포함되어 있습니다. 첫 번째는 &lt;a href=&quot;guides/installation&quot;&gt;설치 과정을&lt;/a&gt; 안내하는 간단한 안내서입니다 .</target>
        </trans-unit>
        <trans-unit id="766149f8898bac17386a9e716229c762e8f543e5" translate="yes" xml:space="preserve">
          <source>This section covers all &lt;strong&gt;variables&lt;/strong&gt; available in code compiled with webpack. Modules will have access to certain data from the compilation process through &lt;code&gt;module&lt;/code&gt; and other variables.</source>
          <target state="translated">이 섹션은 웹팩으로 컴파일 된 코드에서 사용 가능한 모든 &lt;strong&gt;변수를&lt;/strong&gt; 다룹니다 . 모듈은 &lt;code&gt;module&lt;/code&gt; 및 기타 변수를 통해 컴파일 프로세스에서 특정 데이터에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a158e22d6effe6b38eb57854423c9c249557bde" translate="yes" xml:space="preserve">
          <source>This section covers all methods available in code compiled with webpack. When using webpack to bundle your application, you can pick from a variety of module syntax styles including &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ES6&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/CommonJS&quot;&gt;CommonJS&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Asynchronous_module_definition&quot;&gt;AMD&lt;/a&gt;.</source>
          <target state="translated">이 섹션은 웹팩으로 컴파일 된 코드에서 사용 가능한 모든 메소드를 다룹니다. 웹팩을 사용하여 애플리케이션을 번들링 할 때 &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ES6&lt;/a&gt; , &lt;a href=&quot;https://en.wikipedia.org/wiki/CommonJS&quot;&gt;CommonJS&lt;/a&gt; 및 &lt;a href=&quot;https://en.wikipedia.org/wiki/Asynchronous_module_definition&quot;&gt;AMD를&lt;/a&gt; 포함한 다양한 모듈 구문 스타일 중에서 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1dc3345120a2ce199a3597985ded51c910d2491c" translate="yes" xml:space="preserve">
          <source>This section describes webpack internals and can be useful for plugin developers</source>
          <target state="translated">This section describes webpack internals and can be useful for plugin developers</target>
        </trans-unit>
        <trans-unit id="86a104a27c2cf4c551b1216d744083e3310b40f0" translate="yes" xml:space="preserve">
          <source>This section will focus on adding an offline experience to our app. We'll achieve this using a Google project called &lt;a href=&quot;https://github.com/GoogleChrome/workbox&quot;&gt;Workbox&lt;/a&gt; which provides tools that help make offline support for web apps easier to setup.</source>
          <target state="translated">이 섹션에서는 앱에 오프라인 환경을 추가하는 데 중점을 둡니다. &lt;a href=&quot;https://github.com/GoogleChrome/workbox&quot;&gt;웹앱&lt;/a&gt; 에 대한 오프라인 지원을보다 쉽게 ​​설정할 수있는 도구를 제공하는 Workbox 라는 Google 프로젝트를 사용하여이를 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3efc36ab784fb7c924e3fdee5581efb69eaec3d5" translate="yes" xml:space="preserve">
          <source>This set of options allows you to better debug the application containing assets compiled with webpack</source>
          <target state="translated">이 옵션 세트를 사용하면 웹팩으로 컴파일 된 자산이 포함 된 응용 프로그램을보다 효과적으로 디버깅 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="98aa68cf05a9c0e5328953ace43257566681626c" translate="yes" xml:space="preserve">
          <source>This set of options allows you to manipulate certain &lt;a href=&quot;../configuration/output&quot;&gt;output&lt;/a&gt; parameters of your build.</source>
          <target state="translated">이 옵션 세트를 사용하면 빌드의 특정 &lt;a href=&quot;../configuration/output&quot;&gt;출력&lt;/a&gt; 매개 변수 를 조작 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e6daec4f6bdcb4007ef4577b7c389610dcd3bc0" translate="yes" xml:space="preserve">
          <source>This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages.</source>
          <target state="translated">This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages.</target>
        </trans-unit>
        <trans-unit id="1b7899ac54672adc98b8151b2866a403aa9d27ff" translate="yes" xml:space="preserve">
          <source>This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages. Default:</source>
          <target state="translated">이 옵션 세트는 위에 설정된 &lt;code&gt;resolve&lt;/code&gt; 속성 과 동일 하지만 webpack의 &lt;a href=&quot;../concepts/loaders&quot;&gt;로더&lt;/a&gt; 패키지 를 확인하는 데만 사용됩니다 . 기본:</target>
        </trans-unit>
        <trans-unit id="e8b7b6e71fdb01ac9c18b2d93058863c80b0f482" translate="yes" xml:space="preserve">
          <source>This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory in the project root:</source>
          <target state="translated">This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory in the project root:</target>
        </trans-unit>
        <trans-unit id="1f833ed9c75f47b94fbdc43cd56d37d70b51115f" translate="yes" xml:space="preserve">
          <source>This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory:</source>
          <target state="translated">이 옵션 세트는 &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server에&lt;/a&gt; 의해 선택 되며 다양한 방식으로 동작을 변경하는 데 사용될 수 있습니다. 다음은 &lt;code&gt;dist/&lt;/code&gt; 디렉토리 에서 모든 것을 압축하고 제공하는 간단한 예제입니다 :</target>
        </trans-unit>
        <trans-unit id="a8eecff3ab5954bf0b0246b89e983ae677f253d2" translate="yes" xml:space="preserve">
          <source>This setting is primarily used as a workaround for &lt;a href=&quot;https://github.com/webpack-contrib/style-loader/issues/163&quot;&gt;css clashes&lt;/a&gt; when using one or more &lt;a href=&quot;https://robertknight.github.io/posts/webpack-dll-plugins/&quot;&gt;DllPlugin&lt;/a&gt;'s. &lt;code&gt;base&lt;/code&gt; allows you to prevent either the &lt;em&gt;app&lt;/em&gt;'s css (or &lt;em&gt;DllPlugin2&lt;/em&gt;'s css) from overwriting &lt;em&gt;DllPlugin1&lt;/em&gt;'s css by specifying a css module id base which is greater than the range used by &lt;em&gt;DllPlugin1&lt;/em&gt; e.g.:</source>
          <target state="translated">이 설정은 주로 하나 이상의 &lt;a href=&quot;https://robertknight.github.io/posts/webpack-dll-plugins/&quot;&gt;DllPlugin을&lt;/a&gt; 사용할 때 &lt;a href=&quot;https://github.com/webpack-contrib/style-loader/issues/163&quot;&gt;CSS 충돌에&lt;/a&gt; 대한 해결 방법으로 사용됩니다 . &lt;code&gt;base&lt;/code&gt; 는 어느 것을 방지 할 수 있도록 &lt;em&gt;응용 프로그램&lt;/em&gt; 의 CSS (또는 &lt;em&gt;DllPlugin2&lt;/em&gt; 덮어의 CSS)를 &lt;em&gt;DllPlugin1&lt;/em&gt; 에서 사용하는 범위보다 큰 CSS 모듈 ID베이스 지정의 CSS를 &lt;em&gt;DllPlugin1&lt;/em&gt; 예를 :&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8fccd0349e08bbe9dad684332c1fd923a8ec939" translate="yes" xml:space="preserve">
          <source>This setup makes your code a lot more portable as everything that is closely coupled now lives together. Let's say you want to use &lt;code&gt;/my-component&lt;/code&gt; in another project, simply copy or move it into the &lt;code&gt;/components&lt;/code&gt; directory over there. As long as you've installed any &lt;em&gt;external dependencies&lt;/em&gt; and your &lt;em&gt;configuration has the same loaders&lt;/em&gt; defined, you should be good to go.</source>
          <target state="translated">이 설정은 밀접하게 결합 된 모든 것이 함께 존재하므로 코드를 훨씬 더 이식성있게 만듭니다. 다른 프로젝트에서 &lt;code&gt;/my-component&lt;/code&gt; 를 사용하고 싶은 경우 간단히 &lt;code&gt;/components&lt;/code&gt; 디렉토리 로 복사하거나 이동하십시오 . &lt;em&gt;외부 종속성을&lt;/em&gt; 설치 하고 &lt;em&gt;구성에 동일한 로더가&lt;/em&gt; 정의되어 있으면 계속 진행해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ea123abc7292c6bf233ab48356c85638b29b540" translate="yes" xml:space="preserve">
          <source>This simply prepends &lt;code&gt;var $ = require(&quot;jquery&quot;);&lt;/code&gt; to &lt;code&gt;example.js&lt;/code&gt;.</source>
          <target state="translated">이것은 단순히 앞에 추가합니다. &lt;code&gt;var $ = require(&quot;jquery&quot;);&lt;/code&gt; 에 &lt;code&gt;example.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e10024d095957cbce567008893996f42ae796af8" translate="yes" xml:space="preserve">
          <source>This small library is a core utility in webpack but can also be used elsewhere to provide a similar plugin interface. Many objects in webpack extend the &lt;code&gt;Tapable&lt;/code&gt; class. The class exposes &lt;code&gt;tap&lt;/code&gt;, &lt;code&gt;tapAsync&lt;/code&gt;, and &lt;code&gt;tapPromise&lt;/code&gt; methods which plugins can use to inject custom build steps that will be fired throughout a compilation.</source>
          <target state="translated">이 작은 라이브러리는 웹팩의 핵심 유틸리티이지만 유사한 플러그인 인터페이스를 제공하기 위해 다른 곳에서도 사용할 수 있습니다. 웹팩의 많은 객체는 &lt;code&gt;Tapable&lt;/code&gt; 클래스를 확장합니다 . 이 클래스는 &lt;code&gt;tap&lt;/code&gt; , &lt;code&gt;tapAsync&lt;/code&gt; 및 &lt;code&gt;tapPromise&lt;/code&gt; 메소드를 제공 합니다.이 메소드는 플러그인이 컴파일 과정 에서 시작될 사용자 정의 빌드 단계를 주입하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5ea9cb5352fb456a9a9457c25f28a4bfdc7c1d4" translate="yes" xml:space="preserve">
          <source>This syntax is used to describe all the possible ways that an external library can be available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt;).</source>
          <target state="translated">이 구문은 외부 라이브러리를 사용할 수있는 모든 가능한 방법을 설명하는 데 사용됩니다. &lt;code&gt;lodash&lt;/code&gt; 는 AMD 및 CommonJS 모듈 시스템에서 &lt;code&gt;lodash&lt;/code&gt; 로 사용할 수 있지만 전역 변수 형식 으로 &lt;code&gt;_&lt;/code&gt; 로 사용할 수 있습니다 . &lt;code&gt;subtract&lt;/code&gt; 여기하는 속성을 통해 볼 수 있습니다 &lt;code&gt;subtract&lt;/code&gt; 세계에서 &lt;code&gt;math&lt;/code&gt; 객체 (예 : &lt;code&gt;window['math']['subtract']&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="36e03fd539edd94f1786822559caa0e0ba678475" translate="yes" xml:space="preserve">
          <source>This syntax is used to describe all the possible ways that an external library can be made available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt;).</source>
          <target state="translated">This syntax is used to describe all the possible ways that an external library can be made available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="427ef31c4a006d01b5992ffbd53818e83fa34ef1" translate="yes" xml:space="preserve">
          <source>This tells &lt;code&gt;webpack-dev-server&lt;/code&gt; to serve the files from the &lt;code&gt;dist&lt;/code&gt; directory on &lt;code&gt;localhost:8080&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;webpack-dev-server&lt;/code&gt; 가 &lt;code&gt;localhost:8080&lt;/code&gt; 의 &lt;code&gt;dist&lt;/code&gt; 디렉토리에서 파일을 제공하도록 지시 합니다 .</target>
        </trans-unit>
        <trans-unit id="25afacdd59de37cfa49edcf6f68266b1dd1e952a" translate="yes" xml:space="preserve">
          <source>This translates to something like:</source>
          <target state="translated">This translates to something like:</target>
        </trans-unit>
        <trans-unit id="4cc861c1f2b80d6e02a543239491223597388780" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;jade-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">이것은 사용 &lt;code&gt;jade-loader&lt;/code&gt; 에 대한 &lt;code&gt;.jade&lt;/code&gt; 파일 및 &lt;a href=&quot;../loaders/style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../loaders/css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; &lt;/a&gt; 에 대한 &lt;code&gt;.css&lt;/code&gt; 파일을.</target>
        </trans-unit>
        <trans-unit id="f9e99c7cf1029abbb4fbb5d7e231d7ca99dccb10" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;pug-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">This uses the &lt;code&gt;pug-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; &lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</target>
        </trans-unit>
        <trans-unit id="7c17361464bcd8285937109314dec7f4ead3d25c" translate="yes" xml:space="preserve">
          <source>This variable is equal to default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</source>
          <target state="translated">이 변수는 &lt;code&gt;module.exports&lt;/code&gt; 의 기본값 (예 : 객체)과 같습니다. 경우 &lt;code&gt;module.exports&lt;/code&gt; 가 덮어 도착, &lt;code&gt;exports&lt;/code&gt; 더 이상 수출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f73885cf12c1cd2817d5d1be8d01158624c8f077" translate="yes" xml:space="preserve">
          <source>This variable is equal to the default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</source>
          <target state="translated">This variable is equal to the default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</target>
        </trans-unit>
        <trans-unit id="d39d49f3373eb27aa1cf74db3b29f828968cc1a8" translate="yes" xml:space="preserve">
          <source>This variable is only available with the &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; or the &lt;code&gt;ExtendedAPIPlugin&lt;/code&gt;. It provides access to the hash of the compilation.</source>
          <target state="translated">이 변수는 &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; 또는 &lt;code&gt;ExtendedAPIPlugin&lt;/code&gt; 에서만 사용할 수 있습니다 . 컴파일 해시에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c7b6d958a04307a8e984f741ba381d787423c0c9" translate="yes" xml:space="preserve">
          <source>This walkthrough stems from &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; and &lt;a href=&quot;development&quot;&gt;Development&lt;/a&gt;. Please ensure you are familiar with the concepts/setup introduced in those guides before continuing on.</source>
          <target state="translated">이 연습은 &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; and &lt;a href=&quot;development&quot;&gt;Development에서 시작&lt;/a&gt; 됩니다. 계속하기 전에 해당 안내서에 소개 된 개념 / 설정에 익숙해야합니다.</target>
        </trans-unit>
        <trans-unit id="9530095a465e229292ca12606b608bacc0045a8a" translate="yes" xml:space="preserve">
          <source>This way you could dynamically load an A/B test which provides a different version of a shared module.</source>
          <target state="translated">This way you could dynamically load an A/B test which provides a different version of a shared module.</target>
        </trans-unit>
        <trans-unit id="39b032e2d15b2635b3b2ab29289187ca5c1a282c" translate="yes" xml:space="preserve">
          <source>This will add a dependency to &lt;code&gt;extract-style-loader/getStyles!./file.js&lt;/code&gt; and treat the result as &lt;code&gt;file.js.css&lt;/code&gt;. Because &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; has a rule matching &lt;code&gt;/\.css$/&lt;/code&gt; and it will apply to this dependency.</source>
          <target state="translated">This will add a dependency to &lt;code&gt;extract-style-loader/getStyles!./file.js&lt;/code&gt; and treat the result as &lt;code&gt;file.js.css&lt;/code&gt; . Because &lt;a href=&quot;../configuration/module#modulerules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; &lt;/a&gt; has a rule matching &lt;code&gt;/\.css$/&lt;/code&gt; and it will apply to this dependency.</target>
        </trans-unit>
        <trans-unit id="a6ba31004997005b6c7977fd4e63f3ec4f27b1b2" translate="yes" xml:space="preserve">
          <source>This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt; and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt; and the filename will be &lt;code&gt;bundle.js&lt;/code&gt;</source>
          <target state="translated">그러면 소스 코드가 &lt;code&gt;index.js&lt;/code&gt; 로 입력되고 출력 번들 파일의 경로는 &lt;code&gt;dist&lt;/code&gt; 이며 파일 이름은 &lt;code&gt;bundle.js&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af43d0785eaf13b9ffe0c34aa1c2ebf9013d579c" translate="yes" xml:space="preserve">
          <source>This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt;, and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt;.</source>
          <target state="translated">This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt; , and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="974910be502dc0a84469dbdf2c5a0b42eda9befe" translate="yes" xml:space="preserve">
          <source>This will direct webpack to &lt;em&gt;enter&lt;/em&gt; through &lt;code&gt;./index.ts&lt;/code&gt;, &lt;em&gt;load&lt;/em&gt; all &lt;code&gt;.ts&lt;/code&gt; and &lt;code&gt;.tsx&lt;/code&gt; files through the &lt;code&gt;ts-loader&lt;/code&gt;, and &lt;em&gt;output&lt;/em&gt; a &lt;code&gt;bundle.js&lt;/code&gt; file in our current directory.</source>
          <target state="translated">이렇게하는 웹팩 지시합니다 &lt;em&gt;입력&lt;/em&gt; 을 통해 &lt;code&gt;./index.ts&lt;/code&gt; , &lt;em&gt;로드&lt;/em&gt; 모든 &lt;code&gt;.ts&lt;/code&gt; 및 &lt;code&gt;.tsx&lt;/code&gt; 관통 파일을 &lt;code&gt;ts-loader&lt;/code&gt; 및 &lt;em&gt;출력&lt;/em&gt; a는 &lt;code&gt;bundle.js&lt;/code&gt; 우리의 현재 디렉토리에 파일을.</target>
        </trans-unit>
        <trans-unit id="edf3fb18a3410f577281b1111c384f0b6a24b89d" translate="yes" xml:space="preserve">
          <source>This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f0b4fa31173e3380b49ecab8f7606a590fbbd56" translate="yes" xml:space="preserve">
          <source>This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to true.</source>
          <target state="translated">This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to true.</target>
        </trans-unit>
        <trans-unit id="a1718346a9979d283f39dc2471103c14f678ca38" translate="yes" xml:space="preserve">
          <source>This will enable HTML optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">This will enable HTML optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a33e18425357f58a8da5ab2270892ccffc68f88a" translate="yes" xml:space="preserve">
          <source>This will enable JSON optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">This will enable JSON optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55f886a1ec8370f98de9de4e1874a73184be8854" translate="yes" xml:space="preserve">
          <source>This will force webpack to exit its bundling process.</source>
          <target state="translated">그러면 웹팩이 번들링 프로세스를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="00541a540816f3e9bbd4c867606284cd75c32912" translate="yes" xml:space="preserve">
          <source>This will form the bundle with both the files as separate entry points.</source>
          <target state="translated">이렇게하면 두 파일이 모두 별도의 진입 점으로 번들이 형성됩니다.</target>
        </trans-unit>
        <trans-unit id="7f4446d56893c546a3bc2bc1c768154f63d09482" translate="yes" xml:space="preserve">
          <source>This will generate a file &lt;code&gt;dist/index.html&lt;/code&gt; containing the following:</source>
          <target state="translated">다음을 포함하는 &lt;code&gt;dist/index.html&lt;/code&gt; 파일이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="7160226d2ca3d86e071b9fa526002cfef710b369" translate="yes" xml:space="preserve">
          <source>This will result in &lt;code&gt;&amp;lt;link rel=&quot;prefetch&quot; href=&quot;login-modal-chunk.js&quot;&amp;gt;&lt;/code&gt; being appended in the head of the page, which will instruct the browser to prefetch in idle time the &lt;code&gt;login-modal-chunk.js&lt;/code&gt; file.</source>
          <target state="translated">그러면 페이지 헤드 에 &lt;code&gt;&amp;lt;link rel=&quot;prefetch&quot; href=&quot;login-modal-chunk.js&quot;&amp;gt;&lt;/code&gt; 가 추가되어 브라우저가 유휴 시간에 &lt;code&gt;login-modal-chunk.js&lt;/code&gt; 를 프리 페치하도록 지시합니다. 파일.</target>
        </trans-unit>
        <trans-unit id="c85e87d9ec602f1d997bca703285880f56410641" translate="yes" xml:space="preserve">
          <source>This will result in following output:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4ac30989a90a0b71fb88d88da6109d1c138e172f" translate="yes" xml:space="preserve">
          <source>This will result in splitting &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; into a separate chunk. If you're not sure what packages have been included in a chunk you may refer to &lt;a href=&quot;../guides/code-splitting#bundle-analysis&quot;&gt;Bundle Analysis&lt;/a&gt; section for details.</source>
          <target state="translated">This will result in splitting &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; into a separate chunk. If you're not sure what packages have been included in a chunk you may refer to &lt;a href=&quot;../guides/code-splitting#bundle-analysis&quot;&gt;Bundle Analysis&lt;/a&gt; section for details.</target>
        </trans-unit>
        <trans-unit id="899806b06bf180ab4287827d162ab9f78154c6bd" translate="yes" xml:space="preserve">
          <source>This will result in the following output:</source>
          <target state="translated">This will result in the following output:</target>
        </trans-unit>
        <trans-unit id="dd75db9f1ff33f0b55c972ee38e1768f886c967a" translate="yes" xml:space="preserve">
          <source>This will simply export the provided &lt;code&gt;value&lt;/code&gt;. The &lt;code&gt;value&lt;/code&gt; here can be anything except a function.</source>
          <target state="translated">제공된 &lt;code&gt;value&lt;/code&gt; 간단히 내 보냅니다 . 여기서 &lt;code&gt;value&lt;/code&gt; 은 함수를 제외한 모든 것이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7416b1d07afa4e2b0585443cfa1b58ec3bd5d4db" translate="yes" xml:space="preserve">
          <source>This will trigger the &lt;code&gt;evaluateTypeof&lt;/code&gt; hook:</source>
          <target state="translated">This will trigger the &lt;code&gt;evaluateTypeof&lt;/code&gt; hook:</target>
        </trans-unit>
        <trans-unit id="efed152efc8461a74df43e343c4dd0ad810e7a79" translate="yes" xml:space="preserve">
          <source>This will yield the following build result:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9bbe133d1fd6efcfd0e829d8259bc2e5163a63ab" translate="yes" xml:space="preserve">
          <source>This won't trigger:</source>
          <target state="translated">This won't trigger:</target>
        </trans-unit>
        <trans-unit id="4df81b30369adbeaf367a4758423836e4cb12a34" translate="yes" xml:space="preserve">
          <source>This would allow to remove this piece of code. But there are still questions with the imports which need to be included/evaluated because they could contain side effects.</source>
          <target state="translated">This would allow to remove this piece of code. But there are still questions with the imports which need to be included/evaluated because they could contain side effects.</target>
        </trans-unit>
        <trans-unit id="945fcbc1787185641ce61384de9325b8f50d7afe" translate="yes" xml:space="preserve">
          <source>This would expose your index.html file to the polymer-webpack-loader based on the process used by the html-loader. In this case you would need to exclude your html file from the polymer-webpack-loader or look for other ways to avoid this conflict. See: &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md&quot;&gt;html-webpack-plugin template options&lt;/a&gt;</source>
          <target state="translated">그러면 html-loader가 사용하는 프로세스를 기반으로 index.html 파일이 polymer-webpack-loader에 노출됩니다. 이 경우 polymer-webpack-loader에서 html 파일을 제외하거나이 충돌을 피할 수있는 다른 방법을 찾아야합니다. &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md&quot;&gt;html-webpack-plugin 템플릿 옵션을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ea4357ef4b413d69e9589461b2acd2f1ec82b54" translate="yes" xml:space="preserve">
          <source>This would go nicely with &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; as the rest of the &lt;code&gt;lodash&lt;/code&gt; library should get dropped.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 라이브러리 의 나머지 부분을 제거 해야하기 때문에 &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; 과 잘 어울립니다 .</target>
        </trans-unit>
        <trans-unit id="b166a6d72bc0ecd96b32dc3dc3968cf48187e1f5" translate="yes" xml:space="preserve">
          <source>This wraps the &lt;code&gt;require('file.js')&lt;/code&gt; in a &lt;code&gt;require.ensure&lt;/code&gt; block</source>
          <target state="translated">이것은 &lt;code&gt;require('file.js')&lt;/code&gt; 를 &lt;code&gt;require.ensure&lt;/code&gt; 블록으로 감싸줍니다.</target>
        </trans-unit>
        <trans-unit id="db0f1255d05986e69c5d921d1eea45817e63296f" translate="yes" xml:space="preserve">
          <source>This: available through the &lt;code&gt;this&lt;/code&gt; object (&lt;code&gt;libraryTarget:'this'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;libraryTarget:'this'&lt;/code&gt; &lt;code&gt;this&lt;/code&gt; 객체를 통해 사용할 수 있습니다 ( libraryTarget : 'this' ).</target>
        </trans-unit>
        <trans-unit id="0705c3b770969e27f7a00fe2cf8c2bc003dbc17b" translate="yes" xml:space="preserve">
          <source>Those exports will trigger this hook:</source>
          <target state="translated">Those exports will trigger this hook:</target>
        </trans-unit>
        <trans-unit id="3ffef249f4c6fcea2923ee5d65836d74d834ecab" translate="yes" xml:space="preserve">
          <source>Three simple ways to inspect a webpack bundle</source>
          <target state="translated">웹팩 번들을 검사하는 세 가지 간단한 방법</target>
        </trans-unit>
        <trans-unit id="22975e15fe01eb83dd38a4fdd63bcdb34c745980" translate="yes" xml:space="preserve">
          <source>Throughout the Guides we will use &lt;code&gt;diff&lt;/code&gt; blocks to show you what changes we're making to directories, files, and code.</source>
          <target state="translated">가이드 전체에서 &lt;code&gt;diff&lt;/code&gt; 블록을 사용 하여 디렉토리, 파일 및 코드에 어떤 변경 사항이 있는지 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8c6fde5245f850996f4fa47b43e3d6f2119f9b90" translate="yes" xml:space="preserve">
          <source>Throughout the Guides we will use &lt;strong&gt;&lt;code&gt;diff&lt;/code&gt;&lt;/strong&gt; blocks to show you what changes we're making to directories, files, and code. For instance:</source>
          <target state="translated">Throughout the Guides we will use &lt;strong&gt; &lt;code&gt;diff&lt;/code&gt; &lt;/strong&gt; blocks to show you what changes we're making to directories, files, and code. For instance:</target>
        </trans-unit>
        <trans-unit id="098329a4e0a780055cca74efd7b36afeccfbe21e" translate="yes" xml:space="preserve">
          <source>Throwing an error from loader:</source>
          <target state="translated">Throwing an error from loader:</target>
        </trans-unit>
        <trans-unit id="921008c663ca39740d7eff1fc3116a1d5032c017" translate="yes" xml:space="preserve">
          <source>Thus, &lt;code&gt;window.$&lt;/code&gt; is then available in the browser console.</source>
          <target state="translated">따라서 브라우저 콘솔에서 &lt;code&gt;window.$&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c929173c9f4dfa1ce427bc6782df85c0786c6b97" translate="yes" xml:space="preserve">
          <source>Time in milliseconds. &lt;code&gt;cache.idleTimeout&lt;/code&gt; denotes the time period after which the cache storing should happen.</source>
          <target state="translated">Time in milliseconds. &lt;code&gt;cache.idleTimeout&lt;/code&gt; denotes the time period after which the cache storing should happen.</target>
        </trans-unit>
        <trans-unit id="be05cb967fa89095d05e7e54631c6f7bc59b4d38" translate="yes" xml:space="preserve">
          <source>Time in milliseconds. &lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is the time period after which the initial cache storing should happen.</source>
          <target state="translated">Time in milliseconds. &lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is the time period after which the initial cache storing should happen.</target>
        </trans-unit>
        <trans-unit id="03dcb8ddd180c79b7cbef1fbef09bd9b811c6229" translate="yes" xml:space="preserve">
          <source>Timeout for gathering changes while watching</source>
          <target state="translated">시청하는 동안 변경 사항을 수집하기위한 제한 시간</target>
        </trans-unit>
        <trans-unit id="661d4063b8ec8980f63428513015c42d7d7a39d4" translate="yes" xml:space="preserve">
          <source>Timings</source>
          <target state="translated">Timings</target>
        </trans-unit>
        <trans-unit id="54963bcda5c44c101aba88a7600754b4d08bd65b" translate="yes" xml:space="preserve">
          <source>Tips for Use</source>
          <target state="translated">사용 팁</target>
        </trans-unit>
        <trans-unit id="b2660960645189e282a8a216a50f1f554af01560" translate="yes" xml:space="preserve">
          <source>To approach this problem you can easily use a good old environment variable. Let's say we have a variable &lt;code&gt;ASSET_PATH&lt;/code&gt;:</source>
          <target state="translated">이 문제에 접근하기 위해 좋은 오래된 환경 변수를 쉽게 사용할 수 있습니다. &lt;code&gt;ASSET_PATH&lt;/code&gt; 변수가 있다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="dcbc79a6d6d80f687151d525406640646c99705e" translate="yes" xml:space="preserve">
          <source>To automatically load &lt;code&gt;jquery&lt;/code&gt; we can simply point both variables it exposes to the corresponding node module:</source>
          <target state="translated">&lt;code&gt;jquery&lt;/code&gt; 를 자동으로로드 하기 위해 해당 노드 모듈에 노출되는 두 변수를 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cff0b80a6edf97df3a239f888cd3d2406dca34c" translate="yes" xml:space="preserve">
          <source>To be compatible with existing css files (if not in CSS Module mode).</source>
          <target state="translated">CSS 모듈 모드가 아닌 경우 기존 CSS 파일과 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="07015a6889ed2ed55c54e13b2a92e0506c83e9bb" translate="yes" xml:space="preserve">
          <source>To be safe, you can use &lt;code&gt;enforce: &quot;pre&quot;&lt;/code&gt; section to check source files, not modified by other loaders (like &lt;code&gt;babel-loader&lt;/code&gt;)</source>
          <target state="translated">안전을 위해, &lt;code&gt;enforce: &quot;pre&quot;&lt;/code&gt; 섹션을 사용 하여 다른 로더 (예 : &lt;code&gt;babel-loader&lt;/code&gt; )에 의해 수정되지 않은 소스 파일을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cc256b5ec71d9d9a4b9f72f7f96365afb242e4a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;@gfx/zopfli&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;@gfx/zopfli&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="300217b5e3ca451bfede33b8a39b09a6509dd6a3" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;cache-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;cache-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="72aac05bc13982f6c6a5067c2ddd9e569185b48a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;coffeescript&lt;/code&gt; and &lt;code&gt;coffee-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;coffeescript&lt;/code&gt; and &lt;code&gt;coffee-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9601d39f4fea47b62aff47d6c20f03c448c47e46" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;compression-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;compression-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="82bf60baa207e3a2a73e2e85ad00daef03147bec" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;config-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;config-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fb3f78b10623af49e63dfb9f9c6ea2b45590fdac" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;copy-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;copy-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb549bbd66f44aa000a2e44c782cff06519919f1" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;css-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;css-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ad8394811af31096e15488fd4006bd1cd5812a2b" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;css-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;css-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fce74b425fc9b393fe6da8939201756b11c8ae82" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;exports-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;exports-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="411e791be25b2b16d7093ec79dbcbde9a51e71f2" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;expose-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;expose-loader&lt;/code&gt; 를 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="0fc7fc961b47a051b19e226656bde393653c4789" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;file-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;file-loader&lt;/code&gt; 를 설치해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="d371f2a3cfa7666741ca0629308aa3441dce2dbd" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;html-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;html-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="549e68511a14dbc3601a5558ba8c50a965161b29" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;html-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;html-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dca628ea3f00b632b6b81454cd714c9799755185" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;image-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;image-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="372f0605496cf13295d68fa17070ff1afbf41d0f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;imports-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;imports-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="94d3f896c040c5941000c3f6d1a93ff1345b8612" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;jshint-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;jshint-loader&lt;/code&gt; 를 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="d89de220ed59f227e2f0883cba7f15e710771f4a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;json-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;json-minimizer-webpack-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6dbbf4b1854d000f1b0f5b51db964f7aa3e8cf1e" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;json5-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;json5-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a41ac440dc6238694d68258e618bb49fc94caf83" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;less-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;less-loader&lt;/code&gt; 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="966ccb2b770321693105fb2146058043db61d21d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;less-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;less-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b262c7ab30ff7bd247b5f85aaa7cc70b115efc69" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mini-css-extract-plugin&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="549149f55ee616dfb950726ec9162fa32d17da0d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt; and &lt;code&gt;mocha&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt; and &lt;code&gt;mocha&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="746daaee86d341274baa9bbbb6cb39c7d79f5f35" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;mocha-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="89e5dc0915c471dd5741c80947af93e44d49291a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;multi-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;multi-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="00fb7c36e27d5f602e02b051008f9368bbec1510" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;node-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;node-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ac04354afe29bdc0eb01bb123082874b29e12c09" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;null-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;null-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3f4caa2d4531e6a67c0096ffd202479b086289cf" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;postcss-loader&lt;/code&gt; and &lt;code&gt;postcss&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;postcss-loader&lt;/code&gt; and &lt;code&gt;postcss&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ed9f11b49e3b0ac8754e0ab515a232c4c7bab089" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;raw-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;raw-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5336d91f3599dbace4c9133e6c80c99d248c2d4f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;react-proxy-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;react-proxy-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8cb07cd9d5847e41c7193ffd78f6a5328bbf55e2" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;sass-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;sass-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2ecf4f291c2cf94cfdee052bf9ea1afec889db8d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;source-map-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;source-map-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d7a998a4ac2f536dd8aaf633bc8007df7c8bde21" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;style-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;style-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c6f54944c9d87a57b6782a0d8c4ab4d25eb93f5f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;stylelint-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;stylelint-webpack-plugin&lt;/code&gt; 을 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="36231f4a116c3e0b429bb1621d54bfcf456d6f2e" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;stylus&lt;/code&gt; and &lt;code&gt;stylus-loader&lt;/code&gt;:</source>
          <target state="translated">To begin, you'll need to install &lt;code&gt;stylus&lt;/code&gt; and &lt;code&gt;stylus-loader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="38782f5d9cd214d47d0d542d22e218c43a6dee53" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;terser-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;terser-webpack-plugin&lt;/code&gt; 을 설치해야합니다 :</target>
        </trans-unit>
        <trans-unit id="ee9d1d253ebff7e4e9d72665d987bd70ba4b9a08" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;transform-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;transform-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3c3ed3c5eaa5eefb4adabc155747e61cb046b303" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;url-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;url-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e5d36d38e77ff2fe0084bc1096c8a1da57aa1351" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;val-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;val-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="829c18e6ac496ea95656902cbe84d34833c84385" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;worker-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;worker-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bfeceae384afd1256e3e284ec202d194d889bbda" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;yaml-frontmatter-loader&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;yaml-frontmatter-loader&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="06c638119ebe6bdd9660a0f8df0f71a8e0b13de5" translate="yes" xml:space="preserve">
          <source>To bundle the &lt;code&gt;lodash&lt;/code&gt; dependency with &lt;code&gt;index.js&lt;/code&gt;, we'll need to install the library locally:</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 종속성을 &lt;code&gt;index.js&lt;/code&gt; 와 번들 로 제공하려면 라이브러리를 로컬로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f5a5b45b7f4a04dd9e2ce0185126dc8553156c30" translate="yes" xml:space="preserve">
          <source>To check the progress of any webpack compilation you can use the &lt;code&gt;--progress&lt;/code&gt; flag.</source>
          <target state="translated">To check the progress of any webpack compilation you can use the &lt;code&gt;--progress&lt;/code&gt; flag.</target>
        </trans-unit>
        <trans-unit id="459eedab9edc3e65ea20dcf600414bd17dc32d72" translate="yes" xml:space="preserve">
          <source>To collect profile data for progress steps you can pass &lt;code&gt;profile&lt;/code&gt; as value to &lt;code&gt;--progress&lt;/code&gt; flag.</source>
          <target state="translated">To collect profile data for progress steps you can pass &lt;code&gt;profile&lt;/code&gt; as value to &lt;code&gt;--progress&lt;/code&gt; flag.</target>
        </trans-unit>
        <trans-unit id="dfa7d608afec42e0cdc2c58c9c250dda0d690d1a" translate="yes" xml:space="preserve">
          <source>To completely disable tag-attribute processing (for instance, if you're handling image loading on the client side) you can pass in &lt;code&gt;attrs=false&lt;/code&gt;.</source>
          <target state="translated">태그 속성 처리를 완전히 비활성화하려면 (예 : 클라이언트 측에서 이미지로드를 처리하는 경우) &lt;code&gt;attrs=false&lt;/code&gt; 를 전달하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="1309003de522e7c17d3c5a1287a3717198d9d74b" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;scaffold&lt;/code&gt;, you must create a &lt;a href=&quot;http://yeoman.io/authoring/&quot;&gt;&lt;code&gt;yeoman-generator&lt;/code&gt;&lt;/a&gt;. Thanks to it, you can optionally extend your generator to include methods from the &lt;a href=&quot;http://yeoman.io/learning/&quot;&gt;Yeoman API&lt;/a&gt;. It's worth noting that we support all the properties of a regular webpack configuration. In order for us to do this, there's a thing you need to remember:</source>
          <target state="translated">To create a &lt;code&gt;scaffold&lt;/code&gt; , you must create a &lt;a href=&quot;http://yeoman.io/authoring/&quot;&gt; &lt;code&gt;yeoman-generator&lt;/code&gt; &lt;/a&gt;. Thanks to it, you can optionally extend your generator to include methods from the &lt;a href=&quot;http://yeoman.io/learning/&quot;&gt;Yeoman API&lt;/a&gt;. It's worth noting that we support all the properties of a regular webpack configuration. In order for us to do this, there's a thing you need to remember:</target>
        </trans-unit>
        <trans-unit id="f72579134926fff1a800442bd52c8ff45bbcd816" translate="yes" xml:space="preserve">
          <source>To create a code coverage report for all components (even for those for which you have no tests yet) you have to require all the 1) sources and 2) tests. Something like it's described in &lt;a href=&quot;https://github.com/webpack/karma-webpack#alternative-usage&quot;&gt;&quot;alternative usage&quot; of karma-webpack&lt;/a&gt;</source>
          <target state="translated">모든 구성 요소 (아직 테스트가없는 구성 요소에 대해서도)에 대한 코드 적용 범위 보고서를 만들려면 1) 소스 및 2) 테스트가 모두 필요합니다. &lt;a href=&quot;https://github.com/webpack/karma-webpack#alternative-usage&quot;&gt;karma-webpack의 &quot;대체 사용법&quot;에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="97cfbbf176fb99a211b09905e5e5c9dfcaa08a80" translate="yes" xml:space="preserve">
          <source>To create a custom client implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/client-src/clients/BaseClient.js&quot;&gt;&lt;code&gt;BaseClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To create a custom client implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/client-src/clients/BaseClient.js&quot;&gt; &lt;code&gt;BaseClient&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cb3dac4cd8002b11b5009a5f3065cd8cbade1f61" translate="yes" xml:space="preserve">
          <source>To create a custom server implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/lib/servers/BaseServer.js&quot;&gt;&lt;code&gt;BaseServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To create a custom server implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/lib/servers/BaseServer.js&quot;&gt; &lt;code&gt;BaseServer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="64b16bf8ed307590d7c4c616d19178c256a1d1f3" translate="yes" xml:space="preserve">
          <source>To determine the structure from which the found resources will be copied to the destination folder, the &lt;code&gt;context&lt;/code&gt; option is used.</source>
          <target state="translated">To determine the structure from which the found resources will be copied to the destination folder, the &lt;code&gt;context&lt;/code&gt; option is used.</target>
        </trans-unit>
        <trans-unit id="869e6e2ac6874691b0a280a2def88cb61d298df9" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;@import&lt;/code&gt; resolving by &lt;code&gt;css-loader&lt;/code&gt; set the option to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;css-loader&lt;/code&gt; 로 &lt;code&gt;@import&lt;/code&gt; 해결 을 비활성화하려면 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="361551aaf1d19b454740101d98c789ddb47cdcd1" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;contentBase&lt;/code&gt;:</source>
          <target state="translated">사용하지 않으려면 &lt;code&gt;contentBase&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe870f47c32f3704bff3eff2d3ef13906efa0316" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;url()&lt;/code&gt; resolving by &lt;code&gt;css-loader&lt;/code&gt; set the option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;css-loader&lt;/code&gt; 로 &lt;code&gt;url()&lt;/code&gt; 확인 을 비활성화하려면 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e02862c99560640eb94080cfcb8a40ef213be8f5" translate="yes" xml:space="preserve">
          <source>To disable this feature in some common editors, see the list below:</source>
          <target state="translated">일부 일반적인 편집기에서이 기능을 비활성화하려면 아래 목록을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="41c8815ef9e8f8a631a2f83b99b5626c9ea326d0" translate="yes" xml:space="preserve">
          <source>To disambiguate in your &lt;code&gt;webpack.config.js&lt;/code&gt; between &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; and &lt;a href=&quot;production&quot;&gt;production builds&lt;/a&gt; you may use environment variables.</source>
          <target state="translated">&lt;a href=&quot;development&quot;&gt;개발&lt;/a&gt; 및 &lt;a href=&quot;production&quot;&gt;프로덕션 빌드&lt;/a&gt; 간에 &lt;code&gt;webpack.config.js&lt;/code&gt; 를 명확하게하기 위해 환경 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="500ff0470316e19a35544952710d7f6e843d15e4" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;less-loader&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; the &lt;code&gt;css-loader&lt;/code&gt;. Your &lt;code&gt;webpack.config.js&lt;/code&gt; should look like this:</source>
          <target state="translated">CSS 소스지도를 사용하려면 통과해야합니다 &lt;code&gt;sourceMap&lt;/code&gt; 를 받는 옵션을 &lt;code&gt;less-loader&lt;/code&gt; &lt;em&gt;와 &lt;/em&gt; &lt;code&gt;css-loader&lt;/code&gt; . 귀하의 &lt;code&gt;webpack.config.js&lt;/code&gt; 다음과 같아야합니다 :</target>
        </trans-unit>
        <trans-unit id="e6f9cb39ea18350ef2bbae97768a1f50000995d1" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;sass-loader&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; the css-loader.</source>
          <target state="translated">To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;sass-loader&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; the css-loader.</target>
        </trans-unit>
        <trans-unit id="29ddb3ba3e454446fe1a7da01fa6a7ea800f1aca" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the sass-loader &lt;em&gt;and&lt;/em&gt; the css-loader. Your &lt;code&gt;webpack.config.js&lt;/code&gt; should look like this:</source>
          <target state="translated">CSS 소스 맵을 활성화하려면 &lt;code&gt;sourceMap&lt;/code&gt; 옵션을 sass-loader &lt;em&gt;및&lt;/em&gt; css-loader 에 전달해야합니다 . 귀하의 &lt;code&gt;webpack.config.js&lt;/code&gt; 다음과 같아야합니다 :</target>
        </trans-unit>
        <trans-unit id="5f7892b1e37621678647b50e59d05e015a186798" translate="yes" xml:space="preserve">
          <source>To enable HMR, you also need to modify your webpack configuration object to include the HMR entry points. The &lt;code&gt;webpack-dev-server&lt;/code&gt; package includes a method called &lt;code&gt;addDevServerEntrypoints&lt;/code&gt; which you can use to do this. Here's a small example of how that might look:</source>
          <target state="translated">HMR을 사용 가능하게하려면 HMR 진입 점을 포함하도록 웹팩 구성 오브젝트도 수정해야합니다. &lt;code&gt;webpack-dev-server&lt;/code&gt; 패키지라는 방법은, &lt;code&gt;addDevServerEntrypoints&lt;/code&gt; 이 작업을 수행하는 데 사용할 수 있습니다. 다음은 그 모습을 보여주는 작은 예입니다.</target>
        </trans-unit>
        <trans-unit id="b2fc05b2ff61f26beeae4af670843b3d9e871698" translate="yes" xml:space="preserve">
          <source>To enable source maps, we must configure TypeScript to output inline source maps to our compiled JavaScript files. The following line must be added to our TypeScript configuration:</source>
          <target state="translated">소스 맵을 사용하려면 인라인 소스 맵을 컴파일 된 JavaScript 파일로 출력하도록 TypeScript를 구성해야합니다. TypeScript 구성에 다음 줄을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="c0f0f5be6d78b1c705d6d755ee8f1d70e5d8fdf8" translate="yes" xml:space="preserve">
          <source>To enable sourcemaps for CSS, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; property in the loader's options. If this is not passed, the loader will respect the setting for webpack source maps, set in &lt;code&gt;devtool&lt;/code&gt;.</source>
          <target state="translated">To enable sourcemaps for CSS, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; property in the loader's options. If this is not passed, the loader will respect the setting for webpack source maps, set in &lt;code&gt;devtool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a389a84023632649f39402ea3de4ce188a82054" translate="yes" xml:space="preserve">
          <source>To exclude &lt;code&gt;node_modules&lt;/code&gt;, see the &lt;code&gt;exclude&lt;/code&gt; option in the &lt;code&gt;loaders&lt;/code&gt; config as documented above.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; 를 제외하려면 위에서 설명한대로 &lt;code&gt;loaders&lt;/code&gt; 설정 에서 &lt;code&gt;exclude&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c69b5dfdb2bfb7ff464008d2cd81168638addc9d" translate="yes" xml:space="preserve">
          <source>To exclude assets that came from new URL calls from the asset loaders add &lt;code&gt;dependency: { not: ['url'] }&lt;/code&gt; to the loader configuration.</source>
          <target state="translated">To exclude assets that came from new URL calls from the asset loaders add &lt;code&gt;dependency: { not: ['url'] }&lt;/code&gt; to the loader configuration.</target>
        </trans-unit>
        <trans-unit id="da6c1a6b4127fd44ba0769c8077129ced921f313" translate="yes" xml:space="preserve">
          <source>To exclude sourcemaps from compression</source>
          <target state="translated">To exclude sourcemaps from compression</target>
        </trans-unit>
        <trans-unit id="38a9c27a9e0ab77f048bbdd92dbf6f8e9201f83c" translate="yes" xml:space="preserve">
          <source>To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;&lt;code&gt;ExtractTextPlugin&lt;/code&gt;&lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</source>
          <target state="translated">라이브러리와 연관된 스타일 시트를 표시하려면 &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt; &lt;code&gt;ExtractTextPlugin&lt;/code&gt; 을&lt;/a&gt; 사용해야합니다. 그런 다음 사용자는 다른 스타일 시트와 마찬가지로 소비하고로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e290f5e27fdf132aed76f6df77c9e1ce86165b82" translate="yes" xml:space="preserve">
          <source>To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;MiniCssExtractPlugin&lt;/code&gt;&lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</source>
          <target state="translated">To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;MiniCssExtractPlugin&lt;/code&gt; &lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</target>
        </trans-unit>
        <trans-unit id="b58c10e9810b7cd86447de7048c410bbfbdf9685" translate="yes" xml:space="preserve">
          <source>To extract the webpack bootstrap logic into a separate file, use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; on a &lt;code&gt;name&lt;/code&gt; which is not defined as &lt;code&gt;entry&lt;/code&gt;. Commonly the name &lt;code&gt;manifest&lt;/code&gt; is used. See the &lt;a href=&quot;../guides/caching&quot;&gt;caching guide&lt;/a&gt; for details.</source>
          <target state="translated">웹팩 부트 스트랩 로직을 별도의 파일로 추출하려면 &lt;code&gt;entry&lt;/code&gt; 로 정의되지 않은 &lt;code&gt;name&lt;/code&gt; &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용하십시오 . 일반적으로 이름 &lt;code&gt;manifest&lt;/code&gt; 가 사용됩니다. 자세한 내용은 &lt;a href=&quot;../guides/caching&quot;&gt;캐싱 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38ed89ed4d2d579580e96d0f69f192abda5d4002" translate="yes" xml:space="preserve">
          <source>To fix this you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt; as it is deprecated in babel v6. (instead install &lt;code&gt;babel-cli&lt;/code&gt; or &lt;code&gt;babel-core&lt;/code&gt;) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</source>
          <target state="translated">이 문제를 해결하려면 babel v6에서 더 이상 사용되지 않는 npm 패키지 &lt;code&gt;babel&lt;/code&gt; 을 제거해야합니다 . (대신 &lt;code&gt;babel-cli&lt;/code&gt; 또는 &lt;code&gt;babel-core&lt;/code&gt; 설치) 의존성 중 하나가 &lt;code&gt;babel&lt;/code&gt; 을 설치하고 직접 제거 할 수없는 경우 webpack 구성에서 로더의 전체 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1471f3354f1fee4747c660cc657f7ec5e39d8aba" translate="yes" xml:space="preserve">
          <source>To fix this, you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt;, as it is deprecated in Babel v6. (Instead, install &lt;code&gt;@babel/cli&lt;/code&gt; or &lt;code&gt;@babel/core&lt;/code&gt;.) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</source>
          <target state="translated">To fix this, you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt; , as it is deprecated in Babel v6. (Instead, install &lt;code&gt;@babel/cli&lt;/code&gt; or &lt;code&gt;@babel/core&lt;/code&gt; .) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</target>
        </trans-unit>
        <trans-unit id="8e0d84621b40671cd3f4fbb8a84b74dd3ba1a2e8" translate="yes" xml:space="preserve">
          <source>To force override the value that is already present in the global object you can set the &lt;code&gt;override&lt;/code&gt; option to the &lt;code&gt;true&lt;/code&gt; value.</source>
          <target state="translated">To force override the value that is already present in the global object you can set the &lt;code&gt;override&lt;/code&gt; option to the &lt;code&gt;true&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="6021058192262f03686a1a0bd715439d2f2cf191" translate="yes" xml:space="preserve">
          <source>To gain typechecking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt;&lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유형 검사를 다시 &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt; &lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5a8d8bcb7e0b4e71b403076278fddf67b12775e" translate="yes" xml:space="preserve">
          <source>To generate and compress the original assets:</source>
          <target state="translated">To generate and compress the original assets:</target>
        </trans-unit>
        <trans-unit id="d651b67a431c78e3bd983224bcba2b0132dfb37c" translate="yes" xml:space="preserve">
          <source>To get html, need to add &lt;a href=&quot;https://github.com/wooorm/remark-html&quot;&gt;&lt;code&gt;remark-html&lt;/code&gt;&lt;/a&gt; to the remark plugins and add &lt;a href=&quot;html-loader&quot;&gt;&lt;code&gt;html-loader&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;webpack.config&lt;/code&gt;</source>
          <target state="translated">To get html, need to add &lt;a href=&quot;https://github.com/wooorm/remark-html&quot;&gt; &lt;code&gt;remark-html&lt;/code&gt; &lt;/a&gt; to the remark plugins and add &lt;a href=&quot;html-loader&quot;&gt; &lt;code&gt;html-loader&lt;/code&gt; &lt;/a&gt; to the &lt;code&gt;webpack.config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1a1f2b68224bef3bc79c709c34bf3103ba22925" translate="yes" xml:space="preserve">
          <source>To get started you only need to understand its &lt;strong&gt;Core Concepts&lt;/strong&gt;:</source>
          <target state="translated">시작하려면 &lt;strong&gt;핵심 개념&lt;/strong&gt; 만 이해하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="257ccb781a8edd61b316f2c1ae7c4bfadcec5946" translate="yes" xml:space="preserve">
          <source>To ignore warnings, you can use the following configuration:</source>
          <target state="translated">To ignore warnings, you can use the following configuration:</target>
        </trans-unit>
        <trans-unit id="348e1ea64c185f95f73506889858e9ce259285e2" translate="yes" xml:space="preserve">
          <source>To import a built-in module, use &lt;a href=&quot;../api/module-variables#__non_webpack_require__-webpack-specific-&quot;&gt;&lt;code&gt;__non_webpack_require__&lt;/code&gt;&lt;/a&gt;, i.e. &lt;code&gt;__non_webpack_require__('modulename')&lt;/code&gt; instead of &lt;code&gt;require('modulename')&lt;/code&gt;.</source>
          <target state="translated">내장 된 모듈을 사용 가져 오려면 &lt;a href=&quot;../api/module-variables#__non_webpack_require__-webpack-specific-&quot;&gt; &lt;code&gt;__non_webpack_require__&lt;/code&gt; &lt;/a&gt; , 즉 &lt;code&gt;__non_webpack_require__('modulename')&lt;/code&gt; 대신 &lt;code&gt;require('modulename')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5ae4d7aa8a104c8ccb3aa651a7bc57b7fa04613" translate="yes" xml:space="preserve">
          <source>To import a local classname from another module.</source>
          <target state="translated">다른 모듈에서 로컬 클래스 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="49cba4d2623a4fdecd91fd15da0c4fa945088144" translate="yes" xml:space="preserve">
          <source>To import assets from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt;) and for &lt;code&gt;alias&lt;/code&gt;, prefix it with a &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="translated">To import assets from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt; ) and for &lt;code&gt;alias&lt;/code&gt; , prefix it with a &lt;code&gt;~&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e2c64aae8fc990d22b375b4c008a28a50ef2b4f0" translate="yes" xml:space="preserve">
          <source>To import from multiple modules use multiple &lt;code&gt;composes:&lt;/code&gt; rules.</source>
          <target state="translated">여러 모듈에서 가져 오려면 여러 &lt;code&gt;composes:&lt;/code&gt; 규칙을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e7df80ba57a4d21c600ef74569b1a8d6021c36bf" translate="yes" xml:space="preserve">
          <source>To import styles from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt;) and for &lt;code&gt;alias&lt;/code&gt;, prefix it with a &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="translated">To import styles from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt; ) and for &lt;code&gt;alias&lt;/code&gt; , prefix it with a &lt;code&gt;~&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d59ea396c382cc546a109b1b257f90cc44f98106" translate="yes" xml:space="preserve">
          <source>To improve the build time when using &lt;code&gt;ts-loader&lt;/code&gt;, use the &lt;code&gt;transpileOnly&lt;/code&gt; loader option. On its own, this option turns off type checking. To gain type checking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt;&lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt;&lt;/a&gt;. This speeds up TypeScript type checking and ESLint linting by moving each to a separate process.</source>
          <target state="translated">To improve the build time when using &lt;code&gt;ts-loader&lt;/code&gt; , use the &lt;code&gt;transpileOnly&lt;/code&gt; loader option. On its own, this option turns off type checking. To gain type checking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt; &lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt; &lt;/a&gt;. This speeds up TypeScript type checking and ESLint linting by moving each to a separate process.</target>
        </trans-unit>
        <trans-unit id="47e9aa3b08def6333cf943d0fb6cd429f52aa435" translate="yes" xml:space="preserve">
          <source>To include source maps set the &lt;code&gt;sourceMap&lt;/code&gt; option.</source>
          <target state="translated">소스 맵을 포함하려면 &lt;code&gt;sourceMap&lt;/code&gt; 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1015f4201a74cca3e3ac70cdc79b7f3b6a6d867" translate="yes" xml:space="preserve">
          <source>To install the latest release or a specific version, run one of the following commands:</source>
          <target state="translated">최신 릴리스 또는 특정 버전을 설치하려면 다음 명령 중 하나를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1884df3f25a3bbb6d7b71df607746c88bfb41cb2" translate="yes" xml:space="preserve">
          <source>To integrate with TypeScript, you will need to define a custom module for the exports of your worker</source>
          <target state="translated">TypeScript와 통합하려면 작업자 내보내기를위한 사용자 정의 모듈을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="5bbe431ff9314e12f762f84eabbf4794bcc69b80" translate="yes" xml:space="preserve">
          <source>To integrate with TypeScript, you will need to define a custom module for the exports of your worker.</source>
          <target state="translated">To integrate with TypeScript, you will need to define a custom module for the exports of your worker.</target>
        </trans-unit>
        <trans-unit id="6bcc914a800145c90ef98d17eac32a8bc02e16aa" translate="yes" xml:space="preserve">
          <source>To learn more about source maps, see the &lt;a href=&quot;development&quot;&gt;development guide&lt;/a&gt;.</source>
          <target state="translated">소스 맵에 대한 자세한 내용은 &lt;a href=&quot;development&quot;&gt;개발 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a177cf38e45191d1a14eeceb328a37a99ad1a1a" translate="yes" xml:space="preserve">
          <source>To learn more about webpack configuration, see the &lt;a href=&quot;../concepts/configuration&quot;&gt;configuration concepts&lt;/a&gt;.</source>
          <target state="translated">웹팩 구성에 대한 자세한 내용은 &lt;a href=&quot;../concepts/configuration&quot;&gt;구성 개념을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f6d9d37d8ba6374305d57b794829b7bce4b11d2" translate="yes" xml:space="preserve">
          <source>To make imports do this by default and keep &lt;code&gt;import _ from 'lodash';&lt;/code&gt; syntax in TypeScript, set &lt;code&gt;&quot;allowSyntheticDefaultImports&quot; : true&lt;/code&gt; and &lt;code&gt;&quot;esModuleInterop&quot; : true&lt;/code&gt; in your &lt;strong&gt;tsconfig.json&lt;/strong&gt; file. This is related to TypeScript configuration and mentioned in our guide only for your information.</source>
          <target state="translated">To make imports do this by default and keep &lt;code&gt;import _ from 'lodash';&lt;/code&gt; syntax in TypeScript, set &lt;code&gt;&quot;allowSyntheticDefaultImports&quot; : true&lt;/code&gt; and &lt;code&gt;&quot;esModuleInterop&quot; : true&lt;/code&gt; in your &lt;strong&gt;tsconfig.json&lt;/strong&gt; file. This is related to TypeScript configuration and mentioned in our guide only for your information.</target>
        </trans-unit>
        <trans-unit id="3e748d8b605e30f64d9404df3cdd168090d45ff8" translate="yes" xml:space="preserve">
          <source>To make this work with HMR we need to update that binding to the new &lt;code&gt;printMe&lt;/code&gt; function using &lt;code&gt;module.hot.accept&lt;/code&gt;:</source>
          <target state="translated">HMR에서이 작업을 수행하려면 &lt;code&gt;module.hot.accept&lt;/code&gt; 를 사용하여 새 &lt;code&gt;printMe&lt;/code&gt; 함수 에 대한 바인딩을 업데이트해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b00037db6e6c3f6baec9ee9566ee8706baef31c4" translate="yes" xml:space="preserve">
          <source>To mimic a more production-like environment, it is also possible to proxy the &lt;code&gt;webpack-dev-server&lt;/code&gt; with nginx.</source>
          <target state="translated">To mimic a more production-like environment, it is also possible to proxy the &lt;code&gt;webpack-dev-server&lt;/code&gt; with nginx.</target>
        </trans-unit>
        <trans-unit id="06ca871bf3949e7877aca45fc526601107359dd1" translate="yes" xml:space="preserve">
          <source>To mimic a more production-like environment, it is also possible to proxy the webpack-dev-server with nginx.</source>
          <target state="translated">보다 생산적인 환경을 모방하기 위해 nginx로 webpack-dev-server를 프록시하는 것도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="ae527e4c710ed9a7353edef23e497137a1f06dfe" translate="yes" xml:space="preserve">
          <source>To minify the output, use a plugin like &lt;a href=&quot;css-minimizer-webpack-plugin&quot;&gt;css-minimizer-webpack-plugin&lt;/a&gt;.</source>
          <target state="translated">To minify the output, use a plugin like &lt;a href=&quot;css-minimizer-webpack-plugin&quot;&gt;css-minimizer-webpack-plugin&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="628c7d2253f28d8603b993e75263711dfb0ad973" translate="yes" xml:space="preserve">
          <source>To only use the manual flag and do not analyse source code:</source>
          <target state="translated">To only use the manual flag and do not analyse source code:</target>
        </trans-unit>
        <trans-unit id="4d5cefa57cd7873c74c9575f3d9b2d6d222b5caf" translate="yes" xml:space="preserve">
          <source>To opt-out from used exports analysis per runtime:</source>
          <target state="translated">To opt-out from used exports analysis per runtime:</target>
        </trans-unit>
        <trans-unit id="bc330b2b1a81faa80abe33d44510a51885be8781" translate="yes" xml:space="preserve">
          <source>To pass arguments directly to Node.js process, you can use the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; option.</source>
          <target state="translated">To pass arguments directly to Node.js process, you can use the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="63c9385d34fe76b0b46414f529a97ef068c93512" translate="yes" xml:space="preserve">
          <source>To pass your own certificate via CLI, use the following options</source>
          <target state="translated">To pass your own certificate via CLI, use the following options</target>
        </trans-unit>
        <trans-unit id="19f8115b103436185bc4f73cf8023e4431cc5a22" translate="yes" xml:space="preserve">
          <source>To pass your own certificate via the CLI use the following options</source>
          <target state="translated">CLI를 통해 자신의 인증서를 전달하려면 다음 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6647a87d1cb201b2abb16749321598ec33fa1589" translate="yes" xml:space="preserve">
          <source>To prevent the high delay when booting workers it possible to warmup the worker pool.</source>
          <target state="translated">작업자를 부팅 할 때 높은 지연을 방지하기 위해 작업자 풀을 예열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1016a714864b36370272ce33473888774449f263" translate="yes" xml:space="preserve">
          <source>To report progress, a plugin must &lt;code&gt;tap&lt;/code&gt; into a hook using the &lt;code&gt;context: true&lt;/code&gt; option:</source>
          <target state="translated">To report progress, a plugin must &lt;code&gt;tap&lt;/code&gt; into a hook using the &lt;code&gt;context: true&lt;/code&gt; option:</target>
        </trans-unit>
        <trans-unit id="6472c575009f9527693ccb1eb7975cf2b5bb6a74" translate="yes" xml:space="preserve">
          <source>To run the local installation of webpack you can access its bin version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt;.</source>
          <target state="translated">웹팩의 로컬 설치를 실행하려면 bin 버전에 &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt; 으로 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14c3502b5d0c3ef1e7cca5247b15e5302cae180a" translate="yes" xml:space="preserve">
          <source>To run the local installation of webpack you can access its binary version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt;. Alternatively, if you are using npm v5.2.0 or greater, you can run &lt;code&gt;npx webpack&lt;/code&gt; to do it.</source>
          <target state="translated">To run the local installation of webpack you can access its binary version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt; . Alternatively, if you are using npm v5.2.0 or greater, you can run &lt;code&gt;npx webpack&lt;/code&gt; to do it.</target>
        </trans-unit>
        <trans-unit id="c1fe53d810ee24cc9207067a8d95fa1e63e196ff" translate="yes" xml:space="preserve">
          <source>To see code examples please refer to &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;webpack repository&lt;/a&gt;</source>
          <target state="translated">To see code examples please refer to &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;webpack repository&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a6e637bcd7f8c82f7ecb2b72b80d94077bbbc98" translate="yes" xml:space="preserve">
          <source>To set a custom name for the output script, use the &lt;code&gt;name&lt;/code&gt; parameter. The name may contain the string &lt;code&gt;[hash]&lt;/code&gt;, which will be replaced with a content dependent hash for caching purposes. When using &lt;code&gt;name&lt;/code&gt; alone &lt;code&gt;[hash]&lt;/code&gt; is omitted.</source>
          <target state="translated">출력 스크립트의 사용자 정의 이름을 설정하려면 &lt;code&gt;name&lt;/code&gt; 매개 변수를 사용하십시오 . 이름에는 문자열 &lt;code&gt;[hash]&lt;/code&gt; 가 포함될 수 있으며 캐싱 목적으로 컨텐츠 종속 해시로 대체됩니다. &lt;code&gt;name&lt;/code&gt; 만 사용할 경우 &lt;code&gt;[hash]&lt;/code&gt; 는 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="dac38352ca87e4dd20fd92ae4b4d17c3a6910808" translate="yes" xml:space="preserve">
          <source>To set the &lt;code&gt;target&lt;/code&gt; property, you simply set the target value in your webpack config:</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 속성 을 설정하려면 웹팩 구성에서 대상 값을 설정하면됩니다.</target>
        </trans-unit>
        <trans-unit id="d7739566e3958f0e427ab0f8fd3a0e62883980cf" translate="yes" xml:space="preserve">
          <source>To show only errors in your bundle:</source>
          <target state="translated">번들에 오류 만 표시하려면</target>
        </trans-unit>
        <trans-unit id="aebf79cbf09ef128e596372a5721d38fb978a82d" translate="yes" xml:space="preserve">
          <source>To solve this problem &lt;code&gt;ProgressPlugin&lt;/code&gt; caches the last known total modules count and reuses this value on the next build. The first build will warm the cache but the following builds will use and update this value.</source>
          <target state="translated">To solve this problem &lt;code&gt;ProgressPlugin&lt;/code&gt; caches the last known total modules count and reuses this value on the next build. The first build will warm the cache but the following builds will use and update this value.</target>
        </trans-unit>
        <trans-unit id="144def8245316e56bae55c0aa633ce63f74cdd87" translate="yes" xml:space="preserve">
          <source>To specify an unset default value, use &lt;code&gt;null&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">설정되지 않은 기본값을 지정하려면 &lt;code&gt;undefined&lt;/code&gt; 대신 &lt;code&gt;null&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="80ba1fc80757c6220f2d25b4d686f35e12c0c9a4" translate="yes" xml:space="preserve">
          <source>To start using the webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</source>
          <target state="translated">To start using the webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</target>
        </trans-unit>
        <trans-unit id="7929162fe7ecd963c36f31e3a8c0790d5dcf5b99" translate="yes" xml:space="preserve">
          <source>To start using webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</source>
          <target state="translated">webpack Node.js API를 사용하려면 먼저 webpack을 설치하지 않은 경우 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="9c156f8d22007693b411c0a6e5d1ef4987eb8bdf" translate="yes" xml:space="preserve">
          <source>To start, make sure that the &lt;code&gt;Vagrantfile&lt;/code&gt; has a static IP;</source>
          <target state="translated">시작하려면 &lt;code&gt;Vagrantfile&lt;/code&gt; 에 고정 IP가 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="1051af58ed5337486309cda3c2d1ba1cd6199906" translate="yes" xml:space="preserve">
          <source>To tackle this, we use the &lt;a href=&quot;tree-shaking#mark-the-file-as-side-effect-free&quot;&gt;&lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt;&lt;/a&gt; property in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">To tackle this, we use the &lt;a href=&quot;tree-shaking#mark-the-file-as-side-effect-free&quot;&gt; &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; &lt;/a&gt; property in &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b40ceb97056440b94d088a384a85d5fd8c3add01" translate="yes" xml:space="preserve">
          <source>To understand why you should use webpack, let's recap how we used JavaScript on the web before bundlers were a thing.</source>
          <target state="translated">To understand why you should use webpack, let's recap how we used JavaScript on the web before bundlers were a thing.</target>
        </trans-unit>
        <trans-unit id="559f3ffdd386200d39a9e0ed2f0bf1bcfb8133ef" translate="yes" xml:space="preserve">
          <source>To use non-code assets with TypeScript, we need to defer the type for these imports. This requires a &lt;code&gt;custom.d.ts&lt;/code&gt; file which signifies custom definitions for TypeScript in our project. Let's set up a declaration for &lt;code&gt;.svg&lt;/code&gt; files:</source>
          <target state="translated">TypeScript에서 비 코드 자산을 사용하려면 이러한 가져 오기에 대한 유형을 연기해야합니다. 여기에는 프로젝트에서 TypeScript에 대한 사용자 정의를 나타내는 &lt;code&gt;custom.d.ts&lt;/code&gt; 파일 이 필요합니다 . &lt;code&gt;.svg&lt;/code&gt; 파일에 대한 선언을 설정합시다 :</target>
        </trans-unit>
        <trans-unit id="f47e2685aba87fc596fb60b79c57346015b6eeaf" translate="yes" xml:space="preserve">
          <source>To use this option with the CLI pass the &lt;code&gt;--allowed-hosts&lt;/code&gt; option a comma-delimited string.</source>
          <target state="translated">CLI와 함께이 옵션을 사용하려면 &lt;code&gt;--allowed-hosts&lt;/code&gt; 옵션을 쉼표로 구분 된 문자열로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7251e927f90574f1c93d0aab322bd244ce7bc38" translate="yes" xml:space="preserve">
          <source>To wait until the chunk is available (and get the exports) you need to async wait for it.</source>
          <target state="translated">청크를 사용할 수있을 때까지 기다렸다가 (내보내기를 가져 오려면) 청크를 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="2861b68689f07956f2c1c5c688dc56b07fc7f5de" translate="yes" xml:space="preserve">
          <source>To write a asset from PostCSS plugin to the webpack, need to add a message in &lt;code&gt;result.messages&lt;/code&gt;.</source>
          <target state="translated">To write a asset from PostCSS plugin to the webpack, need to add a message in &lt;code&gt;result.messages&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12cf88bed11b20e54e263c18116589d8c63d4211" translate="yes" xml:space="preserve">
          <source>To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies, i.e., TypeScript and the relevant type definitions from the &lt;a href=&quot;https://definitelytyped.org/&quot;&gt;DefinitelyTyped&lt;/a&gt; project:</source>
          <target state="translated">To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies, i.e., TypeScript and the relevant type definitions from the &lt;a href=&quot;https://definitelytyped.org/&quot;&gt;DefinitelyTyped&lt;/a&gt; project:</target>
        </trans-unit>
        <trans-unit id="cb9583a28cf56d89a0848b6749cfcca0381af814" translate="yes" xml:space="preserve">
          <source>To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies:</source>
          <target state="translated">에서 웹팩 구성을 작성하려면 &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;타이프 라이터를&lt;/a&gt; 먼저 필요한 패키지를 설치합니다 :</target>
        </trans-unit>
        <trans-unit id="b3ca19b09afec2f63af696e7e940998ab6ae784f" translate="yes" xml:space="preserve">
          <source>Toggle between the dev-server's two different modes. By default the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</source>
          <target state="translated">개발자 서버의 두 가지 모드 간을 전환합니다. 기본적으로 응용 프로그램은 &lt;em&gt;인라인 모드가&lt;/em&gt; 활성화 된 상태 로 제공됩니다 . 즉, 라이브 재로드를 처리하기 위해 스크립트가 번들에 삽입되고 빌드 메시지가 브라우저 콘솔에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="64ef870ae95d6fc2864d94e9edd1f087d3109f10" translate="yes" xml:space="preserve">
          <source>Toggle between the dev-server's two different modes. By default, the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</source>
          <target state="translated">Toggle between the dev-server's two different modes. By default, the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</target>
        </trans-unit>
        <trans-unit id="9a830c714bb2b52b8f817649335855437ebcb701" translate="yes" xml:space="preserve">
          <source>Tool</source>
          <target state="translated">Tool</target>
        </trans-unit>
        <trans-unit id="1a02f440362f76dd74ced4f9fbfee17146a758be" translate="yes" xml:space="preserve">
          <source>Transform/Conditionally load CSS by passing a transform/condition function</source>
          <target state="translated">변환 / 조건 함수를 전달하여 CSS를 변환 / 조건부로드</target>
        </trans-unit>
        <trans-unit id="626a681bf03395c3c640839f0d5ec24dccbb5e1f" translate="yes" xml:space="preserve">
          <source>Transpiling</source>
          <target state="translated">Transpiling</target>
        </trans-unit>
        <trans-unit id="238d67a83a75343b4c8e8402f4d70c59f71583f1" translate="yes" xml:space="preserve">
          <source>Treat &lt;code&gt;NW.js&lt;/code&gt; legacy &lt;code&gt;nw.gui&lt;/code&gt; module as external and load it via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat &lt;code&gt;NW.js&lt;/code&gt; legacy &lt;code&gt;nw.gui&lt;/code&gt; module as external and load it via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="87f16b9ff027c997e1c9d6f0bceb088b55cf14aa" translate="yes" xml:space="preserve">
          <source>Treat common electron built-in modules in main and preload context like &lt;code&gt;electron&lt;/code&gt;, &lt;code&gt;ipc&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat common electron built-in modules in main and preload context like &lt;code&gt;electron&lt;/code&gt; , &lt;code&gt;ipc&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="e9f41ae02b90a760fcabd383b15366a234d56ecd" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the main context like &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;ipc-main&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat electron built-in modules in the main context like &lt;code&gt;app&lt;/code&gt; , &lt;code&gt;ipc-main&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="ee569634d3cf0444081dd9cc64a066fc484cabbf" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the preload context like &lt;code&gt;web-frame&lt;/code&gt;, &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via require() when used.</source>
          <target state="translated">Treat electron built-in modules in the preload context like &lt;code&gt;web-frame&lt;/code&gt; , &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via require() when used.</target>
        </trans-unit>
        <trans-unit id="9991d90656eeda9f407b7adf531ad346ce9d05f8" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the renderer context like &lt;code&gt;web-frame&lt;/code&gt;, &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat electron built-in modules in the renderer context like &lt;code&gt;web-frame&lt;/code&gt; , &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="0c517d46707745686e1a7a1e2283d08565be6aa3" translate="yes" xml:space="preserve">
          <source>Treat node.js built-in modules like &lt;code&gt;fs&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;vm&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Treat node.js built-in modules like &lt;code&gt;fs&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;vm&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="5f15f4ea76883ddf6eed88e2cd6c93acefa401ed" translate="yes" xml:space="preserve">
          <source>Treat references to 'http(s)://...' and 'std:...' as external and load them via &lt;code&gt;async import()&lt;/code&gt; when used &lt;strong&gt;(Note that this external type is an &lt;code&gt;async&lt;/code&gt; module, which has various effects on the execution)&lt;/strong&gt;.</source>
          <target state="translated">Treat references to 'http(s)://...' and 'std:...' as external and load them via &lt;code&gt;async import()&lt;/code&gt; when used &lt;strong&gt;(Note that this external type is an &lt;code&gt;async&lt;/code&gt; module, which has various effects on the execution)&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="eb5b85afca38d7c1fd75ac57da3aa838b7ac9ad9" translate="yes" xml:space="preserve">
          <source>Treat references to &lt;code&gt;http(s)://...&lt;/code&gt; and &lt;code&gt;std:...&lt;/code&gt; as external and load them via &lt;code&gt;import&lt;/code&gt; when used. &lt;strong&gt;(Note that this changes execution order as externals are executed before any other code in the chunk)&lt;/strong&gt;.</source>
          <target state="translated">Treat references to &lt;code&gt;http(s)://...&lt;/code&gt; and &lt;code&gt;std:...&lt;/code&gt; as external and load them via &lt;code&gt;import&lt;/code&gt; when used. &lt;strong&gt;(Note that this changes execution order as externals are executed before any other code in the chunk)&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="0342403a32191cb5b268774041560f46a913b84c" translate="yes" xml:space="preserve">
          <source>Tree Shaking</source>
          <target state="translated">나무 동요</target>
        </trans-unit>
        <trans-unit id="92ee5435c87b7237526ef2d2b3c89bdeda428523" translate="yes" xml:space="preserve">
          <source>Tries to evaluate expressions in &lt;code&gt;if (...)&lt;/code&gt; statements and ternaries to replace them with &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; for further possible dead branch elimination using hooks fired by the parser.</source>
          <target state="translated">파서에 의해 발생 된 후크를 사용하여 죽은 분기 제거를 가능하게 하기 위해 &lt;code&gt;if (...)&lt;/code&gt; 문과 삼항 에서 식을 평가 하여 &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; 로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="f48dbb4a06d50125f4b45400d23b5309c350e2b5" translate="yes" xml:space="preserve">
          <source>Triggered after chunk &lt;code&gt;id&lt;/code&gt; optimization has finished.</source>
          <target state="translated">청크 &lt;code&gt;id&lt;/code&gt; 최적화가 완료된 후 트리거 됩니다.</target>
        </trans-unit>
        <trans-unit id="7d61f3536f41d0452d7d9b53a7eecd3906189939" translate="yes" xml:space="preserve">
          <source>Triggered after resolver setup is complete.</source>
          <target state="translated">Triggered after resolver setup is complete.</target>
        </trans-unit>
        <trans-unit id="016425652fe92febb10e1a63fc9cd2be53ec09b2" translate="yes" xml:space="preserve">
          <source>Triggered at the beginning of the optimization phase.</source>
          <target state="translated">최적화 단계 시작시 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="56011266a2b4eca29eee0fd1e875499fc201e75f" translate="yes" xml:space="preserve">
          <source>Triggered before a module build has started, can be used to modify the module.</source>
          <target state="translated">Triggered before a module build has started, can be used to modify the module.</target>
        </trans-unit>
        <trans-unit id="728b9f27106bfa00dc2e96b9deec761104277599" translate="yes" xml:space="preserve">
          <source>Triggered before a module build has started.</source>
          <target state="translated">모듈 빌드가 시작되기 전에 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="6fd7fc94807f7511ee573ecde4a783dbf2b73661" translate="yes" xml:space="preserve">
          <source>Triggered before renaming an identifier to determine if the renaming is allowed. This is usually used together with the &lt;code&gt;rename&lt;/code&gt; hook.</source>
          <target state="translated">Triggered before renaming an identifier to determine if the renaming is allowed. This is usually used together with the &lt;code&gt;rename&lt;/code&gt; hook.</target>
        </trans-unit>
        <trans-unit id="12e4ce8c8ac65e98f4f7ccf18c4f4bb82a1b7ef3" translate="yes" xml:space="preserve">
          <source>Triggered to emit the hash for each chunk.</source>
          <target state="translated">Triggered to emit the hash for each chunk.</target>
        </trans-unit>
        <trans-unit id="062b6f416211a2b05dbf4d9f9fecffbdfd04964e" translate="yes" xml:space="preserve">
          <source>Triggered when an asset from a chunk was added to the compilation.</source>
          <target state="translated">Triggered when an asset from a chunk was added to the compilation.</target>
        </trans-unit>
        <trans-unit id="51bc6ac2c044f6b9afa7de612939dadb10997045" translate="yes" xml:space="preserve">
          <source>Triggered when evaluating an expression consisting in a &lt;code&gt;typeof&lt;/code&gt; of a free variable</source>
          <target state="translated">Triggered when evaluating an expression consisting in a &lt;code&gt;typeof&lt;/code&gt; of a free variable</target>
        </trans-unit>
        <trans-unit id="38a030d567f426ffe99aba462766d8b8c251af8b" translate="yes" xml:space="preserve">
          <source>Triggered when parsing a call to a member function of an object.</source>
          <target state="translated">Triggered when parsing a call to a member function of an object.</target>
        </trans-unit>
        <trans-unit id="ff6db867a66d00712678ba838427fd977f1c8d65" translate="yes" xml:space="preserve">
          <source>Triggered when parsing the &lt;code&gt;typeof&lt;/code&gt; of an identifier</source>
          <target state="translated">Triggered when parsing the &lt;code&gt;typeof&lt;/code&gt; of an identifier</target>
        </trans-unit>
        <trans-unit id="44825eac0a17d933f58f835331868e14e67ea739" translate="yes" xml:space="preserve">
          <source>Triggered when renaming to get the new identifier. This hook will be called only if &lt;code&gt;canRename&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Triggered when renaming to get the new identifier. This hook will be called only if &lt;code&gt;canRename&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e56bcdca9e64b81d4b708a360cc55517cb3865c" translate="yes" xml:space="preserve">
          <source>Triggers a re-build of the module.</source>
          <target state="translated">Triggers a re-build of the module.</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="ffb2ecf6611790daff972e263d7001c037770c42" translate="yes" xml:space="preserve">
          <source>Try to keep the chunk count below a limit</source>
          <target state="translated">청크 수를 제한 아래로 유지하십시오</target>
        </trans-unit>
        <trans-unit id="b525bcfcdd619ae45cbe7b652f2a2e93cc867f70" translate="yes" xml:space="preserve">
          <source>Try to keep the chunk size above a limit</source>
          <target state="translated">청크 크기를 제한보다 높게 유지하십시오</target>
        </trans-unit>
        <trans-unit id="d72027e0c8836ef57ef4be1e1d4b0be280682157" translate="yes" xml:space="preserve">
          <source>Turn on &lt;a href=&quot;https://en.wikipedia.org/wiki/Polling_(computer_science)&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt;, or specifying a poll interval in milliseconds:</source>
          <target state="translated">Turn on &lt;a href=&quot;https://en.wikipedia.org/wiki/Polling_(computer_science)&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt; , or specifying a poll interval in milliseconds:</target>
        </trans-unit>
        <trans-unit id="6b517438de5f4b79f54fb3ec50b752a1392cebdf" translate="yes" xml:space="preserve">
          <source>Turn on &lt;a href=&quot;https://whatis.techtarget.com/definition/polling&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt;, or specifying a poll interval in milliseconds:</source>
          <target state="translated">를 켜고 &lt;a href=&quot;https://whatis.techtarget.com/definition/polling&quot;&gt;폴링&lt;/a&gt; 전달하여 &lt;code&gt;true&lt;/code&gt; 또는 밀리 초 단위로 폴링 간격을 지정 :</target>
        </trans-unit>
        <trans-unit id="38fca6ee99a8e2eb5692ba03fc79c782860fdf0d" translate="yes" xml:space="preserve">
          <source>Turn on debugging mode</source>
          <target state="translated">디버깅 모드를 켭니다</target>
        </trans-unit>
        <trans-unit id="2b8055ed62d8e4280ad68eb434e81c48a5a0540b" translate="yes" xml:space="preserve">
          <source>Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files.</source>
          <target state="translated">Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files.</target>
        </trans-unit>
        <trans-unit id="0b364042060d283631bdc472627fff2ec14242bf" translate="yes" xml:space="preserve">
          <source>Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files. Watch mode is turned off by default:</source>
          <target state="translated">시계 모드를 켭니다. 즉, 초기 빌드 후에도 웹팩은 해결 된 파일의 변경 사항을 계속 감시합니다. 시계 모드는 기본적으로 꺼져 있습니다.</target>
        </trans-unit>
        <trans-unit id="5745eba8f5a78750634eaf8eae2c0b439123ade7" translate="yes" xml:space="preserve">
          <source>Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found.</source>
          <target state="translated">Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found.</target>
        </trans-unit>
        <trans-unit id="b9173d10bd7a6471f8b2bcda45935dfcb7aa6ea4" translate="yes" xml:space="preserve">
          <source>Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found. This property is set to &lt;code&gt;&quot;warning&quot;&lt;/code&gt; by default.</source>
          <target state="translated">힌트를 켜거나 끕니다. 또한 힌트를 찾을 때 오류나 경고가 발생하도록 웹팩에 지시합니다. 이 속성은 기본적 으로 &lt;code&gt;&quot;warning&quot;&lt;/code&gt; 로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ce6d5323234bd0947f55f8ac9407c285c721c2b" translate="yes" xml:space="preserve">
          <source>Tweak styling faster -- almost comparable to changing styles in the browser's debugger.</source>
          <target state="translated">브라우저 디버거에서 스타일을 변경하는 것과 거의 비슷한 스타일을 더 빠르게 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e9716466491e421116d059d46096213e7207c3f" translate="yes" xml:space="preserve">
          <source>Two chunk groups with names &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;about&lt;/code&gt; are created. Each of them has a chunk with a module - &lt;code&gt;./home.js&lt;/code&gt; for &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;./about.js&lt;/code&gt; for &lt;code&gt;about&lt;/code&gt;</source>
          <target state="translated">Two chunk groups with names &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;about&lt;/code&gt; are created. Each of them has a chunk with a module - &lt;code&gt;./home.js&lt;/code&gt; for &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;./about.js&lt;/code&gt; for &lt;code&gt;about&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e1a738f77891efb46fed43843ce712380ab54a1" translate="yes" xml:space="preserve">
          <source>Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-&quot;&gt;&lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#require-ensure&quot;&gt;&lt;code&gt;require.ensure&lt;/code&gt;&lt;/a&gt;. Let's try using the first of these two approaches...</source>
          <target state="translated">동적 코드 분할과 관련하여 웹팩에서 유사한 두 가지 기술을 지원합니다. 첫 번째 권장 방법은 동적 가져 오기에 대한 &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript 제안&lt;/a&gt; 을 준수 하는 &lt;a href=&quot;../api/module-methods#import-&quot;&gt; &lt;code&gt;import()&lt;/code&gt; 구문&lt;/a&gt; 을 사용하는 것 입니다. 기존의 웹 팩별 접근 방식은 &lt;a href=&quot;../api/module-methods#require-ensure&quot;&gt; &lt;code&gt;require.ensure&lt;/code&gt; &lt;/a&gt; 를 사용하는 것 입니다. 이 두 가지 방법 중 첫 번째 방법을 사용해 봅시다 ...</target>
        </trans-unit>
        <trans-unit id="79f786196af9807f2487c7f9f2c9c5b0e6bcefa0" translate="yes" xml:space="preserve">
          <source>Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-1&quot;&gt;&lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#requireensure&quot;&gt;&lt;code&gt;require.ensure&lt;/code&gt;&lt;/a&gt;. Let's try using the first of these two approaches...</source>
          <target state="translated">Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-1&quot;&gt; &lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#requireensure&quot;&gt; &lt;code&gt;require.ensure&lt;/code&gt; &lt;/a&gt;. Let's try using the first of these two approaches...</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="428777bf43ef12ea8627eb1b9ee0316b607ca80d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'fallback' | 'no-fallback'&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;'fallback' | 'no-fallback'&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ae1b145c4a39b0e7e83ae72e8f4111b86eed8e4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'module' | 'icss'&lt;/code&gt; Default: &lt;code&gt;'module'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;'module' | 'icss'&lt;/code&gt; Default: &lt;code&gt;'module'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d797f14d50313225620e9264aa69fc680580d0c8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;String\|Array&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Array&amp;lt;String\|Array&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b66e2538b107060adcf2b101da9724ea50ebdbb" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;a href=&quot;#attributes&quot;&gt;supported tags and attributes&lt;/a&gt;.</source>
          <target state="translated">Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;a href=&quot;#attributes&quot;&gt;supported tags and attributes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="94a229b08fb0895570dee34d92dd44e883395943" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[Function]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Array[Function]&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f15a23ea737e87dd7451dd5e0e9e29e27f4055b6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[Object]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Array[Object]&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99b4afaa36767e15dfc4084c10fbd22041b73af8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[String]&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Array[String]&lt;/code&gt; 기본값 : &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea43aa3b9bbcad220f5118da59721ce74d5876e8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean | 'keep-source-map'&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean | 'keep-source-map'&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1786d5f336b7023a095ff9d273b42e018467359" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48f390c9de4ea544dff9d1ec37c3523911fa118e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f822f4d91655775283eeb9acc861e91bb8593e6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt; 기본값 : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24d4453466129b8bf2e49bdf3cd712902713dd56" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93214bd39518ce99d8068fefd7f1edc5a8a7f3f1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: depends on the &lt;code&gt;compiler.devtool&lt;/code&gt; value</source>
          <target state="translated">Type: &lt;code&gt;Boolean&lt;/code&gt; Default: depends on the &lt;code&gt;compiler.devtool&lt;/code&gt; value</target>
        </trans-unit>
        <trans-unit id="d0cd7a32d303176f22a8a47fdbbc0c0402bf5df0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean\|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean\|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c3a84f78b9d3e392a8a1e606b20988e0735c342" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Function&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Function&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b84b9bc7aaebed88083d6cb3754bfb6954242dfe" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|Number&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c62e5b8c87e9d032ff183d6f9cd74472f99bd24d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17d862ded5f60594aaa5a4aabca994ffc0c7fb32" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Number|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faedbfd673ffabf3607ce178a4072cbd053dfb2d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d4d0914369c702e38a062873836b30ee0b138b5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt; (see below for details around &lt;code&gt;devtool&lt;/code&gt; value and &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin)</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt; (see below for details around &lt;code&gt;devtool&lt;/code&gt; value and &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin)</target>
        </trans-unit>
        <trans-unit id="dca87b7b4cae45a1d3ccaaab1fe59d018992a8a4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7511ed55d65f2776bfe6abe75b8133b9740c4f53" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt; in production mode, otherwise &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt; in production mode, otherwise &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3e2c3627ef890c719fc9b134a179935ff2387a5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|RegExp|Function&lt;/code&gt; Default: &lt;code&gt;'true'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|RegExp|Function&lt;/code&gt; Default: &lt;code&gt;'true'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="057522ad3882aff07200321caa3a07f469a2cead" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;'auto'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;'auto'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a30c25942f7bc483ed30429fb6dc547c6680a4e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;base64&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;base64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a45789cbb27a158b6b7a1d196c4567be588ed494" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fb36b090b010171442989619a012304a77f870f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3c6f014e4aa52e4a8bc8886f59fb01087a593d8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8bc98d2d5284dfada844aa73542007514bbde53" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: based from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: based from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c102d3840abe1451f84b0caecaf1f118a0f7975e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/*! For license information please see ${commentsFile} */&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;/*! For license information please see ${commentsFile} */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89d948d309ca4eaddf50a8918ca60c8e8f6d2f83" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc391969d33770757256cb055768d96590ebb7a3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cad21ca15fec76b4ab2909c223d32ff5cbcd86b2" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: based on filename, &lt;code&gt;true&lt;/code&gt; for all files matching &lt;code&gt;/\.module\.\w+$/i.test(filename)&lt;/code&gt; regular expression, more information you can read &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#auto&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: based on filename, &lt;code&gt;true&lt;/code&gt; for all files matching &lt;code&gt;/\.module\.\w+$/i.test(filename)&lt;/code&gt; regular expression, more information you can read &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#auto&quot;&gt;here&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8868d15eb3fe0352c846a246f7ea008f1e7c3180" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2765b2640ca4d35ed492a2c7d20819253ddc2db8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2ce1551a2de3757ecac787eb21b737c666f1d63" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="260402fdd52f9d5162c6febf7c4529ca530706d0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(defaultCacheKeys, file) -&amp;gt; Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;defaultCacheKeys =&amp;gt; defaultCacheKeys&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function&amp;lt;(defaultCacheKeys, file) -&amp;gt; Object&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;defaultCacheKeys =&amp;gt; defaultCacheKeys&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="232775346e1ad8a667d0d298e7c0e473ece45de5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(warning, file, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Function&amp;lt;(warning, file, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5b22bb98280473acea9cd815eda355202cba26a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(warning, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function&amp;lt;(warning, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21907eb9edf04f7610f5c798fdb575c9852fcaa9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="487fc2d2b16308cc82996b1776bbdb64fed169d9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;(mimetype, encoding, content, resourcePath) =&amp;gt; mimetype;encoding,base64_content&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;(mimetype, encoding, content, resourcePath) =&amp;gt; mimetype;encoding,base64_content&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ed6bae83b76c8a2fcf92f4b5e1cf90a0af91066" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Function&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68be30dbb80b283998a4620ae5f2cdfd8a10de7a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32ff5d99cf47a5f4a586c2e015fec8c7af2f831d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0.8&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0.8&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a975206f2485cebaf2024e62ab2604b7a355028" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c50fda292f228e964a3c134d2d898e59768354f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;9999&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Number&lt;/code&gt; 기본값 : &lt;code&gt;9999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c6e568c15b55b37e63744b174b2e3ca5a7ffc31" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;Math.max(1, os.cpus().length - 1)&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;Math.max(1, os.cpus().length - 1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0df7a0769e52452e3df73f39fb7b1a59df2977b3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Number&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87a72a4a194580af6f23ca7095e7565efd80de57" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa1722ad0036438a3b69cf0e3b5d3e0af63f80d4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/fabiosantoscode/terser#minify-options&quot;&gt;default&lt;/a&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt; 기본값 : &lt;a href=&quot;https://github.com/fabiosantoscode/terser#minify-options&quot;&gt;기본값&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f3586819985ed75b8b2d02a46f0e8aaf553b492" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/terser-js/terser#minify-options&quot;&gt;default&lt;/a&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/terser-js/terser#minify-options&quot;&gt;default&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="690a74e8c6ac1a54d1b06a87192c7609fc70939c" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;require('stylelint').formatters.string&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt; 기본값 : &lt;code&gt;require('stylelint').formatters.string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e767c91c234faccef21d5915638af3d37264e2cd" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;sass&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;sass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a00bf287d8473e657b95694eeeebd890a935fbff" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Object&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00286afe4bf29a7632e5621860e7cf14fbbeb610" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ bare: true }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ bare: true }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac88d9846b5205b48538e6913fecc3b59ec6b9fe" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ caseSensitive: true, collapseWhitespace: true, conservativeCollapse: true, keepClosingSlash: true, minifyCSS: true, minifyJS: true, removeComments: true, removeScriptTypeAttributes: true, removeStyleLinkTypeAttributes: true, }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ caseSensitive: true, collapseWhitespace: true, conservativeCollapse: true, keepClosingSlash: true, minifyCSS: true, minifyJS: true, removeComments: true, removeScriptTypeAttributes: true, removeStyleLinkTypeAttributes: true, }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="383bd82c3075c01f42b60082fe4014b73dff736e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ level: 9 }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ level: 9 }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f88059faf76f0131224a4309063319047c83e5f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ plugins: [] }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ plugins: [] }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be10b6ef21673118a1241c6f0b47058097bddac1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ preset: 'default' }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ preset: 'default' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55dffc0c58cd2987f27cc35a619490ed080aa712" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ replacer: null, space: null }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ replacer: null, space: null }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bbb462263241cd2ba3ee41e7774865902f57d06" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3090c9a1f4e5c2003962edd1f7ff139b04f44e6b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb7cf8ded73876568c09a569a8a085e063aae549" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{ relativeUrls: true }&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{ relativeUrls: true }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb52c5e9b3ebe3a7d25c0a508a20473276138ca9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d80c0b8a01c0dab53d1f380627bfecbf1beb280a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: defaults values for Sass implementation</source>
          <target state="translated">Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: defaults values for Sass implementation</target>
        </trans-unit>
        <trans-unit id="f1e7391bdda68bf329c48bd6c9153a513715a424" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;RegExp&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ad0c59a95b0e6d486f10a3a9d7eba6a82efa298" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Regex|Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;&lt;/code&gt; Default: &lt;code&gt;${file}.LICENSE&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Regex|Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;${file}.LICENSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9497118568642094db37dca1d955af12afd5eca" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.js(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;/\.js(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ec6af7a195975bd36af2b460624abae040ba7ce" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c3e574cd51824e490cce46575d42da6d5fbe4e3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String | Array[String]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String | Array[String]&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dad081ed1244c0f0182b6af2ed80d0835e74f031" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b67b322475209b0ccffe39f447c84533fd7ff84d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;a href=&quot;../configuration/entry-context#context&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;a href=&quot;../configuration/entry-context#context&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9daedfc49f97abea259191b53260374e4b184e0b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[hash:base64]'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[hash:base64]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c20abb3d6638283db62af7b659a1c54606b93ac9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[path][name][ext]'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[path][name][ext]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54223bad6aa67e8e06b399d5a079e2fe042e5381" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'file-loader'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;'file-loader'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3450d9d063d640321d1424d901a3cc0370a43af5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'hex'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;'hex'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eef1e4b6ef8dbdfffcb778a4aa5c069e90145b08" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md4'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md4'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f09c525848a9e04af4422213f7421822bdec9703" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md5'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;'md5'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d338a21826be5e359d37d9946a8a9cc06244641e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;(file extension)&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;(file extension)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="458860cc8794fa1dce5c93964ce4854602e52c79" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;[hash].worker.js&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;[hash].worker.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64522537628ac15d313112de255758c15749456e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.context&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;compiler.context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8032c017e30faabb2408749fe2fd317dc850d226" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.options.output&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.options.output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2eabe9055d6691bbf54d928e4538a230fed05fc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.basename&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;file.basename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="585c4c6c689042508af37c0e2edc914428880476" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.directory&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.directory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa3afefe72790380f9808b4dff5a61622b6267d7" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.dirname&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;file.dirname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8b5890ce141620217849910ef33a2967576fd9f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.extname&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;file.extname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb9b2142304351efc8abbda97c00399b5e2d96a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.folder&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.folder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93524c6dfbaa1799587fcb958863ba6a56259b4a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.query&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.query&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf3c7cf42bbb64710fedd3042e2fade6c248c662" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;md4&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;md4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b97332f91a7fb4d7a6f0a6ca1c07ca2d66755569" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b40e8955703b7795ceda160c5ceadbd272eab79" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80a2859cf2d6869eaf9638fb16620ffcf5277e9f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;options.context|compiler.options.context&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;options.context|compiler.options.context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8388c10e54000d4de84160be8aca57b37c6901be" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;process.cwd()&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;process.cwd()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c585da8fcefc2ed263792cc9c85853571e8fbb7a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;styleTag&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;styleTag&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="856eda01ea92fee417c94b9f976fd41b8817e945" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59b2e26d84b0121a329aae253cc8ee15c7293d87" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: based on &lt;code&gt;output.chunkFilename&lt;/code&gt;, adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.chunkFilename: '[id].js'&lt;/code&gt; value of this option will be &lt;code&gt;[id].worker.js&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: based on &lt;code&gt;output.chunkFilename&lt;/code&gt; , adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.chunkFilename: '[id].js'&lt;/code&gt; value of this option will be &lt;code&gt;[id].worker.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cf40b3ba9663df4bddd3abf6f23c4f31bf0756a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: based on the &lt;code&gt;modules.namedExport&lt;/code&gt; option value, if &lt;code&gt;true&lt;/code&gt; - &lt;code&gt;camelCaseOnly&lt;/code&gt;, otherwise &lt;code&gt;asIs&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String&lt;/code&gt; Default: based on the &lt;code&gt;modules.namedExport&lt;/code&gt; option value, if &lt;code&gt;true&lt;/code&gt; - &lt;code&gt;camelCaseOnly&lt;/code&gt; , otherwise &lt;code&gt;asIs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f83500ee648aa9833c754108f00ba4c21bd0bf50" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array&amp;lt;String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Array&amp;lt;String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13f6e2158fdac0cc588821ccc5e6373f2e06c702" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28844db8ffd87c45124157ecf76d46da54a4dbc2" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array[String]&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Array[String]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db8cb2d531af0482fa5e26cb76d4c1b4bd4ddf6e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array[String]&lt;/code&gt; Default: &lt;code&gt;'**/*.s?(a|c)ss'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Array[String]&lt;/code&gt; 기본값 : &lt;code&gt;'**/*.s?(a|c)ss'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5d6a274566e694fad73aaf0e1a035f901d9c71f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Boolean&lt;/code&gt; Default: &lt;code&gt;text/css&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Boolean&lt;/code&gt; Default: &lt;code&gt;text/css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0cfd43f77b19279843713625949db91e7de44cbc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Buffer&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;&lt;em&gt;Required&lt;/em&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Buffer&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt; &lt;em&gt;필수&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c952db2a957a0e68fdbb0804459d83d2054a50d1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[file].LICENSE.txt[query]&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[file].LICENSE.txt[query]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="373ac4265a6b36cab996be0158efe1f99468c92d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c03450e5e444ce147a92117d35e5438de7eba23b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific&quot;&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;&lt;/a&gt;+outputPath</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific&quot;&gt; &lt;code&gt;__webpack_public_path__&lt;/code&gt; &lt;/a&gt;+outputPath</target>
        </trans-unit>
        <trans-unit id="28283229d6030ab5c7fc80576b4f1863027b6f9e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific-&quot;&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Function&lt;/code&gt; 기본값 : &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific-&quot;&gt; &lt;code&gt;__webpack_public_path__&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a87da5454f7f257aef151e60977c28421e51cf00" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;&quot;[path][base].gz&quot;&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;&quot;[path][base].gz&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbad5e6df88ebed3953aa4a84674b9f46ceba6db" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[contenthash].[ext]'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[contenthash].[ext]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="360ab5e9d49ff583c21f7d76eb3d326afea79f20" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[hash].[ext]'&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Function&lt;/code&gt; 기본값 : &lt;code&gt;'[hash].[ext]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d341e5b91c99fdd338e2c267ab557fac452e24d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'local'&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'local'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7d12f3fc3362d6b95cbc5af61377f814a08add6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;[name].css&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;[name].css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cea08d8cc38de763c51013295d9c833262fa93f3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;based on filename&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;based on filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3ca759aa7b4b478627f625fc693bb2ed73b5e4d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;document.head.appendChild(linkTag);&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;document.head.appendChild(linkTag);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b593763afcd5e05cb97fb6b1c8b1f326f003b86e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;gzip&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;gzip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fab7e59215eaf65fb923d90715d7a93c7dd88efc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;head&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;head&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3091c75d84d793177ba7ea3b610ff90640c8fc55" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|Function&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32626a800691e23867c96cc5b1de72fff7c4412" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.filename&lt;/code&gt;, adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.filename: '[name].js'&lt;/code&gt; value of this option will be &lt;code&gt;[name].worker.js&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.filename&lt;/code&gt; , adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.filename: '[name].js'&lt;/code&gt; value of this option will be &lt;code&gt;[name].worker.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c18c13b5d9fc9e0eb2c8c94f63d67e46c10feb91" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.publicPath&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.publicPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d26e9e323968365324d822faa5945c81e808ecd5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: the &lt;code&gt;publicPath&lt;/code&gt; in &lt;code&gt;webpackOptions.output&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Function&lt;/code&gt; Default: the &lt;code&gt;publicPath&lt;/code&gt; in &lt;code&gt;webpackOptions.output&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee550ce7ace209afcbb5ab7d70ad24c469493180" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Object&lt;/code&gt; Default: &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Object&lt;/code&gt; Default: &lt;code&gt;Worker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f94280a8675aa87217323d81e29676113f9a627" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Object|Array&amp;lt;String|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|Object|Array&amp;lt;String|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07e93852aca3bd1f3b2c32924cd64f9dcb7f9a63" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8113ae3d265d1a67acc2263bc2ca536d74c3ff2a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String,RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">유형 : &lt;code&gt;String|RegExp|Array&amp;lt;String,RegExp&amp;gt;&lt;/code&gt; 기본값 : &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5fe0a0f05442268f580aa161cdc944b91702948" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.css(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.css(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fb6ecbfcdbe169219c53a75e898160feb271bea" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.html(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.html(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d106a5ab125b4c4095e2d5da1adb13324e300f6e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.json(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.json(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eca9efcb50f187a5f0d48d1fdd2486fd7af1ab13" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.(jpe?g\|png\|gif\|tif\|webp\|svg\|avif)\$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.(jpe?g\|png\|gif\|tif\|webp\|svg\|avif)\$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="320946a2f8aa42823718e5ab474d626b42e6baff" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.m?js(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.m?js(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ce081b1c4c31411700b2d458dd1888a6339363e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="c2d9ac914c647cad0dbcbcb87931238e275c6336" translate="yes" xml:space="preserve">
          <source>TypeScript Loader</source>
          <target state="translated">TypeScript 로더</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="1f7c2dd82181496d2b141ba86b492b3af4761c11" translate="yes" xml:space="preserve">
          <source>Typical Use Cases</source>
          <target state="translated">일반적인 사용 사례</target>
        </trans-unit>
        <trans-unit id="bdc2668b0893170109e3358e3f8b6cc8e3f68770" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.hotUpdateChunkFilename&lt;/code&gt;.</source>
          <target state="translated">Typically you don't need to change &lt;code&gt;output.hotUpdateChunkFilename&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80832d1efef1dbec926f99fc3dd7765908e985ec" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.hotUpdateMainFilename&lt;/code&gt;.</source>
          <target state="translated">Typically you don't need to change &lt;code&gt;output.hotUpdateMainFilename&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e8fa7ca58f14dbe0e88e31b82253c2fe8330c7" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.sourcePrefix&lt;/code&gt;.</source>
          <target state="translated">Typically you don't need to change &lt;code&gt;output.sourcePrefix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b1515c87f6a7ea85127e01e963023637ee473a4" translate="yes" xml:space="preserve">
          <source>Typically, only one master &lt;code&gt;Compiler&lt;/code&gt; instance is created, although child compilers can be created in order to delegate specific tasks. The &lt;code&gt;Compiler&lt;/code&gt; is ultimately just a function which performs bare minimum functionality to keep a lifecycle running. It delegates all the loading, bundling, and writing work to registered plugins.</source>
          <target state="translated">특정 작업을 위임하기 위해 자식 컴파일러를 만들 수 있지만 일반적으로 하나의 마스터 &lt;code&gt;Compiler&lt;/code&gt; 인스턴스 만 만들어집니다. &lt;code&gt;Compiler&lt;/code&gt; 궁극적으로 라이프 사이클을 계속 실행하기위한 최소한의 기능을 수행하는 단지 기능입니다. 모든로드, 번들 및 쓰기 작업을 등록 된 플러그인에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="c3f8e78bf56c04e550ab81796136efb41f9da8c9" translate="yes" xml:space="preserve">
          <source>UMD: available after AMD or CommonJS &lt;code&gt;require&lt;/code&gt; (&lt;code&gt;libraryTarget:'umd'&lt;/code&gt;).</source>
          <target state="translated">UMD : AMD 또는 CommonJS가 &lt;code&gt;require&lt;/code&gt; 후에 사용 가능 합니다 ( &lt;code&gt;libraryTarget:'umd'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="f94ecfbd0d2bcb50a727f623eb96ddebf3c848c2" translate="yes" xml:space="preserve">
          <source>URL assets</source>
          <target state="translated">URL assets</target>
        </trans-unit>
        <trans-unit id="a7306d507f537995a908cdc2c667543de98fc215" translate="yes" xml:space="preserve">
          <source>UglifyJsPlugin</source>
          <target state="translated">UglifyJsPlugin</target>
        </trans-unit>
        <trans-unit id="3d9844683293513f543c7b29de1eca0738819eb5" translate="yes" xml:space="preserve">
          <source>UglifyjsWebpackPlugin</source>
          <target state="translated">UglifyjsWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="6269c568a3b218ceca1f87557b01a5fd9630fc75" translate="yes" xml:space="preserve">
          <source>Under The Hood</source>
          <target state="translated">Under The Hood</target>
        </trans-unit>
        <trans-unit id="a97df0e9ab39030d7a23b49ea204e7804ae6467e" translate="yes" xml:space="preserve">
          <source>Unfortunately, Less doesn't map all options 1-by-1 to camelCase. When in doubt, &lt;a href=&quot;https://github.com/less/less.js/blob/3.x/bin/lessc&quot;&gt;check their executable&lt;/a&gt; and search for the dash-case option.</source>
          <target state="translated">불행히도 Less는 모든 옵션을 카멜 케이스에 하나씩 매핑하지 않습니다. 때 의심, &lt;a href=&quot;https://github.com/less/less.js/blob/3.x/bin/lessc&quot;&gt;자신의 실행 파일을 확인&lt;/a&gt; 하고 대시 경우의 옵션을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="02b28fce43a60e9b67980e224a3271b9d05a18d1" translate="yes" xml:space="preserve">
          <source>Unique ident for this plugin instance. (For advanced usage only, by default automatically generated)</source>
          <target state="translated">이 플러그인 인스턴스의 고유 ID입니다. (고급 사용의 경우 기본적으로 자동 생성됨)</target>
        </trans-unit>
        <trans-unit id="38096a0782d24be3f1ac8a005109a6f9e98a2e3c" translate="yes" xml:space="preserve">
          <source>Unlicense</source>
          <target state="translated">Unlicense</target>
        </trans-unit>
        <trans-unit id="87275ae56cb19d69dde22669d78018993c53c041" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt;, default values are applied to &lt;code&gt;JSON.stringify&lt;/code&gt; by the &lt;code&gt;EnvironmentPlugin&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; &lt;/a&gt; 과 달리 기본값 은 &lt;code&gt;EnvironmentPlugin&lt;/code&gt; 에 의해 &lt;code&gt;JSON.stringify&lt;/code&gt; 에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3f04a0cd74b23ebbf601fa4c959ce4e4655cc47" translate="yes" xml:space="preserve">
          <source>Unlike throwing an Error directly, it will NOT interrupt the compilation process of the current module.</source>
          <target state="translated">Unlike throwing an Error directly, it will NOT interrupt the compilation process of the current module.</target>
        </trans-unit>
        <trans-unit id="67460e2fd161078fefa4bc5f650d2ab4df1bb707" translate="yes" xml:space="preserve">
          <source>Unseals the compilation.</source>
          <target state="translated">Unseals the compilation.</target>
        </trans-unit>
        <trans-unit id="97906c9c9c0bfb96fc8e4c7b67d7ad433d30558b" translate="yes" xml:space="preserve">
          <source>Updates style &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;</source>
          <target state="translated">업데이트 스타일 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a64583707dd31180fe5a0ab3c47efa644fc29e01" translate="yes" xml:space="preserve">
          <source>Usable in web, Node.js, etc.</source>
          <target state="translated">Usable in web, Node.js, etc.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="855dfd5dbc4d5f3c81b2429eeef839b85bd8fb6b" translate="yes" xml:space="preserve">
          <source>Usage as a function:</source>
          <target state="translated">Usage as a function:</target>
        </trans-unit>
        <trans-unit id="3439e83eddd9b986dc9a370152a22cf7dcf9b189" translate="yes" xml:space="preserve">
          <source>Usage example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="9de2343e3dff906827854d6f9144e5566b51cab5" translate="yes" xml:space="preserve">
          <source>Usage via CLI</source>
          <target state="translated">Usage via CLI</target>
        </trans-unit>
        <trans-unit id="41cb38aef0f43893edb2a921684f2f6f40f9e95c" translate="yes" xml:space="preserve">
          <source>Usage via the CLI</source>
          <target state="translated">CLI를 통한 사용법</target>
        </trans-unit>
        <trans-unit id="049f5e1baa1376397ff904e81ced9390d85660bb" translate="yes" xml:space="preserve">
          <source>Usage with config file</source>
          <target state="translated">구성 파일 사용</target>
        </trans-unit>
        <trans-unit id="420dc5d6f5dd5e472ab220d4ffe705c20bd6dcc7" translate="yes" xml:space="preserve">
          <source>Usage with default values</source>
          <target state="translated">기본값이있는 사용법</target>
        </trans-unit>
        <trans-unit id="f0bda72188507cba1ef2ddbd4e83a886112b7438" translate="yes" xml:space="preserve">
          <source>Usage with require statement loader prefix</source>
          <target state="translated">require 문 로더 접두사와 함께 사용</target>
        </trans-unit>
        <trans-unit id="785ae0c3486e73e9f8b768557933a332df04dc7d" translate="yes" xml:space="preserve">
          <source>Usage without config file</source>
          <target state="translated">구성 파일이없는 사용법</target>
        </trans-unit>
        <trans-unit id="821e5fac998dd151dcf624b207788a33d5618f3d" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: string | [string]&lt;/code&gt;</source>
          <target state="translated">Usage: &lt;code&gt;entry: string | [string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71ee1172757fd42561b9cf137f9ab461f5d586e7" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: string|Array&amp;lt;string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">사용법 : &lt;code&gt;entry: string|Array&amp;lt;string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c731a73c08ff4c5db49b52bc479ab6f7d72672d6" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: { &amp;lt;entryChunkName&amp;gt; string | [string] } | {}&lt;/code&gt;</source>
          <target state="translated">Usage: &lt;code&gt;entry: { &amp;lt;entryChunkName&amp;gt; string | [string] } | {}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e054d435d046f8777136e4b00386b25fc845a634" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: {[entryChunkName: string]: string|Array&amp;lt;string&amp;gt;}&lt;/code&gt;</source>
          <target state="translated">사용법 : &lt;code&gt;entry: {[entryChunkName: string]: string|Array&amp;lt;string&amp;gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="048a95d8e63a18a35214152fa9cdd1ca3affe9c9" translate="yes" xml:space="preserve">
          <source>Usage: Lodash Map</source>
          <target state="translated">사용법 : Lodash Map</target>
        </trans-unit>
        <trans-unit id="bd71a2d8f7fdfbd229f3ddfe2c52c1ebc36f92b1" translate="yes" xml:space="preserve">
          <source>Usage: Vue.js</source>
          <target state="translated">사용법 : Vue.js</target>
        </trans-unit>
        <trans-unit id="c71a7f709525e96282aab1489390403a74f7af5e" translate="yes" xml:space="preserve">
          <source>Usage: custom &lt;code&gt;outputPath&lt;/code&gt;</source>
          <target state="translated">사용법 : 사용자 정의 &lt;code&gt;outputPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6074933fbc4d7ed357713b8393150012a221bc81" translate="yes" xml:space="preserve">
          <source>Usage: default</source>
          <target state="translated">사용법 : 기본값</target>
        </trans-unit>
        <trans-unit id="97aa9139b5759d53264af935bc8b66d67296c1c9" translate="yes" xml:space="preserve">
          <source>Usage: jQuery</source>
          <target state="translated">사용법 : jQuery</target>
        </trans-unit>
        <trans-unit id="c9948b5c3a0efb386160d78d9e95149d8988754d" translate="yes" xml:space="preserve">
          <source>Usage: jQuery with Angular 1</source>
          <target state="translated">사용법 : jQuery with Angular 1</target>
        </trans-unit>
        <trans-unit id="10e8c6c7100f2e71b8c6dc58009dbebb98bbfdda" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/webpack/webpack-cli/tree/master/packages/init#cli-via-webpack-cli&quot;&gt;webpack-cli's &lt;code&gt;init&lt;/code&gt; command&lt;/a&gt; to rapidly generate webpack configuration file for your project requirements, it will ask you a couple of questions before creating a configuration file.</source>
          <target state="translated">Use &lt;a href=&quot;https://github.com/webpack/webpack-cli/tree/master/packages/init#cli-via-webpack-cli&quot;&gt;webpack-cli's &lt;code&gt;init&lt;/code&gt; command&lt;/a&gt; to rapidly generate webpack configuration file for your project requirements, it will ask you a couple of questions before creating a configuration file.</target>
        </trans-unit>
        <trans-unit id="a0d2dcef687f9ba1414902a7a171079ca116b9ab" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;script type=&quot;module&quot; src=&quot;es6_out_path.js&quot;&amp;gt;&lt;/code&gt; to target modern browsers and &lt;code&gt;&amp;lt;script nomodule src=&quot;es5_out_path.js&quot;&amp;gt;&lt;/code&gt; for older browsers.</source>
          <target state="translated">Use &lt;code&gt;&amp;lt;script type=&quot;module&quot; src=&quot;es6_out_path.js&quot;&amp;gt;&lt;/code&gt; to target modern browsers and &lt;code&gt;&amp;lt;script nomodule src=&quot;es5_out_path.js&quot;&amp;gt;&lt;/code&gt; for older browsers.</target>
        </trans-unit>
        <trans-unit id="72ddf696321a9a37dbaaa9b99e33eac9435e6327" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;'ws'&lt;/code&gt; mode:</source>
          <target state="translated">Use &lt;code&gt;'ws'&lt;/code&gt; mode:</target>
        </trans-unit>
        <trans-unit id="90283442f2ef3d264ecbf048521f8735be3ab70f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; to create bundles of shared application code between each page. Multi-page applications that reuse a lot of code/modules between entry points can greatly benefit from these techniques, as the amount of entry points increase.</source>
          <target state="translated">&lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용 하여 각 페이지간에 공유 애플리케이션 코드 번들을 작성하십시오. 진입 점 사이에 많은 코드 / 모듈을 재사용하는 다중 페이지 응용 프로그램은 진입 점이 증가함에 따라 이러한 기술의 이점을 크게 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f1fed208551ff106887d8af5e80ff7ef296a976" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;module.rules&lt;/code&gt; whenever possible, as this will reduce boilerplate in your source code and allow you to debug or locate a loader faster if something goes south.</source>
          <target state="translated">가능하면 &lt;code&gt;module.rules&lt;/code&gt; 를 사용 하십시오. 소스 코드의 상용구가 줄어들고 남쪽으로가는 경우 로더를 더 빨리 디버깅하거나 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f901fde6dfa9e5f040de87dda47b0543bb37dc53" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;resolve.conditionNames&lt;/code&gt; configuration option.</source>
          <target state="translated">Use &lt;code&gt;resolve.conditionNames&lt;/code&gt; configuration option.</target>
        </trans-unit>
        <trans-unit id="cc3b4f270b753c9ce570c3f37d9231f10a431dfc" translate="yes" xml:space="preserve">
          <source>Use Case: Git Version</source>
          <target state="translated">Use Case: Git Version</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="9c64fb613f74d09a8921c473b4932e24ac5d67e8" translate="yes" xml:space="preserve">
          <source>Use ES modules syntax</source>
          <target state="translated">Use ES modules syntax</target>
        </trans-unit>
        <trans-unit id="a77d20ba66c81e5da2236c506b4a70906c3dff0e" translate="yes" xml:space="preserve">
          <source>Use ES modules syntax.</source>
          <target state="translated">Use ES modules syntax.</target>
        </trans-unit>
        <trans-unit id="e804363a0734db33e7dd8b2cf9fa692e9bd07cc6" translate="yes" xml:space="preserve">
          <source>Use ES2015 module syntax (i.e. &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;).</source>
          <target state="translated">ES2015 모듈 구문을 사용하십시오 (예 : &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;export&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8e3799199c2fd1385ca8a6679a7569bf770dc434" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;eval-source-map&lt;/code&gt; variant for incremental builds.</source>
          <target state="translated">증분 빌드 에는 &lt;code&gt;eval-source-map&lt;/code&gt; 변형을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3823015acd2a8397f2d349e0faf7bde67ec1677e" translate="yes" xml:space="preserve">
          <source>Use a different service URL in production/development builds:</source>
          <target state="translated">프로덕션 / 개발 빌드에서 다른 서비스 URL을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="29b08ddff54d134786e6d97bb5f981c57e922b1d" translate="yes" xml:space="preserve">
          <source>Use a value of &lt;code&gt;Infinity&lt;/code&gt; to process all assets even if they are larger than the original size or their original size is &lt;code&gt;0&lt;/code&gt; bytes (useful when you are pre-zipping all assets for AWS).</source>
          <target state="translated">Use a value of &lt;code&gt;Infinity&lt;/code&gt; to process all assets even if they are larger than the original size or their original size is &lt;code&gt;0&lt;/code&gt; bytes (useful when you are pre-zipping all assets for AWS).</target>
        </trans-unit>
        <trans-unit id="2445d385b53a4de72ebd7423a5eb95275a6bf0e0" translate="yes" xml:space="preserve">
          <source>Use a value of &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; to process all assets even if they are larger than the original size, excluding assets with their original size is &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="translated">Use a value of &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; to process all assets even if they are larger than the original size, excluding assets with their original size is &lt;code&gt;0&lt;/code&gt; bytes.</target>
        </trans-unit>
        <trans-unit id="063f130f568e21683ee17bec01662f407d588a04" translate="yes" xml:space="preserve">
          <source>Use an object to pass options through to Less.</source>
          <target state="translated">Use an object to pass options through to Less.</target>
        </trans-unit>
        <trans-unit id="429433a3edb72c952be8fecdafc78c0a4adecac1" translate="yes" xml:space="preserve">
          <source>Use an object to pass options through to Stylus.</source>
          <target state="translated">Use an object to pass options through to Stylus.</target>
        </trans-unit>
        <trans-unit id="35e3a7aa8dc52f6313e8349c7c4d4b9e51cb4f88" translate="yes" xml:space="preserve">
          <source>Use and object for the Sass implementation setup.</source>
          <target state="translated">Use and object for the Sass implementation setup.</target>
        </trans-unit>
        <trans-unit id="14a29ba383c84d15925a42f871530f52904ae908" translate="yes" xml:space="preserve">
          <source>Use cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="3423fcc4dce73b33f44b7a08148fbae5735d3851" translate="yes" xml:space="preserve">
          <source>Use different config file</source>
          <target state="translated">다른 구성 파일 사용</target>
        </trans-unit>
        <trans-unit id="781efd5f450e0f981441f9f3b7b5fe1e6e74e82d" translate="yes" xml:space="preserve">
          <source>Use different configuration file</source>
          <target state="translated">Use different configuration file</target>
        </trans-unit>
        <trans-unit id="5f963deeb0b38ab886479137bc92905c39af1075" translate="yes" xml:space="preserve">
          <source>Use fewer/smaller libraries.</source>
          <target state="translated">더 적거나 더 작은 라이브러리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8fe70a122d979d6c4f0829a11979f8862aee57f2" translate="yes" xml:space="preserve">
          <source>Use it &lt;strong&gt;before&lt;/strong&gt;&lt;code&gt;css-loader&lt;/code&gt; and &lt;code&gt;style-loader&lt;/code&gt;, but &lt;strong&gt;after&lt;/strong&gt; other preprocessor loaders like e.g &lt;code&gt;sass|less|stylus-loader&lt;/code&gt;, if you use any (since &lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;webpack loaders evaluate right to left/bottom to top&lt;/a&gt;).</source>
          <target state="translated">Use it &lt;strong&gt;before&lt;/strong&gt; &lt;code&gt;css-loader&lt;/code&gt; and &lt;code&gt;style-loader&lt;/code&gt; , but &lt;strong&gt;after&lt;/strong&gt; other preprocessor loaders like e.g &lt;code&gt;sass|less|stylus-loader&lt;/code&gt; , if you use any (since &lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;webpack loaders evaluate right to left/bottom to top&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6ea91fd51d88210a0f6118413452bbea9e27499b" translate="yes" xml:space="preserve">
          <source>Use modules without having to use import/require</source>
          <target state="translated">가져 오기 / 필요없이 모듈 사용</target>
        </trans-unit>
        <trans-unit id="e2734a5814e4bc497b1db8f46457c27f5b96b2b7" translate="yes" xml:space="preserve">
          <source>Use multi-process parallel running to improve the build speed</source>
          <target state="translated">다중 프로세스 병렬 실행을 사용하여 빌드 속도 향상</target>
        </trans-unit>
        <trans-unit id="2f56bfa52ab19a884eb17c40d6e8a950a0ccd1d4" translate="yes" xml:space="preserve">
          <source>Use multi-process parallel running to improve the build speed. Default number of concurrent runs: &lt;code&gt;os.cpus().length - 1&lt;/code&gt;.</source>
          <target state="translated">빌드 속도를 높이려면 다중 프로세스 병렬 실행을 사용하십시오. 기본 동시 실행 수 : &lt;code&gt;os.cpus().length - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="852a5e5247d5f01d785e00d48cebc874527016c3" translate="yes" xml:space="preserve">
          <source>Use of HtmlWebpackPlugin</source>
          <target state="translated">HtmlWebpackPlugin 사용</target>
        </trans-unit>
        <trans-unit id="b8a1bc5d1840853cc471934d460a60e714be6e6f" translate="yes" xml:space="preserve">
          <source>Use source maps to map error message locations to modules (This slows down the compilation) ⚠️ &lt;strong&gt;&lt;code&gt;cheap-source-map&lt;/code&gt; options don't work with this plugin&lt;/strong&gt;</source>
          <target state="translated">소스 맵을 사용하여 오류 메시지 위치를 모듈에 맵핑하십시오 (컴파일 속도가 느려짐). ⚠️ &lt;strong&gt; &lt;code&gt;cheap-source-map&lt;/code&gt; 옵션이이 플러그인에서 작동하지 않습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3568250533b173a47606070650342da08e05889e" translate="yes" xml:space="preserve">
          <source>Use source maps to map error message locations to modules (this slows down the compilation). If you use your own &lt;code&gt;minify&lt;/code&gt; function please read the &lt;code&gt;minify&lt;/code&gt; section for handling source maps correctly.</source>
          <target state="translated">소스 맵을 사용하여 오류 메시지 위치를 모듈에 맵핑하십시오 (이로 인해 컴파일 속도가 느려짐). 자체 &lt;code&gt;minify&lt;/code&gt; 기능 을 사용하는 경우 소스 맵을 올바르게 처리하기위한 &lt;code&gt;minify&lt;/code&gt; 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="4c67aa0dbdd4d1f54297f868de879176bff2b4de" translate="yes" xml:space="preserve">
          <source>Use sourcemaps</source>
          <target state="translated">Use sourcemaps</target>
        </trans-unit>
        <trans-unit id="34b6dd9102de00b202f93084bc9cf07017df3a8b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;&lt;code&gt;production&lt;/code&gt;&lt;/a&gt;&lt;code&gt;mode&lt;/code&gt; configuration option to enable &lt;a href=&quot;../configuration/mode#usage&quot;&gt;various optimizations&lt;/a&gt; including minification and tree shaking.</source>
          <target state="translated">Use the &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt; &lt;code&gt;production&lt;/code&gt; &lt;/a&gt; &lt;code&gt;mode&lt;/code&gt; configuration option to enable &lt;a href=&quot;../configuration/mode#usage&quot;&gt;various optimizations&lt;/a&gt; including minification and tree shaking.</target>
        </trans-unit>
        <trans-unit id="03afd1f2b8a63af2efbeb43ec2fe23408b535c2c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#exports-loader&quot;&gt;exports-loader&lt;/a&gt; to add a module export to components which expect a symbol to be global.</source>
          <target state="translated">&lt;a href=&quot;../guides/shimming#exports-loader&quot;&gt;exports-loader&lt;/a&gt; 를 사용하여 심볼이 전역이 될 것으로 예상되는 컴포넌트에 모듈 내보내기를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7047a6a883604b0b16f8494074ad551fccc60e76" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#imports-loader&quot;&gt;imports-loader&lt;/a&gt; when a script expects the &lt;code&gt;this&lt;/code&gt; keyword to reference &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">스크립트에서 &lt;code&gt;this&lt;/code&gt; 키워드가 &lt;code&gt;window&lt;/code&gt; 를 참조 할 것으로 예상되면 &lt;a href=&quot;../guides/shimming#imports-loader&quot;&gt;imports-loader를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="29623b48270f1002c1bd8b54dc602f32f7ba9205" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#provideplugin&quot;&gt;ProvidePlugin&lt;/a&gt; to add a module import statement when a script expects a variable to be globally defined (but is now a module export).</source>
          <target state="translated">스크립트가 변수가 전역 적으로 정의 될 것으로 예상 할 때 (이제 모듈 내보내기 임) 모듈 가져 오기 명령문을 추가 하려면 &lt;a href=&quot;../guides/shimming#provideplugin&quot;&gt;ProvidePlugin&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f67fa4b9fb64dd98c2eb5ca8cdaa686cedc2d0b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../plugins/normal-module-replacement-plugin&quot;&gt;NormalModuleReplacementPlugin&lt;/a&gt; to have webpack swap a module-compliant version for a script.</source>
          <target state="translated">&lt;a href=&quot;../plugins/normal-module-replacement-plugin&quot;&gt;웹팩&lt;/a&gt; 이 스크립트를위한 모듈 호환 버전을 교환하도록 하려면 NormalModuleReplacementPlugin 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4c5aca3b91a835fa0116cb085e98809d051f74f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../plugins/source-map-dev-tool-plugin&quot;&gt;&lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt;&lt;/a&gt; for a more fine grained configuration. See the &lt;a href=&quot;../loaders/source-map-loader&quot;&gt;&lt;code&gt;source-map-loader&lt;/code&gt;&lt;/a&gt; to deal with existing source maps.</source>
          <target state="translated">보다 세밀한 구성을 위해서는 &lt;a href=&quot;../plugins/source-map-dev-tool-plugin&quot;&gt; &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 . 기존 소스 맵을 처리 하려면 &lt;a href=&quot;../loaders/source-map-loader&quot;&gt; &lt;code&gt;source-map-loader&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3fae1281abf983ea68fc5840def5bfe64a255ab" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt; or the &lt;a href=&quot;raw-loader&quot;&gt;raw-loader&lt;/a&gt; to turn it into a JS module and the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; to extract it into a separate file. Looking for the webpack 1 loader? Check out the &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/archive/webpack-1&quot;&gt;archive/webpack-1 branch&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;css-loader&quot;&gt;CSS 로더&lt;/a&gt; 또는 &lt;a href=&quot;raw-loader&quot;&gt;원시 로더를&lt;/a&gt; JS 모듈과로를 설정하는 &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; 별도의 파일로 압축을 풉니 다. webpack 1 로더를 찾고 계십니까? &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/archive/webpack-1&quot;&gt;archive / webpack-1 브랜치를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8f5053cc9a5b3edfd022be6aa3ad7bbe8a89ce2" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt;&lt;code&gt;getOptions&lt;/code&gt; method&lt;/a&gt; from &lt;code&gt;loader-utils&lt;/code&gt; to extract given loader options.</source>
          <target state="translated">주어진 로더 옵션을 추출하려면 &lt;code&gt;loader-utils&lt;/code&gt; 의 &lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt; &lt;code&gt;getOptions&lt;/code&gt; 메소드&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3246b4d7c38981b18ae1ec1216216ce55f906be" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://www.npmjs.com/package/stats-webpack-plugin&quot;&gt;StatsPlugin&lt;/a&gt; for more control over the generated profile.</source>
          <target state="translated">생성 된 프로파일을보다 세밀하게 제어 하려면 &lt;a href=&quot;https://www.npmjs.com/package/stats-webpack-plugin&quot;&gt;StatsPlugin&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="860721991110aab1ff27b582970ee9eb61d78c8b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</source>
          <target state="translated">다중 페이지 응용 프로그램의 &lt;code&gt;async&lt;/code&gt; 모드에서 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="951dd6398ced88957c9859db052edccc7d1f697e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; in Multi-Page Applications.</source>
          <target state="translated">다중 페이지 애플리케이션에서 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="407ed185a0e815fd28205b6737de4f430df23ea0" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;DllPlugin&lt;/code&gt; to move code that is changed less often into a separate compilation. This will improve the application's compilation speed, although it does increase complexity of the build process.</source>
          <target state="translated">덜 자주 변경되는 코드를 별도의 컴파일로 이동 하려면 &lt;code&gt;DllPlugin&lt;/code&gt; 을 사용하십시오 . 이렇게하면 빌드 프로세스의 복잡성이 증가하지만 응용 프로그램의 컴파일 속도가 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="5deb8470305817c4868baebdaee2ceecb3ad5836" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</source>
          <target state="translated">Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</target>
        </trans-unit>
        <trans-unit id="3ee86b374b58871f6c0609f27d2e0d89331fb78d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in Multi-Page Applications.</source>
          <target state="translated">Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in Multi-Page Applications.</target>
        </trans-unit>
        <trans-unit id="4d5dba36cefe992d08bc8c0b9e38d294640a1015" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for type checking in a separate process.</source>
          <target state="translated">별도의 프로세스에서 유형 검사에 &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="22116d89c5b9c5171f2fcb19c49f120558979cfa" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for typechecking in a separate process.</source>
          <target state="translated">Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for typechecking in a separate process.</target>
        </trans-unit>
        <trans-unit id="7c3fc2640668db5a714dcb9a0de5b946c89e2776" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;include&lt;/code&gt; field to only apply the loader modules that actually need to be transformed by it:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 필드를 사용하여 실제로 변환해야하는 로더 모듈을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="6b4ec7e4501faec29866e0df60d895bdba3b09ce" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;optimization.emitOnErrors&lt;/code&gt; to emit assets whenever there are errors while compiling. This ensures that erroring assets are emitted. Critical errors are emitted into the generated code and will cause errors at runtime.</source>
          <target state="translated">Use the &lt;code&gt;optimization.emitOnErrors&lt;/code&gt; to emit assets whenever there are errors while compiling. This ensures that erroring assets are emitted. Critical errors are emitted into the generated code and will cause errors at runtime.</target>
        </trans-unit>
        <trans-unit id="fbbfaa0dda995af3ea65e98d5191ff5346c703c6" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;optimization.noEmitOnErrors&lt;/code&gt; to skip the emitting phase whenever there are errors while compiling. This ensures that no erroring assets are emitted. The &lt;code&gt;emitted&lt;/code&gt; flag in the stats is &lt;code&gt;false&lt;/code&gt; for all assets.</source>
          <target state="translated">컴파일 중 오류가있을 때마다 발광 단계를 건너 뛰 려면 &lt;code&gt;optimization.noEmitOnErrors&lt;/code&gt; 를 사용하십시오 . 이를 통해 오류가있는 자산이 배출되지 않습니다. &lt;code&gt;emitted&lt;/code&gt; 통계에 플래그가 &lt;code&gt;false&lt;/code&gt; 모든 자산.</target>
        </trans-unit>
        <trans-unit id="2c737b0d8095d696499c652bd5e9095b5f62e204" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;output&lt;/code&gt; option to change the filenames of specific plugin instances.</source>
          <target state="translated">Use the &lt;code&gt;output&lt;/code&gt; option to change the filenames of specific plugin instances.</target>
        </trans-unit>
        <trans-unit id="3913a299d09b9025220f8c50bb09dcf00287f0af" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;ts-loader&lt;/code&gt; in &lt;code&gt;happyPackMode: true&lt;/code&gt; / &lt;code&gt;transpileOnly: true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;happyPackMode: true&lt;/code&gt; / &lt;code&gt;transpileOnly: true&lt;/code&gt; 에서 &lt;code&gt;ts-loader&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bdf28e3536c978c9d5da7c7b4624bdcdb610692" translate="yes" xml:space="preserve">
          <source>Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, &quot;app/folder&quot;)&lt;/code&gt; or &lt;code&gt;path.join(__dirname, &quot;app&quot;, &quot;folder&quot;)&lt;/code&gt;.</source>
          <target state="translated">올바른 구분 기호를 사용하십시오. 즉 &lt;code&gt;path.resolve(__dirname, &quot;app/folder&quot;)&lt;/code&gt; 또는 &lt;code&gt;path.join(__dirname, &quot;app&quot;, &quot;folder&quot;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="22307d7e5f9df5400081ef23d6fd7ceb1e6e265c" translate="yes" xml:space="preserve">
          <source>Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, 'app/folder')&lt;/code&gt; or &lt;code&gt;path.join(__dirname, 'app', 'folder')&lt;/code&gt;.</source>
          <target state="translated">Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, 'app/folder')&lt;/code&gt; or &lt;code&gt;path.join(__dirname, 'app', 'folder')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb44873658f96e0f3ed2aaf4b748dd1802eafd11" translate="yes" xml:space="preserve">
          <source>Use the latest webpack version. We are always making performance improvements. The latest recommended version of webpack is:</source>
          <target state="translated">Use the latest webpack version. We are always making performance improvements. The latest recommended version of webpack is:</target>
        </trans-unit>
        <trans-unit id="7379d2ab48a8375408752658fb495bfcc4fe6e48" translate="yes" xml:space="preserve">
          <source>Use the latest webpack version. We are always making performance improvements. The latest stable version of webpack is:</source>
          <target state="translated">최신 웹팩 버전을 사용하십시오. 우리는 항상 성능을 향상시키고 있습니다. 안정적인 최신 웹팩 버전은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3794e2f2ca3183e0a2f1f8a8ff68c88df08489dd" translate="yes" xml:space="preserve">
          <source>Use these features when appropriate.</source>
          <target state="translated">적절한 경우이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="44fb7f40b16f86e3c9d1a67800ba6d4f22b2a36d" translate="yes" xml:space="preserve">
          <source>Use this loader only for expensive operations!</source>
          <target state="translated">이 로더는 값 비싼 작업에만 사용하십시오!</target>
        </trans-unit>
        <trans-unit id="23a2d77df48f7534d7a83a9705ec7e9b4fd634be" translate="yes" xml:space="preserve">
          <source>Use this option to generate a JSON file containing webpack &quot;records&quot; -- pieces of data used to store module identifiers across multiple builds. You can use this file to track how modules change between builds. To generate one, simply specify a location:</source>
          <target state="translated">이 옵션을 사용하면 여러 빌드에서 모듈 식별자를 저장하는 데 사용되는 데이터 조각 인 웹팩 &quot;레코드&quot;를 포함하는 JSON 파일을 생성 할 수 있습니다. 이 파일을 사용하여 빌드 간 모듈 변경 방법을 추적 할 수 있습니다. 하나를 생성하려면 간단히 위치를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9610bd59c5133421c8f3e6dfbbb7d9634045caa3" translate="yes" xml:space="preserve">
          <source>Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</source>
          <target state="translated">웹팩의 시계 모드를 사용하십시오. 다른 도구를 사용하여 파일을보고 웹팩을 호출하지 마십시오. 내장 된 감시 모드는 타임 스탬프를 추적하고 캐시 무효화를 위해이 정보를 컴파일에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c32f58919dcf2dfd0b16dcfb070b3f7cbbf098d3" translate="yes" xml:space="preserve">
          <source>Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built-in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</source>
          <target state="translated">Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built-in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</target>
        </trans-unit>
        <trans-unit id="0b84f3bf4e0289f82295c4c1d5a1ffdb875f6fdb" translate="yes" xml:space="preserve">
          <source>Use with Babel (or other JS transpilers)</source>
          <target state="translated">Babel (또는 다른 JS 트랜스 필러)과 함께 사용</target>
        </trans-unit>
        <trans-unit id="35ca8091dbc2b566405680dbf80285e8b18d7b4b" translate="yes" xml:space="preserve">
          <source>UseEntry</source>
          <target state="translated">UseEntry</target>
        </trans-unit>
        <trans-unit id="e38960e325cc0f68417b6b1b71d40ee9740591d0" translate="yes" xml:space="preserve">
          <source>Used for migrating from webpack 1 to 2</source>
          <target state="translated">웹팩 1에서 2로 마이그레이션하는 데 사용</target>
        </trans-unit>
        <trans-unit id="7f595079968f3d9213466d2c5e54c9237bc84032" translate="yes" xml:space="preserve">
          <source>Useful when a source file does not contain exports or something does not export.</source>
          <target state="translated">Useful when a source file does not contain exports or something does not export.</target>
        </trans-unit>
        <trans-unit id="5625e334052514a17c6f9f3ca6f42e9e6e306a18" translate="yes" xml:space="preserve">
          <source>Users have a choice between two CLI packages:</source>
          <target state="translated">사용자는 두 개의 CLI 패키지 중에서 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c479f2d1ca6fe32e92cc9e767302871801f04b1" translate="yes" xml:space="preserve">
          <source>Users may also specify a length for the computed hash.</source>
          <target state="translated">사용자는 계산 된 해시의 길이를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e34d429e95d5b4e9d20547a9fa999b4ed8b00884" translate="yes" xml:space="preserve">
          <source>Uses ES modules syntax</source>
          <target state="translated">Uses ES modules syntax</target>
        </trans-unit>
        <trans-unit id="387e02566971155ce3659e487753ddfaa5b359a4" translate="yes" xml:space="preserve">
          <source>Uses Terser to minify the JS in your project</source>
          <target state="translated">Uses Terser to minify the JS in your project</target>
        </trans-unit>
        <trans-unit id="3e3cdd5350c2b6106de1f562e722761ec8a15825" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;mini-css-extract-plugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Using &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f6c166b3ef0053607efc557de01ce674fe87ed69" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://github.com/postcss/sugarss&quot;&gt;&lt;code&gt;SugarSS&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="translated">Using &lt;a href=&quot;https://github.com/postcss/sugarss&quot;&gt; &lt;code&gt;SugarSS&lt;/code&gt; &lt;/a&gt; syntax.</target>
        </trans-unit>
        <trans-unit id="b2c309e3d87f058ff51546089072d4faec76a7b4" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;loaders#thisemiterror&quot;&gt;this.emitError&lt;/a&gt;. Will report the errors without interrupting module's compilation.</source>
          <target state="translated">Using &lt;a href=&quot;loaders#thisemiterror&quot;&gt;this.emitError&lt;/a&gt;. Will report the errors without interrupting module's compilation.</target>
        </trans-unit>
        <trans-unit id="6f19a1425f83492a6dc46912f460f17b0da49482" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;...&lt;/code&gt; syntax allows you to extend &lt;a href=&quot;#attributes&quot;&gt;default supported tags and attributes&lt;/a&gt;.</source>
          <target state="translated">Using &lt;code&gt;...&lt;/code&gt; syntax allows you to extend &lt;a href=&quot;#attributes&quot;&gt;default supported tags and attributes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="11c2660241dfe28d85f8e01f088c35d9527a0f22" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Function&lt;/code&gt; notation:</source>
          <target state="translated">Using &lt;code&gt;Function&lt;/code&gt; notation:</target>
        </trans-unit>
        <trans-unit id="991744bf0a475de8d6b3da6d73264b6855cacd5d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Object&lt;/code&gt; notation:</source>
          <target state="translated">Using &lt;code&gt;Object&lt;/code&gt; notation:</target>
        </trans-unit>
        <trans-unit id="be0faa338209b9e368cd67cf97e4d24ab36aba4d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;callback&lt;/code&gt; (in async mode). Pass an error to the callback will also cause module compilation failure.</source>
          <target state="translated">Using &lt;code&gt;callback&lt;/code&gt; (in async mode). Pass an error to the callback will also cause module compilation failure.</target>
        </trans-unit>
        <trans-unit id="33ae43a361f7f98f7a19d9d0f97e82b984f74fce" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;enhanced-resolve&lt;/code&gt;, webpack can resolve three kinds of file paths:</source>
          <target state="translated">&lt;code&gt;enhanced-resolve&lt;/code&gt; 사용하여 webpack은 세 가지 파일 경로를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="592ad84b68126878fbfdffb1f8716ad6233721a2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval()&lt;/code&gt;</source>
          <target state="translated">사용 &lt;code&gt;eval()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c34744d5c3820008c58709f64e15c880454dd825" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;externals&lt;/code&gt; to avoid bundling &lt;code&gt;lodash&lt;/code&gt;, so the consumer is required to load it.</source>
          <target state="translated">Using &lt;code&gt;externals&lt;/code&gt; to avoid bundling &lt;code&gt;lodash&lt;/code&gt; , so the consumer is required to load it.</target>
        </trans-unit>
        <trans-unit id="f0b29040b482ffe5f51c894270bc7be4230de55f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;false&lt;/code&gt; value increase performance because we avoid parsing &lt;strong&gt;CSS Modules&lt;/strong&gt; features, it will be useful for developers who use vanilla css or use other technologies.</source>
          <target state="translated">Using &lt;code&gt;false&lt;/code&gt; value increase performance because we avoid parsing &lt;strong&gt;CSS Modules&lt;/strong&gt; features, it will be useful for developers who use vanilla css or use other technologies.</target>
        </trans-unit>
        <trans-unit id="1933541d83ea871a9366e228923568909cbe9007" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;local&lt;/code&gt; value requires you to specify &lt;code&gt;:global&lt;/code&gt; classes. Using &lt;code&gt;global&lt;/code&gt; value requires you to specify &lt;code&gt;:local&lt;/code&gt; classes. Using &lt;code&gt;pure&lt;/code&gt; value requires selectors must contain at least one local class or id.</source>
          <target state="translated">Using &lt;code&gt;local&lt;/code&gt; value requires you to specify &lt;code&gt;:global&lt;/code&gt; classes. Using &lt;code&gt;global&lt;/code&gt; value requires you to specify &lt;code&gt;:local&lt;/code&gt; classes. Using &lt;code&gt;pure&lt;/code&gt; value requires selectors must contain at least one local class or id.</target>
        </trans-unit>
        <trans-unit id="62baa148726c0cc221de557fa5a44fdc43b80c8d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt;) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; bytes into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt;) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt;.</source>
          <target state="translated">Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt; ) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; bytes into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt; ) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe814a133302a983806b7c5cad0cad9106094c3b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt;) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt;) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maxSize&lt;/code&gt; 를 사용하면 ( 캐시 그룹당 글로벌 &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; 또는 폴백 캐시 그룹 &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt; .splitChunks.fallbackCacheGroup.maxSize 사용) webpack이 &lt;code&gt;maxSize&lt;/code&gt; 보다 큰 청크 를 작은 부분으로 분할하려고합니다. . 부분 크기 는 최소 &lt;code&gt;minSize&lt;/code&gt; ( &lt;code&gt;maxSize&lt;/code&gt; 옆 )입니다. 알고리즘은 결정 론적이며 모듈을 변경하면 로컬에 영향을 미칩니다. 따라서 장기 캐싱을 사용할 때 사용할 수 있으며 레코드가 필요하지 않습니다. &lt;code&gt;maxSize&lt;/code&gt; 는 힌트 일 뿐이며 모듈이 &lt;code&gt;maxSize&lt;/code&gt; 보다 큰 경우 위반 될 수 있습니다.분할하면 &lt;code&gt;minSize&lt;/code&gt; 를 위반하게 됩니다.</target>
        </trans-unit>
        <trans-unit id="740b61df4875ad440f461c1b5ae6eff138988a5c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;node&lt;/code&gt; preset will not bundle built-in modules and treats them as external and loads them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="translated">Using &lt;code&gt;node&lt;/code&gt; preset will not bundle built-in modules and treats them as external and loads them via &lt;code&gt;require()&lt;/code&gt; when used.</target>
        </trans-unit>
        <trans-unit id="3f7745d5bf45766a5bdfd3a5a65bd99defea5262" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;throw&lt;/code&gt; (or other uncaught exception). Throwing an error while a loader is running will cause current module compilation failure.</source>
          <target state="translated">Using &lt;code&gt;throw&lt;/code&gt; (or other uncaught exception). Throwing an error while a loader is running will cause current module compilation failure.</target>
        </trans-unit>
        <trans-unit id="7eb388b7faf3e23b214a33a0d5906abfaadad16a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;watching.invalidate&lt;/code&gt;, you can manually invalidate the current compiling round, without stopping the watch process:</source>
          <target state="translated">사용 &lt;code&gt;watching.invalidate&lt;/code&gt; 은 수동으로 시계 프로세스를 중지하지 않고, 현재 컴파일 내내 무효화 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="60644ada565ccf86b1df97c9413263c37b65e43a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;webpackPreload&lt;/code&gt; incorrectly can actually hurt performance, so be careful when using it.</source>
          <target state="translated">Using &lt;code&gt;webpackPreload&lt;/code&gt; incorrectly can actually hurt performance, so be careful when using it.</target>
        </trans-unit>
        <trans-unit id="61da05151fc0b4111508fca3f92835f1a473106b" translate="yes" xml:space="preserve">
          <source>Using Brotli</source>
          <target state="translated">Using Brotli</target>
        </trans-unit>
        <trans-unit id="5e4d9b578d4cbb835fbc9838e1bc9660f731175c" translate="yes" xml:space="preserve">
          <source>Using Configuration</source>
          <target state="translated">Using Configuration</target>
        </trans-unit>
        <trans-unit id="4864b84ad761309fe1200c9530d9247e825fecc4" translate="yes" xml:space="preserve">
          <source>Using Loaders</source>
          <target state="translated">로더 사용</target>
        </trans-unit>
        <trans-unit id="5855328d71e4db4f6dd615c5093f235d0d05f9d0" translate="yes" xml:space="preserve">
          <source>Using Records</source>
          <target state="translated">레코드 사용</target>
        </trans-unit>
        <trans-unit id="1dca7cbbab7fbff23530018b99c23edf26c5aec3" translate="yes" xml:space="preserve">
          <source>Using Third Party Libraries</source>
          <target state="translated">타사 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="8824c9d16039f13af26e6689d843673db147de08" translate="yes" xml:space="preserve">
          <source>Using Watch Mode</source>
          <target state="translated">시계 모드 사용</target>
        </trans-unit>
        <trans-unit id="dcf2baa87ac7edb1ea2511e3e5ed43f68568b57c" translate="yes" xml:space="preserve">
          <source>Using Zopfli</source>
          <target state="translated">Using Zopfli</target>
        </trans-unit>
        <trans-unit id="9017fb4a027adbde133dec30bfbabf7edbf77ed6" translate="yes" xml:space="preserve">
          <source>Using a Configuration</source>
          <target state="translated">구성 사용</target>
        </trans-unit>
        <trans-unit id="07f359d92bfecc39a52b2101c2e2de1b8742bd60" translate="yes" xml:space="preserve">
          <source>Using an alternative to &lt;code&gt;file-loader&lt;/code&gt; is enabled via the &lt;code&gt;fallback&lt;/code&gt; option.</source>
          <target state="translated">Using an alternative to &lt;code&gt;file-loader&lt;/code&gt; is enabled via the &lt;code&gt;fallback&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="6178a9f37c34f2b7890f00cce3ba62fe11247e9a" translate="yes" xml:space="preserve">
          <source>Using both &lt;code&gt;CSS Module&lt;/code&gt; functionality as well as SCSS variables directly in JavaScript.</source>
          <target state="translated">Using both &lt;code&gt;CSS Module&lt;/code&gt; functionality as well as SCSS variables directly in JavaScript.</target>
        </trans-unit>
        <trans-unit id="45d4e6efe497b458825a8cf329561b94dbb8de49" translate="yes" xml:space="preserve">
          <source>Using cache directly from eslint</source>
          <target state="translated">Using cache directly from eslint</target>
        </trans-unit>
        <trans-unit id="786d20a41b7020b1c743e573c5784e25c770332d" translate="yes" xml:space="preserve">
          <source>Using class exported by &lt;code&gt;CustomServer.js&lt;/code&gt;, a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</source>
          <target state="translated">Using class exported by &lt;code&gt;CustomServer.js&lt;/code&gt; , a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</target>
        </trans-unit>
        <trans-unit id="516aa555e14c6fd98d2549428ce368ad3f773027" translate="yes" xml:space="preserve">
          <source>Using context replacement module for date-fns</source>
          <target state="translated">Using context replacement module for date-fns</target>
        </trans-unit>
        <trans-unit id="9706633cff4e06c11d980c44e48ba7953e61907d" translate="yes" xml:space="preserve">
          <source>Using custom minifier &lt;a href=&quot;https://github.com/css/csso&quot;&gt;csso&lt;/a&gt;</source>
          <target state="translated">Using custom minifier &lt;a href=&quot;https://github.com/css/csso&quot;&gt;csso&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04882b482b4707c71134fe4969bffc50584b937e" translate="yes" xml:space="preserve">
          <source>Using custom minifier &lt;a href=&quot;https://github.com/jakubpawlowicz/clean-css&quot;&gt;clean-css&lt;/a&gt;</source>
          <target state="translated">Using custom minifier &lt;a href=&quot;https://github.com/jakubpawlowicz/clean-css&quot;&gt;clean-css&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1659fbe0af74bd202b9666719b03cd69f763eda7" translate="yes" xml:space="preserve">
          <source>Using custom, compatible WebSocket client and server implementations:</source>
          <target state="translated">Using custom, compatible WebSocket client and server implementations:</target>
        </trans-unit>
        <trans-unit id="a246793c7f0a39182d1aa8715b1258b8f768f028" translate="yes" xml:space="preserve">
          <source>Using entry name:</source>
          <target state="translated">항목 이름 사용 :</target>
        </trans-unit>
        <trans-unit id="472a33aa02e08edf1df7f17782b30f24d454043d" translate="yes" xml:space="preserve">
          <source>Using filter functions</source>
          <target state="translated">Using filter functions</target>
        </trans-unit>
        <trans-unit id="441250bf314d4863c43a078bd39c6b6a70ad2c6a" translate="yes" xml:space="preserve">
          <source>Using function to return the filename:</source>
          <target state="translated">함수를 사용하여 파일 이름을 반환 :</target>
        </trans-unit>
        <trans-unit id="86144617cdddceef8ae1a3144422cf66197f56c7" translate="yes" xml:space="preserve">
          <source>Using function you can insert the styles into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot&quot;&gt;ShadowRoot&lt;/a&gt;, e.g</source>
          <target state="translated">함수를 사용하면 스타일을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot&quot;&gt;ShadowRoot에&lt;/a&gt; 삽입 할 수 있습니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="3d0d49e6e3cd8df3d8c1dbd9691bc35d8fa6302a" translate="yes" xml:space="preserve">
          <source>Using hashes based on each chunks' content:</source>
          <target state="translated">각 청크 내용을 기반으로 해시 사용 :</target>
        </trans-unit>
        <trans-unit id="519add25ba62dcd513c51cda4eb83bad8ae41195" translate="yes" xml:space="preserve">
          <source>Using hashes generated for extracted content:</source>
          <target state="translated">추출 된 컨텐츠에 대해 생성 된 해시 사용 :</target>
        </trans-unit>
        <trans-unit id="4693e82c52452a804721ac31b4bd67215e75eb6e" translate="yes" xml:space="preserve">
          <source>Using hashes generated from the generated content:</source>
          <target state="translated">Using hashes generated from the generated content:</target>
        </trans-unit>
        <trans-unit id="ec7eaf4ab9e3973e2bee8828b33d1738fc29e3c6" translate="yes" xml:space="preserve">
          <source>Using internal chunk id:</source>
          <target state="translated">내부 청크 ID 사용 :</target>
        </trans-unit>
        <trans-unit id="700c14ddf1b1e6edd056f1272f178fca24f039ef" translate="yes" xml:space="preserve">
          <source>Using it asynchronously may not have the expected effect.</source>
          <target state="translated">비동기 적으로 사용하면 예상되는 효과가 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3200ec535332fa85a3bbf6cae69a6073171e40a3" translate="yes" xml:space="preserve">
          <source>Using it in an async function may not have the expected effect.</source>
          <target state="translated">비동기 함수에서 사용하면 예상 된 효과가 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f42e9968a263682c986dcf34ddb43fad454c41b0" translate="yes" xml:space="preserve">
          <source>Using javascript as entrypoint</source>
          <target state="translated">Using javascript as entrypoint</target>
        </trans-unit>
        <trans-unit id="21f37283471b990c6e063058bb25d6de2808d4c3" translate="yes" xml:space="preserve">
          <source>Using nib with stylus</source>
          <target state="translated">Using nib with stylus</target>
        </trans-unit>
        <trans-unit id="e8cff08e29703580b7ac86809f0f79615642a204" translate="yes" xml:space="preserve">
          <source>Using npm</source>
          <target state="translated">npm 사용</target>
        </trans-unit>
        <trans-unit id="58ceb1cc3d8510d4682fc763f7e2829dbfbad46e" translate="yes" xml:space="preserve">
          <source>Using other Configuration Languages</source>
          <target state="translated">다른 구성 언어 사용</target>
        </trans-unit>
        <trans-unit id="f3c8dad7dd1400a4fb43c3cb7e34a6fd72165a56" translate="yes" xml:space="preserve">
          <source>Using path to &lt;code&gt;CustomClient.js&lt;/code&gt;, a custom WebSocket client implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; server:</source>
          <target state="translated">Using path to &lt;code&gt;CustomClient.js&lt;/code&gt; , a custom WebSocket client implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; server:</target>
        </trans-unit>
        <trans-unit id="c2f58ff12aec9e1a423859725083d77e9e8da7b5" translate="yes" xml:space="preserve">
          <source>Using path to &lt;code&gt;CustomServer.js&lt;/code&gt;, a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</source>
          <target state="translated">Using path to &lt;code&gt;CustomServer.js&lt;/code&gt; , a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</target>
        </trans-unit>
        <trans-unit id="59c2cac5921f99904e0b4511c5a819676e6bd84b" translate="yes" xml:space="preserve">
          <source>Using plugins in your webpack config is straightforward - however, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</source>
          <target state="translated">webpack 설정에서 플러그인을 사용하는 것은 간단합니다. 그러나 더 많은 조사가 필요한 유스 케이스가 많이 있습니다. &lt;a href=&quot;plugins&quot;&gt;이에 대한 자세한 내용은 여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="765412d29ec5d2eee3c85edab48a13e4ed4b7c64" translate="yes" xml:space="preserve">
          <source>Using plugins in your webpack configuration is straightforward. However, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</source>
          <target state="translated">Using plugins in your webpack configuration is straightforward. However, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a8b8fdfd9b45b02f1be508c46368a7a4c4e384c6" translate="yes" xml:space="preserve">
          <source>Using preloaded or inlined CSS</source>
          <target state="translated">미리로드되거나 인라인 된 CSS 사용</target>
        </trans-unit>
        <trans-unit id="18988fc8caaba44179708163dbb1aad1050b3dcd" translate="yes" xml:space="preserve">
          <source>Using regular expressions</source>
          <target state="translated">정규 표현식 사용</target>
        </trans-unit>
        <trans-unit id="a981b01629c77966f89ccc6d2a2de1a77159b1fa" translate="yes" xml:space="preserve">
          <source>Using some kind of indentation makes bundles look prettier, but will cause issues with multi-line strings.</source>
          <target state="translated">Using some kind of indentation makes bundles look prettier, but will cause issues with multi-line strings.</target>
        </trans-unit>
        <trans-unit id="6518a5f2dc3744728446f85190c9fd202a9294a6" translate="yes" xml:space="preserve">
          <source>Using source maps</source>
          <target state="translated">소스 맵 사용</target>
        </trans-unit>
        <trans-unit id="80648489b1305d89e61e8b827ce72a3324581812" translate="yes" xml:space="preserve">
          <source>Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation.</source>
          <target state="translated">Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation.</target>
        </trans-unit>
        <trans-unit id="800f2b20749e8702f136a958be32bb1a50fe2d6b" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;module-methods#magic-comments&quot;&gt;&lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt;&lt;/a&gt; options allows you to add regex patterns that reduce the number of files that webpack will bundle for this import.</source>
          <target state="translated">Using the &lt;a href=&quot;module-methods#magic-comments&quot;&gt; &lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt; &lt;/a&gt; options allows you to add regex patterns that reduce the number of files that webpack will bundle for this import.</target>
        </trans-unit>
        <trans-unit id="467ce8c78e13c791befca2fb2c3b67684c469445" translate="yes" xml:space="preserve">
          <source>Using the unique hash generated for every build:</source>
          <target state="translated">모든 빌드에 대해 생성 된 고유 한 해시 사용</target>
        </trans-unit>
        <trans-unit id="6536132a79bf8af96ab8bfdefdbfab7d325013b8" translate="yes" xml:space="preserve">
          <source>Using these inline directives while declaring your imports allows webpack to output &amp;ldquo;Resource Hint&amp;rdquo; which tells the browser that for:</source>
          <target state="translated">가져 오기를 선언하면서 이러한 인라인 지시문을 사용하면 웹팩에서 &quot;Resource Hint&quot;를 출력하여 브라우저에 다음을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="d07483f679e606d7fb7e14d9533f6ea9b743b89b" translate="yes" xml:space="preserve">
          <source>Using this callback we can dynamically redirect requests to a new location:</source>
          <target state="translated">이 콜백을 사용하여 요청을 새로운 위치로 동적으로 리디렉션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c37734e5b4af8b8564bb62e88c0cf685f75a0550" translate="yes" xml:space="preserve">
          <source>Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions.</source>
          <target state="translated">Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions.</target>
        </trans-unit>
        <trans-unit id="1583a8e9f680bc09e6e3a1d5f218c361dd96f3b1" translate="yes" xml:space="preserve">
          <source>Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions. For modules that are imported with their extension, e.g. &lt;code&gt;import SomeFile from &quot;./somefile.ext&quot;&lt;/code&gt;, to be properly resolved, a string containing &quot;*&quot; must be included in the array.</source>
          <target state="translated">이것을 사용 &lt;strong&gt;하면 기본 배열&lt;/strong&gt; 이 &lt;strong&gt;재정의됩니다&lt;/strong&gt; . 즉, 웹팩은 더 이상 기본 확장을 사용하여 모듈을 분석하려고 시도하지 않습니다. 확장자가있는 모듈 (예 : &lt;code&gt;import SomeFile from &quot;./somefile.ext&quot;&lt;/code&gt; )을 올바르게 해석하려면 &quot;*&quot;가 포함 된 문자열이 배열에 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5d3bed423980b935928474859e7c216545e36176" translate="yes" xml:space="preserve">
          <source>Using webpack's resolver, you can import any file type. You just need a loader that exports valid Less code. Often, you will also want to set the &lt;code&gt;issuer&lt;/code&gt; condition to ensure that this rule is only applied on imports originating from Less files:</source>
          <target state="translated">webpack의 리졸버를 사용하여 모든 파일 유형을 가져올 수 있습니다. 유효한 Less 코드를 내보내는 로더 만 있으면됩니다. 종종 이 규칙이 적은 파일에서 발생하는 가져 오기에만 적용되도록 &lt;code&gt;issuer&lt;/code&gt; 조건 을 설정하고자 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7564130d0af85566bd3d5159841f2a0c0d22b57" translate="yes" xml:space="preserve">
          <source>Using webpack-dev-middleware</source>
          <target state="translated">webpack-dev-middleware 사용</target>
        </trans-unit>
        <trans-unit id="929b482a17818f7e179581abb73aad4f5bba1a17" translate="yes" xml:space="preserve">
          <source>Using webpack-dev-server</source>
          <target state="translated">webpack-dev-server 사용</target>
        </trans-unit>
        <trans-unit id="56404f43d6b2ed55415737b5df747c000d609a1b" translate="yes" xml:space="preserve">
          <source>Using webpackPreload incorrectly can actually hurt performance, so be careful when using it.</source>
          <target state="translated">webpackPreload를 잘못 사용하면 실제로 성능이 저하 될 수 있으므로 사용시주의하십시오.</target>
        </trans-unit>
        <trans-unit id="6a1672b1ef280cd31470e59f7fa4d154c08f1d09" translate="yes" xml:space="preserve">
          <source>Using yarn</source>
          <target state="translated">Using yarn</target>
        </trans-unit>
        <trans-unit id="1727983f3b0fbe806fa9f0e578aa1c2905c45395" translate="yes" xml:space="preserve">
          <source>Usually your projects will need to extend this functionality, for this you can create a &lt;code&gt;webpack.config.js&lt;/code&gt; file in the root folder and webpack will automatically use it.</source>
          <target state="translated">일반적으로 프로젝트는이 기능을 확장해야합니다.이를 위해 루트 폴더에 &lt;code&gt;webpack.config.js&lt;/code&gt; 파일을 만들면 webpack 에서 자동으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="130ffa8a755784a8fff6c2f1afcbd6b0f4165b82" translate="yes" xml:space="preserve">
          <source>Usually, it's recommended to extract the style sheets into a dedicated file in production using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;. This way your styles are not dependent on JavaScript.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin을&lt;/a&gt; 사용하여 프로덕션 환경에서 스타일 시트를 전용 파일로 추출하는 것이 좋습니다 . 이렇게하면 스타일이 JavaScript에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="230c0f6708f899e4998611800c671e1627e66bfb" translate="yes" xml:space="preserve">
          <source>Usually, it's recommended to extract the style sheets into a dedicated file in production using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;. This way your styles are not dependent on JavaScript:</source>
          <target state="translated">일반적으로 &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin을&lt;/a&gt; 사용하여 프로덕션 환경에서 스타일 시트를 전용 파일로 추출하는 것이 좋습니다 . 이렇게하면 스타일이 JavaScript에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b0e3aa76a2d97a44a5da8cd5260f85eb167e2d5" translate="yes" xml:space="preserve">
          <source>Variable: as a global variable made available by a &lt;code&gt;script&lt;/code&gt; tag (&lt;code&gt;libraryTarget:'var'&lt;/code&gt;).</source>
          <target state="translated">변수 : &lt;code&gt;script&lt;/code&gt; 태그 ( &lt;code&gt;libraryTarget:'var'&lt;/code&gt; )에 의해 사용 가능한 전역 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="c1f31ae1f6a8b752e2c38c54066881ab58d1532d" translate="yes" xml:space="preserve">
          <source>Variables coming from &lt;code&gt;process.env&lt;/code&gt; are always strings.</source>
          <target state="translated">&lt;code&gt;process.env&lt;/code&gt; 에서 오는 변수 는 항상 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="eab065a9a4d4690f9b81041691e90f286b2d778b" translate="yes" xml:space="preserve">
          <source>Verify that webpack is not being notified of changes by running webpack with the --progress flag. If progress shows on save but no files are outputted, it is likely a configuration issue, not a file watching issue.</source>
          <target state="translated">--progress 플래그와 함께 webpack을 실행하여 webpack에 변경 사항을 알리지 않는지 확인하십시오. 저장시 진행률이 표시되지만 파일이 출력되지 않으면 파일 감시 문제가 아닌 구성 문제 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f649eb36cd354b29c703f5db06d75d8bb5d8758" translate="yes" xml:space="preserve">
          <source>Verify that you have enough available watchers in your system. If this value is too low, the file watcher in Webpack won't recognize the changes:</source>
          <target state="translated">시스템에 사용 가능한 감시자가 충분한 지 확인하십시오. 이 값이 너무 낮 으면 Webpack의 파일 감시자가 변경 사항을 인식하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="a9ad94597042a491f4c55e15e6796d1220ef197e" translate="yes" xml:space="preserve">
          <source>Version 2 of webpack supports ES6 module syntax natively, meaning you can use &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; without a tool like babel to handle this for you. Keep in mind that you will still probably need babel for other ES6+ features. The following methods are supported by webpack:</source>
          <target state="translated">webpack 버전 2는 기본적으로 ES6 모듈 구문을 지원하므로 babel과 같은 도구없이 &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;export&lt;/code&gt; 를 사용하여이를 처리 할 수 ​​있습니다. 다른 ES6 + 기능을 사용하려면 여전히 babel이 필요할 것입니다. 웹팩에서 지원하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b9e3937b398d8372e385fec3cba5f2c5a3933b47" translate="yes" xml:space="preserve">
          <source>Version of the cache data. Different versions won't allow to reuse the cache and override existing content. Update the version when configuration changed in a way which doesn't allow to reuse cache. This will invalidate the cache.</source>
          <target state="translated">Version of the cache data. Different versions won't allow to reuse the cache and override existing content. Update the version when configuration changed in a way which doesn't allow to reuse cache. This will invalidate the cache.</target>
        </trans-unit>
        <trans-unit id="b716503145807543ea3a2f18e364920799166f3a" translate="yes" xml:space="preserve">
          <source>Very detailed debugging info</source>
          <target state="translated">매우 상세한 디버깅 정보</target>
        </trans-unit>
        <trans-unit id="24756aad73cd051a11a3ab3c84b08e6eccd66d67" translate="yes" xml:space="preserve">
          <source>Via the Node.js API</source>
          <target state="translated">Node.js API를 통해</target>
        </trans-unit>
        <trans-unit id="a78ad277616170813560c5fab7aabae8ac9cfb23" translate="yes" xml:space="preserve">
          <source>Vim</source>
          <target state="translated">Vim</target>
        </trans-unit>
        <trans-unit id="5761ff1a7f5b6160ce8e6d3a6a69b9769b16ee3a" translate="yes" xml:space="preserve">
          <source>Vue: &lt;a href=&quot;https://alexjoverm.github.io/2017/07/16/Lazy-load-in-Vue-using-Webpack-s-code-splitting/&quot;&gt;Lazy Load in Vue using Webpack's code splitting&lt;/a&gt;</source>
          <target state="translated">Vue : &lt;a href=&quot;https://alexjoverm.github.io/2017/07/16/Lazy-load-in-Vue-using-Webpack-s-code-splitting/&quot;&gt;Webpack의 코드 분할을 사용하여 Vue의 지연로드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5afa9363b9313213d774ca18cfaadf46a10d5e78" translate="yes" xml:space="preserve">
          <source>Vue: &lt;a href=&quot;https://vuedose.tips/tips/dynamic-imports-in-vue-js-for-better-performance/&quot;&gt;Dynamic Imports in Vue.js for better performance&lt;/a&gt;</source>
          <target state="translated">Vue: &lt;a href=&quot;https://vuedose.tips/tips/dynamic-imports-in-vue-js-for-better-performance/&quot;&gt;Dynamic Imports in Vue.js for better performance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dbdcc7862fb1c14cc7943c7d3048725c557d8d4" translate="yes" xml:space="preserve">
          <source>WASM &lt;code&gt;import&lt;/code&gt; section</source>
          <target state="translated">WASM &lt;code&gt;import&lt;/code&gt; section</target>
        </trans-unit>
        <trans-unit id="db3e8c2c2fbe1c9fcd99b8675926cd59a846aa38" translate="yes" xml:space="preserve">
          <source>Want to rapidly generate webpack configuration file for your project requirements with few clicks away.</source>
          <target state="translated">몇 번의 클릭만으로 프로젝트 요구 사항에 맞는 웹팩 구성 파일을 신속하게 생성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="3f5d8257134cdb4ea1e1eef0dd093276a302a5ad" translate="yes" xml:space="preserve">
          <source>Warn for dynamic dependencies: &lt;code&gt;wrappedContextCritical: true&lt;/code&gt;.</source>
          <target state="translated">동적 종속성을 경고 : &lt;code&gt;wrappedContextCritical: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="201d07914ddb690a7ce7fc96defe98625d72e806" translate="yes" xml:space="preserve">
          <source>Warns to console about attributes from inside the &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt; 내부의 속성에 대해 콘솔에 경고합니다 .</target>
        </trans-unit>
        <trans-unit id="1e2aae0cdb6f3a79d62e669c768545f8953beef6" translate="yes" xml:space="preserve">
          <source>Watch Options</source>
          <target state="translated">시계 옵션</target>
        </trans-unit>
        <trans-unit id="106bff2cd8202eecc0e264527e1aa359ef59b79d" translate="yes" xml:space="preserve">
          <source>Watch and WatchOptions</source>
          <target state="translated">시계 및 시계 옵션</target>
        </trans-unit>
        <trans-unit id="2bc4d4d7a4c4d5f9a1769fc308fa26c2a0867f00" translate="yes" xml:space="preserve">
          <source>Watch compilation has been invalidated.</source>
          <target state="translated">시계 편집이 무효화되었습니다.</target>
        </trans-unit>
        <trans-unit id="427cebc1061b0e5b5851880b9f0dfb68e6f2a55d" translate="yes" xml:space="preserve">
          <source>Watch for file changes</source>
          <target state="translated">Watch for file changes</target>
        </trans-unit>
        <trans-unit id="b437f78f9d520f5fcbaf0f0382cb781be53b36aa" translate="yes" xml:space="preserve">
          <source>Watch mode has stopped.</source>
          <target state="translated">시계 모드가 중지되었습니다.</target>
        </trans-unit>
        <trans-unit id="1cd42ab7e86a7c69fdc818850cdaebf6ab4df744" translate="yes" xml:space="preserve">
          <source>Watch the filesystem for changes</source>
          <target state="translated">파일 시스템의 변경 사항 확인</target>
        </trans-unit>
        <trans-unit id="95597606870fb7c27f696ca54f1d8fcb4ed539c0" translate="yes" xml:space="preserve">
          <source>WatchIgnorePlugin</source>
          <target state="translated">WatchIgnorePlugin</target>
        </trans-unit>
        <trans-unit id="96d9e027ee25023055aac45ad3d6c069c69e6c19" translate="yes" xml:space="preserve">
          <source>Watching</source>
          <target state="translated">Watching</target>
        </trans-unit>
        <trans-unit id="6d03d61c1bf166452be4ae04b24c13ac9975c1c5" translate="yes" xml:space="preserve">
          <source>We Don't Work Offline Now</source>
          <target state="translated">우리는 지금 오프라인으로 일하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f430b691523ff1d9375dbaa59f361157ef2f8356" translate="yes" xml:space="preserve">
          <source>We also need to adjust our &lt;code&gt;package.json&lt;/code&gt; file in order to make sure we mark our package as &lt;code&gt;private&lt;/code&gt;, as well as removing the &lt;code&gt;main&lt;/code&gt; entry. This is to prevent an accidental publish of your code.</source>
          <target state="translated">패키지를 &lt;code&gt;private&lt;/code&gt; 으로 표시하고 &lt;code&gt;main&lt;/code&gt; 항목 을 제거하려면 &lt;code&gt;package.json&lt;/code&gt; 파일 도 조정해야합니다 . 실수로 코드를 게시하는 것을 방지하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="b467e0eb44fa319c7ebd09d36ac9fb75025a6e72" translate="yes" xml:space="preserve">
          <source>We assume at some point packages are no longer being maintained, but they are continued to be used.</source>
          <target state="translated">We assume at some point packages are no longer being maintained, but they are continued to be used.</target>
        </trans-unit>
        <trans-unit id="e659eafed1e06cd2eccf15fc3f46a5e90a86c159" translate="yes" xml:space="preserve">
          <source>We assume the following fallback make sense in general:</source>
          <target state="translated">We assume the following fallback make sense in general:</target>
        </trans-unit>
        <trans-unit id="23f13113c31128431fc9d0a255c1789dcd5c5794" translate="yes" xml:space="preserve">
          <source>We automatically inject the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package (setup &lt;code&gt;sassOptions.fiber&lt;/code&gt;) if is possible (i.e. you need install the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package).</source>
          <target state="translated">We automatically inject the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt; &lt;code&gt;fibers&lt;/code&gt; &lt;/a&gt; package (setup &lt;code&gt;sassOptions.fiber&lt;/code&gt; ) if is possible (i.e. you need install the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt; &lt;code&gt;fibers&lt;/code&gt; &lt;/a&gt; package).</target>
        </trans-unit>
        <trans-unit id="a9f11e7092e64e702c19ee5bf892367a156e5b70" translate="yes" xml:space="preserve">
          <source>We can also pass an array of file paths to the &lt;code&gt;entry&lt;/code&gt; property which creates what is known as a &lt;strong&gt;&quot;multi-main entry&quot;&lt;/strong&gt;. This is useful when you would like to inject multiple dependent files together and graph their dependencies into one &quot;chunk&quot;.</source>
          <target state="translated">We can also pass an array of file paths to the &lt;code&gt;entry&lt;/code&gt; property which creates what is known as a &lt;strong&gt;&quot;multi-main entry&quot;&lt;/strong&gt;. This is useful when you would like to inject multiple dependent files together and graph their dependencies into one &quot;chunk&quot;.</target>
        </trans-unit>
        <trans-unit id="36b83254e75e5a19d5c4cfaa006d12f741f4d823" translate="yes" xml:space="preserve">
          <source>We can also use the &lt;code&gt;ProvidePlugin&lt;/code&gt; to expose a single export of a module by configuring it with an &quot;array path&quot; (e.g. &lt;code&gt;[module, child, ...children?]&lt;/code&gt;). So let's imagine we only wanted to provide the &lt;code&gt;join&lt;/code&gt; method from &lt;code&gt;lodash&lt;/code&gt; wherever it's invoked:</source>
          <target state="translated">또한 &lt;code&gt;ProvidePlugin&lt;/code&gt; 을 사용하여 &quot;배열 경로&quot;(예 : &lt;code&gt;[module, child, ...children?]&lt;/code&gt; ) 로 구성하여 모듈의 단일 내보내기를 노출 할 수 있습니다 . 따라서 &lt;code&gt;lodash&lt;/code&gt; 가 호출 된 곳마다 &lt;code&gt;join&lt;/code&gt; 메소드 를 제공하려고한다고 상상해보십시오 .</target>
        </trans-unit>
        <trans-unit id="db530b33066f02b7472ab75814989f01e865334c" translate="yes" xml:space="preserve">
          <source>We can now see that our &lt;code&gt;main&lt;/code&gt; bundle does not contain &lt;code&gt;vendor&lt;/code&gt; code from &lt;code&gt;node_modules&lt;/code&gt; directory and is down in size to &lt;code&gt;240 bytes&lt;/code&gt;!</source>
          <target state="translated">우리는 지금 우리의 것을 볼 수 있습니다 &lt;code&gt;main&lt;/code&gt; 번들이 포함되지 않은 &lt;code&gt;vendor&lt;/code&gt; 에서 코드를 &lt;code&gt;node_modules&lt;/code&gt; 의 디렉토리에 크기 다운 &lt;code&gt;240 bytes&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="fe8c7c24676ac8c961e015d8356f493d6e9b7176" translate="yes" xml:space="preserve">
          <source>We can see that both builds yielded &lt;code&gt;55e79e5927a639d21a1b&lt;/code&gt; in the &lt;code&gt;vendor&lt;/code&gt; bundle's filename.</source>
          <target state="translated">&lt;code&gt;vendor&lt;/code&gt; 번들의 파일 이름 에 두 빌드 모두 &lt;code&gt;55e79e5927a639d21a1b&lt;/code&gt; 가 생성 된 것을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="751dd31f009f8d6497b7e09f7c2379b83804fcb7" translate="yes" xml:space="preserve">
          <source>We can see that the error also contains a reference to the file (&lt;code&gt;print.js&lt;/code&gt;) and line number (2) where the error occurred. This is great because now we know exactly where to look in order to fix the issue.</source>
          <target state="translated">오류에 오류가 발생한 파일 ( &lt;code&gt;print.js&lt;/code&gt; )과 줄 번호 (2)에 대한 참조도 포함되어 있음을 알 수 있습니다 . 이제이 문제를 해결하기 위해 어디를 찾아야하는지 정확히 알기 때문에 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ca2f28e217702f1ad5e4a98510fd7c1dab1700ed" translate="yes" xml:space="preserve">
          <source>We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;app.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</source>
          <target state="translated">webpack은 &lt;code&gt;print.bundle.js&lt;/code&gt; 및 &lt;code&gt;app.bundle.js&lt;/code&gt; 파일을 생성 하며 &lt;code&gt;index.html&lt;/code&gt; 파일 에도 지정되어 있음을 알 수 있습니다 . 브라우저에서 &lt;code&gt;index.html&lt;/code&gt; 을 열면 버튼을 클릭하면 어떻게되는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13ac810ac2827e8a4338aacc2a70cb3e9f51aa19" translate="yes" xml:space="preserve">
          <source>We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;index.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</source>
          <target state="translated">We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;index.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</target>
        </trans-unit>
        <trans-unit id="1a91536621f215bce27491619c8b48f6ef07ef93" translate="yes" xml:space="preserve">
          <source>We can start with this basic webpack configuration:</source>
          <target state="translated">이 기본 웹팩 구성으로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7939d70e5fa1891e68b4dea435faa4c40a99fa4" translate="yes" xml:space="preserve">
          <source>We can take advantage of this built-in support for Brotli in Node 10.16.0 and later by just passing in the appropriate &lt;code&gt;algorithm&lt;/code&gt; to the CompressionPlugin:</source>
          <target state="translated">We can take advantage of this built-in support for Brotli in Node 10.16.0 and later by just passing in the appropriate &lt;code&gt;algorithm&lt;/code&gt; to the CompressionPlugin:</target>
        </trans-unit>
        <trans-unit id="657bde688727955cba856cb54db5a72d4d37167c" translate="yes" xml:space="preserve">
          <source>We can use the &lt;code&gt;output.filename&lt;/code&gt;&lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; setting to define the names of our output files. webpack provides a method of templating the filenames using bracketed strings called &lt;strong&gt;substitutions&lt;/strong&gt;. The &lt;code&gt;[contenthash]&lt;/code&gt; substitution will add a unique hash based on the content of an asset. When the asset's content changes, &lt;code&gt;[contenthash]&lt;/code&gt; will change as well.</source>
          <target state="translated">We can use the &lt;code&gt;output.filename&lt;/code&gt; &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; setting to define the names of our output files. webpack provides a method of templating the filenames using bracketed strings called &lt;strong&gt;substitutions&lt;/strong&gt;. The &lt;code&gt;[contenthash]&lt;/code&gt; substitution will add a unique hash based on the content of an asset. When the asset's content changes, &lt;code&gt;[contenthash]&lt;/code&gt; will change as well.</target>
        </trans-unit>
        <trans-unit id="981fc9b2fc1796f07ef53b6d65996fa373499c5f" translate="yes" xml:space="preserve">
          <source>We distinguish between local and remote modules. Local modules are normal modules which are part of the current build. Remote modules are modules that are not part of the current build and loaded from a so-called container at the runtime.</source>
          <target state="translated">We distinguish between local and remote modules. Local modules are normal modules which are part of the current build. Remote modules are modules that are not part of the current build and loaded from a so-called container at the runtime.</target>
        </trans-unit>
        <trans-unit id="177ca5503ba9b50d48c9680cb6075d126fe313df" translate="yes" xml:space="preserve">
          <source>We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in &lt;em&gt;development&lt;/em&gt;:</source>
          <target state="translated">벤치 마크 테스트를 실행하고 디버깅하는 데 유용하므로 프로덕션에서 소스 맵을 활성화하는 것이 좋습니다. 즉, 프로덕션 용도로 권장되는 빌드 속도가 상당히 빠른 것을 선택해야합니다 ( &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt; 참조 ). 이 가이드에서는 &lt;em&gt;개발에&lt;/em&gt; 사용한 &lt;code&gt;inline-source-map&lt;/code&gt; 과 달리 &lt;em&gt;프로덕션&lt;/em&gt; 에서 &lt;code&gt;source-map&lt;/code&gt; 옵션을 사용합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d106b8f94e9705433e844dfdd49f6de112e6d76" translate="yes" xml:space="preserve">
          <source>We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in the &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in the &lt;em&gt;development&lt;/em&gt;:</source>
          <target state="translated">We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in the &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in the &lt;em&gt;development&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="4ccc239d831b8ab166a08dcb2f1c35699644be4a" translate="yes" xml:space="preserve">
          <source>We expect a certain pattern when validate devtool name, pay attention and dont mix up the sequence of devtool string. The pattern is: &lt;code&gt;[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map&lt;/code&gt;.</source>
          <target state="translated">We expect a certain pattern when validate devtool name, pay attention and dont mix up the sequence of devtool string. The pattern is: &lt;code&gt;[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d54e01dd03622ce6cba87877008ad2897307c563" translate="yes" xml:space="preserve">
          <source>We had been getting reports that &lt;code&gt;TS_NODE_PROJECT&lt;/code&gt; might not work with &lt;code&gt;&quot;TS_NODE_PROJECT&quot; unrecognized command&lt;/code&gt; error. Therefore running it with &lt;code&gt;cross-env&lt;/code&gt; seems to fix the issue, for more info &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/2733&quot;&gt;see this issue&lt;/a&gt;.</source>
          <target state="translated">We had been getting reports that &lt;code&gt;TS_NODE_PROJECT&lt;/code&gt; might not work with &lt;code&gt;&quot;TS_NODE_PROJECT&quot; unrecognized command&lt;/code&gt; error. Therefore running it with &lt;code&gt;cross-env&lt;/code&gt; seems to fix the issue, for more info &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/2733&quot;&gt;see this issue&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7aa2b226b3d4a6d958d1587b687dc8f773d58f1d" translate="yes" xml:space="preserve">
          <source>We made the Vagrant box accessible from a static IP, and then made &lt;code&gt;webpack-dev-server&lt;/code&gt; publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</source>
          <target state="translated">We made the Vagrant box accessible from a static IP, and then made &lt;code&gt;webpack-dev-server&lt;/code&gt; publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</target>
        </trans-unit>
        <trans-unit id="282749558ba5da53eeeb6f04c218363bf29d42ee" translate="yes" xml:space="preserve">
          <source>We made the Vagrant box accessible from a static IP, and then made webpack-dev-server publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</source>
          <target state="translated">우리는 고정 IP에서 Vagrant 상자에 액세스 할 수 있도록 한 다음 브라우저에서 접근 할 수 있도록 webpack-dev-server를 공개적으로 액세스 할 수있게했습니다. 그런 다음 VirtualBox가 파일 시스템 이벤트를 보내지 않아 서버가 파일 변경 사항을 다시로드하지 못하는 일반적인 문제를 해결했습니다.</target>
        </trans-unit>
        <trans-unit id="c1b70298e0fffa726b0a5545ddec5a20ae1b479a" translate="yes" xml:space="preserve">
          <source>We no longer support any &lt;code&gt;react&lt;/code&gt; specific features. Please see the wonderful &lt;a href=&quot;https://mdxjs.com/&quot;&gt;MDX&lt;/a&gt; project if you're interested in mixing JSX with Markdown.</source>
          <target state="translated">We no longer support any &lt;code&gt;react&lt;/code&gt; specific features. Please see the wonderful &lt;a href=&quot;https://mdxjs.com/&quot;&gt;MDX&lt;/a&gt; project if you're interested in mixing JSX with Markdown.</target>
        </trans-unit>
        <trans-unit id="2d422e0a1ddfb7d2994c16935e1081df8a6a2917" translate="yes" xml:space="preserve">
          <source>We prefer static detection of production/development mode via the &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;development&lt;/code&gt; condition.</source>
          <target state="translated">We prefer static detection of production/development mode via the &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;development&lt;/code&gt; condition.</target>
        </trans-unit>
        <trans-unit id="acb6a26a13705b56eaa896556f1c8c62488a1eba" translate="yes" xml:space="preserve">
          <source>We recommend do not specify &lt;code&gt;from&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; options, because this can lead to wrong path in source maps. If you need source maps please use the &lt;a href=&quot;#sourcemap&quot;&gt;&lt;code&gt;sourcemap&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">We recommend do not specify &lt;code&gt;from&lt;/code&gt; , &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; options, because this can lead to wrong path in source maps. If you need source maps please use the &lt;a href=&quot;#sourcemap&quot;&gt; &lt;code&gt;sourcemap&lt;/code&gt; &lt;/a&gt; option.</target>
        </trans-unit>
        <trans-unit id="62bfe828a31deb892992ffc5da3d8f564a5fdc92" translate="yes" xml:space="preserve">
          <source>We recommend use prefix &lt;code&gt;v-&lt;/code&gt; for values, &lt;code&gt;s-&lt;/code&gt; for selectors and &lt;code&gt;m-&lt;/code&gt; for media at-rules.</source>
          <target state="translated">We recommend use prefix &lt;code&gt;v-&lt;/code&gt; for values, &lt;code&gt;s-&lt;/code&gt; for selectors and &lt;code&gt;m-&lt;/code&gt; for media at-rules.</target>
        </trans-unit>
        <trans-unit id="b0fb8beee0ab69bd80149b7439291404838e0099" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;code&gt;percentBy: 'entries'&lt;/code&gt; setting for projects with &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;multiple configured entry points&lt;/a&gt;. Percentage calculation will become more accurate because the amount of entry points is known in advance.</source>
          <target state="translated">We recommend using &lt;code&gt;percentBy: 'entries'&lt;/code&gt; setting for projects with &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;multiple configured entry points&lt;/a&gt;. Percentage calculation will become more accurate because the amount of entry points is known in advance.</target>
        </trans-unit>
        <trans-unit id="3bdb9a9e4156622feff4a7d00b8dba672256e8c9" translate="yes" xml:space="preserve">
          <source>We recommend using DllPlugin only with &lt;code&gt;entryOnly: true&lt;/code&gt;, otherwise tree shaking in the DLL won't work as all the exports might be used.</source>
          <target state="translated">We recommend using DllPlugin only with &lt;code&gt;entryOnly: true&lt;/code&gt; , otherwise tree shaking in the DLL won't work as all the exports might be used.</target>
        </trans-unit>
        <trans-unit id="06ec5a34b709daa03d071a04f64967ef28de8f14" translate="yes" xml:space="preserve">
          <source>We strongly recommend using an asynchronous boundary. It will split out the initialization code of a larger chunk to avoid any additional round trips and improve performance in general.</source>
          <target state="translated">We strongly recommend using an asynchronous boundary. It will split out the initialization code of a larger chunk to avoid any additional round trips and improve performance in general.</target>
        </trans-unit>
        <trans-unit id="b98ff645900335c9d3e150d717301208cee1a585" translate="yes" xml:space="preserve">
          <source>We support yarn PnP version 3 &lt;a href=&quot;https://next.yarnpkg.com/features/pnp&quot;&gt;&lt;code&gt;yarn 2 berry&lt;/code&gt;&lt;/a&gt; for persistent caching.</source>
          <target state="translated">We support yarn PnP version 3 &lt;a href=&quot;https://next.yarnpkg.com/features/pnp&quot;&gt; &lt;code&gt;yarn 2 berry&lt;/code&gt; &lt;/a&gt; for persistent caching.</target>
        </trans-unit>
        <trans-unit id="e0be727f5fc53615fcc78dcf536f6d74c3da629c" translate="yes" xml:space="preserve">
          <source>We use &lt;code&gt;ts-loader&lt;/code&gt; in this guide as it makes enabling additional webpack features, such as importing other web assets, a bit easier.</source>
          <target state="translated">이 안내서 에서는 &lt;code&gt;ts-loader&lt;/code&gt; 를 사용 하여 다른 웹 자산 가져 오기와 같은 추가 웹팩 기능을 좀 더 쉽게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11c4352cb28f270b585c580614a1eb8f880ba669" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;module&lt;/code&gt; condition as optimization again.</source>
          <target state="translated">We use the &lt;code&gt;module&lt;/code&gt; condition as optimization again.</target>
        </trans-unit>
        <trans-unit id="f2451e4fe5b333bbb87a5328bbd6a54561cf3d37" translate="yes" xml:space="preserve">
          <source>We will use &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;MiniCssExtractPlugin&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;production&lt;/code&gt; mode for css as a best practice.</source>
          <target state="translated">We will use &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;MiniCssExtractPlugin&lt;/code&gt; &lt;/a&gt; in &lt;code&gt;production&lt;/code&gt; mode for css as a best practice.</target>
        </trans-unit>
        <trans-unit id="835362acb732e8765a43852621862db6316a6aa4" translate="yes" xml:space="preserve">
          <source>We won't go through a full example of how to use this plugin within your projects, but you can read up on &lt;a href=&quot;../concepts/manifest&quot;&gt;the concept page&lt;/a&gt; and the &lt;a href=&quot;caching&quot;&gt;caching guide&lt;/a&gt; to find out how this ties into long term caching.</source>
          <target state="translated">프로젝트 내에서이 플러그인을 사용하는 방법에 대한 전체 예는 다루지 않지만 &lt;a href=&quot;../concepts/manifest&quot;&gt;개념 페이지&lt;/a&gt; 와 &lt;a href=&quot;caching&quot;&gt;캐싱 안내서&lt;/a&gt; 를 읽고 이것이 장기 캐싱에 어떻게 연결되는지 알아볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29b47e47027f09109359877353a39b7379316d3c" translate="yes" xml:space="preserve">
          <source>We'll also update our project to remove the now unused files:</source>
          <target state="translated">We'll also update our project to remove the now unused files:</target>
        </trans-unit>
        <trans-unit id="3a824bbf65f1269cef05402d818ccc1920e22bd0" translate="yes" xml:space="preserve">
          <source>WebAssembly modules</source>
          <target state="translated">WebAssembly modules</target>
        </trans-unit>
        <trans-unit id="1ecd172656b0bb7ce4a53fbe55278abe78cbe5dc" translate="yes" xml:space="preserve">
          <source>WebWorkerTemplatePlugin</source>
          <target state="translated">WebWorkerTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="642803d03826095e048310e6f6fdb2336f081224" translate="yes" xml:space="preserve">
          <source>Webpack</source>
          <target state="translated">Webpack</target>
        </trans-unit>
        <trans-unit id="50c9ef00c547d40f6538d1f95175ecf069daf741" translate="yes" xml:space="preserve">
          <source>Webpack 5 Module Federation: A game-changer in JavaScript architecture</source>
          <target state="translated">Webpack 5 Module Federation: A game-changer in JavaScript architecture</target>
        </trans-unit>
        <trans-unit id="27f4015b28e6a5391e9b051524576637eb061010" translate="yes" xml:space="preserve">
          <source>Webpack chat:</source>
          <target state="translated">Webpack chat:</target>
        </trans-unit>
        <trans-unit id="82b6b2e18d79f25873504926b5f944fcf9abaaba" translate="yes" xml:space="preserve">
          <source>Webpack is capable of adding &lt;code&gt;nonce&lt;/code&gt; to all scripts that it loads. To activate the feature set a &lt;code&gt;__webpack_nonce__&lt;/code&gt; variable needs to be included in your entry script. A unique hash based nonce should be generated and provided for each unique page view this is why &lt;code&gt;__webpack_nonce__&lt;/code&gt; is specified in the entry file and not in the configuration. Please note that &lt;code&gt;nonce&lt;/code&gt; should always be a base64-encoded string.</source>
          <target state="translated">Webpack은 로드하는 모든 스크립트에 &lt;code&gt;nonce&lt;/code&gt; 를 추가 할 수 있습니다. 기능 세트를 활성화하려면 입력 스크립트에 &lt;code&gt;__webpack_nonce__&lt;/code&gt; 변수가 포함되어야합니다. 고유 한 해시 기반 nonce가 생성되어 각 고유 페이지보기에 제공되어야하므로 이것이 구성 파일이 아닌 항목 파일에 &lt;code&gt;__webpack_nonce__&lt;/code&gt; 가 지정된 이유 입니다. 있습니다 &lt;code&gt;nonce&lt;/code&gt; 항상 base64로 인코딩 된 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="158e95469747971b9e26b9ccc964ebc1f958f27d" translate="yes" xml:space="preserve">
          <source>Webpack is used to compile JavaScript modules. Once &lt;a href=&quot;installation&quot;&gt;installed&lt;/a&gt;, you can interface with webpack either from its &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt; or &lt;a href=&quot;../api/node&quot;&gt;API&lt;/a&gt;. If you're still new to webpack, please read through the &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;core concepts&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/comparison&quot;&gt;this comparison&lt;/a&gt; to learn why you might use it over the other tools that are out in the community.</source>
          <target state="translated">Webpack은 JavaScript 모듈을 컴파일하는 데 사용됩니다. 일단 &lt;a href=&quot;installation&quot;&gt;설치&lt;/a&gt; 되면 &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt; 또는 &lt;a href=&quot;../api/node&quot;&gt;API&lt;/a&gt; 에서 웹팩과 인터페이스 할 수 있습니다 . 당신은 여전히 웹팩를 처음 사용하는 경우는 읽어주십시오 &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;핵심 개념&lt;/a&gt; 과 &lt;a href=&quot;https://webpack.js.org/comparison&quot;&gt;이 비교&lt;/a&gt; 는 지역 사회에서있는 다른 도구에 그것을 사용하는 이유를 알아.</target>
        </trans-unit>
        <trans-unit id="a314c0c0bef387cef98f2fd46509bd9f90f50109" translate="yes" xml:space="preserve">
          <source>Webpack provides an &lt;a href=&quot;../concepts/module-resolution&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;.</source>
          <target state="translated">Webpack provides an &lt;a href=&quot;../concepts/module-resolution&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e6cf8f28b1b8913ae0ae026a0b390c951e74c15c" translate="yes" xml:space="preserve">
          <source>Webpack provides an &lt;a href=&quot;../configuration/resolve&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;. The &lt;code&gt;stylus-loader&lt;/code&gt; applies the webpack resolver when processing queries. Thus you can import your Stylus modules from &lt;code&gt;node_modules&lt;/code&gt;. Just prepend them with a &lt;code&gt;~&lt;/code&gt; which tells webpack to look up the &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Webpack provides an &lt;a href=&quot;../configuration/resolve&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;. The &lt;code&gt;stylus-loader&lt;/code&gt; applies the webpack resolver when processing queries. Thus you can import your Stylus modules from &lt;code&gt;node_modules&lt;/code&gt; . Just prepend them with a &lt;code&gt;~&lt;/code&gt; which tells webpack to look up the &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6da2df5d302968b86d91eb2e28fbbf6b441efdb8" translate="yes" xml:space="preserve">
          <source>Webpack supports bundling multiple &lt;a href=&quot;../concepts/targets&quot;&gt;targets&lt;/a&gt;. For cases where you may want different Babel configurations for each target (like &lt;code&gt;web&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;node&lt;/code&gt;), this loader provides a &lt;code&gt;target&lt;/code&gt; property via Babel's &lt;a href=&quot;https://babeljs.io/docs/en/config-files#apicallercb&quot;&gt;caller&lt;/a&gt; API.</source>
          <target state="translated">Webpack supports bundling multiple &lt;a href=&quot;../concepts/targets&quot;&gt;targets&lt;/a&gt;. For cases where you may want different Babel configurations for each target (like &lt;code&gt;web&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;node&lt;/code&gt; ), this loader provides a &lt;code&gt;target&lt;/code&gt; property via Babel's &lt;a href=&quot;https://babeljs.io/docs/en/config-files#apicallercb&quot;&gt;caller&lt;/a&gt; API.</target>
        </trans-unit>
        <trans-unit id="c0c5210e932b790099cb080bd655498066252fad" translate="yes" xml:space="preserve">
          <source>Webpack then tries to load the &lt;code&gt;babel&lt;/code&gt; package instead of the &lt;code&gt;babel-loader&lt;/code&gt;.</source>
          <target state="translated">그런 다음 Webpack 은 &lt;code&gt;babel-loader&lt;/code&gt; 대신 &lt;code&gt;babel&lt;/code&gt; 패키지 를로드하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="f93227f09a36564ddcbcc64edc8672d9a999d0d9" translate="yes" xml:space="preserve">
          <source>Webpack's Devtool Source Map</source>
          <target state="translated">Webpack의 Devtool 소스 맵</target>
        </trans-unit>
        <trans-unit id="a57d36dd7547d0d01d63f5a0dca33743ac6b0190" translate="yes" xml:space="preserve">
          <source>What does that mean?</source>
          <target state="translated">그게 무슨 뜻이야?</target>
        </trans-unit>
        <trans-unit id="e23722e1d334532d959d84961060e3ab54e8b4a7" translate="yes" xml:space="preserve">
          <source>What good would these statistics be without some description of the compiled application's actual modules? Each module in the dependency graph is represented by the following structure:</source>
          <target state="translated">컴파일 된 응용 프로그램의 실제 모듈에 대한 설명이 없으면 이러한 통계가 어떻게 좋을까요? 종속성 그래프의 각 모듈은 다음 구조로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8a4ea7253eb5ae4c52f474dda583f9916cc9b4a3" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;CSS Modules&lt;/code&gt;? Please &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#modules&quot;&gt;read&lt;/a&gt;.</source>
          <target state="translated">What is &lt;code&gt;CSS Modules&lt;/code&gt; ? Please &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#modules&quot;&gt;read&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="80025f04bda332bda95338dd0b53da22365259c7" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;progressive&lt;/code&gt; image? &lt;a href=&quot;https://jmperezperez.com/medium-image-progressive-loading-placeholder/&quot;&gt;&lt;code&gt;Answer here&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">What is &lt;code&gt;progressive&lt;/code&gt; image? &lt;a href=&quot;https://jmperezperez.com/medium-image-progressive-loading-placeholder/&quot;&gt; &lt;code&gt;Answer here&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3c405e511522608969dda969a09ff67810928f7b" translate="yes" xml:space="preserve">
          <source>What is a webpack Module</source>
          <target state="translated">웹팩 모듈이란?</target>
        </trans-unit>
        <trans-unit id="a15063f1f366503c5eca45c22ee9ce5c854143a3" translate="yes" xml:space="preserve">
          <source>What we've essentially done here is tell webpack...</source>
          <target state="translated">우리가 여기서 본질적으로 한 일은 webpack에게 알리는 것입니다 ...</target>
        </trans-unit>
        <trans-unit id="3f6cf47fe8f7eb3ed631b1c9020062f7333087c0" translate="yes" xml:space="preserve">
          <source>What's the reasoning behind this? &lt;code&gt;react&lt;/code&gt; probably won't change as often as your application code. By moving it into a separate chunk this chunk can be cached separately from your app code (assuming you are using chunkhash, records, Cache-Control or other long term cache approach).</source>
          <target state="translated">이 뒤에 추론은 무엇입니까? &lt;code&gt;react&lt;/code&gt; 아마도 응용 프로그램 코드만큼 자주 변경되지 않을 것입니다. 이 청크를 별도의 청크로 이동하면 청크 해시, 레코드, Cache-Control 또는 기타 장기 캐시 방식을 사용한다고 가정 할 때이 청크를 앱 코드와 별도로 캐시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82ad2275dbd931d707609a926126e7d7fd192347" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; is set to &lt;code&gt;'none'&lt;/code&gt;, &lt;code&gt;optimization.nodeEnv&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">When &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; is set to &lt;code&gt;'none'&lt;/code&gt; , &lt;code&gt;optimization.nodeEnv&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3405963c0dcff8e80cd7e973f9b3a813e4e89a0d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Button&lt;/code&gt; is unused you can effectively remove the &lt;code&gt;export { Button$1 };&lt;/code&gt; which leaves all the remaining code. So the question is &quot;Does this code have any side effects or can it be safely removed?&quot;. Difficult to say, especially because of this line &lt;code&gt;withAppProvider()(Button)&lt;/code&gt;. &lt;code&gt;withAppProvider&lt;/code&gt; is called and the return value is also called. Are there any side effects when calling &lt;code&gt;merge&lt;/code&gt; or &lt;code&gt;hoistStatics&lt;/code&gt;? Are there side effects when assigning &lt;code&gt;WithProvider.contextTypes&lt;/code&gt; (Setter?) or when reading &lt;code&gt;WrappedComponent.contextTypes&lt;/code&gt; (Getter?).</source>
          <target state="translated">When &lt;code&gt;Button&lt;/code&gt; is unused you can effectively remove the &lt;code&gt;export { Button$1 };&lt;/code&gt; which leaves all the remaining code. So the question is &quot;Does this code have any side effects or can it be safely removed?&quot;. Difficult to say, especially because of this line &lt;code&gt;withAppProvider()(Button)&lt;/code&gt; . &lt;code&gt;withAppProvider&lt;/code&gt; is called and the return value is also called. Are there any side effects when calling &lt;code&gt;merge&lt;/code&gt; or &lt;code&gt;hoistStatics&lt;/code&gt; ? Are there side effects when assigning &lt;code&gt;WithProvider.contextTypes&lt;/code&gt; (Setter?) or when reading &lt;code&gt;WrappedComponent.contextTypes&lt;/code&gt; (Getter?).</target>
        </trans-unit>
        <trans-unit id="9c4f3ee1049ce087946296ad68f926f35642de55" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Rule.generator.dataUrl&lt;/code&gt; is used as an object, you can configure two properties:</source>
          <target state="translated">When &lt;code&gt;Rule.generator.dataUrl&lt;/code&gt; is used as an object, you can configure two properties:</target>
        </trans-unit>
        <trans-unit id="779590cabbfa59a5afb0bd916287b5bff4554d11" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;devServer.lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">When &lt;code&gt;devServer.lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="8ac79235f4bf956b13921f4562bf7915c76ae5e6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;invalidate&lt;/code&gt; is called, the &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; handler will be eventually called and fill &lt;code&gt;module.hot.data&lt;/code&gt;. If &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; handler is not registered, an empty object will be supplied to &lt;code&gt;module.hot.data&lt;/code&gt;.</source>
          <target state="translated">When &lt;code&gt;invalidate&lt;/code&gt; is called, the &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt; &lt;code&gt;dispose&lt;/code&gt; &lt;/a&gt; handler will be eventually called and fill &lt;code&gt;module.hot.data&lt;/code&gt; . If &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt; &lt;code&gt;dispose&lt;/code&gt; &lt;/a&gt; handler is not registered, an empty object will be supplied to &lt;code&gt;module.hot.data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="097e7a8a57c079b0550af45266e062d2a4b75f4b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">때 &lt;code&gt;lazy&lt;/code&gt; 활성화가 요구됩니다 때 DEV-서버는 번들을 컴파일합니다. 이는 웹팩이 파일 변경을 감시하지 않음을 의미합니다. 우리는 이것을 &lt;strong&gt;게으른 모드&lt;/strong&gt; 라고 부릅니다 .</target>
        </trans-unit>
        <trans-unit id="a918636379f114af885a0d73833efa42c23d80cd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;open&lt;/code&gt; is enabled, the dev server will open the browser.</source>
          <target state="translated">때 &lt;code&gt;open&lt;/code&gt; 활성화, dev에 서버가 브라우저를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="0370da265ef18c491f7b37b03ff50fe7bf0a9e2a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;stats.entrypoints&lt;/code&gt; is set to &lt;code&gt;'auto'&lt;/code&gt;, webpack will decide automatically whether to display the entry points in the stats output.</source>
          <target state="translated">When &lt;code&gt;stats.entrypoints&lt;/code&gt; is set to &lt;code&gt;'auto'&lt;/code&gt; , webpack will decide automatically whether to display the entry points in the stats output.</target>
        </trans-unit>
        <trans-unit id="cea2d3428fe315d551def013906b1f4d310fc261" translate="yes" xml:space="preserve">
          <source>When Node.js was released a new era started, and it came with new challenges. Now that JavaScript is not running in a browser, how are Node applications supposed to load new chunks of code? There are no html files and script tags that can be added to it.</source>
          <target state="translated">When Node.js was released a new era started, and it came with new challenges. Now that JavaScript is not running in a browser, how are Node applications supposed to load new chunks of code? There are no html files and script tags that can be added to it.</target>
        </trans-unit>
        <trans-unit id="c9f990327c881b65364364e79333e5e612769712" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;matchResource&lt;/code&gt; is set, it will be used to match with the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; instead of the original resource. This can be useful if further loaders should be applied to the resource, or if the module type needs to be changed. It's also displayed in the stats and used for matching &lt;a href=&quot;../configuration/module#ruleissuer&quot;&gt;&lt;code&gt;Rule.issuer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroupscachegrouptest&quot;&gt;&lt;code&gt;test&lt;/code&gt; in &lt;code&gt;splitChunks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">When a &lt;code&gt;matchResource&lt;/code&gt; is set, it will be used to match with the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; &lt;/a&gt; instead of the original resource. This can be useful if further loaders should be applied to the resource, or if the module type needs to be changed. It's also displayed in the stats and used for matching &lt;a href=&quot;../configuration/module#ruleissuer&quot;&gt; &lt;code&gt;Rule.issuer&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroupscachegrouptest&quot;&gt; &lt;code&gt;test&lt;/code&gt; in &lt;code&gt;splitChunks&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ab6541e3fc3548f8ffed0cb7a3c4975a90c82ea4" translate="yes" xml:space="preserve">
          <source>When a function is given, returning &lt;code&gt;true&lt;/code&gt; tells webpack to inject the module into the bundle as Base64-encoded string, otherwise module file will be emitted into the output directory.</source>
          <target state="translated">When a function is given, returning &lt;code&gt;true&lt;/code&gt; tells webpack to inject the module into the bundle as Base64-encoded string, otherwise module file will be emitted into the output directory.</target>
        </trans-unit>
        <trans-unit id="936d0ae63cdd310640f2be4edcef55d8a668d108" translate="yes" xml:space="preserve">
          <source>When a page which uses the &lt;code&gt;ChartComponent&lt;/code&gt; is requested, the charting-library-chunk is also requested via &lt;code&gt;&amp;lt;link rel=&quot;preload&quot;&amp;gt;&lt;/code&gt;. Assuming the page-chunk is smaller and finishes faster, the page will be displayed with a &lt;code&gt;LoadingIndicator&lt;/code&gt;, until the already requested &lt;code&gt;charting-library-chunk&lt;/code&gt; finishes. This will give a little load time boost since it only needs one round-trip instead of two. Especially in high-latency environments.</source>
          <target state="translated">&lt;code&gt;ChartComponent&lt;/code&gt; 를 사용하는 페이지 가 요청되면 &lt;code&gt;&amp;lt;link rel=&quot;preload&quot;&amp;gt;&lt;/code&gt; 를 통해 charting-library-chunk도 요청됩니다 . 페이지 청크가 더 작고 더 빨리 완료된다고 가정하면, 이미 요청 된 &lt;code&gt;charting-library-chunk&lt;/code&gt; 가 완료 될 때까지 페이지에 &lt;code&gt;LoadingIndicator&lt;/code&gt; 가 표시됩니다 . 두 번이 아닌 한 번만 왕복하면되므로로드 시간이 약간 증가합니다. 특히 대기 시간이 긴 환경에서.</target>
        </trans-unit>
        <trans-unit id="4254af549da477b1173d6e70e64d52344b144aaf" translate="yes" xml:space="preserve">
          <source>When assigning equal names to different split chunks, all vendor modules are placed into a single shared chunk, though it's not recommend since it can result in more code downloaded.</source>
          <target state="translated">다른 분할 청크에 동일한 이름을 할당하면 모든 공급 업체 모듈이 단일 공유 청크에 배치되지만 더 많은 코드를 다운로드 할 수 있으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d5b09223038225769f84c1f42ba9ae582c3aa8e" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;check&lt;/code&gt; state, this module will be added to the update when an update is available. If no update is available it will create a new update. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</source>
          <target state="translated">When called during the &lt;code&gt;check&lt;/code&gt; state, this module will be added to the update when an update is available. If no update is available it will create a new update. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</target>
        </trans-unit>
        <trans-unit id="f77d259475896e07ef292a542d6c6f90531181e2" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;dispose&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; state, HMR will pick it up after getting out of those states.</source>
          <target state="translated">When called during the &lt;code&gt;dispose&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; state, HMR will pick it up after getting out of those states.</target>
        </trans-unit>
        <trans-unit id="629b51e2c6676a4cd198f2c07be845c738c575dc" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;idle&lt;/code&gt; state, a new HMR update will be created containing this module. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</source>
          <target state="translated">When called during the &lt;code&gt;idle&lt;/code&gt; state, a new HMR update will be created containing this module. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</target>
        </trans-unit>
        <trans-unit id="252c5755307a122a2d89471e3b65082f4f711175" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;ready&lt;/code&gt; or &lt;code&gt;prepare&lt;/code&gt; state, this module will be added to the current HMR update.</source>
          <target state="translated">When called during the &lt;code&gt;ready&lt;/code&gt; or &lt;code&gt;prepare&lt;/code&gt; state, this module will be added to the current HMR update.</target>
        </trans-unit>
        <trans-unit id="c2a1936d8933244dd718faf821e675520875717c" translate="yes" xml:space="preserve">
          <source>When combining with the &lt;a href=&quot;output#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option: If an array is passed only the last item is exported.</source>
          <target state="translated">&lt;a href=&quot;output#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; 옵션 과 결합 할 때 : 배열이 전달되면 마지막 항목 만 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="eae6f736854059427f8c986bd296d99a4dd905c2" translate="yes" xml:space="preserve">
          <source>When combining with the &lt;a href=&quot;output#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option: If an array is passed only the last item is exported.</source>
          <target state="translated">When combining with the &lt;a href=&quot;output#outputlibrary&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; option: If an array is passed only the last item is exported.</target>
        </trans-unit>
        <trans-unit id="3546bb0ca2be567641a97a2d03578b6e40ea329f" translate="yes" xml:space="preserve">
          <source>When compiling source code with webpack, users can generate a JSON file containing statistics about modules. These statistics can be used to analyze an application's dependency graph as well as to optimize compilation speed. The file is typically generated with the following CLI command:</source>
          <target state="translated">웹팩으로 소스 코드를 컴파일 할 때 사용자는 모듈에 대한 통계가 포함 된 JSON 파일을 생성 할 수 있습니다. 이 통계는 응용 프로그램의 종속성 그래프를 분석하고 컴파일 속도를 최적화하는 데 사용할 수 있습니다. 파일은 일반적으로 다음 CLI 명령으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4c7353a246265e00b25d23635b72209bd3daa993" translate="yes" xml:space="preserve">
          <source>When consuming &lt;a href=&quot;https://github.com/webpack/webpack-sources&quot;&gt;&lt;code&gt;webpack-sources&lt;/code&gt;&lt;/a&gt; package in plugins, use &lt;code&gt;require('webpack').sources&lt;/code&gt; instead of &lt;code&gt;require('webpack-sources')&lt;/code&gt; to avoid version conflicts for persistent caching.</source>
          <target state="translated">When consuming &lt;a href=&quot;https://github.com/webpack/webpack-sources&quot;&gt; &lt;code&gt;webpack-sources&lt;/code&gt; &lt;/a&gt; package in plugins, use &lt;code&gt;require('webpack').sources&lt;/code&gt; instead of &lt;code&gt;require('webpack-sources')&lt;/code&gt; to avoid version conflicts for persistent caching.</target>
        </trans-unit>
        <trans-unit id="5afdd0296e171de866c508b740b84b8c21d1e603" translate="yes" xml:space="preserve">
          <source>When creating a bundle with this configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'default footer'. Let's set &lt;code&gt;Rule.resolve&lt;/code&gt; for &lt;code&gt;.js&lt;/code&gt; files, and alias &lt;code&gt;footer&lt;/code&gt; to &lt;code&gt;overridden.js&lt;/code&gt;.</source>
          <target state="translated">When creating a bundle with this configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'default footer'. Let's set &lt;code&gt;Rule.resolve&lt;/code&gt; for &lt;code&gt;.js&lt;/code&gt; files, and alias &lt;code&gt;footer&lt;/code&gt; to &lt;code&gt;overridden.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aac6a0a96ff5121dc13611a26f4cb1cfba3482ec" translate="yes" xml:space="preserve">
          <source>When creating a bundle with updated configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'overridden footer'.</source>
          <target state="translated">When creating a bundle with updated configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'overridden footer'.</target>
        </trans-unit>
        <trans-unit id="713580f1a6d5ae54743a4b9083ebeacf1983bef9" translate="yes" xml:space="preserve">
          <source>When declaring a local classname you can compose a local class from another local classname.</source>
          <target state="translated">로컬 클래스 이름을 선언 할 때 다른 로컬 클래스 이름에서 로컬 클래스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a64d141b958f5e87111733dd5f7d8d676c38709" translate="yes" xml:space="preserve">
          <source>When defining values for &lt;code&gt;process&lt;/code&gt; prefer &lt;code&gt;'process.env.NODE_ENV': JSON.stringify('production')&lt;/code&gt; over &lt;code&gt;process: { env: { NODE_ENV: JSON.stringify('production') } }&lt;/code&gt;. Using the latter will overwrite the &lt;code&gt;process&lt;/code&gt; object which can break compatibility with some modules that expect other values on the process object to be defined.</source>
          <target state="translated">에 대한 값을 정의 할 때 &lt;code&gt;process&lt;/code&gt; 선호 &lt;code&gt;'process.env.NODE_ENV': JSON.stringify('production')&lt;/code&gt; 통해 &lt;code&gt;process: { env: { NODE_ENV: JSON.stringify('production') } }&lt;/code&gt; . 후자를 사용하면 &lt;code&gt;process&lt;/code&gt; 개체를 덮어 쓰므로 프로세스 개체의 다른 값이 정의 될 것으로 예상되는 일부 모듈과의 호환성이 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="250af6c15c6b77347d259b8cfa2de3ce234b9bd0" translate="yes" xml:space="preserve">
          <source>When developing a plugin for webpack, you might want to know where each hook is called. To learn this, search for &lt;code&gt;hooks.&amp;lt;hook name&amp;gt;.call&lt;/code&gt; across the webpack source</source>
          <target state="translated">웹 팩용 플러그인을 개발할 때 각 후크가 호출되는 위치를 알고 싶을 수 있습니다. 이를 배우려면 웹팩 소스 에서 &lt;code&gt;hooks.&amp;lt;hook name&amp;gt;.call&lt;/code&gt; .call을 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="eac506339aaf8ca2ceab108281956c6327d3d307" translate="yes" xml:space="preserve">
          <source>When enabled, symlinked resources are resolved to their &lt;em&gt;real&lt;/em&gt; path, not their symlinked location. Note that this may cause module resolution to fail when using tools that symlink packages (like &lt;code&gt;npm link&lt;/code&gt;).</source>
          <target state="translated">활성화되면 심볼릭 링크 된 리소스는 심볼릭 링크 된 위치가 아닌 &lt;em&gt;실제&lt;/em&gt; 경로 로 확인됩니다 . 패키지를 심볼릭 링크하는 도구 (예 : &lt;code&gt;npm link&lt;/code&gt; )를 사용하면 모듈 확인에 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0867e331fe64e063109c858345bb69d7dc4cc24b" translate="yes" xml:space="preserve">
          <source>When enabled, webpack would prefer to resolve module requests as relative requests instead of using modules from &lt;code&gt;node_modules&lt;/code&gt; directories.</source>
          <target state="translated">When enabled, webpack would prefer to resolve module requests as relative requests instead of using modules from &lt;code&gt;node_modules&lt;/code&gt; directories.</target>
        </trans-unit>
        <trans-unit id="d5298ec46ae9b14121ccdf8dcced94e35877a3bb" translate="yes" xml:space="preserve">
          <source>When enabled, you should provide the file extension when &lt;code&gt;import&lt;/code&gt;ing a module in &lt;code&gt;.mjs&lt;/code&gt; files or any other &lt;code&gt;.js&lt;/code&gt; files when their nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field with a value of &lt;code&gt;&quot;module&quot;&lt;/code&gt;, otherwise webpack would fail the compiling with a &lt;code&gt;Module not found&lt;/code&gt; error. And webpack won't resolve directories with filenames defined in the &lt;a href=&quot;resolve#resolvemainfiles&quot;&gt;&lt;code&gt;resolve.mainFiles&lt;/code&gt;&lt;/a&gt;, you have to specify the filename yourself.</source>
          <target state="translated">When enabled, you should provide the file extension when &lt;code&gt;import&lt;/code&gt; ing a module in &lt;code&gt;.mjs&lt;/code&gt; files or any other &lt;code&gt;.js&lt;/code&gt; files when their nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field with a value of &lt;code&gt;&quot;module&quot;&lt;/code&gt; , otherwise webpack would fail the compiling with a &lt;code&gt;Module not found&lt;/code&gt; error. And webpack won't resolve directories with filenames defined in the &lt;a href=&quot;resolve#resolvemainfiles&quot;&gt; &lt;code&gt;resolve.mainFiles&lt;/code&gt; &lt;/a&gt;, you have to specify the filename yourself.</target>
        </trans-unit>
        <trans-unit id="de4f213b38880204a9cc2ff95ea9d365e1a4a280" translate="yes" xml:space="preserve">
          <source>When executing &lt;code&gt;NODE_ENV=production webpack&lt;/code&gt; in the terminal to build, &lt;code&gt;entry.js&lt;/code&gt; becomes this:</source>
          <target state="translated">빌드 할 터미널에서 &lt;code&gt;NODE_ENV=production webpack&lt;/code&gt; 을 실행할 때 &lt;code&gt;entry.js&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0da06ca020ed0939df108b2df2d651ec354c048" translate="yes" xml:space="preserve">
          <source>When files paths are processed by webpack, they always contain &lt;code&gt;/&lt;/code&gt; on Unix systems and &lt;code&gt;\&lt;/code&gt; on Windows. That's why using &lt;code&gt;[\\/]&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; fields is necessary to represent a path separator. &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; will cause issues when used cross-platform.</source>
          <target state="translated">When files paths are processed by webpack, they always contain &lt;code&gt;/&lt;/code&gt; on Unix systems and &lt;code&gt;\&lt;/code&gt; on Windows. That's why using &lt;code&gt;[\\/]&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; fields is necessary to represent a path separator. &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; will cause issues when used cross-platform.</target>
        </trans-unit>
        <trans-unit id="7276358ec6a6b1b20a6f229f493f5bc89ee0a7a3" translate="yes" xml:space="preserve">
          <source>When following &lt;code&gt;require()&lt;/code&gt; call is evaluated:</source>
          <target state="translated">When following &lt;code&gt;require()&lt;/code&gt; call is evaluated:</target>
        </trans-unit>
        <trans-unit id="7a0a8c8cee49129be667bdabcc325bc5a1ea3345" translate="yes" xml:space="preserve">
          <source>When importing from an npm package, e.g. &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt;, this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; specified in your webpack configuration.</source>
          <target state="translated">npm 패키지에서 가져 오는 경우 (예 : &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; )이 옵션은 &lt;code&gt;package.json&lt;/code&gt; 의 어떤 필드를 검사 할지 결정합니다 . 기본값은 웹팩 구성에 지정된 &lt;a href=&quot;../concepts/targets&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="914299b827acf5949a2c3b90c84f3a98237eb0db" translate="yes" xml:space="preserve">
          <source>When importing from an npm package, e.g. &lt;code&gt;import * as D3 from 'd3'&lt;/code&gt;, this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; specified in your webpack configuration.</source>
          <target state="translated">When importing from an npm package, e.g. &lt;code&gt;import * as D3 from 'd3'&lt;/code&gt; , this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt; specified in your webpack configuration.</target>
        </trans-unit>
        <trans-unit id="aac832abcc21fcde37f9dc201dae0be38b70997a" translate="yes" xml:space="preserve">
          <source>When installing a package that will be bundled into your production bundle, you should use &lt;code&gt;npm install --save&lt;/code&gt;. If you're installing a package for development purposes (e.g. a linter, testing libraries, etc.) then you should use &lt;code&gt;npm install --save-dev&lt;/code&gt;. More information can be found in the &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm documentation&lt;/a&gt;.</source>
          <target state="translated">프로덕션 번들에 번들로 제공 될 패키지를 &lt;code&gt;npm install --save&lt;/code&gt; 때는 npm install --save를 사용해야 합니다. 개발 목적으로 패키지 (예 : 린터, 테스트 라이브러리 등)를 &lt;code&gt;npm install --save-dev&lt;/code&gt; 하는 경우 npm install --save-dev 를 사용해야합니다 . 자세한 내용은 &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebd7d0c9e10b1536745313e0c7501b34e45c3140" translate="yes" xml:space="preserve">
          <source>When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;http://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</source>
          <target state="translated">npm에서 타사 라이브러리를 설치할 때는 해당 라이브러리에 대한 타이핑 정의를 설치해야합니다. 이러한 정의는 &lt;a href=&quot;http://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fba0b8b2797c9869cb7c60cf7f36728c3d9990c2" translate="yes" xml:space="preserve">
          <source>When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</source>
          <target state="translated">When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a7d63f2c961d1c468e0c64be6d7c2e3208937f14" translate="yes" xml:space="preserve">
          <source>When it's not possible to detect mode we fallback to the production version.</source>
          <target state="translated">When it's not possible to detect mode we fallback to the production version.</target>
        </trans-unit>
        <trans-unit id="0e3063869d9861574f92e937bd8e766cc68f510b" translate="yes" xml:space="preserve">
          <source>When loading code with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, the webpack runtime will try to find an existing &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that matches the &lt;code&gt;src&lt;/code&gt; attribute or has a specific &lt;code&gt;data-webpack&lt;/code&gt; attribute. For chunk loading &lt;code&gt;data-webpack&lt;/code&gt; attribute would have value of &lt;code&gt;'[output.uniqueName]:chunk-[chunkId]'&lt;/code&gt; while external script has value of &lt;code&gt;'[output.uniqueName]:[global]'&lt;/code&gt;.</source>
          <target state="translated">When loading code with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, the webpack runtime will try to find an existing &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that matches the &lt;code&gt;src&lt;/code&gt; attribute or has a specific &lt;code&gt;data-webpack&lt;/code&gt; attribute. For chunk loading &lt;code&gt;data-webpack&lt;/code&gt; attribute would have value of &lt;code&gt;'[output.uniqueName]:chunk-[chunkId]'&lt;/code&gt; while external script has value of &lt;code&gt;'[output.uniqueName]:[global]'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1ac815eb5669924512d67d056cd9a159cb6e5a9" translate="yes" xml:space="preserve">
          <source>When multiple targets are passed, then common subset of features will be used:</source>
          <target state="translated">When multiple targets are passed, then common subset of features will be used:</target>
        </trans-unit>
        <trans-unit id="54cf5ef4c81052dc0bb8e2761917ad0bfb136bf3" translate="yes" xml:space="preserve">
          <source>When nesting is used, providing overrides to one container will automatically override the modules with the same &quot;name&quot; in the nested container(s).</source>
          <target state="translated">When nesting is used, providing overrides to one container will automatically override the modules with the same &quot;name&quot; in the nested container(s).</target>
        </trans-unit>
        <trans-unit id="f54640db1624976533d90e49a88cd547e9b0d501" translate="yes" xml:space="preserve">
          <source>When no information about the target or the &lt;a href=&quot;output#outputenvironment&quot;&gt;environment&lt;/a&gt; features is provided, then ES2015 will be used.</source>
          <target state="translated">When no information about the target or the &lt;a href=&quot;output#outputenvironment&quot;&gt;environment&lt;/a&gt; features is provided, then ES2015 will be used.</target>
        </trans-unit>
        <trans-unit id="f9d2f82c23530b7b38fd825319b0c93915066903" translate="yes" xml:space="preserve">
          <source>When only a single entry (&lt;code&gt;&quot;.&quot;&lt;/code&gt;) into the package should be supported the &lt;code&gt;{ &quot;.&quot;: ... }&lt;/code&gt; object nesting can be omitted:</source>
          <target state="translated">When only a single entry ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; ) into the package should be supported the &lt;code&gt;{ &quot;.&quot;: ... }&lt;/code&gt; object nesting can be omitted:</target>
        </trans-unit>
        <trans-unit id="58456700867017ff4232dd40aae854d5f72d63f9" translate="yes" xml:space="preserve">
          <source>When processing modules with webpack, it is important to understand the different module syntaxes -- specifically the &lt;a href=&quot;module-methods&quot;&gt;methods&lt;/a&gt; and &lt;a href=&quot;module-variables&quot;&gt;variables&lt;/a&gt; -- that are supported.</source>
          <target state="translated">웹팩으로 모듈을 처리 할 때 지원되는 다양한 모듈 구문 (특히 &lt;a href=&quot;module-methods&quot;&gt;메서드&lt;/a&gt; 및 &lt;a href=&quot;module-variables&quot;&gt;변수)&lt;/a&gt; 을 이해해야합니다 .</target>
        </trans-unit>
        <trans-unit id="28a57690cf9a948bf2bff9b360fff7054ca3f0d5" translate="yes" xml:space="preserve">
          <source>When providing a custom client and server implementation make sure that they are compatible with one another to communicate successfully.</source>
          <target state="translated">When providing a custom client and server implementation make sure that they are compatible with one another to communicate successfully.</target>
        </trans-unit>
        <trans-unit id="ef1efdebab988b74943d54fbfbcfff3b7721d936" translate="yes" xml:space="preserve">
          <source>When providing an &lt;code&gt;object&lt;/code&gt; to the &lt;code&gt;ProgressPlugin&lt;/code&gt;, following properties are supported:</source>
          <target state="translated">When providing an &lt;code&gt;object&lt;/code&gt; to the &lt;code&gt;ProgressPlugin&lt;/code&gt; , following properties are supported:</target>
        </trans-unit>
        <trans-unit id="60f74f8cf364bb2c3b358ef9a5c871a34dd697e0" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt;, the module is not removed from cache, which results in the exception getting thrown only on the first &lt;code&gt;require&lt;/code&gt; call (making it incompatible with node.js).</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 로 설정 하면 모듈이 캐시에서 제거되지 않으므로 첫 번째 &lt;code&gt;require&lt;/code&gt; 호출 (예 : node.js와 호환되지 않음) 에서만 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="f25a86f18aa4d9b660bcbd13b61019472052de54" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt; tells webpack to reduce the size of WASM by changing imports to shorter strings. It mangles module and export names.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정하면 가져 오기를 더 짧은 문자열로 변경하여 웹팩에 WASM 크기를 줄 이도록 지시합니다. 모듈과 내보내기 이름을 엉망으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6cfe5772eea6ac5b62145d24a208f58602379411" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt; this option bypasses host checking. &lt;strong&gt;THIS IS NOT RECOMMENDED&lt;/strong&gt; as apps that do not check the host are vulnerable to DNS rebinding attacks.</source>
          <target state="translated">When set to &lt;code&gt;true&lt;/code&gt; this option bypasses host checking. &lt;strong&gt;THIS IS NOT RECOMMENDED&lt;/strong&gt; as apps that do not check the host are vulnerable to DNS rebinding attacks.</target>
        </trans-unit>
        <trans-unit id="3e7756a0e6c1383ff6ce25f15f9104db9b4b9ff2" translate="yes" xml:space="preserve">
          <source>When set to true this option bypasses host checking. THIS IS NOT RECOMMENDED as apps that do not check the host are vulnerable to DNS rebinding attacks.</source>
          <target state="translated">true로 설정하면이 옵션은 호스트 검사를 무시합니다. 호스트를 확인하지 않는 앱은 DNS 리 바인딩 공격에 취약하므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a588827db4b10cf66e831c829a9e2a0293b21c20" translate="yes" xml:space="preserve">
          <source>When targeting a library, especially when &lt;code&gt;libraryTarget&lt;/code&gt; is &lt;code&gt;'umd'&lt;/code&gt;, this option indicates what global object will be used to mount the library. To make UMD build available on both browsers and Node.js, set &lt;code&gt;output.globalObject&lt;/code&gt; option to &lt;code&gt;'this'&lt;/code&gt;. Defaults to &lt;code&gt;self&lt;/code&gt; for Web-like targets.</source>
          <target state="translated">When targeting a library, especially when &lt;code&gt;libraryTarget&lt;/code&gt; is &lt;code&gt;'umd'&lt;/code&gt; , this option indicates what global object will be used to mount the library. To make UMD build available on both browsers and Node.js, set &lt;code&gt;output.globalObject&lt;/code&gt; option to &lt;code&gt;'this'&lt;/code&gt; . Defaults to &lt;code&gt;self&lt;/code&gt; for Web-like targets.</target>
        </trans-unit>
        <trans-unit id="838a0b02527f2c7edbcf02a32ebfc1e276d9e6dd" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;development&lt;/code&gt; condition is supported we use the version enhanced for development. Otherwise, in production or when mode is unknown, we use the optimized version.</source>
          <target state="translated">When the &lt;code&gt;development&lt;/code&gt; condition is supported we use the version enhanced for development. Otherwise, in production or when mode is unknown, we use the optimized version.</target>
        </trans-unit>
        <trans-unit id="139d0667f1eace4da938902de629746ba602a883" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;exports&lt;/code&gt; field is specified, only these module requests are available. Any other requests will lead to a ModuleNotFound Error.</source>
          <target state="translated">When the &lt;code&gt;exports&lt;/code&gt; field is specified, only these module requests are available. Any other requests will lead to a ModuleNotFound Error.</target>
        </trans-unit>
        <trans-unit id="8598222c4a511535ba42795fcaa12ff829a8437c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;target&lt;/code&gt; property is set to &lt;code&gt;webworker&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;, or left unspecified:</source>
          <target state="translated">때 &lt;code&gt;target&lt;/code&gt; 속성이 설정되어 &lt;code&gt;webworker&lt;/code&gt; , &lt;code&gt;web&lt;/code&gt; , 또는 지정되지 않은 상태 :</target>
        </trans-unit>
        <trans-unit id="06701e817af0679d68717f1453f2f36525b99925" translate="yes" xml:space="preserve">
          <source>When the chunk has a name already, each part will get a new name derived from that name. Depending on the value of &lt;code&gt;optimization.splitChunks.hidePathInfo&lt;/code&gt; it will add a key derived from the first module name or a hash of it.</source>
          <target state="translated">청크에 이미 이름이 있으면 각 부분은 해당 이름에서 파생 된 새 이름을 얻습니다. &lt;code&gt;optimization.splitChunks.hidePathInfo&lt;/code&gt; 의 값에 따라 첫 번째 모듈 이름 또는 그 해시에서 파생 된 키가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="deae5e0c9571595315c2198df6ddb413a1808f20" translate="yes" xml:space="preserve">
          <source>When the scaffold package is in your local file system you should point &lt;code&gt;init&lt;/code&gt; to its path:</source>
          <target state="translated">When the scaffold package is in your local file system you should point &lt;code&gt;init&lt;/code&gt; to its path:</target>
        </trans-unit>
        <trans-unit id="1e3fc46744fdb3b1a110fd3c2978521c4e860cb8" translate="yes" xml:space="preserve">
          <source>When the server is started, there will be a message prior to the list of resolved modules:</source>
          <target state="translated">서버가 시작되면 해결 된 모듈 목록 이전에 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0eaea81b241689b7665ce3045340a1e191fe43f4" translate="yes" xml:space="preserve">
          <source>When the webpack configuration &lt;a href=&quot;../configuration/configuration-types#exporting-a-function&quot;&gt;exports a function&lt;/a&gt;, an &quot;environment&quot; may be passed to it.</source>
          <target state="translated">웹팩 구성 &lt;a href=&quot;../configuration/configuration-types#exporting-a-function&quot;&gt;에서 함수를 내&lt;/a&gt; 보내면 &quot;환경&quot;이 전달 될 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
