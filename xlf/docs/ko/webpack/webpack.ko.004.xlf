<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="14732207bb11f3a578bdcf8cc9f9dd39a2c04727" translate="yes" xml:space="preserve">
          <source>Enable cache and multi-process parallel running.</source>
          <target state="translated">캐시 및 다중 프로세스 병렬 실행을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6ccbed29763e2731bce67a231c197b07a90bfb80" translate="yes" xml:space="preserve">
          <source>Enable cache of mangled variable and property names across multiple invocations</source>
          <target state="translated">여러 호출에서 맹 글링 된 변수 및 특성 이름의 캐시 사용</target>
        </trans-unit>
        <trans-unit id="c243fc90544494056f324b0113113637c1239f64" translate="yes" xml:space="preserve">
          <source>Enable colors on console</source>
          <target state="translated">Enable colors on console</target>
        </trans-unit>
        <trans-unit id="b88215293d5567292f534988df9d01a3d48bbbb4" translate="yes" xml:space="preserve">
          <source>Enable css modules for files based on the filename satisfying your filter function check.</source>
          <target state="translated">Enable css modules for files based on the filename satisfying your filter function check.</target>
        </trans-unit>
        <trans-unit id="f835862ac9cf0687074149d651ad91aec279c429" translate="yes" xml:space="preserve">
          <source>Enable css modules for files based on the filename satisfying your regex check.</source>
          <target state="translated">Enable css modules for files based on the filename satisfying your regex check.</target>
        </trans-unit>
        <trans-unit id="050b4af1e69e393575c1436290bf2ab05c1043d8" translate="yes" xml:space="preserve">
          <source>Enable debug information of specified loggers such as plugins or loaders. Similar to &lt;a href=&quot;stats#statsloggingdebug&quot;&gt;&lt;code&gt;stats.loggingDebug&lt;/code&gt;&lt;/a&gt; option but for infrastructure. No default value is given.</source>
          <target state="translated">Enable debug information of specified loggers such as plugins or loaders. Similar to &lt;a href=&quot;stats#statsloggingdebug&quot;&gt; &lt;code&gt;stats.loggingDebug&lt;/code&gt; &lt;/a&gt; option but for infrastructure. No default value is given.</target>
        </trans-unit>
        <trans-unit id="eceb634ffda2948feb7e95487c541eb52318882f" translate="yes" xml:space="preserve">
          <source>Enable file caching</source>
          <target state="translated">파일 캐싱 사용</target>
        </trans-unit>
        <trans-unit id="c26fe2f6634a6d97b355b2de54f3fa3d0ec784e2" translate="yes" xml:space="preserve">
          <source>Enable file caching and set path to cache directory.</source>
          <target state="translated">파일 캐싱을 사용 가능하게하고 경로를 캐시 디렉토리로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a60ab6606c6b053a899b8536d52c96534513318b" translate="yes" xml:space="preserve">
          <source>Enable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/css-minimizer-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">Enable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/css-minimizer-webpack-plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e800e2a7dc0d8e97e3d0b866213cb88decabc493" translate="yes" xml:space="preserve">
          <source>Enable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/image-minimizer-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">Enable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/image-minimizer-webpack-plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a35c7fee238749816bc9b59ff22d901fb16bb1bc" translate="yes" xml:space="preserve">
          <source>Enable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/terser-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">파일 캐싱을 활성화하십시오. 캐시 디렉토리에 대한 기본 경로 : &lt;code&gt;node_modules/.cache/terser-webpack-plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f295c8d2e59063d9ce3fc8e8e20ea49ccba5b9ba" translate="yes" xml:space="preserve">
          <source>Enable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/uglifyjs-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">파일 캐싱을 활성화하십시오. 캐시 디렉토리에 대한 기본 경로 : &lt;code&gt;node_modules/.cache/uglifyjs-webpack-plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df408995a454c511bd82275cd2318f8973bcd141" translate="yes" xml:space="preserve">
          <source>Enable file caching. The default path to cache directory: &lt;code&gt;node_modules/.cache/compression-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">Enable file caching. The default path to cache directory: &lt;code&gt;node_modules/.cache/compression-webpack-plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51f0f3a7df984a3e40da0094359868d03e27a53b" translate="yes" xml:space="preserve">
          <source>Enable in memory caching [Enabled by default for watch]</source>
          <target state="translated">메모리 캐싱에서 활성화 [시계에 기본적으로 활성화 됨]</target>
        </trans-unit>
        <trans-unit id="d034fecf87d215573b29bd7736b105bf6cc02419" translate="yes" xml:space="preserve">
          <source>Enable infrastructure logging output. Similar to &lt;a href=&quot;stats#statslogging&quot;&gt;&lt;code&gt;stats.logging&lt;/code&gt;&lt;/a&gt; option but for infrastructure. No default value is given.</source>
          <target state="translated">Enable infrastructure logging output. Similar to &lt;a href=&quot;stats#statslogging&quot;&gt; &lt;code&gt;stats.logging&lt;/code&gt; &lt;/a&gt; option but for infrastructure. No default value is given.</target>
        </trans-unit>
        <trans-unit id="35306b7bfe5556cba42ab8a9fa7523a1ab9e0328" translate="yes" xml:space="preserve">
          <source>Enable multi-process parallel running and set number of concurrent runs.</source>
          <target state="translated">다중 프로세스 병렬 실행을 활성화하고 동시 실행 수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0c91cf594ea90d56bbf6757b33d92db7c89e91f2" translate="yes" xml:space="preserve">
          <source>Enable or disable transform files into base64.</source>
          <target state="translated">Enable or disable transform files into base64.</target>
        </trans-unit>
        <trans-unit id="dd0b0444b6452f5bf1981da608726b627480ef08" translate="yes" xml:space="preserve">
          <source>Enable parallelization. Default number of concurrent runs: &lt;code&gt;os.cpus().length - 1&lt;/code&gt;.</source>
          <target state="translated">병렬화를 활성화하십시오. 동시 실행의 기본 번호 : &lt;code&gt;os.cpus().length - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bbb01139a2b6881d1a763e931bfb02c8aaf3411" translate="yes" xml:space="preserve">
          <source>Enable persistent caching with the &lt;code&gt;cache-loader&lt;/code&gt;. Clear cache directory on &lt;code&gt;&quot;postinstall&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cache-loader&lt;/code&gt; 영구 캐싱을 사용하십시오 . &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;&quot;postinstall&quot;&lt;/code&gt; 에서 캐시 디렉토리를 지우십시오 .</target>
        </trans-unit>
        <trans-unit id="54f39d529da3d78821cdce9d58966841af4c3430" translate="yes" xml:space="preserve">
          <source>Enable presets of externals for specific targets.</source>
          <target state="translated">Enable presets of externals for specific targets.</target>
        </trans-unit>
        <trans-unit id="21c3509dd60db7867c0a476347ca2e8c9e64465f" translate="yes" xml:space="preserve">
          <source>Enable prevent discarding or mangling of class names</source>
          <target state="translated">클래스 이름의 버림 또는 맹 글링 방지</target>
        </trans-unit>
        <trans-unit id="be5c2ba3010b8bc793dac728542b0bcbdfcc2ba3" translate="yes" xml:space="preserve">
          <source>Enable prevent discarding or mangling of function names. Useful for code relying on &lt;code&gt;Function.prototype.name&lt;/code&gt;. If the top level minify option &lt;code&gt;keep_classnames&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; it will be overriden with the value of the top level minify option &lt;code&gt;keep_fnames&lt;/code&gt;</source>
          <target state="translated">함수 이름의 삭제 또는 조작을 방지하십시오. &lt;code&gt;Function.prototype.name&lt;/code&gt; 에 의존하는 코드에 유용합니다 . 최고 수준 작게하다 옵션의 경우 &lt;code&gt;keep_classnames&lt;/code&gt; 이 되어 &lt;code&gt;undefined&lt;/code&gt; 는 최상위 레벨 작게하다 옵션의 값을 오버라이드 (override) 할 것이다 &lt;code&gt;keep_fnames&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bfcb714bae2ed57b0dd27698268eb08cb5119be" translate="yes" xml:space="preserve">
          <source>Enable stack traces in the logging output for errors, warnings and traces. Set &lt;code&gt;stats.loggingTrace&lt;/code&gt; to hide the trace.</source>
          <target state="translated">Enable stack traces in the logging output for errors, warnings and traces. Set &lt;code&gt;stats.loggingTrace&lt;/code&gt; to hide the trace.</target>
        </trans-unit>
        <trans-unit id="1bae92de88ada11a7e72755cb1c1a4fc1dd85128" translate="yes" xml:space="preserve">
          <source>Enable top level variable and function name mangling and to drop unused variables and functions</source>
          <target state="translated">최상위 변수 및 함수 이름을 관리하고 사용하지 않는 변수 및 함수를 삭제</target>
        </trans-unit>
        <trans-unit id="2d9c6e694590db0844088d0f0879920d01a6e58e" translate="yes" xml:space="preserve">
          <source>Enable webpack's &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; feature:</source>
          <target state="translated">Enable webpack's &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; feature:</target>
        </trans-unit>
        <trans-unit id="ec4889ff451a09e59f04fd5c3ebd66cb5e3a7d18" translate="yes" xml:space="preserve">
          <source>Enable webpack's Hot Module Replacement feature:</source>
          <target state="translated">웹팩의 핫 모듈 교체 기능을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="4cda3ae97443aec99989d8cf812b0dc7a81c9cbf" translate="yes" xml:space="preserve">
          <source>Enable work around Safari 10/11 bugs in loop scoping and &lt;code&gt;await&lt;/code&gt;</source>
          <target state="translated">루프 범위 지정에서 Safari 10/11 버그를 해결하고 &lt;code&gt;await&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f90d4ecf9f6523db071efcfe052d0ce44767facc" translate="yes" xml:space="preserve">
          <source>Enable/Disable &lt;code&gt;url()&lt;/code&gt; handling</source>
          <target state="translated">&lt;code&gt;url()&lt;/code&gt; 처리 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="b19da246b5273011e57b877055400e028428254e" translate="yes" xml:space="preserve">
          <source>Enable/Disable @import handling</source>
          <target state="translated">@import 처리 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="ac1a7303d7e9b4b2b306d2c12d6266c1c9fae17e" translate="yes" xml:space="preserve">
          <source>Enable/Disable CSS Modules</source>
          <target state="translated">CSS 모듈 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="068efc2310cdc82bb3217761baa30fb2b62c199c" translate="yes" xml:space="preserve">
          <source>Enable/Disable Sourcemaps</source>
          <target state="translated">소스 맵 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="bede32266255c66e06af512ce794ee775255e025" translate="yes" xml:space="preserve">
          <source>Enable/Disable source map loading</source>
          <target state="translated">소스 맵 로딩 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="8579110d9fc20d3eeec81a24c43c924f97e94431" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;code&gt;@import&lt;/code&gt; resolving.</source>
          <target state="translated">Enable/disable &lt;code&gt;@import&lt;/code&gt; resolving.</target>
        </trans-unit>
        <trans-unit id="aaaf631a66826a4f02f865d0b5b3ee95ee6487f3" translate="yes" xml:space="preserve">
          <source>Enable/disable &lt;code&gt;url()&lt;/code&gt; resolving.</source>
          <target state="translated">Enable/disable &lt;code&gt;url()&lt;/code&gt; resolving.</target>
        </trans-unit>
        <trans-unit id="29b7dd7de825dfda0d6bcec7a4bcb563c33c1d62" translate="yes" xml:space="preserve">
          <source>Enable/disable ES modules syntax</source>
          <target state="translated">ES 모듈 구문 활성화 / 비활성화</target>
        </trans-unit>
        <trans-unit id="a4d208e2490b9ef8d75c13b9a0e81e38ba92b580" translate="yes" xml:space="preserve">
          <source>Enable/disable Hot Module Replacement (HMR), if disabled no HMR Code will be added (good for non local development/production)</source>
          <target state="translated">HMR (핫 모듈 교체) 활성화 / 비활성화, 비활성화 된 경우 HMR 코드가 추가되지 않음 (비 로컬 개발 / 생산에 적합)</target>
        </trans-unit>
        <trans-unit id="ee4339076f3a9f38ef5e025db808b085e7483dfe" translate="yes" xml:space="preserve">
          <source>Enable/disable Hot Module Replacement (HMR), if disabled no HMR Code will be added. This could be used for non local development and production.</source>
          <target state="translated">핫 모듈 교체 (HMR)를 활성화 / 비활성화합니다. 비활성화 된 경우 HMR 코드가 추가되지 않습니다. 이것은 비 로컬 개발 및 생산에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63c2a7c3fe679d0b0b5eb373abd4c55edc6fa37c" translate="yes" xml:space="preserve">
          <source>Enable/disable and configure caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/copy-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">Enable/disable and configure caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/copy-webpack-plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a745e4cafa6fb7693ca7a237ef79e42d536e8b3c" translate="yes" xml:space="preserve">
          <source>Enable/disable extracting comments.</source>
          <target state="translated">주석 추출을 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ccaa3a52fe2e4306d09e3d52bf59a1bd3d36c0d6" translate="yes" xml:space="preserve">
          <source>Enable/disable features in production/development build using &lt;a href=&quot;https://en.wikipedia.org/wiki/Feature_toggle&quot;&gt;feature flags&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Feature_toggle&quot;&gt;기능 플래그를&lt;/a&gt; 사용하여 프로덕션 / 개발 빌드에서 기능을 활성화 / 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="1cafb67624bd8a1c211e0f9fe1087b1953749c74" translate="yes" xml:space="preserve">
          <source>Enable/disable file caching.</source>
          <target state="translated">파일 캐싱을 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="10570a32a6f182e670bff5a780b3864bc5fe206f" translate="yes" xml:space="preserve">
          <source>Enable/disable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/image-minimizer-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">Enable/disable file caching. Default path to cache directory: &lt;code&gt;node_modules/.cache/image-minimizer-webpack-plugin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb33764677d743ac23ce0ae7e3593ba94c8d34b7" translate="yes" xml:space="preserve">
          <source>Enable/disable multi-process parallel running.</source>
          <target state="translated">다중 프로세스 병렬 실행을 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9e569debc47ed458754766ce5151054ae80b9569" translate="yes" xml:space="preserve">
          <source>Enables &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt;</source>
          <target state="translated">가능 &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;핫 모듈 교체&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2944bb66e757530d2d4214c4d16d806ca53c5809" translate="yes" xml:space="preserve">
          <source>Enables &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt;, otherwise known as HMR.</source>
          <target state="translated">HMR이라고도하는 &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;핫 모듈 교체를&lt;/a&gt; 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="75af5f364363a177676d09764b7b44dfd13047d0" translate="yes" xml:space="preserve">
          <source>Enables &lt;code&gt;transform&lt;/code&gt; caching and setup cache directory and invalidation keys.</source>
          <target state="translated">Enables &lt;code&gt;transform&lt;/code&gt; caching and setup cache directory and invalidation keys.</target>
        </trans-unit>
        <trans-unit id="ed648ce0129b14f176a94ebc3820833624f76dea" translate="yes" xml:space="preserve">
          <source>Enables &lt;code&gt;transform&lt;/code&gt; caching and setup cache directory.</source>
          <target state="translated">Enables &lt;code&gt;transform&lt;/code&gt; caching and setup cache directory.</target>
        </trans-unit>
        <trans-unit id="819414dd148696122ace020d693d1dcf71bea911" translate="yes" xml:space="preserve">
          <source>Enables Hot Module Replacement</source>
          <target state="translated">Enables Hot Module Replacement</target>
        </trans-unit>
        <trans-unit id="99bbe6af5fcd676c23bc02ae555fdd4f8428dcea" translate="yes" xml:space="preserve">
          <source>Enables Hot Module Replacement (see &lt;a href=&quot;#devserver-hot&quot;&gt;&lt;code&gt;devServer.hot&lt;/code&gt;&lt;/a&gt;) without page refresh as fallback in case of build failures.</source>
          <target state="translated">빌드 실패시 페이지를 새로 고치지 않고 핫 모듈 교체 ( &lt;a href=&quot;#devserver-hot&quot;&gt; &lt;code&gt;devServer.hot&lt;/code&gt; &lt;/a&gt; 참조 )를 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="9b0ec4b2dda75abf05358f775c885d045c55f20d" translate="yes" xml:space="preserve">
          <source>Enables Hot Module Replacement (see &lt;a href=&quot;#devserverhot&quot;&gt;&lt;code&gt;devServer.hot&lt;/code&gt;&lt;/a&gt;) without page refresh as a fallback in case of build failures.</source>
          <target state="translated">Enables Hot Module Replacement (see &lt;a href=&quot;#devserverhot&quot;&gt; &lt;code&gt;devServer.hot&lt;/code&gt; &lt;/a&gt;) without page refresh as a fallback in case of build failures.</target>
        </trans-unit>
        <trans-unit id="4b935532ee92b49fc59a5a3468cbf7658ac3d3df" translate="yes" xml:space="preserve">
          <source>Enables a more fine grained control of eval source maps</source>
          <target state="translated">평가 소스 맵을보다 세밀하게 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="52921b94a3f1abcd4b5fff9a9d673f911a2ed798" translate="yes" xml:space="preserve">
          <source>Enables a more fine grained control of source maps</source>
          <target state="translated">소스 맵을보다 세밀하게 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="448f1790f506c65777ede1788731ac238847d8db" translate="yes" xml:space="preserve">
          <source>Enables control of the version of UglifyJS in your project</source>
          <target state="translated">프로젝트에서 UglifyJS 버전을 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="774522b615eaba60eae65e1e9bad5a1fb1e6a8cf" translate="yes" xml:space="preserve">
          <source>Enables labeled modules [Uses LabeledModulesPlugin]</source>
          <target state="translated">레이블이있는 모듈을 사용함 [LabeledModulesPlugin 사용]</target>
        </trans-unit>
        <trans-unit id="62eeaec02a2f53090995e3638181be4770b85914" translate="yes" xml:space="preserve">
          <source>Enables line to line mapping for all or some modules. This produces a simple source map where each line of the generated source is mapped to the same line of the original source. This is a performance optimization and should only be used if all input lines match generated lines.</source>
          <target state="translated">모든 또는 일부 모듈에 대한 라인 대 라인 매핑을 활성화합니다. 생성 된 소스의 각 라인이 원래 소스의 동일한 라인에 매핑되는 간단한 소스 맵이 생성됩니다. 이것은 성능 최적화이며 모든 입력 라인이 생성 된 라인과 일치하는 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b64c6ec0805681aa84397a0992a6122b1055a9cc" translate="yes" xml:space="preserve">
          <source>Enables loading gzipped resources.</source>
          <target state="translated">gzipped 자원을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="096d29623e2edd31dfa0e832ff99891449c46bdb" translate="yes" xml:space="preserve">
          <source>Enables source map support, &lt;code&gt;postcss-loader&lt;/code&gt; will use the previous source map given by other loaders and update it accordingly, if no previous loader is applied before &lt;code&gt;postcss-loader&lt;/code&gt;, the loader will generate a source map for you.</source>
          <target state="translated">소스지도 지원 가능 &lt;code&gt;postcss-loader&lt;/code&gt; 다른 로더에 의해 주어진 이전 소스 맵을 사용하고 더 이전 로더가 전에 적용되지 않는 경우, 그에 따라 업데이트됩니다 &lt;code&gt;postcss-loader&lt;/code&gt; , 로더는 당신을위한 소스 맵을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="972756bf688f635a24d36103b1f2393e3869778c" translate="yes" xml:space="preserve">
          <source>Enables/Disable &lt;code&gt;transform&lt;/code&gt; caching.</source>
          <target state="translated">Enables/Disable &lt;code&gt;transform&lt;/code&gt; caching.</target>
        </trans-unit>
        <trans-unit id="4366d88af03c722b1162cc4c858185ccedd14f7e" translate="yes" xml:space="preserve">
          <source>Enables/Disables &lt;code&gt;@import&lt;/code&gt; at-rules handling</source>
          <target state="translated">Enables/Disables &lt;code&gt;@import&lt;/code&gt; at-rules handling</target>
        </trans-unit>
        <trans-unit id="07fd7438419acbc23ed426f0cb33ee1135d522c6" translate="yes" xml:space="preserve">
          <source>Enables/Disables &lt;code&gt;@import&lt;/code&gt; at-rules handling. Control &lt;code&gt;@import&lt;/code&gt; resolving. Absolute urls in &lt;code&gt;@import&lt;/code&gt; will be moved in runtime code.</source>
          <target state="translated">Enables/Disables &lt;code&gt;@import&lt;/code&gt; at-rules handling. Control &lt;code&gt;@import&lt;/code&gt; resolving. Absolute urls in &lt;code&gt;@import&lt;/code&gt; will be moved in runtime code.</target>
        </trans-unit>
        <trans-unit id="58723967e6f3dc4fbdfd3e1087dbef2a3d30a0b8" translate="yes" xml:space="preserve">
          <source>Enables/Disables &lt;code&gt;url&lt;/code&gt;/&lt;code&gt;image-set&lt;/code&gt; functions handling</source>
          <target state="translated">Enables/Disables &lt;code&gt;url&lt;/code&gt; / &lt;code&gt;image-set&lt;/code&gt; functions handling</target>
        </trans-unit>
        <trans-unit id="bfca1c20f7acbd0805569987a69cd4ddc2f0313d" translate="yes" xml:space="preserve">
          <source>Enables/Disables &lt;code&gt;url&lt;/code&gt;/&lt;code&gt;image-set&lt;/code&gt; functions handling. Control &lt;code&gt;url()&lt;/code&gt; resolving. Absolute URLs are not resolving.</source>
          <target state="translated">Enables/Disables &lt;code&gt;url&lt;/code&gt; / &lt;code&gt;image-set&lt;/code&gt; functions handling. Control &lt;code&gt;url()&lt;/code&gt; resolving. Absolute URLs are not resolving.</target>
        </trans-unit>
        <trans-unit id="d6ab0d091de009b61340e5f0edbd1f7adab6fbbe" translate="yes" xml:space="preserve">
          <source>Enables/Disables &lt;code&gt;url&lt;/code&gt;/&lt;code&gt;image-set&lt;/code&gt; functions handling. Control &lt;code&gt;url()&lt;/code&gt; resolving. Absolute paths and root-relative URLs now resolving(Version &lt;a href=&quot;https://github.com/webpack-contrib/css-loader/blob/master/CHANGELOG.md#400-2020-07-25&quot;&gt;4.0.0&lt;/a&gt; and above).</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; / &lt;code&gt;image-set&lt;/code&gt; 기능 처리를 활성화 / 비활성화합니다 . 제어 &lt;code&gt;url()&lt;/code&gt; 확인. 이제 절대 경로 및 루트 상대 URL이 확인됩니다 (버전 &lt;a href=&quot;https://github.com/webpack-contrib/css-loader/blob/master/CHANGELOG.md#400-2020-07-25&quot;&gt;4.0.0&lt;/a&gt; 이상).</target>
        </trans-unit>
        <trans-unit id="425ad7d81e7541a2b8df7ff5ed16c749b3436ebb" translate="yes" xml:space="preserve">
          <source>Enables/Disables CSS Modules and their configuration</source>
          <target state="translated">Enables/Disables CSS Modules and their configuration</target>
        </trans-unit>
        <trans-unit id="e3759b9af49f89d1db445ef77bdbb34a6858c32b" translate="yes" xml:space="preserve">
          <source>Enables/Disables CSS Modules and their configuration.</source>
          <target state="translated">Enables/Disables CSS Modules and their configuration.</target>
        </trans-unit>
        <trans-unit id="e3a3fa457178f28c15950478581d0cda1840dad8" translate="yes" xml:space="preserve">
          <source>Enables/Disables attributes handling</source>
          <target state="translated">Enables/Disables attributes handling</target>
        </trans-unit>
        <trans-unit id="3c17b5b897646fee071c10d30d9193fc26574429" translate="yes" xml:space="preserve">
          <source>Enables/Disables autoloading config.</source>
          <target state="translated">Enables/Disables autoloading config.</target>
        </trans-unit>
        <trans-unit id="c6e3feab8b394bee2ca4ca7780094ae81f0d6a1d" translate="yes" xml:space="preserve">
          <source>Enables/Disables colors on the console [default: (supports-color)]</source>
          <target state="translated">콘솔에서 색상을 활성화 / 비활성화합니다 [기본값 : (지원 색상)]</target>
        </trans-unit>
        <trans-unit id="8b88eb6d9a03b9d45854d4ea56e7672571ac3030" translate="yes" xml:space="preserve">
          <source>Enables/Disables colors on the console.</source>
          <target state="translated">콘솔에서 색상을 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="23a853f1dbe1cc96d9170821128a3e8c54620eb5" translate="yes" xml:space="preserve">
          <source>Enables/Disables generation of source maps</source>
          <target state="translated">Enables/Disables generation of source maps</target>
        </trans-unit>
        <trans-unit id="7898cacf946fe08b2ac8cb0adaaa3b0030ee2eba" translate="yes" xml:space="preserve">
          <source>Enables/Disables generation of source maps.</source>
          <target state="translated">Enables/Disables generation of source maps.</target>
        </trans-unit>
        <trans-unit id="e6fa40f148152a4beb953b148bce0e2b8acb5b53" translate="yes" xml:space="preserve">
          <source>Enables/Disables or setups number of loaders applied before CSS loader</source>
          <target state="translated">Enables/Disables or setups number of loaders applied before CSS loader</target>
        </trans-unit>
        <trans-unit id="484e84b23741a91da7bae2159efb6bf973c850f9" translate="yes" xml:space="preserve">
          <source>Enables/Disables or setups number of loaders applied before CSS loader.</source>
          <target state="translated">Enables/Disables or setups number of loaders applied before CSS loader.</target>
        </trans-unit>
        <trans-unit id="7be91066528aeecf7936cb3f5df0eb5adc9f462c" translate="yes" xml:space="preserve">
          <source>Enables/Disables sources handling</source>
          <target state="translated">소스 처리를 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b97ef9487087fb228560e2d60e769dcf5b23983f" translate="yes" xml:space="preserve">
          <source>Enables/Disables the default &lt;code&gt;webpack&lt;/code&gt; importer.</source>
          <target state="translated">기본 &lt;code&gt;webpack&lt;/code&gt; 임포터를 활성화 / 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="2c4d2caec58710e70d56d43fffc0bdfb6efa31be" translate="yes" xml:space="preserve">
          <source>Enables/Disables the default Webpack importer.</source>
          <target state="translated">Enables/Disables the default Webpack importer.</target>
        </trans-unit>
        <trans-unit id="d9ff3409e7eb328cfc139398258f85aa5d20c65e" translate="yes" xml:space="preserve">
          <source>Enables/disables ES modules named export for locals.</source>
          <target state="translated">Enables/disables ES modules named export for locals.</target>
        </trans-unit>
        <trans-unit id="b8e5fb62c5f3c4b39097cd5ed214f52c3106727c" translate="yes" xml:space="preserve">
          <source>Enabling CSP</source>
          <target state="translated">CSP 활성화</target>
        </trans-unit>
        <trans-unit id="1af4b0952000148342363a144deab067c5b4b358" translate="yes" xml:space="preserve">
          <source>Enabling HMR</source>
          <target state="translated">HMR 활성화</target>
        </trans-unit>
        <trans-unit id="75289da4414c0ef07bec496e68bbb798ef95e283" translate="yes" xml:space="preserve">
          <source>Enabling HMR is easy and in most cases no options are necessary.</source>
          <target state="translated">HMR을 사용하는 것은 쉽고 대부분의 경우 옵션이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b08deabf77a06a99389b7c449ea2bf6af4d93e10" translate="yes" xml:space="preserve">
          <source>Enabling Source Maps</source>
          <target state="translated">소스 맵 활성화</target>
        </trans-unit>
        <trans-unit id="c25e67b719818f7a5a06df32763502ceb6389ecb" translate="yes" xml:space="preserve">
          <source>Ensure no compilers transform your ES2015 module syntax into CommonJS modules (this is the default behavior of the popular Babel preset @babel/preset-env - see the &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env#modules&quot;&gt;documentation&lt;/a&gt; for more details).</source>
          <target state="translated">Ensure no compilers transform your ES2015 module syntax into CommonJS modules (this is the default behavior of the popular Babel preset @babel/preset-env - see the &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env#modules&quot;&gt;documentation&lt;/a&gt; for more details).</target>
        </trans-unit>
        <trans-unit id="976114c02db3f48cc7e5245798f027cb682cd115" translate="yes" xml:space="preserve">
          <source>Ensure you have loaded the container before attempting to dynamically connect a remote container.</source>
          <target state="translated">Ensure you have loaded the container before attempting to dynamically connect a remote container.</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="421b4e80ba37861a1483fec4b92c8fa164e7e551" translate="yes" xml:space="preserve">
          <source>Entry Objects</source>
          <target state="translated">항목 개체</target>
        </trans-unit>
        <trans-unit id="19fca74dfa5e6733a9a1065a6c28d4fe20a673ba" translate="yes" xml:space="preserve">
          <source>Entry Points</source>
          <target state="translated">진입 점</target>
        </trans-unit>
        <trans-unit id="8456d00782cacf57c6502aa1e361d9d97477a7d7" translate="yes" xml:space="preserve">
          <source>Entry Points: Manually split code using &lt;a href=&quot;../configuration/entry-context&quot;&gt;&lt;code&gt;entry&lt;/code&gt;&lt;/a&gt; configuration.</source>
          <target state="translated">진입 점 : &lt;a href=&quot;../configuration/entry-context&quot;&gt; &lt;code&gt;entry&lt;/code&gt; &lt;/a&gt; 구성을 사용하여 코드를 수동으로 분할 합니다.</target>
        </trans-unit>
        <trans-unit id="768a1f2bc644721536ad777b0c05042bcf4153e6" translate="yes" xml:space="preserve">
          <source>Entry and Context</source>
          <target state="translated">입장과 맥락</target>
        </trans-unit>
        <trans-unit id="6274ade30f0ad1e76ac96acfb280b1a19615cc26" translate="yes" xml:space="preserve">
          <source>Entry dependencies</source>
          <target state="translated">Entry dependencies</target>
        </trans-unit>
        <trans-unit id="52d2db74183b04e87a13c198c05cc6f8f6ccc471" translate="yes" xml:space="preserve">
          <source>Entry descriptor</source>
          <target state="translated">Entry descriptor</target>
        </trans-unit>
        <trans-unit id="241eb69c3aba7e7c6362b6288f5f42d0294e6d7f" translate="yes" xml:space="preserve">
          <source>EntryDescription object</source>
          <target state="translated">EntryDescription 객체</target>
        </trans-unit>
        <trans-unit id="a5705bd86fc8a79252e552a68b3dcb904b85321b" translate="yes" xml:space="preserve">
          <source>EntryPlugin</source>
          <target state="translated">EntryPlugin</target>
        </trans-unit>
        <trans-unit id="d443a1185575c125d61e0af393b044d7b06ef572" translate="yes" xml:space="preserve">
          <source>Environment</source>
          <target state="translated">Environment</target>
        </trans-unit>
        <trans-unit id="9ad27b759de0ad89e186ac9524183f286093b62d" translate="yes" xml:space="preserve">
          <source>Environment Based</source>
          <target state="translated">환경 기반</target>
        </trans-unit>
        <trans-unit id="95e1752eccc38d5ee799e62cfff0d6c30ca5ac2d" translate="yes" xml:space="preserve">
          <source>Environment Options</source>
          <target state="translated">환경 옵션</target>
        </trans-unit>
        <trans-unit id="384a6e9623ee89d57bf379a1678db79477e198f0" translate="yes" xml:space="preserve">
          <source>Environment Variable</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="14203bbea6184f6c333c5dfd9251c3e2eb169f2e" translate="yes" xml:space="preserve">
          <source>Environment passed to the config, when it is a function</source>
          <target state="translated">환경이 환경 일 때 환경 설정으로 전달</target>
        </trans-unit>
        <trans-unit id="2b19c55ee72b7554699b2aef89945abfd2006a96" translate="yes" xml:space="preserve">
          <source>Environment passed to the configuration when it is a function</source>
          <target state="translated">Environment passed to the configuration when it is a function</target>
        </trans-unit>
        <trans-unit id="46685e442598cce3be43ba00742e300f8528c941" translate="yes" xml:space="preserve">
          <source>Environment passed to the configuration, when it is a function</source>
          <target state="translated">Environment passed to the configuration, when it is a function</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="8a5ff645eeabd7639910737608329030f384191e" translate="yes" xml:space="preserve">
          <source>EnvironmentPlugin</source>
          <target state="translated">EnvironmentPlugin</target>
        </trans-unit>
        <trans-unit id="09b6a6dcd3f6d4a7d3a95bceaad67a7f1800272f" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="translated">Equals</target>
        </trans-unit>
        <trans-unit id="a29b8a6474adb85d0d3a290efe4251502d695743" translate="yes" xml:space="preserve">
          <source>Equals the config option &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">구성 옵션 &lt;code&gt;debug&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="66508c67ac3ea596832d5b66f561b5eccb44d825" translate="yes" xml:space="preserve">
          <source>Equals the config options &lt;code&gt;output.publicPath&lt;/code&gt;.</source>
          <target state="translated">구성 옵션 &lt;code&gt;output.publicPath&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5e420064a03dafc86c372b43bf6d9cce2fa4b806" translate="yes" xml:space="preserve">
          <source>Equals the configuration option &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">Equals the configuration option &lt;code&gt;debug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5b9f7d321a9c49637a737aa0a333038b6b5ab8e" translate="yes" xml:space="preserve">
          <source>Equals the configuration option's &lt;code&gt;output.publicPath&lt;/code&gt;.</source>
          <target state="translated">Equals the configuration option's &lt;code&gt;output.publicPath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="753c5002c6b54759d98204a8260973033b1ae296" translate="yes" xml:space="preserve">
          <source>Error Reporting</source>
          <target state="translated">오류보고</target>
        </trans-unit>
        <trans-unit id="884cdbe9c52243ee368fcdc8d05bc4f66124ee46" translate="yes" xml:space="preserve">
          <source>Error when mixing conditions and paths</source>
          <target state="translated">조건 및 경로 혼합시 오류</target>
        </trans-unit>
        <trans-unit id="86cda2c86b1df72e0405859840bfd9930f6c569d" translate="yes" xml:space="preserve">
          <source>Error when not mapped</source>
          <target state="translated">매핑되지 않은 경우 오류</target>
        </trans-unit>
        <trans-unit id="501a4ce287829b001484cd18d6337e3991e8e08d" translate="yes" xml:space="preserve">
          <source>Errors and Warning</source>
          <target state="translated">오류 및 경고</target>
        </trans-unit>
        <trans-unit id="f564d1f5c7659e009b0094aad94e9c92291aa429" translate="yes" xml:space="preserve">
          <source>Errors and Warnings</source>
          <target state="translated">오류 및 경고</target>
        </trans-unit>
        <trans-unit id="d8773bb9c41ba5834b29eae64c958a46afe6b672" translate="yes" xml:space="preserve">
          <source>Errors and Warnings (if any)</source>
          <target state="translated">오류 및 경고 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="b528cc17aaab970836da58933fdd82d27c2f54ad" translate="yes" xml:space="preserve">
          <source>Errors from webpack</source>
          <target state="translated">Errors from webpack</target>
        </trans-unit>
        <trans-unit id="ad322253d3f95149010e0ca73f1dce186a711070" translate="yes" xml:space="preserve">
          <source>EslintWebpackPlugin</source>
          <target state="translated">EslintWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="3a9b6873d5a1053c6b2e6a40cd536d8f96a1ae6a" translate="yes" xml:space="preserve">
          <source>EvalDevToolModulePlugin</source>
          <target state="translated">EvalDevToolModulePlugin</target>
        </trans-unit>
        <trans-unit id="5c36122ed1df2ed7c037300256b8e185b269b6f3" translate="yes" xml:space="preserve">
          <source>EvalSourceMapDevToolPlugin</source>
          <target state="translated">EvalSourceMapDevToolPlugin</target>
        </trans-unit>
        <trans-unit id="5444d6349155021c66b40ba0a22caf8366746168" translate="yes" xml:space="preserve">
          <source>Evaluate a call to a member function of a successfully evaluated expression.</source>
          <target state="translated">성공적으로 평가 된 식의 멤버 함수에 대한 호출을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="ce5165dc75157c33f487946c4764f0c42ec65c79" translate="yes" xml:space="preserve">
          <source>Evaluate an expression.</source>
          <target state="translated">식을 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="cd86d24b94f221f194c44a1baf40bcc429b167cf" translate="yes" xml:space="preserve">
          <source>Evaluate an identifier that is a defined variable.</source>
          <target state="translated">정의 된 변수 인 식별자를 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="a7fb5d9ad6ff323c374cf439ab0a47911db29825" translate="yes" xml:space="preserve">
          <source>Evaluate an identifier that is a free variable.</source>
          <target state="translated">자유 변수 인 식별자를 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="571fdd4647a3dfb161f9006c12f7451dd03fc8bf" translate="yes" xml:space="preserve">
          <source>Evaluate the type of an identifier.</source>
          <target state="translated">식별자의 유형을 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="8ad48bfb5b8ba57c8bccd1e3766132dffdaccf75" translate="yes" xml:space="preserve">
          <source>Even if you only use a single function from lodash, you have to add the entire library and then squish it together. How do you treeshake the dependencies on your code? Lazy loading chunks of code can be hard to do at scale and requires a lot of manual work from the developer.</source>
          <target state="translated">Even if you only use a single function from lodash, you have to add the entire library and then squish it together. How do you treeshake the dependencies on your code? Lazy loading chunks of code can be hard to do at scale and requires a lot of manual work from the developer.</target>
        </trans-unit>
        <trans-unit id="01099e1f4d48c1729753fae569d77ab4f79b4e4a" translate="yes" xml:space="preserve">
          <source>Eventually you will find the need to disambiguate in your &lt;code&gt;webpack.config.js&lt;/code&gt; between &lt;a href=&quot;../guides/development&quot;&gt;development&lt;/a&gt; and &lt;a href=&quot;../guides/production&quot;&gt;production builds&lt;/a&gt;. You have (at least) two options:</source>
          <target state="translated">결국 &lt;a href=&quot;../guides/development&quot;&gt;개발&lt;/a&gt; 과 &lt;a href=&quot;../guides/production&quot;&gt;생산 빌드&lt;/a&gt; 사이 의 &lt;code&gt;webpack.config.js&lt;/code&gt; 에서 명확하게 할 필요가 있습니다. 최소한 두 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="54463d198feaf097127deaedff92e56e2a5580d9" translate="yes" xml:space="preserve">
          <source>Every dependency that matches the given regular expression will be excluded from the output bundles.</source>
          <target state="translated">주어진 정규식과 일치하는 모든 종속성은 출력 번들에서 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="545d684207b6c382eb09d2defa02e60f078b3f95" translate="yes" xml:space="preserve">
          <source>Every file used in your project is a &lt;a href=&quot;modules&quot;&gt;Module&lt;/a&gt;</source>
          <target state="translated">Every file used in your project is a &lt;a href=&quot;modules&quot;&gt;Module&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f89f151ed043d92830c461d679c8da6373daa36" translate="yes" xml:space="preserve">
          <source>Every filesystem access is cached so that multiple parallel or serial requests to the same file occur faster. In &lt;a href=&quot;../configuration/watch#watch&quot;&gt;watch mode&lt;/a&gt;, only modified files are evicted from the cache. If watch mode is off, then the cache gets purged before every compilation.</source>
          <target state="translated">Every filesystem access is cached so that multiple parallel or serial requests to the same file occur faster. In &lt;a href=&quot;../configuration/watch#watch&quot;&gt;watch mode&lt;/a&gt;, only modified files are evicted from the cache. If watch mode is off, then the cache gets purged before every compilation.</target>
        </trans-unit>
        <trans-unit id="ad3fb2d98fb3a3fda1f5b2371966925fce578275" translate="yes" xml:space="preserve">
          <source>Every filesystem access is cached, so that multiple parallel or serial requests to the same file occur faster. In &lt;a href=&quot;../configuration/watch#watch&quot;&gt;watch mode&lt;/a&gt;, only modified files are evicted from the cache. If watch mode is off, then the cache gets purged before every compilation.</source>
          <target state="translated">모든 파일 시스템 액세스는 캐시되므로 동일한 파일에 대한 여러 병렬 또는 직렬 요청이 더 빨리 발생합니다. 에서 &lt;a href=&quot;../configuration/watch#watch&quot;&gt;시계 모드&lt;/a&gt; 만 수정 된 파일이 캐시에서 제거된다. 감시 모드가 꺼져 있으면 모든 컴파일 전에 캐시가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="6e322ba270c8b9b641ca3ce7022880a6ebb21785" translate="yes" xml:space="preserve">
          <source>Every module also contains a list of &lt;code&gt;reasons&lt;/code&gt; objects describing why that module was included in the dependency graph. Each &quot;reason&quot; is similar to the &lt;code&gt;origins&lt;/code&gt; seen above in the &lt;a href=&quot;#chunk-objects&quot;&gt;chunk objects&lt;/a&gt; section:</source>
          <target state="translated">모든 모듈에는 해당 모듈이 종속성 그래프에 포함 된 이유를 설명하는 &lt;code&gt;reasons&lt;/code&gt; 개체 목록도 포함되어 있습니다 . 각 &quot;이유&quot;는 &lt;a href=&quot;#chunk-objects&quot;&gt;청크 개체&lt;/a&gt; 섹션 에서 위에서 본 &lt;code&gt;origins&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="e3f9e313ff5f768250c6be45ce43d7f476f10b2d" translate="yes" xml:space="preserve">
          <source>Every module that could potentially be requested on an &lt;code&gt;import()&lt;/code&gt; call is included. For example, &lt;code&gt;import(`./locale/${language}.json`)&lt;/code&gt; will cause every &lt;code&gt;.json&lt;/code&gt; file in the &lt;code&gt;./locale&lt;/code&gt; directory to be bundled into the new chunk. At run time, when the variable &lt;code&gt;language&lt;/code&gt; has been computed, any file like &lt;code&gt;english.json&lt;/code&gt; or &lt;code&gt;german.json&lt;/code&gt; will be available for consumption. Using the &lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt; options allows us to add regex patterns that reduce the files that webpack will bundle for this import.</source>
          <target state="translated">&lt;code&gt;import()&lt;/code&gt; 호출 에서 요청 될 수있는 모든 모듈 이 포함됩니다. 예를 들어 &lt;code&gt;import(`./locale/${language}.json`)&lt;/code&gt; 은 &lt;code&gt;./locale&lt;/code&gt; 디렉토리 의 모든 &lt;code&gt;.json&lt;/code&gt; 파일 이 새 청크에 번들되도록합니다. 런타임에 변수 &lt;code&gt;language&lt;/code&gt; 가 계산되면 &lt;code&gt;english.json&lt;/code&gt; 또는 &lt;code&gt;german.json&lt;/code&gt; 과 같은 파일을 사용할 수 있습니다. 은 Using &lt;code&gt;webpackInclude&lt;/code&gt; 및 &lt;code&gt;webpackExclude&lt;/code&gt; 옵션은 우리가 웹팩이 수입 번들 것이라는 파일을 감소 정규식 패턴을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07c4b83f6b1d25653aa67e2cae08fe8c1a4164ee" translate="yes" xml:space="preserve">
          <source>Everything that you specify in &lt;code&gt;from&lt;/code&gt; will be included in the result:</source>
          <target state="translated">Everything that you specify in &lt;code&gt;from&lt;/code&gt; will be included in the result:</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">실시 예 1</target>
        </trans-unit>
        <trans-unit id="8ef2e1210c47909b18d1b60b9c30a0116c39a246" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="translated">예 1 :</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">실시 예 2</target>
        </trans-unit>
        <trans-unit id="e11895e8b0e4fd9700bfd1eef21691b78b345f1b" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="translated">예 2 :</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">사용법 예</target>
        </trans-unit>
        <trans-unit id="caed331f02378875bdfa8b61bb2f26617e7a3c27" translate="yes" xml:space="preserve">
          <source>Example configuration:</source>
          <target state="translated">구성 예 :</target>
        </trans-unit>
        <trans-unit id="c620ab44f45011400b2ea858d5da3e81166c8195" translate="yes" xml:space="preserve">
          <source>Example for an &lt;code&gt;expr&lt;/code&gt; dynamic dependency: &lt;code&gt;require(expr)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; 동적 종속성의 예 : &lt;code&gt;require(expr)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cc88c63f365ab9c4cbc95ad29ce3f0c70961ff5" translate="yes" xml:space="preserve">
          <source>Example for an &lt;code&gt;unknown&lt;/code&gt; dynamic dependency: &lt;code&gt;require&lt;/code&gt;.</source>
          <target state="translated">의 예 &lt;code&gt;unknown&lt;/code&gt; 동적 의존성 : &lt;code&gt;require&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1024b031aecaafd3656af98faeedae791f2b8b92" translate="yes" xml:space="preserve">
          <source>Example for an &lt;code&gt;wrapped&lt;/code&gt; dynamic dependency: &lt;code&gt;require(&quot;./templates/&quot; + expr)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;wrapped&lt;/code&gt; 동적 종속성의 예 : &lt;code&gt;require(&quot;./templates/&quot; + expr)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4620d3ac4743105a9bf5ee0e695d2d44fbe93732" translate="yes" xml:space="preserve">
          <source>Example for an &lt;code&gt;wrapped&lt;/code&gt; dynamic dependency: &lt;code&gt;require('./templates/' + expr)&lt;/code&gt;.</source>
          <target state="translated">Example for an &lt;code&gt;wrapped&lt;/code&gt; dynamic dependency: &lt;code&gt;require('./templates/' + expr)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2daa60910ffd80700377a95e0af6a594fcb5849" translate="yes" xml:space="preserve">
          <source>Example map:</source>
          <target state="translated">Example map:</target>
        </trans-unit>
        <trans-unit id="61cb3b6fdf074dca4400a3effceffce8ff6ff5d5" translate="yes" xml:space="preserve">
          <source>Example of ignoring Moment Locales</source>
          <target state="translated">Example of ignoring Moment Locales</target>
        </trans-unit>
        <trans-unit id="0f038876a46e140f5dff39b3091638fc2ee4e0fd" translate="yes" xml:space="preserve">
          <source>Example shows how to build &lt;a href=&quot;https://www.npmjs.com/package/figlet&quot;&gt;&lt;code&gt;figlet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Example shows how to build &lt;a href=&quot;https://www.npmjs.com/package/figlet&quot;&gt; &lt;code&gt;figlet&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7d6a75f5ca5cb6e1a7bb1e4f581cfaefd1918290" translate="yes" xml:space="preserve">
          <source>Example shows how to build &lt;a href=&quot;https://www.npmjs.com/package/modernizr&quot;&gt;&lt;code&gt;modernizr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Example shows how to build &lt;a href=&quot;https://www.npmjs.com/package/modernizr&quot;&gt; &lt;code&gt;modernizr&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6561102a6d825ba1add0f4757182e588e86af4b9" translate="yes" xml:space="preserve">
          <source>Example to load chunks from alternate public path when one failed:</source>
          <target state="translated">하나가 실패했을 때 대체 공용 경로에서 청크를로드하는 예 :</target>
        </trans-unit>
        <trans-unit id="82fcdd045a9312715925e700f36000a82a50b154" translate="yes" xml:space="preserve">
          <source>Example values: &lt;code&gt;&quot;web&quot;&lt;/code&gt;, &lt;code&gt;&quot;node&quot;&lt;/code&gt;</source>
          <target state="translated">예제 값 : &lt;code&gt;&quot;web&quot;&lt;/code&gt; , &lt;code&gt;&quot;node&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6353a6d3ad0e61c72fed8f593918518ecf4d1edb" translate="yes" xml:space="preserve">
          <source>Example values: &lt;code&gt;'web'&lt;/code&gt;, &lt;code&gt;'node'&lt;/code&gt;</source>
          <target state="translated">Example values: &lt;code&gt;'web'&lt;/code&gt; , &lt;code&gt;'node'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8367b0bd7822ea1385dfc0eb0a7484279b09eab" translate="yes" xml:space="preserve">
          <source>Example where the &lt;code&gt;sass-loader&lt;/code&gt; loader uses the &lt;code&gt;node-sass&lt;/code&gt; implementation:</source>
          <target state="translated">Example where the &lt;code&gt;sass-loader&lt;/code&gt; loader uses the &lt;code&gt;node-sass&lt;/code&gt; implementation:</target>
        </trans-unit>
        <trans-unit id="57157282570fb5fe17a718d9b205eed7b22e3849" translate="yes" xml:space="preserve">
          <source>Example where the &lt;code&gt;sass-loader&lt;/code&gt; loader uses the &lt;code&gt;sass&lt;/code&gt; (&lt;code&gt;dart-sass&lt;/code&gt;) implementation:</source>
          <target state="translated">Example where the &lt;code&gt;sass-loader&lt;/code&gt; loader uses the &lt;code&gt;sass&lt;/code&gt; ( &lt;code&gt;dart-sass&lt;/code&gt; ) implementation:</target>
        </trans-unit>
        <trans-unit id="c0f5b4d363fd2178d9a8cf755383a7d3ff1af02f" translate="yes" xml:space="preserve">
          <source>Example with Locals (CSS Modules):</source>
          <target state="translated">Example with Locals (CSS Modules):</target>
        </trans-unit>
        <trans-unit id="90f712e46a44303d410222381bfe7b0eab9d2eb3" translate="yes" xml:space="preserve">
          <source>Example with publicPath option as a function:</source>
          <target state="translated">Example with publicPath option as a function:</target>
        </trans-unit>
        <trans-unit id="f9300d5a71454308eddd8201fdcadeb69ef35f33" translate="yes" xml:space="preserve">
          <source>Example with publicPath option as a string:</source>
          <target state="translated">Example with publicPath option as a string:</target>
        </trans-unit>
        <trans-unit id="29a218cef01795086b615b5dde55dfbe3456b482" translate="yes" xml:space="preserve">
          <source>Example, given we have the following folder structure including &lt;code&gt;.ejs&lt;/code&gt; files:</source>
          <target state="translated">Example, given we have the following folder structure including &lt;code&gt;.ejs&lt;/code&gt; files:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="2c717074614944e90e8f119ffdc966c5aaad3688" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;[\id\]&lt;/code&gt; generates &lt;code&gt;[id]&lt;/code&gt; instead of getting replaced with the &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Example: &lt;code&gt;[\id\]&lt;/code&gt; generates &lt;code&gt;[id]&lt;/code&gt; instead of getting replaced with the &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="874c48b936ceea12e3685715441645c219f3c83e" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;function(compilation) { return /html-webpack/.test(compilation.name); }&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;function(compilation) { return /html-webpack/.test(compilation.name); }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1f5f1b94526ea94378d58e4b7ff62188d3ff488" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;{ &quot;./a/&quot;: &quot;./x/&quot;, &quot;./a/b/&quot;: &quot;./y/&quot;, &quot;./a/b/c&quot;: &quot;./z&quot; }&lt;/code&gt; == &lt;code&gt;{ &quot;./a/b/c&quot;: &quot;./z&quot;, &quot;./a/b/&quot;: &quot;./y/&quot;, &quot;./a/&quot;: &quot;./x/&quot; }&lt;/code&gt; (order will always be: &lt;code&gt;./a/b/c&lt;/code&gt; &amp;gt; &lt;code&gt;./a/b/&lt;/code&gt; &amp;gt; &lt;code&gt;./a/&lt;/code&gt;)</source>
          <target state="translated">Example: &lt;code&gt;{ &quot;./a/&quot;: &quot;./x/&quot;, &quot;./a/b/&quot;: &quot;./y/&quot;, &quot;./a/b/c&quot;: &quot;./z&quot; }&lt;/code&gt; == &lt;code&gt;{ &quot;./a/b/c&quot;: &quot;./z&quot;, &quot;./a/b/&quot;: &quot;./y/&quot;, &quot;./a/&quot;: &quot;./x/&quot; }&lt;/code&gt; (order will always be: &lt;code&gt;./a/b/c&lt;/code&gt; &amp;gt; &lt;code&gt;./a/b/&lt;/code&gt; &amp;gt; &lt;code&gt;./a/&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bc82ff7e6c8972772d7492cd24b313b690d737bf" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;{ &quot;red&quot;: &quot;./stop.js&quot;, &quot;green&quot;: &quot;./drive.js&quot; }&lt;/code&gt; != &lt;code&gt;{ &quot;green&quot;: &quot;./drive.js&quot;, &quot;red&quot;: &quot;./stop.js&quot; }&lt;/code&gt; (when both &lt;code&gt;red&lt;/code&gt; and &lt;code&gt;green&lt;/code&gt; conditions are set, first property will be used)</source>
          <target state="translated">Example: &lt;code&gt;{ &quot;red&quot;: &quot;./stop.js&quot;, &quot;green&quot;: &quot;./drive.js&quot; }&lt;/code&gt; != &lt;code&gt;{ &quot;green&quot;: &quot;./drive.js&quot;, &quot;red&quot;: &quot;./stop.js&quot; }&lt;/code&gt; (when both &lt;code&gt;red&lt;/code&gt; and &lt;code&gt;green&lt;/code&gt; conditions are set, first property will be used)</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="a50190f4c8a46cf664c7222a572e9d8f9e0dbc69" translate="yes" xml:space="preserve">
          <source>Examples of Config Files</source>
          <target state="translated">Examples of Config Files</target>
        </trans-unit>
        <trans-unit id="1c4fefa28c307528a6836ed85d6cf73cffbfecce" translate="yes" xml:space="preserve">
          <source>Examples of how to get and use webpack logger in loaders and plugins</source>
          <target state="translated">Examples of how to get and use webpack logger in loaders and plugins</target>
        </trans-unit>
        <trans-unit id="f5746029c238c7f1cb4cc5959516c2fe5f23cf3e" translate="yes" xml:space="preserve">
          <source>Examples resolutions:</source>
          <target state="translated">Examples resolutions:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="95b4d68b1da34929f231b2731038a253d8960829" translate="yes" xml:space="preserve">
          <source>Examples: &lt;code&gt;example-corp:beta&lt;/code&gt;, &lt;code&gt;google:internal&lt;/code&gt;, `</source>
          <target state="translated">Examples: &lt;code&gt;example-corp:beta&lt;/code&gt; , &lt;code&gt;google:internal&lt;/code&gt; , `</target>
        </trans-unit>
        <trans-unit id="2d6605d70cd1584a6cb3e7a76c0209c8ebcee7ea" translate="yes" xml:space="preserve">
          <source>Exclude Vendor Maps</source>
          <target state="translated">공급 업체 맵 제외</target>
        </trans-unit>
        <trans-unit id="b94033fe814d518d172073912686a2a045b3bcae" translate="yes" xml:space="preserve">
          <source>Exclude all assets matching any of these conditions</source>
          <target state="translated">Exclude all assets matching any of these conditions</target>
        </trans-unit>
        <trans-unit id="bf68ed322cd5b04fc78037eface66329d48fabdd" translate="yes" xml:space="preserve">
          <source>Exclude all assets matching any of these conditions.</source>
          <target state="translated">Exclude all assets matching any of these conditions.</target>
        </trans-unit>
        <trans-unit id="7c725f54a2142f9c98a766b90f69c6255b7add5c" translate="yes" xml:space="preserve">
          <source>Exclude all modules matching any of these conditions. If you supply a &lt;code&gt;Rule.exclude&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#ruleresource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.exclude&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Exclude all modules matching any of these conditions. If you supply a &lt;code&gt;Rule.exclude&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt; . See &lt;a href=&quot;#ruleresource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.exclude&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="46a4e07ef9dc3a439ffc4570b07d1fd85adf1503" translate="yes" xml:space="preserve">
          <source>Exclude certain modules from bundles</source>
          <target state="translated">번들에서 특정 모듈 제외</target>
        </trans-unit>
        <trans-unit id="97404d7c81b94bcc148e783ee0841ad2c22cad3d" translate="yes" xml:space="preserve">
          <source>Exclude libraries that should not be transpiled</source>
          <target state="translated">Exclude libraries that should not be transpiled</target>
        </trans-unit>
        <trans-unit id="a4243eefba0eb21fb5765ab0519871934936c9de" translate="yes" xml:space="preserve">
          <source>Exclude modules in the output</source>
          <target state="translated">출력에서 모듈 제외</target>
        </trans-unit>
        <trans-unit id="1d07e1b735f2c540d0c3fd11e242e58af545ea94" translate="yes" xml:space="preserve">
          <source>Execute some code fragment like a module. See &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/1268#issuecomment-313513988&quot;&gt;this comment&lt;/a&gt; for a replacement method if needed.</source>
          <target state="translated">모듈과 같은 일부 코드 조각을 실행하십시오. 필요한 경우 교체 방법에 대해서는 &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/1268#issuecomment-313513988&quot;&gt;이 설명&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="74cc9a7d382d1aefc1e9db287525b2909389f19b" translate="yes" xml:space="preserve">
          <source>Executed after setting up a child compiler.</source>
          <target state="translated">Executed after setting up a child compiler.</target>
        </trans-unit>
        <trans-unit id="34f87f03d19fbce6b6a5755b7c9c1af45bb73544" translate="yes" xml:space="preserve">
          <source>Executed before assigning an &lt;code&gt;id&lt;/code&gt; to each chunk.</source>
          <target state="translated">Executed before assigning an &lt;code&gt;id&lt;/code&gt; to each chunk.</target>
        </trans-unit>
        <trans-unit id="b7944055ed20e829018cdb9b891026782b8dbb9c" translate="yes" xml:space="preserve">
          <source>Executed before assigning an &lt;code&gt;id&lt;/code&gt; to each module.</source>
          <target state="translated">Executed before assigning an &lt;code&gt;id&lt;/code&gt; to each module.</target>
        </trans-unit>
        <trans-unit id="d3ea0fea77e66b1b8a65415abc746126f0cb9877" translate="yes" xml:space="preserve">
          <source>Executed before creating the chunks assets.</source>
          <target state="translated">Executed before creating the chunks assets.</target>
        </trans-unit>
        <trans-unit id="8a175b4b8373093004fe450b0bf49724527cca0d" translate="yes" xml:space="preserve">
          <source>Executed before emitting the &lt;code&gt;compilation&lt;/code&gt; event (see below).</source>
          <target state="translated">&lt;code&gt;compilation&lt;/code&gt; 이벤트를 생성 하기 전에 실행됩니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="aeb6b12cdaa36187a3b403b51df05b684bb0dc3c" translate="yes" xml:space="preserve">
          <source>Executed before finishing the compilation.</source>
          <target state="translated">Executed before finishing the compilation.</target>
        </trans-unit>
        <trans-unit id="bc7a37fea4afe843c822c5b0db5ea0db13e619ac" translate="yes" xml:space="preserve">
          <source>Executed before module assets creation.</source>
          <target state="translated">Executed before module assets creation.</target>
        </trans-unit>
        <trans-unit id="c63818a2a72956b4028660ed1279e86648555e42" translate="yes" xml:space="preserve">
          <source>Executed right after &lt;code&gt;needAdditionalSeal&lt;/code&gt;.</source>
          <target state="translated">Executed right after &lt;code&gt;needAdditionalSeal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="025a95e359038f476014d5b2a6899f14bef2c80e" translate="yes" xml:space="preserve">
          <source>Executed right before emitting assets to output dir.</source>
          <target state="translated">Executed right before emitting assets to output dir.</target>
        </trans-unit>
        <trans-unit id="3dd464f4b30347e65baf1a6da7f37965c4293704" translate="yes" xml:space="preserve">
          <source>Executed when a module has been built successfully.</source>
          <target state="translated">모듈이 성공적으로 빌드되면 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="53036ab09d0f972b8c3f8228306a7546763d3eb1" translate="yes" xml:space="preserve">
          <source>Executed when a module has been rebuilt, in case of both success or with errors.</source>
          <target state="translated">Executed when a module has been rebuilt, in case of both success or with errors.</target>
        </trans-unit>
        <trans-unit id="ddd24fb9c842cc77495a411ae9521dcfe0e677e4" translate="yes" xml:space="preserve">
          <source>Executed when a watching compilation has been invalidated.</source>
          <target state="translated">Executed when a watching compilation has been invalidated.</target>
        </trans-unit>
        <trans-unit id="ff003c3318294deffe7ec67a54b56dd8c564b8f8" translate="yes" xml:space="preserve">
          <source>Executed when an asset has been emitted. Provides access to information about the emitted asset, such as its output path and byte content.</source>
          <target state="translated">Executed when an asset has been emitted. Provides access to information about the emitted asset, such as its output path and byte content.</target>
        </trans-unit>
        <trans-unit id="37717065163ae6ab607bc38d6b2f9fce58cd262e" translate="yes" xml:space="preserve">
          <source>Executed when parsing a &lt;code&gt;MemberExpression&lt;/code&gt;.</source>
          <target state="translated">Executed when parsing a &lt;code&gt;MemberExpression&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0d40ac029911c2c6d7f9a4ad5042733133862b5" translate="yes" xml:space="preserve">
          <source>Executed when the compilation has completed.</source>
          <target state="translated">Executed when the compilation has completed.</target>
        </trans-unit>
        <trans-unit id="f3da77f60259b9a63209622fd8df49d98a03bd27" translate="yes" xml:space="preserve">
          <source>Executed while initializing the compilation, right before emitting the &lt;code&gt;compilation&lt;/code&gt; event.</source>
          <target state="translated">Executed while initializing the compilation, right before emitting the &lt;code&gt;compilation&lt;/code&gt; event.</target>
        </trans-unit>
        <trans-unit id="06131f72129e0b2511c3fff0516a39a88c63c7a6" translate="yes" xml:space="preserve">
          <source>Executes JS script once in global context.</source>
          <target state="translated">전역 컨텍스트에서 JS 스크립트를 한 번 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f8c186ee40b7fabf2679513f83649d85ad03242a" translate="yes" xml:space="preserve">
          <source>Executes a plugin a environment setup is complete.</source>
          <target state="translated">환경 설정이 완료된 플러그인을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="bf0a522b2efe3bd631de533756b9f72734730d24" translate="yes" xml:space="preserve">
          <source>Executes a plugin after &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;the &lt;code&gt;entry&lt;/code&gt; configuration&lt;/a&gt; from webpack options has been processed.</source>
          <target state="translated">webpack 옵션 &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;의 &lt;code&gt;entry&lt;/code&gt; 구성&lt;/a&gt; 이 처리 된 후 플러그인을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="d2769c054b406ddd5b3d8758ee96b20633d57a25" translate="yes" xml:space="preserve">
          <source>Executes a plugin after compilation parameters are created.</source>
          <target state="translated">컴파일 매개 변수가 작성된 후 플러그인을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d7d5011b30571461a27f7858bc3cd14e30c07254" translate="yes" xml:space="preserve">
          <source>Executes a plugin after resolver setup is complete.</source>
          <target state="translated">리졸버 설정이 완료된 후 플러그인을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="10be817b6f02f0f6ac69999d8a75a390374a8453" translate="yes" xml:space="preserve">
          <source>Executes a plugin during watch mode after a new compilation is triggered but before the compilation is actually started.</source>
          <target state="translated">새 컴파일이 트리거 된 후 컴파일이 실제로 시작되기 전에 감시 모드 동안 플러그인을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6d9d19533b0fbf724f69a3d7a99a413b54990645" translate="yes" xml:space="preserve">
          <source>Exit Code</source>
          <target state="translated">종료 코드</target>
        </trans-unit>
        <trans-unit id="71b2ce9e186ee8954d970d48ada3581fae54f676" translate="yes" xml:space="preserve">
          <source>Exit codes and their meanings</source>
          <target state="translated">Exit codes and their meanings</target>
        </trans-unit>
        <trans-unit id="86a98fb0b982d54c5e694b3971a7a758a96cdb39" translate="yes" xml:space="preserve">
          <source>Exit the process when stdin is closed</source>
          <target state="translated">stdin이 닫히면 프로세스를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="e8f296b5904f0e5362e5608c2262901d2f206e0a" translate="yes" xml:space="preserve">
          <source>Experiments</source>
          <target state="translated">Experiments</target>
        </trans-unit>
        <trans-unit id="b32ef340ea4702fd5f41dbe4001671d76174ef71" translate="yes" xml:space="preserve">
          <source>Explanation</source>
          <target state="translated">Explanation</target>
        </trans-unit>
        <trans-unit id="8472a86b3ace5b628d38a7af7f6eeb180864de6a" translate="yes" xml:space="preserve">
          <source>Explanations and Examples</source>
          <target state="translated">Explanations and Examples</target>
        </trans-unit>
        <trans-unit id="57e4423e47a0841d4bf4a7e9d23053acc5900453" translate="yes" xml:space="preserve">
          <source>Explicit loaders and params up to the name of the first loader</source>
          <target state="translated">첫 번째 로더의 이름까지 명시 적 로더 및 매개 변수</target>
        </trans-unit>
        <trans-unit id="bd63f632f0d4f47eb50cc885bb5e56a31d561a15" translate="yes" xml:space="preserve">
          <source>Explicit vendor chunk</source>
          <target state="translated">명시 적 공급 업체 청크</target>
        </trans-unit>
        <trans-unit id="8ccf5e1a2186fac242a46cb41f6dc824f90b2b97" translate="yes" xml:space="preserve">
          <source>Explore the options to get the best result for you.</source>
          <target state="translated">Explore the options to get the best result for you.</target>
        </trans-unit>
        <trans-unit id="53031b5ce80e37222b11145ca017d86a838c9230" translate="yes" xml:space="preserve">
          <source>Export Classnames in CamelCase</source>
          <target state="translated">CamelCase에서 클래스 이름 내보내기</target>
        </trans-unit>
        <trans-unit id="2b313873cfc3031b1119050fe6948d6fb07bbc3f" translate="yes" xml:space="preserve">
          <source>Export anything as a &lt;code&gt;default&lt;/code&gt; or named export.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 또는 명명 된 내보내기로 무엇이든 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="e7ad804ffec14d8a38c42e3f5a5dcad62ba1e9ba" translate="yes" xml:space="preserve">
          <source>Export formats</source>
          <target state="translated">내보내기 형식</target>
        </trans-unit>
        <trans-unit id="7e6c56347025df0796cb96cb07e342a18d2e2263" translate="yes" xml:space="preserve">
          <source>Export into HTML files</source>
          <target state="translated">HTML 파일로 내보내기</target>
        </trans-unit>
        <trans-unit id="3e5448d2ba9175e3c5ffb8c95f6344a1db77984c" translate="yes" xml:space="preserve">
          <source>Export non-deterministic values (calling webpack twice should result in the same output files)</source>
          <target state="translated">비 결정적 값 내보내기 (웹팩을 두 번 호출하면 동일한 출력 파일이 생성됨)</target>
        </trans-unit>
        <trans-unit id="5443a4591bd6ed6f42ae562d32a3178bd622776e" translate="yes" xml:space="preserve">
          <source>Export only locals.</source>
          <target state="translated">Export only locals.</target>
        </trans-unit>
        <trans-unit id="f0feb102de069c652c1ff074568da541994fa901" translate="yes" xml:space="preserve">
          <source>Export the given &lt;code&gt;value&lt;/code&gt;. The label can occur before a function declaration or a variable declaration. The function name or variable name is the identifier under which the value is exported.</source>
          <target state="translated">주어진 &lt;code&gt;value&lt;/code&gt; . 레이블은 함수 선언 또는 변수 선언 전에 발생할 수 있습니다. 함수 이름 또는 변수 이름은 값을 내보내는 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="c37343fbc2a734ed5d2673a49ae41a53a7d7f024" translate="yes" xml:space="preserve">
          <source>Exporting</source>
          <target state="translated">Exporting</target>
        </trans-unit>
        <trans-unit id="c71ed04382d50e83283b23b9b459be2770eec890" translate="yes" xml:space="preserve">
          <source>Exporting a Function</source>
          <target state="translated">함수 내보내기</target>
        </trans-unit>
        <trans-unit id="05165758db04a4c3667f90819fce0bb66fc95a83" translate="yes" xml:space="preserve">
          <source>Exporting a Promise</source>
          <target state="translated">약속 내보내기</target>
        </trans-unit>
        <trans-unit id="17a87de3b37a2786896840bacd8eaac8b40280ca" translate="yes" xml:space="preserve">
          <source>Exporting multiple configurations</source>
          <target state="translated">여러 구성 내보내기</target>
        </trans-unit>
        <trans-unit id="3692094d4ed3c9420d1d968894f1bdd4f3b9efea" translate="yes" xml:space="preserve">
          <source>Exports HTML as string. HTML is minimized when the compiler demands.</source>
          <target state="translated">HTML을 문자열로 내 보냅니다. 컴파일러가 요구할 때 HTML이 최소화됩니다.</target>
        </trans-unit>
        <trans-unit id="fd13c85d6be7b15ab54ddc6bb98a0b9748889f10" translate="yes" xml:space="preserve">
          <source>Expose Via Object Assignment</source>
          <target state="translated">객체 할당을 통해 노출</target>
        </trans-unit>
        <trans-unit id="e19d3c834a7d03a59e90d546a26e227c64e7d78e" translate="yes" xml:space="preserve">
          <source>Expose a Variable</source>
          <target state="translated">변수 노출</target>
        </trans-unit>
        <trans-unit id="d363113de59f461b578e0fd376c64a9aff9beb16" translate="yes" xml:space="preserve">
          <source>Expose custom values into the &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt;.</source>
          <target state="translated">Expose custom values into the &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8c79073b5a7df1baceebe763dd532e4501d467bb" translate="yes" xml:space="preserve">
          <source>Expose custom values into the loader context.</source>
          <target state="translated">로더 컨텍스트에 사용자 정의 값을 노출하십시오.</target>
        </trans-unit>
        <trans-unit id="722807ca5e1b48783fa47dd7448b8378e6b12201" translate="yes" xml:space="preserve">
          <source>Expose the Library</source>
          <target state="translated">도서관 노출</target>
        </trans-unit>
        <trans-unit id="4067ffdf0f541117affd03d9eee6beab1dc3b929" translate="yes" xml:space="preserve">
          <source>Expose the exports of the entry point as library</source>
          <target state="translated">진입 점 내보내기를 라이브러리로 노출</target>
        </trans-unit>
        <trans-unit id="820fc4cab3e361043d2e31e2af89ba1150959af7" translate="yes" xml:space="preserve">
          <source>Exposing the library as a variable called &lt;code&gt;webpackNumbers&lt;/code&gt;.</source>
          <target state="translated">변수 호출로 라이브러리를 노출 &lt;code&gt;webpackNumbers&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="806e203d5977933ba63f436026b31e7b162da68d" translate="yes" xml:space="preserve">
          <source>Extending Configuration Files</source>
          <target state="translated">구성 파일 확장</target>
        </trans-unit>
        <trans-unit id="497464d42606672185b1c3e3d511a15e14c73f25" translate="yes" xml:space="preserve">
          <source>Extending Configuration Files in Symlinked Modules</source>
          <target state="translated">심볼릭 링크 모듈에서 구성 파일 확장</target>
        </trans-unit>
        <trans-unit id="a6efd045c8b884914d8ba4900da10374361f860d" translate="yes" xml:space="preserve">
          <source>Extending stats behaviours</source>
          <target state="translated">Extending stats behaviours</target>
        </trans-unit>
        <trans-unit id="34c8930bcb508996b0f2559d73caa82c081b4482" translate="yes" xml:space="preserve">
          <source>Extension with leading &lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">Extension with leading &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="180bcb449f3e0f4376867872d55215241c4f1cf0" translate="yes" xml:space="preserve">
          <source>External Limitations</source>
          <target state="translated">외부 제한</target>
        </trans-unit>
        <trans-unit id="00061876473c2ef7aacb36d87fb930db02b181d6" translate="yes" xml:space="preserve">
          <source>External script can be loaded from any URL when &lt;a href=&quot;#externalstype&quot;&gt;&lt;code&gt;externalsType&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'script'&lt;/code&gt;. The &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag would be removed after the script has been loaded.</source>
          <target state="translated">External script can be loaded from any URL when &lt;a href=&quot;#externalstype&quot;&gt; &lt;code&gt;externalsType&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;'script'&lt;/code&gt; . The &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag would be removed after the script has been loaded.</target>
        </trans-unit>
        <trans-unit id="bc64277d68c992d91830d72bb560f5cc1d53aa0a" translate="yes" xml:space="preserve">
          <source>Externalize Lodash</source>
          <target state="translated">Lodash 외부화</target>
        </trans-unit>
        <trans-unit id="548bcef531f24042c1657c9c7bd347a1802c9d7a" translate="yes" xml:space="preserve">
          <source>Externals</source>
          <target state="translated">Externals</target>
        </trans-unit>
        <trans-unit id="1add294539dba3473eaa32d2b7d08bdac3ed392d" translate="yes" xml:space="preserve">
          <source>Extra async commons chunk</source>
          <target state="translated">여분의 비동기 공통 청크</target>
        </trans-unit>
        <trans-unit id="6d84ceaf60a66c278aca37fae32385bf018a47e8" translate="yes" xml:space="preserve">
          <source>Extract</source>
          <target state="translated">Extract</target>
        </trans-unit>
        <trans-unit id="c1d3192026c606b799b1699ea37e45d0c0471c69" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;some&lt;/code&gt; (use &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; RegExp) comments.</source>
          <target state="translated">주석을 &lt;code&gt;all&lt;/code&gt; 또는 &lt;code&gt;some&lt;/code&gt; 추출 하십시오 ( &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; RegExp 사용).</target>
        </trans-unit>
        <trans-unit id="9ecf07d83a61fd449cd71012b768983a2a2b61b2" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;some&lt;/code&gt; (use &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt; RegExp) comments.</source>
          <target state="translated">Extract &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;some&lt;/code&gt; (use &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt; RegExp) comments.</target>
        </trans-unit>
        <trans-unit id="5ef9338340f0bb44c213803070121eed9af5661c" translate="yes" xml:space="preserve">
          <source>Extract CSS</source>
          <target state="translated">Extract CSS</target>
        </trans-unit>
        <trans-unit id="18a77834ec57531e67e4f9e781c9bd2027aa4d6f" translate="yes" xml:space="preserve">
          <source>Extract all legal comments (i.e. &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt;) and preserve &lt;code&gt;/@license/i&lt;/code&gt; comments.</source>
          <target state="translated">모든 법적 의견 (예 : &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; )을 추출 하고 &lt;code&gt;/@license/i&lt;/code&gt; 의견을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="92b1f35a5cfb6bbe52a81084ae4e0584a2830f8c" translate="yes" xml:space="preserve">
          <source>Extract all legal comments (i.e. &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt;) and preserve &lt;code&gt;/@license/i&lt;/code&gt; comments.</source>
          <target state="translated">Extract all legal comments (i.e. &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt; ) and preserve &lt;code&gt;/@license/i&lt;/code&gt; comments.</target>
        </trans-unit>
        <trans-unit id="93911c813714bd183a79cd47773a2be1141f5eaf" translate="yes" xml:space="preserve">
          <source>Extract common modules shared between chunks</source>
          <target state="translated">청크간에 공유되는 공통 모듈 추출</target>
        </trans-unit>
        <trans-unit id="f9b574f6bd7098b02ae75e0919b666457ced807f" translate="yes" xml:space="preserve">
          <source>Extract from all additional chunks too (by default it extracts only from the initial chunk(s))</source>
          <target state="translated">모든 추가 청크에서도 추출 (기본적으로 초기 청크에서만 추출)</target>
        </trans-unit>
        <trans-unit id="e2d0b8aabd3addb48908a5fcffc8b865e17fba9e" translate="yes" xml:space="preserve">
          <source>Extract text (CSS) from your bundles into a separate file</source>
          <target state="translated">번들에서 텍스트 (CSS)를 별도의 파일로 추출</target>
        </trans-unit>
        <trans-unit id="123268be13637fa875d7448da59a2f2ab5eb612e" translate="yes" xml:space="preserve">
          <source>Extract text from a bundle, or bundles, into a separate file.</source>
          <target state="translated">번들에서 텍스트를 별도의 파일로 추출하십시오.</target>
        </trans-unit>
        <trans-unit id="3deb7e1b34cdb8a1cf16107c7fe170670a0827bc" translate="yes" xml:space="preserve">
          <source>ExtractTextWebpackPlugin</source>
          <target state="translated">ExtractTextWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="51686b26f0f58fbfcd54996cb7b969b98c99c9b1" translate="yes" xml:space="preserve">
          <source>Extracting Boilerplate</source>
          <target state="translated">보일러 플레이트 추출</target>
        </trans-unit>
        <trans-unit id="cc57da2e140b44772e087d17a933ecd0a2d43db2" translate="yes" xml:space="preserve">
          <source>Extracting CSS based on entry</source>
          <target state="translated">항목을 기반으로 CSS 추출</target>
        </trans-unit>
        <trans-unit id="736c1328cfdac78c36047c9e87873aa7af75cde2" translate="yes" xml:space="preserve">
          <source>Extracting Sass or LESS</source>
          <target state="translated">Sass 또는 LESS 추출</target>
        </trans-unit>
        <trans-unit id="47ad8a9bcefad1f23d3a93514d426c84867080e6" translate="yes" xml:space="preserve">
          <source>Extracting a main.css</source>
          <target state="translated">Extracting a main.css</target>
        </trans-unit>
        <trans-unit id="4fcac7899b084e0f5b540913b6cc7722349794bd" translate="yes" xml:space="preserve">
          <source>Extracting all CSS in a single file</source>
          <target state="translated">단일 파일에서 모든 CSS 추출</target>
        </trans-unit>
        <trans-unit id="6ea6dec2c2e048e3fcc7e5e44eecd7647d71af19" translate="yes" xml:space="preserve">
          <source>Extracting style sheets</source>
          <target state="translated">스타일 시트 추출</target>
        </trans-unit>
        <trans-unit id="b0b67a01087dc1cd3a071cc220da02cdee5391f7" translate="yes" xml:space="preserve">
          <source>Extracting the index.html</source>
          <target state="translated">Extracting the index.html</target>
        </trans-unit>
        <trans-unit id="7946b675aa7ea053c5d3cbf02e3a346a1ee88f31" translate="yes" xml:space="preserve">
          <source>Extracts CSS into separate files</source>
          <target state="translated">Extracts CSS into separate files</target>
        </trans-unit>
        <trans-unit id="879594350de3b223778987ba07bccec048445e4e" translate="yes" xml:space="preserve">
          <source>Extracts given loader options. Optionally, accepts JSON schema as an argument.</source>
          <target state="translated">Extracts given loader options. Optionally, accepts JSON schema as an argument.</target>
        </trans-unit>
        <trans-unit id="86f0d1b49c07e17b22d11a7f26ca75fa972d8281" translate="yes" xml:space="preserve">
          <source>Extracts source maps from existing source files (from their &lt;code&gt;sourceMappingURL&lt;/code&gt;).</source>
          <target state="translated">기존 소스 파일 ( &lt;code&gt;sourceMappingURL&lt;/code&gt; ) 에서 소스 맵을 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="14ca83e77c59c0a29005d09c39bd0028dff0cc99" translate="yes" xml:space="preserve">
          <source>Fail out on the first error instead of tolerating it. By default webpack will log these errors in red in the terminal, as well as the browser console when using HMR, but continue bundling. To enable it:</source>
          <target state="translated">허용하지 않고 첫 번째 오류가 발생하면 실패합니다. 기본적으로 webpack은 HMR을 사용할 때 브라우저 콘솔뿐만 아니라 터미널에서도 이러한 오류를 빨간색으로 기록하지만 번들링은 계속합니다. 사용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6db117877a832f81f2f937c1d157cd3f64b91426" translate="yes" xml:space="preserve">
          <source>Fallbacks should be used to handled these cases.</source>
          <target state="translated">Fallbacks should be used to handled these cases.</target>
        </trans-unit>
        <trans-unit id="26017fc1f4b9afd13ef87c4b93809798f59c5ba0" translate="yes" xml:space="preserve">
          <source>Faster runtime (less code and DOM operations)</source>
          <target state="translated">빠른 런타임 (코드 및 DOM 작업이 적음)</target>
        </trans-unit>
        <trans-unit id="f2b1f00081dc02d0cadbe84ecbc1e2938cce7ad3" translate="yes" xml:space="preserve">
          <source>Fatal webpack errors (wrong configuration, etc)</source>
          <target state="translated">치명적인 웹팩 오류 (잘못된 구성 등)</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="4f5a54627dea26b6876632913ba4f8191aad7605" translate="yes" xml:space="preserve">
          <source>Feature Flags</source>
          <target state="translated">기능 플래그</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="6fc429713fe4ec89855d2607c179c3480baf1eed" translate="yes" xml:space="preserve">
          <source>Features that are not possible to polyfill or transpile should be used carefully as it limits the possible usage.</source>
          <target state="translated">Features that are not possible to polyfill or transpile should be used carefully as it limits the possible usage.</target>
        </trans-unit>
        <trans-unit id="387426b88e122c175b24856eb5817e7d755a55c4" translate="yes" xml:space="preserve">
          <source>Feel free to run those scripts and see how the output changes as we continue adding to our &lt;em&gt;production&lt;/em&gt; configuration.</source>
          <target state="translated">해당 스크립트를 실행하고 &lt;em&gt;프로덕션&lt;/em&gt; 구성에 계속 추가하면서 출력이 어떻게 변경되는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8de2cc6f0a24c9bcecd003ac01a17b5d836ad1b2" translate="yes" xml:space="preserve">
          <source>Fetches a module from a compilation by its identifier.</source>
          <target state="translated">Fetches a module from a compilation by its identifier.</target>
        </trans-unit>
        <trans-unit id="6361b663a3bfe269e61376666548fa2f9bd31d56" translate="yes" xml:space="preserve">
          <source>Fewer style tags (older IE has a limit)</source>
          <target state="translated">스타일 태그가 적음 (이전 IE에는 제한이 있음)</target>
        </trans-unit>
        <trans-unit id="22cfb429a6e1f0e2840710d68f2bddcef477db4e" translate="yes" xml:space="preserve">
          <source>Fields from &lt;code&gt;package.json&lt;/code&gt; which are used to provide the internal requests of a package (requests starting with &lt;code&gt;#&lt;/code&gt; are considered internal).</source>
          <target state="translated">Fields from &lt;code&gt;package.json&lt;/code&gt; which are used to provide the internal requests of a package (requests starting with &lt;code&gt;#&lt;/code&gt; are considered internal).</target>
        </trans-unit>
        <trans-unit id="c20c27bc3130e46c93121f3a711d2c806d9aa41a" translate="yes" xml:space="preserve">
          <source>Fields in package.json that are used for resolving module requests. See &lt;a href=&quot;../guides/package-exports&quot;&gt;package-exports guideline&lt;/a&gt; for more information.</source>
          <target state="translated">Fields in package.json that are used for resolving module requests. See &lt;a href=&quot;../guides/package-exports&quot;&gt;package-exports guideline&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="1285975b70efee3e5b39a03d2179a452d44a093d" translate="yes" xml:space="preserve">
          <source>Figlet</source>
          <target state="translated">Figlet</target>
        </trans-unit>
        <trans-unit id="ca359a99cceedf18a81f2344a85b886364a08d5c" translate="yes" xml:space="preserve">
          <source>Figure out which exports are used by modules to mangle export names, omit unused exports and generate more efficient code. When it is &lt;code&gt;true&lt;/code&gt;: analyse used exports for each runtime, when it is &lt;code&gt;&quot;global&quot;&lt;/code&gt;: analyse exports globally for all runtimes combined).</source>
          <target state="translated">Figure out which exports are used by modules to mangle export names, omit unused exports and generate more efficient code. When it is &lt;code&gt;true&lt;/code&gt; : analyse used exports for each runtime, when it is &lt;code&gt;&quot;global&quot;&lt;/code&gt; : analyse exports globally for all runtimes combined).</target>
        </trans-unit>
        <trans-unit id="2260cf982241e83a6e6abf87b36c88984edf23ab" translate="yes" xml:space="preserve">
          <source>File extensions are required when importing wasm file</source>
          <target state="translated">File extensions are required when importing wasm file</target>
        </trans-unit>
        <trans-unit id="30e94872e292d06e723a6f721ae4844b8479bcbe" translate="yes" xml:space="preserve">
          <source>File extensions are required when importing, e.g, you should use &lt;code&gt;import './src/App.mjs'&lt;/code&gt; instead of &lt;code&gt;import './src/App'&lt;/code&gt; (you can disable this enforcement with &lt;a href=&quot;../configuration/module#resolvefullyspecified&quot;&gt;&lt;code&gt;Rule.resolve.fullySpecified&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">File extensions are required when importing, e.g, you should use &lt;code&gt;import './src/App.mjs'&lt;/code&gt; instead of &lt;code&gt;import './src/App'&lt;/code&gt; (you can disable this enforcement with &lt;a href=&quot;../configuration/module#resolvefullyspecified&quot;&gt; &lt;code&gt;Rule.resolve.fullySpecified&lt;/code&gt; &lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="e2f1bee71df47a63014f001b80f685e7cd2c1381" translate="yes" xml:space="preserve">
          <source>File location and read info</source>
          <target state="translated">파일 위치 및 정보 읽기</target>
        </trans-unit>
        <trans-unit id="697d9fb8c0dcac7e0a74c60e8dbc3f6a5673fc7d" translate="yes" xml:space="preserve">
          <source>File treated as &lt;code&gt;CSS Module&lt;/code&gt;.</source>
          <target state="translated">File treated as &lt;code&gt;CSS Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac67898be8281eafc9f0f25fcc4b7af708f39682" translate="yes" xml:space="preserve">
          <source>File treated as &lt;code&gt;ICSS&lt;/code&gt;-only.</source>
          <target state="translated">File treated as &lt;code&gt;ICSS&lt;/code&gt; -only.</target>
        </trans-unit>
        <trans-unit id="8417264f743e544e64508c8186e223f14ee804e8" translate="yes" xml:space="preserve">
          <source>Filename Option as function</source>
          <target state="translated">Filename Option as function</target>
        </trans-unit>
        <trans-unit id="ff916a510ebc68dec181bb7669e6f066bbc7a506" translate="yes" xml:space="preserve">
          <source>Filename and path, without query or fragment</source>
          <target state="translated">Filename and path, without query or fragment</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="a8cfe1301941a91828e9dd741d845cc92bbca588" translate="yes" xml:space="preserve">
          <source>Files to &lt;code&gt;exclude&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; 할 파일</target>
        </trans-unit>
        <trans-unit id="426129006308e471cd729639a2ed20f4ade0d520" translate="yes" xml:space="preserve">
          <source>Files to &lt;code&gt;include&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 할 파일</target>
        </trans-unit>
        <trans-unit id="88ad4711650474a843f6b189599efd8811dceeac" translate="yes" xml:space="preserve">
          <source>Files to exclude.</source>
          <target state="translated">제외 할 파일</target>
        </trans-unit>
        <trans-unit id="6fb86f6fdadaf02afe64ed5d96dc2c399fb79d77" translate="yes" xml:space="preserve">
          <source>Files to include.</source>
          <target state="translated">포함 할 파일</target>
        </trans-unit>
        <trans-unit id="c2229728b40339f4861573c421046144d5602901" translate="yes" xml:space="preserve">
          <source>Filesystem inaccuracies may trigger multiple builds for a single change. So, in the example above, the &lt;code&gt;console.log&lt;/code&gt; statement may fire multiple times for a single modification. Users should expect this behavior and may check &lt;code&gt;stats.hash&lt;/code&gt; to see if the file hash has actually changed.</source>
          <target state="translated">파일 시스템 부정확성은 단일 변경에 대해 여러 빌드를 트리거 할 수 있습니다. 따라서 위의 예에서 &lt;code&gt;console.log&lt;/code&gt; 문은 한 번의 수정으로 여러 번 실행될 수 있습니다. 사용자는이 동작을 예상 하고 파일 해시가 실제로 변경 되었는지 확인 &lt;code&gt;stats.hash&lt;/code&gt; 위해 stats.hash 를 검사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b199cf85f5ec0e2a03d49dd92bdc91491995c672" translate="yes" xml:space="preserve">
          <source>Filter can also be used to extend the supported elements and attributes. For example, filter can help process meta tags that reference assets:</source>
          <target state="translated">필터를 사용하여 지원되는 요소와 속성을 확장 할 수도 있습니다. 예를 들어 필터는 자산을 참조하는 메타 태그를 처리하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4479eeac566a1d5950e1954286cfeb45680f95bb" translate="yes" xml:space="preserve">
          <source>Final Steps</source>
          <target state="translated">마지막 단계</target>
        </trans-unit>
        <trans-unit id="35643267e07b6ba8a7cc7acb8583e11d8b0961a1" translate="yes" xml:space="preserve">
          <source>Finally run &lt;code&gt;webpack&lt;/code&gt; via your preferred method.</source>
          <target state="translated">Finally run &lt;code&gt;webpack&lt;/code&gt; via your preferred method.</target>
        </trans-unit>
        <trans-unit id="b984c3a594e03d4e47017ebbf42f89b1aba1d79a" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; can also be set from the &lt;a href=&quot;../configuration/module#module-rules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="translated">마지막으로 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; 는 &lt;a href=&quot;../configuration/module#module-rules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; 구성 옵션&lt;/a&gt; 에서 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="803c8194e72d607e0c94cdf07a3275a242a583fb" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; can also be set from the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="translated">Finally, &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; can also be set from the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; configuration option&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5e2525d85e37ae6cd31bac5a6b7294990ad3c573" translate="yes" xml:space="preserve">
          <source>Finishes compilation and invokes the given callback.</source>
          <target state="translated">Finishes compilation and invokes the given callback.</target>
        </trans-unit>
        <trans-unit id="862ddbfad943f052d404341b0d710c4f5c284357" translate="yes" xml:space="preserve">
          <source>Fired after a &lt;code&gt;Parser&lt;/code&gt; instance is created.</source>
          <target state="translated">&lt;code&gt;Parser&lt;/code&gt; 인스턴스가 생성 된 후 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="82dc631b7d6bf3350f27e268967eab3438ed66eb" translate="yes" xml:space="preserve">
          <source>Fired after chunk optimization has completed.</source>
          <target state="translated">청크 최적화가 완료된 후 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="ab9c4744c4c4d7ad3071195039f5d1ab8a46f9eb" translate="yes" xml:space="preserve">
          <source>Fired after the dependency optimization.</source>
          <target state="translated">Fired after the dependency optimization.</target>
        </trans-unit>
        <trans-unit id="1fc7ec5e434517a77b397df44ca1b8a1dfbb81eb" translate="yes" xml:space="preserve">
          <source>Fired at the beginning of dependency optimization.</source>
          <target state="translated">종속성 최적화가 시작될 때 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="bb02302a65a96c19d50855ad714ab54dd7de9951" translate="yes" xml:space="preserve">
          <source>Fired before chunk &lt;code&gt;id&lt;/code&gt; optimization.</source>
          <target state="translated">청크 &lt;code&gt;id&lt;/code&gt; 최적화 전에 시작되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c1d8bcf58c3d8f04688944f7def3c9492a2e93b9" translate="yes" xml:space="preserve">
          <source>Fired before rebuilding a module.</source>
          <target state="translated">모듈을 다시 빌드하기 전에 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="5aed89b7bcfb95405a50d009874078e5d2e9502d" translate="yes" xml:space="preserve">
          <source>Fired when a compilation begins accepting new modules.</source>
          <target state="translated">컴파일에서 새 모듈을 수락하기 시작하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="cec0babb097d6758189ea86e9410f8087384aa0a" translate="yes" xml:space="preserve">
          <source>Fired when the compilation stops accepting new modules.</source>
          <target state="translated">컴파일이 새 모듈 수락을 중지하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="79e276153519262fda3521a5754b4ba55b0c0262" translate="yes" xml:space="preserve">
          <source>First install the TypeScript compiler and loader by running:</source>
          <target state="translated">먼저 다음을 실행하여 TypeScript 컴파일러 및 로더를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="f845ec5e217d249b96e3572b9f76b2d5a0e8ee80" translate="yes" xml:space="preserve">
          <source>First install the necessary dependencies:</source>
          <target state="translated">먼저 필요한 종속성을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="7e7cf28d814a90cd567ea771390c97bd16c45d83" translate="yes" xml:space="preserve">
          <source>First install the plugin and adjust the &lt;code&gt;webpack.config.js&lt;/code&gt; file:</source>
          <target state="translated">먼저 플러그인을 설치하고 &lt;code&gt;webpack.config.js&lt;/code&gt; 파일을 조정 하십시오.</target>
        </trans-unit>
        <trans-unit id="3b603e2f1b5bd4ee5397a493835caffe6bec8859" translate="yes" xml:space="preserve">
          <source>First let's create a directory, initialize npm, &lt;a href=&quot;installation#local-installation&quot;&gt;install webpack locally&lt;/a&gt;, and install the &lt;a href=&quot;https://github.com/webpack/webpack-cli&quot;&gt;&lt;code&gt;webpack-cli&lt;/code&gt;&lt;/a&gt; (the tool used to run webpack on the command line):</source>
          <target state="translated">First let's create a directory, initialize npm, &lt;a href=&quot;installation#local-installation&quot;&gt;install webpack locally&lt;/a&gt;, and install the &lt;a href=&quot;https://github.com/webpack/webpack-cli&quot;&gt; &lt;code&gt;webpack-cli&lt;/code&gt; &lt;/a&gt; (the tool used to run webpack on the command line):</target>
        </trans-unit>
        <trans-unit id="f3f0e2eab98ee7d2bfa4e36b3bb5ad4a43dce3c5" translate="yes" xml:space="preserve">
          <source>First let's create a directory, initialize npm, &lt;a href=&quot;installation#local-installation&quot;&gt;install webpack locally&lt;/a&gt;, and install the webpack-cli (the tool used to run webpack on the command line):</source>
          <target state="translated">먼저 디렉토리를 만들고, npm을 초기화하고, &lt;a href=&quot;installation#local-installation&quot;&gt;로컬로 webpack&lt;/a&gt; 을 설치하고, webpack-cli (명령 줄에서 webpack을 실행하는 데 사용되는 도구)를 설치하십시오 :</target>
        </trans-unit>
        <trans-unit id="e9c68011e86c1f8f212218a7b9629bdd9bc0200a" translate="yes" xml:space="preserve">
          <source>First let's install both loaders with the following command:</source>
          <target state="translated">먼저 다음 명령을 사용하여 두 로더를 모두 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="73a418853c936ed2cd86e485d53fcd4abcec5c51" translate="yes" xml:space="preserve">
          <source>First we try to use built-in &lt;code&gt;less&lt;/code&gt; resolve logic, then &lt;code&gt;webpack&lt;/code&gt; resolve logic (aliases and &lt;code&gt;~&lt;/code&gt;).</source>
          <target state="translated">먼저 내장 된 &lt;code&gt;less&lt;/code&gt; 해결 로직을 사용하고 &lt;code&gt;webpack&lt;/code&gt; 해결 로직 (별칭 및 &lt;code&gt;~&lt;/code&gt; ) 을 사용하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="c11e5dc41880840f3c824e11fa1fb2d12623a287" translate="yes" xml:space="preserve">
          <source>First we'll tweak our directory structure slightly, separating the &quot;source&quot; code (&lt;code&gt;./src&lt;/code&gt;) from our &quot;distribution&quot; code (&lt;code&gt;./dist&lt;/code&gt;). The &quot;source&quot; code is the code that we'll write and edit. The &quot;distribution&quot; code is the minimized and optimized &lt;code&gt;output&lt;/code&gt; of our build process that will eventually be loaded in the browser. Tweak the directory structure as follows:</source>
          <target state="translated">First we'll tweak our directory structure slightly, separating the &quot;source&quot; code ( &lt;code&gt;./src&lt;/code&gt; ) from our &quot;distribution&quot; code ( &lt;code&gt;./dist&lt;/code&gt; ). The &quot;source&quot; code is the code that we'll write and edit. The &quot;distribution&quot; code is the minimized and optimized &lt;code&gt;output&lt;/code&gt; of our build process that will eventually be loaded in the browser. Tweak the directory structure as follows:</target>
        </trans-unit>
        <trans-unit id="f7aa2754364fd47f495ae0e5db514f076aa84166" translate="yes" xml:space="preserve">
          <source>First we'll tweak our directory structure slightly, separating the &quot;source&quot; code (&lt;code&gt;/src&lt;/code&gt;) from our &quot;distribution&quot; code (&lt;code&gt;/dist&lt;/code&gt;). The &quot;source&quot; code is the code that we'll write and edit. The &quot;distribution&quot; code is the minimized and optimized &lt;code&gt;output&lt;/code&gt; of our build process that will eventually be loaded in the browser:</source>
          <target state="translated">먼저 &quot;배포&quot;코드 ( &lt;code&gt;/dist&lt;/code&gt; ) 에서 &quot;source&quot;코드 ( &lt;code&gt;/src&lt;/code&gt; )를 분리하여 디렉토리 구조를 약간 조정합니다 . &quot;소스&quot;코드는 작성하고 편집 할 코드입니다. &quot;배포&quot;코드는 빌드 프로세스 의 최소화 및 최적화 된 &lt;code&gt;output&lt;/code&gt; , 결국 브라우저에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="ca547be96980c80fccd257e9a142306900605cdb" translate="yes" xml:space="preserve">
          <source>First, let's adjust our project a little bit:</source>
          <target state="translated">먼저 프로젝트를 약간 조정 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b4d4531e5905c812ac4512c67a4cfa6dec35e54c" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;data&lt;/code&gt; passed to the &lt;code&gt;pitch&lt;/code&gt; method is exposed in the execution phase as well under &lt;code&gt;this.data&lt;/code&gt; and could be useful for capturing and sharing information from earlier in the cycle.</source>
          <target state="translated">먼저, &lt;code&gt;pitch&lt;/code&gt; 방법으로 전달 된 &lt;code&gt;data&lt;/code&gt; 는 &lt;code&gt;this.data&lt;/code&gt; 아래의 실행 단계에서도 노출되며 주기 초기의 정보를 캡처하고 공유하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="584245f03e450961f0ad3c1a61d7cda83e92283a" translate="yes" xml:space="preserve">
          <source>Firstly, you can inline the worker as a blob instead of downloading it as an external script via the &lt;a href=&quot;#inline&quot;&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/a&gt; parameter</source>
          <target state="translated">먼저 &lt;a href=&quot;#inline&quot;&gt; &lt;code&gt;inline&lt;/code&gt; &lt;/a&gt; 매개 변수 를 통해 작업자를 외부 스크립트로 다운로드하는 대신 Blob으로 인라인 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="04f0ec6d786628f609cda429d684d0d5b7ae6154" translate="yes" xml:space="preserve">
          <source>Flag / Alias</source>
          <target state="translated">Flag / Alias</target>
        </trans-unit>
        <trans-unit id="6551527edd64d92e64047b363c640c11b65112df" translate="yes" xml:space="preserve">
          <source>Flag a dependency as not-update-able. This makes sense when changing exports of this dependency can be handled or handling is not implemented yet. Depending on your HMR management code an update to this dependencies (or unaccepted dependencies of it) usually causes a full-reload of the page.</source>
          <target state="translated">종속성을 업데이트 할 수없는 것으로 플래그 지정하십시오. 이 종속성의 내보내기를 변경하거나 처리 할 수없는 경우에는 의미가 있습니다. HMR 관리 코드에 따라이 종속성 (또는 허용되지 않는 종속성)에 대한 업데이트는 일반적으로 페이지를 완전히 다시로드합니다.</target>
        </trans-unit>
        <trans-unit id="114ebf626420588d5872e607963a966a4730f33c" translate="yes" xml:space="preserve">
          <source>Flag a dependency as not-update-able. This makes sense when changing exports of this dependency can be handled or handling is not implemented yet. Depending on your HMR management code, an update to these dependencies (or unaccepted dependencies of it) usually causes a full-reload of the page.</source>
          <target state="translated">Flag a dependency as not-update-able. This makes sense when changing exports of this dependency can be handled or handling is not implemented yet. Depending on your HMR management code, an update to these dependencies (or unaccepted dependencies of it) usually causes a full-reload of the page.</target>
        </trans-unit>
        <trans-unit id="a30934bbebcaf8793fa9262d96b35e00c232b0fd" translate="yes" xml:space="preserve">
          <source>Flag this module as not-update-able. This make sense when this module has inrevertable side-effects, or HMR handling is not implemented for this module yet. Depending on your HMR management code an update to this module (or unaccepted dependencies) usually causes a full-reload of the page.</source>
          <target state="translated">이 모듈을 업데이트 할 수없는 것으로 표시하십시오. 이는이 모듈에 되돌릴 수없는 부작용이 있거나이 모듈에 대해 HMR 처리가 아직 구현되지 않은 경우에 적합합니다. HMR 관리 코드에 따라이 모듈 (또는 허용되지 않는 종속성)을 업데이트하면 일반적으로 페이지가 완전히 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="e45f4c1cfa65ee955938a9f17e59379933ef3389" translate="yes" xml:space="preserve">
          <source>Flag this module as not-update-able. This makes sense when this module has irreversible side-effects, or HMR handling is not implemented for this module yet. Depending on your HMR management code, an update to this module (or unaccepted dependencies) usually causes a full-reload of the page.</source>
          <target state="translated">Flag this module as not-update-able. This makes sense when this module has irreversible side-effects, or HMR handling is not implemented for this module yet. Depending on your HMR management code, an update to this module (or unaccepted dependencies) usually causes a full-reload of the page.</target>
        </trans-unit>
        <trans-unit id="caf4b23a98b0925f5e657315aefc4ab1b9143079" translate="yes" xml:space="preserve">
          <source>FlagIncludedChunksPlugin</source>
          <target state="translated">FlagIncludedChunksPlugin</target>
        </trans-unit>
        <trans-unit id="7d5d9d0124b71e0b6ae72526af2460f0d5c2dda5" translate="yes" xml:space="preserve">
          <source>Flagging modules are ESM</source>
          <target state="translated">Flagging modules are ESM</target>
        </trans-unit>
        <trans-unit id="21f499d01d45d2cd9cd95ac036053de1b8d2a91f" translate="yes" xml:space="preserve">
          <source>Flagging modules as ESM</source>
          <target state="translated">모듈을 ESM으로 플래그 지정</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="723d3e5b7de54eedf0e6f36c54613a9b234502dc" translate="yes" xml:space="preserve">
          <source>Flatten copy</source>
          <target state="translated">복사 병합</target>
        </trans-unit>
        <trans-unit id="7af2e2d1bc35fc684cef0582279c09f03bf0f2ba" translate="yes" xml:space="preserve">
          <source>Follow symbolic links while looking for a file. This is usually not needed as webpack already resolves symlinks with &lt;a href=&quot;resolve#resolvesymlinks&quot;&gt;&lt;code&gt;resolve.symlinks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파일을 찾는 동안 심볼릭 링크를 따르십시오. 웹팩 이미와 심볼릭 링크를 해결로서 이것은 일반적으로 필요하지 않습니다 &lt;a href=&quot;resolve#resolvesymlinks&quot;&gt; &lt;code&gt;resolve.symlinks&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4dd9d41370acc27e61db8dfd3185c59c57d5d79f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;assetsSort&lt;/code&gt;, &lt;code&gt;chunksSort&lt;/code&gt; and &lt;code&gt;modulesSort&lt;/code&gt; there are several possible fields that you can sort items by:</source>
          <target state="translated">For &lt;code&gt;assetsSort&lt;/code&gt; , &lt;code&gt;chunksSort&lt;/code&gt; and &lt;code&gt;modulesSort&lt;/code&gt; there are several possible fields that you can sort items by:</target>
        </trans-unit>
        <trans-unit id="45a4b17d172ca99d4916f4db7fa9874614a1e1d5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;import { Button } from &quot;@shopify/polaris&quot;;&lt;/code&gt; this has the following implications:</source>
          <target state="translated">For &lt;code&gt;import { Button } from &quot;@shopify/polaris&quot;;&lt;/code&gt; this has the following implications:</target>
        </trans-unit>
        <trans-unit id="98f1cfa005d71afcbc462e3a744c789068342e71" translate="yes" xml:space="preserve">
          <source>For a better understanding of the ideas behind module bundlers and how they work under the hood consult these resources:</source>
          <target state="translated">모듈 번 들러의 기본 개념과 이들이 어떻게 작동하는지 이해하려면 다음 리소스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="16772d318e99d9a04a2c73c752ba93b894655408" translate="yes" xml:space="preserve">
          <source>For a better understanding of the ideas behind module bundlers and how they work under the hood, consult these resources:</source>
          <target state="translated">For a better understanding of the ideas behind module bundlers and how they work under the hood, consult these resources:</target>
        </trans-unit>
        <trans-unit id="efc5c20809153aa4eb3674984e6265239cecfe8b" translate="yes" xml:space="preserve">
          <source>For a full list, see &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;&lt;strong&gt;the list of loaders&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&quot;../api/loaders&quot;&gt;&lt;strong&gt;write your own&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">전체 목록 &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;&lt;strong&gt;은 로더 목록을&lt;/strong&gt;&lt;/a&gt; 참조 하거나 &lt;a href=&quot;../api/loaders&quot;&gt;&lt;strong&gt;직접 작성하십시오&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c53fa1add2ed92b7c6c061470ef0fe314a1db2db" translate="yes" xml:space="preserve">
          <source>For a good error handling, you need to account for these three types of errors:</source>
          <target state="translated">올바른 오류 처리를 위해서는 다음 세 가지 유형의 오류를 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="69e9a7ca686aa0d593a7bd1e7a04191e2ee1c42d" translate="yes" xml:space="preserve">
          <source>For a high-level introduction to writing plugins, start with &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-plugin&quot;&gt;writing a plugin&lt;/a&gt;.</source>
          <target state="translated">플러그인을 작성하는 높은 수준의 소개를 들어, 시작 &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-plugin&quot;&gt;플러그인을 작성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c240690fb0bc3e19d7bcee7b6b5c5c3eaebffe7" translate="yes" xml:space="preserve">
          <source>For a single &lt;a href=&quot;entry-context#entry&quot;&gt;&lt;code&gt;entry&lt;/code&gt;&lt;/a&gt; point, this can be a static name.</source>
          <target state="translated">단일 &lt;a href=&quot;entry-context#entry&quot;&gt; &lt;code&gt;entry&lt;/code&gt; &lt;/a&gt; 점의 경우 이는 정적 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ec6e06e644cffbc63772a86002cdaa0236f78ef" translate="yes" xml:space="preserve">
          <source>For all configuration options, please see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#options&quot;&gt;plugin documentation&lt;/a&gt;.</source>
          <target state="translated">모든 구성 옵션은 &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#options&quot;&gt;플러그인 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b0a1ebcbc4ec7b1cc5f8c899bcd3bcab1fa1ec1" translate="yes" xml:space="preserve">
          <source>For any other target (including &lt;code&gt;node&lt;/code&gt;):</source>
          <target state="translated">다른 대상 ( &lt;code&gt;node&lt;/code&gt; 포함 )의 경우 :</target>
        </trans-unit>
        <trans-unit id="fa88c028e87001ee8cbf0580262c396e0965adc8" translate="yes" xml:space="preserve">
          <source>For asynchronous loaders, &lt;a href=&quot;#thisasync&quot;&gt;&lt;code&gt;this.async&lt;/code&gt;&lt;/a&gt; is used to retrieve the &lt;code&gt;callback&lt;/code&gt; function:</source>
          <target state="translated">For asynchronous loaders, &lt;a href=&quot;#thisasync&quot;&gt; &lt;code&gt;this.async&lt;/code&gt; &lt;/a&gt; is used to retrieve the &lt;code&gt;callback&lt;/code&gt; function:</target>
        </trans-unit>
        <trans-unit id="ff9282145263a12d82e1ed3db1195337137628c3" translate="yes" xml:space="preserve">
          <source>For asynchronous loaders, &lt;a href=&quot;loaders#this-async&quot;&gt;&lt;code&gt;this.async&lt;/code&gt;&lt;/a&gt; is used to retrieve the &lt;code&gt;callback&lt;/code&gt; function:</source>
          <target state="translated">비동기 로더의 경우 &lt;a href=&quot;loaders#this-async&quot;&gt; &lt;code&gt;this.async&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;callback&lt;/code&gt; 함수 를 검색하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="220d57652c6e3141e96033d0eed129608766a7d9" translate="yes" xml:space="preserve">
          <source>For compatibility a &lt;code&gt;query&lt;/code&gt; property is also possible, which is an alias for the &lt;code&gt;options&lt;/code&gt; property. Use the &lt;code&gt;options&lt;/code&gt; property instead.</source>
          <target state="translated">호환성 을 위해 &lt;code&gt;options&lt;/code&gt; 속성 의 별칭 인 &lt;code&gt;query&lt;/code&gt; 속성도 가능 합니다. &lt;code&gt;options&lt;/code&gt; 속성을 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb8c4c4da20d811841bff532533510ebb0cea7ff" translate="yes" xml:space="preserve">
          <source>For compatibility also these properties: &lt;a href=&quot;#rule-options-rule-query&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-loaders&quot;&gt;&lt;code&gt;loaders&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">호환성을 위해 &lt;a href=&quot;#rule-options-rule-query&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#rule-loaders&quot;&gt; &lt;code&gt;loaders&lt;/code&gt; &lt;/a&gt; 속성도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="11e8c18109367087d9a047bde29609a4a15c0179" translate="yes" xml:space="preserve">
          <source>For compatibility also these properties: &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleloaders&quot;&gt;&lt;code&gt;loaders&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For compatibility also these properties: &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#ruleloaders&quot;&gt; &lt;code&gt;loaders&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e8b0f2c024c2de81f622f53695ba9fee7811a218" translate="yes" xml:space="preserve">
          <source>For compatibility reasons webpack polyfills the &lt;code&gt;global&lt;/code&gt; variable by default.</source>
          <target state="translated">For compatibility reasons webpack polyfills the &lt;code&gt;global&lt;/code&gt; variable by default.</target>
        </trans-unit>
        <trans-unit id="8247035ea133a7adb2b3009d9637484ff10345ee" translate="yes" xml:space="preserve">
          <source>For complex use cases multiple patterns need to be combined by nesting these conditions.</source>
          <target state="translated">For complex use cases multiple patterns need to be combined by nesting these conditions.</target>
        </trans-unit>
        <trans-unit id="e7624e5ce06751457b21d47889dd06ebfba63c8a" translate="yes" xml:space="preserve">
          <source>For custom conditions the following naming schema is recommended:</source>
          <target state="translated">For custom conditions the following naming schema is recommended:</target>
        </trans-unit>
        <trans-unit id="82962bc6a0e3d0baeb54eec357c66228971a937d" translate="yes" xml:space="preserve">
          <source>For details see &lt;a href=&quot;#output-jsonpfunction&quot;&gt;&lt;code&gt;output.jsonpFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#output-jsonpfunction&quot;&gt; &lt;code&gt;output.jsonpFunction&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="82fcc95ffdf7462089d5b8c8335c47c27a66821c" translate="yes" xml:space="preserve">
          <source>For details see &lt;a href=&quot;#outputchunkloadingglobal&quot;&gt;&lt;code&gt;output.chunkLoadingGlobal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For details see &lt;a href=&quot;#outputchunkloadingglobal&quot;&gt; &lt;code&gt;output.chunkLoadingGlobal&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5a95278c7d79dc4008521d3f2a619571d809ff05" translate="yes" xml:space="preserve">
          <source>For developers that want to have more control over this functionality, webpack provides a set of options to better fit your needs. If you're changing the configuration, it's a good idea to measure the impact of your changes to ensure there's a real benefit.</source>
          <target state="translated">이 기능을보다 강력하게 제어하려는 개발자를 위해 webpack은 사용자의 요구에보다 잘 맞는 옵션을 제공합니다. 구성을 변경하는 경우 변경의 영향을 측정하여 실질적인 이점이 있는지 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="572ef11d0b33bdee4843c100b85cf0b7e5a1e02e" translate="yes" xml:space="preserve">
          <source>For each module, the following details are included in the output as applicable:</source>
          <target state="translated">각 모듈에 대해 다음 세부 사항이 출력에 포함됩니다 (해당되는 경우).</target>
        </trans-unit>
        <trans-unit id="1db4c11438f4b95d634168947935046d53a6a62b" translate="yes" xml:space="preserve">
          <source>For example if we want to install lodash we can run the following command to get the typings for it:</source>
          <target state="translated">예를 들어 lodash를 설치하려면 다음 명령을 실행하여 입력을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85e30f6b9d60ee8acd57f7a463281f17fd234b10" translate="yes" xml:space="preserve">
          <source>For example if you want to enable performance hints in your project you'd use &lt;a href=&quot;../configuration/performance#performancehints&quot;&gt;this&lt;/a&gt; option in configuration, with core flags you can do -</source>
          <target state="translated">For example if you want to enable performance hints in your project you'd use &lt;a href=&quot;../configuration/performance#performancehints&quot;&gt;this&lt;/a&gt; option in configuration, with core flags you can do -</target>
        </trans-unit>
        <trans-unit id="136303e1d11cca82a7b89467273a19549d170c70" translate="yes" xml:space="preserve">
          <source>For example we have &lt;code&gt;assets/images/image.png?foo=bar#hash&lt;/code&gt;:</source>
          <target state="translated">For example we have &lt;code&gt;assets/images/image.png?foo=bar#hash&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="03bdedf0ebdb95e54ec802e466baf404e32bbf1a" translate="yes" xml:space="preserve">
          <source>For example, consider an arbitrary library called &lt;code&gt;upstream&lt;/code&gt; with a &lt;code&gt;package.json&lt;/code&gt; that contains the following fields:</source>
          <target state="translated">For example, consider an arbitrary library called &lt;code&gt;upstream&lt;/code&gt; with a &lt;code&gt;package.json&lt;/code&gt; that contains the following fields:</target>
        </trans-unit>
        <trans-unit id="c5838e77fa48d0f3cdacff621e48c21671c60c13" translate="yes" xml:space="preserve">
          <source>For example, if you don't want any of the plugins they applied:</source>
          <target state="translated">예를 들어, 적용한 플러그인을 원하지 않으면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="89ad1c2c18e0b88c94e326ad4de2f47af1847fe7" translate="yes" xml:space="preserve">
          <source>For example, if you have 2 libraries, with namespaces &lt;code&gt;library1&lt;/code&gt; and &lt;code&gt;library2&lt;/code&gt;, which both have a file &lt;code&gt;./src/index.js&lt;/code&gt; (with potentially different contents), they will expose these files as &lt;code&gt;webpack://library1/./src/index.js&lt;/code&gt; and &lt;code&gt;webpack://library2/./src/index.js&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 네임 스페이스 &lt;code&gt;library1&lt;/code&gt; 및 &lt;code&gt;library2&lt;/code&gt; 가있는 두 개의 라이브러리 가 있고 둘 다 &lt;code&gt;./src/index.js&lt;/code&gt; 파일 (잠재적으로 내용이 다름) 인 &lt;code&gt;webpack://library1/./src/index.js&lt;/code&gt; 파일을 webpack : //library1/./src/ 하는 index.js 및 &lt;code&gt;webpack://library2/./src/index.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75351668582b02d6285a3182d6ca1bf719294437" translate="yes" xml:space="preserve">
          <source>For example, if you want to exclude &lt;code&gt;fs-extra&lt;/code&gt; from the output bundle and import it during the runtime instead, you can specify it as follows:</source>
          <target state="translated">For example, if you want to exclude &lt;code&gt;fs-extra&lt;/code&gt; from the output bundle and import it during the runtime instead, you can specify it as follows:</target>
        </trans-unit>
        <trans-unit id="63d19bd6aaf22929e630d8e3a484967d91b242a1" translate="yes" xml:space="preserve">
          <source>For example, in the case of replacing &lt;code&gt;raw-loader&lt;/code&gt; with &lt;code&gt;asset/source&lt;/code&gt; type:</source>
          <target state="translated">예를 들어 &lt;code&gt;raw-loader&lt;/code&gt; 를 &lt;code&gt;asset/source&lt;/code&gt; 유형 으로 대체하는 경우 :</target>
        </trans-unit>
        <trans-unit id="6f0735eb956ebca642b48ac668aca645c00fc7b8" translate="yes" xml:space="preserve">
          <source>For example, let's imagine we have an entry in &lt;code&gt;./src/index.js&lt;/code&gt;, &lt;code&gt;./src/footer/default.js&lt;/code&gt; and a &lt;code&gt;./src/footer/overridden.js&lt;/code&gt; to demonstrate the module level resolve.</source>
          <target state="translated">For example, let's imagine we have an entry in &lt;code&gt;./src/index.js&lt;/code&gt; , &lt;code&gt;./src/footer/default.js&lt;/code&gt; and a &lt;code&gt;./src/footer/overridden.js&lt;/code&gt; to demonstrate the module level resolve.</target>
        </trans-unit>
        <trans-unit id="1354cdb2732a48beec217a6d7eba166915ac9ade" translate="yes" xml:space="preserve">
          <source>For example, let's say you want to expose jQuery as a global called &lt;code&gt;$&lt;/code&gt;:</source>
          <target state="translated">예를 들어, jQuery를 &lt;code&gt;$&lt;/code&gt; 라는 전역으로 노출한다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="23a7d3ecec5657cd69b44811ac0ca1f3638a8867" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;package.json&lt;/code&gt; of &lt;a href=&quot;https://d3js.org/&quot;&gt;D3&lt;/a&gt; contains these fields:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;https://d3js.org/&quot;&gt;D3&lt;/a&gt; 의 &lt;code&gt;package.json&lt;/code&gt; 은 다음 필드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="86cb5550fc2a447139864a2a923a8826ca965a57" translate="yes" xml:space="preserve">
          <source>For example, the dev-server is proxied by nginx, and available on &lt;code&gt;myapp.test&lt;/code&gt;:</source>
          <target state="translated">예를 들어, dev-server는 nginx에 의해 프록시되며 &lt;code&gt;myapp.test&lt;/code&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81c1a0153f63770bc745d6bd8b6ee27ab5b3dc06" translate="yes" xml:space="preserve">
          <source>For example, to change the environment targets passed to &lt;code&gt;@babel/preset-env&lt;/code&gt; based on the webpack target:</source>
          <target state="translated">For example, to change the environment targets passed to &lt;code&gt;@babel/preset-env&lt;/code&gt; based on the webpack target:</target>
        </trans-unit>
        <trans-unit id="924336c3be08516736fd5a3f638e946b88547ec0" translate="yes" xml:space="preserve">
          <source>For example, to include &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; from a CDN instead of bundling it:</source>
          <target state="translated">예를 들어, CDN을 번들링하는 대신 &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; 를 포함 시키려면 다음을 수행 하십시오.</target>
        </trans-unit>
        <trans-unit id="6f6af5fde379a0ca3ad4ebf94e17751f48b901d3" translate="yes" xml:space="preserve">
          <source>For example, to increase the memory limit of Node.js process to 4 GB</source>
          <target state="translated">For example, to increase the memory limit of Node.js process to 4 GB</target>
        </trans-unit>
        <trans-unit id="1d1d780ff0f02c7b21754c6dbb38f16b2a1358fe" translate="yes" xml:space="preserve">
          <source>For example, to set the quality option of a responsive-loader above use:</source>
          <target state="translated">예를 들어, 위의 응답 로더의 품질 옵션을 설정하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="733a23e4abc0a8d4b6ba7ccdba01a9edb871aebb" translate="yes" xml:space="preserve">
          <source>For example, to use Dart Sass, you'd pass:</source>
          <target state="translated">For example, to use Dart Sass, you'd pass:</target>
        </trans-unit>
        <trans-unit id="678528317cc158c5d0b79e6bf40aa9dc39122b01" translate="yes" xml:space="preserve">
          <source>For example, when the &lt;code&gt;target&lt;/code&gt; is set to &lt;code&gt;&quot;electron&quot;&lt;/code&gt;, webpack includes multiple electron specific variables. For more information on which templates and externals are used, you can refer to webpack's &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js#L70-L185&quot;&gt;source code&lt;/a&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;target&lt;/code&gt; 이 &lt;code&gt;&quot;electron&quot;&lt;/code&gt; 으로 설정 되면 webpack은 여러 전자 특정 변수를 포함합니다. 사용되는 템플릿 및 외부에 대한 자세한 내용은 웹팩의 &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js#L70-L185&quot;&gt;소스 코드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="918e3f791c927cfef92771e1720b765f5172ed4e" translate="yes" xml:space="preserve">
          <source>For example, when the &lt;code&gt;target&lt;/code&gt; is set to &lt;code&gt;&quot;electron-main&quot;&lt;/code&gt;, webpack includes multiple electron specific variables.</source>
          <target state="translated">For example, when the &lt;code&gt;target&lt;/code&gt; is set to &lt;code&gt;&quot;electron-main&quot;&lt;/code&gt; , webpack includes multiple electron specific variables.</target>
        </trans-unit>
        <trans-unit id="52ffa513373702a86feaa6440fcad85713560990" translate="yes" xml:space="preserve">
          <source>For example, you can define a new variable in the loader context:</source>
          <target state="translated">For example, you can define a new variable in the loader context:</target>
        </trans-unit>
        <trans-unit id="c3d04cf27bd4be6f7f21f13f220f31e3a32dcf41" translate="yes" xml:space="preserve">
          <source>For example, you can use loaders to tell webpack to load a CSS file or to convert TypeScript to JavaScript. To do this, you would start by installing the loaders you need:</source>
          <target state="translated">예를 들어, 로더를 사용하여 웹팩에 CSS 파일을로드하거나 TypeScript를 JavaScript로 변환하도록 지시 할 수 있습니다. 이렇게하려면 필요한 로더를 설치하여 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="838d39d110214c27e1cdbaebab2b42f9f3e045c6" translate="yes" xml:space="preserve">
          <source>For example, you may access the asset's content buffer via &lt;code&gt;info.content&lt;/code&gt;:</source>
          <target state="translated">For example, you may access the asset's content buffer via &lt;code&gt;info.content&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="04e2a31a2022dcb33c520f4ecb8f0c37259eb1c3" translate="yes" xml:space="preserve">
          <source>For example, your entry looked like this:</source>
          <target state="translated">For example, your entry looked like this:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0eabe518387f5b3c187616b196e5c11cbbb0121a" translate="yes" xml:space="preserve">
          <source>For example: you can use dynamic entries to get the actual entries from an external source (remote server, file system content or database):</source>
          <target state="translated">For example: you can use dynamic entries to get the actual entries from an external source (remote server, file system content or database):</target>
        </trans-unit>
        <trans-unit id="acfc565982752a0938baf7976a9c74b3f4a8e83a" translate="yes" xml:space="preserve">
          <source>For external library code, webpack provides &lt;a href=&quot;../guides/shimming&quot;&gt;shimming options&lt;/a&gt;.</source>
          <target state="translated">외부 라이브러리 코드의 경우 webpack은 &lt;a href=&quot;../guides/shimming&quot;&gt;shimming 옵션을&lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="51d1e42fced245894ad9fbe439c8baaacb5a0507" translate="yes" xml:space="preserve">
          <source>For fine-grained control over each &lt;code&gt;libraryTarget&lt;/code&gt; comment, pass an object:</source>
          <target state="translated">각 &lt;code&gt;libraryTarget&lt;/code&gt; 주석에 대한 세밀한 제어를 위해 오브젝트를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="e27efa5ffc707fccbc8083788ff642aa6778f963" translate="yes" xml:space="preserve">
          <source>For full library configuration and code please refer to &lt;a href=&quot;https://github.com/kalcifer/webpack-library-example&quot;&gt;webpack-library-example&lt;/a&gt;.</source>
          <target state="translated">전체 라이브러리 구성 및 코드는 &lt;a href=&quot;https://github.com/kalcifer/webpack-library-example&quot;&gt;webpack-library-example을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="78cf22e3420bd61e2d01e2ba6bbf2ae087132748" translate="yes" xml:space="preserve">
          <source>For further hints on compatibility issues, check out &lt;a href=&quot;../guides/shimming&quot;&gt;Shimming&lt;/a&gt; of the official docs.</source>
          <target state="translated">For further hints on compatibility issues, check out &lt;a href=&quot;../guides/shimming&quot;&gt;Shimming&lt;/a&gt; of the official docs.</target>
        </trans-unit>
        <trans-unit id="9897dade2cf2820967287768b614edc99a77a1e8" translate="yes" xml:space="preserve">
          <source>For further hints on compatibility issues, check out &lt;a href=&quot;http://webpack.github.io/docs/shimming-modules.html&quot;&gt;Shimming Modules&lt;/a&gt; of the official docs.</source>
          <target state="translated">호환성 문제에 대한 추가 힌트 는 공식 문서의 &lt;a href=&quot;http://webpack.github.io/docs/shimming-modules.html&quot;&gt;Shimming Modules&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7fb7adc0f23536c0f5fedb1ffc66a9cc8d1649b" translate="yes" xml:space="preserve">
          <source>For good error handling, you need to account for these three types of errors:</source>
          <target state="translated">For good error handling, you need to account for these three types of errors:</target>
        </trans-unit>
        <trans-unit id="7203d58eb1262e411dde32a02b39e84ca6f7bf88" translate="yes" xml:space="preserve">
          <source>For importing the default export of an ES2015 module, you have to specify the default property of module.</source>
          <target state="translated">ES2015 모듈의 기본 내보내기를 가져 오려면 module의 기본 속성을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0efc097b04b7fd44aed42642d28aea71debcce57" translate="yes" xml:space="preserve">
          <source>For instance, consider &lt;code&gt;module.js&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;module.js&lt;/code&gt; 를 고려 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f9ee0127d8cb25e19d11120026902b69db8c195b" translate="yes" xml:space="preserve">
          <source>For libraries that use several files from a dependency:</source>
          <target state="translated">종속성에서 여러 파일을 사용하는 라이브러리의 경우 :</target>
        </trans-unit>
        <trans-unit id="4b9e31327342e38267e644f4cd366f001e7888ee" translate="yes" xml:space="preserve">
          <source>For long term caching use &lt;code&gt;filename: &quot;[contenthash].css&quot;&lt;/code&gt;. Optionally add &lt;code&gt;[name]&lt;/code&gt;.</source>
          <target state="translated">장기 캐싱의 경우 &lt;code&gt;filename: &quot;[contenthash].css&quot;&lt;/code&gt; . 선택적으로 &lt;code&gt;[name]&lt;/code&gt; 을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="56a3a561ace145ac5af72ac07a4a571ee1cb6dfa" translate="yes" xml:space="preserve">
          <source>For more granular control, it is possible to specify exactly what information you want. Please note that all of the options in this object are optional.</source>
          <target state="translated">보다 세밀한 제어를 위해 원하는 정보를 정확하게 지정할 수 있습니다. 이 개체의 모든 옵션은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="c4bba2c3f0a47ddacba2cd64ae574544a1616276" translate="yes" xml:space="preserve">
          <source>For more information about getting source maps setup and available options please refer to &lt;a href=&quot;../configuration/devtool&quot;&gt;Devtool configuration&lt;/a&gt;</source>
          <target state="translated">For more information about getting source maps setup and available options please refer to &lt;a href=&quot;../configuration/devtool&quot;&gt;Devtool configuration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3236952e7ddfe477a162dbdb19da13ef2f15fec5" translate="yes" xml:space="preserve">
          <source>For more information on CSP and &lt;code&gt;nonce&lt;/code&gt; attribute, please refer to &lt;strong&gt;Further Reading&lt;/strong&gt; section at the bottom of this page.</source>
          <target state="translated">CSP에 대한 자세한 정보 및 내용은 &lt;code&gt;nonce&lt;/code&gt; 속성을 참조하시기 바랍니다 &lt;strong&gt;더 읽기&lt;/strong&gt; 이 페이지의 하단에있는 섹션.</target>
        </trans-unit>
        <trans-unit id="d04e06f57ad60a58bbd7337642d9bf746776c1b8" translate="yes" xml:space="preserve">
          <source>For more information on how to use this configuration, please refer to the article on &lt;a href=&quot;../guides/author-libraries&quot;&gt;how to author a library&lt;/a&gt;.</source>
          <target state="translated">이 구성을 사용하는 방법에 대한 자세한 내용 &lt;a href=&quot;../guides/author-libraries&quot;&gt;은 라이브러리를 작성하는 방법에&lt;/a&gt; 대한 기사를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="895a6618174ad6a74090d51665e8678334705826" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/&quot;&gt;이 블로그 게시물을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3e7badcb395aecbc49029810c774afdbbf3cb0b" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt;저장소&lt;/a&gt; 를 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="760310b94c1a80fc0896dec6de2cce158bcdb2c8" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/webpack-contrib/grunt-webpack&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://github.com/webpack-contrib/grunt-webpack&quot;&gt;저장소&lt;/a&gt; 를 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="64e050898d4f87c3696dd8ec0461a6d98ab28f33" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt;저장소&lt;/a&gt; 를 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b3f514d5b005df4310892576af4648ba658297e" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/zinserjan/mocha-webpack&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://github.com/zinserjan/mocha-webpack&quot;&gt;저장소&lt;/a&gt; 를 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b9a85b52ac416b997fd0dff50a1a7885a1c04c8" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;stats&quot;&gt;&lt;strong&gt;stats documentation&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;stats&quot;&gt;&lt;strong&gt;통계 설명서를&lt;/strong&gt;&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f76eef7e0117ad0717e3fc52109e5d79be63e187" translate="yes" xml:space="preserve">
          <source>For more options and information, see the &lt;a href=&quot;https://github.com/bripkens/connect-history-api-fallback&quot;&gt;connect-history-api-fallback&lt;/a&gt; documentation.</source>
          <target state="translated">자세한 옵션과 정보는 &lt;a href=&quot;https://github.com/bripkens/connect-history-api-fallback&quot;&gt;connect-history-api-fallback&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d2f674b123a7233ec4fa637805fca776c8513288" translate="yes" xml:space="preserve">
          <source>For more third-party loaders, see the list from &lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#loaders&quot;&gt;awesome-webpack&lt;/a&gt;.</source>
          <target state="translated">더 많은 타사 로더는 &lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#loaders&quot;&gt;awesome-webpack&lt;/a&gt; 의 목록을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb7d2e7db4aa1e93db6a75ac7a98ec24068f5971" translate="yes" xml:space="preserve">
          <source>For more third-party plugins, see the list from &lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#webpack-plugins&quot;&gt;awesome-webpack&lt;/a&gt;.</source>
          <target state="translated">더 많은 타사 플러그인에 대해서는 &lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#webpack-plugins&quot;&gt;awesome-webpack&lt;/a&gt; 의 목록을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="599089abc194c5d4768df940de433ddc09ef0cd4" translate="yes" xml:space="preserve">
          <source>For production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.</source>
          <target state="translated">For production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.</target>
        </trans-unit>
        <trans-unit id="e4578d63bf33346856deed41170e70b40f29518a" translate="yes" xml:space="preserve">
          <source>For production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on. This can be achieved by using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; to extract the CSS when running in production mode.</source>
          <target state="translated">프로덕션 빌드의 경우 나중에 CSS / JS 자원의 병렬로드를 사용할 수 있도록 번들에서 CSS를 추출하는 것이 좋습니다. 이것은 사용에 의해 달성 될 수있다 &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;미니 CSS-추출물 플러그인을&lt;/a&gt; 생산 모드에서 실행할 때 CSS를 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39e5c6933223ab082e9e9d0c3d557851e16ca2d6" translate="yes" xml:space="preserve">
          <source>For projects where css ordering has been mitigated through consistent use of scoping or naming conventions, the css order warnings can be disabled by setting the ignoreOrder flag to true for the plugin.</source>
          <target state="translated">For projects where css ordering has been mitigated through consistent use of scoping or naming conventions, the css order warnings can be disabled by setting the ignoreOrder flag to true for the plugin.</target>
        </trans-unit>
        <trans-unit id="a4b4bb89ca0fa8c44c49cd52426bf7ce160e01d4" translate="yes" xml:space="preserve">
          <source>For proper usage and easy distribution of this configuration, webpack can be configured with &lt;code&gt;webpack.config.js&lt;/code&gt;. Any parameters sent to the CLI will map to a corresponding parameter in the config file.</source>
          <target state="translated">적절한 사용이 구성을 쉽게 배포하는 웹팩을 구성 할 수 있습니다 &lt;code&gt;webpack.config.js&lt;/code&gt; . CLI로 전송 된 모든 매개 변수는 구성 파일의 해당 매개 변수에 맵핑됩니다.</target>
        </trans-unit>
        <trans-unit id="8ed459c84ebd19dbbc274927b8957b1b9a7e0639" translate="yes" xml:space="preserve">
          <source>For proper usage and easy distribution of this configuration, webpack can be configured with &lt;code&gt;webpack.config.js&lt;/code&gt;. Any parameters sent to the CLI will map to a corresponding parameter in the configuration file.</source>
          <target state="translated">For proper usage and easy distribution of this configuration, webpack can be configured with &lt;code&gt;webpack.config.js&lt;/code&gt; . Any parameters sent to the CLI will map to a corresponding parameter in the configuration file.</target>
        </trans-unit>
        <trans-unit id="d07741f751074c25e3082e8444a9efd3eadf952b" translate="yes" xml:space="preserve">
          <source>For simplicity, this guide stems from the examples in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. Please make sure you are familiar with the setup there before moving on.</source>
          <target state="translated">간단하게하기 위해이 안내서는 &lt;a href=&quot;getting-started&quot;&gt;시작하기&lt;/a&gt; 의 예제를 기반으로 합니다. 계속 진행하기 전에 설정에 익숙한 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="faabcd38a8709eb7fd68e43284fea3704676e52e" translate="yes" xml:space="preserve">
          <source>For some systems, watching many file systems can result in a lot of CPU or memory usage. It is possible to exclude a huge folder like &lt;code&gt;node_modules&lt;/code&gt;:</source>
          <target state="translated">일부 시스템의 경우 많은 파일 시스템을 감시하면 많은 CPU 또는 메모리 사용이 발생할 수 있습니다. &lt;code&gt;node_modules&lt;/code&gt; 와 같은 거대한 폴더를 제외시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="835b704de4e2bdde665bca16d657156cf4ad01ea" translate="yes" xml:space="preserve">
          <source>For some systems, watching many files can result in a lot of CPU or memory usage. It is possible to exclude a huge folder like &lt;code&gt;node_modules&lt;/code&gt; using a regular expression:</source>
          <target state="translated">For some systems, watching many files can result in a lot of CPU or memory usage. It is possible to exclude a huge folder like &lt;code&gt;node_modules&lt;/code&gt; using a regular expression:</target>
        </trans-unit>
        <trans-unit id="26db0a36f085d1722bb1b99b8c542931e58979f1" translate="yes" xml:space="preserve">
          <source>For the description of hook types, see &lt;a href=&quot;https://github.com/webpack/tapable#hook-types&quot;&gt;the Tapable docs&lt;/a&gt;.</source>
          <target state="translated">후크 유형에 대한 설명은 &lt;a href=&quot;https://github.com/webpack/tapable#hook-types&quot;&gt;Tapable docs를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6dd5aabca7fef8eb9cd4021eac970170fcada241" translate="yes" xml:space="preserve">
          <source>For the description of hook types, see &lt;a href=&quot;https://github.com/webpack/tapable#tapable&quot;&gt;the Tapable docs&lt;/a&gt;.</source>
          <target state="translated">For the description of hook types, see &lt;a href=&quot;https://github.com/webpack/tapable#tapable&quot;&gt;the Tapable docs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e2aa3c748aa845d77d182a6d4a95f018db234b91" translate="yes" xml:space="preserve">
          <source>For the following configuration of &lt;a href=&quot;../configuration/module#ruleuse&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">For the following configuration of &lt;a href=&quot;../configuration/module#ruleuse&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="3cd71ac5d59d8ab2256d6ae4785eeab9cc228dca" translate="yes" xml:space="preserve">
          <source>For the module system runtime, additional code is emitted to track module &lt;code&gt;parents&lt;/code&gt; and &lt;code&gt;children&lt;/code&gt;. On the management side, the runtime supports two methods: &lt;code&gt;check&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">모듈 시스템 런타임의 경우 모듈 &lt;code&gt;parents&lt;/code&gt; 및 &lt;code&gt;children&lt;/code&gt; 를 추적하기 위해 추가 코드가 생성 됩니다. 관리 측면에서 런타임은 두 가지 방법 ( &lt;code&gt;check&lt;/code&gt; 및 &lt;code&gt;apply&lt;/code&gt; )을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="41c20a41c1473adb85307800627231b0f0140335" translate="yes" xml:space="preserve">
          <source>For the next guides we won't be using all the different assets we've used in this guide, so let's do some cleanup so we're prepared for the next piece of the guides &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt;:</source>
          <target state="translated">다음 가이드에서는이 가이드에서 사용한 모든 다른 자산을 사용하지 않으므로 정리를 수행하여 다음 가이드 &lt;a href=&quot;output-management&quot;&gt;출력 관리에&lt;/a&gt; 대비하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9f9cba9e95a5fde1fe3aa458e4c7cc16a8d786b" translate="yes" xml:space="preserve">
          <source>For the scaffolding instance to run, you need to write your configuration to a &lt;code&gt;.yo-rc.json&lt;/code&gt; file. This could be done using one of the lifecycles in the yeoman generator, such as the &lt;code&gt;writing&lt;/code&gt; method:</source>
          <target state="translated">For the scaffolding instance to run, you need to write your configuration to a &lt;code&gt;.yo-rc.json&lt;/code&gt; file. This could be done using one of the lifecycles in the yeoman generator, such as the &lt;code&gt;writing&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="317c7e072d68d24707a43d33a6d5f58243ad6e80" translate="yes" xml:space="preserve">
          <source>For this configuration:</source>
          <target state="translated">이 구성의 경우 :</target>
        </trans-unit>
        <trans-unit id="f5515fcfda9c0c050d49bcfaf01676789803dd19" translate="yes" xml:space="preserve">
          <source>For this guide, let's use the &lt;code&gt;inline-source-map&lt;/code&gt; option, which is good for illustrative purposes (though not for production):</source>
          <target state="translated">이 안내서에서는 &lt;code&gt;inline-source-map&lt;/code&gt; 옵션을 사용합니다.이 옵션은 설명 용으로 적합하지만 프로덕션에는 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="12c1241a8c3e3033a62a8ade78fe757c748682e0" translate="yes" xml:space="preserve">
          <source>For those using Grunt, we recommend the &lt;a href=&quot;https://www.npmjs.com/package/grunt-webpack&quot;&gt;&lt;code&gt;grunt-webpack&lt;/code&gt;&lt;/a&gt; package. With &lt;code&gt;grunt-webpack&lt;/code&gt; you can run webpack or &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; as a task, get access to stats within &lt;a href=&quot;https://gruntjs.com/api/grunt.template&quot;&gt;template tags&lt;/a&gt;, split development and production configurations and more. Start by installing &lt;code&gt;grunt-webpack&lt;/code&gt; as well as &lt;code&gt;webpack&lt;/code&gt; itself if you haven't already:</source>
          <target state="translated">Grunt를 사용하는 사람들은 &lt;a href=&quot;https://www.npmjs.com/package/grunt-webpack&quot;&gt; &lt;code&gt;grunt-webpack&lt;/code&gt; &lt;/a&gt; 패키지를 권장합니다 . &lt;code&gt;grunt-webpack&lt;/code&gt; 을 사용하면 webpack 또는 &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; 를 작업으로 실행하고, &lt;a href=&quot;https://gruntjs.com/api/grunt.template&quot;&gt;템플릿 태그&lt;/a&gt; 내에서 통계에 액세스하고 , 개발 및 프로덕션 구성을 분할 할 수 있습니다. &lt;code&gt;grunt-webpack&lt;/code&gt; 및 &lt;code&gt;webpack&lt;/code&gt; 자체를 아직 설치하지 않은 경우 설치하여 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a4510e3deee83c26f734c87058488af0f5e1e48" translate="yes" xml:space="preserve">
          <source>For urls that start with a &lt;code&gt;/&lt;/code&gt;, the default behavior is to not translate them. If a &lt;code&gt;root&lt;/code&gt; query parameter is set, however, it will be prepended to the url and then translated.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 로 시작하는 URL의 경우 기본 동작은 해당 URL을 번역하지 않는 것입니다. 그러나 &lt;code&gt;root&lt;/code&gt; 쿼리 매개 변수가 설정되면 URL 앞에 추가 된 다음 번역됩니다.</target>
        </trans-unit>
        <trans-unit id="bd82e9e6ccdd43adaf52e1586605314b3ab3407a" translate="yes" xml:space="preserve">
          <source>For using Literate CoffeeScript you should setup:</source>
          <target state="translated">For using Literate CoffeeScript you should setup:</target>
        </trans-unit>
        <trans-unit id="f6b2f296a264397130adc13660a9295a5e98d58a" translate="yes" xml:space="preserve">
          <source>For webpack 3 support, see &lt;a href=&quot;https://github.com/webpack-contrib/closure-webpack-plugin/tree/webpack-3&quot;&gt;https://github.com/webpack-contrib/closure-webpack-plugin/tree/webpack-3&lt;/a&gt;</source>
          <target state="translated">For webpack 3 support, see &lt;a href=&quot;https://github.com/webpack-contrib/closure-webpack-plugin/tree/webpack-3&quot;&gt;https://github.com/webpack-contrib/closure-webpack-plugin/tree/webpack-3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c33b8e0597956d13bd872c18b5e4812330a1853e" translate="yes" xml:space="preserve">
          <source>For webpack-command:</source>
          <target state="translated">웹팩 명령의 경우 :</target>
        </trans-unit>
        <trans-unit id="d326f461878bf58b89ce06fed8f71f001eb74030" translate="yes" xml:space="preserve">
          <source>For webpack-dev-server, this property needs to be in the &lt;a href=&quot;dev-server#devserverstats-&quot;&gt;&lt;code&gt;devServer&lt;/code&gt; configuration object&lt;/a&gt;.</source>
          <target state="translated">For webpack-dev-server, this property needs to be in the &lt;a href=&quot;dev-server#devserverstats-&quot;&gt; &lt;code&gt;devServer&lt;/code&gt; configuration object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="511109206e9408aadf4ee8e44278db56b180d7d2" translate="yes" xml:space="preserve">
          <source>For webpack-dev-server, this property needs to be in the &lt;code&gt;devServer&lt;/code&gt; object.</source>
          <target state="translated">webpack-dev-server의 경우이 속성은 &lt;code&gt;devServer&lt;/code&gt; 객체 에 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="aa93931191cd7d8e17d63d38c31201085f2e92fc" translate="yes" xml:space="preserve">
          <source>For webpack-serve:</source>
          <target state="translated">webpack-serve의 경우 :</target>
        </trans-unit>
        <trans-unit id="9273e4b7bcfa18d9f7463f261345960ebcfc63f8" translate="yes" xml:space="preserve">
          <source>For widespread use of the library, we would like it to be compatible in different environments, i.e. CommonJS, AMD, Node.js and as a global variable. To make your library available for consumption, add the &lt;code&gt;library&lt;/code&gt; property inside &lt;code&gt;output&lt;/code&gt;:</source>
          <target state="translated">라이브러리를 광범위하게 사용하기 위해 CommonJS, AMD, Node.js 및 전역 변수와 같은 다른 환경에서 호환되기를 원합니다. 라이브러리를 사용할 수있게하려면 &lt;code&gt;output&lt;/code&gt; 내에 &lt;code&gt;library&lt;/code&gt; 속성을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7b7f194d3bdede0b2cf8b834ba3dac6393d163b" translate="yes" xml:space="preserve">
          <source>Format of generated exports</source>
          <target state="translated">Format of generated exports</target>
        </trans-unit>
        <trans-unit id="2adf269b0449677fdc4a353f7ea5e1d6ecce70c3" translate="yes" xml:space="preserve">
          <source>Format of generated exports.</source>
          <target state="translated">Format of generated exports.</target>
        </trans-unit>
        <trans-unit id="2e4ef15cc618567275ba3935ac79605cc577f0df" translate="yes" xml:space="preserve">
          <source>Format of generated imports</source>
          <target state="translated">Format of generated imports</target>
        </trans-unit>
        <trans-unit id="9360cf5c705a321c6ee75f16c29c937f2493cf14" translate="yes" xml:space="preserve">
          <source>Fragment with leading &lt;code&gt;#&lt;/code&gt;</source>
          <target state="translated">Fragment with leading &lt;code&gt;#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="9cd4978771c0e0cc4a44b34bdee7734e0f8d64a4" translate="yes" xml:space="preserve">
          <source>From CoffeeScript 2 documentation:</source>
          <target state="translated">From CoffeeScript 2 documentation:</target>
        </trans-unit>
        <trans-unit id="d6a7ccd9177991b4bb80c50f67755ebc9f0aaeed" translate="yes" xml:space="preserve">
          <source>From is a Dir</source>
          <target state="translated">From is a Dir</target>
        </trans-unit>
        <trans-unit id="adab13990fbe6b69bcce7e1cfd7becb1da28cb0f" translate="yes" xml:space="preserve">
          <source>From is a File</source>
          <target state="translated">From is a File</target>
        </trans-unit>
        <trans-unit id="e16c8b71fa14946201c5945c1e202a78ae10ca6a" translate="yes" xml:space="preserve">
          <source>From is a Glob</source>
          <target state="translated">From is a Glob</target>
        </trans-unit>
        <trans-unit id="b4c9c1af5a6f495b0e8cc1143440d8c923e8122d" translate="yes" xml:space="preserve">
          <source>From opening a bug report to creating a pull request: &lt;strong&gt;every contribution is appreciated and welcome&lt;/strong&gt;. If you're planing to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.</source>
          <target state="translated">버그 보고서 열기에서 풀 요청 만들기까지 : &lt;strong&gt;모든 기여에 감사드립니다&lt;/strong&gt; . 새로운 기능을 구현하거나 API를 변경하려는 경우 먼저 문제를 만드십시오. 이런 식으로 우리는 당신의 소중한 일이 헛되지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f616ce9ad842400effef399638c814e05690bcd" translate="yes" xml:space="preserve">
          <source>From opening a bug report to creating a pull request: &lt;strong&gt;every contribution is appreciated and welcome&lt;/strong&gt;. If you're planning to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.</source>
          <target state="translated">From opening a bug report to creating a pull request: &lt;strong&gt;every contribution is appreciated and welcome&lt;/strong&gt;. If you're planning to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.</target>
        </trans-unit>
        <trans-unit id="4aa24113e518e04086d8050adf28d66ba9655862" translate="yes" xml:space="preserve">
          <source>Full information about placeholders you can find &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Full information about placeholders you can find &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2aca14fe504f81ebc3842b7902159223ee607b34" translate="yes" xml:space="preserve">
          <source>Fully dynamic statements, such as &lt;code&gt;import(foo)&lt;/code&gt;, &lt;strong&gt;will fail&lt;/strong&gt; because webpack requires at least some file location information. This is because &lt;code&gt;foo&lt;/code&gt; could potentially be any path to any file in your system or project. The &lt;code&gt;import()&lt;/code&gt; must contain at least some information about where the module is located, so bundling can be limited to a specific directory or set of files.</source>
          <target state="translated">완전 같은 동적 명령문, &lt;code&gt;import(foo)&lt;/code&gt; , &lt;strong&gt;실패&lt;/strong&gt; 웹팩은 적어도 일부 파일 위치 정보를 필요로하기 때문이다. &lt;code&gt;foo&lt;/code&gt; 는 잠재적으로 시스템이나 프로젝트의 파일에 대한 경로 일 수 있기 때문 입니다. &lt;code&gt;import()&lt;/code&gt; 그래서 특정 디렉토리 나 파일의 집합을 제한 할 수 있습니다 번들, 모듈의 위치에 대한 적어도 일부 정보를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="6bc0a35d4795d9b8d4c3a55a337eae2707309b45" translate="yes" xml:space="preserve">
          <source>Function or Promise that modifies file contents before copying</source>
          <target state="translated">복사하기 전에 파일 내용을 수정하는 기능 또는 약속</target>
        </trans-unit>
        <trans-unit id="8c3d3650248374e22dae36ea24fed3e7f2834e96" translate="yes" xml:space="preserve">
          <source>Function-Config Parameters</source>
          <target state="translated">기능 구성 매개 변수</target>
        </trans-unit>
        <trans-unit id="b4f7440917f92627acb31305e33864f678b72a2c" translate="yes" xml:space="preserve">
          <source>FunctionModulePlugin</source>
          <target state="translated">FunctionModulePlugin</target>
        </trans-unit>
        <trans-unit id="7e04cb07bda5c67ca189c527f3456f66f176f5a3" translate="yes" xml:space="preserve">
          <source>Further Optimizations</source>
          <target state="translated">추가 최적화</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">추가 자료</target>
        </trans-unit>
        <trans-unit id="779353a95ed3971a5e95d99c84766a154bcb40ce" translate="yes" xml:space="preserve">
          <source>Further expansion for other popular target values</source>
          <target state="translated">다른 인기있는 목표 값에 대한 추가 확장</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">General</target>
        </trans-unit>
        <trans-unit id="439ecf1b4a1b110fea3463700ccbb1496c22ec93" translate="yes" xml:space="preserve">
          <source>General asset type</source>
          <target state="translated">General asset type</target>
        </trans-unit>
        <trans-unit id="3421f52fe595822cbdf2b2c3bed8bc675a271401" translate="yes" xml:space="preserve">
          <source>General purpose hook that is called for every parsed statement in a code fragment.</source>
          <target state="translated">General purpose hook that is called for every parsed statement in a code fragment.</target>
        </trans-unit>
        <trans-unit id="d9c16407b5f55c64ebbcb4529ce63733b1170477" translate="yes" xml:space="preserve">
          <source>General purpose hook that is called when parsing statements in a code fragment.</source>
          <target state="translated">코드 단편에서 명령문을 구문 분석 할 때 호출되는 범용 후크.</target>
        </trans-unit>
        <trans-unit id="836479db93080fbe6804e74cbd97372cf3edc6c9" translate="yes" xml:space="preserve">
          <source>General syntax</source>
          <target state="translated">일반적인 문법</target>
        </trans-unit>
        <trans-unit id="267edaccd9dfd34ee233d2040cca1705a18a8234" translate="yes" xml:space="preserve">
          <source>Generate Chrome profile file which includes timings of plugins execution. Outputs &lt;code&gt;events.json&lt;/code&gt; file by default. It is possible to provide custom file path using &lt;code&gt;outputPath&lt;/code&gt; option.</source>
          <target state="translated">플러그인 실행 타이밍이 포함 된 Chrome 프로필 파일을 생성합니다. 기본적으로 &lt;code&gt;events.json&lt;/code&gt; 파일을 출력 합니다. &lt;code&gt;outputPath&lt;/code&gt; 옵션을 사용하여 사용자 정의 파일 경로를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b25535dfa281f8ff604ac5874d3d369127253b68" translate="yes" xml:space="preserve">
          <source>Generate an extra chunk, which contains common modules shared between entry points.</source>
          <target state="translated">진입 점간에 공유되는 공통 모듈이 포함 된 추가 청크를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2e5937364709991272132865ae71abeededd4207" translate="yes" xml:space="preserve">
          <source>Generate compact code</source>
          <target state="translated">컴팩트 코드 생성</target>
        </trans-unit>
        <trans-unit id="c3e5abeee44279be3f7356a7cdff35d5c817ac85" translate="yes" xml:space="preserve">
          <source>Generate output:</source>
          <target state="translated">Generate output:</target>
        </trans-unit>
        <trans-unit id="09af1816fa4404088921403a3a4ec4b34f14628e" translate="yes" xml:space="preserve">
          <source>Generate unique an output report</source>
          <target state="translated">Generate unique an output report</target>
        </trans-unit>
        <trans-unit id="5b3d23beca0414fc368f0d72c3498bb9b340ac79" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;require&lt;/code&gt; function that is not parsed by webpack. Can be used to do cool stuff with a global require function if available.</source>
          <target state="translated">웹팩에서 구문 분석하지 않은 &lt;code&gt;require&lt;/code&gt; 기능을 생성합니다 . 사용 가능한 경우 전역 필수 기능으로 멋진 작업을 수행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd2cb051773a703fdbabd8c09f218722870e6d61" translate="yes" xml:space="preserve">
          <source>Get Started</source>
          <target state="translated">시작하다</target>
        </trans-unit>
        <trans-unit id="40c0a9e8fe5bb818000a38e6034f00a4e23928c2" translate="yes" xml:space="preserve">
          <source>Get access to the abstract syntax tree (AST) of a code fragment</source>
          <target state="translated">코드 조각의 추상 구문 트리 (AST)에 액세스</target>
        </trans-unit>
        <trans-unit id="530c1d1df48e4bd85402cf11677c65636526a151" translate="yes" xml:space="preserve">
          <source>Get current version</source>
          <target state="translated">Get current version</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="84b2ebe1fa32b1400265ee97855d671b85abdf8c" translate="yes" xml:space="preserve">
          <source>Given Babel's &lt;code&gt;PartialConfig&lt;/code&gt; object, return the &lt;code&gt;options&lt;/code&gt; object that should be passed to &lt;code&gt;babel.transform&lt;/code&gt;.</source>
          <target state="translated">바벨의 주어 &lt;code&gt;PartialConfig&lt;/code&gt; 의 객체 반환 &lt;code&gt;options&lt;/code&gt; 그에게 전달되어야 객체 &lt;code&gt;babel.transform&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="064d9270c9c0e2d5b1900fd2192142765c68e65b" translate="yes" xml:space="preserve">
          <source>Given Babel's result object, allow loaders to make additional tweaks to it.</source>
          <target state="translated">Babel의 결과 객체가 주어지면 로더가 추가로 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff939cc0ef3ffab12f0cc0e0a59d5dee565dd204" translate="yes" xml:space="preserve">
          <source>Given an asset is created that is over 250kb:</source>
          <target state="translated">250kb가 넘는 자산이 생성 된 경우 :</target>
        </trans-unit>
        <trans-unit id="52313d5601981377b9e94081eb626a55c4145d49" translate="yes" xml:space="preserve">
          <source>Given it's not particularly fun to run a local copy of webpack from the CLI, we can set up a little shortcut. Let's adjust our &lt;em&gt;package.json&lt;/em&gt; by adding an &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm script&lt;/a&gt;:</source>
          <target state="translated">CLI에서 웹팩의 로컬 사본을 실행하는 것이 특히 재미 있지 않다면 약간의 단축키를 설정할 수 있습니다. &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm 스크립트&lt;/a&gt; 를 추가하여 &lt;em&gt;package.json&lt;/em&gt; 을 조정 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="ff8a077fda7fb23c426d98f1e43a017fd9146a07" translate="yes" xml:space="preserve">
          <source>Given the following example this require call is used: In &lt;code&gt;/abc/file.js&lt;/code&gt;:</source>
          <target state="translated">다음 예제에서 호출이 필요합니다. In &lt;code&gt;/abc/file.js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b6c04d8a0a7758046b027d98824e90c3131f7ec0" translate="yes" xml:space="preserve">
          <source>Given the following example, this require call is used:</source>
          <target state="translated">Given the following example, this require call is used:</target>
        </trans-unit>
        <trans-unit id="de72038d4b5ad14eb52c0ecb643c21057d3e0510" translate="yes" xml:space="preserve">
          <source>Given the loader's options, split custom options out of &lt;code&gt;babel-loader&lt;/code&gt;'s options.</source>
          <target state="translated">로더 옵션이 주어지면 &lt;code&gt;babel-loader&lt;/code&gt; 옵션에서 사용자 정의 옵션을 분리하십시오 .</target>
        </trans-unit>
        <trans-unit id="3af4a8e13463e1165de4a6589cdd9fc07d708cd4" translate="yes" xml:space="preserve">
          <source>Given you have this file &lt;code&gt;example.js&lt;/code&gt;</source>
          <target state="translated">이 파일이 &lt;code&gt;example.js&lt;/code&gt; 인 경우</target>
        </trans-unit>
        <trans-unit id="39ae791376ed2af711933f540925e5251b73dfcb" translate="yes" xml:space="preserve">
          <source>Given you have this file:</source>
          <target state="translated">Given you have this file:</target>
        </trans-unit>
        <trans-unit id="ed47c24180472bcf3bc06bce7231e14a62c8f320" translate="yes" xml:space="preserve">
          <source>Glob or path from where we сopy files.</source>
          <target state="translated">Glob or path from where we сopy files.</target>
        </trans-unit>
        <trans-unit id="bac0abe927e35052819250fc86af9e5e1991523e" translate="yes" xml:space="preserve">
          <source>Glob or path from where we сopy files. Globs accept &lt;a href=&quot;https://github.com/mrmlnc/fast-glob#pattern-syntax&quot;&gt;fast-glob pattern-syntax&lt;/a&gt;. Glob can only be a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Glob or path from where we сopy files. Globs accept &lt;a href=&quot;https://github.com/mrmlnc/fast-glob#pattern-syntax&quot;&gt;fast-glob pattern-syntax&lt;/a&gt;. Glob can only be a &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="501c99a124322f7b0cea416e47fca960a9e40836" translate="yes" xml:space="preserve">
          <source>Global Assets</source>
          <target state="translated">글로벌 자산</target>
        </trans-unit>
        <trans-unit id="90a9850b6559af58556292d4779e0b6de4467981" translate="yes" xml:space="preserve">
          <source>Global Exports</source>
          <target state="translated">글로벌 수출</target>
        </trans-unit>
        <trans-unit id="2a102f27f850350772f2e44ae41ae0c25df0de90" translate="yes" xml:space="preserve">
          <source>Global Installation</source>
          <target state="translated">글로벌 설치</target>
        </trans-unit>
        <trans-unit id="51c71fb227428a199ad880c7f73f4dc02ad34ae6" translate="yes" xml:space="preserve">
          <source>Global variable when included through &lt;code&gt;script&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;script&lt;/code&gt; 태그를 통해 포함 된 글로벌 변수 .</target>
        </trans-unit>
        <trans-unit id="95a8da0a3d2b63a2e6803b00a56d1544f59bbb9a" translate="yes" xml:space="preserve">
          <source>Globs accept &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch options&lt;/a&gt;</source>
          <target state="translated">글로브는 &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;미니 매치 옵션을&lt;/a&gt; 허용합니다</target>
        </trans-unit>
        <trans-unit id="bb329abd042a15a2d2a78ee9c7d36d13496c704c" translate="yes" xml:space="preserve">
          <source>Globs to ignore for this pattern</source>
          <target state="translated">이 패턴에 대해 무시할 글로브</target>
        </trans-unit>
        <trans-unit id="b99f921a818c45aa1b8368166af16bfc30e29cb1" translate="yes" xml:space="preserve">
          <source>Go to Chrome, open DevTools, and go to the &lt;code&gt;Performance&lt;/code&gt; tab (formerly &lt;code&gt;Timeline&lt;/code&gt;).</source>
          <target state="translated">Chrome으로 이동하여 DevTools를 열고 &lt;code&gt;Performance&lt;/code&gt; 탭 (이전의 &lt;code&gt;Timeline&lt;/code&gt; )으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="0954c7435dbfd382732840badd4d1afd6a8cfbdf" translate="yes" xml:space="preserve">
          <source>Good loaders for requiring your assets are the &lt;a href=&quot;file-loader&quot;&gt;file-loader&lt;/a&gt; and the &lt;a href=&quot;url-loader&quot;&gt;url-loader&lt;/a&gt; which you should specify in your config (see &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#assets&quot;&gt;below&lt;/a&gt;).</source>
          <target state="translated">자산을 요구하기에 적합한 &lt;a href=&quot;url-loader&quot;&gt;로더&lt;/a&gt; 는 설정에서 지정해야하는 &lt;a href=&quot;file-loader&quot;&gt;파일 로더&lt;/a&gt; 및 URL 로더 입니다 ( &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#assets&quot;&gt;아래 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="000eb225364983805facb15a740de1dfd422fd39" translate="yes" xml:space="preserve">
          <source>Gotchas</source>
          <target state="translated">Gotchas</target>
        </trans-unit>
        <trans-unit id="c6981ea7b41b4e13bc33c49df856e07c4ced2efc" translate="yes" xml:space="preserve">
          <source>Granular Shimming</source>
          <target state="translated">세분화 된 쉬밍</target>
        </trans-unit>
        <trans-unit id="c06ca0601da1369de3d0247e6e4f8b7bbe8e4bfd" translate="yes" xml:space="preserve">
          <source>Grunt</source>
          <target state="translated">Grunt</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="584874506ed78c16764b272c293130eb3c227f02" translate="yes" xml:space="preserve">
          <source>Guides - Hot Module Replacement</source>
          <target state="translated">가이드-핫 모듈 교체</target>
        </trans-unit>
        <trans-unit id="5a6238801e2733bcdc7249e97a255df97e530fc4" translate="yes" xml:space="preserve">
          <source>Gulp</source>
          <target state="translated">Gulp</target>
        </trans-unit>
        <trans-unit id="162cda8d5696ebeaa3195028438031d0b7b1d8ac" translate="yes" xml:space="preserve">
          <source>Gulp is also a fairly straightforward integration with the help of the &lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt;&lt;code&gt;webpack-stream&lt;/code&gt;&lt;/a&gt; package (a.k.a. &lt;code&gt;gulp-webpack&lt;/code&gt;). In this case, it is unnecessary to install &lt;code&gt;webpack&lt;/code&gt; separately as it is a direct dependency of &lt;code&gt;webpack-stream&lt;/code&gt;:</source>
          <target state="translated">Gulp는 또한 &lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt; &lt;code&gt;webpack-stream&lt;/code&gt; &lt;/a&gt; 패키지 (일명 &lt;code&gt;gulp-webpack&lt;/code&gt; )를 사용 하여 매우 간단하게 통합됩니다 . 이 경우 &lt;code&gt;webpack-stream&lt;/code&gt; 의 직접적인 의존성이므로 &lt;code&gt;webpack&lt;/code&gt; 을 별도로 설치할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="040f189f5df653616cc5f84c5b2d4f044112abdb" translate="yes" xml:space="preserve">
          <source>HMR Accepted</source>
          <target state="translated">받아 들여지는 HMR</target>
        </trans-unit>
        <trans-unit id="1018a3c5183c72da47fa44fb8982525184c94afd" translate="yes" xml:space="preserve">
          <source>HMR can be used in development as a LiveReload replacement. &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; supports a &lt;code&gt;hot&lt;/code&gt; mode in which it tries to update with HMR before trying to reload the whole page. See the &lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;Hot Module Replacement guide&lt;/a&gt; for details.</source>
          <target state="translated">HMR은 개발 과정에서 LiveReload 대체품으로 사용될 수 있습니다. &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; 는 전체 페이지를 다시로드하기 전에 HMR로 업데이트를 시도 하는 &lt;code&gt;hot&lt;/code&gt; 모드를 지원합니다 . 자세한 내용은 &lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;핫 모듈 교체 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d800c057a6735f14564a57866175b8be7aa6bb0c" translate="yes" xml:space="preserve">
          <source>HMR can be used with &lt;code&gt;import.meta.webpackHot&lt;/code&gt; instead of &lt;code&gt;module.hot&lt;/code&gt;.</source>
          <target state="translated">HMR can be used with &lt;code&gt;import.meta.webpackHot&lt;/code&gt; instead of &lt;code&gt;module.hot&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d12f13c37448b6d29dd08187afe1a7f58393cf8" translate="yes" xml:space="preserve">
          <source>HMR is an opt-in feature that only affects modules containing HMR code. One example would be patching styling through the &lt;a href=&quot;https://github.com/webpack-contrib/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt;. In order for patching to work, the &lt;code&gt;style-loader&lt;/code&gt; implements the HMR interface; when it receives an update through HMR, it replaces the old styles with the new ones.</source>
          <target state="translated">HMR은 HMR 코드가 포함 된 모듈에만 영향을주는 옵트 인 기능입니다. 한 가지 예는 &lt;a href=&quot;https://github.com/webpack-contrib/style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; 를&lt;/a&gt; 통해 스타일을 패치하는 것 입니다 . 패치 적용을 위해 &lt;code&gt;style-loader&lt;/code&gt; 는 HMR 인터페이스를 구현합니다. HMR을 통해 업데이트를 받으면 이전 스타일을 새 스타일로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="cfe9b710019e4ee945740e00f1aeef2a5f017b29" translate="yes" xml:space="preserve">
          <source>HMR should &lt;strong&gt;never&lt;/strong&gt; be used in production.</source>
          <target state="translated">생산에 HMR을 사용해서는 &lt;strong&gt;안됩니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="19e74394701c30e0fa9cd48a46d826fc558a6fd0" translate="yes" xml:space="preserve">
          <source>HMR support</source>
          <target state="translated">HMR 지원</target>
        </trans-unit>
        <trans-unit id="d63d0656280072a9a4d8ba809c85e7d8c4e8bc54" translate="yes" xml:space="preserve">
          <source>HMR with Stylesheets</source>
          <target state="translated">스타일 시트가있는 HMR</target>
        </trans-unit>
        <trans-unit id="9ea070623e5978f9a6abc7b8ffd1dd8cc5722be3" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;img src=&quot;...&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;img src=&quot;...&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ec38b3cdc6f3ee7066d3f6b59963461878ee6c2" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;link rel=&quot;preload/prefetch&quot;&amp;gt;&lt;/code&gt; in HTML</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;link rel=&quot;preload/prefetch&quot;&amp;gt;&lt;/code&gt; in HTML</target>
        </trans-unit>
        <trans-unit id="9733c9cef8bc9fc3b342a59d4526e705f2c69144" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be618efb16bfcea098e0296a32168bb619e44181" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;script src=&quot;...&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;script src=&quot;...&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="719cc1320c02877459466c22f512f467d4ec4ff6" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&lt;/code&gt; in HTML</source>
          <target state="translated">HTML &lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&lt;/code&gt; in HTML</target>
        </trans-unit>
        <trans-unit id="6538a65a98c8b2c04c168060b8adca63a513baa4" translate="yes" xml:space="preserve">
          <source>HTML template is required to serve the bundle, usually it is an &lt;code&gt;index.html&lt;/code&gt; file. Make sure that script references are added into HTML, webpack-dev-server doesn't inject them automatically.</source>
          <target state="translated">HTML template is required to serve the bundle, usually it is an &lt;code&gt;index.html&lt;/code&gt; file. Make sure that script references are added into HTML, webpack-dev-server doesn't inject them automatically.</target>
        </trans-unit>
        <trans-unit id="831b1b876a6bee5fd0ce581fd2273d191c011a1b" translate="yes" xml:space="preserve">
          <source>HTTP/2 with a self-signed certificate:</source>
          <target state="translated">HTTP/2 with a self-signed certificate:</target>
        </trans-unit>
        <trans-unit id="fbc374a23e55e5f423c3640a4df4338aeafc84a9" translate="yes" xml:space="preserve">
          <source>HTTP2 Aggressive Splitting Example</source>
          <target state="translated">HTTP2 Aggressive Splitting Example</target>
        </trans-unit>
        <trans-unit id="74f2780df4ccf690821b5194f099735ba6bd6e76" translate="yes" xml:space="preserve">
          <source>Hacky access to the Compilation object of webpack.</source>
          <target state="translated">webpack의 Compilation 객체에 대한 해키 액세스.</target>
        </trans-unit>
        <trans-unit id="9683d34ca67b262aac8b1514f57d207315c5e8bf" translate="yes" xml:space="preserve">
          <source>Hacky access to the Compiler object of webpack.</source>
          <target state="translated">웹팩의 컴파일러 객체에 대한 해킹 액세스.</target>
        </trans-unit>
        <trans-unit id="cadc8997538f9ab2ffa07602fc1f67d5bb167917" translate="yes" xml:space="preserve">
          <source>Hacky access to the Module object being loaded.</source>
          <target state="translated">로드중인 모듈 개체에 대한 해킹 액세스</target>
        </trans-unit>
        <trans-unit id="dc238823d206c000a5a4e27a692803d92c2fdc10" translate="yes" xml:space="preserve">
          <source>Hash is required to enable HMR</source>
          <target state="translated">HMR을 활성화하려면 해시가 필요합니다</target>
        </trans-unit>
        <trans-unit id="2bb6cff94d1802bdd30f75ecaccbc14c2cd5a0a6" translate="yes" xml:space="preserve">
          <source>HashedModuleIdsPlugin</source>
          <target state="translated">HashedModuleIdsPlugin</target>
        </trans-unit>
        <trans-unit id="5551ebd48f7eaa66477f72c449e4b2ccfc0f9609" translate="yes" xml:space="preserve">
          <source>Hashes</source>
          <target state="translated">Hashes</target>
        </trans-unit>
        <trans-unit id="c7818998b4699953cff73d5d32aace74763ad2ee" translate="yes" xml:space="preserve">
          <source>Help Wanted: This page is still a work in progress. If you are familiar with any of the options for which the description or examples are incomplete, please create an issue and submit a PR at the &lt;a href=&quot;https://github.com/webpack/webpack.js.org&quot;&gt;docs repo&lt;/a&gt;!</source>
          <target state="translated">구함 도움말 :이 페이지는 아직 진행중인 작업입니다. 설명이나 예제가 불완전한 옵션에 익숙한 경우 문제를 작성하고 &lt;a href=&quot;https://github.com/webpack/webpack.js.org&quot;&gt;문서 저장소&lt;/a&gt; 에서 PR을 제출하십시오 !</target>
        </trans-unit>
        <trans-unit id="d7f1c15ac5cd26f642dc1ff958f73694ed690577" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;package/things/apple&lt;/code&gt; might be found in &lt;code&gt;.../package/good-things/apple&lt;/code&gt; or in &lt;code&gt;.../package/bad-things/apple&lt;/code&gt;.</source>
          <target state="translated">Here &lt;code&gt;package/things/apple&lt;/code&gt; might be found in &lt;code&gt;.../package/good-things/apple&lt;/code&gt; or in &lt;code&gt;.../package/bad-things/apple&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b71253f8b512249fe3907dcd007dccf2d2ad058" translate="yes" xml:space="preserve">
          <source>Here are some other useful plugins and loaders provided by the community for splitting code:</source>
          <target state="translated">다음은 커뮤니티에서 코드 분할을 위해 제공하는 다른 유용한 플러그인 및 로더입니다.</target>
        </trans-unit>
        <trans-unit id="9e5dc64afbacaa12ee3a2a30bd098f6bd1c4e825" translate="yes" xml:space="preserve">
          <source>Here are the available options with their &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsDefaulter.js&quot;&gt;defaults&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsDefaulter.js&quot;&gt;기본적으로&lt;/a&gt; 사용 가능한 옵션은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f26eac870c694669bc407e43dc4d4add291bfe24" translate="yes" xml:space="preserve">
          <source>Here are the available options with their &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/config/defaults.js&quot;&gt;defaults&lt;/a&gt;:</source>
          <target state="translated">Here are the available options with their &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/config/defaults.js&quot;&gt;defaults&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="08b8f507d07f88f0fb9260497dafb27c0317c7aa" translate="yes" xml:space="preserve">
          <source>Here is an example to have both HMR in &lt;code&gt;development&lt;/code&gt; and your styles extracted in a file for &lt;code&gt;production&lt;/code&gt; builds.</source>
          <target state="translated">다음은 &lt;code&gt;development&lt;/code&gt; HMR 과 &lt;code&gt;production&lt;/code&gt; 빌드 용 파일에서 스타일을 추출 하는 예제 입니다.</target>
        </trans-unit>
        <trans-unit id="a2834dc75921a3465397c3c81181af70d68f53da" translate="yes" xml:space="preserve">
          <source>Here is no need to change it.</source>
          <target state="translated">변경할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bbb9107ab5930b1c7f25ec41bad41f1f5ec937db" translate="yes" xml:space="preserve">
          <source>Here things get a bit more technical... if you're not interested in the internals, feel free to jump to the &lt;a href=&quot;../api/hot-module-replacement&quot;&gt;HMR API page&lt;/a&gt; or &lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;HMR guide&lt;/a&gt;.</source>
          <target state="translated">내부 기술에 관심이 없다면 &lt;a href=&quot;../api/hot-module-replacement&quot;&gt;HMR API 페이지&lt;/a&gt; 또는 &lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;HMR 안내서로&lt;/a&gt; 자유롭게 이동 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f1a28b3e5212fb6ea1e10afb5efc421f0c92bf1" translate="yes" xml:space="preserve">
          <source>Here we declare a new module for SVGs by specifying any import that ends in &lt;code&gt;.svg&lt;/code&gt; and defining the module's &lt;code&gt;content&lt;/code&gt; as &lt;code&gt;any&lt;/code&gt;. We could be more explicit about it being a url by defining the type as string. The same concept applies to other assets including CSS, SCSS, JSON and more.</source>
          <target state="translated">여기에서는 &lt;code&gt;.svg&lt;/code&gt; 로 끝나는 가져 오기를 지정 하고 모듈의 &lt;code&gt;content&lt;/code&gt; 을 &lt;code&gt;any&lt;/code&gt; 로 정의하여 SVG에 대한 새 모듈을 선언 합니다 . 유형을 문자열로 정의하여 URL임을 더 명확하게 알 수 있습니다. CSS, SCSS, JSON 등을 포함한 다른 자산에도 동일한 개념이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="689aa12a2c0bc32ff32aad2b0904efce3ab28b08" translate="yes" xml:space="preserve">
          <source>Here you can access the Express app object and add your own custom middleware to it. For example, to define custom handlers for some paths:</source>
          <target state="translated">여기에서 Express 앱 개체에 액세스하고 자신 만의 사용자 지정 미들웨어를 추가 할 수 있습니다. 예를 들어, 일부 경로에 대한 사용자 정의 핸들러를 정의하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f5abb81e8bbd51406899a140ea1eaf4dfa00d751" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an &lt;a href=&quot;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&quot;&gt;example&lt;/a&gt; of this function&amp;rsquo;s output.</source>
          <target state="translated">다음 은이 함수의 출력 &lt;a href=&quot;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&quot;&gt;예&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce0b386112d4134d052dd168079add2f88e6013d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an [example] (&lt;a href=&quot;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&quot;&gt;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&lt;/a&gt;) of this function&amp;rsquo;s output.</source>
          <target state="translated">이 함수의 출력에 대한 [example] ( &lt;a href=&quot;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&quot;&gt;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&lt;/a&gt; )이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc7a08471c916f569b4c85e890fee735ccef05fd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an [example] (&lt;a href=&quot;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&quot;&gt;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&lt;/a&gt;) of this function&amp;rsquo;s output.</source>
          <target state="translated">Here&amp;rsquo;s an [example] (&lt;a href=&quot;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&quot;&gt;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&lt;/a&gt;) of this function&amp;rsquo;s output.</target>
        </trans-unit>
        <trans-unit id="53d9a8d812c90d1bf3d1e751fbcb4e044eed885d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of &lt;code&gt;stats.toString()&lt;/code&gt; usage:</source>
          <target state="translated">&lt;code&gt;stats.toString()&lt;/code&gt; 사용법 의 예는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c33d9dd45d505b6fa99ddb524e207925c8cb8208" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that does all that:</source>
          <target state="translated">다음은 이러한 모든 작업을 수행하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="1b163e87087457fcbfc8f19f00bc4aab6ec517bb" translate="yes" xml:space="preserve">
          <source>Here're arguments the function can receive:</source>
          <target state="translated">함수가받을 수있는 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8f4603a374b113b1405e1d95cd7daf0186098dc9" translate="yes" xml:space="preserve">
          <source>Here's a list of stages we can use:</source>
          <target state="translated">사용할 수있는 단계 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f1468b5723560711f6a9fa401499b579863d4941" translate="yes" xml:space="preserve">
          <source>Here's a more complicated example of using a CDN and hashes for assets:</source>
          <target state="translated">자산에 CDN 및 해시를 사용하는보다 복잡한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="68f54ed9ea375008e572f1c21ea20c9c86ce81fb" translate="yes" xml:space="preserve">
          <source>Here's a small example to restrict module usage:</source>
          <target state="translated">다음은 모듈 사용을 제한하는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="6fd5f6d46f40290b4a065612e3e7dc847f89a633" translate="yes" xml:space="preserve">
          <source>Here's an example of how this plugin might be used:</source>
          <target state="translated">이 플러그인을 사용하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f0661f064322e5bbcafdd8bf7f3fbce37cc9de7" translate="yes" xml:space="preserve">
          <source>Here's an example plugin from &lt;a href=&quot;https://github.com/boopathi&quot;&gt;@boopathi&lt;/a&gt; that outputs exactly what went into each chunk.</source>
          <target state="translated">다음 은 각 덩어리에 들어간 것을 정확하게 출력하는 &lt;a href=&quot;https://github.com/boopathi&quot;&gt;@boopathi의&lt;/a&gt; 플러그인 예제 입니다.</target>
        </trans-unit>
        <trans-unit id="7b49b26d8b3a7d28cded264e41a7228c10ffe73c" translate="yes" xml:space="preserve">
          <source>Here's an example that simply adds a banner to each chunk.</source>
          <target state="translated">다음은 각 청크에 단순히 배너를 추가하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f273d6ebd65e09a2123679838da9edba70828df" translate="yes" xml:space="preserve">
          <source>Here's how we specify properties for the above example:</source>
          <target state="translated">Here's how we specify properties for the above example:</target>
        </trans-unit>
        <trans-unit id="95cdb0cabf428f9c6c2baf06a10ac606843b05c5" translate="yes" xml:space="preserve">
          <source>Here's the full list of &lt;a href=&quot;https://github.com/wooorm/remark/blob/master/doc/plugins.md&quot;&gt;&lt;code&gt;remark&lt;/code&gt; plugins&lt;/a&gt;.</source>
          <target state="translated">Here's the full list of &lt;a href=&quot;https://github.com/wooorm/remark/blob/master/doc/plugins.md&quot;&gt; &lt;code&gt;remark&lt;/code&gt; plugins&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a34da435080080952de44617951db93f8b8878fc" translate="yes" xml:space="preserve">
          <source>Hides info about modules</source>
          <target state="translated">모듈에 대한 정보를 숨 깁니다</target>
        </trans-unit>
        <trans-unit id="a803271eaba4f726d2cdc52538b3afe62dc4c49e" translate="yes" xml:space="preserve">
          <source>High-level concepts</source>
          <target state="translated">High-level concepts</target>
        </trans-unit>
        <trans-unit id="b3e0a103daa9ae3f375b2654f0a482c7c0d36297" translate="yes" xml:space="preserve">
          <source>Hook</source>
          <target state="translated">Hook</target>
        </trans-unit>
        <trans-unit id="0a33db354218dfad198e4b83729dc6fbab844ec8" translate="yes" xml:space="preserve">
          <source>Hook Parameters: &lt;code&gt;identifier&lt;/code&gt;</source>
          <target state="translated">Hook Parameters: &lt;code&gt;identifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ea32dafeb882bf20b2f2e187f0ca6c41c1a6a30" translate="yes" xml:space="preserve">
          <source>Hook Parameters: &lt;code&gt;labelName&lt;/code&gt;</source>
          <target state="translated">Hook Parameters: &lt;code&gt;labelName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c02b4be61312f3316dfd5ab0d82ef75a5c6a9311" translate="yes" xml:space="preserve">
          <source>Hook Parameters: &lt;code&gt;objectIdentifier&lt;/code&gt;</source>
          <target state="translated">Hook Parameters: &lt;code&gt;objectIdentifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07098e74daabfa0b18217bfa2113a3f52f160192" translate="yes" xml:space="preserve">
          <source>Hook into the compiler before a new compilation is created.</source>
          <target state="translated">새 컴파일을 작성하기 전에 컴파일러에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="0eafba5fc3bbe31b1d770ba492a1988b8374433e" translate="yes" xml:space="preserve">
          <source>Hook into the compiler before it begins reading &lt;a href=&quot;../configuration/other-options#recordspath&quot;&gt;&lt;code&gt;records&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Hook into the compiler before it begins reading &lt;a href=&quot;../configuration/other-options#recordspath&quot;&gt; &lt;code&gt;records&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ca5b6d1176c2c7b471cc49cd14ff540b84005c96" translate="yes" xml:space="preserve">
          <source>Hook into the compiler before it begins reading records.</source>
          <target state="translated">레코드 읽기를 시작하기 전에 컴파일러에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="a2e1f8d8e1cd92fef4f507b2cc3733e6a624094f" translate="yes" xml:space="preserve">
          <source>Hook into the compiler to extract progress information. The &lt;code&gt;handler&lt;/code&gt; must have the signature &lt;code&gt;function(percentage, message)&lt;/code&gt;. Percentage is called with a value between 0 and 1, where 0 indicates the start and 1 the end.</source>
          <target state="translated">컴파일러에 연결하여 진행 정보를 추출하십시오. &lt;code&gt;handler&lt;/code&gt; 서명이 있어야합니다 &lt;code&gt;function(percentage, message)&lt;/code&gt; . 백분율은 0과 1 사이의 값으로 호출되며, 0은 시작을 나타내고 1은 끝을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="662064c5b9315416eb5216fb949ba24bbd0f9a62" translate="yes" xml:space="preserve">
          <source>Hook parameters: &lt;code&gt;expressionType&lt;/code&gt;</source>
          <target state="translated">Hook parameters: &lt;code&gt;expressionType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="30f903d530f16bb49ddfdd004a066d5e761d940d" translate="yes" xml:space="preserve">
          <source>Host Source Maps Externally</source>
          <target state="translated">외부에서 호스트 소스 맵</target>
        </trans-unit>
        <trans-unit id="891dd51ad267d1206153d09e5b0e0d78d84a8cf9" translate="yes" xml:space="preserve">
          <source>Hot Module Reloading (HMR)</source>
          <target state="translated">Hot Module Reloading (HMR)</target>
        </trans-unit>
        <trans-unit id="b195bbcb9d9ea75b33b88f6d3b7db65046872de6" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement</source>
          <target state="translated">핫 모듈 교체</target>
        </trans-unit>
        <trans-unit id="92fd1c3e36496023416944609af68089022b4821" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement (HMR) exchanges, adds, or removes &lt;a href=&quot;modules&quot;&gt;modules&lt;/a&gt; while an application is running, without a full reload. This can significantly speed up development in a few ways:</source>
          <target state="translated">HMR (핫 모듈 교체) 은 응용 프로그램이 실행되는 동안 전체 재로드없이 &lt;a href=&quot;modules&quot;&gt;모듈&lt;/a&gt; 을 교환, 추가 또는 제거 합니다 . 몇 가지 방법으로 개발 속도를 크게 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="faaedbcba12dd4a48cc801cf852346d66b60396f" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement (or HMR) is one of the most useful features offered by webpack. It allows all kinds of modules to be updated at runtime without the need for a full refresh. This page focuses on &lt;strong&gt;implementation&lt;/strong&gt; while the &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;concepts page&lt;/a&gt; gives more details on how it works and why it's useful.</source>
          <target state="translated">HMR (핫 모듈 교체)은 웹팩에서 제공하는 가장 유용한 기능 중 하나입니다. 모든 종류의 모듈을 완전히 새로 고칠 필요없이 런타임에 업데이트 할 수 있습니다. 이 페이지는 &lt;strong&gt;구현에&lt;/strong&gt; 중점을 둔 반면 &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;개념 페이지&lt;/a&gt; 는 작동 방식과 유용한 이유에 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4192c11d0e4fe11d9d343eb4d029bac719a67d4d" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement can be tricky. To show this, let's go back to our working example. If you go ahead and click the button on the example page, you will realize the console is printing the old &lt;code&gt;printMe&lt;/code&gt; function.</source>
          <target state="translated">핫 모듈 교체는 까다로울 수 있습니다. 이것을 보여주기 위해 작업 예제로 돌아가 봅시다. 계속해서 예제 페이지에서 버튼을 클릭하면 콘솔이 이전 &lt;code&gt;printMe&lt;/code&gt; 기능을 인쇄하고 있음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="853c05d1118610188f138d6f79c7f044f6c2797e" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement with CSS is actually fairly straightforward with the help of the &lt;code&gt;style-loader&lt;/code&gt;. This loader uses &lt;code&gt;module.hot.accept&lt;/code&gt; behind the scenes to patch &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags when CSS dependencies are updated.</source>
          <target state="translated">CSS를 사용한 핫 모듈 대체는 실제로 &lt;code&gt;style-loader&lt;/code&gt; 의 도움으로 매우 간단합니다 . 이 로더는 장면 뒤에서 &lt;code&gt;module.hot.accept&lt;/code&gt; 를 사용 하여 CSS 종속성이 업데이트 될 때 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그 를 패치 합니다.</target>
        </trans-unit>
        <trans-unit id="a9c074676de58e8848f685cbf8e7911b0eadb590" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: accept</source>
          <target state="translated">핫 모듈 교체 : 수락</target>
        </trans-unit>
        <trans-unit id="547dfa545af481b7481187d8e5821fff3af70093" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: addStatusHandler</source>
          <target state="translated">핫 모듈 교체 : addStatusHandler</target>
        </trans-unit>
        <trans-unit id="1c06975c9d2ad6114a31f7680fabda50ec1b34b9" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: apply</source>
          <target state="translated">핫 모듈 교체 : 적용</target>
        </trans-unit>
        <trans-unit id="c6a5f2b24f45ef9ea292e22f41e12b764a091a14" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: check</source>
          <target state="translated">핫 모듈 교체 : 점검</target>
        </trans-unit>
        <trans-unit id="99f850a0046d9f71e971677be09918aec51f5ddb" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: decline</source>
          <target state="translated">핫 모듈 교체 : 거절</target>
        </trans-unit>
        <trans-unit id="8c5da94c72bc8ad7cd7742c8f058f8b4bd40f3d5" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: removeDisposeHandler</source>
          <target state="translated">핫 모듈 교체 : removeDisposeHandler</target>
        </trans-unit>
        <trans-unit id="d8dffb62bf37ecab81b1a58ddf475fb8c617afa6" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: removeStatusHandler</source>
          <target state="translated">핫 모듈 교체 : removeStatusHandler</target>
        </trans-unit>
        <trans-unit id="dda5826308cbdd5e9d619798a9aab1c671892e96" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: status</source>
          <target state="translated">핫 모듈 교체 : 상태</target>
        </trans-unit>
        <trans-unit id="c3a46d04c348ff50766e4c9ce140966a946d0c66" translate="yes" xml:space="preserve">
          <source>Hot loading stylesheets is as easy as importing them into a module:</source>
          <target state="translated">핫로드 스타일 시트는 모듈로 가져 오는 것만 큼 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="42b2548d4460c34296f98d31e1dae1ae67093bda" translate="yes" xml:space="preserve">
          <source>HotModuleReplacementPlugin</source>
          <target state="translated">HotModuleReplacementPlugin</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="85716989ba91043759930dbec2cc821209ac6995" translate="yes" xml:space="preserve">
          <source>How is the performance of the incremental build affected by the devtool setting? Slow devtools might reduce development feedback loop in watch mode. The scale is different compared to the build performance, as one would expect rebuilds to be faster than builds.</source>
          <target state="translated">devtool 설정은 증분 빌드의 성능에 어떤 영향을 줍니까? 느린 devtools는 시계 모드에서 개발 피드백 루프를 줄일 수 있습니다. 재 빌드가 빌드보다 빠를 것으로 예상하기 때문에 빌드 성능에 비해 규모가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5c52d194ff87c7d02bf0082202184d6fe8e0084b" translate="yes" xml:space="preserve">
          <source>How is the performance of the initial build affected by the devtool setting?</source>
          <target state="translated">devtool 설정은 초기 빌드의 성능에 어떤 영향을 줍니까?</target>
        </trans-unit>
        <trans-unit id="8e979f2b774b8ab254c7973b1d82eeaacaeb2ca0" translate="yes" xml:space="preserve">
          <source>How the value of the &lt;code&gt;output.library&lt;/code&gt; is used depends on the value of the &lt;a href=&quot;#output-librarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; option; please refer to that section for the complete details. Note that the default option for &lt;code&gt;output.libraryTarget&lt;/code&gt; is &lt;code&gt;var&lt;/code&gt;, so if the following configuration option is used:</source>
          <target state="translated">&lt;code&gt;output.library&lt;/code&gt; 의 값 이 사용되는 방법은 &lt;a href=&quot;#output-librarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt; 옵션 의 값에 따라 다릅니다 . 자세한 내용은 해당 섹션을 참조하십시오. &lt;code&gt;output.libraryTarget&lt;/code&gt; 의 기본 옵션 은 &lt;code&gt;var&lt;/code&gt; 이므로 다음 구성 옵션을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="c9c38b1850bd97d47311573c974832aac91f0dc1" translate="yes" xml:space="preserve">
          <source>How the value of the &lt;code&gt;output.library&lt;/code&gt; is used depends on the value of the &lt;a href=&quot;#outputlibrarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; option; please refer to that section for the complete details. Note that the default option for &lt;code&gt;output.libraryTarget&lt;/code&gt; is &lt;code&gt;var&lt;/code&gt;, so if the following configuration option is used:</source>
          <target state="translated">How the value of the &lt;code&gt;output.library&lt;/code&gt; is used depends on the value of the &lt;a href=&quot;#outputlibrarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt; option; please refer to that section for the complete details. Note that the default option for &lt;code&gt;output.libraryTarget&lt;/code&gt; is &lt;code&gt;var&lt;/code&gt; , so if the following configuration option is used:</target>
        </trans-unit>
        <trans-unit id="1d33716f3bf4bd0245ad9168d787e0fbcf92179d" translate="yes" xml:space="preserve">
          <source>However in some circumstances it might be necessary to have finer control over the append target or even delay &lt;code&gt;link&lt;/code&gt; elements instertion. For example this is the case when you asynchronously load styles for an application that runs inside of an iframe. In such cases &lt;code&gt;insert&lt;/code&gt; can be configured to be a function or a custom selector.</source>
          <target state="translated">However in some circumstances it might be necessary to have finer control over the append target or even delay &lt;code&gt;link&lt;/code&gt; elements instertion. For example this is the case when you asynchronously load styles for an application that runs inside of an iframe. In such cases &lt;code&gt;insert&lt;/code&gt; can be configured to be a function or a custom selector.</target>
        </trans-unit>
        <trans-unit id="bc94764c099c8edf0a22c457ea80c340ec14306a" translate="yes" xml:space="preserve">
          <source>However, changing one file means you have to rebuild the whole thing. Concatenating makes it easy to reuse scripts across files but makes build optimizations more difficult. How can you find out if code is actually being used or not?</source>
          <target state="translated">However, changing one file means you have to rebuild the whole thing. Concatenating makes it easy to reuse scripts across files but makes build optimizations more difficult. How can you find out if code is actually being used or not?</target>
        </trans-unit>
        <trans-unit id="b3443b5ab994d217f78e68297f8c770cdd684b58" translate="yes" xml:space="preserve">
          <source>However, for &lt;code&gt;run&lt;/code&gt; which utilizes the &lt;code&gt;AsyncHook&lt;/code&gt;, we can utilize &lt;code&gt;tapAsync&lt;/code&gt; or &lt;code&gt;tapPromise&lt;/code&gt; (as well as &lt;code&gt;tap&lt;/code&gt;):</source>
          <target state="translated">그러나 대한 &lt;code&gt;run&lt;/code&gt; 활용하는 &lt;code&gt;AsyncHook&lt;/code&gt; 을 우리가 활용할 수 &lt;code&gt;tapAsync&lt;/code&gt; 또는 &lt;code&gt;tapPromise&lt;/code&gt; (뿐만 아니라 &lt;code&gt;tap&lt;/code&gt; ) :</target>
        </trans-unit>
        <trans-unit id="351a3cd14e2756e50007cd947a86f585a361d70d" translate="yes" xml:space="preserve">
          <source>However, if you prefer a custom reporter, pass a function under the &lt;code&gt;reporter&lt;/code&gt; property in &lt;code&gt;jshint&lt;/code&gt; options. (see &lt;em&gt;usage&lt;/em&gt; above)</source>
          <target state="translated">그러나 사용자 정의 리포터를 선호하는 경우 &lt;code&gt;jshint&lt;/code&gt; 옵션 의 &lt;code&gt;reporter&lt;/code&gt; 속성 아래에 함수를 전달하십시오 . ( 위의 &lt;em&gt;사용법&lt;/em&gt; 참조)&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd7ef17b1178c0abec16330dd82d81766532031c" translate="yes" xml:space="preserve">
          <source>However, let's say you're locked into your old ways or you have some assets that are shared between multiple components (views, templates, modules, etc.). It's still possible to store these assets in a base directory and even use &lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt;aliasing&lt;/a&gt; to make them easier to &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">그러나 이전 방식에 갇혀 있거나 여러 구성 요소 (보기, 템플릿, 모듈 등)간에 공유되는 자산이 있다고 가정 해 봅시다. 이러한 자산을 기본 디렉토리에 저장 하고 더 쉽게 &lt;code&gt;import&lt;/code&gt; 수 있도록 &lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt;앨리어싱&lt;/a&gt; 을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7934ee262eedcb077db23e7905f8e5ed253f4a6" translate="yes" xml:space="preserve">
          <source>However, let's say you're locked into your old ways or you have some assets that are shared between multiple components (views, templates, modules, etc.). It's still possible to store these assets in a base directory and even use &lt;a href=&quot;../configuration/resolve#resolvealias&quot;&gt;aliasing&lt;/a&gt; to make them easier to &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">However, let's say you're locked into your old ways or you have some assets that are shared between multiple components (views, templates, modules, etc.). It's still possible to store these assets in a base directory and even use &lt;a href=&quot;../configuration/resolve#resolvealias&quot;&gt;aliasing&lt;/a&gt; to make them easier to &lt;code&gt;import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="066beae0ba9d7f7e51d7d73ac00f926f89b2af25" translate="yes" xml:space="preserve">
          <source>However, parser plugins may accept more than just a boolean. For example, the internal &lt;code&gt;NodeStuffPlugin&lt;/code&gt; can accept an object instead of &lt;code&gt;true&lt;/code&gt; to add additional options for a particular Rule.</source>
          <target state="translated">그러나 파서 플러그인은 부울 이상의 것을 허용 할 수 있습니다. 예를 들어, 내부 &lt;code&gt;NodeStuffPlugin&lt;/code&gt; 은 특정 규칙에 대한 추가 옵션을 추가하기 위해 &lt;code&gt;true&lt;/code&gt; 대신 오브젝트를 승인 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6461913cec14b37c90ceed285e43899a06a7001c" translate="yes" xml:space="preserve">
          <source>However, until a loader has been updated to depend upon options being passed directly to them, the &lt;code&gt;LoaderOptionsPlugin&lt;/code&gt; exists to bridge the gap. You can configure global loader options with this plugin and all loaders will receive these options.</source>
          <target state="translated">그러나 직접 전달되는 옵션에 따라 로더가 업데이트 될 때까지 &lt;code&gt;LoaderOptionsPlugin&lt;/code&gt; 이 존재하여 간격을 메 웁니다 . 이 플러그인으로 글로벌 로더 옵션을 구성 할 수 있으며 모든 로더는이 옵션을받습니다.</target>
        </trans-unit>
        <trans-unit id="8bba7f88ec88a2d86d5d549a708573ec75734f15" translate="yes" xml:space="preserve">
          <source>However, when creating multiple bundles via more than one entry point, code splitting, or various plugins, you should use one of the following substitutions to give each bundle a unique name...</source>
          <target state="translated">그러나 하나 이상의 진입 점, 코드 분할 또는 다양한 플러그인을 통해 여러 번들을 작성할 때 다음 대체 중 하나를 사용하여 각 번들에 고유 한 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2684071a3ee6f2a42de1f0f276b59750b17cf5e2" translate="yes" xml:space="preserve">
          <source>HtmlMinimizerWebpackPlugin</source>
          <target state="translated">HtmlMinimizerWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="4e41be80be7a17f3962a777aad1652e4f3f01a7f" translate="yes" xml:space="preserve">
          <source>HtmlWebpackPlugin</source>
          <target state="translated">HtmlWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="d7a47bcbdab49f7a3986a07a90e9461cabfd388a" translate="yes" xml:space="preserve">
          <source>I. e. the extract-text-webpack-plugin can handle them.</source>
          <target state="translated">나. extract-text-webpack-plugin이이를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="b0d915587151b1b9036796c951b7b39da2693831" translate="yes" xml:space="preserve">
          <source>I18nWebpackPlugin</source>
          <target state="translated">I18nWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="616f38a980958b316993b06ce9d68680348f4661" translate="yes" xml:space="preserve">
          <source>ICSS underpins CSS Module support, and provides a low level syntax for other tools to implement CSS-module variations of their own.</source>
          <target state="translated">ICSS underpins CSS Module support, and provides a low level syntax for other tools to implement CSS-module variations of their own.</target>
        </trans-unit>
        <trans-unit id="2f5e1ecb69a2731c7705153bf5bcdb43865f18f2" translate="yes" xml:space="preserve">
          <source>IIFE's - Immediately invoked function expressions</source>
          <target state="translated">IIFE's - Immediately invoked function expressions</target>
        </trans-unit>
        <trans-unit id="76fa3529d103ecc8bfc91350dcf2668bba3465aa" translate="yes" xml:space="preserve">
          <source>IIFEs - Immediately invoked function expressions</source>
          <target state="translated">IIFE-즉시 호출되는 함수 표현식</target>
        </trans-unit>
        <trans-unit id="9dfdd5137003bd398cdb79e92a12d68eb27fe557" translate="yes" xml:space="preserve">
          <source>IIFEs solve scoping issues for large projects; when script files are wrapped by an IIFE, you can safely concatenate or safely combine files without worrying about scope collision.</source>
          <target state="translated">IIFEs solve scoping issues for large projects; when script files are wrapped by an IIFE, you can safely concatenate or safely combine files without worrying about scope collision.</target>
        </trans-unit>
        <trans-unit id="5f5a555de9eeaaec348d876424744418ea56d827" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#outputmodule&quot;&gt;&lt;code&gt;output.module&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;output.scriptType&lt;/code&gt; will default to &lt;code&gt;'module'&lt;/code&gt; instead of &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">If &lt;a href=&quot;#outputmodule&quot;&gt; &lt;code&gt;output.module&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;output.scriptType&lt;/code&gt; will default to &lt;code&gt;'module'&lt;/code&gt; instead of &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="889dc8dca2ad7f6b9ba93f27d5ebcaf76306510b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; has been enabled via the &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;&lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt;&lt;/a&gt;, its interface will be exposed under the &lt;a href=&quot;module-variables#module-hot-webpack-specific-&quot;&gt;&lt;code&gt;module.hot&lt;/code&gt; property&lt;/a&gt;. Typically, users will check to see if the interface is accessible, then begin working with it. As an example, here's how you might &lt;code&gt;accept&lt;/code&gt; an updated module:</source>
          <target state="translated">경우 &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;핫 모듈 교체가&lt;/a&gt; 를 통해 활성화 된 &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt; &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; &lt;/a&gt; , 그 인터페이스는 아래에 노출되는 &lt;a href=&quot;module-variables#module-hot-webpack-specific-&quot;&gt; &lt;code&gt;module.hot&lt;/code&gt; 의 특성&lt;/a&gt; . 일반적으로 사용자는 인터페이스에 액세스 할 수 있는지 확인한 후 작업을 시작합니다. 예를 들어, 업데이트 된 모듈을 &lt;code&gt;accept&lt;/code&gt; 하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7b48207cb23b8b74e1cf403cc193b5186484ca55" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; has been enabled via the &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;&lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt;&lt;/a&gt;, its interface will be exposed under the &lt;a href=&quot;module-variables#modulehot-webpack-specific&quot;&gt;&lt;code&gt;module.hot&lt;/code&gt; property&lt;/a&gt;. Typically, users will check to see if the interface is accessible, then begin working with it. As an example, here's how you might &lt;code&gt;accept&lt;/code&gt; an updated module:</source>
          <target state="translated">If &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; has been enabled via the &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt; &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; &lt;/a&gt;, its interface will be exposed under the &lt;a href=&quot;module-variables#modulehot-webpack-specific&quot;&gt; &lt;code&gt;module.hot&lt;/code&gt; property&lt;/a&gt;. Typically, users will check to see if the interface is accessible, then begin working with it. As an example, here's how you might &lt;code&gt;accept&lt;/code&gt; an updated module:</target>
        </trans-unit>
        <trans-unit id="28d1b252858764674a00e3bc86d1aa9186b80326" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'bundle.js'&lt;/code&gt; and &lt;code&gt;devServer.filename&lt;/code&gt; is used like this:</source>
          <target state="translated">If &lt;a href=&quot;output#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;'bundle.js'&lt;/code&gt; and &lt;code&gt;devServer.filename&lt;/code&gt; is used like this:</target>
        </trans-unit>
        <trans-unit id="acb05ca83fe91abb8fd4b6c1ca0ce3594e7f6143" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Rule.type&lt;/code&gt; is an &lt;code&gt;asset&lt;/code&gt; or &lt;code&gt;asset/inline&lt;/code&gt; then &lt;code&gt;Rule.generator&lt;/code&gt; option may be an object that describes the encoding of the module source or a function that encodes module's source by a custom algorithm.</source>
          <target state="translated">If &lt;code&gt;Rule.type&lt;/code&gt; is an &lt;code&gt;asset&lt;/code&gt; or &lt;code&gt;asset/inline&lt;/code&gt; then &lt;code&gt;Rule.generator&lt;/code&gt; option may be an object that describes the encoding of the module source or a function that encodes module's source by a custom algorithm.</target>
        </trans-unit>
        <trans-unit id="0b24159c7af8bc5b0e41e2e4176bec5cdbd288bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Rule.type&lt;/code&gt; is an &lt;code&gt;asset&lt;/code&gt; then &lt;code&gt;Rules.parser&lt;/code&gt; option may be an object or a function that describes a condition whether to encode file contents to Base64 or emit it as a separate file into the output directory.</source>
          <target state="translated">If &lt;code&gt;Rule.type&lt;/code&gt; is an &lt;code&gt;asset&lt;/code&gt; then &lt;code&gt;Rules.parser&lt;/code&gt; option may be an object or a function that describes a condition whether to encode file contents to Base64 or emit it as a separate file into the output directory.</target>
        </trans-unit>
        <trans-unit id="c6d5c7e8418b4d85eb19f1625bd924a9f680169c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Rule.type&lt;/code&gt; is set to &lt;code&gt;'json'&lt;/code&gt; then &lt;code&gt;Rules.parser.parse&lt;/code&gt; option may be a function that implements custom logic to parse module's source and convert it to a JavaScript &lt;code&gt;object&lt;/code&gt;. It may be useful to import &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt; and other non-JSON files as JSON, without specific loaders:</source>
          <target state="translated">If &lt;code&gt;Rule.type&lt;/code&gt; is set to &lt;code&gt;'json'&lt;/code&gt; then &lt;code&gt;Rules.parser.parse&lt;/code&gt; option may be a function that implements custom logic to parse module's source and convert it to a JavaScript &lt;code&gt;object&lt;/code&gt; . It may be useful to import &lt;code&gt;toml&lt;/code&gt; , &lt;code&gt;yaml&lt;/code&gt; and other non-JSON files as JSON, without specific loaders:</target>
        </trans-unit>
        <trans-unit id="34122748e05e97c8f36085544c7b19142aa9c343" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cache: true&lt;/code&gt; is used, the cache file is written to the &lt;code&gt;./node_modules/.cache&lt;/code&gt; directory. This is the recommended usage.</source>
          <target state="translated">경우 &lt;code&gt;cache: true&lt;/code&gt; 사용되는 캐시 파일이 기록됩니다 &lt;code&gt;./node_modules/.cache&lt;/code&gt; 의 디렉토리. 권장되는 사용법입니다.</target>
        </trans-unit>
        <trans-unit id="4eeb510364afeab21d56daf7ad1b3b02b38218a7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dependencies&lt;/code&gt; are provided, &lt;code&gt;factoryMethod&lt;/code&gt; will be called with the exports of each dependency (in the same order). If &lt;code&gt;dependencies&lt;/code&gt; are not provided, &lt;code&gt;factoryMethod&lt;/code&gt; is called with &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;exports&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; (for compatibility!). If this function returns a value, this value is exported by the module. The compiler ensures that each dependency is available.</source>
          <target state="translated">경우 &lt;code&gt;dependencies&lt;/code&gt; 제공된다 &lt;code&gt;factoryMethod&lt;/code&gt; 들은 (동일한 순서의) 각 의존성 수출로 호출된다. 경우 &lt;code&gt;dependencies&lt;/code&gt; 제공되지 않습니다, &lt;code&gt;factoryMethod&lt;/code&gt; 가 호출 될 &lt;code&gt;require&lt;/code&gt; , &lt;code&gt;exports&lt;/code&gt; 및 &lt;code&gt;module&lt;/code&gt; (호환성을 위해!). 이 함수가 값을 반환하면이 값을 모듈에서 내 보냅니다. 컴파일러는 각 종속성이 사용 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="62fbe3e5cfa03e1c78e0758a5226a351c3020234" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;devServer.http2&lt;/code&gt; is not explicitly set to &lt;code&gt;false&lt;/code&gt;, it will default to &lt;code&gt;true&lt;/code&gt; when &lt;a href=&quot;#devserverhttps&quot;&gt;&lt;code&gt;devServer.https&lt;/code&gt;&lt;/a&gt; is enabled. When &lt;code&gt;devServer.http2&lt;/code&gt; is enabled but the server is unable to serve over HTTP/2, the server defaults to HTTPS.</source>
          <target state="translated">If &lt;code&gt;devServer.http2&lt;/code&gt; is not explicitly set to &lt;code&gt;false&lt;/code&gt; , it will default to &lt;code&gt;true&lt;/code&gt; when &lt;a href=&quot;#devserverhttps&quot;&gt; &lt;code&gt;devServer.https&lt;/code&gt; &lt;/a&gt; is enabled. When &lt;code&gt;devServer.http2&lt;/code&gt; is enabled but the server is unable to serve over HTTP/2, the server defaults to HTTPS.</target>
        </trans-unit>
        <trans-unit id="ca1ea7e9aba3ef442fdaf237c6914380a13d81e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is a directory, then &lt;code&gt;context&lt;/code&gt; is the same as &lt;code&gt;from&lt;/code&gt; and is equal to the directory itself. In this case, the result will be a hierarchical structure of the found folders and files relative to the specified directory.</source>
          <target state="translated">If &lt;code&gt;from&lt;/code&gt; is a directory, then &lt;code&gt;context&lt;/code&gt; is the same as &lt;code&gt;from&lt;/code&gt; and is equal to the directory itself. In this case, the result will be a hierarchical structure of the found folders and files relative to the specified directory.</target>
        </trans-unit>
        <trans-unit id="79832c359d50ce56dd3739a2a5d7f1a223802c18" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is a file, then &lt;code&gt;context&lt;/code&gt; is equal to the directory in which this file is located. Accordingly, the result will be only the file name.</source>
          <target state="translated">If &lt;code&gt;from&lt;/code&gt; is a file, then &lt;code&gt;context&lt;/code&gt; is equal to the directory in which this file is located. Accordingly, the result will be only the file name.</target>
        </trans-unit>
        <trans-unit id="e6b4b6aa70f6bf00c539c2c4ab455a4fd9d2a624" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is a glob, then regardless of the &lt;code&gt;context&lt;/code&gt; option, the result will be the structure specified in the &lt;code&gt;from&lt;/code&gt; option</source>
          <target state="translated">If &lt;code&gt;from&lt;/code&gt; is a glob, then regardless of the &lt;code&gt;context&lt;/code&gt; option, the result will be the structure specified in the &lt;code&gt;from&lt;/code&gt; option</target>
        </trans-unit>
        <trans-unit id="33d4bf1a62a46eb3b3090c3168fc0b527ef9a8b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is directory, &lt;code&gt;to&lt;/code&gt; has no extension or ends in &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="translated">경우 &lt;code&gt;from&lt;/code&gt; 디렉토리는, &lt;code&gt;to&lt;/code&gt; 에는 확장이나 끝이 없습니다 &lt;code&gt;'/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b408c2dc265da39c0dc82e0b895cac5e5dd366c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;library&lt;/code&gt; is set and &lt;code&gt;libraryTarget&lt;/code&gt; is not, &lt;code&gt;libraryTarget&lt;/code&gt; defaults to &lt;code&gt;var&lt;/code&gt; as specified in the &lt;a href=&quot;../configuration/output&quot;&gt;output configuration documentation&lt;/a&gt;. See &lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; there for a detailed list of all available options.</source>
          <target state="translated">경우 &lt;code&gt;library&lt;/code&gt; 설정되고 &lt;code&gt;libraryTarget&lt;/code&gt; 이 아닌, &lt;code&gt;libraryTarget&lt;/code&gt; 의 기본값 &lt;code&gt;var&lt;/code&gt; 에 지정된대로 &lt;a href=&quot;../configuration/output&quot;&gt;출력 구성 문서&lt;/a&gt; . 사용 가능한 모든 옵션에 대한 자세한 목록은 &lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca96a33144f20f8871608e7d8d1f76848b93ab61" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;library&lt;/code&gt; is set and &lt;code&gt;libraryTarget&lt;/code&gt; is not, &lt;code&gt;libraryTarget&lt;/code&gt; defaults to &lt;code&gt;var&lt;/code&gt; as specified in the &lt;a href=&quot;../configuration/output&quot;&gt;output configuration documentation&lt;/a&gt;. See &lt;a href=&quot;../configuration/output#outputlibrarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; there for a detailed list of all available options.</source>
          <target state="translated">If &lt;code&gt;library&lt;/code&gt; is set and &lt;code&gt;libraryTarget&lt;/code&gt; is not, &lt;code&gt;libraryTarget&lt;/code&gt; defaults to &lt;code&gt;var&lt;/code&gt; as specified in the &lt;a href=&quot;../configuration/output&quot;&gt;output configuration documentation&lt;/a&gt;. See &lt;a href=&quot;../configuration/output#outputlibrarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt; there for a detailed list of all available options.</target>
        </trans-unit>
        <trans-unit id="8d3dae0b51970948fc9527b6c2535787fecbf419" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is not provided via configuration or CLI, CLI will use any valid &lt;code&gt;NODE_ENV&lt;/code&gt; value for &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;mode&lt;/code&gt; 구성 또는 CLI를 통해 제공되지 않고, CLI는 유효한 사용 &lt;code&gt;NODE_ENV&lt;/code&gt; 의 가치 &lt;code&gt;mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca63e3eee74ceb839a6f9e0b13ee6aecb9eb1fb5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;'lazy'&lt;/code&gt;, the underlying modules will be loaded asynchronously:</source>
          <target state="translated">If &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;'lazy'&lt;/code&gt; , the underlying modules will be loaded asynchronously:</target>
        </trans-unit>
        <trans-unit id="2238f71612ccb2ddd1743c776d81d4a2fd0a0687" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is supplied, say &lt;code&gt;production&lt;/code&gt; then config looking order will be -</source>
          <target state="translated">If &lt;code&gt;mode&lt;/code&gt; is supplied, say &lt;code&gt;production&lt;/code&gt; then config looking order will be -</target>
        </trans-unit>
        <trans-unit id="79d02144f1a710eb31004ece5c9b57c9c455c265" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;moduleLocalName&lt;/code&gt; is not specified, it exposes the entire module to the global object, otherwise it exposes only the value of &lt;code&gt;moduleLocalName&lt;/code&gt;.</source>
          <target state="translated">If &lt;code&gt;moduleLocalName&lt;/code&gt; is not specified, it exposes the entire module to the global object, otherwise it exposes only the value of &lt;code&gt;moduleLocalName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ee47d4e1114d14d38c93c764db62d3a322407e2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is used in a module it is filled by a module loaded by &lt;code&gt;require(&amp;lt;request&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 이 모듈에서 사용 되면 &lt;code&gt;require(&amp;lt;request&amp;gt;)&lt;/code&gt; 의해로드 된 모듈로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="b3e1f075f259beb79f9112be4ab6886b9e262221" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.pathinfo&lt;/code&gt; is set, each module function is annotated with a comment containing the module identifier shortened to &lt;code&gt;context&lt;/code&gt; (absolute path).</source>
          <target state="translated">경우 &lt;code&gt;options.pathinfo&lt;/code&gt; 가 설정되고, 각 모듈은 기능 모듈 단축 식별자를 포함하는 주석이 주석이 &lt;code&gt;context&lt;/code&gt; (절대 경로).</target>
        </trans-unit>
        <trans-unit id="6e414dc45e43432219bacffa3a68f290925ad98f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.filename&lt;/code&gt; is set to &lt;code&gt;bundle.js&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt; is used like this:</source>
          <target state="translated">경우 &lt;code&gt;output.filename&lt;/code&gt; 이 설정되어 &lt;code&gt;bundle.js&lt;/code&gt; 및 &lt;code&gt;filename&lt;/code&gt; 다음과 같이 사용된다 :</target>
        </trans-unit>
        <trans-unit id="b040e0e0352f09a83cbc48731ff94b99bf150416" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.library&lt;/code&gt; is not assigned a non-empty string, the default behavior is that all properties returned by the entry point will be assigned to the object as defined for the particular &lt;code&gt;output.libraryTarget&lt;/code&gt;, via the following code fragment:</source>
          <target state="translated">&lt;code&gt;output.library&lt;/code&gt; 에 비어 있지 않은 문자열이 할당되지 않은 경우 기본 동작은 진입 점에서 반환 된 모든 속성 이 다음 코드 조각을 통해 특정 &lt;code&gt;output.libraryTarget&lt;/code&gt; 에 대해 정의 된대로 객체에 할당되는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="986dff084e7c4e6327decd3a7b8d6a15ace985c8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.library&lt;/code&gt; is undefined, the following is generated instead.</source>
          <target state="translated">&lt;code&gt;output.library&lt;/code&gt; 가 정의되지 않은 경우 대신 다음이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="653ad8db2961c8b7c43c67b9207c81752b64e61b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; contains &lt;a href=&quot;https://github.com/webpack-contrib/file-loader#placeholders&quot;&gt;a template pattern&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/file-loader#placeholders&quot;&gt;템플릿 패턴 &lt;/a&gt; &lt;code&gt;to&lt;/code&gt; 포함 하는 경우</target>
        </trans-unit>
        <trans-unit id="950190fdaa548f29dbc37c6331fa3c0ab0a78d6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; has extension or &lt;code&gt;from&lt;/code&gt; is file</source>
          <target state="translated">경우 &lt;code&gt;to&lt;/code&gt; 확장자가 또는 &lt;code&gt;from&lt;/code&gt; 파일입니다</target>
        </trans-unit>
        <trans-unit id="a6df245e542374547a56ebb182fa9f3565ecb8c8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; has no extension or ends on &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="translated">If &lt;code&gt;to&lt;/code&gt; has no extension or ends on &lt;code&gt;'/'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ec56bacdab889715f62546503628173d3c57b55" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; is not a directory and is not a template</source>
          <target state="translated">If &lt;code&gt;to&lt;/code&gt; is not a directory and is not a template</target>
        </trans-unit>
        <trans-unit id="86f167e6c940e2b6893f45abeaebcca602a35fcf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;stylelint&lt;/code&gt; will fix as many errors as possible. The fixes are made to the actual source files. All unfixed errors will be reported. See &lt;a href=&quot;https://stylelint.io/user-guide/cli#autofixing-errors&quot;&gt;Autofixing errors&lt;/a&gt; docs.</source>
          <target state="translated">If &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;stylelint&lt;/code&gt; will fix as many errors as possible. The fixes are made to the actual source files. All unfixed errors will be reported. See &lt;a href=&quot;https://stylelint.io/user-guide/cli#autofixing-errors&quot;&gt;Autofixing errors&lt;/a&gt; docs.</target>
        </trans-unit>
        <trans-unit id="b956a5fcb95b78ca165f625a368aa63e83abaa31" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, it will not allow extension-less files. So by default &lt;code&gt;require('./foo')&lt;/code&gt; works if &lt;code&gt;./foo&lt;/code&gt; has a &lt;code&gt;.js&lt;/code&gt; extension, but with this enabled only &lt;code&gt;require('./foo.js')&lt;/code&gt; will work.</source>
          <target state="translated">If &lt;code&gt;true&lt;/code&gt; , it will not allow extension-less files. So by default &lt;code&gt;require('./foo')&lt;/code&gt; works if &lt;code&gt;./foo&lt;/code&gt; has a &lt;code&gt;.js&lt;/code&gt; extension, but with this enabled only &lt;code&gt;require('./foo.js')&lt;/code&gt; will work.</target>
        </trans-unit>
        <trans-unit id="185802ed5473c2f7e8cb3f24f4ffa52ff1b7dcfa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, it will not allow extension-less files. So by default &lt;code&gt;require('./foo')&lt;/code&gt; works if &lt;code&gt;./foo&lt;/code&gt; has a &lt;code&gt;.js&lt;/code&gt; extension, but with this enabled only &lt;code&gt;require('./foo.js')&lt;/code&gt; will work. Default:</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 인 경우 확장명없는 파일을 허용하지 않습니다. 따라서 기본적으로 &lt;code&gt;require('./foo')&lt;/code&gt; 는 &lt;code&gt;./foo&lt;/code&gt; 에 &lt;code&gt;.js&lt;/code&gt; 확장자 가 있으면 작동 하지만이 기능을 사용하면 &lt;code&gt;require('./foo.js')&lt;/code&gt; 만 작동합니다. 기본:</target>
        </trans-unit>
        <trans-unit id="b50c08f5b71411f6a3e6a45904a9f742ae52ad16" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, specifies that the code can be re-used in watch mode if none of the &lt;code&gt;dependencies&lt;/code&gt; have changed.</source>
          <target state="translated">경우 &lt;code&gt;true&lt;/code&gt; , 지정 코드를 다시 사용하는 것도 경우 시계 모드에있을 수있는 &lt;code&gt;dependencies&lt;/code&gt; 변경되지했다.</target>
        </trans-unit>
        <trans-unit id="df48d4048b5bdeb409ec799b53a6e5ec78091008" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;webpack.config.js&lt;/code&gt; is present, the &lt;code&gt;webpack&lt;/code&gt; command picks it up by default. We use the &lt;code&gt;--config&lt;/code&gt; option here only to show that you can pass a config of any name. This will be useful for more complex configurations that need to be split into multiple files.</source>
          <target state="translated">경우 &lt;code&gt;webpack.config.js&lt;/code&gt; 이 존재의 &lt;code&gt;webpack&lt;/code&gt; 명령은 기본적으로 그것을 선택합니다. 여기서는 &lt;code&gt;--config&lt;/code&gt; 옵션 만 사용하여 모든 이름의 구성을 전달할 수 있음을 보여줍니다. 여러 파일로 분할해야하는보다 복잡한 구성에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="273b8dbbcaab622afe9215ae7b9e32c51933426c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;webpack.config.js&lt;/code&gt; is present, the &lt;code&gt;webpack&lt;/code&gt; command picks it up by default. We use the &lt;code&gt;--config&lt;/code&gt; option here only to show that you can pass a configuration of any name. This will be useful for more complex configurations that need to be split into multiple files.</source>
          <target state="translated">If a &lt;code&gt;webpack.config.js&lt;/code&gt; is present, the &lt;code&gt;webpack&lt;/code&gt; command picks it up by default. We use the &lt;code&gt;--config&lt;/code&gt; option here only to show that you can pass a configuration of any name. This will be useful for more complex configurations that need to be split into multiple files.</target>
        </trans-unit>
        <trans-unit id="7e41b772e20c437afe0b411b7de6f248c54d850e" translate="yes" xml:space="preserve">
          <source>If a callback is added after dependencies were loaded, it will be called immediately.</source>
          <target state="translated">종속성이로드 된 후 콜백이 추가되면 즉시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f4dd7e2689ccc2b98e7c1c90d4993c46e7b87604" translate="yes" xml:space="preserve">
          <source>If a dependency is included but not used, the browser will be forced to download unnecessary code.</source>
          <target state="translated">종속성이 포함되어 있지만 사용되지 않으면 브라우저는 불필요한 코드를 강제로 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="07f33b8aa91a147067e9de02b1b1e50e00f59e5d" translate="yes" xml:space="preserve">
          <source>If a dependency is missing, or included in the wrong order, the application will not function properly.</source>
          <target state="translated">종속성이 없거나 잘못된 순서로 포함 된 경우 응용 프로그램이 제대로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="48c4180257435fcc25f063f081618e356f870985" translate="yes" xml:space="preserve">
          <source>If a function is passed then it will be invoked on every &lt;a href=&quot;../api/compiler-hooks#make&quot;&gt;make&lt;/a&gt; event.</source>
          <target state="translated">If a function is passed then it will be invoked on every &lt;a href=&quot;../api/compiler-hooks#make&quot;&gt;make&lt;/a&gt; event.</target>
        </trans-unit>
        <trans-unit id="1e52467f5752b6a9c3fe25a8895e33f563202207" translate="yes" xml:space="preserve">
          <source>If a function is passed, then it will be called with the compiler as a parameter. Set it to a function if none of the predefined targets from the list above meet your needs.</source>
          <target state="translated">함수가 전달되면 컴파일러에서 매개 변수로 호출됩니다. 위 목록에서 사전 정의 된 대상이 사용자의 요구를 충족시키지 않으면 기능으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c45c7d5c23a629c6ea1ea970594a3ccc8583ceb3" translate="yes" xml:space="preserve">
          <source>If a module source size is less than &lt;code&gt;maxSize&lt;/code&gt; then module will be injected into the bundle as a Base64-encoded string, otherwise module file will be emitted into the output directory.</source>
          <target state="translated">If a module source size is less than &lt;code&gt;maxSize&lt;/code&gt; then module will be injected into the bundle as a Base64-encoded string, otherwise module file will be emitted into the output directory.</target>
        </trans-unit>
        <trans-unit id="50a90376f8f6d651b37ed8b77d222529111f8a07" translate="yes" xml:space="preserve">
          <source>If a project has a browserslist config, then webpack will use it for:</source>
          <target state="translated">If a project has a browserslist config, then webpack will use it for:</target>
        </trans-unit>
        <trans-unit id="9ca3ed1813b95cb8adbef52e8fdd32e6da9b7528" translate="yes" xml:space="preserve">
          <source>If a string or array of strings is passed, the chunk is named &lt;code&gt;main&lt;/code&gt;. If an object is passed, each key is the name of a chunk, and the value describes the entry point for the chunk.</source>
          <target state="translated">문자열 또는 문자열 배열이 전달되면 청크 이름은 &lt;code&gt;main&lt;/code&gt; 입니다. 객체가 전달되면 각 키는 청크의 이름이며 값은 청크의 진입 점을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a64e0703ebadd797dc6c126d189c7c0d31bbc16b" translate="yes" xml:space="preserve">
          <source>If all went well, you should now see your icon as a repeating background, as well as an &lt;code&gt;img&lt;/code&gt; element beside our &lt;code&gt;Hello webpack&lt;/code&gt; text. If you inspect this element, you'll see that the actual filename has changed to something like &lt;code&gt;29822eaa871e8eadeaa4.png&lt;/code&gt;. This means webpack found our file in the &lt;code&gt;src&lt;/code&gt; folder and processed it!</source>
          <target state="translated">If all went well, you should now see your icon as a repeating background, as well as an &lt;code&gt;img&lt;/code&gt; element beside our &lt;code&gt;Hello webpack&lt;/code&gt; text. If you inspect this element, you'll see that the actual filename has changed to something like &lt;code&gt;29822eaa871e8eadeaa4.png&lt;/code&gt; . This means webpack found our file in the &lt;code&gt;src&lt;/code&gt; folder and processed it!</target>
        </trans-unit>
        <trans-unit id="0d6a51eb9233c67f994d457f4260e35be0b31994" translate="yes" xml:space="preserve">
          <source>If all went well, you should now see your icon as a repeating background, as well as an &lt;code&gt;img&lt;/code&gt; element beside our &lt;code&gt;Hello webpack&lt;/code&gt; text. If you inspect this element, you'll see that the actual filename has changed to something like &lt;code&gt;5c999da72346a995e7e2718865d019c8.png&lt;/code&gt;. This means webpack found our file in the &lt;code&gt;src&lt;/code&gt; folder and processed it!</source>
          <target state="translated">모든 것이 잘 되었다면 이제 아이콘이 반복 배경으로 표시되고 &lt;code&gt;Hello webpack&lt;/code&gt; 텍스트 옆의 &lt;code&gt;img&lt;/code&gt; 요소가 표시됩니다. 이 요소를 검사하면 실제 파일 이름이 &lt;code&gt;5c999da72346a995e7e2718865d019c8.png&lt;/code&gt; 와 같은 것으로 변경 되었음을 알 수 있습니다. 이것은 webpack이 &lt;code&gt;src&lt;/code&gt; 폴더 에서 파일을 찾아서 처리했음을 의미 합니다!</target>
        </trans-unit>
        <trans-unit id="84b4202957552827e2d2cb56f0acc00550050752" translate="yes" xml:space="preserve">
          <source>If an environment variable is not found during bundling and no default value was provided, webpack will throw an error instead of a warning.</source>
          <target state="translated">If an environment variable is not found during bundling and no default value was provided, webpack will throw an error instead of a warning.</target>
        </trans-unit>
        <trans-unit id="e08df31826d6c0f4da2ebf8b09143d915727782d" translate="yes" xml:space="preserve">
          <source>If an object is passed the value might be a string, array of strings or a descriptor:</source>
          <target state="translated">If an object is passed the value might be a string, array of strings or a descriptor:</target>
        </trans-unit>
        <trans-unit id="64870bbe4c22e691ce428a2835d8d2c7e127f61a" translate="yes" xml:space="preserve">
          <source>If an object is passed, webpack will use this object for caching. Keeping a reference to this object will allow one to share the same cache between compiler calls:</source>
          <target state="translated">객체가 전달되면 웹팩은이 객체를 캐싱에 사용합니다. 이 객체에 대한 참조를 유지하면 컴파일러 호출간에 동일한 캐시를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43b99e6352163b1d06ae88f4fb0bf982ddd87b32" translate="yes" xml:space="preserve">
          <source>If convertToAbsoluteUrls and sourceMaps are both enabled, relative urls will be converted to absolute urls right before the css is injected into the page. This resolves &lt;a href=&quot;https://github.com/webpack/style-loader/pull/96&quot;&gt;an issue&lt;/a&gt; where relative resources fail to load when source maps are enabled. You can enable it with the convertToAbsoluteUrls option.</source>
          <target state="translated">convertToAbsoluteUrls 및 sourceMaps가 모두 사용 가능한 경우 CSS가 페이지에 삽입되기 직전에 상대 URL이 절대 URL로 변환됩니다. 소스 맵이 사용 가능한 경우 상대 자원이로드되지 않는 &lt;a href=&quot;https://github.com/webpack/style-loader/pull/96&quot;&gt;문제를&lt;/a&gt; 해결합니다 . convertToAbsoluteUrls 옵션을 사용하여 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cfa6ea1a67ca3ceeb449fc2e2629a8148f2541b" translate="yes" xml:space="preserve">
          <source>If defined, style-loader will attach given attributes with their values on &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">정의 된 경우 style-loader는 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 요소 의 값과 함께 지정된 속성을 첨부합니다 .</target>
        </trans-unit>
        <trans-unit id="6a94f3a7b43d8265a94cf93b3709ed094af9dfeb" translate="yes" xml:space="preserve">
          <source>If defined, the &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; will attach given attributes with their values on  element.</source>
          <target state="translated">If defined, the &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; will attach given attributes with their values on element.</target>
        </trans-unit>
        <trans-unit id="7804fc1873adaf2d0dd5d474eb086431dc15e3a0" translate="yes" xml:space="preserve">
          <source>If defined, the &lt;code&gt;style-loader&lt;/code&gt; will attach given attributes with their values on &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">If defined, the &lt;code&gt;style-loader&lt;/code&gt; will attach given attributes with their values on &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element.</target>
        </trans-unit>
        <trans-unit id="18d49a999b72016db961a09284a492d94304e784" translate="yes" xml:space="preserve">
          <source>If defined, the style-loader will reuse a single &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; element, instead of adding/removing individual elements for each required module.</source>
          <target state="translated">정의 된 경우 스타일 로더는 각 필수 모듈마다 개별 요소를 추가 / 제거하는 대신 단일 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 요소 를 재사용 합니다.</target>
        </trans-unit>
        <trans-unit id="f218065a4d485d9e3d6e6b6aa0d4a6bea489531d" translate="yes" xml:space="preserve">
          <source>If ensures that native modules are loaded correctly even if bundled.</source>
          <target state="translated">기본 모듈이 번들로 제공 되어도 올바르게로드되도록합니다.</target>
        </trans-unit>
        <trans-unit id="45d3588afa2786ab4d31277d9d14540030ce65e1" translate="yes" xml:space="preserve">
          <source>If exported module methods are already async, signature is unchanged</source>
          <target state="translated">내 보낸 모듈 메소드가 이미 비동기 인 경우 서명은 변경되지 않습니다</target>
        </trans-unit>
        <trans-unit id="0bfbdd1c3c27461d16567a5b7542a7805d1cb884" translate="yes" xml:space="preserve">
          <source>If for some reason you want to use different config file depending on certain situations you can change this via command line by using the &lt;code&gt;--config&lt;/code&gt; flag.</source>
          <target state="translated">어떤 이유로 특정 상황에 따라 다른 구성 파일을 사용하려는 경우 &lt;code&gt;--config&lt;/code&gt; 플래그 를 사용하여 명령 행을 통해이를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5c5cd136d4d8fac63012cc2d11d8c275ee1a392" translate="yes" xml:space="preserve">
          <source>If for some reason you want to use different configuration file depending on certain situations you can change this via command line by using the &lt;code&gt;--config&lt;/code&gt; flag.</source>
          <target state="translated">If for some reason you want to use different configuration file depending on certain situations you can change this via command line by using the &lt;code&gt;--config&lt;/code&gt; flag.</target>
        </trans-unit>
        <trans-unit id="2034055c289a5fe39d3ee59def3b48c810e36ce4" translate="yes" xml:space="preserve">
          <source>If multiple files share the same name but have different extensions, webpack will resolve the one with the extension listed first in the array and skip the rest.</source>
          <target state="translated">If multiple files share the same name but have different extensions, webpack will resolve the one with the extension listed first in the array and skip the rest.</target>
        </trans-unit>
        <trans-unit id="69da252b8b51846f82d3cd898a8f9857c1028509" translate="yes" xml:space="preserve">
          <source>If multiple modules would result in the same name, &lt;a href=&quot;#output-devtoolfallbackmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolFallbackModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt; is used instead for these modules.</source>
          <target state="translated">여러 모듈의 이름이 같은 경우 이러한 모듈 대신 &lt;a href=&quot;#output-devtoolfallbackmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolFallbackModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9f0ded5d1669b1184f8c7792cc6f9ad6cfb69c0c" translate="yes" xml:space="preserve">
          <source>If multiple modules would result in the same name, &lt;a href=&quot;#outputdevtoolfallbackmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolFallbackModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt; is used instead for these modules.</source>
          <target state="translated">If multiple modules would result in the same name, &lt;a href=&quot;#outputdevtoolfallbackmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolFallbackModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt; is used instead for these modules.</target>
        </trans-unit>
        <trans-unit id="5c06bae6b7ebc498ada19a4126a3593ec09ff64e" translate="yes" xml:space="preserve">
          <source>If need to specify options for the plugin, can pass the plugin using an array, where the second argument will be options.</source>
          <target state="translated">If need to specify options for the plugin, can pass the plugin using an array, where the second argument will be options.</target>
        </trans-unit>
        <trans-unit id="e41b17bf3cb05e9a48dc6a459c1cf7bad6124b10" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;mode&lt;/code&gt; is supplied via flags or config then this is the lookup order in increasing order</source>
          <target state="translated">If no &lt;code&gt;mode&lt;/code&gt; is supplied via flags or config then this is the lookup order in increasing order</target>
        </trans-unit>
        <trans-unit id="e3dfcdb0b1dc024842f447016ffd7e77ff903a2b" translate="yes" xml:space="preserve">
          <source>If no browser is provided (as shown above), your default browser will be used. To specify a different browser, just pass its name:</source>
          <target state="translated">브라우저가 제공되지 않으면 (위 그림 참조) 기본 브라우저가 사용됩니다. 다른 브라우저를 지정하려면 이름을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="fe5b821bb3db737f1ec055312dcbe888d65361b2" translate="yes" xml:space="preserve">
          <source>If not set, webpack sets &lt;code&gt;production&lt;/code&gt; as the default value for &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">If not set, webpack sets &lt;code&gt;production&lt;/code&gt; as the default value for &lt;code&gt;mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d55a5575efd33d92f15721c5fbda8793dbf5d812" translate="yes" xml:space="preserve">
          <source>If not set, webpack sets &lt;code&gt;production&lt;/code&gt; as the default value for &lt;code&gt;mode&lt;/code&gt;. The supported values for mode are:</source>
          <target state="translated">설정하지 않으면 webpack은 &lt;code&gt;production&lt;/code&gt; 을 &lt;code&gt;mode&lt;/code&gt; 의 기본값으로 설정 합니다 . mode에 지원되는 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8b38a2515fd144328fb3bfee30e660e8581edf5" translate="yes" xml:space="preserve">
          <source>If set to true the loader will rewrite &lt;code&gt;&amp;lt;link import=&quot;css&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; that are inside the dom-module with &lt;code&gt;&amp;lt;style&amp;gt;require('...')&amp;lt;/style&amp;gt;&lt;/code&gt;. This will allow for the file to be processed by loaders that are set up in the webpack config to handle their file type.</source>
          <target state="translated">true로 설정하면 로더는 &lt;code&gt;&amp;lt;style&amp;gt;require('...')&amp;lt;/style&amp;gt;&lt;/code&gt; 사용하여 dom- 모듈 내부에있는 &lt;code&gt;&amp;lt;link import=&quot;css&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; 합니다. require ( '...') &amp;lt;/ style&amp;gt; . 이를 통해 파일 유형을 처리하기 위해 webpack 구성에 설정된 로더가 파일을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="82479f8a654c0b86f8986eef236b26c84f34fba1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;eslintPath&lt;/code&gt; is a folder like a official eslint, or specify a &lt;code&gt;formatter&lt;/code&gt; option. now you dont have to install &lt;code&gt;eslint&lt;/code&gt; .</source>
          <target state="translated">는 IF &lt;code&gt;eslintPath&lt;/code&gt; 는 공식적인 eslint 같은 폴더입니다, 또는 지정 &lt;code&gt;formatter&lt;/code&gt; 옵션을 선택합니다. 이제 &lt;code&gt;eslint&lt;/code&gt; 를 설치할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="374c1280bd907e54e891747c5319855189539cf8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;splitChunks.name&lt;/code&gt; matches an &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;entry point&lt;/a&gt; name, the entry point will be removed.</source>
          <target state="translated">If the &lt;code&gt;splitChunks.name&lt;/code&gt; matches an &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;entry point&lt;/a&gt; name, the entry point will be removed.</target>
        </trans-unit>
        <trans-unit id="bd56a8742f9e2d9b6668ea31bedbcae5b6e7f991" translate="yes" xml:space="preserve">
          <source>If the current chunk contains modules already split out from the main bundle, it will be reused instead of a new one being generated. This can impact the resulting file name of the chunk.</source>
          <target state="translated">현재 청크에 기본 번들에서 이미 분리 된 모듈이 포함되어 있으면 새로 생성되는 대신 재사용됩니다. 이는 청크의 결과 파일 이름에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11f75fc174043b61cd8d2a42a5ddba540e6e502e" translate="yes" xml:space="preserve">
          <source>If the default webpack &lt;code&gt;minimizer&lt;/code&gt; has been overridden (such as to customise the &lt;code&gt;TerserPlugin&lt;/code&gt; options), make sure to configure its replacement with &lt;code&gt;sourceMap: true&lt;/code&gt; to enable SourceMap support.</source>
          <target state="translated">If the default webpack &lt;code&gt;minimizer&lt;/code&gt; has been overridden (such as to customise the &lt;code&gt;TerserPlugin&lt;/code&gt; options), make sure to configure its replacement with &lt;code&gt;sourceMap: true&lt;/code&gt; to enable SourceMap support.</target>
        </trans-unit>
        <trans-unit id="38f5f7ac58afc8be678ccb6af40ce23a140fff60" translate="yes" xml:space="preserve">
          <source>If the default webpack &lt;code&gt;minimizer&lt;/code&gt; has been overridden (such as to customise the &lt;code&gt;terser-webpack-plugin&lt;/code&gt; options), make sure to configure its replacement with &lt;code&gt;sourceMap: true&lt;/code&gt; to enable SourceMap support.</source>
          <target state="translated">If the default webpack &lt;code&gt;minimizer&lt;/code&gt; has been overridden (such as to customise the &lt;code&gt;terser-webpack-plugin&lt;/code&gt; options), make sure to configure its replacement with &lt;code&gt;sourceMap: true&lt;/code&gt; to enable SourceMap support.</target>
        </trans-unit>
        <trans-unit id="24b5ffcaaf2eed75c47cd9fb37fc044c78957376" translate="yes" xml:space="preserve">
          <source>If the folder contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolve-mainfields&quot;&gt;&lt;code&gt;resolve.mainFields&lt;/code&gt;&lt;/a&gt; configuration option are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the file path.</source>
          <target state="translated">폴더에 &lt;code&gt;package.json&lt;/code&gt; 파일이 포함되어 있으면 &lt;a href=&quot;../configuration/resolve#resolve-mainfields&quot;&gt; &lt;code&gt;resolve.mainFields&lt;/code&gt; &lt;/a&gt; 구성 옵션에 지정된 필드 가 순서대로 조회되고 &lt;code&gt;package.json&lt;/code&gt; 의 첫 번째 필드 가 파일 경로를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9d6448921c9abfe6554797a801402f29581c9e3a" translate="yes" xml:space="preserve">
          <source>If the folder contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolvemainfields&quot;&gt;&lt;code&gt;resolve.mainFields&lt;/code&gt;&lt;/a&gt; configuration option are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the file path.</source>
          <target state="translated">If the folder contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolvemainfields&quot;&gt; &lt;code&gt;resolve.mainFields&lt;/code&gt; &lt;/a&gt; configuration option are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the file path.</target>
        </trans-unit>
        <trans-unit id="f5769605929f82e57430fb4717d6d76c443abc54" translate="yes" xml:space="preserve">
          <source>If the loader has no &lt;code&gt;options&lt;/code&gt;, but was invoked with a query string, this will be a string starting with &lt;code&gt;?&lt;/code&gt;.</source>
          <target state="translated">로더에 &lt;code&gt;options&lt;/code&gt; 이 없지만 쿼리 문자열로 호출 된 경우 &lt;code&gt;?&lt;/code&gt; 로 시작하는 문자열이됩니다 . .</target>
        </trans-unit>
        <trans-unit id="5d354e319cbac13ec902509db72cdb3b9d0ab9e9" translate="yes" xml:space="preserve">
          <source>If the loader was configured with an &lt;a href=&quot;../configuration/module#useentry&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt; object, this will point to that object.</source>
          <target state="translated">로더가 &lt;a href=&quot;../configuration/module#useentry&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt; 오브젝트 로 구성된 경우 이는 해당 오브젝트를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="c81f2836d67fae82cf484d14bad3d646850c605f" translate="yes" xml:space="preserve">
          <source>If the package contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolveexportsfields&quot;&gt;&lt;code&gt;resolve.exportsFields&lt;/code&gt;&lt;/a&gt; configuration options are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the available exports from the package according to the &lt;a href=&quot;../guides/package-exports&quot;&gt;package exports guideline&lt;/a&gt;.</source>
          <target state="translated">If the package contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolveexportsfields&quot;&gt; &lt;code&gt;resolve.exportsFields&lt;/code&gt; &lt;/a&gt; configuration options are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the available exports from the package according to the &lt;a href=&quot;../guides/package-exports&quot;&gt;package exports guideline&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4ce6f12f8d307a5d7dcfbd04bb9e2bfe337ca2fe" translate="yes" xml:space="preserve">
          <source>If the package is available from npm, its name must begin with &lt;code&gt;webpack-scaffold&lt;/code&gt; and can be used by running:</source>
          <target state="translated">If the package is available from npm, its name must begin with &lt;code&gt;webpack-scaffold&lt;/code&gt; and can be used by running:</target>
        </trans-unit>
        <trans-unit id="3c47481a0a68b0c995943a5ceaffa05a318b27fb" translate="yes" xml:space="preserve">
          <source>If the path has a file extension, then the file is bundled straightaway.</source>
          <target state="translated">경로에 파일 확장자가 있으면 파일이 곧바로 번들로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="73575a91ca074bb9d7d0b8a836cea304cb565e3f" translate="yes" xml:space="preserve">
          <source>If the path points to a folder, then the following steps are taken to find the right file with the right extension:</source>
          <target state="translated">경로가 폴더를 가리키는 경우 올바른 확장자를 가진 올바른 파일을 찾기 위해 다음 단계를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="cdfe5f8c21d08ce5076228bb6801fbf96db868fa" translate="yes" xml:space="preserve">
          <source>If the resource (directory) matches &lt;code&gt;resourceRegExp&lt;/code&gt;, the plugin replaces the default resource, recursive flag or generated regular expression with &lt;code&gt;newContentResource&lt;/code&gt;, &lt;code&gt;newContentRecursive&lt;/code&gt; or &lt;code&gt;newContextRegExp&lt;/code&gt; respectively. If &lt;code&gt;newContentResource&lt;/code&gt; is relative, it is resolved relative to the previous resource.</source>
          <target state="translated">자원 (디렉토리)이 &lt;code&gt;resourceRegExp&lt;/code&gt; 와 일치 하면 플러그인은 기본 자원, 재귀 플래그 또는 생성 된 정규식을 각각 &lt;code&gt;newContentResource&lt;/code&gt; , &lt;code&gt;newContentRecursive&lt;/code&gt; 또는 &lt;code&gt;newContextRegExp&lt;/code&gt; 로 바꿉니다 . &lt;code&gt;newContentResource&lt;/code&gt; 가 상대적인 경우 이전 자원을 기준으로 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="df1b1ceedaca83877e4d9004b68fbc7f6030f980" translate="yes" xml:space="preserve">
          <source>If the tag name is not specified it will process all the tags.</source>
          <target state="translated">If the tag name is not specified it will process all the tags.</target>
        </trans-unit>
        <trans-unit id="79abbcba526b248d039a0743ecd5335a433a83bc" translate="yes" xml:space="preserve">
          <source>If the value is a string it will be used as a code fragment.</source>
          <target state="translated">값이 문자열이면 코드 조각으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8f1be205bff6517aa135228e2c7f797b13ff4efb" translate="yes" xml:space="preserve">
          <source>If the value is an object all keys are defined the same way.</source>
          <target state="translated">값이 객체이면 모든 키가 동일한 방식으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c80bd1536b13d414a6baa335b614baa6c76a4716" translate="yes" xml:space="preserve">
          <source>If the value isn't a string, it will be stringified (including functions).</source>
          <target state="translated">값이 문자열이 아닌 경우 문자열 화됩니다 (함수 포함).</target>
        </trans-unit>
        <trans-unit id="83a611854646adb309f27904f9ed35b750f2b5f1" translate="yes" xml:space="preserve">
          <source>If there are SourceMaps, they will also be included in the result string.</source>
          <target state="translated">SourceMap이 있으면 결과 문자열에도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4c2c55a655b84ae013eb6b53b4db03dec7b81683" translate="yes" xml:space="preserve">
          <source>If there are any duplicated modules between entry chunks they will be included in both bundles.</source>
          <target state="translated">엔트리 청크간에 중복 된 모듈이 있으면 두 번들에 모두 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3ae0951dceaf27a452d1d046b600179785a0a50e" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;package.json&lt;/code&gt; or if the &lt;a href=&quot;../configuration/resolve#resolvemainfields&quot;&gt;&lt;code&gt;resolve.mainFields&lt;/code&gt;&lt;/a&gt; do not return a valid path, file names specified in the &lt;a href=&quot;../configuration/resolve#resolvemainfiles&quot;&gt;&lt;code&gt;resolve.mainFiles&lt;/code&gt;&lt;/a&gt; configuration option are looked for in order, to see if a matching filename exists in the imported/required directory.</source>
          <target state="translated">If there is no &lt;code&gt;package.json&lt;/code&gt; or if the &lt;a href=&quot;../configuration/resolve#resolvemainfields&quot;&gt; &lt;code&gt;resolve.mainFields&lt;/code&gt; &lt;/a&gt; do not return a valid path, file names specified in the &lt;a href=&quot;../configuration/resolve#resolvemainfiles&quot;&gt; &lt;code&gt;resolve.mainFiles&lt;/code&gt; &lt;/a&gt; configuration option are looked for in order, to see if a matching filename exists in the imported/required directory.</target>
        </trans-unit>
        <trans-unit id="9d62d44f6e2f99d7094f3aa73779963bb10a3fd6" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;package.json&lt;/code&gt; or if the main fields do not return a valid path, file names specified in the &lt;a href=&quot;../configuration/resolve#resolve-mainfiles&quot;&gt;&lt;code&gt;resolve.mainFiles&lt;/code&gt;&lt;/a&gt; configuration option are looked for in order, to see if a matching filename exists in the imported/required directory .</source>
          <target state="translated">거기에 더없는 경우 &lt;code&gt;package.json&lt;/code&gt; 또는 주요 필드가 유효한 경로를 반환하지 않는 경우에 지정된 파일 이름 &lt;a href=&quot;../configuration/resolve#resolve-mainfiles&quot;&gt; &lt;code&gt;resolve.mainFiles&lt;/code&gt; 의&lt;/a&gt; 구성 옵션은 일치하는 파일 이름이 가져온 / 필요한 디렉토리에 존재하는지, 위해 찾았다된다.</target>
        </trans-unit>
        <trans-unit id="a6aa5b2b56d2ca18437a2ac9b9a74e0476e7d9ee" translate="yes" xml:space="preserve">
          <source>If this is too heavy on the file system, you can change this to an integer to set the interval in milliseconds.</source>
          <target state="translated">파일 시스템에서 이것이 너무 무거 우면이를 밀리 초 단위로 설정하기 위해 정수로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="225c720ca42da60ed6e6d5611f8f3324ddfe0f70" translate="yes" xml:space="preserve">
          <source>If true, emits a file (writes a file to the filesystem). If false, the loader will return a public URI but &lt;em&gt;will not&lt;/em&gt; emit the file. It is often useful to disable this option for server-side packages.</source>
          <target state="translated">true 인 경우 파일을 내 보냅니다 (파일을 파일 시스템에 씁니다). false 인 경우 로더는 공용 URI를 리턴하지만 파일을 내 &lt;em&gt;보내지 않습니다&lt;/em&gt; . 서버 측 패키지에 대해서는이 옵션을 비활성화하는 것이 유용한 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="fa3e69820d7f9dee471dd55bae715bfcf867e8fb" translate="yes" xml:space="preserve">
          <source>If true, emits a file (writes a file to the filesystem). If false, the loader will return a public URI but &lt;strong&gt;will not&lt;/strong&gt; emit the file. It is often useful to disable this option for server-side packages.</source>
          <target state="translated">If true, emits a file (writes a file to the filesystem). If false, the loader will return a public URI but &lt;strong&gt;will not&lt;/strong&gt; emit the file. It is often useful to disable this option for server-side packages.</target>
        </trans-unit>
        <trans-unit id="1eda099c2c5782e0b3576789ac6b0a53cbc5cd8f" translate="yes" xml:space="preserve">
          <source>If true, pipes &lt;code&gt;stylelint&lt;/code&gt; error severity messages to the &lt;code&gt;webpack&lt;/code&gt; compiler's error message handler.</source>
          <target state="translated">true 인 경우 파이프 &lt;code&gt;stylelint&lt;/code&gt; 오류 심각도 메시지를 &lt;code&gt;webpack&lt;/code&gt; 컴파일러의 오류 메시지 핸들러로 스타일링 합니다.</target>
        </trans-unit>
        <trans-unit id="a06a0527c4531fe93a61e00d8ea52d6cb4b8954f" translate="yes" xml:space="preserve">
          <source>If true, throws a fatal error in the global build process. This will end the build process on any &lt;code&gt;stylelint&lt;/code&gt; error.</source>
          <target state="translated">true이면 전역 빌드 프로세스에서 치명적인 오류가 발생합니다. 모든 &lt;code&gt;stylelint&lt;/code&gt; 오류 에서 빌드 프로세스가 종료됩니다 .</target>
        </trans-unit>
        <trans-unit id="ebd173452f057772e7901e648a653006e7a62600" translate="yes" xml:space="preserve">
          <source>If type &lt;code&gt;commonjs&lt;/code&gt;:</source>
          <target state="translated">If type &lt;code&gt;commonjs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb7f928c93871873ea23501411102f2183de7d93" translate="yes" xml:space="preserve">
          <source>If type &lt;code&gt;module&lt;/code&gt;:</source>
          <target state="translated">If type &lt;code&gt;module&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f7907c55ff2934d171f75429bbecb6ec83170412" translate="yes" xml:space="preserve">
          <source>If unsafe cache is enabled, includes &lt;code&gt;request.context&lt;/code&gt; in the cache key. This option is taken into account by the &lt;a href=&quot;https://github.com/webpack/enhanced-resolve/&quot;&gt;&lt;code&gt;enhanced-resolve&lt;/code&gt;&lt;/a&gt; module. Since webpack 3.1.0 context in resolve caching is ignored when resolve or resolveLoader plugins are provided. This addresses a performance regression.</source>
          <target state="translated">안전하지 않은 캐시가 활성화 된 경우 캐시 키에 &lt;code&gt;request.context&lt;/code&gt; 를 포함 시킵니다. 이 옵션은 &lt;a href=&quot;https://github.com/webpack/enhanced-resolve/&quot;&gt; &lt;code&gt;enhanced-resolve&lt;/code&gt; &lt;/a&gt; 모듈 에서 고려됩니다 . resolve 또는 resolveLoader 플러그인이 제공되면 resolve 캐싱의 webpack 3.1.0 컨텍스트가 무시됩니다. 이것은 성능 회귀를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="db93f6c6e041ac2dce0096403148c102903e17fc" translate="yes" xml:space="preserve">
          <source>If used inside a expression that is parsed by the Parser, the config option is treated as &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">구문 분석기가 구문 분석 한 표현식 내에서 사용되는 경우 config 옵션은 &lt;code&gt;true&lt;/code&gt; 로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="0175d5b649467f6ebc68e46287aad4bf5f8300df" translate="yes" xml:space="preserve">
          <source>If used inside an expression that is parsed by the Parser, the configuration option is treated as &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">If used inside an expression that is parsed by the Parser, the configuration option is treated as &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a392e9955061d72252bb73c7a747a43aa7aa415" translate="yes" xml:space="preserve">
          <source>If using a function for this option, the function will be passed an object containing data for the substitutions in the table above. Substituions will be applied to the returned string too. The passed object will have this type: (properties available depending on context)</source>
          <target state="translated">If using a function for this option, the function will be passed an object containing data for the substitutions in the table above. Substituions will be applied to the returned string too. The passed object will have this type: (properties available depending on context)</target>
        </trans-unit>
        <trans-unit id="6bc82bd0ebf30b0204a4453e41a1b8f203afcce0" translate="yes" xml:space="preserve">
          <source>If using a function for this option, the function will be passed an object containing data for the substitutions in the table above. Substitutions will be applied to the returned string too. The passed object will have this type: (properties available depending on context)</source>
          <target state="translated">이 옵션에 대한 함수를 사용하는 경우 함수는 위 표의 대체 데이터를 포함하는 객체로 전달됩니다. 반환 된 문자열에도 대체가 적용됩니다. 전달 된 객체의 유형은 다음과 같습니다. (컨텍스트에 따라 사용 가능한 속성)</target>
        </trans-unit>
        <trans-unit id="68cec0d3a09b30b5dfed3ac7037930cf262328ae" translate="yes" xml:space="preserve">
          <source>If using a function for this option, the function will be passed an object containing the substitutions in the table above.</source>
          <target state="translated">이 옵션에 함수를 사용하는 경우 함수는 위 표의 대체를 포함하는 객체로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="60f440352d9d184e19412ab7f330500fd8f0d080" translate="yes" xml:space="preserve">
          <source>If using the &lt;a href=&quot;#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option, the library name is automatically appended.</source>
          <target state="translated">&lt;a href=&quot;#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt; 옵션을 사용하는 경우 라이브러리 이름이 자동으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c47f47c9ee0d5881bd7175dbebc17a8cac454c6e" translate="yes" xml:space="preserve">
          <source>If watching does not work for you, try out this option. Watching does not work with NFS and machines in VirtualBox.</source>
          <target state="translated">시청할 수없는 경우이 옵션을 사용해보십시오. VirtualBox의 NFS 및 컴퓨터에서는 감시 기능이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e8d5a4ed1e74100d39638592b4d0b327ca5068ed" translate="yes" xml:space="preserve">
          <source>If we run a build, we should still see the same output:</source>
          <target state="translated">빌드를 실행해도 여전히 동일한 출력이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="aa65c205269e7b023f234f65c15495f5a87b040b" translate="yes" xml:space="preserve">
          <source>If we run our build, another &lt;code&gt;polyfills.bundle.js&lt;/code&gt; file will be emitted and everything should still run smoothly in the browser. Note that this set up could likely be improved upon but it should give you a good idea of how you can provide polyfills only to the users that actually need them.</source>
          <target state="translated">빌드를 실행하면 다른 &lt;code&gt;polyfills.bundle.js&lt;/code&gt; 파일이 생성되며 모든 것이 브라우저에서 여전히 원활하게 실행됩니다. 이 설정은 개선 될 수 있지만 실제로 필요한 사용자에게만 폴리 필을 제공 할 수있는 방법에 대한 좋은 아이디어를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="a670877a2873042d7d2d2d69e6c1ca6edef03df9" translate="yes" xml:space="preserve">
          <source>If we're going to use multiple entry points on a single HTML page, &lt;code&gt;optimization.runtimeChunk: 'single'&lt;/code&gt; is needed too, otherwise we could get into trouble described &lt;a href=&quot;https://bundlers.tooling.report/code-splitting/multi-entry/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">If we're going to use multiple entry points on a single HTML page, &lt;code&gt;optimization.runtimeChunk: 'single'&lt;/code&gt; is needed too, otherwise we could get into trouble described &lt;a href=&quot;https://bundlers.tooling.report/code-splitting/multi-entry/&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="44b26b80d99e744c6c047afbad0f13d1c1deea72" translate="yes" xml:space="preserve">
          <source>If you are enthusiastic about using the latest that webpack has to offer, you can install beta versions or even directly from the webpack repository using the following commands:</source>
          <target state="translated">웹팩이 제공하는 최신 버전을 사용하는 데 관심이 있다면 다음 명령을 사용하여 베타 버전을 설치하거나 웹팩 저장소에서 직접 설치할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc325ce881228c1ddcf79037c94fad86d836afb0" translate="yes" xml:space="preserve">
          <source>If you are experiencing any issues, please see the following notes. There are a variety of reasons why webpack might miss a file change.</source>
          <target state="translated">문제가 발생하면 다음 참고 사항을 참조하십시오. webpack이 파일 변경을 놓칠 수있는 이유는 여러 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c951c9098069d4c65737f0bf9133d318b36d5ca5" translate="yes" xml:space="preserve">
          <source>If you are finding that urls are not resolving properly when you run webpack. You can expand your loader functionality with options. The &lt;code&gt;url: false&lt;/code&gt; property allows your paths resolved without any changes.</source>
          <target state="translated">webpack을 실행할 때 URL이 제대로 해결되지 않는 것을 발견 한 경우 옵션으로 로더 기능을 확장 할 수 있습니다. &lt;code&gt;url: false&lt;/code&gt; 속성은 당신의 경로를 변경하지 않고도 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88f1e1343a92b2bf27f3dc803b16dc14b51b3caf" translate="yes" xml:space="preserve">
          <source>If you are interested in more ways to optimize your output, please jump to the next guide for details on building for &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</source>
          <target state="translated">출력을 최적화하는 더 많은 방법에 관심이있는 경우 &lt;a href=&quot;production&quot;&gt;생산을&lt;/a&gt; 위한 구축에 대한 자세한 내용은 다음 안내서로 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="31a3d2c22bb25ed57334e2bb509b42c4fddc60e2" translate="yes" xml:space="preserve">
          <source>If you are using Babel elsewhere and have &lt;code&gt;modules&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;, you will have to either maintain two separate &lt;code&gt;.babelrc&lt;/code&gt; files or use &lt;code&gt;const jsxobj = require('jsxobj');&lt;/code&gt; and &lt;code&gt;module.exports&lt;/code&gt; instead of the new &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax. This is because while Node does support many new ES6 features, they don't yet support ES6 module syntax.</source>
          <target state="translated">Babel을 다른 곳에서 사용하고 &lt;code&gt;modules&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정 한 경우 두 개의 개별 &lt;code&gt;.babelrc&lt;/code&gt; 파일을 유지 관리 하거나 &lt;code&gt;const jsxobj = require('jsxobj');&lt;/code&gt; 및 &lt;code&gt;module.exports&lt;/code&gt; 대신 새로운 &lt;code&gt;import&lt;/code&gt; 및 &lt;code&gt;export&lt;/code&gt; 구문. Node는 많은 새로운 ES6 기능을 지원하지만 아직 ES6 모듈 구문을 지원하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="8fde853b05d03d1441370c525ece485037162e65" translate="yes" xml:space="preserve">
          <source>If you are using a module which needs global variables in it, use &lt;code&gt;ProvidePlugin&lt;/code&gt; instead of &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">If you are using a module which needs global variables in it, use &lt;code&gt;ProvidePlugin&lt;/code&gt; instead of &lt;code&gt;global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07611a267ed72bba48c7d5c7b5c7332c14be1f2d" translate="yes" xml:space="preserve">
          <source>If you are using webpack &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;, the webpack process will not exit with an error code while this plugin is enabled. If you want webpack to &quot;fail&quot; when using the CLI, please check out the &lt;a href=&quot;../api/cli#advanced-options&quot;&gt;&lt;code&gt;bail&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">webpack &lt;a href=&quot;../api/cli&quot;&gt;CLI를&lt;/a&gt; 사용 하는 경우이 플러그인을 사용하는 동안 웹팩 프로세스가 오류 코드와 함께 종료되지 않습니다. CLI를 사용할 때 webpack을 &quot;실패&quot;시키려면 &lt;a href=&quot;../api/cli#advanced-options&quot;&gt; &lt;code&gt;bail&lt;/code&gt; 옵션을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="6378364695ae81c67e28f6eea6d9bcd7cd9695a2" translate="yes" xml:space="preserve">
          <source>If you are using webpack v5 or above you do not need to install this plugin. Webpack v5 comes with the latest &lt;code&gt;terser-webpack-plugin&lt;/code&gt; out of the box.</source>
          <target state="translated">If you are using webpack v5 or above you do not need to install this plugin. Webpack v5 comes with the latest &lt;code&gt;terser-webpack-plugin&lt;/code&gt; out of the box.</target>
        </trans-unit>
        <trans-unit id="9c9da345f38f77e3cfcce3a46a66b93846091a7e" translate="yes" xml:space="preserve">
          <source>If you are using webpack v5 or above you do not need to install this plugin. Webpack v5 comes with the latest &lt;code&gt;terser-webpack-plugin&lt;/code&gt; out of the box. Using Webpack v4, you have to install &lt;code&gt;terser-webpack-plugin&lt;/code&gt; v4.</source>
          <target state="translated">webpack v5 이상을 사용하는 경우이 플러그인을 설치할 필요가 없습니다. Webpack v5에는 최신 &lt;code&gt;terser-webpack-plugin&lt;/code&gt; 이 기본 제공됩니다. Webpack v4를 사용하려면 &lt;code&gt;terser-webpack-plugin&lt;/code&gt; v4 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c280059793a0c8d6a4012d80a7d96024b46998b1" translate="yes" xml:space="preserve">
          <source>If you avoid building with comments, use this config:</source>
          <target state="translated">If you avoid building with comments, use this config:</target>
        </trans-unit>
        <trans-unit id="a85cff77f329cf8de0d4b2cb653288209f4dfc07" translate="yes" xml:space="preserve">
          <source>If you choose to specify a function, you may find the &lt;code&gt;chunk.name&lt;/code&gt; and &lt;code&gt;chunk.hash&lt;/code&gt; properties (where &lt;code&gt;chunk&lt;/code&gt; is an element of the &lt;code&gt;chunks&lt;/code&gt; array) particularly useful in choosing a name for your chunk.</source>
          <target state="translated">If you choose to specify a function, you may find the &lt;code&gt;chunk.name&lt;/code&gt; and &lt;code&gt;chunk.hash&lt;/code&gt; properties (where &lt;code&gt;chunk&lt;/code&gt; is an element of the &lt;code&gt;chunks&lt;/code&gt; array) particularly useful in choosing a name for your chunk.</target>
        </trans-unit>
        <trans-unit id="efd68771538d112f86285a66966d1715a1e222a3" translate="yes" xml:space="preserve">
          <source>If you decide to try another minification plugin, just make sure your new choice also drops dead code as described in the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide and provide it as the &lt;a href=&quot;../configuration/optimization#optimization-minimizer&quot;&gt;&lt;code&gt;optimization.minimizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 축소 플러그인을 사용하기로 결정한 경우, &lt;a href=&quot;tree-shaking&quot;&gt;트리 쉐이킹&lt;/a&gt; 안내서에 설명 된대로 새 선택 항목에서 데드 코드를 삭제 하고 &lt;a href=&quot;../configuration/optimization#optimization-minimizer&quot;&gt; &lt;code&gt;optimization.minimizer&lt;/code&gt; &lt;/a&gt; . 최소화기로 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="c65d29e6def21e3d9a4bd21b0f70976fc2937d4a" translate="yes" xml:space="preserve">
          <source>If you decide to try another minification plugin, just make sure your new choice also drops dead code as described in the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide and provide it as the &lt;a href=&quot;../configuration/optimization#optimizationminimizer&quot;&gt;&lt;code&gt;optimization.minimizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If you decide to try another minification plugin, just make sure your new choice also drops dead code as described in the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide and provide it as the &lt;a href=&quot;../configuration/optimization#optimizationminimizer&quot;&gt; &lt;code&gt;optimization.minimizer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="46cf68ccecadd5cb2ef9523e8fc1e59eb653476a" translate="yes" xml:space="preserve">
          <source>If you define &lt;code&gt;from&lt;/code&gt; as absolute file path or absolute folder path on &lt;code&gt;Windows&lt;/code&gt;, you can use windows path segment (&lt;code&gt;\\&lt;/code&gt;)</source>
          <target state="translated">If you define &lt;code&gt;from&lt;/code&gt; as absolute file path or absolute folder path on &lt;code&gt;Windows&lt;/code&gt; , you can use windows path segment ( &lt;code&gt;\\&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a72b6f3a091a93d008392a167246dd7b3740477e" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t pass the &lt;code&gt;webpack&lt;/code&gt; runner function a callback, it will return a webpack &lt;code&gt;Compiler&lt;/code&gt; instance. This instance can be used to manually trigger the webpack runner or have it build and watch for changes, much like the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;. The &lt;code&gt;Compiler&lt;/code&gt; instance provides the following methods:</source>
          <target state="translated">&lt;code&gt;webpack&lt;/code&gt; 러너 함수에 콜백을 전달하지 않으면 웹팩 &lt;code&gt;Compiler&lt;/code&gt; 인스턴스 가 반환됩니다 . 이 인스턴스는 웹팩 러너를 수동으로 트리거하거나 &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; 와 매우 유사하게 변경 사항을 빌드 및 감시하도록하는 데 사용할 수 있습니다 . &lt;code&gt;Compiler&lt;/code&gt; 인스턴스는 다음과 같은 방법을 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="c305306239d969628f0a957d3f49a6c5ac50f44a" translate="yes" xml:space="preserve">
          <source>If you don't want &lt;code&gt;/api&lt;/code&gt; to be passed along, we need to rewrite the path:</source>
          <target state="translated">&lt;code&gt;/api&lt;/code&gt; 를 전달 하지 않으려면 경로를 다시 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f9996886b5d2b7833a82bef15487b5c9d5797541" translate="yes" xml:space="preserve">
          <source>If you don't want to use any encoding you can set &lt;code&gt;encoding&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; however if you set it to &lt;code&gt;true&lt;/code&gt; it will use the default encoding &lt;code&gt;base64&lt;/code&gt;.</source>
          <target state="translated">If you don't want to use any encoding you can set &lt;code&gt;encoding&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; however if you set it to &lt;code&gt;true&lt;/code&gt; it will use the default encoding &lt;code&gt;base64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="565f45b0e5bb38128e1a3f80b37d1f898320c639" translate="yes" xml:space="preserve">
          <source>If you encounter at least one instance of the variable &lt;code&gt;_&lt;/code&gt;, include the &lt;code&gt;lodash&lt;/code&gt; package and provide it to the modules that need it.</source>
          <target state="translated">변수 &lt;code&gt;_&lt;/code&gt; 의 인스턴스가 하나 이상 있는 경우 &lt;code&gt;lodash&lt;/code&gt; 패키지를 포함하고 이를 필요한 모듈에 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="20bffaf1de8117474b6354f15e4c42129fa5122e" translate="yes" xml:space="preserve">
          <source>If you feel that you have mitigated these concerns and wish to incur the risk of brokenness, here's one way you might do it: Let's move our &lt;code&gt;import&lt;/code&gt; to a new file and add the &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;&lt;code&gt;whatwg-fetch&lt;/code&gt;&lt;/a&gt; polyfill:</source>
          <target state="translated">If you feel that you have mitigated these concerns and wish to incur the risk of brokenness, here's one way you might do it: Let's move our &lt;code&gt;import&lt;/code&gt; to a new file and add the &lt;a href=&quot;https://github.com/github/fetch&quot;&gt; &lt;code&gt;whatwg-fetch&lt;/code&gt; &lt;/a&gt; polyfill:</target>
        </trans-unit>
        <trans-unit id="2e077f6bbdb882b1ac4039906e3e6695ca92666c" translate="yes" xml:space="preserve">
          <source>If you have a more advanced project and use &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; to run your development environment in a Virtual Machine, you'll often want to also run webpack in the VM.</source>
          <target state="translated">고급 프로젝트가 있고 &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; 를 사용 하여 가상 머신에서 개발 환경을 실행하는 경우 종종 VM에서 웹팩을 실행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="af148258b5dd22a17f7577a43a50d4264ded997f" translate="yes" xml:space="preserve">
          <source>If you have any CSS assets in webpack's output (for example, CSS extracted with the &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;ExtractTextPlugin&lt;/a&gt;) then these will be included with &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags in the HTML head.</source>
          <target state="translated">webpack의 출력에 CSS 자산이있는 경우 (예 &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;: ExtractTextPlugin으로&lt;/a&gt; 추출 된 CSS ) HTML 헤드에 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 태그 가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="802134397c0863ec8a2a3311914b0efd019b9319" translate="yes" xml:space="preserve">
          <source>If you have any CSS assets in webpack's output (for example, CSS extracted with the &lt;a href=&quot;mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;) then these will be included with &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element of generated HTML.</source>
          <target state="translated">If you have any CSS assets in webpack's output (for example, CSS extracted with the &lt;a href=&quot;mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;) then these will be included with &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element of generated HTML.</target>
        </trans-unit>
        <trans-unit id="15ae38f047f94f07bc67e32d16e2fb56582a6b33" translate="yes" xml:space="preserve">
          <source>If you have multiple webpack entry points, they will all be included with &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags in the generated HTML.</source>
          <target state="translated">If you have multiple webpack entry points, they will all be included with &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags in the generated HTML.</target>
        </trans-unit>
        <trans-unit id="e03c745511a67cacba3f597cc0a4d8417eb6c550" translate="yes" xml:space="preserve">
          <source>If you have multiple webpack entry points, they will all be included with &lt;code&gt;script&lt;/code&gt; tags in the generated HTML.</source>
          <target state="translated">웹팩 시작점이 여러 개인 경우 생성 된 HTML에 모두 &lt;code&gt;script&lt;/code&gt; 태그 가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="689bc0d9f09d4a2074a43552120fc8c0e2038b6f" translate="yes" xml:space="preserve">
          <source>If you haven't previously done so, run the command &lt;code&gt;npm run build&lt;/code&gt; to build your project. Then run the command &lt;code&gt;npm start&lt;/code&gt;. This should produce the following output:</source>
          <target state="translated">이전에 수행하지 않은 경우 &lt;code&gt;npm run build&lt;/code&gt; 명령을 실행 하여 프로젝트를 빌드하십시오. 그런 다음 &lt;code&gt;npm start&lt;/code&gt; 명령을 실행하십시오 . 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a6fcee1ea4c995647ec4b5bac70b71b97b04fb3" translate="yes" xml:space="preserve">
          <source>If you know of any other loaders or plugins that help with or enhance HMR, please submit a pull request to add them to this list!</source>
          <target state="translated">If you know of any other loaders or plugins that help with or enhance HMR, please submit a pull request to add them to this list!</target>
        </trans-unit>
        <trans-unit id="349cdf2452bc7cf7e0b6186f04e97bc9c5e0605d" translate="yes" xml:space="preserve">
          <source>If you know of any other loaders or plugins that help with or enhance Hot Module Replacement please submit a pull request to add to this list!</source>
          <target state="translated">핫 모듈 교체를 지원하거나 향상시키는 데 도움이되는 다른 로더 또는 플러그인을 알고있는 경우이 목록에 추가하려면 풀 요청을 제출하십시오!</target>
        </trans-unit>
        <trans-unit id="f1eb178e51c940150e982311e6fffe632a87860f" translate="yes" xml:space="preserve">
          <source>If you need to define two different loader configs, you can also change the config's property name via &lt;code&gt;html-loader?config=otherHtmlLoaderConfig&lt;/code&gt;:</source>
          <target state="translated">두 개의 다른 로더 구성을 정의해야하는 경우 &lt;code&gt;html-loader?config=otherHtmlLoaderConfig&lt;/code&gt; 를 통해 구성의 속성 이름을 변경할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77f0d6d82229ff0d53ed4faf2eefabc87a679d20" translate="yes" xml:space="preserve">
          <source>If you need to pass &lt;a href=&quot;https://github.com/webpack/html-loader/pull/46&quot;&gt;more advanced options&lt;/a&gt;, especially those which cannot be stringified, you can also define an &lt;code&gt;htmlLoader&lt;/code&gt;-property on your &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/html-loader/pull/46&quot;&gt;더 고급 옵션&lt;/a&gt; , 특히 &lt;code&gt;webpack.config.js&lt;/code&gt; 화 할 수없는 옵션 을 전달 해야하는 경우 webpack.config.js 에서 &lt;code&gt;htmlLoader&lt;/code&gt; 속성을 정의 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91242af898a06d58af220036209ec5d56d99b914" translate="yes" xml:space="preserve">
          <source>If you open &lt;code&gt;index.html&lt;/code&gt; in your code editor, you'll see that the &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; has created an entirely new file for you and that all the bundles are automatically added.</source>
          <target state="translated">코드 편집기에서 &lt;code&gt;index.html&lt;/code&gt; 을 열면 &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; 이 완전히 새로운 파일을 생성했으며 모든 번들이 자동으로 추가 된 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4997bd66146ddd1583e50ecbccb35bb2caa014f5" translate="yes" xml:space="preserve">
          <source>If you open your browser to &lt;code&gt;http://localhost:8080&lt;/code&gt; (i.e. &lt;code&gt;http://127.0.0.1&lt;/code&gt;) you should see your webpack application being served from the &lt;code&gt;dist&lt;/code&gt; directory. If you stop the server and refresh, the webpack application is no longer available.</source>
          <target state="translated">If you open your browser to &lt;code&gt;http://localhost:8080&lt;/code&gt; (i.e. &lt;code&gt;http://127.0.0.1&lt;/code&gt; ) you should see your webpack application being served from the &lt;code&gt;dist&lt;/code&gt; directory. If you stop the server and refresh, the webpack application is no longer available.</target>
        </trans-unit>
        <trans-unit id="aeca2dfc9ff183365ee9c8ebd340fc597fbdf457" translate="yes" xml:space="preserve">
          <source>If you open your browser to &lt;code&gt;http://localhost:8080&lt;/code&gt; (i.e. &lt;code&gt;http://127.0.0.1&lt;/code&gt;) you should see your webpack application being served up from the &lt;code&gt;dist&lt;/code&gt; directory. If you stop the server and refresh, the webpack application is no longer available.</source>
          <target state="translated">브라우저를 &lt;code&gt;http://localhost:8080&lt;/code&gt; (예 : &lt;code&gt;http://127.0.0.1&lt;/code&gt; )으로 열면 &lt;code&gt;dist&lt;/code&gt; 디렉토리 에서 웹팩 애플리케이션이 제공되는 것을 볼 수 있습니다 . 서버를 중지하고 새로 고치면 웹팩 애플리케이션을 더 이상 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="412f448e4a459e1130eafe430b0c0983bcaedc39" translate="yes" xml:space="preserve">
          <source>If you pass a name to &lt;a href=&quot;../api/cli#config-name&quot;&gt;&lt;code&gt;--config-name&lt;/code&gt;&lt;/a&gt; flag, webpack will only build that specific configuration.</source>
          <target state="translated">&lt;a href=&quot;../api/cli#config-name&quot;&gt; &lt;code&gt;--config-name&lt;/code&gt; &lt;/a&gt; 플래그에 이름을 전달하면 webpack은 해당 특정 구성 만 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="21d1354d2cc85df91b9943102715a84d844c5f0d" translate="yes" xml:space="preserve">
          <source>If you pass a name to &lt;a href=&quot;../api/cli#configuration-options&quot;&gt;&lt;code&gt;--config-name&lt;/code&gt;&lt;/a&gt; flag, webpack will only build that specific configuration.</source>
          <target state="translated">If you pass a name to &lt;a href=&quot;../api/cli#configuration-options&quot;&gt; &lt;code&gt;--config-name&lt;/code&gt; &lt;/a&gt; flag, webpack will only build that specific configuration.</target>
        </trans-unit>
        <trans-unit id="4fb7db4d2429df6b27c9db5ba10da37161ee2934" translate="yes" xml:space="preserve">
          <source>If you pass a name to &lt;code&gt;--config-name&lt;/code&gt; flag, webpack will only build that specific configuration.</source>
          <target state="translated">&lt;code&gt;--config-name&lt;/code&gt; 플래그에 이름을 전달하면 webpack은 해당 특정 구성 만 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="04ce1ae73d1c22600122a228da4c67a184ad35c2" translate="yes" xml:space="preserve">
          <source>If you pass the generated CSS on to the &lt;code&gt;css-loader&lt;/code&gt;, all urls must be relative to the entry-file (e.g. &lt;code&gt;main.scss&lt;/code&gt;).</source>
          <target state="translated">If you pass the generated CSS on to the &lt;code&gt;css-loader&lt;/code&gt; , all urls must be relative to the entry-file (e.g. &lt;code&gt;main.scss&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ad2be3219a352f8fa6b591ccbca064150835f610" translate="yes" xml:space="preserve">
          <source>If you pass the generated CSS on to the css-loader, all urls must be relative to the entry-file (e.g. &lt;code&gt;main.scss&lt;/code&gt;).</source>
          <target state="translated">생성 된 CSS를 css-loader로 전달하는 경우 모든 URL은 항목 파일과 관련이 있어야합니다 (예 : &lt;code&gt;main.scss&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="27f65f39502e6e0ddec9ed35ef7854d3bc12f547" translate="yes" xml:space="preserve">
          <source>If you prefix &lt;code&gt;typeof&lt;/code&gt; to the key, it's only defined for typeof calls.</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 를 키 앞에 붙이면 typeof 호출에 대해서만 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5af3362992e5c579579a607b6fc872a5aaf38485" translate="yes" xml:space="preserve">
          <source>If you receive this message it means that you have the npm package &lt;code&gt;babel&lt;/code&gt; installed and use the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):</source>
          <target state="translated">이 메시지가 표시되면 npm 패키지 &lt;code&gt;babel&lt;/code&gt; 이 설치되었고 webpack 구성에서 로더의 짧은 표기법을 사용 한다는 의미입니다 (webpack 2.x에서는 더 이상 유효하지 않음).</target>
        </trans-unit>
        <trans-unit id="6da7de69cbebadc1702b2e9e20a350f552af3dab" translate="yes" xml:space="preserve">
          <source>If you receive this message, it means that you have the npm package &lt;code&gt;babel&lt;/code&gt; installed and are using the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):</source>
          <target state="translated">If you receive this message, it means that you have the npm package &lt;code&gt;babel&lt;/code&gt; installed and are using the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):</target>
        </trans-unit>
        <trans-unit id="3a058c075795cc76d5af3fee2b16739d1d9c4170" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;paths&lt;/code&gt; option, modules will be searched in the given &lt;code&gt;paths&lt;/code&gt;. This is &lt;code&gt;less&lt;/code&gt; default behavior. &lt;code&gt;paths&lt;/code&gt; should be an array with absolute paths:</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; 옵션 을 지정 하면 지정된 &lt;code&gt;paths&lt;/code&gt; 에서 모듈이 검색됩니다 . 이것은 &lt;code&gt;less&lt;/code&gt; 기본 동작입니다. &lt;code&gt;paths&lt;/code&gt; 는 절대 경로가있는 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ae419f87939abec9ae33ce5b2e6a5809823516ce" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;paths&lt;/code&gt; option, modules will be searched in the given &lt;code&gt;paths&lt;/code&gt;. This is Less' default behavior. &lt;code&gt;paths&lt;/code&gt; should be an array with absolute paths:</source>
          <target state="translated">If you specify the &lt;code&gt;paths&lt;/code&gt; option, modules will be searched in the given &lt;code&gt;paths&lt;/code&gt; . This is Less' default behavior. &lt;code&gt;paths&lt;/code&gt; should be an array with absolute paths:</target>
        </trans-unit>
        <trans-unit id="7f59c00efbf5073e57c88eddbe0d5870f787cf96" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;paths&lt;/code&gt; option, modules will be searched in the given &lt;code&gt;paths&lt;/code&gt;. This is Stylus default behavior.</source>
          <target state="translated">If you specify the &lt;code&gt;paths&lt;/code&gt; option, modules will be searched in the given &lt;code&gt;paths&lt;/code&gt; . This is Stylus default behavior.</target>
        </trans-unit>
        <trans-unit id="620cb2bd729e26242cd5c6f1646930cc385dd4c8" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;paths&lt;/code&gt; option, the &lt;code&gt;less-loader&lt;/code&gt; will not use webpack's resolver. Modules, that can't be resolved in the local folder, will be searched in the given &lt;code&gt;paths&lt;/code&gt;. This is Less' default behavior. &lt;code&gt;paths&lt;/code&gt; should be an array with absolute paths:</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; 옵션 을 지정하면 &lt;code&gt;less-loader&lt;/code&gt; 가 웹팩의 리졸버를 사용하지 않습니다. 로컬 폴더에서 확인할 수없는 모듈은 지정된 &lt;code&gt;paths&lt;/code&gt; 에서 검색됩니다 . 이것은 기본 동작입니다. &lt;code&gt;paths&lt;/code&gt; 는 절대 경로가있는 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e11a354c365e4c567d8a964e97c63557ce8cc05d" translate="yes" xml:space="preserve">
          <source>If you target an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement&quot;&gt;iframe&lt;/a&gt; make sure that the parent document has sufficient access rights to reach into the frame document and append elements to it.</source>
          <target state="translated">If you target an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement&quot;&gt;iframe&lt;/a&gt; make sure that the parent document has sufficient access rights to reach into the frame document and append elements to it.</target>
        </trans-unit>
        <trans-unit id="ccaba97492bbb20edf74e8ccb7f017d1bf70d952" translate="yes" xml:space="preserve">
          <source>If you took the route of using &lt;code&gt;webpack-dev-middleware&lt;/code&gt; instead of &lt;code&gt;webpack-dev-server&lt;/code&gt;, please use the &lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt;&lt;code&gt;webpack-hot-middleware&lt;/code&gt;&lt;/a&gt; package to enable HMR on your custom server or application.</source>
          <target state="translated">당신이 사용하는 경로했다 경우 &lt;code&gt;webpack-dev-middleware&lt;/code&gt; 대신 &lt;code&gt;webpack-dev-server&lt;/code&gt; 의 사용하십시오 &lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt; &lt;code&gt;webpack-hot-middleware&lt;/code&gt; &lt;/a&gt; 사용자 정의 서버 또는 응용 프로그램에 HMR 수 있도록 패키지를.</target>
        </trans-unit>
        <trans-unit id="257b41da17181f717f34d7e9b4aabec6c65516d5" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;&amp;lt;custom-elements&amp;gt;&lt;/code&gt;, and lots of them make use of a &lt;code&gt;custom-src&lt;/code&gt; attribute, you don't have to specify each combination &lt;code&gt;&amp;lt;tag&amp;gt;:&amp;lt;attribute&amp;gt;&lt;/code&gt;: just specify an empty tag like &lt;code&gt;attrs=:custom-src&lt;/code&gt; and it will match every element.</source>
          <target state="translated">당신이 사용하는 경우 &lt;code&gt;&amp;lt;custom-elements&amp;gt;&lt;/code&gt; 그들, 그리고 제비를 사용하게 &lt;code&gt;custom-src&lt;/code&gt; 속성을 각 조합을 지정할 필요가 없습니다 &lt;code&gt;&amp;lt;tag&amp;gt;:&amp;lt;attribute&amp;gt;&lt;/code&gt; : 단지 같은 빈 태그 지정 &lt;code&gt;attrs=:custom-src&lt;/code&gt; 및 모든 요소와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="deed18356d0598e516166163156081b7d79c7134" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;require.context&lt;/code&gt;, webpack will watch your entire directory. You will need to ignore files and/or directories so that unwanted changes will not trigger a rebuild.</source>
          <target state="translated">&lt;code&gt;require.context&lt;/code&gt; 를 사용 하면 webpack은 전체 디렉토리를 감시합니다. 원하지 않는 변경으로 인해 재 구축이 트리거되지 않도록 파일 및 / 또는 디렉토리를 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="436d26be1e1b400b4d8bd715d78a54d118c1d9d1" translate="yes" xml:space="preserve">
          <source>If you use JS styles the &lt;a href=&quot;https://github.com/postcss/postcss-js&quot;&gt;&lt;code&gt;postcss-js&lt;/code&gt;&lt;/a&gt; parser, add the &lt;code&gt;execute&lt;/code&gt; option.</source>
          <target state="translated">If you use JS styles the &lt;a href=&quot;https://github.com/postcss/postcss-js&quot;&gt; &lt;code&gt;postcss-js&lt;/code&gt; &lt;/a&gt; parser, add the &lt;code&gt;execute&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="c304a1dc248e202f2e6dc69866582fd83a6a3356" translate="yes" xml:space="preserve">
          <source>If you use JS styles without the [&lt;code&gt;postcss-js&lt;/code&gt;][postcss-js] parser, add the &lt;code&gt;exec&lt;/code&gt; option.</source>
          <target state="translated">[ &lt;code&gt;postcss-js&lt;/code&gt; ] [postcss-js] 파서 없이 JS 스타일을 사용하는 경우 &lt;code&gt;exec&lt;/code&gt; 옵션을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="78690a89ba0564d3d44fca1bb4464526f2f7ae9e" translate="yes" xml:space="preserve">
          <source>If you use the CLI, make sure &lt;strong&gt;inline mode&lt;/strong&gt; is disabled.</source>
          <target state="translated">CLI를 사용하는 경우 &lt;strong&gt;인라인 모드&lt;/strong&gt; 가 비활성화되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d00a18ab3b862fed22864bf39fbac55c69b2279" translate="yes" xml:space="preserve">
          <source>If you use your own &lt;code&gt;minify&lt;/code&gt; function please read the &lt;code&gt;minify&lt;/code&gt; section for cache invalidation correctly.</source>
          <target state="translated">자체 &lt;code&gt;minify&lt;/code&gt; 기능 을 사용하는 경우 캐시 무효화에 대한 &lt;code&gt;minify&lt;/code&gt; 섹션을 올바르게 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="69b1cffee5ef172fb6a952e822c97a2074033171" translate="yes" xml:space="preserve">
          <source>If you use your own &lt;code&gt;minify&lt;/code&gt; function please read the &lt;code&gt;minify&lt;/code&gt; section for handling source maps correctly.</source>
          <target state="translated">자체 &lt;code&gt;minify&lt;/code&gt; 기능 을 사용하는 경우 소스 맵을 올바르게 처리하기위한 &lt;code&gt;minify&lt;/code&gt; 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="72f56d6f7a53c8ace53f92bf99a498cc22b3c3d8" translate="yes" xml:space="preserve">
          <source>If you want only content &lt;code&gt;src/directory-nested/&lt;/code&gt;, you should only indicate &lt;code&gt;glob&lt;/code&gt; in &lt;code&gt;from&lt;/code&gt;. The path to the folder in which the search should take place, should be moved to &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">If you want only content &lt;code&gt;src/directory-nested/&lt;/code&gt; , you should only indicate &lt;code&gt;glob&lt;/code&gt; in &lt;code&gt;from&lt;/code&gt; . The path to the folder in which the search should take place, should be moved to &lt;code&gt;context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66e0754788d34dc99a84e18a12eebf0b4b428bc2" translate="yes" xml:space="preserve">
          <source>If you want source maps in your extracted CSS files, you need to set the &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#sourcemap&quot;&gt;&lt;code&gt;sourceMap&lt;/code&gt; option&lt;/a&gt; of the &lt;strong&gt;css-loader&lt;/strong&gt;:</source>
          <target state="translated">If you want source maps in your extracted CSS files, you need to set the &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#sourcemap&quot;&gt; &lt;code&gt;sourceMap&lt;/code&gt; option&lt;/a&gt; of the &lt;strong&gt;css-loader&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="968f1b8beb2b4018803cc4c72d20171f373867ca" translate="yes" xml:space="preserve">
          <source>If you want to add a directory to search in that takes precedence over &lt;code&gt;node_modules/&lt;/code&gt;:</source>
          <target state="translated">검색 할 디렉토리를 추가하려면 &lt;code&gt;node_modules/&lt;/code&gt; 보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="4536a1d96e062d79005d6ef15707ef6a91b0e0c2" translate="yes" xml:space="preserve">
          <source>If you want to change the behavior according to the &lt;strong&gt;mode&lt;/strong&gt; variable inside the &lt;em&gt;webpack.config.js&lt;/em&gt;, you have to export a function instead of an object:</source>
          <target state="translated">&lt;em&gt;webpack.config.js&lt;/em&gt; 내부의 &lt;strong&gt;모드&lt;/strong&gt; 변수 에 따라 동작을 변경하려면 객체 대신 함수를 내 &lt;em&gt;보내야&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="43705bee6375973feaf957218199905c3adacd95" translate="yes" xml:space="preserve">
          <source>If you want to edit the original Less files inside Chrome, &lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;there's a good blog post&lt;/a&gt;. The blog post is about Sass but it also works for Less.</source>
          <target state="translated">Chrome에서 원본 Less 파일을 편집하려면 &lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;좋은 블로그 게시물이&lt;/a&gt; 있습니다. 블로그 게시물은 Sass에 관한 것이지만 Less에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="bfb20005c6ba18fa93c171fc19c4ab58f9ef6bbc" translate="yes" xml:space="preserve">
          <source>If you want to edit the original Sass files inside Chrome, &lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;there's a good blog post&lt;/a&gt;. Checkout &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test&quot;&gt;test/sourceMap&lt;/a&gt; for a running example.</source>
          <target state="translated">Chrome에서 원본 Sass 파일을 수정하려면 &lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;좋은 블로그 게시물이&lt;/a&gt; 있습니다. 체크 아웃 &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test&quot;&gt;테스트 / sourceMap&lt;/a&gt; 실행 예를 들어.</target>
        </trans-unit>
        <trans-unit id="3117df9404903a9d291836857e6647eadfed44c8" translate="yes" xml:space="preserve">
          <source>If you want to learn more about all the features and options that the &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; provides, then you should read up on it on the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt;&lt;code&gt;HtmlWebpackPlugin&lt;/code&gt;&lt;/a&gt; repo.</source>
          <target state="translated">&lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; 이 제공 하는 모든 기능 및 옵션에 대한 자세한 내용을 보려면 &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt; &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; &lt;/a&gt; 저장소 에서 해당 기능을 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="97e1dec242e807347bf2fd93af746d1ce130a0f2" translate="yes" xml:space="preserve">
          <source>If you want to learn more about the inner workings of &lt;code&gt;package.json&lt;/code&gt;, then we recommend reading the &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;npm documentation&lt;/a&gt;.</source>
          <target state="translated">당신의 내부 동작에 대한 자세한 내용을 원한다면 &lt;code&gt;package.json&lt;/code&gt; , 우리는 읽어 보시기 바랍니다 &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;NPM 문서를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c12845e61292df537a108e68e63b76e33cc3a583" translate="yes" xml:space="preserve">
          <source>If you want to learn more about webpack's design, you can check out the &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;basic concepts&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; pages. Furthermore, the &lt;a href=&quot;https://webpack.js.org/api&quot;&gt;API&lt;/a&gt; section digs into the various interfaces webpack offers.</source>
          <target state="translated">웹팩 디자인에 대한 자세한 내용을 보려면 &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;기본 개념&lt;/a&gt; 및 &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;구성&lt;/a&gt; 페이지를 확인하십시오 . 또한 &lt;a href=&quot;https://webpack.js.org/api&quot;&gt;API&lt;/a&gt; 섹션은 웹팩이 제공하는 다양한 인터페이스를 다룹니다.</target>
        </trans-unit>
        <trans-unit id="fa6bf4a6e261d9afd0da8942ff1dc9e277ab2196" translate="yes" xml:space="preserve">
          <source>If you want to manually recompile the bundle, navigating to the &lt;code&gt;/invalidate&lt;/code&gt; route will &lt;a href=&quot;../api/node#invalidate-watching&quot;&gt;invalidate&lt;/a&gt; the current compilation of the bundle and recompile it for you via &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware#invalidate&quot;&gt;webpack-dev-middleware&lt;/a&gt;. Depending on your configuration, URL may look like &lt;code&gt;http://localhost:9000/invalidate&lt;/code&gt;.</source>
          <target state="translated">If you want to manually recompile the bundle, navigating to the &lt;code&gt;/invalidate&lt;/code&gt; route will &lt;a href=&quot;../api/node#invalidate-watching&quot;&gt;invalidate&lt;/a&gt; the current compilation of the bundle and recompile it for you via &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware#invalidate&quot;&gt;webpack-dev-middleware&lt;/a&gt;. Depending on your configuration, URL may look like &lt;code&gt;http://localhost:9000/invalidate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c4a2b3891ac41e2957230fe54b901d08e44f7a0" translate="yes" xml:space="preserve">
          <source>If you want to prepend Sass code before the actual entry file, you can set the &lt;code&gt;data&lt;/code&gt; option. In this case, the sass-loader will not override the &lt;code&gt;data&lt;/code&gt; option but just append the entry's content. This is especially useful when some of your Sass variables depend on the environment:</source>
          <target state="translated">실제 입력 파일 앞에 Sass 코드를 추가하려면 &lt;code&gt;data&lt;/code&gt; 옵션을 설정할 수 있습니다 . 이 경우 sass-loader는 &lt;code&gt;data&lt;/code&gt; 옵션을 무시하지 않고 항목의 내용 만 추가합니다. 이것은 Sass 변수 중 일부가 환경에 의존 할 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2661ac1b238c212bd91c6d7c897aa1e6c1bfb9f0" translate="yes" xml:space="preserve">
          <source>If you want to process styles written in JavaScript, use the &lt;a href=&quot;https://github.com/postcss/postcss-js&quot;&gt;&lt;code&gt;postcss-js&lt;/code&gt;&lt;/a&gt; parser.</source>
          <target state="translated">If you want to process styles written in JavaScript, use the &lt;a href=&quot;https://github.com/postcss/postcss-js&quot;&gt; &lt;code&gt;postcss-js&lt;/code&gt; &lt;/a&gt; parser.</target>
        </trans-unit>
        <trans-unit id="692a4cb93a9eaa0dd0bfc814d936beb18b2c98b8" translate="yes" xml:space="preserve">
          <source>If you want to process styles written in JavaScript, use the [postcss-js] parser.</source>
          <target state="translated">JavaScript로 작성된 스타일을 처리하려면 [postcss-js] 파서를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cfd2b0a995875fef1de386a42151485fa10f8038" translate="yes" xml:space="preserve">
          <source>If you want to proxy multiple, specific paths to the same target, you can use an array of one or more objects with a &lt;code&gt;context&lt;/code&gt; property:</source>
          <target state="translated">동일한 대상에 대한 여러 특정 경로를 프록시하려는 경우 &lt;code&gt;context&lt;/code&gt; 특성 이있는 하나 이상의 오브젝트 배열을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8144f66e01c46baa3b7218d3b20c9b6ffb372686" translate="yes" xml:space="preserve">
          <source>If you want to show warnings as well as errors:</source>
          <target state="translated">오류뿐만 아니라 경고도 표시하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6d044c627a3087c3c127d609464b2e71e0f710de" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;https://github.com/survivejs/webpack-merge&quot;&gt;&lt;code&gt;webpack-merge&lt;/code&gt;&lt;/a&gt;, you can set the &lt;code&gt;merge&lt;/code&gt; property of &lt;code&gt;myObj&lt;/code&gt; to the name of the configuration you want to merge it with:</source>
          <target state="translated">If you want to use &lt;a href=&quot;https://github.com/survivejs/webpack-merge&quot;&gt; &lt;code&gt;webpack-merge&lt;/code&gt; &lt;/a&gt;, you can set the &lt;code&gt;merge&lt;/code&gt; property of &lt;code&gt;myObj&lt;/code&gt; to the name of the configuration you want to merge it with:</target>
        </trans-unit>
        <trans-unit id="bc2ffc5654813a1f51c3c4fe161d20c76df425a5" translate="yes" xml:space="preserve">
          <source>If you want to use a custom configuration for this plugin in &lt;a href=&quot;../concepts/mode#mode-development&quot;&gt;development mode&lt;/a&gt;, make sure to disable the default one. I.e. set &lt;code&gt;devtool: false&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../concepts/mode#mode-development&quot;&gt;개발 모드&lt;/a&gt; 에서이 플러그인에 대한 사용자 정의 구성 을 사용하려면 기본 플러그인 을 사용 안함으로 설정하십시오. 즉 &lt;code&gt;devtool: false&lt;/code&gt; 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b47b433cdf4a7b88e234b8bef90b347021235853" translate="yes" xml:space="preserve">
          <source>If you want to use a custom configuration for this plugin in &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;development mode&lt;/a&gt;, make sure to disable the default one. I.e. set &lt;code&gt;devtool: false&lt;/code&gt;.</source>
          <target state="translated">If you want to use a custom configuration for this plugin in &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;development mode&lt;/a&gt;, make sure to disable the default one. I.e. set &lt;code&gt;devtool: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e20f7035a1c625d3a95f8e0f6d1588640e0eb5a9" translate="yes" xml:space="preserve">
          <source>If you want to use a custom encoding algorithm, you may specify a custom function to encode a file content:</source>
          <target state="translated">If you want to use a custom encoding algorithm, you may specify a custom function to encode a file content:</target>
        </trans-unit>
        <trans-unit id="89fe93eb01cfafb980ed57e4c5a137d0b5d4fa54" translate="yes" xml:space="preserve">
          <source>If you want to use flags when opening the browser like opening an incognito window (&lt;code&gt;--incognito&lt;/code&gt; flag), you can set &lt;code&gt;open&lt;/code&gt; to an object. The object accepts all &lt;a href=&quot;https://www.npmjs.com/package/open&quot;&gt;open&lt;/a&gt; options, &lt;code&gt;app&lt;/code&gt; property must be an array. The first element in the array must be the browser name and the other following elements are the flags you want to use. For example:</source>
          <target state="translated">If you want to use flags when opening the browser like opening an incognito window ( &lt;code&gt;--incognito&lt;/code&gt; flag), you can set &lt;code&gt;open&lt;/code&gt; to an object. The object accepts all &lt;a href=&quot;https://www.npmjs.com/package/open&quot;&gt;open&lt;/a&gt; options, &lt;code&gt;app&lt;/code&gt; property must be an array. The first element in the array must be the browser name and the other following elements are the flags you want to use. For example:</target>
        </trans-unit>
        <trans-unit id="9883aa1601e33e32768dc0b4c84d91a7c5f4875a" translate="yes" xml:space="preserve">
          <source>If you want to use one of the pre-defined behaviours e.g. &lt;code&gt;'minimal'&lt;/code&gt; but still override one or more of the rules: specify the desired &lt;code&gt;stats.preset&lt;/code&gt; and add the customized or additional rules afterwards.</source>
          <target state="translated">If you want to use one of the pre-defined behaviours e.g. &lt;code&gt;'minimal'&lt;/code&gt; but still override one or more of the rules: specify the desired &lt;code&gt;stats.preset&lt;/code&gt; and add the customized or additional rules afterwards.</target>
        </trans-unit>
        <trans-unit id="c431dc55a50b2e85215834366ed4e1b26191d5f0" translate="yes" xml:space="preserve">
          <source>If you wish to specify multiple pages to open in the browser.</source>
          <target state="translated">If you wish to specify multiple pages to open in the browser.</target>
        </trans-unit>
        <trans-unit id="8ac1da0960780023da702e64f85c514373ee439d" translate="yes" xml:space="preserve">
          <source>If you would like to know more about how Hot Module Replacement works, we recommend you read the &lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; guide.</source>
          <target state="translated">핫 모듈 교체 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;hot-module-replacement&quot;&gt;핫 모듈 교체&lt;/a&gt; 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9bf03d2930af9b7367c7bba8c8c7e6482d34ab7d" translate="yes" xml:space="preserve">
          <source>If you'd like to extract the media queries from the extracted CSS (so mobile users don't need to load desktop or tablet specific CSS anymore) you should use one of the following plugins:</source>
          <target state="translated">If you'd like to extract the media queries from the extracted CSS (so mobile users don't need to load desktop or tablet specific CSS anymore) you should use one of the following plugins:</target>
        </trans-unit>
        <trans-unit id="d6449c4755a42b9694b9c46350d324cc07ae33b6" translate="yes" xml:space="preserve">
          <source>If you'd like to transpile the contents of your element you can &lt;a href=&quot;../configuration/module#ruleuse&quot;&gt;chain an additional loader&lt;/a&gt;.</source>
          <target state="translated">If you'd like to transpile the contents of your element you can &lt;a href=&quot;../configuration/module#ruleuse&quot;&gt;chain an additional loader&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7b101f9e29bfabd0203dfc680c95c85731c80c8a" translate="yes" xml:space="preserve">
          <source>If you'd like to transpile the contents of your element's &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; block you can &lt;a href=&quot;../configuration/module#rule-use&quot;&gt;chain an additional loader&lt;/a&gt;.</source>
          <target state="translated">요소의 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 블록 의 내용을 변환하려면 &lt;a href=&quot;../configuration/module#rule-use&quot;&gt;추가 로더를 연결하면&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="40478936be89404f1926380780d619d3713bb5e5" translate="yes" xml:space="preserve">
          <source>If you're &lt;a href=&quot;development#using-webpack-dev-middleware&quot;&gt;using &lt;code&gt;webpack-dev-middleware&lt;/code&gt;&lt;/a&gt;, check out the &lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt;&lt;code&gt;webpack-hot-middleware&lt;/code&gt;&lt;/a&gt; package to enable HMR on your custom dev server.</source>
          <target state="translated">이 경우 &lt;a href=&quot;development#using-webpack-dev-middleware&quot;&gt;사용 &lt;code&gt;webpack-dev-middleware&lt;/code&gt; &lt;/a&gt; 의 체크 아웃 &lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt; &lt;code&gt;webpack-hot-middleware&lt;/code&gt; &lt;/a&gt; 사용자 정의 dev에 서버에 HMR 수 있도록 패키지를.</target>
        </trans-unit>
        <trans-unit id="433f6609aab5593eb53510cc1a09e7e1d9a068e3" translate="yes" xml:space="preserve">
          <source>If you're having trouble, navigating to the &lt;code&gt;/webpack-dev-server&lt;/code&gt; route will show where files are served. For example, &lt;code&gt;http://localhost:9000/webpack-dev-server&lt;/code&gt;.</source>
          <target state="translated">문제가 발생하면 &lt;code&gt;/webpack-dev-server&lt;/code&gt; 경로로 이동하면 파일이 제공되는 위치가 표시됩니다. 예를 들어, &lt;code&gt;http://localhost:9000/webpack-dev-server&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0544daa41d299289d34b44e4de62509cd8b45d81" translate="yes" xml:space="preserve">
          <source>If you're just generating CSS without passing it to the &lt;code&gt;css-loader&lt;/code&gt;, it must be relative to your web root.</source>
          <target state="translated">If you're just generating CSS without passing it to the &lt;code&gt;css-loader&lt;/code&gt; , it must be relative to your web root.</target>
        </trans-unit>
        <trans-unit id="a6c4be9e29950c4aac888fe42e7fa088c7f4db54" translate="yes" xml:space="preserve">
          <source>If you're just generating CSS without passing it to the css-loader, it must be relative to your web root.</source>
          <target state="translated">CSS를 css-loader로 전달하지 않고 CSS를 생성하는 경우 웹 루트와 관련이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="fcd854a0141dca5c0569c55e3b38b3dd7d912dcd" translate="yes" xml:space="preserve">
          <source>If you're using a library like &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt;, you should actually see a significant drop in bundle size after adding &lt;code&gt;DefinePlugin&lt;/code&gt;. Also, note that any of our local &lt;code&gt;/src&lt;/code&gt; code can key off of this as well, so the following check would be valid:</source>
          <target state="translated">If you're using a library like &lt;a href=&quot;https://reactjs.org/&quot;&gt; &lt;code&gt;react&lt;/code&gt; &lt;/a&gt;, you should actually see a significant drop in bundle size after adding &lt;code&gt;DefinePlugin&lt;/code&gt; . Also, note that any of our local &lt;code&gt;/src&lt;/code&gt; code can key off of this as well, so the following check would be valid:</target>
        </trans-unit>
        <trans-unit id="955fcffcabfc468fe69038636f0fedc69977e502" translate="yes" xml:space="preserve">
          <source>If you're using a library like &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt;, you should actually see a significant drop in bundle size after adding this plugin. Also note that any of our local &lt;code&gt;/src&lt;/code&gt; code can key off of this as well, so the following check would be valid:</source>
          <target state="translated">&lt;a href=&quot;https://reactjs.org/&quot;&gt; &lt;code&gt;react&lt;/code&gt; &lt;/a&gt; 와 같은 라이브러리를 사용하는 경우 실제로이 플러그인을 추가 한 후 번들 크기가 크게 줄어 듭니다. 또한 로컬 &lt;code&gt;/src&lt;/code&gt; 코드 중 하나 라도이 키를 사용할 수 있으므로 다음 확인이 유효합니다.</target>
        </trans-unit>
        <trans-unit id="f4d7ea6782c3b0d78cacf60b4faecfbb8ec82c1c" translate="yes" xml:space="preserve">
          <source>If you're using dev-server through the Node.js API, the options in &lt;code&gt;devServer&lt;/code&gt; will be ignored. Pass the options as a second parameter instead: &lt;code&gt;new WebpackDevServer(compiler, {...})&lt;/code&gt;. &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/tree/master/examples/api/simple&quot;&gt;See here&lt;/a&gt; for an example of how to use webpack-dev-server through the Node.js API.</source>
          <target state="translated">Node.js API를 통해 dev-server를 사용하는 경우 &lt;code&gt;devServer&lt;/code&gt; 의 옵션 이 무시됩니다. &lt;code&gt;new WebpackDevServer(compiler, {...})&lt;/code&gt; 대신 옵션을 두 번째 매개 변수로 전달하십시오 . Node.js API를 통해 webpack-dev-server를 사용하는 방법에 대한 예제는 &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/tree/master/examples/api/simple&quot;&gt;여기&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="610f75440eb98193b999ba60a63c4bbb0b031fe1" translate="yes" xml:space="preserve">
          <source>If you're using npm 5+, you'll probably also see a &lt;code&gt;package-lock.json&lt;/code&gt; file in your directory.</source>
          <target state="translated">If you're using npm 5+, you'll probably also see a &lt;code&gt;package-lock.json&lt;/code&gt; file in your directory.</target>
        </trans-unit>
        <trans-unit id="473ca25b69608d4b3b3537758f74fa69dcd408bc" translate="yes" xml:space="preserve">
          <source>If you're using npm 5, you'll probably also see a &lt;code&gt;package-lock.json&lt;/code&gt; file in your directory.</source>
          <target state="translated">npm 5를 사용하는 경우 디렉토리에 &lt;code&gt;package-lock.json&lt;/code&gt; 파일도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e44fa79883563aa86928a92518b3780c003ca7e5" translate="yes" xml:space="preserve">
          <source>If you're using webpack to compile a library to be consumed by others, make sure to set &lt;a href=&quot;#librarytarget-module&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;'module'&lt;/code&gt; when &lt;code&gt;output.module&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">webpack을 사용하여 다른 사용자가 사용할 라이브러리를 컴파일하는 경우 &lt;code&gt;output.module&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 일 때 &lt;a href=&quot;#librarytarget-module&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;'module'&lt;/code&gt; 로 설정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="cedae6899c83e4e61f3b19cc0b8a37d18ec5d90b" translate="yes" xml:space="preserve">
          <source>If you're using webpack v4 or later, you'll also need to install the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">If you're using webpack v4 or later, you'll also need to install the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f9244edb3545b88e9adda0700b59345bdd1ee032" translate="yes" xml:space="preserve">
          <source>If you're using webpack v4 or later, you'll need to install a &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">webpack v4 이상을 사용하는 경우 &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f854e87809cd03a2c329f4b3b53db2652e6fdb8" translate="yes" xml:space="preserve">
          <source>If you've been following the guides from the start, you will now have a small project that shows &quot;Hello webpack&quot;. Now let's try to incorporate some other assets, like images, to see how they can be handled.</source>
          <target state="translated">처음부터 가이드를 따랐다면, &quot;Hello webpack&quot;을 보여주는 작은 프로젝트가 생겼습니다. 이제 이미지와 같은 다른 자산을 통합하여 처리 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="376dc09bff1bba9f0948a35a773edd37bbd4461e" translate="yes" xml:space="preserve">
          <source>If you've been following the guides, you should have a solid understanding of some of the webpack basics. Before we continue, let's look into setting up a development environment to make our lives a little easier.</source>
          <target state="translated">가이드를 따른다면 일부 웹팩 기본 사항을 제대로 이해해야합니다. 계속하기 전에 인생을 좀 더 편하게 만들기 위해 개발 환경을 설정해 봅시다.</target>
        </trans-unit>
        <trans-unit id="1a34d4c2e1eb1252875beb018564620f41e7cd46" translate="yes" xml:space="preserve">
          <source>If your code did have some side effects though, an array can be provided instead:</source>
          <target state="translated">코드에 부작용이 있다면 대신 배열을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f24ea5311ede964cc4eb9a58bffeba73c5319159" translate="yes" xml:space="preserve">
          <source>If your configuration creates more than a single &quot;chunk&quot; (as with multiple entry points or when using plugins like CommonsChunkPlugin), you should use &lt;a href=&quot;../configuration/output#output-filename&quot;&gt;substitutions&lt;/a&gt; to ensure that each file has a unique name.</source>
          <target state="translated">구성이 여러 개의 진입 점을 사용하거나 CommonsChunkPlugin과 같은 플러그인을 사용할 때와 같이 하나 이상의 &quot;청크&quot;를 작성하는 경우 &lt;a href=&quot;../configuration/output#output-filename&quot;&gt;대체&lt;/a&gt; 를 사용하여 각 파일의 이름이 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="725c044cd6d7ddb03116e3a849cdef91d68bda95" translate="yes" xml:space="preserve">
          <source>If your configuration creates more than a single &quot;chunk&quot; (as with multiple entry points or when using plugins like CommonsChunkPlugin), you should use &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; to ensure that each file has a unique name.</source>
          <target state="translated">If your configuration creates more than a single &quot;chunk&quot; (as with multiple entry points or when using plugins like CommonsChunkPlugin), you should use &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; to ensure that each file has a unique name.</target>
        </trans-unit>
        <trans-unit id="c59d1a7b49cf233fef4246ce4878b9aa5af8c8e9" translate="yes" xml:space="preserve">
          <source>If your project structure is as follows -</source>
          <target state="translated">프로젝트 구조가 다음과 같은 경우-</target>
        </trans-unit>
        <trans-unit id="639afc9455bf507238e1acce0c048d9111fee986" translate="yes" xml:space="preserve">
          <source>If, for one reason or another, you need to extract CSS as a plain string resource (i.e. not wrapped in a JS module) you might want to check out the &lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt;. It's useful when you, for instance, need to post process the CSS as a string.</source>
          <target state="translated">어떤 이유로 든 CSS를 일반 문자열 자원으로 추출해야하는 경우 (즉, JS 모듈로 랩핑되지 않은 경우) &lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt; 를 체크 아웃 할 수 있습니다 . 예를 들어 CSS를 문자열로 포스트 프로세스해야 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="be4d8e6b8fcf3dfa1e1e239c21e1dc5cb4ba7a79" translate="yes" xml:space="preserve">
          <source>Ignore Moment Locales</source>
          <target state="translated">순간 로케일 무시</target>
        </trans-unit>
        <trans-unit id="a435148a01556fdc54ef2de21f7dd203f7ffae42" translate="yes" xml:space="preserve">
          <source>Ignore the specified files, i.e. those matching the provided paths or regular expressions, while in &lt;a href=&quot;../configuration/watch&quot;&gt;watch mode&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../configuration/watch&quot;&gt;감시 모드&lt;/a&gt; 에서 지정된 파일, 즉 제공된 경로 또는 정규식과 일치하는 파일은 무시하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3794c06b693b8264fac92b3e7af27c42a0942c6" translate="yes" xml:space="preserve">
          <source>IgnorePlugin</source>
          <target state="translated">IgnorePlugin</target>
        </trans-unit>
        <trans-unit id="88aabdfba8b35d16ba3236b2658f2c778ed92421" translate="yes" xml:space="preserve">
          <source>IgnorePlugin prevents the generation of modules for &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; calls matching the regular expressions or filter functions:</source>
          <target state="translated">IgnorePlugin prevents the generation of modules for &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; calls matching the regular expressions or filter functions:</target>
        </trans-unit>
        <trans-unit id="1a8140de6c0c1b1c1de17949e249293f4cc955ec" translate="yes" xml:space="preserve">
          <source>Ignoring Warnings</source>
          <target state="translated">Ignoring Warnings</target>
        </trans-unit>
        <trans-unit id="87a5b84b90eaf9c6a4ea4cf7776f8cdbe987e92e" translate="yes" xml:space="preserve">
          <source>Ignoring files</source>
          <target state="translated">파일 무시</target>
        </trans-unit>
        <trans-unit id="cb2f56c94e2202488b01ff065a7ba18f37dc3e4f" translate="yes" xml:space="preserve">
          <source>ImageMinimizerWebpackPlugin</source>
          <target state="translated">ImageMinimizerWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="326354ab940bc080aae78d325dc99a2131a28bd4" translate="yes" xml:space="preserve">
          <source>Images can be optimized in two modes:</source>
          <target state="translated">Images can be optimized in two modes:</target>
        </trans-unit>
        <trans-unit id="7f8bda54fda155ace8dbdcda4892ae55f3554d5b" translate="yes" xml:space="preserve">
          <source>Imagine that the server is running under &lt;code&gt;http://localhost:8080&lt;/code&gt; and &lt;a href=&quot;output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;bundle.js&lt;/code&gt;. By default the &lt;code&gt;devServer.publicPath&lt;/code&gt; is &lt;code&gt;'/'&lt;/code&gt;, so your bundle is available as &lt;code&gt;http://localhost:8080/bundle.js&lt;/code&gt;.</source>
          <target state="translated">Imagine that the server is running under &lt;code&gt;http://localhost:8080&lt;/code&gt; and &lt;a href=&quot;output#outputfilename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt; is set to &lt;code&gt;bundle.js&lt;/code&gt; . By default the &lt;code&gt;devServer.publicPath&lt;/code&gt; is &lt;code&gt;'/'&lt;/code&gt; , so your bundle is available as &lt;code&gt;http://localhost:8080/bundle.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9fb0b9dff04d0a62760c3fff33ad7543f76cde23" translate="yes" xml:space="preserve">
          <source>Imagine that the server is running under &lt;code&gt;http://localhost:8080&lt;/code&gt; and &lt;code&gt;output.filename&lt;/code&gt; is set to &lt;code&gt;bundle.js&lt;/code&gt;. By default the &lt;code&gt;publicPath&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, so your bundle is available as &lt;code&gt;http://localhost:8080/bundle.js&lt;/code&gt;.</source>
          <target state="translated">서버에서 실행되는 것을 상상해 &lt;code&gt;http://localhost:8080&lt;/code&gt; 및 &lt;code&gt;output.filename&lt;/code&gt; 이 설정되어 &lt;code&gt;bundle.js&lt;/code&gt; . 기본적으로 &lt;code&gt;publicPath&lt;/code&gt; 는 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 이므로 번들은 &lt;code&gt;http://localhost:8080/bundle.js&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0cf4b0beaddcac14c35d71c0d46cfc1fd8eba33" translate="yes" xml:space="preserve">
          <source>Import (or &lt;code&gt;require&lt;/code&gt;) the target file(s) in one of the bundle's files:</source>
          <target state="translated">번들 파일 중 하나에서 대상 파일을 가져 오거나 &lt;code&gt;require&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3bf0c2255848cfe69bf20c10741b26fe85245147" translate="yes" xml:space="preserve">
          <source>Import JSON files</source>
          <target state="translated">Import JSON files</target>
        </trans-unit>
        <trans-unit id="08454e30a8e2f79f5da7237c81da8a989d26ead0" translate="yes" xml:space="preserve">
          <source>Imported By Multiple Other Module Groups</source>
          <target state="translated">여러 다른 모듈 그룹에서 가져 오기</target>
        </trans-unit>
        <trans-unit id="d02ddeadb4764ce766326f1cbeb008729d6153c6" translate="yes" xml:space="preserve">
          <source>Imported By Non Import</source>
          <target state="translated">비 수입으로 가져 오기</target>
        </trans-unit>
        <trans-unit id="539edcd7d5dd1d51f7865c8bc1317fee010277e4" translate="yes" xml:space="preserve">
          <source>Imported From Other Chunk</source>
          <target state="translated">다른 청크에서 가져 오기</target>
        </trans-unit>
        <trans-unit id="5b9034dc51835388208edea073d26717ae663834" translate="yes" xml:space="preserve">
          <source>Imported With &lt;code&gt;import()&lt;/code&gt;</source>
          <target state="translated">으로 수입 &lt;code&gt;import()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd2f621378f748feef72292689f57fd2641f07c9" translate="yes" xml:space="preserve">
          <source>Imported modules are initialized for each runtime chunk separately, so if you include multiple entry points on a page, beware of this behavior. You will probably want to set it to &lt;code&gt;single&lt;/code&gt; or use another configuration that allows you to only have one runtime instance.</source>
          <target state="translated">가져온 모듈은 각 런타임 청크마다 별도로 초기화되므로 페이지에 여러 개의 진입 점을 포함하는 경우이 동작에주의하십시오. &lt;code&gt;single&lt;/code&gt; 인스턴스 로 설정 하거나 하나의 런타임 인스턴스 만 가질 수있는 다른 구성을 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="96788976db605557505d68fac01ff154a7693417" translate="yes" xml:space="preserve">
          <source>Imported value is instantiable, just a decorated &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="translated">수입 된 가치는 단지 장식 가능한 &lt;code&gt;Worker&lt;/code&gt; 일뿐</target>
        </trans-unit>
        <trans-unit id="90ab5ed3bb3e27748d586ad9b9b11e2ab9efaaf8" translate="yes" xml:space="preserve">
          <source>Importing</source>
          <target state="translated">Importing</target>
        </trans-unit>
        <trans-unit id="ec5e30b24de03faf9d94e192aaa57d42cbc2571e" translate="yes" xml:space="preserve">
          <source>Importing Other Assets</source>
          <target state="translated">다른 자산 가져 오기</target>
        </trans-unit>
        <trans-unit id="e42328ac01cd03a47978f064c93b392caf3861f0" translate="yes" xml:space="preserve">
          <source>Imports</source>
          <target state="translated">Imports</target>
        </trans-unit>
        <trans-unit id="d34e7361bf7658b83ee0515f2d661c61ea905b26" translate="yes" xml:space="preserve">
          <source>Imports in ESM are resolved more strictly. Relative requests must include a filename and file extension.</source>
          <target state="translated">Imports in ESM are resolved more strictly. Relative requests must include a filename and file extension.</target>
        </trans-unit>
        <trans-unit id="6f93eaa8d0cbf9454a5cfafcab9af0120a82c0d2" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://en.wikipedia.org/wiki/Modular_programming&quot;&gt;modular programming&lt;/a&gt;, developers break programs up into discrete chunks of functionality called a &lt;em&gt;module&lt;/em&gt;.</source>
          <target state="translated">에서 &lt;a href=&quot;https://en.wikipedia.org/wiki/Modular_programming&quot;&gt;모듈 프로그래밍&lt;/a&gt; 개발자는 전화 기능 이산 덩어리로 프로그램을 중단 &lt;em&gt;모듈&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ab4443f04ff278884ef55d9c054e1cadf01f2bfb" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt; watch mode is enabled by default.</source>
          <target state="translated">In &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt; watch mode is enabled by default.</target>
        </trans-unit>
        <trans-unit id="5eb69e3a92aa93a83c65692ac6f56581aaa33cd7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;/abc/file.js&lt;/code&gt;:</source>
          <target state="translated">In &lt;code&gt;/abc/file.js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="09ddaea92bab9dd87b2009c9bd2cd70ee9ea7119" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;webpack.common.js&lt;/code&gt;, we now have setup our &lt;code&gt;entry&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; configuration and we've included any plugins that are required for both environments. In &lt;code&gt;webpack.dev.js&lt;/code&gt;, we've set &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;. Also, we've added the recommended &lt;code&gt;devtool&lt;/code&gt; for that environment (strong source mapping), as well as our simple &lt;code&gt;devServer&lt;/code&gt; configuration. Finally, in &lt;code&gt;webpack.prod.js&lt;/code&gt;,&lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;production&lt;/code&gt; which loads &lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt;&lt;code&gt;TerserPlugin&lt;/code&gt;&lt;/a&gt;, which was first introduced by the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide.</source>
          <target state="translated">In &lt;code&gt;webpack.common.js&lt;/code&gt; , we now have setup our &lt;code&gt;entry&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; configuration and we've included any plugins that are required for both environments. In &lt;code&gt;webpack.dev.js&lt;/code&gt; , we've set &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt; . Also, we've added the recommended &lt;code&gt;devtool&lt;/code&gt; for that environment (strong source mapping), as well as our simple &lt;code&gt;devServer&lt;/code&gt; configuration. Finally, in &lt;code&gt;webpack.prod.js&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;production&lt;/code&gt; which loads &lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt; &lt;code&gt;TerserPlugin&lt;/code&gt; &lt;/a&gt;, which was first introduced by the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide.</target>
        </trans-unit>
        <trans-unit id="65eccb467c3a0bedb1dc45797bad51730c3be1e7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;webpack.common.js&lt;/code&gt;, we now have setup our &lt;code&gt;entry&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; configuration and we've included any plugins that are required for both environments. In &lt;code&gt;webpack.dev.js&lt;/code&gt;, we've set &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;. Also, we've added the recommended &lt;code&gt;devtool&lt;/code&gt; for that environment (strong source mapping), as well as our simple &lt;code&gt;devServer&lt;/code&gt; configuration. Finally, in &lt;code&gt;webpack.prod.js&lt;/code&gt;,&lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;production&lt;/code&gt; which loads &lt;code&gt;UglifyJSPlugin&lt;/code&gt; which was first introduced by the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide.</source>
          <target state="translated">에서 &lt;code&gt;webpack.common.js&lt;/code&gt; , 우리는 지금 설치 우리가 &lt;code&gt;entry&lt;/code&gt; 및 &lt;code&gt;output&lt;/code&gt; 구성을 우리는 모두 환경에 필요한 모든 플러그인을 포함 시켰습니다. 에서 &lt;code&gt;webpack.dev.js&lt;/code&gt; , 우리가 설정 한 &lt;code&gt;mode&lt;/code&gt; 로 &lt;code&gt;development&lt;/code&gt; . 또한 간단한 &lt;code&gt;devServer&lt;/code&gt; 구성 뿐만 아니라 해당 환경에 권장되는 &lt;code&gt;devtool&lt;/code&gt; (강력한 소스 매핑)을 추가했습니다 . 마지막으로 &lt;code&gt;webpack.prod.js&lt;/code&gt; 에서 &lt;code&gt;mode&lt;/code&gt; 는 &lt;code&gt;production&lt;/code&gt; 으로 설정되어 &lt;a href=&quot;tree-shaking&quot;&gt;트리 흔들림&lt;/a&gt; 안내서에 의해 처음 소개 된 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; 을 로드합니다 .</target>
        </trans-unit>
        <trans-unit id="14d519ddcc60d79f99ddd5974173d9985e991418" translate="yes" xml:space="preserve">
          <source>In Aggressive Bundle Mode, a file can only appear in a single output chunk. Use the &lt;a href=&quot;commons-chunk-plugin&quot;&gt;Commons Chunk Plugin&lt;/a&gt; to split duplicated files into a single output chunk.</source>
          <target state="translated">공격적 번들 모드에서는 파일이 단일 출력 청크에만 나타날 수 있습니다. &lt;a href=&quot;commons-chunk-plugin&quot;&gt;Commons Chunk Plugin&lt;/a&gt; 을 사용하여 복제 된 파일을 단일 출력 청크로 분할하십시오.</target>
        </trans-unit>
        <trans-unit id="458e37908a6305c17605f06181d9bf793d7f4078" translate="yes" xml:space="preserve">
          <source>In Aggressive Bundle Mode, a file can only appear in a single output chunk. Use the &lt;a href=&quot;split-chunks-plugin&quot;&gt;Split Chunks Plugin&lt;/a&gt; to split duplicated files into a single output chunk. If a module is utilized by more than one chunk, the plugin will move it up to the first common parent to prevent code duplication.</source>
          <target state="translated">In Aggressive Bundle Mode, a file can only appear in a single output chunk. Use the &lt;a href=&quot;split-chunks-plugin&quot;&gt;Split Chunks Plugin&lt;/a&gt; to split duplicated files into a single output chunk. If a module is utilized by more than one chunk, the plugin will move it up to the first common parent to prevent code duplication.</target>
        </trans-unit>
        <trans-unit id="ab7a58ec1909df43dec904e096e452a8bad8f0aa" translate="yes" xml:space="preserve">
          <source>In DataURIs using the &lt;code&gt;text/javascript&lt;/code&gt; or &lt;code&gt;application/javascript&lt;/code&gt; mime type will also force module type to ESM.</source>
          <target state="translated">In DataURIs using the &lt;code&gt;text/javascript&lt;/code&gt; or &lt;code&gt;application/javascript&lt;/code&gt; mime type will also force module type to ESM.</target>
        </trans-unit>
        <trans-unit id="b937b6405cd612989b9db35b6a35c91ef79d75f4" translate="yes" xml:space="preserve">
          <source>In Multiple Chunks</source>
          <target state="translated">여러 덩어리에서</target>
        </trans-unit>
        <trans-unit id="ea5f4aa34c4be9c5a704b006300ca9419fe4a078" translate="yes" xml:space="preserve">
          <source>In a 100% ESM module world, identifying side effects is straightforward. However, we aren't there just yet, so in the mean time it's necessary to provide hints to webpack's compiler on the &quot;pureness&quot; of your code.</source>
          <target state="translated">100 % ESM 모듈 세계에서 부작용을 식별하는 것은 간단합니다. 그러나 우리는 아직 존재하지 않으므로 그 동안 코드의 &quot;순도&quot;에 대한 힌트를 웹팩의 컴파일러에 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="ac21d594ec06be5d523d2e717225eca39f697e30" translate="yes" xml:space="preserve">
          <source>In a Module</source>
          <target state="translated">모듈에서</target>
        </trans-unit>
        <trans-unit id="1e9a8c580cf3308262a0c6136b0859d06aae9640" translate="yes" xml:space="preserve">
          <source>In a Rule the properties &lt;a href=&quot;#rule-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-exclude&quot;&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt; are matched with the resource and the property &lt;a href=&quot;#rule-issuer&quot;&gt;&lt;code&gt;issuer&lt;/code&gt;&lt;/a&gt; is matched with the issuer.</source>
          <target state="translated">규칙에서 특성 &lt;a href=&quot;#rule-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#rule-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#rule-exclude&quot;&gt; &lt;code&gt;exclude&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt; 이 자원 과 일치하고 특성 &lt;a href=&quot;#rule-issuer&quot;&gt; &lt;code&gt;issuer&lt;/code&gt; &lt;/a&gt; 가 발행자 와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="d1403784e9faf072d21ee68229e0156c64f385f6" translate="yes" xml:space="preserve">
          <source>In a Rule the properties &lt;a href=&quot;#ruletest&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleinclude&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleexclude&quot;&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ruleresource&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt; are matched with the resource and the property &lt;a href=&quot;#ruleissuer&quot;&gt;&lt;code&gt;issuer&lt;/code&gt;&lt;/a&gt; is matched with the issuer.</source>
          <target state="translated">In a Rule the properties &lt;a href=&quot;#ruletest&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#ruleinclude&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#ruleexclude&quot;&gt; &lt;code&gt;exclude&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#ruleresource&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt; are matched with the resource and the property &lt;a href=&quot;#ruleissuer&quot;&gt; &lt;code&gt;issuer&lt;/code&gt; &lt;/a&gt; is matched with the issuer.</target>
        </trans-unit>
        <trans-unit id="f4e5064413c01cdb8a054508dfd5c98ae3543006" translate="yes" xml:space="preserve">
          <source>In a browser these methods will be available under &lt;code&gt;windows._.map(..args)&lt;/code&gt;, &lt;code&gt;windows._.filter(...args)&lt;/code&gt; and &lt;code&gt;windows._.myNameForFind(...args)&lt;/code&gt; methods.</source>
          <target state="translated">In a browser these methods will be available under &lt;code&gt;windows._.map(..args)&lt;/code&gt; , &lt;code&gt;windows._.filter(...args)&lt;/code&gt; and &lt;code&gt;windows._.myNameForFind(...args)&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="b953702b51c93cbd4840a85231d87add22def200" translate="yes" xml:space="preserve">
          <source>In a development environment.</source>
          <target state="translated">In a development environment.</target>
        </trans-unit>
        <trans-unit id="eb83afada5c56c1a9706d9e5eb652c070af79502" translate="yes" xml:space="preserve">
          <source>In a production environment.</source>
          <target state="translated">In a production environment.</target>
        </trans-unit>
        <trans-unit id="adb225683c24892384d2de126c2d7e936dd8d151" translate="yes" xml:space="preserve">
          <source>In a stateful package we must ensure that the package is never instantiated twice.</source>
          <target state="translated">In a stateful package we must ensure that the package is never instantiated twice.</target>
        </trans-unit>
        <trans-unit id="4163b4c198a78f504b1ef17136f2514c27e67945" translate="yes" xml:space="preserve">
          <source>In a typical application or site built with webpack, there are three main types of code:</source>
          <target state="translated">웹팩으로 구축 된 일반적인 애플리케이션 또는 사이트에는 세 가지 주요 유형의 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a0b6dc400cf12ef52acb7759577789de019e035" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;stage&lt;/code&gt;, you can pass a &lt;code&gt;additionalAssets&lt;/code&gt;5.8.0+ option which accepts either a value of &lt;code&gt;true&lt;/code&gt; or a function with &lt;code&gt;assets&lt;/code&gt; as parameter:</source>
          <target state="translated">뿐만 아니라 &lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;stage&lt;/code&gt; , 당신은 통과 할 수 &lt;code&gt;additionalAssets&lt;/code&gt; 중 하나의 값을 받아 5.8.0+ 옵션 &lt;code&gt;true&lt;/code&gt; 이나와 함수 &lt;code&gt;assets&lt;/code&gt; 매개 변수를 :</target>
        </trans-unit>
        <trans-unit id="9e7ec444f70c372f138fc14accb341e42525ff2a" translate="yes" xml:space="preserve">
          <source>In addition to normal assets, the compiler needs to emit an &quot;update&quot; to allow updating from previous version to the new version. The &quot;update&quot; consists of two parts:</source>
          <target state="translated">일반 자산 외에도 컴파일러는 이전 버전에서 새 버전으로 업데이트 할 수 있도록 &quot;업데이트&quot;를 내 보내야합니다. &quot;업데이트&quot;는 두 부분으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="32b1c8987e581464147bde760b59e96c6c5d9679" translate="yes" xml:space="preserve">
          <source>In addition to normal assets, the compiler needs to emit an &quot;update&quot; to allow updating from the previous version to the new version. The &quot;update&quot; consists of two parts:</source>
          <target state="translated">In addition to normal assets, the compiler needs to emit an &quot;update&quot; to allow updating from the previous version to the new version. The &quot;update&quot; consists of two parts:</target>
        </trans-unit>
        <trans-unit id="f2a860d096429bf6856b8b758a0fbc8fe4cb07b7" translate="yes" xml:space="preserve">
          <source>In addition to that webpack supports modules written in a variety of languages and preprocessors via &lt;em&gt;loaders&lt;/em&gt;. &lt;em&gt;Loaders&lt;/em&gt; describe to webpack &lt;strong&gt;how&lt;/strong&gt; to process non-native &lt;em&gt;modules&lt;/em&gt; and include these &lt;em&gt;dependencies&lt;/em&gt; into your &lt;em&gt;bundles&lt;/em&gt;. The webpack community has built &lt;em&gt;loaders&lt;/em&gt; for a wide variety of popular languages and language processors, including:</source>
          <target state="translated">In addition to that webpack supports modules written in a variety of languages and preprocessors via &lt;em&gt;loaders&lt;/em&gt;. &lt;em&gt;Loaders&lt;/em&gt; describe to webpack &lt;strong&gt;how&lt;/strong&gt; to process non-native &lt;em&gt;modules&lt;/em&gt; and include these &lt;em&gt;dependencies&lt;/em&gt; into your &lt;em&gt;bundles&lt;/em&gt;. The webpack community has built &lt;em&gt;loaders&lt;/em&gt; for a wide variety of popular languages and language processors, including:</target>
        </trans-unit>
        <trans-unit id="02b9f391edc65e45ef0616711d770e117de85b07" translate="yes" xml:space="preserve">
          <source>In addition to that, files can set the module type by using &lt;code&gt;.mjs&lt;/code&gt; or &lt;code&gt;.cjs&lt;/code&gt; extension. &lt;code&gt;.mjs&lt;/code&gt; will force them to be ESM, &lt;code&gt;.cjs&lt;/code&gt; force them to be CommonJs.</source>
          <target state="translated">In addition to that, files can set the module type by using &lt;code&gt;.mjs&lt;/code&gt; or &lt;code&gt;.cjs&lt;/code&gt; extension. &lt;code&gt;.mjs&lt;/code&gt; will force them to be ESM, &lt;code&gt;.cjs&lt;/code&gt; force them to be CommonJs.</target>
        </trans-unit>
        <trans-unit id="4ed5ad434055cc704af4560689f24553e5f27fdb" translate="yes" xml:space="preserve">
          <source>In addition to the module format, flagging modules as ESM also affect the resolving logic, interop logic and the available symbols in modules.</source>
          <target state="translated">In addition to the module format, flagging modules as ESM also affect the resolving logic, interop logic and the available symbols in modules.</target>
        </trans-unit>
        <trans-unit id="b7b76fd00b169e9ae1c05d864a23e185a8ed9d5f" translate="yes" xml:space="preserve">
          <source>In addition, you can specify an absolute path:</source>
          <target state="translated">또한 절대 경로를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de42d74991616adbd1c577e6471f7e7f6503834c" translate="yes" xml:space="preserve">
          <source>In an object where each key is a condition, order of properties is significant. Conditions are handled in the order they are specified.</source>
          <target state="translated">In an object where each key is a condition, order of properties is significant. Conditions are handled in the order they are specified.</target>
        </trans-unit>
        <trans-unit id="1e688639d5f6c3d2b9f092534e4d2625f77afa12" translate="yes" xml:space="preserve">
          <source>In an object where each key is a subpath, order of properties (subpaths) is not significant. More specific paths are preferred over less specific ones.</source>
          <target state="translated">In an object where each key is a subpath, order of properties (subpaths) is not significant. More specific paths are preferred over less specific ones.</target>
        </trans-unit>
        <trans-unit id="cc061cd021ca564464b785c5f393cbcaccfe4c92" translate="yes" xml:space="preserve">
          <source>In case this function is called, you should return undefined to avoid ambiguous loader results.</source>
          <target state="translated">이 함수가 호출되면 모호한 로더 결과를 피하기 위해 undefined를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="02a4b492c3a6cc2ca1cf8757d460668ed34ef11b" translate="yes" xml:space="preserve">
          <source>In case you export multiple configurations, you can use &lt;code&gt;parallelism&lt;/code&gt; option on the configuration array to specify the maximum number of compilers that will compile in parallel.</source>
          <target state="translated">여러 구성을 내보내는 경우 구성 배열에서 &lt;code&gt;parallelism&lt;/code&gt; 옵션을 사용하여 병렬로 컴파일 할 최대 컴파일러 수를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c09d38d9d879c090f5406f3f2c02a21a3dd5e1a" translate="yes" xml:space="preserve">
          <source>In case your configuration file exports multiple configurations, you can use &lt;code&gt;--config-name&lt;/code&gt; to specify which configuration to run.</source>
          <target state="translated">구성 파일이 여러 구성을 내보내는 경우 &lt;code&gt;--config-name&lt;/code&gt; 을 사용하여 실행할 구성을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="244269a0cdb2ff21cb56e99e711a0b0c62fa93c1" translate="yes" xml:space="preserve">
          <source>In cases where the &lt;code&gt;publicPath&lt;/code&gt; of output files can't be known at compile time, it can be left blank and set dynamically at runtime in the entry file using the &lt;a href=&quot;https://stackoverflow.com/questions/12934929/what-are-free-variables&quot;&gt;free variable&lt;/a&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;.</source>
          <target state="translated">출력 파일 의 &lt;code&gt;publicPath&lt;/code&gt; 를 컴파일 타임에 알 수없는 경우 빈 &lt;a href=&quot;https://stackoverflow.com/questions/12934929/what-are-free-variables&quot;&gt;변수로 &lt;/a&gt; &lt;code&gt;__webpack_public_path__&lt;/code&gt; 두고 비어있는 변수 __webpack_public_path__를 사용하여 입력 파일에서 런타임에 동적으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb3d393902646f346128b9f248d1a7cbb745df73" translate="yes" xml:space="preserve">
          <source>In cases where the eventual &lt;code&gt;publicPath&lt;/code&gt; of output files isn't known at compile time, it can be left blank and set dynamically at runtime via the &lt;code&gt;__webpack_public_path__&lt;/code&gt; variable in the entry point file:</source>
          <target state="translated">출력 파일 의 최종 &lt;code&gt;publicPath&lt;/code&gt; 가 컴파일 시간에 알려지지 않은 경우, 입력 지점 파일 의 &lt;code&gt;__webpack_public_path__&lt;/code&gt; 변수를 통해 런타임에 공백으로 남겨두고 런타임에 동적으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c004b77401121c23ceb63e76ede3b249018cfb2" translate="yes" xml:space="preserve">
          <source>In cases where you want to customize without actually having a file to call &lt;code&gt;.custom&lt;/code&gt;, you may also pass the &lt;code&gt;customize&lt;/code&gt; option with a string pointing at a file that exports your &lt;code&gt;custom&lt;/code&gt; callback function.</source>
          <target state="translated">In cases where you want to customize without actually having a file to call &lt;code&gt;.custom&lt;/code&gt; , you may also pass the &lt;code&gt;customize&lt;/code&gt; option with a string pointing at a file that exports your &lt;code&gt;custom&lt;/code&gt; callback function.</target>
        </trans-unit>
        <trans-unit id="ef8ee9d93555902b371b9272189cb28b1eb56c03" translate="yes" xml:space="preserve">
          <source>In combination with long term caching you may need to use the &lt;a href=&quot;https://github.com/soundcloud/chunk-manifest-webpack-plugin&quot;&gt;&lt;code&gt;ChunkManifestWebpackPlugin&lt;/code&gt;&lt;/a&gt; to avoid the vendor chunk changes. You should also use records to ensure stable module ids, e.g. using &lt;a href=&quot;named-modules-plugin&quot;&gt;&lt;code&gt;NamedModulesPlugin&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;hashed-module-ids-plugin&quot;&gt;&lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">장기 캐싱과 함께 공급 업체 청크 변경을 피하기 위해 &lt;a href=&quot;https://github.com/soundcloud/chunk-manifest-webpack-plugin&quot;&gt; &lt;code&gt;ChunkManifestWebpackPlugin&lt;/code&gt; &lt;/a&gt; 을 사용해야 할 수도 있습니다 . 또한 &lt;a href=&quot;named-modules-plugin&quot;&gt; &lt;code&gt;NamedModulesPlugin&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;hashed-module-ids-plugin&quot;&gt; &lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt; &lt;/a&gt; 과 같은 안정적인 모듈 ID를 보장하기 위해 레코드를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7cfdac2025d5357c6aba6c69c694774ce74c1a51" translate="yes" xml:space="preserve">
          <source>In combination with long term caching you may need to use the &lt;a href=&quot;https://github.com/soundcloud/chunk-manifest-webpack-plugin&quot;&gt;&lt;code&gt;ChunkManifestWebpackPlugin&lt;/code&gt;&lt;/a&gt; to avoid the vendor chunk changes. You should also use records to ensure stable module ids, e.g. using &lt;code&gt;NamedModulesPlugin&lt;/code&gt; or &lt;a href=&quot;hashed-module-ids-plugin&quot;&gt;&lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">In combination with long term caching you may need to use the &lt;a href=&quot;https://github.com/soundcloud/chunk-manifest-webpack-plugin&quot;&gt; &lt;code&gt;ChunkManifestWebpackPlugin&lt;/code&gt; &lt;/a&gt; to avoid the vendor chunk changes. You should also use records to ensure stable module ids, e.g. using &lt;code&gt;NamedModulesPlugin&lt;/code&gt; or &lt;a href=&quot;hashed-module-ids-plugin&quot;&gt; &lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7385ee2316c453fb9eb9ad7fd75fd4f793f00023" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;Node.js modules&lt;/a&gt;, webpack &lt;em&gt;modules&lt;/em&gt; can express their &lt;em&gt;dependencies&lt;/em&gt; in a variety of ways. A few examples are:</source>
          <target state="translated">대조적으로 &lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;Node.js를 모듈&lt;/a&gt; , 웹팩 &lt;em&gt;모듈은&lt;/em&gt; 자신의 표현할 수있는 &lt;em&gt;종속성을&lt;/em&gt; 다양한 방법으로. 몇 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ed3712036a7771092fcf011e83d5f3c43c72b8eb" translate="yes" xml:space="preserve">
          <source>In development for example, we might have an &lt;code&gt;assets/&lt;/code&gt; folder that lives on the same level of our index page. This is fine, but what if we wanted to host all these static assets on a CDN in production?</source>
          <target state="translated">예를 들어, 개발 시, 동일한 수준의 색인 페이지에 존재하는 &lt;code&gt;assets/&lt;/code&gt; 폴더 가있을 수 있습니다 . 괜찮습니다. 그러나 이러한 정적 자산을 프로덕션 환경의 CDN에 호스팅하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="a02d6f81319fdf08e8212c4f7aa47524b56f795a" translate="yes" xml:space="preserve">
          <source>In earlier webpack versions, the following functionality was achieved by using &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">In earlier webpack versions, the following functionality was achieved by using &lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8f04b3b962640e5fc5106b0f3fb9207860d577ee" translate="yes" xml:space="preserve">
          <source>In every other case, webpack prints out a set of stats showing bundle, chunk and timing details. Using this option the output can be a JSON object. This response is accepted by webpack's &lt;a href=&quot;https://webpack.github.io/analyse/&quot;&gt;analyse tool&lt;/a&gt;, or chrisbateman's &lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;, or th0r's &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;. The analyse tool will take in the JSON and provide all the details of the build in graphical form.</source>
          <target state="translated">다른 모든 경우에, 웹팩은 번들, 청크 및 타이밍 세부 사항을 보여주는 통계 세트를 인쇄합니다. 이 옵션을 사용하면 출력이 JSON 객체가 될 수 있습니다. 이 응답은 webpack의 &lt;a href=&quot;https://webpack.github.io/analyse/&quot;&gt;분석 도구&lt;/a&gt; 또는 chrisbateman의 &lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt; 또는 th0r의 &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt; 에서 승인 됩니다. 분석 도구는 JSON을 가져 와서 빌드의 모든 세부 사항을 그래픽 형식으로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="11b2181411de8d6bca555fa45659a38083f1b1b1" translate="yes" xml:space="preserve">
          <source>In every other case, webpack prints out a set of stats showing bundle, chunk and timing details. Using this option, the output can be a JSON object. This response is accepted by webpack's &lt;a href=&quot;https://webpack.github.io/analyse/&quot;&gt;analyse tool&lt;/a&gt;, or chrisbateman's &lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;, or th0r's &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;. The analyse tool will take in the JSON and provide all the details of the build in graphical form.</source>
          <target state="translated">In every other case, webpack prints out a set of stats showing bundle, chunk and timing details. Using this option, the output can be a JSON object. This response is accepted by webpack's &lt;a href=&quot;https://webpack.github.io/analyse/&quot;&gt;analyse tool&lt;/a&gt;, or chrisbateman's &lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;, or th0r's &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;. The analyse tool will take in the JSON and provide all the details of the build in graphical form.</target>
        </trans-unit>
        <trans-unit id="6fa777b53033f85d1c3024d1e1df747d1ae22149" translate="yes" xml:space="preserve">
          <source>In general it's good practice to clean the &lt;code&gt;/dist&lt;/code&gt; folder before each build, so that only used files will be generated. Let's take care of that.</source>
          <target state="translated">일반적으로 각 빌드 전에 &lt;code&gt;/dist&lt;/code&gt; 폴더 를 정리하여 사용 된 파일 만 생성되도록하는 것이 좋습니다. 처리해 봅시다.</target>
        </trans-unit>
        <trans-unit id="9a16fdf0a2a148f43aaec99da2248814b9b4d47c" translate="yes" xml:space="preserve">
          <source>In general the &lt;code&gt;exports&lt;/code&gt; field should contain an object where each properties specifies a sub path of the module request. For the examples above the following properties could be used: &lt;code&gt;&quot;.&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package&quot;&lt;/code&gt; and &lt;code&gt;&quot;./sub/path&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package/sub/path&quot;&lt;/code&gt;. Properties ending with a &lt;code&gt;/&lt;/code&gt; will forward a request with this prefix to the old file system lookup algorithm.</source>
          <target state="translated">In general the &lt;code&gt;exports&lt;/code&gt; field should contain an object where each properties specifies a sub path of the module request. For the examples above the following properties could be used: &lt;code&gt;&quot;.&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package&quot;&lt;/code&gt; and &lt;code&gt;&quot;./sub/path&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package/sub/path&quot;&lt;/code&gt; . Properties ending with a &lt;code&gt;/&lt;/code&gt; will forward a request with this prefix to the old file system lookup algorithm.</target>
        </trans-unit>
        <trans-unit id="a632a4942aa9534c844c7e0ebe9d321ea7a7de36" translate="yes" xml:space="preserve">
          <source>In general the &lt;code&gt;exports&lt;/code&gt; field should contain an object where each properties specifies a sub path of the module request. For the examples above the following properties could be used: &lt;code&gt;&quot;.&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package&quot;&lt;/code&gt; and &lt;code&gt;&quot;./sub/path&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package/sub/path&quot;&lt;/code&gt;. Properties ending with a &lt;code&gt;/&lt;/code&gt; will forward a request with this prefix to the old file system lookup algorithm. For properties ending with &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; may take any value and any &lt;code&gt;*&lt;/code&gt; in the property value is replaced with the taken value.</source>
          <target state="translated">일반적으로 &lt;code&gt;exports&lt;/code&gt; 필드에는 각 속성이 모듈 요청의 하위 경로를 지정하는 개체가 포함되어야합니다. 위의 예에서 다음 속성을 사용할 수 있습니다. &lt;code&gt;&quot;.&quot;&lt;/code&gt; 에 대한 &lt;code&gt;import &quot;package&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;./sub/path&quot;&lt;/code&gt; 에 대한 &lt;code&gt;import &quot;package/sub/path&quot;&lt;/code&gt; . &lt;code&gt;/&lt;/code&gt; 로 끝나는 속성 은이 접두사가있는 요청을 이전 파일 시스템 조회 알고리즘으로 전달합니다. &lt;code&gt;*&lt;/code&gt; 로 끝나는 속성의 경우 &lt;code&gt;*&lt;/code&gt; 는 임의의 값을 가질 수 있으며 속성 값의 모든 &lt;code&gt;*&lt;/code&gt; 는 가져온 값으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="c2ab3a3e15382a3f6d9c77d53ffabe0d07f7809b" translate="yes" xml:space="preserve">
          <source>In modules, &lt;code&gt;__webpack_exports_info__&lt;/code&gt; is available to allow exports introspection:</source>
          <target state="translated">In modules, &lt;code&gt;__webpack_exports_info__&lt;/code&gt; is available to allow exports introspection:</target>
        </trans-unit>
        <trans-unit id="05f766c29430c6f499f37b3b70317ef05685e7d4" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;eval-cheap-module-source-map&lt;/code&gt; is the best option.</source>
          <target state="translated">In most cases, &lt;code&gt;eval-cheap-module-source-map&lt;/code&gt; is the best option.</target>
        </trans-unit>
        <trans-unit id="497163f62c54912709b0f0838370a60d0c772b4d" translate="yes" xml:space="preserve">
          <source>In most cases, you probably would want to use &lt;code&gt;webpack-dev-server&lt;/code&gt;, but let's explore all of the above options.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;webpack-dev-server&lt;/code&gt; 를 사용하고 싶을 수도 있지만 위의 모든 옵션을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b11d663436345e513ae621986e787d414ab6e8d5" translate="yes" xml:space="preserve">
          <source>In order for webpack to recognize &lt;code&gt;goog.require&lt;/code&gt;, &lt;code&gt;goog.provide&lt;/code&gt;, &lt;code&gt;goog.module&lt;/code&gt; and related primitives, a separate plugin is shipped.</source>
          <target state="translated">In order for webpack to recognize &lt;code&gt;goog.require&lt;/code&gt; , &lt;code&gt;goog.provide&lt;/code&gt; , &lt;code&gt;goog.module&lt;/code&gt; and related primitives, a separate plugin is shipped.</target>
        </trans-unit>
        <trans-unit id="605c6d5c6f3020ca063b9b05df1f21c51a297e66" translate="yes" xml:space="preserve">
          <source>In order to &lt;code&gt;import&lt;/code&gt; a CSS file from within a JavaScript module, you need to install and add the &lt;a href=&quot;../loaders/style-loader&quot;&gt;style-loader&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader&lt;/a&gt; to your &lt;a href=&quot;../configuration/module&quot;&gt;&lt;code&gt;module&lt;/code&gt; configuration&lt;/a&gt;:</source>
          <target state="translated">JavaScript 모듈 내에서 CSS 파일 을 &lt;code&gt;import&lt;/code&gt; &lt;a href=&quot;../loaders/style-loader&quot;&gt;style-loader&lt;/a&gt; 및 &lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader&lt;/a&gt; 를 설치하고 &lt;a href=&quot;../configuration/module&quot;&gt; &lt;code&gt;module&lt;/code&gt; 구성에&lt;/a&gt; 추가해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="a0010e55d5f007e43c6b8bb83f7330894c873584" translate="yes" xml:space="preserve">
          <source>In order to add a new hook to the compilation for other plugins to &lt;code&gt;tap&lt;/code&gt; into, simply &lt;code&gt;require&lt;/code&gt; the necessary hook class from &lt;code&gt;tapable&lt;/code&gt; and create one:</source>
          <target state="translated">다른 플러그인을 위해 편집에 새로운 후크를 추가하려면 &lt;code&gt;tap&lt;/code&gt; 으로, 단순히 &lt;code&gt;require&lt;/code&gt; 에서 필요한 후크 클래스를 &lt;code&gt;tapable&lt;/code&gt; 하나를 만들 :</target>
        </trans-unit>
        <trans-unit id="c57977db122cd6ca145d2704d8a40aa498cabaab" translate="yes" xml:space="preserve">
          <source>In order to avoid this, you can try to update &lt;code&gt;node-sass&lt;/code&gt; to latest version or you can try to set within &lt;code&gt;sassOptions&lt;/code&gt; the &lt;code&gt;outputStyle&lt;/code&gt; option to &lt;code&gt;compressed&lt;/code&gt;.</source>
          <target state="translated">In order to avoid this, you can try to update &lt;code&gt;node-sass&lt;/code&gt; to latest version or you can try to set within &lt;code&gt;sassOptions&lt;/code&gt; the &lt;code&gt;outputStyle&lt;/code&gt; option to &lt;code&gt;compressed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d1d5606f457110b0f5d7e7e44e89d1c6ec7c457" translate="yes" xml:space="preserve">
          <source>In order to decrease build times, this plugin by default only operates on the main compilation. Plugins such as extract-text-plugin and html-webpack-plugin run as child compilations and usually do not need transpilation or minification. You can enable this for all child compilations by setting this option to &lt;code&gt;true&lt;/code&gt;. For specific control, the option can be set to a function which will be passed a compilation object.</source>
          <target state="translated">빌드 시간을 줄이기 위해이 플러그인은 기본적으로 기본 컴파일에서만 작동합니다. extract-text-plugin 및 html-webpack-plugin과 같은 플러그인은 하위 컴파일로 실행되며 일반적으로 트랜스 파일 또는 축소가 필요하지 않습니다. 이 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하여 모든 하위 컴파일에 대해이를 활성화 할 수 있습니다 . 특정 제어의 경우 옵션을 컴파일 개체를 전달할 함수로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee568f0520d48fb7520ae422af15ca90c46a35d1" translate="yes" xml:space="preserve">
          <source>In order to make it easier to track down errors and warnings, JavaScript offers &lt;a href=&quot;http://blog.teamtreehouse.com/introduction-source-maps&quot;&gt;source maps&lt;/a&gt;, which map your compiled code back to your original source code. If an error originates from &lt;code&gt;b.js&lt;/code&gt;, the source map will tell you exactly that.</source>
          <target state="translated">In order to make it easier to track down errors and warnings, JavaScript offers &lt;a href=&quot;http://blog.teamtreehouse.com/introduction-source-maps&quot;&gt;source maps&lt;/a&gt;, which map your compiled code back to your original source code. If an error originates from &lt;code&gt;b.js&lt;/code&gt; , the source map will tell you exactly that.</target>
        </trans-unit>
        <trans-unit id="d402d94159e9b55e1f0512babfc935eb3d86a7cc" translate="yes" xml:space="preserve">
          <source>In order to make it easier to track down errors and warnings, JavaScript offers &lt;a href=&quot;http://blog.teamtreehouse.com/introduction-source-maps&quot;&gt;source maps&lt;/a&gt;, which maps your compiled code back to your original source code. If an error originates from &lt;code&gt;b.js&lt;/code&gt;, the source map will tell you exactly that.</source>
          <target state="translated">오류 및 경고를보다 쉽게 ​​추적 할 수 있도록 JavaScript는 컴파일 된 코드를 원래 소스 코드로 다시 매핑하는 &lt;a href=&quot;http://blog.teamtreehouse.com/introduction-source-maps&quot;&gt;소스 맵을&lt;/a&gt; 제공 합니다. &lt;code&gt;b.js&lt;/code&gt; 에서 오류가 발생 하면 소스 맵에서 정확히 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="a980e74a18419863850bafb36bd3f4e9ee86f8e5" translate="yes" xml:space="preserve">
          <source>In order to obtain a single CSS file containing your application and vendor CSS, use the following &lt;code&gt;minChunks&lt;/code&gt; function together with &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;&lt;code&gt;ExtractTextPlugin&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">응용 프로그램 및 공급 업체 CSS가 포함 된 단일 CSS 파일을 얻으려면 &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt; &lt;code&gt;ExtractTextPlugin&lt;/code&gt; &lt;/a&gt; 과 함께 다음 &lt;code&gt;minChunks&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c6bd91f0f6f0ea8ce91a541a6477a12c250d0741" translate="yes" xml:space="preserve">
          <source>In order to see what information is available in &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;chunks&lt;/code&gt; objects, you can put &lt;code&gt;debugger;&lt;/code&gt; statement in the callback. Then &lt;a href=&quot;https://webpack.js.org/contribute/debugging/#devtools&quot;&gt;run your webpack build in debug mode&lt;/a&gt; to inspect the parameters in Chromium DevTools.</source>
          <target state="translated">In order to see what information is available in &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;chunks&lt;/code&gt; objects, you can put &lt;code&gt;debugger;&lt;/code&gt; statement in the callback. Then &lt;a href=&quot;https://webpack.js.org/contribute/debugging/#devtools&quot;&gt;run your webpack build in debug mode&lt;/a&gt; to inspect the parameters in Chromium DevTools.</target>
        </trans-unit>
        <trans-unit id="005b0ab749b2505005b6d8d506164f10b6fc4748" translate="yes" xml:space="preserve">
          <source>In order to use &lt;a href=&quot;http://lesscss.org/usage/#plugins&quot;&gt;plugins&lt;/a&gt;, simply set the &lt;code&gt;plugins&lt;/code&gt; option like this:</source>
          <target state="translated">&lt;a href=&quot;http://lesscss.org/usage/#plugins&quot;&gt;plugins&lt;/a&gt; 를 사용하려면 다음과 같이 &lt;code&gt;plugins&lt;/code&gt; 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a1d560ceede023995a60b6d04bbed47efe9aa0f" translate="yes" xml:space="preserve">
          <source>In order to use a plugin, you need to &lt;code&gt;require()&lt;/code&gt; it and add it to the &lt;code&gt;plugins&lt;/code&gt; array. Most plugins are customizable through options. Since you can use a plugin multiple times in a config for different purposes, you need to create an instance of it by calling it with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">플러그인을 사용하려면 &lt;code&gt;require()&lt;/code&gt; 하고 &lt;code&gt;plugins&lt;/code&gt; 배열에 추가해야합니다 . 대부분의 플러그인은 옵션을 통해 사용자 정의 할 수 있습니다. 다른 목적으로 구성에서 플러그인을 여러 번 사용할 수 있으므로 &lt;code&gt;new&lt;/code&gt; 연산자를 사용하여 플러그인을 호출하여 인스턴스를 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="07bef5959ba9fe13cead1b1b9453c3f6e3f9c41d" translate="yes" xml:space="preserve">
          <source>In order to use a plugin, you need to &lt;code&gt;require()&lt;/code&gt; it and add it to the &lt;code&gt;plugins&lt;/code&gt; array. Most plugins are customizable through options. Since you can use a plugin multiple times in a configuration for different purposes, you need to create an instance of it by calling it with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">In order to use a plugin, you need to &lt;code&gt;require()&lt;/code&gt; it and add it to the &lt;code&gt;plugins&lt;/code&gt; array. Most plugins are customizable through options. Since you can use a plugin multiple times in a configuration for different purposes, you need to create an instance of it by calling it with the &lt;code&gt;new&lt;/code&gt; operator.</target>
        </trans-unit>
        <trans-unit id="3a3e7c6a8a852035484ef1b3e9a005fd31478315" translate="yes" xml:space="preserve">
          <source>In order to view the profile file:</source>
          <target state="translated">프로필 파일을 보려면</target>
        </trans-unit>
        <trans-unit id="ff8362e76f2b5492fce7b9ccc1912bcccbafff6a" translate="yes" xml:space="preserve">
          <source>In production</source>
          <target state="translated">생산 중</target>
        </trans-unit>
        <trans-unit id="c676a2cc24fbdc24dc25f137b9e116bda6ebccb4" translate="yes" xml:space="preserve">
          <source>In some cases chunks are used &lt;code&gt;initial&lt;/code&gt; and &lt;code&gt;non-initial&lt;/code&gt;. In those cases &lt;code&gt;output.filename&lt;/code&gt; is used.</source>
          <target state="translated">In some cases chunks are used &lt;code&gt;initial&lt;/code&gt; and &lt;code&gt;non-initial&lt;/code&gt; . In those cases &lt;code&gt;output.filename&lt;/code&gt; is used.</target>
        </trans-unit>
        <trans-unit id="c52b811cfafbc90752e03c6eadd9ba7f2bd998a5" translate="yes" xml:space="preserve">
          <source>In some context properties will use JavaScript code expressions instead of raw values. In these cases the &lt;code&gt;WithLength&lt;/code&gt; variant is available and should be used instead of slicing the original value.</source>
          <target state="translated">In some context properties will use JavaScript code expressions instead of raw values. In these cases the &lt;code&gt;WithLength&lt;/code&gt; variant is available and should be used instead of slicing the original value.</target>
        </trans-unit>
        <trans-unit id="72f9a01093882c0ed69ad1baf1c367b094548e7d" translate="yes" xml:space="preserve">
          <source>In some setups watching falls back to polling mode. With many watched files this can cause a lot of CPU load. In these cases you can increase the polling interval with &lt;code&gt;watchOptions.poll&lt;/code&gt;.</source>
          <target state="translated">일부 설정에서 시청은 폴링 모드로 돌아갑니다. 감시 된 파일이 많으면 CPU로드가 많이 발생할 수 있습니다. 이 경우 &lt;code&gt;watchOptions.poll&lt;/code&gt; 을 사용 하여 폴링 간격을 늘릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c96051d347c31745bd801945626cd14193ef3af8" translate="yes" xml:space="preserve">
          <source>In some setups, watching falls back to polling mode. With many watched files, this can cause a lot of CPU load. In these cases, you can increase the polling interval with &lt;code&gt;watchOptions.poll&lt;/code&gt;.</source>
          <target state="translated">In some setups, watching falls back to polling mode. With many watched files, this can cause a lot of CPU load. In these cases, you can increase the polling interval with &lt;code&gt;watchOptions.poll&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2df7af4577426d94f0e6d3d6e3b30f3a79f454bc" translate="yes" xml:space="preserve">
          <source>In the Application</source>
          <target state="translated">응용 프로그램에서</target>
        </trans-unit>
        <trans-unit id="4c36c113699aba5572e3c3366f135cc9ebfe837c" translate="yes" xml:space="preserve">
          <source>In the Compiler</source>
          <target state="translated">컴파일러에서</target>
        </trans-unit>
        <trans-unit id="46b2c15e3048e8556301ef6dfe4a9572c8aef2f3" translate="yes" xml:space="preserve">
          <source>In the Runtime</source>
          <target state="translated">런타임에서</target>
        </trans-unit>
        <trans-unit id="26eeccc0c9e3d7f45b9a124d0b1c4db179ca7d76" translate="yes" xml:space="preserve">
          <source>In the Shopify's Polaris example, original modules look like this:</source>
          <target state="translated">In the Shopify's Polaris example, original modules look like this:</target>
        </trans-unit>
        <trans-unit id="7e1537c6ee829e2f35a1ff42b1381c9327749afb" translate="yes" xml:space="preserve">
          <source>In the above example, webpack is unable to prune the branch, but Terser does. However, if &lt;code&gt;FOO&lt;/code&gt; is defined using &lt;a href=&quot;define-plugin&quot;&gt;DefinePlugin&lt;/a&gt;, webpack will succeed.</source>
          <target state="translated">In the above example, webpack is unable to prune the branch, but Terser does. However, if &lt;code&gt;FOO&lt;/code&gt; is defined using &lt;a href=&quot;define-plugin&quot;&gt;DefinePlugin&lt;/a&gt;, webpack will succeed.</target>
        </trans-unit>
        <trans-unit id="d18dc21c21fd18138c7c70becd88588cbe4ceb85" translate="yes" xml:space="preserve">
          <source>In the above example, webpack is unable to prune the branch, but Uglify does. However, if &lt;code&gt;FOO&lt;/code&gt; is defined using &lt;a href=&quot;define-plugin&quot;&gt;DefinePlugin&lt;/a&gt;, webpack will succeed.</source>
          <target state="translated">위의 예에서 웹팩은 분기를 제거 할 수 없지만 Uglify는 제거합니다. 그러나 &lt;a href=&quot;define-plugin&quot;&gt;DefinePlugin을&lt;/a&gt; 사용하여 &lt;code&gt;FOO&lt;/code&gt; 를 정의하면 webpack이 성공합니다.</target>
        </trans-unit>
        <trans-unit id="17698b5c62715c2b6b4a59f643935060bd44cc41" translate="yes" xml:space="preserve">
          <source>In the bundle, requiring the module then returns:</source>
          <target state="translated">번들에서 모듈을 요구하면 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae53940b9dd2df93420909fe03fad81debfcde47" translate="yes" xml:space="preserve">
          <source>In the entry file:</source>
          <target state="translated">입력 파일에서 :</target>
        </trans-unit>
        <trans-unit id="f55075a4ab8b09e94e834b909e478abd70e9cd97" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;html-webpack-plugin&lt;/code&gt; generates an HTML file for your application by injecting automatically all your generated bundles.</source>
          <target state="translated">위의 예에서 &lt;code&gt;html-webpack-plugin&lt;/code&gt; 은 생성 된 모든 번들을 자동으로 주입하여 애플리케이션의 HTML 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2f51daa562f55687b724a0efd64ff04447dfe46c" translate="yes" xml:space="preserve">
          <source>In the example above, using &lt;code&gt;node&lt;/code&gt; webpack will compile for usage in a Node.js-like environment (uses Node.js &lt;code&gt;require&lt;/code&gt; to load chunks and not touch any built in modules like &lt;code&gt;fs&lt;/code&gt; or &lt;code&gt;path&lt;/code&gt;).</source>
          <target state="translated">위의 예에서 사용하는 &lt;code&gt;node&lt;/code&gt; 웹팩하는 환경 등 Node.js를-A의 사용을 위해 컴파일 (Node.js를 사용 할 &lt;code&gt;require&lt;/code&gt; 로드 청크와 같은 임의의 모듈에 내장 만지지 &lt;code&gt;fs&lt;/code&gt; 또는 &lt;code&gt;path&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="22afb88572026ab16bd5888974a20ef2312c8605" translate="yes" xml:space="preserve">
          <source>In the example above, we use the &lt;code&gt;output.filename&lt;/code&gt; and the &lt;code&gt;output.path&lt;/code&gt; properties to tell webpack the name of our bundle and where we want it to be emitted to. In case you're wondering about the path module being imported at the top, it is a core &lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;Node.js module&lt;/a&gt; that gets used to manipulate file paths.</source>
          <target state="translated">위의 예제에서 &lt;code&gt;output.filename&lt;/code&gt; 및 &lt;code&gt;output.path&lt;/code&gt; 속성을 사용하여 webpack에 번들 이름과 생성 위치를 알려줍니다. 맨 위에 경로 모듈을 가져 오는 것이 궁금 &lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;하다면&lt;/a&gt; 파일 경로를 조작하는 데 사용되는 핵심 Node.js 모듈 입니다.</target>
        </trans-unit>
        <trans-unit id="5b62d7eba36aafbd3cd87c1f43c49a07495d2f5f" translate="yes" xml:space="preserve">
          <source>In the example below JSX (React JavaScript Markup) and Babel are used to create a JSON Configuration that webpack can understand.</source>
          <target state="translated">아래 예에서 JSX (React JavaScript Markup) 및 Babel은 웹팩이 이해할 수있는 JSON 구성을 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c6e7a22eaacfa776abf6442cc14a2f231bbabc9" translate="yes" xml:space="preserve">
          <source>In the example:</source>
          <target state="translated">예제에서 :</target>
        </trans-unit>
        <trans-unit id="24104cad4e359ef92bd54d6d3c9f785430c41a74" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;/abc/loader1.js?xyz!/abc/node_modules/loader2/index.js!/abc/resource.js?rrr&quot;&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;&quot;/abc/loader1.js?xyz!/abc/node_modules/loader2/index.js!/abc/resource.js?rrr&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="549510410fad46e6844e6f61a6e5cd14c5746c90" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;/abc/resource.js&quot;&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;&quot;/abc/resource.js&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="014442bb269c275a88837c582651707ab9af07dd" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;/abc/resource.js?rrr&quot;&lt;/code&gt;</source>
          <target state="translated">예를 들면 : &lt;code&gt;&quot;/abc/resource.js?rrr&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="603091cff5544e1350f60fe39078169540d40e15" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;?rrr&quot;&lt;/code&gt;</source>
          <target state="translated">예 : &lt;code&gt;&quot;?rrr&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4736fd1d6df9c4f4f428733214491606c10eaebd" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'/abc/loader1.js?xyz!/abc/node_modules/loader2/index.js!/abc/resource.js?rrr'&lt;/code&gt;</source>
          <target state="translated">In the example: &lt;code&gt;'/abc/loader1.js?xyz!/abc/node_modules/loader2/index.js!/abc/resource.js?rrr'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54badbf53969437202fbdb6f0afaddad8f6e680e" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'/abc/resource.js'&lt;/code&gt;</source>
          <target state="translated">In the example: &lt;code&gt;'/abc/resource.js'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbe4cee8604ad15724eeacd0239cd6ed71c43dd7" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'/abc/resource.js?rrr'&lt;/code&gt;</source>
          <target state="translated">In the example: &lt;code&gt;'/abc/resource.js?rrr'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90bbc2c9a8ded67096d3dd15d3301044d8e5a37f" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'?rrr'&lt;/code&gt;</source>
          <target state="translated">In the example: &lt;code&gt;'?rrr'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1c90d3cdbfc14b3e5d704987b0b5002403d9bf7" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;/abc&lt;/code&gt; because &lt;code&gt;resource.js&lt;/code&gt; is in this directory</source>
          <target state="translated">예 : &lt;code&gt;/abc&lt;/code&gt; 는 &lt;code&gt;resource.js&lt;/code&gt; 가이 디렉토리에 있기 때문에</target>
        </trans-unit>
        <trans-unit id="9b6e3fbc500c29545d36a97a130f9a78cbf437fb" translate="yes" xml:space="preserve">
          <source>In the example: in loader1: &lt;code&gt;0&lt;/code&gt;, in loader2: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">예 : loader1 : &lt;code&gt;0&lt;/code&gt; , loader2 : &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="605e7e29de2f12a581e9a4cdc1f438c21765e6c0" translate="yes" xml:space="preserve">
          <source>In the function you get access to the request, response and proxy options. It must return either &lt;code&gt;false&lt;/code&gt; or a path that will be served instead of continuing to proxy the request.</source>
          <target state="translated">이 기능에서는 요청, 응답 및 프록시 옵션에 액세스 할 수 있습니다. 요청을 계속 프록시 처리하는 대신 &lt;code&gt;false&lt;/code&gt; 또는 경로를 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="72b3351ec7d1e2acb6c0e936bd6019d42ad870e9" translate="yes" xml:space="preserve">
          <source>In the function you get access to the request, response, and proxy options.</source>
          <target state="translated">In the function you get access to the request, response, and proxy options.</target>
        </trans-unit>
        <trans-unit id="9ccb4220380a69de88bf58cef4be6c03e9cb4b0c" translate="yes" xml:space="preserve">
          <source>In the past, one of webpack&amp;rsquo;s trade-offs when bundling was that each module in your bundle would be wrapped in individual function closures. These wrapper functions made it slower for your JavaScript to execute in the browser. In comparison, tools like Closure Compiler and RollupJS &amp;lsquo;hoist&amp;rsquo; or concatenate the scope of all your modules into one closure and allow for your code to have a faster execution time in the browser.</source>
          <target state="translated">과거에는 번들로 묶을 때 웹팩의 단점 중 하나는 번들의 각 모듈이 개별 함수 클로저로 래핑되었다는 것입니다. 이러한 랩퍼 기능으로 인해 JavaScript가 브라우저에서 실행되는 속도가 느려졌습니다. 이에 비해 Closure Compiler 및 RollupJS '호이스트'와 같은 도구는 모든 모듈의 범위를 하나의 폐쇄로 연결하고 코드가 브라우저에서 더 빠르게 실행되도록합니다.</target>
        </trans-unit>
        <trans-unit id="4786b287335749bca66fb8dae5d26eced4c51f87" translate="yes" xml:space="preserve">
          <source>In this case an object mapping conditions to results should be used. Conditions are tried in object order. Conditions that contain invalid results are skipped. Conditions might be nested to create a logical AND. The last condition in the object might be the special &lt;code&gt;&quot;default&quot;&lt;/code&gt; condition, which is always matched.</source>
          <target state="translated">In this case an object mapping conditions to results should be used. Conditions are tried in object order. Conditions that contain invalid results are skipped. Conditions might be nested to create a logical AND. The last condition in the object might be the special &lt;code&gt;&quot;default&quot;&lt;/code&gt; condition, which is always matched.</target>
        </trans-unit>
        <trans-unit id="39ab50af67bb23d98288ed625e40355073343a61" translate="yes" xml:space="preserve">
          <source>In this case any dependency named &lt;code&gt;jQuery&lt;/code&gt;, capitalized or not, or &lt;code&gt;$&lt;/code&gt; would be externalized.</source>
          <target state="translated">이 경우 &lt;code&gt;jQuery&lt;/code&gt; , 대문자 또는 &lt;code&gt;$&lt;/code&gt; 의 종속성은 외부화됩니다.</target>
        </trans-unit>
        <trans-unit id="58d1c1fac5ddbcfe833a8bed832ebed63850e18c" translate="yes" xml:space="preserve">
          <source>In this case only 4 modules are included into the bundle:</source>
          <target state="translated">In this case only 4 modules are included into the bundle:</target>
        </trans-unit>
        <trans-unit id="fead69710bdd6ea463e6b61558b0e2f7c4a3abf1" translate="yes" xml:space="preserve">
          <source>In this case, all webpack features like importing non-Less files or aliasing won't work of course.</source>
          <target state="translated">이 경우 비 Less 파일 가져 오기 또는 앨리어싱과 같은 모든 웹팩 기능이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e99a722af656ccfe442ee20f4852249379715c5c" translate="yes" xml:space="preserve">
          <source>In this case, any dependency named &lt;code&gt;jQuery&lt;/code&gt;, capitalized or not, or &lt;code&gt;$&lt;/code&gt; would be externalized.</source>
          <target state="translated">In this case, any dependency named &lt;code&gt;jQuery&lt;/code&gt; , capitalized or not, or &lt;code&gt;$&lt;/code&gt; would be externalized.</target>
        </trans-unit>
        <trans-unit id="5bf48ff4728092cd5f9c9689bc6d70e0f5abb931" translate="yes" xml:space="preserve">
          <source>In this case, the directory of the resource file where the &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; occurs is taken to be the context directory. The relative path specified in the &lt;code&gt;import/require&lt;/code&gt; is joined to this context path to produce the absolute path to the module.</source>
          <target state="translated">이 경우 &lt;code&gt;import&lt;/code&gt; 또는 &lt;code&gt;require&lt;/code&gt; 자원 파일의 디렉토리가 컨텍스트 디렉토리로 간주됩니다. &lt;code&gt;import/require&lt;/code&gt; 지정된 상대 경로 는이 컨텍스트 경로에 결합되어 모듈의 절대 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="012b39117961de4b87a4fd15687773628c9f61c0" translate="yes" xml:space="preserve">
          <source>In this case, you need the &lt;code&gt;library&lt;/code&gt; property to name your module:</source>
          <target state="translated">이 경우 모듈 이름을 지정 하려면 &lt;code&gt;library&lt;/code&gt; 속성 이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="713101c8c854ae5cd18d68f795dd0d2d0478ad9d" translate="yes" xml:space="preserve">
          <source>In this example the loader is configured to operator on a file name of &lt;code&gt;years-in-ms.js&lt;/code&gt;, execute the code, and store the result in the bundle as the result of the execution. This example passes &lt;code&gt;years&lt;/code&gt; as an &lt;code&gt;option&lt;/code&gt;, which corresponds to the &lt;code&gt;years&lt;/code&gt; parameter in the target module exported function:</source>
          <target state="translated">이 예제에서 로더는 &lt;code&gt;years-in-ms.js&lt;/code&gt; 파일 이름을 조작 하고 코드를 실행하며 결과를 실행 결과로 번들에 저장하도록 구성되어 있습니다. 이 예제는 &lt;code&gt;years&lt;/code&gt; 를 &lt;code&gt;option&lt;/code&gt; 으로 전달 하는데, 이는 대상 모듈 익스포트 된 함수 의 &lt;code&gt;years&lt;/code&gt; 매개 변수에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="6f532a889a819f45497c5b35c1f39924b20cd994" translate="yes" xml:space="preserve">
          <source>In this example, there are implicit dependencies between the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags. Our &lt;code&gt;index.js&lt;/code&gt; file depends on &lt;code&gt;lodash&lt;/code&gt; being included in the page before it runs. This is because &lt;code&gt;index.js&lt;/code&gt; never explicitly declared a need for &lt;code&gt;lodash&lt;/code&gt;; it just assumes that the global variable &lt;code&gt;_&lt;/code&gt; exists.</source>
          <target state="translated">이 예에서는 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그 사이에 암시 적 종속성이 있습니다 . 우리의 &lt;code&gt;index.js&lt;/code&gt; 파일에 따라 &lt;code&gt;lodash&lt;/code&gt; 가 실행되기 전에 페이지에 포함된다. &lt;code&gt;index.js&lt;/code&gt; 가 &lt;code&gt;lodash&lt;/code&gt; 의 필요성을 명시 적으로 선언하지 않았기 때문입니다 . 전역 변수 &lt;code&gt;_&lt;/code&gt; 가 존재 한다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="87879d9dd235c986c9cc31f2c39f0038514bfd2b" translate="yes" xml:space="preserve">
          <source>In this guide we'll dive into some of the best practices and utilities for building a production site or application.</source>
          <target state="translated">이 가이드에서는 프로덕션 사이트 또는 응용 프로그램을 구축하기위한 모범 사례 및 유틸리티에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="419925f092759c8d2c996d150b68147ad1abb024" translate="yes" xml:space="preserve">
          <source>In this guide, we'll dive into some of the best practices and utilities for building a production site or application.</source>
          <target state="translated">In this guide, we'll dive into some of the best practices and utilities for building a production site or application.</target>
        </trans-unit>
        <trans-unit id="d796a4559e4856236a59849ea5abe6f79415ec41" translate="yes" xml:space="preserve">
          <source>In this mode, the compiler rewrites CommonJS modules and hoists require calls. Some modules are not compatible with this type of rewriting. In particular, hoisting will cause the following code to execute out of order:</source>
          <target state="translated">In this mode, the compiler rewrites CommonJS modules and hoists require calls. Some modules are not compatible with this type of rewriting. In particular, hoisting will cause the following code to execute out of order:</target>
        </trans-unit>
        <trans-unit id="9b7f9036f4484c6e884395a9cc875374bac5fef6" translate="yes" xml:space="preserve">
          <source>In this mode, the compiler rewrites CommonJS modules and hoists require calls. Some modules are not compatible with this type of rewritting. In particular, hoisting will cause the following code to execute out of order:</source>
          <target state="translated">이 모드에서 컴파일러는 CommonJS 모듈을 다시 작성하고 호이스트에는 호출이 필요합니다. 일부 모듈은이 유형의 다시 쓰기와 호환되지 않습니다. 특히, 호이 스팅은 다음 코드가 순서대로 실행되지 않게합니다.</target>
        </trans-unit>
        <trans-unit id="7c8f046cd41700a29fca9f8d6c8e812aa51d26cb" translate="yes" xml:space="preserve">
          <source>In this setup, &lt;code&gt;index.js&lt;/code&gt; explicitly requires &lt;code&gt;lodash&lt;/code&gt; to be present, and binds it as &lt;code&gt;_&lt;/code&gt; (no global scope pollution). By stating what dependencies a module needs, webpack can use this information to build a dependency graph. It then uses the graph to generate an optimized bundle where scripts will be executed in the correct order.</source>
          <target state="translated">이 설정에서 &lt;code&gt;index.js&lt;/code&gt; 는 &lt;code&gt;lodash&lt;/code&gt; 를 명시 적으로 요구 하고이를 &lt;code&gt;_&lt;/code&gt; (전역 스코프 오염 없음) 로 바인드합니다 . 웹팩은 모듈에 필요한 종속성을 지정함으로써이 정보를 사용하여 종속성 그래프를 작성할 수 있습니다. 그런 다음 그래프를 사용하여 스크립트가 올바른 순서로 실행될 최적화 된 번들을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="82dbc524c2ff0aa571daff54dad901b8b2fba730" translate="yes" xml:space="preserve">
          <source>In watch mode dependencies will invalidate the compiler when:</source>
          <target state="translated">감시 모드에서 종속성은 다음과 같은 경우 컴파일러를 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="9992df883c45d7198eca8f3fb2c2d1c204adde0e" translate="yes" xml:space="preserve">
          <source>In webpack version &amp;lt; 4 it was common to add vendors as a separate entry point to compile it as a separate file (in combination with the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt;).</source>
          <target state="translated">In webpack version &amp;lt; 4 it was common to add vendors as a separate entry point to compile it as a separate file (in combination with the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fa5294f1161b6b9bdd73411206fcd8021000dbe9" translate="yes" xml:space="preserve">
          <source>In webpack-dev-server and webpack-dev-middleware watch mode is enabled by default.</source>
          <target state="translated">webpack-dev-server 및 webpack-dev-middleware 감시 모드는 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f751f02ce973ae21dbfdb3d4039f795ed26eb11" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;webpack.config.js&lt;/code&gt;, add the &lt;code&gt;ImageMinimizerPlugin.loader&lt;/code&gt;, chained with the &lt;a href=&quot;../loaders/file-loader&quot;&gt;file-loader&lt;/a&gt; or &lt;a href=&quot;../loaders/url-loader&quot;&gt;url-loader&lt;/a&gt;:</source>
          <target state="translated">In your &lt;code&gt;webpack.config.js&lt;/code&gt; , add the &lt;code&gt;ImageMinimizerPlugin.loader&lt;/code&gt; , chained with the &lt;a href=&quot;../loaders/file-loader&quot;&gt;file-loader&lt;/a&gt; or &lt;a href=&quot;../loaders/url-loader&quot;&gt;url-loader&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="b11f118011bd6b4042e5ab1684ccae363c0c2e8f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">당신에 &lt;code&gt;webpack.config.js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="29d7d653c6bffb1e041df2f88cb76c81ff4e16d3" translate="yes" xml:space="preserve">
          <source>In your nginx config file, add the following:</source>
          <target state="translated">nginx 구성 파일에서 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0663e0d6f0ce3a04e14631ba104dc3d7f42ea443" translate="yes" xml:space="preserve">
          <source>In your nginx configuration file, add the following:</source>
          <target state="translated">In your nginx configuration file, add the following:</target>
        </trans-unit>
        <trans-unit id="7fd60cce8e7156652fe436394f2f3965c3f483ec" translate="yes" xml:space="preserve">
          <source>In your webpack configuration</source>
          <target state="translated">웹팩 구성에서</target>
        </trans-unit>
        <trans-unit id="eb075488c88200884363599454138a97e0ca102f" translate="yes" xml:space="preserve">
          <source>In your webpack configuration:</source>
          <target state="translated">In your webpack configuration:</target>
        </trans-unit>
        <trans-unit id="9feadfc2309af3ca6ee84eaeaa3e2ac04c4071ab" translate="yes" xml:space="preserve">
          <source>Include a &lt;code&gt;dependency&lt;/code&gt; without executing it. This can be used for optimizing the position of a module in the output chunks.</source>
          <target state="translated">실행하지 않고 &lt;code&gt;dependency&lt;/code&gt; 을 포함 시킵니다. 출력 청크에서 모듈의 위치를 ​​최적화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b3db040d66020554278821eb081b1ce817c6df7" translate="yes" xml:space="preserve">
          <source>Include a comment with the request for every dependency</source>
          <target state="translated">모든 의존성에 대한 요청과 함께 의견을 포함</target>
        </trans-unit>
        <trans-unit id="e5cdb56d2da7e08fb827421683cfb0254911f36e" translate="yes" xml:space="preserve">
          <source>Include a minifier that supports dead code removal (e.g. the &lt;code&gt;UglifyJSPlugin&lt;/code&gt;).</source>
          <target state="translated">데드 코드 제거를 지원하는 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; 포함하십시오 (예 : UglifyJSPlugin ).</target>
        </trans-unit>
        <trans-unit id="43ee3ff84212ff6b34d24cfa31ddb5fc9b647697" translate="yes" xml:space="preserve">
          <source>Include all assets matching any of these conditions</source>
          <target state="translated">Include all assets matching any of these conditions</target>
        </trans-unit>
        <trans-unit id="2c88eaaf5e0983cb65e54231b6b97abd3ca74767" translate="yes" xml:space="preserve">
          <source>Include all assets matching any of these conditions.</source>
          <target state="translated">Include all assets matching any of these conditions.</target>
        </trans-unit>
        <trans-unit id="b44c412a96c9b4a61318e020f6ca77d54624cb48" translate="yes" xml:space="preserve">
          <source>Include all assets that pass test assertion</source>
          <target state="translated">Include all assets that pass test assertion</target>
        </trans-unit>
        <trans-unit id="9c24bab0e5accc54ef898d6e0cb3c320619329be" translate="yes" xml:space="preserve">
          <source>Include all assets that pass test assertion.</source>
          <target state="translated">Include all assets that pass test assertion.</target>
        </trans-unit>
        <trans-unit id="55775468dd0bd13185a68dfcec1a3aeaba30e893" translate="yes" xml:space="preserve">
          <source>Include all modules matching any of these conditions. If you supply a &lt;code&gt;Rule.include&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#ruleresource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.include&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Include all modules matching any of these conditions. If you supply a &lt;code&gt;Rule.include&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt; . See &lt;a href=&quot;#ruleresource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.include&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="a41c9d6e0e520b70c4921d6e418a88738b81cd1d" translate="yes" xml:space="preserve">
          <source>Include all modules that pass test assertion. If you supply a &lt;code&gt;Rule.test&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#ruleresource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.test&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Include all modules that pass test assertion. If you supply a &lt;code&gt;Rule.test&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt; . See &lt;a href=&quot;#ruleresource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.test&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="ca814e53a9dd65aa14e6e0164296b9d774d3b0a0" translate="yes" xml:space="preserve">
          <source>Incremental Builds</source>
          <target state="translated">증분 빌드</target>
        </trans-unit>
        <trans-unit id="c1a2c1982c5ff1a21f7c65e255870f6449ecf7b0" translate="yes" xml:space="preserve">
          <source>Indicate what parts of the module contain side effects. See &lt;a href=&quot;../guides/tree-shaking#mark-the-file-as-side-effect-free&quot;&gt;Tree Shaking&lt;/a&gt; for details.</source>
          <target state="translated">부작용이있는 모듈 부분을 나타냅니다. 자세한 내용은 &lt;a href=&quot;../guides/tree-shaking#mark-the-file-as-side-effect-free&quot;&gt;트리 쉐이킹&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="977153eb29097b9cbd6c3737981648e7f07049ed" translate="yes" xml:space="preserve">
          <source>Indicates whether or not &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; is enabled and provides an interface to the process. See the &lt;a href=&quot;hot-module-replacement&quot;&gt;HMR API page&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;핫 모듈 교체&lt;/a&gt; 가 활성화되어 있는지 여부를 나타내며 프로세스에 대한 인터페이스를 제공합니다. 자세한 내용은 &lt;a href=&quot;hot-module-replacement&quot;&gt;HMR API 페이지&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4b0a1395312824d36c52689812a350d498ccc63e" translate="yes" xml:space="preserve">
          <source>Infer a platform and the ES-features from a browserslist-config &lt;strong&gt;(default if browserslist config is available)&lt;/strong&gt;</source>
          <target state="translated">Infer a platform and the ES-features from a browserslist-config &lt;strong&gt;(default if browserslist config is available)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8702f81226b67e180614369bb8ee0882d3a48b7c" translate="yes" xml:space="preserve">
          <source>Infer an environment (e.g: &lt;code&gt;last 2 node versions&lt;/code&gt; the same as &lt;code&gt;target: &quot;node&quot;&lt;/code&gt; with some &lt;a href=&quot;output#outputenvironment&quot;&gt;&lt;code&gt;output.environment&lt;/code&gt;&lt;/a&gt; settings).</source>
          <target state="translated">Infer an environment (e.g: &lt;code&gt;last 2 node versions&lt;/code&gt; the same as &lt;code&gt;target: &quot;node&quot;&lt;/code&gt; with some &lt;a href=&quot;output#outputenvironment&quot;&gt; &lt;code&gt;output.environment&lt;/code&gt; &lt;/a&gt; settings).</target>
        </trans-unit>
        <trans-unit id="733a76be6da66ed98811b4efcd63661a3f609cda" translate="yes" xml:space="preserve">
          <source>Information about HMR for loaders.</source>
          <target state="translated">Information about HMR for loaders.</target>
        </trans-unit>
        <trans-unit id="41741927855ae531bbaf9b58b8bfc655b3973ea6" translate="yes" xml:space="preserve">
          <source>Information available to all plugins</source>
          <target state="translated">Information available to all plugins</target>
        </trans-unit>
        <trans-unit id="38b66e61a7e29a79e87dc6282b9e79b3f1a150c2" translate="yes" xml:space="preserve">
          <source>Initial chunk with name &lt;code&gt;main&lt;/code&gt; is created. It contains:</source>
          <target state="translated">Initial chunk with name &lt;code&gt;main&lt;/code&gt; is created. It contains:</target>
        </trans-unit>
        <trans-unit id="780da6a7a78d28589afa2bfdf46e536b039198ea" translate="yes" xml:space="preserve">
          <source>Initialize a new webpack configuration</source>
          <target state="translated">Initialize a new webpack configuration</target>
        </trans-unit>
        <trans-unit id="3f0e6e771790d7e6bf9ac36bb9085b14c74ddff6" translate="yes" xml:space="preserve">
          <source>Initialize a new webpack configuration.</source>
          <target state="translated">새 웹팩 구성을 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="5ac4378abde8c184828abb5dec0ab1ffd86d5fa4" translate="yes" xml:space="preserve">
          <source>Initialize npm, install webpack and lodash:</source>
          <target state="translated">npm을 초기화하고 webpack 및 lodash를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="4ac1e162d6f4102359b59668b26273dd64439dce" translate="yes" xml:space="preserve">
          <source>Inject CSS into the DOM.</source>
          <target state="translated">Inject CSS into the DOM.</target>
        </trans-unit>
        <trans-unit id="4cb420660ee978b1fdca06d2704f04fb9b0366c4" translate="yes" xml:space="preserve">
          <source>Injects styles into the DOM using multiple &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/file.css&quot;&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">Injects styles into the DOM using multiple &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/file.css&quot;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b65a7158e7c2111323cdda2c2d5096fc9a5da6b4" translate="yes" xml:space="preserve">
          <source>Injects styles into the DOM using multiple &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; on demand. We recommend following &lt;code&gt;.lazy.css&lt;/code&gt; naming convention for lazy styles and the &lt;code&gt;.css&lt;/code&gt; for basic &lt;code&gt;style-loader&lt;/code&gt; usage (similar to other file types, i.e. &lt;code&gt;.lazy.less&lt;/code&gt; and &lt;code&gt;.less&lt;/code&gt;). When you &lt;code&gt;lazyStyleTag&lt;/code&gt; value the &lt;code&gt;style-loader&lt;/code&gt; injects the styles lazily making them useable on-demand via &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt;.</source>
          <target state="translated">Injects styles into the DOM using multiple &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; on demand. We recommend following &lt;code&gt;.lazy.css&lt;/code&gt; naming convention for lazy styles and the &lt;code&gt;.css&lt;/code&gt; for basic &lt;code&gt;style-loader&lt;/code&gt; usage (similar to other file types, i.e. &lt;code&gt;.lazy.less&lt;/code&gt; and &lt;code&gt;.less&lt;/code&gt; ). When you &lt;code&gt;lazyStyleTag&lt;/code&gt; value the &lt;code&gt;style-loader&lt;/code&gt; injects the styles lazily making them useable on-demand via &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1c7d97922ac681d34851c8911e453436fbdde34" translate="yes" xml:space="preserve">
          <source>Injects styles into the DOM using one &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; on demand. We recommend following &lt;code&gt;.lazy.css&lt;/code&gt; naming convention for lazy styles and the &lt;code&gt;.css&lt;/code&gt; for basic &lt;code&gt;style-loader&lt;/code&gt; usage (similar to other file types, i.e. &lt;code&gt;.lazy.less&lt;/code&gt; and &lt;code&gt;.less&lt;/code&gt;). When you &lt;code&gt;lazySingletonStyleTag&lt;/code&gt; value the &lt;code&gt;style-loader&lt;/code&gt; injects the styles lazily making them useable on-demand via &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt;.</source>
          <target state="translated">Injects styles into the DOM using one &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; on demand. We recommend following &lt;code&gt;.lazy.css&lt;/code&gt; naming convention for lazy styles and the &lt;code&gt;.css&lt;/code&gt; for basic &lt;code&gt;style-loader&lt;/code&gt; usage (similar to other file types, i.e. &lt;code&gt;.lazy.less&lt;/code&gt; and &lt;code&gt;.less&lt;/code&gt; ). When you &lt;code&gt;lazySingletonStyleTag&lt;/code&gt; value the &lt;code&gt;style-loader&lt;/code&gt; injects the styles lazily making them useable on-demand via &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e347f4ceb23a6d8637cc8028fda9ad8c7b7c47f" translate="yes" xml:space="preserve">
          <source>Inline</source>
          <target state="translated">Inline</target>
        </trans-unit>
        <trans-unit id="c087c6d4c7770e5dce97d6879368970190287e31" translate="yes" xml:space="preserve">
          <source>Inline comments to make features work. By adding comments to the import, we can do things such as name our chunk or select different modes. For a full list of these magic comments see the code below followed by an explanation of what these comments do.</source>
          <target state="translated">Inline comments to make features work. By adding comments to the import, we can do things such as name our chunk or select different modes. For a full list of these magic comments see the code below followed by an explanation of what these comments do.</target>
        </trans-unit>
        <trans-unit id="2b9768e0fd9050af20d23c888ce38299bcc390c8" translate="yes" xml:space="preserve">
          <source>Inline loaders and &lt;code&gt;!&lt;/code&gt; prefixes should not be used as they are non-standard. They may be use by loader generated code.</source>
          <target state="translated">인라인 로더와 &lt;code&gt;!&lt;/code&gt; 접두사는 비표준이므로 사용해서는 안됩니다. 로더 생성 코드에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0dd949ab8333360e2e496024a2f6ba338dfdf4f5" translate="yes" xml:space="preserve">
          <source>Inline loaders and &lt;code&gt;!&lt;/code&gt; prefixes should not be used as they are non-standard. They may be used by loader generated code.</source>
          <target state="translated">인라인 로더 및 &lt;code&gt;!&lt;/code&gt; 접두사는 표준이 아니므로 사용해서는 안됩니다. 로더 생성 코드에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eb673743cb9511a4676ade656eb382fb5ca6a3c" translate="yes" xml:space="preserve">
          <source>Inline matchResource</source>
          <target state="translated">Inline matchResource</target>
        </trans-unit>
        <trans-unit id="eb6cbb164c9b281a0881d7f616460035b2a6c781" translate="yes" xml:space="preserve">
          <source>Inline mode is recommended for &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;Hot Module Replacement&lt;/a&gt; as it includes an HMR trigger from the websocket. Polling mode can be used as an alternative, but requires an additional entry point, &lt;code&gt;'webpack/hot/poll?1000'&lt;/code&gt;.</source>
          <target state="translated">Inline mode is recommended for &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;Hot Module Replacement&lt;/a&gt; as it includes an HMR trigger from the websocket. Polling mode can be used as an alternative, but requires an additional entry point, &lt;code&gt;'webpack/hot/poll?1000'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="069d91be0bb38bcc8509b0b632375462f7798984" translate="yes" xml:space="preserve">
          <source>Inline mode is recommended for Hot Module Replacement as it includes an HMR trigger from the websocket. Polling mode can be used as an alternative, but requires an additional entry point, &lt;code&gt;'webpack/hot/poll?1000'&lt;/code&gt;.</source>
          <target state="translated">웹 소켓의 HMR 트리거가 포함되어 있으므로 핫 모듈 교체에는 인라인 모드가 권장됩니다. 폴링 모드를 대안으로 사용할 수 있지만 추가 진입 점 &lt;code&gt;'webpack/hot/poll?1000'&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a99be764eb4460a4ebc3df1fd660e5e7d72d0759" translate="yes" xml:space="preserve">
          <source>Inline mode with the &lt;code&gt;fallback&lt;/code&gt; value will create file for browsers without support web workers, to disable this behavior just use &lt;code&gt;no-fallback&lt;/code&gt; value.</source>
          <target state="translated">Inline mode with the &lt;code&gt;fallback&lt;/code&gt; value will create file for browsers without support web workers, to disable this behavior just use &lt;code&gt;no-fallback&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="8cd5aa56fde3d0e8b6b54a587a7e6616c70e6aa0" translate="yes" xml:space="preserve">
          <source>Inlined</source>
          <target state="translated">Inlined</target>
        </trans-unit>
        <trans-unit id="9253bec7b330b3bcf1ae7601064c33bdcfbb7a41" translate="yes" xml:space="preserve">
          <source>Inlining assets</source>
          <target state="translated">Inlining assets</target>
        </trans-unit>
        <trans-unit id="630cbac3ad3755357bd8db01e781e15971700af2" translate="yes" xml:space="preserve">
          <source>Input Type</source>
          <target state="translated">입력 유형</target>
        </trans-unit>
        <trans-unit id="61bbcbfa889da817407bf948fa239f50c645e934" translate="yes" xml:space="preserve">
          <source>Input type</source>
          <target state="translated">입력 유형</target>
        </trans-unit>
        <trans-unit id="eb048dcb7b75adab79079e46612f2e8b0d7f3889" translate="yes" xml:space="preserve">
          <source>Insert styles at top</source>
          <target state="translated">Insert styles at top</target>
        </trans-unit>
        <trans-unit id="89e0714d00994c3ffadea6268f6d4a480c437be5" translate="yes" xml:space="preserve">
          <source>Insert styles at top of &lt;code&gt;head&lt;/code&gt; tag.</source>
          <target state="translated">Insert styles at top of &lt;code&gt;head&lt;/code&gt; tag.</target>
        </trans-unit>
        <trans-unit id="831c32ee9bc6c73720ac721dcbc043c82ba7d74f" translate="yes" xml:space="preserve">
          <source>Insert styles before target element</source>
          <target state="translated">Insert styles before target element</target>
        </trans-unit>
        <trans-unit id="a6b1a9c78b351f213422dac6235b2189cf7b6b84" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; at the given position</source>
          <target state="translated">Inserts &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; at the given position</target>
        </trans-unit>
        <trans-unit id="abe22966b84c9739ce4870f1c88f989a12bcad0b" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; at the given position</source>
          <target state="translated">주어진 위치에 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 삽입</target>
        </trans-unit>
        <trans-unit id="313dfd56f875dc4f47032f08f0f9225e6c848a34" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; into the given position</source>
          <target state="translated">삽입 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 지정된 위치에</target>
        </trans-unit>
        <trans-unit id="a118ac3c1f68b5ed2525eb3fdb7ceb943f7cea17" translate="yes" xml:space="preserve">
          <source>Inserts styles at top of &lt;code&gt;head&lt;/code&gt; tag.</source>
          <target state="translated">Inserts styles at top of &lt;code&gt;head&lt;/code&gt; tag.</target>
        </trans-unit>
        <trans-unit id="2ba429c31e6cd16ae8f908124b6018ff8cbfaa6a" translate="yes" xml:space="preserve">
          <source>Inserts styles before &lt;code&gt;#id&lt;/code&gt; element.</source>
          <target state="translated">Inserts styles before &lt;code&gt;#id&lt;/code&gt; element.</target>
        </trans-unit>
        <trans-unit id="8d9dbb8653cda9d1cd636a434316bed51df7fb62" translate="yes" xml:space="preserve">
          <source>Inserts tag at the given position into the DOM</source>
          <target state="translated">Inserts tag at the given position into the DOM</target>
        </trans-unit>
        <trans-unit id="2868202fbdaf87762eea439397d31ee31610dfaf" translate="yes" xml:space="preserve">
          <source>Inspiration</source>
          <target state="translated">Inspiration</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="d8f97da1b498c1fcef34cb27808f85be756c4665" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;yamljs&lt;/code&gt; and &lt;code&gt;json5&lt;/code&gt; packages first:</source>
          <target state="translated">Install &lt;code&gt;toml&lt;/code&gt; , &lt;code&gt;yamljs&lt;/code&gt; and &lt;code&gt;json5&lt;/code&gt; packages first:</target>
        </trans-unit>
        <trans-unit id="c1594fb84f280667e3d8b24b257f4b352e1dd610" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;tsconfig-paths&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tsconfig-paths&lt;/code&gt; 를 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="236e68cda5bea970d83dd18f3dc71441b5713fca" translate="yes" xml:space="preserve">
          <source>Installing locally is what we recommend for most projects. This makes it easier to upgrade projects individually when breaking changes are introduced. Typically webpack is run via one or more &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm scripts&lt;/a&gt; which will look for a webpack installation in your local &lt;code&gt;node_modules&lt;/code&gt; directory:</source>
          <target state="translated">로컬 설치는 대부분의 프로젝트에 권장되는 것입니다. 따라서 주요 변경 사항이 도입 될 때 프로젝트를 개별적으로 업그레이드하기가 더 쉬워집니다. 일반적으로 webpack은 하나 이상의 &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm 스크립트&lt;/a&gt; 를 통해 실행되며 로컬 &lt;code&gt;node_modules&lt;/code&gt; 디렉토리 에서 webpack 설치를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="a59a173295d75d519aced19f14b6497c95689dd8" translate="yes" xml:space="preserve">
          <source>Instantly update the browser when modifications are made to CSS/JS in the source code, which is almost comparable to changing styles directly in the browser's dev tools.</source>
          <target state="translated">Instantly update the browser when modifications are made to CSS/JS in the source code, which is almost comparable to changing styles directly in the browser's dev tools.</target>
        </trans-unit>
        <trans-unit id="13ceb08b08d413b8469009fff5b4c7b25c5df462" translate="yes" xml:space="preserve">
          <source>Instead of exporting a single configuration object/function, you may export multiple configurations (multiple functions are supported since webpack 3.1.0). When running webpack, all configurations are built. For instance, this is useful for &lt;a href=&quot;../guides/author-libraries&quot;&gt;bundling a library&lt;/a&gt; for multiple &lt;a href=&quot;output#output-librarytarget&quot;&gt;targets&lt;/a&gt; such as AMD and CommonJS:</source>
          <target state="translated">단일 구성 객체 / 함수를 내보내는 대신 여러 구성을 내보낼 수 있습니다 (웹팩 3.1.0부터 여러 기능이 지원됨). 웹팩을 실행하면 모든 구성이 빌드됩니다. 예를 들어, 이것은 AMD 및 CommonJS와 같은 여러 &lt;a href=&quot;output#output-librarytarget&quot;&gt;대상에 &lt;/a&gt;&lt;a href=&quot;../guides/author-libraries&quot;&gt;대한 라이브러리&lt;/a&gt; 를 번들로 묶는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="386f1a48d4c3f500dc1b0266f217d05d4eea4762" translate="yes" xml:space="preserve">
          <source>Instead of exporting a single configuration object/function, you may export multiple configurations (multiple functions are supported since webpack 3.1.0). When running webpack, all configurations are built. For instance, this is useful for &lt;a href=&quot;../guides/author-libraries&quot;&gt;bundling a library&lt;/a&gt; for multiple &lt;a href=&quot;output#outputlibrarytarget&quot;&gt;targets&lt;/a&gt; such as AMD and CommonJS:</source>
          <target state="translated">Instead of exporting a single configuration object/function, you may export multiple configurations (multiple functions are supported since webpack 3.1.0). When running webpack, all configurations are built. For instance, this is useful for &lt;a href=&quot;../guides/author-libraries&quot;&gt;bundling a library&lt;/a&gt; for multiple &lt;a href=&quot;output#outputlibrarytarget&quot;&gt;targets&lt;/a&gt; such as AMD and CommonJS:</target>
        </trans-unit>
        <trans-unit id="67acedf98b128fe02217721f4a0b2b936f55edc7" translate="yes" xml:space="preserve">
          <source>Instead of providing a single result, the package author may provide a list of results. In such a scenario this list is tried in order and the first valid result will be used.</source>
          <target state="translated">Instead of providing a single result, the package author may provide a list of results. In such a scenario this list is tried in order and the first valid result will be used.</target>
        </trans-unit>
        <trans-unit id="b5cb598e704a1d38086f1788797d25307b7d30a0" translate="yes" xml:space="preserve">
          <source>Instead of providing results directly in the &lt;code&gt;exports&lt;/code&gt; field, the package author may let the module system choose one based on conditions about the environment.</source>
          <target state="translated">Instead of providing results directly in the &lt;code&gt;exports&lt;/code&gt; field, the package author may let the module system choose one based on conditions about the environment.</target>
        </trans-unit>
        <trans-unit id="e0573e283964572704ca396e5f9bb3ed7c1564c3" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;devtool&lt;/code&gt; option you can also use &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt;/&lt;code&gt;EvalSourceMapDevToolPlugin&lt;/code&gt; directly as it has more options. Never use both the &lt;code&gt;devtool&lt;/code&gt; option and plugin together. The &lt;code&gt;devtool&lt;/code&gt; option adds the plugin internally so you would end up with the plugin applied twice.</source>
          <target state="translated">&lt;code&gt;devtool&lt;/code&gt; 옵션 을 사용하는 대신 더 많은 옵션이 있으므로 &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; / &lt;code&gt;EvalSourceMapDevToolPlugin&lt;/code&gt; 을 직접 사용할 수도 있습니다. &lt;code&gt;devtool&lt;/code&gt; 옵션과 플러그인을 함께 사용하지 마십시오 . &lt;code&gt;devtool&lt;/code&gt; 의 플러그인이 두 번 적용으로 당신이 끝날 것 때문에 옵션은 내부적으로 플러그인을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="397baec23784db4414b3b955a65290479d83c0bf" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt; how you normally would and &lt;code&gt;npm install&lt;/code&gt; will happen &lt;strong&gt;automatically to install &amp;amp; save missing dependencies&lt;/strong&gt; while you work!</source>
          <target state="translated">대신, 정상적으로 작동하는 방식을 &lt;code&gt;require&lt;/code&gt; 하거나 &lt;code&gt;import&lt;/code&gt; . 작업하는 동안 &lt;strong&gt;누락 된 종속성을 설치 및 저장하기 위해 &lt;/strong&gt; &lt;code&gt;npm install&lt;/code&gt; 가 &lt;strong&gt;자동으로&lt;/strong&gt; 수행됩니다!</target>
        </trans-unit>
        <trans-unit id="c5d169014af114b9843602fc038633eff55a22b8" translate="yes" xml:space="preserve">
          <source>Instead, with &lt;code&gt;strictModuleExceptionHandling&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, all &lt;code&gt;require&lt;/code&gt;s of this module throw an exception:</source>
          <target state="translated">대신에 &lt;code&gt;strictModuleExceptionHandling&lt;/code&gt; 에 세트를 &lt;code&gt;true&lt;/code&gt; , 모두가 &lt;code&gt;require&lt;/code&gt; 이 모듈의 예외를 던져 :</target>
        </trans-unit>
        <trans-unit id="effdf11f25a78c860e4deb03c10959bdbfe8e6a6" translate="yes" xml:space="preserve">
          <source>Instructs the loader to cause the webpack build to fail on all JSHint warnings and errors.</source>
          <target state="translated">모든 JSHint 경고 및 오류에서 웹팩 빌드가 실패하도록 로더에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="c70f9def1c0d9fd9fe32ad04df41435833834184" translate="yes" xml:space="preserve">
          <source>Instructs the loader to emit all JSHint warnings and errors as webpack errors.</source>
          <target state="translated">로더가 모든 JSHint 경고 및 오류를 웹팩 오류로 생성하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="8b9160c9ad2f43280c351ba53cc04b6e58a7da97" translate="yes" xml:space="preserve">
          <source>Instructs the module to allow a missing config file, and returns an &lt;code&gt;Object&lt;/code&gt; with empty &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;configPath&lt;/code&gt; properties in the event a config file was not found.</source>
          <target state="translated">누락 된 구성 파일을 허용하도록 모듈에 지시하고 구성 파일을 찾을 수없는 경우 빈 &lt;code&gt;config&lt;/code&gt; 및 &lt;code&gt;configPath&lt;/code&gt; 특성이 있는 &lt;code&gt;Object&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1276a9a004ec270e14baedaf01e1c74c75d8efe3" translate="yes" xml:space="preserve">
          <source>Instructs webpack to target a specific environment.</source>
          <target state="translated">특정 환경을 대상으로 웹팩을 지시합니다.</target>
        </trans-unit>
        <trans-unit id="1b9372bc4321ab053be1f6fb2cffd107b3c27a02" translate="yes" xml:space="preserve">
          <source>Instructs webpack to target a specific environment. Defaults to &lt;code&gt;'browserslist'&lt;/code&gt; or to &lt;code&gt;'web'&lt;/code&gt; when no browserslist configuration was found.</source>
          <target state="translated">Instructs webpack to target a specific environment. Defaults to &lt;code&gt;'browserslist'&lt;/code&gt; or to &lt;code&gt;'web'&lt;/code&gt; when no browserslist configuration was found.</target>
        </trans-unit>
        <trans-unit id="7f343bea4465f2b86a1fad15d186f37a531dff0a" translate="yes" xml:space="preserve">
          <source>Instrument JS files with &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-lib-instrument&quot;&gt;istanbul-lib-instrument&lt;/a&gt; for subsequent code coverage reporting</source>
          <target state="translated">후속 코드 적용 범위보고를 위해 &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-lib-instrument&quot;&gt;istanbul-lib-instrument가있는&lt;/a&gt; 계측기 JS 파일</target>
        </trans-unit>
        <trans-unit id="ba08f2b36bcf4ff3f6a275bca9855353f4ccf082" translate="yes" xml:space="preserve">
          <source>Integrating with ES2015 Modules</source>
          <target state="translated">ES2015 모듈과 통합</target>
        </trans-unit>
        <trans-unit id="ffcd1e260d928dca8dd77d403e2e4b74d64f73a9" translate="yes" xml:space="preserve">
          <source>Integrating with ES6+ features</source>
          <target state="translated">Integrating with ES6+ features</target>
        </trans-unit>
        <trans-unit id="248240b14498eacc32b7b4d5b6e2966a04bffdb9" translate="yes" xml:space="preserve">
          <source>Integrating with TypeScript</source>
          <target state="translated">TypeScript와 통합</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="69a0971817cd609ff594b2673e743c6c7d191f12" translate="yes" xml:space="preserve">
          <source>Internal webpack plugins</source>
          <target state="translated">내부 웹팩 플러그인</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="e61b5282e8f791a7516b3ec1c349f42c5bb3fe9d" translate="yes" xml:space="preserve">
          <source>Introduced in &lt;code&gt;0.27.1&lt;/code&gt;. Class names will be camelized, the original class name will be removed from the locals</source>
          <target state="translated">&lt;code&gt;0.27.1&lt;/code&gt; 에 도입되었습니다 . 클래스 이름이 낙타로, 원래 클래스 이름이 지역 주민에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="81cc0ef1f3b4ebd6924b3bcdc04867da15585239" translate="yes" xml:space="preserve">
          <source>Introduced in &lt;code&gt;0.27.1&lt;/code&gt;. Dashes in class names will be camelized, the original class name will be removed from the locals</source>
          <target state="translated">&lt;code&gt;0.27.1&lt;/code&gt; 에 도입되었습니다 . 클래스 이름의 대시는 낙타 화되고 원래 클래스 이름은 로컬에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="25ccad8493fba08b5fa20e3f61dc14ab1deb8ad9" translate="yes" xml:space="preserve">
          <source>Invalidate &lt;code&gt;Watching&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Watching&lt;/code&gt; 무효화</target>
        </trans-unit>
        <trans-unit id="6a9b44369c96eafd66d755034e5ce80488ad8832" translate="yes" xml:space="preserve">
          <source>Invocation</source>
          <target state="translated">Invocation</target>
        </trans-unit>
        <trans-unit id="5b842d75f9b3ed82e9913cce8e8663eec64fef92" translate="yes" xml:space="preserve">
          <source>Invoked when parsing a &lt;code&gt;new&lt;/code&gt; expression.</source>
          <target state="translated">Invoked when parsing a &lt;code&gt;new&lt;/code&gt; expression.</target>
        </trans-unit>
        <trans-unit id="69ca30ff4d89721397e0f7df656c8fa9b8fc10e2" translate="yes" xml:space="preserve">
          <source>Issue 2783 - ContextReplacementPlugin Description</source>
          <target state="translated">문제 2783-ContextReplacementPlugin 설명</target>
        </trans-unit>
        <trans-unit id="9bf749a84c752b873b6faf0e0957912bd1830596" translate="yes" xml:space="preserve">
          <source>Issue 6074 - Add support for more complex selectors for sideEffects</source>
          <target state="translated">문제 6074-부작용에 대한 더 복잡한 선택기에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="17beeabe62cb95c17c070cacb4d2531d2f8eed2b" translate="yes" xml:space="preserve">
          <source>Issue 652</source>
          <target state="translated">652 호</target>
        </trans-unit>
        <trans-unit id="cb1887d5966d3c7ca9387a24c4e1e24d402abc2f" translate="yes" xml:space="preserve">
          <source>It adds polyfills for &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;console&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt; if used. It also binds the built in Node.js replacement modules.</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; , &lt;code&gt;console&lt;/code&gt; , &lt;code&gt;Buffer&lt;/code&gt; 및 &lt;code&gt;global&lt;/code&gt; 사용시 polyfill을 추가합니다 . 또한 내장 Node.js 교체 모듈을 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="616f5800b8dee1dd134fbc4a619fb1031232649d" translate="yes" xml:space="preserve">
          <source>It allows you to pass in a directory to search, a flag indicating whether subdirectories should be searched too, and a regular expression to match files against.</source>
          <target state="translated">검색 할 디렉토리, 서브 디렉토리도 검색해야하는지 여부를 나타내는 플래그 및 파일과 일치하는 정규식을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b3762d716f2577bdb10439f209b1b74df961d33" translate="yes" xml:space="preserve">
          <source>It also adds some info about tree shaking to the generated bundle.</source>
          <target state="translated">It also adds some info about tree shaking to the generated bundle.</target>
        </trans-unit>
        <trans-unit id="dad0ce2906dc315dba34ecbcc803f2a7886b5715" translate="yes" xml:space="preserve">
          <source>It also breaks if the options object cannot be stringified (i.e. circular JSON). Because of this you can have a &lt;code&gt;ident&lt;/code&gt; property in the options object which is used as unique identifier.</source>
          <target state="translated">옵션 객체를 문자열 화 할 수없는 경우에도 중단됩니다 (즉, 원형 JSON). 이 때문에 옵션 개체에 고유 식별자로 사용되는 &lt;code&gt;ident&lt;/code&gt; 속성을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed772508e53094d379861571b26bd9edaf7e3cd6" translate="yes" xml:space="preserve">
          <source>It also ensures that &lt;code&gt;module&lt;/code&gt; is filled with some Node.js stuff if you use it.</source>
          <target state="translated">또한 &lt;code&gt;module&lt;/code&gt; 을 사용하면 모듈 에 Node.js로 채워져 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
