<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="julia">
    <body>
      <group id="julia">
        <trans-unit id="832899cba3915edd6958c4d5bd0a8ff33e15b643" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Corner Downwards / Right Arrow With Corner Down</source>
          <target state="translated">코너가있는 오른쪽 화살표 / 코너가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="f4255818e87d919fccfa934a020f6404df139589" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Dotted Stem</source>
          <target state="translated">점선 줄기가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="8682949a5f8e0d59d51a777b1abb9fe763460c35" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Double Vertical Stroke</source>
          <target state="translated">이중 수직 스트로크가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="22e446f1ecda1ee3348f0afe4b3d1795a87513e7" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Hook / Right Arrow With Hook</source>
          <target state="translated">후크가있는 오른쪽 화살표 / 후크가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="67691d526b8b042fef16480b91f902c577920416" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Loop / Right Arrow With Loop</source>
          <target state="translated">루프가있는 오른쪽 화살표 / 루프가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="86c27810ec963e14a33021c1430a5f828c7ef0d9" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Plus Below</source>
          <target state="translated">오른쪽 아래 화살표가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="17fa8ab8ed4e3c21c0ddf4929d065fb5d74831fe" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Stroke / Right Arrow With Stroke</source>
          <target state="translated">스트로크가있는 오른쪽 화살표 / 스트로크가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="6ed2c7b240c5e6b420b6c821298981253cfb1155" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Tail / Right Arrow With Tail</source>
          <target state="translated">꼬리가있는 오른쪽 화살표 / 꼬리가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="cdab876189f8f47ff37a050725f8924be0e1a3f6" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Tail With Double Vertical Stroke</source>
          <target state="translated">두 배 수직 치기를 가진 꼬리를 가진 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="ce95152b937732660c35c19f9ae29cdb60b1389a" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Tail With Vertical Stroke</source>
          <target state="translated">세로 선으로 꼬리를 가진 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="3da2bd3d2cb5e9760ddcfcc247a4b75891b2b873" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Vertical Stroke</source>
          <target state="translated">수직 스트로크가있는 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="301fe453910c76aeb4d3b8ac73e6c057b6459ea0" translate="yes" xml:space="preserve">
          <source>Rightwards Dashed Arrow / Right Dashed Arrow</source>
          <target state="translated">오른쪽 파선 화살표 / 오른쪽 파선 화살표</target>
        </trans-unit>
        <trans-unit id="a181e06ed3d937975cf54182cde2d06a19a0a326" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow / Right Double Arrow</source>
          <target state="translated">오른쪽 이중 화살표 / 오른쪽 이중 화살표</target>
        </trans-unit>
        <trans-unit id="ad4796a5aa42e495e424703b202972ac779147e7" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow From Bar</source>
          <target state="translated">바에서 오른쪽 이중 화살표</target>
        </trans-unit>
        <trans-unit id="de4ab9b924b0022f4ece1035ff8e7eee104e0ea4" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow With Stroke / Right Double Arrow With Stroke</source>
          <target state="translated">스트로크가있는 오른쪽 이중 화살표 / 스트로크가있는 오른쪽 이중 화살표</target>
        </trans-unit>
        <trans-unit id="1928e5d629c3d16e7f18e8ced6c2d2bc9e299d35" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow With Vertical Stroke</source>
          <target state="translated">수직 스트로크가있는 오른쪽 이중 화살표</target>
        </trans-unit>
        <trans-unit id="09c0938150d3a0e33127756124f9c912f95393be" translate="yes" xml:space="preserve">
          <source>Rightwards Double Dash Arrow</source>
          <target state="translated">오른쪽 더블 대시 화살표</target>
        </trans-unit>
        <trans-unit id="a9ed6a7eaf6bd5603adb529c08dd9067dd7bfc2f" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon Over Leftwards Harpoon / Right Harpoon Over Left Harpoon</source>
          <target state="translated">왼쪽 작살 위 오른쪽 작살 / 왼쪽 작살 위 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="75df3264c5931906eed6918462d3edec644c4cc1" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down Above Leftwards Harpoon With Barb Down</source>
          <target state="translated">아래로 바브와 함께 오른쪽으로 작살 아래로 바브와 함께 오른쪽으로 작살</target>
        </trans-unit>
        <trans-unit id="2d99f5030f529dfaa2fd218a7935dab0476fea05" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down Below Long Dash</source>
          <target state="translated">긴 대시 아래에 바브가있는 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="dae4564fdbeedeb8933fd578d34a9649932931c6" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down From Bar</source>
          <target state="translated">바에서 아래로 바브와 함께 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="d4f8611a67f782394afa7a7204c12ff8253e8c8b" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down To Bar</source>
          <target state="translated">바에서 바까지 아래로 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="6db2f4cec0ad023bc22ecb7794974ac3009a638e" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Downwards / Right Harpoon With Barb Down</source>
          <target state="translated">바브가있는 오른쪽 작살 / 바브가있는 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="0b51f722dfce8516de36dcfec80f8ffc5b4cc371" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up Above Leftwards Harpoon With Barb Up</source>
          <target state="translated">위로 바브와 함께 오른쪽으로 작살 위로 바브와 함께 오른쪽으로 작살</target>
        </trans-unit>
        <trans-unit id="ba431701d8a6e27291777916f15b8f77ab91f55f" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up Above Long Dash</source>
          <target state="translated">긴 대시 위에 바브가있는 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="5d6ce9f461d2f951f89337147843b15cfe50c6e7" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up Above Rightwards Harpoon With Barb Down</source>
          <target state="translated">바브와 함께 오른쪽으로 작살 바브와 함께 오른쪽으로 작살</target>
        </trans-unit>
        <trans-unit id="c45513314496daea73d719f5c3963f9c532ceba5" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up From Bar</source>
          <target state="translated">바에서 바브와 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="a66bfebb113e097a9c49d09031c2b3acb9c7085d" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up To Bar</source>
          <target state="translated">바까지 바브와 함께 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="04254b05f1f060955dda6698031e697ac372e0d2" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Upwards / Right Harpoon With Barb Up</source>
          <target state="translated">바브가있는 오른쪽 작살 / 바브가있는 오른쪽 작살</target>
        </trans-unit>
        <trans-unit id="843a20471b077f2ef514a43897c0128f2a3f6410" translate="yes" xml:space="preserve">
          <source>Rightwards Open-Headed Arrow</source>
          <target state="translated">오른쪽으로 향한 화살표</target>
        </trans-unit>
        <trans-unit id="b064062cfd79b6ded44126ee26943f26d0417f46" translate="yes" xml:space="preserve">
          <source>Rightwards Paired Arrows / Right Paired Arrows</source>
          <target state="translated">오른쪽 쌍 화살표 / 오른쪽 쌍 화살표</target>
        </trans-unit>
        <trans-unit id="acf92aac94ba36ca648ddc9a256aff667197b54f" translate="yes" xml:space="preserve">
          <source>Rightwards Quadruple Arrow</source>
          <target state="translated">오른쪽 쿼드 러플 화살표</target>
        </trans-unit>
        <trans-unit id="d87d0e8164a3a4dfded656a0c357781059024b9e" translate="yes" xml:space="preserve">
          <source>Rightwards Squiggle Arrow / Right Squiggle Arrow</source>
          <target state="translated">오른쪽으로 움직이는 화살표 / 오른쪽으로 움직이는 화살표</target>
        </trans-unit>
        <trans-unit id="470367d73ca3663400f9cb6a52c762a4a6fe5e87" translate="yes" xml:space="preserve">
          <source>Rightwards Triple Arrow / Right Triple Arrow</source>
          <target state="translated">오른쪽 트리플 화살표 / 오른쪽 트리플 화살표</target>
        </trans-unit>
        <trans-unit id="279dd4654466e0f218185af34ebc1583f8324761" translate="yes" xml:space="preserve">
          <source>Rightwards Triple Dash Arrow</source>
          <target state="translated">오른쪽 트리플 트리플 화살표</target>
        </trans-unit>
        <trans-unit id="0785b8c12a4de05b0fadb51c335ce582b5309224" translate="yes" xml:space="preserve">
          <source>Rightwards Two Headed Arrow / Right Two Headed Arrow</source>
          <target state="translated">오른쪽 두 방향 화살표 / 오른쪽 두 방향 화살표</target>
        </trans-unit>
        <trans-unit id="3d51c9695706ee23d584f810f90267d8caa104be" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow From Bar</source>
          <target state="translated">오른쪽에서 양방향 화살표</target>
        </trans-unit>
        <trans-unit id="c497c5b820a9c9619055a9aebc23e8696d63f237" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Double Vertical Stroke</source>
          <target state="translated">이중 수직 스트로크가있는 오른쪽 양방향 화살표</target>
        </trans-unit>
        <trans-unit id="1029fd16cafe3d978872faf099961bd949804b1a" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Tail</source>
          <target state="translated">꼬리를 가진 오른쪽 양방향 화살표</target>
        </trans-unit>
        <trans-unit id="a7da1db773e4d482a1f010437f7bd2cdd72ce30a" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Tail With Double Vertical Stroke</source>
          <target state="translated">이중 세로 스트로크가있는 꼬리가있는 오른쪽 양방향 화살표</target>
        </trans-unit>
        <trans-unit id="f4d1eccfd2f971c3bb730c0368343f894f305fdb" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Tail With Vertical Stroke</source>
          <target state="translated">세로 선이있는 꼬리가있는 오른쪽 양방향 화살표</target>
        </trans-unit>
        <trans-unit id="31449fb707efa49945de17df30dc4de7330b2a84" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Vertical Stroke</source>
          <target state="translated">수직 스트로크가있는 오른쪽 양방향 화살표</target>
        </trans-unit>
        <trans-unit id="fa38080e0282683d391f6c3199d6264c767b7629" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Triple Dash Arrow</source>
          <target state="translated">오른쪽 두 머리 트리플 대시 화살표</target>
        </trans-unit>
        <trans-unit id="15d09bc27e5ed6869c20f03706c8876ca5ec8a1c" translate="yes" xml:space="preserve">
          <source>Rightwards Wave Arrow / Right Wave Arrow</source>
          <target state="translated">오른쪽 파 화살표 / 오른쪽 파 화살표</target>
        </trans-unit>
        <trans-unit id="182bdee55e0d7c0389500718b91bae24ab57bcb7" translate="yes" xml:space="preserve">
          <source>Rightwards White Arrow / White Right Arrow</source>
          <target state="translated">오른쪽 흰색 화살표 / 흰색 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="96ddaccf581f483cbbf4d46e00691e51a167fc55" translate="yes" xml:space="preserve">
          <source>Ring</source>
          <target state="translated">Ring</target>
        </trans-unit>
        <trans-unit id="2d1c92041c181eeb844c0d4e96d93e11c7bb8523" translate="yes" xml:space="preserve">
          <source>Ring Equal To</source>
          <target state="translated">동등한 반지</target>
        </trans-unit>
        <trans-unit id="67717ba5a31c3a1f64e0f143b9a5235d3a690d1b" translate="yes" xml:space="preserve">
          <source>Ring In Equal To</source>
          <target state="translated">동등한 반지</target>
        </trans-unit>
        <trans-unit id="9c238e94bdb612e16c030b4945e29b3d065265a4" translate="yes" xml:space="preserve">
          <source>Ring Operator</source>
          <target state="translated">링 오퍼레이터</target>
        </trans-unit>
        <trans-unit id="ee4f41ef9745b375075cf992e8f24940c54fcca6" translate="yes" xml:space="preserve">
          <source>Rising Diagonal Crossing Falling Diagonal</source>
          <target state="translated">상승 대각선 교차점 떨어지는 대각선</target>
        </trans-unit>
        <trans-unit id="7484bc1d387b463f00c398af682e635c032fd5cc" translate="yes" xml:space="preserve">
          <source>Rising Diagonal Crossing South East Arrow</source>
          <target state="translated">상승 대각선 교차점 남동쪽 화살표</target>
        </trans-unit>
        <trans-unit id="af2a305fefcf6c7e976e5833a5a3644ac4e76e4f" translate="yes" xml:space="preserve">
          <source>Roasted Sweet Potato</source>
          <target state="translated">구운 고구마</target>
        </trans-unit>
        <trans-unit id="186cd74009911bf433778c1fafff6ce90dd47b69" translate="yes" xml:space="preserve">
          <source>Rocket</source>
          <target state="translated">Rocket</target>
        </trans-unit>
        <trans-unit id="da63574fe23c87c62405c97a966e8ba06b040460" translate="yes" xml:space="preserve">
          <source>Roller Coaster</source>
          <target state="translated">롤러 코스터</target>
        </trans-unit>
        <trans-unit id="8fe188f9ee5b7784aebae57ac346a119941036f0" translate="yes" xml:space="preserve">
          <source>Rooster</source>
          <target state="translated">Rooster</target>
        </trans-unit>
        <trans-unit id="51ad0eae3f66ecd3c72bfac9373650513d6f6603" translate="yes" xml:space="preserve">
          <source>Rose</source>
          <target state="translated">Rose</target>
        </trans-unit>
        <trans-unit id="19c66eab822c804bb4fed13ba638206347060ca7" translate="yes" xml:space="preserve">
          <source>Rotate matrix &lt;code&gt;A&lt;/code&gt; 180 degrees an integer &lt;code&gt;k&lt;/code&gt; number of times. If &lt;code&gt;k&lt;/code&gt; is even, this is equivalent to a &lt;code&gt;copy&lt;/code&gt;.</source>
          <target state="translated">행렬 &lt;code&gt;A&lt;/code&gt; 를 정수 &lt;code&gt;k&lt;/code&gt; 만큼 180도 회전 시킵니다. 경우 &lt;code&gt;k&lt;/code&gt; 짝수이고, 이것은 동등 &lt;code&gt;copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6df04166a9ce877c0e306030444bd5ca0e4aaa8a" translate="yes" xml:space="preserve">
          <source>Rotate matrix &lt;code&gt;A&lt;/code&gt; 180 degrees.</source>
          <target state="translated">행렬 &lt;code&gt;A&lt;/code&gt; 를 180도 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="2b8b860273fadee80a14a245e363252e7586c6b6" translate="yes" xml:space="preserve">
          <source>Rotate matrix &lt;code&gt;A&lt;/code&gt; left 90 degrees.</source>
          <target state="translated">행렬 &lt;code&gt;A&lt;/code&gt; 를 왼쪽으로 90도 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="eebd2dfc92f1a10f6f4e237c7fc445cdb4617d73" translate="yes" xml:space="preserve">
          <source>Rotate matrix &lt;code&gt;A&lt;/code&gt; right 90 degrees.</source>
          <target state="translated">행렬 &lt;code&gt;A&lt;/code&gt; 를 오른쪽으로 90도 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="950b301d09028005b37b1f75d558be3a58a244b4" translate="yes" xml:space="preserve">
          <source>Round &lt;code&gt;x&lt;/code&gt; down to the nearest multiple of &lt;code&gt;precision&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;precision&lt;/code&gt; are different subtypes of &lt;code&gt;Period&lt;/code&gt;, the return value will have the same type as &lt;code&gt;precision&lt;/code&gt;.</source>
          <target state="translated">라운드 &lt;code&gt;x&lt;/code&gt; 의 가장 가까운 배수로 &lt;code&gt;precision&lt;/code&gt; . 경우 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;precision&lt;/code&gt; 의 다른 아형있는 &lt;code&gt;Period&lt;/code&gt; , 반환 값은 같은 유형있을 것이다 &lt;code&gt;precision&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="806aa1dd5d26e647dfb32803022c1110cbc922aa" translate="yes" xml:space="preserve">
          <source>Round &lt;code&gt;x&lt;/code&gt; to the nearest multiple of &lt;code&gt;precision&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;precision&lt;/code&gt; are different subtypes of &lt;code&gt;Period&lt;/code&gt;, the return value will have the same type as &lt;code&gt;precision&lt;/code&gt;. By default (&lt;code&gt;RoundNearestTiesUp&lt;/code&gt;), ties (e.g., rounding 90 minutes to the nearest hour) will be rounded up.</source>
          <target state="translated">라운드 &lt;code&gt;x&lt;/code&gt; 의 가장 가까운 배수로에 &lt;code&gt;precision&lt;/code&gt; . 경우 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;precision&lt;/code&gt; 의 다른 아형있는 &lt;code&gt;Period&lt;/code&gt; , 반환 값은 같은 유형있을 것이다 &lt;code&gt;precision&lt;/code&gt; . 기본적으로 ( &lt;code&gt;RoundNearestTiesUp&lt;/code&gt; ) 관계 (예 : 90 분을 가장 가까운 시간으로 반올림)는 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="184e5e48161d2b10a91739f550bbdc76e1f4eb73" translate="yes" xml:space="preserve">
          <source>Round &lt;code&gt;x&lt;/code&gt; up to the nearest multiple of &lt;code&gt;precision&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;precision&lt;/code&gt; are different subtypes of &lt;code&gt;Period&lt;/code&gt;, the return value will have the same type as &lt;code&gt;precision&lt;/code&gt;.</source>
          <target state="translated">라운드 &lt;code&gt;x&lt;/code&gt; 의 가장 가까운 배수로까지 &lt;code&gt;precision&lt;/code&gt; . 경우 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;precision&lt;/code&gt; 의 다른 아형있는 &lt;code&gt;Period&lt;/code&gt; , 반환 값은 같은 유형있을 것이다 &lt;code&gt;precision&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f5bfdfdba4fc645c56ae53dd1aadff188a1e991" translate="yes" xml:space="preserve">
          <source>Round Pushpin</source>
          <target state="translated">둥근 압정</target>
        </trans-unit>
        <trans-unit id="905cc3792492961c10eb158788a7c9f956d57aa5" translate="yes" xml:space="preserve">
          <source>Rounding</source>
          <target state="translated">Rounding</target>
        </trans-unit>
        <trans-unit id="be96a1f11db59080b63a2fcfc27308c360b380f7" translate="yes" xml:space="preserve">
          <source>Rounding Epoch</source>
          <target state="translated">반올림 Epoch</target>
        </trans-unit>
        <trans-unit id="91c2b98882f2f4377a32a58791d08312dae0971f" translate="yes" xml:space="preserve">
          <source>Rounding Functions</source>
          <target state="translated">반올림 함수</target>
        </trans-unit>
        <trans-unit id="25ee26d323ca3a1b3b01ce20f74f98a37ba2d8a9" translate="yes" xml:space="preserve">
          <source>Rounding functions</source>
          <target state="translated">반올림 함수</target>
        </trans-unit>
        <trans-unit id="3adc86da984154dd80b4cf259ef82aed4844823a" translate="yes" xml:space="preserve">
          <source>Rounding modes</source>
          <target state="translated">반올림 모드</target>
        </trans-unit>
        <trans-unit id="d70e8713f24bf68dd8a7a2e18c3e215245ce7705" translate="yes" xml:space="preserve">
          <source>Rounding should generally behave as expected, but there are a few cases in which the expected behaviour is not obvious.</source>
          <target state="translated">반올림은 일반적으로 예상대로 작동해야하지만 예상되는 동작이 분명하지 않은 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e48c77f6816bb1004201172f0b0b5bc9075927a" translate="yes" xml:space="preserve">
          <source>Rounding to a &lt;code&gt;precision&lt;/code&gt; of &lt;code&gt;Month&lt;/code&gt;s or &lt;code&gt;Year&lt;/code&gt;s is not supported, as these &lt;code&gt;Period&lt;/code&gt;s are of inconsistent length.</source>
          <target state="translated">이 &lt;code&gt;Period&lt;/code&gt; 의 길이가 일치하지 않기 때문에 &lt;code&gt;Month&lt;/code&gt; s 또는 &lt;code&gt;Year&lt;/code&gt; s 의 &lt;code&gt;precision&lt;/code&gt; 로 반올림하는 것은 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="969bf8e59f53f9cabeb55d7c91e9650222afdb17" translate="yes" xml:space="preserve">
          <source>Rounding to specified digits in bases other than 2 can be inexact when operating on binary floating point numbers. For example, the &lt;a href=&quot;../numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt; value represented by &lt;code&gt;1.15&lt;/code&gt; is actually &lt;em&gt;less&lt;/em&gt; than 1.15, yet will be rounded to 1.2.</source>
          <target state="translated">이진 부동 소수점 숫자에서 작동 할 때 2 이외의 밑으로 지정된 숫자로 반올림하는 것은 정확하지 않을 수 있습니다. 예를 들어, &lt;a href=&quot;../numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; 에&lt;/a&gt; 의해 표시되는 값이 &lt;code&gt;1.15&lt;/code&gt; 실제로 &lt;em&gt;이하&lt;/em&gt; 1.15 이상이면서 1.2로 반올림 될 것이다.</target>
        </trans-unit>
        <trans-unit id="54eb3aeea6371c9c20709bc0ea92d5e22b108fb0" translate="yes" xml:space="preserve">
          <source>Rounding.RoundDown</source>
          <target state="translated">Rounding.RoundDown</target>
        </trans-unit>
        <trans-unit id="d2bf77d7c19e98c3b1f72c072e694a730b8fa460" translate="yes" xml:space="preserve">
          <source>Rounding.RoundFromZero</source>
          <target state="translated">Rounding.RoundFromZero</target>
        </trans-unit>
        <trans-unit id="43e6178f500b01c619da462b42c437c448078f40" translate="yes" xml:space="preserve">
          <source>Rounding.RoundNearest</source>
          <target state="translated">Rounding.RoundNearest</target>
        </trans-unit>
        <trans-unit id="af0407e47872ee12bbfff1b20bc1bb5ddbae7673" translate="yes" xml:space="preserve">
          <source>Rounding.RoundNearestTiesAway</source>
          <target state="translated">Rounding.RoundNearestTiesAway</target>
        </trans-unit>
        <trans-unit id="e4c02ce6201fe9f4eab7b951ae79893dabcf43be" translate="yes" xml:space="preserve">
          <source>Rounding.RoundNearestTiesUp</source>
          <target state="translated">Rounding.RoundNearestTiesUp</target>
        </trans-unit>
        <trans-unit id="1b154fffd613d1a1b65672f2536d2853c3544084" translate="yes" xml:space="preserve">
          <source>Rounding.RoundToZero</source>
          <target state="translated">Rounding.RoundToZero</target>
        </trans-unit>
        <trans-unit id="87c748ce95ae6ebcd643a8d33032fa12cca26beb" translate="yes" xml:space="preserve">
          <source>Rounding.RoundUp</source>
          <target state="translated">Rounding.RoundUp</target>
        </trans-unit>
        <trans-unit id="327c072adb750d94ab40bd93ee140a3f4642f6bd" translate="yes" xml:space="preserve">
          <source>Rounding.RoundingMode</source>
          <target state="translated">Rounding.RoundingMode</target>
        </trans-unit>
        <trans-unit id="270444162e3b213d099a0132ad3d49d8ccc44ab7" translate="yes" xml:space="preserve">
          <source>Rounding.get_zero_subnormals()</source>
          <target state="translated">Rounding.get_zero_subnormals()</target>
        </trans-unit>
        <trans-unit id="d57e060058d0137ed08c24c6ef359c75f33e3748" translate="yes" xml:space="preserve">
          <source>Rounding.rounding()</source>
          <target state="translated">Rounding.rounding()</target>
        </trans-unit>
        <trans-unit id="37a536732f4d85663e2def5247de385a0549ab6d" translate="yes" xml:space="preserve">
          <source>Rounding.set_zero_subnormals()</source>
          <target state="translated">Rounding.set_zero_subnormals()</target>
        </trans-unit>
        <trans-unit id="295b01c2ce51fdb5422753f746bc07507fc7b6ec" translate="yes" xml:space="preserve">
          <source>Rounding.setrounding()</source>
          <target state="translated">Rounding.setrounding()</target>
        </trans-unit>
        <trans-unit id="3e0838fa099431cacc2bb6ec77bc19df939c0ab1" translate="yes" xml:space="preserve">
          <source>Rounds away from zero. This rounding mode may only be used with &lt;code&gt;T == BigFloat&lt;/code&gt; inputs to &lt;a href=&quot;#Base.round-Tuple%7BType,Any%7D&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">0에서 멀어집니다. 라운딩 모드에서만 사용할 수 &lt;code&gt;T == BigFloat&lt;/code&gt; 대한 입력 &lt;a href=&quot;#Base.round-Tuple%7BType,Any%7D&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6295c23044627b9a4ba44ac28d83a702dacf38d9" translate="yes" xml:space="preserve">
          <source>Rounds away from zero. This rounding mode may only be used with &lt;code&gt;T == BigFloat&lt;/code&gt; inputs to &lt;code&gt;round&lt;/code&gt;.</source>
          <target state="translated">0에서 반올림합니다. 이 반올림 모드는 &lt;code&gt;round&lt;/code&gt; &lt;code&gt;T == BigFloat&lt;/code&gt; 입력 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ad9a187e74912fc9825345d9016ef6ee1d99385" translate="yes" xml:space="preserve">
          <source>Rounds the number &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">숫자 &lt;code&gt;x&lt;/code&gt; 를 반올림합니다 .</target>
        </trans-unit>
        <trans-unit id="2af1cd25fc58c258d55ac9bb3c41f5ef68d5f815" translate="yes" xml:space="preserve">
          <source>Rounds to nearest integer, with ties rounded away from zero (C/C++ &lt;a href=&quot;#Base.round-Tuple%7BType,Any%7D&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt; behaviour).</source>
          <target state="translated">0에서 멀어지는 동점을 사용하여 가장 가까운 정수로 반올림합니다 (C / C ++ &lt;a href=&quot;#Base.round-Tuple%7BType,Any%7D&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; 동작).</target>
        </trans-unit>
        <trans-unit id="1fcd8d8e848e436ee74afc696a2bb0930457434b" translate="yes" xml:space="preserve">
          <source>Rounds to nearest integer, with ties rounded away from zero (C/C++ &lt;code&gt;round&lt;/code&gt; behaviour).</source>
          <target state="translated">가장 가까운 정수로 반올림하고 타이를 0에서 반올림합니다 (C / C ++ &lt;code&gt;round&lt;/code&gt; 동작).</target>
        </trans-unit>
        <trans-unit id="0a1f24449ef0329d14649ef886d5d2848fdfe463" translate="yes" xml:space="preserve">
          <source>Rounds to nearest integer, with ties rounded toward positive infinity (Java/JavaScript &lt;a href=&quot;#Base.round-Tuple%7BType,Any%7D&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt; behaviour).</source>
          <target state="translated">가장 가까운 정수로 반올림하고 동점은 양의 무한대로 반올림합니다 (Java / JavaScript &lt;a href=&quot;#Base.round-Tuple%7BType,Any%7D&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; 동작).</target>
        </trans-unit>
        <trans-unit id="ba24e7fa3489d47e6d5edab2a8d36853a326cb93" translate="yes" xml:space="preserve">
          <source>Rounds to nearest integer, with ties rounded toward positive infinity (Java/JavaScript &lt;code&gt;round&lt;/code&gt; behaviour).</source>
          <target state="translated">관계와 가장 가까운 정수로 반올림은 무한대 (자바 / 자바 스크립트를 향해 둥글게 &lt;code&gt;round&lt;/code&gt; 행동).</target>
        </trans-unit>
        <trans-unit id="16b9a685a83d4fcea882d5d2634e866d9970a8a0" translate="yes" xml:space="preserve">
          <source>Rowboat</source>
          <target state="translated">Rowboat</target>
        </trans-unit>
        <trans-unit id="d1a1af1556979f617e5e03ffbb0eee30d6be2ed7" translate="yes" xml:space="preserve">
          <source>Rugby Football</source>
          <target state="translated">럭비 풋볼</target>
        </trans-unit>
        <trans-unit id="3b4daedafb698af91ce57f897e4ef954df406e38" translate="yes" xml:space="preserve">
          <source>Rule-Delayed</source>
          <target state="translated">Rule-Delayed</target>
        </trans-unit>
        <trans-unit id="677035a79de122b29aedffede8d6fcee9d905086" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;command&lt;/code&gt; and return the resulting output as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 실행 하고 결과 출력을 &lt;code&gt;String&lt;/code&gt; 으로 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="622a683f95bf94d9769a85c750a71becde12400d" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;command&lt;/code&gt; and return the resulting output as an array of bytes.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 실행 하고 결과 출력을 바이트 배열로 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="c1945c0d125a4b055515fa951a86997d97df7748" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;command&lt;/code&gt; asynchronously. Like &lt;code&gt;open(command, stdio; read, write)&lt;/code&gt; except specifying the read and write flags via a mode string instead of keyword arguments. Possible mode strings are:</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 비동기 적으로 실행하십시오 . 마찬가지로 &lt;code&gt;open(command, stdio; read, write)&lt;/code&gt; 대신 키워드 인자의 모드 문자열을 통해 읽기 및 쓰기 플래그를 지정 제외. 가능한 모드 문자열은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2565d55b97a5fa380837b3af04ccf9b2a7dc7db5" translate="yes" xml:space="preserve">
          <source>Run a command object, constructed with backticks (see the &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs&quot;&gt;Running External Programs&lt;/a&gt; section in the manual), and tell whether it was successful (exited with a code of 0). An exception is raised if the process cannot be started.</source>
          <target state="translated">백틱으로 구성된 명령 개체를 실행하고 ( 매뉴얼의 &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs&quot;&gt;외부 프로그램 실행&lt;/a&gt; 섹션 참조 ) 성공했는지 여부를 알려줍니다 (코드 0으로 종료 됨). 프로세스를 시작할 수 없으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d98cc1babc79f9eb34551b90667a92f256fde866" translate="yes" xml:space="preserve">
          <source>Run a command object, constructed with backticks (see the &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs&quot;&gt;Running External Programs&lt;/a&gt; section in the manual). Throws an error if anything goes wrong, including the process exiting with a non-zero status (when &lt;code&gt;wait&lt;/code&gt; is true).</source>
          <target state="translated">백틱으로 구성된 명령 개체를 실행합니다 ( 설명서의 &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs&quot;&gt;외부 프로그램 실행&lt;/a&gt; 섹션 참조 ). 0이 아닌 상태로 종료되는 프로세스를 포함하여 문제가 발생하면 오류가 발생합니다 ( &lt;code&gt;wait&lt;/code&gt; 가 true 인 경우).</target>
        </trans-unit>
        <trans-unit id="16ea59daecbfee665ec57793ab03cc61d6a28804" translate="yes" xml:space="preserve">
          <source>Run a command object, constructed with backticks (see the &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs-1&quot;&gt;Running External Programs&lt;/a&gt; section in the manual), and tell whether it was successful (exited with a code of 0). An exception is raised if the process cannot be started.</source>
          <target state="translated">백틱으로 구성된 명령 객체를 실행하고 ( 설명서의 &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs-1&quot;&gt;외부 프로그램 실행&lt;/a&gt; 섹션 참조 ) 성공 여부를 알려줍니다 (코드 0으로 종료). 프로세스를 시작할 수없는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="21540938e84c1e5bee00d9247380e6601f916473" translate="yes" xml:space="preserve">
          <source>Run a command object, constructed with backticks (see the &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs-1&quot;&gt;Running External Programs&lt;/a&gt; section in the manual). Throws an error if anything goes wrong, including the process exiting with a non-zero status (when &lt;code&gt;wait&lt;/code&gt; is true).</source>
          <target state="translated">백틱으로 구성된 명령 객체를 실행합니다 ( 설명서의 &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs-1&quot;&gt;외부 프로그램 실행&lt;/a&gt; 섹션 참조 ). 프로세스가 0이 아닌 상태로 종료하는 등 ( &lt;code&gt;wait&lt;/code&gt; 상태 인 경우) 오류가 발생하면 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="392d04338114e2da8d2a8dbf42b3d0e93c331b23" translate="yes" xml:space="preserve">
          <source>Run analysis on the branches pointed to by the annotated branch tips &lt;code&gt;anns&lt;/code&gt; and determine under what circumstances they can be merged. For instance, if &lt;code&gt;anns[1]&lt;/code&gt; is simply an ancestor of &lt;code&gt;ann[2]&lt;/code&gt;, then &lt;code&gt;merge_analysis&lt;/code&gt; will report that a fast-forward merge is possible.</source>
          <target state="translated">분기에 실행 분석은 주석 가지 팁가 가리키는 &lt;code&gt;anns&lt;/code&gt; 하고 병합 할 수있는 상황에서 결정합니다. 예를 들어, &lt;code&gt;anns[1]&lt;/code&gt; 이 단순히 &lt;code&gt;ann[2]&lt;/code&gt; 의 조상 이면 &lt;code&gt;merge_analysis&lt;/code&gt; 는 빨리 감기 병합이 가능하다고보고합니다.</target>
        </trans-unit>
        <trans-unit id="e53957a2626efa755cb71cbcaf590ac07586ae3c" translate="yes" xml:space="preserve">
          <source>Run multiple iterators at the same time, until any of them is exhausted. The value type of the &lt;code&gt;zip&lt;/code&gt; iterator is a tuple of values of its subiterators.</source>
          <target state="translated">모두 반복 될 때까지 여러 반복기를 동시에 실행하십시오. &lt;code&gt;zip&lt;/code&gt; 반복기 의 값 유형은 하위 반복기 값의 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="7eaa503fbb21f406157a7922dcfaa0df92ef7141" translate="yes" xml:space="preserve">
          <source>Run processes on hosts listed in &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 에 나열된 호스트에서 프로세스 실행</target>
        </trans-unit>
        <trans-unit id="63ae5e3513b47255ad0917186f4421b3881b0bdb" translate="yes" xml:space="preserve">
          <source>Run some code when a given block of code exits, regardless of how it exits. For example, here is how we can guarantee that an opened file is closed:</source>
          <target state="translated">종료 방법에 관계없이 특정 코드 블록이 종료 될 때 일부 코드를 실행하십시오. 예를 들어, 열린 파일이 닫히도록 보장하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8bcb221ef4e8b252c0af93e6fa2d82ad7d0bc04a" translate="yes" xml:space="preserve">
          <source>Run the Julia unit tests listed in &lt;code&gt;tests&lt;/code&gt;, which can be either a string or an array of strings, using &lt;code&gt;ncores&lt;/code&gt; processors. If &lt;code&gt;exit_on_error&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, when one test fails, all remaining tests in other files will still be run; they are otherwise discarded, when &lt;code&gt;exit_on_error == true&lt;/code&gt;. If &lt;code&gt;revise&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;Revise&lt;/code&gt; package is used to load any modifications to &lt;code&gt;Base&lt;/code&gt; or to the standard libraries before running the tests. If a seed is provided via the keyword argument, it is used to seed the global RNG in the context where the tests are run; otherwise the seed is chosen randomly.</source>
          <target state="translated">나열된 줄리아 단위 테스트 실행 &lt;code&gt;tests&lt;/code&gt; 문자열 또는하여 문자열의 배열이 될 수 &lt;code&gt;ncores&lt;/code&gt; 의 프로세서. 경우 &lt;code&gt;exit_on_error&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; 하나 개의 테스트가 실패 할 때, 다른 파일에 남아있는 모든 테스트는 여전히 실행됩니다; 그렇지 않으면 &lt;code&gt;exit_on_error == true&lt;/code&gt; 일 때 폐기됩니다 . 경우 &lt;code&gt;revise&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 의 &lt;code&gt;Revise&lt;/code&gt; 패키지에 대한 수정로드하는 데 사용되는 &lt;code&gt;Base&lt;/code&gt; 테스트를 실행하기 전에 표준 라이브러리 나에 있습니다. 시드가 키워드 인수를 통해 제공되는 경우 테스트가 실행되는 컨텍스트에서 전역 RNG를 시드하는 데 사용됩니다. 그렇지 않으면 시드가 무작위로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="8d0da77563384f850ca0a82f39e1765ffd4b9d0c" translate="yes" xml:space="preserve">
          <source>Run the Julia unit tests listed in &lt;code&gt;tests&lt;/code&gt;, which can be either a string or an array of strings, using &lt;code&gt;ncores&lt;/code&gt; processors. If &lt;code&gt;exit_on_error&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, when one test fails, all remaining tests in other files will still be run; they are otherwise discarded, when &lt;code&gt;exit_on_error == true&lt;/code&gt;. If a seed is provided via the keyword argument, it is used to seed the global RNG in the context where the tests are run; otherwise the seed is chosen randomly.</source>
          <target state="translated">나열된 줄리아 단위 테스트 실행 &lt;code&gt;tests&lt;/code&gt; 문자열 또는하여 문자열의 배열이 될 수 &lt;code&gt;ncores&lt;/code&gt; 의 프로세서. 경우 &lt;code&gt;exit_on_error&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; 하나 개의 테스트가 실패 할 때, 다른 파일에 남아있는 모든 테스트는 여전히 실행됩니다; &lt;code&gt;exit_on_error == true&lt;/code&gt; 일 경우에는 버려집니다 . 시드가 키워드 인수를 통해 제공되는 경우 테스트가 실행되는 컨텍스트에서 글로벌 RNG를 시드하는 데 사용됩니다. 그렇지 않으면 씨앗이 무작위로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="adb283f9deed250350312ec1e645d53db1070536" translate="yes" xml:space="preserve">
          <source>Run the function &lt;code&gt;f&lt;/code&gt; while redirecting &lt;a href=&quot;#Base.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;stream&lt;/code&gt;. Upon completion, &lt;a href=&quot;#Base.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt; is restored to its prior setting.</source>
          <target state="translated">&lt;a href=&quot;#Base.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;stream&lt;/code&gt; 으로 경로 재지 정하는 동안 함수 &lt;code&gt;f&lt;/code&gt; 를 실행하십시오 . 완료되면 &lt;a href=&quot;#Base.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt; 가 이전 설정으로 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="0f600ac757eb4b9138ee9db7039bb184ba38f6de" translate="yes" xml:space="preserve">
          <source>Run the function &lt;code&gt;f&lt;/code&gt; while redirecting &lt;a href=&quot;#Base.stdin&quot;&gt;&lt;code&gt;stdin&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;stream&lt;/code&gt;. Upon completion, &lt;a href=&quot;#Base.stdin&quot;&gt;&lt;code&gt;stdin&lt;/code&gt;&lt;/a&gt; is restored to its prior setting.</source>
          <target state="translated">&lt;a href=&quot;#Base.stdin&quot;&gt; &lt;code&gt;stdin&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;stream&lt;/code&gt; 으로 경로 재지 정하는 동안 함수 &lt;code&gt;f&lt;/code&gt; 를 실행하십시오 . 완료되면 &lt;a href=&quot;#Base.stdin&quot;&gt; &lt;code&gt;stdin&lt;/code&gt; &lt;/a&gt; 은 이전 설정으로 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="0351e0a53e15d8f8aae4a96e3ee82a6dd05991cf" translate="yes" xml:space="preserve">
          <source>Run the function &lt;code&gt;f&lt;/code&gt; while redirecting &lt;a href=&quot;#Base.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;stream&lt;/code&gt;. Upon completion, &lt;a href=&quot;#Base.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt; is restored to its prior setting.</source>
          <target state="translated">&lt;a href=&quot;#Base.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;stream&lt;/code&gt; 으로 리디렉션하는 동안 함수 &lt;code&gt;f&lt;/code&gt; 를 실행하십시오 . 완료되면 &lt;a href=&quot;#Base.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; &lt;/a&gt; 이 이전 설정으로 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="d854c4800a2131af35c9126e669d3443f76b7d31" translate="yes" xml:space="preserve">
          <source>Run the functions once to JIT-compile and &lt;a href=&quot;../../base/base/index#Base.@time&quot;&gt;&lt;code&gt;@time&lt;/code&gt;&lt;/a&gt; them on the second run:</source>
          <target state="translated">함수를 한 번 실행하여 JIT 컴파일하고 두 번째 실행에서 &lt;a href=&quot;../../base/base/index#Base.@time&quot;&gt; &lt;code&gt;@time&lt;/code&gt; &lt;/a&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="ae2e3ae79ba6ce08eade8f39b998b24f9437d97b" translate="yes" xml:space="preserve">
          <source>Runner</source>
          <target state="translated">Runner</target>
        </trans-unit>
        <trans-unit id="287388d345c5d78805bb6282645b45a627346240" translate="yes" xml:space="preserve">
          <source>Running External Programs</source>
          <target state="translated">외부 프로그램 실행</target>
        </trans-unit>
        <trans-unit id="ecff862fe5fa6f9e0f453572ed9b4a9d25adc4c2" translate="yes" xml:space="preserve">
          <source>Running Shirt With Sash</source>
          <target state="translated">허리띠와 셔츠를 실행</target>
        </trans-unit>
        <trans-unit id="16c6a6acaece807a75f148182b2d5c092bbabc24" translate="yes" xml:space="preserve">
          <source>Running a Julia script using &lt;code&gt;julia file.jl&lt;/code&gt; does not throw &lt;a href=&quot;../../base/base/index#Core.InterruptException&quot;&gt;&lt;code&gt;InterruptException&lt;/code&gt;&lt;/a&gt; when you try to terminate it with CTRL-C (SIGINT). To run a certain code before terminating a Julia script, which may or may not be caused by CTRL-C, use &lt;a href=&quot;../../base/base/index#Base.atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt;. Alternatively, you can use &lt;code&gt;julia -e 'include(popfirst!(ARGS))' file.jl&lt;/code&gt; to execute a script while being able to catch &lt;code&gt;InterruptException&lt;/code&gt; in the &lt;a href=&quot;../../base/base/index#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">&lt;code&gt;julia file.jl&lt;/code&gt; 을 사용하여 Julia 스크립트를 실행하면 CTRL-C (SIGINT)로 종료하려고 할 때 &lt;a href=&quot;../../base/base/index#Core.InterruptException&quot;&gt; &lt;code&gt;InterruptException&lt;/code&gt; 이&lt;/a&gt; 발생 하지 않습니다 . CTRL-C로 인해 발생할 수 있거나없는 Julia 스크립트를 종료하기 전에 특정 코드를 실행하려면 &lt;a href=&quot;../../base/base/index#Base.atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 . 또는 &lt;code&gt;julia -e 'include(popfirst!(ARGS))' file.jl&lt;/code&gt; 을 사용 하여 &lt;a href=&quot;../../base/base/index#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; 블록 에서 &lt;code&gt;InterruptException&lt;/code&gt; 을 잡을 수있는 동안 스크립트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dfd784f10b394f7b55209e356417c693e165b67" translate="yes" xml:space="preserve">
          <source>S (scalar)</source>
          <target state="translated">S (스칼라)</target>
        </trans-unit>
        <trans-unit id="9faed964fef80190696bb2b0b98ed45cb7120c93" translate="yes" xml:space="preserve">
          <source>SHA</source>
          <target state="translated">SHA</target>
        </trans-unit>
        <trans-unit id="dd648df182bf0b8afb6b7ceae7e96b0cdb483768" translate="yes" xml:space="preserve">
          <source>SIMD Support</source>
          <target state="translated">SIMD 지원</target>
        </trans-unit>
        <trans-unit id="50748d0a84ba280de7f56d8272daee91e4d5253c" translate="yes" xml:space="preserve">
          <source>SIMD Values</source>
          <target state="translated">SIMD 값</target>
        </trans-unit>
        <trans-unit id="914da123e62e97d0004b2aac660754b9b2fa0fed" translate="yes" xml:space="preserve">
          <source>SSH agent</source>
          <target state="translated">SSH 에이전트</target>
        </trans-unit>
        <trans-unit id="f451485dfae3e33a1d33d7b2baba5ed5b99a56b5" translate="yes" xml:space="preserve">
          <source>SSH credential type</source>
          <target state="translated">SSH 자격 증명 유형</target>
        </trans-unit>
        <trans-unit id="0a38aa4ccb16a97976111c679a1bb135996579cd" translate="yes" xml:space="preserve">
          <source>SSH private/public key pair</source>
          <target state="translated">SSH 개인 / 공개 키 쌍</target>
        </trans-unit>
        <trans-unit id="950615819f3a7970b3e5eaf04967ce0a92bb2835" translate="yes" xml:space="preserve">
          <source>ST</source>
          <target state="translated">ST</target>
        </trans-unit>
        <trans-unit id="4152ec29594e45891b3c2684137ab38242194d18" translate="yes" xml:space="preserve">
          <source>SY</source>
          <target state="translated">SY</target>
        </trans-unit>
        <trans-unit id="ceb00f057216181444838b9c084220b249f867a9" translate="yes" xml:space="preserve">
          <source>Safe use of Finalizers</source>
          <target state="translated">Finalizer의 안전한 사용</target>
        </trans-unit>
        <trans-unit id="15389534299e2f41d379bccb60706c01df5df279" translate="yes" xml:space="preserve">
          <source>Sagittarius</source>
          <target state="translated">Sagittarius</target>
        </trans-unit>
        <trans-unit id="13ee51f8475ed2e72105d3864ebb527945438e2c" translate="yes" xml:space="preserve">
          <source>Sailboat</source>
          <target state="translated">Sailboat</target>
        </trans-unit>
        <trans-unit id="717c3de983418f0186833bf28354da1db871690d" translate="yes" xml:space="preserve">
          <source>Sake Bottle And Cup</source>
          <target state="translated">술병과 컵</target>
        </trans-unit>
        <trans-unit id="ea59232ad9913567d0ee40418c2b198945989908" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.eigen&quot;&gt;&lt;code&gt;eigen&lt;/code&gt;&lt;/a&gt;, but saves space by overwriting the input &lt;code&gt;A&lt;/code&gt; (and &lt;code&gt;B&lt;/code&gt;), instead of creating a copy.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.eigen&quot;&gt; &lt;code&gt;eigen&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 사본을 작성하는 대신 입력 &lt;code&gt;A&lt;/code&gt; (및 &lt;code&gt;B&lt;/code&gt; ) 를 겹쳐 써서 공간을 절약합니다 .</target>
        </trans-unit>
        <trans-unit id="8daead1b30e7469b9fd87289f386ab9632100126" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt;&lt;code&gt;eigvals&lt;/code&gt;&lt;/a&gt;, but saves space by overwriting the input &lt;code&gt;A&lt;/code&gt; (and &lt;code&gt;B&lt;/code&gt;), instead of creating copies.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt; &lt;code&gt;eigvals&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 사본을 작성하는 대신 입력 &lt;code&gt;A&lt;/code&gt; (및 &lt;code&gt;B&lt;/code&gt; ) 를 겹쳐 써서 공간을 절약합니다 .</target>
        </trans-unit>
        <trans-unit id="06dba0a7b0e585c2c02717d21afb94c89090713e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt;&lt;code&gt;eigvals&lt;/code&gt;&lt;/a&gt;, but saves space by overwriting the input &lt;code&gt;A&lt;/code&gt;, instead of creating a copy. &lt;code&gt;irange&lt;/code&gt; is a range of eigenvalue &lt;em&gt;indices&lt;/em&gt; to search for - for instance, the 2nd to 8th eigenvalues.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt; &lt;code&gt;eigvals&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 사본을 작성하는 대신 입력 &lt;code&gt;A&lt;/code&gt; 를 겹쳐 쓰면 공간이 절약됩니다 . &lt;code&gt;irange&lt;/code&gt; 는 검색 할 고유 값 &lt;em&gt;인덱스&lt;/em&gt; 의 범위입니다 ( 예 : 2 ~ 8 번째 고유 값).</target>
        </trans-unit>
        <trans-unit id="bea08d0db8d0d7267dd0f75389ad0ea2916758d9" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt;&lt;code&gt;eigvals&lt;/code&gt;&lt;/a&gt;, but saves space by overwriting the input &lt;code&gt;A&lt;/code&gt;, instead of creating a copy. &lt;code&gt;vl&lt;/code&gt; is the lower bound of the interval to search for eigenvalues, and &lt;code&gt;vu&lt;/code&gt; is the upper bound.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt; &lt;code&gt;eigvals&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 사본을 작성하는 대신 입력 &lt;code&gt;A&lt;/code&gt; 를 겹쳐 쓰면 공간이 절약됩니다 . &lt;code&gt;vl&lt;/code&gt; 은 고유 값을 검색하기위한 구간의 하한이고 &lt;code&gt;vu&lt;/code&gt; 는 상한입니다.</target>
        </trans-unit>
        <trans-unit id="265d915fed003ba423e62d225c93d8b44f0a8e18" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt;&lt;code&gt;eigvals&lt;/code&gt;&lt;/a&gt;, but saves space by overwriting the input &lt;code&gt;A&lt;/code&gt;, instead of creating a copy. The &lt;code&gt;permute&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt;, and &lt;code&gt;sortby&lt;/code&gt; keywords are the same as for &lt;a href=&quot;#LinearAlgebra.eigen&quot;&gt;&lt;code&gt;eigen&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.eigvals&quot;&gt; &lt;code&gt;eigvals&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 사본을 작성하는 대신 입력 &lt;code&gt;A&lt;/code&gt; 를 겹쳐 쓰면 공간이 절약됩니다 . &lt;code&gt;permute&lt;/code&gt; , &lt;code&gt;scale&lt;/code&gt; 및 &lt;code&gt;sortby&lt;/code&gt; 의 키워드와 동일 &lt;a href=&quot;#LinearAlgebra.eigen&quot;&gt; &lt;code&gt;eigen&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0381c1aa5b451a012dd602cff00800b00c4de7b9" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.ldlt&quot;&gt;&lt;code&gt;ldlt&lt;/code&gt;&lt;/a&gt;, but saves space by overwriting the input &lt;code&gt;S&lt;/code&gt;, instead of creating a copy.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.ldlt&quot;&gt; &lt;code&gt;ldlt&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 사본을 작성하는 대신 입력 &lt;code&gt;S&lt;/code&gt; 를 겹쳐 쓰면 공간이 절약됩니다 .</target>
        </trans-unit>
        <trans-unit id="feaa4e11d9d12c3ad23ecefe3c12ad5237471593" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.ordschur&quot;&gt;&lt;code&gt;ordschur&lt;/code&gt;&lt;/a&gt; but overwrites the factorization &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.ordschur&quot;&gt; &lt;code&gt;ordschur&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 인수 분해 &lt;code&gt;F&lt;/code&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="a0838af9d7f1512c150754e9bf4d9114982dd457" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.schur&quot;&gt;&lt;code&gt;schur&lt;/code&gt;&lt;/a&gt; but uses the input argument &lt;code&gt;A&lt;/code&gt; as workspace.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.schur&quot;&gt; &lt;code&gt;schur&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 입력 인수 &lt;code&gt;A&lt;/code&gt; 를 작업 공간으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c89aaaa67b8fa0885f5cee679b54b29af0cfc758" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#LinearAlgebra.schur&quot;&gt;&lt;code&gt;schur&lt;/code&gt;&lt;/a&gt; but uses the input matrices &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; as workspace.</source>
          <target state="translated">&lt;a href=&quot;#LinearAlgebra.schur&quot;&gt; &lt;code&gt;schur&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 입력 행렬 &lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;B&lt;/code&gt; 를 작업 공간으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="182610b60f6bd254f9d251e6a9bbbe2730b6aeb1" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;ordschur&lt;/code&gt; but overwrites the factorization &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ordschur&lt;/code&gt; 와 동일 하지만 인수 분해 &lt;code&gt;F&lt;/code&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="e8738139e4595b1036e3269ee571c6b54f304219" translate="yes" xml:space="preserve">
          <source>Samplers can be arbitrary values that implement &lt;code&gt;rand(rng, sampler)&lt;/code&gt;, but for most applications the following predefined samplers may be sufficient:</source>
          <target state="translated">샘플러는 &lt;code&gt;rand(rng, sampler)&lt;/code&gt; 를 구현하는 임의의 값일 수 있지만 대부분의 응용 프로그램에서는 다음과 같은 미리 정의 된 샘플러로 충분할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b9bdec9282f636336cf5e1de49a35b51553e10a" translate="yes" xml:space="preserve">
          <source>Samples quantile are defined by &lt;code&gt;Q(p) = (1-&amp;gamma;)*x[j] + &amp;gamma;*x[j+1]&lt;/code&gt;, where $x[j]$ is the j-th order statistic, and &lt;code&gt;&amp;gamma;&lt;/code&gt; is a function of &lt;code&gt;j = floor(n*p + m)&lt;/code&gt;, &lt;code&gt;m = alpha + p*(1 - alpha - beta)&lt;/code&gt; and &lt;code&gt;g = n*p + m - j&lt;/code&gt;.</source>
          <target state="translated">샘플 분위수는 &lt;code&gt;Q(p) = (1-&amp;gamma;)*x[j] + &amp;gamma;*x[j+1]&lt;/code&gt; . 여기서 $ x [j] $는 j 차 통계이고 &lt;code&gt;&amp;gamma;&lt;/code&gt; 는 함수입니다. of &lt;code&gt;j = floor(n*p + m)&lt;/code&gt; , &lt;code&gt;m = alpha + p*(1 - alpha - beta)&lt;/code&gt; 및 &lt;code&gt;g = n*p + m - j&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17aa483f2d864af6421602c9f10a6164ddd4c1bb" translate="yes" xml:space="preserve">
          <source>Satellite Antenna</source>
          <target state="translated">위성 안테나</target>
        </trans-unit>
        <trans-unit id="7c14ab20f3a9f832ead5de7b2b092a81c847db8e" translate="yes" xml:space="preserve">
          <source>Saturn</source>
          <target state="translated">Saturn</target>
        </trans-unit>
        <trans-unit id="fa1d57477c9bf7b5e613986063d1c4cf2cb6afd4" translate="yes" xml:space="preserve">
          <source>Saxophone</source>
          <target state="translated">Saxophone</target>
        </trans-unit>
        <trans-unit id="0f7d51ed8f67b928b5896485500920538c12e9a8" translate="yes" xml:space="preserve">
          <source>Say we are working on &lt;code&gt;Example&lt;/code&gt; and feel it needs new functionality. How can we modify the source code? We can use &lt;code&gt;develop&lt;/code&gt; to set up a git clone of the &lt;code&gt;Example&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;Example&lt;/code&gt; 에서 작업 중이며 새로운 기능이 필요하다고 생각 한다고 가정 해보십시오 . 소스 코드를 어떻게 수정할 수 있습니까? &lt;code&gt;develop&lt;/code&gt; 을 사용 하여 &lt;code&gt;Example&lt;/code&gt; 패키지 의 git clone을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f766369c7c6d28d7f913ae7c464c72574527be10" translate="yes" xml:space="preserve">
          <source>Say we have a change of heart and decide the world is not ready for such elegant code. We can tell Pkg to stop using the local clone and use a registered version instead. We do this with &lt;code&gt;free&lt;/code&gt;:</source>
          <target state="translated">우리가 마음의 변화를 가지고 세상이 그러한 우아한 코드를 준비 할 수 없다고 결정했다고 가정 해 봅시다. Pkg에게 로컬 클론 사용을 중지하고 대신 등록 된 버전을 사용하도록 지시 할 수 있습니다. 우리는 이것을 &lt;code&gt;free&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="81a45ec107beea3f02d170cc99ef551698446a7e" translate="yes" xml:space="preserve">
          <source>Scalar and array methods for &lt;code&gt;Die&lt;/code&gt; now work as expected:</source>
          <target state="translated">&lt;code&gt;Die&lt;/code&gt; 의 스칼라 및 배열 방법이 이제 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6bf5b1a72d1f6a14750fa5c27cf3a159162de8fe" translate="yes" xml:space="preserve">
          <source>Scalar types generally do not need to implement &lt;code&gt;isequal&lt;/code&gt; separate from &lt;code&gt;==&lt;/code&gt;, unless they represent floating-point numbers amenable to a more efficient implementation than that provided as a generic fallback (based on &lt;code&gt;isnan&lt;/code&gt;, &lt;code&gt;signbit&lt;/code&gt;, and &lt;code&gt;==&lt;/code&gt;).</source>
          <target state="translated">스칼라 유형은 일반적으로 구현할 필요가 없습니다 &lt;code&gt;isequal&lt;/code&gt; 에서 별도의 &lt;code&gt;==&lt;/code&gt; 가 숫자가 일반적인 대체로 제공되는 것보다 더 효율적인 구현 의무가 부동 소수점을 표현하지 않는 한, (을 기반 &lt;code&gt;isnan&lt;/code&gt; , &lt;code&gt;signbit&lt;/code&gt; 및 &lt;code&gt;==&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="791a17debdf37cca0d308cbbb073ed4cd26cabeb" translate="yes" xml:space="preserve">
          <source>Scalar values passed to these functions are treated as 1-element arrays. For example,</source>
          <target state="translated">이 함수에 전달 된 스칼라 값은 1 요소 배열로 처리됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="62da9aca67ae9c4653f09445efdd2e680e491491" translate="yes" xml:space="preserve">
          <source>Scale an array &lt;code&gt;A&lt;/code&gt; by a scalar &lt;code&gt;b&lt;/code&gt; overwriting &lt;code&gt;A&lt;/code&gt; in-place. Use &lt;a href=&quot;#LinearAlgebra.lmul!&quot;&gt;&lt;code&gt;lmul!&lt;/code&gt;&lt;/a&gt; to multiply scalar from left. The scaling operation respects the semantics of the multiplication &lt;code&gt;*&lt;/code&gt; between an element of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. In particular, this also applies to multiplication involving non-finite numbers such as &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt;.</source>
          <target state="translated">스칼라 &lt;code&gt;b&lt;/code&gt; 를 기준으로 &lt;code&gt;A&lt;/code&gt; 를 덮어 쓰면서 배열 &lt;code&gt;A&lt;/code&gt; 를 스케일링 합니다. &lt;a href=&quot;#LinearAlgebra.lmul!&quot;&gt; &lt;code&gt;lmul!&lt;/code&gt; &lt;/a&gt; 사용하십시오 ! 왼쪽에서 스칼라를 곱합니다. 스케일링 동작은 승산 의미 존중 &lt;code&gt;*&lt;/code&gt; 의 요소 사이 와 &lt;code&gt;b&lt;/code&gt; . 특히, 이것은 &lt;code&gt;NaN&lt;/code&gt; 및 &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt; 와 같이 무한 수가 아닌 수를 포함하는 곱셈에도 적용됩니다 . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a716a0be007c71f3fe14d959e010d368190ea52a" translate="yes" xml:space="preserve">
          <source>Scale an array &lt;code&gt;B&lt;/code&gt; by a scalar &lt;code&gt;a&lt;/code&gt; overwriting &lt;code&gt;B&lt;/code&gt; in-place. Use &lt;a href=&quot;#LinearAlgebra.rmul!&quot;&gt;&lt;code&gt;rmul!&lt;/code&gt;&lt;/a&gt; to multiply scalar from right. The scaling operation respects the semantics of the multiplication &lt;code&gt;*&lt;/code&gt; between &lt;code&gt;a&lt;/code&gt; and an element of &lt;code&gt;B&lt;/code&gt;. In particular, this also applies to multiplication involving non-finite numbers such as &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt;.</source>
          <target state="translated">어레이 스케일 &lt;code&gt;B&lt;/code&gt; 를 스칼라 덮어 &lt;code&gt;B&lt;/code&gt; 인 곳. &lt;a href=&quot;#LinearAlgebra.rmul!&quot;&gt; &lt;code&gt;rmul!&lt;/code&gt; &lt;/a&gt; 사용하십시오 ! 오른쪽에서 스칼라를 곱합니다. 스케일링 동작 점 승산의 의미 &lt;code&gt;*&lt;/code&gt; 사이 및 소자 &lt;code&gt;B&lt;/code&gt; . 특히, 이것은 &lt;code&gt;NaN&lt;/code&gt; 및 &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt; 와 같이 무한 수가 아닌 수를 포함하는 곱셈에도 적용됩니다 . &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1429a72540c69e025c517fcc5b792419c88cd1a" translate="yes" xml:space="preserve">
          <source>Scheduling</source>
          <target state="translated">Scheduling</target>
        </trans-unit>
        <trans-unit id="f2f3d66a7978c2077c56d962072c4cdd6cd95d44" translate="yes" xml:space="preserve">
          <source>School</source>
          <target state="translated">School</target>
        </trans-unit>
        <trans-unit id="2a39f047b76d67db0e509a993c55f9fb06c25a06" translate="yes" xml:space="preserve">
          <source>School Satchel</source>
          <target state="translated">학교 사첼</target>
        </trans-unit>
        <trans-unit id="178ddf66b8b2437b18f63150e1657ab23c1579fa" translate="yes" xml:space="preserve">
          <source>Schur decomposition</source>
          <target state="translated">Schur 분해</target>
        </trans-unit>
        <trans-unit id="677c5f0e49b94db0582e40e7ee93f9698661288b" translate="yes" xml:space="preserve">
          <source>Scientific computing has traditionally required the highest performance, yet domain experts have largely moved to slower dynamic languages for daily work. We believe there are many good reasons to prefer dynamic languages for these applications, and we do not expect their use to diminish. Fortunately, modern language design and compiler techniques make it possible to mostly eliminate the performance trade-off and provide a single environment productive enough for prototyping and efficient enough for deploying performance-intensive applications. The Julia programming language fills this role: it is a flexible dynamic language, appropriate for scientific and numerical computing, with performance comparable to traditional statically-typed languages.</source>
          <target state="translated">과학 컴퓨팅은 전통적으로 최고 성능을 요구했지만, 도메인 전문가들은 일상 업무를 위해 주로 느린 동적 언어로 이동했습니다. 이러한 응용 프로그램에 대해 동적 언어를 선호하는 데에는 여러 가지 이유가 있으며 그 사용이 줄어들 것으로 기대하지는 않습니다. 다행스럽게도 최신 언어 설계 및 컴파일러 기술을 통해 성능 균형을 대부분 제거하고 프로토 타입 제작에 충분히 생산적이고 성능 집약적 인 응용 프로그램을 배포 할 수있는 단일 환경을 제공 할 수 있습니다. Julia 프로그래밍 언어는이 역할을 수행합니다.이 언어는 과학적이고 수치 계산에 적합한 유연한 동적 언어이며 전통적인 정적 형식 언어와 비슷한 성능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="08b7a5a3a3b61bf4ebf06442e1baf81fd734895d" translate="yes" xml:space="preserve">
          <source>Scope blocks it may be nested in</source>
          <target state="translated">중첩 될 수있는 범위 블록</target>
        </trans-unit>
        <trans-unit id="d35009da72015651823ba955de229a9c26358f75" translate="yes" xml:space="preserve">
          <source>Scope constructs</source>
          <target state="translated">범위 구성</target>
        </trans-unit>
        <trans-unit id="af4019fe9df26ea6cd31ac0f0123965e6bd1fb0a" translate="yes" xml:space="preserve">
          <source>Scope of Variables</source>
          <target state="translated">변수의 범위</target>
        </trans-unit>
        <trans-unit id="6d50ba5e0801158bc4e9d2f3ce31b46683bf4fca" translate="yes" xml:space="preserve">
          <source>Scope type</source>
          <target state="translated">범위 유형</target>
        </trans-unit>
        <trans-unit id="8534689f08116a6505e07e1a1106bfbfda456949" translate="yes" xml:space="preserve">
          <source>Scorpius</source>
          <target state="translated">Scorpius</target>
        </trans-unit>
        <trans-unit id="41e1ad7e7eb186cac0e0cf13c3c611d9251f8684" translate="yes" xml:space="preserve">
          <source>Script Capital B / Script B</source>
          <target state="translated">스크립트 대문자 B / 스크립트 B</target>
        </trans-unit>
        <trans-unit id="87fe65bec65958cd004dd14b90865a203d9638a0" translate="yes" xml:space="preserve">
          <source>Script Capital E / Script E</source>
          <target state="translated">스크립트 캐피탈 E / 스크립트 E</target>
        </trans-unit>
        <trans-unit id="0711e58928da7fd7868be638a65c8cf61a323c39" translate="yes" xml:space="preserve">
          <source>Script Capital F / Script F</source>
          <target state="translated">스크립트 대문자 F / 스크립트 F</target>
        </trans-unit>
        <trans-unit id="ac69e2c5378a84f8bc473ac87eee425f9f721f72" translate="yes" xml:space="preserve">
          <source>Script Capital H / Script H</source>
          <target state="translated">스크립트 캐피탈 H / 스크립트 H</target>
        </trans-unit>
        <trans-unit id="fe7486fc60b92e6fd189e22369494d35a1996eb0" translate="yes" xml:space="preserve">
          <source>Script Capital I / Script I</source>
          <target state="translated">스크립트 캐피탈 I / 스크립트 I</target>
        </trans-unit>
        <trans-unit id="e1988152ec0a97c198b6713988141842f3919db2" translate="yes" xml:space="preserve">
          <source>Script Capital L / Script L</source>
          <target state="translated">스크립트 캐피탈 L / 스크립트 L</target>
        </trans-unit>
        <trans-unit id="8d8399e86cc6d85dfd595bf6ce16b2d04c511c9c" translate="yes" xml:space="preserve">
          <source>Script Capital M / Script M</source>
          <target state="translated">스크립트 캐피탈 M / 스크립트 M</target>
        </trans-unit>
        <trans-unit id="ff25a44167e25f0eb471934d9ea970b95046b5d5" translate="yes" xml:space="preserve">
          <source>Script Capital P / Script P</source>
          <target state="translated">스크립트 캐피탈 P / 스크립트 P</target>
        </trans-unit>
        <trans-unit id="5da6341df19efc1aee5d2a24a21146f393ddcbb3" translate="yes" xml:space="preserve">
          <source>Script Capital R / Script R</source>
          <target state="translated">스크립트 캐피탈 R / 스크립트 R</target>
        </trans-unit>
        <trans-unit id="c632c9adf490c67c984203956d8b6aa611f0b588" translate="yes" xml:space="preserve">
          <source>Script Small E</source>
          <target state="translated">스크립트 작은 E</target>
        </trans-unit>
        <trans-unit id="3f653841327845e894cd6c2a178b8e41919e2dd5" translate="yes" xml:space="preserve">
          <source>Script Small G</source>
          <target state="translated">스크립트 작은 G</target>
        </trans-unit>
        <trans-unit id="1ad0afbe2accac4bcb8244470271e399bf401302" translate="yes" xml:space="preserve">
          <source>Script Small L</source>
          <target state="translated">스크립트 작은 L</target>
        </trans-unit>
        <trans-unit id="b3f8873d0630052c428809604d870c109d20818a" translate="yes" xml:space="preserve">
          <source>Script Small O</source>
          <target state="translated">스크립트 작은 O</target>
        </trans-unit>
        <trans-unit id="7522becbe814d8b8cbc378f8930c8ca68bb2b8b5" translate="yes" xml:space="preserve">
          <source>Scripting</source>
          <target state="translated">Scripting</target>
        </trans-unit>
        <trans-unit id="090a3c807816bef76a7b19c9a37c7de92b0eaa5e" translate="yes" xml:space="preserve">
          <source>Scroll</source>
          <target state="translated">Scroll</target>
        </trans-unit>
        <trans-unit id="db7fb58ed2068561486de267505366fef6e7c85a" translate="yes" xml:space="preserve">
          <source>Search for all matches of a the regular expression &lt;code&gt;r&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; and return a iterator over the matches. If overlap is &lt;code&gt;true&lt;/code&gt;, the matching sequences are allowed to overlap indices in the original string, otherwise they must be from distinct character ranges.</source>
          <target state="translated">상기 정규 표현식의 모든 일치 검색 &lt;code&gt;r&lt;/code&gt; 의 &lt;code&gt;s&lt;/code&gt; 와 일치를 통해 반복자를 돌려줍니다. 겹침이 &lt;code&gt;true&lt;/code&gt; 이면 일치하는 시퀀스가 ​​원래 문자열의 인덱스와 겹칠 수 있습니다. 그렇지 않으면 고유 한 문자 범위에 속해야합니다.</target>
        </trans-unit>
        <trans-unit id="41bb0f78698e938b4e678bb6645d512753fb1fb5" translate="yes" xml:space="preserve">
          <source>Search for the first match of the regular expression &lt;code&gt;r&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; and return a &lt;code&gt;RegexMatch&lt;/code&gt; object containing the match, or nothing if the match failed. The matching substring can be retrieved by accessing &lt;code&gt;m.match&lt;/code&gt; and the captured sequences can be retrieved by accessing &lt;code&gt;m.captures&lt;/code&gt; The optional &lt;code&gt;idx&lt;/code&gt; argument specifies an index at which to start the search.</source>
          <target state="translated">정규 표현식의 첫 번째 일치 검색 &lt;code&gt;r&lt;/code&gt; 의 &lt;code&gt;s&lt;/code&gt; 와 반환 &lt;code&gt;RegexMatch&lt;/code&gt; 경기가 실패 할 경우 경기를 포함하는 객체, 또는 아무것도. 일치하는 하위 문자열은 &lt;code&gt;m.match&lt;/code&gt; 에 액세스하여 검색 할 수 있으며 캡처 된 시퀀스는 &lt;code&gt;m.captures&lt;/code&gt; 에 액세스하여 검색 할 수 있습니다 . 선택적 &lt;code&gt;idx&lt;/code&gt; 인수는 검색을 시작할 색인을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="23e4390e384c366a7277c60511269413a9a926c6" translate="yes" xml:space="preserve">
          <source>Search for the given pattern &lt;code&gt;pat&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;, and replace each occurrence with &lt;code&gt;r&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is provided, replace at most &lt;code&gt;count&lt;/code&gt; occurrences. &lt;code&gt;pat&lt;/code&gt; may be a single character, a vector or a set of characters, a string, or a regular expression. If &lt;code&gt;r&lt;/code&gt; is a function, each occurrence is replaced with &lt;code&gt;r(s)&lt;/code&gt; where &lt;code&gt;s&lt;/code&gt; is the matched substring (when &lt;code&gt;pat&lt;/code&gt; is a &lt;code&gt;Regex&lt;/code&gt; or &lt;code&gt;AbstractString&lt;/code&gt;) or character (when &lt;code&gt;pat&lt;/code&gt; is an &lt;code&gt;AbstractChar&lt;/code&gt; or a collection of &lt;code&gt;AbstractChar&lt;/code&gt;). If &lt;code&gt;pat&lt;/code&gt; is a regular expression and &lt;code&gt;r&lt;/code&gt; is a &lt;a href=&quot;#Base.SubstitutionString&quot;&gt;&lt;code&gt;SubstitutionString&lt;/code&gt;&lt;/a&gt;, then capture group references in &lt;code&gt;r&lt;/code&gt; are replaced with the corresponding matched text. To remove instances of &lt;code&gt;pat&lt;/code&gt; from &lt;code&gt;string&lt;/code&gt;, set &lt;code&gt;r&lt;/code&gt; to the empty &lt;code&gt;String&lt;/code&gt; (&lt;code&gt;&quot;&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 에서 주어진 패턴 &lt;code&gt;pat&lt;/code&gt; 을 검색 하고 각 항목을 &lt;code&gt;r&lt;/code&gt; 로 바꿉니다 . 경우 &lt;code&gt;count&lt;/code&gt; 제공되며, 대부분에서 대체 &lt;code&gt;count&lt;/code&gt; 발생. &lt;code&gt;pat&lt;/code&gt; 은 단일 문자, 벡터 또는 문자 세트, 문자열 또는 정규식 일 수 있습니다. 경우 &lt;code&gt;r&lt;/code&gt; 함수이며, 각각의 경우는 교체되는 &lt;code&gt;r(s)&lt;/code&gt; 여기서 &lt;code&gt;s&lt;/code&gt; (가) 서브 스트링 매칭 (때에 &lt;code&gt;pat&lt;/code&gt; 인 &lt;code&gt;Regex&lt;/code&gt; 또는 &lt;code&gt;AbstractString&lt;/code&gt; ) 또는 문자 (시 &lt;code&gt;pat&lt;/code&gt; 이다 &lt;code&gt;AbstractChar&lt;/code&gt; 또는 모음 &lt;code&gt;AbstractChar&lt;/code&gt; ). 만약 &lt;code&gt;pat&lt;/code&gt; 정규식이고 &lt;code&gt;r&lt;/code&gt; 은 &lt;a href=&quot;#Base.SubstitutionString&quot;&gt; &lt;code&gt;SubstitutionString&lt;/code&gt; &lt;/a&gt; 이면 &lt;code&gt;r&lt;/code&gt; 의 캡처 그룹 참조 가 해당 일치 텍스트로 대체됩니다. 인스턴스를 제거하려면 &lt;code&gt;pat&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt; , 세트 &lt;code&gt;r&lt;/code&gt; 빈에 &lt;code&gt;String&lt;/code&gt; ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="637781ec5a7ab95361dcf986fb8a58fdf15f627f" translate="yes" xml:space="preserve">
          <source>Search for the given pattern &lt;code&gt;pat&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;, and replace each occurrence with &lt;code&gt;r&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is provided, replace at most &lt;code&gt;count&lt;/code&gt; occurrences. &lt;code&gt;pat&lt;/code&gt; may be a single character, a vector or a set of characters, a string, or a regular expression. If &lt;code&gt;r&lt;/code&gt; is a function, each occurrence is replaced with &lt;code&gt;r(s)&lt;/code&gt; where &lt;code&gt;s&lt;/code&gt; is the matched substring (when &lt;code&gt;pat&lt;/code&gt;is a &lt;code&gt;Regex&lt;/code&gt; or &lt;code&gt;AbstractString&lt;/code&gt;) or character (when &lt;code&gt;pat&lt;/code&gt; is an &lt;code&gt;AbstractChar&lt;/code&gt; or a collection of &lt;code&gt;AbstractChar&lt;/code&gt;). If &lt;code&gt;pat&lt;/code&gt; is a regular expression and &lt;code&gt;r&lt;/code&gt; is a &lt;a href=&quot;#Base.SubstitutionString&quot;&gt;&lt;code&gt;SubstitutionString&lt;/code&gt;&lt;/a&gt;, then capture group references in &lt;code&gt;r&lt;/code&gt; are replaced with the corresponding matched text. To remove instances of &lt;code&gt;pat&lt;/code&gt; from &lt;code&gt;string&lt;/code&gt;, set &lt;code&gt;r&lt;/code&gt; to the empty &lt;code&gt;String&lt;/code&gt; (&lt;code&gt;&quot;&quot;&lt;/code&gt;).</source>
          <target state="translated">지정된 패턴의 검색 &lt;code&gt;pat&lt;/code&gt; 에서 &lt;code&gt;s&lt;/code&gt; , 그리고 각각 발생 대체 &lt;code&gt;r&lt;/code&gt; . 경우 &lt;code&gt;count&lt;/code&gt; 제공되며, 대부분에서 대체 &lt;code&gt;count&lt;/code&gt; 발생. &lt;code&gt;pat&lt;/code&gt; 는 단일 문자, 벡터 또는 문자 집합, 문자열 또는 정규식 일 수 있습니다. 경우 &lt;code&gt;r&lt;/code&gt; 함수이며, 각각의 경우는 교체되는 &lt;code&gt;r(s)&lt;/code&gt; 여기서 &lt;code&gt;s&lt;/code&gt; (가) 서브 스트링 매칭 (때에 &lt;code&gt;pat&lt;/code&gt; 인 &lt;code&gt;Regex&lt;/code&gt; 또는 &lt;code&gt;AbstractString&lt;/code&gt; ) 또는 문자 (시 &lt;code&gt;pat&lt;/code&gt; 이다 &lt;code&gt;AbstractChar&lt;/code&gt; 또는 모음 &lt;code&gt;AbstractChar&lt;/code&gt; ). 만약 &lt;code&gt;pat&lt;/code&gt; 는 정규식이고 &lt;code&gt;r&lt;/code&gt; 은 &lt;a href=&quot;#Base.SubstitutionString&quot;&gt; &lt;code&gt;SubstitutionString&lt;/code&gt; &lt;/a&gt; 이며, &lt;code&gt;r&lt;/code&gt; 의 캡처 그룹 참조는 일치하는 해당 텍스트로 바뀝니다. 인스턴스를 제거하려면 &lt;code&gt;pat&lt;/code&gt; 에서 &lt;code&gt;string&lt;/code&gt; , 세트 &lt;code&gt;r&lt;/code&gt; 빈에 &lt;code&gt;String&lt;/code&gt; ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="293114936c88e497eae9d6957ea3a8908cde868e" translate="yes" xml:space="preserve">
          <source>Search modes</source>
          <target state="translated">검색 모드</target>
        </trans-unit>
        <trans-unit id="1e2df4bf4e12e083ead8baa3c93c69a8f824dced" translate="yes" xml:space="preserve">
          <source>Search through all documentation for a string, ignoring case.</source>
          <target state="translated">대소 문자를 무시하고 문자열에 대한 모든 문서를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="1de09f97fa8ce64167ae88469c1b7f2289aab9aa" translate="yes" xml:space="preserve">
          <source>Searches for the first library in &lt;code&gt;names&lt;/code&gt; in the paths in the &lt;code&gt;locations&lt;/code&gt; list, &lt;code&gt;DL_LOAD_PATH&lt;/code&gt;, or system library paths (in that order) which can successfully be dlopen'd. On success, the return value will be one of the names (potentially prefixed by one of the paths in locations). This string can be assigned to a &lt;code&gt;global const&lt;/code&gt; and used as the library name in future &lt;code&gt;ccall&lt;/code&gt;'s. On failure, it returns the empty string.</source>
          <target state="translated">&lt;code&gt;locations&lt;/code&gt; 목록 의 경로 , &lt;code&gt;DL_LOAD_PATH&lt;/code&gt; 또는 dlopen'd 가 될 수있는 시스템 라이브러리 경로 (순서대로) 에서 &lt;code&gt;names&lt;/code&gt; 의 첫 번째 라이브러리를 검색합니다 . 성공하면 반환 값은 이름 중 하나 (위치의 경로 중 하나가 접두사로 사용됨)가됩니다. 이 문자열은 &lt;code&gt;global const&lt;/code&gt; 할당 되어 향후 &lt;code&gt;ccall&lt;/code&gt; 에서 라이브러리 이름으로 사용될 수 있습니다 . 실패하면 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b90b325aefc2f01d6543c649701c32d153279d4e" translate="yes" xml:space="preserve">
          <source>Seat</source>
          <target state="translated">Seat</target>
        </trans-unit>
        <trans-unit id="5848d87c169636d8174a67db04e0e8988e60f95d" translate="yes" xml:space="preserve">
          <source>Second with a minimum width</source>
          <target state="translated">최소 너비로 두 번째</target>
        </trans-unit>
        <trans-unit id="0f19cf9c383911df183d2bc7f7caa1efd81cfca3" translate="yes" xml:space="preserve">
          <source>Second, the logging tools allow you to attach arbitrary data to each event as a set of key&amp;ndash;value pairs. This allows you to capture local variables and other program state for later analysis. For example, to attach the local array variable &lt;code&gt;A&lt;/code&gt; and the sum of a vector &lt;code&gt;v&lt;/code&gt; as the key &lt;code&gt;s&lt;/code&gt; you can use</source>
          <target state="translated">둘째, 로깅 도구를 사용하면 각 이벤트에 임의의 데이터를 일련의 키-값 쌍으로 연결할 수 있습니다. 이를 통해 나중에 분석하기 위해 로컬 변수 및 기타 프로그램 상태를 캡처 할 수 있습니다. 예를 들어, 로컬 배열 변수 &lt;code&gt;A&lt;/code&gt; 와 벡터 &lt;code&gt;v&lt;/code&gt; 의 합을 키 &lt;code&gt;s&lt;/code&gt; 로 첨부 하려면</target>
        </trans-unit>
        <trans-unit id="e1bb223f770feacc7f2668280d1695ba99995faf" translate="yes" xml:space="preserve">
          <source>Section Sign</source>
          <target state="translated">섹션 표시</target>
        </trans-unit>
        <trans-unit id="db7dcd27d484b4dde83cb1112ae7e70ce1fa2b9c" translate="yes" xml:space="preserve">
          <source>Securing and encrypting all worker-worker traffic (via SSH) or encrypting individual messages can be done via a custom &lt;code&gt;ClusterManager&lt;/code&gt;.</source>
          <target state="translated">모든 작업자-작업자 트래픽 보안 및 암호화 (SSH를 통한) 또는 개별 메시지 암호화는 사용자 정의 &lt;code&gt;ClusterManager&lt;/code&gt; 를 통해 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f96c1a12bbdb27eca16c567fc9b563801fadd07" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Base.@cfunction&quot;&gt;&lt;code&gt;@cfunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.@cfunction&quot;&gt; &lt;code&gt;@cfunction&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="275ab99bb10dc43bd9dbb24eef97c59656c64b47" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt; for further help.</source>
          <target state="translated">추가 도움이 필요하면 &lt;a href=&quot;#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6fc0275909fbed6ae121a77adb21b4a57ce0738" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt; for further help. Note, unlike &lt;a href=&quot;#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;WeakKeyDict&lt;/code&gt; does not convert keys on insertion.</source>
          <target state="translated">추가 도움이 필요하면 &lt;a href=&quot;#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 . 참고와 달리&lt;a href=&quot;#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;WeakKeyDict&lt;/code&gt; 는 삽입의 키를 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="674e2f3eb00fee7d462886f8245314f27d7bd4e1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Dates.DateFormat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt; for details about format specifiers.</source>
          <target state="translated">형식 지정자에 대한 자세한 내용은 &lt;a href=&quot;#Dates.DateFormat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="792e670fa282d3ddddd002e27f92f7c55fcc0eb2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; for how to use a DateFormat object to parse and write Date strings respectively.</source>
          <target state="translated">참조 &lt;a href=&quot;#Dates.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;#Dates.format&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;DateFormat 객체를 사용하여 Date 문자열을 각각 구문 분석하고 쓰는 방법 형식 을.</target>
        </trans-unit>
        <trans-unit id="bc3722c8e5a9cdb4b8cc59ef686cb91c90f1c3bb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.format-Tuple%7BTimeType,AbstractString%7D&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; for how to use a DateFormat object to parse and write Date strings respectively.</source>
          <target state="translated">DateFormat 객체를 사용하여 각각 Date 문자열을 구문 분석하고 쓰는 방법 은 &lt;a href=&quot;#Dates.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Dates.format-Tuple%7BTimeType,AbstractString%7D&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt; 을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="468199432965f884ecbe07029e61968e3d0e2fc2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../manual/calling-c-and-fortran-code/index#Calling-C-and-Fortran-Code&quot;&gt;manual section on ccall and cfunction usage&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/calling-c-and-fortran-code/index#Calling-C-and-Fortran-Code&quot;&gt;ccall 및 cfunction 사용법에 대한 매뉴얼 섹션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="786a33088a4360d003461effb7c879323c181090" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../manual/calling-c-and-fortran-code/index#Calling-C-and-Fortran-Code-1&quot;&gt;manual section on ccall and cfunction usage&lt;/a&gt;.</source>
          <target state="translated">보다 &lt;a href=&quot;../../manual/calling-c-and-fortran-code/index#Calling-C-and-Fortran-Code-1&quot;&gt;ccall 및 cfunction 사용법에 대한 매뉴얼 섹션을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="207ec89d15ade66f841615ccf087d37d8fb27721" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming&quot;&gt;Metaprogramming&lt;/a&gt; for further details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming&quot;&gt;메타 프로그래밍&lt;/a&gt; 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="b095f2ddbc41168b82f08491ceaa5b7df199439c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming-1&quot;&gt;Metaprogramming&lt;/a&gt; for further details.</source>
          <target state="translated">보다 &lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming-1&quot;&gt; 메타 프로그래밍&lt;/a&gt; 을 하십시오.</target>
        </trans-unit>
        <trans-unit id="7829da12816060fc79de419bf1c0b34d1fd6a2eb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../manual/performance-tips/index#man-code-warntype&quot;&gt;&lt;code&gt;@code_warntype&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../manual/performance-tips/index#man-code-warntype&quot;&gt; &lt;code&gt;@code_warntype&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e79713e878f38e64f4d40d7e48e10e9cf6300304" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../manual/performance-tips/index#man-code-warntype-1&quot;&gt;&lt;code&gt;@code_warntype&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">보다 &lt;a href=&quot;../../manual/performance-tips/index#man-code-warntype-1&quot;&gt; &lt;code&gt;@code_warntype&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4b5a32c0449bdc3c87acddc3d6f068625871e821" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../collections/index#Base.filter&quot;&gt;&lt;code&gt;Base.filter&lt;/code&gt;&lt;/a&gt; for an eager implementation of filtering for arrays.</source>
          <target state="translated">보다 &lt;a href=&quot;../collections/index#Base.filter&quot;&gt; &lt;code&gt;Base.filter&lt;/code&gt; &lt;/a&gt;배열 필터링의 열악한 구현에 Base.filter 를.</target>
        </trans-unit>
        <trans-unit id="7a3db553c0a39e97540cf136eac55f89ce5714a4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../conversion-and-promotion/index#conversion-and-promotion&quot;&gt;Conversion and Promotion&lt;/a&gt; for how to define your own conversions and promotions.</source>
          <target state="translated">자신의 전환 및 프로모션을 정의하는 방법 은 &lt;a href=&quot;../conversion-and-promotion/index#conversion-and-promotion&quot;&gt;전환 및 프로모션&lt;/a&gt; 을 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="af2be53f6bbe7616da54baa7fe93ed744952d2b4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../conversion-and-promotion/index#conversion-and-promotion-1&quot;&gt;Conversion and Promotion&lt;/a&gt; for how to define your own conversions and promotions.</source>
          <target state="translated">보다 &lt;a href=&quot;../conversion-and-promotion/index#conversion-and-promotion-1&quot;&gt;&lt;/a&gt;자신 만의 전환 및 프로모션을 정의하는 방법 전환 및 프로모션 을 .</target>
        </trans-unit>
        <trans-unit id="4db0f1fab286c74406d5e9c9b0b5d6492fbdc8b8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../math/index#Base.Rounding.RoundingMode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; for available modes.</source>
          <target state="translated">보다 &lt;a href=&quot;../math/index#Base.Rounding.RoundingMode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt;사용 가능한 모드는 반올림 모드를.</target>
        </trans-unit>
        <trans-unit id="1f044def63776222dd2697f4f2ad2d08a4614a8e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../math/index#Base.Rounding.RoundingMode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; for available rounding modes.</source>
          <target state="translated">보다 &lt;a href=&quot;../math/index#Base.Rounding.RoundingMode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt; 사용할 수 반올림 모드에 대해.</target>
        </trans-unit>
        <trans-unit id="89eab6aca7a6b50015beac464e72010ea6391b38" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../types/index#man-custom-pretty-printing&quot;&gt;Custom pretty-printing&lt;/a&gt; for more information on how to implement display methods for custom types.</source>
          <target state="translated">&lt;a href=&quot;../types/index#man-custom-pretty-printing&quot;&gt;사용자&lt;/a&gt; 지정 유형에 대한 표시 방법을 구현하는 방법에 대한 자세한 내용 은 사용자 지정 pretty-printing 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d97e7c9f6b84e71b545f4320e1e3d7242961f10c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../types/index#man-custom-pretty-printing-1&quot;&gt;Custom pretty-printing&lt;/a&gt; for more information on how to implement display methods for custom types.</source>
          <target state="translated">보다 &lt;a href=&quot;../types/index#man-custom-pretty-printing-1&quot;&gt;사용자&lt;/a&gt; 정의 유형에 대한 표시 방법을 구현하는 방법에 대한 자세한 내용 사용자 정의 예문 인쇄 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="70c5d87d51dfe65dcdd35c2ae2281195604afb56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../variables-and-scoping/index#scope-of-variables&quot;&gt;Scope of Variables&lt;/a&gt; for a detailed explanation of variable scope and how it works in Julia.</source>
          <target state="translated">&lt;a href=&quot;../variables-and-scoping/index#scope-of-variables&quot;&gt;변수 범위에&lt;/a&gt; 대한 자세한 설명과 Julia에서 작동하는 방법은 변수 범위를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="071703c7a6e6c969a977bf3190279edee58875b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../variables-and-scoping/index#scope-of-variables-1&quot;&gt;Scope of Variables&lt;/a&gt; for a detailed explanation of variable scope and how it works in Julia.</source>
          <target state="translated">보다 &lt;a href=&quot;../variables-and-scoping/index#scope-of-variables-1&quot;&gt;변수 범위에&lt;/a&gt; 대한 자세한 설명과 변수가 Julia에서 작동하는 방식에 대해서는 변수 범위를 .</target>
        </trans-unit>
        <trans-unit id="789539b6ca7527ebb8b1ac6650fb2eb5fc196868" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Profile.print([io], data)&lt;/code&gt; for an explanation of the valid keyword arguments.</source>
          <target state="translated">보다 &lt;code&gt;Profile.print([io], data)&lt;/code&gt; 유효한 키워드 인수에 대한 설명은 Profile.print ([io], data) 를 .</target>
        </trans-unit>
        <trans-unit id="3fe2d332cfea5b1081a5a60672495a4a6c35ae1e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Regex&lt;/code&gt; if interpolation is needed.</source>
          <target state="translated">보다 &lt;code&gt;Regex&lt;/code&gt; 보간이 필요한 경우 정규식을 .</target>
        </trans-unit>
        <trans-unit id="3324fe378a2a771dba0759ba8126f01396e40df0" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;test/llvmcall.jl&lt;/code&gt; for usage examples.</source>
          <target state="translated">보다 &lt;code&gt;test/llvmcall.jl&lt;/code&gt; 사용법 예는 test / llvmcall.jl 을 .</target>
        </trans-unit>
        <trans-unit id="2cc231e6fb720a8d5655cf18b59a54162a167de5" translate="yes" xml:space="preserve">
          <source>See Hwloc.jl or CpuId.jl for extended information, including number of physical cores.</source>
          <target state="translated">물리적 코어 수를 포함한 확장 된 정보는 Hwloc.jl 또는 CpuId.jl을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c0a718b79899eb48c66761d32ebd20618db79de9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&amp;gt;&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&quot;&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&amp;gt;&quot;&gt; &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d454d6f7a494ff37faff3bcd2c6675410367342" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.:&amp;lt;&amp;lt;&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&quot;&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.:&amp;lt;&amp;lt;&quot;&gt; &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11c29d5d293c80ebaeaeceb3f6c5d92ccc437ae1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&amp;gt;&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.:&amp;lt;&amp;lt;&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#Base.:&amp;gt;&amp;gt;&amp;gt;&quot;&gt; &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.:&amp;lt;&amp;lt;&quot;&gt; &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc4348c2534e584b41e7aa2268f9db1051c93e0a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.@isdefined&quot;&gt;&lt;code&gt;@isdefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.@isdefined&quot;&gt; &lt;code&gt;@isdefined&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d17bf52da4472e7cf4a40b35f110d5db8d4cd79" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.@time&quot;&gt;&lt;code&gt;@time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@timed&quot;&gt;&lt;code&gt;@timed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@elapsed&quot;&gt;&lt;code&gt;@elapsed&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Base.@allocated&quot;&gt;&lt;code&gt;@allocated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.@time&quot;&gt; &lt;code&gt;@time&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@timed&quot;&gt; &lt;code&gt;@timed&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@elapsed&quot;&gt; &lt;code&gt;@elapsed&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.@allocated&quot;&gt; &lt;code&gt;@allocated&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ca60131a519abb297327d80b320bec7bc1472a5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.@time&quot;&gt;&lt;code&gt;@time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@timev&quot;&gt;&lt;code&gt;@timev&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@elapsed&quot;&gt;&lt;code&gt;@elapsed&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Base.@allocated&quot;&gt;&lt;code&gt;@allocated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.@time&quot;&gt; &lt;code&gt;@time&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@timev&quot;&gt; &lt;code&gt;@timev&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@elapsed&quot;&gt; &lt;code&gt;@elapsed&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.@allocated&quot;&gt; &lt;code&gt;@allocated&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64133a5298d8d63328bbd47744827b597dc6ae93" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.@time&quot;&gt;&lt;code&gt;@time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@timev&quot;&gt;&lt;code&gt;@timev&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@timed&quot;&gt;&lt;code&gt;@timed&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Base.@allocated&quot;&gt;&lt;code&gt;@allocated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.@time&quot;&gt; &lt;code&gt;@time&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@timev&quot;&gt; &lt;code&gt;@timev&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@timed&quot;&gt; &lt;code&gt;@timed&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.@allocated&quot;&gt; &lt;code&gt;@allocated&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5140cdc4fb3814d2110cf6027ae55cc72867cb5f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.@time&quot;&gt;&lt;code&gt;@time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@timev&quot;&gt;&lt;code&gt;@timev&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@timed&quot;&gt;&lt;code&gt;@timed&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Base.@elapsed&quot;&gt;&lt;code&gt;@elapsed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.@time&quot;&gt; &lt;code&gt;@time&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@timev&quot;&gt; &lt;code&gt;@timev&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@timed&quot;&gt; &lt;code&gt;@timed&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.@elapsed&quot;&gt; &lt;code&gt;@elapsed&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed89d18ae7ccd9927626b4ddd344049cc30a2445" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.@timev&quot;&gt;&lt;code&gt;@timev&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@timed&quot;&gt;&lt;code&gt;@timed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.@elapsed&quot;&gt;&lt;code&gt;@elapsed&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Base.@allocated&quot;&gt;&lt;code&gt;@allocated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.@timev&quot;&gt; &lt;code&gt;@timev&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@timed&quot;&gt; &lt;code&gt;@timed&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.@elapsed&quot;&gt; &lt;code&gt;@elapsed&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.@allocated&quot;&gt; &lt;code&gt;@allocated&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="25941a6418af661d5e48efaaeafa7f3e87ad967a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.Broadcast.DefaultArrayStyle&quot;&gt;&lt;code&gt;Broadcast.DefaultArrayStyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.Broadcast.DefaultArrayStyle&quot;&gt; &lt;code&gt;Broadcast.DefaultArrayStyle&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7209c4c3d4bad9a5b0145c53ce579a0b9d7f12c2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.IndexCartesian&quot;&gt;&lt;code&gt;IndexCartesian&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.IndexCartesian&quot;&gt; &lt;code&gt;IndexCartesian&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a789f6597a34c4ff15fb471f809a4c3d6d30b23" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.IndexLinear&quot;&gt;&lt;code&gt;IndexLinear&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.IndexLinear&quot;&gt; &lt;code&gt;IndexLinear&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3481dcbfd5c4c172ed779879996a33cc249d1945" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.Sort.sortperm!&quot;&gt;&lt;code&gt;sortperm!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.Sort.sortperm!&quot;&gt; &lt;code&gt;sortperm!&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 !.</target>
        </trans-unit>
        <trans-unit id="591f16ab565ed5546122ea02b2e38e2fffa3ec55" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.Threads.Mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt; for a more efficient version on one core or if the lock may be held for a considerable length of time.</source>
          <target state="translated">하나의 코어에서보다 효율적인 버전을 보거나 상당한 시간 동안 잠금을 유지할 수있는 경우 &lt;a href=&quot;#Base.Threads.Mutex&quot;&gt; &lt;code&gt;Mutex&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cc7f75ae57a2aad1dfd248c675703a8a9259f81" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.Threads.SpinLock&quot;&gt;&lt;code&gt;SpinLock&lt;/code&gt;&lt;/a&gt; for a lighter-weight lock.</source>
          <target state="translated">가벼운 잠금 장치 는 &lt;a href=&quot;#Base.Threads.SpinLock&quot;&gt; &lt;code&gt;SpinLock&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0bc71aad08e8c98cabd0442565c6dd2e41b4dbb1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.cconvert&quot;&gt;&lt;code&gt;cconvert&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#Base.cconvert&quot;&gt; &lt;code&gt;cconvert&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="cf1d9f9d95b50106cfdb5c874a8450f49671d1f5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.checkindex&quot;&gt;&lt;code&gt;checkindex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.checkindex&quot;&gt; &lt;code&gt;checkindex&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eace222b286d1def2aa30f38af1ced1256d9c1f2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.circshift!&quot;&gt;&lt;code&gt;circshift!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.circshift!&quot;&gt; &lt;code&gt;circshift!&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 ! .</target>
        </trans-unit>
        <trans-unit id="c06dc4d7c98e2191f67ae749c4f0097c2bfdf790" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.circshift&quot;&gt;&lt;code&gt;circshift&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.circshift&quot;&gt; &lt;code&gt;circshift&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe1fff199d95d85cda94bfa56b4a1f8a8d1f3f29" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.coalesce&quot;&gt;&lt;code&gt;coalesce&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.coalesce&quot;&gt; &lt;code&gt;coalesce&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="279064b8d2cb716d91eabf4791881871ea1b8586" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.eachcol&quot;&gt;&lt;code&gt;eachcol&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.eachslice&quot;&gt;&lt;code&gt;eachslice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.eachcol&quot;&gt; &lt;code&gt;eachcol&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.eachslice&quot;&gt; &lt;code&gt;eachslice&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="28411c384986b3814f575690fdc962255e96f8b5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.eachrow&quot;&gt;&lt;code&gt;eachrow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.eachslice&quot;&gt;&lt;code&gt;eachslice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.eachrow&quot;&gt; &lt;code&gt;eachrow&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.eachslice&quot;&gt; &lt;code&gt;eachslice&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="594c15876604b765bc887be7884ed7e477636d4a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.eachrow&quot;&gt;&lt;code&gt;eachrow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.eachcol&quot;&gt;&lt;code&gt;eachcol&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Base.selectdim&quot;&gt;&lt;code&gt;selectdim&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.eachrow&quot;&gt; &lt;code&gt;eachrow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.eachcol&quot;&gt; &lt;code&gt;eachcol&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.selectdim&quot;&gt; &lt;code&gt;selectdim&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b0d9550fdd8ee71e8aa673ab6b670ab3f1697bb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.endswith&quot;&gt;&lt;code&gt;endswith&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.endswith&quot;&gt; &lt;code&gt;endswith&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4d47ddf4eb990d7c0bbecd855f69116225d8369" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.hasmethod&quot;&gt;&lt;code&gt;hasmethod&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.hasmethod&quot;&gt; &lt;code&gt;hasmethod&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e429e084b191e4be4e5a01296775582fae906e9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.invpermute!&quot;&gt;&lt;code&gt;invpermute!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.invpermute!&quot;&gt; &lt;code&gt;invpermute!&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 ! .</target>
        </trans-unit>
        <trans-unit id="511fa7b75b098aae411718ef294f18083bb9b5e9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.mark&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.reset&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.ismarked&quot;&gt;&lt;code&gt;ismarked&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.mark&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.reset&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.ismarked&quot;&gt; &lt;code&gt;ismarked&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="28ae084192f6aaa04c5a5c856a3a8e1eac833bc1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.mark&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.unmark&quot;&gt;&lt;code&gt;unmark&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.ismarked&quot;&gt;&lt;code&gt;ismarked&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.mark&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.unmark&quot;&gt; &lt;code&gt;unmark&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.ismarked&quot;&gt; &lt;code&gt;ismarked&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="322845dfd2d3723ca345c0963ccae210847ddcaa" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.mark&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.unmark&quot;&gt;&lt;code&gt;unmark&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.reset&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.mark&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.unmark&quot;&gt; &lt;code&gt;unmark&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.reset&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c194f0eadd7da66c8cab29dfe610cd9cae16589" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.nextpow&quot;&gt;&lt;code&gt;nextpow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.nextpow&quot;&gt; &lt;code&gt;nextpow&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3239fcd99c5e3b5ec7c9bee0d66617b3b6b29fbd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.occursin&quot;&gt;&lt;code&gt;occursin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.endswith&quot;&gt;&lt;code&gt;endswith&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#Base.occursin&quot;&gt; &lt;code&gt;occursin&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.endswith&quot;&gt; &lt;code&gt;endswith&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8198007bdf991c0ecf7b1b4205162a83c0402a49" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.occursin&quot;&gt;&lt;code&gt;occursin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.startswith&quot;&gt;&lt;code&gt;startswith&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에서 &lt;a href=&quot;#Base.occursin&quot;&gt; &lt;code&gt;occursin&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.startswith&quot;&gt; &lt;code&gt;startswith&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b61a066a0cab6a67484624c5eb9e74a95b175398" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.permutedims&quot;&gt;&lt;code&gt;permutedims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.permutedims&quot;&gt; &lt;code&gt;permutedims&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9bfc81938b998357cdc969e82dffed2d70756b6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.prevpow&quot;&gt;&lt;code&gt;prevpow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.prevpow&quot;&gt; &lt;code&gt;prevpow&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a31ddd56f289ff3b0dc38fd27ab0bfbef323ce7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.print&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;, which writes un-decorated representations.</source>
          <target state="translated">장식되지 않은 표현을 작성하는 &lt;a href=&quot;#Base.print&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eca4d336aacdbb9ce70bc56f3dcebfe140769ce8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.propertynames&quot;&gt;&lt;code&gt;propertynames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.getproperty&quot;&gt;&lt;code&gt;getproperty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.propertynames&quot;&gt; &lt;code&gt;propertynames&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.getproperty&quot;&gt; &lt;code&gt;getproperty&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="626262d12f237a3584c86d9f449a9e529696336b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.propertynames&quot;&gt;&lt;code&gt;propertynames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.setproperty!&quot;&gt;&lt;code&gt;setproperty!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.propertynames&quot;&gt; &lt;code&gt;propertynames&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.setproperty!&quot;&gt; &lt;code&gt;setproperty!&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 ! .</target>
        </trans-unit>
        <trans-unit id="546010050fad0a055f0aaf0044c7a389cf3ce343" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.replace!&quot;&gt;&lt;code&gt;replace!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.replace!&quot;&gt; &lt;code&gt;replace!&lt;/code&gt; &lt;/a&gt; 도 참조 하십시오! .</target>
        </trans-unit>
        <trans-unit id="8f8a38a5e3fdcd6b0effc4e7eded96f0bcc18d95" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.reshape&quot;&gt;&lt;code&gt;reshape&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#Base.reshape&quot;&gt; &lt;code&gt;reshape&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd818985e8150459161d3af431c887b8a65d48c2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.rsplit&quot;&gt;&lt;code&gt;rsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.rsplit&quot;&gt; &lt;code&gt;rsplit&lt;/code&gt; &lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="a4123b29d50bfc0b2f1678af9d868e0e309e1dac" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;, and the manual chapter on &lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/devdocs/offset-arrays/#man-custom-indices-1&quot;&gt;arrays with custom indices&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/devdocs/offset-arrays/#man-custom-indices-1&quot;&gt;사용자 정의 인덱스가있는 배열&lt;/a&gt; 에 대한 매뉴얼 장도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="791803193a79c6fae3ee25472237deba791837ee" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;, and the manual chapter on &lt;a href=&quot;https://docs.julialang.org/en/v1.5.3/devdocs/offset-arrays/#man-custom-indices&quot;&gt;arrays with custom indices&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.julialang.org/en/v1.5.3/devdocs/offset-arrays/#man-custom-indices&quot;&gt;사용자 정의 인덱스가있는 배열&lt;/a&gt; 에 대한 설명서 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3868d811564a04973b10d16c8b51e3fadc6bafd8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.something&quot;&gt;&lt;code&gt;something&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#Base.something&quot;&gt; &lt;code&gt;something&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7931bd7597049bdaa6d8830455b632236d46c9e3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.startswith&quot;&gt;&lt;code&gt;startswith&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.startswith&quot;&gt; &lt;code&gt;startswith&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0c12ade8f0d2268fdba0a34b790cecf9ecc81f9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base.unmark&quot;&gt;&lt;code&gt;unmark&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.reset&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.ismarked&quot;&gt;&lt;code&gt;ismarked&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.unmark&quot;&gt; &lt;code&gt;unmark&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.reset&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.ismarked&quot;&gt; &lt;code&gt;ismarked&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b10bb6038f2b83b168cf0bcefa233ab46f85c7dc" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base64.base64decode&quot;&gt;&lt;code&gt;base64decode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base64.base64decode&quot;&gt; &lt;code&gt;base64decode&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f218b0144bcdeb697b2182d5a40c2b8a934492d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Base64.base64encode&quot;&gt;&lt;code&gt;base64encode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base64.base64encode&quot;&gt; &lt;code&gt;base64encode&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1834bed124a88683cd03fa4a78d53295067d3704" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Core.applicable&quot;&gt;&lt;code&gt;applicable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Core.applicable&quot;&gt; &lt;code&gt;applicable&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="03ea1c0e586a9935ec4fcebeda5c32bd99fe6acd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Core.isdefined&quot;&gt;&lt;code&gt;isdefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Core.isdefined&quot;&gt; &lt;code&gt;isdefined&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f0ec7b24902226017c861d7f59b49ab28269035" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Distributed.cluster_cookie-Tuple%7B%7D&quot;&gt;&lt;code&gt;cluster_cookie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Distributed.cluster_cookie-Tuple%7B%7D&quot;&gt; &lt;code&gt;cluster_cookie&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49d57b2c84aa16cc8cd811c1f423605fd6439e5e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#LibGit2.gitdir&quot;&gt;&lt;code&gt;gitdir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LibGit2.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#LibGit2.gitdir&quot;&gt; &lt;code&gt;gitdir&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#LibGit2.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="98794db33a0c1d1e4e21853fb0398e9ed50ba39e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#LibGit2.gitdir&quot;&gt;&lt;code&gt;gitdir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LibGit2.workdir&quot;&gt;&lt;code&gt;workdir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#LibGit2.gitdir&quot;&gt; &lt;code&gt;gitdir&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#LibGit2.workdir&quot;&gt; &lt;code&gt;workdir&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6f7663da94a45031e1a4b100cde284d7a38f130" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#LibGit2.workdir&quot;&gt;&lt;code&gt;workdir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LibGit2.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#LibGit2.workdir&quot;&gt; &lt;code&gt;workdir&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#LibGit2.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb79b8e031dd8e377fd0d72de6e793881008e5b6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Test.@test_nowarn&quot;&gt;&lt;code&gt;@test_nowarn&lt;/code&gt;&lt;/a&gt; to check for the absence of error output.</source>
          <target state="translated">오류 출력이 없는지 확인하려면 &lt;a href=&quot;#Test.@test_nowarn&quot;&gt; &lt;code&gt;@test_nowarn&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c323fc04115752b9b9daebd2d432612902c79e6a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Distributed.remotecall-Tuple%7BAny,Integer,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt;&lt;code&gt;remotecall&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Distributed.remotecall-Tuple%7BAny,Integer,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt; &lt;code&gt;remotecall&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fbfed78cf274c8bb993af48e94e9806f5b932eb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../faq/index#man-scripting&quot;&gt;Scripting&lt;/a&gt; for more information on writing Julia scripts.</source>
          <target state="translated">Julia 스크립트 작성에 대한 자세한 내용은 &lt;a href=&quot;../faq/index#man-scripting&quot;&gt;스크립팅&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec42aecf7213ae547d3bf107ad3100cdcb4fccd1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../faq/index#man-scripting-1&quot;&gt;Scripting&lt;/a&gt; for more information on writing Julia scripts.</source>
          <target state="translated">Julia 스크립트 작성에 대한 자세한 정보 는 &lt;a href=&quot;../faq/index#man-scripting-1&quot;&gt;스크립팅&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f47ce45a072be5122a1e211b794fe243b906175" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../math/index#Base.conj&quot;&gt;&lt;code&gt;conj&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../math/index#Base.conj&quot;&gt; &lt;code&gt;conj&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b04848f3dc49ef2f58548b16ebe4191a3651b11" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../parallel/index#lib-task-sync&quot;&gt;Synchronization&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../parallel/index#lib-task-sync&quot;&gt;동기화를&lt;/a&gt; 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fefbeb41111f063fe7a151bc207382aa3f2dda6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;fetch&lt;/code&gt; and &lt;a href=&quot;#Distributed.remotecall-Tuple%7BAny,Integer,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt;&lt;code&gt;remotecall&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fetch&lt;/code&gt; 및 &lt;a href=&quot;#Distributed.remotecall-Tuple%7BAny,Integer,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt; &lt;code&gt;remotecall&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9275a1db2b439ddfe653500eee3858aba9ae856" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#LinearAlgebra.hessenberg&quot;&gt;&lt;code&gt;hessenberg&lt;/code&gt;&lt;/a&gt; function to factor any matrix into a similar upper-Hessenberg matrix.</source>
          <target state="translated">모든 행렬을 유사한 상위 헤센 &lt;a href=&quot;#LinearAlgebra.hessenberg&quot;&gt; &lt;code&gt;hessenberg&lt;/code&gt; &lt;/a&gt; 행렬로 인수 분해 하려면 hessenberg 함수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52e7e1231279a0ae9fb8a00a7683ac6adf5c0f96" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../../manual/functions/index#man-vectorized&quot;&gt;dot syntax for vectorizing functions&lt;/a&gt;; for example, &lt;code&gt;f.(args...)&lt;/code&gt; implicitly calls &lt;code&gt;broadcast(f, args...)&lt;/code&gt;. Rather than relying on &quot;vectorized&quot; methods of functions like &lt;code&gt;sin&lt;/code&gt; to operate on arrays, you should use &lt;code&gt;sin.(a)&lt;/code&gt; to vectorize via &lt;code&gt;broadcast&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/functions/index#man-vectorized&quot;&gt;함수 벡터화를위한 도트 구문&lt;/a&gt; 도 참조하십시오 . 예를 들어, &lt;code&gt;f.(args...)&lt;/code&gt; 암시 적으로 &lt;code&gt;broadcast(f, args...)&lt;/code&gt; 호출합니다 . &lt;code&gt;sin&lt;/code&gt; 과 같은 함수의 &quot;벡터화 된&quot;메서드에 의존하여 배열에서 작동하는 대신 &lt;code&gt;sin.(a)&lt;/code&gt; 를 사용하여 &lt;code&gt;broadcast&lt;/code&gt; 를 통해 벡터화 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3df3f7c92ea85ba3e4be151d3cc39cb5a04f57a7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../../manual/functions/index#man-vectorized-1&quot;&gt;dot syntax for vectorizing functions&lt;/a&gt;; for example, &lt;code&gt;f.(args...)&lt;/code&gt; implicitly calls &lt;code&gt;broadcast(f, args...)&lt;/code&gt;. Rather than relying on &quot;vectorized&quot; methods of functions like &lt;code&gt;sin&lt;/code&gt; to operate on arrays, you should use &lt;code&gt;sin.(a)&lt;/code&gt; to vectorize via &lt;code&gt;broadcast&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/functions/index#man-vectorized-1&quot;&gt;함수를 벡터화하기위한 도트 구문&lt;/a&gt; 도 참조하십시오 . 예를 들어 &lt;code&gt;f.(args...)&lt;/code&gt; 암시 적으로 &lt;code&gt;broadcast(f, args...)&lt;/code&gt; 호출합니다 . 배열에서 작동하기 위해 &lt;code&gt;sin&lt;/code&gt; 과 같은 함수의 &quot;벡터화 된&quot;방법에 의존하기보다는 &lt;code&gt;sin.(a)&lt;/code&gt; 를 사용하여 &lt;code&gt;broadcast&lt;/code&gt; 를 통해 벡터화 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="04eb7394a03110049f596e87f31ad15e6d3716e4" translate="yes" xml:space="preserve">
          <source>See also the closures in the examples in the next two sections. A variable, such as &lt;code&gt;x&lt;/code&gt; in the first example and &lt;code&gt;state&lt;/code&gt; in the second, that is inherited from the enclosing scope by the inner function is sometimes called a &lt;em&gt;captured&lt;/em&gt; variable. Captured variables can present performance challenges discussed in &lt;a href=&quot;../performance-tips/index#man-performance-tips-1&quot;&gt;performance tips&lt;/a&gt;.</source>
          <target state="translated">다음 두 섹션의 예제에서 클로저도 참조하십시오. 내부 함수에 의해 둘러싸는 범위에서 상속 된 변수 (예 : 첫 번째 예의 &lt;code&gt;x&lt;/code&gt; 및 두 번째의 &lt;code&gt;state&lt;/code&gt; 는 때때로 &lt;em&gt;캡처 된&lt;/em&gt; 변수 라고 합니다. 캡처 된 변수는 &lt;a href=&quot;../performance-tips/index#man-performance-tips-1&quot;&gt;성능 팁&lt;/a&gt; 에서 논의 된 성능 문제를 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b116cae15f9ddb03913289688f6c2dbfb33f082" translate="yes" xml:space="preserve">
          <source>See also the discussion under &lt;a href=&quot;../types/index#Parametric-Types&quot;&gt;Parametric Types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../types/index#Parametric-Types&quot;&gt;파라 메트릭 유형&lt;/a&gt; 아래의 설명을 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9870bd6f04d3bb2ac86282c451c05e3b9e1d7d1" translate="yes" xml:space="preserve">
          <source>See also the discussion under &lt;a href=&quot;../types/index#Parametric-Types-1&quot;&gt;Parametric Types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../types/index#Parametric-Types-1&quot;&gt;파라 메트릭 유형&lt;/a&gt; 아래의 설명도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="04e00c8902f88a5da133ad59a50c1de720b03da2" translate="yes" xml:space="preserve">
          <source>See also: (&lt;code&gt;define_editor&lt;/code&gt;)[@ref]</source>
          <target state="translated">참조 : ( &lt;code&gt;define_editor&lt;/code&gt; ) [@ ref]</target>
        </trans-unit>
        <trans-unit id="b8dcc6ec60030d0babf90bcc4be4d0762f6ab0ba" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.:%5E-Tuple%7BAbstractString,Integer%7D&quot;&gt;&lt;code&gt;^&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.:%5E-Tuple%7BAbstractString,Integer%7D&quot;&gt; &lt;code&gt;^&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b29eed4ebc82a101850d7dfee74f5511f27a99e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5c3130ccc806927d18995d1b47f95ebcdacd10f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.Filesystem.basename&quot;&gt;&lt;code&gt;basename&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.Filesystem.basename&quot;&gt; &lt;code&gt;basename&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ac8c31749c0f85425027ad374d8edb75ee1dc79" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.Filesystem.dirname&quot;&gt;&lt;code&gt;dirname&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.Filesystem.dirname&quot;&gt; &lt;code&gt;dirname&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb2b408bb40653147927f8086969123c66eaee9e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.Filesystem.isdir&quot;&gt;&lt;code&gt;isdir&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.Filesystem.ispath&quot;&gt;&lt;code&gt;ispath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.Filesystem.isdir&quot;&gt; &lt;code&gt;isdir&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.Filesystem.ispath&quot;&gt; &lt;code&gt;ispath&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e3e0931ded51112cd4473036bc8dce573787583" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.Filesystem.isfile&quot;&gt;&lt;code&gt;isfile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.Filesystem.ispath&quot;&gt;&lt;code&gt;ispath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.Filesystem.isfile&quot;&gt; &lt;code&gt;isfile&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Base.Filesystem.ispath&quot;&gt; &lt;code&gt;ispath&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="965dfa6104c44b63616f2b593a4a753a8757dd2a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.PermutedDimsArrays.PermutedDimsArray&quot;&gt;&lt;code&gt;PermutedDimsArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.PermutedDimsArrays.PermutedDimsArray&quot;&gt; &lt;code&gt;PermutedDimsArray&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f5d6e6888bb3664721e6bc730b20767950adb25" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.Unicode.lowercasefirst&quot;&gt;&lt;code&gt;lowercasefirst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Unicode.uppercase&quot;&gt;&lt;code&gt;uppercase&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Unicode.lowercase&quot;&gt;&lt;code&gt;lowercase&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Unicode.titlecase&quot;&gt;&lt;code&gt;titlecase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참고 : &lt;a href=&quot;#Base.Unicode.lowercasefirst&quot;&gt; &lt;code&gt;lowercasefirst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.Unicode.uppercase&quot;&gt; &lt;code&gt;uppercase&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.Unicode.lowercase&quot;&gt; &lt;code&gt;lowercase&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.Unicode.titlecase&quot;&gt; &lt;code&gt;titlecase&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a367516aa48133edde6344d09b845bf466d94cb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.Unicode.uppercasefirst&quot;&gt;&lt;code&gt;uppercasefirst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Unicode.uppercase&quot;&gt;&lt;code&gt;uppercase&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Unicode.lowercase&quot;&gt;&lt;code&gt;lowercase&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Unicode.titlecase&quot;&gt;&lt;code&gt;titlecase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.Unicode.uppercasefirst&quot;&gt; &lt;code&gt;uppercasefirst&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.Unicode.uppercase&quot;&gt; &lt;code&gt;uppercase&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.Unicode.lowercase&quot;&gt; &lt;code&gt;lowercase&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.Unicode.titlecase&quot;&gt; &lt;code&gt;titlecase&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b4396f9be9f85e7ed0306eb6f8165ab60ca77df" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.codeunit&quot;&gt;&lt;code&gt;codeunit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../arrays/index#Base.checkbounds&quot;&gt;&lt;code&gt;checkbounds&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.sizeof-Tuple%7BAbstractString%7D&quot;&gt;&lt;code&gt;sizeof&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collections/index#Base.length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collections/index#Base.lastindex&quot;&gt;&lt;code&gt;lastindex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.codeunit&quot;&gt; &lt;code&gt;codeunit&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../arrays/index#Base.checkbounds&quot;&gt; &lt;code&gt;checkbounds&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.sizeof-Tuple%7BAbstractString%7D&quot;&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collections/index#Base.length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collections/index#Base.lastindex&quot;&gt; &lt;code&gt;lastindex&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49cbb1210f0999c649e39d9b7a6b856b72b61e75" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.codeunit&quot;&gt;&lt;code&gt;codeunit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../arrays/index#Base.checkbounds&quot;&gt;&lt;code&gt;checkbounds&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;sizeof&lt;/code&gt;, &lt;a href=&quot;../collections/index#Base.length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collections/index#Base.lastindex&quot;&gt;&lt;code&gt;lastindex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.codeunit&quot;&gt; &lt;code&gt;codeunit&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../arrays/index#Base.checkbounds&quot;&gt; &lt;code&gt;checkbounds&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;sizeof&lt;/code&gt; , &lt;a href=&quot;../collections/index#Base.length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collections/index#Base.lastindex&quot;&gt; &lt;code&gt;lastindex&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fd7ad09019eb90a94bca9ba32f960d7b7a26620" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e998aa7623a02481ddaa21a734c1f566bd8df91" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.div&quot;&gt;&lt;code&gt;div&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.div&quot;&gt; &lt;code&gt;div&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f19cc4beef368bdc5df1550dbb7096ac8e1188a9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.fld1&quot;&gt;&lt;code&gt;fld1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.fldmod1&quot;&gt;&lt;code&gt;fldmod1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.fld1&quot;&gt; &lt;code&gt;fld1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.fldmod1&quot;&gt; &lt;code&gt;fldmod1&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="372f0d2d6b818ed6fffc516a0aa33be777467bfa" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.fld1&quot;&gt;&lt;code&gt;fld1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.mod1&quot;&gt;&lt;code&gt;mod1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.fld1&quot;&gt; &lt;code&gt;fld1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.mod1&quot;&gt; &lt;code&gt;mod1&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0edc1820de7d410a7abb77770db8e14728ffc5f2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.isvalid-Tuple%7BAny%7D&quot;&gt;&lt;code&gt;isvalid&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.ncodeunits-Tuple%7BAbstractString%7D&quot;&gt;&lt;code&gt;ncodeunits&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collections/index#Base.lastindex&quot;&gt;&lt;code&gt;lastindex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.thisind&quot;&gt;&lt;code&gt;thisind&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.nextind&quot;&gt;&lt;code&gt;nextind&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.prevind&quot;&gt;&lt;code&gt;prevind&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.isvalid-Tuple%7BAny%7D&quot;&gt; &lt;code&gt;isvalid&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.ncodeunits-Tuple%7BAbstractString%7D&quot;&gt; &lt;code&gt;ncodeunits&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collections/index#Base.lastindex&quot;&gt; &lt;code&gt;lastindex&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.thisind&quot;&gt; &lt;code&gt;thisind&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.nextind&quot;&gt; &lt;code&gt;nextind&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.prevind&quot;&gt; &lt;code&gt;prevind&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c25f052ea265f23f6ec71eb5b83afe4f668c565" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.mod1&quot;&gt;&lt;code&gt;mod1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.fldmod1&quot;&gt;&lt;code&gt;fldmod1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.mod1&quot;&gt; &lt;code&gt;mod1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.fldmod1&quot;&gt; &lt;code&gt;fldmod1&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f1e651d56b6ee95e69c72bb430164d7755d8ebe" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.mod1&quot;&gt;&lt;code&gt;mod1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.mod1&quot;&gt; &lt;code&gt;mod1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62d7d765bd5b730362d63ed8df059cc1c3736527" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.ncodeunits-Tuple%7BAbstractString%7D&quot;&gt;&lt;code&gt;ncodeunits&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.ncodeunits-Tuple%7BAbstractString%7D&quot;&gt; &lt;code&gt;ncodeunits&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c379b3fcc43f99e63dffffc77d22989886885857" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.ncodeunits-Tuple%7BAbstractString%7D&quot;&gt;&lt;code&gt;ncodeunits&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../arrays/index#Base.checkbounds&quot;&gt;&lt;code&gt;checkbounds&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.ncodeunits-Tuple%7BAbstractString%7D&quot;&gt; &lt;code&gt;ncodeunits&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../arrays/index#Base.checkbounds&quot;&gt; &lt;code&gt;checkbounds&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b6d48a2f584facdaf77a78197e691a8506c1dea" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.permutedims&quot;&gt;&lt;code&gt;permutedims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;#Base.permutedims&quot;&gt; &lt;code&gt;permutedims&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1241ddfcbaddaec4c4255cfc37bd9a3d46b4d500" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.pointer_from_objref&quot;&gt;&lt;code&gt;pointer_from_objref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.pointer_from_objref&quot;&gt; &lt;code&gt;pointer_from_objref&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d63126489b1640dc0a6c082618e46b1be25fb4dd" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Base.unsafe_pointer_to_objref&quot;&gt;&lt;code&gt;unsafe_pointer_to_objref&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Base.unsafe_pointer_to_objref&quot;&gt; &lt;code&gt;unsafe_pointer_to_objref&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="89be1229ebd2784f1519296a1e5dc98f31928add" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#LinearAlgebra.Givens&quot;&gt;&lt;code&gt;LinearAlgebra.Givens&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#LinearAlgebra.Givens&quot;&gt; &lt;code&gt;LinearAlgebra.Givens&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bced76296e593d465226739091ce7ac026be0dbc" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#LinearAlgebra.diagm&quot;&gt;&lt;code&gt;diagm&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#LinearAlgebra.diagm&quot;&gt; &lt;code&gt;diagm&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1eab714aa4459544e571400bdbf3baf8d2e8183" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#LinearAlgebra.givens&quot;&gt;&lt;code&gt;givens&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">또한보십시오 : &lt;a href=&quot;#LinearAlgebra.givens&quot;&gt; &lt;code&gt;givens&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94a607878be9af566d75dad1acd519aacd43f6c3" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Printf.@sprintf&quot;&gt;&lt;code&gt;@sprintf&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Printf.@sprintf&quot;&gt; &lt;code&gt;@sprintf&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d9586033b2d69d77b62d4e550258983090b7930" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Sockets.getipaddrs&quot;&gt;&lt;code&gt;getipaddrs&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Sockets.getipaddrs&quot;&gt; &lt;code&gt;getipaddrs&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45e6072ce467e0360fe1b18e51a1462ad43dad4a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Sockets.islinklocaladdr&quot;&gt;&lt;code&gt;islinklocaladdr&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;split(ENV[&quot;SSH_CONNECTION&quot;], ' ')[3]&lt;/code&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#Sockets.islinklocaladdr&quot;&gt; &lt;code&gt;islinklocaladdr&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;split(ENV[&quot;SSH_CONNECTION&quot;], ' ')[3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5844345435d6ffbfc2aea4c9998fd4893b734cf" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#SparseArrays.permute&quot;&gt;&lt;code&gt;permute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#SparseArrays.permute&quot;&gt; &lt;code&gt;permute&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1ee9e381c2c78e6968e8ea716e8b9a1a53ebe44" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH&quot;&gt;&lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../manual/code-loading/index#Code-Loading&quot;&gt;Code Loading&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH&quot;&gt; &lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../manual/code-loading/index#Code-Loading&quot;&gt;코드 로딩&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0dd491bc2c601f562fbe1bcf5e5ce8f29bd028ff" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH-1&quot;&gt;&lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../manual/code-loading/index#Code-Loading-1&quot;&gt;Code Loading&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH-1&quot;&gt; &lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../manual/code-loading/index#Code-Loading-1&quot;&gt;코드 로딩&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="492999818ab81bb3079c1423c17ac3b15af2872f" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../../manual/environment-variables/index#JULIA_LOAD_PATH&quot;&gt;&lt;code&gt;JULIA_LOAD_PATH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../manual/environment-variables/index#JULIA_PROJECT&quot;&gt;&lt;code&gt;JULIA_PROJECT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH&quot;&gt;&lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../manual/code-loading/index#Code-Loading&quot;&gt;Code Loading&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;../../manual/environment-variables/index#JULIA_LOAD_PATH&quot;&gt; &lt;code&gt;JULIA_LOAD_PATH&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../manual/environment-variables/index#JULIA_PROJECT&quot;&gt; &lt;code&gt;JULIA_PROJECT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH&quot;&gt; &lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../manual/code-loading/index#Code-Loading&quot;&gt;코드 로딩&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fac053f800be90a3a84e26dff324d4232bc3cd3e" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../../manual/environment-variables/index#JULIA_LOAD_PATH-1&quot;&gt;&lt;code&gt;JULIA_LOAD_PATH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../manual/environment-variables/index#JULIA_PROJECT-1&quot;&gt;&lt;code&gt;JULIA_PROJECT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH-1&quot;&gt;&lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../manual/code-loading/index#Code-Loading-1&quot;&gt;Code Loading&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/environment-variables/index#JULIA_LOAD_PATH-1&quot;&gt; &lt;code&gt;JULIA_LOAD_PATH&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../manual/environment-variables/index#JULIA_PROJECT-1&quot;&gt; &lt;code&gt;JULIA_PROJECT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../manual/environment-variables/index#JULIA_DEPOT_PATH-1&quot;&gt; &lt;code&gt;JULIA_DEPOT_PATH&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../manual/code-loading/index#Code-Loading-1&quot;&gt;Code Loading&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ace7da9ac64fc032e3ebaabf3fa3ea1285dc401" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../arrays/index#Base.IndexStyle&quot;&gt;&lt;code&gt;IndexStyle&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;axes&lt;/code&gt;.</source>
          <target state="translated">참고 : &lt;a href=&quot;../arrays/index#Base.IndexStyle&quot;&gt; &lt;code&gt;IndexStyle&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;axes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c63f31893c4b48d05459259b1ae6a19a265e3e2d" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../arrays/index#Base.mapslices&quot;&gt;&lt;code&gt;mapslices&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">또한보십시오 : &lt;a href=&quot;../arrays/index#Base.mapslices&quot;&gt; &lt;code&gt;mapslices&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e703418794ce3982518fa24044c3ee1236ffd397" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../arrays/index#Base.repeat&quot;&gt;&lt;code&gt;repeat&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;../arrays/index#Base.repeat&quot;&gt; &lt;code&gt;repeat&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="635a29292e84735c3f9f49747c62466427418f09" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../collections/index#Base.first&quot;&gt;&lt;code&gt;first&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collections/index#Base.last&quot;&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;../collections/index#Base.first&quot;&gt; &lt;code&gt;first&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collections/index#Base.last&quot;&gt; &lt;code&gt;last&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="debc74ee7d7c3eccb999c43bf28dbfb20cf5026c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../collections/index#Base.getindex&quot;&gt;&lt;code&gt;getindex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collections/index#Base.iterate&quot;&gt;&lt;code&gt;iterate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.thisind&quot;&gt;&lt;code&gt;thisind&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.nextind&quot;&gt;&lt;code&gt;nextind&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.prevind&quot;&gt;&lt;code&gt;prevind&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collections/index#Base.length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;../collections/index#Base.getindex&quot;&gt; &lt;code&gt;getindex&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collections/index#Base.iterate&quot;&gt; &lt;code&gt;iterate&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.thisind&quot;&gt; &lt;code&gt;thisind&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.nextind&quot;&gt; &lt;code&gt;nextind&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.prevind&quot;&gt; &lt;code&gt;prevind&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../collections/index#Base.length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ace707077a597ba91db1f5576fdadfc3875ac6eb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../parallel/index#Base.sleep&quot;&gt;&lt;code&gt;sleep&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">또한보십시오 : &lt;a href=&quot;../parallel/index#Base.sleep&quot;&gt; &lt;code&gt;sleep&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99d27bc4afd425f0daf38467f3980c8dfdcd2ae8" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;^&lt;/code&gt;</source>
          <target state="translated">참조 : &lt;code&gt;^&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4239431d7309ca7a19a04dec48dc90e744e3f5af" translate="yes" xml:space="preserve">
          <source>See below for how to &lt;a href=&quot;#mapping-c-types-to-julia&quot;&gt;map C types to Julia types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mapping-c-types-to-julia&quot;&gt;C 유형을 Julia 유형&lt;/a&gt; 에 매핑 하는 방법은 아래를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70f039e5c699cca0a1c70e159d90dfeb2966670e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#stdlib-dates-api&quot;&gt;API reference&lt;/a&gt; for additional information on methods exported from the &lt;code&gt;Dates&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;Dates&lt;/code&gt; 모듈 에서 내 보낸 메서드에 대한 추가 정보 는 &lt;a href=&quot;#stdlib-dates-api&quot;&gt;API 참조&lt;/a&gt; 를 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="6c71f9962e7c25edb7c40020a5d633a158a3504d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#stdlib-dates-api-1&quot;&gt;API reference&lt;/a&gt; for additional information on methods exported from the &lt;code&gt;Dates&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;Dates&lt;/code&gt; 모듈 에서 내 보낸 메소드에 대한 추가 정보 는 &lt;a href=&quot;#stdlib-dates-api-1&quot;&gt;API 참조&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3bd2b598e3d0f27674e80b34bfa8e04b8b4f934" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../base/io-network/index#Base.IOContext&quot;&gt;&lt;code&gt;IOContext&lt;/code&gt;&lt;/a&gt; documentation for a list of common properties which can be used to adjust printing.</source>
          <target state="translated">인쇄 조정에 사용할 수있는 일반적인 속성 목록은 &lt;a href=&quot;../../base/io-network/index#Base.IOContext&quot;&gt; &lt;code&gt;IOContext&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c01067e2d57e9fab59296099a800a471119f4ab" translate="yes" xml:space="preserve">
          <source>See the manual chapter on &lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming&quot;&gt;Metaprogramming&lt;/a&gt; and the developer documentation &lt;a href=&quot;https://docs.julialang.org/en/v1.5.3/devdocs/ast/#Julia-ASTs&quot;&gt;Julia ASTs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming&quot;&gt;Metaprogramming&lt;/a&gt; 에 대한 매뉴얼 장 과 &lt;a href=&quot;https://docs.julialang.org/en/v1.5.3/devdocs/ast/#Julia-ASTs&quot;&gt;Julia ASTs&lt;/a&gt; 개발자 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae4f31d495cd76d606ed7dc1511958bebef6b614" translate="yes" xml:space="preserve">
          <source>See the manual chapter on &lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming-1&quot;&gt;Metaprogramming&lt;/a&gt; and the developer documentation &lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/devdocs/ast/#Julia-ASTs-1&quot;&gt;Julia ASTs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/metaprogramming/index#Metaprogramming-1&quot;&gt;메타 프로그래밍&lt;/a&gt; 및 개발자 문서 &lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/devdocs/ast/#Julia-ASTs-1&quot;&gt;Julia AST&lt;/a&gt; 에 대한 매뉴얼 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a72491f45c95249c27f4e169543a6b5ad573018" translate="yes" xml:space="preserve">
          <source>See the manual chapter on threading for important caveats.</source>
          <target state="translated">중요한주의 사항은 스레딩에 대한 매뉴얼 장을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="18e8ecb4d4ccfdeecc7489e75227d9ddb43512ef" translate="yes" xml:space="preserve">
          <source>See the manual section on &lt;a href=&quot;../../manual/control-flow/index#man-conditional-evaluation&quot;&gt;control flow&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../manual/control-flow/index#man-conditional-evaluation&quot;&gt;제어 흐름에&lt;/a&gt; 대한 매뉴얼 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5a90e51e439129c6f85b5e4064aa6720c303bdbe" translate="yes" xml:space="preserve">
          <source>See the manual section on &lt;a href=&quot;../../manual/types/index#Composite-Types&quot;&gt;Composite Types&lt;/a&gt; for more details, such as how to define constructors.</source>
          <target state="translated">생성자를 정의하는 방법과 같은 자세한 내용 은 &lt;a href=&quot;../../manual/types/index#Composite-Types&quot;&gt;복합 유형에&lt;/a&gt; 대한 매뉴얼 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9ac8dbc32e4045b5e0187a9ae6369660d8e9bf2" translate="yes" xml:space="preserve">
          <source>See the manual section on &lt;a href=&quot;../../manual/types/index#Composite-Types-1&quot;&gt;Composite Types&lt;/a&gt; for more details, such as how to define constructors.</source>
          <target state="translated">생성자를 정의하는 방법과 같은 자세한 내용 은 &lt;a href=&quot;../../manual/types/index#Composite-Types-1&quot;&gt;복합 유형에&lt;/a&gt; 대한 매뉴얼 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="276cff42fa5beb1a307ecd4da800b8ad1f38c9ae" translate="yes" xml:space="preserve">
          <source>See the manual section on &lt;a href=&quot;../../manual/types/index#Tuple-Types&quot;&gt;Tuple Types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/types/index#Tuple-Types&quot;&gt;튜플 유형&lt;/a&gt; 에 대한 매뉴얼 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe32ac08e91050c27dd3a7365ae4d74571e1f1ac" translate="yes" xml:space="preserve">
          <source>See the manual section on &lt;a href=&quot;../../manual/types/index#Tuple-Types-1&quot;&gt;Tuple Types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../manual/types/index#Tuple-Types-1&quot;&gt;튜플 유형&lt;/a&gt; 의 매뉴얼 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c9bf8bf676356c5d03a4dc72fce3bcbc22a720c" translate="yes" xml:space="preserve">
          <source>See warning in the documentation for &lt;a href=&quot;#Base.Libc.free&quot;&gt;&lt;code&gt;free&lt;/code&gt;&lt;/a&gt; regarding only using this on memory originally obtained from &lt;a href=&quot;#Base.Libc.malloc&quot;&gt;&lt;code&gt;malloc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;#Base.Libc.malloc&quot;&gt; &lt;code&gt;malloc&lt;/code&gt; &lt;/a&gt; 에서 얻은 메모리에서만 이것을 사용하는 것에 관한 &lt;a href=&quot;#Base.Libc.free&quot;&gt; &lt;code&gt;free&lt;/code&gt; &lt;/a&gt; 문서의 경고를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="76bfbf056967a745f57a50a8623442154716704e" translate="yes" xml:space="preserve">
          <source>See warning in the documentation for &lt;code&gt;free&lt;/code&gt; regarding only using this on memory originally obtained from &lt;code&gt;malloc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;malloc&lt;/code&gt; 에서 원래 얻은 메모리에서만 이것을 사용하는 것과 관련하여 &lt;code&gt;free&lt;/code&gt; 문서의 경고를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="84989395cf9ab77848e80bcdb208e8dfb0c76eef" translate="yes" xml:space="preserve">
          <source>See-No-Evil Monkey</source>
          <target state="translated">노 이블 원숭이</target>
        </trans-unit>
        <trans-unit id="7dd59bd26f6a8da5acf378a8eae2e9bf4703bfeb" translate="yes" xml:space="preserve">
          <source>See? No problem. That's the correct midpoint between 2^62 and 2^63, despite the fact that &lt;code&gt;n + 2n&lt;/code&gt; is -4611686018427387904. Now try it in Matlab:</source>
          <target state="translated">보다? 문제 없어요. &lt;code&gt;n + 2n&lt;/code&gt; 이 -4611686018427387904 라는 사실에도 불구하고 2 ^ 62와 2 ^ 63 사이의 올바른 중간 점 입니다. 이제 Matlab에서 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="2934a640b3fd08d77bd1f6ffe26d0731470ee10b" translate="yes" xml:space="preserve">
          <source>Seedling</source>
          <target state="translated">Seedling</target>
        </trans-unit>
        <trans-unit id="2533a3332969a9aa67ade180ca5aa6df28b68b43" translate="yes" xml:space="preserve">
          <source>Seek a stream relative to the current position.</source>
          <target state="translated">현재 위치를 기준으로 스트림을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="76927d1d3d48984aa0450625e13d7a7a4d82568b" translate="yes" xml:space="preserve">
          <source>Seek a stream to its beginning.</source>
          <target state="translated">시작을 향해 시냇물을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="ea37da4f598ad94c4bb5b76c2010e6ae8a006048" translate="yes" xml:space="preserve">
          <source>Seek a stream to its end.</source>
          <target state="translated">끝까지 시냇물을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="2396081c853240984bd992eddb62faa8dadb1413" translate="yes" xml:space="preserve">
          <source>Seek a stream to the given position.</source>
          <target state="translated">주어진 위치로 스트림을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="44986cef8a397dae061d979c2eb0f5062a727e3b" translate="yes" xml:space="preserve">
          <source>Segment</source>
          <target state="translated">Segment</target>
        </trans-unit>
        <trans-unit id="00d7b9a3151a57950ab56865a9497e7f61f70175" translate="yes" xml:space="preserve">
          <source>Selecting an appropriate output array</source>
          <target state="translated">적절한 출력 배열 선택</target>
        </trans-unit>
        <trans-unit id="ad55c6251d199d56464938d4dc72417d6ce214f4" translate="yes" xml:space="preserve">
          <source>Selecting an appropriate output array for the given set of arguments</source>
          <target state="translated">주어진 인수 세트에 적합한 출력 배열 선택</target>
        </trans-unit>
        <trans-unit id="c4071861eec60fb0fb17c226591da595711fe36e" translate="yes" xml:space="preserve">
          <source>Selecting an efficient implementation for the given set of arguments</source>
          <target state="translated">주어진 인수 집합에 대한 효율적인 구현 선택</target>
        </trans-unit>
        <trans-unit id="d197df5813d6312f4c4257bc7fc0a709546877f0" translate="yes" xml:space="preserve">
          <source>Selects one value from &lt;code&gt;A&lt;/code&gt; for each unique value produced by &lt;code&gt;f&lt;/code&gt; applied to elements of &lt;code&gt;A&lt;/code&gt; , then return the modified A.</source>
          <target state="translated">하나의 값을 선택 의해 생성 된 각각의 고유 값 &lt;code&gt;f&lt;/code&gt; 요소에 적용될 &lt;code&gt;A&lt;/code&gt; 는 , 그 변형을 반환 A. &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cb881ab1cd188ae66aa99c3dc8228baeb938bc3" translate="yes" xml:space="preserve">
          <source>Semaphore</source>
          <target state="translated">Semaphore</target>
        </trans-unit>
        <trans-unit id="0131593607e6acdcd902799597864f0a4f8afbf6" translate="yes" xml:space="preserve">
          <source>Semidirect Product With Bottom Closed</source>
          <target state="translated">바닥이 닫힌 반 직접 제품</target>
        </trans-unit>
        <trans-unit id="a00dd390299200af6e9df5fa7f9f40aba02c5055" translate="yes" xml:space="preserve">
          <source>Send &lt;code&gt;msg&lt;/code&gt; over &lt;code&gt;socket&lt;/code&gt; to &lt;code&gt;host:port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; 을 통해 &lt;code&gt;msg&lt;/code&gt; 를 &lt;code&gt;host:port&lt;/code&gt; 로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="36652d295d2b9437f13de23cbc4aa42ebf428678" translate="yes" xml:space="preserve">
          <source>Send a printed form of &lt;code&gt;x&lt;/code&gt; to the operating system clipboard (&quot;copy&quot;).</source>
          <target state="translated">인쇄 된 &lt;code&gt;x&lt;/code&gt; 양식을 운영 체제 클립 보드 ( &quot;복사본&quot;)로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="3d8ce670d11718c8c7b553c7cf78dafb5a0200b2" translate="yes" xml:space="preserve">
          <source>Send a signal to a process. The default is to terminate the process. Returns successfully if the process has already exited, but throws an error if killing the process failed for other reasons (e.g. insufficient permissions).</source>
          <target state="translated">프로세스에 신호를 보냅니다. 기본값은 프로세스를 종료하는 것입니다. 프로세스가 이미 종료 된 경우 성공적으로 반환되지만 다른 이유로 프로세스 종료에 실패한 경우 (예 : 권한 부족) 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dfa97b4c65e150c8eed6ded51bb443e9c0fdbd9e" translate="yes" xml:space="preserve">
          <source>Sending messages and moving data constitute most of the overhead in a distributed program. Reducing the number of messages and the amount of data sent is critical to achieving performance and scalability. To this end, it is important to understand the data movement performed by Julia's various distributed programming constructs.</source>
          <target state="translated">메시지 전송 및 데이터 이동은 분산 프로그램에서 대부분의 오버 헤드를 구성합니다. 메시지 수와 전송되는 데이터 양을 줄이는 것은 성능과 확장 성을 달성하는 데 중요합니다. 이를 위해 Julia의 다양한 분산 프로그래밍 구성에 의해 수행되는 데이터 이동을 이해하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="278c9500bca1655d88c43525dc1c0196747f87d7" translate="yes" xml:space="preserve">
          <source>Sending messages to a process is done directly from any Julia task&amp;ndash;not just communication tasks&amp;ndash;again, via the appropriate &lt;code&gt;IO&lt;/code&gt; object.</source>
          <target state="translated">프로세스로 메시지를 보내는 것은 적절한 &lt;code&gt;IO&lt;/code&gt; 객체 를 통해 통신 작업뿐만 아니라 모든 Julia 작업에서 직접 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc2b4b45eddf912f5006a7337adf62b5246fd7a0" translate="yes" xml:space="preserve">
          <source>Separate convert and kernel logic</source>
          <target state="translated">별도의 변환 및 커널 논리</target>
        </trans-unit>
        <trans-unit id="b19e61058924fd153ddce51f57ff81ea70a6ff61" translate="yes" xml:space="preserve">
          <source>Separate kernel functions (aka, function barriers)</source>
          <target state="translated">별도의 커널 기능 (일명 기능 장벽)</target>
        </trans-unit>
        <trans-unit id="13a83ceaa4d52d467b05bca4cb79f30acd4d8454" translate="yes" xml:space="preserve">
          <source>Sequential iteration is implemented by the &lt;a href=&quot;#Base.iterate&quot;&gt;&lt;code&gt;iterate&lt;/code&gt;&lt;/a&gt; function. The general &lt;code&gt;for&lt;/code&gt; loop:</source>
          <target state="translated">순차 반복은 &lt;a href=&quot;#Base.iterate&quot;&gt; &lt;code&gt;iterate&lt;/code&gt; &lt;/a&gt; 기능에 의해 구현됩니다 . 일반적인 &lt;code&gt;for&lt;/code&gt; 루프 :</target>
        </trans-unit>
        <trans-unit id="ac8e1a93dd49dafea58241752a0e2eebf4445cc1" translate="yes" xml:space="preserve">
          <source>Sequential iteration is implemented by the &lt;a href=&quot;../../base/collections/index#Base.iterate&quot;&gt;&lt;code&gt;iterate&lt;/code&gt;&lt;/a&gt; function. Instead of mutating objects as they are iterated over, Julia iterators may keep track of the iteration state externally from the object. The return value from iterate is always either a tuple of a value and a state, or &lt;code&gt;nothing&lt;/code&gt; if no elements remain. The state object will be passed back to the iterate function on the next iteration and is generally considered an implementation detail private to the iterable object.</source>
          <target state="translated">순차 반복은 &lt;a href=&quot;../../base/collections/index#Base.iterate&quot;&gt; &lt;code&gt;iterate&lt;/code&gt; &lt;/a&gt; 기능에 의해 구현됩니다 . Julia 반복자는 객체가 반복 될 때 객체를 변경하는 대신 객체에서 외부로 반복 상태를 추적 할 수 있습니다. 반복의 반환 값은 항상 값과 상태의 튜플이거나 요소가 남아 &lt;code&gt;nothing&lt;/code&gt; 않으면 아무것도 아닙니다 . 상태 객체는 다음 반복에서 반복 함수로 다시 전달되며 일반적으로 반복 가능한 객체 전용의 구현 세부 사항으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="89282363da677473acdbf45f0831bde9f4d3b6c4" translate="yes" xml:space="preserve">
          <source>Serialization</source>
          <target state="translated">Serialization</target>
        </trans-unit>
        <trans-unit id="66b3413a9b4ec6cf9e61c4c82679d147538e747b" translate="yes" xml:space="preserve">
          <source>Serializing a &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; also serializes any data present in the channel. Deserializing it therefore effectively makes a copy of the original object.</source>
          <target state="translated">&lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; 직렬화는 채널에 있는 모든 데이터를 직렬화합니다. 따라서 역 직렬화하면 원본 객체의 복사본이 효과적으로 만들어집니다.</target>
        </trans-unit>
        <trans-unit id="3a191e12245bfe6cf8e0a067473bd74802ac847b" translate="yes" xml:space="preserve">
          <source>Sessions and the REPL</source>
          <target state="translated">세션과 REPL</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="29d49d68bc6e6e7a67f37b064f5896d91befff2c" translate="yes" xml:space="preserve">
          <source>Set &amp;lt;dir&amp;gt; as the home project/environment. The default @. option will search through parent directories until a Project.toml or JuliaProject.toml file is found.</source>
          <target state="translated">&amp;lt;dir&amp;gt;을 홈 프로젝트 / 환경으로 설정하십시오. 기본 @. 옵션은 Project.toml 또는 JuliaProject.toml 파일을 찾을 때까지 상위 디렉토리를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="3c0f9d00a58af7b0f4bb805c999313090193120b" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;exit_on_sigint&lt;/code&gt; flag of the julia runtime. If &lt;code&gt;false&lt;/code&gt;, Ctrl-C (SIGINT) is capturable as &lt;a href=&quot;../base/index#Core.InterruptException&quot;&gt;&lt;code&gt;InterruptException&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;try&lt;/code&gt; block. This is the default behavior in REPL, any code run via &lt;code&gt;-e&lt;/code&gt; and &lt;code&gt;-E&lt;/code&gt; and in Julia script run with &lt;code&gt;-i&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;exit_on_sigint&lt;/code&gt; 런타임의 exit_on_sigint 플래그를 설정 합니다. 경우 &lt;code&gt;false&lt;/code&gt; 에서 Ctrl-C (SIGINT)는 같은 capturable입니다 &lt;a href=&quot;../base/index#Core.InterruptException&quot;&gt; &lt;code&gt;InterruptException&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;try&lt;/code&gt; 차단합니다. 이것은 REPL의 기본 동작이며 &lt;code&gt;-e&lt;/code&gt; 및 &lt;code&gt;-E&lt;/code&gt; 를 통해 실행되는 모든 코드 및 &lt;code&gt;-i&lt;/code&gt; 옵션으로 실행되는 Julia 스크립트에서 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="78dff101035de02bb000a5f8e206286f30a2344f" translate="yes" xml:space="preserve">
          <source>Set Minus</source>
          <target state="translated">빼기 설정</target>
        </trans-unit>
        <trans-unit id="3f4bea18fbf647474d4084d3c0b8e9a425c32b70" translate="yes" xml:space="preserve">
          <source>Set UDP socket options.</source>
          <target state="translated">UDP 소켓 옵션을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7f12f942730fcb183ef924676757d8d6116ca4df" translate="yes" xml:space="preserve">
          <source>Set both the fetch and push &lt;code&gt;url&lt;/code&gt; for &lt;code&gt;remote_name&lt;/code&gt; for the &lt;a href=&quot;#LibGit2.GitRepo&quot;&gt;&lt;code&gt;GitRepo&lt;/code&gt;&lt;/a&gt; or the git repository located at &lt;code&gt;path&lt;/code&gt;. Typically git repos use &lt;code&gt;&quot;origin&quot;&lt;/code&gt; as the remote name.</source>
          <target state="translated">&lt;a href=&quot;#LibGit2.GitRepo&quot;&gt; &lt;code&gt;GitRepo&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;path&lt;/code&gt; 에 위치한 git 저장소의 &lt;code&gt;remote_name&lt;/code&gt; 에 대한 페치 및 푸시 &lt;code&gt;url&lt;/code&gt; 을 모두 설정하십시오 . 일반적으로 git repos는 &lt;code&gt;&quot;origin&quot;&lt;/code&gt; 을 원격 이름으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="47f6f158a99c1f277ff80a8f91774d1f3f9f20cb" translate="yes" xml:space="preserve">
          <source>Set environment variables to use when running the given &lt;code&gt;command&lt;/code&gt;. &lt;code&gt;env&lt;/code&gt; is either a dictionary mapping strings to strings, an array of strings of the form &lt;code&gt;&quot;var=val&quot;&lt;/code&gt;, or zero or more &lt;code&gt;&quot;var&quot;=&amp;gt;val&lt;/code&gt; pair arguments. In order to modify (rather than replace) the existing environment, create &lt;code&gt;env&lt;/code&gt; by &lt;code&gt;copy(ENV)&lt;/code&gt; and then setting &lt;code&gt;env[&quot;var&quot;]=val&lt;/code&gt; as desired, or use &lt;code&gt;withenv&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;command&lt;/code&gt; 실행할 때 사용할 환경 변수를 설정하십시오 . &lt;code&gt;env&lt;/code&gt; 는 문자열을 문자열, &lt;code&gt;&quot;var=val&quot;&lt;/code&gt; 형식의 문자열 배열 또는 0 개 이상의 &lt;code&gt;&quot;var&quot;=&amp;gt;val&lt;/code&gt; 쌍 인수로 매핑하는 사전 입니다. 기존 환경을 수정 (아닌 교환)하기 위해 생성 &lt;code&gt;env&lt;/code&gt; 의해 &lt;code&gt;copy(ENV)&lt;/code&gt; 후 및 설정 &lt;code&gt;env[&quot;var&quot;]=val&lt;/code&gt; 원하는 또는 사용 &lt;code&gt;withenv&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="06a1d068e3d8971774d30377661f039ad4e8dfc2" translate="yes" xml:space="preserve">
          <source>Set location of &lt;code&gt;julia&lt;/code&gt; executable</source>
          <target state="translated">&lt;code&gt;julia&lt;/code&gt; 실행 파일의 위치 설정</target>
        </trans-unit>
        <trans-unit id="3510131f92f97e0d782ffe4ac8ea1f4e17664447" translate="yes" xml:space="preserve">
          <source>Set the &quot;mark&quot; in the editing region (and de-activate the region if it's active)</source>
          <target state="translated">편집 영역에서 &quot;마크&quot;를 설정하고 활성 상태 인 경우 영역을 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="b28728ae16dea5619b44fe7f8bee4e547449a754" translate="yes" xml:space="preserve">
          <source>Set the &quot;mark&quot; in the editing region and make the region &quot;active&quot;, i.e. highlighted</source>
          <target state="translated">편집 영역에서 &quot;마크&quot;를 설정하고 영역을 &quot;활성화&quot;합니다 (예 : 강조 표시)</target>
        </trans-unit>
        <trans-unit id="66b2d0d4fcf4e22604551817fbcd216ffab20b92" translate="yes" xml:space="preserve">
          <source>Set the HEAD of &lt;code&gt;repo&lt;/code&gt; to the object pointed to by &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;repo&lt;/code&gt; 의 HEAD를 &lt;code&gt;ref&lt;/code&gt; 가 가리키는 오브젝트로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f30fa08c68e8f084fb5112891ac31d832c9e150" translate="yes" xml:space="preserve">
          <source>Set the current working directory.</source>
          <target state="translated">현재 작업 디렉토리를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5862cf09f48a34d38810ce190ef8fa08ff366e48" translate="yes" xml:space="preserve">
          <source>Set the global logger to &lt;code&gt;logger&lt;/code&gt;, and return the previous global logger.</source>
          <target state="translated">글로벌 로거를 &lt;code&gt;logger&lt;/code&gt; 로 설정하고 이전 글로벌 로거를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="f308b920f5f549f20ba414e9be59f7e41c2b5bea" translate="yes" xml:space="preserve">
          <source>Set the number of threads the BLAS library should use.</source>
          <target state="translated">BLAS 라이브러리가 사용해야하는 스레드 수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="29920ea380bf681220c734f5f075fb5a90c90df7" translate="yes" xml:space="preserve">
          <source>Set the optimization level (default level is 2 if unspecified or 3 if used without a level)</source>
          <target state="translated">최적화 수준 설정 (기본 수준은 지정되지 않은 경우 2, 수준없이 사용 된 경우 3)</target>
        </trans-unit>
        <trans-unit id="ea45fd0c01b6858158fa18c8c41e06f21ebd5145" translate="yes" xml:space="preserve">
          <source>Set the optional keyword argument &lt;code&gt;debuginfo&lt;/code&gt; by putting it before the function call, like this:</source>
          <target state="translated">다음과 같이 선택적 키워드 인수 &lt;code&gt;debuginfo&lt;/code&gt; 를 함수 호출 앞에 배치 하여 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe94844acf202f9c0ade596d1d0863c557df3c91" translate="yes" xml:space="preserve">
          <source>Set the passed cookie as the cluster cookie, then returns it.</source>
          <target state="translated">전달 된 쿠키를 클러스터 쿠키로 설정 한 다음이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="996e06fb620acbcbad11ced4062176fde853fa66" translate="yes" xml:space="preserve">
          <source>Set the precision (in bits) to be used for &lt;code&gt;T&lt;/code&gt; arithmetic.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 산술에 사용할 정밀도 (비트)를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="83fd69f8e91dd51899c0564b7ca7eaa19a3fa53b" translate="yes" xml:space="preserve">
          <source>Set the process title. No-op on some operating systems.</source>
          <target state="translated">프로세스 제목을 설정하십시오. 일부 운영 체제에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f90f4cb0139103f5a4fdbbc993715131f447003a" translate="yes" xml:space="preserve">
          <source>Set the rounding mode of floating point type &lt;code&gt;T&lt;/code&gt;, controlling the rounding of basic arithmetic functions (&lt;a href=&quot;../math/index#Base.:+&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;a href=&quot;../math/index#Base.:/&quot;&gt;&lt;code&gt;/&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;sqrt&lt;/code&gt;) and type conversion. Other numerical functions may give incorrect or invalid values when using rounding modes other than the default &lt;a href=&quot;../math/index#Base.Rounding.RoundNearest&quot;&gt;&lt;code&gt;RoundNearest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 유형 &lt;code&gt;T&lt;/code&gt; 의 반올림 모드를 설정하고 기본 산술 함수의 반올림 ( &lt;a href=&quot;../math/index#Base.:+&quot;&gt; &lt;code&gt;+&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;a href=&quot;../math/index#Base.:/&quot;&gt; &lt;code&gt;/&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;sqrt&lt;/code&gt; ) 및 유형 변환을 제어하십시오. 다른 수치 함수는 기본 &lt;a href=&quot;../math/index#Base.Rounding.RoundNearest&quot;&gt; &lt;code&gt;RoundNearest&lt;/code&gt; &lt;/a&gt; 이외의 반올림 모드를 사용할 때 올바르지 않거나 유효하지 않은 값을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e5d963cbdae9aea9f927cfdd56d65463e923278" translate="yes" xml:space="preserve">
          <source>Set-Like Collections</source>
          <target state="translated">세트와 같은 컬렉션</target>
        </trans-unit>
        <trans-unit id="03637a3281b25c62abaf1329135303db283e161c" translate="yes" xml:space="preserve">
          <source>Sets of definitions like the following are confusing:</source>
          <target state="translated">다음과 같은 정의는 혼동됩니다.</target>
        </trans-unit>
        <trans-unit id="cc6947ee396a9d679500a412cd44a4b2697a1230" translate="yes" xml:space="preserve">
          <source>Sets the current head to the specified commit oid and optionally resets the index and working tree to match.</source>
          <target state="translated">현재 헤드를 지정된 commit oid로 설정하고 선택적으로 인덱스 및 작업 트리를 재설정하여 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="cbaa82a759b13f764f4e2da70d9c326a29dc2055" translate="yes" xml:space="preserve">
          <source>Setting the optional &lt;code&gt;addr_type&lt;/code&gt; parameter to &lt;code&gt;IPv4&lt;/code&gt; or &lt;code&gt;IPv6&lt;/code&gt; causes only addresses of that type to be returned.</source>
          <target state="translated">선택적 &lt;code&gt;addr_type&lt;/code&gt; 매개 변수를 &lt;code&gt;IPv4&lt;/code&gt; 또는 &lt;code&gt;IPv6&lt;/code&gt; 으로 설정 하면 해당 유형의 주소 만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="f96dd0c67fa73ab291c057e2e14a0df1300a9702" translate="yes" xml:space="preserve">
          <source>Several Julia values can be pushed at once using the &lt;code&gt;JL_GC_PUSH2&lt;/code&gt; , &lt;code&gt;JL_GC_PUSH3&lt;/code&gt; , &lt;code&gt;JL_GC_PUSH4&lt;/code&gt; , &lt;code&gt;JL_GC_PUSH5&lt;/code&gt; , and &lt;code&gt;JL_GC_PUSH6&lt;/code&gt; macros. To push an array of Julia values one can use the &lt;code&gt;JL_GC_PUSHARGS&lt;/code&gt; macro, which can be used as follows:</source>
          <target state="translated">&lt;code&gt;JL_GC_PUSH2&lt;/code&gt; , &lt;code&gt;JL_GC_PUSH3&lt;/code&gt; , &lt;code&gt;JL_GC_PUSH4&lt;/code&gt; , &lt;code&gt;JL_GC_PUSH5&lt;/code&gt; 및 &lt;code&gt;JL_GC_PUSH6&lt;/code&gt; 매크로를 사용하여 여러 Julia 값을 한 번에 푸시 할 수 있습니다 . Julia 값의 배열을 푸시하려면 &lt;code&gt;JL_GC_PUSHARGS&lt;/code&gt; 매크로를 사용하면 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af928633029a42d21800f86d727f01b5cadf57a8" translate="yes" xml:space="preserve">
          <source>Several additional restrictions are placed on the operations that can be done while precompiling code to help the user avoid other wrong-behavior situations:</source>
          <target state="translated">사용자가 다른 잘못된 동작 상황을 피할 수 있도록 코드를 미리 컴파일하는 동안 수행 할 수있는 작업에는 몇 가지 추가 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f93e49fa90ce37d5c6876608c48743a1f078e63c" translate="yes" xml:space="preserve">
          <source>Several standard functions like &lt;a href=&quot;../../base/strings/index#Base.chop&quot;&gt;&lt;code&gt;chop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/strings/index#Base.chomp&quot;&gt;&lt;code&gt;chomp&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../base/strings/index#Base.strip&quot;&gt;&lt;code&gt;strip&lt;/code&gt;&lt;/a&gt; return a &lt;a href=&quot;../../base/strings/index#Base.SubString&quot;&gt;&lt;code&gt;SubString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../base/strings/index#Base.chop&quot;&gt; &lt;code&gt;chop&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../base/strings/index#Base.chomp&quot;&gt; &lt;code&gt;chomp&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../base/strings/index#Base.strip&quot;&gt; &lt;code&gt;strip&lt;/code&gt; &lt;/a&gt; 과 같은 여러 표준 함수 는 &lt;a href=&quot;../../base/strings/index#Base.SubString&quot;&gt; &lt;code&gt;SubString&lt;/code&gt; 을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ebcb071ef5f58e14c219843c64e6e7fc9ecaf5c5" translate="yes" xml:space="preserve">
          <source>Severity/verbosity of a log record.</source>
          <target state="translated">로그 레코드의 심각도 / 상세도.</target>
        </trans-unit>
        <trans-unit id="aab8e5b0a0792357c9491abc1e1e4a4b5678856c" translate="yes" xml:space="preserve">
          <source>Shared Array support is available via module &lt;code&gt;SharedArrays&lt;/code&gt; which must be explicitly loaded on all participating workers.</source>
          <target state="translated">Shared Array 지원은 모든 참여 작업자에게 명시 적으로로드해야하는 &lt;code&gt;SharedArrays&lt;/code&gt; 모듈을 통해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="bb2da0d622fbe44933bacf056b710dcb05aa5164" translate="yes" xml:space="preserve">
          <source>Shared Arrays</source>
          <target state="translated">공유 어레이</target>
        </trans-unit>
        <trans-unit id="b7d89842c110a65a93fb3e9a668f4b792bbe6a83" translate="yes" xml:space="preserve">
          <source>Shared Arrays and Distributed Garbage Collection</source>
          <target state="translated">공유 어레이 및 분산 가비지 콜렉션</target>
        </trans-unit>
        <trans-unit id="8debce0c3bc86670fafaaed11703ec7d447586e1" translate="yes" xml:space="preserve">
          <source>Shared Arrays use system shared memory to map the same array across many processes. While there are some similarities to a &lt;a href=&quot;https://github.com/JuliaParallel/DistributedArrays.jl&quot;&gt;&lt;code&gt;DArray&lt;/code&gt;&lt;/a&gt;, the behavior of a &lt;a href=&quot;../../stdlib/sharedarrays/index#SharedArrays.SharedArray&quot;&gt;&lt;code&gt;SharedArray&lt;/code&gt;&lt;/a&gt; is quite different. In a &lt;a href=&quot;https://github.com/JuliaParallel/DistributedArrays.jl&quot;&gt;&lt;code&gt;DArray&lt;/code&gt;&lt;/a&gt;, each process has local access to just a chunk of the data, and no two processes share the same chunk; in contrast, in a &lt;a href=&quot;../../stdlib/sharedarrays/index#SharedArrays.SharedArray&quot;&gt;&lt;code&gt;SharedArray&lt;/code&gt;&lt;/a&gt; each &quot;participating&quot; process has access to the entire array. A &lt;a href=&quot;../../stdlib/sharedarrays/index#SharedArrays.SharedArray&quot;&gt;&lt;code&gt;SharedArray&lt;/code&gt;&lt;/a&gt; is a good choice when you want to have a large amount of data jointly accessible to two or more processes on the same machine.</source>
          <target state="translated">공유 어레이는 시스템 공유 메모리를 사용하여 여러 프로세스에서 동일한 어레이를 매핑합니다. A와 유사점이 있지만 &lt;a href=&quot;https://github.com/JuliaParallel/DistributedArrays.jl&quot;&gt; &lt;code&gt;DArray&lt;/code&gt; 는&lt;/a&gt; , a의 행동 &lt;a href=&quot;../../stdlib/sharedarrays/index#SharedArrays.SharedArray&quot;&gt; &lt;code&gt;SharedArray&lt;/code&gt; 는&lt;/a&gt; 매우 다르다. A의 &lt;a href=&quot;https://github.com/JuliaParallel/DistributedArrays.jl&quot;&gt; &lt;code&gt;DArray&lt;/code&gt; &lt;/a&gt; , 각각의 프로세스는 단지 데이터 청크에 대한 로컬 액세스를 가지며, 두 개의 프로세스는 동일한 청크를 공유하지; 반대로 &lt;a href=&quot;../../stdlib/sharedarrays/index#SharedArrays.SharedArray&quot;&gt; &lt;code&gt;SharedArray&lt;/code&gt; 에서&lt;/a&gt; 각 &quot;참여&quot;프로세스는 전체 어레이에 액세스 할 수 있습니다. &lt;a href=&quot;../../stdlib/sharedarrays/index#SharedArrays.SharedArray&quot;&gt; &lt;code&gt;SharedArray&lt;/code&gt; 는&lt;/a&gt; 같은 시스템에 두 개 이상의 프로세스에 공동으로 접근 많은 양의 데이터를하고자 할 때 좋은 선택입니다.</target>
        </trans-unit>
        <trans-unit id="e190913473036dea5020411230a2ef97631ab1e8" translate="yes" xml:space="preserve">
          <source>Shared libraries and functions are referenced by a tuple of the form &lt;code&gt;(:function, &quot;library&quot;)&lt;/code&gt; or &lt;code&gt;(&quot;function&quot;, &quot;library&quot;)&lt;/code&gt; where &lt;code&gt;function&lt;/code&gt; is the C-exported function name, and &lt;code&gt;library&lt;/code&gt; refers to the shared library name. Shared libraries available in the (platform-specific) load path will be resolved by name. The full path to the library may also be specified.</source>
          <target state="translated">공유 라이브러리 및 함수는 &lt;code&gt;(:function, &quot;library&quot;)&lt;/code&gt; 또는 &lt;code&gt;(&quot;function&quot;, &quot;library&quot;)&lt;/code&gt; 형식의 튜플에 의해 참조됩니다. 여기서 &lt;code&gt;function&lt;/code&gt; 은 C에서 내 보낸 함수 이름이고 &lt;code&gt;library&lt;/code&gt; 는 공유 라이브러리 이름을 나타냅니다. (플랫폼 별)로드 경로에서 사용 가능한 공유 라이브러리는 이름으로 확인됩니다. 라이브러리의 전체 경로도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="912728fe61f515ab62934ca251cf4def66e656f9" translate="yes" xml:space="preserve">
          <source>Shared libraries and functions are referenced by a tuple of the form &lt;code&gt;(:function, &quot;library&quot;)&lt;/code&gt; or &lt;code&gt;(&quot;function&quot;, &quot;library&quot;)&lt;/code&gt; where &lt;code&gt;function&lt;/code&gt; is the C-exported function name. &lt;code&gt;library&lt;/code&gt; refers to the shared library name: shared libraries available in the (platform-specific) load path will be resolved by name, and if necessary a direct path may be specified.</source>
          <target state="translated">공유 라이브러리와 함수는 &lt;code&gt;(:function, &quot;library&quot;)&lt;/code&gt; 또는 &lt;code&gt;(&quot;function&quot;, &quot;library&quot;)&lt;/code&gt; 형식의 튜플에서 참조됩니다. 여기서 &lt;code&gt;function&lt;/code&gt; 은 C로 내 보낸 함수 이름입니다. &lt;code&gt;library&lt;/code&gt; 는 공유 라이브러리 이름을 나타냅니다. (플랫폼 별)로드 경로에서 사용 가능한 공유 라이브러리는 이름으로 확인되며 필요한 경우 직접 경로를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb929c20ee118d1648f10cf63973d3694f6b38dc" translate="yes" xml:space="preserve">
          <source>SharedArrays.SharedArray</source>
          <target state="translated">SharedArrays.SharedArray</target>
        </trans-unit>
        <trans-unit id="5fc5f1d1e7eb18a863d7414ae0ba350b16674a1d" translate="yes" xml:space="preserve">
          <source>SharedArrays.SharedMatrix</source>
          <target state="translated">SharedArrays.SharedMatrix</target>
        </trans-unit>
        <trans-unit id="3dbf0642e8e5b08c281c0f3961bea10b8ba7ef24" translate="yes" xml:space="preserve">
          <source>SharedArrays.SharedVector</source>
          <target state="translated">SharedArrays.SharedVector</target>
        </trans-unit>
        <trans-unit id="cc35980abe22a14f0f47ab472374a5283357bbc1" translate="yes" xml:space="preserve">
          <source>SharedArrays.indexpids()</source>
          <target state="translated">SharedArrays.indexpids()</target>
        </trans-unit>
        <trans-unit id="00192f4e6a25cd120b419d2533c26cb89edeae1c" translate="yes" xml:space="preserve">
          <source>SharedArrays.localindices()</source>
          <target state="translated">SharedArrays.localindices()</target>
        </trans-unit>
        <trans-unit id="d642e568596e6f9e6fb46dfc26aeea098db5703a" translate="yes" xml:space="preserve">
          <source>SharedArrays.sdata()</source>
          <target state="translated">SharedArrays.sdata()</target>
        </trans-unit>
        <trans-unit id="76663b8722e6a3d52ef030b5b9440383a53f5c90" translate="yes" xml:space="preserve">
          <source>Shaved Ice</source>
          <target state="translated">빙수</target>
        </trans-unit>
        <trans-unit id="02df9167bdb67c635b991f5ae1f7f708f35f0ecd" translate="yes" xml:space="preserve">
          <source>Sheep</source>
          <target state="translated">Sheep</target>
        </trans-unit>
        <trans-unit id="1648b09e7397f0e694477a89b4f0f3c2f1639320" translate="yes" xml:space="preserve">
          <source>Shell metacharacters, such as &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt;, need to be quoted (or escaped) inside of Julia's backticks:</source>
          <target state="translated">셸 메타 문자 (예 : &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;&amp;amp;&lt;/code&gt; , 및 &lt;code&gt;&amp;gt;&lt;/code&gt; 는 Julia의 백틱 내부에서 인용 (또는 이스케이프)해야합니다.</target>
        </trans-unit>
        <trans-unit id="411430d5faea18a48223083d430d03ec02723be9" translate="yes" xml:space="preserve">
          <source>Shell mode</source>
          <target state="translated">쉘 모드</target>
        </trans-unit>
        <trans-unit id="3a89e6d18fc62a345fef7e3ae72b85f06eee482c" translate="yes" xml:space="preserve">
          <source>Shift-Arrow Key</source>
          <target state="translated">Shift- 화살표 키</target>
        </trans-unit>
        <trans-unit id="323d4fc7337134a2162bb67a7863b34b01f77eb8" translate="yes" xml:space="preserve">
          <source>Ship</source>
          <target state="translated">Ship</target>
        </trans-unit>
        <trans-unit id="9b62d709d134a9d3d0b2d41d0c7a4e9c6b73ef99" translate="yes" xml:space="preserve">
          <source>Shooting Star</source>
          <target state="translated">슈팅 스타</target>
        </trans-unit>
        <trans-unit id="dc28ceec7fbc599706ecf29a5a6dffa444c16a09" translate="yes" xml:space="preserve">
          <source>Short Rightwards Arrow Above Leftwards Arrow</source>
          <target state="translated">왼쪽 오른쪽 화살표 위의 짧은 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="03f25891242bccd5ac1c5e21cd8ea7696ea30df8" translate="yes" xml:space="preserve">
          <source>Short form for conditionals; read &quot;if &lt;code&gt;a&lt;/code&gt;, evaluate &lt;code&gt;b&lt;/code&gt; otherwise evaluate &lt;code&gt;c&lt;/code&gt;&quot;. Also known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/%3F:&quot;&gt;ternary operator&lt;/a&gt;.</source>
          <target state="translated">조건 문의 약식. &quot;만약 &lt;code&gt;a&lt;/code&gt; 이면 &lt;code&gt;b&lt;/code&gt; 평가하고 그렇지 않으면 &lt;code&gt;c&lt;/code&gt; 평가 &quot;를 읽습니다 . &lt;a href=&quot;https://en.wikipedia.org/wiki/%3F:&quot;&gt;삼항 연산자&lt;/a&gt; 라고도합니다 .</target>
        </trans-unit>
        <trans-unit id="82fde4569a2faa44c5ddeaabe546ab1be94f941e" translate="yes" xml:space="preserve">
          <source>Short-Circuit Evaluation</source>
          <target state="translated">단락 평가</target>
        </trans-unit>
        <trans-unit id="16194995605d6ee90ec8362ebec2339fee131c61" translate="yes" xml:space="preserve">
          <source>Short-circuit evaluation is quite similar to conditional evaluation. The behavior is found in most imperative programming languages having the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; boolean operators: in a series of boolean expressions connected by these operators, only the minimum number of expressions are evaluated as are necessary to determine the final boolean value of the entire chain. Explicitly, this means that:</source>
          <target state="translated">단락 평가는 조건부 평가와 매우 유사합니다. 동작은 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 및 &lt;code&gt;||&lt;/code&gt; 부울 연산자 : 이러한 연산자로 연결된 일련의 부울 식에서 전체 체인의 최종 부울 값을 결정하는 데 필요한 최소 수의 식만 평가됩니다. 분명히 이것은 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1bd236d3e884d27ae35594342e910bb0a3af9552" translate="yes" xml:space="preserve">
          <source>Short-circuiting boolean AND.</source>
          <target state="translated">부울 AND 단락.</target>
        </trans-unit>
        <trans-unit id="ae11a365f3bb222f343bea5c896bc27e5b4b5c56" translate="yes" xml:space="preserve">
          <source>Short-circuiting boolean OR.</source>
          <target state="translated">단락 부울 OR.</target>
        </trans-unit>
        <trans-unit id="f63c57f4bb632446ad16abfbfaec70109fe6b488" translate="yes" xml:space="preserve">
          <source>Shortcake</source>
          <target state="translated">Shortcake</target>
        </trans-unit>
        <trans-unit id="13d857d690e61aa5d2c21bbca39ba2d225b916e2" translate="yes" xml:space="preserve">
          <source>Show a descriptive representation of an exception object &lt;code&gt;e&lt;/code&gt;. This method is used to display the exception after a call to &lt;a href=&quot;../base/index#Core.throw&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외 객체에 대한 설명을 표시합니다 . &lt;code&gt;e&lt;/code&gt; . 이 메소드는 &lt;a href=&quot;../base/index#Core.throw&quot;&gt; &lt;code&gt;throw&lt;/code&gt; &lt;/a&gt; 호출 후 예외를 표시하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b4882a44c113b7895b3f5753b35ef8afda29feed" translate="yes" xml:space="preserve">
          <source>Show a file using the default pager, optionally providing a starting line number. Returns to the &lt;code&gt;julia&lt;/code&gt; prompt when you quit the pager.</source>
          <target state="translated">기본 페이저를 사용하여 파일을 표시하고 선택적으로 시작 줄 번호를 제공하십시오. 호출기를 종료 하면 &lt;code&gt;julia&lt;/code&gt; 프롬프트로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="fb2058ca083d1f36fe794e918744abb9b5929c90" translate="yes" xml:space="preserve">
          <source>Show an expression and result, returning the result. See also &lt;code&gt;show&lt;/code&gt;.</source>
          <target state="translated">식과 결과를 보여주고 결과를 반환합니다. &lt;code&gt;show&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f43576ed920f74159732c307b9698bf20b405fca" translate="yes" xml:space="preserve">
          <source>Show every part of the representation of a value. The depth of the output is truncated at &lt;code&gt;maxdepth&lt;/code&gt;.</source>
          <target state="translated">값 표현의 모든 부분을 보여줍니다. 출력 깊이는 &lt;code&gt;maxdepth&lt;/code&gt; 에서 잘립니다 .</target>
        </trans-unit>
        <trans-unit id="52fe6a176e8e2adbe870419929d33865588c87b5" translate="yes" xml:space="preserve">
          <source>Show every part of the representation of the given expression. Equivalent to &lt;a href=&quot;#Base.dump&quot;&gt;&lt;code&gt;dump(:(expr))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 표현 표현의 모든 부분을 보여줍니다. &lt;a href=&quot;#Base.dump&quot;&gt; &lt;code&gt;dump(:(expr))&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="11ad130f369037a7776b592b11e899b935a70f0a" translate="yes" xml:space="preserve">
          <source>Show expression &lt;code&gt;ex&lt;/code&gt; as a lisp style S-expression.</source>
          <target state="translated">표현식 &lt;code&gt;ex&lt;/code&gt; 를 lisp 스타일 S- 표현식으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4832baace2d518f59224e12643f64768fb2af2e1" translate="yes" xml:space="preserve">
          <source>Show the definition of a function using the default pager, optionally specifying a tuple of types to indicate which method to see.</source>
          <target state="translated">기본 호출기를 사용하여 함수의 정의를 표시하고 선택적으로 볼 방법을 나타내는 유형의 튜플을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="d6c7ab6afc2f78e458626158eaa71e794282cc61" translate="yes" xml:space="preserve">
          <source>Show which files have changed in the git repository &lt;code&gt;repo&lt;/code&gt; between branches &lt;code&gt;branch1&lt;/code&gt; and &lt;code&gt;branch2&lt;/code&gt;.</source>
          <target state="translated">망할 놈의 저장소에 변화가있는 파일을보기 &lt;code&gt;repo&lt;/code&gt; 가지 사이에 &lt;code&gt;branch1&lt;/code&gt; 및 &lt;code&gt;branch2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5463d324a16d0a6f3cc88c9bbf9479fb75dc6dc" translate="yes" xml:space="preserve">
          <source>Shower</source>
          <target state="translated">Shower</target>
        </trans-unit>
        <trans-unit id="2366cd0e6538aa1886ac114796240ce8779cfe89" translate="yes" xml:space="preserve">
          <source>Shuffle Product</source>
          <target state="translated">셔플 제품</target>
        </trans-unit>
        <trans-unit id="ea3436088a360535a9d571ff9607783669733344" translate="yes" xml:space="preserve">
          <source>Side effects and mutable function arguments</source>
          <target state="translated">부작용 및 가변 함수 인수</target>
        </trans-unit>
        <trans-unit id="2f4220634d39bb054925676f636fd8b0d06a202f" translate="yes" xml:space="preserve">
          <source>Sign and absolute value functions</source>
          <target state="translated">부호 및 절대 값 함수</target>
        </trans-unit>
        <trans-unit id="c8dbaded4e6ce37a5bfa6e72c4d06fd92a77d90f" translate="yes" xml:space="preserve">
          <source>Signed?</source>
          <target state="translated">Signed?</target>
        </trans-unit>
        <trans-unit id="c235447096b8f7d2151ca5fe3290fd626e02337d" translate="yes" xml:space="preserve">
          <source>Silhouette Of Japan</source>
          <target state="translated">일본의 실루엣</target>
        </trans-unit>
        <trans-unit id="a0d7df455d3db0ad995b979a499d31f8b8eee061" translate="yes" xml:space="preserve">
          <source>SimdLoop.@simd</source>
          <target state="translated">SimdLoop.@simd</target>
        </trans-unit>
        <trans-unit id="6f080959dd002556bacf012d8b5ccf52be3834b3" translate="yes" xml:space="preserve">
          <source>Similar Above Greater-Than Above Equals Sign</source>
          <target state="translated">위의 같음보다 큼 기호</target>
        </trans-unit>
        <trans-unit id="f0ae1034c198e10b7c671e0b0228242ecb161031" translate="yes" xml:space="preserve">
          <source>Similar Above Less-Than Above Equals Sign</source>
          <target state="translated">위의 같음 기호보다 작음</target>
        </trans-unit>
        <trans-unit id="2a64ef5f565198e83693a5db32f94bc2b17951a1" translate="yes" xml:space="preserve">
          <source>Similar Minus Similar</source>
          <target state="translated">유사 마이너스 유사</target>
        </trans-unit>
        <trans-unit id="7b30f9014c9689fa8c4bf6c979c37e9059abe96d" translate="yes" xml:space="preserve">
          <source>Similar Or Greater-Than</source>
          <target state="translated">비슷하거나 더 큰 것</target>
        </trans-unit>
        <trans-unit id="4660b04770bc0cfbcb3f4bb7ae952af3a9aea539" translate="yes" xml:space="preserve">
          <source>Similar Or Less-Than</source>
          <target state="translated">비슷하거나 적음</target>
        </trans-unit>
        <trans-unit id="7e1a9a419122d67df4555d2738f2f12db073b787" translate="yes" xml:space="preserve">
          <source>Similar definitions exist for &lt;code&gt;AbstractString&lt;/code&gt;, &lt;a href=&quot;../../base/arrays/index#Core.AbstractArray&quot;&gt;&lt;code&gt;AbstractArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../base/collections/index#Base.AbstractDict&quot;&gt;&lt;code&gt;AbstractDict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractString&lt;/code&gt; , &lt;a href=&quot;../../base/arrays/index#Core.AbstractArray&quot;&gt; &lt;code&gt;AbstractArray&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../base/collections/index#Base.AbstractDict&quot;&gt; &lt;code&gt;AbstractDict&lt;/code&gt; 에&lt;/a&gt; 대한 비슷한 정의가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9140282b9d999b7d6628367cce314f81a94758c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#Base.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, but starting from the end of the string.</source>
          <target state="translated">유사 &lt;a href=&quot;#Base.split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt; 하지만, 문자열의 끝에서 시작.</target>
        </trans-unit>
        <trans-unit id="2f85b46118bc97008e1bb1b0ff2763eb0271adf8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#Libdl.dlopen&quot;&gt;&lt;code&gt;dlopen&lt;/code&gt;&lt;/a&gt;, except returns &lt;code&gt;C_NULL&lt;/code&gt; instead of raising errors. This method is now deprecated in favor of &lt;code&gt;dlopen(libfile::AbstractString [, flags::Integer]; throw_error=false)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Libdl.dlopen&quot;&gt; &lt;code&gt;dlopen&lt;/code&gt; &lt;/a&gt; 과 유사하지만 오류를 발생 &lt;code&gt;C_NULL&lt;/code&gt; 대신 C_NULL 을 반환 합니다. 이 메소드는 이제 &lt;code&gt;dlopen(libfile::AbstractString [, flags::Integer]; throw_error=false)&lt;/code&gt; 을 위해 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4fa5b667ee208336befd004e52073217d8a7ce61" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;../math/index#Base.:==&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt;, except for the treatment of floating point numbers and of missing values. &lt;code&gt;isequal&lt;/code&gt; treats all floating-point &lt;code&gt;NaN&lt;/code&gt; values as equal to each other, treats &lt;code&gt;-0.0&lt;/code&gt; as unequal to &lt;code&gt;0.0&lt;/code&gt;, and &lt;a href=&quot;#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; as equal to &lt;code&gt;missing&lt;/code&gt;. Always returns a &lt;code&gt;Bool&lt;/code&gt; value.</source>
          <target state="translated">부동 소수점 숫자 및 결 측값 처리를 제외하고 &lt;a href=&quot;../math/index#Base.:==&quot;&gt; &lt;code&gt;==&lt;/code&gt; &lt;/a&gt; 와 유사 합니다. &lt;code&gt;isequal&lt;/code&gt; 은 모든 부동 소수점 &lt;code&gt;NaN&lt;/code&gt; 값을 서로 동일하게 취급하고 &lt;code&gt;-0.0&lt;/code&gt; 을 &lt;code&gt;0.0&lt;/code&gt; 과 동일하지 않은 것으로 처리 하고 &lt;a href=&quot;#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt; 과 같지 &lt;code&gt;missing&lt;/code&gt; 합니다. 항상 &lt;code&gt;Bool&lt;/code&gt; 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a8fd99c8e94dc4eb4d1b8dc83a5e73bf71c2e18f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;open(command, args...; kwargs...)&lt;/code&gt;, but calls &lt;code&gt;f(stream)&lt;/code&gt; on the resulting process stream, then closes the input stream and waits for the process to complete. Returns the value returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;code&gt;open(command, args...; kwargs...)&lt;/code&gt; 하지만 호출 &lt;code&gt;f(stream)&lt;/code&gt; 생성 공정 스트림에 후 처리가 완료 될 입력 스트림 대기를 닫는다. &lt;code&gt;f&lt;/code&gt; 가 반환 한 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="376a11ca732c35654209dc4520ce7e23f16bb65b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;open(command, mode, stdio)&lt;/code&gt;, but calls &lt;code&gt;f(stream)&lt;/code&gt; on the resulting process stream, then closes the input stream and waits for the process to complete. Returns the value returned by &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;code&gt;open(command, mode, stdio)&lt;/code&gt; 있지만, 전화 &lt;code&gt;f(stream)&lt;/code&gt; 생성 공정 스트림에 후 처리가 완료 될 입력 스트림 대기를 닫는다. &lt;code&gt;f&lt;/code&gt; 가 반환 한 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="97b6ab0a0cbe01a6b762c7b5b042af5cbaaa9110" translate="yes" xml:space="preserve">
          <source>Similarly, if the arguments are separated by tabs or spaces, then their contents are &lt;em&gt;horizontally concatenated&lt;/em&gt; together.</source>
          <target state="translated">마찬가지로 인수가 탭이나 공백으로 구분되면 해당 내용이 &lt;em&gt;가로로&lt;/em&gt; 함께 &lt;em&gt;연결&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="95335ed440bfff85ce8538639cf5d28b28869bf7" translate="yes" xml:space="preserve">
          <source>Similarly, more than &lt;code&gt;N&lt;/code&gt; indices may be provided if all the indices beyond the dimensionality of the array are &lt;code&gt;1&lt;/code&gt; (or more generally are the first and only element of &lt;code&gt;axes(A, d)&lt;/code&gt; where &lt;code&gt;d&lt;/code&gt; is that particular dimension number). This allows vectors to be indexed like one-column matrices, for example:</source>
          <target state="translated">유사하게, 어레이의 차원을 초과하는 모든 인덱스가 &lt;code&gt;1&lt;/code&gt; 인 경우 (또는 일반적으로 &lt;code&gt;axes(A, d)&lt;/code&gt; 첫 번째이자 유일한 요소 (A, d) 인 경우, &lt;code&gt;d&lt;/code&gt; 는 특정 치수 번호) &lt;code&gt;N&lt;/code&gt; 개보다 많은 인덱스가 제공 될 수있다 . 이를 통해 벡터를 1 열 행렬처럼 색인화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ce17f01caba3e7fcf4e70553f21642d331d27ba" translate="yes" xml:space="preserve">
          <source>Similarly, the environment variable can be used to enable debug logging of modules, such as &lt;code&gt;Pkg&lt;/code&gt;, or module roots (see &lt;a href=&quot;../../base/base/index#Base.moduleroot&quot;&gt;&lt;code&gt;Base.moduleroot&lt;/code&gt;&lt;/a&gt;). To enable all debug logging, use the special value &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 환경 변수를 사용하여 &lt;code&gt;Pkg&lt;/code&gt; 또는 모듈 루트 와 같은 모듈의 디버그 로깅을 활성화 할 수 있습니다 ( &lt;a href=&quot;../../base/base/index#Base.moduleroot&quot;&gt; &lt;code&gt;Base.moduleroot&lt;/code&gt; &lt;/a&gt; 참조 ). 모든 디버그 로깅을 사용하려면 특수 값 &lt;code&gt;all&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5feb803bbd01f737e0b7adde006f0c9ae2a90dfd" translate="yes" xml:space="preserve">
          <source>Similarly, you can completely override out-of-place broadcasting with a &lt;code&gt;copy(::Broadcasted)&lt;/code&gt; method.</source>
          <target state="translated">마찬가지로 &lt;code&gt;copy(::Broadcasted)&lt;/code&gt; 메서드를 사용하여 외부 방송을 완전히 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c22f7716f4ba4a45fb97f76539f0af217ea85698" translate="yes" xml:space="preserve">
          <source>Simple blocks:</source>
          <target state="translated">간단한 블록 :</target>
        </trans-unit>
        <trans-unit id="0634da4a81121be3978ee9743ea4d65e34bf92d2" translate="yes" xml:space="preserve">
          <source>Simple unit testing can be performed with the &lt;code&gt;@test&lt;/code&gt; and &lt;code&gt;@test_throws&lt;/code&gt; macros:</source>
          <target state="translated">&lt;code&gt;@test&lt;/code&gt; 및 &lt;code&gt;@test_throws&lt;/code&gt; 매크로를 사용하여 간단한 단위 테스트를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7aa08ec2f745a5cc8c82ca5dcaaf00e59b1eb79d" translate="yes" xml:space="preserve">
          <source>Simplistic logger for logging all messages with level greater than or equal to &lt;code&gt;min_level&lt;/code&gt; to &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;min_level&lt;/code&gt; 이상의 레벨을 가진 모든 메시지 를 &lt;code&gt;stream&lt;/code&gt; 에 로깅 하기 위한 간단한 로거 .</target>
        </trans-unit>
        <trans-unit id="59cec8ece150f09f30010bb66e54f9934915342c" translate="yes" xml:space="preserve">
          <source>Simultaneously compute the sine and cosine of &lt;code&gt;x&lt;/code&gt;, where the &lt;code&gt;x&lt;/code&gt; is in radians.</source>
          <target state="translated">동시의 사인 및 코사인 계산 &lt;code&gt;x&lt;/code&gt; 여기서, &lt;code&gt;x&lt;/code&gt; 는 라디안이다.</target>
        </trans-unit>
        <trans-unit id="117050eb680a739bd88cd0ff10dfac98e18ee085" translate="yes" xml:space="preserve">
          <source>Simultaneously return the &lt;code&gt;floor&lt;/code&gt; and &lt;code&gt;ceil&lt;/code&gt; of &lt;code&gt;Period&lt;/code&gt; at resolution &lt;code&gt;p&lt;/code&gt;. More efficient than calling both &lt;code&gt;floor&lt;/code&gt; and &lt;code&gt;ceil&lt;/code&gt; individually.</source>
          <target state="translated">해상도 &lt;code&gt;p&lt;/code&gt; 에서 &lt;code&gt;Period&lt;/code&gt; 의 &lt;code&gt;floor&lt;/code&gt; 과 &lt;code&gt;ceil&lt;/code&gt; 을 동시에 반환합니다 . &lt;code&gt;floor&lt;/code&gt; 과 &lt;code&gt;ceil&lt;/code&gt; 개별적으로 호출하는 것보다 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="ddf5a498d8c50bc560735315853859d694145dfc" translate="yes" xml:space="preserve">
          <source>Simultaneously return the &lt;code&gt;floor&lt;/code&gt; and &lt;code&gt;ceil&lt;/code&gt; of a &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; at resolution &lt;code&gt;p&lt;/code&gt;. More efficient than calling both &lt;code&gt;floor&lt;/code&gt; and &lt;code&gt;ceil&lt;/code&gt; individually.</source>
          <target state="translated">해상도 &lt;code&gt;p&lt;/code&gt; 에서 &lt;code&gt;Date&lt;/code&gt; 또는 &lt;code&gt;DateTime&lt;/code&gt; 의 &lt;code&gt;floor&lt;/code&gt; 과 &lt;code&gt;ceil&lt;/code&gt; 을 동시에 반환합니다 . &lt;code&gt;floor&lt;/code&gt; 과 &lt;code&gt;ceil&lt;/code&gt; 개별적으로 호출하는 것보다 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="b58e265cc33e1bfc34e37832ea4451c5590bc6e8" translate="yes" xml:space="preserve">
          <source>Simultaneously return the month and day parts of a &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 또는 &lt;code&gt;DateTime&lt;/code&gt; 의 월과 일 부분을 동시에 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="09cf560604a6ba7a2aae33c313d083a6f2006490" translate="yes" xml:space="preserve">
          <source>Simultaneously return the year and month parts of a &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 또는 &lt;code&gt;DateTime&lt;/code&gt; 의 연도 및 월 부분을 동시에 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ae97fed5381ea26b6e6abad7ee87261748c9edae" translate="yes" xml:space="preserve">
          <source>Simultaneously return the year, month and day parts of a &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 또는 &lt;code&gt;DateTime&lt;/code&gt; 의 연도, 월 및 일 부분을 동시에 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2d8547fb4926321d1494cdbce0f2ceee9efbf7e5" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;s are write-once and cached locally, the act of &lt;code&gt;fetch&lt;/code&gt;ing a &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; also updates reference tracking information on the node owning the value.</source>
          <target state="translated">때문에 &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 의 쓰기는-하면 로컬 캐시의 행동이 &lt;code&gt;fetch&lt;/code&gt; 보내고 &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 도 값을 소유하는 노드에서 참조 추적 정보를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="02ee6044d8cc6590f25bd3589ed6d17b0a3d602d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;A&lt;/code&gt; is not Hermitian, symmetric, triangular, tridiagonal, or bidiagonal, an LU factorization may be the best we can do. Compare with:</source>
          <target state="translated">이후 &lt;code&gt;A&lt;/code&gt; 는 , 에르 미트 대칭 삼각형, 삼중 대각 또는 bidiagonal 아니라, LU 인수 분해는 우리가 할 수있는 최선이 될 수 있습니다. 다음과 비교하십시오 :</target>
        </trans-unit>
        <trans-unit id="8590456dae59c9c55a0997bfbb8fd6fa7be0129f" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;BitArray&lt;/code&gt;s can only store elements of type &lt;a href=&quot;../numbers/index#Core.Bool&quot;&gt;&lt;code&gt;Bool&lt;/code&gt;&lt;/a&gt;, however, if you request a different element type it will create a regular &lt;code&gt;Array&lt;/code&gt; instead:</source>
          <target state="translated">&lt;code&gt;BitArray&lt;/code&gt; 는 &lt;a href=&quot;../numbers/index#Core.Bool&quot;&gt; &lt;code&gt;Bool&lt;/code&gt; &lt;/a&gt; 유형의 요소 만 저장할 수 있기 때문에 다른 요소 유형을 요청하면 대신 일반 &lt;code&gt;Array&lt;/code&gt; 가 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="9f4d2fe3817a161e2de0368df168942658b0d4f0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Point{Float64}&lt;/code&gt; is not a subtype of &lt;code&gt;Point{Real}&lt;/code&gt;, the following method can't be applied to arguments of type &lt;code&gt;Point{Float64}&lt;/code&gt;:</source>
          <target state="translated">이후 &lt;code&gt;Point{Float64}&lt;/code&gt; 의 하위 아닌 &lt;code&gt;Point{Real}&lt;/code&gt; , 다음과 같은 방법은 형의 인수를 적용 할 수 없습니다 &lt;code&gt;Point{Float64}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2c8c5f05ad4ad7015ec7a84b6219593641a8df6b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;end&lt;/code&gt; is always the last valid index into a collection, &lt;code&gt;end-1&lt;/code&gt; references an invalid byte index if the second-to-last character is multibyte.</source>
          <target state="translated">이후 &lt;code&gt;end&lt;/code&gt; 항상 수집에 마지막 유효 인덱스, &lt;code&gt;end-1&lt;/code&gt; 마지막에서 두 번째 문자는 멀티 바이트 참조 잘못된 바이트 인덱스 인 경우.</target>
        </trans-unit>
        <trans-unit id="d46a9a04675dd7f0971d0b0bb8a2a9005918879e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;let&lt;/code&gt; introduces a new scope block, the inner local &lt;code&gt;x&lt;/code&gt; is a different variable than the outer local &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 은 새로운 범위 블록을 도입 하므로 , 내부 로컬 &lt;code&gt;x&lt;/code&gt; 는 외부 로컬 &lt;code&gt;x&lt;/code&gt; 와 다른 변수 입니다.</target>
        </trans-unit>
        <trans-unit id="2da26ce0d4fd8061bc4c596b5bb7480303f7806d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;missing&lt;/code&gt; values propagate with standard mathematical operators, reduction functions return &lt;code&gt;missing&lt;/code&gt; when called on arrays which contain missing values</source>
          <target state="translated">결 &lt;code&gt;missing&lt;/code&gt; 은 표준 수학 연산자와 함께 전파 되므로 결 측값 이 포함 된 배열에서 호출하면 축소 함수가 결 &lt;code&gt;missing&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="65b09a68943dd6f190d2ed0fbf12a4fe4fadc3e0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;s&lt;/code&gt; is local to the function &lt;code&gt;sum_to&lt;/code&gt;, calling the function has no effect on the global variable &lt;code&gt;s&lt;/code&gt;. We can also see that the update &lt;code&gt;s = s + i&lt;/code&gt; in the &lt;code&gt;for&lt;/code&gt; loop must have updated the same &lt;code&gt;s&lt;/code&gt; created by the initialization &lt;code&gt;s = 0&lt;/code&gt; since we get the correct sum of 55 for the integers 1 through 10.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 는 &lt;code&gt;sum_to&lt;/code&gt; 함수에 로컬 이므로 함수 를 호출 해도 전역 변수 &lt;code&gt;s&lt;/code&gt; 에는 영향을주지 않습니다 . 우리는 또한 갱신 것을 볼 수 &lt;code&gt;s = s + i&lt;/code&gt; 에 &lt;code&gt;for&lt;/code&gt; 루프 같은 업데이트해야합니다 &lt;code&gt;s&lt;/code&gt; 초기화가 만든 &lt;code&gt;s = 0&lt;/code&gt; 우리가 10을 통해 정수 1 (55)의 정확한 합계를 얻을 수 있기 때문이다.</target>
        </trans-unit>
        <trans-unit id="e0e9fbeef609ede02ed54371677baf9bc62b87b0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;where&lt;/code&gt; expressions nest, type variable bounds can refer to outer type variables. For example &lt;code&gt;Tuple{T,Array{S}} where S&amp;lt;:AbstractArray{T} where T&amp;lt;:Real&lt;/code&gt; refers to 2-tuples whose first element is some &lt;a href=&quot;../../base/numbers/index#Core.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt;, and whose second element is an &lt;code&gt;Array&lt;/code&gt; of any kind of array whose element type contains the type of the first tuple element.</source>
          <target state="translated">이후 &lt;code&gt;where&lt;/code&gt; 표현 둥지, 형태 변수의 경계가 외부 형태 변수를 참조 할 수 있습니다. 예를 들어 &lt;code&gt;Tuple{T,Array{S}} where S&amp;lt;:AbstractArray{T} where T&amp;lt;:Real&lt;/code&gt; 은 첫 번째 요소가 일부 &lt;a href=&quot;../../base/numbers/index#Core.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt; 이고 두 번째 요소가 요소 인 &lt;code&gt;Array&lt;/code&gt; 의 모든 종류의 Array 인 2 개의 튜플을 나타냅니다. type은 첫 번째 튜플 요소의 유형을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a3c8adf6d75a260b753ed6fe0c4397e562c40405" translate="yes" xml:space="preserve">
          <source>Since adding dots to many operations and function calls in an expression can be tedious and lead to code that is difficult to read, the macro &lt;a href=&quot;../../base/arrays/index#Base.Broadcast.@__dot__&quot;&gt;&lt;code&gt;@.&lt;/code&gt;&lt;/a&gt; is provided to convert &lt;em&gt;every&lt;/em&gt; function call, operation, and assignment in an expression into the &quot;dotted&quot; version.</source>
          <target state="translated">표현식에서 많은 연산과 함수 호출에 점을 추가하는 것은 지루할 수 있으며 매크로 &lt;a href=&quot;../../base/arrays/index#Base.Broadcast.@__dot__&quot;&gt; &lt;code&gt;@.&lt;/code&gt; &lt;/a&gt; 는 읽기 어려운 코드로 이어질 수 있습니다 . 표현식의 &lt;em&gt;모든&lt;/em&gt; 함수 호출, 조작 및 지정을 &quot;점&quot;버전 으로 변환하기 위해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="93b312b53d0cda8c6dd3d8fd64581d8450397ba2" translate="yes" xml:space="preserve">
          <source>Since all packages in a package directory environment are, by definition, subdirectories with the expected entry-point files, their &lt;code&gt;paths&lt;/code&gt; map entries always have this form.</source>
          <target state="translated">패키지 디렉토리 환경의 모든 패키지는 정의에 따라 예상되는 시작점 파일이있는 서브 디렉토리이므로 &lt;code&gt;paths&lt;/code&gt; 맵 항목은 항상이 양식을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bc19718772968a0122fac2080237f2738f827ca8" translate="yes" xml:space="preserve">
          <source>Since all processes have access to the underlying data, you do have to be careful not to set up conflicts. For example:</source>
          <target state="translated">모든 프로세스는 기본 데이터에 액세스 할 수 있으므로 충돌을 설정하지 않도록주의해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="13987a3a619bc16e0bb5aca3e4abeb0e4b831a19" translate="yes" xml:space="preserve">
          <source>Since expressions are just &lt;code&gt;Expr&lt;/code&gt; objects which can be constructed programmatically and then evaluated, it is possible to dynamically generate arbitrary code which can then be run using &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;. Here is a simple example:</source>
          <target state="translated">식은 프로그래밍 방식으로 구성한 다음 평가할 수있는 &lt;code&gt;Expr&lt;/code&gt; 객체 일 뿐이므로 &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; 을&lt;/a&gt; 사용하여 실행할 수있는 임의의 코드를 동적으로 생성 할 수 있습니다 . 다음은 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="110ed2682710e43376be31b0bf6157aefc58b8dd" translate="yes" xml:space="preserve">
          <source>Since function definitions can be entered into interactive sessions, it is easy to compare these definitions:</source>
          <target state="translated">기능 정의를 대화식 세션에 입력 할 수 있으므로 다음 정의를 쉽게 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bdbe9bfa98f49634c56a92db843c8272b9af44d" translate="yes" xml:space="preserve">
          <source>Since higher-order functions are often called with anonymous functions, it is easy to conclude that this is desirable or even necessary. But any function can be passed directly, without being &quot;wrapped&quot; in an anonymous function. Instead of writing &lt;code&gt;map(x-&amp;gt;f(x), a)&lt;/code&gt;, write &lt;a href=&quot;../../base/collections/index#Base.map&quot;&gt;&lt;code&gt;map(f, a)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">고차 함수는 종종 익명 함수와 함께 호출되기 때문에 이것이 바람직하거나 필요하다는 결론을 내릴 수 있습니다. 그러나 익명 함수에 &quot;랩핑&quot;되지 않고 모든 함수를 직접 전달할 수 있습니다. 대신 기입 &lt;code&gt;map(x-&amp;gt;f(x), a)&lt;/code&gt; , 기록 &lt;a href=&quot;../../base/collections/index#Base.map&quot;&gt; &lt;code&gt;map(f, a)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3be037f80e0192dafb1809344bac6ecd2897034a" translate="yes" xml:space="preserve">
          <source>Since many people are familiar with the syntax of other dynamic languages, and lots of code has already been written in those languages, it is natural to wonder why we didn't just plug a Matlab or Python front-end into a Julia back-end (or &amp;ldquo;transpile&amp;rdquo; code to Julia) in order to get all the performance benefits of Julia without requiring programmers to learn a new language. Simple, right?</source>
          <target state="translated">많은 사람들이 다른 동적 언어의 구문에 익숙하고 많은 코드가 이미 해당 언어로 작성되었으므로 Matlab 또는 Python 프런트 엔드를 Julia 백 엔드에 연결하지 않은 이유가 궁금합니다. 프로그래머가 새로운 언어를 배울 필요없이 Julia의 모든 성능 이점을 얻기 위해 코드를 Julia로 &quot;변환&quot;합니다. 간단 하죠?</target>
        </trans-unit>
        <trans-unit id="3d9153d556a788cc5c3bf5675d2d08285b0723d8" translate="yes" xml:space="preserve">
          <source>Since operations like this are very thin wrappers over the relevant BLAS functions, the reason for the discrepancy is very likely to be</source>
          <target state="translated">이와 같은 작업은 관련 BLAS 기능에 비해 매우 얇은 래퍼이므로 불일치의 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9eab95014611591c1e11867f08e09682af79392" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;bar&lt;/code&gt; field is unconstrained in type, any value will do. However, the value for &lt;code&gt;baz&lt;/code&gt; must be convertible to &lt;code&gt;Int&lt;/code&gt;:</source>
          <target state="translated">때문에 &lt;code&gt;bar&lt;/code&gt; 필드가 종류에 제한받지되고, 값이 할 것입니다. 그러나 &lt;code&gt;baz&lt;/code&gt; 의 값은 &lt;code&gt;Int&lt;/code&gt; 로 변환 가능해야합니다 .</target>
        </trans-unit>
        <trans-unit id="18762eaec13dffe610890e7b245164121553170b" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;begin&lt;/code&gt; construct does not introduce a new scope, it can be useful to use a zero-argument &lt;code&gt;let&lt;/code&gt; to just introduce a new scope block without creating any new bindings:</source>
          <target state="translated">(가)부터 &lt;code&gt;begin&lt;/code&gt; 구조는 새로운 범위를 도입하지 않습니다, 제로 인수를 사용하는 것이 유용 할 수 &lt;code&gt;let&lt;/code&gt; 단지 새로운 바인딩을 만들지 않고 새 범위 블록을 소개 :</target>
        </trans-unit>
        <trans-unit id="a090411effb09f1c016ae052f55f20ec1fb3bbe4" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;greet&lt;/code&gt; is local, the value (or lack thereof) of the global &lt;code&gt;x&lt;/code&gt; is unaffected by calling &lt;code&gt;greet&lt;/code&gt;. The hard scope rule doesn't care whether a global named &lt;code&gt;x&lt;/code&gt; exists or not: assignment to &lt;code&gt;x&lt;/code&gt; in a hard scope is local (unless &lt;code&gt;x&lt;/code&gt; is declared global).</source>
          <target state="translated">때문에 &lt;code&gt;x&lt;/code&gt; 의 &lt;code&gt;greet&lt;/code&gt; 로컬 값의 전역 (또는 이의 결여) &lt;code&gt;x&lt;/code&gt; 의 호출에 의해 영향을받지 &lt;code&gt;greet&lt;/code&gt; . 하드 범위 규칙은 &lt;code&gt;x&lt;/code&gt; 라는 글로벌 이름 이 존재 하는지 여부에 상관하지 않습니다. 하드 범위 에서 &lt;code&gt;x&lt;/code&gt; 에 대한 할당 은 로컬입니다 ( &lt;code&gt;x&lt;/code&gt; 가 글로벌로 선언 되지 않은 경우 ).</target>
        </trans-unit>
        <trans-unit id="9691cd750ab549f1aa85e16730bf72faa7585195" translate="yes" xml:space="preserve">
          <source>Since the abbreviated versions of the days are not loaded, trying to use the function &lt;code&gt;dayabbr&lt;/code&gt; will error.</source>
          <target state="translated">요일의 약식 버전이로드되지 않았 &lt;code&gt;dayabbr&lt;/code&gt; 함수를 사용하려고 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4d7de4b37b7839fb4e4caecedd9ee7340bcfaf9c" translate="yes" xml:space="preserve">
          <source>Since the body of the generated function is non-deterministic, its behavior, &lt;em&gt;and the behavior of all subsequent code&lt;/em&gt; is undefined.</source>
          <target state="translated">생성 된 함수의 본문은 비 결정적이므로 해당 동작 &lt;em&gt;및 모든 후속 코드의 동작&lt;/em&gt; 은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a99cb3fa338377dfe0890451715a8363d3b80ec9" translate="yes" xml:space="preserve">
          <source>Since the call to &lt;code&gt;f&lt;/code&gt; gets inlined, the loop body ends up being just a single &lt;code&gt;leaq&lt;/code&gt; instruction. Next, consider what happens if we make the number of loop iterations fixed:</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 에 대한 호출 이 인라인 되기 때문에 루프 본문은 단일 &lt;code&gt;leaq&lt;/code&gt; 명령이됩니다. 다음으로 루프 반복 횟수를 고정하면 어떻게 될지 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="cce1d8b90a6c407ede755123592746f6fea0e8ba" translate="yes" xml:space="preserve">
          <source>Since the decentralized naming problem is somewhat abstract, it may help to walk through a concrete scenario to understand the issue. Suppose you're developing an application called &lt;code&gt;App&lt;/code&gt;, which uses two packages: &lt;code&gt;Pub&lt;/code&gt; and &lt;code&gt;Priv&lt;/code&gt;. &lt;code&gt;Priv&lt;/code&gt; is a private package that you created, whereas &lt;code&gt;Pub&lt;/code&gt; is a public package that you use but don't control. When you created &lt;code&gt;Priv&lt;/code&gt;, there was no public package by the name &lt;code&gt;Priv&lt;/code&gt;. Subsequently, however, an unrelated package also named &lt;code&gt;Priv&lt;/code&gt; has been published and become popular. In fact, the &lt;code&gt;Pub&lt;/code&gt; package has started to use it. Therefore, when you next upgrade &lt;code&gt;Pub&lt;/code&gt; to get the latest bug fixes and features, &lt;code&gt;App&lt;/code&gt; will end up depending on two different packages named &lt;code&gt;Priv&lt;/code&gt;&amp;mdash;through no action of yours other than upgrading. &lt;code&gt;App&lt;/code&gt; has a direct dependency on your private &lt;code&gt;Priv&lt;/code&gt; package, and an indirect dependency, through &lt;code&gt;Pub&lt;/code&gt;, on the new public &lt;code&gt;Priv&lt;/code&gt; package. Since these two &lt;code&gt;Priv&lt;/code&gt; packages are different but are both required for &lt;code&gt;App&lt;/code&gt; to continue working correctly, the expression &lt;code&gt;import Priv&lt;/code&gt; must refer to different &lt;code&gt;Priv&lt;/code&gt; packages depending on whether it occurs in &lt;code&gt;App&lt;/code&gt;'s code or in &lt;code&gt;Pub&lt;/code&gt;'s code. To handle this, Julia's package loading mechanism distinguishes the two &lt;code&gt;Priv&lt;/code&gt; packages by their UUID and picks the correct one based on its context (the module that called &lt;code&gt;import&lt;/code&gt;). How this distinction works is determined by environments, as explained in the following sections.</source>
          <target state="translated">분산 이름 지정 문제는 다소 추상적이므로 문제를 이해하기 위해 구체적인 시나리오를 안내하는 데 도움이 될 수 있습니다. &lt;code&gt;Pub&lt;/code&gt; 과 &lt;code&gt;Priv&lt;/code&gt; 의 두 패키지를 사용하는 &lt;code&gt;App&lt;/code&gt; 이라는 응용 프로그램을 개발한다고 가정합니다 . &lt;code&gt;Priv&lt;/code&gt; 는 사용자가 만든 개인 패키지 인 반면 &lt;code&gt;Pub&lt;/code&gt; 은 사용하지만 제어하지 않는 공용 패키지입니다. &lt;code&gt;Priv&lt;/code&gt; 를 만들 때 이름이 &lt;code&gt;Priv&lt;/code&gt; 인 공개 패키지가 없었습니다 . 그러나 그 후 &lt;code&gt;Priv&lt;/code&gt; 라는 관련없는 패키지 가 게시되어 인기를 얻었습니다. 실제로 &lt;code&gt;Pub&lt;/code&gt; 패키지가 사용하기 시작했습니다. 따라서 다음 번 &lt;code&gt;Pub&lt;/code&gt; 을 업그레이드 할 때최신 버그 수정 및 기능을 얻기 위해 &lt;code&gt;App&lt;/code&gt; 은 업그레이드 이외의 다른 조치를 취하지 않고 &lt;code&gt;Priv&lt;/code&gt; 라는 두 가지 패키지에 따라 종료됩니다 . &lt;code&gt;App&lt;/code&gt; 은 비공개 &lt;code&gt;Priv&lt;/code&gt; 패키지 에 직접 의존하고 &lt;code&gt;Pub&lt;/code&gt; 을 통해 새로운 공개 &lt;code&gt;Priv&lt;/code&gt; 패키지 에 간접적으로 의존 합니다. 이 두 &lt;code&gt;Priv&lt;/code&gt; 패키지는 다르지만 &lt;code&gt;App&lt;/code&gt; 이 계속 올바르게 작동 하려면 두 가지 Priv 패키지가 모두 필요하므로 &lt;code&gt;import Priv&lt;/code&gt; 표현식 은 &lt;code&gt;App&lt;/code&gt; 코드 에서 발생하는지 또는 &lt;code&gt;Pub&lt;/code&gt; 에서 발생하는지에 따라 다른 &lt;code&gt;Priv&lt;/code&gt; 패키지를 참조해야합니다.의 코드입니다. 이를 처리하기 위해 Julia의 패키지 로딩 메커니즘은 두 &lt;code&gt;Priv&lt;/code&gt; 패키지를 UUID로 구별 하고 컨텍스트 ( &lt;code&gt;import&lt;/code&gt; 라는 모듈)를 기반으로 올바른 패키지를 선택합니다 . 이 구분이 작동하는 방식은 다음 섹션에서 설명하는 환경에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="4fc92a18a5a84297f47cf82987cd6ce3999df8a6" translate="yes" xml:space="preserve">
          <source>Since the function name is given by the signature, there is no need to start the documentation with &quot;The function &lt;code&gt;bar&lt;/code&gt;...&quot;: go straight to the point. Similarly, if the signature specifies the types of the arguments, mentioning them in the description is redundant.</source>
          <target state="translated">기능 이름은 서명으로 제공되므로 &quot;기능 &lt;code&gt;bar&lt;/code&gt; ...&quot;으로 문서를 시작할 필요가 없습니다 . 바로 지점으로 이동하십시오. 마찬가지로, 서명이 인수의 유형을 지정하는 경우 설명에 언급 된 인수는 중복됩니다.</target>
        </trans-unit>
        <trans-unit id="66f25e992587c9f7d67fe0ed66d3b2a9188f76ec" translate="yes" xml:space="preserve">
          <source>Since the global &lt;code&gt;x&lt;/code&gt; is not defined when the &lt;code&gt;for&lt;/code&gt; loop is evaluated, the first clause of the soft scope rule applies and &lt;code&gt;x&lt;/code&gt; is created as local to the &lt;code&gt;for&lt;/code&gt; loop and therefore global &lt;code&gt;x&lt;/code&gt; remains undefined after the loop executes. Next, let's consider the body of &lt;code&gt;sum_to&amp;prime;&lt;/code&gt; extracted into global scope, fixing its argument to &lt;code&gt;n = 10&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프가 평가 될 때 전역 &lt;code&gt;x&lt;/code&gt; 가 정의되지 않았으므로 소프트 범위 규칙의 첫 번째 절이 적용되고 &lt;code&gt;x&lt;/code&gt; 가 &lt;code&gt;for&lt;/code&gt; 루프 에 대해 로컬로 생성 되므로 루프가 실행 된 후에도 전역 &lt;code&gt;x&lt;/code&gt; 가 정의되지 않은 상태로 유지됩니다. 다음으로, 전역 범위로 추출 된 &lt;code&gt;sum_to&amp;prime;&lt;/code&gt; 의 본문을 고려하여 인수를 &lt;code&gt;n = 10&lt;/code&gt; 고정합니다.</target>
        </trans-unit>
        <trans-unit id="d379294528aa95d11e3ad08347fb984b7833bf8b" translate="yes" xml:space="preserve">
          <source>Since the primary environment is typically the environment of a project you're working on, while environments later in the stack contain additional tools, this is the right trade-off: it's better to break your development tools but keep the project working. When such incompatibilities occur, you'll typically want to upgrade your dev tools to versions that are compatible with the main project.</source>
          <target state="translated">기본 환경은 일반적으로 작업중인 프로젝트의 환경이므로 스택의 후반 환경에는 추가 도구가 포함되어 있으므로 올바른 절충이 필요합니다. 개발 도구를 중단하고 프로젝트를 계속 운영하는 것이 좋습니다. 이러한 비 호환성이 발생하면 일반적으로 개발 도구를 기본 프로젝트와 호환되는 버전으로 업그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="c73d328d6a19d96792839e51d764e72eb6b03b79" translate="yes" xml:space="preserve">
          <source>Since the regular expression &lt;code&gt;r&quot;^\s*(?:#|$)&quot;&lt;/code&gt; is compiled and inserted into the syntax tree when this code is parsed, the expression is only compiled once instead of each time the loop is executed. In order to accomplish this without macros, one would have to write this loop like this:</source>
          <target state="translated">이 코드를 구문 분석 할 때 정규 표현식 &lt;code&gt;r&quot;^\s*(?:#|$)&quot;&lt;/code&gt; 가 컴파일되어 구문 트리에 삽입되므로 루프가 실행될 때마다 대신 표현식이 한 번만 컴파일됩니다. 매크로없이 이것을 달성하려면 다음과 같이이 루프를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa10c64c2dd041fd4164e03b585c73c23c0a48ce" translate="yes" xml:space="preserve">
          <source>Since the type &lt;code&gt;Point{Float64}&lt;/code&gt; is a concrete type equivalent to &lt;code&gt;Point&lt;/code&gt; declared with &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;T&lt;/code&gt;, it can be applied as a constructor accordingly:</source>
          <target state="translated">유형 때문에 &lt;code&gt;Point{Float64}&lt;/code&gt; 에 해당 구체적인 유형입니다 &lt;code&gt;Point&lt;/code&gt; 로 선언 &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt; 대신에 &lt;code&gt;T&lt;/code&gt; 가 이를 따라 생성자로 적용 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="99ff90608e9e51505e781b7280ec8715287ed9ef" translate="yes" xml:space="preserve">
          <source>Since these are fairly small, simple expressions, they could easily be placed onto a single line, which is where the &lt;code&gt;(;)&lt;/code&gt; chain syntax comes in handy:</source>
          <target state="translated">이것들은 상당히 작고 간단한 표현이기 때문에 한 줄에 쉽게 넣을 수 있습니다. 이것은 &lt;code&gt;(;)&lt;/code&gt; 체인 구문이 편리합니다.</target>
        </trans-unit>
        <trans-unit id="29b1a01e820b95f66f6504d8149c9ac9f4acb752" translate="yes" xml:space="preserve">
          <source>Since these are fairly small, simple expressions, they could easily be placed onto a single line, which is where the &lt;code&gt;;&lt;/code&gt; chain syntax comes in handy:</source>
          <target state="translated">이것들은 매우 작고 단순한 표현이기 때문에 쉽게 한 줄에 배치 할 수 있습니다 &lt;code&gt;;&lt;/code&gt; 체인 구문이 편리합니다.</target>
        </trans-unit>
        <trans-unit id="7c12d2751f6d726998fcff094b9321c46c42f942" translate="yes" xml:space="preserve">
          <source>Since types in Julia are themselves objects, ordinary functions can operate on them. Some functions that are particularly useful for working with or exploring types have already been introduced, such as the &lt;code&gt;&amp;lt;:&lt;/code&gt; operator, which indicates whether its left hand operand is a subtype of its right hand operand.</source>
          <target state="translated">Julia의 유형 자체는 객체이므로 일반 기능이 작동 할 수 있습니다. 왼쪽 피연산자가 오른쪽 피연산자의 하위 유형인지 여부를 표시 하는 &lt;code&gt;&amp;lt;:&lt;/code&gt; 연산자 와 같이 유형 작업 또는 탐색에 특히 유용한 일부 함수가 이미 소개되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7be674fbeb66a7e72863bcfb64f4b0701a7c5973" translate="yes" xml:space="preserve">
          <source>Since you can interpolate literal arrays, you can use this generative functionality without needing to create temporary array objects first:</source>
          <target state="translated">리터럴 배열을 보간 할 수 있으므로 먼저 임시 배열 객체를 만들 필요없이이 생성 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da42bdfc76721ff7081b177e7cfa3958efa84e4e" translate="yes" xml:space="preserve">
          <source>Sine Wave</source>
          <target state="translated">사인파</target>
        </trans-unit>
        <trans-unit id="335f3680780ac1a1bedf97e6744b4c8a8d813887" translate="yes" xml:space="preserve">
          <source>Single High-Reversed-9 Quotation Mark / Single Reversed Comma Quotation Mark</source>
          <target state="translated">단일 역상 9 인용 부호 / 단일 역 쉼표 인용 부호</target>
        </trans-unit>
        <trans-unit id="9bf3aeea74aadb27b921706ec49564b035e402c6" translate="yes" xml:space="preserve">
          <source>Single Left-Pointing Angle Quotation Mark / Left Pointing Single Guillemet</source>
          <target state="translated">단일 왼쪽 포인팅 각도 따옴표 / 왼쪽 포인팅 단일 길레</target>
        </trans-unit>
        <trans-unit id="e4f54e43e7b36b24df2938eef994713e70bd979c" translate="yes" xml:space="preserve">
          <source>Single Right-Pointing Angle Quotation Mark / Right Pointing Single Guillemet</source>
          <target state="translated">단일 오른쪽 포인팅 각도 인용 부호 / 오른쪽 포인팅 단일 길레</target>
        </trans-unit>
        <trans-unit id="ca633f5d4206a1d937f8fe1ea8ed68ad1c0c691f" translate="yes" xml:space="preserve">
          <source>Singleton Types</source>
          <target state="translated">싱글 톤 타입</target>
        </trans-unit>
        <trans-unit id="dd33e9e36af2e55137469d3442620ee1b92fe440" translate="yes" xml:space="preserve">
          <source>Singleton type used in array initialization, indicating the array-constructor-caller would like an uninitialized array. See also &lt;a href=&quot;#Core.undef&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;, an alias for &lt;code&gt;UndefInitializer()&lt;/code&gt;.</source>
          <target state="translated">배열 초기화에 사용되는 단일 유형으로, 배열 생성자 호출자가 초기화되지 않은 배열을 원함을 나타냅니다. &lt;code&gt;UndefInitializer()&lt;/code&gt; 의 별명 인 &lt;a href=&quot;#Core.undef&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="66123b7c4eff1050fe3a43f19b16ca1661efe69a" translate="yes" xml:space="preserve">
          <source>Singular value decomposition</source>
          <target state="translated">특이 값 분해</target>
        </trans-unit>
        <trans-unit id="abf6477da73481aeeb14d405ed7b9376cc7a9c06" translate="yes" xml:space="preserve">
          <source>Six Pointed Black Star</source>
          <target state="translated">식스 뾰족한 검은 별</target>
        </trans-unit>
        <trans-unit id="c95980d96195d5a21b0ce29bdde1f925088886c2" translate="yes" xml:space="preserve">
          <source>Six Pointed Star With Middle Dot</source>
          <target state="translated">중간 점이있는 6 각 별</target>
        </trans-unit>
        <trans-unit id="4b0dce6652812e4fd04ad585e2acbca8de6e27a1" translate="yes" xml:space="preserve">
          <source>Size, in bytes, of the canonical binary representation of the given &lt;code&gt;DataType&lt;/code&gt;&lt;code&gt;T&lt;/code&gt;, if any. Size, in bytes, of object &lt;code&gt;obj&lt;/code&gt; if it is not &lt;code&gt;DataType&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;DataType&lt;/code&gt; &lt;code&gt;T&lt;/code&gt; 의 표준 이진 표현 크기 (바이트)입니다 (있는 경우). &lt;code&gt;DataType&lt;/code&gt; 이 아닌 경우 &lt;code&gt;obj&lt;/code&gt; 객체의 크기 (바이트)입니다 .</target>
        </trans-unit>
        <trans-unit id="20f65aede92ab2cbbe817d084d6c6f9d9b3dad31" translate="yes" xml:space="preserve">
          <source>Size, in bytes, of the string &lt;code&gt;str&lt;/code&gt;. Equal to the number of code units in &lt;code&gt;str&lt;/code&gt; multiplied by the size, in bytes, of one code unit in &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;str&lt;/code&gt; 의 크기 (바이트)입니다 . 코드 유닛들의 수와 동일 &lt;code&gt;str&lt;/code&gt; 한 코드 단위의 바이트 크기를 곱한 값, &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2167d13057f60b6d0c29cd243f97df3fa094db64" translate="yes" xml:space="preserve">
          <source>Skeel condition number $\kappa_S$ of the matrix &lt;code&gt;M&lt;/code&gt;, optionally with respect to the vector &lt;code&gt;x&lt;/code&gt;, as computed using the operator &lt;code&gt;p&lt;/code&gt;-norm. $\left\vert M \right\vert$ denotes the matrix of (entry wise) absolute values of $M$; $\left\vert M \right\vert_{ij} = \left\vert M_{ij} \right\vert$. Valid values for &lt;code&gt;p&lt;/code&gt; are &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;Inf&lt;/code&gt; (default).</source>
          <target state="translated">연산자 &lt;code&gt;p&lt;/code&gt; -norm을 사용하여 계산 된 경우 선택적으로 벡터 &lt;code&gt;x&lt;/code&gt; 에 대해 행렬 &lt;code&gt;M&lt;/code&gt; 의 스켈 조건 번호 $ \ kappa_S $ $ \ left \ vert M \ right \ vert $는 $ M $의 (진입적인) 절대 값의 행렬을 나타냅니다. $ \ left \ vert M \ right \ vert_ {ij} = \ left \ vert M_ {ij} \ right \ vert $. &lt;code&gt;p&lt;/code&gt; 의 유효한 값 은 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; 및 &lt;code&gt;Inf&lt;/code&gt; (기본값)입니다.</target>
        </trans-unit>
        <trans-unit id="ef2caf051ba27263b31db27cdb0229d6e7d3a024" translate="yes" xml:space="preserve">
          <source>Ski And Ski Boot</source>
          <target state="translated">스키와 스키 부츠</target>
        </trans-unit>
        <trans-unit id="1f9449524e69ac68261378d94645bda3e07655f3" translate="yes" xml:space="preserve">
          <source>Skip the rest of the current loop iteration.</source>
          <target state="translated">현재 루프 반복의 나머지 부분을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="d22198f7f6f1a28eb882a9d6de22f4fe5c904a78" translate="yes" xml:space="preserve">
          <source>Skipping Missing Values</source>
          <target state="translated">결 측값 건너 뛰기</target>
        </trans-unit>
        <trans-unit id="bdb525090eebed680fdb93f27acf97b008e16a7f" translate="yes" xml:space="preserve">
          <source>Skull</source>
          <target state="translated">Skull</target>
        </trans-unit>
        <trans-unit id="c7abf7aed8060866c15d2eb3529aa4d46bd4a6e3" translate="yes" xml:space="preserve">
          <source>Slanted Equal To Or Greater-Than</source>
          <target state="translated">경사가 같거나 큼</target>
        </trans-unit>
        <trans-unit id="41cfddfabca43c1b99f3bbc0880fd390121b0d84" translate="yes" xml:space="preserve">
          <source>Slanted Equal To Or Greater-Than With Dot Inside</source>
          <target state="translated">내부의 점과 같거나 그보다 더 기울어 짐</target>
        </trans-unit>
        <trans-unit id="b850a83e7d93338bc78c8e613b474a543041fa82" translate="yes" xml:space="preserve">
          <source>Slanted Equal To Or Less-Than</source>
          <target state="translated">같거나 그보다 작은 경사</target>
        </trans-unit>
        <trans-unit id="2fcdee5b4d60a7f8fab032d1e20226c62e6a474a" translate="yes" xml:space="preserve">
          <source>Slanted Equal To Or Less-Than With Dot Inside</source>
          <target state="translated">안쪽 점과 같거나 그보다 작음</target>
        </trans-unit>
        <trans-unit id="76cb41ca6bce3d27e201de85c7eee172652932ed" translate="yes" xml:space="preserve">
          <source>Sleeping Face</source>
          <target state="translated">잠자는 얼굴</target>
        </trans-unit>
        <trans-unit id="2b640ac8fba05ab3fe7e235e15f8b367c3ab4fbc" translate="yes" xml:space="preserve">
          <source>Sleeping Symbol</source>
          <target state="translated">수면 기호</target>
        </trans-unit>
        <trans-unit id="959f5eeaed23b0a90129ce20ada0ab986be09dc0" translate="yes" xml:space="preserve">
          <source>Sleepy Face</source>
          <target state="translated">졸린 얼굴</target>
        </trans-unit>
        <trans-unit id="a66f778307f7ef3e11930946299340765200aa68" translate="yes" xml:space="preserve">
          <source>Slice Of Pizza</source>
          <target state="translated">피자 조각</target>
        </trans-unit>
        <trans-unit id="133c59743413e3e37f7ada9a533cd30b637fb33d" translate="yes" xml:space="preserve">
          <source>Slicing operations like &lt;code&gt;x[1:10]&lt;/code&gt; create a copy by default in Julia. &lt;code&gt;@view x[1:10]&lt;/code&gt; changes it to make a view. The &lt;code&gt;@views&lt;/code&gt; macro can be used on a whole block of code (e.g. &lt;code&gt;@views function foo() .... end&lt;/code&gt; or &lt;code&gt;@views begin ... end&lt;/code&gt;) to change all the slicing operations in that block to use views. Sometimes making a copy of the data is faster and sometimes using a view is faster, as described in the &lt;a href=&quot;../../manual/performance-tips/index#man-performance-views&quot;&gt;performance tips&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;x[1:10]&lt;/code&gt; 과 같은 슬라이싱 작업 은 Julia에서 기본적으로 복사본을 만듭니다. &lt;code&gt;@view x[1:10]&lt;/code&gt; 는 뷰를 만들기 위해 변경합니다. &lt;code&gt;@views&lt;/code&gt; 의 매크로 (예, 코드의 전체 블록에 사용될 수있다 &lt;code&gt;@views function foo() .... end&lt;/code&gt; 또는 &lt;code&gt;@views begin ... end&lt;/code&gt; )를 사용하여 뷰에 해당 블록의 모든 슬라이싱 동작을 변경. &lt;a href=&quot;../../manual/performance-tips/index#man-performance-views&quot;&gt;성능 팁에&lt;/a&gt; 설명 된대로 데이터 사본을 만드는 것이 더 빠르거나보기를 사용하는 것이 더 빠를 때도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac1ee3d271b50de35b1ed58286bae62bf4fc31bf" translate="yes" xml:space="preserve">
          <source>Sloping Large And</source>
          <target state="translated">크게 경 사진</target>
        </trans-unit>
        <trans-unit id="820dc241bdb3282fe9a59f49d27f47a80fbddd6e" translate="yes" xml:space="preserve">
          <source>Sloping Large Or</source>
          <target state="translated">크게 경 사진 또는</target>
        </trans-unit>
        <trans-unit id="66a01dbd658789f56e137656bf2040fa1591a17f" translate="yes" xml:space="preserve">
          <source>Slot Machine</source>
          <target state="translated">슬롯 머신</target>
        </trans-unit>
        <trans-unit id="33c5fae101040a815046deacf3ade1d53162b93b" translate="yes" xml:space="preserve">
          <source>Small Blue Diamond</source>
          <target state="translated">스몰 블루 다이아몬드</target>
        </trans-unit>
        <trans-unit id="1c8018c17135d56a80160ff7c9f5aef7d9deebd5" translate="yes" xml:space="preserve">
          <source>Small Contains As Member</source>
          <target state="translated">소규모 회원으로 포함</target>
        </trans-unit>
        <trans-unit id="907ce0a0192315da0f312d7cc8340dffef77d8f3" translate="yes" xml:space="preserve">
          <source>Small Contains With Overbar</source>
          <target state="translated">소형 오버 바 포함</target>
        </trans-unit>
        <trans-unit id="854d14aad81c57a2a6f337e3b9136bbba4ad50bf" translate="yes" xml:space="preserve">
          <source>Small Contains With Vertical Bar At End Of Horizontal Stroke</source>
          <target state="translated">작은 수평 스트로크 끝에 수직 막대가 포함</target>
        </trans-unit>
        <trans-unit id="b834747aefb59515c06c2f98720615af1128f187" translate="yes" xml:space="preserve">
          <source>Small Element Of</source>
          <target state="translated">작은 요소</target>
        </trans-unit>
        <trans-unit id="4544ddafd264fb48b7080a8002874639b88afed1" translate="yes" xml:space="preserve">
          <source>Small Element Of With Overbar</source>
          <target state="translated">오버 바와 함께 작은 요소</target>
        </trans-unit>
        <trans-unit id="99a4bfba802d2052d85ce9d142a1736e120fb8a5" translate="yes" xml:space="preserve">
          <source>Small Element Of With Vertical Bar At End Of Horizontal Stroke</source>
          <target state="translated">수평 스트로크 끝에 수직 막대가있는 작은 요소</target>
        </trans-unit>
        <trans-unit id="16bf9458d6282b6c7f753db4076ae209a9908eb9" translate="yes" xml:space="preserve">
          <source>Small Orange Diamond</source>
          <target state="translated">작은 오렌지 다이아몬드</target>
        </trans-unit>
        <trans-unit id="69c7816f6f43bb0d35d822218464b7bcbe3b65cf" translate="yes" xml:space="preserve">
          <source>Small Tilde / Spacing Tilde</source>
          <target state="translated">작은 물결표 / 간격 물결표</target>
        </trans-unit>
        <trans-unit id="9da7882e5606be3550b92a220b380091bcd39d64" translate="yes" xml:space="preserve">
          <source>Small Vee With Underbar</source>
          <target state="translated">언더 바가있는 작은 Vee</target>
        </trans-unit>
        <trans-unit id="3b5667b949b71407f0d5d0b51de24d7c298ec59a" translate="yes" xml:space="preserve">
          <source>Small functions are typically inlined automatically. By using &lt;code&gt;@noinline&lt;/code&gt; on small functions, auto-inlining can be prevented. This is shown in the following example:</source>
          <target state="translated">작은 기능은 일반적으로 자동으로 인라인됩니다. 작은 기능에 &lt;code&gt;@noinline&lt;/code&gt; 을 사용 하면 자동 인라인을 방지 할 수 있습니다. 이것은 다음 예에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45e8206623e4c52e2eb8ae7181f6b27716ac9e5c" translate="yes" xml:space="preserve">
          <source>Small functions typically do not need the &lt;code&gt;@inline&lt;/code&gt; annotation, as the compiler does it automatically. By using &lt;code&gt;@inline&lt;/code&gt; on bigger functions, an extra nudge can be given to the compiler to inline it. This is shown in the following example:</source>
          <target state="translated">작은 함수는 일반적으로 컴파일러가 자동 으로 수행하므로 &lt;code&gt;@inline&lt;/code&gt; 주석이 필요하지 않습니다 . 더 큰 함수에 &lt;code&gt;@inline&lt;/code&gt; 을 사용 하면 컴파일러에 추가로 조금씩 움직여서 인라인 할 수 있습니다. 이것은 다음 예에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e1cf4c8ece1ea5c870afe61b060f8f3df4cfabb" translate="yes" xml:space="preserve">
          <source>Smaller Than</source>
          <target state="translated">보다 작은</target>
        </trans-unit>
        <trans-unit id="5720f0696f38389c48b712536e76d9b4c6a597db" translate="yes" xml:space="preserve">
          <source>Smaller Than Or Equal To</source>
          <target state="translated">작거나 같음</target>
        </trans-unit>
        <trans-unit id="e1250b86ff478d0623334652db0b24a36221fc65" translate="yes" xml:space="preserve">
          <source>Smallest integer larger than or equal to &lt;code&gt;x/y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x/y&lt;/code&gt; 보다 크거나 같은 가장 작은 정수 .</target>
        </trans-unit>
        <trans-unit id="7b2ed9f0685acd2328a92537af5fbe50f4f0cc01" translate="yes" xml:space="preserve">
          <source>Smallest integer larger than or equal to &lt;code&gt;x/y&lt;/code&gt;. Equivalent to &lt;code&gt;div(x, y, RoundUp)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x/y&lt;/code&gt; 보다 크거나 같은 가장 작은 정수 . 상당 &lt;code&gt;div(x, y, RoundUp)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5fdeb5c31ddeaa2d2d4e9933100bb41f92861ba" translate="yes" xml:space="preserve">
          <source>Smallest value</source>
          <target state="translated">가장 작은 가치</target>
        </trans-unit>
        <trans-unit id="556d83fde76c0514eaae38016fe2c976803644cf" translate="yes" xml:space="preserve">
          <source>Smash Product</source>
          <target state="translated">스매시 제품</target>
        </trans-unit>
        <trans-unit id="945d8d4f656c99a4979eef33868e6a15e45935e0" translate="yes" xml:space="preserve">
          <source>Smile</source>
          <target state="translated">Smile</target>
        </trans-unit>
        <trans-unit id="adc7e7420ccf628105943d8ca64027e453023e4a" translate="yes" xml:space="preserve">
          <source>Smiling Cat Face With Heart-Shaped Eyes</source>
          <target state="translated">하트 모양의 눈으로 웃는 고양이 얼굴</target>
        </trans-unit>
        <trans-unit id="8ef2af435c3b6bf566d9009f0fe9c59f2aa503b6" translate="yes" xml:space="preserve">
          <source>Smiling Cat Face With Open Mouth</source>
          <target state="translated">입을 벌리고 웃는 고양이 얼굴</target>
        </trans-unit>
        <trans-unit id="5cd267358171df6ecb9f2153156887fd2477e3f1" translate="yes" xml:space="preserve">
          <source>Smiling Face With Halo</source>
          <target state="translated">헤일로로 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="de53fe94a6435cc02a9e373ad4870a4123693d75" translate="yes" xml:space="preserve">
          <source>Smiling Face With Heart-Shaped Eyes</source>
          <target state="translated">하트 모양의 눈으로 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="ed243ea63b34c97f25e8714d90c67a47a34cb7df" translate="yes" xml:space="preserve">
          <source>Smiling Face With Horns</source>
          <target state="translated">뿔 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="8785f691281820dd7c53437ebf143d1ace99452c" translate="yes" xml:space="preserve">
          <source>Smiling Face With Open Mouth</source>
          <target state="translated">입을 벌리고 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="9c6b6762e36471fe450c59cfd8ac7795dc4f2ece" translate="yes" xml:space="preserve">
          <source>Smiling Face With Open Mouth And Cold Sweat</source>
          <target state="translated">입을 벌리고 차가운 땀으로 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="44499ea35d054da3ff7a5f9003787847c0211975" translate="yes" xml:space="preserve">
          <source>Smiling Face With Open Mouth And Smiling Eyes</source>
          <target state="translated">입을 벌리고 웃는 눈으로 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="4ffd7ab207657516be78bb59b9916cebe72add34" translate="yes" xml:space="preserve">
          <source>Smiling Face With Open Mouth And Tightly-Closed Eyes</source>
          <target state="translated">입을 벌리고 눈을 감고 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="7945921a3f393b4a44ae8c896b01a94c272d8413" translate="yes" xml:space="preserve">
          <source>Smiling Face With Smiling Eyes</source>
          <target state="translated">웃는 눈으로 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="b43dfd9730e006bb21933ae3c476c32aeba70aab" translate="yes" xml:space="preserve">
          <source>Smiling Face With Sunglasses</source>
          <target state="translated">선글라스와 함께 웃는 얼굴</target>
        </trans-unit>
        <trans-unit id="af425a4e17b666c35247930e85314bb949b51007" translate="yes" xml:space="preserve">
          <source>Smirking Face</source>
          <target state="translated">잘하는 얼굴</target>
        </trans-unit>
        <trans-unit id="ca98254f17c74820483e77c3470525a859770c22" translate="yes" xml:space="preserve">
          <source>Smoking Symbol</source>
          <target state="translated">흡연 기호</target>
        </trans-unit>
        <trans-unit id="9404d283bda8febb429674c0fc98f38a99c88f43" translate="yes" xml:space="preserve">
          <source>Snail</source>
          <target state="translated">Snail</target>
        </trans-unit>
        <trans-unit id="90ec00c2b9ab0a18dd4535ea1d8d4b947564ae72" translate="yes" xml:space="preserve">
          <source>Snake</source>
          <target state="translated">Snake</target>
        </trans-unit>
        <trans-unit id="458113dba8ec5ecaec4a06819928465300f5a4c7" translate="yes" xml:space="preserve">
          <source>Snowboarder</source>
          <target state="translated">Snowboarder</target>
        </trans-unit>
        <trans-unit id="fda76b0bcc1e87cf259b1d1e3271d76f590fb5dd" translate="yes" xml:space="preserve">
          <source>Snowflake</source>
          <target state="translated">Snowflake</target>
        </trans-unit>
        <trans-unit id="4bd52782f10955a9d32b0da3335e3097dcd8fb1d" translate="yes" xml:space="preserve">
          <source>Snowman Without Snow</source>
          <target state="translated">눈없는 눈사람</target>
        </trans-unit>
        <trans-unit id="47fd436e594c25fa4506890545e453c97c8c4a8e" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;DEPOT_PATH&lt;/code&gt; might be:</source>
          <target state="translated">따라서 &lt;code&gt;DEPOT_PATH&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae795f979652fb4677a43ef1d3e7bc7167832155" translate="yes" xml:space="preserve">
          <source>So far, we have referred only to registered packages. Pkg also supports working with unregistered packages. To add an unregistered package, specify a URL:</source>
          <target state="translated">지금까지는 등록 된 패키지 만 언급했습니다. Pkg는 등록되지 않은 패키지 작업도 지원합니다. 등록되지 않은 패키지를 추가하려면 URL을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="16537b4f646c820601577214d26ffacee3545edc" translate="yes" xml:space="preserve">
          <source>So in Julia 1.0, we simplified the rules for scope: in any local scope, assignment to a name that wasn't already a local variable created a new local variable. This eliminated the notion of soft scope entirely as well as removing the potential for spooky action. We uncovered and fixed a significant number of bugs due to the removal of soft scope, vindicating the choice to get rid of it. And there was much rejoicing! Well, no, not really. Because some people were angry that they now had to write:</source>
          <target state="translated">따라서 Julia 1.0에서는 범위 규칙을 단순화했습니다. 모든 로컬 범위에서 아직 로컬 변수가 아닌 이름에 할당하면 새 로컬 변수가 생성되었습니다. 이것은 소프트 스코프의 개념을 완전히 제거하고 으스스한 행동의 가능성을 제거했습니다. 소프트 스코프 제거로 인해 상당수의 버그를 발견하고 수정하여 제거 할 수있는 선택을 입증했습니다. 그리고 많은 기쁨이있었습니다! 글쎄, 아니,별로. 어떤 사람들은 이제 글을 써야한다고 화가 났기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="20598cfd75146a1ddecc2a039338738c781790e0" translate="yes" xml:space="preserve">
          <source>So now instead of getting a plain string in &lt;code&gt;msg_body&lt;/code&gt;, the macro is receiving a full expression that will need to be evaluated in order to display as expected. This can be spliced directly into the returned expression as an argument to the &lt;a href=&quot;../../base/strings/index#Base.string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; call; see &lt;a href=&quot;https://github.com/JuliaLang/julia/blob/master/base/error.jl&quot;&gt;&lt;code&gt;error.jl&lt;/code&gt;&lt;/a&gt; for the complete implementation.</source>
          <target state="translated">이제 &lt;code&gt;msg_body&lt;/code&gt; 에서 일반 문자열을 얻는 대신 매크로가 예상대로 표시하기 위해 평가해야 할 전체 표현식을 수신합니다. 이것은 &lt;a href=&quot;../../base/strings/index#Base.string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt; 호출에 대한 인수로 반환 된 표현식에 직접 연결될 수 있습니다 . 전체 구현 은 &lt;a href=&quot;https://github.com/JuliaLang/julia/blob/master/base/error.jl&quot;&gt; &lt;code&gt;error.jl&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5792bbae14537954f39c73148ed88c6198b56a3d" translate="yes" xml:space="preserve">
          <source>So, the method body that will be used here doesn't include a loop at all - just indexing into the two tuples, multiplication and addition/subtraction. All the looping is performed compile-time, and we avoid looping during execution entirely. Thus, we only loop &lt;em&gt;once per type&lt;/em&gt;, in this case once per &lt;code&gt;N&lt;/code&gt; (except in edge cases where the function is generated more than once - see disclaimer above).</source>
          <target state="translated">따라서 여기서 사용될 메소드 본문에는 루프가 전혀 포함되어 있지 않습니다. 두 개의 튜플에 인덱싱하고 곱셈과 덧셈 / 뺄셈 만하면됩니다. 모든 루핑은 컴파일 타임에 수행되며 실행 중에 루핑을 완전히 피합니다. 따라서 우리 &lt;em&gt;는 유형 당 한 번만&lt;/em&gt; 반복합니다 .이 경우 &lt;code&gt;N&lt;/code&gt; 당 한 번입니다 (함수가 두 번 이상 생성되는 엣지 경우 제외)-위의 면책 조항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d6346920c32e19870ab341583f8aa9a111d37e27" translate="yes" xml:space="preserve">
          <source>So, we see that in the body of the generated function, &lt;code&gt;x&lt;/code&gt; is the &lt;em&gt;type&lt;/em&gt; of the passed argument, and the value returned by the generated function, is the result of evaluating the quoted expression we returned from the definition, now with the &lt;em&gt;value&lt;/em&gt; of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">그래서, 우리는 생성 된 함수의 본문에, 볼 &lt;code&gt;x&lt;/code&gt; 는 는 IS &lt;em&gt;유형&lt;/em&gt; 전달 된 인수하고, 생성 된 함수에 의해 반환 된 값의와 지금, 우리는 정의에서 반환 된 인용 표현을 평가의 결과 &lt;em&gt;값&lt;/em&gt; 의은 &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e61d685b47d247d279d7395db20cb6d41be694d7" translate="yes" xml:space="preserve">
          <source>Soccer Ball</source>
          <target state="translated">축구 공</target>
        </trans-unit>
        <trans-unit id="508c36b3241ae34627fb1cadebb1f27b16e0f61a" translate="yes" xml:space="preserve">
          <source>Sockets</source>
          <target state="translated">Sockets</target>
        </trans-unit>
        <trans-unit id="09497c393d7994af101126c0db18eecc3f190954" translate="yes" xml:space="preserve">
          <source>Sockets.IPv4</source>
          <target state="translated">Sockets.IPv4</target>
        </trans-unit>
        <trans-unit id="93c245aaf47710851cb69a096762e960ec6944c4" translate="yes" xml:space="preserve">
          <source>Sockets.IPv6</source>
          <target state="translated">Sockets.IPv6</target>
        </trans-unit>
        <trans-unit id="a61989018ffab29508e451a84639d6653b5a8b6a" translate="yes" xml:space="preserve">
          <source>Sockets.connect()</source>
          <target state="translated">Sockets.connect()</target>
        </trans-unit>
        <trans-unit id="a3af15a17c87769e9b63901c1b956c6630e58afb" translate="yes" xml:space="preserve">
          <source>Soft Ice Cream</source>
          <target state="translated">소프트 아이스크림</target>
        </trans-unit>
        <trans-unit id="c3ee2cebab7ad076424e4443d7e5a07a79ca3864" translate="yes" xml:space="preserve">
          <source>Software tests that rely on &lt;em&gt;specific&lt;/em&gt; &quot;random&quot; data should also generally save the data or embed it into the test code. On the other hand, tests that should pass for &lt;em&gt;most&lt;/em&gt; random data (e.g. testing &lt;code&gt;A \ (A*x) &amp;asymp; x&lt;/code&gt; for a random matrix &lt;code&gt;A = randn(n,n)&lt;/code&gt;) can use an RNG with a fixed seed to ensure that simply running the test many times does not encounter a failure due to very improbable data (e.g. an extremely ill-conditioned matrix).</source>
          <target state="translated">&lt;em&gt;특정&lt;/em&gt; &quot;무작위&quot;데이터 에 의존하는 소프트웨어 테스트 는 일반적으로 데이터를 저장하거나 테스트 코드에 포함해야합니다. 반면에 &lt;em&gt;대부분의&lt;/em&gt; 임의 데이터에 대해 통과해야하는 테스트 (예 : 임의 행렬 &lt;code&gt;A = randn(n,n)&lt;/code&gt; 대해 &lt;code&gt;A \ (A*x) &amp;asymp; x&lt;/code&gt; 테스트 )는 고정 시드가있는 RNG를 사용하여 테스트를 여러 번 실행해도 매우 가능성이없는 데이터 (예 : 극도로 조건이 나쁜 매트릭스)로 인해 실패하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e46e866711af2eb98cb191a753a6f8137d4eb41" translate="yes" xml:space="preserve">
          <source>Software-Function Symbol</source>
          <target state="translated">소프트웨어 기능 기호</target>
        </trans-unit>
        <trans-unit id="07d6488cde1a776dcb848484b1444e04f5f1bb42" translate="yes" xml:space="preserve">
          <source>Solidus With Overbar</source>
          <target state="translated">오버 바가있는 Solidus</target>
        </trans-unit>
        <trans-unit id="602cdf9cc32ac8ade7b5cd787a8b8d2d14f7e3d3" translate="yes" xml:space="preserve">
          <source>Solve the equation &lt;code&gt;AB * X = B&lt;/code&gt;. &lt;code&gt;trans&lt;/code&gt; determines the orientation of &lt;code&gt;AB&lt;/code&gt;. It may be &lt;code&gt;N&lt;/code&gt; (no transpose), &lt;code&gt;T&lt;/code&gt; (transpose), or &lt;code&gt;C&lt;/code&gt; (conjugate transpose). &lt;code&gt;kl&lt;/code&gt; is the first subdiagonal containing a nonzero band, &lt;code&gt;ku&lt;/code&gt; is the last superdiagonal containing one, and &lt;code&gt;m&lt;/code&gt; is the first dimension of the matrix &lt;code&gt;AB&lt;/code&gt;. &lt;code&gt;ipiv&lt;/code&gt; is the vector of pivots returned from &lt;code&gt;gbtrf!&lt;/code&gt;. Returns the vector or matrix &lt;code&gt;X&lt;/code&gt;, overwriting &lt;code&gt;B&lt;/code&gt; in-place.</source>
          <target state="translated">방정식 &lt;code&gt;AB * X = B&lt;/code&gt; 풉니 다 . &lt;code&gt;trans&lt;/code&gt; 는 &lt;code&gt;AB&lt;/code&gt; 의 방향을 결정합니다 . 이있을 수 &lt;code&gt;N&lt;/code&gt; (아니오 전치), &lt;code&gt;T&lt;/code&gt; (전치) 또는 &lt;code&gt;C&lt;/code&gt; (켤레 전치). &lt;code&gt;kl&lt;/code&gt; 은 0이 아닌 밴드를 포함하는 첫 번째 subdiagonal이고, &lt;code&gt;ku&lt;/code&gt; 는 1을 포함하는 마지막 superdiagonal이며, &lt;code&gt;m&lt;/code&gt; 은 행렬 &lt;code&gt;AB&lt;/code&gt; 의 첫 번째 차원입니다 . &lt;code&gt;ipiv&lt;/code&gt; 는 gbtrf 에서 반환 된 피벗의 벡터입니다 &lt;code&gt;gbtrf!&lt;/code&gt; . &lt;code&gt;B&lt;/code&gt; 를 그 자리에서 덮어 쓰는 벡터 또는 행렬 &lt;code&gt;X&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bb5a0ceac11a73e9b08605a7833baabf071ca408" translate="yes" xml:space="preserve">
          <source>Solves &lt;code&gt;A * X = B&lt;/code&gt; (&lt;code&gt;trans = N&lt;/code&gt;), &lt;code&gt;transpose(A) * X = B&lt;/code&gt; (&lt;code&gt;trans = T&lt;/code&gt;), or &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; (&lt;code&gt;trans = C&lt;/code&gt;) for (upper if &lt;code&gt;uplo = U&lt;/code&gt;, lower if &lt;code&gt;uplo = L&lt;/code&gt;) triangular matrix &lt;code&gt;A&lt;/code&gt;. If &lt;code&gt;diag = N&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; has non-unit diagonal elements. If &lt;code&gt;diag = U&lt;/code&gt;, all diagonal elements of &lt;code&gt;A&lt;/code&gt; are one. &lt;code&gt;B&lt;/code&gt; is overwritten with the solution &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">해결 &lt;code&gt;A * X = B&lt;/code&gt; ( &lt;code&gt;trans = N&lt;/code&gt; ), &lt;code&gt;transpose(A) * X = B&lt;/code&gt; ( &lt;code&gt;trans = T&lt;/code&gt; ) 또는 &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; ( &lt;code&gt;trans = C&lt;/code&gt; 대) (상부 경우 &lt;code&gt;uplo = U&lt;/code&gt; , 만일 하향 &lt;code&gt;uplo = L&lt;/code&gt; ) 삼각 행렬 . 경우 &lt;code&gt;diag = N&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; 는 비 - 부 대각 요소를 갖는다. &lt;code&gt;diag = U&lt;/code&gt; 인 경우 &lt;code&gt;A&lt;/code&gt; 의 모든 대각선 요소 는 1입니다. 솔루션 &lt;code&gt;X&lt;/code&gt; 로 &lt;code&gt;B&lt;/code&gt; 를 덮어 씁니다 . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db2418fd57be1dd1f33310727bf23922b648ef30" translate="yes" xml:space="preserve">
          <source>Solves &lt;code&gt;A * X = B&lt;/code&gt; for positive-definite tridiagonal &lt;code&gt;A&lt;/code&gt; with diagonal &lt;code&gt;D&lt;/code&gt; and off-diagonal &lt;code&gt;E&lt;/code&gt; after computing &lt;code&gt;A&lt;/code&gt;'s LDLt factorization using &lt;code&gt;pttrf!&lt;/code&gt;. &lt;code&gt;B&lt;/code&gt; is overwritten with the solution &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">해결 &lt;code&gt;A * X = B&lt;/code&gt; 포지티브 명확한 삼중 대각위한 대각선 &lt;code&gt;D&lt;/code&gt; 오프 대각 &lt;code&gt;E&lt;/code&gt; 계산 후 사용의 생체 부분 간 이식의 분해를 &lt;code&gt;pttrf!&lt;/code&gt; . 솔루션 &lt;code&gt;X&lt;/code&gt; 로 &lt;code&gt;B&lt;/code&gt; 를 덮어 씁니다 . &lt;code&gt;A&lt;/code&gt; &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="961f756955f1149506c51f20c31acd4bc61322e6" translate="yes" xml:space="preserve">
          <source>Solves &lt;code&gt;A * X = B&lt;/code&gt; for positive-definite tridiagonal &lt;code&gt;A&lt;/code&gt;. &lt;code&gt;D&lt;/code&gt; is the diagonal of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;E&lt;/code&gt; is the off-diagonal. &lt;code&gt;B&lt;/code&gt; is overwritten with the solution &lt;code&gt;X&lt;/code&gt; and returned.</source>
          <target state="translated">해결은 &lt;code&gt;A * X = B&lt;/code&gt; 포지티브 명확한 삼중 대각위한 . &lt;code&gt;D&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 의 대각선 이고 &lt;code&gt;E&lt;/code&gt; 는 대각선이 아닙니다. 솔루션 &lt;code&gt;X&lt;/code&gt; 로 &lt;code&gt;B&lt;/code&gt; 를 덮어 쓰고 리턴됩니다. &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="482915836c9c4f9ab137a6159547b699643c39ea" translate="yes" xml:space="preserve">
          <source>Solves the Sylvester matrix equation &lt;code&gt;A * X +/- X * B = scale*C&lt;/code&gt; where &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are both quasi-upper triangular. If &lt;code&gt;transa = N&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; is not modified. If &lt;code&gt;transa = T&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; is transposed. If &lt;code&gt;transa = C&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; is conjugate transposed. Similarly for &lt;code&gt;transb&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;. If &lt;code&gt;isgn = 1&lt;/code&gt;, the equation &lt;code&gt;A * X + X * B = scale * C&lt;/code&gt; is solved. If &lt;code&gt;isgn = -1&lt;/code&gt;, the equation &lt;code&gt;A * X - X * B = scale * C&lt;/code&gt; is solved.</source>
          <target state="translated">실베스터 행렬 방정식 &lt;code&gt;A * X +/- X * B = scale*C&lt;/code&gt; 풉니 다 . 여기서 &lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;B&lt;/code&gt; 는 모두 준 상위 삼각형입니다. 경우 &lt;code&gt;transa = N&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; 는 수정되지 않는다. 경우 &lt;code&gt;transa = T&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; 전치된다. 경우 &lt;code&gt;transa = C&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; 는 공액 전치이다. &lt;code&gt;transb&lt;/code&gt; 및 &lt;code&gt;B&lt;/code&gt; 와 유사합니다 . 경우 &lt;code&gt;isgn = 1&lt;/code&gt; , 방정식 &lt;code&gt;A * X + X * B = scale * C&lt;/code&gt; 해결된다. 경우 &lt;code&gt;isgn = -1&lt;/code&gt; , 방정식 &lt;code&gt;A * X - X * B = scale * C&lt;/code&gt; 해결된다.</target>
        </trans-unit>
        <trans-unit id="a9b7b4dd8aa28fb121a28e9079769977e9e169fe" translate="yes" xml:space="preserve">
          <source>Solves the equation &lt;code&gt;A * X = B&lt;/code&gt; (&lt;code&gt;trans = N&lt;/code&gt;), &lt;code&gt;transpose(A) * X = B&lt;/code&gt; (&lt;code&gt;trans = T&lt;/code&gt;), or &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; (&lt;code&gt;trans = C&lt;/code&gt;) using the &lt;code&gt;LU&lt;/code&gt; factorization computed by &lt;code&gt;gttrf!&lt;/code&gt;. &lt;code&gt;B&lt;/code&gt; is overwritten with the solution &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gttrf!&lt;/code&gt; 계산 된 &lt;code&gt;LU&lt;/code&gt; 인수 분해를 사용하여 방정식 &lt;code&gt;A * X = B&lt;/code&gt; ( &lt;code&gt;trans = N&lt;/code&gt; ), &lt;code&gt;transpose(A) * X = B&lt;/code&gt; ( &lt;code&gt;trans = T&lt;/code&gt; ) 또는 &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; ( &lt;code&gt;trans = C&lt;/code&gt; )를 풉니 다! . 솔루션 &lt;code&gt;X&lt;/code&gt; 로 &lt;code&gt;B&lt;/code&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="1096d0d9b663b2dc24f3a528d02546e5b92656cd" translate="yes" xml:space="preserve">
          <source>Solves the equation &lt;code&gt;A * X = B&lt;/code&gt; for a Hermitian matrix &lt;code&gt;A&lt;/code&gt; using the results of &lt;code&gt;sytrf!&lt;/code&gt;. If &lt;code&gt;uplo = U&lt;/code&gt;, the upper half of &lt;code&gt;A&lt;/code&gt; is stored. If &lt;code&gt;uplo = L&lt;/code&gt;, the lower half is stored. &lt;code&gt;B&lt;/code&gt; is overwritten by the solution &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sytrf!&lt;/code&gt; 의 결과를 사용하여 Hermitian 행렬 &lt;code&gt;A&lt;/code&gt; 에 대한 방정식 &lt;code&gt;A * X = B&lt;/code&gt; 를 풉니 다! . 경우 &lt;code&gt;uplo = U&lt;/code&gt; 의 상반부 &lt;code&gt;A&lt;/code&gt; 는 저장됩니다. 경우 &lt;code&gt;uplo = L&lt;/code&gt; , 하반부가 저장된다. 솔루션 &lt;code&gt;X&lt;/code&gt; 가 &lt;code&gt;B&lt;/code&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="1e498dc21330bddebde04457ac1a27693382eb3f" translate="yes" xml:space="preserve">
          <source>Solves the equation &lt;code&gt;A * X = B&lt;/code&gt; for a symmetric matrix &lt;code&gt;A&lt;/code&gt; using the results of &lt;code&gt;sytrf!&lt;/code&gt;. If &lt;code&gt;uplo = U&lt;/code&gt;, the upper half of &lt;code&gt;A&lt;/code&gt; is stored. If &lt;code&gt;uplo = L&lt;/code&gt;, the lower half is stored. &lt;code&gt;B&lt;/code&gt; is overwritten by the solution &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sytrf!&lt;/code&gt; 의 결과를 사용하여 대칭 행렬 &lt;code&gt;A&lt;/code&gt; 에 대한 방정식 &lt;code&gt;A * X = B&lt;/code&gt; 를 풉니 다! . 경우 &lt;code&gt;uplo = U&lt;/code&gt; 의 상반부 &lt;code&gt;A&lt;/code&gt; 는 저장됩니다. 경우 &lt;code&gt;uplo = L&lt;/code&gt; , 하반부가 저장된다. 솔루션 &lt;code&gt;X&lt;/code&gt; 가 &lt;code&gt;B&lt;/code&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="fdeefb649249fb23d2712e0df3568c23ccde7674" translate="yes" xml:space="preserve">
          <source>Solves the equation &lt;code&gt;A * X = B&lt;/code&gt; where &lt;code&gt;A&lt;/code&gt; is a tridiagonal matrix with &lt;code&gt;dl&lt;/code&gt; on the subdiagonal, &lt;code&gt;d&lt;/code&gt; on the diagonal, and &lt;code&gt;du&lt;/code&gt; on the superdiagonal.</source>
          <target state="translated">해결 방정식 &lt;code&gt;A * X = B&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; 가 인 삼중 대각 매트릭스 &lt;code&gt;dl&lt;/code&gt; subdiagonal에 &lt;code&gt;d&lt;/code&gt; 대각선과 &lt;code&gt;du&lt;/code&gt; 에 superdiagonal.</target>
        </trans-unit>
        <trans-unit id="bf5441c65e637e677b88a32fa8c5ed325ae17210" translate="yes" xml:space="preserve">
          <source>Solves the equation &lt;code&gt;A * x = c&lt;/code&gt; where &lt;code&gt;x&lt;/code&gt; is subject to the equality constraint &lt;code&gt;B * x = d&lt;/code&gt;. Uses the formula &lt;code&gt;||c - A*x||^2 = 0&lt;/code&gt; to solve. Returns &lt;code&gt;X&lt;/code&gt; and the residual sum-of-squares.</source>
          <target state="translated">방정식 &lt;code&gt;A * x = c&lt;/code&gt; 해결합니다. 여기서 &lt;code&gt;x&lt;/code&gt; 는 등식 제약 조건 &lt;code&gt;B * x = d&lt;/code&gt; 입니다. 해결하기 위해 공식 &lt;code&gt;||c - A*x||^2 = 0&lt;/code&gt; 을 사용합니다. &lt;code&gt;X&lt;/code&gt; 와 잔차 제곱합을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="322b7b96a2beb939bed129deea687efa9e8a408b" translate="yes" xml:space="preserve">
          <source>Solves the linear equation &lt;code&gt;A * X = B&lt;/code&gt; (&lt;code&gt;trans = N&lt;/code&gt;), &lt;code&gt;transpose(A) * X = B&lt;/code&gt; (&lt;code&gt;trans = T&lt;/code&gt;), or &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; (&lt;code&gt;trans = C&lt;/code&gt;) using the &lt;code&gt;LU&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;. &lt;code&gt;fact&lt;/code&gt; may be &lt;code&gt;E&lt;/code&gt;, in which case &lt;code&gt;A&lt;/code&gt; will be equilibrated and copied to &lt;code&gt;AF&lt;/code&gt;; &lt;code&gt;F&lt;/code&gt;, in which case &lt;code&gt;AF&lt;/code&gt; and &lt;code&gt;ipiv&lt;/code&gt; from a previous &lt;code&gt;LU&lt;/code&gt; factorization are inputs; or &lt;code&gt;N&lt;/code&gt;, in which case &lt;code&gt;A&lt;/code&gt; will be copied to &lt;code&gt;AF&lt;/code&gt; and then factored. If &lt;code&gt;fact = F&lt;/code&gt;, &lt;code&gt;equed&lt;/code&gt; may be &lt;code&gt;N&lt;/code&gt;, meaning &lt;code&gt;A&lt;/code&gt; has not been equilibrated; &lt;code&gt;R&lt;/code&gt;, meaning &lt;code&gt;A&lt;/code&gt; was multiplied by &lt;code&gt;Diagonal(R)&lt;/code&gt; from the left; &lt;code&gt;C&lt;/code&gt;, meaning &lt;code&gt;A&lt;/code&gt; was multiplied by &lt;code&gt;Diagonal(C)&lt;/code&gt; from the right; or &lt;code&gt;B&lt;/code&gt;, meaning &lt;code&gt;A&lt;/code&gt; was multiplied by &lt;code&gt;Diagonal(R)&lt;/code&gt; from the left and &lt;code&gt;Diagonal(C)&lt;/code&gt; from the right. If &lt;code&gt;fact = F&lt;/code&gt; and &lt;code&gt;equed = R&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; the elements of &lt;code&gt;R&lt;/code&gt; must all be positive. If &lt;code&gt;fact = F&lt;/code&gt; and &lt;code&gt;equed = C&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; the elements of &lt;code&gt;C&lt;/code&gt; must all be positive.</source>
          <target state="translated">해결 선형 방정식 &lt;code&gt;A * X = B&lt;/code&gt; ( &lt;code&gt;trans = N&lt;/code&gt; ), &lt;code&gt;transpose(A) * X = B&lt;/code&gt; ( &lt;code&gt;trans = T&lt;/code&gt; ) 또는 &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; ( &lt;code&gt;trans = C&lt;/code&gt; 은 USING) &lt;code&gt;LU&lt;/code&gt; 의 분해 &lt;code&gt;A&lt;/code&gt; . &lt;code&gt;fact&lt;/code&gt; 은 &lt;code&gt;E&lt;/code&gt; 일 수 있으며 ,이 경우 &lt;code&gt;A&lt;/code&gt; 는 평형화되어 &lt;code&gt;AF&lt;/code&gt; 로 복사됩니다 . &lt;code&gt;F&lt;/code&gt; . 이 경우 이전 &lt;code&gt;LU&lt;/code&gt; 인수 분해의 &lt;code&gt;AF&lt;/code&gt; 및 &lt;code&gt;ipiv&lt;/code&gt; 가 입력입니다. 또는 &lt;code&gt;N&lt;/code&gt; . 이 경우 &lt;code&gt;A&lt;/code&gt; 는 &lt;code&gt;AF&lt;/code&gt; 로 복사됩니다그런 다음 인수 분해되었습니다. 경우 &lt;code&gt;fact = F&lt;/code&gt; , &lt;code&gt;equed&lt;/code&gt; 가 있을 수 &lt;code&gt;N&lt;/code&gt; 즉, &lt;code&gt;A&lt;/code&gt; 가 평형화되지 않았다; &lt;code&gt;R&lt;/code&gt; 은 의미 &lt;code&gt;A&lt;/code&gt; 를 곱하고 &lt;code&gt;Diagonal(R)&lt;/code&gt; 왼쪽; &lt;code&gt;C&lt;/code&gt; 는 &lt;code&gt;A&lt;/code&gt; 에서 오른쪽의 &lt;code&gt;Diagonal(C)&lt;/code&gt; 을 곱한 것을 의미 합니다. 또는 &lt;code&gt;B&lt;/code&gt; , 즉 &lt;code&gt;A&lt;/code&gt; 에 왼쪽의 &lt;code&gt;Diagonal(R)&lt;/code&gt; 과 오른쪽의 &lt;code&gt;Diagonal(C)&lt;/code&gt; 을 곱한 것을 의미 합니다. 만약 &lt;code&gt;fact = F&lt;/code&gt; 및 &lt;code&gt;equed = R&lt;/code&gt; 또는 &lt;code&gt;B&lt;/code&gt; 는 요소 &lt;code&gt;R&lt;/code&gt; 은 모두 양수이어야한다. 만약 &lt;code&gt;fact = F&lt;/code&gt; 및 &lt;code&gt;equed = C&lt;/code&gt; 또는 &lt;code&gt;B&lt;/code&gt; 의 성분 &lt;code&gt;C&lt;/code&gt; 는 모두 양수이어야한다.</target>
        </trans-unit>
        <trans-unit id="13c69627f249c12e2c466589041848990fdcd458" translate="yes" xml:space="preserve">
          <source>Solves the linear equation &lt;code&gt;A * X = B&lt;/code&gt; where &lt;code&gt;A&lt;/code&gt; is a square matrix using the &lt;code&gt;LU&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;. &lt;code&gt;A&lt;/code&gt; is overwritten with its &lt;code&gt;LU&lt;/code&gt; factorization and &lt;code&gt;B&lt;/code&gt; is overwritten with the solution &lt;code&gt;X&lt;/code&gt;. &lt;code&gt;ipiv&lt;/code&gt; contains the pivoting information for the &lt;code&gt;LU&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">해결 선형 방정식 &lt;code&gt;A * X = B&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; 은 USING 정방 행렬 인 &lt;code&gt;LU&lt;/code&gt; 에 의 인수 &lt;code&gt;A&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt; 는 &lt;code&gt;LU&lt;/code&gt; 인수 분해 로 덮어 쓰고 &lt;code&gt;B&lt;/code&gt; 는 솔루션 &lt;code&gt;X&lt;/code&gt; 로 덮어 씁니다 . &lt;code&gt;ipiv&lt;/code&gt; 에는 &lt;code&gt;A&lt;/code&gt; 의 &lt;code&gt;LU&lt;/code&gt; 인수 분해에 대한 피벗 정보가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa02b1e569f3b52ee09f64f205cbf7ac22ad2f8a" translate="yes" xml:space="preserve">
          <source>Solves the linear equation &lt;code&gt;A * X = B&lt;/code&gt;, &lt;code&gt;transpose(A) * X = B&lt;/code&gt;, or &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; for square &lt;code&gt;A&lt;/code&gt;. Modifies the matrix/vector &lt;code&gt;B&lt;/code&gt; in place with the solution. &lt;code&gt;A&lt;/code&gt; is the &lt;code&gt;LU&lt;/code&gt; factorization from &lt;code&gt;getrf!&lt;/code&gt;, with &lt;code&gt;ipiv&lt;/code&gt; the pivoting information. &lt;code&gt;trans&lt;/code&gt; may be one of &lt;code&gt;N&lt;/code&gt; (no modification), &lt;code&gt;T&lt;/code&gt; (transpose), or &lt;code&gt;C&lt;/code&gt; (conjugate transpose).</source>
          <target state="translated">제곱 &lt;code&gt;A&lt;/code&gt; 의 경우 선형 방정식 &lt;code&gt;A * X = B&lt;/code&gt; , &lt;code&gt;transpose(A) * X = B&lt;/code&gt; 또는 &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; 를 풉니 다 . 솔루션과 함께 행렬 / 벡터 &lt;code&gt;B&lt;/code&gt; 를 수정합니다 . &lt;code&gt;A&lt;/code&gt; 는 &lt;code&gt;getrf!&lt;/code&gt; 의 &lt;code&gt;LU&lt;/code&gt; 분해입니다 ! 와 &lt;code&gt;ipiv&lt;/code&gt; 피벗 정보를 제공합니다. &lt;code&gt;trans&lt;/code&gt; 는 &lt;code&gt;N&lt;/code&gt; (변형 없음), &lt;code&gt;T&lt;/code&gt; (전치) 또는 &lt;code&gt;C&lt;/code&gt; (접합 전치) 중 하나 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8fc33c562c6026409b94e4465a1b768a639c2d1" translate="yes" xml:space="preserve">
          <source>Solves the linear equation &lt;code&gt;A * X = B&lt;/code&gt;, &lt;code&gt;transpose(A) * X = B&lt;/code&gt;, or &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; using a QR or LQ factorization. Modifies the matrix/vector &lt;code&gt;B&lt;/code&gt; in place with the solution. &lt;code&gt;A&lt;/code&gt; is overwritten with its &lt;code&gt;QR&lt;/code&gt; or &lt;code&gt;LQ&lt;/code&gt; factorization. &lt;code&gt;trans&lt;/code&gt; may be one of &lt;code&gt;N&lt;/code&gt; (no modification), &lt;code&gt;T&lt;/code&gt; (transpose), or &lt;code&gt;C&lt;/code&gt; (conjugate transpose). &lt;code&gt;gels!&lt;/code&gt; searches for the minimum norm/least squares solution. &lt;code&gt;A&lt;/code&gt; may be under or over determined. The solution is returned in &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">QR 또는 LQ 인수 분해를 사용하여 선형 방정식 &lt;code&gt;A * X = B&lt;/code&gt; , &lt;code&gt;transpose(A) * X = B&lt;/code&gt; 또는 &lt;code&gt;adjoint(A) * X = B&lt;/code&gt; 를 풉니 다. 솔루션과 함께 행렬 / 벡터 &lt;code&gt;B&lt;/code&gt; 를 수정합니다 . &lt;code&gt;QR&lt;/code&gt; 또는 &lt;code&gt;LQ&lt;/code&gt; 분해로 &lt;code&gt;A&lt;/code&gt; 를 덮어 씁니다 . &lt;code&gt;trans&lt;/code&gt; 는 &lt;code&gt;N&lt;/code&gt; (변형 없음), &lt;code&gt;T&lt;/code&gt; (전치) 또는 &lt;code&gt;C&lt;/code&gt; (접합 전치) 중 하나 일 수 있습니다 . &lt;code&gt;gels!&lt;/code&gt; 최소 규범 / 최소 제곱 솔루션을 검색합니다. &lt;code&gt;A&lt;/code&gt; 가 미달 또는 초과 결정되었을 수 있습니다. 솔루션은 &lt;code&gt;B&lt;/code&gt; 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="00b2aad45d07b70e1b7eefea74316913901b6e42" translate="yes" xml:space="preserve">
          <source>Some</source>
          <target state="translated">Some</target>
        </trans-unit>
        <trans-unit id="18e7950450bcdc2df2b421850941df544c601563" translate="yes" xml:space="preserve">
          <source>Some C libraries execute their callbacks from a different thread, and since Julia isn't thread-safe you'll need to take some extra precautions. In particular, you'll need to set up a two-layered system: the C callback should only &lt;em&gt;schedule&lt;/em&gt; (via Julia's event loop) the execution of your &quot;real&quot; callback. To do this, create an &lt;a href=&quot;../../base/base/index#Base.AsyncCondition&quot;&gt;&lt;code&gt;AsyncCondition&lt;/code&gt;&lt;/a&gt; object and &lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; on it:</source>
          <target state="translated">일부 C 라이브러리는 다른 스레드에서 콜백을 실행하며 Julia는 스레드로부터 안전하지 않으므로 추가 예방 조치를 취해야합니다. 특히 2 계층 시스템을 설정해야합니다. C 콜백은 Julia의 이벤트 루프를 통해 &quot;실제&quot;콜백 실행을 &lt;em&gt;예약&lt;/em&gt; 해야합니다 . 이렇게하려면 &lt;a href=&quot;../../base/base/index#Base.AsyncCondition&quot;&gt; &lt;code&gt;AsyncCondition&lt;/code&gt; &lt;/a&gt; 객체를 만들고 &lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="accd855ae9c245a0268a7ad03f11332d4d79b588" translate="yes" xml:space="preserve">
          <source>Some Examples of C Wrappers</source>
          <target state="translated">C 래퍼의 일부 예</target>
        </trans-unit>
        <trans-unit id="94b4369ed49ef1c6185b2dec984268180efbb436" translate="yes" xml:space="preserve">
          <source>Some Pkg output has been omitted in order to keep this guide focused. This will help maintain a good pace and not get bogged down in details. If you require more details, refer to subsequent sections of the Pkg manual.</source>
          <target state="translated">이 안내서의 초점을 맞추기 위해 일부 Pkg 출력이 생략되었습니다. 이것은 좋은 페이스를 유지하는 데 도움이되며 세부 사항에 얽매이지 않습니다. 자세한 내용이 필요하면 Pkg 설명서의 다음 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ecced710d8ddd3485ca928a93235d240bb44169" translate="yes" xml:space="preserve">
          <source>Some Unicode characters are considered to be equivalent in identifiers. Different ways of entering Unicode combining characters (e.g., accents) are treated as equivalent (specifically, Julia identifiers are &lt;a href=&quot;http://www.macchiato.com/unicode/nfc-faq&quot;&gt;NFC&lt;/a&gt;-normalized). The Unicode characters &lt;code&gt;ɛ&lt;/code&gt; (U+025B: Latin small letter open e) and &lt;code&gt;&amp;micro;&lt;/code&gt; (U+00B5: micro sign) are treated as equivalent to the corresponding Greek letters, because the former are easily accessible via some input methods.</source>
          <target state="translated">일부 유니 코드 문자는 식별자에서 동일한 것으로 간주됩니다. 유니 코드 조합 문자 (예 : 악센트)를 입력하는 다양한 방법은 동등하게 처리됩니다 (특히 Julia 식별자는 &lt;a href=&quot;http://www.macchiato.com/unicode/nfc-faq&quot;&gt;NFC&lt;/a&gt; 정규화 됨). 유니 코드 문자 &lt;code&gt;ɛ&lt;/code&gt; (U + 025B : 라틴 소문자 열기 e) 및 &lt;code&gt;&amp;micro;&lt;/code&gt; (U + 00B5 : 마이크로 기호)는 전자가 일부 입력 방법을 통해 쉽게 액세스 할 수 있기 때문에 해당 그리스 문자와 동일하게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f9642ff7f1c06b9b2b2a560bab71d05aa4307ad4" translate="yes" xml:space="preserve">
          <source>Some Unicode characters are considered to be equivalent in identifiers. Different ways of entering Unicode combining characters (e.g., accents) are treated as equivalent (specifically, Julia identifiers are NFC-normalized). The Unicode characters &lt;code&gt;ɛ&lt;/code&gt; (U+025B: Latin small letter open e) and &lt;code&gt;&amp;micro;&lt;/code&gt; (U+00B5: micro sign) are treated as equivalent to the corresponding Greek letters, because the former are easily accessible via some input methods.</source>
          <target state="translated">일부 유니 코드 문자는 식별자에서 동등한 것으로 간주됩니다. 유니 코드 결합 문자 (예 : 악센트)를 입력하는 다른 방법은 동등한 것으로 취급됩니다 (특히 Julia 식별자는 NFC 정규화 됨). 유니 코드 문자 &lt;code&gt;ɛ&lt;/code&gt; (U + 025B : 라틴 문자 소문자 e) 및 &lt;code&gt;&amp;micro;&lt;/code&gt; (U + 00B5 : 마이크로 기호)는 해당 그리스 문자와 동일하게 취급됩니다. 전자는 일부 입력 방법을 통해 쉽게 액세스 할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="9b74d50a9d56447cfbfebef4ab683bbb749969d1" translate="yes" xml:space="preserve">
          <source>Some are used by the cluster manager to add workers to an already-initialized host:</source>
          <target state="translated">일부는 클러스터 관리자가 이미 초기화 된 호스트에 작업자를 추가하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6936d460201eb752b719d1cb0e39015d14977133" translate="yes" xml:space="preserve">
          <source>Some collections follow a slightly different definition. For example, &lt;a href=&quot;#Base.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;s check whether the item &lt;a href=&quot;../base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt; to one of the elements. &lt;a href=&quot;#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt;s look for &lt;code&gt;key=&amp;gt;value&lt;/code&gt; pairs, and the key is compared using &lt;a href=&quot;../base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt;. To test for the presence of a key in a dictionary, use &lt;a href=&quot;#Base.haskey&quot;&gt;&lt;code&gt;haskey&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;k in keys(dict)&lt;/code&gt;. For these collections, the result is always a &lt;code&gt;Bool&lt;/code&gt; and never &lt;code&gt;missing&lt;/code&gt;.</source>
          <target state="translated">일부 컬렉션은 약간 다른 정의를 따릅니다. 예를 들어, &lt;a href=&quot;#Base.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 항목 여부의 확인 &lt;a href=&quot;../base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt; 요소 중 하나. &lt;a href=&quot;#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;key=&amp;gt;value&lt;/code&gt; 쌍을 찾고 키는 &lt;a href=&quot;../base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; 을&lt;/a&gt; 사용하여 비교됩니다 . 사전에 키가 있는지 테스트하려면 &lt;a href=&quot;#Base.haskey&quot;&gt; &lt;code&gt;haskey&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;k in keys(dict)&lt;/code&gt; . 이 컬렉션의 경우 결과는 항상 &lt;code&gt;Bool&lt;/code&gt; 이며 &lt;code&gt;missing&lt;/code&gt; 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dee627c92fa6c7cd0763a522cf1890d5c606a003" translate="yes" xml:space="preserve">
          <source>Some constructors don't implement the concept of &quot;conversion&quot;. For example, &lt;code&gt;Timer(2)&lt;/code&gt; creates a 2-second timer, which is not really a &quot;conversion&quot; from an integer to a timer.</source>
          <target state="translated">일부 생성자는 &quot;변환&quot;개념을 구현하지 않습니다. 예를 들어, &lt;code&gt;Timer(2)&lt;/code&gt; 는 2 초 타이머를 생성하는데, 이는 실제로 정수에서 타이머로의 &quot;변환&quot;이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="803a4f2ca130cbd59b02dffd805cac6e2844c6d2" translate="yes" xml:space="preserve">
          <source>Some fields are used by &lt;code&gt;SSHManager&lt;/code&gt; and similar managers:</source>
          <target state="translated">일부 필드는 &lt;code&gt;SSHManager&lt;/code&gt; 및 유사한 관리자 가 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="3237308b38aa7b9713be308d5fe79eea01cc6b17" translate="yes" xml:space="preserve">
          <source>Some fields are used by both &lt;code&gt;LocalManager&lt;/code&gt;s and &lt;code&gt;SSHManager&lt;/code&gt;s:</source>
          <target state="translated">일부 필드는 &lt;code&gt;LocalManager&lt;/code&gt; 및 &lt;code&gt;SSHManager&lt;/code&gt; 모두에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e4f033caa82390a5db2474ff86fecf227ebe43a2" translate="yes" xml:space="preserve">
          <source>Some functions are used only for their side effects, and do not need to return a value. In these cases, the convention is to return the value &lt;code&gt;nothing&lt;/code&gt;, which is just a singleton object of type &lt;code&gt;Nothing&lt;/code&gt;. This is an ordinary type with no fields; there is nothing special about it except for this convention, and that the REPL does not print anything for it. Some language constructs that would not otherwise have a value also yield &lt;code&gt;nothing&lt;/code&gt;, for example &lt;code&gt;if false; end&lt;/code&gt;.</source>
          <target state="translated">일부 함수는 부작용에만 사용되며 값을 반환 할 필요가 없습니다. 이 경우 규칙은 값 &lt;code&gt;nothing&lt;/code&gt; 을 반환하는 것입니다.이 값 은 &lt;code&gt;Nothing&lt;/code&gt; 유형의 단일 객체 일뿐 입니다. 이것은 필드가없는 일반적인 유형입니다. 이 규칙을 제외하고는 특별한 점이 없으며 REPL은 아무것도 인쇄하지 않습니다. 그렇지 않으면 값을 가지지 않는 일부 언어 구성도 &lt;code&gt;nothing&lt;/code&gt; 것도 산출 하지 않습니다 ( 예 : &lt;code&gt;if false; end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6ec3a1daa89170c16c43175681b305a448b2771" translate="yes" xml:space="preserve">
          <source>Some functions need a large number of arguments, or have a large number of behaviors. Remembering how to call such functions can be difficult. Keyword arguments can make these complex interfaces easier to use and extend by allowing arguments to be identified by name instead of only by position.</source>
          <target state="translated">일부 함수에는 많은 수의 인수가 필요하거나 많은 수의 동작이 있습니다. 이러한 함수를 호출하는 방법을 기억하는 것은 어려울 수 있습니다. 키워드 인수를 사용하면 위치가 아닌 이름으로 인수를 식별 할 수 있으므로 이러한 복잡한 인터페이스를보다 쉽게 ​​사용하고 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a021f743e68d12fb1ee0c33d82a729d4b90419ec" translate="yes" xml:space="preserve">
          <source>Some general notes:</source>
          <target state="translated">몇 가지 일반적인 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="28f741954a343279272ca15c0b9ded9975d8fc41" translate="yes" xml:space="preserve">
          <source>Some languages consider parsing strings as numbers or formatting numbers as strings to be conversions (many dynamic languages will even perform conversion for you automatically), however Julia does not: even though some strings can be parsed as numbers, most strings are not valid representations of numbers, and only a very limited subset of them are. Therefore in Julia the dedicated &lt;a href=&quot;../../base/numbers/index#Base.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; function must be used to perform this operation, making it more explicit.</source>
          <target state="translated">일부 언어는 문자열을 숫자로 구문 분석하거나 숫자를 문자열로 변환하는 것을 변환으로 간주하지만 (다이나믹 언어는 자동으로 변환을 수행 할 수도 있음) Julia는 그렇지 않습니다. 일부 문자열을 숫자로 구문 분석 할 수 있지만 대부분의 문자열은 숫자는 매우 제한적입니다. 따라서 Julia에서는 전용 &lt;a href=&quot;../../base/numbers/index#Base.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 기능을 사용하여이 조작을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d14874b6cf66c6d957b6d45f932e72b9048a65ec" translate="yes" xml:space="preserve">
          <source>Some languages consider parsing strings as numbers or formatting numbers as strings to be conversions (many dynamic languages will even perform conversion for you automatically). This is not the case in Julia. Even though some strings can be parsed as numbers, most strings are not valid representations of numbers, and only a very limited subset of them are. Therefore in Julia the dedicated &lt;a href=&quot;../../base/numbers/index#Base.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; function must be used to perform this operation, making it more explicit.</source>
          <target state="translated">일부 언어는 문자열을 숫자로 구문 분석하거나 숫자를 변환 할 문자열로 형식화하는 것을 고려합니다 (많은 동적 언어가 자동으로 변환을 수행합니다). Julia는 그렇지 않습니다. 일부 문자열은 숫자로 구문 분석 할 수 있지만 대부분의 문자열은 숫자의 유효한 표현이 아니며 매우 제한된 하위 집합 만 가능합니다. 따라서 Julia에서는 전용 &lt;a href=&quot;../../base/numbers/index#Base.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; 기능을 사용하여이 작업을 수행해야하므로 더 명확하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="214e8382a37259cb588b4ee9abe0c442fd78272a" translate="yes" xml:space="preserve">
          <source>Some of this documentation assumes some prior knowledge of the libgit2 API. For more information on some of the objects and methods referenced here, consult the upstream &lt;a href=&quot;https://libgit2.org/libgit2/#v0.25.1&quot;&gt;libgit2 API reference&lt;/a&gt;.</source>
          <target state="translated">이 문서 중 일부는 libgit2 API에 대한 사전 지식이 있다고 가정합니다. 여기에 참조 된 일부 오브젝트 및 메소드에 대한 자세한 정보는 업스트림 &lt;a href=&quot;https://libgit2.org/libgit2/#v0.25.1&quot;&gt;libgit2 API 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54130451e4cad0f85fcecc819a81bc537d6bce16" translate="yes" xml:space="preserve">
          <source>Some operations accumulate error. Parallelism will be easier if the reduction can be executed in groups. Future versions of Julia might change the algorithm. Note that the elements are not reordered if you use an ordered collection.</source>
          <target state="translated">일부 작업에는 오류가 누적됩니다. 축소를 그룹으로 실행할 수 있으면 병렬 처리가 더 쉬워집니다. Julia의 이후 버전에서는 알고리즘이 변경 될 수 있습니다. 순서가 지정된 컬렉션을 사용하면 요소의 순서가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="87cd0e7d3234275b1087e50262353747a6158328" translate="yes" xml:space="preserve">
          <source>Some operations that should not be attempted include:</source>
          <target state="translated">시도해서는 안되는 일부 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4adece17b4fec5fcfd8c385744921128eb43bd42" translate="yes" xml:space="preserve">
          <source>Some other useful functions include:</source>
          <target state="translated">다른 유용한 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f54f5b3c99f340b73cfb15f10267dab16c9f0ed" translate="yes" xml:space="preserve">
          <source>Some run-time benchmarks comparing (1) type dispatch, (2) dictionary lookup, and (3) a &quot;switch&quot; statement can be found &lt;a href=&quot;https://groups.google.com/forum/#!msg/julia-users/jUMu9A3QKQQ/qjgVWr7vAwAJ&quot;&gt;on the mailing list&lt;/a&gt;.</source>
          <target state="translated">(1) 유형 디스패치, (2) 사전 조회 및 (3) &quot;스위치&quot;문을 비교하는 일부 런타임 벤치 마크 &lt;a href=&quot;https://groups.google.com/forum/#!msg/julia-users/jUMu9A3QKQQ/qjgVWr7vAwAJ&quot;&gt;는 메일 링리스트&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13d39cdcdfb6659330eef5d838468ff97ff95324" translate="yes" xml:space="preserve">
          <source>Some unicode characters can be used to define new binary operators that support infix notation. For example &lt;code&gt;&amp;otimes;(x,y) = kron(x,y)&lt;/code&gt; defines the &lt;code&gt;&amp;otimes;&lt;/code&gt; (otimes) function to be the Kronecker product, and one can call it as binary operator using infix syntax: &lt;code&gt;C = A &amp;otimes; B&lt;/code&gt; as well as with the usual prefix syntax &lt;code&gt;C = &amp;otimes;(A,B)&lt;/code&gt;.</source>
          <target state="translated">일부 유니 코드 문자는 중위 표기법을 지원하는 새로운 이항 연산자를 정의하는 데 사용할 수 있습니다. 예를 들어 &lt;code&gt;&amp;otimes;(x,y) = kron(x,y)&lt;/code&gt; 는 &lt;code&gt;&amp;otimes;&lt;/code&gt; (otimes) 함수를 Kronecker 곱으로 정의하고 중위 구문을 사용하여 이항 연산자로 호출 할 수 있습니다. &lt;code&gt;C = A &amp;otimes; B&lt;/code&gt; 및 일반적인 접두사 구문 &lt;code&gt;C = &amp;otimes;(A,B)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24ef085a2f9ce600bbbbfb2e1bed3d8bc6eb17f9" translate="yes" xml:space="preserve">
          <source>Some variables, such as &lt;code&gt;JULIA_NUM_THREADS&lt;/code&gt; and &lt;code&gt;JULIA_PROJECT&lt;/code&gt;, need to be set before Julia starts, therefore adding these to &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; is too late in the startup process. In Bash, environment variables can either be set manually by running, e.g., &lt;code&gt;export JULIA_NUM_THREADS=4&lt;/code&gt; before starting Julia, or by adding the same command to &lt;code&gt;-/.bashrc&lt;/code&gt; or &lt;code&gt;~/.bash_profile&lt;/code&gt; to set the variable each time Bash is started.</source>
          <target state="translated">Julia가 시작하기 전에 &lt;code&gt;JULIA_NUM_THREADS&lt;/code&gt; 및 &lt;code&gt;JULIA_PROJECT&lt;/code&gt; 와 같은 일부 변수를 설정해야하므로 &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; 에 추가하는 것이 시작 프로세스에서 너무 늦습니다. Bash에서 환경 변수는 Julia를 시작하기 전에 &lt;code&gt;export JULIA_NUM_THREADS=4&lt;/code&gt; 를 실행 하거나 Bash가 시작될 때마다 변수를 설정 하기 위해 &lt;code&gt;-/.bashrc&lt;/code&gt; 또는 &lt;code&gt;~/.bash_profile&lt;/code&gt; 에 동일한 명령을 추가하여 수동으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bdec09bf72a35148fdc8e48d0e36d864d4ed409b" translate="yes" xml:space="preserve">
          <source>Some variables, such as &lt;code&gt;JULIA_NUM_THREADS&lt;/code&gt; and &lt;code&gt;JULIA_PROJECT&lt;/code&gt;, need to be set before Julia starts, therefore adding these to &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; is too late in the startup process. In Bash, environment variables can either be set manually by running, e.g., &lt;code&gt;export JULIA_NUM_THREADS=4&lt;/code&gt; before starting Julia, or by adding the same command to &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.bash_profile&lt;/code&gt; to set the variable each time Bash is started.</source>
          <target state="translated">&lt;code&gt;JULIA_NUM_THREADS&lt;/code&gt; 및 &lt;code&gt;JULIA_PROJECT&lt;/code&gt; 와 같은 일부 변수는 Julia가 시작하기 전에 설정해야하므로 &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; 에 추가하는 것은 시작 프로세스에서 너무 늦습니다. Bash에서 환경 변수는 Julia를 시작하기 전에 &lt;code&gt;export JULIA_NUM_THREADS=4&lt;/code&gt; 를 실행하거나 &lt;code&gt;~/.bashrc&lt;/code&gt; 또는 &lt;code&gt;~/.bash_profile&lt;/code&gt; 에 동일한 명령을 추가하여 Bash가 시작될 때마다 변수를 설정하여 수동으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ee444b5b80848c6c78cd84f92b6658eb8e0e278" translate="yes" xml:space="preserve">
          <source>Sometimes IO output can benefit from the ability to pass contextual information into show methods. The &lt;a href=&quot;../../base/io-network/index#Base.IOContext&quot;&gt;&lt;code&gt;IOContext&lt;/code&gt;&lt;/a&gt; object provides this framework for associating arbitrary metadata with an IO object. For example, &lt;code&gt;:compact =&amp;gt; true&lt;/code&gt; adds a hinting parameter to the IO object that the invoked show method should print a shorter output (if applicable). See the &lt;a href=&quot;../../base/io-network/index#Base.IOContext&quot;&gt;&lt;code&gt;IOContext&lt;/code&gt;&lt;/a&gt; documentation for a list of common properties.</source>
          <target state="translated">때때로 IO 출력은 컨텍스트 정보를 show 메소드로 전달하는 기능의 이점을 얻을 수 있습니다. &lt;a href=&quot;../../base/io-network/index#Base.IOContext&quot;&gt; &lt;code&gt;IOContext&lt;/code&gt; 의&lt;/a&gt; 목적은 IO 객체 임의의 메타 데이터를 연관시키기위한 이러한 프레임 워크를 제공한다. 예를 들어, &lt;code&gt;:compact =&amp;gt; true&lt;/code&gt; 는 호출 된 show 메소드가 더 짧은 출력 (해당되는 경우)을 인쇄해야한다는 힌트 매개 변수를 IO 객체에 추가합니다. 공통 특성 목록은 &lt;a href=&quot;../../base/io-network/index#Base.IOContext&quot;&gt; &lt;code&gt;IOContext&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de75a9ea1a8f52ccba217533cb7babebea8e9fa4" translate="yes" xml:space="preserve">
          <source>Sometimes extra parentheses around the argument to &lt;code&gt;:&lt;/code&gt; are needed to avoid ambiguity in parsing:</source>
          <target state="translated">때때로 파싱에서 모호성을 피하기 위해 &lt;code&gt;:&lt;/code&gt; 에 대한 인수 주위에 추가 괄호 가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8c23627cc67ebbf558800649b1e1e569121a3212" translate="yes" xml:space="preserve">
          <source>Sometimes it can be useful to write log events to a file. Here is an example of how to use a task-local and global logger to write information to a text file:</source>
          <target state="translated">때때로 로그 이벤트를 파일에 쓰는 것이 유용 할 수 있습니다. 다음은 태스크 로컬 및 글로벌 로거를 사용하여 텍스트 파일에 정보를 쓰는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="81fc841ff1c6a27a28afffbf09cee73ec979bcea" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to have a single expression which evaluates several subexpressions in order, returning the value of the last subexpression as its value. There are two Julia constructs that accomplish this: &lt;code&gt;begin&lt;/code&gt; blocks and &lt;code&gt;(;)&lt;/code&gt; chains. The value of both compound expression constructs is that of the last subexpression. Here's an example of a &lt;code&gt;begin&lt;/code&gt; block:</source>
          <target state="translated">때로는 여러 하위 표현식을 순서대로 평가하여 마지막 하위 표현식의 값을 값으로 반환하는 단일 표현식을 사용하는 것이 편리합니다. 이것을 달성하는 두 개의 Julia 구성이 있습니다 : &lt;code&gt;begin&lt;/code&gt; 블록과 &lt;code&gt;(;)&lt;/code&gt; 체인. 두 복합 발현 구조의 값은 마지막 부분 발현의 값입니다. 다음은 &lt;code&gt;begin&lt;/code&gt; 블록 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="438181f1496e787f9a36d98a1c32a86761823d82" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to have a single expression which evaluates several subexpressions in order, returning the value of the last subexpression as its value. There are two Julia constructs that accomplish this: &lt;code&gt;begin&lt;/code&gt; blocks and &lt;code&gt;;&lt;/code&gt; chains. The value of both compound expression constructs is that of the last subexpression. Here's an example of a &lt;code&gt;begin&lt;/code&gt; block:</source>
          <target state="translated">때로는 여러 하위 식을 순서대로 평가하는 단일 식을 사용하여 마지막 하위 식의 값을 값으로 반환하는 것이 편리합니다. 이를 수행하는 두 가지 Julia 구조가 있습니다. &lt;code&gt;begin&lt;/code&gt; 블록과 &lt;code&gt;;&lt;/code&gt; 쇠사슬. 두 복합 표현식 구성의 값은 마지막 하위 표현식의 값입니다. 다음은 &lt;code&gt;begin&lt;/code&gt; 블록 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="56620b094ec8f556c8b69c2c405e239f1ac352de" translate="yes" xml:space="preserve">
          <source>Sometimes it is convenient to introduce a new name for an already expressible type. This can be done with a simple assignment statement. For example, &lt;code&gt;UInt&lt;/code&gt; is aliased to either &lt;a href=&quot;../../base/numbers/index#Core.UInt32&quot;&gt;&lt;code&gt;UInt32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../base/numbers/index#Core.UInt64&quot;&gt;&lt;code&gt;UInt64&lt;/code&gt;&lt;/a&gt; as is appropriate for the size of pointers on the system:</source>
          <target state="translated">때로는 이미 표현 가능한 유형의 새 이름을 도입하는 것이 편리합니다. 이것은 간단한 할당 문으로 수행 할 수 있습니다. 예를 들어 &lt;code&gt;UInt&lt;/code&gt; 는 시스템의 포인터 크기에 따라 &lt;a href=&quot;../../base/numbers/index#Core.UInt32&quot;&gt; &lt;code&gt;UInt32&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../base/numbers/index#Core.UInt64&quot;&gt; &lt;code&gt;UInt64&lt;/code&gt; &lt;/a&gt; 로 별칭이 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad59e9794373619992d578ee8912be50f350af70" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to get around this (for example, if you are implementing the above REPL). Fortunately, there is an easy solution: call the function using &lt;a href=&quot;../../base/base/index#Base.invokelatest&quot;&gt;&lt;code&gt;Base.invokelatest&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">때로는이 문제를 해결해야 할 수도 있습니다 (예 : 위의 REPL을 구현하는 경우). 다행히도 쉬운 해결책이 있습니다. &lt;a href=&quot;../../base/base/index#Base.invokelatest&quot;&gt; &lt;code&gt;Base.invokelatest&lt;/code&gt; 를&lt;/a&gt; 사용하여 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1ec5ae55703e78dbc0c5cc53c73fb0d3ba26488" translate="yes" xml:space="preserve">
          <source>Sometimes the appropriate documentation for an instance of a type depends on the field values of that instance, rather than just on the type itself. In these cases, you can add a method to &lt;code&gt;Docs.getdoc&lt;/code&gt; for your custom type that returns the documentation on a per-instance basis. For instance,</source>
          <target state="translated">때때로 유형의 인스턴스에 대한 적절한 문서는 유형 자체가 아니라 해당 인스턴스의 필드 값에 따라 다릅니다. 이 경우 문서를 인스턴스별로 반환하는 사용자 정의 유형에 대한 메소드를 &lt;code&gt;Docs.getdoc&lt;/code&gt; 에 추가 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="6bd5e7d6de5c0dc94519e5486aa6e86dd4954864" translate="yes" xml:space="preserve">
          <source>Sometimes there are functions of related functionality. To increase discoverability please provide a short list of these in a &lt;code&gt;See also:&lt;/code&gt; paragraph.</source>
          <target state="translated">때때로 관련 기능의 기능이 있습니다. 검색 가능성을 높이려면 다음을 &lt;code&gt;See also:&lt;/code&gt; 단락 에 짧은 목록을 제공 하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb4d5561161def6195d5194f31fa5c4fcd821426" translate="yes" xml:space="preserve">
          <source>Sometimes you can circumvent the need to allocate memory on each function call by preallocating the output. As a trivial example, compare</source>
          <target state="translated">때로는 출력을 미리 할당하여 각 함수 호출에 메모리를 할당해야 할 필요성을 피할 수 있습니다. 사소한 예로서, 비교</target>
        </trans-unit>
        <trans-unit id="1b0b8d7e533efab5b9ee3159523a84048de76275" translate="yes" xml:space="preserve">
          <source>Sometimes you can enable better optimization by promising certain program properties.</source>
          <target state="translated">때로는 특정 프로그램 속성을 약속함으로써 더 나은 최적화를 가능하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f0d09beedee60e944d26f1b43e84706f19f6b22" translate="yes" xml:space="preserve">
          <source>Sometimes, coupled packages may engage in type piracy to separate features from definitions, especially when the packages were designed by collaborating authors, and when the definitions are reusable. For example, one package might provide some types useful for working with colors; another package could define methods for those types that enable conversions between color spaces. Another example might be a package that acts as a thin wrapper for some C code, which another package might then pirate to implement a higher-level, Julia-friendly API.</source>
          <target state="translated">때때로, 결합 된 패키지는 특히 공동 작업 작성자가 패키지를 설계 한 경우와 정의를 재사용 할 수있는 경우 정의와 기능을 분리하기 위해 유형 불법 복제에 관여 할 수 있습니다. 예를 들어, 하나의 패키지는 색상 작업에 유용한 일부 유형을 제공 할 수 있습니다. 다른 패키지는 색 공간 간의 변환을 가능하게하는 해당 유형에 대한 메소드를 정의 할 수 있습니다. 또 다른 예는 일부 C 코드에 대한 씬 래퍼 역할을하는 패키지 일 수 있으며, 다른 패키지는 더 높은 수준의 Julia 친화적 인 API를 구현하기 위해 해적판 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a73a811d85c60f8b52eef9583c1f302fa8bf3d0" translate="yes" xml:space="preserve">
          <source>Sometimes, you want a container (like an array) that would normally participate in broadcast to be &quot;protected&quot; from broadcast's behavior of iterating over all of its elements. By placing it inside another container (like a single element &lt;a href=&quot;../../base/base/index#Core.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;) broadcast will treat it as a single value.</source>
          <target state="translated">때로는 일반적으로 브로드 캐스트에 참여하는 컨테이너 (예 : 배열)가 브로드 캐스트의 모든 요소에 대한 반복 동작으로부터 &quot;보호&quot;되기를 원합니다. 다른 컨테이너 (예 : 단일 요소 &lt;a href=&quot;../../base/base/index#Core.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; ) 안에 배치하면 브로드 캐스트는이를 단일 값으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a77661187f200c339fe952e6097ead1eb6238d7d" translate="yes" xml:space="preserve">
          <source>Soon With Rightwards Arrow Above</source>
          <target state="translated">위의 오른쪽 화살표와 함께 곧</target>
        </trans-unit>
        <trans-unit id="e2d569f99537b107694c7970752efe7da8c08700" translate="yes" xml:space="preserve">
          <source>Sort a multidimensional array &lt;code&gt;A&lt;/code&gt; along the given dimension. See &lt;a href=&quot;#Base.sort!&quot;&gt;&lt;code&gt;sort!&lt;/code&gt;&lt;/a&gt; for a description of possible keyword arguments.</source>
          <target state="translated">주어진 차원을 따라 다차원 배열 &lt;code&gt;A&lt;/code&gt; 를 정렬 합니다. &lt;a href=&quot;#Base.sort!&quot;&gt; &lt;code&gt;sort!&lt;/code&gt; &lt;/a&gt; 참조 ! 가능한 키워드 인수에 대한 설명</target>
        </trans-unit>
        <trans-unit id="49aaac54c05c586ecaceb6a1169641434347e217" translate="yes" xml:space="preserve">
          <source>Sort slices of an array &lt;code&gt;A&lt;/code&gt;. The required keyword argument &lt;code&gt;dims&lt;/code&gt; must be either an integer or a tuple of integers. It specifies the dimension(s) over which the slices are sorted.</source>
          <target state="translated">배열 &lt;code&gt;A&lt;/code&gt; 의 조각을 정렬합니다 . 필수 키워드 인수 &lt;code&gt;dims&lt;/code&gt; 는 정수 또는 튜플 정수 여야합니다. 슬라이스가 정렬되는 차원을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="1f820310c7d31cb0603ba94e280e4c8da91c1f05" translate="yes" xml:space="preserve">
          <source>Sort the multidimensional array &lt;code&gt;A&lt;/code&gt; along dimension &lt;code&gt;dims&lt;/code&gt;. See &lt;a href=&quot;#Base.sort!&quot;&gt;&lt;code&gt;sort!&lt;/code&gt;&lt;/a&gt; for a description of possible keyword arguments.</source>
          <target state="translated">다차원 어레이 정렬 사이즈에 따라 &lt;code&gt;dims&lt;/code&gt; . &lt;a href=&quot;#Base.sort!&quot;&gt; &lt;code&gt;sort!&lt;/code&gt; &lt;/a&gt; 참조 ! 가능한 키워드 인수에 대한 설명 &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e54da98144dc6e80fabf9e01997d77559b84de9" translate="yes" xml:space="preserve">
          <source>Sort the vector &lt;code&gt;v&lt;/code&gt; in place. &lt;a href=&quot;#Base.Sort.QuickSort&quot;&gt;&lt;code&gt;QuickSort&lt;/code&gt;&lt;/a&gt; is used by default for numeric arrays while &lt;a href=&quot;#Base.Sort.MergeSort&quot;&gt;&lt;code&gt;MergeSort&lt;/code&gt;&lt;/a&gt; is used for other arrays. You can specify an algorithm to use via the &lt;code&gt;alg&lt;/code&gt; keyword (see &lt;a href=&quot;#Sorting-Algorithms&quot;&gt;Sorting Algorithms&lt;/a&gt; for available algorithms). The &lt;code&gt;by&lt;/code&gt; keyword lets you provide a function that will be applied to each element before comparison; the &lt;code&gt;lt&lt;/code&gt; keyword allows providing a custom &quot;less than&quot; function; use &lt;code&gt;rev=true&lt;/code&gt; to reverse the sorting order. These options are independent and can be used together in all possible combinations: if both &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;lt&lt;/code&gt; are specified, the &lt;code&gt;lt&lt;/code&gt; function is applied to the result of the &lt;code&gt;by&lt;/code&gt; function; &lt;code&gt;rev=true&lt;/code&gt; reverses whatever ordering specified via the &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;lt&lt;/code&gt; keywords.</source>
          <target state="translated">벡터 &lt;code&gt;v&lt;/code&gt; 를 제자리에 정렬합니다 . &lt;a href=&quot;#Base.Sort.QuickSort&quot;&gt; &lt;code&gt;QuickSort&lt;/code&gt; &lt;/a&gt; 는 기본적으로 숫자 형 배열 에 사용되는 반면 &lt;a href=&quot;#Base.Sort.MergeSort&quot;&gt; &lt;code&gt;MergeSort&lt;/code&gt; &lt;/a&gt; 는 다른 배열에 사용됩니다. &lt;code&gt;alg&lt;/code&gt; 키워드 를 통해 사용할 알고리즘을 지정할 수 있습니다 (사용 가능한 알고리즘 은 &lt;a href=&quot;#Sorting-Algorithms&quot;&gt;정렬 알고리즘&lt;/a&gt; 참조 ). &lt;code&gt;by&lt;/code&gt; 키워드는 비교하기 전에 각 요소에 적용되는 기능을 제공 할 수 있습니다; &lt;code&gt;lt&lt;/code&gt; 키워드 기능 &quot;이하&quot;지정을 제공 할 수 있습니다; 정렬 순서를 반대로 하려면 &lt;code&gt;rev=true&lt;/code&gt; 를 사용 하십시오. 이러한 옵션은 독립적이며 가능한 모든 조합에서 함께 사용할 수 있습니다. &lt;code&gt;by&lt;/code&gt; 및 &lt;code&gt;lt&lt;/code&gt; 가 모두 지정되면 &lt;code&gt;lt&lt;/code&gt; 함수는 &lt;code&gt;by&lt;/code&gt; 함수 의 결과에 적용됩니다 . &lt;code&gt;rev=true&lt;/code&gt; 는 &lt;code&gt;by&lt;/code&gt; 및 &lt;code&gt;lt&lt;/code&gt; 키워드 를 통해 지정된 순서를 반대로 합니다.</target>
        </trans-unit>
        <trans-unit id="628bbf164ef3c0ee4c1d772326c3bf82121649ca" translate="yes" xml:space="preserve">
          <source>Sort the vector &lt;code&gt;v&lt;/code&gt; in place. &lt;code&gt;QuickSort&lt;/code&gt; is used by default for numeric arrays while &lt;code&gt;MergeSort&lt;/code&gt; is used for other arrays. You can specify an algorithm to use via the &lt;code&gt;alg&lt;/code&gt; keyword (see Sorting Algorithms for available algorithms). The &lt;code&gt;by&lt;/code&gt; keyword lets you provide a function that will be applied to each element before comparison; the &lt;code&gt;lt&lt;/code&gt; keyword allows providing a custom &quot;less than&quot; function; use &lt;code&gt;rev=true&lt;/code&gt; to reverse the sorting order. These options are independent and can be used together in all possible combinations: if both &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;lt&lt;/code&gt; are specified, the &lt;code&gt;lt&lt;/code&gt; function is applied to the result of the &lt;code&gt;by&lt;/code&gt; function; &lt;code&gt;rev=true&lt;/code&gt; reverses whatever ordering specified via the &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;lt&lt;/code&gt; keywords.</source>
          <target state="translated">벡터 &lt;code&gt;v&lt;/code&gt; 를 제자리에 정렬하십시오 . &lt;code&gt;QuickSort&lt;/code&gt; 는 기본적으로 숫자 형 배열에 사용되고 &lt;code&gt;MergeSort&lt;/code&gt; 는 다른 배열에 사용됩니다. &lt;code&gt;alg&lt;/code&gt; 키워드 를 통해 사용할 알고리즘을 지정할 수 있습니다 (사용 가능한 알고리즘은 알고리즘 정렬 참조). &lt;code&gt;by&lt;/code&gt; 키워드는 비교하기 전에 각 요소에 적용되는 기능을 제공 할 수 있습니다; &lt;code&gt;lt&lt;/code&gt; 키워드 기능 &quot;이하&quot;지정을 제공 할 수 있습니다; 정렬 순서를 &lt;code&gt;rev=true&lt;/code&gt; 려면 rev = true 를 사용 하십시오. 이 옵션은 독립적이며 가능한 모든 조합으로 함께 사용할 수 있습니다. &lt;code&gt;by&lt;/code&gt; 및 &lt;code&gt;lt&lt;/code&gt; 가 모두 지정된 경우 &lt;code&gt;lt&lt;/code&gt; 이 함수의 결과에 적용 &lt;code&gt;by&lt;/code&gt; 기능; &lt;code&gt;rev=true&lt;/code&gt; 는 &lt;code&gt;by&lt;/code&gt; 및 &lt;code&gt;lt&lt;/code&gt; 키워드 를 통해 지정된 순서를 반대로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="13bac425ab03903595a8873222253b8881baebbd" translate="yes" xml:space="preserve">
          <source>Sort.InsertionSort</source>
          <target state="translated">Sort.InsertionSort</target>
        </trans-unit>
        <trans-unit id="2a111a827d3a5abf27917abc2860a80176943f18" translate="yes" xml:space="preserve">
          <source>Sort.MergeSort</source>
          <target state="translated">Sort.MergeSort</target>
        </trans-unit>
        <trans-unit id="a78241e2a3d60c1b3d21102a1673dc0be2fac8cf" translate="yes" xml:space="preserve">
          <source>Sort.PartialQuickSort</source>
          <target state="translated">Sort.PartialQuickSort</target>
        </trans-unit>
        <trans-unit id="80d3590d262b5b5f540460e9f42958b373826461" translate="yes" xml:space="preserve">
          <source>Sort.QuickSort</source>
          <target state="translated">Sort.QuickSort</target>
        </trans-unit>
        <trans-unit id="ec8909a287a6783fe8c87b79c50cd26c85d1e814" translate="yes" xml:space="preserve">
          <source>Sort.partialsort!()</source>
          <target state="translated">Sort.partialsort!()</target>
        </trans-unit>
        <trans-unit id="eb0c35b87294e928d79bced4c009a273e35af445" translate="yes" xml:space="preserve">
          <source>Sort.partialsort()</source>
          <target state="translated">Sort.partialsort()</target>
        </trans-unit>
        <trans-unit id="4a3fbcc2f7b99188a76ba6745b9168a7e05c9bc6" translate="yes" xml:space="preserve">
          <source>Sort.partialsortperm!()</source>
          <target state="translated">Sort.partialsortperm!()</target>
        </trans-unit>
        <trans-unit id="e21c9a7fbae8b1cbfa3bda5e5dd116e4a8ab1c05" translate="yes" xml:space="preserve">
          <source>Sort.partialsortperm()</source>
          <target state="translated">Sort.partialsortperm()</target>
        </trans-unit>
        <trans-unit id="fa86fb7740fd6005a884289dbebf9d4332f13399" translate="yes" xml:space="preserve">
          <source>Sort.searchsorted()</source>
          <target state="translated">Sort.searchsorted()</target>
        </trans-unit>
        <trans-unit id="da42de28aec648d5abe50e370f215f767f831dfe" translate="yes" xml:space="preserve">
          <source>Sort.searchsortedfirst()</source>
          <target state="translated">Sort.searchsortedfirst()</target>
        </trans-unit>
        <trans-unit id="fd04a80aed13a88166aa4f28164559747142dda0" translate="yes" xml:space="preserve">
          <source>Sort.searchsortedlast()</source>
          <target state="translated">Sort.searchsortedlast()</target>
        </trans-unit>
        <trans-unit id="447867fd9af3a88b75c856278215ce9acc6874e4" translate="yes" xml:space="preserve">
          <source>Sort.sortperm!()</source>
          <target state="translated">Sort.sortperm!()</target>
        </trans-unit>
        <trans-unit id="ee4a3e96cc4d820332f6ccddf07b6eb3a0a6a09f" translate="yes" xml:space="preserve">
          <source>Sorting Algorithms</source>
          <target state="translated">정렬 알고리즘</target>
        </trans-unit>
        <trans-unit id="86cac70cbf75ffe99d0bf6f7f9cf7fc71bde9dc6" translate="yes" xml:space="preserve">
          <source>Sorting Functions</source>
          <target state="translated">정렬 기능</target>
        </trans-unit>
        <trans-unit id="23933bead8b4928b2f573e31a4c9a93a9807be74" translate="yes" xml:space="preserve">
          <source>Sorting and Related Functions</source>
          <target state="translated">정렬 및 관련 기능</target>
        </trans-unit>
        <trans-unit id="6653ba6726ec72a4280d0688fb69e195c9b490a7" translate="yes" xml:space="preserve">
          <source>Source code can be displayed as a literal block using an indent of four spaces as shown in the following example.</source>
          <target state="translated">소스 코드는 다음 예제와 같이 4 개의 공백을 들여 쓰기하여 리터럴 블록으로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62e195d03066231a519263fabd2bd88bb260f708" translate="yes" xml:space="preserve">
          <source>South East Arrow / Lower Right Arrow</source>
          <target state="translated">남동쪽 화살표 / 오른쪽 아래 화살표</target>
        </trans-unit>
        <trans-unit id="3bc67c3e88a0572179c47f890812b70daf43f5e6" translate="yes" xml:space="preserve">
          <source>South East Arrow And South West Arrow</source>
          <target state="translated">남동쪽 화살표 및 남서쪽 화살표</target>
        </trans-unit>
        <trans-unit id="4808782150e0b50d8255e9b9171849c8d6d354bb" translate="yes" xml:space="preserve">
          <source>South East Arrow Crossing North East Arrow</source>
          <target state="translated">South East Arrow Crossing 동북 화살표</target>
        </trans-unit>
        <trans-unit id="39de91141eba770376d20561538f5ebdf24b7dc6" translate="yes" xml:space="preserve">
          <source>South East Arrow With Hook</source>
          <target state="translated">후크가있는 동남쪽 화살표</target>
        </trans-unit>
        <trans-unit id="0811218fb2453e50471182ac8f88493885dddee4" translate="yes" xml:space="preserve">
          <source>South East Double Arrow / Lower Right Double Arrow</source>
          <target state="translated">동남쪽 이중 화살표 / 오른쪽 아래 이중 화살표</target>
        </trans-unit>
        <trans-unit id="da77335f983b20a47c77a9abdeb319a69cf0527b" translate="yes" xml:space="preserve">
          <source>South West Arrow / Lower Left Arrow</source>
          <target state="translated">남서 화살표 / 왼쪽 아래 화살표</target>
        </trans-unit>
        <trans-unit id="8f7e209c0f8cc5a3a270a86798039488937a3d17" translate="yes" xml:space="preserve">
          <source>South West Arrow And North West Arrow</source>
          <target state="translated">사우스 웨스트 화살표 및 노스 웨스트 화살표</target>
        </trans-unit>
        <trans-unit id="97847b674b548d7f033bd0f86f44f91d0af28ab6" translate="yes" xml:space="preserve">
          <source>South West Arrow With Hook</source>
          <target state="translated">후크가있는 남서쪽 화살표</target>
        </trans-unit>
        <trans-unit id="da8259660b795c27d8bf43608283b0bab8448b18" translate="yes" xml:space="preserve">
          <source>South West Double Arrow / Lower Left Double Arrow</source>
          <target state="translated">남서쪽 이중 화살표 / 왼쪽 아래 이중 화살표</target>
        </trans-unit>
        <trans-unit id="431f677005c5a1da3d931a8bced118f5324c9b96" translate="yes" xml:space="preserve">
          <source>Space-efficient &lt;code&gt;N&lt;/code&gt;-dimensional boolean array, using just one bit for each boolean value.</source>
          <target state="translated">각 부울 값에 대해 1 비트 만 사용하는 공간 효율적인 &lt;code&gt;N&lt;/code&gt; 차원 부울 배열입니다.</target>
        </trans-unit>
        <trans-unit id="fe78ea401158dd5847c4090b8bb22477e510febf" translate="yes" xml:space="preserve">
          <source>Spaghetti</source>
          <target state="translated">Spaghetti</target>
        </trans-unit>
        <trans-unit id="2a507e71a668430610581ca7fe73b400c5462bca" translate="yes" xml:space="preserve">
          <source>Sparkle</source>
          <target state="translated">Sparkle</target>
        </trans-unit>
        <trans-unit id="65b0291f30731f0d407bd44b75f72450ee8117bc" translate="yes" xml:space="preserve">
          <source>Sparkles</source>
          <target state="translated">Sparkles</target>
        </trans-unit>
        <trans-unit id="ba3f8a837cadafc004e97bf1e1ee40e200825fca" translate="yes" xml:space="preserve">
          <source>Sparkling Heart</source>
          <target state="translated">스파클링 하트</target>
        </trans-unit>
        <trans-unit id="2d8be31e0e269cf0e2f547c7b7c6bb5a36922e7c" translate="yes" xml:space="preserve">
          <source>Sparse</source>
          <target state="translated">Sparse</target>
        </trans-unit>
        <trans-unit id="4c68431dee3b2643ed40a689b422c87cdc6c83e0" translate="yes" xml:space="preserve">
          <source>Sparse Arrays</source>
          <target state="translated">희소 배열</target>
        </trans-unit>
        <trans-unit id="902682863a9a7cc330fd64e1e85a29c997927e87" translate="yes" xml:space="preserve">
          <source>Sparse Symmetric/Hermitian</source>
          <target state="translated">스파 스 대칭 / 허 미트</target>
        </trans-unit>
        <trans-unit id="53277a62f870edf481233e0ba734c781b2543a3a" translate="yes" xml:space="preserve">
          <source>Sparse Vector Storage</source>
          <target state="translated">희소 벡터 저장</target>
        </trans-unit>
        <trans-unit id="1302fba8710a2d610f4cb776973a18aa0bc2f56c" translate="yes" xml:space="preserve">
          <source>Sparse Vector and Matrix Constructors</source>
          <target state="translated">희소 벡터 및 행렬 생성자</target>
        </trans-unit>
        <trans-unit id="68d1b798757176683356d2c244f040ad06b9ed11" translate="yes" xml:space="preserve">
          <source>Sparse matrix operations</source>
          <target state="translated">희소 행렬 연산</target>
        </trans-unit>
        <trans-unit id="1e62cce93cebcb9c847faa112936383341e38303" translate="yes" xml:space="preserve">
          <source>Sparse vectors are stored in a close analog to compressed sparse column format for sparse matrices. In Julia, sparse vectors have the type &lt;a href=&quot;#SparseArrays.SparseVector&quot;&gt;&lt;code&gt;SparseVector{Tv,Ti}&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;Tv&lt;/code&gt; is the type of the stored values and &lt;code&gt;Ti&lt;/code&gt; the integer type for the indices. The internal representation is as follows:</source>
          <target state="translated">희소 벡터는 희소 행렬에 대해 압축 된 희소 열 형식에 가까운 아날로그로 저장됩니다. Julia에서 스파 스 벡터의 유형은 &lt;a href=&quot;#SparseArrays.SparseVector&quot;&gt; &lt;code&gt;SparseVector{Tv,Ti}&lt;/code&gt; &lt;/a&gt; 여기서 &lt;code&gt;Tv&lt;/code&gt; 는 저장된 값의 유형이고 &lt;code&gt;Ti&lt;/code&gt; 는 인덱스의 정수 유형입니다. 내부 표현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="10fc7247280a59c6042e8b7e3848c87f40bab9ae" translate="yes" xml:space="preserve">
          <source>SparseArrays.AbstractSparseArray</source>
          <target state="translated">SparseArrays.AbstractSparseArray</target>
        </trans-unit>
        <trans-unit id="6149ebb08b80d17ee8fd54b50e50d522b66046d5" translate="yes" xml:space="preserve">
          <source>SparseArrays.AbstractSparseMatrix</source>
          <target state="translated">SparseArrays.AbstractSparseMatrix</target>
        </trans-unit>
        <trans-unit id="344111cd8f62e5b65d92db0c6dba2277761d84b0" translate="yes" xml:space="preserve">
          <source>SparseArrays.AbstractSparseVector</source>
          <target state="translated">SparseArrays.AbstractSparseVector</target>
        </trans-unit>
        <trans-unit id="efc5ded283978c9c49f6eedb2ad4be08e5fcf6f5" translate="yes" xml:space="preserve">
          <source>SparseArrays.SparseMatrixCSC</source>
          <target state="translated">SparseArrays.SparseMatrixCSC</target>
        </trans-unit>
        <trans-unit id="0191394e10b7b51a1b9ebf119c56edee4686d2c3" translate="yes" xml:space="preserve">
          <source>SparseArrays.SparseVector</source>
          <target state="translated">SparseArrays.SparseVector</target>
        </trans-unit>
        <trans-unit id="12c30913d53ff79a5899814d9d4da6f4ce79df8c" translate="yes" xml:space="preserve">
          <source>SparseArrays.blockdiag()</source>
          <target state="translated">SparseArrays.blockdiag()</target>
        </trans-unit>
        <trans-unit id="d192969dfb5ac3446328b51521582005446edd5b" translate="yes" xml:space="preserve">
          <source>SparseArrays.droptol!()</source>
          <target state="translated">SparseArrays.droptol!()</target>
        </trans-unit>
        <trans-unit id="4ddd549dc09d56f378a7249700343827ba8f5ee0" translate="yes" xml:space="preserve">
          <source>SparseArrays.dropzeros!()</source>
          <target state="translated">SparseArrays.dropzeros!()</target>
        </trans-unit>
        <trans-unit id="43c8a19dce16a062a2bd6f37e465e89325288848" translate="yes" xml:space="preserve">
          <source>SparseArrays.dropzeros()</source>
          <target state="translated">SparseArrays.dropzeros()</target>
        </trans-unit>
        <trans-unit id="b06106329265732b8668ee5a86f7346d4cf4eb50" translate="yes" xml:space="preserve">
          <source>SparseArrays.findnz()</source>
          <target state="translated">SparseArrays.findnz()</target>
        </trans-unit>
        <trans-unit id="3a30c4a4b0295afe3525cdd815910bdb79f33dd0" translate="yes" xml:space="preserve">
          <source>SparseArrays.issparse()</source>
          <target state="translated">SparseArrays.issparse()</target>
        </trans-unit>
        <trans-unit id="26dd853b5d2b72cfc363174114eb03327718f708" translate="yes" xml:space="preserve">
          <source>SparseArrays.nnz()</source>
          <target state="translated">SparseArrays.nnz()</target>
        </trans-unit>
        <trans-unit id="cbaa48dba779c301f3e6425a6ed701d49b4bd174" translate="yes" xml:space="preserve">
          <source>SparseArrays.nonzeros()</source>
          <target state="translated">SparseArrays.nonzeros()</target>
        </trans-unit>
        <trans-unit id="8c2eef1894bb96479874f0baa9f24dc86b9e0cf7" translate="yes" xml:space="preserve">
          <source>SparseArrays.nzrange()</source>
          <target state="translated">SparseArrays.nzrange()</target>
        </trans-unit>
        <trans-unit id="f02c63d634bc2341df093664f88b44cee182f2b3" translate="yes" xml:space="preserve">
          <source>SparseArrays.permute()</source>
          <target state="translated">SparseArrays.permute()</target>
        </trans-unit>
        <trans-unit id="9994dfce0e0d53e949999fc71c1fbb85c128fa40" translate="yes" xml:space="preserve">
          <source>SparseArrays.rowvals()</source>
          <target state="translated">SparseArrays.rowvals()</target>
        </trans-unit>
        <trans-unit id="3c0d5f4f4d6a4ebe3c070670b3425cfe6b6dd011" translate="yes" xml:space="preserve">
          <source>SparseArrays.sparse()</source>
          <target state="translated">SparseArrays.sparse()</target>
        </trans-unit>
        <trans-unit id="072b5b1a6e5075bf30396b55db010f555b208bdd" translate="yes" xml:space="preserve">
          <source>SparseArrays.sparsevec()</source>
          <target state="translated">SparseArrays.sparsevec()</target>
        </trans-unit>
        <trans-unit id="357dceaa1babdd8d001f14975c2d7bfde7ec7c9c" translate="yes" xml:space="preserve">
          <source>SparseArrays.spdiagm()</source>
          <target state="translated">SparseArrays.spdiagm()</target>
        </trans-unit>
        <trans-unit id="1a418272b25448553418a73da79a3250e4ab5011" translate="yes" xml:space="preserve">
          <source>SparseArrays.sprand()</source>
          <target state="translated">SparseArrays.sprand()</target>
        </trans-unit>
        <trans-unit id="f6899873b56d4b44424ff68c3a21bd2e7a9aa853" translate="yes" xml:space="preserve">
          <source>SparseArrays.sprandn()</source>
          <target state="translated">SparseArrays.sprandn()</target>
        </trans-unit>
        <trans-unit id="89d37ac77a223017766d5c1dc0743ccadb632bde" translate="yes" xml:space="preserve">
          <source>SparseArrays.spzeros()</source>
          <target state="translated">SparseArrays.spzeros()</target>
        </trans-unit>
        <trans-unit id="65f758fa14f2841831e187fb4600d65df5da8acc" translate="yes" xml:space="preserve">
          <source>Speak-No-Evil Monkey</source>
          <target state="translated">말하는 이블 원숭이</target>
        </trans-unit>
        <trans-unit id="7c23b0d99698b57c5cb21fafcb8a8daf127386c6" translate="yes" xml:space="preserve">
          <source>Speaker</source>
          <target state="translated">Speaker</target>
        </trans-unit>
        <trans-unit id="705d8d8abff7410ad3f6e8ff0ad75a39a7764810" translate="yes" xml:space="preserve">
          <source>Speaker With Cancellation Stroke</source>
          <target state="translated">취소 스트로크가있는 스피커</target>
        </trans-unit>
        <trans-unit id="17bc850534be37bda5aa0f429269526f0757aada" translate="yes" xml:space="preserve">
          <source>Speaker With One Sound Wave</source>
          <target state="translated">하나의 음파가있는 스피커</target>
        </trans-unit>
        <trans-unit id="bba564bd49d77e24a6426e99e63da7caf3a90e03" translate="yes" xml:space="preserve">
          <source>Speaker With Three Sound Waves</source>
          <target state="translated">3 개의 음파가있는 스피커</target>
        </trans-unit>
        <trans-unit id="d86064ae09b2046b53b3c962b3bba5aae14da258" translate="yes" xml:space="preserve">
          <source>Special Reference Syntax for ccall (deprecated):</source>
          <target state="translated">ccall에 대한 특수 참조 구문 (더 이상 사용되지 않음) :</target>
        </trans-unit>
        <trans-unit id="e552d4b23e8c0dfe309d5166ff7dd844ec3d8ffe" translate="yes" xml:space="preserve">
          <source>Special Types</source>
          <target state="translated">특수 유형</target>
        </trans-unit>
        <trans-unit id="0081166e36f592b401e1100af2af67a1790cc023" translate="yes" xml:space="preserve">
          <source>Special care is taken to ensure intermediate values are computed rationally. To avoid this induced overhead, see the &lt;a href=&quot;../collections/index#Base.LinRange&quot;&gt;&lt;code&gt;LinRange&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">중간 값이 합리적으로 계산되도록 특별한주의를 기울입니다. 이로 인한 오버 헤드를 방지하려면 &lt;a href=&quot;../collections/index#Base.LinRange&quot;&gt; &lt;code&gt;LinRange&lt;/code&gt; &lt;/a&gt; 생성자를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="bf22f9af48decd354e6c72533954f8e011fb3722" translate="yes" xml:space="preserve">
          <source>Special comparison operators &lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../base/base/index#Core.:===&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; are exceptions to the propagation rule: they always return a &lt;code&gt;Bool&lt;/code&gt; value, even in the presence of &lt;code&gt;missing&lt;/code&gt; values, considering &lt;code&gt;missing&lt;/code&gt; as equal to &lt;code&gt;missing&lt;/code&gt; and as different from any other value. They can therefore be used to test whether a value is &lt;code&gt;missing&lt;/code&gt;</source>
          <target state="translated">특수 비교 연산자 &lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../base/base/index#Core.:===&quot;&gt; &lt;code&gt;===&lt;/code&gt; &lt;/a&gt; 전파 규칙에 예외 : 그들은 항상 반환 &lt;code&gt;Bool&lt;/code&gt; 도의 존재, 가치 &lt;code&gt;missing&lt;/code&gt; , 값을 고려 &lt;code&gt;missing&lt;/code&gt; 에 동일하게 &lt;code&gt;missing&lt;/code&gt; 다른 값에서 다른있다. 따라서 값이 &lt;code&gt;missing&lt;/code&gt; 되었는지 테스트하는 데 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="68a11b16603b5e9e662bd9df261c5a29e4c2edb2" translate="yes" xml:space="preserve">
          <source>Special floating-point values</source>
          <target state="translated">특수 부동 소수점 값</target>
        </trans-unit>
        <trans-unit id="491dea01e74cbe6a8f18303a3dfe136bb0985746" translate="yes" xml:space="preserve">
          <source>Special function available to inner constructors which created a new object of the type. See the manual section on &lt;a href=&quot;../../manual/constructors/index#Inner-Constructor-Methods-1&quot;&gt;Inner Constructor Methods&lt;/a&gt; for more information.</source>
          <target state="translated">내부 생성자가 사용할 수있는 특수 함수로, 유형의 새 객체를 만들었습니다. 자세한 내용은 &lt;a href=&quot;../../manual/constructors/index#Inner-Constructor-Methods-1&quot;&gt;내부 생성자 메서드에&lt;/a&gt; 대한 매뉴얼 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0951c5aa4a4f4b066dc1b5535c0c702d2e5fbc3e" translate="yes" xml:space="preserve">
          <source>Special function available to inner constructors which created a new object of the type. See the manual section on &lt;a href=&quot;../../manual/constructors/index#man-inner-constructor-methods&quot;&gt;Inner Constructor Methods&lt;/a&gt; for more information.</source>
          <target state="translated">유형의 새 개체를 만든 내부 생성자에 사용할 수있는 특수 함수입니다. 자세한 내용은 &lt;a href=&quot;../../manual/constructors/index#man-inner-constructor-methods&quot;&gt;내부 생성자 메서드에&lt;/a&gt; 대한 매뉴얼 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cb5cdb4d83d13dcb9044f5371c6dcdabd5610f8d" translate="yes" xml:space="preserve">
          <source>Special functions</source>
          <target state="translated">특수 기능</target>
        </trans-unit>
        <trans-unit id="0d5f2086fb1aefbd2646d585987c8de44d38bec9" translate="yes" xml:space="preserve">
          <source>Special matrices</source>
          <target state="translated">특수 행렬</target>
        </trans-unit>
        <trans-unit id="ad7ac96a3313ddf3aacd6d129c523757fc5c9d59" translate="yes" xml:space="preserve">
          <source>Special note for &lt;a href=&quot;#Base.Threads.Condition&quot;&gt;&lt;code&gt;Threads.Condition&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#Base.Threads.Condition&quot;&gt; &lt;code&gt;Threads.Condition&lt;/code&gt; 에&lt;/a&gt; 대한 특별 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="4b721065422233d40f92c6c778fb85ca380abb09" translate="yes" xml:space="preserve">
          <source>Special note for &lt;a href=&quot;../multi-threading/index#Base.Threads.Condition&quot;&gt;&lt;code&gt;Threads.Condition&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../multi-threading/index#Base.Threads.Condition&quot;&gt; &lt;code&gt;Threads.Condition&lt;/code&gt; 에&lt;/a&gt; 대한 특별 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="807c1988e26265a853afec2d4132ac7ad72ba269" translate="yes" xml:space="preserve">
          <source>Special top-level assignments, such as those performed by the &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;struct&lt;/code&gt; keywords, are constant by default.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 및 &lt;code&gt;struct&lt;/code&gt; 키워드에 의해 수행되는 것과 같은 특수한 최상위 할당 은 기본적으로 일정합니다.</target>
        </trans-unit>
        <trans-unit id="49acba3ffb7180cd7efe38b435fb88fbe90f135f" translate="yes" xml:space="preserve">
          <source>Special values</source>
          <target state="translated">특별한 가치</target>
        </trans-unit>
        <trans-unit id="30d4e772087d117547d3c875b16094fd6c5367ad" translate="yes" xml:space="preserve">
          <source>Specialization can reset back to the default by using &lt;a href=&quot;#Base.@specialize&quot;&gt;&lt;code&gt;@specialize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">전문화는 &lt;a href=&quot;#Base.@specialize&quot;&gt; &lt;code&gt;@specialize&lt;/code&gt; &lt;/a&gt; 를 사용하여 기본값으로 다시 재설정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80f566326c354506f26000ed8233f0501a3e3957" translate="yes" xml:space="preserve">
          <source>Specializing array generation</source>
          <target state="translated">어레이 생성 전문화</target>
        </trans-unit>
        <trans-unit id="7cc9f310613a35e0321de1b41f7988ba5d0e32c4" translate="yes" xml:space="preserve">
          <source>Specially formatted blocks, known as admonitions, can be used to highlight particular remarks. They can be defined using the following &lt;code&gt;!!!&lt;/code&gt; syntax:</source>
          <target state="translated">훈계라고 알려진 특수 형식의 블록을 사용하여 특정 설명을 강조 표시 할 수 있습니다. 그들은 다음을 사용하여 정의 할 수 있습니다 &lt;code&gt;!!!&lt;/code&gt; 통사론:</target>
        </trans-unit>
        <trans-unit id="fb9edc08537474fa17034547ad3df899f1852699" translate="yes" xml:space="preserve">
          <source>Specifies what type should be used by &lt;a href=&quot;#Base.promote&quot;&gt;&lt;code&gt;promote&lt;/code&gt;&lt;/a&gt; when given values of types &lt;code&gt;type1&lt;/code&gt; and &lt;code&gt;type2&lt;/code&gt;. This function should not be called directly, but should have definitions added to it for new types as appropriate.</source>
          <target state="translated">&lt;code&gt;type1&lt;/code&gt; 및 &lt;code&gt;type2&lt;/code&gt; 유형의 값이 제공 될 때 &lt;a href=&quot;#Base.promote&quot;&gt; &lt;code&gt;promote&lt;/code&gt; &lt;/a&gt; 사용해야 할 유형을 지정합니다 . 이 함수는 직접 호출해서는 안되지만 새 유형에 대한 정의가 적절히 추가되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cbc3d36947a7136e3a2113dc38c46242794c8bd5" translate="yes" xml:space="preserve">
          <source>Specify whether the file calling this function is precompilable, defaulting to &lt;code&gt;true&lt;/code&gt;. If a module or file is &lt;em&gt;not&lt;/em&gt; safely precompilable, it should call &lt;code&gt;__precompile__(false)&lt;/code&gt; in order to throw an error if Julia attempts to precompile it.</source>
          <target state="translated">이 함수를 호출하는 파일이 사전 컴파일 가능한지 여부를 지정하십시오 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 모듈이나 파일을 안전하게 사전 컴파일 할 수 &lt;em&gt;없는&lt;/em&gt; 경우 Julia가 미리 컴파일하려고하면 오류를 발생시키기 위해 &lt;code&gt;__precompile__(false)&lt;/code&gt; 를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c7927b015411f60295ede2731d6f18ce21aea916" translate="yes" xml:space="preserve">
          <source>Specifying &lt;a href=&quot;../arrays/index#Base.IndexLinear&quot;&gt;&lt;code&gt;IndexLinear()&lt;/code&gt;&lt;/a&gt; ensures that &lt;code&gt;i&lt;/code&gt; will be an integer; specifying &lt;a href=&quot;../arrays/index#Base.IndexCartesian&quot;&gt;&lt;code&gt;IndexCartesian()&lt;/code&gt;&lt;/a&gt; ensures that &lt;code&gt;i&lt;/code&gt; will be a &lt;a href=&quot;../arrays/index#Base.IteratorsMD.CartesianIndex&quot;&gt;&lt;code&gt;CartesianIndex&lt;/code&gt;&lt;/a&gt;; specifying &lt;code&gt;IndexStyle(A)&lt;/code&gt; chooses whichever has been defined as the native indexing style for array &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../arrays/index#Base.IndexLinear&quot;&gt; &lt;code&gt;IndexLinear()&lt;/code&gt; &lt;/a&gt; 지정 하면 &lt;code&gt;i&lt;/code&gt; 가 정수가됩니다. &lt;a href=&quot;../arrays/index#Base.IndexCartesian&quot;&gt; &lt;code&gt;IndexCartesian()&lt;/code&gt; &lt;/a&gt; 을 지정 하면 &lt;code&gt;i&lt;/code&gt; 가 &lt;a href=&quot;../arrays/index#Base.IteratorsMD.CartesianIndex&quot;&gt; &lt;code&gt;CartesianIndex&lt;/code&gt; 가됩니다&lt;/a&gt; . &lt;code&gt;IndexStyle(A)&lt;/code&gt; 지정 하면 배열 &lt;code&gt;A&lt;/code&gt; 의 기본 인덱싱 스타일로 정의 된 것을 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="43f52ca843bb0d4555ed8506e7bd677c502e5edf" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;skipstart&lt;/code&gt; will ignore the corresponding number of initial lines from the input.</source>
          <target state="translated">&lt;code&gt;skipstart&lt;/code&gt; 를 지정 하면 입력에서 해당하는 초기 줄 수를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="f925268770f775a772e79870e901cde32f015862" translate="yes" xml:space="preserve">
          <source>Specifying Network Topology (Experimental)</source>
          <target state="translated">네트워크 토폴로지 지정 (실험적)</target>
        </trans-unit>
        <trans-unit id="a1783bf6940e9bae3e1be8ab7b9f5dc5bcd87f5a" translate="yes" xml:space="preserve">
          <source>Specifying the output element type &lt;code&gt;Type&lt;/code&gt; requires at least Julia 1.1.</source>
          <target state="translated">출력 소자 유형 지정 &lt;code&gt;Type&lt;/code&gt; 적어도 줄리아 1.1이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="36721aa351958a25c311833776e0d5d1e4c9f037" translate="yes" xml:space="preserve">
          <source>Spectral decomposition</source>
          <target state="translated">스펙트럼 분해</target>
        </trans-unit>
        <trans-unit id="04840d651fd24da8710cb498f30143dfcbf4c7a1" translate="yes" xml:space="preserve">
          <source>Speech Balloon</source>
          <target state="translated">말풍선</target>
        </trans-unit>
        <trans-unit id="a9f9516f3a28b356979050a7232c52e8215b9197" translate="yes" xml:space="preserve">
          <source>Speedboat</source>
          <target state="translated">Speedboat</target>
        </trans-unit>
        <trans-unit id="aa9c4705414e9750cb328a611bcff5e53976f578" translate="yes" xml:space="preserve">
          <source>Spherical Angle</source>
          <target state="translated">구면 각도</target>
        </trans-unit>
        <trans-unit id="9dde05ce4b9bb85d7303e960744f3d7629687e46" translate="yes" xml:space="preserve">
          <source>Spherical Angle Opening Left</source>
          <target state="translated">구면 각도 왼쪽</target>
        </trans-unit>
        <trans-unit id="d43cb2828420569b945accb84efa2574b9428e04" translate="yes" xml:space="preserve">
          <source>Spherical Angle Opening Up</source>
          <target state="translated">구면 각도 개방</target>
        </trans-unit>
        <trans-unit id="da481377677ccbb365ba217f567d2aff84ded7de" translate="yes" xml:space="preserve">
          <source>Spiral Shell</source>
          <target state="translated">나선형 껍질</target>
        </trans-unit>
        <trans-unit id="9e7b26f6e7add78d2d64b6f8da5121da617630a1" translate="yes" xml:space="preserve">
          <source>Splashing Sweat Symbol</source>
          <target state="translated">튀는 땀 기호</target>
        </trans-unit>
        <trans-unit id="e169fff02bcaf3357592741c2b10b68b8ea84c21" translate="yes" xml:space="preserve">
          <source>Splatting interpolation</source>
          <target state="translated">스플래 팅 보간</target>
        </trans-unit>
        <trans-unit id="4d5d09875b417bfcf4922ca3b62e5dbd30e2f7f3" translate="yes" xml:space="preserve">
          <source>Splicing function arguments can be addictive. Instead of &lt;code&gt;[a..., b...]&lt;/code&gt;, use simply &lt;code&gt;[a; b]&lt;/code&gt;, which already concatenates arrays. &lt;code&gt;collect(a)&lt;/code&gt; is better than &lt;code&gt;[a...]&lt;/code&gt;, but since &lt;code&gt;a&lt;/code&gt; is already iterable it is often even better to leave it alone, and not convert it to an array.</source>
          <target state="translated">스플 라이스 함수 인수는 중독성이 있습니다. &lt;code&gt;[a..., b...]&lt;/code&gt; 대신 간단히 &lt;code&gt;[a; b]&lt;/code&gt; , 이미 배열을 연결합니다. &lt;code&gt;collect(a)&lt;/code&gt; 가 &lt;code&gt;[a...]&lt;/code&gt; 보다 낫지 만 &lt;code&gt;a&lt;/code&gt; 가 이미 반복 가능하기 때문에 종종 그대로두고 배열로 변환하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="99b1d2076feaf10905464b7f6548b0edb09706f3" translate="yes" xml:space="preserve">
          <source>Split &lt;code&gt;str&lt;/code&gt; into an array of substrings on occurrences of the delimiter(s) &lt;code&gt;dlm&lt;/code&gt;. &lt;code&gt;dlm&lt;/code&gt; can be any of the formats allowed by &lt;a href=&quot;#Base.findnext-Tuple%7BAbstractString,AbstractString,Integer%7D&quot;&gt;&lt;code&gt;findnext&lt;/code&gt;&lt;/a&gt;'s first argument (i.e. as a string, regular expression or a function), or as a single character or collection of characters.</source>
          <target state="translated">구분 기호 &lt;code&gt;dlm&lt;/code&gt; 의 발생시 &lt;code&gt;str&lt;/code&gt; 을 하위 문자열 배열로 분할 합니다. &lt;code&gt;dlm&lt;/code&gt; 은 &lt;a href=&quot;#Base.findnext-Tuple%7BAbstractString,AbstractString,Integer%7D&quot;&gt; &lt;code&gt;findnext&lt;/code&gt; &lt;/a&gt; 의 첫 번째 인수 (예 : 문자열, 정규식 또는 함수) 또는 단일 문자 또는 문자 모음 으로 허용되는 형식 중 하나 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8cc4ad398ea1eb0c55352e2e31d4a982d6c91b33" translate="yes" xml:space="preserve">
          <source>Split &lt;code&gt;str&lt;/code&gt; into an array of substrings on occurrences of the delimiter(s) &lt;code&gt;dlm&lt;/code&gt;. &lt;code&gt;dlm&lt;/code&gt; can be any of the formats allowed by &lt;code&gt;findnext&lt;/code&gt;'s first argument (i.e. as a string, regular expression or a function), or as a single character or collection of characters.</source>
          <target state="translated">구분 기호 &lt;code&gt;dlm&lt;/code&gt; 이 나타날 때 &lt;code&gt;str&lt;/code&gt; 을 하위 문자열 배열로 분할 합니다. &lt;code&gt;dlm&lt;/code&gt; 은 &lt;code&gt;findnext&lt;/code&gt; 의 첫 번째 인수 (즉, 문자열, 정규 표현식 또는 함수)에서 허용하는 형식 이거나 단일 문자 또는 문자 모음 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="552cff858dace12624d60f56ac4457dbd1ac9e8f" translate="yes" xml:space="preserve">
          <source>Split a file path into all its path components. This is the opposite of &lt;code&gt;joinpath&lt;/code&gt;. Returns an array of substrings, one for each directory or file in the path, including the root directory if present.</source>
          <target state="translated">파일 경로를 모든 경로 구성 요소로 분할하십시오. 이것은 &lt;code&gt;joinpath&lt;/code&gt; 와 반대입니다 . 루트 디렉토리 (있는 경우)를 포함하여 경로의 각 디렉토리 또는 파일마다 하나씩 하위 문자열 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5c6fc7020f463e86285ee0713db7a32f2d0e3af5" translate="yes" xml:space="preserve">
          <source>Split a path into a tuple of the directory name and file name.</source>
          <target state="translated">경로를 디렉토리 이름과 파일 이름의 튜플로 분할하십시오.</target>
        </trans-unit>
        <trans-unit id="1fe20d21d33b794a0e5254a53ad57d8fdde9160d" translate="yes" xml:space="preserve">
          <source>Spouting Whale</source>
          <target state="translated">내뿜는 고래</target>
        </trans-unit>
        <trans-unit id="3574421ff2c27b1c548653317e189f7619773018" translate="yes" xml:space="preserve">
          <source>Square Cap</source>
          <target state="translated">스퀘어 캡</target>
        </trans-unit>
        <trans-unit id="5afeabb0e767646bdc20f645804b2c14888e1fb7" translate="yes" xml:space="preserve">
          <source>Square Cup</source>
          <target state="translated">스퀘어 컵</target>
        </trans-unit>
        <trans-unit id="3a5efa51b8350ad9389b553c84848b0fcb077e49" translate="yes" xml:space="preserve">
          <source>Square Image Of</source>
          <target state="translated">정사각형 이미지</target>
        </trans-unit>
        <trans-unit id="c0dd31fcd74a2ab73d04708b19433e554a050278" translate="yes" xml:space="preserve">
          <source>Square Image Of + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">긴 Solidus 오버레이 / 비 간격 긴 슬래시 ​​오버레이 결합 +의 정사각형 이미지</target>
        </trans-unit>
        <trans-unit id="933827bdbbffda6c4b4de0fcda4f941442c599ab" translate="yes" xml:space="preserve">
          <source>Square Image Of Or Equal To</source>
          <target state="translated">정사각형 이미지 또는</target>
        </trans-unit>
        <trans-unit id="f39b71519d52a4df6d88bec6a7d846ccd1b51fef" translate="yes" xml:space="preserve">
          <source>Square Image Of Or Not Equal To</source>
          <target state="translated">정사각형 이미지 또는 같지 않음</target>
        </trans-unit>
        <trans-unit id="fa39bb4411eabaf3150628e3e5dd942959a63f80" translate="yes" xml:space="preserve">
          <source>Square Left Open Box Operator</source>
          <target state="translated">정사각형 좌측 오픈 박스 연산자</target>
        </trans-unit>
        <trans-unit id="687ad6aae405db4ae1dee6bf61405acf0e2e8299" translate="yes" xml:space="preserve">
          <source>Square Lozenge</source>
          <target state="translated">광장 마름모꼴</target>
        </trans-unit>
        <trans-unit id="98180a6362218af658e83a58830782963230b5aa" translate="yes" xml:space="preserve">
          <source>Square Original Of</source>
          <target state="translated">광장 원본</target>
        </trans-unit>
        <trans-unit id="5d2860f9c12a607572c24b5ac4673755527d6bcf" translate="yes" xml:space="preserve">
          <source>Square Original Of + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">긴 Solidus 오버레이 / 비 간격 긴 슬래시 ​​오버레이 결합 +의 정사각형 원본</target>
        </trans-unit>
        <trans-unit id="a9cb2cdf62a30027a7242f038fff93d42515109d" translate="yes" xml:space="preserve">
          <source>Square Original Of Or Equal To</source>
          <target state="translated">정사각형 또는 같음</target>
        </trans-unit>
        <trans-unit id="2b49c0011f07887bb3cd77756fbf234939031d94" translate="yes" xml:space="preserve">
          <source>Square Original Of Or Not Equal To</source>
          <target state="translated">정사각형 원본 또는 같지 않음</target>
        </trans-unit>
        <trans-unit id="fcbc599844ab842c9b27fe76675248e8cedc0dbe" translate="yes" xml:space="preserve">
          <source>Square Right Open Box Operator</source>
          <target state="translated">직각 오픈 박스 연산자</target>
        </trans-unit>
        <trans-unit id="8743ae2bde50ddde8845601464be440209469ef2" translate="yes" xml:space="preserve">
          <source>Square Root</source>
          <target state="translated">제곱근</target>
        </trans-unit>
        <trans-unit id="08ad262e395f61d487cf22d07bfc1768c2225d4c" translate="yes" xml:space="preserve">
          <source>Square With Bottom Half Black</source>
          <target state="translated">하단 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="a2181aa7d927b9fbbd456d46aba1d41e1803fc2d" translate="yes" xml:space="preserve">
          <source>Square With Diagonal Crosshatch Fill</source>
          <target state="translated">대각선 크로스 해치 채우기가있는 사각형</target>
        </trans-unit>
        <trans-unit id="010d2a7c14fed4015e659a25512def842d8805ea" translate="yes" xml:space="preserve">
          <source>Square With Horizontal Fill</source>
          <target state="translated">가로 채우기가있는 정사각형</target>
        </trans-unit>
        <trans-unit id="2ff60ac41e97635d5249532521dc037acf45ed3e" translate="yes" xml:space="preserve">
          <source>Square With Left Half Black</source>
          <target state="translated">왼쪽 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="116c5c6cbd4c803a710f8ec9e341406a95d7dbbd" translate="yes" xml:space="preserve">
          <source>Square With Lower Left Diagonal Half Black</source>
          <target state="translated">왼쪽 아래 대각선 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="715b61c773d044ee6ad12549c2454ce2fd5fe51a" translate="yes" xml:space="preserve">
          <source>Square With Lower Right Diagonal Half Black</source>
          <target state="translated">오른쪽 아래 대각선 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="153b1047e2c4e2c2f93e4f4131b3f0faa80050e7" translate="yes" xml:space="preserve">
          <source>Square With Orthogonal Crosshatch Fill</source>
          <target state="translated">직교 크로스 해칭 채우기가있는 정사각형</target>
        </trans-unit>
        <trans-unit id="6b0142315df9ecfe9426932b42779b3bf33a6831" translate="yes" xml:space="preserve">
          <source>Square With Right Half Black</source>
          <target state="translated">오른쪽 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="82c3339a275178b74b17f22aeafeedceccf7b092" translate="yes" xml:space="preserve">
          <source>Square With Top Half Black</source>
          <target state="translated">상단 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="67e2d42355f43da4aa12ba845e69a712d061f6bd" translate="yes" xml:space="preserve">
          <source>Square With Upper Left Diagonal Half Black</source>
          <target state="translated">왼쪽 위 대각선 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="44c355c86222b70b3ac157c963624b10a57b746e" translate="yes" xml:space="preserve">
          <source>Square With Upper Left To Lower Right Fill</source>
          <target state="translated">왼쪽 상단부터 오른쪽 하단 채우기까지의 사각형</target>
        </trans-unit>
        <trans-unit id="c0d60871881d9b38104e1454412ee699337774e0" translate="yes" xml:space="preserve">
          <source>Square With Upper Right Diagonal Half Black</source>
          <target state="translated">오른쪽 위 대각선 반 검은 사각형</target>
        </trans-unit>
        <trans-unit id="a1aa3458dede6c1b49f58dbd1c7b4d56ebb7e455" translate="yes" xml:space="preserve">
          <source>Square With Upper Right To Lower Left Fill</source>
          <target state="translated">왼쪽 위 채우기를 낮추는 오른쪽 위의 사각형</target>
        </trans-unit>
        <trans-unit id="0eb4e076fb16704d54cb19b69f2e371f2cf00254" translate="yes" xml:space="preserve">
          <source>Square With Vertical Fill</source>
          <target state="translated">수직 채우기가있는 정사각형</target>
        </trans-unit>
        <trans-unit id="0bb69521433b11d496282b6531f431774a498fa4" translate="yes" xml:space="preserve">
          <source>Squared Asterisk</source>
          <target state="translated">제곱 별표</target>
        </trans-unit>
        <trans-unit id="8c75edbac76c893f8d8241ac1a86cd7c19229bfa" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-5272</source>
          <target state="translated">제곱 된 Cjk 통합 이데 오 그래프 -5272</target>
        </trans-unit>
        <trans-unit id="1a3dbe1aed1961e070c9829d866ee3c09fdd9aa5" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-5408</source>
          <target state="translated">제곱 된 Cjk 통합 이데 오 그래프 -5408</target>
        </trans-unit>
        <trans-unit id="5a63c6b7911e5c8d1b5fcf8acdce864966b37bfa" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-55B6</source>
          <target state="translated">제곱 된 Cjk 통합 표식기 -55B6</target>
        </trans-unit>
        <trans-unit id="bafeb3d86b3a5b762e9c662eddae591e5a5e6027" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-6307</source>
          <target state="translated">제곱 된 Cjk 통합 이데 오 그래프 -6307</target>
        </trans-unit>
        <trans-unit id="3fbc80cec4ad05ec82add2c68c7c8cef6a08ec75" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-6708</source>
          <target state="translated">제곱 된 Cjk 통합 이데 오 그래프 -6708</target>
        </trans-unit>
        <trans-unit id="2bbd4b1fc3f8ca39dc1f296c12ff36f5bc463802" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-6709</source>
          <target state="translated">제곱 된 Cjk 통합 이데 오 그래프 -6709</target>
        </trans-unit>
        <trans-unit id="7d22c42fb77ed0710f5ac1879be4a6f36461d293" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-6E80</source>
          <target state="translated">제곱 된 Cjk 통합 이데 오 그래프 -6E80</target>
        </trans-unit>
        <trans-unit id="9e1b001e1f5867266f30f91f6d5177400bf8afbd" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-7121</source>
          <target state="translated">제곱 된 Cjk 통합 표식기 -7121</target>
        </trans-unit>
        <trans-unit id="4f978dd3fedffe2e65c136bde41b210f53700f0c" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-7533</source>
          <target state="translated">제곱 된 Cjk 통합 표식기 -7533</target>
        </trans-unit>
        <trans-unit id="a13c4a90a4ebdda6c3add8469e4768c6173baf62" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-7981</source>
          <target state="translated">제곱 된 Cjk 통합 표식기 -7981</target>
        </trans-unit>
        <trans-unit id="9bef918f1f718ee550eb3ca43c47bbf8204b88f8" translate="yes" xml:space="preserve">
          <source>Squared Cjk Unified Ideograph-7A7A</source>
          <target state="translated">제곱 된 Cjk 통합 이데 오 그래프 -7A7A</target>
        </trans-unit>
        <trans-unit id="dde58510f7f91f7386694cb745375c688ffac3da" translate="yes" xml:space="preserve">
          <source>Squared Cl</source>
          <target state="translated">제곱 Cl</target>
        </trans-unit>
        <trans-unit id="8edb01190ec1a9055d73f3022b74266562d5d0fe" translate="yes" xml:space="preserve">
          <source>Squared Cool</source>
          <target state="translated">제곱 쿨</target>
        </trans-unit>
        <trans-unit id="85d43e327d7c2af059c90b013d9b40b3e1b6ab82" translate="yes" xml:space="preserve">
          <source>Squared Dot Operator</source>
          <target state="translated">제곱 점 연산자</target>
        </trans-unit>
        <trans-unit id="ac4cae3a89f0782e9fab09fcdc4ade1cf5235a3e" translate="yes" xml:space="preserve">
          <source>Squared Falling Diagonal Slash</source>
          <target state="translated">제곱 떨어지는 대각선 슬래시</target>
        </trans-unit>
        <trans-unit id="eef57422175ccadc3ed7a7476389fe48eea50049" translate="yes" xml:space="preserve">
          <source>Squared Free</source>
          <target state="translated">제곱 무료</target>
        </trans-unit>
        <trans-unit id="9e8c3c7244ea85842e6e1452fb4d9001d2da7426" translate="yes" xml:space="preserve">
          <source>Squared Id</source>
          <target state="translated">제곱 ID</target>
        </trans-unit>
        <trans-unit id="4c5202ba1f03da711da695f2dbbfed0adc4e50f6" translate="yes" xml:space="preserve">
          <source>Squared Katakana Koko</source>
          <target state="translated">제곱 가타카나 코코</target>
        </trans-unit>
        <trans-unit id="ef81a1474c9bc7ba557f667f735a98a7a30e5b40" translate="yes" xml:space="preserve">
          <source>Squared Katakana Sa</source>
          <target state="translated">제곱 가타카나 사</target>
        </trans-unit>
        <trans-unit id="f9d56ccd825e436fcb16f9df725ef7ceac6e7afe" translate="yes" xml:space="preserve">
          <source>Squared Minus</source>
          <target state="translated">제곱 마이너스</target>
        </trans-unit>
        <trans-unit id="b31c2282e159fee06cbcd80aa31eb49016f17bf0" translate="yes" xml:space="preserve">
          <source>Squared New</source>
          <target state="translated">새로운 제곱</target>
        </trans-unit>
        <trans-unit id="611c40e04ea5681d3b523dbd07617bc0cfc7ed71" translate="yes" xml:space="preserve">
          <source>Squared Ng</source>
          <target state="translated">제곱 Ng</target>
        </trans-unit>
        <trans-unit id="f3ad953aac7b46d4843f566e291f550dd31b1fe2" translate="yes" xml:space="preserve">
          <source>Squared Ok</source>
          <target state="translated">제곱 확인</target>
        </trans-unit>
        <trans-unit id="2048b178a1bcd09e49052a62d3edbac6b7f2c8dc" translate="yes" xml:space="preserve">
          <source>Squared Plus</source>
          <target state="translated">제곱 플러스</target>
        </trans-unit>
        <trans-unit id="fd4f2e0475a995d5e7e9229f7fd41f50a925f33a" translate="yes" xml:space="preserve">
          <source>Squared Rising Diagonal Slash</source>
          <target state="translated">제곱 상승 대각선 슬래시</target>
        </trans-unit>
        <trans-unit id="24678eadf5f7e2f41a8d71b6dedd01cd583cc55e" translate="yes" xml:space="preserve">
          <source>Squared Small Circle</source>
          <target state="translated">제곱 된 작은 원</target>
        </trans-unit>
        <trans-unit id="3a8d805951b7dd01d0be411a53e8d00b1e416651" translate="yes" xml:space="preserve">
          <source>Squared Sos</source>
          <target state="translated">제곱 소스</target>
        </trans-unit>
        <trans-unit id="e97a9ef68db2cf1f18b96f489b779c1d574acafd" translate="yes" xml:space="preserve">
          <source>Squared Times</source>
          <target state="translated">제곱 시간</target>
        </trans-unit>
        <trans-unit id="775191b4526b92917f42605a808abe422580a59f" translate="yes" xml:space="preserve">
          <source>Squared Up With Exclamation Mark</source>
          <target state="translated">느낌표로 제곱</target>
        </trans-unit>
        <trans-unit id="76f3182a012b1b6d673d3228ce51c58969d80438" translate="yes" xml:space="preserve">
          <source>Squared Vs</source>
          <target state="translated">제곱 대</target>
        </trans-unit>
        <trans-unit id="4d8f1043c1174e58afe9d953c96c944b9b9543e8" translate="yes" xml:space="preserve">
          <source>Squared absolute value of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 제곱 절대 값 .</target>
        </trans-unit>
        <trans-unit id="91fde0384c0fac41dc0b4c32171c8b572c0690a0" translate="yes" xml:space="preserve">
          <source>Stack Traces</source>
          <target state="translated">스택 추적</target>
        </trans-unit>
        <trans-unit id="32b0ac4e01fbd59a3075de631236719f6f887dcf" translate="yes" xml:space="preserve">
          <source>Stack information representing execution context, with the following fields:</source>
          <target state="translated">다음 필드와 함께 실행 컨텍스트를 나타내는 스택 정보 :</target>
        </trans-unit>
        <trans-unit id="f75694868f27643cc65da5059c54dcd8b6327e25" translate="yes" xml:space="preserve">
          <source>StackTraces</source>
          <target state="translated">StackTraces</target>
        </trans-unit>
        <trans-unit id="678e68d3843651231bb89046fbc5e7d3107802b0" translate="yes" xml:space="preserve">
          <source>Stacked environments allow for &lt;strong&gt;adding&lt;/strong&gt; tools to the primary environment. You can push an environment of development tools onto the end of the stack to make them available from the REPL and scripts, but not from inside packages.</source>
          <target state="translated">누적 환경에서는 기본 환경에 도구를 &lt;strong&gt;추가&lt;/strong&gt; 할 수 있습니다. REPL 및 스크립트에서는 사용할 수 있도록 개발 도구 환경을 스택의 끝까지 밀어 넣을 수 있지만 패키지 내부에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="de3cbe030b95740f7683573cefeb15ba36909ef0" translate="yes" xml:space="preserve">
          <source>Standard C escape sequences (&lt;code&gt;\a&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\t&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\v&lt;/code&gt;, &lt;code&gt;\f&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\e&lt;/code&gt;)</source>
          <target state="translated">표준 C 이스케이프 시퀀스 ( &lt;code&gt;\a&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\t&lt;/code&gt; , &lt;code&gt;\n&lt;/code&gt; , &lt;code&gt;\v&lt;/code&gt; , &lt;code&gt;\f&lt;/code&gt; , &lt;code&gt;\r&lt;/code&gt; , &lt;code&gt;\e&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ab7ac1c04f61f3634812724e7b8f8229944e63e7" translate="yes" xml:space="preserve">
          <source>Standard Functions</source>
          <target state="translated">표준 기능</target>
        </trans-unit>
        <trans-unit id="6fd515806c9721da31f855b10b569363e7325842" translate="yes" xml:space="preserve">
          <source>Standard Julia Alias</source>
          <target state="translated">표준 줄리아 별명</target>
        </trans-unit>
        <trans-unit id="fbc014247a90e3e9471cd43027f6ed1dd5022323" translate="yes" xml:space="preserve">
          <source>Standard Modules</source>
          <target state="translated">표준 모듈</target>
        </trans-unit>
        <trans-unit id="ebb4b58e37884ee3cf667303730545d24312d294" translate="yes" xml:space="preserve">
          <source>Standard Numeric Types</source>
          <target state="translated">표준 숫자 형</target>
        </trans-unit>
        <trans-unit id="814bb249d1a3ec815cc9661f4abbd87d1406269d" translate="yes" xml:space="preserve">
          <source>Standard comparison operations are defined for all the primitive numeric types:</source>
          <target state="translated">표준 비교 연산은 모든 기본 숫자 유형에 대해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="80a6e8fca3df463e66b9fdd04f246670791f11b0" translate="yes" xml:space="preserve">
          <source>Standard equality and comparison operators follow the propagation rule presented above: if any of the operands is &lt;code&gt;missing&lt;/code&gt;, the result is &lt;code&gt;missing&lt;/code&gt;. Here are a few examples</source>
          <target state="translated">표준 항등 및 비교 연산자는 위에 제시된 전파 규칙을 따릅니다. 피연산자 중 하나라도 &lt;code&gt;missing&lt;/code&gt; 되면 결과가 &lt;code&gt;missing&lt;/code&gt; 됩니다. 다음은 몇 가지 예입니다</target>
        </trans-unit>
        <trans-unit id="ad9344815dc0ca5e3531e14f6a13398d1066ff3d" translate="yes" xml:space="preserve">
          <source>Standard functions</source>
          <target state="translated">표준 기능</target>
        </trans-unit>
        <trans-unit id="9e3818b5bf8738992ef169a27b1a0b6814acffd3" translate="yes" xml:space="preserve">
          <source>Standard functions to manipulate complex values are provided:</source>
          <target state="translated">복잡한 값을 조작하는 표준 기능이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8c3f5d2992e483a089536ebae0c8c764d3b3ce39" translate="yes" xml:space="preserve">
          <source>Standard modules</source>
          <target state="translated">표준 모듈</target>
        </trans-unit>
        <trans-unit id="c7f030a2e0a97662a91cdedf91f229f8b839e395" translate="yes" xml:space="preserve">
          <source>Standard word size on the current machine, in bits.</source>
          <target state="translated">현재 컴퓨터의 표준 단어 크기 (비트)입니다.</target>
        </trans-unit>
        <trans-unit id="63721e71b685d17610f3a4f7db5d918f0bdd543b" translate="yes" xml:space="preserve">
          <source>Standardise the path string &lt;code&gt;path&lt;/code&gt; to use POSIX separators.</source>
          <target state="translated">POSIX 구분 기호를 사용 하도록 경로 문자열 &lt;code&gt;path&lt;/code&gt; 를 표준화하십시오 .</target>
        </trans-unit>
        <trans-unit id="b369e571e9e5b06b43f8180a72eca85d52ef8e8f" translate="yes" xml:space="preserve">
          <source>Star Equals</source>
          <target state="translated">별은 같음</target>
        </trans-unit>
        <trans-unit id="8db1a9984ad3fec6921c84f5ebaeae84716ec9a0" translate="yes" xml:space="preserve">
          <source>Star Operator</source>
          <target state="translated">스타 연산자</target>
        </trans-unit>
        <trans-unit id="6a489710595be3bf35f6d9092f935bd01bc68117" translate="yes" xml:space="preserve">
          <source>Start running &lt;code&gt;command&lt;/code&gt; asynchronously, and return a &lt;code&gt;process::IO&lt;/code&gt; object. If &lt;code&gt;read&lt;/code&gt; is true, then reads from the process come from the process's standard output and &lt;code&gt;other&lt;/code&gt; optionally specifies the process's standard input stream. If &lt;code&gt;write&lt;/code&gt; is true, then writes go to the process's standard input and &lt;code&gt;other&lt;/code&gt; optionally specifies the process's standard output stream. The process's standard error stream is connected to the current global &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">비동기 적으로 &lt;code&gt;command&lt;/code&gt; 실행을 시작 하고 &lt;code&gt;process::IO&lt;/code&gt; 객체를 반환하십시오 . &lt;code&gt;read&lt;/code&gt; 가 true 인 경우 프로세스의 읽기 는 프로세스의 표준 출력에서 ​​가져오고 &lt;code&gt;other&lt;/code&gt; 선택적으로 프로세스의 표준 입력 스트림을 지정합니다. &lt;code&gt;write&lt;/code&gt; 가 true 인 경우 쓰기 는 프로세스의 표준 입력으로 이동하고 &lt;code&gt;other&lt;/code&gt; 선택적으로 프로세스의 표준 출력 스트림을 지정합니다. 프로세스의 표준 오류 스트림은 현재 전역 &lt;code&gt;stderr&lt;/code&gt; 에 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="1336787ce2e19f8a352e40db61a63ad659a94de2" translate="yes" xml:space="preserve">
          <source>Start running &lt;code&gt;command&lt;/code&gt; asynchronously, and return a &lt;code&gt;process::IO&lt;/code&gt; object. If &lt;code&gt;read&lt;/code&gt; is true, then reads from the process come from the process's standard output and &lt;code&gt;stdio&lt;/code&gt; optionally specifies the process's standard input stream. If &lt;code&gt;write&lt;/code&gt; is true, then writes go to the process's standard input and &lt;code&gt;stdio&lt;/code&gt; optionally specifies the process's standard output stream. The process's standard error stream is connected to the current global &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">비동기 적으로 &lt;code&gt;command&lt;/code&gt; 실행을 시작 하고 &lt;code&gt;process::IO&lt;/code&gt; 객체를 반환 합니다. 경우 &lt;code&gt;read&lt;/code&gt; 사실, 프로세스에서 읽어 프로세스의 표준 출력에서 온 &lt;code&gt;stdio&lt;/code&gt; 선택적으로 프로세스의 표준 입력 스트림을 지정합니다. &lt;code&gt;write&lt;/code&gt; 가 true 이면 쓰기 는 프로세스의 표준 입력으로 이동하고 &lt;code&gt;stdio&lt;/code&gt; 는 선택적으로 프로세스의 표준 출력 스트림을 지정합니다. 프로세스의 표준 오류 스트림은 현재 전역 &lt;code&gt;stderr&lt;/code&gt; 에 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="7907936de06e301b74a3734257665164fffd4d40" translate="yes" xml:space="preserve">
          <source>Start some other operations that use &lt;code&gt;f(x)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;f(x)&lt;/code&gt; 를 사용하는 다른 작업을 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5ce458918d7a3f912a02e5ebabeaab6c7eae8eb" translate="yes" xml:space="preserve">
          <source>Start the &lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt;&lt;code&gt;GitRevWalker&lt;/code&gt;&lt;/a&gt;&lt;code&gt;walker&lt;/code&gt; at commit &lt;code&gt;cid&lt;/code&gt;. This function can be used to apply a function to all commits since a certain year, by passing the first commit of that year as &lt;code&gt;cid&lt;/code&gt; and then passing the resulting &lt;code&gt;w&lt;/code&gt; to &lt;a href=&quot;#LibGit2.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">commit &lt;code&gt;cid&lt;/code&gt; 에서 &lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt; &lt;code&gt;GitRevWalker&lt;/code&gt; &lt;/a&gt; &lt;code&gt;walker&lt;/code&gt; 를 시작하십시오 . 이 함수는 해당 연도의 첫 번째 커밋을 &lt;code&gt;cid&lt;/code&gt; 로 전달한 다음 결과 &lt;code&gt;w&lt;/code&gt; 를 &lt;a href=&quot;#LibGit2.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 에 전달하여 특정 연도 이후 모든 커밋에 함수를 적용하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e67b5695308b7e929ca67d95fac3d5bc7882841" translate="yes" xml:space="preserve">
          <source>Start up with the given system image file</source>
          <target state="translated">주어진 시스템 이미지 파일로 시작</target>
        </trans-unit>
        <trans-unit id="ed3778fefa0532b7413378e48276a09159e6ed4f" translate="yes" xml:space="preserve">
          <source>Starting Julia with multiple threads</source>
          <target state="translated">여러 스레드로 Julia 시작</target>
        </trans-unit>
        <trans-unit id="a02b4c4e7bdcd8cd868fa3d24729b698d60a7b81" translate="yes" xml:space="preserve">
          <source>Starting and managing worker processes</source>
          <target state="translated">작업자 프로세스 시작 및 관리</target>
        </trans-unit>
        <trans-unit id="424214698b544719f2dac18885901d9c51c86b29" translate="yes" xml:space="preserve">
          <source>Starts a new test set, or multiple test sets if a &lt;code&gt;for&lt;/code&gt; loop is provided.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프가 제공 되면 새 테스트 세트 또는 여러 테스트 세트를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="4cb8d8545ed6bf54e8370ad6d910c90fdb3d6473" translate="yes" xml:space="preserve">
          <source>Station</source>
          <target state="translated">Station</target>
        </trans-unit>
        <trans-unit id="2086b21f8f49274138c38d476bee317a84a8aecc" translate="yes" xml:space="preserve">
          <source>Statistics</source>
          <target state="translated">Statistics</target>
        </trans-unit>
        <trans-unit id="cccd690154011cb75b8b78f5362b9c3448ace5ee" translate="yes" xml:space="preserve">
          <source>Statue Of Liberty</source>
          <target state="translated">자유의 여신상</target>
        </trans-unit>
        <trans-unit id="97f2aad70c54d1e78f565f1e7e1cc8657b7626bd" translate="yes" xml:space="preserve">
          <source>Steam Locomotive</source>
          <target state="translated">증기 기관차</target>
        </trans-unit>
        <trans-unit id="84132d0949f51f7ad3457aace2ec2d9746e3d772" translate="yes" xml:space="preserve">
          <source>Steaming Bowl</source>
          <target state="translated">김이 나는 그릇</target>
        </trans-unit>
        <trans-unit id="7181cf49f1a014db3dc814669aed3b1f37f97bec" translate="yes" xml:space="preserve">
          <source>StepRange</source>
          <target state="translated">StepRange</target>
        </trans-unit>
        <trans-unit id="d4de892f01d18ba0a7dc54206b530b13a5df0482" translate="yes" xml:space="preserve">
          <source>StepRangeLen</source>
          <target state="translated">StepRangeLen</target>
        </trans-unit>
        <trans-unit id="66ef96342a9c1591dcca02b1bcf2a8ad36050c4b" translate="yes" xml:space="preserve">
          <source>Stop background tracking of changes for &lt;code&gt;path&lt;/code&gt;. It is not recommended to do this while another task is waiting for &lt;code&gt;watch_folder&lt;/code&gt; to return on the same path, as the result may be unpredictable.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 변경에 대한 백그라운드 추적을 중지 합니다 . 다른 작업이 &lt;code&gt;watch_folder&lt;/code&gt; 가 같은 경로로 돌아 오기 를 기다리는 동안에는 이렇게하지 않는 것이 좋습니다 . 결과는 예측할 수 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36f74dc30404631755f435491944284f2207e653" translate="yes" xml:space="preserve">
          <source>Stop the program with an exit code. The default exit code is zero, indicating that the program completed successfully. In an interactive session, &lt;code&gt;exit()&lt;/code&gt; can be called with the keyboard shortcut &lt;code&gt;^D&lt;/code&gt;.</source>
          <target state="translated">종료 코드로 프로그램을 중지하십시오. 기본 종료 코드는 0이며 프로그램이 성공적으로 완료되었음을 나타냅니다. 대화식 세션 에서 키보드 단축키 &lt;code&gt;^D&lt;/code&gt; &lt;code&gt;exit()&lt;/code&gt; 를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29c796d1463d8d6af78eef29ebfb982bd9162d92" translate="yes" xml:space="preserve">
          <source>Store a set of values to the &lt;a href=&quot;#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt;. If the channel is full, blocks until space is available. Return the first argument.</source>
          <target state="translated">값 세트를 &lt;a href=&quot;#Distributed.RemoteChannel&quot;&gt; &lt;code&gt;RemoteChannel&lt;/code&gt; 에 저장하십시오&lt;/a&gt; . 채널이 가득 찬 경우 공간이 확보 될 때까지 차단하십시오. 첫 번째 인수를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="138628def8f47aa36497ac90286c7030d07fbaef" translate="yes" xml:space="preserve">
          <source>Store a value of type &lt;code&gt;T&lt;/code&gt; to the address of the &lt;code&gt;i&lt;/code&gt;th element (1-indexed) starting at &lt;code&gt;p&lt;/code&gt;. This is equivalent to the C expression &lt;code&gt;p[i-1] = x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 에서 시작 하여 &lt;code&gt;i&lt;/code&gt; 번째 요소 의 주소 (1 색인)에 &lt;code&gt;T&lt;/code&gt; 유형의 값을 저장하십시오 . 이것은 C 표현식 &lt;code&gt;p[i-1] = x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="027a755010483789b615c3ac87b1317ced7c2a45" translate="yes" xml:space="preserve">
          <source>Store a value to a &lt;a href=&quot;#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;&lt;code&gt;rr&lt;/code&gt;. &lt;code&gt;Future&lt;/code&gt;s are write-once remote references. A &lt;code&gt;put!&lt;/code&gt; on an already set &lt;code&gt;Future&lt;/code&gt; throws an &lt;code&gt;Exception&lt;/code&gt;. All asynchronous remote calls return &lt;code&gt;Future&lt;/code&gt;s and set the value to the return value of the call upon completion.</source>
          <target state="translated">&lt;a href=&quot;#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; &lt;code&gt;rr&lt;/code&gt; 에 값을 저장하십시오 . &lt;code&gt;Future&lt;/code&gt; 는 한 번만 쓸 수있는 원격 참조입니다. A는 &lt;code&gt;put!&lt;/code&gt; 이미 설정된 &lt;code&gt;Future&lt;/code&gt; 에서 &lt;code&gt;Exception&lt;/code&gt; 이 발생 합니다. 모든 비동기 원격 호출은 &lt;code&gt;Future&lt;/code&gt; 를 반환하고 값은 완료시 호출의 반환 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0b77e5353d0627ae778fd5b552e50a4ee9644898" translate="yes" xml:space="preserve">
          <source>Store the &lt;code&gt;payload&lt;/code&gt; credential for re-use in a future authentication. Should only be called when authentication was successful.</source>
          <target state="translated">향후 인증에서 재사용 할 수 있도록 &lt;code&gt;payload&lt;/code&gt; 자격 증명을 저장하십시오 . 인증이 성공한 경우에만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="59aeef3224de89515b0e86228792a22810cad059" translate="yes" xml:space="preserve">
          <source>Store the given value at the given key or index within a collection. The syntax &lt;code&gt;a[i,j,...] = x&lt;/code&gt; is converted by the compiler to &lt;code&gt;(setindex!(a, x, i, j, ...); x)&lt;/code&gt;.</source>
          <target state="translated">컬렉션 내의 지정된 키 또는 인덱스에 지정된 값을 저장하십시오. 문법 &lt;code&gt;a[i,j,...] = x&lt;/code&gt; 는 컴파일러에 의해 &lt;code&gt;(setindex!(a, x, i, j, ...); x)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="014ea264eda29a94d4ee059e8f0e09aefc553612" translate="yes" xml:space="preserve">
          <source>Store values from array &lt;code&gt;X&lt;/code&gt; within some subset of &lt;code&gt;A&lt;/code&gt; as specified by &lt;code&gt;inds&lt;/code&gt;. The syntax &lt;code&gt;A[inds...] = X&lt;/code&gt; is equivalent to &lt;code&gt;setindex!(A, X, inds...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inds&lt;/code&gt; 에 의해 지정된대로 &lt;code&gt;A&lt;/code&gt; 의 일부 서브 세트 내에 배열 &lt;code&gt;X&lt;/code&gt; 의 값을 저장하십시오 . 구문 &lt;code&gt;A[inds...] = X&lt;/code&gt; 는 &lt;code&gt;setindex!(A, X, inds...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98d37f3c5406795e9bde809355a42bb73a9978e9" translate="yes" xml:space="preserve">
          <source>Stores the given string &lt;code&gt;substr&lt;/code&gt; as a &lt;code&gt;SubstitutionString&lt;/code&gt;, for use in regular expression substitutions. Most commonly constructed using the &lt;a href=&quot;#Base.@s_str&quot;&gt;&lt;code&gt;@s_str&lt;/code&gt;&lt;/a&gt; macro.</source>
          <target state="translated">정규식 대체에 사용하기 위해 지정된 문자열 &lt;code&gt;substr&lt;/code&gt; 을 &lt;code&gt;SubstitutionString&lt;/code&gt; 으로 저장합니다 . &lt;a href=&quot;#Base.@s_str&quot;&gt; &lt;code&gt;@s_str&lt;/code&gt; &lt;/a&gt; 매크로를 사용하여 가장 일반적으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b0357aea6ae7052b0cd8d6047bbcef904118ecf" translate="yes" xml:space="preserve">
          <source>Straight Ruler</source>
          <target state="translated">직선 자</target>
        </trans-unit>
        <trans-unit id="3f12e8ecd9d1d32998e3ffea80b8517675c6cbd3" translate="yes" xml:space="preserve">
          <source>Straightness</source>
          <target state="translated">Straightness</target>
        </trans-unit>
        <trans-unit id="393d46da8467a9e4437aa15a2eef178693e18f06" translate="yes" xml:space="preserve">
          <source>Strawberry</source>
          <target state="translated">Strawberry</target>
        </trans-unit>
        <trans-unit id="60973ecf7cdf487f0e9151f908a1c3b86305563e" translate="yes" xml:space="preserve">
          <source>Strictly Equivalent To</source>
          <target state="translated">엄밀히</target>
        </trans-unit>
        <trans-unit id="a38ed77894b85abfb41222b10a343b6f585a77d8" translate="yes" xml:space="preserve">
          <source>Strided Arrays</source>
          <target state="translated">배열 된 배열</target>
        </trans-unit>
        <trans-unit id="18fe9f05b77705755f03233c3e7eb9322595abdc" translate="yes" xml:space="preserve">
          <source>StridedArray</source>
          <target state="translated">StridedArray</target>
        </trans-unit>
        <trans-unit id="bd2ef761fb501ff9ef81937eed42fe501a69e740" translate="yes" xml:space="preserve">
          <source>StridedMatrix</source>
          <target state="translated">StridedMatrix</target>
        </trans-unit>
        <trans-unit id="46ddb83dd680bb85309e669b74f8bc053d798ec5" translate="yes" xml:space="preserve">
          <source>StridedVecOrMat</source>
          <target state="translated">StridedVecOrMat</target>
        </trans-unit>
        <trans-unit id="e4c5d1008e5ca47417850fef718da4be6680b025" translate="yes" xml:space="preserve">
          <source>StridedVector</source>
          <target state="translated">StridedVector</target>
        </trans-unit>
        <trans-unit id="121a4522e99b2d3999de17bf38fc1bb5c439417a" translate="yes" xml:space="preserve">
          <source>String Basics</source>
          <target state="translated">문자열 기본</target>
        </trans-unit>
        <trans-unit id="160dd68bd6cfcace28d8a1b5ec1e7be1a4f236a2" translate="yes" xml:space="preserve">
          <source>String concatenation is done with &lt;code&gt;*&lt;/code&gt; in Julia, not &lt;code&gt;+&lt;/code&gt; like in Python. Analogously, string repetition is done with &lt;code&gt;^&lt;/code&gt;, not &lt;code&gt;*&lt;/code&gt;. Implicit string concatenation of string literals like in Python (e.g. &lt;code&gt;'ab' 'cd' == 'abcd'&lt;/code&gt;) is not done in Julia.</source>
          <target state="translated">문자열 연결은 Python에서와 같이 &lt;code&gt;+&lt;/code&gt; 가 아닌 Julia에서 &lt;code&gt;*&lt;/code&gt; 로 수행됩니다 . 유사하게 문자열 반복은 &lt;code&gt;*&lt;/code&gt; 가 아닌 &lt;code&gt;^&lt;/code&gt; 로 수행됩니다 . Python에서와 같이 문자열 리터럴의 암시 적 문자열 연결 (예 : &lt;code&gt;'ab' 'cd' == 'abcd'&lt;/code&gt; )은 Julia에서 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="571ce02a70fa6c9530b71f404812adada5f798b1" translate="yes" xml:space="preserve">
          <source>String indices in Julia refer to code units (= bytes for UTF-8), the fixed-width building blocks that are used to encode arbitrary characters (code points). This means that not every index into a &lt;code&gt;String&lt;/code&gt; is necessarily a valid index for a character. If you index into a string at such an invalid byte index, an error is thrown:</source>
          <target state="translated">Julia의 문자열 인덱스는 임의의 문자 (코드 포인트)를 인코딩하는 데 사용되는 고정 너비 빌딩 블록 인 코드 단위 (UTF-8의 경우 바이트)를 나타냅니다. 이것은 &lt;code&gt;String&lt;/code&gt; 에 대한 모든 인덱스 가 반드시 문자에 유효한 인덱스 인 것은 아닙니다. 잘못된 바이트 인덱스에서 문자열을 인덱스하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="54ef1e53095705023ec7e9feac375698bdbeffe5" translate="yes" xml:space="preserve">
          <source>String literals are delimited by double quotes or triple double quotes:</source>
          <target state="translated">문자열 리터럴은 큰 따옴표 또는 삼중 큰 따옴표로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="1a5154f7ee3b03f88b8211977f6c7f45e6e215d0" translate="yes" xml:space="preserve">
          <source>String literals can be delimited with either &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; delimited literals can contain &lt;code&gt;&quot;&lt;/code&gt; characters without quoting it like &lt;code&gt;&quot;\&quot;&quot;&lt;/code&gt;. String literals can have values of other variables or expressions interpolated into them, indicated by &lt;code&gt;$variablename&lt;/code&gt; or &lt;code&gt;$(expression)&lt;/code&gt;, which evaluates the variable name or the expression in the context of the function.</source>
          <target state="translated">문자열 리터럴이 중 하나로 구분 될 수있다 &lt;code&gt;&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; , &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 로 구분 리터럴가 포함 할 수있는 &lt;code&gt;&quot;&lt;/code&gt; 처럼 인용하지 않고 문자 &lt;code&gt;&quot;\&quot;&quot;&lt;/code&gt; . 문자열 리터럴이 그들에 보간 다른 변수 나 수식의 값을 가질 수로 표시 &lt;code&gt;$variablename&lt;/code&gt; 또는 &lt;code&gt;$(expression)&lt;/code&gt; : 함수의 컨텍스트에서 변수 이름 또는 표현식을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="2666a29f2d3dd5ab507df0f15105c7cca7b05679" translate="yes" xml:space="preserve">
          <source>String macro used to parse a string to a &lt;a href=&quot;#Base.VersionNumber&quot;&gt;&lt;code&gt;VersionNumber&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">문자열을 &lt;a href=&quot;#Base.VersionNumber&quot;&gt; &lt;code&gt;VersionNumber&lt;/code&gt; &lt;/a&gt; 로 구문 분석하는 데 사용되는 문자열 매크로 입니다.</target>
        </trans-unit>
        <trans-unit id="2f2367222bba5c91ff02194877e2799fcfc6dc16" translate="yes" xml:space="preserve">
          <source>StringIndexError</source>
          <target state="translated">StringIndexError</target>
        </trans-unit>
        <trans-unit id="14d1f2546b36d439d82b2ef0f57773ba6cfc9755" translate="yes" xml:space="preserve">
          <source>Stringify &lt;code&gt;s&lt;/code&gt; and pad the resulting string on the left with &lt;code&gt;p&lt;/code&gt; to make it &lt;code&gt;n&lt;/code&gt; characters (code points) long. If &lt;code&gt;s&lt;/code&gt; is already &lt;code&gt;n&lt;/code&gt; characters long, an equal string is returned. Pad with spaces by default.</source>
          <target state="translated">캐릭터 라인 화 &lt;code&gt;s&lt;/code&gt; 패드 결과 문자열을 왼쪽 &lt;code&gt;p&lt;/code&gt; 는 그것을 만들 &lt;code&gt;n&lt;/code&gt; 개의 문자 (코드 포인트)가 긴. 경우 &lt;code&gt;s&lt;/code&gt; 는 이미 &lt;code&gt;n&lt;/code&gt; 자, 동일한 문자열이 반환됩니다. 기본적으로 공백이있는 패드.</target>
        </trans-unit>
        <trans-unit id="2dee879ee9f6e53d2f84878f42b43ffb4e81c620" translate="yes" xml:space="preserve">
          <source>Stringify &lt;code&gt;s&lt;/code&gt; and pad the resulting string on the right with &lt;code&gt;p&lt;/code&gt; to make it &lt;code&gt;n&lt;/code&gt; characters (code points) long. If &lt;code&gt;s&lt;/code&gt; is already &lt;code&gt;n&lt;/code&gt; characters long, an equal string is returned. Pad with spaces by default.</source>
          <target state="translated">캐릭터 라인 화 &lt;code&gt;s&lt;/code&gt; 패드 결과 문자열 오른쪽에 &lt;code&gt;p&lt;/code&gt; 는 그것을 만들 &lt;code&gt;n&lt;/code&gt; 개의 문자 (코드 포인트)가 긴. 경우 &lt;code&gt;s&lt;/code&gt; 는 이미 &lt;code&gt;n&lt;/code&gt; 자, 동일한 문자열이 반환됩니다. 기본적으로 공백이있는 패드.</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="5483bece6d8fdd352e685ef613bfbfc99ebca003" translate="yes" xml:space="preserve">
          <source>Strings are denoted by double quotation marks (&lt;code&gt;&quot;text&quot;&lt;/code&gt;) in Julia (with three double quotation marks for multi-line strings), whereas in Python they can be denoted either by single (&lt;code&gt;'text'&lt;/code&gt;) or double quotation marks (&lt;code&gt;&quot;text&quot;&lt;/code&gt;). Single quotation marks are used for characters in Julia (&lt;code&gt;'c'&lt;/code&gt;).</source>
          <target state="translated">줄리아에서는 문자열이 큰 따옴표 ( &lt;code&gt;&quot;text&quot;&lt;/code&gt; )로 표시되지만 (여러 줄 문자열에는 3 개의 큰 따옴표가 있음) Python에서는 단일 ( &lt;code&gt;'text'&lt;/code&gt; ) 또는 큰 따옴표 ( &lt;code&gt;&quot;text&quot;&lt;/code&gt; ) 로 표시 될 수 있습니다. ). Julia ( &lt;code&gt;'c'&lt;/code&gt; )의 문자에는 작은 따옴표가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="27fc05e2ce35495054f6f23e339d81c46dea0958" translate="yes" xml:space="preserve">
          <source>Strings are finite sequences of characters. Of course, the real trouble comes when one asks what a character is. The characters that English speakers are familiar with are the letters &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, etc., together with numerals and common punctuation symbols. These characters are standardized together with a mapping to integer values between 0 and 127 by the &lt;a href=&quot;https://en.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt; standard. There are, of course, many other characters used in non-English languages, including variants of the ASCII characters with accents and other modifications, related scripts such as Cyrillic and Greek, and scripts completely unrelated to ASCII and English, including Arabic, Chinese, Hebrew, Hindi, Japanese, and Korean. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Unicode&quot;&gt;Unicode&lt;/a&gt; standard tackles the complexities of what exactly a character is, and is generally accepted as the definitive standard addressing this problem. Depending on your needs, you can either ignore these complexities entirely and just pretend that only ASCII characters exist, or you can write code that can handle any of the characters or encodings that one may encounter when handling non-ASCII text. Julia makes dealing with plain ASCII text simple and efficient, and handling Unicode is as simple and efficient as possible. In particular, you can write C-style string code to process ASCII strings, and they will work as expected, both in terms of performance and semantics. If such code encounters non-ASCII text, it will gracefully fail with a clear error message, rather than silently introducing corrupt results. When this happens, modifying the code to handle non-ASCII data is straightforward.</source>
          <target state="translated">문자열은 유한 문자 시퀀스입니다. 물론, 캐릭터가 무엇인지 물어 보면 실제 문제가 발생합니다. 영어 사용자에게 친숙한 문자 는 숫자 및 공통 문장 부호와 함께 문자 &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;C&lt;/code&gt; 등입니다. 이러한 문자는 &lt;a href=&quot;https://en.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt; 표준에 의해 0에서 127 사이의 정수 값에 대한 맵핑과 함께 표준화됩니다. 물론 영어 이외의 언어로 사용되는 악센트 및 기타 수정이 포함 된 ASCII 문자의 변형, 키릴 문자 및 그리스어와 같은 관련 스크립트, 아랍어, 중국어, 히브리어, 힌디어, 일본어 및 한국어 &lt;a href=&quot;https://en.wikipedia.org/wiki/Unicode&quot;&gt;유니 코드&lt;/a&gt;표준은 캐릭터가 정확히 무엇인지의 복잡성을 다루며 일반적으로이 문제를 해결하는 결정적인 표준으로 받아 들여집니다. 필요에 따라 이러한 복잡성을 완전히 무시하고 ASCII 문자 만 존재하는 것처럼 가장하거나 ASCII가 아닌 텍스트를 처리 할 때 발생할 수있는 문자 나 인코딩을 처리 할 수있는 코드를 작성할 수 있습니다. Julia는 일반 ASCII 텍스트를 간단하고 효율적으로 처리하며, 유니 코드를 처리하는 것은 최대한 간단하고 효율적입니다. 특히 C 스타일 문자열 코드를 작성하여 ASCII 문자열을 처리 할 수 ​​있으며 성능과 의미 측면에서 예상대로 작동합니다. 이러한 코드가 ASCII가 아닌 텍스트를 발견하면 손상된 결과를 자동으로 표시하지 않고 명확한 오류 메시지와 함께 정상적으로 실패합니다. 이런 일이 발생하면비 ASCII 데이터를 처리하도록 코드를 수정하는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="ff9264bdea73f7d90a997f7102744f9feacede53" translate="yes" xml:space="preserve">
          <source>Strings in Julia can contain invalid UTF-8 code unit sequences. This convention allows to treat any byte sequence as a &lt;code&gt;String&lt;/code&gt;. In such situations a rule is that when parsing a sequence of code units from left to right characters are formed by the longest sequence of 8-bit code units that matches the start of one of the following bit patterns (each &lt;code&gt;x&lt;/code&gt; can be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;):</source>
          <target state="translated">Julia의 문자열은 잘못된 UTF-8 코드 단위 시퀀스를 포함 할 수 있습니다. 이 규칙을 사용하면 모든 바이트 시퀀스를 &lt;code&gt;String&lt;/code&gt; 으로 처리 할 수 ​​있습니다 . 이러한 상황에서 규칙은 왼쪽에서 오른쪽으로 일련의 코드 단위를 구문 분석 할 때 다음 비트 패턴 중 하나의 시작과 일치하는 8 비트 코드 단위의 가장 긴 시퀀스에 의해 형성됩니다 (각 &lt;code&gt;x&lt;/code&gt; 는 &lt;code&gt;0&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 일 수 있음) ) :</target>
        </trans-unit>
        <trans-unit id="2c6b5c7b7464a13a4bd9a10714601b47c64d7afa" translate="yes" xml:space="preserve">
          <source>Stripping of the newline is performed after the dedentation. For example:</source>
          <target state="translated">줄 바꿈 제거는 dedentation 후에 수행됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e2f37ccb2c16f3abeb2d87b8d8581df12c7b20db" translate="yes" xml:space="preserve">
          <source>Struct Type Correspondences</source>
          <target state="translated">구조체 유형 대응</target>
        </trans-unit>
        <trans-unit id="8e52156f48fe5e18d9158e0bf380625b73585edb" translate="yes" xml:space="preserve">
          <source>Struct Type correspondences</source>
          <target state="translated">스 트럭 트 타입 대응</target>
        </trans-unit>
        <trans-unit id="74b4f2ed89813f9a73f7270d61c097ff9c059dd6" translate="yes" xml:space="preserve">
          <source>Style Guide</source>
          <target state="translated">스타일 가이드</target>
        </trans-unit>
        <trans-unit id="f0fc4c0f301fa1cd98fffd459f3e816f1d1be499" translate="yes" xml:space="preserve">
          <source>Stylistic Conventions</source>
          <target state="translated">양식 적 협약</target>
        </trans-unit>
        <trans-unit id="d33a5e5c8ae43e574fef238ba024c611e060bc6a" translate="yes" xml:space="preserve">
          <source>SubString</source>
          <target state="translated">SubString</target>
        </trans-unit>
        <trans-unit id="1735d112eb1a073857a19694bff82f86c7249ae2" translate="yes" xml:space="preserve">
          <source>Subnormal numbers, formerly called &lt;a href=&quot;https://en.wikipedia.org/wiki/Denormal_number&quot;&gt;denormal numbers&lt;/a&gt;, are useful in many contexts, but incur a performance penalty on some hardware. A call &lt;a href=&quot;../../base/numbers/index#Base.Rounding.set_zero_subnormals&quot;&gt;&lt;code&gt;set_zero_subnormals(true)&lt;/code&gt;&lt;/a&gt; grants permission for floating-point operations to treat subnormal inputs or outputs as zeros, which may improve performance on some hardware. A call &lt;a href=&quot;../../base/numbers/index#Base.Rounding.set_zero_subnormals&quot;&gt;&lt;code&gt;set_zero_subnormals(false)&lt;/code&gt;&lt;/a&gt; enforces strict IEEE behavior for subnormal numbers.</source>
          <target state="translated">이전에는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Denormal_number&quot;&gt;비정규 숫자&lt;/a&gt; 라고하는 비정규 숫자 는 많은 상황에서 유용하지만 일부 하드웨어에서는 성능이 저하됩니다. &lt;a href=&quot;../../base/numbers/index#Base.Rounding.set_zero_subnormals&quot;&gt; &lt;code&gt;set_zero_subnormals(true)&lt;/code&gt; &lt;/a&gt; 호출 은 부동 소수점 연산에 비정규 입력 또는 출력을 0으로 처리하여 일부 하드웨어의 성능을 향상시킬 수있는 권한을 부여합니다. &lt;a href=&quot;../../base/numbers/index#Base.Rounding.set_zero_subnormals&quot;&gt; &lt;code&gt;set_zero_subnormals(false)&lt;/code&gt; &lt;/a&gt; 호출 은 비정규 숫자에 대해 엄격한 IEEE 동작을 강제합니다.</target>
        </trans-unit>
        <trans-unit id="9237c454117d3b4f9ff2c5ff30dde934aadd6f87" translate="yes" xml:space="preserve">
          <source>Subscript Eight / Subscript Digit Eight</source>
          <target state="translated">첨자 8 / 첨자 숫자 8</target>
        </trans-unit>
        <trans-unit id="ba52e0566cd0a38176a108c741a02b773369b94f" translate="yes" xml:space="preserve">
          <source>Subscript Equals Sign</source>
          <target state="translated">아래 첨자 기호</target>
        </trans-unit>
        <trans-unit id="82b3713419093bd5ef3c780fccac0baab312f553" translate="yes" xml:space="preserve">
          <source>Subscript Five / Subscript Digit Five</source>
          <target state="translated">아래 첨자 5 / 아래 첨자 숫자 5</target>
        </trans-unit>
        <trans-unit id="199ac2ac3e680cebe0fc1b2bfe1d1e7f5aed0ce5" translate="yes" xml:space="preserve">
          <source>Subscript Four / Subscript Digit Four</source>
          <target state="translated">아래 첨자 4 / 아래 첨자 숫자 4</target>
        </trans-unit>
        <trans-unit id="5d406d549975b95e7e819e9179ff88c862b3bfa8" translate="yes" xml:space="preserve">
          <source>Subscript Left Parenthesis / Subscript Opening Parenthesis</source>
          <target state="translated">아래 첨자 왼쪽 괄호 / 아래 첨자 괄호</target>
        </trans-unit>
        <trans-unit id="f3ce2de59aae8e2e1c1f79872fd820e4cc87f4b3" translate="yes" xml:space="preserve">
          <source>Subscript Minus / Subscript Hyphen-Minus</source>
          <target state="translated">첨자 빼기 / 첨자 하이픈 빼기</target>
        </trans-unit>
        <trans-unit id="577b8a494de3adb36134005360140a628ef6b4d4" translate="yes" xml:space="preserve">
          <source>Subscript Nine / Subscript Digit Nine</source>
          <target state="translated">아래 첨자 9 / 아래 첨자 자리 9</target>
        </trans-unit>
        <trans-unit id="d3e9ed9eccefa65352d19462f0b537d0dddadc0f" translate="yes" xml:space="preserve">
          <source>Subscript One / Subscript Digit One</source>
          <target state="translated">첨자 하나 / 첨자 숫자 하나</target>
        </trans-unit>
        <trans-unit id="4bcaaa0826d4822ea8131400374d3309c9a7240e" translate="yes" xml:space="preserve">
          <source>Subscript Plus Sign</source>
          <target state="translated">아래 첨자 더하기 기호</target>
        </trans-unit>
        <trans-unit id="0e9c536a2536de4e96d577eb514197aca26a0343" translate="yes" xml:space="preserve">
          <source>Subscript Right Parenthesis / Subscript Closing Parenthesis</source>
          <target state="translated">아래 첨자 오른쪽 괄호 / 아래 첨자 괄호</target>
        </trans-unit>
        <trans-unit id="399fc9610401209e8828360a9909c90846a17709" translate="yes" xml:space="preserve">
          <source>Subscript Seven / Subscript Digit Seven</source>
          <target state="translated">아래 첨자 7 / 아래 첨자 Digit Seven</target>
        </trans-unit>
        <trans-unit id="5c3469665f379117ff5c39679d6093e3c3fa9f02" translate="yes" xml:space="preserve">
          <source>Subscript Six / Subscript Digit Six</source>
          <target state="translated">아래 첨자 6 / 아래 첨자 숫자 6</target>
        </trans-unit>
        <trans-unit id="b87a2f84a83c036f62a9ddc9464258420f5247f7" translate="yes" xml:space="preserve">
          <source>Subscript Three / Subscript Digit Three</source>
          <target state="translated">첨자 3 / 첨자 숫자 3</target>
        </trans-unit>
        <trans-unit id="070e18f0e0fc06250de00d279adcc668d90db268" translate="yes" xml:space="preserve">
          <source>Subscript Two / Subscript Digit Two</source>
          <target state="translated">첨자 2 / 첨자 숫자 2</target>
        </trans-unit>
        <trans-unit id="2cadf24473f264b45f7a9892fa77aacff9741f8f" translate="yes" xml:space="preserve">
          <source>Subscript Zero / Subscript Digit Zero</source>
          <target state="translated">아래 첨자 제로 / 아래 첨자 제로</target>
        </trans-unit>
        <trans-unit id="36a1588bb3a0ff0c683d30f19c6f057f9ddfa1aa" translate="yes" xml:space="preserve">
          <source>Subsequences, permutations and shuffling</source>
          <target state="translated">하위 시퀀스, 순열 및 셔플 링</target>
        </trans-unit>
        <trans-unit id="c11ee5c6ad8ae244c9b52e6598da0116617c7867" translate="yes" xml:space="preserve">
          <source>Subset Above Subset</source>
          <target state="translated">서브 세트 위 서브 세트</target>
        </trans-unit>
        <trans-unit id="c02369450366ff08b85893d6637369fa29eb45e4" translate="yes" xml:space="preserve">
          <source>Subset Above Superset</source>
          <target state="translated">수퍼 세트 위의 서브 세트</target>
        </trans-unit>
        <trans-unit id="da1064a609e34bd3975e5986db4b3b12d2431a95" translate="yes" xml:space="preserve">
          <source>Subset Of</source>
          <target state="translated">서브 세트</target>
        </trans-unit>
        <trans-unit id="b45c5fe31f767e593d8fc0b53fe13bcccb52d15b" translate="yes" xml:space="preserve">
          <source>Subset Of Above Almost Equal To</source>
          <target state="translated">거의 동일한 위의 하위 집합</target>
        </trans-unit>
        <trans-unit id="8a2e37288f3a0a131199387906aa83eea5d90033" translate="yes" xml:space="preserve">
          <source>Subset Of Above Equals Sign</source>
          <target state="translated">위의 서브 세트</target>
        </trans-unit>
        <trans-unit id="f7120973aa2e62261f26f8d3bc8c0a236e23015c" translate="yes" xml:space="preserve">
          <source>Subset Of Above Equals Sign + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">위의 하위 집합은 부호 + 긴 Solidus 오버레이 / 비 간격 긴 슬래시 ​​오버레이 결합</target>
        </trans-unit>
        <trans-unit id="87a5e56877bb630e39855b812ce6bf81d1a9397d" translate="yes" xml:space="preserve">
          <source>Subset Of Above Not Equal To</source>
          <target state="translated">위와 같지 않은 하위 집합</target>
        </trans-unit>
        <trans-unit id="6b146f1eda2190f5187ab4511c496d759d35b0ce" translate="yes" xml:space="preserve">
          <source>Subset Of Above Tilde Operator</source>
          <target state="translated">틸드 연산자 위의 서브셋</target>
        </trans-unit>
        <trans-unit id="0b8c94cc3140a3c2d0e68f82aefd4339c446acd8" translate="yes" xml:space="preserve">
          <source>Subset Of Or Equal To</source>
          <target state="translated">서브 세트 또는 같음</target>
        </trans-unit>
        <trans-unit id="7239311d2a2fb94f88e2f63464c2739a4f03da88" translate="yes" xml:space="preserve">
          <source>Subset Of Or Equal To With Dot Above</source>
          <target state="translated">위의 점과 부분 집합 또는 같음</target>
        </trans-unit>
        <trans-unit id="4d55a499e9b605760fa7f48439194536c0d6c3aa" translate="yes" xml:space="preserve">
          <source>Subset Of With Not Equal To / Subset Of Or Not Equal To</source>
          <target state="translated">같지 않은 서브셋 / 같지 않은 서브셋</target>
        </trans-unit>
        <trans-unit id="b8c061785b8cae371e317d7472e7660cc14a77f6" translate="yes" xml:space="preserve">
          <source>Subset Of With Not Equal To / Subset Of Or Not Equal To + Variation Selector-1</source>
          <target state="translated">같지 않거나 같지 않은 서브 세트 + 변형 선택기 -1</target>
        </trans-unit>
        <trans-unit id="8d4d7361d965f9fd7bb4182ac9fb63b617dc4827" translate="yes" xml:space="preserve">
          <source>Subset With Dot</source>
          <target state="translated">도트가있는 서브 세트</target>
        </trans-unit>
        <trans-unit id="e94f26b66eb38c2f4cedbbbf44cac159ab2f274c" translate="yes" xml:space="preserve">
          <source>Subset With Multiplication Sign Below</source>
          <target state="translated">아래의 곱셈 부호가있는 부분 집합</target>
        </trans-unit>
        <trans-unit id="95943f38615b243167e7e46a7cc4588af218f78a" translate="yes" xml:space="preserve">
          <source>Subset With Plus Sign Below</source>
          <target state="translated">아래 더하기 기호가있는 부분 집합</target>
        </trans-unit>
        <trans-unit id="0a53b7272be1b2ec1f139c7470687452b9db9107" translate="yes" xml:space="preserve">
          <source>SubstitutionString</source>
          <target state="translated">SubstitutionString</target>
        </trans-unit>
        <trans-unit id="965303657df516e921368caa8ca36403d3db0e9e" translate="yes" xml:space="preserve">
          <source>Subtraction operator.</source>
          <target state="translated">빼기 연산자.</target>
        </trans-unit>
        <trans-unit id="ecab2082cd6b2644a4eedbfa5522237cff1d69ff" translate="yes" xml:space="preserve">
          <source>Subtype of &lt;a href=&quot;#Base.IndexStyle&quot;&gt;&lt;code&gt;IndexStyle&lt;/code&gt;&lt;/a&gt; used to describe arrays which are optimally indexed by a Cartesian index.</source>
          <target state="translated">데카르트 인덱스에 의해 최적으로 인덱스 된 배열을 설명하는 데 사용되는 &lt;a href=&quot;#Base.IndexStyle&quot;&gt; &lt;code&gt;IndexStyle&lt;/code&gt; 의&lt;/a&gt; 하위 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="91b4f0e73dab1abbf1d78b29130f933f78d7f45d" translate="yes" xml:space="preserve">
          <source>Subtype of &lt;a href=&quot;#Base.IndexStyle&quot;&gt;&lt;code&gt;IndexStyle&lt;/code&gt;&lt;/a&gt; used to describe arrays which are optimally indexed by a Cartesian index. This is the default for new custom &lt;a href=&quot;#Core.AbstractArray&quot;&gt;&lt;code&gt;AbstractArray&lt;/code&gt;&lt;/a&gt; subtypes.</source>
          <target state="translated">데카르트 인덱스에 의해 최적으로 인덱싱되는 배열을 설명하는 데 사용되는 &lt;a href=&quot;#Base.IndexStyle&quot;&gt; &lt;code&gt;IndexStyle&lt;/code&gt; 의&lt;/a&gt; 하위 유형입니다 . 이것은 새로운 사용자 정의 &lt;a href=&quot;#Core.AbstractArray&quot;&gt; &lt;code&gt;AbstractArray&lt;/code&gt; &lt;/a&gt; 하위 유형 의 기본값입니다 .</target>
        </trans-unit>
        <trans-unit id="366e9732cc2b0659cee59a67a6d30b581a73aaca" translate="yes" xml:space="preserve">
          <source>Subtype of &lt;a href=&quot;#Base.IndexStyle&quot;&gt;&lt;code&gt;IndexStyle&lt;/code&gt;&lt;/a&gt; used to describe arrays which are optimally indexed by one linear index.</source>
          <target state="translated">하나의 선형 인덱스로 최적으로 인덱스 된 배열을 설명하는 데 사용되는 &lt;a href=&quot;#Base.IndexStyle&quot;&gt; &lt;code&gt;IndexStyle&lt;/code&gt; 의&lt;/a&gt; 하위 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="4e92cd11b1471ce26a007ed60bbf7470092a84fc" translate="yes" xml:space="preserve">
          <source>Subtype operator: returns &lt;code&gt;true&lt;/code&gt; if and only if all values of type &lt;code&gt;T1&lt;/code&gt; are also of type &lt;code&gt;T2&lt;/code&gt;.</source>
          <target state="translated">하위 유형 운영자 : 반환 &lt;code&gt;true&lt;/code&gt; 여부와 유형의 모든 값 경우에만 &lt;code&gt;T1&lt;/code&gt; 은 또한 유형의이다 &lt;code&gt;T2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41fafa5132cb43252ca4424f7d7ea15ee14ebaec" translate="yes" xml:space="preserve">
          <source>Subtypes &lt;code&gt;MyIrrational &amp;lt;: AbstractIrrational&lt;/code&gt; should implement at least &lt;code&gt;==(::MyIrrational, ::MyIrrational)&lt;/code&gt;, &lt;code&gt;hash(x::MyIrrational, h::UInt)&lt;/code&gt;, and &lt;code&gt;convert(::Type{F}, x::MyIrrational) where {F &amp;lt;: Union{BigFloat,Float32,Float64}}&lt;/code&gt;.</source>
          <target state="translated">하위 유형 &lt;code&gt;MyIrrational &amp;lt;: AbstractIrrational&lt;/code&gt; 은 최소한 &lt;code&gt;==(::MyIrrational, ::MyIrrational)&lt;/code&gt; , &lt;code&gt;hash(x::MyIrrational, h::UInt)&lt;/code&gt; 및 &lt;code&gt;convert(::Type{F}, x::MyIrrational) where {F &amp;lt;: Union{BigFloat,Float32,Float64}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6afa8e3c1c1fd3ab82b4da97360accfe909d1a9" translate="yes" xml:space="preserve">
          <source>Succeeds</source>
          <target state="translated">Succeeds</target>
        </trans-unit>
        <trans-unit id="56a6c5d7720e34385b68f0cb530741898b7206c8" translate="yes" xml:space="preserve">
          <source>Succeeds Above Almost Equal To</source>
          <target state="translated">거의 동등 이상 성공</target>
        </trans-unit>
        <trans-unit id="0358d8792b735db2a62594aee461f9b7ad529507" translate="yes" xml:space="preserve">
          <source>Succeeds Above Equals Sign</source>
          <target state="translated">등호 위의 성공</target>
        </trans-unit>
        <trans-unit id="9c58f89de2523b860b0fb76b3972c369cd77dc12" translate="yes" xml:space="preserve">
          <source>Succeeds Above Not Almost Equal To</source>
          <target state="translated">거의 같지 않은 위의 성공</target>
        </trans-unit>
        <trans-unit id="78d42f15a7702e11eb4d09ab2cc42685148fa61c" translate="yes" xml:space="preserve">
          <source>Succeeds Above Not Equal To</source>
          <target state="translated">위와 같지 않은 성공</target>
        </trans-unit>
        <trans-unit id="9f23a7b1dd190dd42ad30bafd57473cbe57d5d84" translate="yes" xml:space="preserve">
          <source>Succeeds Above Single-Line Equals Sign</source>
          <target state="translated">한 줄 이상의 부호가 성공 함</target>
        </trans-unit>
        <trans-unit id="bf68ad34d5bb2f1403d6af24d63711db818359af" translate="yes" xml:space="preserve">
          <source>Succeeds Above Single-Line Equals Sign + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">한 줄 이상 일치 부호 + 긴 솔리드 오버레이 / 비 간격 긴 슬래시 ​​오버레이 결합</target>
        </trans-unit>
        <trans-unit id="b4c6c6202539c00ca3e31c8719afede06922d1ca" translate="yes" xml:space="preserve">
          <source>Succeeds Above Single-Line Not Equal To</source>
          <target state="translated">단일 라인 위와 같지 않음</target>
        </trans-unit>
        <trans-unit id="c471cf8acc9aac08a44fad4978ff3f88a79cee5d" translate="yes" xml:space="preserve">
          <source>Succeeds But Not Equivalent To</source>
          <target state="translated">성공하지만 동등하지 않음</target>
        </trans-unit>
        <trans-unit id="cc212c7520be81f6097c80c21092de2f0c2fb05f" translate="yes" xml:space="preserve">
          <source>Succeeds Or Equal To</source>
          <target state="translated">성공하거나 같음</target>
        </trans-unit>
        <trans-unit id="d30fea29a2b6a3dff938b98c21704d968c09b1e2" translate="yes" xml:space="preserve">
          <source>Succeeds Or Equivalent To</source>
          <target state="translated">성공 또는 동등</target>
        </trans-unit>
        <trans-unit id="7da856b7cbf62aff303a61b5bee35e928ade612f" translate="yes" xml:space="preserve">
          <source>Succeeds Or Equivalent To + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">긴 Solidus 오버레이 / 비 간격 Long 슬래시 오버레이 결합 +에 해당</target>
        </trans-unit>
        <trans-unit id="fd1f2c63d7da26096b0ed331b59da82c50f2076f" translate="yes" xml:space="preserve">
          <source>Succeeds Under Relation</source>
          <target state="translated">관계에 성공</target>
        </trans-unit>
        <trans-unit id="f2d84e087b466cc95aebf9e64592745ab867a8aa" translate="yes" xml:space="preserve">
          <source>Successfully finished executing</source>
          <target state="translated">성공적으로 실행 완료</target>
        </trans-unit>
        <trans-unit id="40e453febd26d8b4b89cc63c9b22088970749b3d" translate="yes" xml:space="preserve">
          <source>Such a function should either check the operation to ensure it is safe, or have &lt;code&gt;unsafe&lt;/code&gt; somewhere in its name to alert callers.</source>
          <target state="translated">이러한 기능은 작업이 안전한지 확인하거나 호출자에게 경고하기 위해 이름의 어딘가에 &lt;code&gt;unsafe&lt;/code&gt; 않은지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="999940a2d3ebad2ecbde285214725ccab2ccdab9" translate="yes" xml:space="preserve">
          <source>Such definitions correspond to methods whose type signatures are &lt;code&gt;UnionAll&lt;/code&gt; types (see &lt;a href=&quot;../types/index#UnionAll-Types&quot;&gt;UnionAll Types&lt;/a&gt;).</source>
          <target state="translated">이러한 정의는 유형 서명이 &lt;code&gt;UnionAll&lt;/code&gt; 유형 인 메서드에 해당합니다 ( &lt;a href=&quot;../types/index#UnionAll-Types&quot;&gt;UnionAll 유형&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3bea0574a65a636f8e2ce0cc1de987b8fbd8c80f" translate="yes" xml:space="preserve">
          <source>Such definitions correspond to methods whose type signatures are &lt;code&gt;UnionAll&lt;/code&gt; types (see &lt;a href=&quot;../types/index#UnionAll-Types-1&quot;&gt;UnionAll Types&lt;/a&gt;).</source>
          <target state="translated">이러한 정의는 형식 서명이 &lt;code&gt;UnionAll&lt;/code&gt; 형식 인 메서드에 해당합니다 ( &lt;a href=&quot;../types/index#UnionAll-Types-1&quot;&gt;UnionAll 형식&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d0bca688d3007aabd88d8ccf76e53db717f51d37" translate="yes" xml:space="preserve">
          <source>Suggest that collection &lt;code&gt;s&lt;/code&gt; reserve capacity for at least &lt;code&gt;n&lt;/code&gt; elements. This can improve performance.</source>
          <target state="translated">그 제안 컬렉션 &lt;code&gt;s&lt;/code&gt; 적어도위한 예비 용량 &lt;code&gt;n&lt;/code&gt; 소자. 이것은 성능을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04e0d6b55d3d39023e9fb987810cee60447a287e" translate="yes" xml:space="preserve">
          <source>Suggestion: fix the function, or if necessary annotate the return value</source>
          <target state="translated">제안 : 함수를 수정하거나 필요한 경우 반환 값에 주석을 답니다.</target>
        </trans-unit>
        <trans-unit id="9d9230912b61ce9b77640f17424369d72a748ecc" translate="yes" xml:space="preserve">
          <source>Suggestion: make the return value type-stable, even if you have to annotate it</source>
          <target state="translated">제안 : 주석을 달아야하더라도 반환 값을 안정적으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="482c6f377ae837ac3c02149a6b4cdb4b1e23e80f" translate="yes" xml:space="preserve">
          <source>Suggestion: use arrays with better-defined types, or if necessary annotate the type of individual element accesses</source>
          <target state="translated">제안 : 더 잘 정의 된 유형의 배열을 사용하거나 필요한 경우 개별 요소 액세스 유형에 주석을 추가하십시오</target>
        </trans-unit>
        <trans-unit id="c3db1c6165abca162a29074e2ec4bfe74fe3f7ab" translate="yes" xml:space="preserve">
          <source>Suggestion: use concrete types like &lt;code&gt;Array{T,3}&lt;/code&gt; or &lt;code&gt;Array{T,N}&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is now a parameter of &lt;code&gt;ArrayContainer&lt;/code&gt;</source>
          <target state="translated">제안 : &lt;code&gt;Array{T,3}&lt;/code&gt; 또는 &lt;code&gt;Array{T,N}&lt;/code&gt; 과 같은 구체적인 유형을 사용하십시오 . 여기서 &lt;code&gt;N&lt;/code&gt; 은 이제 &lt;code&gt;ArrayContainer&lt;/code&gt; 의 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="80e4711b72dd222829e242696915ebeeea1aa1eb" translate="yes" xml:space="preserve">
          <source>Sum elements of &lt;code&gt;A&lt;/code&gt; over the singleton dimensions of &lt;code&gt;r&lt;/code&gt;, and write results to &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">합계 요소 의 싱글 치수 위에 &lt;code&gt;r&lt;/code&gt; 로하고, 기록 결과 &lt;code&gt;r&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a4d78b1d6a6e74f97303d7d95544bc9a4fb52bf" translate="yes" xml:space="preserve">
          <source>Sum elements of an array over the given dimensions.</source>
          <target state="translated">주어진 차원에 대한 배열의 요소를 합칩니다.</target>
        </trans-unit>
        <trans-unit id="f606a3a34b5ca6b62e1eb740e74a1d4c5303ed5c" translate="yes" xml:space="preserve">
          <source>Sum of the absolute values of the first &lt;code&gt;n&lt;/code&gt; elements of array &lt;code&gt;X&lt;/code&gt; with stride &lt;code&gt;incx&lt;/code&gt;.</source>
          <target state="translated">보폭 &lt;code&gt;incx&lt;/code&gt; 를 갖는 배열 &lt;code&gt;X&lt;/code&gt; 의 첫 번째 &lt;code&gt;n&lt;/code&gt; 요소의 절대 값의 합입니다 .</target>
        </trans-unit>
        <trans-unit id="dfec37391a017695975d7685c5a3872ea343978b" translate="yes" xml:space="preserve">
          <source>Sum the results of calling function &lt;code&gt;f&lt;/code&gt; on each element of &lt;code&gt;itr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;itr&lt;/code&gt; 의 각 요소에서 함수 &lt;code&gt;f&lt;/code&gt; 를 호출 한 결과를 합산하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d22dfde69ea28bc2dfc61a862226f883f8309e6" translate="yes" xml:space="preserve">
          <source>Summary of module usage</source>
          <target state="translated">모듈 사용 요약</target>
        </trans-unit>
        <trans-unit id="83d38f288ba66773283f63e72ee13d0499ac1e0f" translate="yes" xml:space="preserve">
          <source>Summation With Integral</source>
          <target state="translated">적분으로 요약</target>
        </trans-unit>
        <trans-unit id="48c98cab7866e606328c99289ed24e339393b5ab" translate="yes" xml:space="preserve">
          <source>Sun</source>
          <target state="translated">Sun</target>
        </trans-unit>
        <trans-unit id="8ab819d7fb578810e4192ca5e319c51b238df8b8" translate="yes" xml:space="preserve">
          <source>Sun Behind Cloud</source>
          <target state="translated">구름 뒤에 태양</target>
        </trans-unit>
        <trans-unit id="43c10f59a19251f9e5351c9dbdfc352b72440c55" translate="yes" xml:space="preserve">
          <source>Sun With Face</source>
          <target state="translated">얼굴을 가진 태양</target>
        </trans-unit>
        <trans-unit id="3a1480394fe36756f7374cefed997e5a148ea79d" translate="yes" xml:space="preserve">
          <source>Sunflower</source>
          <target state="translated">Sunflower</target>
        </trans-unit>
        <trans-unit id="fadf71c7ea92e6416fd6d89969f8e78a115cd3c1" translate="yes" xml:space="preserve">
          <source>Sunrise</source>
          <target state="translated">Sunrise</target>
        </trans-unit>
        <trans-unit id="c13e7e7e6a43c1df0effdcfaa21536a0595e7427" translate="yes" xml:space="preserve">
          <source>Sunrise Over Mountains</source>
          <target state="translated">산과 일출</target>
        </trans-unit>
        <trans-unit id="7fc250d8444720a5a7d1523fac30a584989bdc03" translate="yes" xml:space="preserve">
          <source>Sunset Over Buildings</source>
          <target state="translated">건물 위에 일몰</target>
        </trans-unit>
        <trans-unit id="fc62316e6ffe4dd5a974bb8bf4af7453f1461891" translate="yes" xml:space="preserve">
          <source>Superscript Eight / Superscript Digit Eight</source>
          <target state="translated">위첨자 8 / 위첨자 숫자 8</target>
        </trans-unit>
        <trans-unit id="df2984f6c66b33f83e0e16ead40192c5b50e49cf" translate="yes" xml:space="preserve">
          <source>Superscript Equals Sign</source>
          <target state="translated">위첨자 기호</target>
        </trans-unit>
        <trans-unit id="77f530ce4fcc88959736942111c035c02abc9ca1" translate="yes" xml:space="preserve">
          <source>Superscript Five / Superscript Digit Five</source>
          <target state="translated">위첨자 5 / 위첨자 숫자 5</target>
        </trans-unit>
        <trans-unit id="8d8be90f97b084d838a7d6d1e18ec32b625807d5" translate="yes" xml:space="preserve">
          <source>Superscript Four / Superscript Digit Four</source>
          <target state="translated">위첨자 4 / 위첨자 숫자 4</target>
        </trans-unit>
        <trans-unit id="8104c1f808e09a272812d284b7657523966b8320" translate="yes" xml:space="preserve">
          <source>Superscript Latin Small Letter I</source>
          <target state="translated">위첨자 라틴어 소문자 I</target>
        </trans-unit>
        <trans-unit id="9d3873ff02b0504dda05f79e624b41efb67e554a" translate="yes" xml:space="preserve">
          <source>Superscript Latin Small Letter N</source>
          <target state="translated">위첨자 라틴어 소문자 N</target>
        </trans-unit>
        <trans-unit id="c49c2b620343b97769db798e8194ffd45b101c38" translate="yes" xml:space="preserve">
          <source>Superscript Left Parenthesis / Superscript Opening Parenthesis</source>
          <target state="translated">위첨자 왼쪽 괄호 / 위첨자 괄호</target>
        </trans-unit>
        <trans-unit id="17bfd468940dcf3c53f999a2120c6fbcb51d6209" translate="yes" xml:space="preserve">
          <source>Superscript Minus / Superscript Hyphen-Minus</source>
          <target state="translated">위첨자 빼기 / 위첨자 빼기</target>
        </trans-unit>
        <trans-unit id="39dedb926f349b31470fd3ded8fd6d3253317b59" translate="yes" xml:space="preserve">
          <source>Superscript Nine / Superscript Digit Nine</source>
          <target state="translated">위첨자 9 / 위첨자 9 자리</target>
        </trans-unit>
        <trans-unit id="bb1d4432ea38f74fd9fa77917a87ccc852606d50" translate="yes" xml:space="preserve">
          <source>Superscript One / Superscript Digit One</source>
          <target state="translated">위첨자 / 위첨자</target>
        </trans-unit>
        <trans-unit id="8a51f04374184578e4077d11e4b0bd2db582fe20" translate="yes" xml:space="preserve">
          <source>Superscript Plus Sign</source>
          <target state="translated">위첨자 더하기 기호</target>
        </trans-unit>
        <trans-unit id="1dcd4903e2114dda6cfd1e4424b38b3da07f1b17" translate="yes" xml:space="preserve">
          <source>Superscript Right Parenthesis / Superscript Closing Parenthesis</source>
          <target state="translated">위첨자 오른쪽 괄호 / 위첨자 괄호</target>
        </trans-unit>
        <trans-unit id="5f7d1e2d4eb0cb8596203709e246dba9f1d6d8ed" translate="yes" xml:space="preserve">
          <source>Superscript Seven / Superscript Digit Seven</source>
          <target state="translated">위첨자 7 / 위첨자 7 자리</target>
        </trans-unit>
        <trans-unit id="71ac40e1734bb8bc7c077a0aa61e26f0fc110954" translate="yes" xml:space="preserve">
          <source>Superscript Six / Superscript Digit Six</source>
          <target state="translated">위첨자 6 / 위첨자 6 자리</target>
        </trans-unit>
        <trans-unit id="3a0bf970eb2de9ba12e66a3e43afcfcff0b87019" translate="yes" xml:space="preserve">
          <source>Superscript Three / Superscript Digit Three</source>
          <target state="translated">위첨자 3 / 위첨자 숫자 3</target>
        </trans-unit>
        <trans-unit id="ffea356037ba164ab85b9712622454a944f84967" translate="yes" xml:space="preserve">
          <source>Superscript Two / Superscript Digit Two</source>
          <target state="translated">위첨자 2 / 위첨자 숫자 2</target>
        </trans-unit>
        <trans-unit id="dbd9b378d4c67f16cb5641a483a19e85ae958d32" translate="yes" xml:space="preserve">
          <source>Superscript Zero / Superscript Digit Zero</source>
          <target state="translated">위첨자 제로 / 위첨자 제로</target>
        </trans-unit>
        <trans-unit id="e5299730570b04c01bc81123a7d814f44008382e" translate="yes" xml:space="preserve">
          <source>Superset Above Subset</source>
          <target state="translated">서브 세트 위의 슈퍼 세트</target>
        </trans-unit>
        <trans-unit id="2f438ac9effe753a07f20646d2055c5b640cc28b" translate="yes" xml:space="preserve">
          <source>Superset Above Superset</source>
          <target state="translated">슈퍼 세트 위 슈퍼 세트</target>
        </trans-unit>
        <trans-unit id="70fd40e9b30b98f4c3a414cbc4a28968f4deba3b" translate="yes" xml:space="preserve">
          <source>Superset Beside And Joined By Dash With Subset</source>
          <target state="translated">서브 세트 옆에 대시가 있고 합쳐진 수퍼 세트</target>
        </trans-unit>
        <trans-unit id="b7f126cc4d2696b2a22931bbb0511f554cf35e75" translate="yes" xml:space="preserve">
          <source>Superset Beside Subset</source>
          <target state="translated">서브 세트 옆에있는 슈퍼 세트</target>
        </trans-unit>
        <trans-unit id="5324308b2a19e6ef5bf3173644670cde6bc3bf1c" translate="yes" xml:space="preserve">
          <source>Superset Of</source>
          <target state="translated">슈퍼 세트</target>
        </trans-unit>
        <trans-unit id="3e65a8a930f9a4de2d0bc065a433e9a2f7a58e70" translate="yes" xml:space="preserve">
          <source>Superset Of Above Almost Equal To</source>
          <target state="translated">거의 동일한 위의 수퍼 셋</target>
        </trans-unit>
        <trans-unit id="7f2c049156076047dfb0f245cb9aef1a1d8acd6c" translate="yes" xml:space="preserve">
          <source>Superset Of Above Equals Sign</source>
          <target state="translated">위의 슈퍼 세트 기호</target>
        </trans-unit>
        <trans-unit id="18d1f5c9dd4a4818b9da76db78be48a2999fc6c7" translate="yes" xml:space="preserve">
          <source>Superset Of Above Equals Sign + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">위의 수퍼 셋은 부호 + 긴 Solidus 오버레이 / 비 간격 긴 슬래시 ​​오버레이 결합</target>
        </trans-unit>
        <trans-unit id="a7abc8894592f65f4082b7bead1e2eaea4e10516" translate="yes" xml:space="preserve">
          <source>Superset Of Above Not Equal To</source>
          <target state="translated">같지 않은 위의 수퍼 셋</target>
        </trans-unit>
        <trans-unit id="09fc3ed9108472bb01f34c97fedf7d3c682b20f3" translate="yes" xml:space="preserve">
          <source>Superset Of Above Tilde Operator</source>
          <target state="translated">물결표 연산자 위의 수퍼 셋</target>
        </trans-unit>
        <trans-unit id="6793928a2897b21b9b8a9c988bd915776f6556aa" translate="yes" xml:space="preserve">
          <source>Superset Of Or Equal To</source>
          <target state="translated">슈퍼 세트 또는 같음</target>
        </trans-unit>
        <trans-unit id="37351c13ef5db0f633546f313f29f730e7eb1c2b" translate="yes" xml:space="preserve">
          <source>Superset Of Or Equal To With Dot Above</source>
          <target state="translated">위의 점과 같거나 같음</target>
        </trans-unit>
        <trans-unit id="d464cc0483da2fe7a879193c8e36244e8e1bea22" translate="yes" xml:space="preserve">
          <source>Superset Of With Not Equal To / Superset Of Or Not Equal To</source>
          <target state="translated">같지 않거나 같지 않은 수퍼 셋</target>
        </trans-unit>
        <trans-unit id="72fe67e26a73867ab1bdc4b605d4de39109d2faf" translate="yes" xml:space="preserve">
          <source>Superset Of With Not Equal To / Superset Of Or Not Equal To + Variation Selector-1</source>
          <target state="translated">같지 않거나 같지 않거나 + 같지 않은 수퍼 셋 + 변형 선택기 -1</target>
        </trans-unit>
        <trans-unit id="16f2d3fe11ce786ca38d900162e82c19bd21ebc8" translate="yes" xml:space="preserve">
          <source>Superset Preceding Solidus</source>
          <target state="translated">수퍼 셋 선행 Solidus</target>
        </trans-unit>
        <trans-unit id="86c6e85c05a369d89e0deb5a666ad7102f5882bb" translate="yes" xml:space="preserve">
          <source>Superset With Dot</source>
          <target state="translated">도트가있는 수퍼 셋</target>
        </trans-unit>
        <trans-unit id="24374026a1f59abc557771c964e49b46fa73f626" translate="yes" xml:space="preserve">
          <source>Superset With Multiplication Sign Below</source>
          <target state="translated">아래 곱셈 부호가있는 수퍼 셋</target>
        </trans-unit>
        <trans-unit id="7860d68222b15737a778e67f5c15130e115ebb32" translate="yes" xml:space="preserve">
          <source>Superset With Plus Sign Below</source>
          <target state="translated">아래 더하기 기호가있는 수퍼 셋</target>
        </trans-unit>
        <trans-unit id="83edd3d93ff01c77de630d08caf48d1abfd6db9e" translate="yes" xml:space="preserve">
          <source>Supertype for &lt;code&gt;N&lt;/code&gt;-dimensional arrays (or array-like types) with elements of type &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;#Core.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; and other types are subtypes of this. See the manual section on the &lt;a href=&quot;../../manual/interfaces/index#man-interface-array&quot;&gt;&lt;code&gt;AbstractArray&lt;/code&gt; interface&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 유형의 요소가있는 &lt;code&gt;N&lt;/code&gt; 차원 배열 (또는 배열 유사 유형)의 상위 유형 입니다. &lt;a href=&quot;#Core.Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 및 기타 유형은 이것의 하위 유형입니다. &lt;a href=&quot;../../manual/interfaces/index#man-interface-array&quot;&gt; &lt;code&gt;AbstractArray&lt;/code&gt; &lt;/a&gt; 인터페이스 에 대한 매뉴얼 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c92c6b48a91cf8c814469ee5dfe09a09dd531c2" translate="yes" xml:space="preserve">
          <source>Supertype for &lt;code&gt;N&lt;/code&gt;-dimensional arrays (or array-like types) with elements of type &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;#Core.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; and other types are subtypes of this. See the manual section on the &lt;a href=&quot;../../manual/interfaces/index#man-interface-array-1&quot;&gt;&lt;code&gt;AbstractArray&lt;/code&gt; interface&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 유형의 요소가있는 &lt;code&gt;N&lt;/code&gt; 차원 배열 (또는 배열 유사 유형)의 수퍼 타입 . &lt;a href=&quot;#Core.Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 및 기타 유형은이 유형의 하위 유형입니다. &lt;a href=&quot;../../manual/interfaces/index#man-interface-array-1&quot;&gt; &lt;code&gt;AbstractArray&lt;/code&gt; &lt;/a&gt; 인터페이스 의 매뉴얼 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="77d3c24a79b67141166155993915039c8017ca24" translate="yes" xml:space="preserve">
          <source>Supertype for &lt;code&gt;N&lt;/code&gt;-dimensional sparse arrays (or array-like types) with elements of type &lt;code&gt;Tv&lt;/code&gt; and index type &lt;code&gt;Ti&lt;/code&gt;. &lt;a href=&quot;#SparseArrays.SparseMatrixCSC&quot;&gt;&lt;code&gt;SparseMatrixCSC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SparseArrays.SparseVector&quot;&gt;&lt;code&gt;SparseVector&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SuiteSparse.CHOLMOD.Sparse&lt;/code&gt; are subtypes of this.</source>
          <target state="translated">유형 &lt;code&gt;Tv&lt;/code&gt; 및 색인 유형 &lt;code&gt;Ti&lt;/code&gt; 의 요소가있는 &lt;code&gt;N&lt;/code&gt; 차원 희소 배열 (또는 배열 유사 유형)의 수퍼 타입 입니다. &lt;a href=&quot;#SparseArrays.SparseMatrixCSC&quot;&gt; &lt;code&gt;SparseMatrixCSC&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#SparseArrays.SparseVector&quot;&gt; &lt;code&gt;SparseVector&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;SuiteSparse.CHOLMOD.Sparse&lt;/code&gt; 는 이것의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="5496a616cf629a444cd0293bf842e64f94c3440e" translate="yes" xml:space="preserve">
          <source>Supertype for cluster managers, which control workers processes as a cluster. Cluster managers implement how workers can be added, removed and communicated with. &lt;code&gt;SSHManager&lt;/code&gt; and &lt;code&gt;LocalManager&lt;/code&gt; are subtypes of this.</source>
          <target state="translated">작업자 프로세스를 클러스터로 제어하는 ​​클러스터 관리자의 수퍼 타입입니다. 클러스터 관리자는 작업자를 추가, 제거 및 통신하는 방법을 구현합니다. &lt;code&gt;SSHManager&lt;/code&gt; 및 &lt;code&gt;LocalManager&lt;/code&gt; 는이 유형의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="55fca78e485a73121ac591c6a84b271b8eafecc3" translate="yes" xml:space="preserve">
          <source>Supertype for dictionary-like types with keys of type &lt;code&gt;K&lt;/code&gt; and values of type &lt;code&gt;V&lt;/code&gt;. &lt;a href=&quot;#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.IdDict&quot;&gt;&lt;code&gt;IdDict&lt;/code&gt;&lt;/a&gt; and other types are subtypes of this.</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; 유형의 키 와 &lt;code&gt;V&lt;/code&gt; 유형의 값이있는 사전과 유사한 유형의 수퍼 타입 입니다. &lt;a href=&quot;#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.IdDict&quot;&gt; &lt;code&gt;IdDict&lt;/code&gt; &lt;/a&gt; 및 기타 유형은 이것의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="0707411d35066c623a3cfec98f4214a47f42d25f" translate="yes" xml:space="preserve">
          <source>Supertype for dictionary-like types with keys of type &lt;code&gt;K&lt;/code&gt; and values of type &lt;code&gt;V&lt;/code&gt;. &lt;a href=&quot;#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.IdDict&quot;&gt;&lt;code&gt;IdDict&lt;/code&gt;&lt;/a&gt; and other types are subtypes of this. An &lt;code&gt;AbstractDict{K, V}&lt;/code&gt; should be an iterator of &lt;code&gt;Pair{K, V}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; 유형의 키 와 &lt;code&gt;V&lt;/code&gt; 유형의 값이있는 사전 유사 유형의 상위 유형입니다 . &lt;a href=&quot;#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.IdDict&quot;&gt; &lt;code&gt;IdDict&lt;/code&gt; &lt;/a&gt; 및 기타 유형은 이것의 하위 유형입니다. &lt;code&gt;AbstractDict{K, V}&lt;/code&gt; 반복자이어야 &lt;code&gt;Pair{K, V}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc5413d4f644b54dba9b5a5ba1f33544aca17708" translate="yes" xml:space="preserve">
          <source>Supertype for one-dimensional arrays (or array-like types) with elements of type &lt;code&gt;T&lt;/code&gt;. Alias for &lt;a href=&quot;#Core.AbstractArray&quot;&gt;&lt;code&gt;AbstractArray{T,1}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 유형의 요소가있는 1 차원 배열 (또는 배열 유사 유형)의 수퍼 타입 . &lt;a href=&quot;#Core.AbstractArray&quot;&gt; &lt;code&gt;AbstractArray{T,1}&lt;/code&gt; &lt;/a&gt; 별명 .</target>
        </trans-unit>
        <trans-unit id="2dcd0147f3806d3e7f232dad031eaa20f7eb9251" translate="yes" xml:space="preserve">
          <source>Supertype for one-dimensional sparse arrays (or array-like types) with elements of type &lt;code&gt;Tv&lt;/code&gt; and index type &lt;code&gt;Ti&lt;/code&gt;. Alias for &lt;code&gt;AbstractSparseArray{Tv,Ti,1}&lt;/code&gt;.</source>
          <target state="translated">유형 &lt;code&gt;Tv&lt;/code&gt; 및 인덱스 유형 &lt;code&gt;Ti&lt;/code&gt; 의 요소가있는 1 차원 희소 배열 (또는 배열 유사 유형)의 상위 유형 입니다. &lt;code&gt;AbstractSparseArray{Tv,Ti,1}&lt;/code&gt; 별칭 .</target>
        </trans-unit>
        <trans-unit id="79216e42fd6a5f0e00724330f8416b04cfb5c1c8" translate="yes" xml:space="preserve">
          <source>Supertype for one-dimensional sparse arrays (or array-like types) with elements of type &lt;code&gt;Tv&lt;/code&gt; and index type &lt;code&gt;Ti&lt;/code&gt;. Alias for &lt;code&gt;AbstractSparseArray{Tv,Ti,1}&lt;/code&gt;`.</source>
          <target state="translated">유형 &lt;code&gt;Tv&lt;/code&gt; 및 색인 유형 &lt;code&gt;Ti&lt;/code&gt; 의 요소가있는 1 차원 희소 배열 (또는 배열 유사 유형)의 수퍼 타입 . &lt;code&gt;AbstractSparseArray{Tv,Ti,1}&lt;/code&gt; 대한 별명 `.</target>
        </trans-unit>
        <trans-unit id="0608e4989266cc8544324838f3723e04585e2ddc" translate="yes" xml:space="preserve">
          <source>Supertype for ordinal ranges with elements of type &lt;code&gt;T&lt;/code&gt; with spacing(s) of type &lt;code&gt;S&lt;/code&gt;. The steps should be always-exact multiples of &lt;a href=&quot;../numbers/index#Base.oneunit&quot;&gt;&lt;code&gt;oneunit&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;T&lt;/code&gt; should be a &quot;discrete&quot; type, which cannot have values smaller than &lt;code&gt;oneunit&lt;/code&gt;. For example, &lt;code&gt;Integer&lt;/code&gt; or &lt;code&gt;Date&lt;/code&gt; types would qualify, whereas &lt;code&gt;Float64&lt;/code&gt; would not (since this type can represent values smaller than &lt;code&gt;oneunit(Float64)&lt;/code&gt;. &lt;a href=&quot;#Base.UnitRange&quot;&gt;&lt;code&gt;UnitRange&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.StepRange&quot;&gt;&lt;code&gt;StepRange&lt;/code&gt;&lt;/a&gt;, and other types are subtypes of this.</source>
          <target state="translated">간격이 &lt;code&gt;S&lt;/code&gt; 유형 인 &lt;code&gt;T&lt;/code&gt; 유형의 요소가있는 서수 범위의 수퍼 타입 입니다. 단계는 항상 정확히 하나의 &lt;a href=&quot;../numbers/index#Base.oneunit&quot;&gt; &lt;code&gt;oneunit&lt;/code&gt; &lt;/a&gt; 의 배수 여야 하고 &lt;code&gt;T&lt;/code&gt; 는 &quot;discrete&quot;유형이어야하며, &lt;code&gt;oneunit&lt;/code&gt; 보다 작은 값을 가질 수 없습니다 . 예를 들어, &lt;code&gt;Integer&lt;/code&gt; 또는 &lt;code&gt;Date&lt;/code&gt; 반면 유형은 자격이 &lt;code&gt;Float64&lt;/code&gt; 는 (이 유형 때문에보다 작은 값으로 표현할 수없는 것 &lt;code&gt;oneunit(Float64)&lt;/code&gt; . &lt;a href=&quot;#Base.UnitRange&quot;&gt; &lt;code&gt;UnitRange&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.StepRange&quot;&gt; &lt;code&gt;StepRange&lt;/code&gt; &lt;/a&gt; 이 아형이며, 다른 타입.</target>
        </trans-unit>
        <trans-unit id="ba3168d6d184f8d8847323c11588981dd73b92c1" translate="yes" xml:space="preserve">
          <source>Supertype for random number generators such as &lt;a href=&quot;#Random.MersenneTwister&quot;&gt;&lt;code&gt;MersenneTwister&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Random.RandomDevice&quot;&gt;&lt;code&gt;RandomDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Random.MersenneTwister&quot;&gt; &lt;code&gt;MersenneTwister&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Random.RandomDevice&quot;&gt; &lt;code&gt;RandomDevice&lt;/code&gt; &lt;/a&gt; 와 같은 난수 생성기의 수퍼 타입 입니다.</target>
        </trans-unit>
        <trans-unit id="0fb4d37bdbb86f042afa15f8007727543f6e4570" translate="yes" xml:space="preserve">
          <source>Supertype for ranges with a step size of &lt;a href=&quot;../numbers/index#Base.oneunit&quot;&gt;&lt;code&gt;oneunit(T)&lt;/code&gt;&lt;/a&gt; with elements of type &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;#Base.UnitRange&quot;&gt;&lt;code&gt;UnitRange&lt;/code&gt;&lt;/a&gt; and other types are subtypes of this.</source>
          <target state="translated">단계의 크기 범위에 대한 수퍼 &lt;a href=&quot;../numbers/index#Base.oneunit&quot;&gt; &lt;code&gt;oneunit(T)&lt;/code&gt; &lt;/a&gt; 형의 요소 &lt;code&gt;T&lt;/code&gt; . &lt;a href=&quot;#Base.UnitRange&quot;&gt; &lt;code&gt;UnitRange&lt;/code&gt; &lt;/a&gt; 및 기타 유형은이 유형의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ad3330a7842eef3834e2ac65ebcfba97571d2bff" translate="yes" xml:space="preserve">
          <source>Supertype for ranges with elements of type &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;#Base.UnitRange&quot;&gt;&lt;code&gt;UnitRange&lt;/code&gt;&lt;/a&gt; and other types are subtypes of this.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 유형의 요소가있는 범위의 수퍼 타입 . &lt;a href=&quot;#Base.UnitRange&quot;&gt; &lt;code&gt;UnitRange&lt;/code&gt; &lt;/a&gt; 및 기타 유형은이 유형의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="33a8473d57b426d15a6e8cda863eb65797c32e7b" translate="yes" xml:space="preserve">
          <source>Supertype for set-like types whose elements are of type &lt;code&gt;T&lt;/code&gt;. &lt;a href=&quot;#Base.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.BitSet&quot;&gt;&lt;code&gt;BitSet&lt;/code&gt;&lt;/a&gt; and other types are subtypes of this.</source>
          <target state="translated">요소가 &lt;code&gt;T&lt;/code&gt; 유형 인 세트 형 유형의 수퍼 타입 . &lt;a href=&quot;#Base.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.BitSet&quot;&gt; &lt;code&gt;BitSet&lt;/code&gt; &lt;/a&gt; 및 기타 유형은이 유형의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ac8b296506fd1ede340a41da56c505cd754211c8" translate="yes" xml:space="preserve">
          <source>Supertype for two-dimensional arrays (or array-like types) with elements of type &lt;code&gt;T&lt;/code&gt;. Alias for &lt;a href=&quot;#Core.AbstractArray&quot;&gt;&lt;code&gt;AbstractArray{T,2}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 유형의 요소가있는 2 차원 배열 (또는 배열 유사 유형)의 수퍼 타입 입니다. &lt;a href=&quot;#Core.AbstractArray&quot;&gt; &lt;code&gt;AbstractArray{T,2}&lt;/code&gt; &lt;/a&gt; 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="34927b830c031f7730d9555a9e40b9b4c855c9cf" translate="yes" xml:space="preserve">
          <source>Supertype for two-dimensional sparse arrays (or array-like types) with elements of type &lt;code&gt;Tv&lt;/code&gt; and index type &lt;code&gt;Ti&lt;/code&gt;. Alias for &lt;code&gt;AbstractSparseArray{Tv,Ti,2}&lt;/code&gt;.</source>
          <target state="translated">유형 &lt;code&gt;Tv&lt;/code&gt; 및 색인 유형 &lt;code&gt;Ti&lt;/code&gt; 의 요소가있는 2 차원 희소 배열 (또는 배열 유사 유형)의 수퍼 타입 입니다. &lt;code&gt;AbstractSparseArray{Tv,Ti,2}&lt;/code&gt; 대한 별명 .</target>
        </trans-unit>
        <trans-unit id="c443a804d58ab08b0d84b7e520f9b8eb8d018e6c" translate="yes" xml:space="preserve">
          <source>Supertype for worker pools such as &lt;a href=&quot;#Distributed.WorkerPool&quot;&gt;&lt;code&gt;WorkerPool&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Distributed.CachingPool&quot;&gt;&lt;code&gt;CachingPool&lt;/code&gt;&lt;/a&gt;. An &lt;code&gt;AbstractWorkerPool&lt;/code&gt; should implement:</source>
          <target state="translated">&lt;a href=&quot;#Distributed.WorkerPool&quot;&gt; &lt;code&gt;WorkerPool&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Distributed.CachingPool&quot;&gt; &lt;code&gt;CachingPool&lt;/code&gt; &lt;/a&gt; 과 같은 작업자 풀의 수퍼 타입 . &lt;code&gt;AbstractWorkerPool&lt;/code&gt; 는 구현해야합니다 :</target>
        </trans-unit>
        <trans-unit id="8d68bab1171cabb0005ae6253be5e703755584f3" translate="yes" xml:space="preserve">
          <source>Supertype operator, equivalent to &lt;code&gt;T2 &amp;lt;: T1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T2 &amp;lt;: T1&lt;/code&gt; 과 동등한 수퍼 타입 ​​연산자 .</target>
        </trans-unit>
        <trans-unit id="899f3380952e2bbffc94145e13502d9ec32044b2" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;S&lt;/code&gt; as a tuple requires at least Julia 1.1.</source>
          <target state="translated">튜플로 &lt;code&gt;S&lt;/code&gt; 를 지원 하려면 Julia 1.1 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1fd453ce258f37cb26e34f8a998c4d755b7331fc" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;a&lt;/code&gt; as a tuple requires at least Julia 1.4.</source>
          <target state="translated">지원 튜플로 적어도 줄리아 1.4이 필요합니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6ad165dcf10ccec505965483fdb39539b97ad49" translate="yes" xml:space="preserve">
          <source>Support for generating random numbers. Provides &lt;a href=&quot;#Base.rand&quot;&gt;&lt;code&gt;rand&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.randn&quot;&gt;&lt;code&gt;randn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Random.AbstractRNG&quot;&gt;&lt;code&gt;AbstractRNG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Random.MersenneTwister&quot;&gt;&lt;code&gt;MersenneTwister&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Random.RandomDevice&quot;&gt;&lt;code&gt;RandomDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">난수 생성 지원 제공 &lt;a href=&quot;#Base.rand&quot;&gt; &lt;code&gt;rand&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Base.randn&quot;&gt; &lt;code&gt;randn&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Random.AbstractRNG&quot;&gt; &lt;code&gt;AbstractRNG&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#Random.MersenneTwister&quot;&gt; &lt;code&gt;MersenneTwister&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;#Random.RandomDevice&quot;&gt; &lt;code&gt;RandomDevice&lt;/code&gt; 는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77757b08770437bd2e1aba57654a95aeb930bc38" translate="yes" xml:space="preserve">
          <source>Support for raising &lt;code&gt;Irrational&lt;/code&gt; numbers (like &lt;code&gt;ℯ&lt;/code&gt;) to a matrix was added in Julia 1.1.</source>
          <target state="translated">Julia 1.1에는 &lt;code&gt;Irrational&lt;/code&gt; 숫자 (예 : &lt;code&gt;ℯ&lt;/code&gt; )를 행렬로 올리는 기능 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e58eed85d3cc323a5691376298f1c642cf2b1d37" translate="yes" xml:space="preserve">
          <source>Support for sockets. Provides &lt;a href=&quot;#Sockets.IPAddr&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; and subtypes, &lt;a href=&quot;#Sockets.TCPSocket&quot;&gt;&lt;code&gt;TCPSocket&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#Sockets.UDPSocket&quot;&gt;&lt;code&gt;UDPSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소켓을 지원합니다. &lt;a href=&quot;#Sockets.IPAddr&quot;&gt; &lt;code&gt;IPAddr&lt;/code&gt; &lt;/a&gt; 및 부속 유형, &lt;a href=&quot;#Sockets.TCPSocket&quot;&gt; &lt;code&gt;TCPSocket&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Sockets.UDPSocket&quot;&gt; &lt;code&gt;UDPSocket&lt;/code&gt; 을&lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2939e6e868c92104a4525d3fccaa1aba7aae8117" translate="yes" xml:space="preserve">
          <source>Support for text-form month parsing is also supported through the &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; characters, for abbreviated and full-length month names, respectively. By default, only English month names are supported, so &lt;code&gt;u&lt;/code&gt; corresponds to &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, etc. And &lt;code&gt;U&lt;/code&gt; corresponds to &quot;January&quot;, &quot;February&quot;, &quot;March&quot;, etc. Similar to other name=&amp;gt;value mapping functions &lt;a href=&quot;#Dates.dayname&quot;&gt;&lt;code&gt;dayname&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.monthname&quot;&gt;&lt;code&gt;monthname&lt;/code&gt;&lt;/a&gt;, custom locales can be loaded by passing in the &lt;code&gt;locale=&amp;gt;Dict{String,Int}&lt;/code&gt; mapping to the &lt;code&gt;MONTHTOVALUEABBR&lt;/code&gt; and &lt;code&gt;MONTHTOVALUE&lt;/code&gt; dicts for abbreviated and full-name month names, respectively.</source>
          <target state="translated">텍스트 형식의 월 구문 분석은 약어 및 전체 길이의 월 이름에 대해 각각 &lt;code&gt;u&lt;/code&gt; 및 &lt;code&gt;U&lt;/code&gt; 문자를 통해 지원 됩니다. 기본적으로 영어 월 이름 만 지원되므로 &lt;code&gt;u&lt;/code&gt; 는 &quot;1 월&quot;, &quot;2 월&quot;, &quot;3 월&quot;등에 해당하고 &lt;code&gt;U&lt;/code&gt; 는 &quot;1 월&quot;, &quot;2 월&quot;, &quot;3 월&quot;등에 해당합니다. 다른 이름과 유사합니다. =&amp;gt; 값 맵핑 함수 &lt;a href=&quot;#Dates.dayname&quot;&gt; &lt;code&gt;dayname&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#Dates.monthname&quot;&gt; &lt;code&gt;monthname&lt;/code&gt; &lt;/a&gt; , 사용자 정의 로케일은 &lt;code&gt;locale=&amp;gt;Dict{String,Int}&lt;/code&gt; 맵핑을 &lt;code&gt;MONTHTOVALUEABBR&lt;/code&gt; 및 &lt;code&gt;MONTHTOVALUE&lt;/code&gt; 딕트로 각각 전달 하여 약어 및 전체 이름의 월 이름 을 전달하여로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ead543b06b3114ff4517ccfb78c270d10ba62f9" translate="yes" xml:space="preserve">
          <source>Supported function</source>
          <target state="translated">지원되는 기능</target>
        </trans-unit>
        <trans-unit id="c0bb340858997c963a541d9d266aa13222b2691a" translate="yes" xml:space="preserve">
          <source>Supported index types</source>
          <target state="translated">지원되는 색인 유형</target>
        </trans-unit>
        <trans-unit id="c8952d2652a445ec99b558baea3caa44fe3a5d19" translate="yes" xml:space="preserve">
          <source>Suppose that the distribution is described by</source>
          <target state="translated">분포가 다음과 같이 설명된다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="1e43b4b805479242bd2902efea1301055ba43ee4" translate="yes" xml:space="preserve">
          <source>Suppose the value of &lt;code&gt;$JULIA_PKGRESOLVE_ACCURACY&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;. Then</source>
          <target state="translated">&lt;code&gt;$JULIA_PKGRESOLVE_ACCURACY&lt;/code&gt; 의 값 이 &lt;code&gt;n&lt;/code&gt; 이라고 가정하십시오 . 그때</target>
        </trans-unit>
        <trans-unit id="f7be91f5ab4298c1c8a406623d22bbbd1013933b" translate="yes" xml:space="preserve">
          <source>Suppose we want to stop execution immediately if the square root of a negative number is taken. To do this, we can define a fussy version of the &lt;code&gt;sqrt&lt;/code&gt; function that raises an error if its argument is negative:</source>
          <target state="translated">음수의 제곱근을 취하면 즉시 실행을 중지한다고 가정합니다. 이를 위해 &lt;code&gt;sqrt&lt;/code&gt; 함수 의 까다로운 버전을 정의하여 인수가 음수 인 경우 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="a96c947cf38137b5f6543819dd2cddf85dea85d1" translate="yes" xml:space="preserve">
          <source>Suppose we wanted to make the constructor call &lt;code&gt;Point(1,2.5)&lt;/code&gt; work by &quot;promoting&quot; the integer value &lt;code&gt;1&lt;/code&gt; to the floating-point value &lt;code&gt;1.0&lt;/code&gt;. The simplest way to achieve this is to define the following additional outer constructor method:</source>
          <target state="translated">정수 값 &lt;code&gt;1&lt;/code&gt; 을 부동 소수점 값 &lt;code&gt;1.0&lt;/code&gt; 으로 &quot;승격&quot; 하여 생성자 호출 &lt;code&gt;Point(1,2.5)&lt;/code&gt; 작동 시키려고 한다고 가정 합니다. 이를 달성하는 가장 간단한 방법은 다음과 같은 추가 외부 생성자 메소드를 정의하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ec51423103ee76d239e2db02b64cd5e5d54bd6dd" translate="yes" xml:space="preserve">
          <source>Suppose you call a function like this:</source>
          <target state="translated">다음과 같은 함수를 호출한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="7e31f28cfa61c430f0678908e4c1e7dab7ebb3a5" translate="yes" xml:space="preserve">
          <source>Suppose you want to do something a bit more complicated and use the name of a file in the variable &lt;code&gt;file&lt;/code&gt; as an argument to a command. You can use &lt;code&gt;$&lt;/code&gt; for interpolation much as you would in a string literal (see &lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/devdocs/ast/#Strings-1&quot;&gt;Strings&lt;/a&gt;):</source>
          <target state="translated">좀 더 복잡한 작업을 수행하고 변수 &lt;code&gt;file&lt;/code&gt; 의 파일 이름을 명령의 인수로 사용한다고 가정하십시오 . 문자열 리터럴에서와 같이 보간에 &lt;code&gt;$&lt;/code&gt; 를 사용할 수 있습니다 ( &lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/devdocs/ast/#Strings-1&quot;&gt;Strings&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="65c84912a9e97ab9bad5206974c59d357a999187" translate="yes" xml:space="preserve">
          <source>Suppose you want to do something a bit more complicated and use the name of a file in the variable &lt;code&gt;file&lt;/code&gt; as an argument to a command. You can use &lt;code&gt;$&lt;/code&gt; for interpolation much as you would in a string literal (see &lt;a href=&quot;https://docs.julialang.org/en/v1.5.3/devdocs/ast/#Strings&quot;&gt;Strings&lt;/a&gt;):</source>
          <target state="translated">좀 더 복잡한 작업을 수행하고 변수 &lt;code&gt;file&lt;/code&gt; 의 파일 이름을 명령에 대한 인수로 사용한다고 가정합니다 . 문자열 리터럴에서와 마찬가지로 보간에 &lt;code&gt;$&lt;/code&gt; 를 사용할 수 있습니다 ( &lt;a href=&quot;https://docs.julialang.org/en/v1.5.3/devdocs/ast/#Strings&quot;&gt;Strings&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a051e98d8d71e37b46dbe98d45c2cc9c61d69cca" translate="yes" xml:space="preserve">
          <source>Suppose you were willing to allocate a temporary for the computation (which would eliminate most of the point of making &lt;code&gt;*=&lt;/code&gt; work in-place); if you took advantage of the mutability of &lt;code&gt;x&lt;/code&gt;, then this function would behave differently for mutable vs. immutable inputs. In particular, for immutable &lt;code&gt;x&lt;/code&gt;, after the call you'd have (in general) &lt;code&gt;y != x&lt;/code&gt;, but for mutable &lt;code&gt;x&lt;/code&gt; you'd have &lt;code&gt;y == x&lt;/code&gt;.</source>
          <target state="translated">계산을 위해 임시를 기꺼이 할당한다고 가정하십시오 ( &lt;code&gt;*=&lt;/code&gt; 제자리에서 작동 하는 대부분의 지점을 제거합니다 ). &lt;code&gt;x&lt;/code&gt; 의 가변성을 활용하면 이 기능은 가변 입력과 불변 입력에 대해 다르게 동작합니다. 특히, 불변의 &lt;code&gt;x&lt;/code&gt; 의 경우 호출 후 (일반적으로) &lt;code&gt;y != x&lt;/code&gt; 이지만 변경 가능한 &lt;code&gt;x&lt;/code&gt; 의 경우 &lt;code&gt;y == x&lt;/code&gt; 입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
