<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeception">
    <body>
      <group id="codeception">
        <trans-unit id="f77cb4e413994dc0142d32b58f3361ed6be377ce" translate="yes" xml:space="preserve">
          <source>Phalcon::see</source>
          <target state="translated">Phalcon::see</target>
        </trans-unit>
        <trans-unit id="a134876725e2cb1d998ccf7414158522e2679bca" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCheckboxIsChecked</source>
          <target state="translated">Phalcon::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="827b11a79f78e18f07c49f44bae7e3983cbd79db" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCookie</source>
          <target state="translated">Phalcon::seeCookie</target>
        </trans-unit>
        <trans-unit id="f946d7b1aeca7a775e2dbca7c7ee1a5cf54d8c7c" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCurrentRouteIs</source>
          <target state="translated">Phalcon::seeCurrentRouteIs</target>
        </trans-unit>
        <trans-unit id="634af2a85dca2577afa722b6558a08c5fed1014b" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCurrentUrlEquals</source>
          <target state="translated">Phalcon::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="396dc072ff57a65d5d3eeaddee9ae21d46892b1a" translate="yes" xml:space="preserve">
          <source>Phalcon::seeCurrentUrlMatches</source>
          <target state="translated">Phalcon::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="0d9d04dd474348d580fbc55568d2fa619d455d24" translate="yes" xml:space="preserve">
          <source>Phalcon::seeElement</source>
          <target state="translated">Phalcon::seeElement</target>
        </trans-unit>
        <trans-unit id="7871b5e66e710368582632828dfef69d45d6cd45" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInCurrentUrl</source>
          <target state="translated">Phalcon::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="3fcb871bae002de60df83ac8e9ae7279fa946901" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInField</source>
          <target state="translated">Phalcon::seeInField</target>
        </trans-unit>
        <trans-unit id="71a0cc31801d5468786e63c38d084c70d3d16223" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInFormFields</source>
          <target state="translated">Phalcon::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="0911436d3feecf437d9fc3b72daf263078889c36" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInSession</source>
          <target state="translated">Phalcon::seeInSession</target>
        </trans-unit>
        <trans-unit id="28c4e99c4dd988752aecea5d03e378aa65ac4eff" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInSource</source>
          <target state="translated">Phalcon::seeInSource</target>
        </trans-unit>
        <trans-unit id="4ebb45f07266e834738f6fbed33c6530053d1c99" translate="yes" xml:space="preserve">
          <source>Phalcon::seeInTitle</source>
          <target state="translated">Phalcon::seeInTitle</target>
        </trans-unit>
        <trans-unit id="0a04a32ca20a1dc567ed5336fd7d5d1f04c359b3" translate="yes" xml:space="preserve">
          <source>Phalcon::seeLink</source>
          <target state="translated">Phalcon::seeLink</target>
        </trans-unit>
        <trans-unit id="31c33eb477c62a179d1712ec9d562ee6dff18e46" translate="yes" xml:space="preserve">
          <source>Phalcon::seeNumberOfElements</source>
          <target state="translated">Phalcon::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="0750fc3d249f2c6c3af7c5f1ee56a61b70bc5b85" translate="yes" xml:space="preserve">
          <source>Phalcon::seeNumberOfRecords</source>
          <target state="translated">Phalcon::seeNumberOfRecords</target>
        </trans-unit>
        <trans-unit id="65c62fe64a1aacd7beb8a25066ec5f612b10941d" translate="yes" xml:space="preserve">
          <source>Phalcon::seeOptionIsSelected</source>
          <target state="translated">Phalcon::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="f509f2f336fad96ed4cfdb558c12fffa87c71334" translate="yes" xml:space="preserve">
          <source>Phalcon::seePageNotFound</source>
          <target state="translated">Phalcon::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="81247a6f829be73c6d6fa8e943339e32687bfb6f" translate="yes" xml:space="preserve">
          <source>Phalcon::seeRecord</source>
          <target state="translated">Phalcon::seeRecord</target>
        </trans-unit>
        <trans-unit id="a8ceac312670b7ef61d69c4bdf631091914d9b65" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIs</source>
          <target state="translated">Phalcon::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="06581b01e1ad414728dbac3bad018a02eefbcf55" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsBetween</source>
          <target state="translated">Phalcon::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="73488f19c333db016f8f0017368036bd839c2f4b" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsClientError</source>
          <target state="translated">Phalcon::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="165dcf4b63adeb55dc0f541d0e799a79118d1ff0" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsRedirection</source>
          <target state="translated">Phalcon::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="154686f13c639faf637d5c62bf5fd2553ff74ccc" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsServerError</source>
          <target state="translated">Phalcon::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="e5eedb8ccd148dbaa0823c287f9003172b1ae3f8" translate="yes" xml:space="preserve">
          <source>Phalcon::seeResponseCodeIsSuccessful</source>
          <target state="translated">Phalcon::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="32b4c8c9bde9155865114419b505cc8caeb34aec" translate="yes" xml:space="preserve">
          <source>Phalcon::seeSessionHasValues</source>
          <target state="translated">Phalcon::seeSessionHasValues</target>
        </trans-unit>
        <trans-unit id="d07e5a541afae1f600fd9b2f716bc80284d020f2" translate="yes" xml:space="preserve">
          <source>Phalcon::selectOption</source>
          <target state="translated">Phalcon::selectOption</target>
        </trans-unit>
        <trans-unit id="ee85ffcde6d43ff5754ce2e9ce211bfd00f5c205" translate="yes" xml:space="preserve">
          <source>Phalcon::sendAjaxGetRequest</source>
          <target state="translated">Phalcon::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="cd23d4e7222e84d6e7ff5354e22fd7dda1a11dba" translate="yes" xml:space="preserve">
          <source>Phalcon::sendAjaxPostRequest</source>
          <target state="translated">Phalcon::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="eed684ca4725d0dc67fb5e032800a9569b25c2a3" translate="yes" xml:space="preserve">
          <source>Phalcon::sendAjaxRequest</source>
          <target state="translated">Phalcon::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="bd3f2696ae7c0f89dfe868fb8e024cc1252dd5e3" translate="yes" xml:space="preserve">
          <source>Phalcon::setCookie</source>
          <target state="translated">Phalcon::setCookie</target>
        </trans-unit>
        <trans-unit id="ec7dfd3a8f383f5e1c318f1a21c1642dcbedac5a" translate="yes" xml:space="preserve">
          <source>Phalcon::submitForm</source>
          <target state="translated">Phalcon::submitForm</target>
        </trans-unit>
        <trans-unit id="4dcfe01fe4cc600066ac0abb36d90133527f8c8f" translate="yes" xml:space="preserve">
          <source>Phalcon::switchToIframe</source>
          <target state="translated">Phalcon::switchToIframe</target>
        </trans-unit>
        <trans-unit id="c2315d9142838a2636cddd771d524d2656197fbe" translate="yes" xml:space="preserve">
          <source>Phalcon::uncheckOption</source>
          <target state="translated">Phalcon::uncheckOption</target>
        </trans-unit>
        <trans-unit id="b8bed22cf1b3b99982548247f8ec5e6aed1e273b" translate="yes" xml:space="preserve">
          <source>PhantomJS</source>
          <target state="translated">PhantomJS</target>
        </trans-unit>
        <trans-unit id="937ca26ff674098153540d64d1830389a149b49b" translate="yes" xml:space="preserve">
          <source>PhantomJS is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;headless browser&lt;/a&gt; alternative to Selenium Server that implements &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol&quot;&gt;the WebDriver protocol&lt;/a&gt;. It allows you to run Selenium tests on a server without a GUI installed.</source>
          <target state="translated">PhantomJS는 &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol&quot;&gt;WebDriver 프로토콜&lt;/a&gt; 을 구현 하는 Selenium 서버 의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;헤드리스 브라우저&lt;/a&gt; 대안 입니다. GUI가 설치되지 않은 서버에서 Selenium 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1b05da55236a9a5de9117128dcb4752ac2a8073" translate="yes" xml:space="preserve">
          <source>PhantomJS is a customized WebKit-based &lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;headless browser&lt;/a&gt; built for programmatic usage only. It doesn&amp;rsquo;t display a browser window and doesn&amp;rsquo;t require GUI (display server) to be installed. This makes PhantomJS highly popular for Continuous Integration systems. PhantomJS needs only one binary with no extra dependencies which make it the simplest WebDriver tool to install.</source>
          <target state="translated">PhantomJS는 프로그래밍 방식으로 만 사용하도록 설계된 맞춤형 WebKit 기반 &lt;a href=&quot;https://en.wikipedia.org/wiki/Headless_browser&quot;&gt;헤드리스 브라우저&lt;/a&gt; 입니다. 브라우저 창을 표시하지 않으며 GUI (디스플레이 서버)를 설치할 필요가 없습니다. 따라서 PhantomJS는 Continuous Integration 시스템에 널리 사용됩니다. PhantomJS는 추가 종속성없이 하나의 바이너리 만 필요하므로 설치하기 가장 간단한 WebDriver 도구입니다.</target>
        </trans-unit>
        <trans-unit id="974f1bc570ad2f763e90863f28f698da274fbe45" translate="yes" xml:space="preserve">
          <source>PhpBrowser</source>
          <target state="translated">PhpBrowser</target>
        </trans-unit>
        <trans-unit id="c3a3402d0b86e8796785e2a45f12198000b231be" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_findElements</source>
          <target state="translated">PhpBrowser::_findElements</target>
        </trans-unit>
        <trans-unit id="da3449c463ee92588408d4c5b739500dfd478c7d" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_getResponseContent</source>
          <target state="translated">PhpBrowser::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="3ba4c9913ce27a35131617f4e9738518ff49e5af" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_loadPage</source>
          <target state="translated">PhpBrowser::_loadPage</target>
        </trans-unit>
        <trans-unit id="4f97a9cbafc80f10a4ff6600075620d9827a0604" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_request</source>
          <target state="translated">PhpBrowser::_request</target>
        </trans-unit>
        <trans-unit id="131b676bc1afb030bf023432d77666640e84fe38" translate="yes" xml:space="preserve">
          <source>PhpBrowser::_savePageSource</source>
          <target state="translated">PhpBrowser::_savePageSource</target>
        </trans-unit>
        <trans-unit id="b7f86e92bff9fd25fedb1aa4cfde359e610d7b14" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amHttpAuthenticated</source>
          <target state="translated">PhpBrowser::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="bdd3e2c7947a24cbb9f9436393b3f3692c6ab3c1" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amOnPage</source>
          <target state="translated">PhpBrowser::amOnPage</target>
        </trans-unit>
        <trans-unit id="6ab8bc0d365ddc7ec6caf0b2ecd3f637d53321dd" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amOnSubdomain</source>
          <target state="translated">PhpBrowser::amOnSubdomain</target>
        </trans-unit>
        <trans-unit id="21b5c241c799dd869cb8fef2622211e2962a2abb" translate="yes" xml:space="preserve">
          <source>PhpBrowser::amOnUrl</source>
          <target state="translated">PhpBrowser::amOnUrl</target>
        </trans-unit>
        <trans-unit id="bf2b945b2d93d763fec3c98cd45e8eae28718053" translate="yes" xml:space="preserve">
          <source>PhpBrowser::attachFile</source>
          <target state="translated">PhpBrowser::attachFile</target>
        </trans-unit>
        <trans-unit id="ba63265125c3f6f6790bd95004181b3d8e13b097" translate="yes" xml:space="preserve">
          <source>PhpBrowser::checkOption</source>
          <target state="translated">PhpBrowser::checkOption</target>
        </trans-unit>
        <trans-unit id="35b5abd73f49087d3632acf149fe451da600a4b2" translate="yes" xml:space="preserve">
          <source>PhpBrowser::click</source>
          <target state="translated">PhpBrowser::click</target>
        </trans-unit>
        <trans-unit id="02e1c935edf23fd7848ec0fabbfd91d34b430954" translate="yes" xml:space="preserve">
          <source>PhpBrowser::deleteHeader</source>
          <target state="translated">PhpBrowser::deleteHeader</target>
        </trans-unit>
        <trans-unit id="00dd8b2ebcc388c4e0684cd4c48cf6def4e43d5b" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSee</source>
          <target state="translated">PhpBrowser::dontSee</target>
        </trans-unit>
        <trans-unit id="5ffd7540df9ce92b35933e1e0b8c7f4c45f8c82c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCheckboxIsChecked</source>
          <target state="translated">PhpBrowser::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="ed1e9d8a6d3504adf8a77b65770337dba5650ccd" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCookie</source>
          <target state="translated">PhpBrowser::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="c8ef60a71714daf839b45d680a13bccfdaa374e1" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCurrentUrlEquals</source>
          <target state="translated">PhpBrowser::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="fb0b6fb531f6a7f3d517b0f85ff1c337f7b88fcc" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeCurrentUrlMatches</source>
          <target state="translated">PhpBrowser::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="d08e91bd1648552eb208f0ab8d8cebc9a42cfe04" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeElement</source>
          <target state="translated">PhpBrowser::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="66c5f515282bfeb1002a72c2479a500cb5536cb2" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInCurrentUrl</source>
          <target state="translated">PhpBrowser::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0887bc36f6866657bc934dc8123f2850b3acbec0" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInField</source>
          <target state="translated">PhpBrowser::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="8cc1697d350b8d73fdad60847c0ae3ca85b58f68" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInFormFields</source>
          <target state="translated">PhpBrowser::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="ed847cb4c0b2acb5591ac04e4680cd91c0e92aa2" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInSource</source>
          <target state="translated">PhpBrowser::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="410bf42306d65482b477f50c9d722e29a44212c5" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeInTitle</source>
          <target state="translated">PhpBrowser::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="587f2232701d28732a65a739d6f919ce3eafb489" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeLink</source>
          <target state="translated">PhpBrowser::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="55524d6570d0035d2b91d2bf88d5b64271b55993" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeOptionIsSelected</source>
          <target state="translated">PhpBrowser::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="d948922dcba181377993a0ce0687589b5fab1499" translate="yes" xml:space="preserve">
          <source>PhpBrowser::dontSeeResponseCodeIs</source>
          <target state="translated">PhpBrowser::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="aff61207126d14ce338ca925e64280d1b3516567" translate="yes" xml:space="preserve">
          <source>PhpBrowser::executeInGuzzle</source>
          <target state="translated">PhpBrowser::executeInGuzzle</target>
        </trans-unit>
        <trans-unit id="2cf79a1210251db3f40ddd25aa3121610fad73c7" translate="yes" xml:space="preserve">
          <source>PhpBrowser::fillField</source>
          <target state="translated">PhpBrowser::fillField</target>
        </trans-unit>
        <trans-unit id="3cf4bd52f2ed060583b5def7d847c8b0c4e0274f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabAttributeFrom</source>
          <target state="translated">PhpBrowser::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="5acfe1b9159cda17546845a198ba5bcec48d7d07" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabCookie</source>
          <target state="translated">PhpBrowser::grabCookie</target>
        </trans-unit>
        <trans-unit id="70cfbb6379f9993218bd67dcabb6386201c35ec0" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabFromCurrentUrl</source>
          <target state="translated">PhpBrowser::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="3a153242c5c05cf9e20b54d259456b256d9404ba" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabMultiple</source>
          <target state="translated">PhpBrowser::grabMultiple</target>
        </trans-unit>
        <trans-unit id="49463c89782b400c2f224bd460ea9458c6f5cbf9" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabPageSource</source>
          <target state="translated">PhpBrowser::grabPageSource</target>
        </trans-unit>
        <trans-unit id="9d332a4fff0732302b6ba47cc255e36943d1304f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabTextFrom</source>
          <target state="translated">PhpBrowser::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="042f68edb3d67ea36768954bc9221acccc8a334f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::grabValueFrom</source>
          <target state="translated">PhpBrowser::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="61bf1232ae84f9d034eef18ffddd1262aa2bf3a9" translate="yes" xml:space="preserve">
          <source>PhpBrowser::haveHttpHeader</source>
          <target state="translated">PhpBrowser::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="478677aafccbe03c0451c4058c1057bad3d00d35" translate="yes" xml:space="preserve">
          <source>PhpBrowser::makeHtmlSnapshot</source>
          <target state="translated">PhpBrowser::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="5dcf0b125e080d85d5ca2be6cd9f31c62b76d47d" translate="yes" xml:space="preserve">
          <source>PhpBrowser::moveBack</source>
          <target state="translated">PhpBrowser::moveBack</target>
        </trans-unit>
        <trans-unit id="8d9c4c21f442f4e68e3631aa1f39cd303217380a" translate="yes" xml:space="preserve">
          <source>PhpBrowser::resetCookie</source>
          <target state="translated">PhpBrowser::resetCookie</target>
        </trans-unit>
        <trans-unit id="5e19ce1d2df38c2e1a5fd4288cfc2bc4ffdd118f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::see</source>
          <target state="translated">PhpBrowser::see</target>
        </trans-unit>
        <trans-unit id="ff1f9f4f1552792288248ec45c79aaf74d11b760" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCheckboxIsChecked</source>
          <target state="translated">PhpBrowser::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="b3a25b3aa92b42a73578c39afa8105bba2526ea8" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCookie</source>
          <target state="translated">PhpBrowser::seeCookie</target>
        </trans-unit>
        <trans-unit id="d4d34eef822a6533e8514484c77a8656582ee0ed" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCurrentUrlEquals</source>
          <target state="translated">PhpBrowser::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="de3a21a324c4568ef28f4d12fca6c14eac7de3d5" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeCurrentUrlMatches</source>
          <target state="translated">PhpBrowser::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="fdce6657390cf9a264a548186da1ff66c4e29105" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeElement</source>
          <target state="translated">PhpBrowser::seeElement</target>
        </trans-unit>
        <trans-unit id="80693e3e530826b690bc2696f481cac5e40e1da7" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInCurrentUrl</source>
          <target state="translated">PhpBrowser::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="f34a325c6276e1ccf7f284d8344e11dbfec0d91f" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInField</source>
          <target state="translated">PhpBrowser::seeInField</target>
        </trans-unit>
        <trans-unit id="fd1da1574e80c150bcb66008ba1c98b9767a515d" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInFormFields</source>
          <target state="translated">PhpBrowser::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="1709dbea4347e0382211d808108e445cac62fd0b" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInSource</source>
          <target state="translated">PhpBrowser::seeInSource</target>
        </trans-unit>
        <trans-unit id="b39ac2595ad27ad88887d42f38d0824f742f1e68" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeInTitle</source>
          <target state="translated">PhpBrowser::seeInTitle</target>
        </trans-unit>
        <trans-unit id="dcaaa2c0c86a0c01da97f3cfb26b309abac730f1" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeLink</source>
          <target state="translated">PhpBrowser::seeLink</target>
        </trans-unit>
        <trans-unit id="5c459e96e1aa0e09a96060e6fe20f5f42011a06b" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeNumberOfElements</source>
          <target state="translated">PhpBrowser::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="85d90070f7bf2e690bc2c8405346d471ee19a237" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeOptionIsSelected</source>
          <target state="translated">PhpBrowser::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="8d9cf6f1697bbd21c85212e72621974edb13d461" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seePageNotFound</source>
          <target state="translated">PhpBrowser::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="908d2f99eb3c13bb7f795b4b948ef2cb67497d64" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIs</source>
          <target state="translated">PhpBrowser::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="1b718ce10986b47740644bcac5728260b18e39ea" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsBetween</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="cd1c30a06b069c4d03c59fc104abf31457356125" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsClientError</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="70ffd8cabd6b8ddcea0b2e513a19417874c6bfdf" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsRedirection</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="f9b130253216cded39c8e3c130db879ec4d07f6c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsServerError</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="d4e513d50d87392bec02a3ce39544de8e75447c7" translate="yes" xml:space="preserve">
          <source>PhpBrowser::seeResponseCodeIsSuccessful</source>
          <target state="translated">PhpBrowser::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="376a8813e3275d37e3e28b5beb4a2ba974857d41" translate="yes" xml:space="preserve">
          <source>PhpBrowser::selectOption</source>
          <target state="translated">PhpBrowser::selectOption</target>
        </trans-unit>
        <trans-unit id="cecf6fcee44f23f32ba4f13c6d3947166790c057" translate="yes" xml:space="preserve">
          <source>PhpBrowser::sendAjaxGetRequest</source>
          <target state="translated">PhpBrowser::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="df1c4f7bd86fd9d8a17c4e4bc9f634d6b95b142c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::sendAjaxPostRequest</source>
          <target state="translated">PhpBrowser::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="47f9e38a4bfd0308e7fc7a9d5d75eb03aa6b1970" translate="yes" xml:space="preserve">
          <source>PhpBrowser::sendAjaxRequest</source>
          <target state="translated">PhpBrowser::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="704ef3cf5ed97ada4ff91f5c427036cacc4f796c" translate="yes" xml:space="preserve">
          <source>PhpBrowser::setCookie</source>
          <target state="translated">PhpBrowser::setCookie</target>
        </trans-unit>
        <trans-unit id="eaf2e2c4ea94d7101a8f443d404d3f1de511b8f9" translate="yes" xml:space="preserve">
          <source>PhpBrowser::setHeader</source>
          <target state="translated">PhpBrowser::setHeader</target>
        </trans-unit>
        <trans-unit id="41750f91fa6fabb9c84e310190d8fea6f8cbfdc6" translate="yes" xml:space="preserve">
          <source>PhpBrowser::submitForm</source>
          <target state="translated">PhpBrowser::submitForm</target>
        </trans-unit>
        <trans-unit id="7451c9aac453ee81a75d16aac74054328aafdd13" translate="yes" xml:space="preserve">
          <source>PhpBrowser::switchToIframe</source>
          <target state="translated">PhpBrowser::switchToIframe</target>
        </trans-unit>
        <trans-unit id="2d542a3c05be611e553ce374914448a0e3ceeccf" translate="yes" xml:space="preserve">
          <source>PhpBrowser::uncheckOption</source>
          <target state="translated">PhpBrowser::uncheckOption</target>
        </trans-unit>
        <trans-unit id="51c6eb01fa5c3ab7311e79bb799debeca215a459" translate="yes" xml:space="preserve">
          <source>Phundament App with Codeception</source>
          <target state="translated">Codeception이있는 기본 앱</target>
        </trans-unit>
        <trans-unit id="66f56bcd9f46b69936d2b23a1a3881e1763ffaa6" translate="yes" xml:space="preserve">
          <source>Place the &lt;code&gt;codeception.yml&lt;/code&gt; file into the root folder of your project and specify the paths to the other &lt;code&gt;codeception.yml&lt;/code&gt; configurations that you want to include:</source>
          <target state="translated">장소 &lt;code&gt;codeception.yml&lt;/code&gt; 의 프로젝트의 루트 폴더에 파일을 다른의 경로를 지정 &lt;code&gt;codeception.yml&lt;/code&gt; 에 포함 할 것을 구성 :</target>
        </trans-unit>
        <trans-unit id="ce4bd6efa70664b4f23131fddba55200cc8b1479" translate="yes" xml:space="preserve">
          <source>Please keep in mind that all string keys and values must be enclosed in double quotes (`&quot;`).</source>
          <target state="translated">모든 문자열 키와 값은 큰 따옴표 (` &quot;`)로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="426012b26f73fa8f886f3eac3605a2ca408b6968" translate="yes" xml:space="preserve">
          <source>Please make sure you have &lt;code&gt;docker&lt;/code&gt; or &lt;a href=&quot;https://www.docker.com/products/docker-toolbox&quot;&gt;Docker Toolbox&lt;/a&gt; installed. Docker experience is required as well.</source>
          <target state="translated">&lt;code&gt;docker&lt;/code&gt; 또는 &lt;a href=&quot;https://www.docker.com/products/docker-toolbox&quot;&gt;Docker Toolbox가&lt;/a&gt; 설치되어 있는지 확인하십시오 . 도커 경험도 필요합니다.</target>
        </trans-unit>
        <trans-unit id="95b08ef9de6be82e74b981d89b38d6f901af469d" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;:num1&lt;/code&gt; placeholder can be used for strings and numbers (may contain currency sign). In current case &lt;code&gt;:num1&lt;/code&gt; matches &lt;code&gt;$600&lt;/code&gt; and &lt;code&gt;$num1&lt;/code&gt; is assigned to be 600. If you need to receive exact string, wrap the value into quotes: &lt;code&gt;&quot;600$&quot;&lt;/code&gt;</source>
          <target state="translated">있습니다 &lt;code&gt;:num1&lt;/code&gt; 자리가 문자열과 숫자 (통화 기호를 포함 할 수있다)에 사용할 수 있습니다. 현재의 경우 &lt;code&gt;:num1&lt;/code&gt; 은 &lt;code&gt;$600&lt;/code&gt; 과 일치 하고 &lt;code&gt;$num1&lt;/code&gt; 은 600 으로 지정됩니다. 정확한 문자열을 수신하려면 값을 따옴표로 묶으십시오. &lt;code&gt;&quot;600$&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="032fd37f6f74d66a21747e2f3b7ddbd202843968" translate="yes" xml:space="preserve">
          <source>Please note that actions executed in a browser will behave differently. For instance, &lt;code&gt;seeElement&lt;/code&gt; won&amp;rsquo;t just check that the element exists on a page, but it will also check that element is actually visible to the user:</source>
          <target state="translated">브라우저에서 실행 된 동작은 다르게 동작합니다. 예를 들어, &lt;code&gt;seeElement&lt;/code&gt; 는 요소가 페이지에 존재하는지 확인하는 것이 아니라 요소가 실제로 사용자에게 표시 되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5a02c0723265991c59afb714f87c93cae9f7edc9" translate="yes" xml:space="preserve">
          <source>Please note that methods with a &lt;code&gt;_&lt;/code&gt; prefix are not added to the Actor class. This allows them to be defined as public but used only for internal purposes.</source>
          <target state="translated">접두사가 &lt;code&gt;_&lt;/code&gt; 인 메소드 는 Actor 클래스에 추가되지 않습니다. 이를 통해 공개로 정의 될 수 있지만 내부 목적으로 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7d87ab341fddb1e30a7af18e9de29eabce48a078" translate="yes" xml:space="preserve">
          <source>Please note that regular expressions should start and end with &lt;code&gt;/&lt;/code&gt; char. Regex is also used to match parameters and pass them as arguments into methods.</source>
          <target state="translated">정규식은 &lt;code&gt;/&lt;/code&gt; char로 시작하고 끝나야 합니다. 정규식은 매개 변수를 일치시키고 매개 변수를 메서드에 인수로 전달하는데도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ea1af53c40eb776c4f03e6dd51dfdb8a8e9efce3" translate="yes" xml:space="preserve">
          <source>Please note, that PHP SoapServer::handle method sends additional headers. This may trigger warning: &amp;ldquo;Cannot modify header information&amp;rdquo; If you use PHP SoapServer with framework, try to block call to this method in testing environment.</source>
          <target state="translated">PHP SoapServer :: handle 메소드는 추가 헤더를 보냅니다. &quot;헤더 정보를 수정할 수 없습니다&quot;라는 경고가 발생할 수 있습니다. 프레임 워크와 함께 PHP SoapServer를 사용하는 경우 테스트 환경에서이 메소드에 대한 호출을 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="8275492ac0a3c2832df28795861639083447018a" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/Codeception/Codeception/blob/2.3/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;complete example&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/blob/2.3/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;완전한 예를&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="6369f53931f47032c045754e0c1618a7353f314b" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/Codeception/Codeception/blob/4.0/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;complete example&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/blob/4.0/tests/data/register_command/examples/MyCustomCommand.php&quot;&gt;전체 예를&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="f06761b98f536045f9f9c98da4e1c3208e0b96d0" translate="yes" xml:space="preserve">
          <source>Please, follow installation instructions described in a &lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;readme file&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;추가 정보 파일에&lt;/a&gt; 설명 된 설치 지침을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="d55892d44f597a354d922174c6a9a5732529b9e8" translate="yes" xml:space="preserve">
          <source>Popular frameworks like Laravel, Yii, and Phalcon include an ActiveRecord data layer by default. Because of this tight integration, you just need to enable the framework module, and use its configuration for database access.</source>
          <target state="translated">Laravel, Yii 및 Phalcon과 같은 인기있는 프레임 워크에는 기본적으로 ActiveRecord 데이터 계층이 포함됩니다. 이러한 긴밀한 통합으로 인해 프레임 워크 모듈을 활성화하고 해당 구성을 데이터베이스 액세스에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="509d72cda9aebd9b6f1ff49e0924407abc6b2b86" translate="yes" xml:space="preserve">
          <source>Populating Database:</source>
          <target state="translated">데이터베이스 채우기 :</target>
        </trans-unit>
        <trans-unit id="bf96d350be2ca7a76b1a13c8f8591bff15a1c441" translate="yes" xml:space="preserve">
          <source>Populator</source>
          <target state="translated">Populator</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="60bf3b5311954ecfe76b7c42b580c83fc11274d2" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-pgsql.connection.php&quot;&gt;PDO_PGSQL DSN&lt;/a&gt;</source>
          <target state="translated">PostgreSQL : &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-pgsql.connection.php&quot;&gt;PDO_PGSQL DSN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f3919c8c797fff42367cf5284ec210187b708b7" translate="yes" xml:space="preserve">
          <source>Prepare SOAP header. Receives header name and parameters as array.</source>
          <target state="translated">SOAP 헤더를 준비하십시오. 헤더 이름과 매개 변수를 배열로받습니다.</target>
        </trans-unit>
        <trans-unit id="b04b12f3c94d2f45d23fa12e85482c95b217ce95" translate="yes" xml:space="preserve">
          <source>Prepare methods can invoke all methods of a module, as well as hidden API methods (starting with &lt;code&gt;_&lt;/code&gt;). Use them to customize the module setup for a specific test.</source>
          <target state="translated">준비 메소드는 모듈의 모든 메소드와 숨겨진 API 메소드 ( &lt;code&gt;_&lt;/code&gt; 로 시작)를 호출 할 수 있습니다 . 이를 사용하여 특정 테스트에 대한 모듈 설정을 사용자 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="f1d07a615206f55a493b776045f4a48dd3048dcb" translate="yes" xml:space="preserve">
          <source>Preparing Jenkins</source>
          <target state="translated">젠킨스 준비</target>
        </trans-unit>
        <trans-unit id="ad146eca1017b16c08a08997ef95f2a365d24b90" translate="yes" xml:space="preserve">
          <source>Preparing Robo</source>
          <target state="translated">로보 준비</target>
        </trans-unit>
        <trans-unit id="973fd3a3d3afc5fb130f41a8d4fadeb1321c6ee5" translate="yes" xml:space="preserve">
          <source>Preparing Robo and Robo-paracept</source>
          <target state="translated">Robo 및 Robo-paracept 준비</target>
        </trans-unit>
        <trans-unit id="d8081ad76c0bebe520c90d802a1f7055d47c2ffd" translate="yes" xml:space="preserve">
          <source>Preparing data for testing is a very creative, although boring, task. If you create a record, you need to fill in all the fields of the model. It is much easier to use &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; for this task, which is more effective to set up data generation rules for models. Such a set of rules is called &lt;em&gt;factories&lt;/em&gt; and are provided by the &lt;a href=&quot;modules/datafactory&quot;&gt;DataFactory&lt;/a&gt; module.</source>
          <target state="translated">테스트를위한 데이터 준비는 지루하지만 매우 창의적인 작업입니다. 레코드를 작성하는 경우 모델의 모든 필드를 채워야합니다. 이 작업에 &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; 를 사용하는 것이 훨씬 쉬워 모델에 대한 데이터 생성 규칙을 설정하는 것이 더 효과적입니다. 이러한 규칙 세트를 &lt;em&gt;팩토리&lt;/em&gt; 라고 하며 &lt;a href=&quot;modules/datafactory&quot;&gt;DataFactory&lt;/a&gt; 모듈에서 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="b5af004ca967d765127d7bb81be5b726d2804db7" translate="yes" xml:space="preserve">
          <source>Presses the given key on the given element. To specify a character and modifier (e.g.</source>
          <target state="translated">주어진 요소에서 주어진 키를 누릅니다. 문자 및 수정자를 지정하려면 (예 :</target>
        </trans-unit>
        <trans-unit id="9d87b4fd2ec61f1efdbe4eafa4ecd19b32c06e70" translate="yes" xml:space="preserve">
          <source>Presses the given key on the given element. To specify a character and modifier (e.g. ctrl, alt, shift, meta), pass an array for $char with the modifier as the first element and the character as the second. For special keys use key constants from WebDriverKeys class.</source>
          <target state="translated">주어진 요소에서 주어진 키를 누릅니다. 문자와 수정자를 지정하려면 (예 : ctrl, alt, shift, meta) 수정자를 첫 번째 요소로, 문자를 두 번째로 사용하여 $ char에 대한 배열을 전달하십시오. 특수 키의 경우 WebDriverKeys 클래스의 키 상수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="014259b7679f309d9af69408e9564f4f79f9a1d6" translate="yes" xml:space="preserve">
          <source>Prevents automatic redirects to be followed by the client</source>
          <target state="translated">클라이언트가 자동 리디렉션을 수행하지 못하도록 방지</target>
        </trans-unit>
        <trans-unit id="0241eee5e634f6767797beda253c063cfa03b2ae" translate="yes" xml:space="preserve">
          <source>Print a message to console.</source>
          <target state="translated">콘솔에 메시지를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="d0b6fcad4e873a7d525a45ee221223b8c87cfed8" translate="yes" xml:space="preserve">
          <source>Print a successful message</source>
          <target state="translated">성공적인 메시지 인쇄</target>
        </trans-unit>
        <trans-unit id="c3d56b78038232c6fc47cdb186a43261517203dc" translate="yes" xml:space="preserve">
          <source>Print debug message to the screen.</source>
          <target state="translated">디버그 메시지를 화면에 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="3d8541448bc2d2d536e3f77b836dd39220221af7" translate="yes" xml:space="preserve">
          <source>Print debug message with a title</source>
          <target state="translated">제목이있는 디버그 메시지 인쇄</target>
        </trans-unit>
        <trans-unit id="c6f62c0920ecca1403f14b049845e8382e744744" translate="yes" xml:space="preserve">
          <source>Print error message</source>
          <target state="translated">오류 메시지 인쇄</target>
        </trans-unit>
        <trans-unit id="5d626ecd6b197412a003f1081c44b163ba67769e" translate="yes" xml:space="preserve">
          <source>Print info message</source>
          <target state="translated">정보 메시지 인쇄</target>
        </trans-unit>
        <trans-unit id="14b99272e608a38d962553aa4d47656dc329aa0a" translate="yes" xml:space="preserve">
          <source>Print out latest Selenium Logs in debug mode</source>
          <target state="translated">디버그 모드에서 최신 Selenium 로그 인쇄</target>
        </trans-unit>
        <trans-unit id="8b2f45978c8337b3d624e728313f352e9bacf16d" translate="yes" xml:space="preserve">
          <source>Print warning message</source>
          <target state="translated">경고 메시지 인쇄</target>
        </trans-unit>
        <trans-unit id="8ddd89024172da5fca1e9d3325a8bfcad4a10916" translate="yes" xml:space="preserve">
          <source>Prints all steps from all Gherkin contexts for a specific suite</source>
          <target state="translated">특정 제품군에 대한 모든 Gherkin 컨텍스트에서 모든 단계를 인쇄합니다</target>
        </trans-unit>
        <trans-unit id="31a8c39c967fed38f796c23043a91d686fe253f0" translate="yes" xml:space="preserve">
          <source>Prints information when running in debug mode. String, array, or object can be provided as argument.</source>
          <target state="translated">디버그 모드에서 실행될 때 정보를 인쇄합니다. 문자열, 배열 또는 객체를 인수로 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="351f56a6fefd5127c90506d3e91990f1d7631787" translate="yes" xml:space="preserve">
          <source>Properties:</source>
          <target state="translated">Properties:</target>
        </trans-unit>
        <trans-unit id="a2651b39a3f13a9c2d30b19cd36cfc30224ccf2f" translate="yes" xml:space="preserve">
          <source>Provide a path to SQL file in &lt;code&gt;dump&lt;/code&gt; config option:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; config 옵션 에서 SQL 파일의 경로를 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="edc0d213e7818bfec737b673e8d02bb634229bc1" translate="yes" xml:space="preserve">
          <source>Provide an array for the second argument to select multiple options:</source>
          <target state="translated">여러 옵션을 선택하기 위해 두 번째 인수에 대한 배열을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="4b6c4397bddeafdead1a1ed82a5f7ace7d34be44" translate="yes" xml:space="preserve">
          <source>Provides access the Laravel application object.</source>
          <target state="translated">Laravel 응용 프로그램 객체에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="46a917a3207791217899cf4f8a80f45808b84bf1" translate="yes" xml:space="preserve">
          <source>Provides access the Lumen application object.</source>
          <target state="translated">루멘 애플리케이션 오브젝트에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0b1868f5b3cfd953176f6ae57233248db35b5943" translate="yes" xml:space="preserve">
          <source>Provides access the Phalcon application object.</source>
          <target state="translated">Phalcon 응용 프로그램 개체에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">퍼블릭 API</target>
        </trans-unit>
        <trans-unit id="5bd4a403c067082197eab0007df1ac6f56c5045e" translate="yes" xml:space="preserve">
          <source>Public Properties</source>
          <target state="translated">공공 재산</target>
        </trans-unit>
        <trans-unit id="bda7c9c564e76ce35029ad11228afd5afb7a8d82" translate="yes" xml:space="preserve">
          <source>Public methods of this class start with &lt;code&gt;_&lt;/code&gt; prefix in order to ignore them in actor classes. Module contains &lt;strong&gt;HOOKS&lt;/strong&gt; which allow to handle test execution routine.</source>
          <target state="translated">이 클래스의 퍼블릭 메소드는 액터 클래스에서 무시하기 위해 &lt;code&gt;_&lt;/code&gt; 접두어로 시작 합니다. 모듈에는 테스트 실행 루틴을 처리 할 수있는 &lt;strong&gt;HOOKS&lt;/strong&gt; 가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="731f5a13ee4b7151be375610b4d4b9c8c4010aa9" translate="yes" xml:space="preserve">
          <source>Public methods prefixed by `_` are treated as hidden and won't be added to your Actor class.</source>
          <target state="translated">접두사`_`가 붙은 퍼블릭 메소드는 숨겨진 것으로 취급되어 액터 클래스에 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a74d1b758f29e95164f15294ff997a5fefaf6672" translate="yes" xml:space="preserve">
          <source>Public properties</source>
          <target state="translated">공공 재산</target>
        </trans-unit>
        <trans-unit id="95f879a5a4da20c3d178c44acea8c12c522ea663" translate="yes" xml:space="preserve">
          <source>Purge a specific queue defined in config.</source>
          <target state="translated">구성에 정의 된 특정 큐를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="06647b56fee1dd5b3357be6d337502222d8e7b88" translate="yes" xml:space="preserve">
          <source>Purge all queues defined in config.</source>
          <target state="translated">구성에 정의 된 모든 큐를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="84f2680d95df677767ad2a02ced7ab510413fa2f" translate="yes" xml:space="preserve">
          <source>QAs</source>
          <target state="translated">QAs</target>
        </trans-unit>
        <trans-unit id="eec149e55424ec5471c9d15b1338db0a00818250" translate="yes" xml:space="preserve">
          <source>Query generation</source>
          <target state="translated">쿼리 생성</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="aa0943c8dc0f9b9946fd26f354c84a2ccd25c79a" translate="yes" xml:space="preserve">
          <source>Queue::addMessageToQueue</source>
          <target state="translated">Queue::addMessageToQueue</target>
        </trans-unit>
        <trans-unit id="d3e53e543b1d925a148d92d2711da148187a29d3" translate="yes" xml:space="preserve">
          <source>Queue::clearQueue</source>
          <target state="translated">Queue::clearQueue</target>
        </trans-unit>
        <trans-unit id="d2f7015259a77a4836ce8c44c5be67ef07055d9d" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeEmptyQueue</source>
          <target state="translated">Queue::dontSeeEmptyQueue</target>
        </trans-unit>
        <trans-unit id="206dc3287ac6efcb73feaaf45f929c84eb056853" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeQueueExists</source>
          <target state="translated">Queue::dontSeeQueueExists</target>
        </trans-unit>
        <trans-unit id="b2e7bf7945ee29bb6fb67390cc271367ecc5a285" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeQueueHasCurrentCount</source>
          <target state="translated">Queue::dontSeeQueueHasCurrentCount</target>
        </trans-unit>
        <trans-unit id="d60f6343685e8ef5046922368e617b5dadaa1fe6" translate="yes" xml:space="preserve">
          <source>Queue::dontSeeQueueHasTotalCount</source>
          <target state="translated">Queue::dontSeeQueueHasTotalCount</target>
        </trans-unit>
        <trans-unit id="f478182539719cd985575e0a85914a0fb3ab8a1b" translate="yes" xml:space="preserve">
          <source>Queue::grabQueueCurrentCount</source>
          <target state="translated">Queue::grabQueueCurrentCount</target>
        </trans-unit>
        <trans-unit id="df8c56fb7effc5d4aeba4e79758305cafaca1183" translate="yes" xml:space="preserve">
          <source>Queue::grabQueueTotalCount</source>
          <target state="translated">Queue::grabQueueTotalCount</target>
        </trans-unit>
        <trans-unit id="83ec9b25d27a17ab0942e3020da0e15b987fdba2" translate="yes" xml:space="preserve">
          <source>Queue::grabQueues</source>
          <target state="translated">Queue::grabQueues</target>
        </trans-unit>
        <trans-unit id="c509d4193aa8b8d799c96029b54f92e3792ac33a" translate="yes" xml:space="preserve">
          <source>Queue::seeEmptyQueue</source>
          <target state="translated">Queue::seeEmptyQueue</target>
        </trans-unit>
        <trans-unit id="8e3da549b1de04ba1901634f66dcdc9ff44f6502" translate="yes" xml:space="preserve">
          <source>Queue::seeQueueExists</source>
          <target state="translated">Queue::seeQueueExists</target>
        </trans-unit>
        <trans-unit id="29c156e29e8460cf68d2c2ec2d4600aa2a8f0b6f" translate="yes" xml:space="preserve">
          <source>Queue::seeQueueHasCurrentCount</source>
          <target state="translated">Queue::seeQueueHasCurrentCount</target>
        </trans-unit>
        <trans-unit id="ee96762d399a2a1b513445d943a402410beb0287" translate="yes" xml:space="preserve">
          <source>Queue::seeQueueHasTotalCount</source>
          <target state="translated">Queue::seeQueueHasTotalCount</target>
        </trans-unit>
        <trans-unit id="cbaaa18133a5ea571bba33bebe1a8cc7e93344f9" translate="yes" xml:space="preserve">
          <source>REST</source>
          <target state="translated">REST</target>
        </trans-unit>
        <trans-unit id="cec9f3739c3e2f0e0437a3141590dfba60bb4e1b" translate="yes" xml:space="preserve">
          <source>REST API</source>
          <target state="translated">REST API</target>
        </trans-unit>
        <trans-unit id="d59f56172046bbea35356e5e3635a0f058b1a991" translate="yes" xml:space="preserve">
          <source>REST API tests</source>
          <target state="translated">REST API 테스트</target>
        </trans-unit>
        <trans-unit id="74ac9b462e37c63b081b5c2233a021ea57e90c58" translate="yes" xml:space="preserve">
          <source>REST::amAWSAuthenticated</source>
          <target state="translated">REST::amAWSAuthenticated</target>
        </trans-unit>
        <trans-unit id="c01708dc1c4ddc9cf39227eee3a851edfebcd7b5" translate="yes" xml:space="preserve">
          <source>REST::amBearerAuthenticated</source>
          <target state="translated">REST::amBearerAuthenticated</target>
        </trans-unit>
        <trans-unit id="a3d43d9c81a6ae3c927773937dd872140af8afd4" translate="yes" xml:space="preserve">
          <source>REST::amDigestAuthenticated</source>
          <target state="translated">REST::amDigestAuthenticated</target>
        </trans-unit>
        <trans-unit id="45ef2607cc4a0f99505f3de3969d4cbf2fcd4495" translate="yes" xml:space="preserve">
          <source>REST::amHttpAuthenticated</source>
          <target state="translated">REST::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="618d2c143c85ed5ffdee2074f737063cd7f993e5" translate="yes" xml:space="preserve">
          <source>REST::amNTLMAuthenticated</source>
          <target state="translated">REST::amNTLMAuthenticated</target>
        </trans-unit>
        <trans-unit id="063d63a0ca8c460b13788956f7e65b1c88d47426" translate="yes" xml:space="preserve">
          <source>REST::deleteHeader</source>
          <target state="translated">REST::deleteHeader</target>
        </trans-unit>
        <trans-unit id="cab88014f15a08f52859bf6ce5441d9adf9459e0" translate="yes" xml:space="preserve">
          <source>REST::dontSeeBinaryResponseEquals</source>
          <target state="translated">REST::dontSeeBinaryResponseEquals</target>
        </trans-unit>
        <trans-unit id="7eda7ed703e2b48455a93bdd440f19cd6b606f9f" translate="yes" xml:space="preserve">
          <source>REST::dontSeeHttpHeader</source>
          <target state="translated">REST::dontSeeHttpHeader</target>
        </trans-unit>
        <trans-unit id="455c63250abd840d92d763c51d1cc85f050573de" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseCodeIs</source>
          <target state="translated">REST::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="30ec4a10f0f2b6625130e822903bab47283ee74c" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseContains</source>
          <target state="translated">REST::dontSeeResponseContains</target>
        </trans-unit>
        <trans-unit id="1c3a4b381ee82d7c0ee64878ed3ab23b52dc0e2d" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseContainsJson</source>
          <target state="translated">REST::dontSeeResponseContainsJson</target>
        </trans-unit>
        <trans-unit id="d518acb316eed33e87f44ba4ffb70f2d668c25d2" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseJsonMatchesJsonPath</source>
          <target state="translated">REST::dontSeeResponseJsonMatchesJsonPath</target>
        </trans-unit>
        <trans-unit id="513ac2b18924fb103a9218e6e802692331dbd5f3" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseJsonMatchesXpath</source>
          <target state="translated">REST::dontSeeResponseJsonMatchesXpath</target>
        </trans-unit>
        <trans-unit id="26c00d1ba26af8548ffd7adb733c4bf65073c7c5" translate="yes" xml:space="preserve">
          <source>REST::dontSeeResponseMatchesJsonType</source>
          <target state="translated">REST::dontSeeResponseMatchesJsonType</target>
        </trans-unit>
        <trans-unit id="42c50ea7827149170e3e06a60018ba65f9690644" translate="yes" xml:space="preserve">
          <source>REST::dontSeeXmlResponseEquals</source>
          <target state="translated">REST::dontSeeXmlResponseEquals</target>
        </trans-unit>
        <trans-unit id="b850328172097363efbec2cf8935b8904c4ead13" translate="yes" xml:space="preserve">
          <source>REST::dontSeeXmlResponseIncludes</source>
          <target state="translated">REST::dontSeeXmlResponseIncludes</target>
        </trans-unit>
        <trans-unit id="7bbd59e4366af340d20d2f8f1e25c030e147a214" translate="yes" xml:space="preserve">
          <source>REST::dontSeeXmlResponseMatchesXpath</source>
          <target state="translated">REST::dontSeeXmlResponseMatchesXpath</target>
        </trans-unit>
        <trans-unit id="ebdb927886374c1ee3d3393cd0c7e8e74ed7d444" translate="yes" xml:space="preserve">
          <source>REST::grabAttributeFromXmlElement</source>
          <target state="translated">REST::grabAttributeFromXmlElement</target>
        </trans-unit>
        <trans-unit id="1f0e8d1573fe9624a5ed1d8daefa3acd7107abef" translate="yes" xml:space="preserve">
          <source>REST::grabDataFromResponseByJsonPath</source>
          <target state="translated">REST::grabDataFromResponseByJsonPath</target>
        </trans-unit>
        <trans-unit id="0a155df6d91ede0f2ac2192810011ec0348489a5" translate="yes" xml:space="preserve">
          <source>REST::grabHttpHeader</source>
          <target state="translated">REST::grabHttpHeader</target>
        </trans-unit>
        <trans-unit id="f54147f345232b35f51776d5523002b2bec95acf" translate="yes" xml:space="preserve">
          <source>REST::grabResponse</source>
          <target state="translated">REST::grabResponse</target>
        </trans-unit>
        <trans-unit id="44edba163d4760b7ca98bfdbfd5093a2d47862c7" translate="yes" xml:space="preserve">
          <source>REST::grabTextContentFromXmlElement</source>
          <target state="translated">REST::grabTextContentFromXmlElement</target>
        </trans-unit>
        <trans-unit id="d23d4393301362559acd0609006b3a69b076d7c1" translate="yes" xml:space="preserve">
          <source>REST::haveHttpHeader</source>
          <target state="translated">REST::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="1508dffa5b33152ff5b9b94b90f95fab32f8c883" translate="yes" xml:space="preserve">
          <source>REST::seeBinaryResponseEquals</source>
          <target state="translated">REST::seeBinaryResponseEquals</target>
        </trans-unit>
        <trans-unit id="a24de3d2791c9c52416d453f78811ac7dc3ff385" translate="yes" xml:space="preserve">
          <source>REST::seeHttpHeader</source>
          <target state="translated">REST::seeHttpHeader</target>
        </trans-unit>
        <trans-unit id="97545eb674fce3a933c4ac1ba0ecfd5256c8f042" translate="yes" xml:space="preserve">
          <source>REST::seeHttpHeaderOnce</source>
          <target state="translated">REST::seeHttpHeaderOnce</target>
        </trans-unit>
        <trans-unit id="6247059f04cadd0e71e5fece747db940f986332b" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIs</source>
          <target state="translated">REST::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="99b56096fc06a2e039c503f155166665391bcf6c" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsClientError</source>
          <target state="translated">REST::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="dcb67fdb912175ce7ac7c87d21543cb8a2e2dbd5" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsRedirection</source>
          <target state="translated">REST::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="e0381bba3603f7b69386b3c26d928168cfd81abd" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsServerError</source>
          <target state="translated">REST::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="64189ef82c26b6465ce3d8c81bc5beebf1e2bf4a" translate="yes" xml:space="preserve">
          <source>REST::seeResponseCodeIsSuccessful</source>
          <target state="translated">REST::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="adb25d5dbbcaef2e4ed4490dbd21c644e1614536" translate="yes" xml:space="preserve">
          <source>REST::seeResponseContains</source>
          <target state="translated">REST::seeResponseContains</target>
        </trans-unit>
        <trans-unit id="be9bb4231a9deb71f4b5ea4e3ef4e9b7de15b24e" translate="yes" xml:space="preserve">
          <source>REST::seeResponseContainsJson</source>
          <target state="translated">REST::seeResponseContainsJson</target>
        </trans-unit>
        <trans-unit id="9b4f5f58389e7af65063310a5ce3b89babf3c610" translate="yes" xml:space="preserve">
          <source>REST::seeResponseEquals</source>
          <target state="translated">REST::seeResponseEquals</target>
        </trans-unit>
        <trans-unit id="41ee46426de2948f89518e1c6f1206f5edf51d43" translate="yes" xml:space="preserve">
          <source>REST::seeResponseIsJson</source>
          <target state="translated">REST::seeResponseIsJson</target>
        </trans-unit>
        <trans-unit id="78fb4a7f7dd6947ea2cbb89908dc67584bd2259b" translate="yes" xml:space="preserve">
          <source>REST::seeResponseIsXml</source>
          <target state="translated">REST::seeResponseIsXml</target>
        </trans-unit>
        <trans-unit id="a55a2a4eb3b9137ef5a3f926053c2e1835c50923" translate="yes" xml:space="preserve">
          <source>REST::seeResponseJsonMatchesJsonPath</source>
          <target state="translated">REST::seeResponseJsonMatchesJsonPath</target>
        </trans-unit>
        <trans-unit id="110624c6e9d28143ec90f077bbd840b49d63c9b8" translate="yes" xml:space="preserve">
          <source>REST::seeResponseJsonMatchesXpath</source>
          <target state="translated">REST::seeResponseJsonMatchesXpath</target>
        </trans-unit>
        <trans-unit id="02603c58d9c5e900f04a8677237723be6a9a29fe" translate="yes" xml:space="preserve">
          <source>REST::seeResponseMatchesJsonType</source>
          <target state="translated">REST::seeResponseMatchesJsonType</target>
        </trans-unit>
        <trans-unit id="7281173ab5fd6ab979eae1c4c55e1c7c2c9efb3a" translate="yes" xml:space="preserve">
          <source>REST::seeXmlResponseEquals</source>
          <target state="translated">REST::seeXmlResponseEquals</target>
        </trans-unit>
        <trans-unit id="6f3594a08f6f202c62581dc4d18dd935eff5048f" translate="yes" xml:space="preserve">
          <source>REST::seeXmlResponseIncludes</source>
          <target state="translated">REST::seeXmlResponseIncludes</target>
        </trans-unit>
        <trans-unit id="c1173ded23025700356f359454ee1bb5d49d0cd6" translate="yes" xml:space="preserve">
          <source>REST::seeXmlResponseMatchesXpath</source>
          <target state="translated">REST::seeXmlResponseMatchesXpath</target>
        </trans-unit>
        <trans-unit id="892a4b2aa4d8a8a91892e909227173ec1a04e0fd" translate="yes" xml:space="preserve">
          <source>REST::sendDELETE</source>
          <target state="translated">REST::sendDELETE</target>
        </trans-unit>
        <trans-unit id="ec3d73f1d7b01196fcae5a9d38c3714fd1c1d6f6" translate="yes" xml:space="preserve">
          <source>REST::sendGET</source>
          <target state="translated">REST::sendGET</target>
        </trans-unit>
        <trans-unit id="4abea603d78855c3ef3834faab3f2e55e320d283" translate="yes" xml:space="preserve">
          <source>REST::sendHEAD</source>
          <target state="translated">REST::sendHEAD</target>
        </trans-unit>
        <trans-unit id="518cf02952db98869879f51548df416a63db0076" translate="yes" xml:space="preserve">
          <source>REST::sendLINK</source>
          <target state="translated">REST::sendLINK</target>
        </trans-unit>
        <trans-unit id="a0a801c147692a75a78779685d51adaef7e030ce" translate="yes" xml:space="preserve">
          <source>REST::sendOPTIONS</source>
          <target state="translated">REST::sendOPTIONS</target>
        </trans-unit>
        <trans-unit id="afe1cd8d993a047d8f7d0a05814d2a824585113d" translate="yes" xml:space="preserve">
          <source>REST::sendPATCH</source>
          <target state="translated">REST::sendPATCH</target>
        </trans-unit>
        <trans-unit id="cd9802887ab4ced333dba65b6d9d65dc7a137c8e" translate="yes" xml:space="preserve">
          <source>REST::sendPOST</source>
          <target state="translated">REST::sendPOST</target>
        </trans-unit>
        <trans-unit id="ac8daad6f7f4b2939076099103faa2008a4f4c8c" translate="yes" xml:space="preserve">
          <source>REST::sendPUT</source>
          <target state="translated">REST::sendPUT</target>
        </trans-unit>
        <trans-unit id="7cdcaed3b6231f98758b75553e384c94dbede17b" translate="yes" xml:space="preserve">
          <source>REST::sendUNLINK</source>
          <target state="translated">REST::sendUNLINK</target>
        </trans-unit>
        <trans-unit id="765376897bb27456d5cb234d9740e49f15434d7e" translate="yes" xml:space="preserve">
          <source>REST::startFollowingRedirects</source>
          <target state="translated">REST::startFollowingRedirects</target>
        </trans-unit>
        <trans-unit id="e2325a5886e2e2c9d61ecd0668c8e7245c9bbce3" translate="yes" xml:space="preserve">
          <source>REST::stopFollowingRedirects</source>
          <target state="translated">REST::stopFollowingRedirects</target>
        </trans-unit>
        <trans-unit id="7400316e8239a985cfaf24fe80463f85ec2611e5" translate="yes" xml:space="preserve">
          <source>Read HTTP response headers</source>
          <target state="translated">HTTP 응답 헤더 읽기</target>
        </trans-unit>
        <trans-unit id="7dcc3cb03a6ad398e91ac9a81dda068b6b820182" translate="yes" xml:space="preserve">
          <source>Really basic class to store data in global array and use it in Cests/Tests.</source>
          <target state="translated">전역 배열에 데이터를 저장하고 Cests / Tests에서 사용하기위한 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a0289326259babcf56a858a764ab81231f6f901b" translate="yes" xml:space="preserve">
          <source>Reboot client&amp;rsquo;s kernel. Can be used to manually reboot kernel when &amp;lsquo;rebootable_client&amp;rsquo; =&amp;gt; false</source>
          <target state="translated">클라이언트의 커널을 재부팅하십시오. 'rebootable_client'=&amp;gt; false 인 경우 커널을 수동으로 재부팅하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38d35a0d49828aa346840a2c4b753f20011e7f59" translate="yes" xml:space="preserve">
          <source>Recursively cleans &lt;code&gt;output&lt;/code&gt; directory and generated code.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; 디렉토리 및 생성 된 코드를 재귀 적으로 정리 합니다.</target>
        </trans-unit>
        <trans-unit id="24071b57a13027c01339027dcccb98218f052a8f" translate="yes" xml:space="preserve">
          <source>Redis</source>
          <target state="translated">Redis</target>
        </trans-unit>
        <trans-unit id="70131d5fc5115bbb01974eb8fea4b1eb08a52e55" translate="yes" xml:space="preserve">
          <source>Redis::cleanup</source>
          <target state="translated">Redis::cleanup</target>
        </trans-unit>
        <trans-unit id="1c8054dd782fb303ba48811c45d44a9fb65cb0e6" translate="yes" xml:space="preserve">
          <source>Redis::dontSeeInRedis</source>
          <target state="translated">Redis::dontSeeInRedis</target>
        </trans-unit>
        <trans-unit id="ac4981ea372e74da3eb45d3610acbdddf77a06f8" translate="yes" xml:space="preserve">
          <source>Redis::dontSeeRedisKeyContains</source>
          <target state="translated">Redis::dontSeeRedisKeyContains</target>
        </trans-unit>
        <trans-unit id="0b6d13bab3cf79ac1ff83853f9298dde730d0aa3" translate="yes" xml:space="preserve">
          <source>Redis::grabFromRedis</source>
          <target state="translated">Redis::grabFromRedis</target>
        </trans-unit>
        <trans-unit id="99a28f12dd41b23d1aa05c98bb540cdd4f5bcfa3" translate="yes" xml:space="preserve">
          <source>Redis::haveInRedis</source>
          <target state="translated">Redis::haveInRedis</target>
        </trans-unit>
        <trans-unit id="823ca9ae8f22bd225e166ee90ab695b79a63aed4" translate="yes" xml:space="preserve">
          <source>Redis::seeInRedis</source>
          <target state="translated">Redis::seeInRedis</target>
        </trans-unit>
        <trans-unit id="97785d6344ad088b18ed8f8bcd24718ce782e9b1" translate="yes" xml:space="preserve">
          <source>Redis::seeRedisKeyContains</source>
          <target state="translated">Redis::seeRedisKeyContains</target>
        </trans-unit>
        <trans-unit id="8c78f95ffe3fb8cdf8058d9567d582938f3557c3" translate="yes" xml:space="preserve">
          <source>Redis::sendCommandToRedis</source>
          <target state="translated">Redis::sendCommandToRedis</target>
        </trans-unit>
        <trans-unit id="5fbd1d572fc8ab29a4336534baff8dae2e49050c" translate="yes" xml:space="preserve">
          <source>Reference: Codeception\InitTemplate</source>
          <target state="translated">참조 : Codeception \ InitTemplate</target>
        </trans-unit>
        <trans-unit id="5c6467c8e0e7fdd5aef0bb6faf9757aac165abea" translate="yes" xml:space="preserve">
          <source>Reference: Codeception\Module</source>
          <target state="translated">참조 : Codeception \ Module</target>
        </trans-unit>
        <trans-unit id="dac9a2761445539eeba908e2a1367b0438d50bba" translate="yes" xml:space="preserve">
          <source>Reference: Codeception\Stub</source>
          <target state="translated">참조 : Codeception \ Stub</target>
        </trans-unit>
        <trans-unit id="b9653992d1ed5a7c913f7c85aca4902d1eb61c20" translate="yes" xml:space="preserve">
          <source>Reference: Configuration</source>
          <target state="translated">참조 : 구성</target>
        </trans-unit>
        <trans-unit id="2b786d32f44a6cf2bd1cc45f9d2c0eddc2c0aeef" translate="yes" xml:space="preserve">
          <source>Reference: Console Commands</source>
          <target state="translated">참조 : 콘솔 명령</target>
        </trans-unit>
        <trans-unit id="8a8c2f15815c0ece90623789601538cc827d1808" translate="yes" xml:space="preserve">
          <source>Reference: Mocks</source>
          <target state="translated">참조 : Mocks</target>
        </trans-unit>
        <trans-unit id="203092bc2133ea054f1450ec93e8f2a2499f2907" translate="yes" xml:space="preserve">
          <source>Reference: Shorthand Functions</source>
          <target state="translated">참조 : 속기 함수</target>
        </trans-unit>
        <trans-unit id="ef3da6c3ba1d7722879d23858eab1166cf2865ca" translate="yes" xml:space="preserve">
          <source>Register a handler than can be used to modify the Laravel application object after it is initialized. The Laravel application object will be passed as an argument to the handler.</source>
          <target state="translated">Laravel 응용 프로그램 객체를 초기화 한 후 수정하는 데 사용할 수있는 처리기를 등록하십시오. Laravel 응용 프로그램 객체는 처리기에 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2e7c058a3d7a8f14617f47f2333bc9664ee295e5" translate="yes" xml:space="preserve">
          <source>Registers a service in the services container and resolve it. This record will be erased after the test. Recommended to use for unit testing.</source>
          <target state="translated">서비스 컨테이너에 서비스를 등록하고 해결합니다. 이 기록은 테스트 후에 지워집니다. 단위 테스트에 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5da4262ce6d4d8a5db1418d86fb149c134fe21d9" translate="yes" xml:space="preserve">
          <source>Related Models Generators</source>
          <target state="translated">관련 모델 생성기</target>
        </trans-unit>
        <trans-unit id="5dba85dc7a5c64bb786526ef873834a3626e2aa5" translate="yes" xml:space="preserve">
          <source>Reloads the current page.</source>
          <target state="translated">현재 페이지를 다시로드합니다.</target>
        </trans-unit>
        <trans-unit id="9f0cdc8307ad8715aaeb9ea0b256f32c8c6899d3" translate="yes" xml:space="preserve">
          <source>Remote CodeCoverage</source>
          <target state="translated">원격 코드 커버리지</target>
        </trans-unit>
        <trans-unit id="3c5bc18bddb7d6f938b91daed9eebfa9959dcabd" translate="yes" xml:space="preserve">
          <source>Remote Context Options</source>
          <target state="translated">원격 컨텍스트 옵션</target>
        </trans-unit>
        <trans-unit id="bdfebd1d5489d5611c43603bb8c29af3515a720c" translate="yes" xml:space="preserve">
          <source>Remote Server</source>
          <target state="translated">원격 서버</target>
        </trans-unit>
        <trans-unit id="7efc1002fc93525fadb8e1e095b96e34524e793b" translate="yes" xml:space="preserve">
          <source>Remove service $serviceName from the lists of persistent services.</source>
          <target state="translated">영구 서비스 목록에서 $ serviceName 서비스를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="1654140f87858604cf4821b254e59f7cff8d1e60" translate="yes" xml:space="preserve">
          <source>Removes all custom filters</source>
          <target state="translated">모든 맞춤 필터를 제거합니다</target>
        </trans-unit>
        <trans-unit id="6c343206779e332adea65acb70b2368d3eee0cad" translate="yes" xml:space="preserve">
          <source>Rename/Move directory on the FTP/SFTP server</source>
          <target state="translated">FTP / SFTP 서버에서 디렉토리 이름 바꾸기 / 이동</target>
        </trans-unit>
        <trans-unit id="d43b703cc8be8ada67ceae75dbdd04376e0cf21e" translate="yes" xml:space="preserve">
          <source>Rename/Move file on the FTP/SFTP server</source>
          <target state="translated">FTP / SFTP 서버에서 파일 이름 바꾸기 / 이동</target>
        </trans-unit>
        <trans-unit id="d2e15ec833661da7ba5cedcdee55f64f184405a3" translate="yes" xml:space="preserve">
          <source>Replaces properties of current stub</source>
          <target state="translated">현재 스텁의 속성을 대체합니다</target>
        </trans-unit>
        <trans-unit id="88bc3fe3daddee139809d036f18b985fbe165957" translate="yes" xml:space="preserve">
          <source>Reports</source>
          <target state="translated">Reports</target>
        </trans-unit>
        <trans-unit id="0d5a0b87ca2865a9283cc0282d69b7e4cafae3a6" translate="yes" xml:space="preserve">
          <source>Required to have &lt;code&gt;envs&lt;/code&gt; path to be specified in &lt;code&gt;codeception.yml&lt;/code&gt;</source>
          <target state="translated">이 요구 &lt;code&gt;envs&lt;/code&gt; 경로를 지정할 수하는 &lt;code&gt;codeception.yml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65f1457df8cab83e682d2399497114217b972d77" translate="yes" xml:space="preserve">
          <source>Requirements and code can change rapidly, and unit tests should be updated every time to fit the requirements. The better you understand the testing scenario, the faster you can update it for new behavior.</source>
          <target state="translated">요구 사항 및 코드가 빠르게 변경 될 수 있으며 요구 사항에 맞게 단위 테스트를 업데이트해야합니다. 테스트 시나리오를 잘 이해할수록 새로운 동작을 위해 더 빠르게 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98a9350d5145b5f5ceb6634e242f5b8ec0104d25" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;user&lt;/code&gt; component to be enabled and configured.</source>
          <target state="translated">필요 &lt;code&gt;user&lt;/code&gt; 구성 요소를 활성화하고 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea093d704736984c5c2521e37b07844698aabbee" translate="yes" xml:space="preserve">
          <source>Requires module container (to provide access between modules of suite) and config.</source>
          <target state="translated">제품군의 모듈 간 액세스를 제공하기 위해 모듈 컨테이너와 구성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e382ea35c2c1826b16ca394f0154ae025c79226a" translate="yes" xml:space="preserve">
          <source>Requires of api function name and parameters. Parameters can be passed either as DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">API 함수 이름 및 매개 변수가 필요합니다. 매개 변수는 DOMDocument, DOMNode, XML 문자열 또는 배열 (속성이없는 경우)로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e9e6aa063a766e59de2ae0ef4d30597d45d069e" translate="yes" xml:space="preserve">
          <source>Requires the &lt;code&gt;user&lt;/code&gt; component to be enabled and configured.</source>
          <target state="translated">필요 &lt;code&gt;user&lt;/code&gt; 활성화 및 구성 할 구성 요소를.</target>
        </trans-unit>
        <trans-unit id="0c4a1b632df46ce11c281b43941a3d5b5a00c15c" translate="yes" xml:space="preserve">
          <source>Resize the current window.</source>
          <target state="translated">현재 창의 크기를 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="fae8e27abc6757aaadef233e5740a5972c3cd3f7" translate="yes" xml:space="preserve">
          <source>Resolves the service based on its configuration from Phalcon&amp;rsquo;s DI container Recommended to use for unit testing.</source>
          <target state="translated">Phalcon의 DI 컨테이너 구성에 따라 서비스를 해결합니다. 단위 테스트에 사용하도록 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="2550b1dcad75d54944624facc01b8b305b252bca" translate="yes" xml:space="preserve">
          <source>Responsibility</source>
          <target state="translated">Responsibility</target>
        </trans-unit>
        <trans-unit id="b735d319c8b8f2783966dbcb8da6be6a60ff1038" translate="yes" xml:space="preserve">
          <source>Restarts a web browser. Can be used with &lt;code&gt;_reconfigure&lt;/code&gt; to open browser with different configuration</source>
          <target state="translated">웹 브라우저를 다시 시작합니다. &lt;code&gt;_reconfigure&lt;/code&gt; 와 함께 사용 하여 다른 구성으로 브라우저를 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="308c20f6e42bc9d32a0a6778682cbd4146b3b64f" translate="yes" xml:space="preserve">
          <source>Result, Printer</source>
          <target state="translated">결과, 프린터</target>
        </trans-unit>
        <trans-unit id="f1b2494ab135447d0e48a42b6f83dd48402b87de" translate="yes" xml:space="preserve">
          <source>Retries are disabled by default. To enable them you should add retry step decorators to suite config:</source>
          <target state="translated">재 시도는 기본적으로 비활성화되어 있습니다. 이를 활성화하려면 스위트 구성에 재시도 단계 데코레이터를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="804f5e9a52be12b112ed42e9e08fc6a30aac055a" translate="yes" xml:space="preserve">
          <source>Retrieves a record from the database</source>
          <target state="translated">데이터베이스에서 레코드를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="da8349a067fdd31dcfd00732322c1f047517e17f" translate="yes" xml:space="preserve">
          <source>Retrieves number of records from database You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">데이터베이스에서 레코드 수 검색 데이터베이스 테이블의 이름 또는 Eloquent 모델의 클래스 이름을 첫 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47621ad26b240c01b64e40432883c5013af05506" translate="yes" xml:space="preserve">
          <source>Retrieves record from database</source>
          <target state="translated">데이터베이스에서 레코드를 검색합니다</target>
        </trans-unit>
        <trans-unit id="fcf3ad478ca2e52d08d1913576a635b673d0041a" translate="yes" xml:space="preserve">
          <source>Retrieves record from database If you pass the name of a database table as the first argument, this method returns an array. You can also pass the class name of an Eloquent model, in that case this method returns an Eloquent model.</source>
          <target state="translated">데이터베이스에서 레코드 검색 데이터베이스 테이블의 이름을 첫 번째 인수로 전달하면이 메소드는 배열을 리턴합니다. Eloquent 모델의 클래스 이름을 전달할 수도 있습니다.이 경우이 메소드는 Eloquent 모델을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9f5cd8a2e8807d73efa02c844bfbca9fe552b283" translate="yes" xml:space="preserve">
          <source>Retry</source>
          <target state="translated">Retry</target>
        </trans-unit>
        <trans-unit id="0c114cfd48b5bd355896ec273eda01e44c90598f" translate="yes" xml:space="preserve">
          <source>Retry can be configured via &lt;code&gt;$I-&amp;gt;retry()&lt;/code&gt; command, where you can set number of retries and initial interval: interval will be doubled on each unsuccessful execution.</source>
          <target state="translated">재시도 횟수와 초기 간격을 설정할 수있는 &lt;code&gt;$I-&amp;gt;retry()&lt;/code&gt; 명령을 통해 재 시도를 구성 할 수 있습니다 . 실패한 각 실행마다 간격이 두 배가됩니다.</target>
        </trans-unit>
        <trans-unit id="4d9e1e67f393a4241e354a9d74e84e445d1fd47d" translate="yes" xml:space="preserve">
          <source>Return an instance of a class from the IoC Container.</source>
          <target state="translated">IoC 컨테이너에서 클래스의 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e56ddd4c20d2036134b3840bd0419298c5cb4cac" translate="yes" xml:space="preserve">
          <source>Return an instance of a class from the Laravel service container. (https://laravel.com/docs/master/container)</source>
          <target state="translated">라 라벨 서비스 컨테이너에서 클래스의 인스턴스를 반환합니다. (https://laravel.com/docs/master/container)</target>
        </trans-unit>
        <trans-unit id="db8f2b6863bfe751915385956efbf9a01f62695d" translate="yes" xml:space="preserve">
          <source>Returns URL of a host.</source>
          <target state="translated">호스트의 URL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff8c4b194762d14eefa4e6bbc105efc2b01936c9" translate="yes" xml:space="preserve">
          <source>Returns a list of regex patterns for recognized domain names</source>
          <target state="translated">인식 된 도메인 이름에 대한 정규식 패턴 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="06d886ad4af1d76db8d164905f973b800a8c9456" translate="yes" xml:space="preserve">
          <source>Returns a module name for a Module, a class name for Helper</source>
          <target state="translated">헬퍼의 클래스 이름 인 모듈의 모듈 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5fced89db115ff39de5da90c5ab6e997d0da8991" translate="yes" xml:space="preserve">
          <source>Returns absolute path to data directory (&lt;code&gt;tests/_data&lt;/code&gt;)</source>
          <target state="translated">데이터 디렉토리의 절대 경로를 리턴합니다 ( &lt;code&gt;tests/_data&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c37a1e04d9eb8030f7ad06c48d2fce670a916666" translate="yes" xml:space="preserve">
          <source>Returns absolute path to output directory (&lt;code&gt;tests/_output&lt;/code&gt;)</source>
          <target state="translated">출력 디렉토리에 대한 절대 경로를 리턴합니다 ( &lt;code&gt;tests/_output&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d94eeaf68642edcb1a1c28074b999e3055595dd9" translate="yes" xml:space="preserve">
          <source>Returns absolute path to the root directory (where &lt;code&gt;codeception.yml&lt;/code&gt; is located)</source>
          <target state="translated">루트 디렉토리 ( &lt;code&gt;codeception.yml&lt;/code&gt; 가있는)의 절대 경로를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fb3ef8bff7f479a158e4ce33271fb4018835f473" translate="yes" xml:space="preserve">
          <source>Returns all loaded fixtures. Array of fixture instances</source>
          <target state="translated">로드 된 모든 조명기를 반환합니다. 고정구 인스턴스의 배열</target>
        </trans-unit>
        <trans-unit id="8db3ea59aebd75b22cf656019549e4da52871986" translate="yes" xml:space="preserve">
          <source>Returns an instance of created user without creating a record in database.</source>
          <target state="translated">데이터베이스에서 레코드를 작성하지 않고 작성된 사용자의 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="dcf9e5ad41937db317ece798bf6673375af26cc4" translate="yes" xml:space="preserve">
          <source>Returns an instance of created user.</source>
          <target state="translated">작성된 사용자의 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d279d07fb22cf538b5add9ed51d79581bfd76fe4" translate="yes" xml:space="preserve">
          <source>Returns array of all sent email messages. Each message implements &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; interface. Useful to perform additional checks using &lt;code&gt;Asserts&lt;/code&gt; module:</source>
          <target state="translated">전송 된 모든 전자 메일 메시지의 배열을 반환합니다. 각 메시지는 &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; 인터페이스를 구현 합니다. &lt;code&gt;Asserts&lt;/code&gt; 모듈을 사용하여 추가 검사를 수행하는 데 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="b80e531cd3ca238d6a6c26186b71a33403c3fdd1" translate="yes" xml:space="preserve">
          <source>Returns array of all sent email messages. Each message implements the &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; interface. Useful to perform additional checks using the &lt;code&gt;Asserts&lt;/code&gt; module:</source>
          <target state="translated">보낸 모든 이메일 메시지의 배열을 반환합니다. 각 메시지는 &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; 인터페이스를 구현합니다 . &lt;code&gt;Asserts&lt;/code&gt; 모듈을 사용하여 추가 검사를 수행하는 데 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="c83f51bbf84cdb990d0380df70265a90d7c0fd55" translate="yes" xml:space="preserve">
          <source>Returns content of the last response Use it in Helpers when you want to retrieve response of request performed by another module.</source>
          <target state="translated">마지막 응답의 내용을 반환합니다. 다른 모듈에서 수행 한 요청의 응답을 검색하려는 경우 헬퍼에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="40b57844bc3b3b8054d3303f949d6437385bc5a5" translate="yes" xml:space="preserve">
          <source>Returns current WebDriver session for saving</source>
          <target state="translated">저장할 현재 WebDriver 세션을 반환합니다</target>
        </trans-unit>
        <trans-unit id="f9017dab7feca8add002f063e5e0997c0f6dac91" translate="yes" xml:space="preserve">
          <source>Returns current response so that it can be used in next scenario steps.</source>
          <target state="translated">다음 시나리오 단계에서 사용할 수 있도록 현재 응답을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="67dcd5bda56e954467eb5ba0141a2fb1719619cd" translate="yes" xml:space="preserve">
          <source>Returns data from the current JSON response using &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt; as selector. JsonPath is XPath equivalent for querying Json structures. Try your JsonPath expressions &lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;online&lt;/a&gt;. Even for a single value an array is returned.</source>
          <target state="translated">&lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JSONPath&lt;/a&gt; 를 선택기로 사용하여 현재 JSON 응답에서 데이터를 반환합니다 . JsonPath는 Json 구조를 쿼리 할 때 XPath와 동일합니다. JsonPath 표현식을 &lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;온라인으로&lt;/a&gt; 사용해보십시오 . 단일 값이라도 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="50b5d884b0cce6fea0b033b50d0d24c03ee5289f" translate="yes" xml:space="preserve">
          <source>Returns last sent email:</source>
          <target state="translated">마지막으로 보낸 이메일을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3204dd0909e5ffc1a1d3acb5ec35539187d56883" translate="yes" xml:space="preserve">
          <source>Returns string with HTTP code and its description</source>
          <target state="translated">HTTP 코드와 설명이 포함 된 문자열을 반환</target>
        </trans-unit>
        <trans-unit id="1bb6722f9f3c13e372d813e172c4384489e38d33" translate="yes" xml:space="preserve">
          <source>Returns the last sent email:</source>
          <target state="translated">마지막으로 보낸 이메일을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0cf040af2c07506a1298fbf4c859325c9c3e941f" translate="yes" xml:space="preserve">
          <source>Returns the number of rows in a database</source>
          <target state="translated">데이터베이스의 행 수를 반환합니다</target>
        </trans-unit>
        <trans-unit id="1b377c7794eb3bfc3fc696185a12b39dee46d4c6" translate="yes" xml:space="preserve">
          <source>Returns the output from latest command</source>
          <target state="translated">최신 명령의 출력을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="46d8cf46b8a39460ca00df9fb6ffb1845b02f768" translate="yes" xml:space="preserve">
          <source>Returns the primary key of the newly created entity. The primary key value is extracted using Reflection API. If the primary key is composite, an array of values is returned.</source>
          <target state="translated">새로 생성 된 항목의 기본 키를 반환합니다. 기본 키 값은 Reflection API를 사용하여 추출됩니다. 기본 키가 복합이면 값 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="afa0a747c52d936ed740b1688983c978f928bfcc" translate="yes" xml:space="preserve">
          <source>Returns the value of a given key</source>
          <target state="translated">주어진 키의 값을 반환</target>
        </trans-unit>
        <trans-unit id="420487b6c1d1959f86bd47c3eb74383f7c567572" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified header name</source>
          <target state="translated">지정된 헤더 이름의 값을 반환</target>
        </trans-unit>
        <trans-unit id="deb4013028bb9e2182b9a7800eba87649edc2c45" translate="yes" xml:space="preserve">
          <source>Reusing Test Code</source>
          <target state="translated">테스트 코드 재사용</target>
        </trans-unit>
        <trans-unit id="2e51b525c126ca5378c6902c699d01d22aa5d2cb" translate="yes" xml:space="preserve">
          <source>Reverts config changed by &lt;code&gt;_reconfigure&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_reconfigure&lt;/code&gt; 로 변경된 구성을 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="fcfcfa9648a8f46a311cd9262cfc9a5aec91359c" translate="yes" xml:space="preserve">
          <source>Robo</source>
          <target state="translated">Robo</target>
        </trans-unit>
        <trans-unit id="8ca46137171b0637a7e259d23112acf2cf5544ed" translate="yes" xml:space="preserve">
          <source>Robo has &lt;code&gt;ParallelExec&lt;/code&gt; task to spawn background processes.</source>
          <target state="translated">Robo에는 백그라운드 프로세스를 생성하는 &lt;code&gt;ParallelExec&lt;/code&gt; 작업이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="1a3d7f7cb9d0e0c79e8eda4ec47ffd0d2fb07d59" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;https://testingbot.com/support/other/tunnel&quot;&gt;TestingBot Tunnel&lt;/a&gt; if your site can&amp;rsquo;t be accessed from Internet</source>
          <target state="translated">인터넷에서 사이트에 액세스 할 수없는 경우 &lt;a href=&quot;https://testingbot.com/support/other/tunnel&quot;&gt;TestingBot Tunnel을&lt;/a&gt; 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="127c17eb6297dc7a00676e8cc9b27eaf1f47d8ab" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;codecept build&lt;/code&gt; to recreate actions. New &lt;code&gt;retry*&lt;/code&gt; actions are available for tests. Keep in mind, that you can change retry policy dynamically for each test.</source>
          <target state="translated">&lt;code&gt;codecept build&lt;/code&gt; 를 실행 하여 조치를 다시 작성 하십시오 . 테스트를 위해 새로운 &lt;code&gt;retry*&lt;/code&gt; 조치를 사용할 수 있습니다. 각 테스트에 대해 재시도 정책을 동적으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="893d432e8d2cfd449fcbddc4600d70808aa1a6a7" translate="yes" xml:space="preserve">
          <source>Run PhantomJS in WebDriver mode: &lt;code&gt;phantomjs --webdriver=4444&lt;/code&gt;</source>
          <target state="translated">WebDriver 모드에서 PhantomJS를 실행하십시오. &lt;code&gt;phantomjs --webdriver=4444&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f5bc935f0b9236d3dce444fbe9bf8703494fd38" translate="yes" xml:space="preserve">
          <source>Run Symfony console command, grab response and return as string. Recommended to use for integration or functional testing.</source>
          <target state="translated">Symfony 콘솔 명령을 실행하고 응답을 잡고 문자열로 반환합니다. 통합 또는 기능 테스트에 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a31d3a7e43704638b792a3a8f837375520d6f468" translate="yes" xml:space="preserve">
          <source>Run official Codeception image from DockerHub:</source>
          <target state="translated">DockerHub에서 공식 Codeception 이미지를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c2dabe0d1ec6c2dc53abdebfa0b5175ff236cc2f" translate="yes" xml:space="preserve">
          <source>Run suite</source>
          <target state="translated">스위트 룸</target>
        </trans-unit>
        <trans-unit id="79d130c80ea3a3c4e817f10281a6e616289c457f" translate="yes" xml:space="preserve">
          <source>Run tests in real browsers using the W3C &lt;a href=&quot;https://www.w3.org/TR/webdriver/&quot;&gt;WebDriver protocol&lt;/a&gt;.</source>
          <target state="translated">W3C &lt;a href=&quot;https://www.w3.org/TR/webdriver/&quot;&gt;WebDriver 프로토콜을&lt;/a&gt; 사용하여 실제 브라우저에서 테스트를 실행 합니다 .</target>
        </trans-unit>
        <trans-unit id="f34de89f998f6d6d56d24869aa38d737aed87a7e" translate="yes" xml:space="preserve">
          <source>Run with specific extension</source>
          <target state="translated">특정 확장명으로 실행</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="95b3e2f62b81423684144192c2c8ea2dc74b43a4" translate="yes" xml:space="preserve">
          <source>Running from different folders</source>
          <target state="translated">다른 폴더에서 실행</target>
        </trans-unit>
        <trans-unit id="073697e8eef06b1064b0ed4434d34301870f3da4" translate="yes" xml:space="preserve">
          <source>Running tests from a project, by mounting the current path as a host-volume into the container. The &lt;strong&gt;default working directory in the container is &lt;code&gt;/project&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">현재 경로를 호스트 볼륨으로 컨테이너에 마운트하여 프로젝트에서 테스트 실행 &lt;strong&gt;컨테이너 &lt;code&gt;/project&lt;/code&gt; &lt;/strong&gt; 의 &lt;strong&gt;기본 작업 디렉토리는 &lt;/strong&gt;&lt;strong&gt;/ project&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="222cad2bd37e45b5f33d5d967590f4b613622bfd" translate="yes" xml:space="preserve">
          <source>Runtime Configuration</source>
          <target state="translated">런타임 구성</target>
        </trans-unit>
        <trans-unit id="1dbe53a131007b4bd49153486ad86e9ed7127e10" translate="yes" xml:space="preserve">
          <source>Runtime Configuration of a Test</source>
          <target state="translated">테스트의 런타임 구성</target>
        </trans-unit>
        <trans-unit id="7d82e7043f2d167414bb42b0a8dee09eec1ec3ca" translate="yes" xml:space="preserve">
          <source>SFTP</source>
          <target state="translated">SFTP</target>
        </trans-unit>
        <trans-unit id="2034ddf88a147575fe84f6a77a3916dc856bbd69" translate="yes" xml:space="preserve">
          <source>SFTP: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">SFTP : &lt;strong&gt;안정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4012e4dab8287d12a2889789984334fc5c8763" translate="yes" xml:space="preserve">
          <source>SOAP</source>
          <target state="translated">SOAP</target>
        </trans-unit>
        <trans-unit id="87c9a29d3df78eb31b27df74b9c16d7b10d01d8c" translate="yes" xml:space="preserve">
          <source>SOAP API</source>
          <target state="translated">SOAP API</target>
        </trans-unit>
        <trans-unit id="962d69945e516c9c8035faa5c69a12da1672b228" translate="yes" xml:space="preserve">
          <source>SOAP request may contain application specific information, like authentication or payment. This information is provided with SOAP header inside the &lt;code&gt;&amp;lt;soap:Header&amp;gt;&lt;/code&gt; element of XML request. In case you need to submit such header, you can use &lt;code&gt;haveSoapHeader&lt;/code&gt; action. For example, next line of code</source>
          <target state="translated">SOAP 요청에는 인증 또는 지불과 같은 응용 프로그램 특정 정보가 포함될 수 있습니다. 이 정보는 XML 요청 의 &lt;code&gt;&amp;lt;soap:Header&amp;gt;&lt;/code&gt; 요소 내에 SOAP 헤더와 함께 제공됩니다 . 이러한 헤더를 제출해야하는 경우 &lt;code&gt;haveSoapHeader&lt;/code&gt; 조치를 사용할 수 있습니다 . 예를 들어 다음 코드 줄</target>
        </trans-unit>
        <trans-unit id="4a7c1a54e7f6271dfa65a6c0612283e1aeabfc9f" translate="yes" xml:space="preserve">
          <source>SOAP web services are usually more complex. You will need PHP &lt;a href=&quot;https://php.net/manual/en/soap.installation.php&quot;&gt;configured with SOAP support&lt;/a&gt;. Good knowledge of XML is required too. &lt;code&gt;SOAP&lt;/code&gt; module uses specially formatted POST request to connect to WSDL web services. Codeception uses &lt;code&gt;PhpBrowser&lt;/code&gt; or one of framework modules to perform interactions. If you choose using a framework module, SOAP will automatically connect to the underlying framework. That may improve the speed of a test execution and will provide you with more detailed stack traces.</source>
          <target state="translated">SOAP 웹 서비스는 일반적으로 더 복잡합니다. &lt;a href=&quot;https://php.net/manual/en/soap.installation.php&quot;&gt;SOAP 지원으로 구성된&lt;/a&gt; PHP가 필요 합니다 . XML에 대한 지식도 필요합니다. &lt;code&gt;SOAP&lt;/code&gt; 모듈은 특별히 형식화 된 POST 요청을 사용하여 WSDL 웹 서비스에 연결합니다. Codeception은 &lt;code&gt;PhpBrowser&lt;/code&gt; 또는 프레임 워크 모듈 중 하나를 사용 하여 상호 작용을 수행합니다. 프레임 워크 모듈 사용을 선택하면 SOAP가 기본 프레임 워크에 자동으로 연결됩니다. 이렇게하면 테스트 실행 속도가 향상되고보다 자세한 스택 추적이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5e7626e5b21c04e1dbd440bcd9c34317efcf616a" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseContainsStructure</source>
          <target state="translated">SOAP::dontSeeSoapResponseContainsStructure</target>
        </trans-unit>
        <trans-unit id="129713de9ba7e9bcc9fd5757757a74d789552f42" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseContainsXPath</source>
          <target state="translated">SOAP::dontSeeSoapResponseContainsXPath</target>
        </trans-unit>
        <trans-unit id="6bf131da4f24d170644f98611fd1df67ed6e00a3" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseEquals</source>
          <target state="translated">SOAP::dontSeeSoapResponseEquals</target>
        </trans-unit>
        <trans-unit id="d41495c4fe888f10a7f8e2a88622c135aaf1b2f9" translate="yes" xml:space="preserve">
          <source>SOAP::dontSeeSoapResponseIncludes</source>
          <target state="translated">SOAP::dontSeeSoapResponseIncludes</target>
        </trans-unit>
        <trans-unit id="6ce2fd540a5709e7653cf32f731d936733fcdbab" translate="yes" xml:space="preserve">
          <source>SOAP::grabAttributeFrom</source>
          <target state="translated">SOAP::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="28738b15d5e690b60f2ebde5e0112fd74ca53aab" translate="yes" xml:space="preserve">
          <source>SOAP::grabTextContentFrom</source>
          <target state="translated">SOAP::grabTextContentFrom</target>
        </trans-unit>
        <trans-unit id="b0853eade6b398deea2d90340c746b4373764cee" translate="yes" xml:space="preserve">
          <source>SOAP::haveSoapHeader</source>
          <target state="translated">SOAP::haveSoapHeader</target>
        </trans-unit>
        <trans-unit id="71ee8f5563b4007ff83e87e21d2f0e154101cce1" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseCodeIs</source>
          <target state="translated">SOAP::seeSoapResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="d038716d3f9b933885e91c6423996445b5cace75" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseContainsStructure</source>
          <target state="translated">SOAP::seeSoapResponseContainsStructure</target>
        </trans-unit>
        <trans-unit id="26dc13d9b91aa82fe3bf382089dfc69d3e400da4" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseContainsXPath</source>
          <target state="translated">SOAP::seeSoapResponseContainsXPath</target>
        </trans-unit>
        <trans-unit id="d5a238dead993a222382fb5a314e80975a38c702" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseEquals</source>
          <target state="translated">SOAP::seeSoapResponseEquals</target>
        </trans-unit>
        <trans-unit id="c27d711731f690730a6b87ef70e204dd48405864" translate="yes" xml:space="preserve">
          <source>SOAP::seeSoapResponseIncludes</source>
          <target state="translated">SOAP::seeSoapResponseIncludes</target>
        </trans-unit>
        <trans-unit id="3f177034fb3a5c732236fd05e04fe19b1750e1d5" translate="yes" xml:space="preserve">
          <source>SOAP::sendSoapRequest</source>
          <target state="translated">SOAP::sendSoapRequest</target>
        </trans-unit>
        <trans-unit id="cee73788e9d0b54043608dea97e18cfd69adfbfa" translate="yes" xml:space="preserve">
          <source>SOAPAction - replace SOAPAction HTTP header (Set to &amp;lsquo;&amp;rsquo; to SOAP 1.2)</source>
          <target state="translated">SOAPAction-SOAPAction HTTP 헤더 대체 ( ''를 SOAP 1.2로 설정)</target>
        </trans-unit>
        <trans-unit id="6dabef06555a74f22570765f748ec12add66fcc6" translate="yes" xml:space="preserve">
          <source>SQL data dump</source>
          <target state="translated">SQL 데이터 덤프</target>
        </trans-unit>
        <trans-unit id="56074ab04bfb6ddff0d654a87ae2f322ed01d570" translate="yes" xml:space="preserve">
          <source>SQLite (i.e. just one file)</source>
          <target state="translated">SQLite (즉, 하나의 파일)</target>
        </trans-unit>
        <trans-unit id="ee383b7b1861de1ac0054459deaecfbaa1724df1" translate="yes" xml:space="preserve">
          <source>SQLite: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITE DSN&lt;/a&gt;</source>
          <target state="translated">SQLite : &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITE DSN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6365ea350254b45c6b5e85fbcc5b527e5c06756" translate="yes" xml:space="preserve">
          <source>SQLite: &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITE DSN&lt;/a&gt; - use &lt;em&gt;relative&lt;/em&gt; path from the project root</source>
          <target state="translated">SQLite : &lt;a href=&quot;https://secure.php.net/manual/en/ref.pdo-sqlite.connection.php&quot;&gt;PDO_SQLITE DSN-&lt;/a&gt; 프로젝트 루트의 &lt;em&gt;상대&lt;/em&gt; 경로 사용</target>
        </trans-unit>
        <trans-unit id="db772e92846c669773701839a17f56147935ec8e" translate="yes" xml:space="preserve">
          <source>Sample Scenario</source>
          <target state="translated">샘플 시나리오</target>
        </trans-unit>
        <trans-unit id="08fe0942507cfea4198223d0c740a4445c27ca01" translate="yes" xml:space="preserve">
          <source>Sample acceptance test</source>
          <target state="translated">샘플 합격 시험</target>
        </trans-unit>
        <trans-unit id="6e998264f7d127a451749d82f13cda6bb64ba856" translate="yes" xml:space="preserve">
          <source>Sample bootstrap (&lt;code&gt;app/config/bootstrap.php&lt;/code&gt;):</source>
          <target state="translated">부트 스트랩 샘플 ( &lt;code&gt;app/config/bootstrap.php&lt;/code&gt; ) :</target>
        </trans-unit>
        <trans-unit id="0b210fb88429673759e8137662c7f61474bd7dc8" translate="yes" xml:space="preserve">
          <source>Sample functional test</source>
          <target state="translated">기능 테스트 샘플</target>
        </trans-unit>
        <trans-unit id="c04bb59ca2d45c09c11f79d058be55c9d627e5db" translate="yes" xml:space="preserve">
          <source>Sample integration test</source>
          <target state="translated">샘플 통합 테스트</target>
        </trans-unit>
        <trans-unit id="013bfd20d5a21fd2c3d0eed3c9b347644f4d5bba" translate="yes" xml:space="preserve">
          <source>SauceLabs</source>
          <target state="translated">SauceLabs</target>
        </trans-unit>
        <trans-unit id="141b4d28e2de94bfb4d707c26641ab701acbb1bf" translate="yes" xml:space="preserve">
          <source>Saves HTML source of a page to a file</source>
          <target state="translated">페이지의 HTML 소스를 파일로 저장</target>
        </trans-unit>
        <trans-unit id="2e79b804c6e9f3a3a8dee4afe8dfc9000dbab43d" translate="yes" xml:space="preserve">
          <source>Saves contents to file</source>
          <target state="translated">내용을 파일로 저장</target>
        </trans-unit>
        <trans-unit id="effc5b2f1dd1aa5684af6f3ad4b65cd2c3460093" translate="yes" xml:space="preserve">
          <source>Saves contents to tmp file and uploads the FTP/SFTP system. Overwrites current file on server if exists.</source>
          <target state="translated">컨텐츠를 tmp 파일에 저장하고 FTP / SFTP 시스템을 업로드합니다. 존재하는 경우 서버의 현재 파일을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="395ab3ce01d6cba1b1c65753fc428c491caca8a6" translate="yes" xml:space="preserve">
          <source>Saves current cookies into named snapshot in order to restore them in other tests This is useful to save session state between tests. For example, if user needs log in to site for each test this scenario can be executed once while other tests can just restore saved cookies.</source>
          <target state="translated">다른 테스트에서 쿠키를 복원하기 위해 현재 쿠키를 명명 된 스냅 샷에 저장합니다. 테스트간에 세션 상태를 저장하는 데 유용합니다. 예를 들어, 사용자가 각 테스트마다 사이트에 로그인해야하는 경우이 시나리오는 한 번만 실행될 수 있지만 다른 테스트는 저장된 쿠키 만 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53d518e4bc362da4e5fcc8335a378e0b0bc00323" translate="yes" xml:space="preserve">
          <source>Saves current page&amp;rsquo;s HTML into a temprary file. Use this method in debug mode within an interactive pause to get a source code of current page.</source>
          <target state="translated">현재 페이지의 HTML을 임시 파일로 저장합니다. 현재 페이지의 소스 코드를 얻으려면 대화식 일시 정지 내의 디버그 모드에서이 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="49c615b500b02a2288ff578e37f3ed78baca7039" translate="yes" xml:space="preserve">
          <source>Saves page source of to a file</source>
          <target state="translated">파일의 페이지 소스를 파일에 저장</target>
        </trans-unit>
        <trans-unit id="17e07cb1fa3e92fef9abbf6adfd6e6db4fb32016" translate="yes" xml:space="preserve">
          <source>Saves screenshot of current page to a file</source>
          <target state="translated">현재 페이지의 스크린 샷을 파일로 저장</target>
        </trans-unit>
        <trans-unit id="376ce3241cbeebec6b69e45ca7209ba981341f1a" translate="yes" xml:space="preserve">
          <source>Scenario Driven Testing</source>
          <target state="translated">시나리오 중심 테스트</target>
        </trans-unit>
        <trans-unit id="2dd4a83d012acd714fbd600cfb9847611783fea3" translate="yes" xml:space="preserve">
          <source>Scenarios</source>
          <target state="translated">Scenarios</target>
        </trans-unit>
        <trans-unit id="34c1918b2a4b9612d701de55207d79e2d08b7a2b" translate="yes" xml:space="preserve">
          <source>Scenarios are live examples of feature usage. Inside a feature file it should be written inside a &lt;em&gt;Feature&lt;/em&gt; block. Each scenario should contain its title:</source>
          <target state="translated">시나리오는 기능 사용의 실제 예입니다. 피처 파일 내부는 &lt;em&gt;피처&lt;/em&gt; 블록 안에 작성해야합니다 . 각 시나리오에는 제목이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0f1e7edea1e62bf8f0750b5063b3924d3112bc6e" translate="yes" xml:space="preserve">
          <source>Scenarios are written in step-by-step manner using Given-When-Then approach. At start, scenario should describe its context with &lt;strong&gt;Given&lt;/strong&gt; keyword:</source>
          <target state="translated">시나리오는 Given-When-Then 방식을 사용하여 단계별로 작성됩니다. 시작시 시나리오는 &lt;strong&gt;주어진&lt;/strong&gt; 키워드로 컨텍스트를 설명해야 합니다.</target>
        </trans-unit>
        <trans-unit id="09c0fd05aa148422ab4cc48ecaa31dc0d5240007" translate="yes" xml:space="preserve">
          <source>Scenarios can become more descriptive when you represent repeating data as tables. Instead of writing several steps &amp;ldquo;I have product with :num1 $ price in my cart&amp;rdquo; we can have one step with multiple values in it.</source>
          <target state="translated">반복되는 데이터를 표로 표현할 때 시나리오가보다 설명이 될 수 있습니다. &amp;ldquo;내 장바구니에 : num1 $ 가격의 제품이 있습니다&amp;rdquo;라는 몇 가지 단계를 작성하는 대신 여러 값을 가진 한 단계를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bd24e925951178be4ac3e8d414befeadbd6a24a" translate="yes" xml:space="preserve">
          <source>Scope of the test</source>
          <target state="translated">시험의 범위</target>
        </trans-unit>
        <trans-unit id="47377fabb6379138a1f85a8eeb42cf5a0faa76cb" translate="yes" xml:space="preserve">
          <source>See -&amp;gt;sendAjaxPostRequest for examples.</source>
          <target state="translated">예제는-&amp;gt; sendAjaxPostRequest를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3e46a520107bd298488db2a1e76a92fb86815c9d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#saveSessionSnapshot&quot;&gt;saveSessionSnapshot&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#saveSessionSnapshot&quot;&gt;saveSessionSnapshot을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43b159bf9d6c5e567e566d765cec13fbd154843f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;modules/webdriver&quot;&gt;WebDriver Module&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;modules/webdriver&quot;&gt;WebDriver 모듈&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bf530574f6996768728fcffe080a60b4a515ed12" translate="yes" xml:space="preserve">
          <source>See a reference for &lt;a href=&quot;reference/stub&quot;&gt;static Stub API&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reference/stub&quot;&gt;정적 스텁 API에&lt;/a&gt; 대한 참조를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f78a0fd348a8c3c088143e2d60763a7eba0ae02e" translate="yes" xml:space="preserve">
          <source>See complete reference</source>
          <target state="translated">완전한 참조를보십시오</target>
        </trans-unit>
        <trans-unit id="e50f5d76c6b4b7c5bf7237c978c5ca1450881707" translate="yes" xml:space="preserve">
          <source>See module reference to more configuration options</source>
          <target state="translated">추가 구성 옵션은 모듈 참조를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7ab9e1ba790fe004137566addf7c37273cf25542" translate="yes" xml:space="preserve">
          <source>See source</source>
          <target state="translated">소스보기</target>
        </trans-unit>
        <trans-unit id="090912c1d8249702a943a89dea57bebd2acee63b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;modules/db#SQL-data-dump&quot;&gt;Db module reference&lt;/a&gt; for more examples.</source>
          <target state="translated">자세한 예는 &lt;a href=&quot;modules/db#SQL-data-dump&quot;&gt;Db 모듈 참조&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6f53208d2610aa5f6b97dc30d062fb9b97f99cd" translate="yes" xml:space="preserve">
          <source>See the full reference</source>
          <target state="translated">전체 참조 참조</target>
        </trans-unit>
        <trans-unit id="9205d253c01ada319d310fd9426bacb08e15b1e6" translate="yes" xml:space="preserve">
          <source>See the module &lt;a href=&quot;modules/db&quot;&gt;reference&lt;/a&gt; for other methods you can use for database testing.</source>
          <target state="translated">데이터베이스 테스트에 사용할 수있는 다른 방법 은 모듈 &lt;a href=&quot;modules/db&quot;&gt;참조&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="80c71ed2293ef0e507751220ae61d087697366b2" translate="yes" xml:space="preserve">
          <source>Selects a single entity from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.</source>
          <target state="translated">저장소에서 단일 엔티티를 선택하십시오. 매개 변수 배열을 기반으로 쿼리를 작성합니다. 엔터티 연결을 사용하여 복잡한 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9233e63ab8b52e0a20ad8a02a628e6370cf572c" translate="yes" xml:space="preserve">
          <source>Selects an option in a select tag or in radio button group.</source>
          <target state="translated">선택 태그 또는 단일 선택 단추 그룹에서 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="7cab12f0f694d3e94ecbb1a6d02de55b627e3ef7" translate="yes" xml:space="preserve">
          <source>Selects entities from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.</source>
          <target state="translated">저장소에서 엔티티를 선택합니다. 매개 변수 배열을 기반으로 쿼리를 작성합니다. 엔터티 연결을 사용하여 복잡한 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="588d879472d20fa74aa9e752ec9bfd9566d5b038" translate="yes" xml:space="preserve">
          <source>Selects field value from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.</source>
          <target state="translated">저장소에서 필드 값을 선택하십시오. 매개 변수 배열을 기반으로 쿼리를 작성합니다. 엔터티 연결을 사용하여 복잡한 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9feeabbe750108faaaa0b62198ff56913461830" translate="yes" xml:space="preserve">
          <source>Selenium</source>
          <target state="translated">Selenium</target>
        </trans-unit>
        <trans-unit id="04877e810e0418d437508dd632db4c976857a99b" translate="yes" xml:space="preserve">
          <source>Selenium Server</source>
          <target state="translated">셀레늄 서버</target>
        </trans-unit>
        <trans-unit id="301f1a3b0d8e9a464a699ae0f9108d99dc065db4" translate="yes" xml:space="preserve">
          <source>Selenium Standalone Server, Chrome or Firefox</source>
          <target state="translated">셀레늄 독립형 서버, Chrome 또는 Firefox</target>
        </trans-unit>
        <trans-unit id="99ac8a05d216a7974637c8d289a8e967d9b95fa5" translate="yes" xml:space="preserve">
          <source>Selenium for browser testing</source>
          <target state="translated">브라우저 테스트를위한 Selenium</target>
        </trans-unit>
        <trans-unit id="6f492a8e4c43e593f946e186e9f1024aa659066c" translate="yes" xml:space="preserve">
          <source>SelfUpdate</source>
          <target state="translated">SelfUpdate</target>
        </trans-unit>
        <trans-unit id="ae8b951455a74309fdb7c303a929eb9f3abb5bd8" translate="yes" xml:space="preserve">
          <source>Send custom request to a backend using method, uri, parameters, etc. Use it in Helpers to create special request actions, like accessing API Returns a string with response body.</source>
          <target state="translated">method, uri, parameters 등을 사용하여 사용자 정의 요청을 백엔드로 전송하십시오. 헬퍼에서이를 사용하여 API 액세스와 같은 특수 요청 조치를 작성하십시오. 응답 본문이있는 문자열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1c4c7ef8c26940e00bd80194775755322a85992c" translate="yes" xml:space="preserve">
          <source>Sending Requests</source>
          <target state="translated">요청 보내기</target>
        </trans-unit>
        <trans-unit id="a2ad2980263378eb33d3e76b42cb6ee4fa9db9ac" translate="yes" xml:space="preserve">
          <source>Sends DELETE request to given uri.</source>
          <target state="translated">지정된 URI에 DELETE 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="ca79214dad67de72c06dfa856eaa87ec0832be03" translate="yes" xml:space="preserve">
          <source>Sends LINK request to given uri.</source>
          <target state="translated">지정된 URI에 LINK 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="f60727a63d4d656e5d8cb6ef9b3e3a4354331faf" translate="yes" xml:space="preserve">
          <source>Sends PATCH request to given uri.</source>
          <target state="translated">지정된 URI에 PATCH 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="347edd0c3090a824d9b026d398bea8664026fce6" translate="yes" xml:space="preserve">
          <source>Sends PUT request to given uri.</source>
          <target state="translated">지정된 URI에 PUT 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="37f1a4e04303fdcc8b84dedcb24a3e155d29d6ff" translate="yes" xml:space="preserve">
          <source>Sends UNLINK request to given uri.</source>
          <target state="translated">지정된 URI에 UNLINK 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="ceff07e74460b6263e0fa2d7a0b324cbbd22f70c" translate="yes" xml:space="preserve">
          <source>Sends a GET request to given uri.</source>
          <target state="translated">주어진 URI에 GET 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="3eb032e2962eadbb21bd638169376a0d18a40a22" translate="yes" xml:space="preserve">
          <source>Sends a HEAD request to given uri.</source>
          <target state="translated">지정된 URI에 HEAD 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="df724a0af1c45db02453ab5c8595e5783685aa0f" translate="yes" xml:space="preserve">
          <source>Sends a POST request to given uri. Parameters and files can be provided separately.</source>
          <target state="translated">지정된 URI에 POST 요청을 보냅니다. 매개 변수와 파일은 별도로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dff8ab2387ee3796df4b419b54990e8d51b7a09c" translate="yes" xml:space="preserve">
          <source>Sends a command directly to the Redis driver. See documentation at https://github.com/nrk/predis Every argument that follows the $command name will be passed to it.</source>
          <target state="translated">명령을 Redis 드라이버로 직접 보냅니다. https://github.com/nrk/predis에서 설명서를 참조하십시오. $ command 이름 뒤에 오는 모든 인수가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="79c46c4e53ae7c4079c4d1e8d5c0cef26c11a09b" translate="yes" xml:space="preserve">
          <source>Sends an OPTIONS request to given uri.</source>
          <target state="translated">주어진 URI에 OPTIONS 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="39d3d07b651a9436e8f9a521c4577e4fb2e3ad3c" translate="yes" xml:space="preserve">
          <source>Sends an ajax GET request with the passed parameters. See &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt;</source>
          <target state="translated">전달 된 매개 변수와 함께 ajax GET 요청을 보냅니다. &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="2e6400d6cf6d09cc3c1f533aa0925d76a959b510" translate="yes" xml:space="preserve">
          <source>Sends an ajax POST request with the passed parameters. The appropriate HTTP header is added automatically: &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; Example:</source>
          <target state="translated">전달 된 매개 변수와 함께 ajax POST 요청을 보냅니다. 적절한 HTTP 헤더가 자동으로 추가됩니다. &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="cf54136f9698f1fa9a9e9569852ada1dd3fe2263" translate="yes" xml:space="preserve">
          <source>Sends an ajax request, using the passed HTTP method. See &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt; Example:</source>
          <target state="translated">전달 된 HTTP 메소드를 사용하여 ajax 요청을 보냅니다. &lt;code&gt;sendAjaxPostRequest()&lt;/code&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="51bef1be3be23fd93cee280aefd3f5fa3c7ced7a" translate="yes" xml:space="preserve">
          <source>Sends message to exchange by sending exchange name, message and (optionally) a routing key</source>
          <target state="translated">교환 이름, 메시지 및 라우팅 키 (선택 사항)를 보내 교환 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="87e0575afc2681ad0b1a333bacf3989906276740" translate="yes" xml:space="preserve">
          <source>Sends message to queue</source>
          <target state="translated">큐에 메시지를 보냅니다</target>
        </trans-unit>
        <trans-unit id="5c8f4e0e1a2281faf562976c2410f76c3d8fbc95" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>
        </trans-unit>
        <trans-unit id="90fcde4119a8fe8ed8794911a7382f5a137bc356" translate="yes" xml:space="preserve">
          <source>Sequence solves data cleanup issue in alternative way. Instead cleaning up the database between tests, you can use generated unique names, that should not conflict. When you create article on a site, for instance, you can assign it a unique name and then check it.</source>
          <target state="translated">시퀀스는 다른 방법으로 데이터 정리 문제를 해결합니다. 테스트간에 데이터베이스를 정리하는 대신 생성되지 않은 고유 이름을 사용할 수 있습니다. 예를 들어 사이트에서 기사를 만들 때 고유 한 이름을 할당 한 다음 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7d3be125ebceeda65591467039dacbe61a69dcb" translate="yes" xml:space="preserve">
          <source>Session Snapshot</source>
          <target state="translated">세션 스냅 샷</target>
        </trans-unit>
        <trans-unit id="12c29e5d3f5f29f7c6b24b20d21a955578937311" translate="yes" xml:space="preserve">
          <source>Set of useful functions for using CSS and XPath locators. Please check them before writing complex functional or acceptance tests.</source>
          <target state="translated">CSS 및 XPath 로케이터를 사용하기위한 유용한 기능 세트. 복잡한 기능 또는 합격 테스트를 작성하기 전에 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1104cfe1f60dfc5c18d2a644b14aaf086d0343f3" translate="yes" xml:space="preserve">
          <source>Set the authenticated user for the next request. This will not persist between multiple requests.</source>
          <target state="translated">다음 요청에 대해 인증 된 사용자를 설정하십시오. 여러 요청 간에는 지속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="49b838a3c85f40abb4c411864a8909f4eb33a8a7" translate="yes" xml:space="preserve">
          <source>Set the currently logged in user for the application. Takes either an object that implements the User interface or an array of credentials.</source>
          <target state="translated">애플리케이션에 현재 로그인 한 사용자를 설정하십시오. 사용자 인터페이스를 구현하는 객체 또는 자격 증명 배열을 취합니다.</target>
        </trans-unit>
        <trans-unit id="7639a35e90198d099bc983dcac55a35b47f560aa" translate="yes" xml:space="preserve">
          <source>Sets HTTP header valid for all next requests. Use &lt;code&gt;deleteHeader&lt;/code&gt; to unset it</source>
          <target state="translated">다음 모든 요청에 ​​유효한 HTTP 헤더를 설정합니다. &lt;code&gt;deleteHeader&lt;/code&gt; 를 사용 하여 설정 해제</target>
        </trans-unit>
        <trans-unit id="e3eeebaccc4b0c4add076f9634708d47d733660d" translate="yes" xml:space="preserve">
          <source>Sets SERVER parameter valid for all next requests.</source>
          <target state="translated">모든 다음 요청에 유효한 SERVER 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="91faf491d2203600d59e23ea977554adec70bb60" translate="yes" xml:space="preserve">
          <source>Sets SERVER parameters valid for all next requests. this will remove old ones.</source>
          <target state="translated">모든 다음 요청에 유효한 SERVER 매개 변수를 설정합니다. 이것은 오래된 것을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="597a9ca396fae4724dce72b3fd0c6952009a2c94" translate="yes" xml:space="preserve">
          <source>Sets a HTTP header to be used for all subsequent requests. Use &lt;a href=&quot;#deleteHeader&quot;&gt;&lt;code&gt;deleteHeader&lt;/code&gt;&lt;/a&gt; to unset it.</source>
          <target state="translated">모든 후속 요청에 사용할 HTTP 헤더를 설정합니다. 설정을 해제 하려면 &lt;a href=&quot;#deleteHeader&quot;&gt; &lt;code&gt;deleteHeader&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="402883674060ba8864dc58924a48f129d30bf242" translate="yes" xml:space="preserve">
          <source>Sets a cookie and, if validation is enabled, signs it.</source>
          <target state="translated">쿠키를 설정하고 유효성 검사가 활성화 된 경우 서명합니다.</target>
        </trans-unit>
        <trans-unit id="573c118a80d8f370fd35a3d3c2edcec15470985b" translate="yes" xml:space="preserve">
          <source>Sets a cookie with the given name and value. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;expires&lt;/code&gt;, &lt;code&gt;secure&lt;/code&gt; in array passed as last argument.</source>
          <target state="translated">주어진 이름과 값으로 쿠키를 설정합니다. &lt;code&gt;domain&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;expires&lt;/code&gt; , 마지막 인수로 전달 된 배열의 &lt;code&gt;secure&lt;/code&gt; 과 같은 추가 쿠키 매개 변수를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd7d6b15cc7ef927300da0954fbcfc5be6d1c44e" translate="yes" xml:space="preserve">
          <source>Sets attribute for current node</source>
          <target state="translated">현재 노드의 속성을 설정합니다</target>
        </trans-unit>
        <trans-unit id="dc3a6d2eeef4598b2b5fd630abb3e63725cb1da0" translate="yes" xml:space="preserve">
          <source>Sets the HTTP header to the passed value - which is used on subsequent HTTP requests through PhpBrowser.</source>
          <target state="translated">HTTP 헤더를 전달 된 값으로 설정합니다. 이는 PhpBrowser를 통한 후속 HTTP 요청에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="51220d9fc9621db92c9de33cb6f0e6b7688dcffb" translate="yes" xml:space="preserve">
          <source>Sets value to session. Use for authorization.</source>
          <target state="translated">값을 세션으로 설정합니다. 승인에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="555ea2ea3969328e93670753d8ba351713dea8a8" translate="yes" xml:space="preserve">
          <source>Shared Memory</source>
          <target state="translated">공유 메모리</target>
        </trans-unit>
        <trans-unit id="07d76b2f86536fb300e9ef506b43ea2e14d96aa1" translate="yes" xml:space="preserve">
          <source>Shell auto-completion</source>
          <target state="translated">셸 자동 완성</target>
        </trans-unit>
        <trans-unit id="7a7413c5c23a498ce483add168678ef9051bdb7d" translate="yes" xml:space="preserve">
          <source>Short text message to an amount of chars</source>
          <target state="translated">문자 수에 대한 짧은 문자 메시지</target>
        </trans-unit>
        <trans-unit id="b3bede16abeb1197e82d62bea94cf6fba40a8b34" translate="yes" xml:space="preserve">
          <source>Shorthand Functions</source>
          <target state="translated">속기 기능</target>
        </trans-unit>
        <trans-unit id="50b15a891c74ea8e954c5d3c5a40568c25b57e6a" translate="yes" xml:space="preserve">
          <source>Shorthand functions can be used in your Codeception tests or helpers.</source>
          <target state="translated">단축 기능은 Codeception 테스트 또는 도우미에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b925f56e8d5f1a8a617038357e4d861d851f85b" translate="yes" xml:space="preserve">
          <source>Shows step by step execution process for scenario driven tests without actually running them.</source>
          <target state="translated">실제로 실행하지 않고 시나리오 중심 테스트에 대한 단계별 실행 프로세스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5b772b7bfd0a43273fb7c5f49a6c16d837261f35" translate="yes" xml:space="preserve">
          <source>Shuffle</source>
          <target state="translated">Shuffle</target>
        </trans-unit>
        <trans-unit id="2950a4d8ba1d4de2b68b49f849fb136b3ace9a3d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;amOnPage&lt;/code&gt; but accepts a route as first argument and params as second</source>
          <target state="translated">&lt;code&gt;amOnPage&lt;/code&gt; 와 유사 하지만 경로를 첫 번째 인수로 허용하고 매개 변수를 두 번째 인수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a6d921f4460e6a415868076301684375c9125d7c" translate="yes" xml:space="preserve">
          <source>Similar to amOnPage but accepts route as first argument and params as second</source>
          <target state="translated">amOnPage와 유사하지만 route를 첫 번째 인수로, 매개 변수를 두 번째로 허용</target>
        </trans-unit>
        <trans-unit id="e3eecc56094f425f086710a5eb799c96f36c6587" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can have some actions to fail silently, if they are errored. Let&amp;rsquo;s say, you open a page and some times there is a popup which should be closed. We may try to hit the &amp;ldquo;close&amp;rdquo; button but if this action fails (no popup on page) we just continue the test.</source>
          <target state="translated">Codeception 3.0부터 오류가 발생한 경우 일부 작업이 자동으로 실패하도록 할 수 있습니다. 예를 들어 페이지를 열고 닫아야하는 팝업이있는 경우가 있습니다. &quot;닫기&quot;버튼을 누르려고 할 수 있지만이 작업이 실패하면 (페이지에 팝업이 표시되지 않음) 테스트를 계속합니다.</target>
        </trans-unit>
        <trans-unit id="ab9cab8f5e698e7915932c4cd17233c2000e8ad1" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can have some actions to fail silently, is they are errored. Let&amp;rsquo;s say, you open a page and some times there is a popup which should be closed. We may try to hit the &amp;ldquo;close&amp;rdquo; button but if this action fails (no popup on page) we just continue the test.</source>
          <target state="translated">Codeception 3.0부터는 자동으로 실패 할 수있는 조치가있을 수 있습니다. 오류가 발생했습니다. 페이지를 열면 팝업을 닫아야하는 경우가 있습니다. &quot;닫기&quot;버튼을 눌렀을 수도 있지만이 조치가 실패하면 (페이지에 팝업이 표시되지 않음) 테스트를 계속합니다.</target>
        </trans-unit>
        <trans-unit id="ae5969b9ea58c658ff5ffd5c43755452fb1b5c3d" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can pause execution in any point and enter interactive shell where you will be able to try commands in action. All you need to do is to &lt;strong&gt;call &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt; in debug mode&lt;/strong&gt;.</source>
          <target state="translated">Codeception 3.0부터는 언제라도 실행을 일시 중지하고 대화 형 셸을 입력하여 명령을 실행할 수 있습니다. &lt;strong&gt;디버그 모드에서 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt; &lt;/strong&gt; 를 &lt;strong&gt;호출&lt;/strong&gt; 하기 &lt;strong&gt;만하면됩니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f758c77de116d7c8a094fff2f6a4f4094a29282a" translate="yes" xml:space="preserve">
          <source>Since Codeception 3.0 you can pause the execution at any point and enter an interactive shell where you will be able to try different commands in action. All you need to do is &lt;strong&gt;call &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt;&lt;/strong&gt; somewhere in your test, then run the test in &lt;a href=&quot;#Debugging&quot;&gt;debug mode&lt;/a&gt;.</source>
          <target state="translated">Codeception 3.0부터는 언제든지 실행을 일시 중지하고 다른 명령을 실행할 수있는 대화 형 쉘로 들어갈 수 있습니다. 당신이 할 필요가있다 &lt;strong&gt;전화 &lt;code&gt;$I-&amp;gt;pause()&lt;/code&gt; &lt;/strong&gt; 다음에서 테스트 실행, 테스트 어딘가에 &lt;a href=&quot;#Debugging&quot;&gt;디버그 모드를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8f23969796a8e27d07d105064c08f15d2aef996" translate="yes" xml:space="preserve">
          <source>Since PhantomJS doesn&amp;rsquo;t give you any visual feedback, it&amp;rsquo;s probably a good idea to install &lt;a href=&quot;https://codeception.com/extensions#CodeceptionExtensionRecorder&quot;&gt;Codeception\Extension\Recorder&lt;/a&gt; which gives you screenshots of how PhantomJS &amp;ldquo;sees&amp;rdquo; your pages.</source>
          <target state="translated">PhantomJS는 시각적 인 피드백을 제공하지 않기 때문에 PhantomJS가 페이지를 &quot;보는&quot;방법에 대한 스크린 샷을 제공하는 &lt;a href=&quot;https://codeception.com/extensions#CodeceptionExtensionRecorder&quot;&gt;Codeception \ Extension \ Recorder&lt;/a&gt; 를 설치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="5481db0182e9f2efb8de941ea139eb16ac0fd13e" translate="yes" xml:space="preserve">
          <source>Since version 2.1.9 it&amp;rsquo;s possible to use LIKE in a condition, as shown here:</source>
          <target state="translated">버전 2.1.9부터 다음과 같이 조건에서 LIKE를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b379be1830569ee21fa4d95d5c5bd48d8ca2b0be" translate="yes" xml:space="preserve">
          <source>Single Login</source>
          <target state="translated">단일 로그인</target>
        </trans-unit>
        <trans-unit id="ae2f41032448cb092b14ef2c1c78acaaf664842a" translate="yes" xml:space="preserve">
          <source>Single PHP class</source>
          <target state="translated">단일 PHP 클래스</target>
        </trans-unit>
        <trans-unit id="7e6f34aa922f01a54d7c4c961303ef2e47b713c8" translate="yes" xml:space="preserve">
          <source>Skipped fields will be filled by their values from the page. You don&amp;rsquo;t need to click the &amp;lsquo;Submit&amp;rsquo; button afterwards. This command itself triggers the request to form&amp;rsquo;s action.</source>
          <target state="translated">건너 뛴 필드는 페이지의 값으로 채워집니다. 나중에 '제출'버튼을 클릭하지 않아도됩니다. 이 명령 자체는 양식의 요청을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="33dcec9ce454235dcdfdd0776c274259bd8ee8d6" translate="yes" xml:space="preserve">
          <source>Slow</source>
          <target state="translated">Slow</target>
        </trans-unit>
        <trans-unit id="c5cad87bd00c6e7984876cefb0f1643d6574a8dc" translate="yes" xml:space="preserve">
          <source>SmartWait</source>
          <target state="translated">SmartWait</target>
        </trans-unit>
        <trans-unit id="aa8daa0f9310afde38e99f94181eaeff3c4ea863" translate="yes" xml:space="preserve">
          <source>SmartWait can be enabled by setting &lt;code&gt;wait&lt;/code&gt; option in WebDriver config. It expects the number of seconds to wait. Example:</source>
          <target state="translated">WebDriver 구성에서 &lt;code&gt;wait&lt;/code&gt; 옵션 을 설정하여 SmartWait를 활성화 할 수 있습니다 . 대기하는 시간 (초)을 예상합니다. 예:</target>
        </trans-unit>
        <trans-unit id="4fc6ced7712f6b9a6a2de553b8159613f4660c2f" translate="yes" xml:space="preserve">
          <source>Some adblockers might restrict it.</source>
          <target state="translated">일부 광고 차단기는이를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab48d0a30772ed11c42227d5f29a40a0b053294f" translate="yes" xml:space="preserve">
          <source>Some environments are hard to be reproduced manually, testing Internet Explorer 6-8 on Windows XP may be a hard thing, especially if you don&amp;rsquo;t have Windows XP installed. This is where Cloud Testing services come to help you. Services such as &lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs&lt;/a&gt;, &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; and &lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;others&lt;/a&gt; can create virtual machines on demand and set up Selenium Server and the desired browser. Tests are executed on a remote machine in a cloud, to access local files cloud testing services provide a special application called &lt;strong&gt;Tunnel&lt;/strong&gt;. Tunnel operates on a secured protocol and allows browsers executed in a cloud to connect to a local web server.</source>
          <target state="translated">일부 환경은 수동으로 재현하기가 어렵습니다. 특히 Windows XP가 설치되어 있지 않은 경우 Windows XP에서 Internet Explorer 6-8을 테스트하는 것이 어려울 수 있습니다. 클라우드 테스트 서비스가 도움이되는 곳입니다. 같은 서비스 &lt;a href=&quot;https://saucelabs.com&quot;&gt;SauceLabs는&lt;/a&gt; , &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; 및 &lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;다른 사람은&lt;/a&gt; 셀레늄 서버 및 원하는 브라우저 수요 및 세트에 가상 머신을 생성 할 수 있습니다. 테스트는 클라우드의 원격 시스템에서 실행되어 로컬 파일에 액세스합니다. 클라우드 테스트 서비스는 &lt;strong&gt;Tunnel&lt;/strong&gt; 이라는 특수 애플리케이션을 제공합니다 . 터널은 보안 프로토콜에서 작동하며 클라우드에서 실행되는 브라우저가 로컬 웹 서버에 연결할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="90f45c5dff92fe13266010f43a04abb91902db6b" translate="yes" xml:space="preserve">
          <source>Some frameworks (e.g. Symfony) create field names in the form of an &amp;ldquo;array&amp;rdquo;: &lt;code&gt;&amp;lt;input type=&quot;text&quot; name=&quot;form[task]&quot;&amp;gt;&lt;/code&gt; In this case you need to pass the fields like this:</source>
          <target state="translated">일부 프레임 워크 (예 : Symfony)는 &quot;배열&quot;형식으로 필드 이름을 만듭니다. &lt;code&gt;&amp;lt;input type=&quot;text&quot; name=&quot;form[task]&quot;&amp;gt;&lt;/code&gt; 이 경우 다음과 같은 필드를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="7311146f3a604c03553cb611040ade6fa2db40db" translate="yes" xml:space="preserve">
          <source>Some modules are bundled with PHAR files.</source>
          <target state="translated">일부 모듈은 PHAR 파일과 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="ca07dfd47a86463d9d3fd78301abb3edc9c186e5" translate="yes" xml:space="preserve">
          <source>Sometimes it is needed to set custom configuration for a specific test only. For &lt;a href=&quot;07-advancedusage#Cest-Classes&quot;&gt;Cest&lt;/a&gt; and &lt;a href=&quot;05-unittests&quot;&gt;Test\Unit&lt;/a&gt; formats you can use &lt;code&gt;@prepare&lt;/code&gt; annotation which can execute the code before other hooks are executed. This allows &lt;code&gt;@prepare&lt;/code&gt; to change the module configuration in runtime. &lt;code&gt;@prepare&lt;/code&gt; uses &lt;a href=&quot;07-advancedusage#Dependency-Injection&quot;&gt;dependency injection&lt;/a&gt; to automatically inject required modules into a method.</source>
          <target state="translated">때로는 특정 테스트에 대해서만 사용자 정의 구성을 설정해야합니다. 들어 &lt;a href=&quot;07-advancedusage#Cest-Classes&quot;&gt;CEST&lt;/a&gt; 및 &lt;a href=&quot;05-unittests&quot;&gt;테스트 \ 단위&lt;/a&gt; 사용할 수있는 포맷 &lt;code&gt;@prepare&lt;/code&gt; 다른 후크를 실행하기 전에 코드를 실행할 수 있습니다 주석을. 이를 통해 &lt;code&gt;@prepare&lt;/code&gt; 는 런타임에 모듈 구성을 변경할 수 있습니다 . &lt;code&gt;@prepare&lt;/code&gt; 는 &lt;a href=&quot;07-advancedusage#Dependency-Injection&quot;&gt;의존성 주입&lt;/a&gt; 을 사용 하여 필요한 모듈을 메소드에 자동으로 주입합니다.</target>
        </trans-unit>
        <trans-unit id="dfa9e9b54c47122a87532a7dd4facf37f68bd1d2" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to change the test behavior in real time. For instance, the behavior of the same test may differ in Firefox and in Chrome. In runtime we can retrieve the current environment name, test name, or list of enabled modules by calling the &lt;code&gt;$scenario-&amp;gt;current()&lt;/code&gt; method.</source>
          <target state="translated">때로는 테스트 동작을 실시간으로 변경해야 할 수도 있습니다. 예를 들어, 동일한 테스트의 동작은 Firefox와 Chrome에서 다를 수 있습니다. 런타임에 &lt;code&gt;$scenario-&amp;gt;current()&lt;/code&gt; 메소드 를 호출하여 현재 환경 이름, 테스트 이름 또는 사용 가능한 모듈 목록을 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0049c72fd415d236a8fa18176ab4ac9af9383f47" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to close a webpage before the end of the test. For such cases, you may use &lt;code&gt;leave()&lt;/code&gt;. You can also specify roles for a friend:</source>
          <target state="translated">때로는 테스트가 끝나기 전에 웹 페이지를 닫고 싶을 수도 있습니다. 이러한 경우 &lt;code&gt;leave()&lt;/code&gt; 사용할 수 있습니다 . 친구의 역할을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="22a35fbebff47762d94faae1d7babdf97b0736bf" translate="yes" xml:space="preserve">
          <source>Source code</source>
          <target state="translated">소스 코드</target>
        </trans-unit>
        <trans-unit id="c9552e72c842f6053993f592eac944047eff7c40" translate="yes" xml:space="preserve">
          <source>Special module for using asserts in your tests.</source>
          <target state="translated">테스트에서 어설 션을 사용하기위한 특수 모듈.</target>
        </trans-unit>
        <trans-unit id="a477d8dab7ef5cc90c58a41d06ca3494aeba078f" translate="yes" xml:space="preserve">
          <source>Specify</source>
          <target state="translated">Specify</target>
        </trans-unit>
        <trans-unit id="7e214906efa9005f9068828228f83bdbf9f9ec3f" translate="yes" xml:space="preserve">
          <source>Specify the database to use</source>
          <target state="translated">사용할 데이터베이스를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="2d2cb022bc3d26bd1407c4aa787d5e46e1ad4c3b" translate="yes" xml:space="preserve">
          <source>Speed</source>
          <target state="translated">Speed</target>
        </trans-unit>
        <trans-unit id="b1cbc3e1af008b4451d9672fe1061d17df91e4d2" translate="yes" xml:space="preserve">
          <source>Stability:</source>
          <target state="translated">Stability:</target>
        </trans-unit>
        <trans-unit id="7f73baa437c1ef537c65a9547012cebcd3a73e64" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;alpha&lt;/strong&gt;</source>
          <target state="translated">안정성 : &lt;strong&gt;알파&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5698961251fe94f248d26f4094690d3b1cc9774c" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;beta&lt;/strong&gt;</source>
          <target state="translated">안정성 : &lt;strong&gt;베타&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d26d8a99076343468dee2ff163374df9c5738ee1" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;dev&lt;/strong&gt;</source>
          <target state="translated">안정성 : &lt;strong&gt;dev&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d520fdb60f2940df181ecd2ca88ae1a963a9cce" translate="yes" xml:space="preserve">
          <source>Stability: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">안정성 : &lt;strong&gt;안정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fbc014247a90e3e9471cd43027f6ed1dd5022323" translate="yes" xml:space="preserve">
          <source>Standard Modules</source>
          <target state="translated">표준 모듈</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="2063d785491108691ccb36d110abed817fc6284d" translate="yes" xml:space="preserve">
          <source>Status: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">상태 : &lt;strong&gt;안정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc416e1088e4bf094dfc9abe0210e0288f5a169e" translate="yes" xml:space="preserve">
          <source>Step</source>
          <target state="translated">Step</target>
        </trans-unit>
        <trans-unit id="5584016d7115afdb5f56fd9859bdbd8cc9718f50" translate="yes" xml:space="preserve">
          <source>Step 1: Split Tests</source>
          <target state="translated">1 단계 : 테스트 분할</target>
        </trans-unit>
        <trans-unit id="83bebc922d56371d3ad97c1ceeef4405f8bcfded" translate="yes" xml:space="preserve">
          <source>Step 2: Running Tests</source>
          <target state="translated">2 단계 : 테스트 실행</target>
        </trans-unit>
        <trans-unit id="467f15ffd9ebe2d5a62f9c3316e2542e71a3210b" translate="yes" xml:space="preserve">
          <source>Step 3: Merge Results</source>
          <target state="translated">3 단계 : 결과 병합</target>
        </trans-unit>
        <trans-unit id="e6cac27ed66314ec5d56b0555d8e981c05765914" translate="yes" xml:space="preserve">
          <source>Step Decorators</source>
          <target state="translated">스텝 데코레이터</target>
        </trans-unit>
        <trans-unit id="baa48047d0504ed625a6534181f9614799002447" translate="yes" xml:space="preserve">
          <source>Step Definitions</source>
          <target state="translated">단계 정의</target>
        </trans-unit>
        <trans-unit id="bb55848dbd5f98c85df579f900b4b5d573025f1a" translate="yes" xml:space="preserve">
          <source>Step decorators are used to implement conditional assertions. When enabled, conditional assertions take all method prefixed by &lt;code&gt;see&lt;/code&gt; or &lt;code&gt;dontSee&lt;/code&gt; and introduce new steps prefixed with &lt;code&gt;canSee&lt;/code&gt; and &lt;code&gt;cantSee&lt;/code&gt;. Contrary to standard assertions those assertions won&amp;rsquo;t stop test on failure. This is done by wrapping action into try/catch blocks.</source>
          <target state="translated">단계 데코레이터는 조건부 어설 션을 구현하는 데 사용됩니다. 활성화되면 조건부 어설 션은 &lt;code&gt;see&lt;/code&gt; 또는 &lt;code&gt;dontSee&lt;/code&gt; 접두사가 붙은 모든 메소드 를 &lt;code&gt;canSee&lt;/code&gt; 및 &lt;code&gt;cantSee&lt;/code&gt; 접두사가 붙은 새로운 단계를 도입합니다 . 표준 어설 션과 달리 해당 어설 션은 실패시 테스트를 중단하지 않습니다. 이 작업은 try / catch 블록으로 작업을 래핑하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="db1c527b753201709b9a00b6383f9f6972b99edf" translate="yes" xml:space="preserve">
          <source>Step decorators can be added to suite config inside &lt;code&gt;steps&lt;/code&gt; block:</source>
          <target state="translated">단계 데코레이터는 &lt;code&gt;steps&lt;/code&gt; 블록 내의 스위트 구성에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="75e194e12be1b99d59492faf0825cca7b452a389" translate="yes" xml:space="preserve">
          <source>StepObject can be instantiated automatically when used inside the Cest format:</source>
          <target state="translated">StepObject는 Cest 형식 내에서 사용될 때 자동으로 인스턴스화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86e2b082d0e8bc6a146b47345920ce9fdfb156da" translate="yes" xml:space="preserve">
          <source>StepObjects</source>
          <target state="translated">StepObjects</target>
        </trans-unit>
        <trans-unit id="4f647b5747b293c4740d61c3817bf54ea9ca42eb" translate="yes" xml:space="preserve">
          <source>StepObjects are great if you need some common functionality for a group of tests. Let&amp;rsquo;s say you are going to test an admin area of a site. You probably won&amp;rsquo;t need the same actions from the admin area while testing the front end, so it&amp;rsquo;s a good idea to move these admin-specific tests into their own class. We call such a classes StepObjects.</source>
          <target state="translated">StepObjects는 테스트 그룹에 공통 기능이 필요한 경우 유용합니다. 사이트의 관리 영역을 테스트한다고 가정 해 봅시다. 프런트 엔드를 테스트하는 동안 관리 영역에서 동일한 작업이 필요하지 않을 수 있으므로 이러한 관리자 별 테스트를 자체 클래스로 옮기는 것이 좋습니다. 우리는 이러한 클래스를 StepObjects라고 부릅니다.</target>
        </trans-unit>
        <trans-unit id="9e4ea3e701cc787084c48c674751270a8df05736" translate="yes" xml:space="preserve">
          <source>Steps are defined in Context files. Default context is an actor class, i.e. for acceptance testing suite default context is &lt;code&gt;AcceptanceTester&lt;/code&gt; class. However, you can define steps in any classes and include them as contexts. It is useful to define steps in StepObject and PageObject classes.</source>
          <target state="translated">단계는 컨텍스트 파일에 정의되어 있습니다. 기본 컨텍스트는 액터 클래스입니다. 즉, 승인 테스트 스위트의 기본 컨텍스트는 &lt;code&gt;AcceptanceTester&lt;/code&gt; 클래스입니다. 그러나 모든 클래스에서 단계를 정의하고이를 컨텍스트로 포함 할 수 있습니다. StepObject 및 PageObject 클래스에서 단계를 정의하는 것이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5c3d982a812b295d5b49a02e530108fc6a746a77" translate="yes" xml:space="preserve">
          <source>Steps can also be matched with regex expressions. This way we can make more flexible steps</source>
          <target state="translated">단계는 정규식과도 일치시킬 수 있습니다. 이렇게하면보다 유연한 단계를 만들 수 있습니다</target>
        </trans-unit>
        <trans-unit id="43a1f02f811190703678e0cc1d87fa782f0048bd" translate="yes" xml:space="preserve">
          <source>Steps in background are defined the same way as in scenarios.</source>
          <target state="translated">백그라운드 단계는 시나리오와 동일한 방식으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="f9f57686acc22df516f6fe01ba7f18acd99a1841" translate="yes" xml:space="preserve">
          <source>Stores an item &lt;code&gt;$value&lt;/code&gt; with &lt;code&gt;$key&lt;/code&gt; on the APC(u).</source>
          <target state="translated">APC (u)에 &lt;code&gt;$key&lt;/code&gt; 와 함께 항목 &lt;code&gt;$value&lt;/code&gt; 를 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="5f912038a03d9d87434351f8ea98f8053de48586" translate="yes" xml:space="preserve">
          <source>Stores an item &lt;code&gt;$value&lt;/code&gt; with &lt;code&gt;$key&lt;/code&gt; on the Memcached server.</source>
          <target state="translated">Memcached 서버에서 &lt;code&gt;$key&lt;/code&gt; 와 함께 항목 &lt;code&gt;$value&lt;/code&gt; 를 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="89264093eedac2573e3a15a086000440bb83d0cc" translate="yes" xml:space="preserve">
          <source>Strict Locator</source>
          <target state="translated">엄격한 로케이터</target>
        </trans-unit>
        <trans-unit id="b1202647435df2841ab6052497b12a2c7b470565" translate="yes" xml:space="preserve">
          <source>Strings: its value will be overwritten with $value</source>
          <target state="translated">문자열 : 값이 $ value로 덮어 쓰기</target>
        </trans-unit>
        <trans-unit id="5344b9208082b393c5f94da59a357949604fc9d6" translate="yes" xml:space="preserve">
          <source>Stubbing a method call to return a list of values in the specified order.</source>
          <target state="translated">지정된 순서로 값 목록을 반환하기 위해 메서드 호출을 스터 빙합니다.</target>
        </trans-unit>
        <trans-unit id="3107408a50c756bdc03dcf7d5aed6d74eb0c9e3e" translate="yes" xml:space="preserve">
          <source>Stubs</source>
          <target state="translated">Stubs</target>
        </trans-unit>
        <trans-unit id="243394d0155c31adcea7d3d4d191d2fd6d1dcb03" translate="yes" xml:space="preserve">
          <source>Stubs can also be created using static methods from &lt;code&gt;Codeception\Stub&lt;/code&gt; class. In this</source>
          <target state="translated">&lt;code&gt;Codeception\Stub&lt;/code&gt; 클래스의 정적 메서드를 사용하여 스텁을 만들 수도 있습니다 . 이것에서</target>
        </trans-unit>
        <trans-unit id="390b2d50519e50c0a7c83d6c89de08aebd773a8d" translate="yes" xml:space="preserve">
          <source>Stubs can be created with a static methods of &lt;code&gt;Codeception\Stub&lt;/code&gt;.</source>
          <target state="translated">스텁은 정적 메소드 &lt;code&gt;Codeception\Stub&lt;/code&gt; 로 작성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6958aa2c93904bceab6ea7532c2f548dcbcbf3e" translate="yes" xml:space="preserve">
          <source>Submits request to endpoint.</source>
          <target state="translated">엔드 포인트에 요청을 제출합니다.</target>
        </trans-unit>
        <trans-unit id="7474e42f9d0a163b4975357f7a773f2977b1c004" translate="yes" xml:space="preserve">
          <source>Submits the given form on the page, optionally with the given form values. Give the form fields values as an array. Note that hidden fields can&amp;rsquo;t be accessed.</source>
          <target state="translated">주어진 양식 값을 선택적으로 주어진 양식을 페이지에 제출합니다. 양식 필드 값을 배열로 제공하십시오. 숨겨진 필드에는 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="200484f0fc61d5da64facb469035e4d047290a34" translate="yes" xml:space="preserve">
          <source>Submits the given form on the page, with the given form values. Pass the form field&amp;rsquo;s values as an array in the second parameter.</source>
          <target state="translated">주어진 양식 값과 함께 주어진 양식을 페이지에 제출합니다. 두 번째 매개 변수에서 양식 필드의 값을 배열로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="5ebde4c2b10e6ace16338f84a54f868d47c06a9e" translate="yes" xml:space="preserve">
          <source>Such talks should produce written stories. There should be an actor that doing some things, the feature that should be fulfilled within the story and the result achieved.</source>
          <target state="translated">그러한 대화는 글을 써야합니다. 어떤 일을하는 배우, 스토리 내에서 성취되어야 할 기능 및 달성 된 결과가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d9f630b97d2e6dc01d291ee0d66d09b3de62c5e2" translate="yes" xml:space="preserve">
          <source>Suite Bootstrap</source>
          <target state="translated">스위트 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="3bdbdbaf2772c561a79d8c0079ce87ea45d56845" translate="yes" xml:space="preserve">
          <source>Suite Configuration</source>
          <target state="translated">스위트 구성</target>
        </trans-unit>
        <trans-unit id="2b246b23873f987c00a1dcad653b7457dfd1a8ee" translate="yes" xml:space="preserve">
          <source>Suite, Result, Settings</source>
          <target state="translated">스위트, 결과, 설정</target>
        </trans-unit>
        <trans-unit id="509b0c94b2034e962690fbc25d569daa626c21da" translate="yes" xml:space="preserve">
          <source>Suite, Settings</source>
          <target state="translated">스위트, 설정</target>
        </trans-unit>
        <trans-unit id="b4e883d3f0f5d4d2d3dc7cab459e21a804c8b259" translate="yes" xml:space="preserve">
          <source>Suites</source>
          <target state="translated">Suites</target>
        </trans-unit>
        <trans-unit id="ccb0f62197d93ae3c79e26289a42e401c010124a" translate="yes" xml:space="preserve">
          <source>Supported and tested FTP types are:</source>
          <target state="translated">지원 및 테스트 된 FTP 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="93ee94ed984d27d6d3e470925ea6048f3466e20d" translate="yes" xml:space="preserve">
          <source>Supported and tested databases are:</source>
          <target state="translated">지원 및 테스트 된 데이터베이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c8dd111a9740e47a7a16dc7c88b6e675ede5be59" translate="yes" xml:space="preserve">
          <source>Supported and tested queue types are:</source>
          <target state="translated">지원되고 테스트 된 큐 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c8dde8628d32517131f252a8c0c04d9237915dc2" translate="yes" xml:space="preserve">
          <source>Supported operators: &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;like&lt;/code&gt;.</source>
          <target state="translated">지원되는 운영 : &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;like&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3e72aed0af6318d72dd40dfd00a7e6e09acc7a5" translate="yes" xml:space="preserve">
          <source>Switch to another frame on the page.</source>
          <target state="translated">페이지의 다른 프레임으로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="73941b798e950fb3f1fc891fdfd483de457a1355" translate="yes" xml:space="preserve">
          <source>Switch to another iframe on the page.</source>
          <target state="translated">페이지에서 다른 iframe으로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="14a664c9a64204eea0378a3b6aaa43d88c5c000f" translate="yes" xml:space="preserve">
          <source>Switch to another window identified by name.</source>
          <target state="translated">이름으로 식별 된 다른 창으로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="de8390ce90c8374dc6ad7a245ff0f103b9228ff2" translate="yes" xml:space="preserve">
          <source>Switch to iframe or frame on the page.</source>
          <target state="translated">페이지에서 iframe 또는 프레임으로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="9c43ffa6720ada1f1f6731369eac2d923171ffaf" translate="yes" xml:space="preserve">
          <source>Switches to next browser tab. An offset can be specified.</source>
          <target state="translated">다음 브라우저 탭으로 전환합니다. 오프셋을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="390439ace1e752c36359813dc176064e33c86282" translate="yes" xml:space="preserve">
          <source>Switches to previous browser tab. An offset can be specified.</source>
          <target state="translated">이전 브라우저 탭으로 전환합니다. 오프셋을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1c19bea4e2a2e0b334586da45d1990f4121ffec" translate="yes" xml:space="preserve">
          <source>Symfony</source>
          <target state="translated">Symfony</target>
        </trans-unit>
        <trans-unit id="91968eab09193fa9ec7265604ad9a827409ef797" translate="yes" xml:space="preserve">
          <source>Symfony 2.x</source>
          <target state="translated">심포니 2.x</target>
        </trans-unit>
        <trans-unit id="cea1498713815f07289ff18f121f2c87639d6179" translate="yes" xml:space="preserve">
          <source>Symfony 3.x</source>
          <target state="translated">심포니 3.x</target>
        </trans-unit>
        <trans-unit id="eceb3e22da12ffbc691fe5205773bf12857c913b" translate="yes" xml:space="preserve">
          <source>Symfony 4.x</source>
          <target state="translated">심포니 4.x</target>
        </trans-unit>
        <trans-unit id="d9743911a95aec0b6c1e5f8eba4a15a36b9b9790" translate="yes" xml:space="preserve">
          <source>Symfony::_findElements</source>
          <target state="translated">Symfony::_findElements</target>
        </trans-unit>
        <trans-unit id="509983cde3b7d438a65230da7560efa5667217c9" translate="yes" xml:space="preserve">
          <source>Symfony::_getResponseContent</source>
          <target state="translated">Symfony::_getResponseContent</target>
        </trans-unit>
        <trans-unit id="5dca501155ff6aba8a0e30f052d66e0e04003f4c" translate="yes" xml:space="preserve">
          <source>Symfony::_loadPage</source>
          <target state="translated">Symfony::_loadPage</target>
        </trans-unit>
        <trans-unit id="d73d7c6f824239ea13e03c2df108775d2be27683" translate="yes" xml:space="preserve">
          <source>Symfony::_request</source>
          <target state="translated">Symfony::_request</target>
        </trans-unit>
        <trans-unit id="2ccae628f7587b3119b6d96b2f0da84cd847ab38" translate="yes" xml:space="preserve">
          <source>Symfony::_savePageSource</source>
          <target state="translated">Symfony::_savePageSource</target>
        </trans-unit>
        <trans-unit id="735519f679c2fb6f5cc14eb6721a5ae2a5961039" translate="yes" xml:space="preserve">
          <source>Symfony::amHttpAuthenticated</source>
          <target state="translated">Symfony::amHttpAuthenticated</target>
        </trans-unit>
        <trans-unit id="8b19918aecf5a8a95be893716b64016b40579bb9" translate="yes" xml:space="preserve">
          <source>Symfony::amOnPage</source>
          <target state="translated">Symfony::amOnPage</target>
        </trans-unit>
        <trans-unit id="15b64072cfd9ca87bee7622a4322441e2b8b183c" translate="yes" xml:space="preserve">
          <source>Symfony::amOnRoute</source>
          <target state="translated">Symfony::amOnRoute</target>
        </trans-unit>
        <trans-unit id="7bdb9afb6a072cc5ba3f887c721c9fd195bd8b65" translate="yes" xml:space="preserve">
          <source>Symfony::attachFile</source>
          <target state="translated">Symfony::attachFile</target>
        </trans-unit>
        <trans-unit id="9a918577ca3d3b14ee3a4f39673c1e71b59ee16a" translate="yes" xml:space="preserve">
          <source>Symfony::checkOption</source>
          <target state="translated">Symfony::checkOption</target>
        </trans-unit>
        <trans-unit id="aa4dea019a799040bec92fc4149bfbf47e79aaf3" translate="yes" xml:space="preserve">
          <source>Symfony::click</source>
          <target state="translated">Symfony::click</target>
        </trans-unit>
        <trans-unit id="917427efe31f644ad1333c5e14e20b4c6702ceda" translate="yes" xml:space="preserve">
          <source>Symfony::deleteHeader</source>
          <target state="translated">Symfony::deleteHeader</target>
        </trans-unit>
        <trans-unit id="6c8de5e6f13e4d7213aa9240a865128868f4ffd1" translate="yes" xml:space="preserve">
          <source>Symfony::dontSee</source>
          <target state="translated">Symfony::dontSee</target>
        </trans-unit>
        <trans-unit id="3d601ed0b026f10668fe7725452351f67eef9341" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCheckboxIsChecked</source>
          <target state="translated">Symfony::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="8c50f64936270dbebb7f38ac66fdd410b2a81657" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCookie</source>
          <target state="translated">Symfony::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="06046c88c7d51e1591665e3aae2bcc06968fb321" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCurrentUrlEquals</source>
          <target state="translated">Symfony::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="e7001319339b18893c21a191a03213f778246679" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeCurrentUrlMatches</source>
          <target state="translated">Symfony::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="e280352e9ac8d10f2b5e5b2d86b6dc14127eb93e" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeElement</source>
          <target state="translated">Symfony::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="b033bbaed09a56a6cbe995d656b759ad3da1edf5" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeEmailIsSent</source>
          <target state="translated">Symfony::dontSeeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="e3c45e55eeb462f95b6ea93e2a15132df0611d32" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInCurrentUrl</source>
          <target state="translated">Symfony::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="507fab0fad12121a37f2f4dc2de17b5874694d1a" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInField</source>
          <target state="translated">Symfony::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="450d2adaab7c9563950f7df17973eff06faf4901" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInFormFields</source>
          <target state="translated">Symfony::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="90bf4f31d4dff0233e283ef76971a62db120d012" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInSource</source>
          <target state="translated">Symfony::dontSeeInSource</target>
        </trans-unit>
        <trans-unit id="c90ad23d97ce562a8b62cd8b3987c6fbd765d92d" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeInTitle</source>
          <target state="translated">Symfony::dontSeeInTitle</target>
        </trans-unit>
        <trans-unit id="9a4c2b0b9aeff2b8cc83c34645278b80e0c897ee" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeLink</source>
          <target state="translated">Symfony::dontSeeLink</target>
        </trans-unit>
        <trans-unit id="d5b15367977606afdc91d6ec63e800f37d448421" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeOptionIsSelected</source>
          <target state="translated">Symfony::dontSeeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="a86dbf6e685059e677afb8519fd3b7551f7e9f18" translate="yes" xml:space="preserve">
          <source>Symfony::dontSeeResponseCodeIs</source>
          <target state="translated">Symfony::dontSeeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="69b32167c508ab62f3799a1f103c587fdaa80c2b" translate="yes" xml:space="preserve">
          <source>Symfony::fillField</source>
          <target state="translated">Symfony::fillField</target>
        </trans-unit>
        <trans-unit id="79588a817177c07f3ff587d3bb64ad65f61b456c" translate="yes" xml:space="preserve">
          <source>Symfony::grabAttributeFrom</source>
          <target state="translated">Symfony::grabAttributeFrom</target>
        </trans-unit>
        <trans-unit id="3b82ec1a9ff35c4017ac732e19fee33db6750c16" translate="yes" xml:space="preserve">
          <source>Symfony::grabCookie</source>
          <target state="translated">Symfony::grabCookie</target>
        </trans-unit>
        <trans-unit id="c98d72e99b5b1d1932db868d919bf09a0a9c3ac9" translate="yes" xml:space="preserve">
          <source>Symfony::grabFromCurrentUrl</source>
          <target state="translated">Symfony::grabFromCurrentUrl</target>
        </trans-unit>
        <trans-unit id="c3021acdfba3268e7b7d7797e5755492d4005a85" translate="yes" xml:space="preserve">
          <source>Symfony::grabMultiple</source>
          <target state="translated">Symfony::grabMultiple</target>
        </trans-unit>
        <trans-unit id="a30c317c1261e25499232b2ced82dc0a24c7d687" translate="yes" xml:space="preserve">
          <source>Symfony::grabPageSource</source>
          <target state="translated">Symfony::grabPageSource</target>
        </trans-unit>
        <trans-unit id="0b1abe54f38370c2efd288f3f52b797d004be520" translate="yes" xml:space="preserve">
          <source>Symfony::grabService</source>
          <target state="translated">Symfony::grabService</target>
        </trans-unit>
        <trans-unit id="e1286fb4267691f658851b04ff6e5c8f6dbbc3e7" translate="yes" xml:space="preserve">
          <source>Symfony::grabTextFrom</source>
          <target state="translated">Symfony::grabTextFrom</target>
        </trans-unit>
        <trans-unit id="b0a821a16652a9e453aa875f934f0ab885d82393" translate="yes" xml:space="preserve">
          <source>Symfony::grabValueFrom</source>
          <target state="translated">Symfony::grabValueFrom</target>
        </trans-unit>
        <trans-unit id="50975d7a67465914f4b8d65b7b5f9eedc2395dda" translate="yes" xml:space="preserve">
          <source>Symfony::haveHttpHeader</source>
          <target state="translated">Symfony::haveHttpHeader</target>
        </trans-unit>
        <trans-unit id="7b09f2fa3989ffcfcd60000af7200313dd5c760f" translate="yes" xml:space="preserve">
          <source>Symfony::invalidateCachedRouter</source>
          <target state="translated">Symfony::invalidateCachedRouter</target>
        </trans-unit>
        <trans-unit id="416d26370dde325d054ee477f47a3a742948cf7a" translate="yes" xml:space="preserve">
          <source>Symfony::makeHtmlSnapshot</source>
          <target state="translated">Symfony::makeHtmlSnapshot</target>
        </trans-unit>
        <trans-unit id="a2a5a514bc99edad52e2dfdb1c6f95c905ab9fb6" translate="yes" xml:space="preserve">
          <source>Symfony::moveBack</source>
          <target state="translated">Symfony::moveBack</target>
        </trans-unit>
        <trans-unit id="f7df864f59ea47c518de28ff6f41cdf5a7887d94" translate="yes" xml:space="preserve">
          <source>Symfony::onReconfigure</source>
          <target state="translated">Symfony::onReconfigure</target>
        </trans-unit>
        <trans-unit id="5e65c0cc4f7057e5682773144a95a4b6d2c3fb59" translate="yes" xml:space="preserve">
          <source>Symfony::persistService</source>
          <target state="translated">Symfony::persistService</target>
        </trans-unit>
        <trans-unit id="54608976cc587e4220e71bb8d6e960d978b738ad" translate="yes" xml:space="preserve">
          <source>Symfony::rebootClientKernel</source>
          <target state="translated">Symfony::rebootClientKernel</target>
        </trans-unit>
        <trans-unit id="480f2103746b5b9376e9a042b6c5a9779c087902" translate="yes" xml:space="preserve">
          <source>Symfony::resetCookie</source>
          <target state="translated">Symfony::resetCookie</target>
        </trans-unit>
        <trans-unit id="60e199cce570d70502985d778b6052c11865e402" translate="yes" xml:space="preserve">
          <source>Symfony::see</source>
          <target state="translated">Symfony::see</target>
        </trans-unit>
        <trans-unit id="cf113686237f78c672a4b5142b2e7514aa43bc43" translate="yes" xml:space="preserve">
          <source>Symfony::seeCheckboxIsChecked</source>
          <target state="translated">Symfony::seeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="6b55ba46e9702923dab2f66d38abc2521fe26abc" translate="yes" xml:space="preserve">
          <source>Symfony::seeCookie</source>
          <target state="translated">Symfony::seeCookie</target>
        </trans-unit>
        <trans-unit id="1ff1127970839d2933181bc1a7e83d8ba9f4fad8" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentRouteIs</source>
          <target state="translated">Symfony::seeCurrentRouteIs</target>
        </trans-unit>
        <trans-unit id="eeb148b36edd33d6bb6c61195992673ea8a11a7a" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentUrlEquals</source>
          <target state="translated">Symfony::seeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="d77d75d2fa51e1f0d10bfbaf40962d8fc900b983" translate="yes" xml:space="preserve">
          <source>Symfony::seeCurrentUrlMatches</source>
          <target state="translated">Symfony::seeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="99bc41c841fd9ff64ba7fc38c1fd392659edc891" translate="yes" xml:space="preserve">
          <source>Symfony::seeElement</source>
          <target state="translated">Symfony::seeElement</target>
        </trans-unit>
        <trans-unit id="754de82979b3606ade7c1fdaa266af03898145dc" translate="yes" xml:space="preserve">
          <source>Symfony::seeEmailIsSent</source>
          <target state="translated">Symfony::seeEmailIsSent</target>
        </trans-unit>
        <trans-unit id="991217b63a2cbcd98bc30a1395b9e266725f2d36" translate="yes" xml:space="preserve">
          <source>Symfony::seeInCurrentRoute</source>
          <target state="translated">Symfony::seeInCurrentRoute</target>
        </trans-unit>
        <trans-unit id="5ba4fe8d8abe8e857caf0abed3efe21a1c5b00c6" translate="yes" xml:space="preserve">
          <source>Symfony::seeInCurrentUrl</source>
          <target state="translated">Symfony::seeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="0081eb44ca122d2dbbc860d0e8092545fad10fa0" translate="yes" xml:space="preserve">
          <source>Symfony::seeInField</source>
          <target state="translated">Symfony::seeInField</target>
        </trans-unit>
        <trans-unit id="50b94a2a298a8294741c797431d0e50211b7ed8b" translate="yes" xml:space="preserve">
          <source>Symfony::seeInFormFields</source>
          <target state="translated">Symfony::seeInFormFields</target>
        </trans-unit>
        <trans-unit id="96297d7ac206fa18e6780936fa9bd9034d996654" translate="yes" xml:space="preserve">
          <source>Symfony::seeInSource</source>
          <target state="translated">Symfony::seeInSource</target>
        </trans-unit>
        <trans-unit id="90574edd84ccf8e66c71bad0b4f398dc3fc1e8dd" translate="yes" xml:space="preserve">
          <source>Symfony::seeInTitle</source>
          <target state="translated">Symfony::seeInTitle</target>
        </trans-unit>
        <trans-unit id="4c6089bc6fef20ba7bbf36f96fb96b9b0bc661c9" translate="yes" xml:space="preserve">
          <source>Symfony::seeLink</source>
          <target state="translated">Symfony::seeLink</target>
        </trans-unit>
        <trans-unit id="f83dc33d5d9b2e11049aed7fbfb7044a3cb87726" translate="yes" xml:space="preserve">
          <source>Symfony::seeNumberOfElements</source>
          <target state="translated">Symfony::seeNumberOfElements</target>
        </trans-unit>
        <trans-unit id="4aaecb46863f0a6a00ba1460a69b95fbe0a739f0" translate="yes" xml:space="preserve">
          <source>Symfony::seeOptionIsSelected</source>
          <target state="translated">Symfony::seeOptionIsSelected</target>
        </trans-unit>
        <trans-unit id="0df79e1f3fbed5002d9019989325336a47a4e406" translate="yes" xml:space="preserve">
          <source>Symfony::seePageNotFound</source>
          <target state="translated">Symfony::seePageNotFound</target>
        </trans-unit>
        <trans-unit id="e3eabb75fafc75ea34b1dba77824d1d97fdb65d9" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIs</source>
          <target state="translated">Symfony::seeResponseCodeIs</target>
        </trans-unit>
        <trans-unit id="c2dfb0ebb8e2a9a18ad5a36e49aa23a05f2fe256" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsBetween</source>
          <target state="translated">Symfony::seeResponseCodeIsBetween</target>
        </trans-unit>
        <trans-unit id="a01c8bd200657ed4c7704ffdf023e8b196f28a9b" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsClientError</source>
          <target state="translated">Symfony::seeResponseCodeIsClientError</target>
        </trans-unit>
        <trans-unit id="c374fdc25d1281b11ad901a3f90bfac9763ada17" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsRedirection</source>
          <target state="translated">Symfony::seeResponseCodeIsRedirection</target>
        </trans-unit>
        <trans-unit id="cfd03bb69e640262a012f92d8eb1ccce91d9135a" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsServerError</source>
          <target state="translated">Symfony::seeResponseCodeIsServerError</target>
        </trans-unit>
        <trans-unit id="d469bb2afb9acc579da8d217f5789e8354d6ffd6" translate="yes" xml:space="preserve">
          <source>Symfony::seeResponseCodeIsSuccessful</source>
          <target state="translated">Symfony::seeResponseCodeIsSuccessful</target>
        </trans-unit>
        <trans-unit id="7bb84fa6e74bcbfc026d707ec16c36b001008296" translate="yes" xml:space="preserve">
          <source>Symfony::selectOption</source>
          <target state="translated">Symfony::selectOption</target>
        </trans-unit>
        <trans-unit id="096989d2c56f3e5096e7f923412f27b07ebbdba9" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxGetRequest</source>
          <target state="translated">Symfony::sendAjaxGetRequest</target>
        </trans-unit>
        <trans-unit id="7b1bc8c66c67435928977c7bfc81ee3f824bd1e8" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxPostRequest</source>
          <target state="translated">Symfony::sendAjaxPostRequest</target>
        </trans-unit>
        <trans-unit id="b60876a334e5b1742e5b7086e607e476e566de78" translate="yes" xml:space="preserve">
          <source>Symfony::sendAjaxRequest</source>
          <target state="translated">Symfony::sendAjaxRequest</target>
        </trans-unit>
        <trans-unit id="00ea752f31efcd687d613b09f0fc0d1fd735cf06" translate="yes" xml:space="preserve">
          <source>Symfony::setCookie</source>
          <target state="translated">Symfony::setCookie</target>
        </trans-unit>
        <trans-unit id="8c676dbddfa08013ecaa1c6ab8b5960410f36f1c" translate="yes" xml:space="preserve">
          <source>Symfony::submitForm</source>
          <target state="translated">Symfony::submitForm</target>
        </trans-unit>
        <trans-unit id="c07379236a73021b80a0dcd66a377b438598db60" translate="yes" xml:space="preserve">
          <source>Symfony::switchToIframe</source>
          <target state="translated">Symfony::switchToIframe</target>
        </trans-unit>
        <trans-unit id="b4a6a7150984941409bee6fb7d371a8da640d4c1" translate="yes" xml:space="preserve">
          <source>Symfony::uncheckOption</source>
          <target state="translated">Symfony::uncheckOption</target>
        </trans-unit>
        <trans-unit id="a89dc82ebddc0de32b4842408d2edd753c110cdf" translate="yes" xml:space="preserve">
          <source>Symfony::unpersistService</source>
          <target state="translated">Symfony::unpersistService</target>
        </trans-unit>
        <trans-unit id="8652f6cf8392638c00eff2da783b240d56a727ce" translate="yes" xml:space="preserve">
          <source>System requirements</source>
          <target state="translated">시스템 요구 사항</target>
        </trans-unit>
        <trans-unit id="4ad91a8e6898f7c0e6ca3483612717ed385045a5" translate="yes" xml:space="preserve">
          <source>Tab is opened by using &lt;code&gt;window.open&lt;/code&gt; javascript in a browser. Please note, that adblock can restrict creating such tabs.</source>
          <target state="translated">브라우저에서 &lt;code&gt;window.open&lt;/code&gt; javascript를 사용하여 탭이 열립니다 . 애드 블록은 이러한 탭 생성을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="cee951cc48adee200735cdf816b919e66cd9f69f" translate="yes" xml:space="preserve">
          <source>Tables is a recommended ways to pass arrays into test scenarios. Inside a step definition data is stored in argument passed as &lt;code&gt;\Behat\Gherkin\Node\TableNode&lt;/code&gt; instance.</source>
          <target state="translated">테이블은 배열을 테스트 시나리오에 전달하는 데 권장되는 방법입니다. 단계 정의 데이터 안에는 &lt;code&gt;\Behat\Gherkin\Node\TableNode&lt;/code&gt; 인스턴스 로 전달 된 인수에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="1efa71619d15a19a43b3d9877337ae315f174228" translate="yes" xml:space="preserve">
          <source>Tag should be placed before &lt;em&gt;Scenario:&lt;/em&gt; or before &lt;em&gt;Feature:&lt;/em&gt; keyword. In the last case all scenarios of that feature will be added to corresponding group.</source>
          <target state="translated">태그는 &lt;em&gt;시나리오 :&lt;/em&gt; 또는 &lt;em&gt;기능 :&lt;/em&gt; 키워드 앞에 배치해야합니다 . 마지막 경우 해당 기능의 모든 시나리오가 해당 그룹에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="d5b2f61461a42fb8dae779420be4afa2c24d86b7" translate="yes" xml:space="preserve">
          <source>Take a look at the complete reference for the module you are using. Most of its methods are common to all modules but some of them are unique.</source>
          <target state="translated">사용중인 모듈에 대한 완전한 참조를보십시오. 대부분의 방법은 모든 모듈에 공통적이지만 일부는 고유합니다.</target>
        </trans-unit>
        <trans-unit id="4b744c6e6d08455ba63f9116b0d60e6119603afb" translate="yes" xml:space="preserve">
          <source>Takes a screenshot of the current window and saves it to &lt;code&gt;tests/_output/debug&lt;/code&gt;.</source>
          <target state="translated">현재 창의 스크린 샷을 작성하여 &lt;code&gt;tests/_output/debug&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="21bf264104ccf1ee9a751dd6a1ec49488b05d014" translate="yes" xml:space="preserve">
          <source>Takes last message from queue.</source>
          <target state="translated">큐에서 마지막 메시지를받습니다.</target>
        </trans-unit>
        <trans-unit id="97e2c49d8ad7ce6be7c38c13a8d3088860040897" translate="yes" xml:space="preserve">
          <source>Taking Data From Responses</source>
          <target state="translated">응답에서 데이터 가져 오기</target>
        </trans-unit>
        <trans-unit id="2dff8fe74ec98d7eb09063b17888c6e507e27a38" translate="yes" xml:space="preserve">
          <source>Tasks from &lt;code&gt;\Codeception\Task\SplitTestsByGroups&lt;/code&gt; will generate non-intersecting group files. You can either split your tests by files or by single tests:</source>
          <target state="translated">에서 작업 &lt;code&gt;\Codeception\Task\SplitTestsByGroups&lt;/code&gt; 교차하지 않는 그룹 파일을 생성합니다. 테스트를 파일 또는 단일 테스트로 분할 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="451fbcaefbafe7d5187ef9326b56eb70d48e5075" translate="yes" xml:space="preserve">
          <source>TeamCity</source>
          <target state="translated">TeamCity</target>
        </trans-unit>
        <trans-unit id="40af9dda4a3fcad13508b0a246d0092c7d75cf3f" translate="yes" xml:space="preserve">
          <source>TeamCity is a hosted solution from JetBrains. The setup of it can be a bit tricky as TeamCity uses its own reporter format for parsing test results. PHPUnit since version 5.x has integrated support for this format, so does Codeception. What we need to do is to configure Codeception to use custom reporter. By default there is &lt;code&gt;--report&lt;/code&gt; option which provides an alternative output. You can change the reporter class in &lt;code&gt;codeception.yml&lt;/code&gt; configuration:</source>
          <target state="translated">TeamCity는 JetBrains의 호스팅 솔루션입니다. TeamCity는 자체 리포터 형식을 사용하여 테스트 결과를 분석하므로 설정이 약간 까다로울 수 있습니다. 버전 5.x 이후의 PHPUnit은이 형식에 대한 지원을 통합하여 Codeception도 지원합니다. 우리가해야 할 일은 커스텀 리포터를 사용하도록 Codeception을 구성하는 것입니다. 기본적으로 대체 출력을 제공하는 &lt;code&gt;--report&lt;/code&gt; 옵션이 있습니다. &lt;code&gt;codeception.yml&lt;/code&gt; 구성 에서 리포터 클래스를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88eb893fdf5343a75775cf81d7fe42d986b0043c" translate="yes" xml:space="preserve">
          <source>Template class should be placed in &lt;code&gt;Codeception\Template&lt;/code&gt; namespace so Codeception could locate them by class name</source>
          <target state="translated">템플릿 클래스는 &lt;code&gt;Codeception\Template&lt;/code&gt; 네임 스페이스에 있어야 Codeception이 클래스 이름으로 템플릿을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a756846f9f9a8e6a39a42f213cb2548ddd69ea75" translate="yes" xml:space="preserve">
          <source>Templates should be inherited from &lt;a href=&quot;reference/inittemplate&quot;&gt;&lt;code&gt;Codeception\InitTemplate&lt;/code&gt;&lt;/a&gt; class and implement &lt;code&gt;setup&lt;/code&gt; method.</source>
          <target state="translated">템플릿은 &lt;a href=&quot;reference/inittemplate&quot;&gt; &lt;code&gt;Codeception\InitTemplate&lt;/code&gt; &lt;/a&gt; 클래스 에서 상속되고 &lt;code&gt;setup&lt;/code&gt; 방법을 구현 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="8ca46ef63a3cf34638b522cfdf607fca7e78d4c0" translate="yes" xml:space="preserve">
          <source>Test Doubles</source>
          <target state="translated">테스트 복식</target>
        </trans-unit>
        <trans-unit id="d119d7754b071bba2ad701ae807bfa56d8b814e0" translate="yes" xml:space="preserve">
          <source>Test execution speed</source>
          <target state="translated">테스트 실행 속도</target>
        </trans-unit>
        <trans-unit id="93950f31b035ff3f4d9e8d4a3225bb9c0758a21a" translate="yes" xml:space="preserve">
          <source>Test paths</source>
          <target state="translated">테스트 경로</target>
        </trans-unit>
        <trans-unit id="130f654168b48cbd0ff45d5f280b69cda73cc472" translate="yes" xml:space="preserve">
          <source>Test, Fail</source>
          <target state="translated">테스트, 실패</target>
        </trans-unit>
        <trans-unit id="5e8d8d7e39b3bd93b30e481bec832940a763b23a" translate="yes" xml:space="preserve">
          <source>Testing Behavior</source>
          <target state="translated">테스트 행동</target>
        </trans-unit>
        <trans-unit id="a734405a434e29a3b02877164d21ac5c54274720" translate="yes" xml:space="preserve">
          <source>Testing Database</source>
          <target state="translated">테스트 데이터베이스</target>
        </trans-unit>
        <trans-unit id="ff45b77fe10e2dd711a9e43bb4234be53d5865d4" translate="yes" xml:space="preserve">
          <source>Testing Dynamic Data with Snapshots</source>
          <target state="translated">스냅 샷으로 동적 데이터 테스트</target>
        </trans-unit>
        <trans-unit id="e1d7e15db2216c186d41e4b13db2b435e9f138c6" translate="yes" xml:space="preserve">
          <source>Testing JSON Responses</source>
          <target state="translated">JSON 응답 테스트</target>
        </trans-unit>
        <trans-unit id="6ae35769401a134e41bbb7ad4ce533d4108ce2ec" translate="yes" xml:space="preserve">
          <source>Testing WebServices</source>
          <target state="translated">웹 서비스 테스트</target>
        </trans-unit>
        <trans-unit id="a5416feee882c0a2908950ba5af9d9dbc1877058" translate="yes" xml:space="preserve">
          <source>Testing XML Responses</source>
          <target state="translated">XML 응답 테스트</target>
        </trans-unit>
        <trans-unit id="35abc73469ec8d80139a800976754ffc4cad771e" translate="yes" xml:space="preserve">
          <source>Testing computer needs access to project&amp;rsquo;s PHP files</source>
          <target state="translated">테스트 컴퓨터는 프로젝트의 PHP 파일에 액세스해야합니다</target>
        </trans-unit>
        <trans-unit id="bc4273b3f2bc1be9624546df03b63a13c80eb0f2" translate="yes" xml:space="preserve">
          <source>Testing pieces of code before coupling them together is highly important as well. This way, you can be sure that some deeply hidden feature still works, even if it was not covered by functional or acceptance tests. This also shows care in producing stable and testable code.</source>
          <target state="translated">코드를 서로 연결하기 전에 테스트하는 것도 매우 중요합니다. 이렇게하면 기능 또는 승인 테스트에 포함되지 않은 일부 숨겨진 기능이 여전히 작동하는지 확인할 수 있습니다. 또한 안정적이고 테스트 가능한 코드 생성에주의를 기울입니다.</target>
        </trans-unit>
        <trans-unit id="cdda78e21defd9350a869ccc1e6fc06c5e69b4a8" translate="yes" xml:space="preserve">
          <source>Testing with a selection of remote/local queueing services, including Amazon&amp;rsquo;s SQS service Iron.io service and beanstalkd service.</source>
          <target state="translated">Amazon의 SQS 서비스 Iron.io 서비스 및 beantalkd 서비스를 포함한 다양한 원격 / 로컬 큐잉 서비스 테스트.</target>
        </trans-unit>
        <trans-unit id="3ada2358a0771d2fb106fe5467eb5dd50e9b17d5" translate="yes" xml:space="preserve">
          <source>TestingBot</source>
          <target state="translated">TestingBot</target>
        </trans-unit>
        <trans-unit id="990f816b4d99142b5e3785d909cb2712aa4b68f3" translate="yes" xml:space="preserve">
          <source>Tests can be started with the &lt;code&gt;run&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; 명령으로 테스트를 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="090def76668fd15c89e3d14b13f9a1efcdc7935c" translate="yes" xml:space="preserve">
          <source>Tests should not affect each other. That&amp;rsquo;s a rule of thumb. When tests interact with a database, they may change the data inside it, which would eventually lead to data inconsistency. A test may try to insert a record that has already been inserted, or retrieve a deleted record. To avoid test failures, the database should be brought back to its initial state before each test. Codeception has different methods and approaches to get your data cleaned.</source>
          <target state="translated">테스트는 서로 영향을 미치지 않아야합니다. 그것은 경험 법칙입니다. 테스트가 데이터베이스와 상호 작용할 때 데이터베이스 내부의 데이터가 변경되어 결국 데이터 불일치가 발생할 수 있습니다. 테스트는 이미 삽입 된 레코드를 삽입하거나 삭제 된 레코드를 검색하려고 시도 할 수 있습니다. 테스트 실패를 피하려면 각 테스트 전에 데이터베이스를 초기 상태로 되돌려 야합니다. Codeception에는 데이터를 정리하는 다양한 방법과 접근 방식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5eb29aef6674e7a9336098909cb7847b0a0059d" translate="yes" xml:space="preserve">
          <source>Tests vs Features</source>
          <target state="translated">테스트 대 기능</target>
        </trans-unit>
        <trans-unit id="dd6ffc46d87c458cfbfffd6ce1a69784193070c1" translate="yes" xml:space="preserve">
          <source>Tests will be randomly reordered on each run. When tests executed in shuffle mode a seed value will be printed. Copy this seed value from output to be able to rerun tests in the same order.</source>
          <target state="translated">테스트는 각 실행마다 무작위로 재정렬됩니다. 셔플 모드에서 테스트를 실행하면 시드 값이 인쇄됩니다. 테스트에서 동일한 순서로 테스트를 다시 실행할 수 있도록이 시드 값을 출력에서 ​​복사하십시오.</target>
        </trans-unit>
        <trans-unit id="30b6fda3137a3460993392b5a9a737ff4fbd4b84" translate="yes" xml:space="preserve">
          <source>Text values inside a scenarios can be set inside a &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; block:</source>
          <target state="translated">시나리오 내의 텍스트 값은 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 블록 내에서 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5913f2111b151fc90ac5d83371dc2d8a80819096" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s a pretty simple yet powerful class to build XML structures in jQuery-like style. With no XML line actually written! Uses DOM extension to manipulate XML data.</source>
          <target state="translated">jQuery와 유사한 스타일로 XML 구조를 빌드하는 매우 간단하지만 강력한 클래스입니다. 실제로 작성된 XML 행이 없습니다! DOM 확장을 사용하여 XML 데이터를 조작합니다.</target>
        </trans-unit>
        <trans-unit id="a2f6d0b0434bdbe20fcedcf90c5a7a9d9e5e8cbb" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s ok for now. But what files should be present in final coverage report? Pass an array of files or directory to include/exclude sections. The path ending with &amp;lsquo;*&amp;rsquo; matches the directory. Also you can use &amp;lsquo;*&amp;rsquo; mask in a file name, i.e. &lt;code&gt;app/models/*Model.php&lt;/code&gt; to match all models.</source>
          <target state="translated">지금은 괜찮습니다. 그러나 최종 적용 범위 보고서에 어떤 파일이 있어야합니까? 포함 / 제외 섹션에 파일 또는 디렉토리 배열을 전달하십시오. '*'로 끝나는 경로는 디렉토리와 일치합니다. 또한 파일 이름에 '*'마스크 (예 : &lt;code&gt;app/models/*Model.php&lt;/code&gt; ) 를 사용하여 모든 모델과 일치 시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0116a67c55276460a7a6390c0bc9c6578426e9e" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why it&amp;rsquo;s pretty important not just to cover your application with unit tests, but make unit tests self-explanatory. We do this for scenario-driven acceptance and functional tests, and we should do this for unit and integration tests as well.</source>
          <target state="translated">따라서 응용 프로그램을 단위 테스트로 다루는 것뿐만 아니라 단위 테스트를 자명하게 만드는 것이 매우 중요한 이유입니다. 시나리오 중심의 승인 및 기능 테스트를 위해이 작업을 수행하고 단위 및 통합 테스트에서도이 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d02c17b23cfcb64797eb91636dc0cd0131d8a62f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;modules/laravel5&quot;&gt;Laravel5&lt;/a&gt; module is included and requires no configuration:</source>
          <target state="translated">&lt;a href=&quot;modules/laravel5&quot;&gt;Laravel5의&lt;/a&gt; 모듈을 포함하고 구성이 필요 없습니다 :</target>
        </trans-unit>
        <trans-unit id="2d03cea65b987f495690d17cc1a6ac552d8236e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$I&lt;/code&gt; object is used to write all interactions. The methods of the &lt;code&gt;$I&lt;/code&gt; object are taken from the &lt;a href=&quot;modules/phpbrowser&quot;&gt;PhpBrowser Module&lt;/a&gt;. We will briefly describe them here:</source>
          <target state="translated">&lt;code&gt;$I&lt;/code&gt; 객체는 모든 상호 작용을 작성하는 데 사용됩니다. &lt;code&gt;$I&lt;/code&gt; 객체 의 메소드 는 &lt;a href=&quot;modules/phpbrowser&quot;&gt;PhpBrowser Module&lt;/a&gt; 에서 가져옵니다 . 여기서 간단히 설명하겠습니다.</target>
        </trans-unit>
        <trans-unit id="80fad0e1c2444075fe8788924f6a343c4313b3b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$button&lt;/code&gt; parameter can be either a string, an array or an instance of Facebook\WebDriver\WebDriverBy. When it is a string, the button will be found by its &amp;ldquo;name&amp;rdquo; attribute. If $button is an array then it will be treated as a strict selector and a WebDriverBy will be used verbatim.</source>
          <target state="translated">&lt;code&gt;$button&lt;/code&gt; 매개 변수는 문자열, 배열이나 페이스 북 \ WebDriver \ WebDriverBy의 인스턴스가 될 수 있습니다. 문자열 인 경우 &quot;name&quot;속성으로 단추를 찾을 수 있습니다. $ button이 배열이면 엄격한 선택 자로 취급되며 WebDriverBy가 그대로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ca019882edfe805759f8fe378b0a106de12c3a13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Phalcon4&lt;/code&gt; module requires creating a bootstrap file which returns an instance of &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt;. To start writing functional tests with Phalcon support you should enable the &lt;code&gt;Phalcon4&lt;/code&gt; module and provide the path to this bootstrap file:</source>
          <target state="translated">&lt;code&gt;Phalcon4&lt;/code&gt; 의 모듈의 인스턴스를 반환하는 부트 스트랩 파일을 만들 필요 &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt; . Phalcon 지원으로 기능 테스트 작성을 시작하려면 &lt;code&gt;Phalcon4&lt;/code&gt; 모듈을 활성화 하고이 부트 스트랩 파일의 경로를 제공 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d101be0a31514ba9d0139abf89ed1f532f6264a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Phalcon&lt;/code&gt; module requires creating a bootstrap file which returns an instance of &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt;. To start writing functional tests with Phalcon support you should enable the &lt;code&gt;Phalcon&lt;/code&gt; module and provide the path to this bootstrap file:</source>
          <target state="translated">&lt;code&gt;Phalcon&lt;/code&gt; 의 모듈의 인스턴스를 반환하는 부트 스트랩 파일을 만들 필요 &lt;code&gt;\Phalcon\Mvc\Application&lt;/code&gt; . Phalcon 지원으로 기능 테스트 작성을 시작하려면 &lt;code&gt;Phalcon&lt;/code&gt; 모듈을 활성화 하고이 부트 스트랩 파일의 경로를 제공 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f9c82bd681bf2ba14cac13c287a15caacf6eda76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump.sql&lt;/code&gt; may contain multiline statements.</source>
          <target state="translated">&lt;code&gt;dump.sql&lt;/code&gt; 은 여러 문을 포함 할 수있다.</target>
        </trans-unit>
        <trans-unit id="0da3040d459bb304f41b18489d440f5678e7a412" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loginAsAdmin&lt;/code&gt; method may be implemented like this:</source>
          <target state="translated">&lt;code&gt;loginAsAdmin&lt;/code&gt; 의 방법은 다음과 같이 구현 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="dcaf1a47dfdd0480040453f9dbd4957a8f2db944" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;submitForm&lt;/code&gt; is not emulating a user&amp;rsquo;s actions, but it&amp;rsquo;s quite useful in situations when the form is not formatted properly, for example, to discover that labels aren&amp;rsquo;t set or that fields have unclean names or badly written IDs, or the form is sent by a JavaScript call.</source>
          <target state="translated">&lt;code&gt;submitForm&lt;/code&gt; 사용자의 행동을 모방하는 것이 아니라, 양식 레이블이 설정되지 않은 것을 발견하기 위해, 예를 들어, 올바르게 포맷되지 않은 경우는 상황에서 매우 유용 또는 필드 부정 이름 또는 잘못 기록 된 ID를, 또는 양식을 전송 JavaScript 호출로.</target>
        </trans-unit>
        <trans-unit id="469d52838ef14c3e85c078ea1e9836394855313c" translate="yes" xml:space="preserve">
          <source>The AcceptanceTester class has its methods defined in modules. Let&amp;rsquo;s see what&amp;rsquo;s inside the &lt;code&gt;AcceptanceTester&lt;/code&gt; class, which is located inside the &lt;code&gt;tests/_support&lt;/code&gt; directory:</source>
          <target state="translated">AcceptanceTester 클래스에는 모듈에 정의 된 메소드가 있습니다. &lt;code&gt;tests/_support&lt;/code&gt; 디렉토리 안에있는 &lt;code&gt;AcceptanceTester&lt;/code&gt; 클래스 안에 무엇이 있는지 봅시다 :</target>
        </trans-unit>
        <trans-unit id="14076581f15781dc3f5752ce914253f05f18a096" translate="yes" xml:space="preserve">
          <source>The Codeception Syntax</source>
          <target state="translated">인식 구문</target>
        </trans-unit>
        <trans-unit id="4c9cf372efed695dfa1ac77431128854cc62b872" translate="yes" xml:space="preserve">
          <source>The Codeception framework was developed to actually make testing fun. It allows writing unit, functional, integration, and acceptance tests in a single, coherent style.</source>
          <target state="translated">Codeception 프레임 워크는 실제로 테스트를 재미있게 만들기 위해 개발되었습니다. 하나의 일관된 스타일로 단위, 기능, 통합 및 승인 테스트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f1db379ca4e5ab377b8e0b68da65d0a7266f99c" translate="yes" xml:space="preserve">
          <source>The Db module provides actions to create and verify data inside a database.</source>
          <target state="translated">DB 모듈은 데이터베이스 내에서 데이터를 작성하고 확인하기위한 조치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5ae9a3d0c63f31cec582eace764c0fdd830fbfc9" translate="yes" xml:space="preserve">
          <source>The FunctionalTester class has its methods defined in modules. Actually, it doesn&amp;rsquo;t contain any of them, but rather acts as a proxy. It knows which module executes this action and passes parameters into it. To make your IDE see all of the FunctionalTester methods, you should run the &lt;code&gt;codecept build&lt;/code&gt; command. It generates method signatures from enabled modules and saves them into a trait which is included in an actor. In the current example, the &lt;code&gt;tests/support/_generated/FunctionalTesterActions.php&lt;/code&gt; file will be generated. By default, Codeception automatically rebuilds the Actions trait on each change of the suite configuration.</source>
          <target state="translated">FunctionalTester 클래스에는 모듈에 정의 된 메소드가 있습니다. 실제로, 그것은 그것들을 포함하지 않고 오히려 프록시 역할을합니다. 어떤 모듈이이 동작을 수행하는지 알고 매개 변수를 전달합니다. IDE가 모든 FunctionalTester 메소드를 볼 수있게하려면 &lt;code&gt;codecept build&lt;/code&gt; 명령을 실행해야합니다 . 활성화 된 모듈에서 메소드 서명을 생성하여 액터에 포함 된 특성에 저장합니다. 현재 예제에서 &lt;code&gt;tests/support/_generated/FunctionalTesterActions.php&lt;/code&gt; 파일이 생성됩니다. 기본적으로 Codeception은 제품군 구성이 변경 될 때마다 동작 특성을 자동으로 다시 작성합니다.</target>
        </trans-unit>
        <trans-unit id="74b4bc8b2231ed4cd79853566bcfb0c8d17a18b7" translate="yes" xml:space="preserve">
          <source>The REST module has parts for &lt;code&gt;Xml&lt;/code&gt; and &lt;code&gt;Json&lt;/code&gt; in the same way. If you are testing a REST service with only JSON responses, you can enable just the JSON part of this module:</source>
          <target state="translated">REST 모듈에는 동일한 방식으로 &lt;code&gt;Xml&lt;/code&gt; 및 &lt;code&gt;Json&lt;/code&gt; 용 파트가 있습니다 . JSON 응답만으로 REST 서비스를 테스트하는 경우이 모듈의 JSON 부분 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89b43090a03addcfa3a2f0c9edeedd173474354d" translate="yes" xml:space="preserve">
          <source>The REST module will connect to &lt;code&gt;PhpBrowser&lt;/code&gt; according to this configuration. Depending on the web service we may deal with XML or JSON responses. Codeception handles both data formats well, however If you don&amp;rsquo;t need one of them, you can explicitly specify that the JSON or XML parts of the module will be used:</source>
          <target state="translated">이 구성에 따라 REST 모듈이 &lt;code&gt;PhpBrowser&lt;/code&gt; 에 연결됩니다 . 웹 서비스에 따라 XML 또는 JSON 응답을 처리 할 수 ​​있습니다. Codeception은 두 데이터 형식을 모두 잘 처리하지만 그 중 하나가 필요하지 않은 경우 모듈의 JSON 또는 XML 부분을 사용하도록 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf2306978465f7282232abd014cc2130ff0c19d6" translate="yes" xml:space="preserve">
          <source>The REST web service is accessed via HTTP with standard methods: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;. They allow users to receive and manipulate entities from the service. Accessing a WebService requires an HTTP client, so for using it you need the module &lt;code&gt;PhpBrowser&lt;/code&gt; or one of framework modules set up. For example, we can use the &lt;code&gt;Symfony&lt;/code&gt; module for Symfony2 applications in order to ignore web server and test web service internally.</source>
          <target state="translated">REST 웹 서비스는 표준 메소드 &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; 와 함께 HTTP를 통해 액세스 합니다. 이를 통해 사용자는 서비스에서 엔티티를 받고 조작 할 수 있습니다. WebService에 액세스하려면 HTTP 클라이언트가 필요하므로이를 사용하려면 &lt;code&gt;PhpBrowser&lt;/code&gt; 모듈 또는 프레임 워크 모듈 중 하나가 설정되어 있어야합니다 . 예를 들어, 웹 서버를 무시하고 웹 서비스를 내부적으로 테스트하기 위해 Symfony2 응용 프로그램에 &lt;code&gt;Symfony&lt;/code&gt; 모듈을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9dd546d857d4f80626f18c81b65aed931bad9a2c" translate="yes" xml:space="preserve">
          <source>The application bootstrap file must return Application object but not call its handle() method.</source>
          <target state="translated">응용 프로그램 부트 스트랩 파일은 Application 객체를 반환해야하지만 handle () 메서드를 호출하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="cdbb71f85933e9d57e8686b8ea476480331f6f61" translate="yes" xml:space="preserve">
          <source>The assertion performed by &lt;code&gt;assertData&lt;/code&gt; will not display the typical diff output from &lt;code&gt;assertEquals&lt;/code&gt; or any customized failed assertion. To have the diff displayed when running tests, you can call the snapshot method &lt;code&gt;shouldShowDiffOnFail&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;assertData&lt;/code&gt; 에 의해 수행 된 어설 션 은 &lt;code&gt;assertEquals&lt;/code&gt; 또는 사용자 지정 실패한 어설 션 의 일반적인 diff 출력을 표시하지 않습니다 . 테스트를 실행할 때 diff를 표시하려면 &lt;code&gt;shouldShowDiffOnFail&lt;/code&gt; 스냅 샷 메서드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61bfbb37959ea3f416a5baef476bcf0039456795" translate="yes" xml:space="preserve">
          <source>The basic codecoverage can be collected for functional and unit tests. If you performed configuration steps from above, you are ready to go. All you need is to execute codeception with &lt;code&gt;--coverage&lt;/code&gt; option.</source>
          <target state="translated">기능 및 단위 테스트를 위해 기본 코드 커버리지를 수집 할 수 있습니다. 위에서 구성 단계를 수행 한 경우 준비가 된 것입니다. &lt;code&gt;--coverage&lt;/code&gt; 옵션 으로 코드 인식 을 실행하기 만하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="28ece1b1e7a3c720b16e7064930ec959c102b1dc" translate="yes" xml:space="preserve">
          <source>The concept of groups was taken from PHPUnit and behave in the same way.</source>
          <target state="translated">그룹의 개념은 PHPUnit에서 가져 왔으며 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6c3ead64e40e15abc87b5e2e1014525786e7ebe0" translate="yes" xml:space="preserve">
          <source>The configuration is merged in the order given. This way you can easily create multiple combinations of your environment configurations.</source>
          <target state="translated">주어진 순서대로 구성이 병합됩니다. 이렇게하면 여러 환경 구성 조합을 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8e6b0f108606f2b4f390d62ef87b1c8488b825c" translate="yes" xml:space="preserve">
          <source>The configuration settings depending on which queueing service is being used, all the options are listed here. Refer to the configuration examples below to identify the configuration options required for your chosen service.</source>
          <target state="translated">사용중인 큐 서비스에 따라 구성 설정이 여기에 모든 옵션이 나열됩니다. 선택한 서비스에 필요한 구성 옵션을 식별하려면 아래 구성 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="160b63f91d59bbb525034e6032da9ec174391c22" translate="yes" xml:space="preserve">
          <source>The delimiter, a semi-colon in this case, must be on the same line as the last statement:</source>
          <target state="translated">이 경우 세미콜론 인 분리 문자는 마지막 명령문과 같은 행에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3b7857336896929be3221056cffefc086a5a5a2d" translate="yes" xml:space="preserve">
          <source>The dependency injection container can construct any object that requires any known class type. For instance, &lt;code&gt;Page\Login&lt;/code&gt; required &lt;code&gt;AcceptanceTester&lt;/code&gt;, and so it was injected into &lt;code&gt;Page\Login&lt;/code&gt; constructor, and PageObject was created and passed into method arguments. You should explicitly specify the types of required objects for Codeception to know what objects should be created for a test. Dependency Injection will be described in the next chapter.</source>
          <target state="translated">종속성 주입 컨테이너는 알려진 클래스 유형이 필요한 모든 오브젝트를 구성 할 수 있습니다. 예를 들어 &lt;code&gt;Page\Login&lt;/code&gt; 에는 &lt;code&gt;AcceptanceTester&lt;/code&gt; 가 필요 했기 때문에 &lt;code&gt;Page\Login&lt;/code&gt; 생성자 에 주입되었으며 PageObject가 만들어지고 메서드 인수에 전달되었습니다. 테스트를 위해 어떤 오브젝트를 작성해야하는지 Codeception에 필요한 오브젝트 유형을 명시 적으로 지정해야합니다. 의존성 주입은 다음 장에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="20d7af16b862e9c4caadf9ec15d402071748e6d2" translate="yes" xml:space="preserve">
          <source>The desired environments can be specified with the &lt;code&gt;@env&lt;/code&gt; annotation for tests in Test and Cest formats:</source>
          <target state="translated">테스트 및 Cest 형식의 테스트를 위해 &lt;code&gt;@env&lt;/code&gt; 주석 으로 원하는 환경을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="67694283c04aa5e36ce58ff5430e83cd0ed7374a" translate="yes" xml:space="preserve">
          <source>The environment configuration files are merged into the main configuration before the suite configuration is merged.</source>
          <target state="translated">스위트 구성이 병합되기 전에 환경 구성 파일이 기본 구성으로 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="b9e1b1d5c065546796217490286ec090ba49c7b8" translate="yes" xml:space="preserve">
          <source>The execution of the test is stopped at this point, and a console is shown where you can try all available commands &amp;ldquo;live&amp;rdquo;. This can be very useful when you write functional, acceptance, or api test.</source>
          <target state="translated">이 시점에서 테스트 실행이 중지되고 사용 가능한 모든 명령을 &quot;실시간&quot;으로 시도 할 수있는 콘솔이 표시됩니다. 기능, 수락 또는 API 테스트를 작성할 때 매우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="349ce04c3614e552c27f7544285d993113dfb1e2" translate="yes" xml:space="preserve">
          <source>The extension class itself is inherited from &lt;code&gt;Codeception\Extension&lt;/code&gt;:</source>
          <target state="translated">확장 클래스 자체는 &lt;code&gt;Codeception\Extension&lt;/code&gt; 에서 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b6d76725b4fbb3cc04c6829b018f0d3517c48f6" translate="yes" xml:space="preserve">
          <source>The following configurations are required for this module:</source>
          <target state="translated">이 모듈에는 다음 구성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9ec3be11fb36d1d27ff1f7e9106db4862cc1eb1e" translate="yes" xml:space="preserve">
          <source>The following dependencies are needed for the listed queue servers:</source>
          <target state="translated">나열된 큐 서버에는 다음과 같은 종속성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6e2bd750df8312438935592586a88e5ee697498c" translate="yes" xml:space="preserve">
          <source>The generated file will look like this:</source>
          <target state="translated">생성 된 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3535805f6cce054bd2b79c81720a6c301fc92062" translate="yes" xml:space="preserve">
          <source>The host and port parameter can be redefined in the suite configuration. Values are set in the &lt;code&gt;modules:config&lt;/code&gt; section of the configuration file.</source>
          <target state="translated">호스트 구성 및 포트 매개 변수는 제품군 구성에서 재정의 할 수 있습니다. 구성 파일 의 &lt;code&gt;modules:config&lt;/code&gt; 섹션에 값이 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eddec099cd7a02f9d769f7e737e83c903f6dfa4" translate="yes" xml:space="preserve">
          <source>The idea behind testing is not new. You can&amp;rsquo;t sleep well if you are not confident that your last commit didn&amp;rsquo;t take down the whole application. Having your application covered with tests gives you more trust in the stability of your application. That&amp;rsquo;s all.</source>
          <target state="translated">테스트의 기본 개념은 새로운 것이 아닙니다. 마지막 커밋이 전체 응용 프로그램을 중단하지 않았다고 확신하지 않으면 잘 수 없습니다. 응용 프로그램에 테스트를 적용하면 응용 프로그램의 안정성을 더 신뢰할 수 있습니다. 그게 다야.</target>
        </trans-unit>
        <trans-unit id="996c7574ad48e1d2447f138442e5ace9e50b4d9d" translate="yes" xml:space="preserve">
          <source>The idea of story BDD can be narrowed to:</source>
          <target state="translated">스토리 BDD의 아이디어는 다음과 같이 좁힐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="337078e5cc63fe2f12544058bef34792704bd227" translate="yes" xml:space="preserve">
          <source>The last line of the previous example verified that the response contained the provided string. However we shouldn&amp;rsquo;t rely on it, as depending on content formatting we can receive different results with the same data. What we actually need is to check that the response can be parsed and it contains some of the values we expect. In the case of JSON we can use the &lt;code&gt;seeResponseContainsJson&lt;/code&gt; method</source>
          <target state="translated">이전 예제의 마지막 행은 응답에 제공된 문자열이 포함되어 있는지 확인했습니다. 그러나 콘텐츠 형식에 따라 동일한 데이터로 다른 결과를 얻을 수 있으므로 의존해서는 안됩니다. 실제로 필요한 것은 응답을 구문 분석 할 수 있고 예상 한 값이 포함되어 있는지 확인하는 것입니다. JSON의 경우 &lt;code&gt;seeResponseContainsJson&lt;/code&gt; 메소드를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7a41dd1561e9731ea595e4775e0f7365cdaaef3b" translate="yes" xml:space="preserve">
          <source>The module uses the Symfony Profiler to provide additional information and assertions.</source>
          <target state="translated">이 모듈은 Symfony Profiler를 사용하여 추가 정보 및 어설 션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e995d5099f03622d17485bee26f6b115a7076b60" translate="yes" xml:space="preserve">
          <source>The modules won&amp;rsquo;t conflict as actions with the same names won&amp;rsquo;t be loaded.</source>
          <target state="translated">동일한 이름의 작업이로드되지 않으므로 모듈이 충돌하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59fb33a6dc474303894360f2893c8891610f127b" translate="yes" xml:space="preserve">
          <source>The more complicated your domain is the more explicit your tests should be. With &lt;a href=&quot;https://github.com/Codeception/DomainAssert&quot;&gt;DomainAssert&lt;/a&gt; library you can easily create custom assertion methods for unit and integration tests.</source>
          <target state="translated">도메인이 복잡할수록 테스트가 더 명확 해집니다. &lt;a href=&quot;https://github.com/Codeception/DomainAssert&quot;&gt;DomainAssert&lt;/a&gt; 라이브러리를 사용하면 단위 및 통합 테스트를위한 사용자 지정 어설 ​​션 방법을 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4d6a20f1b3bf05dc10c7cd3892623bfb0b3874e" translate="yes" xml:space="preserve">
          <source>The most important function of this module is cleaning database before each test. To have your database properly cleaned you should configure it to access the database.</source>
          <target state="translated">이 모듈의 가장 중요한 기능은 각 테스트 전에 데이터베이스를 정리하는 것입니다. 데이터베이스를 올바르게 정리하려면 데이터베이스에 액세스하도록 데이터베이스를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="588bfb6f28aae5a6ad7de748a5a7ac537f36b691" translate="yes" xml:space="preserve">
          <source>The most important function of this module is to clean a database before each test. This module also provides actions to perform checks in a database, e.g. &lt;a href=&quot;db#seeInDatabase&quot;&gt;seeInDatabase()&lt;/a&gt;</source>
          <target state="translated">이 모듈의 가장 중요한 기능은 각 테스트 전에 데이터베이스를 정리하는 것입니다. 이 모듈은 또한 데이터베이스에서 점검을 수행하는 조치를 제공합니다 &lt;a href=&quot;db#seeInDatabase&quot;&gt;(&lt;/a&gt; 예 : seeInDatabase ()).</target>
        </trans-unit>
        <trans-unit id="6504e6309073c0a2daf28c3c3b0a0924455bba6e" translate="yes" xml:space="preserve">
          <source>The most important part is the &lt;code&gt;_generated\AcceptanceTesterActions&lt;/code&gt; trait, which is used as a proxy for enabled modules. It knows which module executes which action and passes parameters into it. This trait was created by running &lt;code&gt;codecept build&lt;/code&gt; and is regenerated each time module or configuration changes.</source>
          <target state="translated">가장 중요한 부분은 활성화 된 모듈의 프록시로 사용되는 &lt;code&gt;_generated\AcceptanceTesterActions&lt;/code&gt; 특성입니다. 어떤 모듈이 어떤 동작을 수행하는지 알고 매개 변수를 전달합니다. 이 특성은 &lt;code&gt;codecept build&lt;/code&gt; 를 실행하여 작성되었으며 모듈 또는 구성이 변경 될 때마다 재생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6ab0e59b176f02323ad4cfcb488b984e85ec23fa" translate="yes" xml:space="preserve">
          <source>The most useful method for this is &lt;code&gt;see()&lt;/code&gt;:</source>
          <target state="translated">가장 유용한 방법은 &lt;code&gt;see()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="858923fa5cf5369ecb2afbc8db5c69cf656baa75" translate="yes" xml:space="preserve">
          <source>The names of these files are used as environments names (e.g. &lt;code&gt;chrome.yml&lt;/code&gt; or &lt;code&gt;chrome.dist.yml&lt;/code&gt; for an environment named &lt;code&gt;chrome&lt;/code&gt;). You can generate a new file with this environment configuration by using the &lt;code&gt;generate:environment&lt;/code&gt; command:</source>
          <target state="translated">이 파일의 이름은 환경 이름으로 사용됩니다 (예 : &lt;code&gt;chrome&lt;/code&gt; 이라는 환경의 경우 &lt;code&gt;chrome.yml&lt;/code&gt; 또는 &lt;code&gt;chrome.dist.yml&lt;/code&gt; ). &lt;code&gt;generate:environment&lt;/code&gt; 명령 을 사용하여이 환경 구성으로 새 파일을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aec06f3ad2dbbb0477616434418fa5e8505f3c91" translate="yes" xml:space="preserve">
          <source>The next time you start the suite without setting one of these values, an exception will be thrown.</source>
          <target state="translated">다음에이 값 중 하나를 설정하지 않고 제품군을 시작하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="51ca1d160b9927685689edb66db004fde440b993" translate="yes" xml:space="preserve">
          <source>The passed in configuration is accessible via the &lt;code&gt;config&lt;/code&gt; property: &lt;code&gt;$this-&amp;gt;config['param']&lt;/code&gt;.</source>
          <target state="translated">전달 된 구성은 &lt;code&gt;config&lt;/code&gt; 속성 &lt;code&gt;$this-&amp;gt;config['param']&lt;/code&gt; 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="20f4d8b4411eea8a68703b845b5d27c59c927e98" translate="yes" xml:space="preserve">
          <source>The real action in a test happens only when a request is sent. Before a request you may provide additional http headers which will be used in a next request to set authorization or expected content format.</source>
          <target state="translated">테스트의 실제 작업은 요청이 전송 될 때만 발생합니다. 요청 전에 다음 요청에서 승인 또는 예상 콘텐츠 형식을 설정하는 데 사용할 추가 http 헤더를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ef1e561f5c8a3b3e01dae3070397cef53891509" translate="yes" xml:space="preserve">
          <source>The recommended approach is to configure a &lt;code&gt;populator&lt;/code&gt;, an external command to load a dump. Command parameters like host, username, password, database can be obtained from the config and inserted into placeholders:</source>
          <target state="translated">권장되는 방법은 덤프를로드하기위한 외부 명령 인 &lt;code&gt;populator&lt;/code&gt; 를 구성하는 것 입니다. 호스트, 사용자 이름, 비밀번호, 데이터베이스와 같은 명령 매개 변수는 구성에서 가져 와서 자리 표시 자에 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba91d76613788bb5d0a0f55e3a15949fbe38f03d" translate="yes" xml:space="preserve">
          <source>The required information is provided by &lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;SebastianBergmann\CodeCoverage&lt;/a&gt;, and you can use any of the supported drivers.</source>
          <target state="translated">필수 정보는 &lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;SebastianBergmann \ CodeCoverage에&lt;/a&gt; 의해 제공되며 지원되는 드라이버를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c64b2f1acd18a0d2ff15ad16ed710f72b78b619" translate="yes" xml:space="preserve">
          <source>The same can be done for all public properties of an enabled module. Accessible properties are listed in the module reference.</source>
          <target state="translated">활성화 된 모듈의 모든 공용 속성에 대해서도 동일한 작업을 수행 할 수 있습니다. 액세스 가능한 속성은 모듈 참조에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2dcffd4e8eeefa8336c1129d2b375c8301a5062" translate="yes" xml:space="preserve">
          <source>The same way as above, a StepObject can be instantiated automatically by the Dependency Injection Container when used inside the Cest format:</source>
          <target state="translated">위와 같은 방법으로 Cest 형식으로 사용될 때 Dependency Injection Container에서 StepObject를 자동으로 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ace9b99ff6d91220727c102feda43458324989dd" translate="yes" xml:space="preserve">
          <source>The same way we tested a web site, Codeception allows you to test web services. They are very hard to test manually, so it&amp;rsquo;s a really good idea to automate web service testing. We have SOAP and REST as standards, which are represented in corresponding modules, which we will cover in this chapter.</source>
          <target state="translated">웹 사이트를 테스트 한 것과 동일한 방식으로 Codeception을 사용하면 웹 서비스를 테스트 할 수 있습니다. 수동 테스트는 매우 어렵 기 때문에 웹 서비스 테스트를 자동화하는 것이 좋습니다. 우리는 SOAP과 REST를 표준으로 가지고 있으며,이 장에서는 해당 모듈로 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="e729532af7b21d8eee9bea27a747688cb0032343" translate="yes" xml:space="preserve">
          <source>The same way you can receive request parameters and headers.</source>
          <target state="translated">요청 매개 변수 및 헤더를 수신 할 수있는 것과 동일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a33d02ff1f25b4b25ac847f2e6b6b840547327df" translate="yes" xml:space="preserve">
          <source>The second parameter is a context (CSS or XPath locator) to narrow the search.</source>
          <target state="translated">두 번째 매개 변수는 검색 범위를 좁히기위한 컨텍스트 (CSS 또는 XPath 로케이터)입니다.</target>
        </trans-unit>
        <trans-unit id="e13f314950e7cf595a3dec7c53c3957357ec2b94" translate="yes" xml:space="preserve">
          <source>The sessionStorage is copied to the new tab (contrary to a tab that was manually opened by the user)</source>
          <target state="translated">sessionStorage가 새 탭에 복사됩니다 (사용자가 수동으로 연 탭과 달리).</target>
        </trans-unit>
        <trans-unit id="2fab86c235f21482acbeb01cd9d17fcf33111c4b" translate="yes" xml:space="preserve">
          <source>The snapshot file will be stored without encoding it to json format, and with the &lt;code&gt;.html&lt;/code&gt; extension.</source>
          <target state="translated">스냅 샷 파일은 json 형식으로 인코딩하지 않고 &lt;code&gt;.html&lt;/code&gt; 확장자로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="948bedc7ccb85fbbba4b999ce11602d237b995c3" translate="yes" xml:space="preserve">
          <source>The solution is to pass an array value:</source>
          <target state="translated">해결책은 배열 값을 전달하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c9ab02c2a7c5489f53cbdc3d9b12ac6687d51fa7" translate="yes" xml:space="preserve">
          <source>The tab is opened with JavaScript&amp;rsquo;s &lt;code&gt;window.open()&lt;/code&gt;, which means:</source>
          <target state="translated">탭은 JavaScript의 &lt;code&gt;window.open()&lt;/code&gt; 열립니다 . 이는 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d8c860625bd621199d0c2c863a4ce486f4bbe926" translate="yes" xml:space="preserve">
          <source>The tests will be executed 3 times, each time in a different browser.</source>
          <target state="translated">테스트는 매번 다른 브라우저에서 3 번 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9d32ff5aa50b60d820eddb51eeb2ae9b606279b3" translate="yes" xml:space="preserve">
          <source>The ubiquitous language is always referred as &lt;em&gt;common&lt;/em&gt; language. That is it&amp;rsquo;s main benefit. It is not a couple of our business specification&amp;rsquo;s words, and not a couple of developer&amp;rsquo;s technical terms. It is a common words and terms that can be understood by people for whom we are building the software and should be understood by developers. Establishing correct communication between this two groups people is vital for building successful project that will fit the domain and fulfill all business needs.</source>
          <target state="translated">유비쿼터스 언어는 항상 &lt;em&gt;공통&lt;/em&gt; 언어 라고 합니다. 그것이 주요 이점입니다. 이는 비즈니스 사양의 두 단어가 아니며 개발자의 기술 용어가 아닙니다. 소프트웨어를 개발하는 사람들이 이해할 수있는 일반적인 단어와 용어이며 개발자가 이해해야합니다. 이 두 그룹간에 올바른 의사 소통을 확립하는 것은 도메인에 적합하고 모든 비즈니스 요구를 충족시키는 성공적인 프로젝트를 구축하는 데 필수적입니다.</target>
        </trans-unit>
        <trans-unit id="a80008ff6c733f11e6469c9a08bd0f5c97d4a222" translate="yes" xml:space="preserve">
          <source>The window can only be identified by name. If the $name parameter is blank, the parent window will be used.</source>
          <target state="translated">창은 이름으로 만 식별 할 수 있습니다. $ name 매개 변수가 비어 있으면 상위 창이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="00da132e72d6727ab03613c23a7d08a83466f5d1" translate="yes" xml:space="preserve">
          <source>Then add &lt;code&gt;\Codeception\Lib\Actor\Shared\Retry&lt;/code&gt; trait into &lt;code&gt;AcceptanceTester&lt;/code&gt; class:</source>
          <target state="translated">그런 다음 &lt;code&gt;\Codeception\Lib\Actor\Shared\Retry&lt;/code&gt; 특성을 &lt;code&gt;AcceptanceTester&lt;/code&gt; 클래스에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e0d4cfcb24360d49e4a1b2661f1c846147ee2ec3" translate="yes" xml:space="preserve">
          <source>Then define a class which implements the LoaderInterface</source>
          <target state="translated">그런 다음 LoaderInterface를 구현하는 클래스를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="2ffe3dff2f375fc5cead814eb2285a8ccb6b0cbc" translate="yes" xml:space="preserve">
          <source>Then rebuild actors with &lt;code&gt;codecept build&lt;/code&gt; command.</source>
          <target state="translated">그런 다음 &lt;code&gt;codecept build&lt;/code&gt; 명령으로 액터를 다시 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb722a71e4b98d8f3100e93b9756f42bfa540358" translate="yes" xml:space="preserve">
          <source>Then we can start the very first job and check the execution progress. If tests fail we will see that in console:</source>
          <target state="translated">그런 다음 첫 번째 작업을 시작하고 실행 진행 상황을 확인할 수 있습니다. 테스트가 실패하면 콘솔에서 다음을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e62a6b451e37cc0c74463af04183ff70c66a1ed9" translate="yes" xml:space="preserve">
          <source>Then you will need to implement all step definitions. Run &lt;code&gt;gherkin:snippets&lt;/code&gt; to generate stubs for them. By default it is recommended to place step definitions into actor class (Tester) and use its methods for steps implementation.</source>
          <target state="translated">그런 다음 모든 단계 정의를 구현해야합니다. &lt;code&gt;gherkin:snippets&lt;/code&gt; 를 실행 하여 스텁을 생성 하십시오 . 기본적으로 단계 정의를 액터 클래스 (테스터)에 배치하고 단계 구현에 해당 메소드를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="02b1cd6d904308987f14d8e62416ab69347dd621" translate="yes" xml:space="preserve">
          <source>There are also modules for &lt;a href=&quot;modules/mongodb&quot;&gt;MongoDb&lt;/a&gt;, &lt;a href=&quot;modules/redis&quot;&gt;Redis&lt;/a&gt;, and &lt;a href=&quot;modules/memcache&quot;&gt;Memcache&lt;/a&gt; which behave in a similar manner.</source>
          <target state="translated">비슷한 방식으로 동작하는 &lt;a href=&quot;modules/mongodb&quot;&gt;MongoDb&lt;/a&gt; , &lt;a href=&quot;modules/redis&quot;&gt;Redis&lt;/a&gt; 및 &lt;a href=&quot;modules/memcache&quot;&gt;Memcache&lt;/a&gt; 용 모듈도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8ceecb197db31d09a1a69441f836b7b66b98014" translate="yes" xml:space="preserve">
          <source>There are lots of ways to create reusable and readable tests. Group common actions together and move them to an Actor class or StepObjects. Move CSS and XPath locators into PageObjects. Write your custom actions and assertions in Helpers. Scenario-driven tests should not contain anything more complex than &lt;code&gt;$I-&amp;gt;doSomething&lt;/code&gt; commands. Following this approach will allow you to keep your tests clean, readable, stable and make them easy to maintain.</source>
          <target state="translated">재사용 가능하고 읽기 쉬운 테스트를 작성하는 방법에는 여러 가지가 있습니다. 공통 액션을 그룹화하여 Actor 클래스 또는 StepObject로 옮깁니다. CSS 및 XPath 로케이터를 PageObjects로 이동하십시오. 도우미에서 사용자 지정 작업 및 어설 션을 작성하십시오. 시나리오 중심 테스트에는 &lt;code&gt;$I-&amp;gt;doSomething&lt;/code&gt; 명령 보다 복잡한 것이 포함되어서는 안됩니다 . 이 접근 방식을 사용하면 테스트를 깨끗하고 읽기 쉽고 안정적으로 유지하고 쉽게 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="948afae0228a52f6e532a20e39fb5ec72d31a3da" translate="yes" xml:space="preserve">
          <source>There are many Continuous Integration Servers out there. We will try to list basic steps to setup Codeception tests with them. If your CI system is not mentioned, you can get the idea by analogy. Please also help us to extend this guide by adding instructions for different CIs.</source>
          <target state="translated">많은 Continuous Integration Server가 있습니다. Codeception 테스트를 설정하기위한 기본 단계를 나열하려고합니다. CI 시스템을 언급하지 않은 경우 유추하여 아이디어를 얻을 수 있습니다. 다른 CI에 대한 지침을 추가하여이 안내서를 확장 할 수 있도록 도와주십시오.</target>
        </trans-unit>
        <trans-unit id="369472f273f527dca68dd0c625dc610a948c7536" translate="yes" xml:space="preserve">
          <source>There are plenty of useful Codeception commands:</source>
          <target state="translated">유용한 Codeception 명령이 많이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="07c4fcc1941869fa1d336706faca8c05b4e60d6c" translate="yes" xml:space="preserve">
          <source>There are plenty of ways to test your application. The most popular paradigm is &lt;a href=&quot;https://en.wikipedia.org/wiki/Unit_testing&quot;&gt;Unit Testing&lt;/a&gt;. For web applications, testing just the controller and/or the model doesn&amp;rsquo;t prove that your application is working. To test the behavior of your application as a whole, you should write functional or acceptance tests.</source>
          <target state="translated">응용 프로그램을 테스트하는 방법은 많이 있습니다. 가장 인기있는 패러다임은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Unit_testing&quot;&gt;단위 테스팅&lt;/a&gt; 입니다. 웹 응용 프로그램의 경우 컨트롤러 및 / 또는 모델 만 테스트한다고해서 응용 프로그램이 작동하고있는 것은 아닙니다. 응용 프로그램의 동작을 전체적으로 테스트하려면 기능 또는 승인 테스트를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="472475cb2784568d51ba67ed63be1d7f41e92407" translate="yes" xml:space="preserve">
          <source>There are pretty many assertions you can use inside tests. The most common are:</source>
          <target state="translated">테스트 내부에서 사용할 수있는 많은 주장이 있습니다. 가장 일반적인 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00f2d74b591d01448a0dd51fdbcee6a29ff8f06c" translate="yes" xml:space="preserve">
          <source>There are several ways to execute a bunch of tests. You can run tests from a specific directory:</source>
          <target state="translated">여러 가지 테스트를 수행하는 방법에는 여러 가지가 있습니다. 특정 디렉토리에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d943ab0fd5690899e5d940d2d46a201be6307ac" translate="yes" xml:space="preserve">
          <source>There are two approaches to achieve parallelization. We can use &lt;a href=&quot;https://docker.com&quot;&gt;Docker&lt;/a&gt; and run each process inside isolated containers, and have those containers executed simultaneously.</source>
          <target state="translated">병렬화를 달성하는 두 가지 방법이 있습니다. &lt;a href=&quot;https://docker.com&quot;&gt;Docker&lt;/a&gt; 를 사용하여 격리 된 컨테이너 내에서 각 프로세스를 실행하고 해당 컨테이너를 동시에 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32a279542017eb7e85407192396510526b48e76d" translate="yes" xml:space="preserve">
          <source>There are two ways of loading the dump into your database:</source>
          <target state="translated">덤프를 데이터베이스에로드하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="13476efc2e8fda368c4d0571d6b63e0dd8766eeb" translate="yes" xml:space="preserve">
          <source>There is a shortcut if you don&amp;rsquo;t need that complex filters:</source>
          <target state="translated">복잡한 필터가 필요없는 경우 바로 가기가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1997a50dea00caded9841a9dd879fcaa74d60af1" translate="yes" xml:space="preserve">
          <source>There is a special class &lt;a href=&quot;reference/locator&quot;&gt;&lt;code&gt;Codeception\Util\Locator&lt;/code&gt;&lt;/a&gt; which may help you to generate complex XPath locators. For instance, it can easily allow you to click an element on the last row of a table:</source>
          <target state="translated">복잡한 XPath 로케이터를 생성하는 데 도움 이되는 특수 클래스 &lt;a href=&quot;reference/locator&quot;&gt; &lt;code&gt;Codeception\Util\Locator&lt;/code&gt; &lt;/a&gt; 가 있습니다. 예를 들어, 테이블의 마지막 행에서 요소를 쉽게 클릭 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fc661f9a3fd7478638b5d55b21698e460482654" translate="yes" xml:space="preserve">
          <source>There is a way to get it tested as well. Codeception allows you take a snapshot of a data on first run and compare with on next executions. This principle is so general that it can work for testing APIs, items on a web page, etc.</source>
          <target state="translated">테스트하는 방법도 있습니다. Codeception을 사용하면 처음 실행시 데이터의 스냅 샷을 작성하고 다음 실행시와 비교할 수 있습니다. 이 원칙은 너무 일반적이므로 API, 웹 페이지의 항목 등을 테스트하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a90cd0048e529fab2b4a176229c2367958ccbc11" translate="yes" xml:space="preserve">
          <source>There is the &lt;code&gt;WebDriver&lt;/code&gt; module for acceptance testing, modules for all popular PHP frameworks, &lt;code&gt;PHPBrowser&lt;/code&gt; to emulate browser execution, &lt;code&gt;REST&lt;/code&gt; for testing APIs, and more. Modules are considered to be the most valuable part of Codeception. They are constantly improving to provide the best testing experience, and be flexible to satisfy everyone&amp;rsquo;s needs.</source>
          <target state="translated">있다 &lt;code&gt;WebDriver&lt;/code&gt; 의 수용 테스트를위한 모듈, 모든 인기있는 PHP 프레임 워크에 대한 모듈은 &lt;code&gt;PHPBrowser&lt;/code&gt; 는 브라우저 실행, 에뮬레이트하는 &lt;code&gt;REST&lt;/code&gt; 를 테스트 API를 위해, 그리고 더. 모듈은 Codeception의 가장 중요한 부분으로 간주됩니다. 최고의 테스트 경험을 제공하기 위해 지속적으로 개선하고 있으며 모든 사람의 요구를 충족시킬 수있는 유연성을 갖추고 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6462daf1fc696a68d8590c28de11488adca6f27" translate="yes" xml:space="preserve">
          <source>There may be some confusion between &lt;code&gt;test.start&lt;/code&gt;/&lt;code&gt;test.before&lt;/code&gt; and &lt;code&gt;test.after&lt;/code&gt;/&lt;code&gt;test.end&lt;/code&gt;. The start and end events are triggered by PHPUnit, but the before and after events are triggered by Codeception. Thus, when you are using classical PHPUnit tests (extended from &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;), the before/after events won&amp;rsquo;t be triggered for them. During the &lt;code&gt;test.before&lt;/code&gt; event you can mark a test as skipped or incomplete, which is not possible in &lt;code&gt;test.start&lt;/code&gt;. You can learn more from &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Subscriber&quot;&gt;Codeception internal event listeners&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test.start&lt;/code&gt; / &lt;code&gt;test.before&lt;/code&gt; 와 &lt;code&gt;test.after&lt;/code&gt; / &lt;code&gt;test.end&lt;/code&gt; 사이에 약간의 혼동이있을 수 있습니다 . 시작 및 종료 이벤트는 PHPUnit에 의해 트리거되지만 before 및 after 이벤트는 Codeception에 의해 트리거됩니다. 따라서 일반적인 PHPUnit 테스트 ( &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; 에서 확장 )를 사용하는 경우 이전 / 이후 이벤트가 트리거되지 않습니다. &lt;code&gt;test.before&lt;/code&gt; 이벤트 중에 테스트를 건너 뛰거나 불완전한 것으로 표시 할 수 있으며 &lt;code&gt;test.start&lt;/code&gt; 에서는 불가능 합니다. &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Subscriber&quot;&gt;Codeception 내부 이벤트 리스너&lt;/a&gt; 에서 자세히 배울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a81e853d7a9b168acecc48455a1ff63296d05eee" translate="yes" xml:space="preserve">
          <source>There may be some confusion between &lt;code&gt;test.start&lt;/code&gt;/&lt;code&gt;test.before&lt;/code&gt; and &lt;code&gt;test.after&lt;/code&gt;/&lt;code&gt;test.end&lt;/code&gt;. The start and end events are triggered by PHPUnit, but the before and after events are triggered by Codeception. Thus, when you are using classical PHPUnit tests (extended from &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;), the before/after events won&amp;rsquo;t be triggered for them. During the &lt;code&gt;test.before&lt;/code&gt; event you can mark a test as skipped or incomplete, which is not possible in &lt;code&gt;test.start&lt;/code&gt;. You can learn more from &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Subscriber&quot;&gt;Codeception internal event listeners&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test.start&lt;/code&gt; / &lt;code&gt;test.before&lt;/code&gt; 와 &lt;code&gt;test.after&lt;/code&gt; / &lt;code&gt;test.end&lt;/code&gt; 사이에 약간의 혼동이있을 수 있습니다 . 시작 및 종료 이벤트는 PHPUnit에 의해 트리거되지만 이전 및 이후 이벤트는 Codeception에 의해 트리거됩니다. 따라서 기존 PHPUnit 테스트 ( &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; 에서 확장 )를 사용하는 경우 이전 / 이후 이벤트가 트리거되지 않습니다. 동안 &lt;code&gt;test.before&lt;/code&gt; 의 이벤트는 가능하지 않다 불완전한 생략 또는 테스트, 표시 할 수 있습니다 &lt;code&gt;test.start&lt;/code&gt; 을 . &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Subscriber&quot;&gt;Codeception 내부 이벤트 리스너&lt;/a&gt; 에서 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="73071f5f12a33665b9c6270260df1ef6a856767c" translate="yes" xml:space="preserve">
          <source>Therefore we can open a web page with &lt;code&gt;amOnPage&lt;/code&gt; method:</source>
          <target state="translated">따라서 &lt;code&gt;amOnPage&lt;/code&gt; 메소드를 사용 하여 웹 페이지를 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82163692f5484c9372d19b4f27a04f2f2fb77978" translate="yes" xml:space="preserve">
          <source>These commands retrieve data that can be used in the test. Imagine your site generates a password for every user and you want to check that the user can log into the site using this password:</source>
          <target state="translated">이 명령은 테스트에 사용할 수있는 데이터를 검색합니다. 사이트에서 모든 사용자의 비밀번호를 생성한다고 가정하고 사용자가이 비밀번호를 사용하여 사이트에 로그인 할 수 있는지 확인하려고합니다.</target>
        </trans-unit>
        <trans-unit id="24d15de04291dd413c8a05973420337df01f1494" translate="yes" xml:space="preserve">
          <source>These generated scenarios will be stored in your &lt;code&gt;_data&lt;/code&gt; directory in text files.</source>
          <target state="translated">생성 된 시나리오는 &lt;code&gt;_data&lt;/code&gt; 디렉토리에 텍스트 파일 로 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="0774cc902ef4ce66db8cbad58f8febff0e7aa11f" translate="yes" xml:space="preserve">
          <source>They allow you to create and check data by model name and field names in the model. Here is the example in Laravel:</source>
          <target state="translated">모델에서 모델 이름 및 필드 이름으로 데이터를 작성하고 확인할 수 있습니다. Laravel의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="76f390a589bab7443a684c400b3d7b3082db3649" translate="yes" xml:space="preserve">
          <source>They can be executed with &lt;code&gt;init&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 명령 으로 실행할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a5ed0dcebd9d71bf8f45fedb2d8c9f3c1606d399" translate="yes" xml:space="preserve">
          <source>This behavior can be configured using &lt;code&gt;prefix&lt;/code&gt; config param.</source>
          <target state="translated">이 동작은 &lt;code&gt;prefix&lt;/code&gt; config param을 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2562ae3470339d22f1ca1a94fa02ccedffa99152" translate="yes" xml:space="preserve">
          <source>This call will be translated to XML:</source>
          <target state="translated">이 호출은 XML로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="d2566254f8fd4bf8388607d53a1ab72971f40c28" translate="yes" xml:space="preserve">
          <source>This can useful in acceptance tests where entity can become invalid due to external (relative to entity manager used in tests) changes.</source>
          <target state="translated">이는 외부 (테스트에 사용 된 엔티티 관리자에 비해) 변경으로 인해 엔티티가 무효화 될 수있는 수락 테스트에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ea6bb095fc07017185e68ddca02d954305057e2" translate="yes" xml:space="preserve">
          <source>This chapter summarizes all of the notices on clean-ups from the previous chapters and suggests the best strategies of how to choose data storage backends.</source>
          <target state="translated">이 장에서는 이전 장의 정리에 대한 모든 공지 사항을 요약하고 데이터 스토리지 백엔드를 선택하는 방법에 대한 최상의 전략을 제안합니다.</target>
        </trans-unit>
        <trans-unit id="4a55f9839526115f62df8726508be2b0e15bdbb2" translate="yes" xml:space="preserve">
          <source>This class provides various helper methods for building customized setup</source>
          <target state="translated">이 클래스는 사용자 정의 설정을 작성하기위한 다양한 헬퍼 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e3c12b99176548123a6b63641df01c5ebfbd9a75" translate="yes" xml:space="preserve">
          <source>This command will run all tests for all suites, displaying the steps, and building HTML and XML reports. Reports will be stored in the &lt;code&gt;tests/_output/&lt;/code&gt; directory.</source>
          <target state="translated">이 명령은 모든 제품군에 대한 모든 테스트를 실행하고 단계를 표시하며 HTML 및 XML 보고서를 작성합니다. 보고서는 &lt;code&gt;tests/_output/&lt;/code&gt; 디렉토리에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="d7be05543f79125a5ea1bea9cbae2d3481a6ca78" translate="yes" xml:space="preserve">
          <source>This configuration will allow you to send GET/POST requests to the server&amp;rsquo;s APIs while working with a site through a browser.</source>
          <target state="translated">이 구성을 사용하면 브라우저를 통해 사이트를 작업하는 동안 GET / POST 요청을 서버의 API로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b557f4ff2559596f55be870cd6d8eef4eec0bfb2" translate="yes" xml:space="preserve">
          <source>This creates a stub class for Entity\User repository with redefined method findByUsername, which will always return the NULL value.</source>
          <target state="translated">이렇게하면 findByUsername 메소드가 재정의 된 Entity \ User 저장소에 대한 스텁 클래스가 작성되며, 항상 NULL 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6c9f8e48c0ed4e80468843d1c38ca38666ca2099" translate="yes" xml:space="preserve">
          <source>This does not save it in the database. Use &lt;code&gt;have&lt;/code&gt; for that.</source>
          <target state="translated">데이터베이스에 저장하지 않습니다. 사용 &lt;code&gt;have&lt;/code&gt; 그것에 대해.</target>
        </trans-unit>
        <trans-unit id="057701e3a2b6f21a4fb0038366ab1905d1a037ef" translate="yes" xml:space="preserve">
          <source>This example uses jQuery to get a value and assigns that value to a PHP variable:</source>
          <target state="translated">이 예제는 jQuery를 사용하여 값을 가져오고 해당 값을 PHP 변수에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="246a635a48cb95a3bce81663f1b8d53beecb3e68" translate="yes" xml:space="preserve">
          <source>This file is called &lt;code&gt;c3.php&lt;/code&gt; and is &lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;available on GitHub&lt;/a&gt;. &lt;code&gt;c3.php&lt;/code&gt; should be downloaded and included in your application at the very first line from controller. By sending special headers Codeception will command your application when to start codecoverage collection and when to stop it. After the suite is finished, a report will be stored and Codeception will grab it from your application.</source>
          <target state="translated">이 파일은 &lt;code&gt;c3.php&lt;/code&gt; 이며 &lt;a href=&quot;https://github.com/Codeception/c3&quot;&gt;GitHub에서 사용할 수 있습니다&lt;/a&gt; . &lt;code&gt;c3.php&lt;/code&gt; 는 컨트롤러의 첫 줄에 다운로드하여 응용 프로그램에 포함시켜야합니다. 특수 헤더를 보내면 Codeception이 코드 커버리지 수집을 시작하고 중지 할시기를 응용 프로그램에 명령합니다. 스위트가 완료되면 보고서가 저장되고 Codeception이 애플리케이션에서 보고서를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="49b09c9e5fb91c62f7cdbdf4bf6f078ade3f6a16" translate="yes" xml:space="preserve">
          <source>This format can be recommended for testing domain and database interactions.</source>
          <target state="translated">이 형식은 도메인 및 데이터베이스 상호 작용을 테스트하는 데 권장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eb295109235313c3f5625f0698eeb17125e4b1b" translate="yes" xml:space="preserve">
          <source>This function creates the CSRF Cookie.</source>
          <target state="translated">이 기능은 CSRF 쿠키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="32183d667b14ff14be987c32b566271f824b1813" translate="yes" xml:space="preserve">
          <source>This function works well when paired with &lt;code&gt;seeInFormFields()&lt;/code&gt; for quickly testing CRUD interfaces and form validation logic.</source>
          <target state="translated">이 함수는 &lt;code&gt;seeInFormFields()&lt;/code&gt; 와 쌍을 이루어 CRUD 인터페이스와 양식 유효성 검사 로직을 빠르게 테스트 할 때 잘 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="495b938c5a8cc32705c7e23b6057bbf8c080d24a" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;exchange_declare&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;exchange_declare&lt;/code&gt; 메소드의 별명입니다. 의 &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b293208874e3c0d80fe2723114fe5f18380cb1c" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;queue_bind&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;queue_bind&lt;/code&gt; 메소드의 별명 입니다. &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5171e975dee5ef1fb48a96c99cb2f80f1b91c4d" translate="yes" xml:space="preserve">
          <source>This is an alias of method &lt;code&gt;queue_declare&lt;/code&gt; of &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;queue_declare&lt;/code&gt; 메소드의 별명 입니다. &lt;code&gt;PhpAmqpLib\Channel\AMQPChannel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd5bbeffbed7dd1c52439fd1376c3c9e0d5ffc3e" translate="yes" xml:space="preserve">
          <source>This is how filters can be used:</source>
          <target state="translated">필터를 사용하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b0402caf503b4cbd24124dcde64edefafd3cece0" translate="yes" xml:space="preserve">
          <source>This is how it can be implemented:</source>
          <target state="translated">이것이 구현되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="b4fc848e78da33625b5580ea2409fe5cafeb572e" translate="yes" xml:space="preserve">
          <source>This is how we described the initial conditions. Next, we perform some action. We use &lt;strong&gt;When&lt;/strong&gt; keyword for it:</source>
          <target state="translated">이것이 우리가 초기 조건을 묘사 한 방법입니다. 다음으로 몇 가지 조치를 수행합니다. 우리는 &lt;strong&gt;때&lt;/strong&gt; 사용&lt;strong&gt;&lt;/strong&gt; 키워드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f6ffaad365e864d942ee46a2d35b59e306253915" translate="yes" xml:space="preserve">
          <source>This is the fastest way to run acceptance tests since it doesn&amp;rsquo;t require running an actual browser. We use a PHP web scraper, which acts like a browser: It sends a request, then receives and parses the response. Codeception uses &lt;a href=&quot;http://guzzlephp.org&quot;&gt;Guzzle&lt;/a&gt; and &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;Symfony BrowserKit&lt;/a&gt; to interact with HTML web pages.</source>
          <target state="translated">실제 브라우저를 실행할 필요가 없으므로 승인 테스트를 실행하는 가장 빠른 방법입니다. 브라우저처럼 작동하는 PHP 웹 스크레이퍼를 사용합니다. 요청을 보낸 다음 응답을 받아 구문 분석합니다. Codeception은 &lt;a href=&quot;http://guzzlephp.org&quot;&gt;Guzzle&lt;/a&gt; 및 &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;Symfony BrowserKit을 사용합니다.&lt;/a&gt; 을 하여 HTML 웹 페이지와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="fce4fecb6b48de5521d1ddf535a0faa006bd9a79" translate="yes" xml:space="preserve">
          <source>This is the output we should see:</source>
          <target state="translated">이것은 우리가 볼 수있는 출력입니다.</target>
        </trans-unit>
        <trans-unit id="1b361a3161b245d853aa983e3dac2f8ec83371f7" translate="yes" xml:space="preserve">
          <source>This is what acceptance tests are doing. They cover scenarios from a user&amp;rsquo;s perspective. With acceptance tests, you can be confident that users, following all the defined scenarios, won&amp;rsquo;t get errors.</source>
          <target state="translated">이것이 수용 시험이하는 일입니다. 사용자 관점에서 시나리오를 다룹니다. 승인 테스트를 통해 정의 된 모든 시나리오에 따라 사용자에게 오류가 발생하지 않을 것이라고 확신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6338a72041b6fb03c87f65b6a424b858a7f82791" translate="yes" xml:space="preserve">
          <source>This looks very similar to acceptance tests. The behavior is the same, however, the test is executed inside PHP without launching a browser.</source>
          <target state="translated">이것은 수용 테스트와 매우 유사합니다. 동작은 동일하지만 테스트는 브라우저를 시작하지 않고 PHP 내에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="cb96d9daf026e724efeda6ce933ce2c148abd7c2" translate="yes" xml:space="preserve">
          <source>This method &lt;strong&gt;require &lt;a href=&quot;https://github.com/FlowCommunications/JSONPath/&quot;&gt;&lt;code&gt;flow/jsonpath&lt;/code&gt; &amp;gt; 0.2&lt;/a&gt; library to be installed&lt;/strong&gt;.</source>
          <target state="translated">이 방법을 사용 &lt;strong&gt;하려면 &lt;a href=&quot;https://github.com/FlowCommunications/JSONPath/&quot;&gt; &lt;code&gt;flow/jsonpath&lt;/code&gt; &amp;gt; 0.2&lt;/a&gt; 라이브러리를 설치해야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c9c021824f22f3fe95a360e22673323a84367805" translate="yes" xml:space="preserve">
          <source>This method also accepts instances as first argument, which is useful when the entity constructor has some arguments:</source>
          <target state="translated">이 메서드는 또한 인스턴스를 첫 번째 인수로 허용합니다. 이는 엔티티 생성자에 일부 인수가있을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="110308f691941d293ac018261ead62136a901e05" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;seeFormErrorMessage&lt;/code&gt; for each entry in the &lt;code&gt;$bindings&lt;/code&gt; array.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;$bindings&lt;/code&gt; 배열 의 각 항목에 대해 &lt;code&gt;seeFormErrorMessage&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="fd0cd624f54cc162ce556f85f072cf92e289fcc3" translate="yes" xml:space="preserve">
          <source>This method is deprecated in favor of &lt;code&gt;haveInRepository()&lt;/code&gt;. Its functionality is exactly the same.</source>
          <target state="translated">이 메소드 대신 &lt;code&gt;haveInRepository()&lt;/code&gt; 가 사용되지 않습니다 . 그 기능은 똑같습니다.</target>
        </trans-unit>
        <trans-unit id="52aa391eadb529c93fe132d71226f5ce6f76ae42" translate="yes" xml:space="preserve">
          <source>This method recursively checks if one array can be found inside of another.</source>
          <target state="translated">이 방법은 한 배열이 다른 배열 내부에서 발견 될 수 있는지 재귀 적으로 검사합니다.</target>
        </trans-unit>
        <trans-unit id="0804e6c5f11d806de1e7b655a976b7c5aabdc9d7" translate="yes" xml:space="preserve">
          <source>This method requires &lt;a href=&quot;https://github.com/doctrine/data-fixtures&quot;&gt;&lt;code&gt;doctrine/data-fixtures&lt;/code&gt;&lt;/a&gt; to be installed.</source>
          <target state="translated">이 방법을 사용하려면 &lt;a href=&quot;https://github.com/doctrine/data-fixtures&quot;&gt; &lt;code&gt;doctrine/data-fixtures&lt;/code&gt; &lt;/a&gt; 를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb96e8417663e16e7597977373004701d4d6743f" translate="yes" xml:space="preserve">
          <source>This module allows to use &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;fixtures&lt;/a&gt; inside a test. There are two options for that. Fixtures can be loaded using &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; method inside a test:</source>
          <target state="translated">이 모듈은 테스트 내에서 &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;조명기&lt;/a&gt; 를 사용할 수 있습니다 . 두 가지 옵션이 있습니다. 테스트 내에서 &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; 메소드를 사용하여 픽스처를 로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53c3f52556a578fce3612207a85f72d8e0282346" translate="yes" xml:space="preserve">
          <source>This module allows to use &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;fixtures&lt;/a&gt; inside a test. There are two ways to do that. Fixtures can either be loaded with the &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; method inside a test:</source>
          <target state="translated">이 모듈은 테스트 내에서 &lt;a href=&quot;http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html&quot;&gt;조명기&lt;/a&gt; 를 사용할 수 있습니다 . 두 가지 방법이 있습니다. Fixture는 테스트 내 에서 &lt;a href=&quot;#haveFixtures&quot;&gt;haveFixtures&lt;/a&gt; 메소드를 사용하여로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c90f7fa194225ba17f4522998ad16560b99a5a8a" translate="yes" xml:space="preserve">
          <source>This module allows you to run functional tests for Laravel 5.1+ It should &lt;strong&gt;not&lt;/strong&gt; be used for acceptance tests. See the Acceptance tests section below for more details.</source>
          <target state="translated">이 모듈을 사용하면 Laravel 5.1+에 대한 기능 테스트를 실행할 수 있습니다 . 승인 테스트에 사용 해서는 &lt;strong&gt;안됩니다&lt;/strong&gt; . 자세한 내용은 아래의 수락 테스트 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="957bf78db9e6d069f3d57213a8e904ae66c852ad" translate="yes" xml:space="preserve">
          <source>This module allows you to run functional tests for Lumen. Please try it and leave your feedback.</source>
          <target state="translated">이 모듈을 사용하면 루멘에 대한 기능 테스트를 실행할 수 있습니다. 사용 해보고 의견을 남겨주세요.</target>
        </trans-unit>
        <trans-unit id="0de4c2ad6020d6ceaf623325ad385b206ae1735b" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Mezzio.</source>
          <target state="translated">이 모듈을 사용하면 Mezzio 내에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c24d68c5f6de783c2653cf03e3d662f1a49c791" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Zend Expressive.</source>
          <target state="translated">이 모듈을 사용하면 Zend Expressive 내에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd2daf4dd2e29845e9feaa3b174017a09a5024d" translate="yes" xml:space="preserve">
          <source>This module allows you to run tests inside Zend Framework 2 and Zend Framework 3.</source>
          <target state="translated">이 모듈을 사용하면 Zend Framework 2 및 Zend Framework 3 내에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7da51d1f6a27f80f156d500307e8b8ff6cbe158f" translate="yes" xml:space="preserve">
          <source>This module can be used either with frameworks or PHPBrowser. If a framework module is connected, the testing will occur in the application directly. Otherwise, a PHPBrowser should be specified as a dependency to send requests and receive responses from a server.</source>
          <target state="translated">이 모듈은 프레임 워크 또는 PHPBrowser와 함께 사용할 수 있습니다. 프레임 워크 모듈이 연결된 경우 테스트는 응용 프로그램에서 직접 수행됩니다. 그렇지 않으면, 요청을 보내고 서버로부터 응답을 받기 위해 PHPBrowser를 종속성으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1e59e02d28118f25a4c5733ff476cab505e6359" translate="yes" xml:space="preserve">
          <source>This module can be used either with frameworks or PHPBrowser. It tries to guess the framework is is attached to. If a endpoint is a full url then it uses PHPBrowser.</source>
          <target state="translated">이 모듈은 프레임 워크 또는 PHPBrowser와 함께 사용할 수 있습니다. 프레임 워크가 연결되어 있다고 추측합니다. 엔드 포인트가 전체 URL 인 경우 PHPBrowser를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="01b6861b61d4dd266067c530cd2b44386e139e81" translate="yes" xml:space="preserve">
          <source>This module extends the Filesystem module, file contents methods are inherited from this module.</source>
          <target state="translated">이 모듈은 파일 시스템 모듈을 확장하고 파일 내용 메소드는이 모듈에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="139d3bc6bb3e566d29065536eeff8494e74880c8" translate="yes" xml:space="preserve">
          <source>This module has no actions, but introduces a function &lt;code&gt;sq&lt;/code&gt; for generating unique sequences within test and &lt;code&gt;sqs&lt;/code&gt; for generating unique sequences across suite.</source>
          <target state="translated">이 모듈에는 동작이 없지만 테스트 및 &lt;code&gt;sqs&lt;/code&gt; 내에서 고유 시퀀스를 생성하기위한 &lt;code&gt;sq&lt;/code&gt; 함수를 소개합니다. 제품군 전체에서 고유 시퀀스를 생성하기위한 를 .</target>
        </trans-unit>
        <trans-unit id="5822de9385b70f7ad64a65b2766bb78c103debcd" translate="yes" xml:space="preserve">
          <source>This module interacts with message broker software that implements the Advanced Message Queuing Protocol (AMQP) standard. For example, RabbitMQ (tested).</source>
          <target state="translated">이 모듈은 AMQP (Advanced Message Queuing Protocol) 표준을 구현하는 메시지 브로커 소프트웨어와 상호 작용합니다. 예를 들어 RabbitMQ (테스트)입니다.</target>
        </trans-unit>
        <trans-unit id="734c8cbb8bb4370d60a6a5a3ec560bfb1201e2a2" translate="yes" xml:space="preserve">
          <source>This module interacts with the &lt;a href=&quot;https://php.net/manual/en/intro.apcu.php&quot;&gt;Alternative PHP Cache (APC)&lt;/a&gt; using either &lt;em&gt;APCu&lt;/em&gt; or &lt;em&gt;APC&lt;/em&gt; extension.</source>
          <target state="translated">이 모듈 은 &lt;em&gt;APCu&lt;/em&gt; 또는 &lt;em&gt;APC&lt;/em&gt; 확장을 사용하여 &lt;a href=&quot;https://php.net/manual/en/intro.apcu.php&quot;&gt;APC (Alternative PHP Cache)&lt;/a&gt; 와 상호 작용 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6228f0f67bd8dafeee4a86b471394c11cac0c584" translate="yes" xml:space="preserve">
          <source>This module provide to use native URL formats of Yii2 for all codeception commands that use url for work. This commands allows input like:</source>
          <target state="translated">이 모듈은 작업에 url을 사용하는 모든 코드 인식 명령에 Yii2의 기본 URL 형식을 사용하도록 제공합니다. 이 명령은 다음과 같은 입력을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="d75af1e665552a77886079ea4bf52247d856b81b" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalcon framework&lt;/a&gt; (3.x). Please try it and leave your feedback.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalcon 프레임 워크&lt;/a&gt; (3.x) 와의 통합을 제공합니다 . 그것을 시도하고 의견을 남겨주세요.</target>
        </trans-unit>
        <trans-unit id="12598a3da0f400c00c96331e34db7aff3b46951e" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalcon framework&lt;/a&gt; (4.x). Please try it and leave your feedback.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://www.phalcon.io/&quot;&gt;Phalcon 프레임 워크&lt;/a&gt; (4.x) 와의 통합을 제공합니다 . 그것을 시도하고 의견을 남겨주세요.</target>
        </trans-unit>
        <trans-unit id="9ab00b93aea5f6c6748c007540ef8f721d33c018" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.phalconphp.com/&quot;&gt;Phalcon framework&lt;/a&gt; (3.x). Please try it and leave your feedback.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://www.phalconphp.com/&quot;&gt;Phalcon 프레임 워크&lt;/a&gt; (3.x) 와의 통합을 제공합니다 . 사용 해보고 의견을 남겨주세요.</target>
        </trans-unit>
        <trans-unit id="58b732fcc105c570464bcfafcb1179af6edb9236" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii framework&lt;/a&gt; (2.0).</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii 프레임 워크&lt;/a&gt; (2.0) 와의 통합을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="22b0d8f16c9800fa9bd1320b58e4a9ae38c70546" translate="yes" xml:space="preserve">
          <source>This module provides integration with &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii framework&lt;/a&gt; (2.0). It initializes Yii framework in test environment and provides actions for functional testing.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://www.yiiframework.com/&quot;&gt;Yii 프레임 워크&lt;/a&gt; (2.0) 와의 통합을 제공합니다 . 테스트 환경에서 Yii 프레임 워크를 초기화하고 기능 테스트를위한 조치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="51ff6a6542176305f51b72dc5f666da50eaf774e" translate="yes" xml:space="preserve">
          <source>This module requires PHPBrowser or any of Framework modules enabled.</source>
          <target state="translated">이 모듈에는 PHPBrowser 또는 Framework 모듈이 활성화되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="235b20eeb79f677f1f160bf500cf4c29c7657567" translate="yes" xml:space="preserve">
          <source>This module requires packages installed:</source>
          <target state="translated">이 모듈에는 패키지가 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5f7edb2d62976775f866e047aa9b5f8f6c2452fb" translate="yes" xml:space="preserve">
          <source>This module uses Symfony Crawler and HttpKernel to emulate requests and test response.</source>
          <target state="translated">이 모듈은 Symfony Crawler 및 HttpKernel을 사용하여 요청을 에뮬레이션하고 응답을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="423832627d674a589f37c12eae22bcf8e2f1a813" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;a href=&quot;https://github.com/nrk/predis&quot;&gt;Predis&lt;/a&gt; library to interact with a Redis server.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://github.com/nrk/predis&quot;&gt;Predis&lt;/a&gt; 라이브러리를 사용하여 Redis 서버와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="a0fd00372ca4c26d9ab0a9d7912f99f51e053627" translate="yes" xml:space="preserve">
          <source>This module was bundled with Codeception 2 and 3, but since version 4 it is necessary to install it separately.</source>
          <target state="translated">이 모듈은 Codeception 2 및 3과 함께 번들로 제공되었지만 버전 4부터는 별도로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="e0664053b5bc98dbfe6cb4eea31868ac4d9aba26" translate="yes" xml:space="preserve">
          <source>This runs in the context of the &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver class&lt;/a&gt;. Try not to use this command on a regular basis. If Codeception lacks a feature you need, please implement it and submit a patch.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver 클래스&lt;/a&gt; 의 컨텍스트에서 실행됩니다 . 이 명령을 정기적으로 사용하지 마십시오. Codeception에 필요한 기능이없는 경우이를 구현하고 패치를 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="4ba1c18f1d9523fcdaf10be16e39238de3d20587" translate="yes" xml:space="preserve">
          <source>This runs in the context of the &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver class&lt;/a&gt;. Try not to use this command on a regular basis. If Codeception lacks a feature you need, please implement it and submit a patch.</source>
          <target state="translated">이것은 &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/master/lib/remote/RemoteWebDriver.php&quot;&gt;RemoteWebDriver 클래스&lt;/a&gt; 의 컨텍스트에서 실행됩니다 . 이 명령을 정기적으로 사용하지 마십시오. Codeception에 필요한 기능이없는 경우이를 구현하고 패치를 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="81a486ea96a0402cad1e365e369584e6274761ee" translate="yes" xml:space="preserve">
          <source>This scenario can probably be read by non-technical people. If you just remove all special chars like braces, arrows and &lt;code&gt;$&lt;/code&gt;, this test transforms into plain English text:</source>
          <target state="translated">이 시나리오는 기술이 아닌 사람들이 읽을 수 있습니다. 중괄호, 화살표 및 &lt;code&gt;$&lt;/code&gt; 와 같은 특수 문자를 모두 제거하면 이 테스트는 일반 영어 텍스트로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="622f0218840627aae58a1a095010f4347ab33fd0" translate="yes" xml:space="preserve">
          <source>This section details what you can expect when using this module.</source>
          <target state="translated">이 섹션에서는이 모듈을 사용할 때 예상 할 수있는 사항에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0c8b2b964b204e94c332273f403cfbff48cf346e" translate="yes" xml:space="preserve">
          <source>This simple test can be extended to a complete scenario of site usage, therefore, by emulating the user&amp;rsquo;s actions, you can test any of your websites.</source>
          <target state="translated">이 간단한 테스트는 사이트 사용의 전체 시나리오로 확장 될 수 있으므로 사용자의 동작을 에뮬레이션하여 모든 웹 사이트를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2f3924667ab167c40d910fe86995985910da2d9" translate="yes" xml:space="preserve">
          <source>This string is passed as a standard PHP string parameter</source>
          <target state="translated">이 문자열은 표준 PHP 문자열 매개 변수로 전달됩니다</target>
        </trans-unit>
        <trans-unit id="0afa514aeb64eecf2071d61020b2a004c904f61b" translate="yes" xml:space="preserve">
          <source>This template can be fulfilled by setting actor and goals:</source>
          <target state="translated">이 템플릿은 배우와 목표를 설정하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13f45325506b1fbe8984315416b8d7e60faa5c91" translate="yes" xml:space="preserve">
          <source>This test will trigger the following events:</source>
          <target state="translated">이 테스트는 다음 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="b775b15223a3b54fdcfc2ce55d6d16e91dd4254f" translate="yes" xml:space="preserve">
          <source>This test, running with the PhpBrowser module in debug mode, will print something like this:</source>
          <target state="translated">디버그 모드에서 PhpBrowser 모듈로 실행되는이 테스트는 다음과 같이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="ad760ce0824beb2eaace8f7a6bac97ce08ee4652" translate="yes" xml:space="preserve">
          <source>This way PageObjects, Helpers and StepObjects can become contexts as well. But more preferable to include context classes by their tags or roles.</source>
          <target state="translated">이런 식으로 PageObjects, Helpers 및 StepObjects도 컨텍스트가 될 수 있습니다. 그러나 태그 나 역할별로 컨텍스트 클래스를 포함하는 것이 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="deb9e7bd23d8d365307f720238040e7fbe5b2658" translate="yes" xml:space="preserve">
          <source>This way feature file runs just the same as any other Codeception test. Substeps give us detailed information of how the scenario is being executed.</source>
          <target state="translated">이런 식으로 기능 파일은 다른 Codeception 테스트와 동일하게 실행됩니다. 하위 단계는 시나리오 실행 방법에 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="027a270497ebd9e458f131fd1ba22e658c2fba47" translate="yes" xml:space="preserve">
          <source>This way if you try to use two modules sharing the same conflicted interface you will get an exception.</source>
          <target state="translated">이 방법으로 동일한 충돌 인터페이스를 공유하는 두 개의 모듈을 사용하려고하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2b5a48f9bf9bf3efcb3bcd2967ba4035378e130e" translate="yes" xml:space="preserve">
          <source>This way no web actions will be added to &lt;code&gt;$I&lt;/code&gt; object.</source>
          <target state="translated">이렇게하면 &lt;code&gt;$I&lt;/code&gt; 객체에 웹 작업이 추가되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a87c1f16ef6b4ea22e67e7f3d4f999bf4fd0beab" translate="yes" xml:space="preserve">
          <source>This way you can easily control which tests will be executed for each environment.</source>
          <target state="translated">이 방법으로 각 환경에 대해 어떤 테스트를 실행할지 쉽게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f07dcba5fbb38030b083c2635dc8efc2b045d2b9" translate="yes" xml:space="preserve">
          <source>This will bootstrap a new project with the &lt;code&gt;namespace: frontend&lt;/code&gt; parameter in the &lt;code&gt;codeception.yml&lt;/code&gt; file. Helpers will be in the &lt;code&gt;frontend\Codeception\Module&lt;/code&gt; namespace and Actor classes will be in the &lt;code&gt;frontend&lt;/code&gt; namespace.</source>
          <target state="translated">&lt;code&gt;codeception.yml&lt;/code&gt; 파일 의 &lt;code&gt;namespace: frontend&lt;/code&gt; 매개 변수를 사용하여 새 프로젝트를 부트 스트랩 합니다. 도우미는 &lt;code&gt;frontend\Codeception\Module&lt;/code&gt; 네임 스페이스에 있고 Actor 클래스는 &lt;code&gt;frontend&lt;/code&gt; 네임 스페이스에 있습니다.</target>
        </trans-unit>
        <trans-unit id="23fd01a30506cfcd283ea232d5f32763ac506075" translate="yes" xml:space="preserve">
          <source>This will create a &lt;code&gt;Login&lt;/code&gt; class in &lt;code&gt;tests/_support/Page/Acceptance&lt;/code&gt;. The basic PageObject is nothing more than an empty class with a few stubs.</source>
          <target state="translated">이것은 &lt;code&gt;tests/_support/Page/Acceptance&lt;/code&gt; 에 &lt;code&gt;Login&lt;/code&gt; 클래스를 생성합니다 . 기본 PageObject는 몇 개의 스텁이있는 빈 클래스에 지나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5b8c24db209c7830ed1230b7637c32d0e74971f" translate="yes" xml:space="preserve">
          <source>This will create a &lt;code&gt;Login&lt;/code&gt; class in &lt;code&gt;tests/_support/Page&lt;/code&gt;. The basic PageObject is nothing more than an empty class with a few stubs. It is expected that you will populate it with the UI locators of a page it represents and then those locators will be used on a page. Locators are represented with public static properties:</source>
          <target state="translated">&lt;code&gt;tests/_support/Page&lt;/code&gt; 에 &lt;code&gt;Login&lt;/code&gt; 클래스 가 생성됩니다 . 기본 PageObject는 몇 개의 스텁이있는 빈 클래스에 지나지 않습니다. 표시하는 페이지의 UI 로케이터로 해당 페이지를 채우면 해당 로케이터가 페이지에서 사용됩니다. 로케이터는 공개 정적 속성으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4743b1c845bc3887da6e5ec946fef9a61908bd00" translate="yes" xml:space="preserve">
          <source>This will generate &lt;code&gt;SigninCest.php&lt;/code&gt; file inside &lt;code&gt;tests/acceptance&lt;/code&gt; directory. Let&amp;rsquo;s open it:</source>
          <target state="translated">이것은 &lt;code&gt;tests/acceptance&lt;/code&gt; 디렉토리 안에 &lt;code&gt;SigninCest.php&lt;/code&gt; 파일 을 생성 할 것 입니다. 열어 봅시다 :</target>
        </trans-unit>
        <trans-unit id="06aa388826cd7f270bedaabdbed12ac912ce1fee" translate="yes" xml:space="preserve">
          <source>This will generate a class in &lt;code&gt;/tests/_support/Step/Acceptance/Admin.php&lt;/code&gt; similar to this:</source>
          <target state="translated">이것은 &lt;code&gt;/tests/_support/Step/Acceptance/Admin.php&lt;/code&gt; 에 다음 과 비슷한 클래스를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="ee0b965e3c484b969f2a8d219e9e1aa1e7e472be" translate="yes" xml:space="preserve">
          <source>This will launch the test suites for all three applications and merge the reports from all of them. This is very useful when you run your tests on a Continuous Integration server and you want to get a single report in JUnit and HTML format. The code coverage report will be merged too.</source>
          <target state="translated">그러면 세 응용 프로그램 모두에 대한 테스트 스위트가 시작되고 모든 응용 프로그램에서 보고서가 병합됩니다. Continuous Integration 서버에서 테스트를 실행하고 JUnit 및 HTML 형식의 단일 보고서를 얻으려는 경우 매우 유용합니다. 코드 적용 범위 보고서도 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="26f29ed4a76ddd6b2b7b55e790156dfa78250a31" translate="yes" xml:space="preserve">
          <source>This will load all context from the given path and prefix it with the given namespace.</source>
          <target state="translated">주어진 경로에서 모든 컨텍스트를로드하고 주어진 네임 스페이스로 접두사를 붙입니다.</target>
        </trans-unit>
        <trans-unit id="17e838bd4586037a45ebbf4c584b119f9cd1d99d" translate="yes" xml:space="preserve">
          <source>This will load all found &lt;code&gt;p*&lt;/code&gt; files in &lt;code&gt;tests/_data&lt;/code&gt; as groups. Group names will be as follows p1,p2,&amp;hellip;,pN.</source>
          <target state="translated">이렇게하면 &lt;code&gt;tests/_data&lt;/code&gt; 에서 찾은 모든 &lt;code&gt;p*&lt;/code&gt; 파일이 그룹으로 로드 됩니다. 그룹 이름은 다음과 같습니다. p1, p2,&amp;hellip;, pN.</target>
        </trans-unit>
        <trans-unit id="ae716a947bff519afe13002d98d4fb2bb86d5ace" translate="yes" xml:space="preserve">
          <source>This will match any word (passed in double quotes) or a number passed:</source>
          <target state="translated">이것은 모든 단어 (큰 따옴표로 묶음) 또는 전달 된 숫자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="641effe51b09108081714c5a068477e2590e9837" translate="yes" xml:space="preserve">
          <source>This will produce code templates for all undefined steps in all feature files of this suite. Our next step will be to define those steps and transforming feature-file into valid test.</source>
          <target state="translated">이렇게하면이 제품군의 모든 기능 파일에서 정의되지 않은 모든 단계에 대한 코드 템플릿이 생성됩니다. 다음 단계는 이러한 단계를 정의하고 기능 파일을 유효한 테스트로 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="938a9ea9193e97cd6f04c2d475133ccf1b3184fe" translate="yes" xml:space="preserve">
          <source>This will produce this XML</source>
          <target state="translated">이것은이 XML을 생성합니다</target>
        </trans-unit>
        <trans-unit id="e790594cbb4a8f4105931fadec1cd0c498025ead" translate="yes" xml:space="preserve">
          <source>This will search for &lt;code&gt;Title&lt;/code&gt; text in either &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, or &lt;code&gt;h3&lt;/code&gt; tag. You can also combine CSS selector with XPath locator:</source>
          <target state="translated">&lt;code&gt;h1&lt;/code&gt; , &lt;code&gt;h2&lt;/code&gt; 또는 &lt;code&gt;h3&lt;/code&gt; 태그 에서 &lt;code&gt;Title&lt;/code&gt; 텍스트를 검색합니다 . CSS 선택기를 XPath 로케이터와 결합 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea7adadb567b53fb1acf2d8ed8e9ab6fa33fccd1" translate="yes" xml:space="preserve">
          <source>This will use static method of &lt;code&gt;MyDb::createEntityManager()&lt;/code&gt; to establish the Entity Manager.</source>
          <target state="translated">&lt;code&gt;MyDb::createEntityManager()&lt;/code&gt; 의 정적 메소드를 사용 하여 엔티티 관리자를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="10ae9682118c2a034d8f59916b1e1e4c9cd3fc00" translate="yes" xml:space="preserve">
          <source>This works recursively, so you can create deep structures in a single call.</source>
          <target state="translated">이것은 재귀 적으로 작동하므로 한 번의 호출로 깊은 구조를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b861e49cfd57b05207e848d0a974bfd07aa93702" translate="yes" xml:space="preserve">
          <source>Those methods can be used to create custom commands like &lt;code&gt;$I-&amp;gt;startBrowser()&lt;/code&gt; or used in &lt;a href=&quot;06-modulesandhelpers#Hooks&quot;&gt;before/after&lt;/a&gt; hooks.</source>
          <target state="translated">이러한 메소드는 &lt;code&gt;$I-&amp;gt;startBrowser()&lt;/code&gt; 와 같은 사용자 정의 명령을 작성 하거나 사전 &lt;a href=&quot;06-modulesandhelpers#Hooks&quot;&gt;/ 이후&lt;/a&gt; 후크에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f979403e41a98dd8efe49fab5e0a21e6f718d34b" translate="yes" xml:space="preserve">
          <source>Those properties and methods are expected to be used in Helper classes:</source>
          <target state="translated">이러한 속성과 메서드는 도우미 클래스에서 사용될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="9839039fd7148a5312dd4c7518324e38509c6c04" translate="yes" xml:space="preserve">
          <source>Throw an &lt;code&gt;ElementNotFound&lt;/code&gt; exception.</source>
          <target state="translated">던져 &lt;code&gt;ElementNotFound&lt;/code&gt; 의 예외.</target>
        </trans-unit>
        <trans-unit id="f160ed7a99c266b070fe0b07fa7b8c6a186663a7" translate="yes" xml:space="preserve">
          <source>Ticks a checkbox. For radio buttons, use the &lt;code&gt;selectOption&lt;/code&gt; method instead.</source>
          <target state="translated">확인란을 선택합니다. 단일 선택 단추의 경우 &lt;code&gt;selectOption&lt;/code&gt; 메소드를 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="40b3a3c2e4163e7e9bb1d0e0406714d453267427" translate="yes" xml:space="preserve">
          <source>To access UnitTester methods you can use the &lt;code&gt;UnitTester&lt;/code&gt; property in a test.</source>
          <target state="translated">UnitTester 메소드에 액세스하기 위해 테스트에서 &lt;code&gt;UnitTester&lt;/code&gt; 특성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d857a0440472c8a0633d87bd2c563e619dec14f4" translate="yes" xml:space="preserve">
          <source>To authorize requests to external resources, usually provider requires you to authorize using headers. Additional headers can be set before request using &lt;code&gt;haveHttpHeader&lt;/code&gt; command:</source>
          <target state="translated">외부 리소스에 대한 요청을 승인하려면 일반적으로 공급자는 헤더를 사용하여 승인해야합니다. &lt;code&gt;haveHttpHeader&lt;/code&gt; 명령을 사용하여 요청 전에 추가 헤더를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea7fa5cf1b1616ec0c52f41ea8d4e724ed2cc4a6" translate="yes" xml:space="preserve">
          <source>To avoid confusion, &lt;strong&gt;Framework modules, PhpBrowser, and WebDriver&lt;/strong&gt; can&amp;rsquo;t be used together. For instance, the &lt;code&gt;amOnPage&lt;/code&gt; method exists in all those modules, and you should not try to guess which module will actually execute it. If you are doing acceptance testing, set up either WebDriver or PHPBrowser but do not set both up at the same time. If you are doing functional testing, enable only one of the framework modules.</source>
          <target state="translated">혼동을 피하기 위해 &lt;strong&gt;프레임 워크 모듈, PhpBrowser 및 WebDriver&lt;/strong&gt; 를 함께 사용할 수 없습니다. 예를 들어, &lt;code&gt;amOnPage&lt;/code&gt; 메소드는 모든 모듈에 존재하며 실제로 어떤 모듈을 실행할지 추측해서는 안됩니다. 승인 테스트를 수행하는 경우 WebDriver 또는 PHPBrowser를 설정하되 동시에 설정하지는 마십시오. 기능 테스트를 수행하는 경우 프레임 워크 모듈 중 하나만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="997f66b0cb3c029f0eb8bd20e4d4cc693dc8b3dc" translate="yes" xml:space="preserve">
          <source>To avoid naming conflicts between Actor classes and Helper classes, they should be separated into namespaces. To create test suites with namespaces you can add &lt;code&gt;--namespace&lt;/code&gt; option to the bootstrap command:</source>
          <target state="translated">액터 클래스와 헬퍼 클래스 사이의 이름 충돌을 피하려면 네임 스페이스로 분리해야합니다. 네임 스페이스로 테스트 스위트를 작성하려면 bootstrap 명령에 &lt;code&gt;--namespace&lt;/code&gt; 옵션을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f1d408afe2aeb5a1a5bb3d4113f8c30c742a05b" translate="yes" xml:space="preserve">
          <source>To change module configuration for a specific group of tests use &lt;a href=&quot;08-customization#Group-Objects&quot;&gt;GroupObjects&lt;/a&gt;.</source>
          <target state="translated">특정 테스트 그룹에 대한 모듈 구성을 변경하려면 &lt;a href=&quot;08-customization#Group-Objects&quot;&gt;GroupObjects를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="56acb72d9c9d56e9f3d6db688507db5ef2557319" translate="yes" xml:space="preserve">
          <source>To check that an element hasn&amp;rsquo;t been assigned any one of many values, an array can be passed as the value:</source>
          <target state="translated">요소에 많은 값 중 하나가 할당되지 않았는지 확인하기 위해 배열을 값으로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e619b478a656cd19f5cf11f09795233bc0238830" translate="yes" xml:space="preserve">
          <source>To combine &lt;code&gt;waitForElement&lt;/code&gt; with actions inside that element you can use the &lt;a href=&quot;modules/webdriver#performOn&quot;&gt;performOn&lt;/a&gt; method. Let&amp;rsquo;s see how you can perform some actions inside an HTML popup:</source>
          <target state="translated">&lt;code&gt;waitForElement&lt;/code&gt; 를 해당 요소 내부의 조치와 결합하려면 &lt;a href=&quot;modules/webdriver#performOn&quot;&gt;performOn&lt;/a&gt; 메소드를 사용할 수 있습니다 . HTML 팝업 내에서 몇 가지 작업을 수행하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="4058a630bb8bf89172a2629e3079b9dd3752500c" translate="yes" xml:space="preserve">
          <source>To conclude, we need:</source>
          <target state="translated">결론적으로 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="889fe4826fe7db5a5284186358d3a3de61a0b949" translate="yes" xml:space="preserve">
          <source>To connect to &lt;code&gt;c3&lt;/code&gt; Codeception uses url config from PhpBrowser or WebDriver module. But URL of index with &lt;code&gt;c3.php&lt;/code&gt; included can be specified explicitly with &lt;code&gt;c3_url&lt;/code&gt; parameter defined:</source>
          <target state="translated">&lt;code&gt;c3&lt;/code&gt; Codeception에 연결하려면 PhpBrowser 또는 WebDriver 모듈의 url config를 사용하십시오. 그러나 &lt;code&gt;c3.php&lt;/code&gt; 가 포함 된 색인의 URL은 &lt;code&gt;c3_url&lt;/code&gt; 매개 변수를 정의 하여 명시 적으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9c60b9ee14eba56f1ef58e73586c9bbfc1e7c20" translate="yes" xml:space="preserve">
          <source>To control browsers Selenium Server uses official tools maintained by browser vendors, like &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver&quot;&gt;ChromeDriver&lt;/a&gt; for Chrome or &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt; for Firefox. This makes Selenium quite heavy to install, as it requires Java, browsers, Chrome or GeckoDriver and GUI (display server) to run browsers in.</source>
          <target state="translated">제어 브라우저에 셀레늄 서버는 공식 도구처럼, 브라우저 벤더에 의해 관리 사용 &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver&quot;&gt;ChromeDriver&lt;/a&gt; 크롬 또는 대한 &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt; Firefox 용. 따라서 브라우저를 실행하려면 Java, 브라우저, Chrome 또는 GeckoDriver 및 GUI (디스플레이 서버)가 필요하므로 Selenium을 설치하기가 상당히 무겁습니다.</target>
        </trans-unit>
        <trans-unit id="9717eaa1eb3c5738c49ac41848ea0614f838dcbe" translate="yes" xml:space="preserve">
          <source>To control the browsers you need to use a program or a service to start/stop browser sessions. In the next section, we will overview the most popular solutions.</source>
          <target state="translated">브라우저를 제어하려면 프로그램 또는 서비스를 사용하여 브라우저 세션을 시작 / 중지해야합니다. 다음 섹션에서는 가장 많이 사용되는 솔루션을 개괄적으로 설명합니다.</target>
        </trans-unit>
        <trans-unit id="dee33c58459561431cb09d2a886e06e8d6d2a39a" translate="yes" xml:space="preserve">
          <source>To create a project in directory different from the current one, just provide its path as a parameter:</source>
          <target state="translated">현재 프로젝트와 다른 디렉토리에 프로젝트를 작성하려면 해당 경로를 매개 변수로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="90125501d5b026c2824bb36dc4f1cfc5594af8b6" translate="yes" xml:space="preserve">
          <source>To create one command to rule them all we can define new public method &lt;code&gt;parallelAll&lt;/code&gt; and execute all commands. We will save the result of &lt;code&gt;parallelRun&lt;/code&gt; and use it for our final exit code:</source>
          <target state="translated">하나의 명령을 작성하여 모든 규칙을 정하기 위해 새로운 공용 메소드 &lt;code&gt;parallelAll&lt;/code&gt; 을 정의 하고 모든 명령을 실행할 수 있습니다 . &lt;code&gt;parallelRun&lt;/code&gt; 의 결과를 저장 하고 최종 종료 코드에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="34a1f099569ed3a77dcbb6bdf479654753026f94" translate="yes" xml:space="preserve">
          <source>To create or update data you can use other common methods:</source>
          <target state="translated">데이터를 생성하거나 업데이트하려면 다른 일반적인 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ebf325d5ca25c6a0118e5b8237de27ba8725136" translate="yes" xml:space="preserve">
          <source>To declare expectations for mocks use &lt;code&gt;Codeception\Stub\Expected&lt;/code&gt; class:</source>
          <target state="translated">모의에 대한 기대를 선언하려면 &lt;code&gt;Codeception\Stub\Expected&lt;/code&gt; 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="100f9d0d9dcc5581a01d67d43f50340128111be9" translate="yes" xml:space="preserve">
          <source>To display additional information, use the &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;debugSection&lt;/code&gt; methods of the module. Here is an example of how it works for PhpBrowser:</source>
          <target state="translated">추가 정보를 표시하려면 모듈 의 &lt;code&gt;debug&lt;/code&gt; 및 &lt;code&gt;debugSection&lt;/code&gt; 메소드를 사용하십시오. 다음은 PhpBrowser에서 작동하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="db068ee171235a0ed610a01bf6b0b96f31a7a940" translate="yes" xml:space="preserve">
          <source>To enable code coverage put these lines in the global configuration file &lt;code&gt;codeception.yml&lt;/code&gt;:</source>
          <target state="translated">코드 적용을 가능하게하려면 다음 행을 글로벌 구성 파일 &lt;code&gt;codeception.yml&lt;/code&gt; 에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="ae863a9dea090403facd86e09f82b802323dd059" translate="yes" xml:space="preserve">
          <source>To enable extension dynamically, execute the &lt;code&gt;run&lt;/code&gt; command with &lt;code&gt;--ext&lt;/code&gt; option. Provide a class name as a parameter:</source>
          <target state="translated">확장을 동적으로 활성화하려면 &lt;code&gt;--ext&lt;/code&gt; 옵션 과 함께 &lt;code&gt;run&lt;/code&gt; 명령을 실행하십시오 . 클래스 이름을 매개 변수로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="4d94ddbbd397ff36c359a72d66b6979f6ea0bfa8" translate="yes" xml:space="preserve">
          <source>To enable the database functionality in unit tests, make sure the &lt;code&gt;Db&lt;/code&gt; module is included in the &lt;code&gt;unit.suite.yml&lt;/code&gt; configuration file. The database will be cleaned and populated after each test, the same way it happens for acceptance and functional tests. If that&amp;rsquo;s not your required behavior, change the settings of the &lt;code&gt;Db&lt;/code&gt; module for the current suite. See &lt;a href=&quot;modules/db&quot;&gt;Db Module&lt;/a&gt;</source>
          <target state="translated">단위 테스트에서 데이터베이스 기능을 사용하려면 &lt;code&gt;Db&lt;/code&gt; 모듈이 &lt;code&gt;unit.suite.yml&lt;/code&gt; 구성 파일에 포함되어 있는지 확인하십시오 . 승인 및 기능 테스트와 동일한 방식으로 각 테스트 후에 데이터베이스가 정리되고 채워집니다. 필요한 동작이 아닌 경우 현재 제품군 의 &lt;code&gt;Db&lt;/code&gt; 모듈 설정을 변경하십시오 . &lt;a href=&quot;modules/db&quot;&gt;DB 모듈&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="ba1b898d5e07a174e289632c55ed03a345ffc57a" translate="yes" xml:space="preserve">
          <source>To ensure database dump is loaded before all tests add &lt;code&gt;populate: true&lt;/code&gt;. To clean current database and reload dump between tests use &lt;code&gt;cleanup: true&lt;/code&gt;.</source>
          <target state="translated">모든 테스트 &lt;code&gt;populate: true&lt;/code&gt; 추가하기 전에 데이터베이스 덤프가로드되도록하려면 true . 테스트간에 현재 데이터베이스를 정리하고 덤프를 다시로드하려면 &lt;code&gt;cleanup: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cf87a678cfb9aefe0247bb9798133ae1162b72c" translate="yes" xml:space="preserve">
          <source>To execute a group of tests that are not stored in the same directory, you can organize them in &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;groups&lt;/a&gt;.</source>
          <target state="translated">같은 디렉토리에 저장되지 않은 테스트 그룹을 실행하려면, 당신은 그들에 구성 할 수 있습니다 &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;그룹&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3804f4ea343d7a6b630c14100b07519b6e7721ed" translate="yes" xml:space="preserve">
          <source>To execute a test in a browser we need to change the suite configuration to use &lt;strong&gt;WebDriver&lt;/strong&gt; instead of &lt;code&gt;PhpBrowser&lt;/code&gt;.</source>
          <target state="translated">브라우저에서 테스트를 실행하려면 &lt;code&gt;PhpBrowser&lt;/code&gt; 대신 &lt;strong&gt;WebDriver&lt;/strong&gt; 를 사용하도록 제품군 구성을 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="73809fbaec4f5814dc726fb6c1399c8a7a13b385" translate="yes" xml:space="preserve">
          <source>To find out which parts each module has, look at the &amp;ldquo;Parts&amp;rdquo; header on the module&amp;rsquo;s page.</source>
          <target state="translated">각 모듈에 어떤 부분이 있는지 알아 보려면 모듈 페이지의 &quot;Parts&quot;헤더를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e54abd8d0278dfa29aba8d09f81533c817fafc4" translate="yes" xml:space="preserve">
          <source>To generate JUnit XML output, you can provide the &lt;code&gt;--xml&lt;/code&gt; option, and &lt;code&gt;--html&lt;/code&gt; for HTML report.</source>
          <target state="translated">JUnit XML 출력을 생성하기 위해 &lt;code&gt;--xml&lt;/code&gt; 옵션 및 HTML 보고서에 &lt;code&gt;--html&lt;/code&gt; 을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d6e993a6ddad35b25700377e04bd31f00c71406c" translate="yes" xml:space="preserve">
          <source>To generate a clover xml report or a tasty html report append also &lt;code&gt;--coverage-xml&lt;/code&gt; and &lt;code&gt;--coverage-html&lt;/code&gt; options.</source>
          <target state="translated">클로버 xml 보고서 또는 맛있는 html 보고서를 생성하려면 &lt;code&gt;--coverage-xml&lt;/code&gt; 및 &lt;code&gt;--coverage-html&lt;/code&gt; 옵션 도 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="b58fb91019c0be55bc10d6d24f38a991e787bdd5" translate="yes" xml:space="preserve">
          <source>To get more details on steps executed you can generate HTML report and use Jenkins to display them.</source>
          <target state="translated">실행 된 단계에 대한 자세한 정보를 얻으려면 HTML 보고서를 생성하고 Jenkins를 사용하여이를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c77b77ebd882a05e19bc1efb4cb38db37c77e357" translate="yes" xml:space="preserve">
          <source>To init tests in specific folder use &lt;code&gt;--path&lt;/code&gt; option:</source>
          <target state="translated">특정 폴더에서 테스트를 시작하려면 &lt;code&gt;--path&lt;/code&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="17267dc3ce70f4fd9e214b13f5bc70b87cd6dccb" translate="yes" xml:space="preserve">
          <source>To limit tests run to a single class, add a second argument. Provide a local path to the test class, from the suite directory:</source>
          <target state="translated">테스트가 단일 클래스로 실행되도록 제한하려면 두 번째 인수를 추가하십시오. suite 디렉토리에서 테스트 클래스의 로컬 경로를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="bc8144a9117a2721cea959d1ebd8b234a8a47835" translate="yes" xml:space="preserve">
          <source>To list all defined steps run &lt;code&gt;gherkin:steps&lt;/code&gt; command:</source>
          <target state="translated">정의 된 모든 단계를 나열하려면 &lt;code&gt;gherkin:steps&lt;/code&gt; 명령을 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbb575e632c05d82c2f07f40c1ee5db90373201f" translate="yes" xml:space="preserve">
          <source>To make testing more effective we assumed that we are using one of the ActiveRecord frameworks like Laravel, Yii, or Phalcon so we are able to dynamically create records in database with &lt;code&gt;haveRecord&lt;/code&gt; method. After that we are opening browser and testing our web pages to see that after selecting those products we really see the price was calculated correctly.</source>
          <target state="translated">테스트를보다 효과적으로하기 위해 Laravel, Yii 또는 Phalcon과 같은 ActiveRecord 프레임 워크 중 하나를 사용하고 있다고 가정하여 &lt;code&gt;haveRecord&lt;/code&gt; 메소드를 사용 하여 데이터베이스에 레코드를 동적으로 작성할 수 있습니다 . 그 후 우리는 브라우저를 열고 웹 페이지를 테스트하여 해당 제품을 선택한 후 가격이 올바르게 계산되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="470d8d820699eb1c803996a50d88fe6a734dd690" translate="yes" xml:space="preserve">
          <source>To match fields by their labels, you should write a &lt;code&gt;for&lt;/code&gt; attribute in the &lt;code&gt;label&lt;/code&gt; tag.</source>
          <target state="translated">레이블을 기준으로 필드를 일치 시키려면 &lt;code&gt;label&lt;/code&gt; 태그 에 &lt;code&gt;for&lt;/code&gt; 속성을 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="33221cfc5f658c97f88c23cd00776d51193438e3" translate="yes" xml:space="preserve">
          <source>To match steps from a feature file to PHP code we use annotation which are added to class methods. By default Codeception expects that all methods marked with &lt;code&gt;@Given&lt;/code&gt;, &lt;code&gt;@When&lt;/code&gt;, &lt;code&gt;@Then&lt;/code&gt; annotation. Each annotation should contain a step string.</source>
          <target state="translated">기능 파일에서 PHP 코드로 단계를 일치시키기 위해 클래스 메소드에 추가 된 주석을 사용합니다. 기본적으로 Codeception은 &lt;code&gt;@Given&lt;/code&gt; , &lt;code&gt;@When&lt;/code&gt; , &lt;code&gt;@Then&lt;/code&gt; 주석으로 표시된 모든 메소드를 예상합니다 . 각 주석에는 단계 문자열이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9e993c9c65ffa2b5a900d06a772172f2d87c6830" translate="yes" xml:space="preserve">
          <source>To parse SQL Db file, it should follow this specification:</source>
          <target state="translated">SQL Db 파일을 구문 분석하려면 다음 스펙을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="632d6aa56501a42a690f3b6c811a696daf5918a6" translate="yes" xml:space="preserve">
          <source>To perform Symfony integration you just need to include the Symfony module into your test suite. If you also use Doctrine2, don&amp;rsquo;t forget to include it too. To make the Doctrine2 module connect using the &lt;code&gt;doctrine&lt;/code&gt; service from Symfony, you should specify the Symfony module as a dependency for Doctrine2:</source>
          <target state="translated">Symfony 통합을 수행하려면 Symfony 모듈을 테스트 스위트에 포함시키기 만하면됩니다. Doctrine2도 사용한다면 그것을 포함하는 것을 잊지 마십시오. Symfony 의 &lt;code&gt;doctrine&lt;/code&gt; 서비스를 사용하여 Doctrine2 모듈을 연결하려면 Doctrine2에 대한 종속성으로 Symfony 모듈을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="79fe4dcf2ee453f4315d30a265ea7b8dc23e1b86" translate="yes" xml:space="preserve">
          <source>To prepare application and tests to be executed inside containers you will need to use &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt; to run multiple containers and connect them together.</source>
          <target state="translated">컨테이너 내에서 실행될 애플리케이션과 테스트를 준비하려면 &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt; 를 사용 하여 여러 컨테이너를 실행하고 함께 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="03a6d72b8d7563d4dfdb0a982ea8835805c9ca03" translate="yes" xml:space="preserve">
          <source>To prepare environment for testing you can execute custom PHP script before all tests or just before a specific suite. This way you can initialize autoloader, check availability of a website, etc.</source>
          <target state="translated">테스트 환경을 준비하기 위해 모든 테스트 전 또는 특정 제품군 바로 전에 사용자 정의 PHP 스크립트를 실행할 수 있습니다. 이렇게하면 오토로더를 초기화하고 웹 사이트의 가용성을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0794fb81f886121facfcb48571b3e5a9295580a" translate="yes" xml:space="preserve">
          <source>To proceed you should create Factories helper via &lt;code&gt;generate:helper&lt;/code&gt; command and enable it:</source>
          <target state="translated">계속 진행하려면 &lt;code&gt;generate:helper&lt;/code&gt; 명령을 통해 팩토리 헬퍼를 생성 하고 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0a8d8931a926d8bbd27503164c07b684627a8e5f" translate="yes" xml:space="preserve">
          <source>To provide the same configuration template for your development team, you can create a &lt;code&gt;codeception.dist.yml&lt;/code&gt; config file, which will be loaded before &lt;code&gt;codeception.yml&lt;/code&gt;. The dist config provides shared options, while local &lt;code&gt;codeception.yml&lt;/code&gt; files override them on a per-installation basis. Therefore, &lt;code&gt;codeception.yml&lt;/code&gt; should be ignored by your VCS system.</source>
          <target state="translated">개발 팀에 대해 동일한 구성 템플릿을 제공하기 위해, 당신은 만들 수 있습니다 &lt;code&gt;codeception.dist.yml&lt;/code&gt; 의 전에로드 할 설정 파일, &lt;code&gt;codeception.yml&lt;/code&gt; 을 . dist 구성은 공유 옵션을 제공하는 반면 로컬 &lt;code&gt;codeception.yml&lt;/code&gt; 파일은 설치마다이를 무시합니다. 따라서 &lt;code&gt;codeception.yml&lt;/code&gt; 은 VCS 시스템에서 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="e84b5eae92294962f94930f73f2f30a9603ff183" translate="yes" xml:space="preserve">
          <source>To receive detailed output, tests can be executed with the &lt;code&gt;--debug&lt;/code&gt; option. You may print any information inside a test using the &lt;code&gt;codecept_debug&lt;/code&gt; function.</source>
          <target state="translated">자세한 출력을 받으려면 &lt;code&gt;--debug&lt;/code&gt; 옵션을 사용하여 테스트를 실행할 수 있습니다 . &lt;code&gt;codecept_debug&lt;/code&gt; 함수를 사용하여 테스트 내부에 정보를 인쇄 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de461cdaa42bf6f383c2ecbbe3821b8ee2bcbc07" translate="yes" xml:space="preserve">
          <source>To replace method provide it&amp;rsquo;s name as a key in second parameter and it&amp;rsquo;s return value or callback function as parameter</source>
          <target state="translated">메소드를 대체하려면 이름을 두 번째 매개 변수의 키로 제공하고 반환 값 또는 콜백 함수를 매개 변수로 제공하십시오</target>
        </trans-unit>
        <trans-unit id="2eca21f4f82adf77f4ef7642972cfb2c816b445b" translate="yes" xml:space="preserve">
          <source>To replace method provide it&amp;rsquo;s name as a key in third parameter and it&amp;rsquo;s return value or callback function as parameter</source>
          <target state="translated">메소드를 대체하려면 이름을 세 번째 매개 변수의 키로 제공하고 반환 값 또는 콜백 함수를 매개 변수로 제공하십시오</target>
        </trans-unit>
        <trans-unit id="98df62a49987ec4672cfb9a443372304754e7717" translate="yes" xml:space="preserve">
          <source>To run Selenium Server you need &lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt; as well as Chrome or Firefox browser installed.</source>
          <target state="translated">Selenium Server를 실행하려면 &lt;a href=&quot;https://www.java.com/&quot;&gt;Java&lt;/a&gt; 및 Chrome 또는 Firefox 브라우저가 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="99b952b2eea5453fc78da996c7c5ae7a46db2ed4" translate="yes" xml:space="preserve">
          <source>To run a script for a specific suite, place it into the suite directory and add to suite config:</source>
          <target state="translated">특정 제품군에 대한 스크립트를 실행하려면 해당 스크립트를 제품군 디렉토리에 배치하고 제품군 구성에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="798ec5a586cb9bb7ac58ad5d823482c7ddc4fda9" translate="yes" xml:space="preserve">
          <source>To run a specific test only in Chrome browser, you can call &lt;code&gt;_reconfigure&lt;/code&gt; from WebDriver module for a test itself using &lt;code&gt;@prepare&lt;/code&gt;.</source>
          <target state="translated">단지 크롬 브라우저에서 특정 테스트를 실행하려면 호출 할 수 있습니다 &lt;code&gt;_reconfigure&lt;/code&gt; 사용하여 테스트 자체에 대한 WebDriver의 모듈을 &lt;code&gt;@prepare&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="6f320120c8499834be6249da01e33bf3d9c7c070" translate="yes" xml:space="preserve">
          <source>To run bootstrap script before all suites place it in &lt;code&gt;tests&lt;/code&gt; directory (absolute paths supported as well). Then set a &lt;code&gt;bootstrap&lt;/code&gt; config key in &lt;code&gt;codeception.yml&lt;/code&gt;:</source>
          <target state="translated">모든 제품군이 &lt;code&gt;tests&lt;/code&gt; 디렉토리에 배치하기 전에 부트 스트랩 스크립트를 실행하려면 (절대 경로도 지원됨) 그런 다음 &lt;code&gt;codeception.yml&lt;/code&gt; 에 &lt;code&gt;bootstrap&lt;/code&gt; 구성 키를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="17cc90197cc0e558828a590ee727166639b41b32" translate="yes" xml:space="preserve">
          <source>To run more tests create a public method for each of them. Include &lt;code&gt;AcceptanceTester&lt;/code&gt; object as &lt;code&gt;$I&lt;/code&gt; as a method parameter and use the same &lt;code&gt;$I-&amp;gt;&lt;/code&gt; API you&amp;rsquo;ve seen before. If your tests share common setup actions put them into &lt;code&gt;_before&lt;/code&gt; method.</source>
          <target state="translated">더 많은 테스트를 실행하려면 각 테스트에 대해 공개 메소드를 작성하십시오. 메소드 매개 변수로 &lt;code&gt;AcceptanceTester&lt;/code&gt; 오브젝트를 &lt;code&gt;$I&lt;/code&gt; 로 포함 하고 이전에 본 것과 동일한 &lt;code&gt;$I-&amp;gt;&lt;/code&gt; API를 사용하십시오 . 테스트가 일반적인 설정 동작을 공유하는 경우 &lt;code&gt;_before&lt;/code&gt; 메소드에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="388606433286bc42fc537e55852b9fdc30fd2182" translate="yes" xml:space="preserve">
          <source>To run tests in Chrome browser you may connect to ChromeDriver directly, without using Selenium Server.</source>
          <target state="translated">Chrome 브라우저에서 테스트를 실행하려면 Selenium 서버를 사용하지 않고 ChromeDriver에 직접 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58797ceb80e56ac553bcf24f68cb048ac009642e" translate="yes" xml:space="preserve">
          <source>To run tests in Chrome/Chromium you may connect to ChromeDriver directly, without using Selenium Server.</source>
          <target state="translated">Chrome / Chromium에서 테스트를 실행하려면 Selenium Server를 사용하지 않고 ChromeDriver에 직접 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b7c8e2c36e650b5842b655fdc677aab76a741c0" translate="yes" xml:space="preserve">
          <source>To run tests in Chrome/Chromium, you need to install &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;.</source>
          <target state="translated">Chrome / Chromium에서 테스트를 실행하려면 &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bd49b4e42bebfb5b0c6e1947890d7ce2ced627c2" translate="yes" xml:space="preserve">
          <source>To run tests in Firefox you may connect to GeckoDriver directly, without using Selenium Server.</source>
          <target state="translated">Firefox에서 테스트를 실행하려면 Selenium Server를 사용하지 않고 GeckoDriver에 직접 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3df780f47a1c7783e99d0cf7c23f3a1a9f23da1" translate="yes" xml:space="preserve">
          <source>To run the tests in all 3 browsers, list all the environments:</source>
          <target state="translated">세 가지 브라우저 모두에서 테스트를 실행하려면 모든 환경을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="bb9f9f83210547a29daaf66a5b1190449765c10b" translate="yes" xml:space="preserve">
          <source>To see all the available options, run the following command:</source>
          <target state="translated">사용 가능한 모든 옵션을 보려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3607e9e895f6823464f743176d1e56515dc0c407" translate="yes" xml:space="preserve">
          <source>To try commands without running a single test you can launch interactive console:</source>
          <target state="translated">단일 테스트를 실행하지 않고 명령을 시도하려면 대화식 콘솔을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8e4ffb6e9de99dcb9840b21d25c3fcff1215992" translate="yes" xml:space="preserve">
          <source>To update a snapshot with a new data run tests in &lt;code&gt;--debug&lt;/code&gt; mode.</source>
          <target state="translated">새 데이터로 스냅 샷을 업데이트하려면 &lt;code&gt;--debug&lt;/code&gt; 모드 에서 테스트를 실행 하십시오.</target>
        </trans-unit>
        <trans-unit id="3e7bad8751f759a85d15c645b386acef9ceb7c99" translate="yes" xml:space="preserve">
          <source>To use Chrome, install &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver&lt;/a&gt;. To use Firefox, install &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt;.</source>
          <target state="translated">Chrome을 사용하려면 &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/getting-started&quot;&gt;ChromeDriver를&lt;/a&gt; 설치 하십시오 . Firefox를 사용하려면 &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver를&lt;/a&gt; 설치 하십시오 .</target>
        </trans-unit>
        <trans-unit id="806ebd7b51c1ba92a34077a69d3b86ae893e72cd" translate="yes" xml:space="preserve">
          <source>To use Firefox, install &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver&lt;/a&gt;. If you want to use both, consider setting up a dedicated &lt;a href=&quot;../07-advancedusage#Environments&quot;&gt;Codeception environment&lt;/a&gt; for each.</source>
          <target state="translated">Firefox를 사용하려면 &lt;a href=&quot;https://github.com/mozilla/geckodriver&quot;&gt;GeckoDriver를&lt;/a&gt; 설치 하십시오 . 둘 다 사용하려면 각각에 대해 전용 &lt;a href=&quot;../07-advancedusage#Environments&quot;&gt;Codeception 환경&lt;/a&gt; 을 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="9c06a377d6b094601a6e07f57dc613cc667689e0" translate="yes" xml:space="preserve">
          <source>To use special chars in Header Key use HTML Character Entities: Example: Header with underscore - &amp;lsquo;Client_Id&amp;rsquo; should be represented as - &amp;lsquo;Client_Id&amp;rsquo; or &amp;lsquo;Client_Id&amp;rsquo;</source>
          <target state="translated">헤더 키에 특수 문자를 사용하려면 HTML 문자 엔티티를 사용하십시오. 예 : 밑줄이있는 헤더- 'Client_Id'는- 'Client_Id'또는 'Client_Id'로 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="6ced7ef2807720acf926345c72cefb9cee87ff46" translate="yes" xml:space="preserve">
          <source>To use the Doctrine2 Module in acceptance tests, set up your &lt;code&gt;acceptance.suite.yml&lt;/code&gt; like this:</source>
          <target state="translated">수락 테스트에서 Doctrine2 모듈을 사용하려면 다음 과 같이 &lt;code&gt;acceptance.suite.yml&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ef117c20e4a675667cac9d0787e1d09be36bdc74" translate="yes" xml:space="preserve">
          <source>To use this module with Composer you need &lt;em&gt;&quot;php-amqplib/php-amqplib&quot;: &quot;~2.4&quot;&lt;/em&gt; package.</source>
          <target state="translated">이 모듈을 Composer와 함께 사용하려면 &lt;em&gt;&quot;php-amqplib / php-amqplib&quot;: &quot;~ 2.4&quot;&lt;/em&gt; 패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b60bce65685c3347e271f1b66c68750c9a5f06f7" translate="yes" xml:space="preserve">
          <source>Transforms strict locator, \Facebook\WebDriver\WebDriverBy into a string represenation</source>
          <target state="translated">엄격한 로케이터 \ Facebook \ WebDriver \ WebDriverBy를 문자열 표현으로 변환</target>
        </trans-unit>
        <trans-unit id="101f3741d8524f88095e386945c54326e8d904b4" translate="yes" xml:space="preserve">
          <source>Traverses to parent</source>
          <target state="translated">부모에게 순회</target>
        </trans-unit>
        <trans-unit id="6ac3dc47355ca9d12a788e3a61d412eb752cf76e" translate="yes" xml:space="preserve">
          <source>Traverses to parent with $name</source>
          <target state="translated">$ name의 부모에게 순회</target>
        </trans-unit>
        <trans-unit id="b418c6739c7c1ad0864642ef766933e54096f710" translate="yes" xml:space="preserve">
          <source>Travis CI is popular service CI with good GitHub integration. Codeception is self-tested with Travis CI. There nothing special about configuration. Just add to the bottom line of travis configuration:</source>
          <target state="translated">Travis CI는 GitHub 통합이 우수한 인기있는 서비스 CI입니다. 코드 인식은 Travis CI로 자체 테스트되었습니다. 구성에는 특별한 것이 없습니다. travis 구성의 결론에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="964727c168089a045439cac900375d0f513ace0f" translate="yes" xml:space="preserve">
          <source>Travis doesn&amp;rsquo;t provide visualization for XML or HTML reports so you can&amp;rsquo;t view reports in format any different than console output. However, Codeception produces nice console output with detailed error reports.</source>
          <target state="translated">Travis는 XML 또는 HTML 보고서에 대한 시각화를 제공하지 않으므로 콘솔 출력과 다른 형식으로 보고서를 볼 수 없습니다. 그러나 Codeception은 자세한 오류 보고서와 함께 멋진 콘솔 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="318d69ee32677736aa58edcba1771fdb587d930c" translate="yes" xml:space="preserve">
          <source>TravisCI</source>
          <target state="translated">TravisCI</target>
        </trans-unit>
        <trans-unit id="089b6f034200d1fb8ee514e56def286e46325e79" translate="yes" xml:space="preserve">
          <source>Triggered by</source>
          <target state="translated">발동되다</target>
        </trans-unit>
        <trans-unit id="c41ebe83bed402fa9c25d413dd00b111da4d91d9" translate="yes" xml:space="preserve">
          <source>Try to execute test commands in run-time. You may try commands before writing the test.</source>
          <target state="translated">테스트 명령을 런타임으로 실행하십시오. 테스트를 작성하기 전에 명령을 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="c12db084084adfb30a4cae99ab64377dce6931a7" translate="yes" xml:space="preserve">
          <source>Ubiquitous Language</source>
          <target state="translated">유비쿼터스 언어</target>
        </trans-unit>
        <trans-unit id="2cef0574f5f47b0e045384e0b7c4ef0a0f4cc932" translate="yes" xml:space="preserve">
          <source>Under the hood, Codeception uses Symfony&amp;rsquo;s &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;BrowserKit&lt;/a&gt; to &amp;ldquo;send&amp;rdquo; requests to your app. So there&amp;rsquo;s no real HTTP request made, but rather a BrowserKit &lt;a href=&quot;https://github.com/symfony/browser-kit/blob/master/Request.php&quot;&gt;Request object&lt;/a&gt; with the required properties is passed to your framework&amp;rsquo;s (font-)controller.</source>
          <target state="translated">내부적으로 Codeception은 Symfony의 &lt;a href=&quot;https://symfony.com/doc/current/components/browser_kit.html&quot;&gt;BrowserKit&lt;/a&gt; 을 사용 하여 앱에 요청을 &quot;전송&quot;합니다. 따라서 실제 HTTP 요청은 없지만 필요한 속성이 있는 BrowserKit &lt;a href=&quot;https://github.com/symfony/browser-kit/blob/master/Request.php&quot;&gt;Request 객체&lt;/a&gt; 가 프레임 워크의 (font-) 컨트롤러에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="8e802de522ed181b680166c0cf2b1bfb340ea46e" translate="yes" xml:space="preserve">
          <source>Unit &amp;amp; Integration Tests</source>
          <target state="translated">단위 및 통합 테스트</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="69c9113ad75da6e23f23a276dff26e75c7de4dc5" translate="yes" xml:space="preserve">
          <source>Unit tests</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="093a6f59d989ca219c6df29d2f717dc0911e257a" translate="yes" xml:space="preserve">
          <source>Unit tests are focused around a single component of an application. All external dependencies for components should be replaced with test doubles.</source>
          <target state="translated">단위 테스트는 응용 프로그램의 단일 구성 요소에 중점을 둡니다. 구성 요소에 대한 모든 외부 종속성은 테스트 복식으로 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="79d8ccf694b57cc40db97182ed89c3723fa178fc" translate="yes" xml:space="preserve">
          <source>Unlike unit tests integration tests doesn&amp;rsquo;t require the code to be executed in isolation. That allows us to use database and other components inside a tests. To improve the testing experience modules can be used as in functional testing.</source>
          <target state="translated">단위 테스트와 달리 통합 테스트는 코드를 분리하여 실행할 필요가 없습니다. 이를 통해 테스트 내에서 데이터베이스 및 기타 구성 요소를 사용할 수 있습니다. 테스트 경험을 향상시키기 위해 기능 테스트에서와 같이 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c4bd6b731511260187edb0ff454a6385cdfb786" translate="yes" xml:space="preserve">
          <source>Unselect an option in the given select box.</source>
          <target state="translated">주어진 선택 상자에서 옵션을 선택 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="7c481ebe53fffafd89d12a9c690edf2fd7fa1529" translate="yes" xml:space="preserve">
          <source>Unsets cookie with the given name. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; in array passed as last argument.</source>
          <target state="translated">주어진 이름으로 쿠키를 설정 해제합니다. &lt;code&gt;domain&lt;/code&gt; , 마지막 인수로 전달 된 배열의 &lt;code&gt;path&lt;/code&gt; 와 같은 추가 쿠키 매개 변수를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed417b7548a070c53e2447ebd3a2c62b605cbc2c" translate="yes" xml:space="preserve">
          <source>Unticks a checkbox.</source>
          <target state="translated">확인란을 선택 취소합니다.</target>
        </trans-unit>
        <trans-unit id="d961c1bff4cf85c6a8926638334035036c37cedf" translate="yes" xml:space="preserve">
          <source>Update an SQL record into a database.</source>
          <target state="translated">SQL 레코드를 데이터베이스로 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="0afb34e6814e67d2abbef01e654b09e4ca91b72d" translate="yes" xml:space="preserve">
          <source>Uri of currently opened page.</source>
          <target state="translated">현재 열린 페이지의 Uri</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="2c0479bd4e810153542fd7b994858839c8e3b6a3" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;-use-vendor-bin&lt;/code&gt; is optional. This option will work for most Codeception projects, where Codeception is located in your &lt;code&gt;vendor/bin&lt;/code&gt; folder. But in case you are using a global Codeception installation for example, you wouldn&amp;rsquo;t use this option.</source>
          <target state="translated">의 사용 &lt;code&gt;-use-vendor-bin&lt;/code&gt; 선택 사항입니다. 이 옵션은 Codeception이 &lt;code&gt;vendor/bin&lt;/code&gt; 폴더 에있는 대부분의 Codeception 프로젝트에서 작동 합니다. 그러나 예를 들어 전역 Codeception 설치를 사용하는 경우이 옵션을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="64c1b824ca2650767bd47c3981870317f3986b9d" translate="yes" xml:space="preserve">
          <source>Use 3rd parameter to pass in custom &lt;code&gt;OutputInterface&lt;/code&gt;</source>
          <target state="translated">세 번째 매개 변수를 사용하여 사용자 정의 &lt;code&gt;OutputInterface&lt;/code&gt; 를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="ea76dd730931b0d28b89e1879d0ff390c608aed5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;module parameters&lt;/a&gt; to set the database credentials from environment variables or from application configuration files.</source>
          <target state="translated">사용 &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;모듈 매개 변수를&lt;/a&gt; 환경 변수 또는 응용 프로그램 구성 파일에서 데이터베이스 자격 증명을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8f17ad0a09d5bd4e7ede03bbab7690f19923257b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Generator&quot;&gt;Codeception generators&lt;/a&gt; to create other support classes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Generator&quot;&gt;Codeception 생성기&lt;/a&gt; 를 사용하여 다른 지원 클래스를 작성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa8713fa1dff2df9dbc86417ee5051118d9b5246" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Lib/Generator&quot;&gt;Codeception generators&lt;/a&gt; to create other support classes.</source>
          <target state="translated">사용 &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/4.0/src/Codeception/Lib/Generator&quot;&gt;Codeception 발전기는&lt;/a&gt; 다른 지원 클래스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f5fd178280c408178b73de22118aeb3247946b9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;modules/zf2&quot;&gt;the ZF2 module&lt;/a&gt; to run functional tests inside Zend Framework 2:</source>
          <target state="translated">&lt;a href=&quot;modules/zf2&quot;&gt;ZF2 모듈&lt;/a&gt; 을 사용 하여 Zend Framework 2 내에서 기능 테스트를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="427c9493a6d4b23580b9c6ab4db6eab72d2ed6f2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;\Codeception\Util\Xml::build()&lt;/code&gt; to create XmlBuilder instance.</source>
          <target state="translated">사용 &lt;code&gt;\Codeception\Util\Xml::build()&lt;/code&gt; XmlBuilder 인스턴스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97827f3f50242ca9ae282f3fd03834d57add2d26" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;createDirectoryFor&lt;/code&gt;, &lt;code&gt;createEmptyDirectory&lt;/code&gt; methods to create directories</source>
          <target state="translated">사용 &lt;code&gt;createDirectoryFor&lt;/code&gt; 는 , &lt;code&gt;createEmptyDirectory&lt;/code&gt; 방법은 디렉토리를 작성합니다</target>
        </trans-unit>
        <trans-unit id="c09e353912b0029ce897a5e31497b33ba357ee8c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;createHelper&lt;/code&gt;, &lt;code&gt;createActor&lt;/code&gt; methods to create helpers and actors.</source>
          <target state="translated">사용 &lt;code&gt;createHelper&lt;/code&gt; 는 , &lt;code&gt;createActor&lt;/code&gt; 의 방법은 헬퍼와 배우를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7843ecea53860c09514a940d6c48bf5554801a89" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sendSoapRequest&lt;/code&gt; method to define the body of your request.</source>
          <target state="translated">사용 &lt;code&gt;sendSoapRequest&lt;/code&gt; 의 방법은 요청의 본문을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b218af2f5bb8c27317a38e525e728eb392c4e6a1" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create a model. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 모델을 작성하십시오. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b12d404c7eeab51ca99fd927956583228852621" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create multiple models. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델을 작성하십시오. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="342d185470b1587e8cf4b294b51d8780265e8329" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to create multiple models. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델을 작성하십시오. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebf0625a741ab3e73c9ba5178a08a97036353639" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make a model instance. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 모델 인스턴스를 만듭니다. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73f275b2b14d20bd2b3109f98b2e23e597f5748e" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make multiple model instances. Can only be used with Laravel 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델 인스턴스를 만듭니다. Laravel 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="015b34f64fae6e607e867f495c0744b3f30b9f13" translate="yes" xml:space="preserve">
          <source>Use Laravel&amp;rsquo;s model factory to make multiple model instances. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Laravel의 모델 팩토리를 사용하여 여러 모델 인스턴스를 만듭니다. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0465b0c50dfe6c7d8972a5b914a263aa279bab36" translate="yes" xml:space="preserve">
          <source>Use Lumen&amp;rsquo;s model factory to create a model. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">Lumen의 모델 팩토리를 사용하여 모델을 작성하십시오. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccb60369b26233d201b8e50d5332338571574b9b" translate="yes" xml:space="preserve">
          <source>Use Lumen&amp;rsquo;s model factory to make a model instance. Can only be used with Lumen 5.1 and later.</source>
          <target state="translated">루멘의 모델 팩토리를 사용하여 모델 인스턴스를 만듭니다. Lumen 5.1 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77511f54cfe4f011fe04bd56b660d4623773432b" translate="yes" xml:space="preserve">
          <source>Use StepObjects when you have multiple areas of applications or multiple roles.</source>
          <target state="translated">여러 응용 프로그램 영역 또는 여러 역할이있는 경우 StepObjects를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="339889acfb48328c8fe4fdfa480caa4a7402239d" translate="yes" xml:space="preserve">
          <source>Use `\Codeception\Util\Xml::build()` to create XmlBuilder instance.</source>
          <target state="translated">`\ Codeception \ Util \ Xml :: build ()`를 사용하여 XmlBuilder 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d92c395228305ffcecdf6dc55917319aa1b87b9c" translate="yes" xml:space="preserve">
          <source>Use actor classes to set common actions which can be used accross a suite.</source>
          <target state="translated">액터 클래스를 사용하여 제품군 전체에서 사용할 수있는 공통 작업을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6c46596bf9954744ffd424fc4503dca0baf68d9f" translate="yes" xml:space="preserve">
          <source>Use it in Helpers or GroupObject or Extension classes:</source>
          <target state="translated">도우미, GroupObject 또는 확장 클래스에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4a2f73c017ebeda5cf163c6db1b1432ffe00ac2b" translate="yes" xml:space="preserve">
          <source>Use methods like &lt;code&gt;say&lt;/code&gt;, &lt;code&gt;saySuccess&lt;/code&gt;, &lt;code&gt;sayWarning&lt;/code&gt;, &lt;code&gt;sayError&lt;/code&gt;, &lt;code&gt;ask&lt;/code&gt;, to interact with a user.</source>
          <target state="translated">&lt;code&gt;say&lt;/code&gt; , &lt;code&gt;saySuccess&lt;/code&gt; , &lt;code&gt;sayWarning&lt;/code&gt; , &lt;code&gt;sayError&lt;/code&gt; , &lt;code&gt;ask&lt;/code&gt; 와 같은 메소드를 사용 하여 사용자와 상호 작용하십시오.</target>
        </trans-unit>
        <trans-unit id="26a207af94a6c3abe22a94cf6c19c79623319aaf" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;params&lt;/code&gt; section of the global configuration file &lt;code&gt;codeception.yml&lt;/code&gt; to specify how to load them. You can specify several sources for parameters to be loaded from.</source>
          <target state="translated">글로벌 구성 파일 &lt;code&gt;codeception.yml&lt;/code&gt; 의 &lt;code&gt;params&lt;/code&gt; 섹션을 사용하여 로드 방법을 지정하십시오. 매개 변수를로드 할 소스를 여러 개 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eabbc525e5028e36507476d1373362514ff3dc71" translate="yes" xml:space="preserve">
          <source>Use the below configuration to allow coverage mergers.</source>
          <target state="translated">커버리지 병합을 허용하려면 아래 구성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ce04b8cde9b8e2a386af3e1bb65f290f61fe8f2e" translate="yes" xml:space="preserve">
          <source>Use this method to check XML of valid structure is returned. This method does not use schema for validation. This method does not require path from root to match the structure.</source>
          <target state="translated">이 메소드를 사용하여 유효한 구조의 XML이 리턴되는지 확인하십시오. 이 방법은 유효성 검사에 스키마를 사용하지 않습니다. 이 방법은 구조와 일치하기 위해 루트에서 경로가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d0af43ff9579e2a10e4c820b5944b13fef975aa" translate="yes" xml:space="preserve">
          <source>Use to perform web acceptance tests with non-javascript browser.</source>
          <target state="translated">자바 스크립트가 아닌 브라우저로 웹 승인 테스트를 수행하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9d2950f71f19352163cf1fc111135a72c362c73e" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle&lt;/a&gt; to interact with your application over CURL. Module works over CURL and requires &lt;strong&gt;PHP CURL extension&lt;/strong&gt; to be enabled.</source>
          <target state="translated">&lt;a href=&quot;http://guzzlephp.org/&quot;&gt;Guzzle&lt;/a&gt; 을 사용 하여 CURL을 통해 응용 프로그램과 상호 작용합니다. 모듈은 CURL을 통해 작동하며 &lt;strong&gt;PHP CURL 확장&lt;/strong&gt; 을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="49a17468af0c2fc4b98867473ab4de4a50c232b6" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;config/container.php&lt;/code&gt; file by default.</source>
          <target state="translated">기본적으로 &lt;code&gt;config/container.php&lt;/code&gt; 파일을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="53604b949befccb2ce697597647fae371aefdae5" translate="yes" xml:space="preserve">
          <source>Using Codeception Docker image</source>
          <target state="translated">Codeception Docker 이미지 사용</target>
        </trans-unit>
        <trans-unit id="a82c49537bdd8af32ececbfce0d931d4c7952545" translate="yes" xml:space="preserve">
          <source>Using Inside Framework</source>
          <target state="translated">내부 프레임 워크 사용</target>
        </trans-unit>
        <trans-unit id="8b74d8a06cce7b65888ba4e8c7818fe0688bd9a8" translate="yes" xml:space="preserve">
          <source>Using Modules</source>
          <target state="translated">모듈 사용</target>
        </trans-unit>
        <trans-unit id="edd561d8b75ac9103b45a7fea602ea861769b973" translate="yes" xml:space="preserve">
          <source>Using id param inside prefix:</source>
          <target state="translated">접두사 안에 id param 사용하기 :</target>
        </trans-unit>
        <trans-unit id="9fd56293bce41aa2f336f882b719322f97000fa9" translate="yes" xml:space="preserve">
          <source>Using regular expressions, you can even run many different test methods from the same directory or class. For example, this will execute all acceptance tests from the &lt;code&gt;backend&lt;/code&gt; dir beginning with the word &amp;ldquo;login&amp;rdquo;:</source>
          <target state="translated">정규식을 사용하면 동일한 디렉토리 또는 클래스에서 다양한 테스트 방법을 실행할 수도 있습니다. 예를 들어 &quot;login&quot;이라는 단어로 시작 하는 &lt;code&gt;backend&lt;/code&gt; 디렉토리 에서 모든 승인 테스트를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="0d8f0980bee57007ff331ed1717e3eafde48959f" translate="yes" xml:space="preserve">
          <source>Usually, as soon as any assertion fails, further assertions of this test will be skipped. Sometimes you don&amp;rsquo;t want this - maybe you have a long-running test and you want it to run to the end. In this case, you can use conditional assertions. Each &lt;code&gt;see&lt;/code&gt; method has a corresponding &lt;code&gt;canSee&lt;/code&gt; method, and &lt;code&gt;dontSee&lt;/code&gt; has a &lt;code&gt;cantSee&lt;/code&gt; method:</source>
          <target state="translated">일반적으로 어설 션이 실패하면이 테스트의 추가 어설 션은 건너 뜁니다. 때때로 당신은 이것을 원하지 않습니다-아마도 당신은 오래 실행되는 테스트를 가지고 있고 당신이 그것을 끝까지 실행하기를 원할 것입니다. 이 경우 조건부 어설 션을 사용할 수 있습니다. 각 &lt;code&gt;see&lt;/code&gt; 메소드에는 해당 &lt;code&gt;canSee&lt;/code&gt; 메소드가 있으며 &lt;code&gt;dontSee&lt;/code&gt; 에는 &lt;code&gt;cantSee&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b3847359f8c907cdc41efd5dd7b2019aeffe9ae" translate="yes" xml:space="preserve">
          <source>Util Class: Autoload</source>
          <target state="translated">이용 클래스 : 자동로드</target>
        </trans-unit>
        <trans-unit id="1efa2bcc7a492c0e99c457748e377ea1cf59ed38" translate="yes" xml:space="preserve">
          <source>Util Class: Fixtures</source>
          <target state="translated">이용 클래스 : 비품</target>
        </trans-unit>
        <trans-unit id="557be4d90699fd937e7e6b156960541daec7b455" translate="yes" xml:space="preserve">
          <source>Util Class: HttpCode</source>
          <target state="translated">이용 클래스 : HttpCode</target>
        </trans-unit>
        <trans-unit id="66be33d34c9b2b0749977134996bfbcf1e44cea3" translate="yes" xml:space="preserve">
          <source>Util Class: JsonType</source>
          <target state="translated">이용 클래스 : JsonType</target>
        </trans-unit>
        <trans-unit id="42286bd888541d407d94f8dc5165f0680e083244" translate="yes" xml:space="preserve">
          <source>Util Class: Locator</source>
          <target state="translated">이용 클래스 : 로케이터</target>
        </trans-unit>
        <trans-unit id="8f89904bb314cd5d8d0f309a1c3307ebe92ad86c" translate="yes" xml:space="preserve">
          <source>Util Class: XmlBuilder</source>
          <target state="translated">이용 클래스 : XmlBuilder</target>
        </trans-unit>
        <trans-unit id="a9495c1eb40c0d8ee262c68c204eefb2c15744a2" translate="yes" xml:space="preserve">
          <source>Validate JSON structures</source>
          <target state="translated">JSON 구조 확인</target>
        </trans-unit>
        <trans-unit id="8bb82da3a52d668c56c1f544fe8b2a816d883e4b" translate="yes" xml:space="preserve">
          <source>Validates and prints Codeception config. Use it do debug Yaml configs</source>
          <target state="translated">Codeception 구성을 확인하고 인쇄합니다. Yaml 구성을 디버그하는 데 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b9ee614409f809fdd0214192be30356291c015c9" translate="yes" xml:space="preserve">
          <source>Validates current config for required fields and required packages.</source>
          <target state="translated">필수 필드 및 필수 패키지에 대한 현재 구성의 유효성을 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="962aee5c9adbe4ad1b2cd98fed700b4073e03347" translate="yes" xml:space="preserve">
          <source>Validating Data JSON Responses</source>
          <target state="translated">데이터 JSON 응답 검증</target>
        </trans-unit>
        <trans-unit id="172c0b33f1a892e80af1523ad3f16ab63c0bbb75" translate="yes" xml:space="preserve">
          <source>Variable names are being taken from config and DSN which has a &lt;code&gt;keyword=value&lt;/code&gt; format, so you should expect to have a variable named as the keyword with the full value inside it.</source>
          <target state="translated">변수 이름은 &lt;code&gt;keyword=value&lt;/code&gt; 형식 을 가진 config 및 DSN에서 가져 오므 로 전체 값을 가진 키워드로 이름이 지정된 변수가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="42a926a04a5ee86f7e230a7e3a6330aa4f0dbe5f" translate="yes" xml:space="preserve">
          <source>Verbosity modes:</source>
          <target state="translated">상세 모드 :</target>
        </trans-unit>
        <trans-unit id="34dbd5c4c8a64801891d960b57133767c3104fe7" translate="yes" xml:space="preserve">
          <source>Wait</source>
          <target state="translated">Wait</target>
        </trans-unit>
        <trans-unit id="2b5b11e8530c71484f706e91f77fbd5465fc7b0c" translate="yes" xml:space="preserve">
          <source>Wait and Act</source>
          <target state="translated">기다려 행동</target>
        </trans-unit>
        <trans-unit id="9b83705efd4960cd9723d3f58a955ea8e6255767" translate="yes" xml:space="preserve">
          <source>Wait for $timeout seconds.</source>
          <target state="translated">$ timeout 초 동안 기다립니다.</target>
        </trans-unit>
        <trans-unit id="d4acd5d8867fc97d7a5c138d0b0eed4100c8a330" translate="yes" xml:space="preserve">
          <source>Waits for element and runs a sequence of actions inside its context. Actions can be defined with array, callback, or &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; instance.</source>
          <target state="translated">요소를 기다리고 컨텍스트 내에서 일련의 조치를 실행합니다. 액션은 배열, 콜백 또는 &lt;code&gt;Codeception\Util\ActionSequence&lt;/code&gt; 인스턴스 로 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="052ce80219d5e5d1863b7e16a0e5b24faf1628db" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for an element to appear on the page. If the element doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">요소가 페이지에 나타날 때까지 최대 $ timeout 초 동안 기다립니다. 요소가 나타나지 않으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7166b40763dcca7df03b806ec68de9862470f667" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to be clickable. If element doesn&amp;rsquo;t become clickable, a timeout exception is thrown.</source>
          <target state="translated">지정된 요소를 클릭 할 수있을 때까지 최대 $ timeout 초 동안 기다립니다. 요소를 클릭 할 수 없으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a75b7f53ad4c0021f596671919a05566cafab59c" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to be visible on the page. If element doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">주어진 요소가 페이지에 표시 될 때까지 최대 $ timeout 초 동안 대기합니다. 요소가 나타나지 않으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ea81dc72a0289cac2d92c622bc6e5447009f3eb" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to become invisible. If element stays visible, a timeout exception is thrown.</source>
          <target state="translated">주어진 요소가 보이지 않을 때까지 최대 $ timeout 초 동안 기다립니다. 요소가 계속 표시되면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="638800b34a2aa2c22d25bda1b9d9d287712a8b2b" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given element to change. Element &amp;ldquo;change&amp;rdquo; is determined by a callback function which is called repeatedly until the return value evaluates to true.</source>
          <target state="translated">주어진 요소가 변경 될 때까지 최대 $ timeout 초를 기다립니다. 요소 &quot;change&quot;는 반환 값이 true로 평가 될 때까지 반복적으로 호출되는 콜백 함수에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="4522e2bf6c2b32c62e65115a165edc86fd643338" translate="yes" xml:space="preserve">
          <source>Waits up to $timeout seconds for the given string to appear on the page.</source>
          <target state="translated">주어진 문자열이 페이지에 나타날 때까지 최대 $ timeout 초 동안 기다립니다.</target>
        </trans-unit>
        <trans-unit id="c292ecff522efe9defa16b9c8a1b9521ff69da18" translate="yes" xml:space="preserve">
          <source>Warning. Using PHAR file and composer in the same project can cause unexpected errors.</source>
          <target state="translated">경고. 동일한 프로젝트에서 PHAR 파일과 작성기를 사용하면 예기치 않은 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="746f1a7e0c9a5843efa70bf48435ef8cc9ecbe40" translate="yes" xml:space="preserve">
          <source>We also have other useful commands to perform checks. Please note that they all start with the &lt;code&gt;see&lt;/code&gt; prefix:</source>
          <target state="translated">검사를 수행하는 다른 유용한 명령도 있습니다. 그것들은 모두 &lt;code&gt;see&lt;/code&gt; 접두사로 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="08a4e6b1466883421ce109dcac434f4dd6c747b9" translate="yes" xml:space="preserve">
          <source>We are using &lt;code&gt;Codeception\Util\Xml&lt;/code&gt; class which allows us to build XML structures in a clean manner. The &lt;code&gt;toXml&lt;/code&gt; method may accept a string or array and returns \DOMDocument instance. If your XML contains attributes and so can&amp;rsquo;t be represented as a PHP array you can create XML using the &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; class. We will take a look at it a bit more in next section.</source>
          <target state="translated">우리가 사용하는 &lt;code&gt;Codeception\Util\Xml&lt;/code&gt; 우리가 깨끗한 방식으로 XML 구조를 구축 할 수 있도록 클래스를. &lt;code&gt;toXml&lt;/code&gt; 방법은 문자열이나 배열을 반환 \ DOMDocument를 인스턴스를 수용 할 수있다. XML에 속성이 포함되어 있고 PHP 배열로 표현할 수없는 경우 &lt;a href=&quot;reference/xmlbuilder&quot;&gt;XmlBuilder&lt;/a&gt; 클래스를 사용하여 XML을 만들 수 있습니다 . 다음 섹션에서 좀 더 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b8d0a302cb7dfcf3c10f18822cf57ad1698f6bb5" translate="yes" xml:space="preserve">
          <source>We can click links to open web pages:</source>
          <target state="translated">웹 페이지를 열려면 링크를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="ecaf768c6d4fc9557d651a87e8eaaa21e650dd3e" translate="yes" xml:space="preserve">
          <source>We can define different databases for different processes. This can be done using &lt;a href=&quot;07-advancedusage#Environments&quot;&gt;Environments&lt;/a&gt;. Let&amp;rsquo;s define 5 new environments in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">프로세스마다 다른 데이터베이스를 정의 할 수 있습니다. &lt;a href=&quot;07-advancedusage#Environments&quot;&gt;환경을&lt;/a&gt; 사용하여 수행 할 수 있습니다 . 의는 5 새로운 환경을 정의 할 수 &lt;code&gt;acceptance.suite.yml&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="7e85f65f65e534f3089143c188e991fea85242eb" translate="yes" xml:space="preserve">
          <source>We can dry-run (or run) our feature file to see that Given/When/Then are expanded with substeps:</source>
          <target state="translated">Given / When / Then이 하위 단계로 확장되었는지 확인하기 위해 기능 파일을 드라 이런 (또는 실행) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b35049e326c23be497c8e28700899bfc4cb92b0d" translate="yes" xml:space="preserve">
          <source>We can submit forms as well:</source>
          <target state="translated">양식도 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="066fa4ab7752275e2612f8301d16d5c6662650d0" translate="yes" xml:space="preserve">
          <source>We can test this scenario by executing it in dry-run mode. In this mode test won&amp;rsquo;t be executed (actually, we didn&amp;rsquo;t define any step for it, so it won&amp;rsquo;t be executed in any case).</source>
          <target state="translated">드라 이런 모드에서이 시나리오를 실행하여 테스트 할 수 있습니다. 이 모드에서는 테스트가 실행되지 않습니다 (실제로 어떤 단계도 정의하지 않았으므로 어떤 경우에도 실행되지 않습니다).</target>
        </trans-unit>
        <trans-unit id="ef0a8409eb1de1caec49d10c582cb0298eb47036" translate="yes" xml:space="preserve">
          <source>We can try to write such simple story:</source>
          <target state="translated">우리는 다음과 같은 간단한 이야기를 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25000bbf6ae0063dcc6aabfc7ecea74c2f32dd44" translate="yes" xml:space="preserve">
          <source>We can use HTTP code constants from &lt;code&gt;Codeception\Util\HttpCode&lt;/code&gt; instead of numeric values to check response code in &lt;code&gt;seeResponseCodeIs&lt;/code&gt; and &lt;code&gt;dontSeeResponseCodeIs&lt;/code&gt; methods.</source>
          <target state="translated">숫자 값 대신 &lt;code&gt;Codeception\Util\HttpCode&lt;/code&gt; HTTP 코드 상수를 사용 하여 &lt;code&gt;seeResponseCodeIs&lt;/code&gt; 및 &lt;code&gt;dontSeeResponseCodeIs&lt;/code&gt; 메소드의 응답 코드를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2460b44966389092f2bd975a1d07a0525c60cd19" translate="yes" xml:space="preserve">
          <source>We have &lt;code&gt;_before&lt;/code&gt; and &lt;code&gt;_after&lt;/code&gt; methods to run some common actions before and after a test. And we have a placeholder action &lt;code&gt;tryToTest&lt;/code&gt; which we need to implement. If we try to test a signin process it&amp;rsquo;s a good start to test a successful signin. Let&amp;rsquo;s rename this method to &lt;code&gt;signInSuccessfully&lt;/code&gt;.</source>
          <target state="translated">우리는이 &lt;code&gt;_before&lt;/code&gt; 및 &lt;code&gt;_after&lt;/code&gt; 전 테스트 후 몇 가지 일반적인 작업을 실행하는 방법을. 그리고 구현해야하는 자리 표시 자 작업 &lt;code&gt;tryToTest&lt;/code&gt; 가 있습니다. 로그인 프로세스를 테스트하려고하면 성공적인 로그인을 테스트하는 것이 좋습니다. 이 메소드의 이름을 &lt;code&gt;signInSuccessfully&lt;/code&gt; 로 바꾸자 .</target>
        </trans-unit>
        <trans-unit id="015400e5ef6f87e5cb4bd1c52ec09af1e7d3704e" translate="yes" xml:space="preserve">
          <source>We have already demonstrated this in a previous example where we accessed the Entity Manager from a Doctrine2 module:</source>
          <target state="translated">우리는 Doctrine2 모듈에서 Entity Manager에 액세스 한 이전 예제에서 이미 이것을 증명했습니다.</target>
        </trans-unit>
        <trans-unit id="228bf32f37a287c9d1fec382bb668954ac560904" translate="yes" xml:space="preserve">
          <source>We have taken a look into the Codeception structure. Most of the things you need were already generated by the &lt;code&gt;bootstrap&lt;/code&gt; command. After you have reviewed the basic concepts and configurations, you can start writing your first scenario.</source>
          <target state="translated">Codeception 구조를 살펴 보았습니다. 필요한 것의 대부분은 이미 &lt;code&gt;bootstrap&lt;/code&gt; 명령으로 생성되었습니다 . 기본 개념 및 구성을 검토 한 후 첫 번째 시나리오 작성을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="335e28c45160c43b5710d51a34a79750d36189b4" translate="yes" xml:space="preserve">
          <source>We included the Laravel5 module the same way we did for functional testing. Let&amp;rsquo;s see how we can use it for integration tests:</source>
          <target state="translated">기능 테스트와 동일한 방식으로 Laravel5 모듈을 포함 시켰습니다. 통합 테스트에 어떻게 사용할 수 있는지 보자.</target>
        </trans-unit>
        <trans-unit id="95a235ca436c2bbb3678abb93635f3fdefcc5021" translate="yes" xml:space="preserve">
          <source>We need to add some new lines to &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;acceptance.suite.yml&lt;/code&gt; 새로운 줄을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="851c8ee512612a9b7a90b1fcc84ab03f47ba7d91" translate="yes" xml:space="preserve">
          <source>We need to define build steps. The most simple setup may look like this:</source>
          <target state="translated">빌드 단계를 정의해야합니다. 가장 간단한 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c6a434b7a6c5e1d2283f47e5c2af8f92734ef731" translate="yes" xml:space="preserve">
          <source>We need to specify the &lt;code&gt;url&lt;/code&gt; parameter in the acceptance suite config:</source>
          <target state="translated">수용 스위트 구성에서 &lt;code&gt;url&lt;/code&gt; 매개 변수 를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9f791ef4254ae107df656e2433ecd82a612e4b1a" translate="yes" xml:space="preserve">
          <source>We prepared a sample config with codeception, web server, database, and selenium with Chrome to be executed together.</source>
          <target state="translated">우리는 함께 실행할 Codeception, 웹 서버, 데이터베이스 및 셀레늄이 포함 된 샘플 구성을 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="4899b6be6f25a9d1e4c9bbae4264a5bcf05a33f7" translate="yes" xml:space="preserve">
          <source>We propose to perform those steps using a task runner. In this guide we will use &lt;a href=&quot;http://robo.li&quot;&gt;&lt;strong&gt;Robo&lt;/strong&gt;&lt;/a&gt; task runner. It is a modern PHP task runner that is very easy to use. It uses &lt;a href=&quot;https://symfony.com/doc/current/components/process.html&quot;&gt;Symfony Process&lt;/a&gt; to spawn background and parallel processes. Just what we need for the step 2! What about steps 1 and 3? We have created robo &lt;a href=&quot;https://github.com/Codeception/robo-paracept&quot;&gt;tasks&lt;/a&gt; for splitting tests into groups and merging resulting JUnit XML reports.</source>
          <target state="translated">작업 러너를 사용하여 이러한 단계를 수행 할 것을 제안합니다. 이 가이드에서는 &lt;a href=&quot;http://robo.li&quot;&gt;&lt;strong&gt;Robo&lt;/strong&gt;&lt;/a&gt; 작업 러너를 사용합니다. 사용하기 쉬운 최신 PHP 작업 러너입니다. &lt;a href=&quot;https://symfony.com/doc/current/components/process.html&quot;&gt;Symfony Process&lt;/a&gt; 를 사용 하여 백그라운드 및 병렬 프로세스 를 생성합니다. 2 단계에 필요한 것! 1 단계와 3 단계는 어떻습니까? 테스트를 그룹으로 나누고 결과 JUnit XML 보고서를 병합하기위한 robo &lt;a href=&quot;https://github.com/Codeception/robo-paracept&quot;&gt;태스크&lt;/a&gt; 를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="021ed2ff3be23aafe143a76f36569602110dc6f0" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;params&lt;/a&gt; to provide authorization credentials.</source>
          <target state="translated">권한 부여 자격 증명을 제공하려면 &lt;a href=&quot;06-modulesandhelpers#Dynamic-Configuration-With-Params&quot;&gt;params&lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7e715b7d3c62535db72a1d05c9fee9c0c03a2ebb" translate="yes" xml:space="preserve">
          <source>We should see a step-by-step report on the performed actions:</source>
          <target state="translated">수행 된 작업에 대한 단계별 보고서가 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c991be81acea56ac976a79ae61660a24204cbc2b" translate="yes" xml:space="preserve">
          <source>We should start by creating a test with the next command:</source>
          <target state="translated">다음 명령으로 테스트를 작성하여 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="11b28ad8a3030bf3aa2742e21119881003659230" translate="yes" xml:space="preserve">
          <source>We will assume that all actions starting with &lt;code&gt;am&lt;/code&gt; and &lt;code&gt;have&lt;/code&gt; describe the initial environment. The &lt;code&gt;amOnPage&lt;/code&gt; action sets the starting point of a test to the &lt;code&gt;/login&lt;/code&gt; page.</source>
          <target state="translated">우리는 모든 작업으로 시작하는 것으로 가정합니다 &lt;code&gt;am&lt;/code&gt; 과 &lt;code&gt;have&lt;/code&gt; 초기 환경을 설명합니다. &lt;code&gt;amOnPage&lt;/code&gt; 의 동작은에 테스트의 시작 지점을 설정합니다 &lt;code&gt;/login&lt;/code&gt; 페이지를.</target>
        </trans-unit>
        <trans-unit id="fe408f86092303c584e7e38c939926d337e610f6" translate="yes" xml:space="preserve">
          <source>We will put all the api tests there.</source>
          <target state="translated">우리는 모든 API 테스트를 거기에 넣을 것입니다.</target>
        </trans-unit>
        <trans-unit id="e066930bd9bba98fa8a61e6dae0a402c24830666" translate="yes" xml:space="preserve">
          <source>We will start writing our first acceptance tests with PhpBrowser.</source>
          <target state="translated">PhpBrowser로 첫 번째 수락 테스트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="964fdf4a0607fa55a48cbb0b9fff2e31bb2043f3" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll assume that we have a &amp;lsquo;login&amp;rsquo; page where we get authenticated by providing a username and password. Then we are sent to a user page, where we see the text &lt;code&gt;Hello, %username%&lt;/code&gt;. Let&amp;rsquo;s look at how this scenario is written in Codeception:</source>
          <target state="translated">사용자 이름과 비밀번호를 제공하여 인증을받는 '로그인'페이지가 있다고 가정합니다. 그런 다음 사용자 페이지로 이동합니다. 여기에 &lt;code&gt;Hello, %username%&lt;/code&gt; . Codeception에서이 시나리오를 작성하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="07e6ae07934ea1fa6988b1c869172b3f91e03b3d" translate="yes" xml:space="preserve">
          <source>Web Services</source>
          <target state="translated">웹 서비스</target>
        </trans-unit>
        <trans-unit id="bda2d68e20711107d45980e7009b8c2207fc908c" translate="yes" xml:space="preserve">
          <source>WebDriver</source>
          <target state="translated">WebDriver</target>
        </trans-unit>
        <trans-unit id="0694e89f039781417567e7972d88ce4e0d2a879e" translate="yes" xml:space="preserve">
          <source>WebDriver module provides advanced methods for the browser session, however, they can only be used from Helpers.</source>
          <target state="translated">WebDriver 모듈은 브라우저 세션에 대한 고급 방법을 제공하지만 도우미에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1679a3f1c38a9516b243a2cda8db5d96053b153d" translate="yes" xml:space="preserve">
          <source>WebDriver module returns &lt;code&gt;Facebook\WebDriver\Remote\RemoteWebElement&lt;/code&gt; instances PhpBrowser and Framework modules return &lt;code&gt;Symfony\Component\DomCrawler\Crawler&lt;/code&gt; instances</source>
          <target state="translated">WebDriver 모듈은 &lt;code&gt;Facebook\WebDriver\Remote\RemoteWebElement&lt;/code&gt; 인스턴스를 반환 PhpBrowser 및 프레임 워크 모듈은 &lt;code&gt;Symfony\Component\DomCrawler\Crawler&lt;/code&gt; 인스턴스를 반환</target>
        </trans-unit>
        <trans-unit id="a314b5bc5779810b413145040a4500fb4f600869" translate="yes" xml:space="preserve">
          <source>WebDriver::_backupSession</source>
          <target state="translated">WebDriver::_backupSession</target>
        </trans-unit>
        <trans-unit id="fb93a23623f2a8af4cbd4032cc5df307c499f2cd" translate="yes" xml:space="preserve">
          <source>WebDriver::_capabilities</source>
          <target state="translated">WebDriver::_capabilities</target>
        </trans-unit>
        <trans-unit id="48040cbc91d093a0d233efee43d3329ccee19844" translate="yes" xml:space="preserve">
          <source>WebDriver::_closeSession</source>
          <target state="translated">WebDriver::_closeSession</target>
        </trans-unit>
        <trans-unit id="0297d85d7f215534bc6c5131cc58158a2e11941c" translate="yes" xml:space="preserve">
          <source>WebDriver::_findClickable</source>
          <target state="translated">WebDriver::_findClickable</target>
        </trans-unit>
        <trans-unit id="5f3393839a56bcebb5c1580647e9f6ceb707a88c" translate="yes" xml:space="preserve">
          <source>WebDriver::_findElements</source>
          <target state="translated">WebDriver::_findElements</target>
        </trans-unit>
        <trans-unit id="c457a48ab4c35826401cae3c38f64456a1199a35" translate="yes" xml:space="preserve">
          <source>WebDriver::_getCurrentUri</source>
          <target state="translated">WebDriver::_getCurrentUri</target>
        </trans-unit>
        <trans-unit id="79efeeafef6bd6dbf99aaad7ed4e7ab68dcd4b83" translate="yes" xml:space="preserve">
          <source>WebDriver::_getUrl</source>
          <target state="translated">WebDriver::_getUrl</target>
        </trans-unit>
        <trans-unit id="6b2afaaa774d5aacf79d9010a6af12b241567ab4" translate="yes" xml:space="preserve">
          <source>WebDriver::_initializeSession</source>
          <target state="translated">WebDriver::_initializeSession</target>
        </trans-unit>
        <trans-unit id="19c5c43d9312244287e1449dcff3be2ff856d346" translate="yes" xml:space="preserve">
          <source>WebDriver::_loadSession</source>
          <target state="translated">WebDriver::_loadSession</target>
        </trans-unit>
        <trans-unit id="686eb748c19dd9126f0416286c5f1a934e49d52b" translate="yes" xml:space="preserve">
          <source>WebDriver::_restart</source>
          <target state="translated">WebDriver::_restart</target>
        </trans-unit>
        <trans-unit id="839d65c8dae1ef76a6e64992c0637b34e68a4fdc" translate="yes" xml:space="preserve">
          <source>WebDriver::_savePageSource</source>
          <target state="translated">WebDriver::_savePageSource</target>
        </trans-unit>
        <trans-unit id="d23193135f8cc8242eeff77137f5221200307783" translate="yes" xml:space="preserve">
          <source>WebDriver::_saveScreenshot</source>
          <target state="translated">WebDriver::_saveScreenshot</target>
        </trans-unit>
        <trans-unit id="008d864b851a5f934db75e257ec873d4759c2f9c" translate="yes" xml:space="preserve">
          <source>WebDriver::acceptPopup</source>
          <target state="translated">WebDriver::acceptPopup</target>
        </trans-unit>
        <trans-unit id="d003d0f16e9f5b94b36906a3578e71d329c0d69e" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnPage</source>
          <target state="translated">WebDriver::amOnPage</target>
        </trans-unit>
        <trans-unit id="81e7d2dd66dea4c2f42e9f2c38c7b99b70a6f938" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnSubdomain</source>
          <target state="translated">WebDriver::amOnSubdomain</target>
        </trans-unit>
        <trans-unit id="9fd8fe0f0ec9cc7cadf85604df217c53d328e9fc" translate="yes" xml:space="preserve">
          <source>WebDriver::amOnUrl</source>
          <target state="translated">WebDriver::amOnUrl</target>
        </trans-unit>
        <trans-unit id="50d164521b2aeaec38abc7c0997d9eccdee55f5b" translate="yes" xml:space="preserve">
          <source>WebDriver::appendField</source>
          <target state="translated">WebDriver::appendField</target>
        </trans-unit>
        <trans-unit id="678f72b79cf04e8ffef718e61be16926ac59f415" translate="yes" xml:space="preserve">
          <source>WebDriver::attachFile</source>
          <target state="translated">WebDriver::attachFile</target>
        </trans-unit>
        <trans-unit id="bc59e14cabf993ec2f9918e4518bb137f7cd1876" translate="yes" xml:space="preserve">
          <source>WebDriver::cancelPopup</source>
          <target state="translated">WebDriver::cancelPopup</target>
        </trans-unit>
        <trans-unit id="199e459b4d61ea7921c24d58fe131c0d6efc645c" translate="yes" xml:space="preserve">
          <source>WebDriver::checkOption</source>
          <target state="translated">WebDriver::checkOption</target>
        </trans-unit>
        <trans-unit id="c716de3e5b0c5b5b659d6d9cb216c62562e04bd2" translate="yes" xml:space="preserve">
          <source>WebDriver::clearField</source>
          <target state="translated">WebDriver::clearField</target>
        </trans-unit>
        <trans-unit id="36cad5609be0127eec8d60b50bf1b5451ce5e3b2" translate="yes" xml:space="preserve">
          <source>WebDriver::click</source>
          <target state="translated">WebDriver::click</target>
        </trans-unit>
        <trans-unit id="a0466133d340a040163480e443f3c44f9991730c" translate="yes" xml:space="preserve">
          <source>WebDriver::clickWithLeftButton</source>
          <target state="translated">WebDriver::clickWithLeftButton</target>
        </trans-unit>
        <trans-unit id="91f72d22e895d407d8d5ff738fcc76b2475a4c2f" translate="yes" xml:space="preserve">
          <source>WebDriver::clickWithRightButton</source>
          <target state="translated">WebDriver::clickWithRightButton</target>
        </trans-unit>
        <trans-unit id="fe1879011f4e647dbb819ca4b6edd014bbbbd2e9" translate="yes" xml:space="preserve">
          <source>WebDriver::closeTab</source>
          <target state="translated">WebDriver::closeTab</target>
        </trans-unit>
        <trans-unit id="4fc506908eb99949cfa3e84605f1fa4d9430e459" translate="yes" xml:space="preserve">
          <source>WebDriver::debugWebDriverLogs</source>
          <target state="translated">WebDriver::debugWebDriverLogs</target>
        </trans-unit>
        <trans-unit id="c883ec628fe2ab6d2a3c24e7756cb146b28f977e" translate="yes" xml:space="preserve">
          <source>WebDriver::deleteSessionSnapshot</source>
          <target state="translated">WebDriver::deleteSessionSnapshot</target>
        </trans-unit>
        <trans-unit id="f5c6177f6063e4edb07cded27f3471f244a8c29f" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSee</source>
          <target state="translated">WebDriver::dontSee</target>
        </trans-unit>
        <trans-unit id="b7c5b438b55cbeee8df6ef0079c58d8b43b53383" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCheckboxIsChecked</source>
          <target state="translated">WebDriver::dontSeeCheckboxIsChecked</target>
        </trans-unit>
        <trans-unit id="58581affed8ad73f8e411a4f93122a5bd79cbda3" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCookie</source>
          <target state="translated">WebDriver::dontSeeCookie</target>
        </trans-unit>
        <trans-unit id="5689d787dcf379b07a364e99030a71aea8581b3e" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCurrentUrlEquals</source>
          <target state="translated">WebDriver::dontSeeCurrentUrlEquals</target>
        </trans-unit>
        <trans-unit id="3739886ef8ff8ae198c6e2267ecb5f11796be8fe" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeCurrentUrlMatches</source>
          <target state="translated">WebDriver::dontSeeCurrentUrlMatches</target>
        </trans-unit>
        <trans-unit id="8c399e2909e4562684c671ec5eb5266e5fa94ffb" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeElement</source>
          <target state="translated">WebDriver::dontSeeElement</target>
        </trans-unit>
        <trans-unit id="bc93ef6f759dab0a6c0d996c1fcc7ea1cd9e9819" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeElementInDOM</source>
          <target state="translated">WebDriver::dontSeeElementInDOM</target>
        </trans-unit>
        <trans-unit id="a56b1d04971cc466dfb5c81f22d50e20d0211ed1" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInCurrentUrl</source>
          <target state="translated">WebDriver::dontSeeInCurrentUrl</target>
        </trans-unit>
        <trans-unit id="f710c95e319335cc377b06f6c2dd4ed07105ecd4" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInField</source>
          <target state="translated">WebDriver::dontSeeInField</target>
        </trans-unit>
        <trans-unit id="8da638e4806e5b3465ddb73cb50aaf754bdc8673" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInFormFields</source>
          <target state="translated">WebDriver::dontSeeInFormFields</target>
        </trans-unit>
        <trans-unit id="28347c0638ced47689db9fa78d81ddf7d60b065a" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInPageSource</source>
          <target state="translated">WebDriver::dontSeeInPageSource</target>
        </trans-unit>
        <trans-unit id="4c0327bb29bde774e7377285b1ebf5fbec3d4bac" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInPopup</source>
          <target state="translated">WebDriver::dontSeeInPopup</target>
        </trans-unit>
        <trans-unit id="bcaa5815c7fcfc9d25499cddade40330de4b897e" translate="yes" xml:space="preserve">
          <source>WebDriver::dontSeeInSource</source>
          <target state="translated">WebDriver::dontSeeInSource</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
