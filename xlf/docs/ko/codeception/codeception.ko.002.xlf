<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeception">
    <body>
      <group id="codeception">
        <trans-unit id="c1a82582410e2d5f53c401caa9870a9c8c01e10c" translate="yes" xml:space="preserve">
          <source>A typical unit test may look like this:</source>
          <target state="translated">일반적인 단위 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e1dfb1f2808271c12e7ea191da374509e87dc519" translate="yes" xml:space="preserve">
          <source>A very similar approach can be used for all frameworks that have an ORM implementing the ActiveRecord pattern. In Yii2 and Phalcon, the methods &lt;code&gt;haveRecord&lt;/code&gt;, &lt;code&gt;seeRecord&lt;/code&gt;, &lt;code&gt;dontSeeRecord&lt;/code&gt; work in the same way. They also should be included by specifying &lt;code&gt;part: ORM&lt;/code&gt; in order to not use the functional testing actions.</source>
          <target state="translated">ActiveRecord 패턴을 구현하는 ORM이있는 모든 프레임 워크에 대해 매우 유사한 접근 방식을 사용할 수 있습니다. Yii2와 Phalcon에서 &lt;code&gt;haveRecord&lt;/code&gt; , &lt;code&gt;seeRecord&lt;/code&gt; , &lt;code&gt;dontSeeRecord&lt;/code&gt; 메소드 는 동일한 방식으로 작동합니다. 기능 테스트 조치를 사용하지 않으려면 &lt;code&gt;part: ORM&lt;/code&gt; 을 지정하여 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="487f962fe6de35c8a28b288ebf7e315cf0f9fbde" translate="yes" xml:space="preserve">
          <source>A/B Testing</source>
          <target state="translated">A / B 테스트</target>
        </trans-unit>
        <trans-unit id="4971df4d6f2b59b3f5a172b0d6b132c45fc9b9a0" translate="yes" xml:space="preserve">
          <source>A/B testing is disabled by default. To enable it you should add corresponding step decorators to suite config:</source>
          <target state="translated">A / B 테스트는 기본적으로 비활성화되어 있습니다. 이를 활성화하려면 스위트 구성에 해당 단계 데코레이터를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="606feaae42d51a725e610a7a30629b752ee3608c" translate="yes" xml:space="preserve">
          <source>AMQP</source>
          <target state="translated">AMQP</target>
        </trans-unit>
        <trans-unit id="5067238b4c7df281598f837414bc6b333912670e" translate="yes" xml:space="preserve">
          <source>AMQP::bindQueueToExchange</source>
          <target state="translated">AMQP::bindQueueToExchange</target>
        </trans-unit>
        <trans-unit id="959641de50ac06a2d0e06fcea599fdad6b7ac512" translate="yes" xml:space="preserve">
          <source>AMQP::declareExchange</source>
          <target state="translated">AMQP::declareExchange</target>
        </trans-unit>
        <trans-unit id="bc4112c9ecf33214ada2ee687339c2ef4068852f" translate="yes" xml:space="preserve">
          <source>AMQP::declareQueue</source>
          <target state="translated">AMQP::declareQueue</target>
        </trans-unit>
        <trans-unit id="463bb2af02c762369ff1b75f9c9edebbd97ff84b" translate="yes" xml:space="preserve">
          <source>AMQP::dontSeeQueueIsEmpty</source>
          <target state="translated">AMQP::dontSeeQueueIsEmpty</target>
        </trans-unit>
        <trans-unit id="a0afb00c55d85af95df472a3fa905e5c61233041" translate="yes" xml:space="preserve">
          <source>AMQP::grabMessageFromQueue</source>
          <target state="translated">AMQP::grabMessageFromQueue</target>
        </trans-unit>
        <trans-unit id="f2bd3413571fd13eb044c5259f976426cfb4f65f" translate="yes" xml:space="preserve">
          <source>AMQP::purgeAllQueues</source>
          <target state="translated">AMQP::purgeAllQueues</target>
        </trans-unit>
        <trans-unit id="7caf6aa230df304671a5b3fe2eff4d2739fc8081" translate="yes" xml:space="preserve">
          <source>AMQP::purgeQueue</source>
          <target state="translated">AMQP::purgeQueue</target>
        </trans-unit>
        <trans-unit id="131669c347bbcd8e8924f884f6207273485af3b1" translate="yes" xml:space="preserve">
          <source>AMQP::pushToExchange</source>
          <target state="translated">AMQP::pushToExchange</target>
        </trans-unit>
        <trans-unit id="a4151e1d8fd845f61f1111bd0a2bb094d697e563" translate="yes" xml:space="preserve">
          <source>AMQP::pushToQueue</source>
          <target state="translated">AMQP::pushToQueue</target>
        </trans-unit>
        <trans-unit id="bbf41c91cb02fb8da1626385431550fccb4b8500" translate="yes" xml:space="preserve">
          <source>AMQP::scheduleQueueCleanup</source>
          <target state="translated">AMQP::scheduleQueueCleanup</target>
        </trans-unit>
        <trans-unit id="1746f31a3b6a849366148e733dd7cb645571efb9" translate="yes" xml:space="preserve">
          <source>AMQP::seeMessageInQueueContainsText</source>
          <target state="translated">AMQP::seeMessageInQueueContainsText</target>
        </trans-unit>
        <trans-unit id="aae125969a066872d51b14e77b792e99c4eb5698" translate="yes" xml:space="preserve">
          <source>AMQP::seeNumberOfMessagesInQueue</source>
          <target state="translated">AMQP::seeNumberOfMessagesInQueue</target>
        </trans-unit>
        <trans-unit id="9684b51add39de8fa283e39c7108af6e95c20904" translate="yes" xml:space="preserve">
          <source>AMQP::seeQueueIsEmpty</source>
          <target state="translated">AMQP::seeQueueIsEmpty</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="6a2a48a5b314bd981d066d0d09f7166fa56daea0" translate="yes" xml:space="preserve">
          <source>API Testing</source>
          <target state="translated">API 테스트</target>
        </trans-unit>
        <trans-unit id="430d8803d1294cf2ddb2da04b5d80e3870c523dd" translate="yes" xml:space="preserve">
          <source>API tests can be functional and be executed using Symfony, Laravel5, Zend, or any other framework module. You will need slightly update configuration for it:</source>
          <target state="translated">API 테스트는 기능적이고 Symfony, Laravel5, Zend 또는 기타 프레임 워크 모듈을 사용하여 실행할 수 있습니다. 구성을 약간 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="757aaccbcdbcbba6ab93cfaa3f6fa863cc276d07" translate="yes" xml:space="preserve">
          <source>Acceptance Testing</source>
          <target state="translated">수락 테스트</target>
        </trans-unit>
        <trans-unit id="44a09c418324158dfd048b7b23925eb42035c677" translate="yes" xml:space="preserve">
          <source>Acceptance Tests</source>
          <target state="translated">합격 시험</target>
        </trans-unit>
        <trans-unit id="fa8f16bd648f1362b18f3a009c57cc7123f33f4b" translate="yes" xml:space="preserve">
          <source>Acceptance Tests Demo Repository</source>
          <target state="translated">수락 테스트 데모 리포지토리</target>
        </trans-unit>
        <trans-unit id="e46b92a255a0023bde4271e5fe4bd53184d7698f" translate="yes" xml:space="preserve">
          <source>Acceptance testing can be performed by a non-technical person. That person can be your tester, manager or even client. If you are developing a web-application (and you probably are) the tester needs nothing more than a web browser to check that your site works correctly. You can reproduce an acceptance tester&amp;rsquo;s actions in scenarios and run them automatically. Codeception keeps tests clean and simple as if they were recorded from the words of an actual acceptance tester.</source>
          <target state="translated">기술자가 아닌 사람이 수락 테스트를 수행 할 수 있습니다. 그 사람은 테스터, 관리자 또는 고객이 될 수 있습니다. 웹 응용 프로그램을 개발하고 있다면 아마도 테스터는 웹 브라우저 만 있으면 사이트가 제대로 작동하는지 확인할 수 있습니다. 시나리오에서 승인 테스터의 조치를 재현하고 자동으로 실행할 수 있습니다. Codeception은 실제 승인 테스터의 말에서 기록 된 것처럼 테스트를 깨끗하고 단순하게 유지합니다.</target>
        </trans-unit>
        <trans-unit id="0f06a1fceb904181e63245710d86724a52e45963" translate="yes" xml:space="preserve">
          <source>Acceptance tests</source>
          <target state="translated">합격 시험</target>
        </trans-unit>
        <trans-unit id="1d647040904ea5c3543ea0c10bc7b1cac7afc8c0" translate="yes" xml:space="preserve">
          <source>Accepts either name of class or object of that class</source>
          <target state="translated">클래스 이름 또는 해당 클래스의 객체를 허용</target>
        </trans-unit>
        <trans-unit id="a75568c8ed474d628b3e3d4daa6112536da33d13" translate="yes" xml:space="preserve">
          <source>Accepts the active JavaScript native popup window, as created by &lt;code&gt;window.alert&lt;/code&gt;|&lt;code&gt;window.confirm&lt;/code&gt;|&lt;code&gt;window.prompt&lt;/code&gt;. Don&amp;rsquo;t confuse popups with modal windows, as created by &lt;a href=&quot;http://jster.net/category/windows-modals-popups&quot;&gt;various libraries&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;window.alert&lt;/code&gt; | 페이지에서 생성 한대로 활성 JavaScript 기본 팝업 창을 승인합니다. &lt;code&gt;window.confirm&lt;/code&gt; | &lt;code&gt;window.prompt&lt;/code&gt; . &lt;a href=&quot;http://jster.net/category/windows-modals-popups&quot;&gt;다양한 라이브러리에서&lt;/a&gt; 만든 팝업을 모달 창과 혼동하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="91d7ce2cce9104ff692462e3c8858f92baf9e6a0" translate="yes" xml:space="preserve">
          <source>Access a database.</source>
          <target state="translated">데이터베이스에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="b62319bf823be2a8d85522b159b509fc16592549" translate="yes" xml:space="preserve">
          <source>Access the database using &lt;a href=&quot;http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/&quot;&gt;Doctrine2 ORM&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/&quot;&gt;Doctrine2 ORM을&lt;/a&gt; 사용하여 데이터베이스에 액세스하십시오 .</target>
        </trans-unit>
        <trans-unit id="66a7350f794e778b0a766f9d6ee4f89d1ed536ee" translate="yes" xml:space="preserve">
          <source>Accessing Module</source>
          <target state="translated">모듈 접근</target>
        </trans-unit>
        <trans-unit id="eaacd96d19a16e6f2f296fdcb79d6a823e31f401" translate="yes" xml:space="preserve">
          <source>Accessing Other Modules</source>
          <target state="translated">다른 모듈에 액세스</target>
        </trans-unit>
        <trans-unit id="c3cd636a585b20c40ac2df5ffb403e83cb2eef51" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="translated">Actions</target>
        </trans-unit>
        <trans-unit id="bcb632ab71e263489dba92401c34bcf747798390" translate="yes" xml:space="preserve">
          <source>Actions are also quite simple. Every action you define is a public function. Write a public method, then run the &lt;code&gt;build&lt;/code&gt; command, and you will see the new function added into the FunctionalTester class.</source>
          <target state="translated">동작도 매우 간단합니다. 정의한 모든 작업은 공용 기능입니다. 공용 메소드를 작성한 후 &lt;code&gt;build&lt;/code&gt; 명령 을 실행 하면 FunctionalTester 클래스에 새 함수가 추가 된 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b241ce972532f8375fdafa3111fa196c33ce0be9" translate="yes" xml:space="preserve">
          <source>Actions as array are recommended for simple to combine &amp;ldquo;waitForElement&amp;rdquo; with assertions; &lt;code&gt;waitForElement($el)&lt;/code&gt; and &lt;code&gt;see('text', $el)&lt;/code&gt; can be simplified to:</source>
          <target state="translated">&quot;waitForElement&quot;를 어설 션과 결합하기 위해 배열로서의 조치가 권장됩니다. &lt;code&gt;waitForElement($el)&lt;/code&gt; 및 &lt;code&gt;see('text', $el)&lt;/code&gt; 를 다음과 같이 단순화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd2158e35ab7acba3dc31e3869a74b11907e36fc" translate="yes" xml:space="preserve">
          <source>Actions executed from array or ActionSequence will print debug output for actions, and adds an action name to exception on failure.</source>
          <target state="translated">배열 또는 ActionSequence에서 실행 된 조치는 조치에 대한 디버그 출력을 인쇄하고 실패시 조치 이름을 예외에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="43eef61946c937890cc802e9fef0169fed49aecd" translate="yes" xml:space="preserve">
          <source>Actions for URLs:</source>
          <target state="translated">URL에 대한 조치 :</target>
        </trans-unit>
        <trans-unit id="53af09e7a1c4837e25fc0a1d768ef2ee16328084" translate="yes" xml:space="preserve">
          <source>Actions for checking the page title:</source>
          <target state="translated">페이지 제목을 확인하기위한 조치 :</target>
        </trans-unit>
        <trans-unit id="c0ec9b0c0a10a5a1a1ef648d728e979089b7cded" translate="yes" xml:space="preserve">
          <source>Actions for cookies:</source>
          <target state="translated">쿠키에 대한 조치 :</target>
        </trans-unit>
        <trans-unit id="eb177b369232d3f4faac71cdda8b6b248d07d489" translate="yes" xml:space="preserve">
          <source>ActiveRecord</source>
          <target state="translated">ActiveRecord</target>
        </trans-unit>
        <trans-unit id="e25310ffe727848f5bc92f6814fbe1081b62cd36" translate="yes" xml:space="preserve">
          <source>Actor classes include generated steps taken from corresponding modules and helpers. You can introduce wrappers for those steps by using step decorators.</source>
          <target state="translated">액터 클래스에는 해당 모듈과 헬퍼에서 생성 된 단계가 포함됩니다. 단계 데코레이터를 사용하여 해당 단계에 대한 랩퍼를 도입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a70d36e754fb82756c6d5927519109a37d91e98d" translate="yes" xml:space="preserve">
          <source>Actors</source>
          <target state="translated">Actors</target>
        </trans-unit>
        <trans-unit id="c60ad0eafa403b4d6bb637ed8800a5c2069cec31" translate="yes" xml:space="preserve">
          <source>Add a binding to the Laravel service container. (https://laravel.com/docs/master/container)</source>
          <target state="translated">Laravel 서비스 컨테이너에 바인딩을 추가하십시오. (https://laravel.com/docs/master/container)</target>
        </trans-unit>
        <trans-unit id="a0363ba2f87e497be431b23f7fcc7ed5ffeb5e99" translate="yes" xml:space="preserve">
          <source>Add a contextual binding to the Laravel service container. (https://laravel.com/docs/master/container)</source>
          <target state="translated">Laravel 서비스 컨테이너에 컨텍스트 바인딩을 추가하십시오. (https://laravel.com/docs/master/container)</target>
        </trans-unit>
        <trans-unit id="11487cc480d28de199ee1902e452b44ab1e9867f" translate="yes" xml:space="preserve">
          <source>Add a message to a queue/tube</source>
          <target state="translated">대기열 / 튜브에 메시지 추가</target>
        </trans-unit>
        <trans-unit id="da2b161295eab4c66d821b6bb88fafb7353b9f9c" translate="yes" xml:space="preserve">
          <source>Add a queue to purge list</source>
          <target state="translated">제거 목록에 큐 추가</target>
        </trans-unit>
        <trans-unit id="cc656b61a391ec0d1e9af6e0ac4fc86d0c274fe8" translate="yes" xml:space="preserve">
          <source>Add a singleton binding to the Laravel service container. (https://laravel.com/docs/master/container)</source>
          <target state="translated">Laravel 서비스 컨테이너에 싱글 톤 바인딩을 추가하십시오. (https://laravel.com/docs/master/container)</target>
        </trans-unit>
        <trans-unit id="7e1ae75cf8a6454af46262107c7c9ccc0fd3aa83" translate="yes" xml:space="preserve">
          <source>Add an instance binding to the Laravel service container. (https://laravel.com/docs/master/container)</source>
          <target state="translated">Laravel 서비스 컨테이너에 인스턴스 바인딩을 추가하십시오. (https://laravel.com/docs/master/container)</target>
        </trans-unit>
        <trans-unit id="0a43b3099ae3e4c282407fdefba8f5dc96058e9f" translate="yes" xml:space="preserve">
          <source>Additional &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/capabilities&quot;&gt;Chrome options&lt;/a&gt; can be set in &lt;code&gt;goog:chromeOptions&lt;/code&gt; capabilities. Note that Selenium 3.8 renamed this capability from &lt;code&gt;chromeOptions&lt;/code&gt; to &lt;code&gt;goog:chromeOptions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;goog:chromeOptions&lt;/code&gt; 기능 에서 추가 &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/capabilities&quot;&gt;Chrome 옵션&lt;/a&gt; 을 설정할 수 있습니다 . Selenium 3.8에서는이 기능의 이름이 &lt;code&gt;chromeOptions&lt;/code&gt; 에서 &lt;code&gt;goog:chromeOptions&lt;/code&gt; 로 바뀌 었 습니다 .</target>
        </trans-unit>
        <trans-unit id="d13f313288742a3f118e4ce531e0ab82fc74f990" translate="yes" xml:space="preserve">
          <source>Additional debugging features by Codeception:</source>
          <target state="translated">Codeception에 의한 추가 디버깅 기능 :</target>
        </trans-unit>
        <trans-unit id="cccf50baf96b32daf8ed250212b02c598641bd62" translate="yes" xml:space="preserve">
          <source>Additional software required</source>
          <target state="translated">추가 소프트웨어 필요</target>
        </trans-unit>
        <trans-unit id="7653b144eee934076e861cb48c383b5e4829c9d2" translate="yes" xml:space="preserve">
          <source>Additionally, checkbox values can be checked with a boolean.</source>
          <target state="translated">또한 부울을 사용하여 확인란 값을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28cf73327cc99ff0ab605b3bb2b41dcec8854fdf" translate="yes" xml:space="preserve">
          <source>Adds Bearer authentication via access token.</source>
          <target state="translated">액세스 토큰을 통해 베어러 인증을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="dbf6f35d2d0a4d5e3bb6dbad874d699a4457dbe5" translate="yes" xml:space="preserve">
          <source>Adds Digest authentication via username/password.</source>
          <target state="translated">사용자 이름 / 암호를 통해 다이제스트 인증을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e812e624741b0c81ad9d61bde46aa9bf20be21a2" translate="yes" xml:space="preserve">
          <source>Adds HTTP authentication via username/password.</source>
          <target state="translated">사용자 이름 / 암호를 통해 HTTP 인증을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="7e43a96d0e87ad9bb6ba86620a75974fc99b4df7" translate="yes" xml:space="preserve">
          <source>Adds NTLM authentication via username/password. Requires client to be Guzzle &amp;gt;=6.3.0 Out of scope for functional modules.</source>
          <target state="translated">사용자 이름 / 암호를 통해 NTLM 인증을 추가합니다. 클라이언트가 Guzzle&amp;gt; = 6.3.0이어야합니다. 기능 모듈의 범위를 벗어났습니다.</target>
        </trans-unit>
        <trans-unit id="5ef979d918c0ddf1ae9d0ef484accaa4a6b3eb42" translate="yes" xml:space="preserve">
          <source>Adds a base directory for a namespace prefix.</source>
          <target state="translated">네임 스페이스 접두사에 대한 기본 디렉토리를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="dfb93a719a910f9c74aa63caa7766bf2a9eaafd0" translate="yes" xml:space="preserve">
          <source>Adds custom filter to JsonType list. You should specify a name and parameters of a filter.</source>
          <target state="translated">JsonType 목록에 사용자 정의 필터를 추가합니다. 필터의 이름과 매개 변수를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1b39e64166d2c657308929bbe8490fe461bd931" translate="yes" xml:space="preserve">
          <source>Adds entity to repository and flushes. You can redefine it&amp;rsquo;s properties with the second parameter.</source>
          <target state="translated">저장소에 엔티티를 추가하고 플러시합니다. 두 번째 매개 변수를 사용하여 속성을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc6714c10ebc3d3c813a51d49c1e4a607181a49b" translate="yes" xml:space="preserve">
          <source>Adds service to ZF2 container</source>
          <target state="translated">ZF2 컨테이너에 서비스 추가</target>
        </trans-unit>
        <trans-unit id="6d05b47255796e8eca7c2ce749a835b147577ab9" translate="yes" xml:space="preserve">
          <source>Advanced Gherkin</source>
          <target state="translated">고급 작은 오이</target>
        </trans-unit>
        <trans-unit id="d0b5d5d415cb816c19cb82a1e316d1fb1900d39d" translate="yes" xml:space="preserve">
          <source>Advanced Tools</source>
          <target state="translated">고급 도구</target>
        </trans-unit>
        <trans-unit id="ec9c1eee60a6c8d412e86494c4538774b81ce815" translate="yes" xml:space="preserve">
          <source>Advanced Usage</source>
          <target state="translated">고급 사용법</target>
        </trans-unit>
        <trans-unit id="19084f20438d3aab7065104e211dcd8003b1920d" translate="yes" xml:space="preserve">
          <source>After a request the whole application is available for inspection / interaction.</source>
          <target state="translated">요청 후 전체 응용 프로그램을 검사 / 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a4f8cd31df63c591f86a3b60fe249adb1707c1" translate="yes" xml:space="preserve">
          <source>After configuring the URL we can run this test with the &lt;code&gt;run&lt;/code&gt; command:</source>
          <target state="translated">URL을 구성한 후 &lt;code&gt;run&lt;/code&gt; 명령 으로이 테스트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="42569ddc65340063d205895325e5db1f50876050" translate="yes" xml:space="preserve">
          <source>After executing incomplete test</source>
          <target state="translated">불완전한 테스트를 실행 한 후</target>
        </trans-unit>
        <trans-unit id="352dcbf4119fcf61bf0b95219276296102e504f7" translate="yes" xml:space="preserve">
          <source>After executing skipped test</source>
          <target state="translated">건너 뛴 테스트를 실행 한 후</target>
        </trans-unit>
        <trans-unit id="60f222b0dde10d07fd6a56d8646d1b61636d7fec" translate="yes" xml:space="preserve">
          <source>After executing successful test</source>
          <target state="translated">성공적인 테스트를 수행 한 후</target>
        </trans-unit>
        <trans-unit id="ae7f9bd8965a6fe75168e17ea171cf47d984beb8" translate="yes" xml:space="preserve">
          <source>After failed step</source>
          <target state="translated">실패한 단계 후</target>
        </trans-unit>
        <trans-unit id="23087f6b5de8b7d715c19ade0deb495e128af33a" translate="yes" xml:space="preserve">
          <source>After failed test</source>
          <target state="translated">테스트 실패 후</target>
        </trans-unit>
        <trans-unit id="de20d754aa8edbe60fac8a5a63569eed616461f7" translate="yes" xml:space="preserve">
          <source>After result was printed</source>
          <target state="translated">결과가 인쇄 된 후</target>
        </trans-unit>
        <trans-unit id="921b4ba346626828f336377782e43290ae8e8d93" translate="yes" xml:space="preserve">
          <source>After step</source>
          <target state="translated">단계 후</target>
        </trans-unit>
        <trans-unit id="e5987eea18f9ad81fcf9eade7a19284c6c2f6d28" translate="yes" xml:space="preserve">
          <source>After suite was executed</source>
          <target state="translated">스위트가 실행 된 후</target>
        </trans-unit>
        <trans-unit id="cd537877edc23d5fc1517d5daa1364ce5203a3ee" translate="yes" xml:space="preserve">
          <source>After test ended with error</source>
          <target state="translated">테스트 종료 후 오류</target>
        </trans-unit>
        <trans-unit id="cb78e890d931ad1288f91f760f8561d033aed60d" translate="yes" xml:space="preserve">
          <source>After test execution</source>
          <target state="translated">테스트 실행 후</target>
        </trans-unit>
        <trans-unit id="a038c0b62d302e620a0c4e6e582633358bc584ae" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;c3.php&lt;/code&gt; file is included in application you can start gather coverage. In case you execute your application locally there is nothing to be changed in config. All codecoverage reports will be collected as usual and merged afterwards. Think of it: Codeception runs remote coverage in the same way as local.</source>
          <target state="translated">&lt;code&gt;c3.php&lt;/code&gt; 파일이 응용 프로그램에 포함 된 후 수집 범위를 시작할 수 있습니다. 응용 프로그램을 로컬에서 실행하는 경우 구성에서 변경할 사항이 없습니다. 모든 코드 커버리지 보고서는 평소대로 수집되어 나중에 병합됩니다. 생각해보십시오 : Codeception은 로컬과 동일한 방식으로 원격 범위를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ab21974a8ce4056c8cd536134c46be8bacd6a977" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;parallelRun&lt;/code&gt; method is defined you can execute tests with</source>
          <target state="translated">&lt;code&gt;parallelRun&lt;/code&gt; 메소드가 정의 되면 다음을 사용하여 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="284e56a81b409b01494696537cba33b1207e152c" translate="yes" xml:space="preserve">
          <source>After you create build project you should define build step with Codeception which is</source>
          <target state="translated">빌드 프로젝트를 생성 한 후 Codeception으로 빌드 단계를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="2811bd681bb1170c9863c768af844c10ab079830" translate="yes" xml:space="preserve">
          <source>Alias to &lt;code&gt;haveHttpHeader&lt;/code&gt;</source>
          <target state="translated">에 별칭 &lt;code&gt;haveHttpHeader&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="276f9ad8c804c5e5832d6b3902d54376e3db5223" translate="yes" xml:space="preserve">
          <source>All Codeception tests are written in a descriptive manner. Just by looking at the test body, you can clearly understand what is being tested and how it is performed.</source>
          <target state="translated">모든 Codeception 테스트는 설명적인 방식으로 작성됩니다. 테스트 본문을 보는 것만으로 테스트 대상과 수행 방법을 명확하게 이해할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af18b72ce3d0211c06062bbbde95abc2617cbca4" translate="yes" xml:space="preserve">
          <source>All PHPUnit printers implement the &lt;a href=&quot;https://phpunit.de/manual/current/en/extending-phpunit.html#extending-phpunit.PHPUnit_Framework_TestListener&quot;&gt;PHPUnit_Framework_TestListener&lt;/a&gt; interface. It is recommended to read the code of the original reporter before overriding it.</source>
          <target state="translated">모든 PHPUnit 프린터는 &lt;a href=&quot;https://phpunit.de/manual/current/en/extending-phpunit.html#extending-phpunit.PHPUnit_Framework_TestListener&quot;&gt;PHPUnit_Framework_TestListener&lt;/a&gt; 인터페이스를 구현합니다 . 재정의하기 전에 원본 리포터의 코드를 읽는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4d98b43b04a571ba0a470918a8d84e696c8c3726" translate="yes" xml:space="preserve">
          <source>All SSL certification checks are disabled by default. Use Guzzle request options to configure certifications and others.</source>
          <target state="translated">모든 SSL 인증 검사는 기본적으로 비활성화되어 있습니다. Guzzle 요청 옵션을 사용하여 인증 및 기타를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="48739c25b758e0994bcf4616dde257296631fb14" translate="yes" xml:space="preserve">
          <source>All Together</source>
          <target state="translated">모두 함께</target>
        </trans-unit>
        <trans-unit id="b1983ecf70069cfc3fd322df4e12755e9066b936" translate="yes" xml:space="preserve">
          <source>All actions and assertions that can be performed by the Actor object in a class are defined in modules. It might look like Codeception limits you in testing, but that&amp;rsquo;s not true. You can extend the testing suite with your own actions and assertions, by writing them into a custom module, called a Helper. We will get back to this later in this chapter, but for now let&amp;rsquo;s look at the following test:</source>
          <target state="translated">클래스의 Actor 객체가 수행 할 수있는 모든 작업 및 어설 션은 모듈에서 정의됩니다. Codeception이 테스트에서 제한하는 것처럼 보일 수 있지만 사실은 아닙니다. Helper라고하는 사용자 정의 모듈에 작성하여 자체 조치 및 어설 션으로 테스트 스위트를 확장 할 수 있습니다. 이 장의 후반부로 돌아가서 지금은 다음 테스트를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="2c3212d53eb0ed0919959d5cec2b4203ff703eea" translate="yes" xml:space="preserve">
          <source>All actions and assertions that can be performed by the Tester object in a class are defined in modules. You can extend the testing suite with your own actions and assertions by writing them into a custom module.</source>
          <target state="translated">클래스의 테스터 오브젝트가 수행 할 수있는 모든 조치 및 어설 션은 모듈에서 정의됩니다. 사용자 정의 모듈에 작성하여 자체 조치 및 어설 션으로 테스트 스위트를 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65db51fccc40e12ddd87973827b2671c6ea742df" translate="yes" xml:space="preserve">
          <source>All hooks are defined in &lt;a href=&quot;reference/commands&quot;&gt;Codeception\Module&lt;/a&gt; and are listed here. You are free to redefine them in your module.</source>
          <target state="translated">모든 후크는 &lt;a href=&quot;reference/commands&quot;&gt;Codeception \ Module에&lt;/a&gt; 정의되어 있으며 여기에 나열되어 있습니다. 모듈에서 자유롭게 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e018c2fd48342cdb2081ddb05775c97502a70b9e" translate="yes" xml:space="preserve">
          <source>All of Codeception&amp;rsquo;s framework modules share the same interface, and thus your tests are not bound to any one of them. This is a sample functional test:</source>
          <target state="translated">Codeception의 모든 프레임 워크 모듈은 동일한 인터페이스를 공유하므로 테스트가 이들 중 하나에 바인딩되지 않습니다. 다음은 샘플 기능 테스트입니다.</target>
        </trans-unit>
        <trans-unit id="72e02aed8901bc1b0493642b2e925d65951c8d39" translate="yes" xml:space="preserve">
          <source>Allows to define initial module config. Can be used in &lt;code&gt;_beforeSuite&lt;/code&gt; hook of Helpers or Extensions</source>
          <target state="translated">초기 모듈 구성을 정의 할 수 있습니다. 헬퍼 또는 확장 프로그램의 &lt;code&gt;_beforeSuite&lt;/code&gt; 후크 에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2baed6b6afcd2ef5db464afeda2d7ac5658a1acd" translate="yes" xml:space="preserve">
          <source>Allows to explicitly exclude actions from module.</source>
          <target state="translated">모듈에서 작업을 명시 적으로 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80aba5db733ab9b77fca1c8c4d44623d0cdcef22" translate="yes" xml:space="preserve">
          <source>Allows to explicitly set what methods have this class.</source>
          <target state="translated">이 클래스가있는 메소드를 명시 적으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e923ca4b6a325f615db75741d5d7c63cedb8fda4" translate="yes" xml:space="preserve">
          <source>Allows to redefine config for a specific test. Config is restored at the end of a test.</source>
          <target state="translated">특정 테스트에 대한 구성을 재정의 할 수 있습니다. 테스트가 끝나면 구성이 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="1622955b2f0996d04d967e81f4b7b929b5ddd005" translate="yes" xml:space="preserve">
          <source>Allows to rename actions</source>
          <target state="translated">작업 이름을 바꿀 수 있습니다</target>
        </trans-unit>
        <trans-unit id="151a8fb7a6f3720c465d0959bf5a3ca7eddb1f0e" translate="yes" xml:space="preserve">
          <source>Allows to send REST request using AWS Authorization</source>
          <target state="translated">AWS Authorization을 사용하여 REST 요청을 보낼 수 있습니다</target>
        </trans-unit>
        <trans-unit id="b4bee81e5606eb5565077c75e9f1e82e6702be32" translate="yes" xml:space="preserve">
          <source>Also available:</source>
          <target state="translated">도 가능:</target>
        </trans-unit>
        <trans-unit id="47551c7e1cc1fe15057fb4784057e6d51fb2dd09" translate="yes" xml:space="preserve">
          <source>Also check all available &lt;em&gt;Public Properties&lt;/em&gt; of the used modules to get full access to their data.</source>
          <target state="translated">또한 사용 된 모듈의 사용 가능한 모든 &lt;em&gt;공용 속성&lt;/em&gt; 을 확인 하여 데이터에 대한 전체 액세스 권한을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="ead95cde5e082d9b1d148a56e8b6bc61448dfa3f" translate="yes" xml:space="preserve">
          <source>Also note that this differs from PhpBrowser, in that</source>
          <target state="translated">또한 이것은 PhpBrowser와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="37e96ef54122a427c093407c723da0bd4c35c802" translate="yes" xml:space="preserve">
          <source>Also, the &lt;code&gt;-c&lt;/code&gt; option allows you to specify another config file to be used. Thus, you can have several &lt;code&gt;codeception.yml&lt;/code&gt; files for your test suite (e.g. to to specify different environments and settings). Just pass the &lt;code&gt;.yml&lt;/code&gt; filename as the &lt;code&gt;-c&lt;/code&gt; parameter to execute tests with specific config settings.</source>
          <target state="translated">또한 &lt;code&gt;-c&lt;/code&gt; 옵션을 사용하면 사용할 다른 구성 파일을 지정할 수 있습니다. 따라서 테스트 스위트에 여러 &lt;code&gt;codeception.yml&lt;/code&gt; 파일 이있을 수 있습니다 (예 : 다른 환경 및 설정 지정). 특정 구성 설정으로 테스트를 실행 하려면 &lt;code&gt;.yml&lt;/code&gt; 파일 이름을 &lt;code&gt;-c&lt;/code&gt; 매개 변수 로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8c8799a4eb93d10145bbca5b47aab692a7d70d1" translate="yes" xml:space="preserve">
          <source>Also, you may add &lt;a href=&quot;https://github.com/Codeception/Verify&quot;&gt;Codeception\Verify&lt;/a&gt; for BDD-style assertions. This tiny library adds more readable assertions, which is quite nice, if you are always confused about which argument in &lt;code&gt;assert&lt;/code&gt; calls is expected and which one is actual:</source>
          <target state="translated">또한 BDD 스타일 어설 션에 대해 &lt;a href=&quot;https://github.com/Codeception/Verify&quot;&gt;Codeception \ Verify&lt;/a&gt; 를 추가 할 수 있습니다 . 이 작은 도서관은 항상에서하는 인수에 대해 혼동하는 경우, 아주 좋은, 이는 더 읽기 주장을 추가 &lt;code&gt;assert&lt;/code&gt; 호출이 예상되고 어느 것이 실제이다 :</target>
        </trans-unit>
        <trans-unit id="b918793eec964cbfc07828e594d31797c1091aac" translate="yes" xml:space="preserve">
          <source>Alternative reporters can be implemented as extension. There are &lt;a href=&quot;https://codeception.com/extensions#DotReporter&quot;&gt;DotReporter&lt;/a&gt; and &lt;a href=&quot;https://codeception.com/extensions#SimpleReporter&quot;&gt;SimpleReporter&lt;/a&gt; extensions included. Use them to change output or use them as an example to build your own reporter. They can be easily enabled with &lt;code&gt;--ext&lt;/code&gt; option</source>
          <target state="translated">대체 리포터는 확장으로 구현할 수 있습니다. 있다 &lt;a href=&quot;https://codeception.com/extensions#DotReporter&quot;&gt;DotReporter&lt;/a&gt; 및 &lt;a href=&quot;https://codeception.com/extensions#SimpleReporter&quot;&gt;SimpleReporter&lt;/a&gt; 포함 확장. 그것들을 사용하여 출력을 변경하거나 자신의 리포터를 구축하기위한 예로 사용하십시오. &lt;code&gt;--ext&lt;/code&gt; 옵션 으로 쉽게 활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="10a28414f11d8e5071211fac10e97f92c8ac7019" translate="yes" xml:space="preserve">
          <source>Alternatively an array can be used:</source>
          <target state="translated">또는 배열을 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="80a2a3ca1f636758d10840ce900a23ef151bc374" translate="yes" xml:space="preserve">
          <source>Alternatively an external tool (like mysql client, or pg_restore) can be used. This approach is faster and won&amp;rsquo;t produce parsing errors while loading a dump. Use &lt;code&gt;populator&lt;/code&gt; config option to specify the command. For MySQL it can look like this:</source>
          <target state="translated">또는 mysql 클라이언트 또는 pg_restore와 같은 외부 도구를 사용할 수도 있습니다. 이 방법은 더 빠르며 덤프를로드하는 동안 구문 분석 오류가 발생하지 않습니다. 사용 &lt;code&gt;populator&lt;/code&gt; 의 명령을 지정하는 설정 옵션을. MySQL의 경우 다음과 같이 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96cde19277f83f92b2fdc785155212b5dfe47e8c" translate="yes" xml:space="preserve">
          <source>Alternatively you can provide the full path to test file:</source>
          <target state="translated">또는 테스트 파일의 전체 경로를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4518aa51d0588f5c00de2c72eebbd3eb674fbafb" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;https://github.com/Codeception/MockeryModule&quot;&gt;Mockery&lt;/a&gt; can be used inside Codeception.</source>
          <target state="translated">또한, &lt;a href=&quot;https://github.com/Codeception/MockeryModule&quot;&gt;조롱&lt;/a&gt; Codeception 내에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fa8a3755beb77422902c228bb59c8cd32d91ade" translate="yes" xml:space="preserve">
          <source>Alternatively, a function can be passed as parameter:</source>
          <target state="translated">또는 함수를 매개 변수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="243e15e8d9eeec04310dd58e816db5e29a12aaad" translate="yes" xml:space="preserve">
          <source>Alternatively, constructor arguments can be passed by name. Given User constructor signature is &lt;code&gt;__constructor($arg)&lt;/code&gt;, the example above could be rewritten like this:</source>
          <target state="translated">또는 생성자 인수를 이름으로 전달할 수 있습니다. 사용자 생성자 서명이 &lt;code&gt;__constructor($arg)&lt;/code&gt; 이면 위의 예를 다음과 같이 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a0fbc2d72828e15d497f1e5e258e970b5523ff9" translate="yes" xml:space="preserve">
          <source>Alternatively, this can be executed using a callback, in this case the &lt;code&gt;WebDriver&lt;/code&gt; instance is passed as argument</source>
          <target state="translated">또는 콜백을 사용하여 실행할 수 있습니다.이 경우 &lt;code&gt;WebDriver&lt;/code&gt; 인스턴스가 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2c9fc5a1dd69a4c3df24e86dc0a09261847c3858" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;AMQP&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;AMQP&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72fbba1aa406cab670078e10959f1bc2e8842fb8" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Apc&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Apc&lt;/code&gt; 모듈을 활성화 하고</target>
        </trans-unit>
        <trans-unit id="883f4df376688625ed95a7f542fca638cded39e1" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Asserts&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Asserts&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="711e5a11c9ca9208554fba88dc01a1057790f0c1" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Cli&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Cli&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf885c9a500efa00cacd6d3f0aa9b0b4511fa039" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;DataFactory&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;DataFactory&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e36e40b90f57709be5e5f2dfa8cc5f5b707da883" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Db&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Db&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5191d31e60a7a63b550a867815e94037072e877d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Doctrine2&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Doctrine2&lt;/code&gt; 모듈을 활성화 하고</target>
        </trans-unit>
        <trans-unit id="89c311f44e4165a73334be2c46184c3b1c5ee53d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;FTP&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;FTP&lt;/code&gt; 모듈을 활성화 하고</target>
        </trans-unit>
        <trans-unit id="ef1427b0ebbd163606b411b77145a218ad644a4c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Filesystem&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Filesystem&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed043842fde168a34cac4dbc8713e6522bbdb0c9" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Laravel5&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 스위트 구성 파일에서 &lt;code&gt;Laravel5&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0da9b7082db1549005b137b36a9201b7056f0a36" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Lumen&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Lumen&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04032836511d6947e294a69a8fe15c159a2dc9c0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Memcache&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Memcache&lt;/code&gt; 모듈을 활성화 하고</target>
        </trans-unit>
        <trans-unit id="48a87e8b7683cc52d532536e905ad4e2437b1479" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Mezzio&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Mezzio&lt;/code&gt; 모듈을 활성화 하고</target>
        </trans-unit>
        <trans-unit id="ebfd0d12a768239a37f57f1c25c59a4ca4ee0a63" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;MongoDb&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;MongoDb&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a293c10d26e1012d9bf4e4c8269c7b3a2c2d5569" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Phalcon4&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Phalcon4&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c66d4dcd468352a587e5c300775d56b91c088146" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Phalcon&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Phalcon&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e82b8087a94b24f56a83c0cebdc7707c0c895b5f" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;PhpBrowser&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;PhpBrowser&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c89bd4eefb35ed361867f1fc21b8ef33b3b70e6" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Queue&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Queue&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f928b947c8e005d0a4caf9bad4ab9d7e5718995" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;REST&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;REST&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbf791dcc57baa2f20a1376d3d622aea55eabaef" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Redis&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Redis&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfd804f5159f75b45205af822b6ec1394cfcf5f3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;SOAP&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;SOAP&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="375a3cb8607131425f99358e1119b16a963882d2" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Sequence&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Sequence&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de846b5f759a67c739564033f99f4ed199009bfb" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Symfony&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Symfony&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="330f406b8cb82b7f064976e7536a41a397e73e5b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;WebDriver&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;WebDriver&lt;/code&gt; 모듈을 활성화 하고</target>
        </trans-unit>
        <trans-unit id="0ea25d2f9d4c7a7d6d00be430cdd6d3083df5ba5" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;Yii2&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;Yii2&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="002970787556efeb38142f9e164755b57a718a83" translate="yes" xml:space="preserve">
          <source>Alternatively, you can enable &lt;code&gt;ZF2&lt;/code&gt; module in suite configuration file and run</source>
          <target state="translated">또는 제품군 구성 파일에서 &lt;code&gt;ZF2&lt;/code&gt; 모듈을 활성화 하고 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="068862965720eca77a36f66682cc921b7135f9af" translate="yes" xml:space="preserve">
          <source>Alternatively, you may run tests in shuffle without changing the config:</source>
          <target state="translated">또는 구성을 변경하지 않고 셔플에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa36dc2f27d5a8e40c19fb7321fc1fd808839ee6" translate="yes" xml:space="preserve">
          <source>Although this function can be used as a short-hand version of &lt;code&gt;fillField()&lt;/code&gt;, &lt;code&gt;selectOption()&lt;/code&gt;, &lt;code&gt;click()&lt;/code&gt; etc. it has some important differences:</source>
          <target state="translated">이 함수는 &lt;code&gt;fillField()&lt;/code&gt; , &lt;code&gt;selectOption()&lt;/code&gt; , &lt;code&gt;click()&lt;/code&gt; 등 의 단축 버전으로 사용할 수 있지만 몇 가지 중요한 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc4a2c61a57a609216144c42dad8b22a5ffb81a4" translate="yes" xml:space="preserve">
          <source>Amazon SQS</source>
          <target state="translated">아마존 SQS</target>
        </trans-unit>
        <trans-unit id="6f12cd1b8ecde458ae2f1e20c8d6a272ba4429cb" translate="yes" xml:space="preserve">
          <source>Amazon SQS: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">아마존 SQS : &lt;strong&gt;안정적&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a34a5217369df56843dfb3b62818e85e3172d169" translate="yes" xml:space="preserve">
          <source>Amazon SQS: aws/aws-sdk-php</source>
          <target state="translated">Amazon SQS : AWS / AWS-SDK-php</target>
        </trans-unit>
        <trans-unit id="30f1c11ffb03fcec8cd27c0b818d06ca90f5d446" translate="yes" xml:space="preserve">
          <source>And do assertions:</source>
          <target state="translated">그리고 주장을한다 :</target>
        </trans-unit>
        <trans-unit id="da59696ed94e64f21b1ef009cc350774849a9487" translate="yes" xml:space="preserve">
          <source>And finally to execute testing in parallel you should define how you split your tests and run parallel processes for &lt;code&gt;docker-compose&lt;/code&gt;. Here we split tests by suites, but you can use different groups to split your tests. In section below you will learn how to do that with Robo.</source>
          <target state="translated">마지막으로 테스트를 병렬로 실행하려면 테스트를 분할하고 &lt;code&gt;docker-compose&lt;/code&gt; 에 대해 병렬 프로세스를 실행하는 방법을 정의해야합니다 . 여기서는 테스트를 제품군별로 나누지 만 다른 그룹을 사용하여 테스트를 나눌 수 있습니다. 아래 섹션에서 Robo로이를 수행하는 방법을 배우게됩니다.</target>
        </trans-unit>
        <trans-unit id="4ae906ed0d14194b3a988bc265d18bfba537aa16" translate="yes" xml:space="preserve">
          <source>And for Test classes:</source>
          <target state="translated">그리고 시험 수업 :</target>
        </trans-unit>
        <trans-unit id="c98798642912c08bba897571595e4739b230970e" translate="yes" xml:space="preserve">
          <source>And here is an example of how this PageObject can be used in a test:</source>
          <target state="translated">다음은이 PageObject를 테스트에 사용하는 방법에 대한 예입니다.</target>
        </trans-unit>
        <trans-unit id="cf12ed156200cd09a821edafb11b94a62af4e125" translate="yes" xml:space="preserve">
          <source>And here is the list of sample assertions that can be used with SOAP.</source>
          <target state="translated">다음은 SOAP과 함께 사용할 수있는 샘플 어설 션 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a5b86e03fd5d28bb65ed7390824920330db7f4c2" translate="yes" xml:space="preserve">
          <source>And in the end we are verifying our expectation using &lt;strong&gt;Then&lt;/strong&gt; keyword. The action changed the initial given state, and produced some results. Let&amp;rsquo;s check that those results are what we actually expect.</source>
          <target state="translated">마지막으로 &lt;strong&gt;Then&lt;/strong&gt; 키워드를 사용하여 기대를 확인 합니다. 이 조치는 초기 상태를 변경하고 일부 결과를 생성했습니다. 그 결과가 실제로 우리가 기대하는 것인지 확인합시다.</target>
        </trans-unit>
        <trans-unit id="dd374c9ed08936c5073c2975062135e4f5556b94" translate="yes" xml:space="preserve">
          <source>And then use them in your tests:</source>
          <target state="translated">그런 다음 테스트에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2fb39e8f5851f3426c594d3b0dd8697c9ce10634" translate="yes" xml:space="preserve">
          <source>And this is how this page object can be used in a test:</source>
          <target state="translated">그리고 이것은이 페이지 객체가 테스트에서 사용될 수있는 방법입니다 :</target>
        </trans-unit>
        <trans-unit id="1d4d547797fb35249692ef7064904e60aa5b9df3" translate="yes" xml:space="preserve">
          <source>Any other value: never</source>
          <target state="translated">다른 값 : never</target>
        </trans-unit>
        <trans-unit id="c1256b35282cdbacd53269acae9806349bccabe0" translate="yes" xml:space="preserve">
          <source>Apc</source>
          <target state="translated">Apc</target>
        </trans-unit>
        <trans-unit id="294fbdb64ae2159ec2c774c6bd4e3417e897e731" translate="yes" xml:space="preserve">
          <source>Apc::dontSeeInApc</source>
          <target state="translated">Apc::dontSeeInApc</target>
        </trans-unit>
        <trans-unit id="98798888b9ead1355d4e2e134f86f741b67b2d64" translate="yes" xml:space="preserve">
          <source>Apc::flushApc</source>
          <target state="translated">Apc::flushApc</target>
        </trans-unit>
        <trans-unit id="ce8f58caca5634b92bb5b990419d40e0ccaddbf4" translate="yes" xml:space="preserve">
          <source>Apc::grabValueFromApc</source>
          <target state="translated">Apc::grabValueFromApc</target>
        </trans-unit>
        <trans-unit id="1f01fc28d745c979259b18fd6123fd87d5385d41" translate="yes" xml:space="preserve">
          <source>Apc::haveInApc</source>
          <target state="translated">Apc::haveInApc</target>
        </trans-unit>
        <trans-unit id="96c3ea03f553c56ef9d377aa6261d143a15e3bfc" translate="yes" xml:space="preserve">
          <source>Apc::seeInApc</source>
          <target state="translated">Apc::seeInApc</target>
        </trans-unit>
        <trans-unit id="db61e4a1b25aaedc1802f114042a5dd12b27a14f" translate="yes" xml:space="preserve">
          <source>Append the given text to the given element. Can also add a selection to a select box.</source>
          <target state="translated">주어진 텍스트를 주어진 요소에 추가합니다. 선택 상자에 선택 항목을 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c8ece160fea45f987e36844181de0f04fdf9f67" translate="yes" xml:space="preserve">
          <source>Appends child node</source>
          <target state="translated">자식 노드 추가</target>
        </trans-unit>
        <trans-unit id="38c48d221153ca6efeca0950f45d1668aac4af61" translate="yes" xml:space="preserve">
          <source>Application state during testing</source>
          <target state="translated">테스트 중 애플리케이션 상태</target>
        </trans-unit>
        <trans-unit id="d0c21d688dbeb21d4cab2a2f03286022eac1258e" translate="yes" xml:space="preserve">
          <source>Applies OR operator to any number of CSS or XPath selectors. You can mix up CSS and XPath selectors here.</source>
          <target state="translated">OR 연산자를 여러 CSS 또는 XPath 선택기에 적용합니다. 여기에서 CSS와 XPath 선택기를 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b530f84a210f567a8cd9f551055faff302be7ccc" translate="yes" xml:space="preserve">
          <source>As a first step, you need to enable Codeception&amp;rsquo;s module for your framework in &lt;code&gt;functional.suite.yml&lt;/code&gt; (see below).</source>
          <target state="translated">첫 번째 단계로 &lt;code&gt;functional.suite.yml&lt;/code&gt; 에서 프레임 워크에 대한 Codeception 모듈을 활성화해야 합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="297896eefc895c28ef1d4b2c270dd91f91b9a1dc" translate="yes" xml:space="preserve">
          <source>As a result the Locator will produce a mixed XPath value that will be used in fillField action.</source>
          <target state="translated">결과적으로 로케이터는 fillField 조치에 사용될 혼합 XPath 값을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0f37892f1b3a92cdf683c566491475bf2500b84c" translate="yes" xml:space="preserve">
          <source>As always, you can run the newly created test with this command:</source>
          <target state="translated">항상 그렇듯이 다음 명령을 사용하여 새로 만든 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e088724f93961a7649617f2b0eacf36ce71fc60" translate="yes" xml:space="preserve">
          <source>As an alternative you can use 3rd-party &lt;a href=&quot;https://github.com/neronmoon/TeamcityCodeception&quot;&gt;TeamCity extension&lt;/a&gt; for better reporting.</source>
          <target state="translated">대안 으로 더 나은보고를 위해 타사 &lt;a href=&quot;https://github.com/neronmoon/TeamcityCodeception&quot;&gt;TeamCity 확장&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9b718409d81a7e53ef24635bdf66e369e8fb71d" translate="yes" xml:space="preserve">
          <source>As in scenario-driven functional or acceptance tests you can access Actor class methods. If you write integration tests, it may be useful to include the &lt;code&gt;Db&lt;/code&gt; module for database testing.</source>
          <target state="translated">시나리오 중심의 기능 또는 승인 테스트에서와 같이 Actor 클래스 메소드에 액세스 할 수 있습니다. 통합 테스트를 작성하는 경우 데이터베이스 테스트에 &lt;code&gt;Db&lt;/code&gt; 모듈 을 포함시키는 것이 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c5e9f909fbd22f2726c3fc476bf8f74b6e3e5f6" translate="yes" xml:space="preserve">
          <source>As it was mentioned, feature files is not just a user story. By writing features in formal language called Gherkin we can execute those scenarios as automated tests. There is no restrictions in the way how those scenarios are supposed to be tested. Tests can be executed at functional, acceptance, or domain level. However, we will concentrate on acceptance or UI tests in current guide.</source>
          <target state="translated">언급했듯이 기능 파일은 단순한 사용자 스토리가 아닙니다. Gherkin이라는 공식 언어로 기능을 작성하면 이러한 시나리오를 자동화 된 테스트로 실행할 수 있습니다. 이러한 시나리오를 테스트하는 방법에는 제한이 없습니다. 기능, 수용 또는 도메인 수준에서 테스트를 실행할 수 있습니다. 그러나 현재 가이드에서 승인 또는 UI 테스트에 중점을 둘 것입니다.</target>
        </trans-unit>
        <trans-unit id="5d03608ce7364c2906b8b34f04935a42ac1dc145" translate="yes" xml:space="preserve">
          <source>As we can see this simple story highlights core concepts that are called &lt;em&gt;contracts&lt;/em&gt;. We should fulfill those contracts to model software correctly. But how we can verify that those contracts are being satisfied? &lt;a href=&quot;https://cucumber.io&quot;&gt;Cucumber&lt;/a&gt; introduced a special language for such stories called &lt;strong&gt;Gherkin&lt;/strong&gt;. Same story transformed to Gherkin will look like this:</source>
          <target state="translated">우리가 볼 수 있듯이이 간단한 이야기는 &lt;em&gt;계약&lt;/em&gt; 이라고하는 핵심 개념을 강조 합니다. 소프트웨어를 올바르게 모델링하려면 이러한 계약을 이행해야합니다. 그러나 이러한 계약이 충족되고 있는지 어떻게 확인할 수 있습니까? &lt;a href=&quot;https://cucumber.io&quot;&gt;오이&lt;/a&gt; 는 &lt;strong&gt;Gherkin&lt;/strong&gt; 이라는 이야기에 특별한 언어를 도입했습니다 . 작은 오이로 변형 된 동일한 이야기는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8c7f9128ad3f121e326c6f331ad0323482496eb" translate="yes" xml:space="preserve">
          <source>As we generated snippets for missing steps with &lt;code&gt;gherkin:snippets&lt;/code&gt; command, we will define them in &lt;code&gt;AcceptanceTester&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;gherkin:snippets&lt;/code&gt; 명령으로 누락 된 단계에 대한 스 니펫을 생성 했으므로 &lt;code&gt;AcceptanceTester&lt;/code&gt; 파일 에서이를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="10b877c6c750dcda9c79b9e8f73c1e0b678670b2" translate="yes" xml:space="preserve">
          <source>As we mentioned earlier, steps should be defined inside context classes. By default all the steps are defined inside an Actor class, for instance, &lt;code&gt;AcceptanceTester&lt;/code&gt;. However, you can include more contexts. This can be configured inside global &lt;code&gt;codeception.yml&lt;/code&gt; or suite configuration file:</source>
          <target state="translated">앞에서 언급했듯이 컨텍스트 클래스 내에서 단계를 정의해야합니다. 기본적으로 모든 단계는 Actance 클래스 내에 정의됩니다 (예 : &lt;code&gt;AcceptanceTester&lt;/code&gt; ) . 그러나 더 많은 컨텍스트를 포함 할 수 있습니다. 전역 &lt;code&gt;codeception.yml&lt;/code&gt; 또는 제품군 구성 파일 내에서 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c32edf78d9be3610831865b68cebd835f072ba90" translate="yes" xml:space="preserve">
          <source>As we mentioned, the &lt;code&gt;_failed&lt;/code&gt; hook can help in debugging a failed test. You have the opportunity to save the current test&amp;rsquo;s state and show it to the user, but you are not limited to this.</source>
          <target state="translated">앞에서 언급했듯이 &lt;code&gt;_failed&lt;/code&gt; 후크는 실패한 테스트를 디버깅하는 데 도움이 될 수 있습니다. 현재 테스트 상태를 저장하여 사용자에게 표시 할 수 있지만 이에 국한되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="99697c4d66133b9a0e16dd3f5ceff0bec445774d" translate="yes" xml:space="preserve">
          <source>As you see, Cest classes have no parents. This is done intentionally. It allows you to extend your classes with common behaviors and workarounds that may be used in child classes. But don&amp;rsquo;t forget to make these methods &lt;code&gt;protected&lt;/code&gt; so they won&amp;rsquo;t be executed as tests.</source>
          <target state="translated">보시다시피, Cest 수업에는 부모가 없습니다. 이것은 의도적으로 이루어집니다. 하위 클래스에서 사용될 수있는 일반적인 동작 및 해결 방법으로 클래스를 확장 할 수 있습니다. 그러나 이러한 메소드를 &lt;code&gt;protected&lt;/code&gt; 하여 테스트로 실행되지 않도록하십시오.</target>
        </trans-unit>
        <trans-unit id="69f6c0eb161180aa60dd9f00ef797a5404fecdce" translate="yes" xml:space="preserve">
          <source>As you see, the syntax is the same for functional and acceptance tests.</source>
          <target state="translated">보시다시피, 구문은 기능 및 승인 테스트에서 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b4938378a3e5c8a953af7410fa0a38045c19a32d" translate="yes" xml:space="preserve">
          <source>As you see, this class is very simple. It extends the &lt;code&gt;AcceptanceTester&lt;/code&gt; class, meaning it can access all the methods and properties of &lt;code&gt;AcceptanceTester&lt;/code&gt;.</source>
          <target state="translated">보시다시피이 클래스는 매우 간단합니다. 그것은 확장 &lt;code&gt;AcceptanceTester&lt;/code&gt; 의 이 모든 메서드와 속성에 액세스 할 수 있습니다 의미 클래스를 &lt;code&gt;AcceptanceTester&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="c01a887001f968821357c32fe084b4e1d5e7c4f4" translate="yes" xml:space="preserve">
          <source>As you see, we are passing the Actor object into &lt;code&gt;tryToTest&lt;/code&gt; method. This allows us to write scenarios the way we did before:</source>
          <target state="translated">보시다시피, Actor 객체를 &lt;code&gt;tryToTest&lt;/code&gt; 메소드에 전달합니다 . 이를 통해 이전과 같은 방식으로 시나리오를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a9d6d342916bee49f0be80a43f134224bda6bb9" translate="yes" xml:space="preserve">
          <source>As you see, you can freely change markup of your login page, and all the tests interacting with this page will have their locators updated according to properties of LoginPage class.</source>
          <target state="translated">보시다시피 로그인 페이지의 마크 업을 자유롭게 변경할 수 있으며이 페이지와 상호 작용하는 모든 테스트에는 LoginPage 클래스의 속성에 따라 로케이터가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="55a4be8488d2a602d44c459c43b2a498d7f946d6" translate="yes" xml:space="preserve">
          <source>AspectMock</source>
          <target state="translated">AspectMock</target>
        </trans-unit>
        <trans-unit id="f0d9e12b87dca39436b9a270b9329761aa848f0d" translate="yes" xml:space="preserve">
          <source>AspectMock in Action</source>
          <target state="translated">AspectMock 작동</target>
        </trans-unit>
        <trans-unit id="9729d05be376e5639c92c6d789832477bd59d04d" translate="yes" xml:space="preserve">
          <source>AspectMock on GitHub</source>
          <target state="translated">GitHub의 AspectMock</target>
        </trans-unit>
        <trans-unit id="1c35f38460adb539a48a9140ae7bc0ab3afeed7d" translate="yes" xml:space="preserve">
          <source>Assert that a session attribute exists.</source>
          <target state="translated">세션 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="04358f56a23115e12d6118a0cc33a5730cf2f348" translate="yes" xml:space="preserve">
          <source>Assert that a session variable exists.</source>
          <target state="translated">세션 변수가 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d4884d3e97925202fc9e13d385bb758e211d0ed7" translate="yes" xml:space="preserve">
          <source>Assert that a specific form error message is set in the view.</source>
          <target state="translated">특정 양식 오류 메시지가보기에 설정되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="237746ac5818e2aae3e6063138dbd45d6231f3fa" translate="yes" xml:space="preserve">
          <source>Assert that form errors are bound to the View.</source>
          <target state="translated">폼 오류가 View에 바인딩되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="114916ca79bb3a4dcfd6c05fa27df410a9641608" translate="yes" xml:space="preserve">
          <source>Assert that specific form error messages are set in the view.</source>
          <target state="translated">특정 양식 오류 메시지가보기에 설정되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ae2b66e049d6124ed6703cb4ea8835e77749ec52" translate="yes" xml:space="preserve">
          <source>Assert that the session has a given list of values.</source>
          <target state="translated">세션에 주어진 값 목록이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="e0edc8ed1a899814cbb84b567ef5003e79f09465" translate="yes" xml:space="preserve">
          <source>Assert that the size of two arrays (or &lt;code&gt;Countable&lt;/code&gt; or &lt;code&gt;Traversable&lt;/code&gt; objects) is not the same.</source>
          <target state="translated">두 배열 (또는 &lt;code&gt;Countable&lt;/code&gt; 또는 &lt;code&gt;Traversable&lt;/code&gt; 개체) 의 크기가 동일하지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="60c88d1ffbb207d3d9eb797e99f15244696e2177" translate="yes" xml:space="preserve">
          <source>Assert that the size of two arrays (or &lt;code&gt;Countable&lt;/code&gt; or &lt;code&gt;Traversable&lt;/code&gt; objects) is the same.</source>
          <target state="translated">두 배열 (또는 &lt;code&gt;Countable&lt;/code&gt; 또는 &lt;code&gt;Traversable&lt;/code&gt; 개체) 의 크기 가 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f9a462f39c25812319c53c0e842c3e75456f2073" translate="yes" xml:space="preserve">
          <source>Assert that there are no form errors bound to the View.</source>
          <target state="translated">뷰에 바인딩 된 폼 오류가 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="11d21d9d8ad9cd9d8dd73607d97fc57951b215e6" translate="yes" xml:space="preserve">
          <source>Assertion methods come from PHPUnit. &lt;a href=&quot;https://phpunit.de/manual/current/en/appendixes.assertions.html&quot;&gt;See the complete reference at phpunit.de&lt;/a&gt;.</source>
          <target state="translated">어설 션 메소드는 PHPUnit에서 제공됩니다. &lt;a href=&quot;https://phpunit.de/manual/current/en/appendixes.assertions.html&quot;&gt;phpunit.de에서 완전한 참조를보십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="dc4635f59438d5deac0a8654bc0f0b0f10128777" translate="yes" xml:space="preserve">
          <source>Assertions can be a bit tricky. First of all, it&amp;rsquo;s recommended to prefix all your assertion actions with &lt;code&gt;see&lt;/code&gt; or &lt;code&gt;dontSee&lt;/code&gt;.</source>
          <target state="translated">주장은 약간 까다로울 수 있습니다. 우선, 모든 어설 션 작업 앞에 &lt;code&gt;see&lt;/code&gt; 또는 &lt;code&gt;dontSee&lt;/code&gt; 로 시작하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="561c16749736b8dbda1124817a2b4447de5e4505" translate="yes" xml:space="preserve">
          <source>Asserts</source>
          <target state="translated">Asserts</target>
        </trans-unit>
        <trans-unit id="c9b9a72791f67a3217698f212b20253d94e37d9c" translate="yes" xml:space="preserve">
          <source>Asserts that a class does not have a specified attribute.</source>
          <target state="translated">클래스에 지정된 속성이 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="80c3a936018a7e272f6cc925299501421d89fa86" translate="yes" xml:space="preserve">
          <source>Asserts that a class does not have a specified static attribute.</source>
          <target state="translated">클래스에 지정된 정적 속성이 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="98c9346fabd0e4cdfe75597e3cdd8d439938a6df" translate="yes" xml:space="preserve">
          <source>Asserts that a class has a specified attribute.</source>
          <target state="translated">클래스에 지정된 속성이 있음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d0b622d3adcf90fc20983be5278e6b503ad7fd5f" translate="yes" xml:space="preserve">
          <source>Asserts that a class has a specified static attribute.</source>
          <target state="translated">클래스에 지정된 정적 속성이 있음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6eeb0b2d2d2f21949f9017ed2c68dbef9663dfef" translate="yes" xml:space="preserve">
          <source>Asserts that a condition is false.</source>
          <target state="translated">조건이 거짓임을 주장합니다.</target>
        </trans-unit>
        <trans-unit id="b034aeeb76197f28c859f8acdcecb14947f42dd5" translate="yes" xml:space="preserve">
          <source>Asserts that a condition is not false.</source>
          <target state="translated">조건이 거짓이 아니라고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="54bea8e2445340bca2b3ac1dfbf820a6bd7975d9" translate="yes" xml:space="preserve">
          <source>Asserts that a condition is not true.</source>
          <target state="translated">조건이 참이 아니라고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="bd099a1f55a58493937cce78640f42faa21e69ff" translate="yes" xml:space="preserve">
          <source>Asserts that a condition is true.</source>
          <target state="translated">조건이 참임을 주장합니다.</target>
        </trans-unit>
        <trans-unit id="a0bbb90ba013bc3791f722dbb16a64329b385ac5" translate="yes" xml:space="preserve">
          <source>Asserts that a directory does not exist.</source>
          <target state="translated">디렉토리가 존재하지 않는다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="835bba44063b1239c0be875256c3ea237cc6f364" translate="yes" xml:space="preserve">
          <source>Asserts that a directory exists and is not readable.</source>
          <target state="translated">디렉토리가 존재하고 읽을 수 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="43f435ef64b8987d471723104d83402524266959" translate="yes" xml:space="preserve">
          <source>Asserts that a directory exists and is not writable.</source>
          <target state="translated">디렉토리가 존재하고 쓸 수 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="697e39458ff1d85446147ceea11ebf296a12bc6d" translate="yes" xml:space="preserve">
          <source>Asserts that a directory exists and is readable.</source>
          <target state="translated">디렉토리가 존재하고 읽을 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="166a30e7d93a61969a90d5d4669fca98ea5eb7be" translate="yes" xml:space="preserve">
          <source>Asserts that a directory exists and is writable.</source>
          <target state="translated">디렉토리가 존재하고 쓰기 가능함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="aa8dda04a110845e9bd856841339bfa6bfe24de2" translate="yes" xml:space="preserve">
          <source>Asserts that a directory exists.</source>
          <target state="translated">디렉토리가 존재 함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="19f2f6ed22fb7fade9c3bd5cb432f3d20b42f200" translate="yes" xml:space="preserve">
          <source>Asserts that a file does not exist.</source>
          <target state="translated">파일이 존재하지 않는다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="1e558d54531af019ddeed41a11d9a9c03e872f45" translate="yes" xml:space="preserve">
          <source>Asserts that a file exists and is not readable.</source>
          <target state="translated">파일이 존재하고 읽을 수 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e26b78604577947fa378f20599c4eb7586262832" translate="yes" xml:space="preserve">
          <source>Asserts that a file exists and is not writable.</source>
          <target state="translated">파일이 존재하고 쓸 수 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5fbd8126f1599675d49c6cb5d04b0c813035e2de" translate="yes" xml:space="preserve">
          <source>Asserts that a file exists and is readable.</source>
          <target state="translated">파일이 존재하고 읽을 수 있음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c31996a98e1fbe97ec1b4b484cde89f9c076b241" translate="yes" xml:space="preserve">
          <source>Asserts that a file exists and is writable.</source>
          <target state="translated">파일이 존재하고 쓰기 가능함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="806d63931f43c486f9eb074a31b1d2532765d03b" translate="yes" xml:space="preserve">
          <source>Asserts that a file exists.</source>
          <target state="translated">파일이 존재한다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="c918b56eeaf838dff681c317fd17d0fc52886e36" translate="yes" xml:space="preserve">
          <source>Asserts that a file/dir exists and is not readable.</source>
          <target state="translated">파일 / 디렉터리가 존재하고 읽을 수 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="87fc2ee753a4a0dff50b0633903500fac093152f" translate="yes" xml:space="preserve">
          <source>Asserts that a file/dir exists and is not writable.</source>
          <target state="translated">파일 / 디렉터리가 존재하고 쓰기가 불가능 함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="60192725be38509f1f05943082b811ce8c1123a6" translate="yes" xml:space="preserve">
          <source>Asserts that a file/dir exists and is writable.</source>
          <target state="translated">파일 / 디렉터리가 존재하고 쓰기 가능함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b1033f8d7151ac18fa6bfd2120589b373478848f" translate="yes" xml:space="preserve">
          <source>Asserts that a file/dir is readable.</source>
          <target state="translated">파일 / 디렉터리를 읽을 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cba233613a7de6bc9fd3a0e16841ec698bf5922d" translate="yes" xml:space="preserve">
          <source>Asserts that a given key contains a given item</source>
          <target state="translated">주어진 키에 주어진 항목이 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="7060f8a2de9b10401f42384a0ec99d7ad83f7565" translate="yes" xml:space="preserve">
          <source>Asserts that a given key does not contain a given item</source>
          <target state="translated">주어진 키에 주어진 아이템이 포함되어 있지 않다고 주장</target>
        </trans-unit>
        <trans-unit id="5286842f4c845edaa64ca657b4af7ec1737dfe19" translate="yes" xml:space="preserve">
          <source>Asserts that a haystack contains a needle.</source>
          <target state="translated">건초 더미에 바늘이 포함되어 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f4d63fd6c5b57eb91ae805badf56d3c4fdf49162" translate="yes" xml:space="preserve">
          <source>Asserts that a haystack contains only instances of a given class name.</source>
          <target state="translated">건초 더미에 지정된 클래스 이름의 인스턴스 만 포함되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7e0abe338b43955c5912c7e463b77e3ba60580a0" translate="yes" xml:space="preserve">
          <source>Asserts that a haystack contains only values of a given type.</source>
          <target state="translated">건초 더미에 지정된 유형의 값만 포함되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="40ace5bd11f34449a42d359e75daacab935a220f" translate="yes" xml:space="preserve">
          <source>Asserts that a haystack does not contain a needle.</source>
          <target state="translated">건초 더미에 바늘이 포함되어 있지 않다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="2f07087c5a68dd5ed56f65030789e3c0e50b1e85" translate="yes" xml:space="preserve">
          <source>Asserts that a haystack does not contain only values of a given type.</source>
          <target state="translated">건초 더미에 주어진 유형의 값만 포함되어 있지 않다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="fe7763dfe9184e80914f1c4058fa97702666b5c2" translate="yes" xml:space="preserve">
          <source>Asserts that a key does not exist or, optionally, that it doesn&amp;rsquo;t have the provided $value</source>
          <target state="translated">키가 존재하지 않거나 선택적으로 제공된 $ value가없는 것을 주장</target>
        </trans-unit>
        <trans-unit id="babbe9f5d608a4ef52a98ed525c00b5807a899ca" translate="yes" xml:space="preserve">
          <source>Asserts that a key exists, and optionally that it has the provided $value</source>
          <target state="translated">키가 존재하고 선택적으로 제공된 $ value가 있다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="0f835e490b7943baa45a80f5fe7351cbeefbd77a" translate="yes" xml:space="preserve">
          <source>Asserts that a row with the given column values exists. Provide table name and column values.</source>
          <target state="translated">주어진 열 값을 가진 행이 존재한다고 가정합니다. 테이블 이름 및 열 값을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="bb8ba958798e8a5320a92cff861e1467086210aa" translate="yes" xml:space="preserve">
          <source>Asserts that a string does not match a given format string.</source>
          <target state="translated">문자열이 주어진 형식 문자열과 일치하지 않음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d74c33843324200485cf460840f75c9830580fb2" translate="yes" xml:space="preserve">
          <source>Asserts that a string does not match a given regular expression.</source>
          <target state="translated">문자열이 주어진 정규식과 일치하지 않음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a24baf540fd93431eb9dbaf4c2b5dbfee3a20edb" translate="yes" xml:space="preserve">
          <source>Asserts that a string ends not with a given suffix.</source>
          <target state="translated">문자열이 주어진 접미사로 끝나지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6610a83e4646678aff41cd9d07c45a12f72cc48c" translate="yes" xml:space="preserve">
          <source>Asserts that a string ends with a given suffix.</source>
          <target state="translated">문자열이 주어진 접미사로 끝나도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6f4b204a0d1ca59d3e273a9cd668466b6e2e9d2b" translate="yes" xml:space="preserve">
          <source>Asserts that a string is a valid JSON string.</source>
          <target state="translated">문자열이 유효한 JSON 문자열임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0adf8d64116dc49f309f699a3593a8796cdbca20" translate="yes" xml:space="preserve">
          <source>Asserts that a string matches a given format file.</source>
          <target state="translated">문자열이 주어진 형식 파일과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e8782d948f63499215649e99dca33a5d80eb0eb6" translate="yes" xml:space="preserve">
          <source>Asserts that a string matches a given format string.</source>
          <target state="translated">문자열이 주어진 형식 문자열과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2b3f51f7cd9aa42ddac454fee41e5e3cce701ffe" translate="yes" xml:space="preserve">
          <source>Asserts that a string matches a given regular expression.</source>
          <target state="translated">문자열이 주어진 정규식과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="29af464eeb3e348328362ff5ec0b3930e0c735d9" translate="yes" xml:space="preserve">
          <source>Asserts that a string starts not with a given prefix.</source>
          <target state="translated">문자열이 주어진 접두어로 시작하지 않도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6a0f3afaf2fe151344ce79a590bdad474367f34c" translate="yes" xml:space="preserve">
          <source>Asserts that a string starts with a given prefix.</source>
          <target state="translated">문자열이 주어진 접두사로 시작하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="13bbc81ebd5609cd46c9fb6899400620fa0affd5" translate="yes" xml:space="preserve">
          <source>Asserts that a value is greater than another value.</source>
          <target state="translated">값이 다른 값보다 크다는 것을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7d9d72135882ef04fefd9c41ff9dafaad054c025" translate="yes" xml:space="preserve">
          <source>Asserts that a value is greater than or equal to another value.</source>
          <target state="translated">값이 다른 값보다 크거나 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ca2189bbd219feedb3d7e93f1c3e832e3c6cbbd0" translate="yes" xml:space="preserve">
          <source>Asserts that a value is smaller than another value.</source>
          <target state="translated">값이 다른 값보다 작음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9f9b55139a20e8c1cafd97a571188dfacc6ec840" translate="yes" xml:space="preserve">
          <source>Asserts that a value is smaller than or equal to another value.</source>
          <target state="translated">값이 다른 값보다 작거나 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="681d495ae7adef9aaba65f4bda2e3f063173ba4c" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is empty.</source>
          <target state="translated">변수가 비어 있음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="dcf6f83ff34d5449e4c3dc7e2d563c9b3348560a" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is finite.</source>
          <target state="translated">변수가 유한하다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="949c0f00aa107d9fabfe870fd37e913df897a052" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is infinite.</source>
          <target state="translated">변수가 무한하다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="f457222d753659118b4297d75d4e1a6af825ff07" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is nan.</source>
          <target state="translated">변수가 nan임을 주장합니다.</target>
        </trans-unit>
        <trans-unit id="d4d3122630d23c1333cd6e5445cc0d7b8d6a1ba7" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not empty.</source>
          <target state="translated">변수가 비어 있지 않음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e425880a07c3480c5f193adf77af427292c430e6" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not null.</source>
          <target state="translated">변수가 널이 아님을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a47514f55f376dac68df7820becad0cf01c05c60" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of a given type.</source>
          <target state="translated">변수가 주어진 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b1ba891c6f5e8fa0e42200ff1b2e2efb0a7e57d4" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type array.</source>
          <target state="translated">변수가 배열 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="176f4fba6fd8dc91de50b9ca63b7f71c54ecd693" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type bool.</source>
          <target state="translated">변수가 bool 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6e7705a4e7d34b06229e337ca7c62aaaa8101c6b" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type callable.</source>
          <target state="translated">변수가 호출 가능한 유형이 아님을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e269c525801b859c10ecff312d98e0ce4deba04a" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type float.</source>
          <target state="translated">변수가 float 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5c93ee5173b46c03fdf992e5520653e86b6aaa9b" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type int.</source>
          <target state="translated">변수가 int 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0bbc8ab3264d08ea62c7ba1d09f8239f4f7030a0" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type iterable.</source>
          <target state="translated">변수가 반복 가능한 유형이 아님을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="54526631b5e27d57486d4fdf73159ad7da913792" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type numeric.</source>
          <target state="translated">변수가 숫자 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fc0f90c35cce2fe4854cfe911bc78b4bbb74f654" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type object.</source>
          <target state="translated">변수가 개체 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="455e020266e908b92de0b8b3a8103e788526f18b" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type resource.</source>
          <target state="translated">변수가 자원 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="749dc2fe21a49810ade951d2f5f83f41a4c7d30c" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type scalar.</source>
          <target state="translated">변수가 스칼라 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="30d5702cc541f2c103a765c3364bd8190fe7f75c" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is not of type string.</source>
          <target state="translated">변수가 문자열 유형이 아님을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7cf732a447609fdfafb5499e1f7e7c7f2cd9646b" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is null.</source>
          <target state="translated">변수가 null임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2196867c597cf4f038f5a54a249ea1b521f56446" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of a given type.</source>
          <target state="translated">변수가 주어진 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="60329d38f99990a6155e17800b9274b295b64031" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type array.</source>
          <target state="translated">변수가 배열 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="170e4fef157ef16794b3932372f5a6b6641caf2a" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type bool.</source>
          <target state="translated">변수가 bool 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e6ac052895aeb8747212bd841ef739ed2c2339c4" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type callable.</source>
          <target state="translated">변수가 호출 가능한 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1bc4fb314ca2103910ba963d6643a63b36c2c499" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type float.</source>
          <target state="translated">변수가 float 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d56b9ff82d52f565e6acd49dc3dd88e97295a2f8" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type int.</source>
          <target state="translated">변수가 int 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="db0d89eb1c728e7188a0916609532a4f47c13bab" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type iterable.</source>
          <target state="translated">변수가 반복 가능한 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="73d7e32a7578d6906f213070910aa798816689d3" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type numeric.</source>
          <target state="translated">변수가 숫자 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2d5bb3e14e2ec31ae490dc6dfbec3b352a88493e" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type object.</source>
          <target state="translated">변수가 개체 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6554b5754703171374ab158a511e192df145a7c4" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type resource and is closed.</source>
          <target state="translated">변수가 자원 유형이고 닫 혔음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9c8d8997aedbb2f542c4503f07a8d32142dbbd51" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type resource.</source>
          <target state="translated">변수가 자원 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3832a4757abbbb3b8f0e299be50be9192781c83f" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type scalar.</source>
          <target state="translated">변수가 스칼라 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fe546c7a5998c8afd56100ac284bbb761cba1621" translate="yes" xml:space="preserve">
          <source>Asserts that a variable is of type string.</source>
          <target state="translated">변수가 문자열 유형임을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8c631a08d45bcf0965d21bc519e8fffdb16cd15b" translate="yes" xml:space="preserve">
          <source>Asserts that an array does not have a specified key.</source>
          <target state="translated">배열에 지정된 키가 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fb5e9029b16cc151e10c9fd412b62eb6e2cef522" translate="yes" xml:space="preserve">
          <source>Asserts that an array has a specified key.</source>
          <target state="translated">배열에 지정된 키가 있음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2f49a7ab0e3861ec88920676ea599d65046bf6e8" translate="yes" xml:space="preserve">
          <source>Asserts that an element in a collection exists and is an Array</source>
          <target state="translated">컬렉션의 요소가 존재하고 배열임을 확인</target>
        </trans-unit>
        <trans-unit id="8b26f946762807770aea6720700992300c57bab8" translate="yes" xml:space="preserve">
          <source>Asserts that an element in a collection exists and is an Object</source>
          <target state="translated">컬렉션의 요소가 존재하고 개체임을 주장</target>
        </trans-unit>
        <trans-unit id="0b23a66e7ceb806cb3686448a96248850f9f6050" translate="yes" xml:space="preserve">
          <source>Asserts that an object does not have a specified attribute.</source>
          <target state="translated">개체에 지정된 특성이 없음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a9d1fc61c590f2b663c745b7347a8207f0df3120" translate="yes" xml:space="preserve">
          <source>Asserts that an object has a specified attribute.</source>
          <target state="translated">개체에 지정된 특성이 있음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c2ce48e9ca6e9417a05884a5a7663ea5763c27f6" translate="yes" xml:space="preserve">
          <source>Asserts that current page has 404 response status code.</source>
          <target state="translated">현재 페이지에 404 응답 상태 코드가 있다고 지정합니다.</target>
        </trans-unit>
        <trans-unit id="04f84cbeb72232a80d6669e1e461e2920cedd05c" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of a string is equal to the contents of a file (canonicalizing).</source>
          <target state="translated">문자열의 내용이 파일의 내용과 같음을 확인합니다 (표준화).</target>
        </trans-unit>
        <trans-unit id="f4b96e75866c9b68f82fadd05e8ed1ae4a5d1422" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of a string is equal to the contents of a file (ignoring case).</source>
          <target state="translated">문자열의 내용이 파일의 내용과 같음을 확인합니다 (대소 문자 무시).</target>
        </trans-unit>
        <trans-unit id="8c0476fac02cf6b3098a46e7a7ecfc95f732c42f" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of a string is equal to the contents of a file.</source>
          <target state="translated">문자열의 내용이 파일의 내용과 같음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8433f953459b16c0e489c12bff890c25b72249a3" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of a string is not equal to the contents of a file (canonicalizing).</source>
          <target state="translated">문자열의 내용이 파일의 내용과 같지 않음을 확인합니다 (표준화).</target>
        </trans-unit>
        <trans-unit id="8ab66601ccc9afa3f080784f443d153bfee86ef5" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of a string is not equal to the contents of a file (ignoring case).</source>
          <target state="translated">문자열의 내용이 파일의 내용과 같지 않음을 확인합니다 (대소 문자 무시).</target>
        </trans-unit>
        <trans-unit id="d29ec7aa82f36dfca8ff444bb10e3743b368f5c8" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of a string is not equal to the contents of a file.</source>
          <target state="translated">문자열의 내용이 파일의 내용과 같지 않음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="064c1dc4137fed9113f27518a15405c218a05d43" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of one file is equal to the contents of another file (canonicalizing).</source>
          <target state="translated">한 파일의 내용이 다른 파일의 내용과 같음을 확인합니다 (표준화).</target>
        </trans-unit>
        <trans-unit id="171fcdbd678bc89092ad65f68834df1c5e7521c1" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of one file is equal to the contents of another file (ignoring case).</source>
          <target state="translated">한 파일의 내용이 다른 파일의 내용과 같음을 확인합니다 (대소 문자 무시).</target>
        </trans-unit>
        <trans-unit id="87169ac1d0f16819d10e287090a1591c4db6a63e" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of one file is equal to the contents of another file.</source>
          <target state="translated">한 파일의 내용이 다른 파일의 내용과 같음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c87a63ae17b2f4901a1672a9720ab42a6bb849ec" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of one file is not equal to the contents of another file (canonicalizing).</source>
          <target state="translated">한 파일의 내용이 다른 파일의 내용과 같지 않음을 확인합니다 (표준화).</target>
        </trans-unit>
        <trans-unit id="23850767a28bd998c1ce3291c75caa3c2d5df517" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of one file is not equal to the contents of another file (ignoring case).</source>
          <target state="translated">한 파일의 내용이 다른 파일의 내용과 같지 않음을 확인합니다 (대소 문자 무시).</target>
        </trans-unit>
        <trans-unit id="4886040c4bf54b7d3179da34ade65636204cf288" translate="yes" xml:space="preserve">
          <source>Asserts that the contents of one file is not equal to the contents of another file.</source>
          <target state="translated">한 파일의 내용이 다른 파일의 내용과 같지 않음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="51f80f3ee7f9bcf63d9938efc64148c9bfae35fb" translate="yes" xml:space="preserve">
          <source>Asserts that the generated JSON encoded object and the content of the given file are equal.</source>
          <target state="translated">생성 된 JSON 인코딩 개체와 지정된 파일의 콘텐츠가 동일 함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1756a396f09ae201f968eb8341082f32ea468bdd" translate="yes" xml:space="preserve">
          <source>Asserts that the generated JSON encoded object and the content of the given file are not equal.</source>
          <target state="translated">생성 된 JSON 인코딩 개체와 지정된 파일의 콘텐츠가 동일하지 않음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b69075bef3eeea66a7943313ee51a40ee25f47e7" translate="yes" xml:space="preserve">
          <source>Asserts that the given number of records were found in the database.</source>
          <target state="translated">주어진 수의 레코드가 데이터베이스에서 발견되었다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="9be79aa833b55f1d216a308a2014144e86418367" translate="yes" xml:space="preserve">
          <source>Asserts that there is no record with the given column values in a database. Provide table name and column values.</source>
          <target state="translated">데이터베이스에 주어진 열 값을 가진 레코드가 없다고 가정합니다. 테이블 이름 및 열 값을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="fe49fd4471c9d19726d3ff5f0f793a7c2787dffa" translate="yes" xml:space="preserve">
          <source>Asserts that two JSON files are equal.</source>
          <target state="translated">두 개의 JSON 파일이 동일하다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="f82ee249dbcccae17ce4bda01a6d456adb0c907a" translate="yes" xml:space="preserve">
          <source>Asserts that two JSON files are not equal.</source>
          <target state="translated">두 개의 JSON 파일이 동일하지 않다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="7aa8901477f9cd74bbd84918362657ebc12a521f" translate="yes" xml:space="preserve">
          <source>Asserts that two XML documents are equal.</source>
          <target state="translated">두 개의 XML 문서가 동일 함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="19baca0e7c627354f160c2239326b770201ae798" translate="yes" xml:space="preserve">
          <source>Asserts that two XML documents are not equal.</source>
          <target state="translated">두 개의 XML 문서가 같지 않다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="afafac1d6297819744cb881c3a29d499ffcbe0b9" translate="yes" xml:space="preserve">
          <source>Asserts that two XML files are equal.</source>
          <target state="translated">두 개의 XML 파일이 동일 함을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cbc3620732c5a0298704255a9b9147f50f1c437a" translate="yes" xml:space="preserve">
          <source>Asserts that two XML files are not equal.</source>
          <target state="translated">두 개의 XML 파일이 같지 않다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="46a6138a695452f4639bbc557f172e24bd0b8217" translate="yes" xml:space="preserve">
          <source>Asserts that two given JSON encoded objects or arrays are equal.</source>
          <target state="translated">두 개의 지정된 JSON 인코딩 개체 또는 배열이 동일하다는 것을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b28f2fb8aa7499c73648ef58a19519806c1abca3" translate="yes" xml:space="preserve">
          <source>Asserts that two given JSON encoded objects or arrays are not equal.</source>
          <target state="translated">두 개의 지정된 JSON 인코딩 개체 또는 배열이 동일하지 않음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9ac9f877c83c26e04f40fc97551676aaf91a0f6c" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are equal (canonicalizing).</source>
          <target state="translated">두 변수가 같음을 주장합니다 (표준화).</target>
        </trans-unit>
        <trans-unit id="fffcd59339b64a2cab84b1af9d49781d633b4ea9" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are equal (ignoring case).</source>
          <target state="translated">두 변수가 같은지 확인합니다 (대소 문자 무시).</target>
        </trans-unit>
        <trans-unit id="bae1d9049e0329910afc52457a859ec0042fdcb0" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are equal (with delta).</source>
          <target state="translated">두 변수가 동일하다는 것을 확인합니다 (델타 포함).</target>
        </trans-unit>
        <trans-unit id="6b88897bbc0cd6cdae169bcf853428cb7d84ed2e" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are equal.</source>
          <target state="translated">두 변수가 같다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="f88139b43a7d810a637bbbfc5c63ef5c2aa8c4be" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are not equal (canonicalizing).</source>
          <target state="translated">두 변수가 같지 않다고 주장합니다 (표준화).</target>
        </trans-unit>
        <trans-unit id="6a9918d9d6cf69843724a0fac79584b8abea175c" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are not equal (ignoring case).</source>
          <target state="translated">두 변수가 같지 않다고 주장합니다 (대소 문자 무시).</target>
        </trans-unit>
        <trans-unit id="4f5275516ccbd0a349c30061e8f1453b75c9b267" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are not equal (with delta).</source>
          <target state="translated">두 변수가 같지 않음 (델타 포함)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="8380efb86f35e2277a240a99b935608def1ceb48" translate="yes" xml:space="preserve">
          <source>Asserts that two variables are not equal.</source>
          <target state="translated">두 변수가 같지 않다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="9c2437d072edc91c44326cce96a772b65061daff" translate="yes" xml:space="preserve">
          <source>Asserts that two variables do not have the same type and value.</source>
          <target state="translated">두 변수의 유형과 값이 동일하지 않다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="618806c49766c6f01eddd0b2b4ab93770a872307" translate="yes" xml:space="preserve">
          <source>Asserts that two variables have the same type and value.</source>
          <target state="translated">두 변수가 동일한 유형과 값을 갖도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c8603ea8fbe82859488dfca50493c7ffbb8b3947" translate="yes" xml:space="preserve">
          <source>Asserts the number of elements of an array, Countable or Traversable.</source>
          <target state="translated">Countable 또는 Traversable 배열의 요소 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="651ab1c084f4295d676eec6c5a4c96d0e90845d0" translate="yes" xml:space="preserve">
          <source>Asserts::assertArrayHasKey</source>
          <target state="translated">Asserts::assertArrayHasKey</target>
        </trans-unit>
        <trans-unit id="cd9e15614a56ef93e02e2b47fa21cc859c729877" translate="yes" xml:space="preserve">
          <source>Asserts::assertArrayNotHasKey</source>
          <target state="translated">Asserts::assertArrayNotHasKey</target>
        </trans-unit>
        <trans-unit id="7414112f9e1ea5d8efbf2751c1adba6b5dc67880" translate="yes" xml:space="preserve">
          <source>Asserts::assertContains</source>
          <target state="translated">Asserts::assertContains</target>
        </trans-unit>
        <trans-unit id="9965750712a5e34190af0b8eb7aa8bd217aadcdc" translate="yes" xml:space="preserve">
          <source>Asserts::assertCount</source>
          <target state="translated">Asserts::assertCount</target>
        </trans-unit>
        <trans-unit id="449f620e9c3ac3c2dfd740fc2d5294fe8d083a64" translate="yes" xml:space="preserve">
          <source>Asserts::assertEmpty</source>
          <target state="translated">Asserts::assertEmpty</target>
        </trans-unit>
        <trans-unit id="73af9ac6f11ec72885b65da15cb5aef4b69ed4b8" translate="yes" xml:space="preserve">
          <source>Asserts::assertEquals</source>
          <target state="translated">Asserts::assertEquals</target>
        </trans-unit>
        <trans-unit id="5c6962577b9554a84953948f4b6046c5ee571281" translate="yes" xml:space="preserve">
          <source>Asserts::assertFalse</source>
          <target state="translated">Asserts::assertFalse</target>
        </trans-unit>
        <trans-unit id="9d2bfc3bfc95c5f49d0258def3ec2f6998a66b27" translate="yes" xml:space="preserve">
          <source>Asserts::assertFileExists</source>
          <target state="translated">Asserts::assertFileExists</target>
        </trans-unit>
        <trans-unit id="4e08e7d086c69ce65f71211505bfa5b531ec2dfa" translate="yes" xml:space="preserve">
          <source>Asserts::assertFileNotExists</source>
          <target state="translated">Asserts::assertFileNotExists</target>
        </trans-unit>
        <trans-unit id="380c5788346987f87b44024282a6d61820a6f81c" translate="yes" xml:space="preserve">
          <source>Asserts::assertGreaterOrEquals</source>
          <target state="translated">Asserts::assertGreaterOrEquals</target>
        </trans-unit>
        <trans-unit id="34880aeb75c813a1fb9919cd02765c42c80db347" translate="yes" xml:space="preserve">
          <source>Asserts::assertGreaterThan</source>
          <target state="translated">Asserts::assertGreaterThan</target>
        </trans-unit>
        <trans-unit id="4d5294736c852c1bf30e828b5b141629aa22c75d" translate="yes" xml:space="preserve">
          <source>Asserts::assertGreaterThanOrEqual</source>
          <target state="translated">Asserts::assertGreaterThanOrEqual</target>
        </trans-unit>
        <trans-unit id="d9aea5ac3a2af0cc0fe6184ffe1e25599b17d5eb" translate="yes" xml:space="preserve">
          <source>Asserts::assertInstanceOf</source>
          <target state="translated">Asserts::assertInstanceOf</target>
        </trans-unit>
        <trans-unit id="b412b324e48cdf37f25adca57d48f75c8923b7fb" translate="yes" xml:space="preserve">
          <source>Asserts::assertInternalType</source>
          <target state="translated">Asserts::assertInternalType</target>
        </trans-unit>
        <trans-unit id="0871f5ffb88c5ed72dafd7ec5d301a3492060547" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsArray</source>
          <target state="translated">Asserts::assertIsArray</target>
        </trans-unit>
        <trans-unit id="61644fb5b5d15c975a9870ca088dfb8225babba0" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsBool</source>
          <target state="translated">Asserts::assertIsBool</target>
        </trans-unit>
        <trans-unit id="521ec7e04b871c88a814797a1271c90e7b58839a" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsCallable</source>
          <target state="translated">Asserts::assertIsCallable</target>
        </trans-unit>
        <trans-unit id="e4617ea65536538686fd2fae6c04b6d019612afe" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsEmpty</source>
          <target state="translated">Asserts::assertIsEmpty</target>
        </trans-unit>
        <trans-unit id="fdaf50d2f0135cfb6812921b125c03e9c78c7fc4" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsFloat</source>
          <target state="translated">Asserts::assertIsFloat</target>
        </trans-unit>
        <trans-unit id="1b632a4d644a6e462a7d8f7b8b96b3a95a0ec1fc" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsInt</source>
          <target state="translated">Asserts::assertIsInt</target>
        </trans-unit>
        <trans-unit id="d781d8bb6e3829ddcce6ee3bdfdc07d39959586f" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotArray</source>
          <target state="translated">Asserts::assertIsNotArray</target>
        </trans-unit>
        <trans-unit id="76109664ee4f5591c51bcf51e515452a784a9d53" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotBool</source>
          <target state="translated">Asserts::assertIsNotBool</target>
        </trans-unit>
        <trans-unit id="02c47ae46c2557380eb28695aee22c4f278d0e9d" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotCallable</source>
          <target state="translated">Asserts::assertIsNotCallable</target>
        </trans-unit>
        <trans-unit id="01284260d430fe0c38fcaea2ecb253c2ce376c03" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotFloat</source>
          <target state="translated">Asserts::assertIsNotFloat</target>
        </trans-unit>
        <trans-unit id="212c2f65768d36109e05f2d01aff5a605a88f9c1" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotInt</source>
          <target state="translated">Asserts::assertIsNotInt</target>
        </trans-unit>
        <trans-unit id="9de8113ff7a268bb84a308eb260b57922154e2e8" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotNumeric</source>
          <target state="translated">Asserts::assertIsNotNumeric</target>
        </trans-unit>
        <trans-unit id="dd8ad6e0dac8d0ac7582f71682ef6dd9a21fc0f6" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotObject</source>
          <target state="translated">Asserts::assertIsNotObject</target>
        </trans-unit>
        <trans-unit id="224c4f738bbe8881c27df99acf8990b62d01d966" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotResource</source>
          <target state="translated">Asserts::assertIsNotResource</target>
        </trans-unit>
        <trans-unit id="738c70588169b1be19b6585d4dea2b2fc220e22a" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotScalar</source>
          <target state="translated">Asserts::assertIsNotScalar</target>
        </trans-unit>
        <trans-unit id="eb43ae0150690c98e9626733c9bef50790e1dcfb" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNotString</source>
          <target state="translated">Asserts::assertIsNotString</target>
        </trans-unit>
        <trans-unit id="35997003d7a2a653bcaf930b858ada46c790f908" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsNumeric</source>
          <target state="translated">Asserts::assertIsNumeric</target>
        </trans-unit>
        <trans-unit id="6dd601e6076eb38cf126ccbdec06d5104825970a" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsObject</source>
          <target state="translated">Asserts::assertIsObject</target>
        </trans-unit>
        <trans-unit id="e02dae83e762cd81031fa43f02a551e09d9bcdca" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsResource</source>
          <target state="translated">Asserts::assertIsResource</target>
        </trans-unit>
        <trans-unit id="1cc7c23c3504f5792a0e46b15fa5cdd1a1214e8d" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsScalar</source>
          <target state="translated">Asserts::assertIsScalar</target>
        </trans-unit>
        <trans-unit id="6f6794a6cac9bb947b8d19847fbf9c9cd3027b99" translate="yes" xml:space="preserve">
          <source>Asserts::assertIsString</source>
          <target state="translated">Asserts::assertIsString</target>
        </trans-unit>
        <trans-unit id="8c70b7420f85df1ecf5f7ca50b6f68518ba63ce2" translate="yes" xml:space="preserve">
          <source>Asserts::assertLessOrEquals</source>
          <target state="translated">Asserts::assertLessOrEquals</target>
        </trans-unit>
        <trans-unit id="ff1a2bf6faab7dfbd4e29b6d294a66900a9b157b" translate="yes" xml:space="preserve">
          <source>Asserts::assertLessThan</source>
          <target state="translated">Asserts::assertLessThan</target>
        </trans-unit>
        <trans-unit id="737efc4d4367e4b7b5513637608fd391d68ba04b" translate="yes" xml:space="preserve">
          <source>Asserts::assertLessThanOrEqual</source>
          <target state="translated">Asserts::assertLessThanOrEqual</target>
        </trans-unit>
        <trans-unit id="4e39479b825ffa67dd4da9d10d5d537b3287443c" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotContains</source>
          <target state="translated">Asserts::assertNotContains</target>
        </trans-unit>
        <trans-unit id="ad0b89aeb32995f2a2cfc3d64e955fe31cca5e66" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotEmpty</source>
          <target state="translated">Asserts::assertNotEmpty</target>
        </trans-unit>
        <trans-unit id="a15a3b35d90f57536d0481bee1660a07d9267925" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotEquals</source>
          <target state="translated">Asserts::assertNotEquals</target>
        </trans-unit>
        <trans-unit id="84739d6aad075116accef65b266bf87c6699d249" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotFalse</source>
          <target state="translated">Asserts::assertNotFalse</target>
        </trans-unit>
        <trans-unit id="b91abf98e48ce8be2478290c7a3ae3f22051c922" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotInstanceOf</source>
          <target state="translated">Asserts::assertNotInstanceOf</target>
        </trans-unit>
        <trans-unit id="e889b39d56ded95317fb093a564f2208ae8be7d2" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotNull</source>
          <target state="translated">Asserts::assertNotNull</target>
        </trans-unit>
        <trans-unit id="a7206b6d59bc1aaad73cf148ad4d446918871997" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotRegExp</source>
          <target state="translated">Asserts::assertNotRegExp</target>
        </trans-unit>
        <trans-unit id="39cd5b581fb3a01e60c975eda87b491138132741" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotSame</source>
          <target state="translated">Asserts::assertNotSame</target>
        </trans-unit>
        <trans-unit id="7b6d3cf8ebe569ea921a54742719480adf43d504" translate="yes" xml:space="preserve">
          <source>Asserts::assertNotTrue</source>
          <target state="translated">Asserts::assertNotTrue</target>
        </trans-unit>
        <trans-unit id="e031fb6402df4e329ddc8a76d503a49752f98dca" translate="yes" xml:space="preserve">
          <source>Asserts::assertNull</source>
          <target state="translated">Asserts::assertNull</target>
        </trans-unit>
        <trans-unit id="6e2b07eecc5e95994f2227d53136f7e5fb09dcc5" translate="yes" xml:space="preserve">
          <source>Asserts::assertRegExp</source>
          <target state="translated">Asserts::assertRegExp</target>
        </trans-unit>
        <trans-unit id="8c23ab1ffdc174c05a750863f35f0d4fd518573f" translate="yes" xml:space="preserve">
          <source>Asserts::assertSame</source>
          <target state="translated">Asserts::assertSame</target>
        </trans-unit>
        <trans-unit id="bdddfeaddfa9309c256614e7372436dc1f155f50" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringContainsString</source>
          <target state="translated">Asserts::assertStringContainsString</target>
        </trans-unit>
        <trans-unit id="07bc96ad0672b9ec3d543abae9c9427fc2bc42df" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringContainsStringIgnoringCase</source>
          <target state="translated">Asserts::assertStringContainsStringIgnoringCase</target>
        </trans-unit>
        <trans-unit id="8c30bdc859a5546237ea90ef8660b7a27197afda" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringNotContainsString</source>
          <target state="translated">Asserts::assertStringNotContainsString</target>
        </trans-unit>
        <trans-unit id="21446cd78e929ffe2ba9a148785f8703110d58ea" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringNotContainsStringIgnoringCase</source>
          <target state="translated">Asserts::assertStringNotContainsStringIgnoringCase</target>
        </trans-unit>
        <trans-unit id="6c543cd4b40a8ec0045ebc3be181cc080c3f2dba" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringStartsNotWith</source>
          <target state="translated">Asserts::assertStringStartsNotWith</target>
        </trans-unit>
        <trans-unit id="cf505a08313a7f9ffa0213facc6c4dcbca775e0e" translate="yes" xml:space="preserve">
          <source>Asserts::assertStringStartsWith</source>
          <target state="translated">Asserts::assertStringStartsWith</target>
        </trans-unit>
        <trans-unit id="b504b264225fa6dd5cc4229a0ccd9989f5c26439" translate="yes" xml:space="preserve">
          <source>Asserts::assertTrue</source>
          <target state="translated">Asserts::assertTrue</target>
        </trans-unit>
        <trans-unit id="d412c223796f00022919315983fea80f3fa116f0" translate="yes" xml:space="preserve">
          <source>Asserts::expectException</source>
          <target state="translated">Asserts::expectException</target>
        </trans-unit>
        <trans-unit id="f6893b8dd29cbc3d9b10f007eb8691368acdbc02" translate="yes" xml:space="preserve">
          <source>Asserts::expectThrowable</source>
          <target state="translated">Asserts::expectThrowable</target>
        </trans-unit>
        <trans-unit id="24a6d479f1401fa9bb18e3960d0619b515c659c3" translate="yes" xml:space="preserve">
          <source>Asserts::fail</source>
          <target state="translated">Asserts::fail</target>
        </trans-unit>
        <trans-unit id="9c0e5b046372252f3c784bff6ae24ce23b7205e9" translate="yes" xml:space="preserve">
          <source>At first we need to create build project. Depending on your needs you can set up periodical build or trigger build once the change is pushed to GitHub (you will need GitHub plugin for that).</source>
          <target state="translated">처음에는 빌드 프로젝트를 만들어야합니다. 필요에 따라 변경 사항을 GitHub로 푸시하면 주기적 빌드 또는 트리거 빌드를 설정할 수 있습니다 (GitHub 플러그인이 필요함).</target>
        </trans-unit>
        <trans-unit id="8beae37760a9f22b157067687fe7e04b01b1d415" translate="yes" xml:space="preserve">
          <source>At some point you want to review which parts of your application are tested well and which are not. Just for this case the &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_coverage&quot;&gt;CodeCoverage&lt;/a&gt; is used. When you execute your tests to collect coverage report, you will receive statistics of all classes, methods, and lines triggered by these tests. The ratio between all lines in script and all touched lines is a main coverage criterion. In the ideal world you should get 100% code coverage, but in reality 80% is really enough. Because even 100% code coverage rate doesn&amp;rsquo;t save you from fatal errors and crashes.</source>
          <target state="translated">어떤 시점에서 응용 프로그램의 어느 부분이 제대로 테스트되었고 그렇지 않은 부분을 검토하려고합니다. 이 경우 &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_coverage&quot;&gt;CodeCoverage&lt;/a&gt; 가 사용됩니다. 적용 범위 보고서를 수집하기 위해 테스트를 실행하면이 테스트에 의해 트리거 된 모든 클래스, 메소드 및 행에 대한 통계를받습니다. 스크립트의 모든 라인과 모든 터치 된 라인 간의 비율이 주요 적용 기준입니다. 이상적인 세계에서는 100 % 코드 적용 범위를 가져야하지만 실제로 80 %이면 충분합니다. 100 % 코드 적용률조차도 치명적인 오류와 충돌로부터 당신을 구할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f0034761304a08534abb93f4cd510ee51dc54b73" translate="yes" xml:space="preserve">
          <source>At the end of a test all configuration changes will be rolled back to the original configuration values.</source>
          <target state="translated">테스트가 끝나면 모든 구성 변경 사항이 원래 구성 값으로 롤백됩니다.</target>
        </trans-unit>
        <trans-unit id="3bc99a3a12026abdebfbe2dd4852181c536757ad" translate="yes" xml:space="preserve">
          <source>At the end of test execution</source>
          <target state="translated">테스트 실행이 끝날 때</target>
        </trans-unit>
        <trans-unit id="7e7a617d1b28474f090c57053f851cb083262e25" translate="yes" xml:space="preserve">
          <source>At the end, it is worth specifying that Docker setup can be complicated and please make sure you understand Docker and Docker Compose before proceed. We prepared some links that might help you:</source>
          <target state="translated">마지막으로 Docker 설정이 복잡 할 수 있음을 지정하는 것이 좋습니다. 계속하기 전에 Docker 및 Docker Compose를 이해해야합니다. 도움이 될만한 몇 가지 링크를 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="2fa0a5f6862c8f26a6f0e42b6ed096586144d6e8" translate="yes" xml:space="preserve">
          <source>At the very beginning of test execution</source>
          <target state="translated">테스트 실행 초기에</target>
        </trans-unit>
        <trans-unit id="35dbda7232096e54894992ca579a77d65bd8e965" translate="yes" xml:space="preserve">
          <source>Attaches a file relative to the Codeception &lt;code&gt;_data&lt;/code&gt; directory to the given file upload field.</source>
          <target state="translated">Codeception &lt;code&gt;_data&lt;/code&gt; 디렉토리를 기준으로 파일을 지정된 파일 업로드 필드에 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="0a5084c3153fed39bdb9b7d4b22ba7f9cba44f14" translate="yes" xml:space="preserve">
          <source>Authenticates a user on a site without submitting a login form. Use it for fast pragmatic authorization in functional tests.</source>
          <target state="translated">로그인 양식을 제출하지 않고 사이트에서 사용자를 인증합니다. 기능 테스트에서 빠른 실용적 인증에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="69f0e738d5583a8fc95135c5f7104ef010ebf9e4" translate="yes" xml:space="preserve">
          <source>Authenticates user for HTTP_AUTH</source>
          <target state="translated">HTTP_AUTH에 대한 사용자를 인증합니다</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="9f3cce286f9f591bfdd6fa508d994374085e6605" translate="yes" xml:space="preserve">
          <source>Authorizes user on a site without submitting login form. Use it for fast pragmatic authorization in functional tests.</source>
          <target state="translated">로그인 양식을 제출하지 않고 사이트의 사용자에게 권한을 부여합니다. 기능 테스트에서 빠른 실용 인증에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="23202869fef04e28319a4ccf327e8c770f74e322" translate="yes" xml:space="preserve">
          <source>Auto-updates phar archive from official site: &amp;lsquo;http://codeception.com/codecept.phar&amp;rsquo; .</source>
          <target state="translated">'http://codeception.com/codecept.phar'공식 사이트에서 phar 아카이브를 자동 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="b4de9ff9e742ed376594251c274259a2c24272d5" translate="yes" xml:space="preserve">
          <source>Autoload::__construct()</source>
          <target state="translated">Autoload::__construct()</target>
        </trans-unit>
        <trans-unit id="5e913aacc921bacc475b6f517a9f1b88b3f0363d" translate="yes" xml:space="preserve">
          <source>Autoload::addNamespace()</source>
          <target state="translated">Autoload::addNamespace()</target>
        </trans-unit>
        <trans-unit id="b744fc8c798d203e655cd2eeefb5ee807d84f561" translate="yes" xml:space="preserve">
          <source>Autoload::load()</source>
          <target state="translated">Autoload::load()</target>
        </trans-unit>
        <trans-unit id="277d2ae06028be36e9579d7c7f0c4b6aac036dd7" translate="yes" xml:space="preserve">
          <source>Autoload::loadMappedFile()</source>
          <target state="translated">Autoload::loadMappedFile()</target>
        </trans-unit>
        <trans-unit id="13a9f64a55132376441dfcf451e8a585765505f4" translate="yes" xml:space="preserve">
          <source>Autoload::requireFile()</source>
          <target state="translated">Autoload::requireFile()</target>
        </trans-unit>
        <trans-unit id="3d219bbebdee827979cc47cd0c45091532448e35" translate="yes" xml:space="preserve">
          <source>Autoloader, which is fully compatible with PSR-4, and can be used to autoload your &lt;code&gt;Helper&lt;/code&gt;, &lt;code&gt;Page&lt;/code&gt;, and &lt;code&gt;Step&lt;/code&gt; classes.</source>
          <target state="translated">Autoloader는 PSR-4와 완벽하게 호환되며 &lt;code&gt;Helper&lt;/code&gt; , &lt;code&gt;Page&lt;/code&gt; 및 &lt;code&gt;Step&lt;/code&gt; 클래스 를 자동로드하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38b5d0dd2a1d99cba157a215ae014edf10488b48" translate="yes" xml:space="preserve">
          <source>BDD</source>
          <target state="translated">BDD</target>
        </trans-unit>
        <trans-unit id="236ae28dbecf28768a3709f7d5a684df5a19f740" translate="yes" xml:space="preserve">
          <source>BDD encourages exploration and debate in order to formalize the requirements and the features that needs to be implemented by requesting to write the User Stories in a way that everyone can understand.</source>
          <target state="translated">BDD는 모든 사람들이 이해할 수있는 방식으로 사용자 사례를 작성하도록 요청하여 구현해야하는 요구 사항과 기능을 공식화하기 위해 탐색 및 토론을 장려합니다.</target>
        </trans-unit>
        <trans-unit id="c92e4fb9e11761882d073a2c3464ca4b4f2d30c1" translate="yes" xml:space="preserve">
          <source>BDD has its own evolution from the days it was born, started by replacing &amp;ldquo;test&amp;rdquo; to &amp;ldquo;should&amp;rdquo; in unit tests, and moving towards powerful tools like Cucumber and Behat, which made user stories (human readable text) to be executed as an acceptance test.</source>
          <target state="translated">BDD는 처음부터 단위 테스트에서 &quot;test&quot;를 &quot;should&quot;로 바꾸고 Cucumber 및 Behat과 같은 강력한 도구로 이동하여 사용자 스토리 (사람이 읽을 수있는 텍스트)를 승인 테스트.</target>
        </trans-unit>
        <trans-unit id="44a60639609e668544aa829cd0164c1f3fb0f590" translate="yes" xml:space="preserve">
          <source>BDD was introduced by &lt;a href=&quot;https://dannorth.net/introducing-bdd/&quot;&gt;Dan North&lt;/a&gt;. He described it as:</source>
          <target state="translated">BDD는 &lt;a href=&quot;https://dannorth.net/introducing-bdd/&quot;&gt;Dan North에&lt;/a&gt; 의해 소개되었습니다 . 그는 그것을 다음과 같이 설명했다.</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="27c201541e9702b97c568e12cac1d3cd5245954c" translate="yes" xml:space="preserve">
          <source>Basic Setup</source>
          <target state="translated">기본 설정</target>
        </trans-unit>
        <trans-unit id="c6db26702117efa7f5e8a01c90f5a4dc73e0ab41" translate="yes" xml:space="preserve">
          <source>Basic class for Modules and Helpers. You must extend from it while implementing own helpers.</source>
          <target state="translated">모듈과 헬퍼를위한 기본 클래스. 자신의 도우미를 구현하면서 확장해야합니다.</target>
        </trans-unit>
        <trans-unit id="de4170e8d22bb2e0912d3b03aba91a32b185c2d0" translate="yes" xml:space="preserve">
          <source>Basic example:</source>
          <target state="translated">기본 예 :</target>
        </trans-unit>
        <trans-unit id="65f6d95b5bdf4b17c57af848cb042f7a2955f25f" translate="yes" xml:space="preserve">
          <source>Basically you can define different environments inside the &lt;code&gt;env&lt;/code&gt; root, name them (&lt;code&gt;phantom&lt;/code&gt;, &lt;code&gt;chrome&lt;/code&gt; etc.), and then redefine any configuration parameters that were set before.</source>
          <target state="translated">기본적으로 &lt;code&gt;env&lt;/code&gt; 루트 내에서 다른 환경을 정의하고 환경 이름 ( &lt;code&gt;phantom&lt;/code&gt; , &lt;code&gt;chrome&lt;/code&gt; 등)을 설정 한 다음 이전에 설정 한 구성 매개 변수를 다시 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13c7240b5dbe7e6809465b69736a5cafd03e490e" translate="yes" xml:space="preserve">
          <source>Be sure you don&amp;rsquo;t use the production server to connect.</source>
          <target state="translated">프로덕션 서버를 사용하여 연결하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="79ef848b7612623f9297a1f463cd4cfb26b2f007" translate="yes" xml:space="preserve">
          <source>Be warned that fuzzy locators can be significantly slower than strict locators. Especially if you use Selenium WebDriver with &lt;code&gt;wait&lt;/code&gt; (aka implicit wait) option. In the example above if you set &lt;code&gt;wait&lt;/code&gt; to 5 seconds and use XPath string as fuzzy locator, &lt;code&gt;submitForm&lt;/code&gt; method will wait for 5 seconds at each step. That means 5 seconds finding the form by ID, another 5 seconds finding by CSS until it finally tries to find the form by XPath). If speed is a concern, it&amp;rsquo;s recommended you stick with explicitly specifying the locator type via the array syntax.</source>
          <target state="translated">퍼지 로케이터는 엄격한 로케이터보다 훨씬 느릴 수 있습니다. 특히 Selenium WebDriver를 &lt;code&gt;wait&lt;/code&gt; (일명 암시 적 대기) 옵션 과 함께 사용하는 경우 . 위의 예제에서 &lt;code&gt;wait&lt;/code&gt; 를 5 초로 설정 하고 XPath 문자열을 퍼지 로케이터로 사용하면 &lt;code&gt;submitForm&lt;/code&gt; 메소드는 각 단계에서 5 초 동안 대기합니다. 즉, ID로 양식을 찾는 5 초, 마지막으로 XPath로 양식을 찾으려고 할 때까지 CSS에서 5 초를 찾는 것을 의미합니다. 속도가 중요한 경우, 배열 구문을 통해 로케이터 유형을 명시 적으로 지정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="83e3de8098e0ef7d6d99eb5d7beecb45dfb587b5" translate="yes" xml:space="preserve">
          <source>Beanstalkd</source>
          <target state="translated">Beanstalkd</target>
        </trans-unit>
        <trans-unit id="b057975b68bfd4db62bc509cd52526e49ddd01fb" translate="yes" xml:space="preserve">
          <source>Beanstalkd: &lt;strong&gt;stable&lt;/strong&gt;</source>
          <target state="translated">콩 줄기 : &lt;strong&gt;안정&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4eeff6525bc968c1d5c7ec7892976a06b1227468" translate="yes" xml:space="preserve">
          <source>Beanstalkd: pda/pheanstalk ~3.0</source>
          <target state="translated">콩 줄기 : pda / phanstalk ~ 3.0</target>
        </trans-unit>
        <trans-unit id="2bad379e71691ec4daf723999f856a32237d637d" translate="yes" xml:space="preserve">
          <source>Before step</source>
          <target state="translated">단계 전에</target>
        </trans-unit>
        <trans-unit id="80c897d583a2a2e2502974239bb2fa3ce99c0e38" translate="yes" xml:space="preserve">
          <source>Before suite is executed</source>
          <target state="translated">스위트가 실행되기 전에</target>
        </trans-unit>
        <trans-unit id="8080b453d6fb464065e24763debece2f1f210d5f" translate="yes" xml:space="preserve">
          <source>Before test is executed</source>
          <target state="translated">테스트가 실행되기 전에</target>
        </trans-unit>
        <trans-unit id="d76ce9297a90dc8b6de094404a3501f96d761648" translate="yes" xml:space="preserve">
          <source>Before we execute this test, we should make sure that the website is running on a local web server. Let&amp;rsquo;s open the &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; file and replace the URL with the URL of your web application:</source>
          <target state="translated">이 테스트를 실행하기 전에 웹 사이트가 로컬 웹 서버에서 실행 중인지 확인해야합니다. &lt;code&gt;tests/acceptance.suite.yml&lt;/code&gt; 파일을 열고 URL을 웹 응용 프로그램의 URL로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="5f761aeb8bca5813a57d1c6e3e7125c56abb8229" translate="yes" xml:space="preserve">
          <source>Before/After Annotations</source>
          <target state="translated">주석 전후</target>
        </trans-unit>
        <trans-unit id="47339c9a15586b43505d2dc883127e6b2e5267f1" translate="yes" xml:space="preserve">
          <source>Behavior Driven Development</source>
          <target state="translated">행동 중심 개발</target>
        </trans-unit>
        <trans-unit id="d1a42739c8f6e6970d33e1f492afe4e2d34200ea" translate="yes" xml:space="preserve">
          <source>Behavior Driven Development (BDD) is a popular software development methodology. BDD is considered an extension of TDD, and is greatly inspired by &lt;a href=&quot;http://agilemanifesto.org/&quot;&gt;Agile&lt;/a&gt; practices. The primary reason to choose BDD as your development process is to break down communication barriers between business and technical teams. BDD encourages the use of automated testing to verify all documented features of a project from the very beginning. This is why it is common to talk about BDD in the context of test frameworks (like Codeception). The BDD approach, however, is about much more than testing - it is a common language for all team members to use during the development process.</source>
          <target state="translated">BDD (Behavior Driven Development)는 널리 사용되는 소프트웨어 개발 방법입니다. BDD는 TDD의 확장으로 간주되며 &lt;a href=&quot;http://agilemanifesto.org/&quot;&gt;애자일&lt;/a&gt; 관행에 크게 영향을받습니다 . BDD를 개발 프로세스로 선택하는 주된 이유는 비즈니스 팀과 기술 팀 간의 커뮤니케이션 장벽을 없애기 위함입니다. BDD는 자동화 된 테스트를 사용하여 프로젝트의 모든 문서화 된 기능을 처음부터 확인하도록 권장합니다. 그렇기 때문에 테스트 프레임 워크 (Codeception과 같은)에서 BDD에 대해 이야기하는 것이 일반적입니다. 그러나 BDD 접근 방식은 테스트 이상의 것입니다. 이는 개발 과정에서 모든 팀 구성원이 사용하는 공통 언어입니다.</target>
        </trans-unit>
        <trans-unit id="552d5502f55d8acfb1d620e6718015d6679eef65" translate="yes" xml:space="preserve">
          <source>Besides the scenario steps listed we got the notification that our steps are not defined yet. We can define them easily by executing &lt;code&gt;gherkin:snippets&lt;/code&gt; command for the given suite:</source>
          <target state="translated">나열된 시나리오 단계 외에도 단계가 아직 정의되지 않았다는 알림을 받았습니다. 주어진 제품군에 대해 &lt;code&gt;gherkin:snippets&lt;/code&gt; 명령을 실행하여 쉽게 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="be3124bc8cf31d9db220976ad010c52f31c544de" translate="yes" xml:space="preserve">
          <source>Beware that this option will not perform any changes in the data returned by &lt;code&gt;fetchData&lt;/code&gt;, and store it as it is.</source>
          <target state="translated">이 옵션은 &lt;code&gt;fetchData&lt;/code&gt; 에서 반환 된 데이터를 변경하지 않고 그대로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="090a4df9a0c549f06612bafdc4222e4806348eae" translate="yes" xml:space="preserve">
          <source>Binds a queue to an exchange</source>
          <target state="translated">대기열을 교환에 바인딩</target>
        </trans-unit>
        <trans-unit id="89ec4ec2bf400e823f3ca49d0cb938b0fedd7bab" translate="yes" xml:space="preserve">
          <source>Bootstrap</source>
          <target state="translated">Bootstrap</target>
        </trans-unit>
        <trans-unit id="f928b586c58cd50430c26a70b03be3ff99b8a392" translate="yes" xml:space="preserve">
          <source>Bootstrap is a classical way to run custom PHP code before your tests. However, we recommend you to use Extensions instead of bootstrap scripts for better flexibility. If you need configuration, conditional enabling or disabling bootstrap script, extensions should work for you better.</source>
          <target state="translated">부트 스트랩은 테스트 전에 사용자 정의 PHP 코드를 실행하는 고전적인 방법입니다. 그러나 유연성을 높이려면 부트 스트랩 스크립트 대신 확장을 사용하는 것이 좋습니다. 구성, 조건부 활성화 또는 비활성화 부트 스트랩 스크립트가 필요한 경우 확장 기능이 더 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7c48893165edf6d8f3593705bc2310feffbbeb86" translate="yes" xml:space="preserve">
          <source>Bootstrap script can be executed with &lt;code&gt;--bootstrap&lt;/code&gt; option for &lt;code&gt;codecept run&lt;/code&gt; command:</source>
          <target state="translated">부트 스트랩 스크립트를 실행할 수 있습니다 &lt;code&gt;--bootstrap&lt;/code&gt; 에 대한 옵션 &lt;code&gt;codecept run&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="6b9f602129c168b7de7deb9c9bf963995c57a267" translate="yes" xml:space="preserve">
          <source>Browser Engine</source>
          <target state="translated">브라우저 엔진</target>
        </trans-unit>
        <trans-unit id="40547f79e62f9e4e3940e617a998ab3ba2c9a621" translate="yes" xml:space="preserve">
          <source>BrowserStack</source>
          <target state="translated">BrowserStack</target>
        </trans-unit>
        <trans-unit id="dec922f84e977934dc3fca88d3b1d29e8a9c5b96" translate="yes" xml:space="preserve">
          <source>Browsers: Chrome and/or Firefox</source>
          <target state="translated">브라우저 : Chrome 및 / 또는 Firefox</target>
        </trans-unit>
        <trans-unit id="bbd80cf7e2ded5efed8f4ee9151ab57a8ab66392" translate="yes" xml:space="preserve">
          <source>Build</source>
          <target state="translated">Build</target>
        </trans-unit>
        <trans-unit id="3c8f206179776a8eebfffcdc5a8805c818cea096" translate="yes" xml:space="preserve">
          <source>Builder uses chained calls. So each call to builder returns a builder object. Except for &lt;code&gt;getDom&lt;/code&gt; and &lt;code&gt;__toString&lt;/code&gt; methods.</source>
          <target state="translated">빌더는 체인 통화를 사용합니다. 따라서 빌더를 호출 할 때마다 빌더 오브젝트가 리턴됩니다. &lt;code&gt;getDom&lt;/code&gt; 및 &lt;code&gt;__toString&lt;/code&gt; 메소드는 제외 합니다.</target>
        </trans-unit>
        <trans-unit id="245eb3670ba5dc93b31b07256919d74625394dd6" translate="yes" xml:space="preserve">
          <source>But if you run tests on different server (or your webserver doesn&amp;rsquo;t use code from current directory) a single option &lt;code&gt;remote&lt;/code&gt; should be added to config. For example, let&amp;rsquo;s turn on remote coverage for acceptance suite in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;:</source>
          <target state="translated">그러나 다른 서버에서 테스트를 실행하거나 웹 서버가 현재 디렉토리의 코드를 사용하지 않는 경우 단일 옵션 &lt;code&gt;remote&lt;/code&gt; 을 구성에 추가해야합니다. 예를 들어,에서 수용 제품군에 대한 원격 범위에 돌려 보자 &lt;code&gt;acceptance.suite.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e52ddb01b4f8aa04e089e0d87f6562b2396ea96b" translate="yes" xml:space="preserve">
          <source>But it won&amp;rsquo;t be executed for all other locator types. See the example:</source>
          <target state="translated">그러나 다른 모든 로케이터 유형에서는 실행되지 않습니다. 예를보십시오 :</target>
        </trans-unit>
        <trans-unit id="e7a4c28b29f440ada292e18b27f3667f24cf2bb8" translate="yes" xml:space="preserve">
          <source>But let&amp;rsquo;s move further. The PageObject concept specifies that the methods for the page interaction should also be stored in a PageObject class.</source>
          <target state="translated">그러나 더 나아가 자. PageObject 개념은 페이지 상호 작용을위한 메서드도 PageObject 클래스에 저장되어야 함을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d5d387b0a514f75f5ac26431991a46cd1e6f8ca7" translate="yes" xml:space="preserve">
          <source>But let&amp;rsquo;s move further. The PageObject concept specifies that the methods for the page interaction should also be stored in a PageObject class. It now stores a passed instance of an Actor class. An AcceptanceTester can be accessed via the &lt;code&gt;AcceptanceTester&lt;/code&gt; property of that class. Let&amp;rsquo;s define a &lt;code&gt;login&lt;/code&gt; method in this class:</source>
          <target state="translated">그러나 더 나아가 봅시다. PageObject 개념은 페이지 상호 작용을위한 메소드가 PageObject 클래스에 저장되도록 지정합니다. 이제 전달 된 Actor 클래스의 인스턴스를 저장합니다. AcceptanceTester는 해당 클래스 의 &lt;code&gt;AcceptanceTester&lt;/code&gt; 속성을 통해 액세스 할 수 있습니다 . 이 클래스에서 &lt;code&gt;login&lt;/code&gt; 메소드를 정의 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="d232831d0b73bc285d4ed4382d561e49e782038b" translate="yes" xml:space="preserve">
          <source>But we don&amp;rsquo;t want to analyze console output for each failing build. Especially If Jenkins can collect and display the results inside its web UI. Codeception can export its results using JUnit XML format. To generate XML report on each build we will need to append &lt;code&gt;--xml&lt;/code&gt; option to Codeception execution command. Codeception will print &lt;code&gt;result.xml&lt;/code&gt; file containing information about test status with steps and stack traces for failing tests.</source>
          <target state="translated">그러나 우리는 각 실패한 빌드에 대한 콘솔 출력을 분석하고 싶지 않습니다. 특히 Jenkins가 웹 UI 내에서 결과를 수집하고 표시 할 수있는 경우. Codeception은 JUnit XML 형식을 사용하여 결과를 내보낼 수 있습니다. 각 빌드에서 XML 보고서를 생성하려면 Codeception 실행 명령에 &lt;code&gt;--xml&lt;/code&gt; 옵션을 추가해야합니다 . Codeception은 테스트 실패에 대한 단계 및 스택 추적과 함께 테스트 상태에 대한 정보가 포함 된 &lt;code&gt;result.xml&lt;/code&gt; 파일을 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="5efbadaf6c9141e5fff9af14725251144b897b22" translate="yes" xml:space="preserve">
          <source>But what are extensions, anyway? Basically speaking, extensions are nothing more than event listeners based on the &lt;a href=&quot;https://symfony.com/doc/current/components/event_dispatcher/introduction.html&quot;&gt;Symfony Event Dispatcher&lt;/a&gt; component.</source>
          <target state="translated">어쨌든 확장이란 무엇입니까? 기본적으로 확장은 &lt;a href=&quot;https://symfony.com/doc/current/components/event_dispatcher/introduction.html&quot;&gt;Symfony Event Dispatcher&lt;/a&gt; 구성 요소를 기반으로하는 이벤트 리스너에 지나지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8b87ae70ef37cff5a82a8417a804db4a687050b6" translate="yes" xml:space="preserve">
          <source>But what if you need to change the output format of the XML or JSON results triggered with the &lt;code&gt;--xml&lt;/code&gt; or &lt;code&gt;--json&lt;/code&gt; options? Codeception uses PHPUnit printers and overrides them. If you need to customize one of the standard reporters you can override them too. If you are thinking on implementing your own reporter you should add a &lt;code&gt;reporters&lt;/code&gt; section to &lt;code&gt;codeception.yml&lt;/code&gt; and override one of the standard printer classes with one of your own:</source>
          <target state="translated">그러나 &lt;code&gt;--xml&lt;/code&gt; 또는 &lt;code&gt;--json&lt;/code&gt; 옵션으로 트리거 된 XML 또는 JSON 결과의 출력 형식을 변경해야하는 경우 어떻게해야 합니까? Codeception은 PHPUnit 프린터를 사용하여 무시합니다. 표준 리포터 중 하나를 사용자 정의해야하는 경우이를 무시할 수 있습니다. 자신의 리포터를 구현할 생각이라면 &lt;code&gt;codeception.yml&lt;/code&gt; 에 &lt;code&gt;reporters&lt;/code&gt; 섹션을 추가 하고 표준 프린터 클래스 중 하나를 자신의 것으로 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bda688a0af2c974abb86c3700ba9f51f6014012" translate="yes" xml:space="preserve">
          <source>But will &lt;em&gt;not&lt;/em&gt; be true for strings like:</source>
          <target state="translated">그러나 다음과 같은 문자열에는 해당 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="961a968c779c233d04163025ee21150f2f72437c" translate="yes" xml:space="preserve">
          <source>But will ignore strings like:</source>
          <target state="translated">그러나 다음과 같은 문자열은 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a9a691ed91b64e5307175d7ee53f213b987e10b1" translate="yes" xml:space="preserve">
          <source>By default Codeception runs tests in alphabetic order. To ensure that tests are not depending on each other (unless explicitly declared via &lt;code&gt;@depends&lt;/code&gt;) you can enable &lt;code&gt;shuffle&lt;/code&gt; option.</source>
          <target state="translated">기본적으로 Codeception은 알파벳 순서로 테스트를 실행합니다. 테스트가 서로 의존하지 않도록 ( &lt;code&gt;@depends&lt;/code&gt; 를 통해 명시 적으로 선언하지 않는 한 ) &lt;code&gt;shuffle&lt;/code&gt; 옵션을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0766f64f5fb4c64125a6f7a0702d83fcaf1c01bf" translate="yes" xml:space="preserve">
          <source>By default Codeception uses the &lt;code&gt;E_ALL &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; error reporting level. In functional tests you might want to change this level depending on your framework&amp;rsquo;s error policy. The error reporting level can be set in the suite configuration file:</source>
          <target state="translated">기본적으로 Codeception은 &lt;code&gt;E_ALL &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; 오류보고 수준을 사용합니다. 기능 테스트에서 프레임 워크의 오류 정책에 따라이 레벨을 변경하려고 할 수 있습니다. 스위트 구성 파일에서 오류보고 레벨을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8e099de5f61c91ae4f45c8fd624fdf1a3c89680" translate="yes" xml:space="preserve">
          <source>By default Snapshot uses &lt;code&gt;assertEquals&lt;/code&gt; assertion, however this can be customized by overriding &lt;code&gt;assertData&lt;/code&gt; method.</source>
          <target state="translated">기본적으로 Snapshot은 &lt;code&gt;assertEquals&lt;/code&gt; 어설 션을 사용 하지만 &lt;code&gt;assertData&lt;/code&gt; 메서드 를 재정 의하여 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6386dab825a0483a32aa0b3790b912c44bd1485c" translate="yes" xml:space="preserve">
          <source>By default all available methods are loaded, but you can also use the &lt;code&gt;part&lt;/code&gt; option to select only the needed actions and to avoid conflicts. The avilable parts are:</source>
          <target state="translated">기본적으로 사용 가능한 모든 방법이로드되지만 &lt;code&gt;part&lt;/code&gt; 옵션을 사용 하여 필요한 작업 만 선택하고 충돌을 방지 할 수도 있습니다 . 사용 가능한 부분은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b406230a872b6e528dc0e7339d5a5b5bab3d7ef6" translate="yes" xml:space="preserve">
          <source>By default all available methods are loaded, but you can specify parts to select only needed actions and avoid conflicts.</source>
          <target state="translated">기본적으로 사용 가능한 모든 메소드가로드되지만 필요한 조치 만 선택하고 충돌을 피하기 위해 파트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ed1e1cab81bb731614e6b736b27c3509e11e298" translate="yes" xml:space="preserve">
          <source>By default fixtures are loaded in &amp;lsquo;append&amp;rsquo; mode. To replace all data in database, use &lt;code&gt;false&lt;/code&gt; as second parameter:</source>
          <target state="translated">기본적으로 조명기는 'append'모드로로드됩니다. 데이터베이스의 모든 데이터를 바꾸려면 두 번째 매개 변수로 &lt;code&gt;false&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3adbc5a8c697ad4119495ab0f0e25283a942231d" translate="yes" xml:space="preserve">
          <source>By default it will create 3 suites &lt;strong&gt;acceptance&lt;/strong&gt;, &lt;strong&gt;functional&lt;/strong&gt;, and &lt;strong&gt;unit&lt;/strong&gt;.</source>
          <target state="translated">기본적으로 3 개의 스위트 &lt;strong&gt;수용&lt;/strong&gt; , &lt;strong&gt;기능&lt;/strong&gt; 및 &lt;strong&gt;단위를 작성&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="520335dd2f5adca86be7d50acefb0f63d2343949" translate="yes" xml:space="preserve">
          <source>By default produces unique string with param as a prefix:</source>
          <target state="translated">기본적으로 param을 접두사로 사용하여 고유 한 문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="59b0f406a288084bf7ada8af78a0fc7d7f07cf68" translate="yes" xml:space="preserve">
          <source>By default the image has codecept as its entrypoint, to run the tests simply supply the run command</source>
          <target state="translated">기본적으로 이미지의 시작점으로 코드 셉트가 있으며 테스트를 실행하려면 단순히 run 명령을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="77a96e1c3f277e84995cbd72e484177079e9eb48" translate="yes" xml:space="preserve">
          <source>By default they throw Incomplete exceptions to ensure test with missing steps won&amp;rsquo;t be accidentally marked as successful. We will need to implement those steps. As we are in acceptance suite we are probably using &lt;a href=&quot;modules/phpbrowser&quot;&gt;PHPBrowser&lt;/a&gt; or &lt;a href=&quot;modules/webdriver&quot;&gt;WebDriver&lt;/a&gt; modules. This means that we can use their methods inside Tester file, as we do with writing tests using &lt;code&gt;$I-&amp;gt;&lt;/code&gt;. You can use &lt;code&gt;amOnPage&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;see&lt;/code&gt; methods inside a step definitions, so each Gherkin scenario step to be extended with basic Codeception steps. Let&amp;rsquo;s show how it can be implemented in our case:</source>
          <target state="translated">기본적으로 누락 된 단계가있는 테스트가 우연히 성공한 것으로 표시되지 않도록 불완전 예외를 처리합니다. 이러한 단계를 구현해야합니다. 수용 스위트에 있으므로 아마도 &lt;a href=&quot;modules/phpbrowser&quot;&gt;PHPBrowser&lt;/a&gt; 또는 &lt;a href=&quot;modules/webdriver&quot;&gt;WebDriver&lt;/a&gt; 모듈을 사용하고있을 것입니다 . 이것은 &lt;code&gt;$I-&amp;gt;&lt;/code&gt; 사용하여 테스트를 작성하는 것과 마찬가지로 테스터 파일 내에서 메소드를 사용할 수 있음을 의미합니다 . 당신은 사용할 수 있습니다 &lt;code&gt;amOnPage&lt;/code&gt; 을 , &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;see&lt;/code&gt; 각 작은 오이 시나리오 단계는 기본 Codeception 단계를 확장 할 수 있도록 단계 정의 내부 방법. 우리의 경우 어떻게 구현할 수 있는지 보여 드리겠습니다.</target>
        </trans-unit>
        <trans-unit id="faebe3c6ce72ae484460587e99d04e8eb2835487" translate="yes" xml:space="preserve">
          <source>By default this module will search for AppKernel in the &lt;code&gt;app&lt;/code&gt; directory.</source>
          <target state="translated">기본적으로이 모듈은 &lt;code&gt;app&lt;/code&gt; 디렉토리 에서 AppKernel을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="f834fd99c736f564bd7a5021b2a84440f2f0c114" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;submitForm&lt;/code&gt; doesn&amp;rsquo;t send values for buttons. The last parameter allows specifying what button values should be sent, or button values can be explicitly specified in the second parameter:</source>
          <target state="translated">기본적으로 &lt;code&gt;submitForm&lt;/code&gt; 은 버튼 값을 보내지 않습니다. 마지막 매개 변수는 어떤 단추 값을 보내야하는지 지정하거나 두 번째 매개 변수에 단추 값을 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c69e9bc708fa1d1910eede5ab3aa797b2d9968b0" translate="yes" xml:space="preserve">
          <source>By default, WebDriver module is configured to automatically start browser before the test and stop afterward. However, this can be switched off with &lt;code&gt;start: false&lt;/code&gt; module configuration. To start a browser you will need to write corresponding methods in Acceptance &lt;a href=&quot;06-modulesandhelpers#Helpers&quot;&gt;Helper&lt;/a&gt;.</source>
          <target state="translated">기본적으로 WebDriver 모듈은 테스트 전에 브라우저를 자동으로 시작한 후 중지하도록 구성되어 있습니다. 그러나 &lt;code&gt;start: false&lt;/code&gt; 모듈 구성 으로이를 끌 수 있습니다 . 브라우저를 시작하려면 Acceptance &lt;a href=&quot;06-modulesandhelpers#Helpers&quot;&gt;Helper에&lt;/a&gt; 해당 메소드를 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9221daae415e33dde6b774db47b32c9424acdfb3" translate="yes" xml:space="preserve">
          <source>By default, all snapshot files are stored in json format, so if you have to work with different formats, neither the diff output or the snapshot file data will be helpful. To fix this, you can call the snapshot method &lt;code&gt;shouldSaveAsJson(false)&lt;/code&gt; and set the file extension by calling &lt;code&gt;setSnapshotFileExtension()&lt;/code&gt;:</source>
          <target state="translated">기본적으로 모든 스냅 샷 파일은 json 형식으로 저장되므로 다른 형식으로 작업해야하는 경우 diff 출력이나 스냅 샷 파일 데이터가 도움이되지 않습니다. 이 문제를 해결하려면 스냅 샷 메서드 &lt;code&gt;shouldSaveAsJson(false)&lt;/code&gt; 를 호출하고 &lt;code&gt;setSnapshotFileExtension()&lt;/code&gt; 을 호출하여 파일 확장자를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="036dcba914c2822a60f4e2eba7cbdfa21aa838cd" translate="yes" xml:space="preserve">
          <source>By default, if coverage is reported to be &amp;lt; 35% it is marked as low, and &amp;gt;70% is high coverage. You can also define high and low boundaries with &lt;code&gt;low_limit&lt;/code&gt; and &lt;code&gt;high_limit&lt;/code&gt; config options:</source>
          <target state="translated">기본적으로 적용 범위가 35 % 미만인 것으로보고되면 낮은 것으로 표시되고 70 % 이상이 높은 적용 범위입니다. &lt;code&gt;low_limit&lt;/code&gt; 및 &lt;code&gt;high_limit&lt;/code&gt; 구성 옵션을 사용 하여 상한 및 하한을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b39cbaa0073dbcb9999a74004ef183c8d6c938" translate="yes" xml:space="preserve">
          <source>By default, one &lt;code&gt;RunFailed&lt;/code&gt; Extension is already enabled in your global &lt;code&gt;codeception.yml&lt;/code&gt;. It allows you to rerun failed tests by using the &lt;code&gt;-g failed&lt;/code&gt; option:</source>
          <target state="translated">기본적으로 하나의 &lt;code&gt;RunFailed&lt;/code&gt; Extension이 이미 전역 &lt;code&gt;codeception.yml&lt;/code&gt; 에서 활성화되어 있습니다 . &lt;code&gt;-g failed&lt;/code&gt; 옵션 을 사용하여 실패한 테스트를 다시 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="991b771bfbd4b52ecd9c381cda47aaa4fdd21594" translate="yes" xml:space="preserve">
          <source>By default, show all whitelisted files in &lt;code&gt;--coverage-text&lt;/code&gt; output not just the ones with coverage information is set to false, config option:</source>
          <target state="translated">기본적 으로 적용 범위 정보가있는 파일 &lt;code&gt;--coverage-text&lt;/code&gt; false로 설정되어 있지 않고 --coverage-text 출력 에 모든 허용 된 파일 표시 : config 옵션 :</target>
        </trans-unit>
        <trans-unit id="dd832b01d4b3574d3087642e0c54463a677a5082" translate="yes" xml:space="preserve">
          <source>By default, show only the coverage report summary in &lt;code&gt;--coverage-text&lt;/code&gt; output is set to false, config option:</source>
          <target state="translated">기본적으로 &lt;code&gt;--coverage-text&lt;/code&gt; 출력 에 적용 범위 보고서 요약 만 표시 가 false로 설정되어 있습니다 (config 옵션).</target>
        </trans-unit>
        <trans-unit id="a33010c53b5d5987cc4723ff6653941bbff0041e" translate="yes" xml:space="preserve">
          <source>By default, the module will wrap everything into a transaction for each test and roll it back afterwards (this is controlled by the &lt;code&gt;cleanup&lt;/code&gt; setting). By doing this, tests will run much faster and will be isolated from each other.</source>
          <target state="translated">기본적으로 모듈은 각 테스트에 대해 모든 것을 트랜잭션으로 래핑하고 나중에 롤백합니다 (이는 &lt;code&gt;cleanup&lt;/code&gt; 설정에 의해 제어 됨 ). 이렇게하면 테스트가 훨씬 더 빠르게 실행되고 서로 격리됩니다.</target>
        </trans-unit>
        <trans-unit id="95760f116b2a3f0f12ade7dfedbabf0c50a19b74" translate="yes" xml:space="preserve">
          <source>By default, the module will wrap everything into a transaction for each test and roll it back afterwards. By doing this tests will run much faster and will be isolated from each other.</source>
          <target state="translated">기본적으로 모듈은 모든 테스트마다 트랜잭션으로 모든 것을 랩핑하고 나중에 롤백합니다. 이 테스트를 수행하면 훨씬 빠르게 실행되며 서로 격리됩니다.</target>
        </trans-unit>
        <trans-unit id="9ba952d9622d86d9cc3bba20683bed01694f4133" translate="yes" xml:space="preserve">
          <source>By implementing event handling methods you can listen for events and even update passed objects. Extensions have some basic methods you can use:</source>
          <target state="translated">이벤트 처리 방법을 구현하면 이벤트를 수신하고 전달 된 객체를 업데이트 할 수도 있습니다. 확장에는 몇 가지 기본 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ea70a5bc0bc0926e33c938b53d03c7938d10a79" translate="yes" xml:space="preserve">
          <source>By making tests to be a part of User Story, BDD allows non-technical personnel to write (or edit) Acceptance tests.</source>
          <target state="translated">BDD는 테스트를 사용자 스토리의 일부로 만들어 기술 전문가가 아닌 사람이 수락 테스트를 작성 (또는 편집) 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="fbf4f502954efde69f036b4c5c0e1f2c6cbe390f" translate="yes" xml:space="preserve">
          <source>By setting it to false module wan&amp;rsquo;t inherit methods of parent class.</source>
          <target state="translated">false로 설정하면 부모 클래스의 메소드를 상속하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="755af043a90d606ca7306683d3ed1aa99966f891" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;--net=host&lt;/code&gt; we allow selenium to access local websites.</source>
          <target state="translated">사용하여 &lt;code&gt;--net=host&lt;/code&gt; 우리는 접근 현지 웹 사이트에 셀레늄을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61469720eba5aec93462cb7a612787211104e602" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;specify&lt;/code&gt; codeblocks, you can describe any piece of a test. This makes tests much cleaner and comprehensible for everyone in your team.</source>
          <target state="translated">코드 블록 &lt;code&gt;specify&lt;/code&gt; 을 사용 하면 모든 테스트를 설명 할 수 있습니다. 이렇게하면 팀의 모든 사람이 테스트를 훨씬 더 깨끗하고 이해할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4464f3ea38eddecd3a8c545d542904a864944ac9" translate="yes" xml:space="preserve">
          <source>By using ORM in functional and integration tests, you can also improve performance of your tests. Instead of cleaning up the database after each test, the ORM module will wrap all the database actions into transactions and roll it back at the end. This way, no actual data will be written to the database. This clean-up strategy is enabled by default, you can disable it by setting &lt;code&gt;cleanup: false&lt;/code&gt; in the configuration of any ORM module.</source>
          <target state="translated">기능 및 통합 테스트에서 ORM을 사용하여 테스트 성능을 향상시킬 수도 있습니다. 각 테스트 후 데이터베이스를 정리하는 대신 ORM 모듈은 모든 데이터베이스 조치를 트랜잭션으로 랩핑하고 마지막에 롤백합니다. 이런 식으로 실제 데이터는 데이터베이스에 기록되지 않습니다. 이 정리 전략은 기본적으로 활성화되어 있으며 ORM 모듈 구성에서 &lt;code&gt;cleanup: false&lt;/code&gt; 를 설정하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="785fedb981677104f434d322040575790b7b7321" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;getModule&lt;/code&gt; function, you get access to all of the public methods and properties of the requested module. The &lt;code&gt;dbh&lt;/code&gt; property was defined as public specifically to be available to other modules.</source>
          <target state="translated">&lt;code&gt;getModule&lt;/code&gt; 함수 를 사용하면 요청 된 모듈의 모든 공용 메소드 및 특성에 액세스 할 수 있습니다. &lt;code&gt;dbh&lt;/code&gt; 속성 공용으로 정의 구체적 다른 모듈에서 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="4ec73f4f8a7b43131db1f4176f11045edf49a21d" translate="yes" xml:space="preserve">
          <source>By using the above code in your shell, Codeception will try to autocomplete the following:</source>
          <target state="translated">셸에서 위 코드를 사용하면 Codeception이 다음을 자동 완성하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="362a27e8b217c8af38ea1ff88c14f0280fac4303" translate="yes" xml:space="preserve">
          <source>By writing every feature in User Story format that is automatically executable as a test we ensure that: business, developers, QAs and managers are in the same boat.</source>
          <target state="translated">테스트로 자동 실행 가능한 User Story 형식의 모든 기능을 작성하여 비즈니스, 개발자, QA 및 관리자가 동일한 보트에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="fdf875803121a50e2e0f08c94a0e4bf1c1817156" translate="yes" xml:space="preserve">
          <source>Call an Artisan command.</source>
          <target state="translated">장인 명령을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="e17c100723cd82dfe560e37886ff2c8f13b1f36d" translate="yes" xml:space="preserve">
          <source>Can also be passed a selector to search in, be as specific as possible when using selectors. waitForText() will only watch the first instance of the matching selector / text provided. If the given text doesn&amp;rsquo;t appear, a timeout exception is thrown.</source>
          <target state="translated">선택기를 사용하여 검색 할 수 있도록 선택기에 전달할 수도 있습니다 (선택기를 사용할 때 가능한 한 구체적 임). waitForText ()는 제공된 일치하는 선택기 / 텍스트의 첫 번째 인스턴스 만 감시합니다. 주어진 텍스트가 나타나지 않으면 시간 초과 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="619858b8288a3edfc76d28f314d4a98abae7b1ac" translate="yes" xml:space="preserve">
          <source>Can be used with a callback if you don&amp;rsquo;t want to change the current database in your test.</source>
          <target state="translated">테스트에서 현재 데이터베이스를 변경하지 않으려는 경우 콜백과 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0db200d72cb6384349033161e0145ead21fb7e34" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t be used with PhantomJS</source>
          <target state="translated">PhantomJS와 함께 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="c80235b7e99c13ff43d63b1104978f8b344837a3" translate="yes" xml:space="preserve">
          <source>Cest Classes</source>
          <target state="translated">Cest 클래스</target>
        </trans-unit>
        <trans-unit id="1ac5c08426fb2229d058ff80f636ef6483cadb4f" translate="yes" xml:space="preserve">
          <source>Cest Suite tests:</source>
          <target state="translated">Cest Suite 테스트 :</target>
        </trans-unit>
        <trans-unit id="9e69258f975333f12bfc6932ba0606f5f88ee60a" translate="yes" xml:space="preserve">
          <source>Cest format also can contain hooks based on test results:</source>
          <target state="translated">Cest 형식은 테스트 결과에 따라 후크를 포함 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="10b9308c777a48168ecb8ff28072c3ddec895da6" translate="yes" xml:space="preserve">
          <source>Change capabilities of WebDriver. Should be executed before starting a new browser session. This method expects a function to be passed which returns array or &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/Remote/DesiredCapabilities.php&quot;&gt;WebDriver Desired Capabilities&lt;/a&gt; object. Additional &lt;a href=&quot;https://github.com/facebook/php-webdriver/wiki/ChromeOptions&quot;&gt;Chrome options&lt;/a&gt; (like adding extensions) can be passed as well.</source>
          <target state="translated">WebDriver의 기능을 변경하십시오. 새 브라우저 세션을 시작하기 전에 실행해야합니다. 이 메소드는 배열 또는 &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/Remote/DesiredCapabilities.php&quot;&gt;WebDriver Desired Capabilities&lt;/a&gt; 오브젝트 를 리턴하는 함수가 전달 될 것으로 예상 합니다. 확장 프로그램 추가와 같은 추가 &lt;a href=&quot;https://github.com/facebook/php-webdriver/wiki/ChromeOptions&quot;&gt;Chrome 옵션&lt;/a&gt; 도 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5770bde5bae6b9e1978bfd9eb719518b479aeff0" translate="yes" xml:space="preserve">
          <source>Change capabilities of WebDriver. Should be executed before starting a new browser session. This method expects a function to be passed which returns array or &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/community/lib/Remote/DesiredCapabilities.php&quot;&gt;WebDriver Desired Capabilities&lt;/a&gt; object. Additional &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/wiki/ChromeOptions&quot;&gt;Chrome options&lt;/a&gt; (like adding extensions) can be passed as well.</source>
          <target state="translated">WebDriver의 기능을 변경합니다. 새 브라우저 세션을 시작하기 전에 실행해야합니다. 이 메서드는 배열 또는 &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/community/lib/Remote/DesiredCapabilities.php&quot;&gt;WebDriver Desired Capabilities&lt;/a&gt; 개체 를 반환하는 함수가 전달 될 것으로 예상 합니다. 추가 &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/wiki/ChromeOptions&quot;&gt;Chrome 옵션&lt;/a&gt; (예 : 확장 프로그램 추가)도 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb5ce76de6c3e573231d61271172bb53138bd45c" translate="yes" xml:space="preserve">
          <source>Change purge mode doctrine fixtures:</source>
          <target state="translated">퍼지 모드 교리 조명기 변경 :</target>
        </trans-unit>
        <trans-unit id="9f91f5c3defafc7c577b5a3180d54da1c2afa8ba" translate="yes" xml:space="preserve">
          <source>Change the directory where Codeception should be installed.</source>
          <target state="translated">Codeception이 설치 될 디렉토리를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="25d5a9dc0bb372682bc183cd0e7b763029f933e6" translate="yes" xml:space="preserve">
          <source>Change the logged in user mid-way through your test, this closes the current connection to the server and initialises and new connection.</source>
          <target state="translated">테스트 도중에 로그인 한 사용자를 변경하면 서버에 대한 현재 연결이 닫히고 새 연결이 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="e401abe658640f4758426918faf54bd75bcc0305" translate="yes" xml:space="preserve">
          <source>Changes the subdomain for the &amp;lsquo;url&amp;rsquo; configuration parameter. Does not open a page; use &lt;code&gt;amOnPage&lt;/code&gt; for that.</source>
          <target state="translated">'url'구성 매개 변수의 하위 도메인을 변경합니다. 페이지를 열지 않습니다. 이를 위해 &lt;code&gt;amOnPage&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="01a5105c1acf4958594ed8a1f5461bbfa3e55431" translate="yes" xml:space="preserve">
          <source>Check config:</source>
          <target state="translated">설정 확인 :</target>
        </trans-unit>
        <trans-unit id="40f467ff9c8ace5cf69359bfa3ba2529e73ca1aa" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube does NOT exist on the queueing server.</source>
          <target state="translated">큐 서버에 큐 / 튜브가 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9521ca9ab5147b02672ff789777c2b703c33c7e8" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube does NOT have a given current number of messages</source>
          <target state="translated">대기열 / 튜브에 현재 지정된 수의 메시지가 없는지 확인</target>
        </trans-unit>
        <trans-unit id="5310213e7ef6d40dc6ba8bc71a9e3655678a181f" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube does NOT have a given total number of messages</source>
          <target state="translated">대기열 / 튜브에 지정된 총 메시지 수가 없는지 확인</target>
        </trans-unit>
        <trans-unit id="d6d1b950fb0c0c3c5b364f0eedeb03810f5f99ad" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube exists on the queueing server.</source>
          <target state="translated">큐 서버에 큐 / 튜브가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f3432840d06465e85420b98b874f4e2524f138f7" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube has a given current number of messages</source>
          <target state="translated">대기열 / 튜브에 현재 지정된 수의 메시지가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="3923aaef5f31697f051a23085f61738bc4fe3cf3" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube has a given total number of messages</source>
          <target state="translated">큐 / 튜브에 주어진 총 메시지 수가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0d4f86f51262f4b6bc922da63d9fbd0a9f5d3a7e" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube is NOT empty of all messages</source>
          <target state="translated">대기열 / 튜브에 모든 메시지가 비어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="7de425412ca2b334ec5b7f0920f1bb7f136cfb7b" translate="yes" xml:space="preserve">
          <source>Check if a queue/tube is empty of all messages</source>
          <target state="translated">대기열 / 튜브에 모든 메시지가 비어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="6292e37c7e1b2c1227015c49322f807881b3848a" translate="yes" xml:space="preserve">
          <source>Check out a very basic extension &lt;a href=&quot;https://github.com/Codeception/Notifier&quot;&gt;Notifier&lt;/a&gt;.</source>
          <target state="translated">매우 기본적인 확장 기능인 &lt;a href=&quot;https://github.com/Codeception/Notifier&quot;&gt;Notifier를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f2aac0480168066a7979bf5e5a2ece1e9d2db26" translate="yes" xml:space="preserve">
          <source>Check overriding config values (like in &lt;code&gt;run&lt;/code&gt; command)</source>
          <target state="translated">구성 값 재정의 확인 ( &lt;code&gt;run&lt;/code&gt; 명령 에서와 같이 )</target>
        </trans-unit>
        <trans-unit id="fd953f0b9d61870211e3b4dc7fb687338156e9cd" translate="yes" xml:space="preserve">
          <source>Check that the current user has a role</source>
          <target state="translated">현재 사용자에게 역할이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="a25b113418b879822a48ce9ea4749af6b052d64e" translate="yes" xml:space="preserve">
          <source>Check that the specified checkbox is unchecked.</source>
          <target state="translated">지정된 확인란이 선택되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f698c741ca69fb6cb00378f2604e349b76e1672b" translate="yes" xml:space="preserve">
          <source>Check that user is not authenticated.</source>
          <target state="translated">사용자가 인증되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8e8858e7b4510dac3094da001fc437439b8760c6" translate="yes" xml:space="preserve">
          <source>Check that user is not authenticated. You can specify the guard that should be use for Laravel &amp;gt;= 5.2.</source>
          <target state="translated">사용자가 인증되지 않았는지 확인하십시오. Laravel&amp;gt; = 5.2에 사용해야하는 가드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5edde672c5cf60492b73931916316994a9de2cc8" translate="yes" xml:space="preserve">
          <source>Check that user is not authenticated. You can specify whether users logged in with the &amp;lsquo;remember me&amp;rsquo; option should be ignored by passing &amp;lsquo;false&amp;rsquo; as a parameter.</source>
          <target state="translated">사용자가 인증되지 않았는지 확인하십시오. 매개 변수로 'false'를 전달하여 'remember me'옵션으로 로그인 한 사용자를 무시할지 여부를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec9fb482afb9e3ac602b8990e2ed226e188a1581" translate="yes" xml:space="preserve">
          <source>Checks If opened file doesn&amp;rsquo;t contain &lt;code&gt;text&lt;/code&gt; in it</source>
          <target state="translated">열린 파일에 &lt;code&gt;text&lt;/code&gt; 가 포함되어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="cc466a02f22f1a6cfeda2d643f99bde6a20a8907" translate="yes" xml:space="preserve">
          <source>Checks If opened file has &lt;code&gt;text&lt;/code&gt; in it.</source>
          <target state="translated">열린 파일에 &lt;code&gt;text&lt;/code&gt; 가 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="009d30b551ab358c5149a534443f90a36bf0eedd" translate="yes" xml:space="preserve">
          <source>Checks If opened file has the &lt;code&gt;number&lt;/code&gt; of new lines.</source>
          <target state="translated">열린 파일 에 새 줄 &lt;code&gt;number&lt;/code&gt; 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="337581428888ce948a853ad1b0560cdeac008ffc" translate="yes" xml:space="preserve">
          <source>Checks XML response contains provided structure. Response elements will be compared with XML provided. Only nodeNames are checked to see elements match.</source>
          <target state="translated">XML 응답에 제공된 구조가 포함되어 있는지 확인합니다. 응답 요소는 제공된 XML과 비교됩니다. 요소가 일치하는지 확인하려면 nodeNames 만 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="97227ad09e87afb7f9a745e8b10d147da449ad7d" translate="yes" xml:space="preserve">
          <source>Checks XML response does not equal to provided XML. Comparison is done by canonicalizing both xml`s.</source>
          <target state="translated">XML 응답이 제공된 XML과 다른지 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d306bcb7c8b4e48c38ee6d6dde62390628aca6a3" translate="yes" xml:space="preserve">
          <source>Checks XML response does not include provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">XML 응답에 제공된 XML이 포함되어 있지 않은지 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다. 매개 변수는 XmlBuilder, DOMDocument, DOMNode, XML 문자열 또는 배열 (속성이없는 경우)로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="356cef19b7dfef306369b90efab698f7eb4f955a" translate="yes" xml:space="preserve">
          <source>Checks XML response doesn&amp;rsquo;t contain XPath locator</source>
          <target state="translated">XML 응답에 XPath 로케이터가 포함되어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="5b8326363345b123ab8b3f43989b25e5be7b2b87" translate="yes" xml:space="preserve">
          <source>Checks XML response equals provided XML. Comparison is done by canonicalizing both xml`s.</source>
          <target state="translated">제공된 XML과 동일한 XML 응답을 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="bb24005e0bb632ffe3d083a677fe164767c72069" translate="yes" xml:space="preserve">
          <source>Checks XML response includes provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).</source>
          <target state="translated">XML 응답에 제공된 XML이 포함되어 있는지 확인합니다. 비교는 두 XML을 정규화하여 수행됩니다. 매개 변수는 XmlBuilder, DOMDocument, DOMNode, XML 문자열 또는 배열 (속성이없는 경우)로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04ca9a35bcfb662b4f6ad66c715db6d6a6205f45" translate="yes" xml:space="preserve">
          <source>Checks XML response with XPath locator</source>
          <target state="translated">XPath 로케이터로 XML 응답 확인</target>
        </trans-unit>
        <trans-unit id="e5194e68d6f503b7719c59c9ac103ad9698db6a2" translate="yes" xml:space="preserve">
          <source>Checks data against passed JsonType. If matching fails function returns a string with a message describing failure. On success returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">전달 된 JsonType에 대해 데이터를 확인합니다. 일치가 실패하면 함수는 실패를 설명하는 메시지가 포함 된 문자열을 반환합니다. 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2e7cdb94f3474b1998048d399a7918f908543f42" translate="yes" xml:space="preserve">
          <source>Checks if a method has been invoked a certain amount of times. If the number of invocations exceeds the value it will immediately throw an exception, If the number is less it will later be checked in verify() and also throw an exception.</source>
          <target state="translated">메소드가 특정 횟수만큼 호출되었는지 확인합니다. 호출 수가 값을 초과하면 즉시 예외가 발생하고, 그 수가 적 으면 나중에 verify ()에서 확인되고 예외도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f888db3fd83a0e8efc8b2fb6b6f06bb832640222" translate="yes" xml:space="preserve">
          <source>Checks if a method has been invoked at least one time.</source>
          <target state="translated">메소드가 한 번 이상 호출되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e945d8c90b79b9295a7eb78d1e8707303151cd02" translate="yes" xml:space="preserve">
          <source>Checks if a method has been invoked exactly one time.</source>
          <target state="translated">메소드가 정확히 한 번만 호출되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cb5ec4526a8f5ff9d1390a5ecc3fde98a6574766" translate="yes" xml:space="preserve">
          <source>Checks if a method never has been invoked</source>
          <target state="translated">메소드가 호출 된 적이 없는지 확인</target>
        </trans-unit>
        <trans-unit id="a89c3304202d6f657c9636485987b1b990ffb415" translate="yes" xml:space="preserve">
          <source>Checks if a module has required fields</source>
          <target state="translated">모듈에 필수 필드가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="9138d5016d3d143634cd4e3a396bbc2fa1fc63b3" translate="yes" xml:space="preserve">
          <source>Checks if collection contains an item.</source>
          <target state="translated">컬렉션에 항목이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fb06772edc7c4ff15c0d0f7094d83f236e42288b" translate="yes" xml:space="preserve">
          <source>Checks if collection doesn&amp;rsquo;t contain an item.</source>
          <target state="translated">컬렉션에 항목이 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="be60dfb0907ec62d75932911139fa11331b956ce" translate="yes" xml:space="preserve">
          <source>Checks if file does not exist in path</source>
          <target state="translated">파일이 경로에 존재하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="043a2243926af2eb7e5f716e7e3c4f3bcbf292cf" translate="yes" xml:space="preserve">
          <source>Checks if file does not exist in path on the remote FTP/SFTP system</source>
          <target state="translated">원격 FTP / SFTP 시스템의 경로에 파일이 없는지 확인</target>
        </trans-unit>
        <trans-unit id="991c5107c5fd998fd08be88a2c56042d194eb0ec" translate="yes" xml:space="preserve">
          <source>Checks if file does not exist in path on the remote FTP/SFTP system, using regular expression as filename. DOES NOT OPEN the file when it&amp;rsquo;s exists</source>
          <target state="translated">파일 이름으로 정규식을 사용하여 파일이 원격 FTP / SFTP 시스템의 경로에 존재하지 않는지 확인합니다. 파일이 존재할 때 파일을 열지 않습니다</target>
        </trans-unit>
        <trans-unit id="60373efed4611c7e13fdfa10e8d82f3b8380cb77" translate="yes" xml:space="preserve">
          <source>Checks if file doesn&amp;rsquo;t exist</source>
          <target state="translated">파일이 존재하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="b7135e3c1dbeedb36436f0dfaa093626ec3a5dc7" translate="yes" xml:space="preserve">
          <source>Checks if file exists</source>
          <target state="translated">파일이 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="b1ebdfed096ed3e1017b07f2fbe2e621faeabe23" translate="yes" xml:space="preserve">
          <source>Checks if file exists in path on the remote FTP/SFTP system, using regular expression as filename. DOES NOT OPEN the file when it&amp;rsquo;s exists</source>
          <target state="translated">정규식을 파일 이름으로 사용하여 파일이 원격 FTP / SFTP 시스템의 경로에 존재하는지 확인합니다. 파일이 존재할 때 파일을 열지 않습니다</target>
        </trans-unit>
        <trans-unit id="5c8a58c2c3a1e71fd961c8b3dab3c51330388d8a" translate="yes" xml:space="preserve">
          <source>Checks if file exists in path on the remote FTP/SFTP system. DOES NOT OPEN the file when it&amp;rsquo;s exists</source>
          <target state="translated">원격 FTP / SFTP 시스템의 경로에 파일이 있는지 확인합니다. 파일이 존재할 때 파일을 열지 않습니다</target>
        </trans-unit>
        <trans-unit id="2dc29d0ff52cf01d7a9baf7d2aa0dede78ebf6d9" translate="yes" xml:space="preserve">
          <source>Checks if file exists in path. Opens a file when it&amp;rsquo;s exists</source>
          <target state="translated">파일이 경로에 있는지 확인합니다. 존재하는 파일을 엽니 다</target>
        </trans-unit>
        <trans-unit id="f990721441cd6465e20ad395970669cb91c19f2b" translate="yes" xml:space="preserve">
          <source>Checks if json structure in response matches &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JsonPath&lt;/a&gt;. JsonPath is XPath equivalent for querying Json structures. Try your JsonPath expressions &lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;online&lt;/a&gt;. This assertion allows you to check the structure of response json.</source>
          <target state="translated">응답의 json 구조가 &lt;a href=&quot;http://goessner.net/articles/JsonPath/&quot;&gt;JsonPath&lt;/a&gt; 와 일치 하는지 확인합니다 . JsonPath는 Json 구조를 쿼리 할 때 XPath와 동일합니다. JsonPath 표현식을 &lt;a href=&quot;http://jsonpath.curiousconcept.com/&quot;&gt;온라인으로&lt;/a&gt; 사용해보십시오 . 이 어설 션을 사용하면 응답 json의 구조를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edfe8e0ea9891fbaf204fb17d123d7e129f28e7b" translate="yes" xml:space="preserve">
          <source>Checks if json structure in response matches the xpath provided. JSON is not supposed to be checked against XPath, yet it can be converted to xml and used with XPath. This assertion allows you to check the structure of response json. *</source>
          <target state="translated">응답의 json 구조가 제공된 xpath와 일치하는지 확인합니다. JSON은 XPath와 비교하여 확인되지는 않지만 xml로 변환하여 XPath와 함께 사용할 수 있습니다. 이 어설 션을 사용하면 응답 json의 구조를 확인할 수 있습니다. *</target>
        </trans-unit>
        <trans-unit id="860a960a69e6cefec14697fdf21e3ab9ea77c4d4" translate="yes" xml:space="preserve">
          <source>Checks if message containing text received.</source>
          <target state="translated">텍스트가 포함 된 메시지가 수신되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="992a33eb5ca87cf2d4578150e71290fbbc713929" translate="yes" xml:space="preserve">
          <source>Checks if queue is not empty.</source>
          <target state="translated">대기열이 비어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d0a17d62211009728b1fa2c59614ee8b3caead13" translate="yes" xml:space="preserve">
          <source>Checks if response is exactly the same as provided.</source>
          <target state="translated">응답이 제공된 것과 정확히 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f8e740e5fad9e13ab68f9366c2ab5cca1444a8ce" translate="yes" xml:space="preserve">
          <source>Checks if the array of form parameters (name =&amp;gt; value) are not set on the form matched with the passed selector.</source>
          <target state="translated">전달 된 선택기와 일치하는 양식에 양식 매개 변수 배열 (이름 =&amp;gt; 값)이 설정되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5a12bc1359f613d4e2f04e7ecb8189f63b7e9014" translate="yes" xml:space="preserve">
          <source>Checks if the array of form parameters (name =&amp;gt; value) are set on the form matched with the passed selector.</source>
          <target state="translated">전달 된 선택기와 일치하는 양식에 양식 매개 변수 배열 (이름 =&amp;gt; 값)이 설정되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f6a771730908c99425daaf808e940c0f71113f8c" translate="yes" xml:space="preserve">
          <source>Checks if the desired number of emails was sent. If no argument is provided then at least one email must be sent to satisfy the check. The email is checked using Symfony&amp;rsquo;s profiler, which means:</source>
          <target state="translated">원하는 수의 이메일이 전송되었는지 확인합니다. 인수가 제공되지 않으면 확인을 충족하기 위해 적어도 하나의 이메일을 보내야합니다. 이메일은 Symfony의 프로파일 러를 사용하여 확인됩니다. 이는 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7bc7091193accd06f7e2244dcbb5c8b929e12692" translate="yes" xml:space="preserve">
          <source>Checks if the desired number of emails was sent. If no argument is provided then at least one email must be sent to satisfy the check. The email is checked using Symfony&amp;rsquo;s profiler. If your app performs a redirect after sending the email, you need to tell Codeception to not follow this redirect, using REST Module&amp;rsquo;s &lt;a href=&quot;rest#stopFollowingRedirects&quot;&gt;stopFollowingRedirects&lt;/a&gt; method.</source>
          <target state="translated">원하는 수의 이메일이 전송되었는지 확인합니다. 인수가 제공되지 않으면 확인을 충족하기 위해 하나 이상의 이메일을 보내야합니다. 이메일은 Symfony의 프로파일 러를 사용하여 확인됩니다. 이메일을 보낸 후 앱이 리디렉션을 수행하는 경우 REST Module의 &lt;a href=&quot;rest#stopFollowingRedirects&quot;&gt;stopFollowingRedirects&lt;/a&gt; 메소드를 사용하여 Codeception 에이 리디렉션을 따르지 않도록 지시해야합니다 .</target>
        </trans-unit>
        <trans-unit id="81d72ff940cbee0d4479c082b077c37e3c7e3287" translate="yes" xml:space="preserve">
          <source>Checks if the hash of a binary response is exactly the same as provided. Parameter can be passed as any hash string supported by hash(), with an optional second parameter to specify the hash type, which defaults to md5.</source>
          <target state="translated">이진 응답의 해시가 제공된 것과 정확히 같은지 확인합니다. 매개 변수는 해시 유형을 지정하기위한 선택적 두 번째 매개 변수 (기본값은 md5)와 함께 hash ()가 지원하는 모든 해시 문자열로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08f3d711ff0ee64be34b5f0d18bdc3f81cb40413" translate="yes" xml:space="preserve">
          <source>Checks if the hash of a binary response is not the same as provided.</source>
          <target state="translated">이진 응답의 해시가 제공된 것과 동일하지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eae64f91355ca653f24770f6adb433024da623ee" translate="yes" xml:space="preserve">
          <source>Checks item in APC(u) doesn&amp;rsquo;t exist or is the same as expected.</source>
          <target state="translated">APC (u)의 아이템이 존재하지 않거나 예상과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bc1de5a9e34c8d886c4933ef6424611b2e053c9d" translate="yes" xml:space="preserve">
          <source>Checks item in APC(u) exists and the same as expected.</source>
          <target state="translated">APC (u)의 항목이 존재하고 예상 한 것과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e1798090481159dd7ffc478344730c50ac34d801" translate="yes" xml:space="preserve">
          <source>Checks item in Memcached doesn&amp;rsquo;t exist or is the same as expected.</source>
          <target state="translated">Memcached의 항목이 존재하지 않거나 예상과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="834ac47eccb7e2700f140be78024abea74c2f276" translate="yes" xml:space="preserve">
          <source>Checks item in Memcached exists and the same as expected.</source>
          <target state="translated">Memcached의 항목이 존재하고 예상 한 것과 동일한 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="995644fea64cd0fc94ba254d51b971a2ea541e16" translate="yes" xml:space="preserve">
          <source>Checks over the given HTTP header and (optionally) its value, asserting that are not there</source>
          <target state="translated">주어진 HTTP 헤더와 (선택적) 해당 값을 검사하여 존재하지 않는 것을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ea0e7c8bcd6788ac94739d038785a0b5dbcb8969" translate="yes" xml:space="preserve">
          <source>Checks over the given HTTP header and (optionally) its value, asserting that are there</source>
          <target state="translated">주어진 HTTP 헤더와 선택적으로 그 값을 확인하여 해당 값을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="08d154c899eb5bf7e4f2ae29d5ba68759c73d017" translate="yes" xml:space="preserve">
          <source>Checks response code equals to provided value.</source>
          <target state="translated">응답 코드가 제공된 값과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9b82bdd31c0c1310bf2246732512763d6e4ecfdd" translate="yes" xml:space="preserve">
          <source>Checks response code from server.</source>
          <target state="translated">서버에서 응답 코드를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="119082b3e4becfe6fda6a83c2d689ce362f1a616" translate="yes" xml:space="preserve">
          <source>Checks result code</source>
          <target state="translated">결과 코드 확인</target>
        </trans-unit>
        <trans-unit id="d3400ea5afee6a5e88d952baf2d301e9651342e0" translate="yes" xml:space="preserve">
          <source>Checks result code. To verify a result code &amp;gt; 0, you need to pass &lt;code&gt;false&lt;/code&gt; as second argument to &lt;code&gt;runShellCommand()&lt;/code&gt;</source>
          <target state="translated">결과 코드를 확인합니다. 결과 코드&amp;gt; 0을 확인하려면 두 번째 인수로 &lt;code&gt;false&lt;/code&gt; 를 &lt;code&gt;runShellCommand()&lt;/code&gt; 에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="bfaaac9fe51ae2c7accb58bf2e57f3630f2fe14e" translate="yes" xml:space="preserve">
          <source>Checks that JSON matches provided types. In case you don&amp;rsquo;t know the actual values of JSON data returned you can match them by type. It starts the check with a root element. If JSON data is an array it will check all elements of it. You can specify the path in the json which should be checked with JsonPath</source>
          <target state="translated">JSON이 제공된 유형과 일치하는지 확인합니다. 반환 된 JSON 데이터의 실제 값을 모르는 경우 유형별로 일치시킬 수 있습니다. 루트 요소로 검사를 시작합니다. JSON 데이터가 배열이면 모든 요소를 ​​확인합니다. JsonPath로 확인해야 할 json에서 경로를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f08df94bcfd9ba6623d9e73df503e8ec3d51eb25" translate="yes" xml:space="preserve">
          <source>Checks that Json matches provided types. In case you don&amp;rsquo;t know the actual values of JSON data returned you can match them by type. Starts check with a root element. If JSON data is array it will check the first element of an array. You can specify the path in the json which should be checked with JsonPath</source>
          <target state="translated">Json이 제공된 유형과 일치하는지 확인합니다. 반환 된 JSON 데이터의 실제 값을 모르는 경우 유형별로 일치시킬 수 있습니다. 루트 요소로 검사를 시작합니다. JSON 데이터가 배열이면 배열의 첫 번째 요소를 확인합니다. JsonPath로 확인 해야하는 경로를 json에 지정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7b8c17992ebd25fe6b0f2d6f9f3f5acb46dc3606" translate="yes" xml:space="preserve">
          <source>Checks that a cookie with the given name is set. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; as array passed in last argument.</source>
          <target state="translated">지정된 이름의 쿠키가 설정되어 있는지 확인합니다. &lt;code&gt;domain&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; 와 같은 추가 쿠키 매개 변수 를 마지막 인수에 전달 된 배열로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bccc934d75e425294f9c0d61e4338aaf311525cc" translate="yes" xml:space="preserve">
          <source>Checks that a record does not exist in the database.</source>
          <target state="translated">데이터베이스에 레코드가 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6a697cd983d008b9bae8831e11399f06ae493e4c" translate="yes" xml:space="preserve">
          <source>Checks that a record exists in the database.</source>
          <target state="translated">데이터베이스에 레코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4618a15a5f764251ca461d92e28696e29d8678a2" translate="yes" xml:space="preserve">
          <source>Checks that a string doesn&amp;rsquo;t start with the given prefix.</source>
          <target state="translated">주어진 접두사로 문자열이 시작되지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6c1ca444608e20062aaf398808219901376f7660" translate="yes" xml:space="preserve">
          <source>Checks that a string is valid CSS ID</source>
          <target state="translated">문자열이 유효한 CSS ID인지 확인</target>
        </trans-unit>
        <trans-unit id="255b5a65a4ca211a06c428bfe9bfe33300c8086c" translate="yes" xml:space="preserve">
          <source>Checks that a string is valid CSS class</source>
          <target state="translated">문자열이 유효한 CSS 클래스인지 확인</target>
        </trans-unit>
        <trans-unit id="f025490c93f66e798d188fd27bb9644337bc2668" translate="yes" xml:space="preserve">
          <source>Checks that a string starts with the given prefix.</source>
          <target state="translated">문자열이 주어진 접두어로 시작하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e0a0ae7a057e0227e9f70fa048f98887f13f8f01" translate="yes" xml:space="preserve">
          <source>Checks that a user is authenticated. You can check users logged in with the option &amp;lsquo;remember me&amp;rsquo; passing true as parameter.</source>
          <target state="translated">사용자가 인증되었는지 확인합니다. true를 매개 변수로 전달하는 'remember me'옵션을 사용하여 로그인 한 사용자를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c6c9fc6b320083f12c539946bdcebd1670a60f0" translate="yes" xml:space="preserve">
          <source>Checks that a user is authenticated. You can specify the guard that should be use for Laravel &amp;gt;= 5.2.</source>
          <target state="translated">사용자가 인증되었는지 확인합니다. Laravel&amp;gt; = 5.2에 사용해야하는 가드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="493ecb48a26991026a0d2377159180405be9aab9" translate="yes" xml:space="preserve">
          <source>Checks that actual is greater or equal than expected</source>
          <target state="translated">실제가 예상보다 크거나 같은지 확인</target>
        </trans-unit>
        <trans-unit id="c833c1ac3b11defc5b30601fd4074cca8f2aa380" translate="yes" xml:space="preserve">
          <source>Checks that actual is greater than expected</source>
          <target state="translated">실제가 예상보다 큰지 확인</target>
        </trans-unit>
        <trans-unit id="3d502f13276504f3f701ce5638cc83a20fde20e7" translate="yes" xml:space="preserve">
          <source>Checks that actual is less or equal than expected</source>
          <target state="translated">실제가 예상보다 작거나 같은지 확인</target>
        </trans-unit>
        <trans-unit id="2b5572e480d751a7f0f89bf8958131c4533171f9" translate="yes" xml:space="preserve">
          <source>Checks that actual is less than expected</source>
          <target state="translated">실제가 예상보다 적은지 확인</target>
        </trans-unit>
        <trans-unit id="cd2f028882436a421c82ac654ef2a4c233a675ca" translate="yes" xml:space="preserve">
          <source>Checks that an email is sent.</source>
          <target state="translated">이메일이 전송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bbdf9978103c835fe883cec39c3e75a37a4ba8ab" translate="yes" xml:space="preserve">
          <source>Checks that an input field or textarea doesn&amp;rsquo;t contain the given value. For fuzzy locators, the field is matched by label text, CSS and XPath.</source>
          <target state="translated">입력 필드 또는 텍스트 영역에 지정된 값이 포함되어 있지 않은지 확인합니다. 퍼지 로케이터의 경우 필드는 레이블 텍스트, CSS 및 XPath와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="fb19144f498babb9bf9f5f8b562f3901ad7abe53" translate="yes" xml:space="preserve">
          <source>Checks that array contains subset.</source>
          <target state="translated">배열에 하위 집합이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4d852a22e858cea496a3ce55fa2d6233afead804" translate="yes" xml:space="preserve">
          <source>Checks that condition is negative.</source>
          <target state="translated">조건이 부정인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="be2ce67bda855038478228b2fb9135ead30e26cd" translate="yes" xml:space="preserve">
          <source>Checks that condition is positive.</source>
          <target state="translated">조건이 긍정적인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4ca78a26ca30ebc4ca9ca248b0d7cf078ca8168c" translate="yes" xml:space="preserve">
          <source>Checks that contents of currently opened file matches $regex</source>
          <target state="translated">현재 열린 파일의 내용이 $ regex와 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="0f50fbbe0a4a58958c5097810c6d11245d709213" translate="yes" xml:space="preserve">
          <source>Checks that current URI contains the given string.</source>
          <target state="translated">현재 URI에 지정된 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="86680e0ce366e2c114296c0daedc1dff076c9a30" translate="yes" xml:space="preserve">
          <source>Checks that current page matches action</source>
          <target state="translated">현재 페이지가 작업과 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="d0251c6ad933f891f1f19b1d3f78e767bdbd75a1" translate="yes" xml:space="preserve">
          <source>Checks that current url doesn&amp;rsquo;t match the given regular expression.</source>
          <target state="translated">현재 URL이 주어진 정규식과 일치하지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="59535a198277329cf6444bda5797710e91424f6b" translate="yes" xml:space="preserve">
          <source>Checks that current url matches action</source>
          <target state="translated">현재 URL이 액션과 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="23510eca1d0bbe6ef3ca30b95df9f703f67adb83" translate="yes" xml:space="preserve">
          <source>Checks that current url matches route</source>
          <target state="translated">현재 URL이 경로와 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="f252384212700a0bda8301aa993d54c321a6f3ae" translate="yes" xml:space="preserve">
          <source>Checks that current url matches route.</source>
          <target state="translated">현재 URL이 경로와 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2253df5cff94a97af6cb786ba8486dbf7e3290bc" translate="yes" xml:space="preserve">
          <source>Checks that current url matches route. Unlike seeCurrentRouteIs, this can matches without exact route parameters</source>
          <target state="translated">현재 URL이 경로와 일치하는지 확인합니다. seeCurrentRouteIs와 달리 정확한 경로 매개 변수없이 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a739403e8ff32e46f70ff395a69d45442d47f1a" translate="yes" xml:space="preserve">
          <source>Checks that email is sent.</source>
          <target state="translated">이메일이 발송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="83e3eb31475a0b75b89e7a8fc88edce2d64023c9" translate="yes" xml:space="preserve">
          <source>Checks that haystack contains needle</source>
          <target state="translated">건초 더미에 바늘이 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="264844fda0a35fe8a9f5aa4d4644b68999ee6453" translate="yes" xml:space="preserve">
          <source>Checks that haystack doesn&amp;rsquo;t attend</source>
          <target state="translated">건초 더미가 참석하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="d1a73e5b6f60934325561dc446b47379d2975fcb" translate="yes" xml:space="preserve">
          <source>Checks that haystack doesn&amp;rsquo;t contain needle.</source>
          <target state="translated">건초 더미에 바늘이 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0adbf045277ad326987602ddae6167cd38fd050e" translate="yes" xml:space="preserve">
          <source>Checks that http response header is received only once. HTTP RFC2616 allows multiple response headers with the same name. You can check that you didn&amp;rsquo;t accidentally sent the same header twice.</source>
          <target state="translated">http 응답 헤더가 한 번만 수신되는지 확인합니다. HTTP RFC2616은 동일한 이름의 여러 응답 헤더를 허용합니다. 실수로 동일한 헤더를 두 번 보내지 않았는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9f08ddee3f56e9ce330d53ac975e600a7117b43" translate="yes" xml:space="preserve">
          <source>Checks that locator is an XPath</source>
          <target state="translated">로케이터가 XPath인지 확인</target>
        </trans-unit>
        <trans-unit id="781b16615a31842cb1b6182af13c1b4ba7f27274" translate="yes" xml:space="preserve">
          <source>Checks that module is enabled.</source>
          <target state="translated">모듈이 활성화되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a7046a71ebcb124c1c7eed48d32ad20b217fc0e2" translate="yes" xml:space="preserve">
          <source>Checks that no email was sent</source>
          <target state="translated">이메일이 전송되지 않았는지 확인</target>
        </trans-unit>
        <trans-unit id="a69eac8d5f3f53c656beee9edd2305c49cdcab80" translate="yes" xml:space="preserve">
          <source>Checks that no email was sent. This is an alias for seeEmailIsSent(0).</source>
          <target state="translated">이메일이 전송되지 않았는지 확인합니다. 이것은 seeEmailIsSent (0)의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="5a74414465dae6b6b2738780124641f12dfed489" translate="yes" xml:space="preserve">
          <source>Checks that number of given records were found in database. &amp;lsquo;id&amp;rsquo; is the default search parameter.</source>
          <target state="translated">주어진 레코드 수가 데이터베이스에서 발견되었는지 확인합니다. 'id'는 기본 검색 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="b5d40e53bdcfd1019821a9b2a5338c7a81f8aad1" translate="yes" xml:space="preserve">
          <source>Checks that number of given records were found in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">주어진 레코드 수가 데이터베이스에서 발견되었는지 확인합니다. 데이터베이스 테이블 이름 또는 Eloquent 모델의 클래스 이름을 첫 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dfe186a2740640288f8f468380331cbef849cc7" translate="yes" xml:space="preserve">
          <source>Checks that number of records exists in database.</source>
          <target state="translated">데이터베이스에 레코드 수가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="46c8e247f385b3fb36cd98952cbdb2b8cb6df519" translate="yes" xml:space="preserve">
          <source>Checks that output from last executed command contains text</source>
          <target state="translated">마지막으로 실행 된 명령의 출력에 텍스트가 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="6abc07daa2a5ded16aa14cc71f18aa9d51959b52" translate="yes" xml:space="preserve">
          <source>Checks that output from latest command doesn&amp;rsquo;t contain text</source>
          <target state="translated">최신 명령의 출력에 텍스트가 포함되어 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="7c66ebd79543e9d7a3487b84e0a76948820df990" translate="yes" xml:space="preserve">
          <source>Checks that provided string is CSS selector</source>
          <target state="translated">제공된 문자열이 CSS 선택기인지 확인</target>
        </trans-unit>
        <trans-unit id="c03a86b2b50b087d79196c11d085e80d7cbfa985" translate="yes" xml:space="preserve">
          <source>Checks that queue have expected number of message</source>
          <target state="translated">큐에 예상 된 수의 메시지가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="fc6eb6a57874a821df874bcb1bd2462ddc978e8d" translate="yes" xml:space="preserve">
          <source>Checks that queue is empty</source>
          <target state="translated">큐가 비어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="e6eb47b9e96f40e23319c37906e6d200f5a67a9c" translate="yes" xml:space="preserve">
          <source>Checks that record does not exist in database.</source>
          <target state="translated">데이터베이스에 레코드가 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="074c61b7be0d4fd13a7d7de9599bcb65e4c981e6" translate="yes" xml:space="preserve">
          <source>Checks that record does not exist in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">데이터베이스에 레코드가 없는지 확인합니다. 데이터베이스 테이블 이름 또는 Eloquent 모델의 클래스 이름을 첫 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d92d6392aa3d358927a66ed0e478255fe23f4a3e" translate="yes" xml:space="preserve">
          <source>Checks that record exists in database.</source>
          <target state="translated">데이터베이스에 레코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c033220377d0b0db036fa1f07bb2c64346f8c052" translate="yes" xml:space="preserve">
          <source>Checks that record exists in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.</source>
          <target state="translated">데이터베이스에 레코드가 있는지 확인합니다. 데이터베이스 테이블 이름 또는 Eloquent 모델의 클래스 이름을 첫 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaa141060e5b132f2a4fb159a8eb072a30704033" translate="yes" xml:space="preserve">
          <source>Checks that response code is between a certain range. Between actually means [from &amp;lt;= CODE &amp;lt;= to]</source>
          <target state="translated">응답 코드가 특정 범위 사이에 있는지 확인합니다. 실제로 사이에는 [&amp;lt;&amp;lt;CODE &amp;lt;= ~]</target>
        </trans-unit>
        <trans-unit id="cb7b123a12108d8f425b532d8c32e604d9266fe7" translate="yes" xml:space="preserve">
          <source>Checks that response code is equal to value provided.</source>
          <target state="translated">응답 코드가 제공된 값과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="368f6c56503e86e9dd278f49fe999790c6fd412c" translate="yes" xml:space="preserve">
          <source>Checks that response code is not equal to provided value.</source>
          <target state="translated">응답 코드가 제공된 값과 다른지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3d77a65aed80607ce9cf2b56d4bed9c9e5b35f59" translate="yes" xml:space="preserve">
          <source>Checks that session contains value. If value is &lt;code&gt;null&lt;/code&gt; checks that session has key.</source>
          <target state="translated">세션에 값이 포함되어 있는지 확인합니다. value가 &lt;code&gt;null&lt;/code&gt; 이면 세션에 키가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c4e023e82ba32666065e29725d2e895bc4405f6e" translate="yes" xml:space="preserve">
          <source>Checks that string match with pattern</source>
          <target state="translated">문자열이 패턴과 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="6b817ceee8306fc2d30f69848fcba795f4ba0b35" translate="yes" xml:space="preserve">
          <source>Checks that string not match with pattern</source>
          <target state="translated">문자열이 패턴과 일치하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="996b3dde3fe5a2a1be42ed19bbaf5a1ce8bc7277" translate="yes" xml:space="preserve">
          <source>Checks that the active JavaScript popup, as created by &lt;code&gt;window.alert&lt;/code&gt;|&lt;code&gt;window.confirm&lt;/code&gt;|&lt;code&gt;window.prompt&lt;/code&gt;, contains the given string.</source>
          <target state="translated">확인이 활성화 된 자바 스크립트 팝업, 만든으로 &lt;code&gt;window.alert&lt;/code&gt; | &lt;code&gt;window.confirm&lt;/code&gt; | &lt;code&gt;window.prompt&lt;/code&gt; 는 주어진 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="00b71d6ee35a257f4c4346e21afb5648051fb36b" translate="yes" xml:space="preserve">
          <source>Checks that the active JavaScript popup, as created by &lt;code&gt;window.alert&lt;/code&gt;|&lt;code&gt;window.confirm&lt;/code&gt;|&lt;code&gt;window.prompt&lt;/code&gt;, does NOT contain the given string.</source>
          <target state="translated">확인이 활성화 된 자바 스크립트 팝업, 만든으로 &lt;code&gt;window.alert&lt;/code&gt; | &lt;code&gt;window.confirm&lt;/code&gt; | &lt;code&gt;window.prompt&lt;/code&gt; 는 지정된 문자열을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82c94315d023b5ee2173321969e0822071a16b45" translate="yes" xml:space="preserve">
          <source>Checks that the condition is NOT false (everything but false)</source>
          <target state="translated">조건이 거짓이 아닌지 확인 (모든 것이 아닌 거짓)</target>
        </trans-unit>
        <trans-unit id="b86fcfb4c054d42ae96cd88e82ec04782a3705b6" translate="yes" xml:space="preserve">
          <source>Checks that the condition is NOT true (everything but true)</source>
          <target state="translated">조건이 참이 아닌지 확인 (모든 것이 아닌 참)</target>
        </trans-unit>
        <trans-unit id="9e594de36a26b55e85247a7540068a40be159b87" translate="yes" xml:space="preserve">
          <source>Checks that the current URI doesn&amp;rsquo;t contain the given string.</source>
          <target state="translated">현재 URI에 지정된 문자열이 포함되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bc50855b1fd31f6de6ee8312cf609c2a35158173" translate="yes" xml:space="preserve">
          <source>Checks that the current URL doesn&amp;rsquo;t equal the given string. Unlike &lt;code&gt;dontSeeInCurrentUrl&lt;/code&gt;, this only matches the full URL.</source>
          <target state="translated">현재 URL이 주어진 문자열과 다른지 확인합니다. &lt;code&gt;dontSeeInCurrentUrl&lt;/code&gt; 과 달리 이것은 전체 URL 과만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="37b5bb3c53b1fb70936c038c662a8119a5678bd6" translate="yes" xml:space="preserve">
          <source>Checks that the current URL is equal to the given string. Unlike &lt;code&gt;seeInCurrentUrl&lt;/code&gt;, this only matches the full URL.</source>
          <target state="translated">현재 URL이 주어진 문자열과 같은지 확인합니다. &lt;code&gt;seeInCurrentUrl&lt;/code&gt; 과 달리 이것은 전체 URL 과만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0c832d20c34cea338ccc2579352c684fef96379d" translate="yes" xml:space="preserve">
          <source>Checks that the current URL matches the given regular expression.</source>
          <target state="translated">현재 URL이 지정된 정규식과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="288b97d62fa3dd1c8cecfc6f4c380949981f80fb" translate="yes" xml:space="preserve">
          <source>Checks that the current page contains the given string (case insensitive).</source>
          <target state="translated">현재 페이지에 주어진 문자열이 포함되어 있는지 확인합니다 (대소 문자 구분).</target>
        </trans-unit>
        <trans-unit id="1f30e7deaf8781d575fe2375033b005eba2016f2" translate="yes" xml:space="preserve">
          <source>Checks that the current page contains the given string in its raw source code.</source>
          <target state="translated">현재 페이지의 원시 소스 코드에 지정된 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b92b4e59db49bd3c082b88641c6f4a1c669699e2" translate="yes" xml:space="preserve">
          <source>Checks that the current page doesn&amp;rsquo;t contain the text specified (case insensitive). Give a locator as the second parameter to match a specific region.</source>
          <target state="translated">현재 페이지에 지정된 텍스트가 포함되어 있지 않은지 확인합니다 (대소 문자 구분). 로케이터를 특정 지역과 일치하는 두 번째 매개 변수로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="788ccfa2a59c47dc5bb08c3badf71e14108739dc" translate="yes" xml:space="preserve">
          <source>Checks that the given element exists on the page and is visible. You can also specify expected attributes of this element.</source>
          <target state="translated">주어진 요소가 페이지에 존재하고 표시되는지 확인합니다. 이 요소의 예상 속성을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed7a0b504541ae9998b9f8ee7d40a5c4b1758d23" translate="yes" xml:space="preserve">
          <source>Checks that the given element exists on the page, even it is invisible.</source>
          <target state="translated">주어진 요소가 보이지 않는 경우에도 페이지에 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="36ff3029d673c4a3e423f2028749df1850a3db14" translate="yes" xml:space="preserve">
          <source>Checks that the given element is invisible or not present on the page. You can also specify expected attributes of this element.</source>
          <target state="translated">주어진 요소가 보이지 않거나 페이지에 없는지 확인합니다. 이 요소의 예상 속성을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6f0dc5e27f15e4dd2fb574a675c81fdf4805291" translate="yes" xml:space="preserve">
          <source>Checks that the given input field or textarea &lt;em&gt;equals&lt;/em&gt; (i.e. not just contains) the given value. Fields are matched by label text, the &amp;ldquo;name&amp;rdquo; attribute, CSS, or XPath.</source>
          <target state="translated">주어진 입력 필드 또는 텍스트 영역 &lt;em&gt;이&lt;/em&gt; 주어진 값과 &lt;em&gt;같은지&lt;/em&gt; (즉, 포함하지 않음) 확인합니다. 필드는 레이블 텍스트, &quot;name&quot;속성, CSS 또는 XPath와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8b2349378980c31ec40473f30cb31a23b14f5d60" translate="yes" xml:space="preserve">
          <source>Checks that the given option is not selected.</source>
          <target state="translated">주어진 옵션이 선택되지 않았는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cede3022ce3e94119c7541747c857633415a0e77" translate="yes" xml:space="preserve">
          <source>Checks that the given option is selected.</source>
          <target state="translated">주어진 옵션이 선택되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e218ef64d01667e5a1fc3ffc828c8cc8ed7aa622" translate="yes" xml:space="preserve">
          <source>Checks that the page doesn&amp;rsquo;t contain a link with the given string. If the second parameter is given, only links with a matching &amp;ldquo;href&amp;rdquo; attribute will be checked.</source>
          <target state="translated">페이지에 주어진 문자열과의 링크가 포함되어 있지 않은지 확인합니다. 두 번째 매개 변수가 제공되면 &quot;href&quot;속성이 일치하는 링크 만 점검됩니다.</target>
        </trans-unit>
        <trans-unit id="59b05da9446eb01bbc5092188b64472e7a32af16" translate="yes" xml:space="preserve">
          <source>Checks that the page source contains the given string.</source>
          <target state="translated">페이지 소스에 지정된 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fe65f66cd508f0105ff6fe6184461cc10db39b1e" translate="yes" xml:space="preserve">
          <source>Checks that the page source doesn&amp;rsquo;t contain the given string.</source>
          <target state="translated">페이지 소스에 지정된 문자열이 포함되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3d0398700cc14bf04ad6239cc07fa92d6b797a5b" translate="yes" xml:space="preserve">
          <source>Checks that the page title contains the given string.</source>
          <target state="translated">페이지 제목에 주어진 문자열이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b29b221ff12bc7f8457242253d3f1c0fcb0e6a96" translate="yes" xml:space="preserve">
          <source>Checks that the page title does not contain the given string.</source>
          <target state="translated">페이지 제목에 지정된 문자열이 포함되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="97a5998e444444b1c953e9a0b56feda61e7a2e5e" translate="yes" xml:space="preserve">
          <source>Checks that the response code 2xx</source>
          <target state="translated">응답 코드 2xx인지 확인</target>
        </trans-unit>
        <trans-unit id="a4aca95311b54ea3540f599d6fa6cdcf1f743132" translate="yes" xml:space="preserve">
          <source>Checks that the response code 3xx</source>
          <target state="translated">응답 코드 3xx인지 확인</target>
        </trans-unit>
        <trans-unit id="e8244b2d18bd3829bda78c6d17f126345db52b9c" translate="yes" xml:space="preserve">
          <source>Checks that the response code is 2xx</source>
          <target state="translated">응답 코드가 2xx인지 확인</target>
        </trans-unit>
        <trans-unit id="06edb93d5cd7d0c4067241479d5a32570172af1c" translate="yes" xml:space="preserve">
          <source>Checks that the response code is 4xx</source>
          <target state="translated">응답 코드가 4xx인지 확인</target>
        </trans-unit>
        <trans-unit id="55d451bf06761ce955d81874eec432246aeb787a" translate="yes" xml:space="preserve">
          <source>Checks that the response code is 5xx</source>
          <target state="translated">응답 코드가 5xx인지 확인</target>
        </trans-unit>
        <trans-unit id="f5933fcbe15b983e83b8a980d2a471e20f961672" translate="yes" xml:space="preserve">
          <source>Checks that the specified checkbox is checked.</source>
          <target state="translated">지정된 확인란이 선택되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c5dd9554e97e74a3e2e8af94d29562ffd374793c" translate="yes" xml:space="preserve">
          <source>Checks that there are a certain number of elements matched by the given locator on the page.</source>
          <target state="translated">페이지에서 지정된 로케이터와 일치하는 특정 수의 요소가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f8a372a3baa712ca8132df51da3a918a654aec92" translate="yes" xml:space="preserve">
          <source>Checks that there isn&amp;rsquo;t a cookie with the given name. You can set additional cookie params like &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; as array passed in last argument.</source>
          <target state="translated">지정된 이름의 쿠키가 없는지 확인합니다. &lt;code&gt;domain&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; 와 같은 추가 쿠키 매개 변수 를 마지막 인수에 전달 된 배열로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="678f44bc2a784e88895194ecb7ef6fde5b74434e" translate="yes" xml:space="preserve">
          <source>Checks that there&amp;rsquo;s a link with the specified text. Give a full URL as the second parameter to match links with that exact URL.</source>
          <target state="translated">지정된 텍스트와의 링크가 있는지 확인합니다. 정확한 URL과 링크를 일치시키기 위해 두 번째 매개 변수로 전체 URL을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="f157f62002fe120ca5b3aa8c0ef65144e9a28360" translate="yes" xml:space="preserve">
          <source>Checks that two variables are equal.</source>
          <target state="translated">두 변수가 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="87ba6ed5e569bd04f8539658d098637f309bb1c7" translate="yes" xml:space="preserve">
          <source>Checks that two variables are not equal</source>
          <target state="translated">두 변수가 서로 다른지 확인</target>
        </trans-unit>
        <trans-unit id="015cbda6bea73084f0bb744a09d8a83c5e12f0ac" translate="yes" xml:space="preserve">
          <source>Checks that two variables are not same</source>
          <target state="translated">두 변수가 동일하지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="4889af8c1af7a500acb64db621bbc7d6398b5d15" translate="yes" xml:space="preserve">
          <source>Checks that two variables are same</source>
          <target state="translated">두 변수가 동일한 지 확인</target>
        </trans-unit>
        <trans-unit id="65e1d7b3d46ca35820a62b62904a478544a982c7" translate="yes" xml:space="preserve">
          <source>Checks that user is authenticated.</source>
          <target state="translated">사용자가 인증되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2dcd986dc36a4792e66e24d915f8e481a1fd9075" translate="yes" xml:space="preserve">
          <source>Checks that variable is NULL</source>
          <target state="translated">변수가 NULL인지 확인</target>
        </trans-unit>
        <trans-unit id="ebebcf6d1ef62500dd70a9d468e4fc346ed3a2f3" translate="yes" xml:space="preserve">
          <source>Checks that variable is empty.</source>
          <target state="translated">변수가 비어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8103316664632800fe760b67bc7185d10c7e8c28" translate="yes" xml:space="preserve">
          <source>Checks that variable is not NULL</source>
          <target state="translated">변수가 NULL이 아닌지 확인</target>
        </trans-unit>
        <trans-unit id="cbdc5aab526f0414a5857d6240693568df61d3ce" translate="yes" xml:space="preserve">
          <source>Checks that variable is not empty.</source>
          <target state="translated">변수가 비어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eebbffb1df752183b27d502cca18dd2be71688ee" translate="yes" xml:space="preserve">
          <source>Checks the strict matching of file contents. Unlike &lt;code&gt;seeInThisFile&lt;/code&gt; will fail if file has something more than expected lines. Better to use with HEREDOC strings. Matching is done after removing &amp;ldquo;\r&amp;rdquo; chars from file content.</source>
          <target state="translated">파일 내용의 엄격한 일치를 확인합니다. &lt;code&gt;seeInThisFile&lt;/code&gt; 과 달리 파일에 예상보다 많은 줄이 있으면 실패합니다. HEREDOC 문자열과 함께 사용하는 것이 좋습니다. 파일 내용에서 &quot;\ r&quot;문자를 제거한 후 일치가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c3dbeec33c489607851b4abcc583aa27dd0ffacf" translate="yes" xml:space="preserve">
          <source>Checks whether XML response does not match XPath</source>
          <target state="translated">XML 응답이 XPath와 일치하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="346ffbb124d25453793acf2d90a753b1281166d2" translate="yes" xml:space="preserve">
          <source>Checks whether XML response matches XPath</source>
          <target state="translated">XML 응답이 XPath와 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="3d6d9230c1763f433e3463e8cb33962fa628b19e" translate="yes" xml:space="preserve">
          <source>Checks whether last response do not contain text.</source>
          <target state="translated">마지막 응답에 텍스트가 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b85572852b6c3896a2c5920da0d1d200a3d3a52d" translate="yes" xml:space="preserve">
          <source>Checks whether last response matches the supplied json schema (https://json-schema.org/) Supply schema as json string.</source>
          <target state="translated">마지막 응답이 제공된 json 스키마 (https://json-schema.org/)와 일치하는지 확인합니다. 스키마를 json 문자열로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e88d060f69887ddd66581d07f6a9fa0aae848e3a" translate="yes" xml:space="preserve">
          <source>Checks whether last response matches the supplied json schema (https://json-schema.org/) Supply schema as relative file path in your project directory or an absolute path</source>
          <target state="translated">마지막 응답이 제공된 json 스키마 (https://json-schema.org/)와 일치하는지 확인합니다. 스키마를 프로젝트 디렉토리의 상대 파일 경로 또는 절대 경로로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f6b63430e79d66ac207d78ffab89d5eda2d4ae42" translate="yes" xml:space="preserve">
          <source>Checks whether last response was valid JSON. This is done with json_last_error function.</source>
          <target state="translated">마지막 응답이 유효한 JSON인지 확인합니다. 이것은 json_last_error 함수로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="4be0c8ccca33aa81cdd484b8d0be77f91349ddbd" translate="yes" xml:space="preserve">
          <source>Checks whether last response was valid XML. This is done with libxml_get_last_error function.</source>
          <target state="translated">마지막 응답이 유효한 XML인지 확인합니다. 이것은 libxml_get_last_error 함수로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="91a26f22d0bfed0433f73e823ed19b38ebbaf8f0" translate="yes" xml:space="preserve">
          <source>Checks whether the last JSON response contains provided array. The response is converted to array with json_decode($response, true) Thus, JSON is represented by associative array. This method matches that response array contains provided array.</source>
          <target state="translated">마지막 JSON 응답에 제공된 배열이 포함되어 있는지 확인합니다. 응답은 json_decode ($ response, true)를 사용하여 배열로 변환됩니다. 따라서 JSON은 연관 배열로 표시됩니다. 이 메소드는 응답 배열에 제공된 배열이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="52dc221fdf2f9ff69a1324e232f3040fda3caa61" translate="yes" xml:space="preserve">
          <source>Checks whether the last response contains text.</source>
          <target state="translated">마지막 응답에 텍스트가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d1f0aff033b7c364c2cb8b2d00360caa59f8cba1" translate="yes" xml:space="preserve">
          <source>Choose the syntax you like the most and use it,</source>
          <target state="translated">가장 좋아하는 구문을 선택하고 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fc6ca66b79d329ef6af29f5c76d31857bc6cb01f" translate="yes" xml:space="preserve">
          <source>Chrome or Firefox</source>
          <target state="translated">크롬 또는 파이어 폭스</target>
        </trans-unit>
        <trans-unit id="8d06b229773153ed953f26cbf3aa7309dd4ff316" translate="yes" xml:space="preserve">
          <source>ChromeDriver</source>
          <target state="translated">ChromeDriver</target>
        </trans-unit>
        <trans-unit id="a2bb24803604e995372c043770ad987c13e538a9" translate="yes" xml:space="preserve">
          <source>ChromeDriver was created by Google to control Chrome and Chromium browsers programmatically. It can be paired with &lt;a href=&quot;03-acceptancetests#Selenium-Server&quot;&gt;Selenium Server&lt;/a&gt; or used as a standalone tool to drive Chrome browser. It is simpler to set up than Selenium Server, however, it has limited support for WebDriver protocol.</source>
          <target state="translated">ChromeDriver는 Google에서 프로그래밍 방식으로 Chrome 및 Chromium 브라우저를 제어하기 위해 만들어졌습니다. &lt;a href=&quot;03-acceptancetests#Selenium-Server&quot;&gt;Selenium 서버&lt;/a&gt; 와 함께 사용하거나 Chrome 브라우저를 구동하기위한 독립형 도구로 사용할 수 있습니다 . Selenium 서버보다 설정이 더 간단하지만 WebDriver 프로토콜에 대한 지원이 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5817d6cefdd2d37c6cb551dca8d56f9db74558d" translate="yes" xml:space="preserve">
          <source>Class JsonType @package Codeception\Util</source>
          <target state="translated">클래스 JsonType @package Codeception \ Util</target>
        </trans-unit>
        <trans-unit id="e6d8bdf8d6b920f5ce4a49fd295a90dfb38f00cc" translate="yes" xml:space="preserve">
          <source>Class containing constants of HTTP Status Codes and method to print HTTP code with its description.</source>
          <target state="translated">HTTP 상태 코드의 상수를 포함하는 클래스 및 설명과 함께 HTTP 코드를 인쇄하는 방법.</target>
        </trans-unit>
        <trans-unit id="fa893d87e1fa0a69c7942dd1e65f3bd1932e53d1" translate="yes" xml:space="preserve">
          <source>Clean</source>
          <target state="translated">Clean</target>
        </trans-unit>
        <trans-unit id="4d1725cc7b079d862fcd46827cbb04c988a32cc6" translate="yes" xml:space="preserve">
          <source>Clear all messages of the queue/tube</source>
          <target state="translated">대기열 / 튜브의 모든 메시지를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="6397f164b34d7c78172b660350de48d72172224b" translate="yes" xml:space="preserve">
          <source>Clear the registered application handlers.</source>
          <target state="translated">등록 된 애플리케이션 핸들러를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="ec407ce72c04280a0236d1d3488f7e5cceb10402" translate="yes" xml:space="preserve">
          <source>Clears given field which isn&amp;rsquo;t empty.</source>
          <target state="translated">비어 있지 않은 주어진 필드를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="0beeb9fcc02bca0cd1498aa2acd589f8f27818af" translate="yes" xml:space="preserve">
          <source>Clears the APC(u) cache</source>
          <target state="translated">APC (u) 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="53a98298fb455348c338555baa18286b2da270c8" translate="yes" xml:space="preserve">
          <source>Cli</source>
          <target state="translated">Cli</target>
        </trans-unit>
        <trans-unit id="a28b9f25850c85be028d130c159844111352c7f3" translate="yes" xml:space="preserve">
          <source>Cli::dontSeeInShellOutput</source>
          <target state="translated">Cli::dontSeeInShellOutput</target>
        </trans-unit>
        <trans-unit id="e179b3c56f294655214e782852a3dd770ecc71a0" translate="yes" xml:space="preserve">
          <source>Cli::runShellCommand</source>
          <target state="translated">Cli::runShellCommand</target>
        </trans-unit>
        <trans-unit id="9ae8d695ff7952174ad6db0cf7c7aeaa91ad3075" translate="yes" xml:space="preserve">
          <source>Cli::seeInShellOutput</source>
          <target state="translated">Cli::seeInShellOutput</target>
        </trans-unit>
        <trans-unit id="3a447b380cf57055b59b6f156385509599536db6" translate="yes" xml:space="preserve">
          <source>Cli::seeResultCodeIs</source>
          <target state="translated">Cli::seeResultCodeIs</target>
        </trans-unit>
        <trans-unit id="e1404eef589bdb6c0afd2cb149b4eef45250a9d0" translate="yes" xml:space="preserve">
          <source>Cli::seeResultCodeIsNot</source>
          <target state="translated">Cli::seeResultCodeIsNot</target>
        </trans-unit>
        <trans-unit id="d8123a86f0a3261e21263e230cc7bc476076e588" translate="yes" xml:space="preserve">
          <source>Cli::seeShellOutputMatches</source>
          <target state="translated">Cli::seeShellOutputMatches</target>
        </trans-unit>
        <trans-unit id="79cbc5eb672a54c2b82572afd52f2a6a4f85e598" translate="yes" xml:space="preserve">
          <source>Click</source>
          <target state="translated">Click</target>
        </trans-unit>
        <trans-unit id="9782dcdd5029a404d40c6bc7c829021563894ca8" translate="yes" xml:space="preserve">
          <source>Clicking links is probably not what takes the most time during the testing of a website. The most routine waste of time goes into the testing of forms. Codeception provides several ways of testing forms.</source>
          <target state="translated">링크를 클릭하는 것이 웹 사이트 테스트 중에 가장 많은 시간이 걸리지 않을 것입니다. 가장 일상적인 시간 낭비는 양식 테스트에 사용됩니다. Codeception은 여러 가지 테스트 양식 양식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5625776b7389add28b39795f268db09ca791f0ec" translate="yes" xml:space="preserve">
          <source>Clones an object and redefines it&amp;rsquo;s properties (even protected and private)</source>
          <target state="translated">객체를 복제하고 객체의 속성을 재정의합니다 (보호 및 비공개).</target>
        </trans-unit>
        <trans-unit id="a73011cd2353e58fe852a27dd1e6d778a5efc7df" translate="yes" xml:space="preserve">
          <source>Closes current browser tab and switches to previous active tab.</source>
          <target state="translated">현재 브라우저 탭을 닫고 이전 활성 탭으로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="3c56aeca012e4e4b674819be39004ecf02232584" translate="yes" xml:space="preserve">
          <source>Cloud Testing</source>
          <target state="translated">클라우드 테스팅</target>
        </trans-unit>
        <trans-unit id="2f9c7bca941cea97366911238df02c59a5a7b500" translate="yes" xml:space="preserve">
          <source>Cloud Testing services can run your WebDriver tests in the cloud. In case you want to test a local site or site behind a firewall you should use a tunnel application provided by a service.</source>
          <target state="translated">클라우드 테스트 서비스는 클라우드에서 WebDriver 테스트를 실행할 수 있습니다. 방화벽 뒤의 로컬 사이트 나 사이트를 테스트하려는 경우 서비스에서 제공하는 터널 응용 프로그램을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1634b78cbec0dfb9ebc50c0be4deeb69af56ddab" translate="yes" xml:space="preserve">
          <source>Cloud Testing services work with the standard WebDriver protocol. This makes setting up cloud testing really easy. You just need to set the &lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;WebDriver configuration&lt;/a&gt; to:</source>
          <target state="translated">클라우드 테스트 서비스는 표준 WebDriver 프로토콜과 함께 작동합니다. 이렇게하면 클라우드 테스트를 정말 쉽게 설정할 수 있습니다. &lt;a href=&quot;modules/webdriver#Cloud-Testing&quot;&gt;WebDriver 구성&lt;/a&gt; 을 다음과 같이 설정하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="b614f87a591b0ca42f98c4c903babaaa97f1d6a4" translate="yes" xml:space="preserve">
          <source>Code Coverage</source>
          <target state="translated">코드 범위</target>
        </trans-unit>
        <trans-unit id="cf511ad130599f9e05bfcacdfea22b51e225a117" translate="yes" xml:space="preserve">
          <source>Code inside &lt;code&gt;specify&lt;/code&gt; blocks is isolated. In the example above, any changes to &lt;code&gt;$this-&amp;gt;user&lt;/code&gt; will not be reflected in other code blocks as it is marked with &lt;code&gt;@specify&lt;/code&gt; annotation.</source>
          <target state="translated">&lt;code&gt;specify&lt;/code&gt; 블록 내부의 코드 는 격리되어 있습니다. 위의 예에서 &lt;code&gt;$this-&amp;gt;user&lt;/code&gt; 대한 변경 사항 은 &lt;code&gt;@specify&lt;/code&gt; 주석으로 표시되어 있으므로 다른 코드 블록에 반영되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ca567dda33cdf7058994a40bb9ef4db135c7d283" translate="yes" xml:space="preserve">
          <source>Code:</source>
          <target state="translated">Code:</target>
        </trans-unit>
        <trans-unit id="3d8839ca5cb3470781ae332276826344a2858129" translate="yes" xml:space="preserve">
          <source>CodeCoverage results from remote server will be saved to &lt;code&gt;tests/_output&lt;/code&gt; directory. Please note that remote codecoverage results won&amp;rsquo;t be displayed in console by the reason mentioned above: local and remote results can&amp;rsquo;t be merged, and console displays results for local codecoverage.</source>
          <target state="translated">원격 서버의 CodeCoverage 결과는 &lt;code&gt;tests/_output&lt;/code&gt; 디렉토리에 저장됩니다 . 위에서 언급 한 이유로 원격 코드 커버리지 결과가 콘솔에 표시되지 않습니다. 로컬 및 원격 결과를 병합 할 수 없으며 콘솔은 로컬 코드 커버리지에 대한 결과를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="6263c4f1c44f0033e6f0db1db29f9fd576775944" translate="yes" xml:space="preserve">
          <source>Codeception</source>
          <target state="translated">Codeception</target>
        </trans-unit>
        <trans-unit id="539dfde76b6ef7d1e9e77e018f049d9f543d87b8" translate="yes" xml:space="preserve">
          <source>Codeception Acceptance Tests</source>
          <target state="translated">인식 승인 테스트</target>
        </trans-unit>
        <trans-unit id="7e36005695ba0ba2412cd5df36d85a7a23b468f5" translate="yes" xml:space="preserve">
          <source>Codeception Documentation</source>
          <target state="translated">인식 문서</target>
        </trans-unit>
        <trans-unit id="1eb6c2d9a9f8ca8a52b4e7c724933ff76eab6ec6" translate="yes" xml:space="preserve">
          <source>Codeception Functional Tests</source>
          <target state="translated">인식 기능 테스트</target>
        </trans-unit>
        <trans-unit id="8319ed12a6536cac07428d85582e2c3e0c72e7e8" translate="yes" xml:space="preserve">
          <source>Codeception Test</source>
          <target state="translated">인식 테스트</target>
        </trans-unit>
        <trans-unit id="9b89557fc1aa0899091b5244dccea0d683f58b98" translate="yes" xml:space="preserve">
          <source>Codeception Unit Tests</source>
          <target state="translated">인식 단위 테스트</target>
        </trans-unit>
        <trans-unit id="3d3b1311e38768132e4c602d95b328d1bb69fee8" translate="yes" xml:space="preserve">
          <source>Codeception allows execution of user stories in Gherkin format in a similar manner as is done in Cucumber or Behat. Please refer to &lt;a href=&quot;07-bdd&quot;&gt;the BDD chapter&lt;/a&gt; to learn more.</source>
          <target state="translated">Codeception은 Cucumber 또는 Behat에서와 유사한 방식으로 Gherkin 형식의 사용자 스토리를 실행할 수있게합니다. 자세한 내용 &lt;a href=&quot;07-bdd&quot;&gt;은 BDD 장&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26921b5f1761b6220b5adafc6bb534499e93e625" translate="yes" xml:space="preserve">
          <source>Codeception allows you to access the properties and methods of all modules defined for this suite. Unlike using the UnitTester class for this purpose, using a module directly grants you access to all public properties of that module.</source>
          <target state="translated">Codeception을 사용하면이 제품군에 대해 정의 된 모든 모듈의 속성과 메서드에 액세스 할 수 있습니다. 이러한 목적으로 UnitTester 클래스를 사용하는 것과 달리 모듈을 사용하면 해당 모듈의 모든 공용 속성에 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48f85bd579f8d80234fbabed19744aa2338839ee" translate="yes" xml:space="preserve">
          <source>Codeception allows you to execute actions in concurrent sessions. The most obvious case for this is testing realtime messaging between users on a site. In order to do it, you will need to launch two browser windows at the same time for the same test. Codeception has a very smart concept for doing this. It is called &lt;strong&gt;Friends&lt;/strong&gt;:</source>
          <target state="translated">Codeception을 사용하면 동시 세션에서 작업을 실행할 수 있습니다. 가장 확실한 경우는 사이트의 사용자 간 실시간 메시징 테스트입니다. 그렇게하려면 동일한 테스트를 위해 두 개의 브라우저 창을 동시에 시작해야합니다. Codeception은이를위한 매우 현명한 개념을 가지고 있습니다. &lt;strong&gt;친구&lt;/strong&gt; 라고합니다 :</target>
        </trans-unit>
        <trans-unit id="d52befafebf923b6b4e1e35819e5c595a5975c32" translate="yes" xml:space="preserve">
          <source>Codeception allows you to share cookies between tests, so a test user can stay logged in for other tests.</source>
          <target state="translated">Codeception을 사용하면 테스트간에 쿠키를 공유 할 수 있으므로 테스트 사용자는 다른 테스트를 위해 로그인 상태를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d93e008d8eac37889a1e3ca663203ed369669baf" translate="yes" xml:space="preserve">
          <source>Codeception also assists the developer when dealing with data. Tools for database population and cleaning up are bundled within the &lt;code&gt;Db&lt;/code&gt; module. If you use ORM, you can use one of the provided framework modules to operate with database through a data abstraction layer, and use the DataFactory module to generate new records with ease.</source>
          <target state="translated">Codeception은 또한 데이터를 다룰 때 개발자를 지원합니다. 데이터베이스 채우기 및 정리 도구는 &lt;code&gt;Db&lt;/code&gt; 모듈 내에 번들로 제공됩니다 . ORM을 사용하는 경우 제공된 프레임 워크 모듈 중 하나를 사용하여 데이터 추상화 계층을 통해 데이터베이스에 대해 작업하고 DataFactory 모듈을 사용하여 새 레코드를 쉽게 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e5c84b8429e3a1bfa3803925ee6c0cfbac0e783" translate="yes" xml:space="preserve">
          <source>Codeception can connect to different PHP frameworks that support functional testing: Symfony2, Laravel5, Yii2, Zend Framework and others. You just need to enable the desired module in your functional suite configuration to start.</source>
          <target state="translated">Codeception은 기능 테스트를 지원하는 Symfony2, Laravel5, Yii2, Zend Framework 및 기타 PHP 프레임 워크에 연결할 수 있습니다. 기능 스위트 구성에서 원하는 모듈을 시작하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="f85aaaf02173b388a4aeb52a1cf770d86d259aeb" translate="yes" xml:space="preserve">
          <source>Codeception can generate a PageObject class for you with command:</source>
          <target state="translated">Codeception은 다음 명령으로 PageObject 클래스를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80c93d33e75c0441a9c369577a7fbf5d087bf4ee" translate="yes" xml:space="preserve">
          <source>Codeception can organize tests into &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;groups&lt;/a&gt;. Starting from 2.0 it can load information about a group from a files. Sample text file with a list of file names can be treated as a dynamically configured group. Take a look into sample group file:</source>
          <target state="translated">Codeception은 테스트를 &lt;a href=&quot;07-advancedusage#Groups&quot;&gt;그룹으로&lt;/a&gt; 구성 할 수 있습니다 . 2.0부터는 파일에서 그룹에 대한 정보를로드 할 수 있습니다. 파일 이름 목록이있는 샘플 텍스트 파일은 동적으로 구성된 그룹으로 취급 될 수 있습니다. 샘플 그룹 파일을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="f76473a065fbfcd2e3b165de663345d6e4150b68" translate="yes" xml:space="preserve">
          <source>Codeception comes with bundled extensions located in &lt;code&gt;ext&lt;/code&gt; directory. For instance, you can enable the Logger extension to log the test execution with Monolog:</source>
          <target state="translated">Codeception은 &lt;code&gt;ext&lt;/code&gt; 디렉토리 에 번들 확장이 있습니다 . 예를 들어, Logger 확장 프로그램을 활성화하여 Monolog로 테스트 실행을 기록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8805da47f504f11a8fbad389f3438920209b8107" translate="yes" xml:space="preserve">
          <source>Codeception does not provide a command like &lt;code&gt;run-parallel&lt;/code&gt;. There is no common solution that can play well for everyone. Here are the questions you will need to answer:</source>
          <target state="translated">Codeception은 &lt;code&gt;run-parallel&lt;/code&gt; 과 같은 명령을 제공하지 않습니다 . 모든 사람에게 적합한 솔루션은 없습니다. 답변해야 할 질문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eb0bad4194caaed23572bb85146cd3d079089ac9" translate="yes" xml:space="preserve">
          <source>Codeception does not provide tools for parallel test execution. This is a complex task and solutions may vary depending on a project. We use &lt;a href=&quot;http://robo.li&quot;&gt;Robo&lt;/a&gt; task runner as an external tool to perform all required steps. To prepare our tests to be executed in parallel we use Codeception features of dynamic groups and environments. To do even more we can create Extensions and Group classes to perform dynamic configuration depending on a test process.</source>
          <target state="translated">Codeception은 병렬 테스트 실행을위한 도구를 제공하지 않습니다. 이것은 복잡한 작업이며 솔루션은 프로젝트에 따라 다를 수 있습니다. 우리가 사용하는 &lt;a href=&quot;http://robo.li&quot;&gt;로보&lt;/a&gt; 필요한 모든 단계를 수행하기 위해 외부 도구로 작업 주자. 테스트가 병렬로 실행되도록 준비하기 위해 동적 그룹 및 환경의 Codeception 기능을 사용합니다. 더 많은 작업을 수행하기 위해 테스트 프로세스에 따라 확장 및 그룹 클래스를 작성하여 동적 구성을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e89cc3a58a4d79de467cda587a828bc558dda1" translate="yes" xml:space="preserve">
          <source>Codeception doesn&amp;rsquo;t restrict you to only the modules from the main repository. Your project might need your own actions added to the test suite. By running the &lt;code&gt;bootstrap&lt;/code&gt; command, Codeception generates three dummy modules for you, one for each of the newly created suites. These custom modules are called &amp;lsquo;Helpers&amp;rsquo;, and they can be found in the &lt;code&gt;tests/_support&lt;/code&gt; directory.</source>
          <target state="translated">Codeception은 기본 리포지토리의 모듈로만 제한하지 않습니다. 프로젝트에 테스트 스위트에 추가 된 고유 한 조치가 필요할 수 있습니다. &lt;code&gt;bootstrap&lt;/code&gt; 명령 을 실행하면 Codeception은 새로 작성된 각 스위트마다 하나씩 3 개의 더미 모듈을 생성합니다. 이러한 사용자 정의 모듈을 '도우미'라고하며 &lt;code&gt;tests/_support&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b611b8abcf2e45511d2e5901ba195367569832a0" translate="yes" xml:space="preserve">
          <source>Codeception follows simple naming rules to make it easy to remember (as well as easy to understand) its method names.</source>
          <target state="translated">Codeception은 간단한 이름 지정 규칙에 따라 메소드 이름을 쉽게 기억하고 이해하기 쉽게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="04bc7eccd517562b09b294d23f4e78dae9358127" translate="yes" xml:space="preserve">
          <source>Codeception generates this text representation from PHP code by executing:</source>
          <target state="translated">Codeception은 다음을 실행하여 PHP 코드에서이 텍스트 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="97ef240f0a11b8daf539f27caa469bcadba936b5" translate="yes" xml:space="preserve">
          <source>Codeception has a &lt;code&gt;Db&lt;/code&gt; module, which takes on most of the tasks of database interaction.</source>
          <target state="translated">Codeception에는 &lt;code&gt;Db&lt;/code&gt; 모듈이 있으며 대부분의 데이터베이스 상호 작용 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="337f706c0e81530408bcbb123c163c86c870bb94" translate="yes" xml:space="preserve">
          <source>Codeception has a global configuration in &lt;code&gt;codeception.yml&lt;/code&gt; and a config for each suite. We also support &lt;code&gt;.dist&lt;/code&gt; configuration files. If you have several developers in a project, put shared settings into &lt;code&gt;codeception.dist.yml&lt;/code&gt; and personal settings into &lt;code&gt;codeception.yml&lt;/code&gt;. The same goes for suite configs. For example, the &lt;code&gt;unit.suite.yml&lt;/code&gt; will be merged with &lt;code&gt;unit.suite.dist.yml&lt;/code&gt;.</source>
          <target state="translated">Codeception는 글로벌 구성이 &lt;code&gt;codeception.yml&lt;/code&gt; 각 제품군에 대한 설정을. 또한 &lt;code&gt;.dist&lt;/code&gt; 구성 파일을 지원 합니다. 프로젝트에 여러 개발자가있는 경우 공유 설정을 &lt;code&gt;codeception.dist.yml&lt;/code&gt; 에 , 개인 설정을 &lt;code&gt;codeception.yml&lt;/code&gt; 에 넣으십시오 . 스위트 구성도 마찬가지입니다. 예를 들어 &lt;code&gt;unit.suite.yml&lt;/code&gt; 은 &lt;code&gt;unit.suite.dist.yml&lt;/code&gt; 과 병합됩니다 .</target>
        </trans-unit>
        <trans-unit id="2e0808fffd75c9b6cc2821b8b15a3305e8100b4b" translate="yes" xml:space="preserve">
          <source>Codeception has built-in installation templates for</source>
          <target state="translated">Codeception에는 다음을위한 설치 템플릿이 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="810a2dce86ecb785664a1a65b9ece8a13a83e87b" translate="yes" xml:space="preserve">
          <source>Codeception has its own testing format called Cest (Codecept + Test). To start writing a test we need to create a new Cest file. We can do that by running the following command:</source>
          <target state="translated">Codeception에는 Cest (Codecept + Test)라는 자체 테스트 형식이 있습니다. 테스트 작성을 시작하려면 새로운 Cest 파일을 만들어야합니다. 다음 명령을 실행하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2baa9f53cbd01c46d0f48a0b5a370634b10550a" translate="yes" xml:space="preserve">
          <source>Codeception has limited capabilities to extend its core features. Extensions are not supposed to override current functionality, but can be useful if you are an experienced developer and you want to hook into the testing flow.</source>
          <target state="translated">Codeception은 핵심 기능을 확장하는 기능이 제한적입니다. 확장 기능은 현재 기능을 대체하지는 않지만 숙련 된 개발자이고 테스트 흐름에 연결하려는 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6b7f5171f6cabd03f7aec982884e39d77fcdc10" translate="yes" xml:space="preserve">
          <source>Codeception has many bundled modules which will help you run tests for different purposes and different environments. The idea of modules is to share common actions, so that developers and QA engineers can concentrate on testing and not on reinventing the wheel. Each module provides methods for testing its own part and by combining modules you can get a powerful setup to test an application at all levels.</source>
          <target state="translated">Codeception에는 다양한 목적과 환경에 따라 테스트를 실행하는 데 도움이되는 많은 번들 모듈이 있습니다. 모듈의 개념은 개발자와 QA 엔지니어가 바퀴를 재발 명하지 않고 테스트에 집중할 수 있도록 일반적인 조치를 공유하는 것입니다. 각 모듈은 자체 부품을 테스트하는 방법을 제공하며 모듈을 결합하여 모든 수준에서 응용 프로그램을 테스트하기위한 강력한 설정을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2600d438a56a44f46c455240a1d7f2d1af9c5019" translate="yes" xml:space="preserve">
          <source>Codeception has two modules that will help you to test various web services. They need a new &lt;code&gt;api&lt;/code&gt; suite to be created. Remember, you are not limited to test only response body. By including &lt;code&gt;Db&lt;/code&gt; module you may check if a user has been created after the &lt;code&gt;CreateUser&lt;/code&gt; call. You can improve testing scenarios by using REST or SOAP responses in your helper methods.</source>
          <target state="translated">Codeception에는 다양한 웹 서비스를 테스트하는 데 도움이되는 두 가지 모듈이 있습니다. 새로운 &lt;code&gt;api&lt;/code&gt; 제품군이 필요합니다 . 응답 본문 만 테스트하도록 제한되지는 않습니다. &lt;code&gt;Db&lt;/code&gt; 모듈을 포함 하면 &lt;code&gt;CreateUser&lt;/code&gt; 호출 후 사용자가 작성되었는지 확인할 수 있습니다 . 헬퍼 메소드에서 REST 또는 SOAP 응답을 사용하여 테스트 시나리오를 개선 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2940c06f31be3c1dd66585265beb9ef6af11f74" translate="yes" xml:space="preserve">
          <source>Codeception is a framework which may look simple at first glance but it allows you to build powerful tests with a single API, refactor them, and write them faster using the interactive console. Codeception tests can be easily organized in groups or Cest classes.</source>
          <target state="translated">Codeception은 언뜻보기에는 간단한 프레임 워크이지만 단일 API로 강력한 테스트를 작성하고 리팩터링하며 대화식 콘솔을 사용하여 더 빠르게 작성할 수 있습니다. 인식 테스트는 그룹 또는 Cest 클래스로 쉽게 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b506703e654effdda44212559a8e16575de8236" translate="yes" xml:space="preserve">
          <source>Codeception is created on top of &lt;a href=&quot;https://www.phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;. If you have experience writing unit tests with PHPUnit you can continue doing so. Codeception has no problem executing standard PHPUnit tests, but, additionally, Codeception provides some well-built tools to make your unit tests simpler and cleaner.</source>
          <target state="translated">코드 인식은 &lt;a href=&quot;https://www.phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; 위에 생성됩니다 . PHPUnit으로 단위 테스트를 작성한 경험이 있다면 계속 그렇게 할 수 있습니다. Codeception은 표준 PHPUnit 테스트를 실행하는 데 아무런 문제가 없지만 Codeception은 단위 테스트를보다 간단하고 깔끔하게하기 위해 잘 구축 된 도구를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8a41392a76adf11968fb1a2f75f78b9f69504978" translate="yes" xml:space="preserve">
          <source>Codeception modules can print valuable information while running. Just execute tests with the &lt;code&gt;--debug&lt;/code&gt; option to see running details. For any custom output use the &lt;code&gt;codecept_debug&lt;/code&gt; function:</source>
          <target state="translated">Codeception 모듈은 실행 중에 유용한 정보를 인쇄 할 수 있습니다. &lt;code&gt;--debug&lt;/code&gt; 옵션으로 테스트를 실행하면 실행 중인 세부 정보를 볼 수 있습니다. 사용자 정의 출력의 경우 &lt;code&gt;codecept_debug&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="17415a20f5decfb845cf3e75aa5cd732de4ed45b" translate="yes" xml:space="preserve">
          <source>Codeception provides &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception\Stub library&lt;/a&gt; for building mocks and stubs for tests. Under the hood it used PHPUnit&amp;rsquo;s mock builder but with much simplified API.</source>
          <target state="translated">Codeception은 테스트 용 모의 객체 및 스텁을 빌드하기위한 &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception \ Stub 라이브러리&lt;/a&gt; 를 제공합니다 . 후드 아래에서 PHPUnit의 모의 빌더를 사용했지만 훨씬 단순화 된 API를 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="f3a74f4893af7990b07d6117fd99f5c1b491cfda" translate="yes" xml:space="preserve">
          <source>Codeception reorders tests so dependent tests will always be executed before the tests that rely on them.</source>
          <target state="translated">Codeception은 테스트 순서를 변경하므로 종속 테스트는 항상 테스트에 의존하는 테스트보다 먼저 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="fb1cd9505e44fe91fe79a1c985b3b45db6d55326" translate="yes" xml:space="preserve">
          <source>Codeception service will execute command &lt;code&gt;codecept run&lt;/code&gt; but only after all services are started. This is defined using &lt;code&gt;depends_on&lt;/code&gt; parameter.</source>
          <target state="translated">Codeception 서비스는 &lt;code&gt;codecept run&lt;/code&gt; 명령을 실행 하지만 모든 서비스가 시작된 후에 만 실행 됩니다. &lt;code&gt;depends_on&lt;/code&gt; 매개 변수를 사용하여 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="e16834f29345ec3143eefe4b3bd886481f9088a4" translate="yes" xml:space="preserve">
          <source>Codeception setup can be customized for the needs of your application. If you build a distributable application and you have a personalized configuration you can build an Installation template which will help your users to start testing on their projects.</source>
          <target state="translated">응용 프로그램의 요구에 맞게 코드 설정을 사용자 지정할 수 있습니다. 배포 가능한 응용 프로그램을 작성하고 개인화 된 구성이있는 경우 사용자가 프로젝트에서 테스트를 시작하는 데 도움이되는 설치 템플릿을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c20ab9e98ee8838eea06f491e6b7ef8ee5295559" translate="yes" xml:space="preserve">
          <source>Codeception supports all three testing types. Out of the box you have tools for writing unit, functional, and acceptance tests in a unified framework.</source>
          <target state="translated">Codeception은 세 가지 테스트 유형을 모두 지원합니다. 기본적으로 통합 프레임 워크에서 단위, 기능 및 승인 테스트를 작성하기위한 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="29e53f5fcc9968474cf601791797a73ad482ddf4" translate="yes" xml:space="preserve">
          <source>Codeception supports simple dependency injection for Cest and \Codeception\TestCase\Test classes. It means that you can specify which classes you need as parameters of the special &lt;code&gt;_inject()&lt;/code&gt; method, and Codeception will automatically create the respective objects and invoke this method, passing all dependencies as arguments. This may be useful when working with Helpers. Here&amp;rsquo;s an example for Cest:</source>
          <target state="translated">Codeception은 Cest 및 \ Codeception \ TestCase \ Test 클래스에 대한 간단한 종속성 주입을 지원합니다. 즉, 특수한 &lt;code&gt;_inject()&lt;/code&gt; 메서드 의 매개 변수로 필요한 클래스를 지정할 수 있으며 Codeception은 해당 개체를 자동으로 만들고이 메서드를 호출하여 모든 종속성을 인수로 전달합니다. 도우미와 작업 할 때 유용 할 수 있습니다. Cest의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f0b1e23d9daca7f924f707d8e3f5f622036cb3e7" translate="yes" xml:space="preserve">
          <source>Codeception templates allow creating a customized setup and configuration for your project. An abstract class for installation template. Each init template should extend it and implement a &lt;code&gt;setup&lt;/code&gt; method. Use it to build a custom setup class which can be started with &lt;code&gt;codecept init&lt;/code&gt; command.</source>
          <target state="translated">Codeception 템플릿을 사용하면 프로젝트에 대한 사용자 지정 설정 및 구성을 만들 수 있습니다. 설치 템플릿의 추상 클래스입니다. 각 init 템플릿은이를 확장하고 &lt;code&gt;setup&lt;/code&gt; 방법을 구현해야합니다 . 이를 사용하여 &lt;code&gt;codecept init&lt;/code&gt; 명령 으로 시작할 수있는 사용자 정의 설정 클래스를 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="409723ff5148c362341afa60377b5dbadedb2e77" translate="yes" xml:space="preserve">
          <source>Codeception tries to locate an element by its text, name, CSS or XPath. You can specify the locator type manually by passing an array as a parameter. We call this a &lt;strong&gt;strict locator&lt;/strong&gt;. Available strict locator types are:</source>
          <target state="translated">Codeception은 텍스트, 이름, CSS 또는 XPath로 요소를 찾습니다. 배열을 매개 변수로 전달하여 로케이터 유형을 수동으로 지정할 수 있습니다. 우리는 이것을 &lt;strong&gt;엄격한 로케이터&lt;/strong&gt; 라고 부릅니다 . 사용 가능한 엄격한 로케이터 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5eb6aba0ff33981a33bbafe1e9fec52ffa646023" translate="yes" xml:space="preserve">
          <source>Codeception uses PHPUnit as a backend for running its tests. Thus, any PHPUnit test can be added to a Codeception test suite and then executed. If you ever wrote a PHPUnit test then do it just as you did before. Codeception adds some nice helpers to simplify common tasks.</source>
          <target state="translated">Codeception은 PHPUnit을 테스트 실행을위한 백엔드로 사용합니다. 따라서 모든 PHPUnit 테스트를 Codeception 테스트 스위트에 추가 한 다음 실행할 수 있습니다. PHPUnit 테스트를 작성했다면 이전과 동일하게 수행하십시오. Codeception은 일반적인 작업을 단순화하는 훌륭한 도우미를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5d07f4847800c8dfa014150b92257d4e7601e2de" translate="yes" xml:space="preserve">
          <source>Codeception uses modularity to create a comfortable testing environment for every test suite you write.</source>
          <target state="translated">Codeception은 모듈성을 사용하여 작성하는 모든 테스트 스위트에 편안한 테스트 환경을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dd1771709baef9708851cf6cee2b36cc51b22067" translate="yes" xml:space="preserve">
          <source>Codeception uses modularity to create a comfortable testing environment for every test suite you write. Modules allow you to choose the actions and assertions that can be performed in tests.</source>
          <target state="translated">Codeception은 모듈성을 사용하여 작성하는 모든 테스트 스위트에 편안한 테스트 환경을 만듭니다. 모듈을 사용하면 테스트에서 수행 할 수있는 동작 및 어설 션을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e0783d23a7b383290d81f44dfdc51387173b0e" translate="yes" xml:space="preserve">
          <source>Codeception uses this simple and lightweight definitions format which can be &lt;a href=&quot;modules/rest#seeResponseMatchesJsonType&quot;&gt;easily learned and extended&lt;/a&gt;.</source>
          <target state="translated">Codeception은이 간단하고 간단한 정의 형식을 사용하여 &lt;a href=&quot;modules/rest#seeResponseMatchesJsonType&quot;&gt;쉽게 배우고 확장&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a870b0394a05a3d098b689294d62eded5e46fbc" translate="yes" xml:space="preserve">
          <source>Codeception\InitTemplate</source>
          <target state="translated">Codeception\InitTemplate</target>
        </trans-unit>
        <trans-unit id="768270b1cbd6bd61764166b19d047e303ac031b8" translate="yes" xml:space="preserve">
          <source>Codeception\Module</source>
          <target state="translated">Codeception\Module</target>
        </trans-unit>
        <trans-unit id="41d6495c385f35cd699099e2797f3901c70130c3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$aliases</source>
          <target state="translated">Codeception\Module::$aliases</target>
        </trans-unit>
        <trans-unit id="069b6aa8e282d4c33799db567a6743b0c4a1f7d4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$excludeActions</source>
          <target state="translated">Codeception\Module::$excludeActions</target>
        </trans-unit>
        <trans-unit id="ce646b2b7f4633506b163bc58e1cbe5a84595621" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$includeInheritedActions</source>
          <target state="translated">Codeception\Module::$includeInheritedActions</target>
        </trans-unit>
        <trans-unit id="be1276c57462add458477af807224fcb4ee75ab4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::$onlyActions</source>
          <target state="translated">Codeception\Module::$onlyActions</target>
        </trans-unit>
        <trans-unit id="84901d3c66da8b710f62c3de8fb8034a20f56683" translate="yes" xml:space="preserve">
          <source>Codeception\Module::__construct()</source>
          <target state="translated">Codeception\Module::__construct()</target>
        </trans-unit>
        <trans-unit id="1bef01cfb193db9d02cbf8bc387881586120c998" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_after()</source>
          <target state="translated">Codeception\Module::_after()</target>
        </trans-unit>
        <trans-unit id="2b1219a34eec45074a3f05e8804a9565927ecc70" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_afterStep()</source>
          <target state="translated">Codeception\Module::_afterStep()</target>
        </trans-unit>
        <trans-unit id="a0152911573a6c2bca68083cf219c58e2ac848f6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_afterSuite()</source>
          <target state="translated">Codeception\Module::_afterSuite()</target>
        </trans-unit>
        <trans-unit id="86052e39caa5ba5da912dea258d66c7654a30ecc" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_before()</source>
          <target state="translated">Codeception\Module::_before()</target>
        </trans-unit>
        <trans-unit id="9f3830092e477023c63c7f47b83d268780f29e33" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_beforeStep()</source>
          <target state="translated">Codeception\Module::_beforeStep()</target>
        </trans-unit>
        <trans-unit id="adce6ac1d0d644108e7a6053a0a6005d85cd81b3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_beforeSuite()</source>
          <target state="translated">Codeception\Module::_beforeSuite()</target>
        </trans-unit>
        <trans-unit id="5856634086bafd048518cf754a9986836ae945d8" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_failed()</source>
          <target state="translated">Codeception\Module::_failed()</target>
        </trans-unit>
        <trans-unit id="59540d69339889d9fc2a7512f65c519c4d7a6f1f" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_getConfig()</source>
          <target state="translated">Codeception\Module::_getConfig()</target>
        </trans-unit>
        <trans-unit id="d665455d6f2257f839dde202ba342d4aaff7ca77" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_getName()</source>
          <target state="translated">Codeception\Module::_getName()</target>
        </trans-unit>
        <trans-unit id="77473cee8a635d17a233cd6ef3e2ddfd5b4fece1" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_hasRequiredFields()</source>
          <target state="translated">Codeception\Module::_hasRequiredFields()</target>
        </trans-unit>
        <trans-unit id="84b6f2f9f537822e209867fac30d6086e9e26ff6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_initialize()</source>
          <target state="translated">Codeception\Module::_initialize()</target>
        </trans-unit>
        <trans-unit id="e58a01d0dcda08e4226510b1b7abfd22cbb507ab" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_reconfigure()</source>
          <target state="translated">Codeception\Module::_reconfigure()</target>
        </trans-unit>
        <trans-unit id="3bd6edb6cc453244ed83d38c3a19cac72537ab74" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_resetConfig()</source>
          <target state="translated">Codeception\Module::_resetConfig()</target>
        </trans-unit>
        <trans-unit id="45da14dd0fa06f31e13cb04f3286d52e223c199e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::_setConfig()</source>
          <target state="translated">Codeception\Module::_setConfig()</target>
        </trans-unit>
        <trans-unit id="2b3c0fd2b6ce75284d8e9319d92d60722779db3d" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assert()</source>
          <target state="translated">Codeception\Module::assert()</target>
        </trans-unit>
        <trans-unit id="779ebdb11bb41a4a0c260c440bb9faab7aa343b5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertArrayHasKey()</source>
          <target state="translated">Codeception\Module::assertArrayHasKey()</target>
        </trans-unit>
        <trans-unit id="6dcb555053b4fccb6e8be9dcdd32424b25df4e7b" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertArrayNotHasKey()</source>
          <target state="translated">Codeception\Module::assertArrayNotHasKey()</target>
        </trans-unit>
        <trans-unit id="eb27bcc4fd351c2ea0622f9eaf9fd506ca996785" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertArraySubset()</source>
          <target state="translated">Codeception\Module::assertArraySubset()</target>
        </trans-unit>
        <trans-unit id="a743b57630bcf97d1fd796aad5a3b1f5dc89a15a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertContains()</source>
          <target state="translated">Codeception\Module::assertContains()</target>
        </trans-unit>
        <trans-unit id="12153a89fca80e25f19c1818023d82f451bd458c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertCount()</source>
          <target state="translated">Codeception\Module::assertCount()</target>
        </trans-unit>
        <trans-unit id="0af8a24ccc6183e5a1240498d26c541b6bda2185" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertEmpty()</source>
          <target state="translated">Codeception\Module::assertEmpty()</target>
        </trans-unit>
        <trans-unit id="fd9bdc3836ca28a2e2ace8937683eb8fbe7c3bb5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertEquals()</source>
          <target state="translated">Codeception\Module::assertEquals()</target>
        </trans-unit>
        <trans-unit id="4856826cb1cc98fbdf7a9648d60eba3a198916f3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertFalse()</source>
          <target state="translated">Codeception\Module::assertFalse()</target>
        </trans-unit>
        <trans-unit id="d8e6979bee21d41f2d24ec1ba6a7ffaab1f24bd7" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertFileExists()</source>
          <target state="translated">Codeception\Module::assertFileExists()</target>
        </trans-unit>
        <trans-unit id="3b51d616d4e71e153cfb095ae977dc68d7d0d9f9" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertFileNotExists()</source>
          <target state="translated">Codeception\Module::assertFileNotExists()</target>
        </trans-unit>
        <trans-unit id="de15c6f3101dde909d04b283726edfef1eacd7d2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertGreaterOrEquals()</source>
          <target state="translated">Codeception\Module::assertGreaterOrEquals()</target>
        </trans-unit>
        <trans-unit id="b7180c1df1bab514218f480a91e95a644be3f90f" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertGreaterThan()</source>
          <target state="translated">Codeception\Module::assertGreaterThan()</target>
        </trans-unit>
        <trans-unit id="af27655cc09b0c9e950259c932866c7111506841" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertGreaterThanOrEqual()</source>
          <target state="translated">Codeception\Module::assertGreaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="55953ff2bc2a877c54b9463c48445ec16b20985d" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertInstanceOf()</source>
          <target state="translated">Codeception\Module::assertInstanceOf()</target>
        </trans-unit>
        <trans-unit id="429359ff66b308fb606f82224a67137f8353951a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertInternalType()</source>
          <target state="translated">Codeception\Module::assertInternalType()</target>
        </trans-unit>
        <trans-unit id="05326b3c5ace7f99a2fe9b91596c089748a075aa" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsArray()</source>
          <target state="translated">Codeception\Module::assertIsArray()</target>
        </trans-unit>
        <trans-unit id="030edb140b905a2dfb7bcf029dd40da0b30dac92" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsBool()</source>
          <target state="translated">Codeception\Module::assertIsBool()</target>
        </trans-unit>
        <trans-unit id="4a48474aee4eff0e22ec4ef2225a32608664a25e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsCallable()</source>
          <target state="translated">Codeception\Module::assertIsCallable()</target>
        </trans-unit>
        <trans-unit id="1e2061c10bad632ecf23d7c007593bc135e4a39c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsEmpty()</source>
          <target state="translated">Codeception\Module::assertIsEmpty()</target>
        </trans-unit>
        <trans-unit id="721291d9aae103b7872842f29df4eb21e2d67e6f" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsFloat()</source>
          <target state="translated">Codeception\Module::assertIsFloat()</target>
        </trans-unit>
        <trans-unit id="f16247c0fc98021db9b1752baaf06b85d8ee3cd3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsInt()</source>
          <target state="translated">Codeception\Module::assertIsInt()</target>
        </trans-unit>
        <trans-unit id="ee2529752810425ed1c03cdd5f80f1d9dfd18200" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotArray()</source>
          <target state="translated">Codeception\Module::assertIsNotArray()</target>
        </trans-unit>
        <trans-unit id="68285fff9be998e4faa23d1a27abf7299dceef3a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotBool()</source>
          <target state="translated">Codeception\Module::assertIsNotBool()</target>
        </trans-unit>
        <trans-unit id="c0a6c7c99cc1f5d0ae560326cb4cac1d34aa6c38" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotCallable()</source>
          <target state="translated">Codeception\Module::assertIsNotCallable()</target>
        </trans-unit>
        <trans-unit id="d6576091d67a0615d10a799688938ef126b68feb" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotFloat()</source>
          <target state="translated">Codeception\Module::assertIsNotFloat()</target>
        </trans-unit>
        <trans-unit id="e305fa3156896f36ea65ded53c0749285977332a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotInt()</source>
          <target state="translated">Codeception\Module::assertIsNotInt()</target>
        </trans-unit>
        <trans-unit id="5190cd9f8d2ee36e4c465767bf2da8184bbb3ba6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotNumeric()</source>
          <target state="translated">Codeception\Module::assertIsNotNumeric()</target>
        </trans-unit>
        <trans-unit id="7c3251acdec41ac5912392ffaaad292ba17d37b5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotObject()</source>
          <target state="translated">Codeception\Module::assertIsNotObject()</target>
        </trans-unit>
        <trans-unit id="9a24c973358af21cad1db728e837a43312c2602c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotResource()</source>
          <target state="translated">Codeception\Module::assertIsNotResource()</target>
        </trans-unit>
        <trans-unit id="17436978ad3c3e99092c36aa4c2b76543d7264e1" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotScalar()</source>
          <target state="translated">Codeception\Module::assertIsNotScalar()</target>
        </trans-unit>
        <trans-unit id="4aeada660391aca6b3c72429a923cd195d227773" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNotString()</source>
          <target state="translated">Codeception\Module::assertIsNotString()</target>
        </trans-unit>
        <trans-unit id="a545670c39157e6d030b34f531cec4f373f58af5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsNumeric()</source>
          <target state="translated">Codeception\Module::assertIsNumeric()</target>
        </trans-unit>
        <trans-unit id="c85683af8cafacbb326ab4d4a9113d108a66e940" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsObject()</source>
          <target state="translated">Codeception\Module::assertIsObject()</target>
        </trans-unit>
        <trans-unit id="a10f099b0e811661187fed2baf0150b89d1e751c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsResource()</source>
          <target state="translated">Codeception\Module::assertIsResource()</target>
        </trans-unit>
        <trans-unit id="a1c9d262bf1705fc55c9f7b662a59afd8bc1b5a5" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsScalar()</source>
          <target state="translated">Codeception\Module::assertIsScalar()</target>
        </trans-unit>
        <trans-unit id="38dc77b54b16ed0be61de80d4a108d018d4cde31" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertIsString()</source>
          <target state="translated">Codeception\Module::assertIsString()</target>
        </trans-unit>
        <trans-unit id="07a231e08ca310ec4473941b207858271ff4787e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertLessOrEquals()</source>
          <target state="translated">Codeception\Module::assertLessOrEquals()</target>
        </trans-unit>
        <trans-unit id="3255fd31a8808f9e0755cec0ea19af1711e592c0" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertLessThan()</source>
          <target state="translated">Codeception\Module::assertLessThan()</target>
        </trans-unit>
        <trans-unit id="79fd8197592d1b3d4ff9a40a4b9f6e98cb74bb51" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertLessThanOrEqual()</source>
          <target state="translated">Codeception\Module::assertLessThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="a465a4552bb803949aeafd2c607c7adbc2ec59d2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNot()</source>
          <target state="translated">Codeception\Module::assertNot()</target>
        </trans-unit>
        <trans-unit id="5e0d2162827ce1434a0dca05f7519beebdcb4617" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotContains()</source>
          <target state="translated">Codeception\Module::assertNotContains()</target>
        </trans-unit>
        <trans-unit id="4022e42dc5341fa770bc0713a3d36f60f21f196b" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotEmpty()</source>
          <target state="translated">Codeception\Module::assertNotEmpty()</target>
        </trans-unit>
        <trans-unit id="054e70a6046028d6b5d9992483af742b59f516a4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotEquals()</source>
          <target state="translated">Codeception\Module::assertNotEquals()</target>
        </trans-unit>
        <trans-unit id="61750b7fa1bdfdf749a3adf4a1374a105f103d58" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotFalse()</source>
          <target state="translated">Codeception\Module::assertNotFalse()</target>
        </trans-unit>
        <trans-unit id="745da408c8c90d282874cbd0e97039cf7604b048" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotInstanceOf()</source>
          <target state="translated">Codeception\Module::assertNotInstanceOf()</target>
        </trans-unit>
        <trans-unit id="1f288fdf48dd506bf5a44b3ccaf1613a9db99909" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotNull()</source>
          <target state="translated">Codeception\Module::assertNotNull()</target>
        </trans-unit>
        <trans-unit id="686d371e8f3db9cdfca274637e5d4b755de19f9c" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotRegExp()</source>
          <target state="translated">Codeception\Module::assertNotRegExp()</target>
        </trans-unit>
        <trans-unit id="6d704ce2d49f451e19e9056341518f96bca24630" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotSame()</source>
          <target state="translated">Codeception\Module::assertNotSame()</target>
        </trans-unit>
        <trans-unit id="aaf11376a263e3c9afb586b05ca63e75e5626721" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNotTrue()</source>
          <target state="translated">Codeception\Module::assertNotTrue()</target>
        </trans-unit>
        <trans-unit id="d070a6a6aef4a598e1ec47e999323f574926317e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertNull()</source>
          <target state="translated">Codeception\Module::assertNull()</target>
        </trans-unit>
        <trans-unit id="de6927254e499414b14f59727d7a85e26b8b84cb" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertRegExp()</source>
          <target state="translated">Codeception\Module::assertRegExp()</target>
        </trans-unit>
        <trans-unit id="bf003df0ab4d606774fc6d472e10a78082e3f535" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertSame()</source>
          <target state="translated">Codeception\Module::assertSame()</target>
        </trans-unit>
        <trans-unit id="3bb88ecb76c547ffb255efab8eeb83ac1a7f4aa6" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringContainsString()</source>
          <target state="translated">Codeception\Module::assertStringContainsString()</target>
        </trans-unit>
        <trans-unit id="d990feaad2c131f87e27b198ea1d3f0460c4cc38" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringContainsStringIgnoringCase()</source>
          <target state="translated">Codeception\Module::assertStringContainsStringIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="4ed26c0ac2d4405a89347935b5812f6048270345" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringNotContainsString()</source>
          <target state="translated">Codeception\Module::assertStringNotContainsString()</target>
        </trans-unit>
        <trans-unit id="8aa70400eed9c9b428b14e6ecacddf89d0e572d4" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringNotContainsStringIgnoringCase()</source>
          <target state="translated">Codeception\Module::assertStringNotContainsStringIgnoringCase()</target>
        </trans-unit>
        <trans-unit id="fe17ff2bafdace40584bf00d5d329519ccc8eb71" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringStartsNotWith()</source>
          <target state="translated">Codeception\Module::assertStringStartsNotWith()</target>
        </trans-unit>
        <trans-unit id="d8002649ac62ffcf3f8c7b84c3fd1c66cb5d5fea" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertStringStartsWith()</source>
          <target state="translated">Codeception\Module::assertStringStartsWith()</target>
        </trans-unit>
        <trans-unit id="1f7eac65dd94415c423393b4c23caafd30582d8e" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertThat()</source>
          <target state="translated">Codeception\Module::assertThat()</target>
        </trans-unit>
        <trans-unit id="569c48ee59f16da730ebc2c3b79ead3512e971d1" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertThatItsNot()</source>
          <target state="translated">Codeception\Module::assertThatItsNot()</target>
        </trans-unit>
        <trans-unit id="02499c9ae467b723103e481f36bbc665f7080fb3" translate="yes" xml:space="preserve">
          <source>Codeception\Module::assertTrue()</source>
          <target state="translated">Codeception\Module::assertTrue()</target>
        </trans-unit>
        <trans-unit id="bee1ad28211bc0a4ae0582d4ec385f7bc122b649" translate="yes" xml:space="preserve">
          <source>Codeception\Module::debug()</source>
          <target state="translated">Codeception\Module::debug()</target>
        </trans-unit>
        <trans-unit id="484ae6263fbe8bc45f2a8d303b8499edb946a415" translate="yes" xml:space="preserve">
          <source>Codeception\Module::debugSection()</source>
          <target state="translated">Codeception\Module::debugSection()</target>
        </trans-unit>
        <trans-unit id="f0253976472188d23146c8a4cef83eaa507d3800" translate="yes" xml:space="preserve">
          <source>Codeception\Module::fail()</source>
          <target state="translated">Codeception\Module::fail()</target>
        </trans-unit>
        <trans-unit id="7fa7eacc1e3d770df5866f865e1612671972b0d2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::getModule()</source>
          <target state="translated">Codeception\Module::getModule()</target>
        </trans-unit>
        <trans-unit id="6310e82f8b521adaf503483a174f7336e4fb99e9" translate="yes" xml:space="preserve">
          <source>Codeception\Module::getModules()</source>
          <target state="translated">Codeception\Module::getModules()</target>
        </trans-unit>
        <trans-unit id="352e3cd2c342c2f169e3dda005cf95e5ae5b0dd2" translate="yes" xml:space="preserve">
          <source>Codeception\Module::hasModule()</source>
          <target state="translated">Codeception\Module::hasModule()</target>
        </trans-unit>
        <trans-unit id="99bf8f47c58274d1e10b12fc3d7766cb6eeae0b7" translate="yes" xml:space="preserve">
          <source>Codeception\Module::onReconfigure()</source>
          <target state="translated">Codeception\Module::onReconfigure()</target>
        </trans-unit>
        <trans-unit id="88dedbfe711036d4be849ce5414e7584da5f3493" translate="yes" xml:space="preserve">
          <source>Codeception\Module::scalarizeArray()</source>
          <target state="translated">Codeception\Module::scalarizeArray()</target>
        </trans-unit>
        <trans-unit id="edced15e66a23309090540a1183fd8829dc2f273" translate="yes" xml:space="preserve">
          <source>Codeception\Module::shortenMessage()</source>
          <target state="translated">Codeception\Module::shortenMessage()</target>
        </trans-unit>
        <trans-unit id="fe2f6748a6a6e5870ecbdba517972c76aead6c1a" translate="yes" xml:space="preserve">
          <source>Codeception\Module::validateConfig()</source>
          <target state="translated">Codeception\Module::validateConfig()</target>
        </trans-unit>
        <trans-unit id="a180faaa1fc9239d5598fb939628826c3e5645a2" translate="yes" xml:space="preserve">
          <source>Codeception\Stub</source>
          <target state="translated">Codeception\Stub</target>
        </trans-unit>
        <trans-unit id="47ded78e903e89b7848265063eddf29c7112478f" translate="yes" xml:space="preserve">
          <source>Codeception\Util\Autoload</source>
          <target state="translated">Codeception\Util\Autoload</target>
        </trans-unit>
        <trans-unit id="376900abb7d8334f2cf654c8a877cd7c2394e615" translate="yes" xml:space="preserve">
          <source>Codeception\Util\Fixtures</source>
          <target state="translated">Codeception\Util\Fixtures</target>
        </trans-unit>
        <trans-unit id="98b71b8c8f808132835b7efede7f18afe9360dee" translate="yes" xml:space="preserve">
          <source>Codeception\Util\HttpCode</source>
          <target state="translated">Codeception\Util\HttpCode</target>
        </trans-unit>
        <trans-unit id="9f22cb6df1110ee33075c89af7517e5975b901a8" translate="yes" xml:space="preserve">
          <source>Codeception\Util\JsonType</source>
          <target state="translated">Codeception\Util\JsonType</target>
        </trans-unit>
        <trans-unit id="a9d7ea8731854391ba82ec0abb15240e92f0c7d7" translate="yes" xml:space="preserve">
          <source>Codeception\Util\Locator</source>
          <target state="translated">Codeception\Util\Locator</target>
        </trans-unit>
        <trans-unit id="9e479253681d96e67195d2a2c9fe52ced553b411" translate="yes" xml:space="preserve">
          <source>Codeception\Util\XmlBuilder</source>
          <target state="translated">Codeception\Util\XmlBuilder</target>
        </trans-unit>
        <trans-unit id="429f36d10467b590d92dd9b03b357fb2d28adbb8" translate="yes" xml:space="preserve">
          <source>Codecoverage</source>
          <target state="translated">Codecoverage</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="9f866f831c9c27821bcb42f1ff77b89f57d650af" translate="yes" xml:space="preserve">
          <source>Comments are permitted.</source>
          <target state="translated">의견이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="816c49cbf40ff6eb6217c346400395c79a577552" translate="yes" xml:space="preserve">
          <source>Common Cases</source>
          <target state="translated">일반적인 사례</target>
        </trans-unit>
        <trans-unit id="b95941540368fc3ddf9d04f04eae1eb9ef6dbb39" translate="yes" xml:space="preserve">
          <source>Common PhpBrowser drawbacks:</source>
          <target state="translated">일반적인 PhpBrowser 단점 :</target>
        </trans-unit>
        <trans-unit id="8df0c7e39b173ce69712a027986d8f623b181305" translate="yes" xml:space="preserve">
          <source>Comparison expressions can be used as well:</source>
          <target state="translated">비교 표현식도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76d7615a4a30dbeb28753a05c709d2ebafefe5ac" translate="yes" xml:space="preserve">
          <source>CompletionFallback</source>
          <target state="translated">CompletionFallback</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="b536777ff175ae7f0dadd5ccfd9e78c00761a19e" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="translated">Conclusions</target>
        </trans-unit>
        <trans-unit id="68ca26f5f4c76142841b4eb8fb517b39b3228cb4" translate="yes" xml:space="preserve">
          <source>Conditional Assertions</source>
          <target state="translated">조건부 어설 션</target>
        </trans-unit>
        <trans-unit id="381bd65e19c4067d8e59ffc72af8c60974b3fe74" translate="yes" xml:space="preserve">
          <source>Conditional assertions are disabled in bootstrap setup. To enable them you should add corresponding step decorators to suite config:</source>
          <target state="translated">부트 스트랩 설정에서 조건부 어설 션이 비활성화됩니다. 이를 활성화하려면 스위트 구성에 해당 단계 데코레이터를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="8851142da56fd885ce668a165b33fee7003e858d" translate="yes" xml:space="preserve">
          <source>Config</source>
          <target state="translated">Config</target>
        </trans-unit>
        <trans-unit id="36508979f55adcbbeccd8f3ca132d0c78c9a85d1" translate="yes" xml:space="preserve">
          <source>Config Templates (dist)</source>
          <target state="translated">구성 템플릿 (dist)</target>
        </trans-unit>
        <trans-unit id="68e3cdcfa3b7d6a502b583e0da2a319066eb7765" translate="yes" xml:space="preserve">
          <source>Config templates can also be used for suite configuration, by creating a &lt;code&gt;suitename.suite.dist.yml&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;suitename.suite.dist.yml&lt;/code&gt; 파일 을 작성하여 구성 템플리트를 스위트 구성에 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9956dbc5f0b9ff86c3a360f211b1be77b4dac6f2" translate="yes" xml:space="preserve">
          <source>ConfigValidate</source>
          <target state="translated">ConfigValidate</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="acdba8395423767de730ee1b75436df3a0ebc87e" translate="yes" xml:space="preserve">
          <source>Configuration file</source>
          <target state="translated">구성 파일</target>
        </trans-unit>
        <trans-unit id="8a7c7ce7dcfc2558a50b095cf34aef8a9832a06f" translate="yes" xml:space="preserve">
          <source>Configuration file &lt;code&gt;codeception.yml&lt;/code&gt; is generated by &lt;code&gt;codecept bootstrap&lt;/code&gt; command. It has preconfigured settings you can change.</source>
          <target state="translated">구성 파일 &lt;code&gt;codeception.yml&lt;/code&gt; 은 &lt;code&gt;codecept bootstrap&lt;/code&gt; 명령으로 생성됩니다 . 변경할 수있는 사전 구성 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdefa1db91e27b4347ff0ce8c95b24f3dd5961a2" translate="yes" xml:space="preserve">
          <source>Configuration loading order:</source>
          <target state="translated">구성 로딩 순서 :</target>
        </trans-unit>
        <trans-unit id="0e629a52900878f13f6ef166a751073b4433d43e" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;os&lt;/code&gt; and &lt;code&gt;os_version&lt;/code&gt; under &lt;code&gt;capabilities&lt;/code&gt; to define the operating System</source>
          <target state="translated">구성 &lt;code&gt;os&lt;/code&gt; 및 &lt;code&gt;os_version&lt;/code&gt; 아래 &lt;code&gt;capabilities&lt;/code&gt; 운영 체제를 정의</target>
        </trans-unit>
        <trans-unit id="da93b50ebed31dd769ddb0bda26071aaab8a9ebf" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;platform&lt;/code&gt; under &lt;code&gt;capabilities&lt;/code&gt; to define the &lt;a href=&quot;https://docs.saucelabs.com/reference/platforms-configurator/#/&quot;&gt;Operating System&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.saucelabs.com/reference/platforms-configurator/#/&quot;&gt;운영 체제&lt;/a&gt; 를 정의하는 &lt;code&gt;capabilities&lt;/code&gt; 아래 &lt;code&gt;platform&lt;/code&gt; 구성</target>
        </trans-unit>
        <trans-unit id="e6f6eb355b35b154967d526b12448e7e9477a1e7" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;platform&lt;/code&gt; under &lt;code&gt;capabilities&lt;/code&gt; to define the &lt;a href=&quot;https://testingbot.com/support/getting-started/browsers.html&quot;&gt;Operating System&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://testingbot.com/support/getting-started/browsers.html&quot;&gt;운영 체제&lt;/a&gt; 를 정의하는 &lt;code&gt;capabilities&lt;/code&gt; 아래 &lt;code&gt;platform&lt;/code&gt; 구성</target>
        </trans-unit>
        <trans-unit id="e72afaae3f936ee526b5fee9b80d10b30b6c96c8" translate="yes" xml:space="preserve">
          <source>Configure modules in &lt;code&gt;api.suite.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;api.suite.yml&lt;/code&gt; 에서 모듈을 구성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffd024645740bfce46ea0bc31b68fc5491bed0e5" translate="yes" xml:space="preserve">
          <source>Configure this module (in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;) by setting &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;browser&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 및 &lt;code&gt;browser&lt;/code&gt; 를 설정 하여이 모듈 ( &lt;code&gt;acceptance.suite.yml&lt;/code&gt; )을 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="54c2dc9fab2d4b66aa6f460c95b948689939b4ba" translate="yes" xml:space="preserve">
          <source>Configure this module (in &lt;code&gt;acceptance.suite.yml&lt;/code&gt;) by setting url and &lt;code&gt;phantomjs&lt;/code&gt; as browser:</source>
          <target state="translated">url 및 &lt;code&gt;phantomjs&lt;/code&gt; 를 브라우저로 설정 하여이 모듈 ( &lt;code&gt;acceptance.suite.yml&lt;/code&gt; 에서 )을 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="121104ee318908d34df6de4ed0e2a4f3f5c18325" translate="yes" xml:space="preserve">
          <source>Configure this module to load factory definitions from a directory. You should also specify a module with an ORM as a dependency.</source>
          <target state="translated">디렉토리에서 팩토리 정의를로드하도록이 모듈을 구성하십시오. ORM이있는 모듈을 종속성으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c432ffef16dea7936641aa6fb3b0d593399d5a5a" translate="yes" xml:space="preserve">
          <source>Configure this module to use ChromeDriver port:</source>
          <target state="translated">ChromeDriver 포트를 사용하도록이 모듈을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="f67c99564e70deaad5c5ee80485cf44f032c2103" translate="yes" xml:space="preserve">
          <source>Configure this module:</source>
          <target state="translated">이 모듈을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="ea545314fb43c1b8119da42d0d310c4444fd19e9" translate="yes" xml:space="preserve">
          <source>Configuring Extension</source>
          <target state="translated">확장 구성</target>
        </trans-unit>
        <trans-unit id="1e6b4f9a091ea30a5e57a2cda4b28e51833ccd62" translate="yes" xml:space="preserve">
          <source>Conflicts</source>
          <target state="translated">Conflicts</target>
        </trans-unit>
        <trans-unit id="a18035c390f36d3976fb187f95049d137ba3dbf0" translate="yes" xml:space="preserve">
          <source>Conflicts with SOAP module</source>
          <target state="translated">SOAP 모듈과의 충돌</target>
        </trans-unit>
        <trans-unit id="1476c64d7d8e8b4d08d4512678bcb8db10290a01" translate="yes" xml:space="preserve">
          <source>Connection is done by MongoDb driver, which is stored in Codeception\Lib\Driver namespace. Check out the driver if you get problems loading dumps and cleaning databases.</source>
          <target state="translated">연결은 MongoDb 드라이버에 의해 수행되며, 이는 Codeception \ Lib \ Driver 네임 스페이스에 저장됩니다. 덤프로드 및 데이터베이스 정리에 문제가 있으면 드라이버를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="51ed708cfed4cd3e50c70ee38ebe02fa7c5f5779" translate="yes" xml:space="preserve">
          <source>Connection is done by database Drivers, which are stored in the &lt;code&gt;Codeception\Lib\Driver&lt;/code&gt; namespace. &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Driver&quot;&gt;Check out the drivers&lt;/a&gt; if you run into problems loading dumps and cleaning databases.</source>
          <target state="translated">연결은 &lt;code&gt;Codeception\Lib\Driver&lt;/code&gt; 네임 스페이스에 저장된 데이터베이스 드라이버에 의해 수행됩니다 . 덤프로드 및 데이터베이스 정리 문제가 발생하면 &lt;a href=&quot;https://github.com/Codeception/Codeception/tree/2.4/src/Codeception/Lib/Driver&quot;&gt;드라이버를 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9f79f330297317a1a8a46b87ab999155bc28911" translate="yes" xml:space="preserve">
          <source>Connection uses php build in FTP client for FTP, connection to SFTP uses &lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;phpseclib&lt;/a&gt; pulled in using composer.</source>
          <target state="translated">연결은 FTP를 위해 FTP 클라이언트에서 PHP 빌드를 사용하고 SFTP에 연결은 &lt;a href=&quot;http://phpseclib.sourceforge.net/&quot;&gt;composer&lt;/a&gt; 를 사용하여 가져온 phpseclib 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ea15a1ea020177f42666f0d8f7f761a20c2a260a" translate="yes" xml:space="preserve">
          <source>Connects to &lt;a href=&quot;https://www.memcached.org/&quot;&gt;memcached&lt;/a&gt; using either &lt;em&gt;Memcache&lt;/em&gt; or &lt;em&gt;Memcached&lt;/em&gt; extension.</source>
          <target state="translated">&lt;em&gt;Memcache&lt;/em&gt; 또는 &lt;em&gt;Memcached&lt;/em&gt; 확장을 사용하여 &lt;a href=&quot;https://www.memcached.org/&quot;&gt;memcached에&lt;/a&gt; 연결합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f3341d3710b74c1bace9f7d9d287f157faea4f4" translate="yes" xml:space="preserve">
          <source>Console</source>
          <target state="translated">Console</target>
        </trans-unit>
        <trans-unit id="c2e23d2b8df6b45e92e40d925129e7de77f8c5fe" translate="yes" xml:space="preserve">
          <source>Console Commands</source>
          <target state="translated">콘솔 명령</target>
        </trans-unit>
        <trans-unit id="d35d6d879a1d77d472482b9c549acf096d9c9629" translate="yes" xml:space="preserve">
          <source>Contact: codecept@davert.mail.ua</source>
          <target state="translated">연락처 : codecept@davert.mail.ua</target>
        </trans-unit>
        <trans-unit id="c6ddaa7ff4f557a57861cc7034396eb3a5f2b4be" translate="yes" xml:space="preserve">
          <source>Contact: codeception@codeception.com</source>
          <target state="translated">연락처 : codeception@codeception.com</target>
        </trans-unit>
        <trans-unit id="f5522f7334a6273d42667d08123cc36481fd1df9" translate="yes" xml:space="preserve">
          <source>Contact: davert@codeception.com</source>
          <target state="translated">연락처 : davert@codeception.com</target>
        </trans-unit>
        <trans-unit id="b6ae81628398a1894646f9a4381d32a8984b5290" translate="yes" xml:space="preserve">
          <source>Contact: janhenkgerritsen@gmail.com</source>
          <target state="translated">문의 : janhenkgerritsen@gmail.com</target>
        </trans-unit>
        <trans-unit id="9c40f619b0ea7d3cea3f2bb74694603042fc0f66" translate="yes" xml:space="preserve">
          <source>Contact: serghei@phalcon.io</source>
          <target state="translated">연락처 : serghei@phalcon.io</target>
        </trans-unit>
        <trans-unit id="a7843b3a55673ded12e71bcc2a0dc2b701d31e75" translate="yes" xml:space="preserve">
          <source>Contact: serghei@phalconphp.com</source>
          <target state="translated">연락처 : serghei@phalconphp.com</target>
        </trans-unit>
        <trans-unit id="b9c48b47178267f0068fe730af580060ee4f4ec2" translate="yes" xml:space="preserve">
          <source>Contact: team@phalcon.io</source>
          <target state="translated">연락처 : team@phalcon.io</target>
        </trans-unit>
        <trans-unit id="0c56cbd28b0d4d554e7c89a63845fbdfb078b516" translate="yes" xml:space="preserve">
          <source>Context stream options are &lt;a href=&quot;https://php.net/manual/en/context.php&quot;&gt;well documented at php.net&lt;/a&gt;</source>
          <target state="translated">컨텍스트 스트림 옵션은 &lt;a href=&quot;https://php.net/manual/en/context.php&quot;&gt;php.net에 잘 정리되어 있습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1939fa910166207914f5b12ec7a1860d9ab4ebf4" translate="yes" xml:space="preserve">
          <source>Contexts can be attached to tags as well. This may be useful if you want to redefine steps for some scenarios. Let&amp;rsquo;s say we want to bypass login steps for some scenarios loading already defined session. In this case we can create &lt;code&gt;Step\FastLogin&lt;/code&gt; class with redefined step &amp;ldquo;I am logged in as&amp;rdquo;.</source>
          <target state="translated">컨텍스트도 태그에 첨부 할 수 있습니다. 일부 시나리오의 단계를 재정의하려는 경우 유용 할 수 있습니다. 이미 정의 된 세션을로드하는 일부 시나리오의 경우 로그인 단계를 무시하고 싶다고 가정 해 봅시다. 이 경우 재정의 된&amp;ldquo;I &lt;code&gt;Step\FastLogin&lt;/code&gt; as as&amp;rdquo; 단계로 Step \ FastLogin 클래스를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f86be04d8b019db1ba0dedfab735308133d872b2" translate="yes" xml:space="preserve">
          <source>Contexts can be autoloaded as well:</source>
          <target state="translated">컨텍스트도 자동로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">지속적인 통합</target>
        </trans-unit>
        <trans-unit id="f4c6edf32eb6245e35e2bd1cca98b2362da4577f" translate="yes" xml:space="preserve">
          <source>Cookies, URLs, Title, etc</source>
          <target state="translated">쿠키, URL, 제목 등</target>
        </trans-unit>
        <trans-unit id="31dc3ef31b22a681c3c9bc9f948e7dd088e133e3" translate="yes" xml:space="preserve">
          <source>Copies directory with all contents</source>
          <target state="translated">모든 내용으로 디렉토리를 복사</target>
        </trans-unit>
        <trans-unit id="9a7b1d0aa25e66e12c9280d003d0da13abacae31" translate="yes" xml:space="preserve">
          <source>Corresponding features and tests can be attached to the same group. And what is more interesting, you can make tests to depend on feature scenarios. Let&amp;rsquo;s say we have &lt;code&gt;login.feature&lt;/code&gt; file with &amp;ldquo;Log regular user&amp;rdquo; scenario in it. In this case you can specify that every test which requires login to pass to depend on &amp;ldquo;Log regular user&amp;rdquo; scenario:</source>
          <target state="translated">해당 기능 및 테스트를 동일한 그룹에 첨부 할 수 있습니다. 더 흥미로운 점은 기능 시나리오에 따라 테스트를 수행 할 수 있다는 것입니다. &amp;ldquo;일반 사용자 로그&amp;rdquo;시나리오 가있는 &lt;code&gt;login.feature&lt;/code&gt; 파일 이 있다고 가정 해 봅시다 . 이 경우 로그인이 필요한 모든 테스트가 &quot;로그 일반 사용자&quot;시나리오에 의존하도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc4044f52492da2f2149160c71e621eba5d7ed71" translate="yes" xml:space="preserve">
          <source>Corresponding framework modules provide similar methods for ORM access:</source>
          <target state="translated">해당 프레임 워크 모듈은 ORM 액세스에 유사한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="43485f5fd30b21c1b4f6f4254c942589bef12896" translate="yes" xml:space="preserve">
          <source>Count number of records in a collection</source>
          <target state="translated">컬렉션의 레코드 수</target>
        </trans-unit>
        <trans-unit id="372ee1966f374160eb5164ee7cbbeb1f9f73dafd" translate="yes" xml:space="preserve">
          <source>Coverage data can be collected manually for both local and remote tests. Remote tests may be executed on different nodes, or locally but running through web server. It may look hard to collect code coverage for Selenium tests or PhpBrowser tests. But Codeception supports remote codecoverage as well as local.</source>
          <target state="translated">적용 범위 데이터는 로컬 및 원격 테스트 모두에 대해 수동으로 수집 할 수 있습니다. 원격 테스트는 다른 노드에서 또는 로컬에서 웹 서버를 통해 실행될 수 있습니다. Selenium 테스트 또는 PhpBrowser 테스트에 대한 코드 적용 범위를 수집하기 어려울 수 있습니다. 그러나 Codeception은 로컬뿐만 아니라 원격 코드 커버리지도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f5939e0f98bb1cff612ab452051fef20ed96c846" translate="yes" xml:space="preserve">
          <source>Create a directory on the server</source>
          <target state="translated">서버에서 디렉토리를 만듭니다</target>
        </trans-unit>
        <trans-unit id="7e40fbdf6867c2933ccd6207e3312cdc2dbd482d" translate="yes" xml:space="preserve">
          <source>Create a helper class inside a directory</source>
          <target state="translated">디렉토리 안에 헬퍼 클래스 만들기</target>
        </trans-unit>
        <trans-unit id="4e0ca7d62b2544325488dc631fc6e02ea4ed1038" translate="yes" xml:space="preserve">
          <source>Create a snapshot class:</source>
          <target state="translated">스냅 샷 클래스를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c4086c145dd87730fa8dd8432e2e956e0f75064f" translate="yes" xml:space="preserve">
          <source>Create a test using &lt;code&gt;generate:test&lt;/code&gt; command with a suite and test names as parameters:</source>
          <target state="translated">스위트 및 테스트 이름을 매개 변수로 하여 &lt;code&gt;generate:test&lt;/code&gt; 명령을 사용하여 테스트를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="d370305d4aaef67f46a56c429295df690e971d34" translate="yes" xml:space="preserve">
          <source>Create an Actor class and generate actions for it. Requires a suite config as array in 3rd parameter.</source>
          <target state="translated">Actor 클래스를 생성하고 이에 대한 액션을 생성하십시오. 3 번째 매개 변수의 배열로 스위트 구성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1eb25742c6a93846402c07762a065380282606a8" translate="yes" xml:space="preserve">
          <source>Create an account at &lt;a href=&quot;http://SauceLabs.com&quot;&gt;SauceLabs.com&lt;/a&gt; to get your username and access key</source>
          <target state="translated">&lt;a href=&quot;http://SauceLabs.com&quot;&gt;SauceLabs.com&lt;/a&gt; 에서 계정을 만들어 사용자 이름과 액세스 키를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="108925ce162a735aba8f5792c0da2cf2a81d3de3" translate="yes" xml:space="preserve">
          <source>Create an account at &lt;a href=&quot;https://testingbot.com/&quot;&gt;TestingBot&lt;/a&gt; to get your key and secret</source>
          <target state="translated">&lt;a href=&quot;https://testingbot.com/&quot;&gt;TestingBot&lt;/a&gt; 에서 계정을 만들어 키와 비밀을 얻으십시오</target>
        </trans-unit>
        <trans-unit id="b98688d88502b538d6c6082302764400a3f687af" translate="yes" xml:space="preserve">
          <source>Create an account at &lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; to get your username and access key</source>
          <target state="translated">&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; 에서 계정을 만들어 사용자 이름과 액세스 키를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b28f3a2fe450f9895d70c506e56344dbd3b5b59a" translate="yes" xml:space="preserve">
          <source>Create an empty directory and add a placeholder file into it</source>
          <target state="translated">빈 디렉토리를 작성하고 플레이스 홀더 파일을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="fe535a10c481ad1eaa4b96df104f5a98994a6d65" translate="yes" xml:space="preserve">
          <source>Create new test suite. Requires suite name and actor name</source>
          <target state="translated">새로운 테스트 스위트를 작성하십시오. 스위트 이름과 배우 이름이 필요합니다</target>
        </trans-unit>
        <trans-unit id="4ae43eea251547226098a7ed326039e7ecf6fa6b" translate="yes" xml:space="preserve">
          <source>Created records will be deleted at the end of a test. The DataFactory module only works with ORM, so it requires one of the ORM modules to be enabled:</source>
          <target state="translated">생성 된 레코드는 테스트가 끝나면 삭제됩니다. DataFactory 모듈은 ORM에서만 작동하므로 ORM 모듈 중 하나를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="9277b8f2466dad0d7966030eb7e991a235ce1524" translate="yes" xml:space="preserve">
          <source>Creates $num instances of class through &lt;code&gt;Stub::make&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stub::make&lt;/code&gt; 통해 클래스의 $ num 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f1f59a34611bff079aea9b4e195168d7e11c1545" translate="yes" xml:space="preserve">
          <source>Creates and loads fixtures from a config. Signature is the same as for &lt;code&gt;fixtures()&lt;/code&gt; method of &lt;code&gt;yii\test\FixtureTrait&lt;/code&gt;</source>
          <target state="translated">구성에서 조명기를 만들고로드합니다. 서명은 &lt;code&gt;yii\test\FixtureTrait&lt;/code&gt; 의 &lt;code&gt;fixtures()&lt;/code&gt; 메소드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="93fbddb77205b54652353453ecf7dd1f9d45e0d4" translate="yes" xml:space="preserve">
          <source>Creates and loads fixtures from a config. The signature is the same as for the &lt;code&gt;fixtures()&lt;/code&gt; method of &lt;code&gt;yii\test\FixtureTrait&lt;/code&gt;</source>
          <target state="translated">구성에서 조명기를 만들고로드합니다. 서명은 &lt;code&gt;yii\test\FixtureTrait&lt;/code&gt; 의 &lt;code&gt;fixtures()&lt;/code&gt; 메서드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="cf1f54fba93d285b9d129adff9b9313eeed016a4" translate="yes" xml:space="preserve">
          <source>Creates default config, tests directory and sample suites for current project. Use this command to start building a test suite.</source>
          <target state="translated">현재 프로젝트의 기본 구성, 테스트 디렉토리 및 샘플 스위트를 작성합니다. 테스트 스위트 빌드를 시작하려면이 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e686301b45474ddea1bddb9873efffe9e15d9084" translate="yes" xml:space="preserve">
          <source>Creates empty GroupObject - extension which handles all group events.</source>
          <target state="translated">모든 그룹 이벤트를 처리하는 빈 GroupObject-확장을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="60a9228a611f3aa2d9e79ce18a17c6f35831f614" translate="yes" xml:space="preserve">
          <source>Creates empty Helper class.</source>
          <target state="translated">빈 도우미 클래스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7740922939d19e5c2992e2eaf7b56908d7d1e000" translate="yes" xml:space="preserve">
          <source>Creates instance of JsonType Pass an array or &lt;code&gt;\Codeception\Util\JsonArray&lt;/code&gt; with data. If non-associative array is passed - the very first element of it will be used for matching.</source>
          <target state="translated">JsonType의 인스턴스를 만듭니다 . 데이터와 함께 배열 또는 &lt;code&gt;\Codeception\Util\JsonArray&lt;/code&gt; 를 전달합니다. 비 연관 배열이 전달되면 첫 번째 요소가 일치하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7ba5f08776429a7cd051b99acecefb1bb629fc21" translate="yes" xml:space="preserve">
          <source>Creates or modifies keys</source>
          <target state="translated">키 생성 또는 수정</target>
        </trans-unit>
        <trans-unit id="68546f5fc9a047a36cb0db8687ad8abfcbdf3f1d" translate="yes" xml:space="preserve">
          <source>Creates the CSRF Cookie.</source>
          <target state="translated">CSRF 쿠키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f27d572ee2a895b74b2e22c732ae0c6e8b3bd2dc" translate="yes" xml:space="preserve">
          <source>Creating a Test</source>
          <target state="translated">테스트 작성</target>
        </trans-unit>
        <trans-unit id="b84e533003baaf7d5dc65b509906e6d21cb5d582" translate="yes" xml:space="preserve">
          <source>Criteria can be used not only to filter data, but also to change the order of results:</source>
          <target state="translated">기준을 사용하여 데이터를 필터링 할뿐만 아니라 결과 순서를 변경할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="24bd32927ecfde8d98d351a91e328a9bfb8798c3" translate="yes" xml:space="preserve">
          <source>Cucumber, Behat, and sure, &lt;strong&gt;Codeception&lt;/strong&gt; can execute this scenario step by step as an automated test. Every step in this scenario requires a code which defines it.</source>
          <target state="translated">오이, Behat, 그리고 확실히, &lt;strong&gt;Codeception&lt;/strong&gt; 은이 시나리오를 자동화 된 테스트로 단계별로 실행할 수 있습니다. 이 시나리오의 모든 단계에는이를 정의하는 코드가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a9f69b86dc6566c172b6e2789e0bc1ec3f042c01" translate="yes" xml:space="preserve">
          <source>Current values</source>
          <target state="translated">현재 가치</target>
        </trans-unit>
        <trans-unit id="15c858f27a0987cfaad2e3b9616553d99221ebe4" translate="yes" xml:space="preserve">
          <source>Currently not supported in this module, overwrite inherited method</source>
          <target state="translated">현재이 모듈에서 지원되지 않으며 상속 된 메소드를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="900954226b2b959fefe97b2ed97dd896295bfa81" translate="yes" xml:space="preserve">
          <source>Custom Browser Sessions</source>
          <target state="translated">맞춤 브라우저 세션</target>
        </trans-unit>
        <trans-unit id="c48e024e0cec2f563e6f2442f0eebafd432290c2" translate="yes" xml:space="preserve">
          <source>Custom Commands</source>
          <target state="translated">사용자 명령</target>
        </trans-unit>
        <trans-unit id="ad94b13496fdf0b96efabeb86e685fdd89eada01" translate="yes" xml:space="preserve">
          <source>Custom Reporters</source>
          <target state="translated">맞춤형 기자</target>
        </trans-unit>
        <trans-unit id="ed10003d13d26ae6ddd68ac75d42a71fcf19a709" translate="yes" xml:space="preserve">
          <source>Custom cookie domain</source>
          <target state="translated">맞춤 쿠키 도메인</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="1feebc1150e8ca05b258d1d4de476fed8c4ec6dd" translate="yes" xml:space="preserve">
          <source>DataFactory</source>
          <target state="translated">DataFactory</target>
        </trans-unit>
        <trans-unit id="910ec1d3efb9bd6a7f769743e94c4aeef8392b2d" translate="yes" xml:space="preserve">
          <source>DataFactory allows you to easily generate and create test data using &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;&lt;strong&gt;FactoryMuffin&lt;/strong&gt;&lt;/a&gt;. DataFactory uses an ORM of your application to define, save and cleanup data. Thus, should be used with ORM or Framework modules.</source>
          <target state="translated">DataFactory를 통해 &lt;a href=&quot;https://github.com/thephpleague/factory-muffin&quot;&gt;&lt;strong&gt;FactoryMuffin을&lt;/strong&gt;&lt;/a&gt; 사용하여 테스트 데이터를 쉽게 생성하고 작성할 수 있습니다 . DataFactory는 애플리케이션의 ORM을 사용하여 데이터를 정의, 저장 및 정리합니다. 따라서 ORM 또는 프레임 워크 모듈과 함께 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="78cfa9a44f01da47dd471fe2a8fa47ab2b5c130e" translate="yes" xml:space="preserve">
          <source>DataFactory provides a powerful solution for managing data in integration/functional/acceptance tests. Read the &lt;a href=&quot;modules/datafactory&quot;&gt;full reference&lt;/a&gt; to learn how to set this module up.</source>
          <target state="translated">DataFactory는 통합 / 기능 / 수락 테스트에서 데이터를 관리하기위한 강력한 솔루션을 제공합니다. 이 모듈을 설정하는 방법을 배우 려면 &lt;a href=&quot;modules/datafactory&quot;&gt;전체 참조&lt;/a&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="06c4778c5382cf479756d94ad11aa6458012cc3b" translate="yes" xml:space="preserve">
          <source>DataFactory::have</source>
          <target state="translated">DataFactory::have</target>
        </trans-unit>
        <trans-unit id="d432c4d8b03a381308c5d435d5ff74f6ebf43c1d" translate="yes" xml:space="preserve">
          <source>DataFactory::haveMultiple</source>
          <target state="translated">DataFactory::haveMultiple</target>
        </trans-unit>
        <trans-unit id="79ef39c26e79fd9a92f9cffb733d7e849d816b78" translate="yes" xml:space="preserve">
          <source>DataFactory::make</source>
          <target state="translated">DataFactory::make</target>
        </trans-unit>
        <trans-unit id="70ed1381970ff64a3be817cd74df1bf6cbb115db" translate="yes" xml:space="preserve">
          <source>DataFactory::onReconfigure</source>
          <target state="translated">DataFactory::onReconfigure</target>
        </trans-unit>
        <trans-unit id="8f4009ae1c2b2fd49f18e7ecf7914f98b4c8b11e" translate="yes" xml:space="preserve">
          <source>DataMapper</source>
          <target state="translated">DataMapper</target>
        </trans-unit>
        <trans-unit id="6bcebb87b7139cb807a479004a13b96707eaaf33" translate="yes" xml:space="preserve">
          <source>DataProvider Annotations</source>
          <target state="translated">데이터 제공자 주석</target>
        </trans-unit>
        <trans-unit id="e90a8b3ddb5243a1491d5c389f121393de322b7e" translate="yes" xml:space="preserve">
          <source>Db</source>
          <target state="translated">Db</target>
        </trans-unit>
        <trans-unit id="122b8ba74328389925709d1ce4b76d435eed7c8c" translate="yes" xml:space="preserve">
          <source>Db module by itself can load SQL dump without external tools by using current database connection. This approach is system-independent, however, it is slower than using a populator and may have parsing issues (see below).</source>
          <target state="translated">DB 모듈 자체는 현재 데이터베이스 연결을 사용하여 외부 도구없이 SQL 덤프를로드 할 수 있습니다. 이 방법은 시스템에 독립적이지만, populator를 사용하는 것보다 느리고 구문 분석 문제가있을 수 있습니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="f9f85417821b13d04d01bf566b6ae5b3264feafe" translate="yes" xml:space="preserve">
          <source>Db module can cleanup database between tests by loading a database dump. This can be done by parsing SQL file and executing its commands using current connection</source>
          <target state="translated">DB 모듈은 데이터베이스 덤프를로드하여 테스트간에 데이터베이스를 정리할 수 있습니다. 이것은 SQL 파일을 구문 분석하고 현재 연결을 사용하여 명령을 실행하여 수행 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="0749b44de2821d5a23fc663286ca42d1e63325a1" translate="yes" xml:space="preserve">
          <source>Db::amConnectedToDatabase</source>
          <target state="translated">Db::amConnectedToDatabase</target>
        </trans-unit>
        <trans-unit id="d9ac91e7602d96ba2be7d3875b6811ea76392719" translate="yes" xml:space="preserve">
          <source>Db::dontSeeInDatabase</source>
          <target state="translated">Db::dontSeeInDatabase</target>
        </trans-unit>
        <trans-unit id="fafa5e1b682463ce8a765ae8324cab5961d21273" translate="yes" xml:space="preserve">
          <source>Db::grabColumnFromDatabase</source>
          <target state="translated">Db::grabColumnFromDatabase</target>
        </trans-unit>
        <trans-unit id="0dd9a1f983e09eecfe7ea5055fc82bc032910e9a" translate="yes" xml:space="preserve">
          <source>Db::grabFromDatabase</source>
          <target state="translated">Db::grabFromDatabase</target>
        </trans-unit>
        <trans-unit id="d9eb0398324fd1a10eb4b3429fc9863c5c402425" translate="yes" xml:space="preserve">
          <source>Db::grabNumRecords</source>
          <target state="translated">Db::grabNumRecords</target>
        </trans-unit>
        <trans-unit id="2f807505e608148980d641a3c9e804d5ebce92af" translate="yes" xml:space="preserve">
          <source>Db::haveInDatabase</source>
          <target state="translated">Db::haveInDatabase</target>
        </trans-unit>
        <trans-unit id="f54750dd68b872e9e7c6e2160667c8753d35fb1f" translate="yes" xml:space="preserve">
          <source>Db::performInDatabase</source>
          <target state="translated">Db::performInDatabase</target>
        </trans-unit>
        <trans-unit id="a3265561fe3b297b6bdbacf82247f35e36c85983" translate="yes" xml:space="preserve">
          <source>Db::seeInDatabase</source>
          <target state="translated">Db::seeInDatabase</target>
        </trans-unit>
        <trans-unit id="3303d415ae8aa24f43939dc835ee96449c9f3eef" translate="yes" xml:space="preserve">
          <source>Db::seeNumRecords</source>
          <target state="translated">Db::seeNumRecords</target>
        </trans-unit>
        <trans-unit id="d91013c071439f7c2887c20ea94dbe23b7fedb77" translate="yes" xml:space="preserve">
          <source>Db::updateInDatabase</source>
          <target state="translated">Db::updateInDatabase</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="d8590f048a466538ddb44f1c4b5e668cb6d0051e" translate="yes" xml:space="preserve">
          <source>Declare mocks inside &lt;code&gt;Codeception\Test\Unit&lt;/code&gt; class. If you want to use mocks outside it, check the reference for &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception/Stub&lt;/a&gt; library.</source>
          <target state="translated">&lt;code&gt;Codeception\Test\Unit&lt;/code&gt; 클래스 안에 모의를 선언하십시오 . 외부에서 모의 ​​객체를 사용하려면 &lt;a href=&quot;https://github.com/Codeception/Stub&quot;&gt;Codeception / Stub&lt;/a&gt; 라이브러리에 대한 참조를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b39383dccf6b371586bfe229ee193e465fe2ac65" translate="yes" xml:space="preserve">
          <source>Declares an exchange</source>
          <target state="translated">교환 선언</target>
        </trans-unit>
        <trans-unit id="1e839bd732e67c2602adeb9671452446a385f3f8" translate="yes" xml:space="preserve">
          <source>Declares queue, creates if needed</source>
          <target state="translated">대기열을 선언하고 필요한 경우 생성</target>
        </trans-unit>
        <trans-unit id="b0e92ad92d5e985420b637eaa2be4b51b1bf423b" translate="yes" xml:space="preserve">
          <source>Define all required services in &lt;code&gt;docker-compose.yml&lt;/code&gt; file. Make sure to follow Docker philisophy: 1 service = 1 container. So each process should be defined as its own service. Those services can use official Docker images pulled from DockerHub. Directories with code and tests should be mounted using &lt;code&gt;volume&lt;/code&gt; directive. And exposed ports should be explicitly set using &lt;code&gt;ports&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; 파일 에서 필요한 모든 서비스를 정의하십시오 . Docker 철학을 따르십시오 : 1 서비스 = 1 컨테이너. 따라서 각 프로세스는 자체 서비스로 정의해야합니다. 이러한 서비스는 DockerHub에서 가져온 공식 Docker 이미지를 사용할 수 있습니다. 코드와 테스트가있는 디렉토리는 &lt;code&gt;volume&lt;/code&gt; 지시문을 사용하여 마운트해야합니다 . 그리고 &lt;code&gt;ports&lt;/code&gt; 지시문을 사용하여 노출 된 포트를 명시 적으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="810b8ecd1154c2c99674c6de5b4e2e69ac873b78" translate="yes" xml:space="preserve">
          <source>Delete all the keys in the Redis database</source>
          <target state="translated">Redis 데이터베이스에서 모든 키를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="e0b5513fedd4f6dce8912b24850f11fd5720ed65" translate="yes" xml:space="preserve">
          <source>Deletes a HTTP header (that was originally added by &lt;a href=&quot;#haveHttpHeader&quot;&gt;haveHttpHeader()&lt;/a&gt;), so that subsequent requests will not send it anymore.</source>
          <target state="translated">HTTP 헤더 (원래 &lt;a href=&quot;#haveHttpHeader&quot;&gt;haveHttpHeader ()&lt;/a&gt; 에 의해 추가됨)를 삭제하여 후속 요청이 더 이상 전송하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="7bb4803e9204cdd53a75cf6490c90042597aac8b" translate="yes" xml:space="preserve">
          <source>Deletes a file</source>
          <target state="translated">파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="55a5f83da2a1e3a69573b44fc5f4632f52eca00e" translate="yes" xml:space="preserve">
          <source>Deletes a file on the remote FTP/SFTP system</source>
          <target state="translated">원격 FTP / SFTP 시스템에서 파일을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="3f6ee9114388f19c5a6c78c5ff9c8c061bfa490c" translate="yes" xml:space="preserve">
          <source>Deletes directory with all subdirectories</source>
          <target state="translated">모든 서브 디렉토리가있는 디렉토리를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="9dcd97356a25c8e1067a770985631e321e26e436" translate="yes" xml:space="preserve">
          <source>Deletes directory with all subdirectories on the remote FTP/SFTP server</source>
          <target state="translated">원격 FTP / SFTP 서버에서 모든 서브 디렉토리가있는 디렉토리를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="4f75e5e5c31c6e1785009a971d5b25cec1c28213" translate="yes" xml:space="preserve">
          <source>Deletes session snapshot.</source>
          <target state="translated">세션 스냅 샷을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="547e3de06644513d80114375620b7d24e5a26445" translate="yes" xml:space="preserve">
          <source>Deletes the header with the passed name. Subsequent requests will not have the deleted header in its request.</source>
          <target state="translated">전달 된 이름을 가진 헤더를 삭제합니다. 후속 요청은 요청에서 삭제 된 헤더를 갖지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1e569d3dc20053246991b6c3a2176523351fc3f" translate="yes" xml:space="preserve">
          <source>Demo Project</source>
          <target state="translated">데모 프로젝트</target>
        </trans-unit>
        <trans-unit id="81de341883203e60cd389c4205d95ae106dc8538" translate="yes" xml:space="preserve">
          <source>Demo project</source>
          <target state="translated">데모 프로젝트</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">의존성 주입</target>
        </trans-unit>
        <trans-unit id="0d4ccf38d91f45ed072525983c80e22251dde19a" translate="yes" xml:space="preserve">
          <source>Depending on the environment, you may choose which tests are to be executed. For example, you might need some tests to be executed in Firefox only, and some tests in Chrome only.</source>
          <target state="translated">환경에 따라 실행할 테스트를 선택할 수 있습니다. 예를 들어 Firefox에서만 일부 테스트를 실행하고 Chrome에서만 일부 테스트를 수행해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="edd2ede31710fd11016161c41296afeb8392488a" translate="yes" xml:space="preserve">
          <source>Despite the wide popularity of &lt;em&gt;TDD&lt;/em&gt; (Test Driven Development), some PHP developers never write automated tests for their applications mostly because they think it&amp;rsquo;s hard, slow or boring. The Codeception framework was developed to actually make testing fun. It allows writing unit, functional, integration, and acceptance tests in a single, coherent style.</source>
          <target state="translated">&lt;em&gt;TDD&lt;/em&gt; (Test Driven Development)의 인기에도 불구하고 일부 PHP 개발자는 자신의 애플리케이션에 대해 자동화 된 테스트를 작성하지 않습니다. Codeception 프레임 워크는 실제로 테스트를 즐겁게하기 위해 개발되었습니다. 단일 일관성있는 스타일로 작문, 기능, 통합 및 승인 테스트를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c9c0f8057acd5b9bf966a0d07a24ae8b098a5d0" translate="yes" xml:space="preserve">
          <source>Development bash</source>
          <target state="translated">개발 배쉬</target>
        </trans-unit>
        <trans-unit id="ed7e83515201d94c23422c690274bd9a1fcc8fc6" translate="yes" xml:space="preserve">
          <source>Disable Laravel exception handling.</source>
          <target state="translated">라 라벨 예외 처리를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="83708a6f34a03c1c445f8cefe4b2dad64c385e05" translate="yes" xml:space="preserve">
          <source>Disable events for the next requests. This method does not disable model events. To disable model events you have to use the disableModelEvents() method.</source>
          <target state="translated">다음 요청에 대한 이벤트를 비활성화하십시오. 이 방법은 모델 이벤트를 비활성화하지 않습니다. 모델 이벤트를 비활성화하려면 disableModelEvents () 메서드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="65661b5952d1a4cee287cade326ec6d1fa54aba7" translate="yes" xml:space="preserve">
          <source>Disable middleware for the next requests.</source>
          <target state="translated">다음 요청에 대해 미들웨어를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="e7342a2d956572e35f5abe057dc21ab63ccf2c86" translate="yes" xml:space="preserve">
          <source>Disable model events for the next requests.</source>
          <target state="translated">다음 요청에 대한 모델 이벤트를 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="261dd6b2c73a7a75fe3c42d1ee2c0956dff8a99c" translate="yes" xml:space="preserve">
          <source>Dismisses the active JavaScript popup, as created by &lt;code&gt;window.alert&lt;/code&gt;, &lt;code&gt;window.confirm&lt;/code&gt;, or &lt;code&gt;window.prompt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;window.alert&lt;/code&gt; , &lt;code&gt;window.confirm&lt;/code&gt; 또는 &lt;code&gt;window.prompt&lt;/code&gt; 로 작성된 활성 JavaScript 팝업을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="9e852923f98c03c1a1cd47ececc70b778bc497dd" translate="yes" xml:space="preserve">
          <source>Do you often use the &lt;code&gt;TAB&lt;/code&gt; key to navigate through the web page? How do your site respond to this navigation? You could try to match elements by their tab position using &lt;code&gt;tabIndex&lt;/code&gt; method of &lt;code&gt;Locator&lt;/code&gt; class.</source>
          <target state="translated">자주 &lt;code&gt;TAB&lt;/code&gt; 키를 사용하여 웹 페이지를 탐색합니까? 사이트가이 탐색에 어떻게 반응합니까? &lt;code&gt;Locator&lt;/code&gt; 클래스의 &lt;code&gt;tabIndex&lt;/code&gt; 메소드를 사용하여 탭 위치별로 요소를 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="22d930b4a29ca13b52f55ccb00b91f28b4cdd56c" translate="yes" xml:space="preserve">
          <source>Docker can ship Selenium Server with all its dependencies and browsers inside a single container. Running tests inside Docker is as easy as pulling &lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium&quot;&gt;official selenium image&lt;/a&gt; and starting a container with Chrome:</source>
          <target state="translated">Docker는 단일 컨테이너 내에 Selenium 서버와 모든 종속성 및 브라우저를 제공 할 수 있습니다. Docker 내에서 테스트를 실행하는 것은 &lt;a href=&quot;https://github.com/SeleniumHQ/docker-selenium&quot;&gt;공식 셀레늄 이미지를 가져&lt;/a&gt; 오고 Chrome으로 컨테이너를 시작하는 것만 큼 ​​쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="bbb5c860e164069cae36958050e2d6d653be820c" translate="yes" xml:space="preserve">
          <source>Docker works really well for isolating testing environments. By the time of writing this chapter, we didn&amp;rsquo;t have an awesome tool like it. This chapter demonstrates how to manage parallel execution manually. As you will see we spend too much effort trying to isolate tests which Docker does for free. Today we &lt;strong&gt;recommend using Docker&lt;/strong&gt; for parallel testing.</source>
          <target state="translated">Docker는 테스트 환경을 격리하는 데 정말 효과적입니다. 이 장을 쓸 당시에는 그와 같은 멋진 도구가 없었습니다. 이 장에서는 병렬 실행을 수동으로 관리하는 방법을 보여줍니다. 보시다시피 Docker가 무료로 수행하는 테스트를 격리하는 데 너무 많은 노력을 기울입니다. 오늘날 병렬 테스트에는 &lt;strong&gt;Docker&lt;/strong&gt; 를 &lt;strong&gt;사용하는 것이 좋습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8d9fcc0d495340e68011f713506733ebd638b9ac" translate="yes" xml:space="preserve">
          <source>Dockerized Codeception Internal Tests</source>
          <target state="translated">Dockerized Codeception 내부 테스트</target>
        </trans-unit>
        <trans-unit id="e7e37a966346830af850bd3cc16b31c3304ee21c" translate="yes" xml:space="preserve">
          <source>Doctrine</source>
          <target state="translated">Doctrine</target>
        </trans-unit>
        <trans-unit id="53c101f8d290c329f198ebf575d3bca9b17ffad3" translate="yes" xml:space="preserve">
          <source>Doctrine is also a popular ORM, unlike some others it implements the DataMapper pattern and is not bound to any framework. The &lt;a href=&quot;modules/doctrine2&quot;&gt;Doctrine2&lt;/a&gt; module requires an &lt;code&gt;EntityManager&lt;/code&gt; instance to work with. It can be obtained from a Symfony framework or Zend Framework (configured with Doctrine):</source>
          <target state="translated">Doctrine은 다른 ORM과 달리 DataMapper 패턴을 구현하며 어떤 프레임 워크에도 구속되지 않는 인기있는 ORM입니다. &lt;a href=&quot;modules/doctrine2&quot;&gt;Doctrine2의&lt;/a&gt; 모듈은 필요 &lt;code&gt;EntityManager&lt;/code&gt; 의의 와 작업에 대한 인스턴스를. Symfony 프레임 워크 또는 Zend 프레임 워크 (doctrine으로 구성)에서 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d7bdc43a09d9596e3fb9b3c8d15c419d73d6792" translate="yes" xml:space="preserve">
          <source>Doctrine-style:</source>
          <target state="translated">Doctrine-style:</target>
        </trans-unit>
        <trans-unit id="b3498ed81cef31394dafbc44c16279c6e02a0267" translate="yes" xml:space="preserve">
          <source>Doctrine2</source>
          <target state="translated">Doctrine2</target>
        </trans-unit>
        <trans-unit id="50f603e31eec22e29a30a56dd62a9638b6372fca" translate="yes" xml:space="preserve">
          <source>Doctrine2 also provides methods to create and check data:</source>
          <target state="translated">Doctrine2는 또한 데이터를 생성하고 확인하는 방법을 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="d6f336ba7cea77e793a7a3fa9eb72944069fe1a4" translate="yes" xml:space="preserve">
          <source>Doctrine2::dontSeeInRepository</source>
          <target state="translated">Doctrine2::dontSeeInRepository</target>
        </trans-unit>
        <trans-unit id="165f87c32e697fa68785a1fe586da966b1cdc438" translate="yes" xml:space="preserve">
          <source>Doctrine2::flushToDatabase</source>
          <target state="translated">Doctrine2::flushToDatabase</target>
        </trans-unit>
        <trans-unit id="0be4951be83fcd4a91712bb00f770c2e6b6bd18a" translate="yes" xml:space="preserve">
          <source>Doctrine2::grabEntitiesFromRepository</source>
          <target state="translated">Doctrine2::grabEntitiesFromRepository</target>
        </trans-unit>
        <trans-unit id="65460b9b41603a11336bc32a9bbba56f24ec1b0d" translate="yes" xml:space="preserve">
          <source>Doctrine2::grabEntityFromRepository</source>
          <target state="translated">Doctrine2::grabEntityFromRepository</target>
        </trans-unit>
        <trans-unit id="b93ce189269ee18361a65ef2ad40eea2921ca8ee" translate="yes" xml:space="preserve">
          <source>Doctrine2::grabFromRepository</source>
          <target state="translated">Doctrine2::grabFromRepository</target>
        </trans-unit>
        <trans-unit id="72405d68de3c0f7675de024f090d02638b685267" translate="yes" xml:space="preserve">
          <source>Doctrine2::haveFakeRepository</source>
          <target state="translated">Doctrine2::haveFakeRepository</target>
        </trans-unit>
        <trans-unit id="4da57f71703091d081ee0d06094e70c352ccec7c" translate="yes" xml:space="preserve">
          <source>Doctrine2::haveInRepository</source>
          <target state="translated">Doctrine2::haveInRepository</target>
        </trans-unit>
        <trans-unit id="2d1f65a452ddd1680c5ec5536d00dab07efe93e9" translate="yes" xml:space="preserve">
          <source>Doctrine2::onReconfigure</source>
          <target state="translated">Doctrine2::onReconfigure</target>
        </trans-unit>
        <trans-unit id="5bbdb5b695bd4632dabab9c6aa3795a1b3112b41" translate="yes" xml:space="preserve">
          <source>Doctrine2::persistEntity</source>
          <target state="translated">Doctrine2::persistEntity</target>
        </trans-unit>
        <trans-unit id="b8314bb0d901a93e59cb45ed1c6a512938c5f5af" translate="yes" xml:space="preserve">
          <source>Doctrine2::seeInRepository</source>
          <target state="translated">Doctrine2::seeInRepository</target>
        </trans-unit>
        <trans-unit id="e033d745d74e100c3dcbe3134110e35641b721b0" translate="yes" xml:space="preserve">
          <source>Does not load the response into the module so you can&amp;rsquo;t interact with response page (click, fill forms). To load arbitrary page for interaction, use &lt;code&gt;_loadPage&lt;/code&gt; method.</source>
          <target state="translated">응답을 모듈에로드하지 않으므로 응답 페이지와 상호 작용할 수 없습니다 (클릭, 양식 채우기). 상호 작용을 위해 임의의 페이지를로드하려면 &lt;code&gt;_loadPage&lt;/code&gt; 메소드를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6b0db7f8582e2d015202310caf5de62714cec2da" translate="yes" xml:space="preserve">
          <source>Does the locator look like an ID selector (e.g. &amp;ldquo;#foo&amp;rdquo;)? If so, try to find a form matching that ID.</source>
          <target state="translated">로케이터가 ID 선택기처럼 보입니까 (예 :&amp;ldquo;#foo&amp;rdquo;)? 그렇다면 해당 ID와 일치하는 양식을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="e38aa94fd498f63b8695d0686143898ea875b366" translate="yes" xml:space="preserve">
          <source>Domain Assertions</source>
          <target state="translated">도메인 어설 션</target>
        </trans-unit>
        <trans-unit id="781a647cde73a8e4418542fd249c83b2d91c9810" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget to create the folder and ensure its writable.</source>
          <target state="translated">폴더를 작성하고 쓰기 가능한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dd6440fe01e5279d3f257c0f14655485889a5be9" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;http://docs.seleniumhq.org/download/&quot;&gt;Selenium Standalone Server&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://docs.seleniumhq.org/download/&quot;&gt;Selenium 독립형 서버&lt;/a&gt; 다운로드</target>
        </trans-unit>
        <trans-unit id="a1e529cc716bd78e774a6b10f0f1af197d2b2b3c" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;http://phantomjs.org/download.html&quot;&gt;PhantomJS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://phantomjs.org/download.html&quot;&gt;PhantomJS&lt;/a&gt; 다운로드</target>
        </trans-unit>
        <trans-unit id="b5c7d8b545ea7fdba609234ce2324aa0c0d6dbb0" translate="yes" xml:space="preserve">
          <source>Driver</source>
          <target state="translated">Driver</target>
        </trans-unit>
        <trans-unit id="eb0a9bc25e3727cd99b5c71ee4b55064c8824616" translate="yes" xml:space="preserve">
          <source>DryRun</source>
          <target state="translated">DryRun</target>
        </trans-unit>
        <trans-unit id="d8d218c02974bb1de20e1d664e3a90526498d120" translate="yes" xml:space="preserve">
          <source>Dump</source>
          <target state="translated">Dump</target>
        </trans-unit>
        <trans-unit id="a4c8f10ce49d65caa826e60e633c69e5ac944fd7" translate="yes" xml:space="preserve">
          <source>Dynamic Configuration With Parameters</source>
          <target state="translated">매개 변수를 사용한 동적 구성</target>
        </trans-unit>
        <trans-unit id="85262026152f48ea20f5eaaa2a7bf0431d969388" translate="yes" xml:space="preserve">
          <source>Each failed assertion will be shown in the test results, but it won&amp;rsquo;t stop the test.</source>
          <target state="translated">실패한 어설 션이 테스트 결과에 표시되지만 테스트는 중지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8cbf191d21874f5c2e8ce84ca9214d1df1d1f5e6" translate="yes" xml:space="preserve">
          <source>Each feature mentioned above may help dramatically when using Codeception to automate the testing of large projects, although some features may require advanced knowledge of PHP. There is no &amp;ldquo;best practice&amp;rdquo; or &amp;ldquo;use cases&amp;rdquo; when we talk about groups, extensions, or other powerful features of Codeception. If you see you have a problem that can be solved using these extensions, then give them a try.</source>
          <target state="translated">위에서 언급 한 각 기능은 Codeception을 사용하여 대규모 프로젝트의 테스트를 자동화 할 때 크게 도움이 될 수 있지만 일부 기능은 PHP에 대한 고급 지식이 필요할 수 있습니다. 그룹, 확장 프로그램 또는 기타 강력한 Codeception 기능에 대해 이야기 할 때는 &quot;모범 사례&quot;또는 &quot;사용 사례&quot;가 없습니다. 이러한 확장을 사용하여 해결할 수있는 문제가있는 경우 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="f073bc5a3ac1522d7ae0eb17962b1cdb4ee5807d" translate="yes" xml:space="preserve">
          <source>Each feature of a product should be born from a talk between</source>
          <target state="translated">제품의 각 기능은</target>
        </trans-unit>
        <trans-unit id="3118ef9e0574f3109cc7aa0de0c73a0db28662c8" translate="yes" xml:space="preserve">
          <source>Each generated suite have its own configuration inside directory set by &lt;code&gt;paths: tests: &lt;/code&gt; configuration option in &lt;code&gt;codeception.yml&lt;/code&gt;. Each suite configuration is named like &lt;code&gt;suitename.suite.yml&lt;/code&gt;. It allows to enable and configure modules, and more.</source>
          <target state="translated">생성 된 각 제품군에는 &lt;code&gt;paths: tests: &lt;/code&gt; 설정된 디렉토리 내에 자체 구성이 있습니다 . tests : &lt;code&gt;codeception.yml&lt;/code&gt; 의 구성 옵션 . 각 스위트 구성의 이름은 &lt;code&gt;suitename.suite.yml&lt;/code&gt; 입니다. 모듈 등을 활성화하고 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c8eb8b1b1c3bfc06a61981a866490fd9e3373b5" translate="yes" xml:space="preserve">
          <source>Each module can handle events from the running test. A module can be executed before the test starts, or after the test is finished. This can be useful for bootstrap/cleanup actions. You can also define special behavior for when the test fails. This may help you in debugging the issue. For example, the PhpBrowser module saves the current webpage to the &lt;code&gt;tests/_output&lt;/code&gt; directory when a test fails.</source>
          <target state="translated">각 모듈은 실행중인 테스트의 이벤트를 처리 할 수 ​​있습니다. 테스트가 시작되기 전 또는 테스트가 완료된 후 모듈을 실행할 수 있습니다. 부트 스트랩 / 정리 작업에 유용 할 수 있습니다. 테스트 실패시 특별한 동작을 정의 할 수도 있습니다. 문제를 디버깅하는 데 도움이 될 수 있습니다. 예를 들어 PhpBrowser 모듈은 테스트가 실패하면 현재 웹 페이지를 &lt;code&gt;tests/_output&lt;/code&gt; 디렉토리에 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="54fb84d6bd1652326ab4250fe4a7df0c8a7aad0e" translate="yes" xml:space="preserve">
          <source>Each module can output internal values that may be useful during debug. For example, the PhpBrowser module prints the response code and current URL every time it moves to a new page. Thus, modules are not black boxes. They are trying to show you what is happening during the test. This makes debugging your tests less painful.</source>
          <target state="translated">각 모듈은 디버그 중에 유용 할 수있는 내부 값을 출력 할 수 있습니다. 예를 들어 PhpBrowser 모듈은 새 페이지로 이동할 때마다 응답 코드와 현재 URL을 인쇄합니다. 따라서 모듈은 블랙 박스가 아닙니다. 그들은 시험 중에 무슨 일이 일어나고 있는지 보여 주려고 노력하고 있습니다. 이것은 테스트 디버깅을 덜 고통스럽게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="17d980ca3f649e67a51d450447b2753f83f674dd" translate="yes" xml:space="preserve">
          <source>Each public method in robofile can be executed as a command from console. Let&amp;rsquo;s define commands for 3 steps and include autoload.</source>
          <target state="translated">robofile의 각 공개 메소드는 콘솔에서 명령으로 실행될 수 있습니다. 3 단계에 대한 명령을 정의하고 자동로드를 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="0e86e57e2d3c003b739f39e844f709847f7b126e" translate="yes" xml:space="preserve">
          <source>Each test of a Cest class can declare its own dependencies and receive them from method arguments:</source>
          <target state="translated">Cest 클래스의 각 테스트는 자체 종속성을 선언하고 메소드 인수에서받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="607b0289550edb8d974a5841cf1c1cc6c507e722" translate="yes" xml:space="preserve">
          <source>Effect is opposite to -&amp;gt;seeInDatabase</source>
          <target state="translated">효과는 반대입니다-&amp;gt; 데이터베이스 참조</target>
        </trans-unit>
        <trans-unit id="4cd054312db47bab5f9a0facb62600e0a1c43e5c" translate="yes" xml:space="preserve">
          <source>EloquentModel</source>
          <target state="translated">EloquentModel</target>
        </trans-unit>
        <trans-unit id="221abcc4caa47671a669e8586efbb4a6a2fb8916" translate="yes" xml:space="preserve">
          <source>Emulates a click on valid anchors. The URL referenced in the &lt;code&gt;href&lt;/code&gt; attribute will be opened. As a parameter, you can specify the link name or a valid CSS or XPath selector.</source>
          <target state="translated">유효한 앵커 클릭을 에뮬레이트합니다. &lt;code&gt;href&lt;/code&gt; 속성 에서 참조 된 URL 이 열립니다. 매개 변수로 링크 이름 또는 유효한 CSS 또는 XPath 선택기를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f12a33a5a2d2f6ae930a7d7dd00beaad77a6e0d" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; extension to start/stop ChromeDriver automatically &lt;em&gt;(optional)&lt;/em&gt;.</source>
          <target state="translated">ChromeDriver를 자동으로 시작 / 중지하려면 &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; 확장 프로그램을 사용 하도록 설정합니다 &lt;em&gt;(선택 사항)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="858cfdeefd81480b5c75452c27e1d879cf766dcd" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; extension to start/stop PhantomJS automatically &lt;em&gt;(optional)&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; 확장을 활성화 하여 PhantomJS를 자동으로 시작 / 중지합니다 &lt;em&gt;(선택 사항)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8af619763dfaca0ce16232e2608c83501f11950a" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; extension to start/stop Selenium automatically &lt;em&gt;(optional)&lt;/em&gt;.</source>
          <target state="translated">Selenium을 자동으로 시작 / 중지하려면 &lt;a href=&quot;https://codeception.com/extensions#RunProcess&quot;&gt;RunProcess&lt;/a&gt; 확장을 활성화하십시오 &lt;em&gt;(선택 사항)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8aef83b611fc7477c8fd3c51262a7def0bb7d55f" translate="yes" xml:space="preserve">
          <source>Enable Laravel exception handling.</source>
          <target state="translated">Laravel 예외 처리를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="6775b2cd12d482ae56aeec0a0bf6d83a8a88fed4" translate="yes" xml:space="preserve">
          <source>Enables automatic redirects to be followed by the client</source>
          <target state="translated">클라이언트가 자동 리디렉션을 수행 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="2ef15239a5dfc90d0f9cdecea3735293f58bfb70" translate="yes" xml:space="preserve">
          <source>Enabling Extension</source>
          <target state="translated">확장 활성화</target>
        </trans-unit>
        <trans-unit id="6b287440844cf272dd2579686a768e3380e393b5" translate="yes" xml:space="preserve">
          <source>Enabling Framework Modules</source>
          <target state="translated">프레임 워크 모듈 활성화</target>
        </trans-unit>
        <trans-unit id="d36d819f3b042bd2ebfb5286002f07abb919f07c" translate="yes" xml:space="preserve">
          <source>Enabling module with custom .env file</source>
          <target state="translated">사용자 정의 .env 파일로 모듈 활성화</target>
        </trans-unit>
        <trans-unit id="36c94a597f1e54ce4f5655d8002949370bed1b14" translate="yes" xml:space="preserve">
          <source>Enabling module:</source>
          <target state="translated">활성화 모듈 :</target>
        </trans-unit>
        <trans-unit id="577593d4187f89857ac95ffdd1dda0b97cbcaf0e" translate="yes" xml:space="preserve">
          <source>Enters a directory In local filesystem. Project root directory is used by default</source>
          <target state="translated">로컬 파일 시스템에 디렉토리를 입력합니다. 기본적으로 프로젝트 루트 디렉토리가 사용됩니다</target>
        </trans-unit>
        <trans-unit id="94ff2bd3f18778e9afc09e1d7d6458a2655fe911" translate="yes" xml:space="preserve">
          <source>Enters a directory on the ftp system - FTP root directory is used by default</source>
          <target state="translated">ftp 시스템에 디렉토리를 입력합니다-기본적으로 FTP 루트 디렉토리가 사용됩니다</target>
        </trans-unit>
        <trans-unit id="3cd861bb852588faf3d246a909a6230f22a6d006" translate="yes" xml:space="preserve">
          <source>Enters text into a native JavaScript prompt popup, as created by &lt;code&gt;window.prompt&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;window.prompt&lt;/code&gt; 로 작성된 고유 JavaScript 프롬프트 팝업에 텍스트를 입력합니다 .</target>
        </trans-unit>
        <trans-unit id="017b53c42e43b39e1f5aabf6f7280c2f777243a2" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">Environments</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
