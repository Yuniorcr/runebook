<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="f4bb9a18f09e2a84cc163ecae438e47b1c4edd13" translate="yes" xml:space="preserve">
          <source>Remove only files ignored by Git. This may be useful to rebuild everything from scratch, but keep manually created files.</source>
          <target state="translated">Git에서 무시한 파일 만 제거하십시오. 처음부터 모든 것을 다시 작성하는 데 유용하지만 수동으로 만든 파일은 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="db3de663ed677f594653d0d9e2ee65cde68df92e" translate="yes" xml:space="preserve">
          <source>Remove remote branches that don&amp;rsquo;t have a local counterpart. For example a remote branch &lt;code&gt;tmp&lt;/code&gt; will be removed if a local branch with the same name doesn&amp;rsquo;t exist any more. This also respects refspecs, e.g. &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; would make sure that remote &lt;code&gt;refs/tmp/foo&lt;/code&gt; will be removed if &lt;code&gt;refs/heads/foo&lt;/code&gt; doesn&amp;rsquo;t exist.</source>
          <target state="translated">로컬 대응자가없는 원격 지점을 제거하십시오. 예를 들어 같은 이름의 로컬 브랜치가 더 이상 존재하지 않으면 원격 브랜치 &lt;code&gt;tmp&lt;/code&gt; 가 제거됩니다. 또한 &lt;code&gt;git push --prune remote refs/heads/*:refs/tmp/*&lt;/code&gt; 는 참조 스펙을 존중 합니다. &lt;code&gt;refs/heads/foo&lt;/code&gt; 가 존재하지 않으면 원격 &lt;code&gt;refs/tmp/foo&lt;/code&gt; 가 제거되도록 합니다.</target>
        </trans-unit>
        <trans-unit id="2919c677f0cd57d3ef223926e7768e681a692562" translate="yes" xml:space="preserve">
          <source>Remove the file from the index even when the working directory still has such a file. (Implies --remove.)</source>
          <target state="translated">작업 디렉토리에 여전히 해당 파일이있는 경우에도 색인에서 파일을 제거하십시오. (암호-제거)</target>
        </trans-unit>
        <trans-unit id="164a03cc0aa02b0fdd552e7429c1ea851b7d7d46" translate="yes" xml:space="preserve">
          <source>Remove the given section from the configuration file.</source>
          <target state="translated">구성 파일에서 지정된 섹션을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="499242d7995d63aad1acd16a991a3d6fcb048be8" translate="yes" xml:space="preserve">
          <source>Remove the line matching the key from config file.</source>
          <target state="translated">구성 파일에서 키와 일치하는 줄을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="9012d0fb42a36221745fbb3295fa2024a72211df" translate="yes" xml:space="preserve">
          <source>Remove the notes for given objects (defaults to HEAD). When giving zero or one object from the command line, this is equivalent to specifying an empty note message to the &lt;code&gt;edit&lt;/code&gt; subcommand.</source>
          <target state="translated">주어진 객체에 대한 메모를 제거합니다 (기본값은 HEAD). 명령 행에서 0 개 또는 하나의 오브젝트를 제공 할 때 이것은 &lt;code&gt;edit&lt;/code&gt; 부속 명령에 빈 메모 메시지를 지정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b516eb38e36b7b4419cbc8b6cb246b5741dd75c3" translate="yes" xml:space="preserve">
          <source>Remove the original refs backed up by git-filter-branch: say &lt;code&gt;git
for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git
update-ref -d&lt;/code&gt;.</source>
          <target state="translated">git-filter-branch에 의해 백업 된 원래 참조를 제거하십시오. say &lt;code&gt;git for-each-ref --format=&quot;%(refname)&quot; refs/original/ | xargs -n 1 git update-ref -d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5271d5dabe5bf4126a68baa1d1f5cc6eedea4a6" translate="yes" xml:space="preserve">
          <source>Remove the remote named &amp;lt;name&amp;gt;. All remote-tracking branches and configuration settings for the remote are removed.</source>
          <target state="translated">이름이 &amp;lt;name&amp;gt; 인 원격을 제거하십시오. 원격에 대한 모든 원격 추적 분기 및 구성 설정이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="55f1c43ced88c466a9b48b12744508e7df191628" translate="yes" xml:space="preserve">
          <source>Remove the upstream information for &amp;lt;branchname&amp;gt;. If no branch is specified it defaults to the current branch.</source>
          <target state="translated">&amp;lt;branchname&amp;gt;에 대한 업스트림 정보를 제거하십시오. 분기가 지정되지 않은 경우 기본값은 현재 분기입니다.</target>
        </trans-unit>
        <trans-unit id="7dd660439147162be4964d5d4a2d3c419e5791f0" translate="yes" xml:space="preserve">
          <source>Remove unnecessary whitespace</source>
          <target state="translated">불필요한 공백 제거</target>
        </trans-unit>
        <trans-unit id="d76bb29e1084aa7b85896360764953783a4152de" translate="yes" xml:space="preserve">
          <source>Remove untracked files from the working tree</source>
          <target state="translated">작업 트리에서 추적되지 않은 파일 제거</target>
        </trans-unit>
        <trans-unit id="e317f2faafb831e4cbd09ebccd9fa3144e930ab8" translate="yes" xml:space="preserve">
          <source>Removed content is represented by lines beginning with &quot;-&quot;. You can prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot; (space).</source>
          <target state="translated">제거 된 내용은 &quot;-&quot;로 시작하는 줄로 표시됩니다. &quot;-&quot;를 &quot;&quot;(공백)으로 변환하여 제거가 준비되지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="078d2cf1e943764a2f97b429a98d1c54fe3fc4b4" translate="yes" xml:space="preserve">
          <source>Removes all &lt;code&gt;*.txt&lt;/code&gt; files from the index that are under the &lt;code&gt;Documentation&lt;/code&gt; directory and any of its subdirectories.</source>
          <target state="translated">&lt;code&gt;Documentation&lt;/code&gt; 디렉토리 및 해당 서브 디렉토리 아래에있는 색인에서 모든 &lt;code&gt;*.txt&lt;/code&gt; 파일을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="b7b4dacce459fd9e247be7781aa6ab7a83d66ed0" translate="yes" xml:space="preserve">
          <source>Removing files that have disappeared from the filesystem</source>
          <target state="translated">파일 시스템에서 사라진 파일 제거</target>
        </trans-unit>
        <trans-unit id="3225190bfc565c2a8dc8b2fcac1b38dcbf9dd0d7" translate="yes" xml:space="preserve">
          <source>Rename detection options for git-diff and git-diff-tree. The default is ('-M'); set it to ('-C') or ('-C', '-C') to also detect copies, or set it to () i.e. empty list if you don&amp;rsquo;t want to have renames detection.</source>
          <target state="translated">git-diff 및 git-diff-tree의 탐지 옵션 이름을 바꿉니다. 기본값은 ( '-M')입니다. 사본을 감지하려면 ( '-C') 또는 ( '-C', '-C')로 설정하거나 이름을 바꾸지 않으려면 빈 목록으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8ccf039fc07f889e68756c36ea6201967b32f105" translate="yes" xml:space="preserve">
          <source>Rename the given section to a new name.</source>
          <target state="translated">지정된 섹션의 이름을 새 이름으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="141bf3674e223333500e19c5eb60f38f2c848a7a" translate="yes" xml:space="preserve">
          <source>Rename the remote named &amp;lt;old&amp;gt; to &amp;lt;new&amp;gt;. All remote-tracking branches and configuration settings for the remote are updated.</source>
          <target state="translated">&amp;lt;old&amp;gt;라는 원격의 이름을 &amp;lt;new&amp;gt;로 바꿉니다. 원격에 대한 모든 원격 추적 분기 및 구성 설정이 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="3dc385accd1a9a34d691dc85a7cf993a198b2f01" translate="yes" xml:space="preserve">
          <source>Renamed and copied directories are not detected by Git and hence not tracked when committing to SVN. I do not plan on adding support for this as it&amp;rsquo;s quite difficult and time-consuming to get working for all the possible corner cases (Git doesn&amp;rsquo;t do it, either). Committing renamed and copied files is fully supported if they&amp;rsquo;re similar enough for Git to detect them.</source>
          <target state="translated">이름이 바뀌고 복사 된 디렉토리는 Git에 의해 감지되지 않으므로 SVN에 커밋 할 때 추적되지 않습니다. 가능한 모든 모퉁이 사건에 대해 일하는 것은 상당히 어렵고 시간이 많이 걸리기 때문에 지원을 추가 할 계획은 없습니다 (Git 도하 지 않습니다). 이름이 바뀌고 복사 된 파일을 커밋하는 것은 Git이 탐지 할 수있을 정도로 비슷하다면 완전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4a51a71032e050546d92c69d4de0167dd63ce59a" translate="yes" xml:space="preserve">
          <source>Renamed or copied entries have the following format:</source>
          <target state="translated">이름이 바뀌거나 복사 된 항목의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="226701a0627a0c80ce4e0de29a5f8995d1cc94ec" translate="yes" xml:space="preserve">
          <source>Renames an existing file or subdirectory to a different location within the branch. The existing file or directory must exist. If the destination exists it will be replaced by the source directory.</source>
          <target state="translated">기존 파일 또는 하위 디렉토리의 이름을 분기 내의 다른 위치로 바꿉니다. 기존 파일 또는 디렉토리가 존재해야합니다. 대상이 존재하면 소스 디렉토리로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="7f74fd002fd53242d75fe672215f240c564dd1ec" translate="yes" xml:space="preserve">
          <source>Reordering and editing commits usually creates untested intermediate steps. You may want to check that your history editing did not break anything by running a test, or at least recompiling at intermediate points in history by using the &quot;exec&quot; command (shortcut &quot;x&quot;). You may do so by creating a todo list like this one:</source>
          <target state="translated">커밋 순서를 변경하고 편집하면 일반적으로 테스트되지 않은 중간 단계가 생성됩니다. 테스트를 실행하거나 최소한 &quot;exec&quot;명령 (바로 가기 &quot;x&quot;)을 사용하여 히스토리의 중간 지점에서 다시 컴파일하여 히스토리 편집이 아무 것도 깨지지 않았는지 확인할 수 있습니다. 다음과 같이 할 일 목록을 만들어서 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e58cc3e9504477ac39c3fae4556406d9e87fe8d4" translate="yes" xml:space="preserve">
          <source>Reordering file diffs that make up a patch does not affect the ID. In particular, two patches produced by comparing the same two trees with two different settings for &quot;-O&amp;lt;orderfile&amp;gt;&quot; result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;</source>
          <target state="translated">패치를 구성하는 파일 차이를 재정렬해도 ID에는 영향을 미치지 않습니다. 특히, 동일한 두 트리를 &quot;-O &amp;lt;orderfile&amp;gt;&quot;에 대한 두 개의 다른 설정과 비교하여 생성 된 두 개의 패치는 동일한 패치 ID 서명을 생성하므로 계산 된 결과를 일부 메타 정보를 색인화하는 키로 사용할 수 있습니다. 두 나무 사이의 변화;</target>
        </trans-unit>
        <trans-unit id="5727ab28a85a139867f62da8126eb9354b33a57a" translate="yes" xml:space="preserve">
          <source>Reordering or selecting from a patch series</source>
          <target state="translated">패치 시리즈 재정렬 또는 선택</target>
        </trans-unit>
        <trans-unit id="25df8871189ca5637ebc8cd7aea9cae824ef4545" translate="yes" xml:space="preserve">
          <source>Repacking Historical Data</source>
          <target state="translated">과거 데이터 재 포장</target>
        </trans-unit>
        <trans-unit id="9421c86863fd32deff3fd89fb282f96023d8e85d" translate="yes" xml:space="preserve">
          <source>Repeat the last two steps until your working tree is clean.</source>
          <target state="translated">작업 트리가 깨끗해질 때까지 마지막 두 단계를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="834462c9f22bc02c77a9880295a7368517cb2349" translate="yes" xml:space="preserve">
          <source>Replace an existing tag with the given name (instead of failing)</source>
          <target state="translated">기존 태그를 지정된 이름으로 바꾸십시오 (실패 대신)</target>
        </trans-unit>
        <trans-unit id="7cf4729941401b21c05e226cfd4468a69f10bdc9" translate="yes" xml:space="preserve">
          <source>Replace each parent &lt;code&gt;P&lt;/code&gt; of &lt;code&gt;C'&lt;/code&gt; with its simplification &lt;code&gt;P'&lt;/code&gt;. In the process, drop parents that are ancestors of other parents or that are root commits TREESAME to an empty tree, and remove duplicates, but take care to never drop all parents that we are TREESAME to.</source>
          <target state="translated">&lt;code&gt;C'&lt;/code&gt; 의 각 부모 &lt;code&gt;P&lt;/code&gt; 를 단순화 &lt;code&gt;P'&lt;/code&gt; 로 바꿉니다 . 이 과정에서 다른 부모의 조상이거나 루트 인 루트 부모는 TREESAME를 빈 트리에 커밋하고 복제본을 제거하지만 TREESAME 인 부모를 모두 드롭하지 않도록주의하십시오.</target>
        </trans-unit>
        <trans-unit id="2f9605c49f9b2a3f616b81433e85ca64645d76b1" translate="yes" xml:space="preserve">
          <source>Replace the tip of the current branch by creating a new commit. The recorded tree is prepared as usual (including the effect of the &lt;code&gt;-i&lt;/code&gt; and &lt;code&gt;-o&lt;/code&gt; options and explicit pathspec), and the message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via options such as &lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;, etc. The new commit has the same parents and author as the current one (the &lt;code&gt;--reset-author&lt;/code&gt; option can countermand this).</source>
          <target state="translated">새 커밋을 만들어 현재 분기의 끝을 바꿉니다. 기록 된 트리는 평소와 같이 준비되며 ( &lt;code&gt;-i&lt;/code&gt; 및 &lt;code&gt;-o&lt;/code&gt; 옵션 및 명시 적 경로 스펙 의 영향 포함 ) 다른 메시지가 지정되지 않은 경우 원래 커밋의 메시지가 빈 메시지 대신 시작 지점으로 사용됩니다. &lt;code&gt;-m&lt;/code&gt; , &lt;code&gt;-F&lt;/code&gt; , &lt;code&gt;-c&lt;/code&gt; 등의 옵션을 통해 명령 행에서 새 커밋은 현재 커밋과 동일한 부모 및 작성자를 갖습니다 ( &lt;code&gt;--reset-author&lt;/code&gt; 옵션으로이를 방지 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="f3cb9be6e266f94b26ae77ef70ae8b6ef0aebb1e" translate="yes" xml:space="preserve">
          <source>Replaced with long name (git-receive-pack, git-upload-pack, or git-upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Git이 호출하려는 서비스의 긴 이름 (git-receive-pack, git-upload-pack 또는 git-upload-archive)으로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="bb8b07a94b19262ae05804fd3dbbad7507b398f9" translate="yes" xml:space="preserve">
          <source>Replaced with name (receive-pack, upload-pack, or upload-archive) of the service Git wants to invoke.</source>
          <target state="translated">Git이 호출하고자하는 서비스의 이름 (receive-pack, upload-pack 또는 upload-archive)으로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="daa118b2fa4fcb83d5d989f3e2085ec4ffc46e78" translate="yes" xml:space="preserve">
          <source>Replacement references will be used by default by all Git commands except those doing reachability traversal (prune, pack transfer and fsck).</source>
          <target state="translated">대체 가능 참조는 도달 가능성 순회 (프룬, 팩 전송 및 fsck)를 제외한 모든 Git 명령에서 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1c7de5212a432b2bb1d31f5a918c389962b1d1aa" translate="yes" xml:space="preserve">
          <source>Report all removed objects.</source>
          <target state="translated">제거 된 모든 개체를보고하십시오.</target>
        </trans-unit>
        <trans-unit id="7cf59cb5c9b7cd37a64d08b6f1df2d863445c6dc" translate="yes" xml:space="preserve">
          <source>Report bugs to the Git mailing list &amp;lt;&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;&amp;gt; where the development and maintenance is primarily done. You do not have to be subscribed to the list to send a message there. See the list archive at &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; for previous bug reports and other discussions.</source>
          <target state="translated">개발 및 유지 관리가 주로 수행 되는 Git 메일 링리스트 &amp;lt; &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; &amp;gt;에 버그를보고하십시오 . 메시지를 보내기 위해 목록에 가입하지 않아도됩니다. 이전 버그 보고서 및 기타 토론 은 &lt;a href=&quot;https://lore.kernel.org/git&quot;&gt;https://lore.kernel.org/git&lt;/a&gt; 의 목록 아카이브를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c34aa6a8d095f4c3d50ca22d6cbaa490bb7d9e6" translate="yes" xml:space="preserve">
          <source>Report in more detail:</source>
          <target state="translated">보다 자세하게보고하십시오 :</target>
        </trans-unit>
        <trans-unit id="00d1a1b2ba790dc8a5d0ef6f48b27324107dfa43" translate="yes" xml:space="preserve">
          <source>Report on the success or failure of the password. If the credential allowed the operation to complete successfully, then it can be marked with an &quot;approve&quot; action to tell &lt;code&gt;git
credential&lt;/code&gt; to reuse it in its next invocation. If the credential was rejected during the operation, use the &quot;reject&quot; action so that &lt;code&gt;git credential&lt;/code&gt; will ask for a new password in its next invocation. In either case, &lt;code&gt;git credential&lt;/code&gt; should be fed with the credential description obtained from step (2) (which also contain the ones provided in step (1)).</source>
          <target state="translated">암호의 성공 또는 실패에 대해보고하십시오. 자격 증명으로 작업을 성공적으로 완료 한 경우 &quot;승인&quot;작업으로 표시 하여 다음 호출에서 &lt;code&gt;git credential&lt;/code&gt; 을 다시 사용하도록 지시 할 수 있습니다. 조작 중에 신임 정보가 거부 된 경우 &quot;거부&quot;조치를 사용하여 &lt;code&gt;git credential&lt;/code&gt; 가 다음 호출에서 새 비밀번호를 요청하도록하십시오. 어느 경우 든, &lt;code&gt;git credential&lt;/code&gt; 은 단계 (2)에서 얻은 자격 증명 설명과 함께 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d2999561ae6989540b2fd61f56808ce48ec59875" translate="yes" xml:space="preserve">
          <source>Report progress to stderr.</source>
          <target state="translated">stderr에 진행 상황을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="23ca6237e7b4d09b8d3d4523a8b69c6b949c38b4" translate="yes" xml:space="preserve">
          <source>Report progress to stderr. By default, only a message about the current patch being applied will be printed. This option will cause additional information to be reported.</source>
          <target state="translated">stderr에 진행 상황을보고하십시오. 기본적으로 현재 적용중인 패치에 대한 메시지 만 인쇄됩니다. 이 옵션을 사용하면 추가 정보가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="40a5b594b81a1c53f8bc61470ed2acd9caeb657d" translate="yes" xml:space="preserve">
          <source>Report root nodes.</source>
          <target state="translated">루트 노드를보고하십시오.</target>
        </trans-unit>
        <trans-unit id="f3f7b1acaa97f30c6a4351eea727e4482f68baad" translate="yes" xml:space="preserve">
          <source>Report tags.</source>
          <target state="translated">보고서 태그.</target>
        </trans-unit>
        <trans-unit id="ca0ca9c619773e28411f3305d3cdb605dc8f7d58" translate="yes" xml:space="preserve">
          <source>Report the list of objects being walked locally and the list of objects successfully sent to the remote repository.</source>
          <target state="translated">로컬로 이동중인 개체 목록과 원격 저장소로 성공적으로 전송 된 개체 목록을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="b0782f7c4e5f1bf3ea56caef9403677659089e74" translate="yes" xml:space="preserve">
          <source>Report the names of files as they are moved.</source>
          <target state="translated">파일이 이동 될 때 파일 이름을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="3f95107453bf160f40698d26a88098aaa480cce8" translate="yes" xml:space="preserve">
          <source>Report what is being added and removed from index.</source>
          <target state="translated">색인에서 추가 및 제거되는 내용을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="d567f68fa956f7f96b358a6cc234fa317f99710f" translate="yes" xml:space="preserve">
          <source>Report what is downloaded.</source>
          <target state="translated">다운로드 한 내용을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="da402275b11a467df24029cc41a475356773c185" translate="yes" xml:space="preserve">
          <source>Reporting bugs</source>
          <target state="translated">버그보고</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="cc18a74ca85a5fe1dba71937009d7cf5c036f7f7" translate="yes" xml:space="preserve">
          <source>Repositories and branches</source>
          <target state="translated">리포지토리 및 브랜치</target>
        </trans-unit>
        <trans-unit id="3fb88b595be10aadddb6789d4ff575757e80830d" translate="yes" xml:space="preserve">
          <source>Repository administration</source>
          <target state="translated">리포지토리 관리</target>
        </trans-unit>
        <trans-unit id="df92bd52a2917a26c9495edc89977fc3eba4e3de" translate="yes" xml:space="preserve">
          <source>Repository maintenance</source>
          <target state="translated">리포지토리 유지 관리</target>
        </trans-unit>
        <trans-unit id="9b33ca61629f451364a09b37b4533d1a6f2f1429" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file.</source>
          <target state="translated">리포지토리 특정 구성 파일</target>
        </trans-unit>
        <trans-unit id="c748d884d06ef27fef856a77e77414daf14ef261" translate="yes" xml:space="preserve">
          <source>Repository specific configuration file. This file is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/config&quot; will be used instead.</source>
          <target state="translated">리포지토리 특정 구성 파일 $ GIT_COMMON_DIR이 설정되고 대신 &quot;$ GIT_COMMON_DIR / config&quot;가 사용되면이 파일은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7394e3ce9096d2546e81d264f6ebc4e2faebef57" translate="yes" xml:space="preserve">
          <source>Represents a repository accessed using the helper program &quot;git-ssl foo.example /bar&quot;. The type of request can be determined by the helper using environment variables (see above).</source>
          <target state="translated">헬퍼 프로그램 &quot;git-ssl foo.example / bar&quot;를 사용하여 액세스 한 저장소를 나타냅니다. 요청 유형은 환경 변수를 사용하여 도우미에 의해 결정될 수 있습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="9c983b3418b85a3f9b204dd1418f6237fbf7bdab" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">헬퍼 프로그램 &quot;git-server-alias foo&quot;를 사용하여 액세스 한 경로 / repo가있는 저장소를 나타냅니다. 프로토콜 스트림에 전달 된 원격 서버의 호스트 이름은 &quot;foo&quot;입니다 (여러 가상 Git 서버가 링크 레벨 주소를 공유 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="1362aa2b16d7c974af6da4e16e1f2f2e57cebac0" translate="yes" xml:space="preserve">
          <source>Represents a repository with path /repo accessed using the helper program &quot;git-server-alias foo&quot;. The path to the repository and type of request are not passed on the command line but as part of the protocol stream, as usual with git:// protocol.</source>
          <target state="translated">헬퍼 프로그램 &quot;git-server-alias foo&quot;를 사용하여 액세스 한 경로 / repo가있는 저장소를 나타냅니다. 리포지토리의 경로와 요청 유형은 일반적으로 git : // 프로토콜에서와 같이 명령 줄에 전달되지 않고 프로토콜 스트림의 일부로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d09e808fea175aed6c0426870e406a54311c7cc5" translate="yes" xml:space="preserve">
          <source>Represents a repository with path &lt;code&gt;/repo with spaces&lt;/code&gt; accessed using the helper program &quot;git-server-alias foo&quot;. The hostname for the remote server passed in the protocol stream will be &quot;foo&quot; (this allows multiple virtual Git servers to share a link-level address).</source>
          <target state="translated">헬퍼 프로그램 &quot;git-server-alias foo&quot;를 사용하여 액세스 &lt;code&gt;/repo with spaces&lt;/code&gt; 있는 경로 / repo가 있는 저장소를 나타 냅니다. 프로토콜 스트림에 전달 된 원격 서버의 호스트 이름은 &quot;foo&quot;입니다 (여러 가상 Git 서버가 링크 레벨 주소를 공유 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="2efb065a9a5c22367444476c2d3425647648ecad" translate="yes" xml:space="preserve">
          <source>Represents repository with path /somerepo accessible over git protocol at abstract namespace address /git-server.</source>
          <target state="translated">추상 네임 스페이스 주소 / git-server에서 git 프로토콜을 통해 액세스 가능한 경로 / somerepo가있는 저장소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="19e1ed64e856e6f12f5bac77f5299cded049014e" translate="yes" xml:space="preserve">
          <source>Request a single valid revision from the user, and set the &lt;code&gt;REVISION&lt;/code&gt; environment variable. In other aspects this option is similar to &lt;code&gt;argPrompt&lt;/code&gt;, and can be used together with it.</source>
          <target state="translated">사용자에게 유효한 단일 개정을 요청하고 &lt;code&gt;REVISION&lt;/code&gt; 환경 변수를 설정하십시오 . 다른 측면에서이 옵션은 &lt;code&gt;argPrompt&lt;/code&gt; 와 유사하며 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="197fbdc9cd47b824a513f297f7a38d2715e6a37f" translate="yes" xml:space="preserve">
          <source>Request a string argument from the user, and pass it to the tool through the &lt;code&gt;ARGS&lt;/code&gt; environment variable. Since requesting an argument implies confirmation, the &lt;code&gt;confirm&lt;/code&gt; option has no effect if this is enabled. If the option is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the dialog uses a built-in generic prompt; otherwise the exact value of the variable is used.</source>
          <target state="translated">사용자에게 문자열 인수를 요청하고 &lt;code&gt;ARGS&lt;/code&gt; 환경 변수를 통해 도구에 전달하십시오 . 인수를 요청하면 확인이 필요하므로 &lt;code&gt;confirm&lt;/code&gt; 옵션이 활성화되어 있으면 적용되지 않습니다. 옵션이 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;yes&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 로 설정되면 대화 상자는 기본 제공 일반 프롬프트를 사용합니다. 그렇지 않으면 변수의 정확한 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="af76b31829a8dd5cf3635494d51216915adc4665" translate="yes" xml:space="preserve">
          <source>Request the helper to check connectivity of a clone.</source>
          <target state="translated">헬퍼에게 클론 연결을 확인하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="c38d97d1cdb590002eb1b4ddac901b5b9f2b5245" translate="yes" xml:space="preserve">
          <source>Request the helper to perform a force update. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">도우미에게 강제 업데이트를 수행하도록 요청하십시오. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca0eaa75282457b7cf284de87b05023d92c795d5" translate="yes" xml:space="preserve">
          <source>Requesting credentials</source>
          <target state="translated">자격 증명 요청</target>
        </trans-unit>
        <trans-unit id="c253c74295e6d26ab1e36992edc46329d8f4d039" translate="yes" xml:space="preserve">
          <source>Requests writing one file revision to the packfile. The revision is not connected to any commit; this connection must be formed in a subsequent &lt;code&gt;commit&lt;/code&gt; command by referencing the blob through an assigned mark.</source>
          <target state="translated">하나의 파일 개정판을 packfile에 쓰도록 요청합니다. 개정판은 커밋에 연결되지 않습니다. 이 연결은 할당 된 마크를 통해 블롭을 참조하여 후속 &lt;code&gt;commit&lt;/code&gt; 명령 에서 형성되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f1bfe97ddeff74e34e5c2b1e166cee78ba2487b9" translate="yes" xml:space="preserve">
          <source>Require that fast-import supports the specified feature, or abort if it does not.</source>
          <target state="translated">빠른 가져 오기가 지정된 기능을 지원하도록 요구하거나 지원하지 않으면 중단하십시오.</target>
        </trans-unit>
        <trans-unit id="6316856b66b77d95afc0c3453708e583c5e94170" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;get-mark&lt;/code&gt;, &lt;code&gt;cat-blob&lt;/code&gt;, or &lt;code&gt;ls&lt;/code&gt; command respectively. Versions of fast-import not supporting the specified command will exit with a message indicating so. This lets the import error out early with a clear message, rather than wasting time on the early part of an import before the unsupported command is detected.</source>
          <target state="translated">백엔드가 각각 &lt;code&gt;get-mark&lt;/code&gt; , &lt;code&gt;cat-blob&lt;/code&gt; 또는 &lt;code&gt;ls&lt;/code&gt; 명령을 지원해야합니다 . 지정된 명령을 지원하지 않는 빠른 가져 오기 버전은이를 나타내는 메시지와 함께 종료됩니다. 이를 통해 지원되지 않는 명령이 감지되기 ​​전에 가져 오기 초기에 시간을 낭비하지 않고 명확한 메시지로 가져 오기 오류를 조기에 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="237f6cde559246995a9ad3fe3a19f1f678ef3d45" translate="yes" xml:space="preserve">
          <source>Require that the backend support the &lt;code&gt;notemodify&lt;/code&gt; (N) subcommand to the &lt;code&gt;commit&lt;/code&gt; command. Versions of fast-import not supporting notes will exit with a message indicating so.</source>
          <target state="translated">백엔드 가 &lt;code&gt;commit&lt;/code&gt; 명령에 대해 &lt;code&gt;notemodify&lt;/code&gt; (N) 부속 명령을 지원해야합니다 . 메모를 지원하지 않는 빠른 가져 오기 버전은이를 나타내는 메시지와 함께 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="2bdd979f5fb070ff3c7f85169894f3f721c9ebce" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;--stdout&lt;/code&gt;. Omits certain objects (usually blobs) from the resulting packfile. See &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; for valid &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; forms.</source>
          <target state="translated">&lt;code&gt;--stdout&lt;/code&gt; 이 필요합니다 . 결과 팩 파일에서 특정 객체 (일반적으로 얼룩)를 생략합니다. 유효한 &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; 양식 은 &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc9ece81e668f48ca0c9284b17719cfe0a863c67" translate="yes" xml:space="preserve">
          <source>Reserved characters are: &quot;%&quot; (used for encoding), &quot;+&quot; (can be used to encode SPACE), all whitespace characters as defined in Perl, including SP, TAB and LF, (used to separate fields in a record).</source>
          <target state="translated">예약 문자는 &quot;%&quot;(인코딩에 사용됨), &quot;+&quot;(SPACE를 인코딩하는 데 사용할 수 있음), SP, TAB 및 LF를 포함하여 Perl에 정의 된 모든 공백 문자 (레코드에서 필드를 구분하는 데 사용됨)입니다.</target>
        </trans-unit>
        <trans-unit id="b42218495bd708d0856afd1fabb98c3577f4ad60" translate="yes" xml:space="preserve">
          <source>Reserved instruction</source>
          <target state="translated">예약 된 지시</target>
        </trans-unit>
        <trans-unit id="ade58d6ef106ac4468b520e2f9f718942ef96589" translate="yes" xml:space="preserve">
          <source>Reset &amp;lt;branchname&amp;gt; to &amp;lt;startpoint&amp;gt;, even if &amp;lt;branchname&amp;gt; exists already. Without &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;git branch&lt;/code&gt; refuses to change an existing branch. In combination with &lt;code&gt;-d&lt;/code&gt; (or &lt;code&gt;--delete&lt;/code&gt;), allow deleting the branch irrespective of its merged status. In combination with &lt;code&gt;-m&lt;/code&gt; (or &lt;code&gt;--move&lt;/code&gt;), allow renaming the branch even if the new branch name already exists, the same applies for &lt;code&gt;-c&lt;/code&gt; (or &lt;code&gt;--copy&lt;/code&gt;).</source>
          <target state="translated">&amp;lt;branchname&amp;gt;이 이미 존재하더라도 &amp;lt;branchname&amp;gt;을 &amp;lt;startpoint&amp;gt;로 재설정하십시오. 없이 &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;git branch&lt;/code&gt; 기존 지점을 변경 거부합니다. &lt;code&gt;-d&lt;/code&gt; (또는 &lt;code&gt;--delete&lt;/code&gt; ) 와 함께 병합 된 상태에 관계없이 분기를 삭제할 수 있습니다. &lt;code&gt;-m&lt;/code&gt; (또는 &lt;code&gt;--move&lt;/code&gt; ) 과 함께 새 분기 이름이 이미 존재하더라도 분기 이름을 바꾸도록 허용하면 &lt;code&gt;-c&lt;/code&gt; (또는 &lt;code&gt;--copy&lt;/code&gt; ) 에도 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c000dded32d603bd2d66f7de30922c3049331d8" translate="yes" xml:space="preserve">
          <source>Reset a single file in the index</source>
          <target state="translated">색인에서 단일 파일 재설정</target>
        </trans-unit>
        <trans-unit id="b199a41a6acc73bab0e76970a8b89b9149933695" translate="yes" xml:space="preserve">
          <source>Reset an existing branch (or a new branch) to a specific revision. This command must be used to change a branch to a specific revision without making a commit on it.</source>
          <target state="translated">기존 분기 (또는 새 분기)를 특정 개정으로 재설정합니다. 커밋하지 않고 분기를 특정 개정으로 변경하려면이 명령을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3caab3d6f602d251b347bcf8cb43ce25777589d7" translate="yes" xml:space="preserve">
          <source>Reset current HEAD to the specified state</source>
          <target state="translated">현재 HEAD를 지정된 상태로 재설정</target>
        </trans-unit>
        <trans-unit id="7000155564e143a5ed7b021bd65e423555a02d6b" translate="yes" xml:space="preserve">
          <source>Reset the conflict resolutions which rerere has recorded for the current conflict in &amp;lt;pathspec&amp;gt;.</source>
          <target state="translated">&amp;lt;pathspec&amp;gt;에서 현재 충돌에 대해 다시 기록 된 충돌 해결을 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="4a789604fce06a1f57b66b342300476ce0a41423" translate="yes" xml:space="preserve">
          <source>Reset the metadata used by rerere if a merge resolution is to be aborted. Calling &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; or &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; will automatically invoke this command.</source>
          <target state="translated">병합 해결을 중단하려면 rerere에서 사용하는 메타 데이터를 재설정하십시오. 호출 &lt;code&gt;git am [--skip|--abort]&lt;/code&gt; 또는 &lt;code&gt;git rebase [--skip|--abort]&lt;/code&gt; 자동으로이 명령을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="e58c6724a36573568d9a717f014941c665fe0e5c" translate="yes" xml:space="preserve">
          <source>Reset, restore and revert</source>
          <target state="translated">재설정, 복원 및 되돌리기</target>
        </trans-unit>
        <trans-unit id="cfb6b4d825df9b6e5392392c169da218cc9ebb7e" translate="yes" xml:space="preserve">
          <source>Resets index entries and updates files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;. If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; has local changes, reset is aborted.</source>
          <target state="translated">작업 트리에서 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 과 &lt;code&gt;HEAD&lt;/code&gt; 가 다른 색인 항목을 재설정하고 파일을 업데이트합니다 . &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 과 &lt;code&gt;HEAD&lt;/code&gt; 가 다른 파일에 로컬 변경이 있으면 재설정이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="37918ef314fe9073b027113123d9b71065a3aa0b" translate="yes" xml:space="preserve">
          <source>Resets the index and updates the files in the working tree that are different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt;, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; and the index has unstaged changes, reset is aborted.</source>
          <target state="translated">인덱스를 재설정하고 &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 과 &lt;code&gt;HEAD&lt;/code&gt; 사이에 다른 작업 트리의 파일을 업데이트 하지만 인덱스와 작업 트리 사이에 다른 파일 (예 : 추가되지 않은 변경 사항)은 유지합니다. &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 과 인덱스 사이에 다른 파일 이 스테이지되지 않은 변경 사항을 갖는 경우 재설정이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="66814a725afb76705c792c5c5bff2effba54bba2" translate="yes" xml:space="preserve">
          <source>Resets the index and working tree. Any changes to tracked files in the working tree since &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; are discarded.</source>
          <target state="translated">색인 및 작업 트리를 재설정합니다. &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 이후 작업 트리에서 추적 된 파일에 대한 모든 변경 사항 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="018c5d5ee267c3048a66b8317e0b378d380cebd3" translate="yes" xml:space="preserve">
          <source>Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.</source>
          <target state="translated">작업 트리가 아닌 색인을 재설정하고 (즉, 변경된 파일은 유지되지만 커밋으로 표시되지 않음) 업데이트되지 않은 내용을보고합니다. 이것이 기본 동작입니다.</target>
        </trans-unit>
        <trans-unit id="367477f47d978611bcd2955ee4ebc351a609da8a" translate="yes" xml:space="preserve">
          <source>Resolve &quot;$GIT_DIR/&amp;lt;path&amp;gt;&quot; and takes other path relocation variables such as $GIT_OBJECT_DIRECTORY, $GIT_INDEX_FILE&amp;hellip;​ into account. For example, if $GIT_OBJECT_DIRECTORY is set to /foo/bar then &quot;git rev-parse --git-path objects/abc&quot; returns /foo/bar/abc.</source>
          <target state="translated">&quot;$ GIT_DIR / &amp;lt;path&amp;gt;&quot;를 해결하고 $ GIT_OBJECT_DIRECTORY, $ GIT_INDEX_FILE&amp;hellip;과 같은 다른 경로 재배치 변수를 고려하십시오. 예를 들어 $ GIT_OBJECT_DIRECTORY가 / foo / bar로 설정된 경우 &quot;git rev-parse --git-path objects / abc&quot;는 / foo / bar / abc를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c8bb6fc86c763639a02a3bc6b6e1886e0912fa99" translate="yes" xml:space="preserve">
          <source>Resolve the conflicts. Git will mark the conflicts in the working tree. Edit the files into shape and &lt;code&gt;git add&lt;/code&gt; them to the index. Use &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git merge --continue&lt;/code&gt; to seal the deal. The latter command checks whether there is a (interrupted) merge in progress before calling &lt;code&gt;git commit&lt;/code&gt;.</source>
          <target state="translated">충돌을 해결하십시오. 힘내 작업 트리에서 충돌을 표시합니다. 파일을 모양으로 편집하고 &lt;code&gt;git add&lt;/code&gt; 을 색인에 추가하십시오 . &lt;code&gt;git commit&lt;/code&gt; 또는 &lt;code&gt;git merge --continue&lt;/code&gt; 사용 하여 거래를 봉인하십시오. 후자의 명령은 &lt;code&gt;git commit&lt;/code&gt; 을 호출하기 전에 진행중인 (중단 된) 병합이 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="40be4fe30543d88c430c41f2a76b60f305a6a06a" translate="yes" xml:space="preserve">
          <source>Resolving a merge</source>
          <target state="translated">병합 해결</target>
        </trans-unit>
        <trans-unit id="3aa5d718d6655d399867529b5e479166f7b70223" translate="yes" xml:space="preserve">
          <source>Respect &lt;code&gt;include.*&lt;/code&gt; directives in config files when looking up values. Defaults to &lt;code&gt;off&lt;/code&gt; when a specific file is given (e.g., using &lt;code&gt;--file&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, etc) and &lt;code&gt;on&lt;/code&gt; when searching all config files.</source>
          <target state="translated">값을 찾을 때 구성 파일의 &lt;code&gt;include.*&lt;/code&gt; 지시문을 존중하십시오 . 기본값은 &lt;code&gt;off&lt;/code&gt; (예를 들어, 사용하여 특정 파일이 주어 졌을 때 &lt;code&gt;--file&lt;/code&gt; , &lt;code&gt;--global&lt;/code&gt; 등)과 &lt;code&gt;on&lt;/code&gt; 모든 설정 파일을 검색 할 때.</target>
        </trans-unit>
        <trans-unit id="3821457277b56f085d69d5b77c2d88808f6181de" translate="yes" xml:space="preserve">
          <source>Respect any colors specified in the &lt;code&gt;--format&lt;/code&gt; option. The &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; field must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt; (if &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; is absent, behave as if &lt;code&gt;always&lt;/code&gt; was given).</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; 옵션에 지정된 색상을 존중하십시오 . &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 필드 중 하나 여야합니다 &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; , 또는 &lt;code&gt;auto&lt;/code&gt; (경우 &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 결석, 어떻게 동작 인 것처럼 &lt;code&gt;always&lt;/code&gt; 주어졌다).</target>
        </trans-unit>
        <trans-unit id="19c837ff313a7ba1f889a299cee54a40a7c6f84b" translate="yes" xml:space="preserve">
          <source>Responses to commands</source>
          <target state="translated">명령에 대한 응답</target>
        </trans-unit>
        <trans-unit id="cc0464b7666785d6a76e9f773de6c54d764f7865" translate="yes" xml:space="preserve">
          <source>Restart the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">httpd 인스턴스를 다시 시작하고 종료하십시오. 새 인스턴스를 생성하는 데 필요한 구성 파일을 재생성하십시오.</target>
        </trans-unit>
        <trans-unit id="8887a5fdf01dac377097b251a845eb9047ab1106" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process after having resolved a merge conflict.</source>
          <target state="translated">병합 충돌을 해결 한 후 rebasing 프로세스를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="d21d225ced39acf1075b76301dc02cbf10edbb3b" translate="yes" xml:space="preserve">
          <source>Restart the rebasing process by skipping the current patch.</source>
          <target state="translated">현재 패치를 건너 뛰어 rebasing 프로세스를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="c1f6ec05a9a6600d16e6b449eaa642ea5102eab3" translate="yes" xml:space="preserve">
          <source>Restore specified paths in the working tree with some contents from a restore source. If a path is tracked but does not exist in the restore source, it will be removed to match the source.</source>
          <target state="translated">작업 트리에서 지정된 경로를 복원 소스의 일부 내용으로 복원하십시오. 경로가 추적되었지만 복원 소스에 존재하지 않으면 소스와 일치하도록 경로가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="264c55416cc1f357f0822f338666c6b7bdbad148" translate="yes" xml:space="preserve">
          <source>Restore the original branch and abort the patching operation.</source>
          <target state="translated">원래 분기를 복원하고 패치 작업을 중단하십시오.</target>
        </trans-unit>
        <trans-unit id="96e0fd08d6591454dd62291fbfc1b15a5b3e040c" translate="yes" xml:space="preserve">
          <source>Restore the working tree files with the content from the given tree. It is common to specify the source tree by naming a commit, branch or tag associated with it.</source>
          <target state="translated">주어진 트리의 내용으로 작업 트리 파일을 복원합니다. 커밋, 브랜치 또는 관련 태그를 명명하여 소스 트리를 지정하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="37dff9bce765051722ec36426d7fa455df094071" translate="yes" xml:space="preserve">
          <source>Restore working tree files</source>
          <target state="translated">작업 트리 파일 복원</target>
        </trans-unit>
        <trans-unit id="69b489de455beab1530c19815d63b57591075bcd" translate="yes" xml:space="preserve">
          <source>Restores the &lt;code&gt;unmerged&lt;/code&gt; or &lt;code&gt;needs updating&lt;/code&gt; state of a file during a merge if it was cleared by accident.</source>
          <target state="translated">실수로 파일을 지운 경우 병합하는 동안 파일 의 &lt;code&gt;unmerged&lt;/code&gt; 상태 또는 &lt;code&gt;needs updating&lt;/code&gt; 상태를 복원 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9851dc086eda7e8d693a5cc6867fc0671874ff9d" translate="yes" xml:space="preserve">
          <source>Restrict delta matches based on &quot;islands&quot;. See DELTA ISLANDS below.</source>
          <target state="translated">&quot;섬&quot;을 기준으로 델타 일치를 제한하십시오. 아래의 델타 섬을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8b8a383fd6388c6ea73ba5d43ff2fb9ca48cf7d7" translate="yes" xml:space="preserve">
          <source>Restrict three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; to happen only if there is no file-level merging required, instead of resolving merge for trivial cases and leaving conflicting files unresolved in the index.</source>
          <target state="translated">사소한 경우에 대한 병합을 해결하고 충돌하는 파일을 색인에서 해결하지 않고 파일 레벨 병합이 필요하지 않은 경우에만 &lt;code&gt;git read-tree&lt;/code&gt; 에 의한 3 방향 병합을 제한 하십시오.</target>
        </trans-unit>
        <trans-unit id="3872426d236e98107658a5fa4ce3ec35943effaa" translate="yes" xml:space="preserve">
          <source>Restricted login shell for Git-only SSH access</source>
          <target state="translated">Git 전용 SSH 액세스를위한 제한된 로그인 쉘</target>
        </trans-unit>
        <trans-unit id="8aededfb12d70887c4524cf03227b8b417c18d04" translate="yes" xml:space="preserve">
          <source>Result is different from the value produced by git 1.9 and older or produced when an &quot;unstable&quot; hash (see --unstable below) is configured - even when used on a diff output taken without any use of &quot;-O&amp;lt;orderfile&amp;gt;&quot;, thereby making existing databases storing such &quot;unstable&quot; or historical patch-ids unusable.</source>
          <target state="translated">결과는 git 1.9 이하에서 생성 된 값과 다르거 나 &quot;-안정된&quot;해시 (아래의-안정적 참조)를 구성 할 때 생성됩니다. &quot;-O &amp;lt;orderfile&amp;gt;&quot;을 사용하지 않고 diff 출력에 사용하는 경우에도 따라서 이러한 &quot;불안정한&quot;또는 히스토리 패치 ID를 저장하는 기존 데이터베이스를 사용할 수 없게합니다.</target>
        </trans-unit>
        <trans-unit id="dd0be3ab949b7f61e7a99aac2ba7a208d6ea3a63" translate="yes" xml:space="preserve">
          <source>Retrieve and store user credentials</source>
          <target state="translated">사용자 자격 증명 검색 및 저장</target>
        </trans-unit>
        <trans-unit id="5a212fd6a296588049eb570292b8fddf3b170728" translate="yes" xml:space="preserve">
          <source>Retrieves the URLs for a remote. Configurations for &lt;code&gt;insteadOf&lt;/code&gt; and &lt;code&gt;pushInsteadOf&lt;/code&gt; are expanded here. By default, only the first URL is listed.</source>
          <target state="translated">리모컨의 URL을 검색합니다. &lt;code&gt;insteadOf&lt;/code&gt; 및 &lt;code&gt;pushInsteadOf&lt;/code&gt; 에 대한 구성 이 여기에서 확장되었습니다. 기본적으로 첫 번째 URL 만 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="0f444cb29e88624498c6ae42d5b37c68efa3bab0" translate="yes" xml:space="preserve">
          <source>Returns the commit in plain text mail format, suitable for applying with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">커밋을 &lt;a href=&quot;git-am&quot;&gt;git-am [1]로&lt;/a&gt; 적용하기에 적합한 일반 텍스트 메일 형식으로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9253efc397e5de345aa951a00d2c23f86bf7df99" translate="yes" xml:space="preserve">
          <source>Returns the raw data for the file in given repository, at given path and revision. Links to this action are marked &lt;code&gt;raw&lt;/code&gt;.</source>
          <target state="translated">지정된 경로 및 개정에서 지정된 저장소의 파일에 대한 원시 데이터를 리턴합니다. 이 조치에 대한 링크는 &lt;code&gt;raw&lt;/code&gt; 로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="5df164550e4b46ec040a3d56bf7256552cf4621c" translate="yes" xml:space="preserve">
          <source>Reuse recorded resolution of conflicted merges</source>
          <target state="translated">충돌 병합의 기록 된 해상도 재사용</target>
        </trans-unit>
        <trans-unit id="8616b41a55b6598a78826f975dbbf7f7f8695b39" translate="yes" xml:space="preserve">
          <source>Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes $Revision$) in working CVS checkout before applying patch.</source>
          <target state="translated">패치를 적용하기 전에 CVS 체크 아웃 작업에서 역 CVS 키워드 확장 (예 : $ Revision : 1.2.3.4 $가 $ Revision $이 됨)</target>
        </trans-unit>
        <trans-unit id="09d255659c37629cf7ad5a71d93e459ba7907206" translate="yes" xml:space="preserve">
          <source>Reverses the meaning of the &lt;code&gt;^&lt;/code&gt; prefix (or lack thereof) for all following revision specifiers, up to the next &lt;code&gt;--not&lt;/code&gt;.</source>
          <target state="translated">다음의 모든 수정 자 지정자 에 대한 &lt;code&gt;^&lt;/code&gt; 접두사 (또는 그 부족) 의 의미를 다음 &lt;code&gt;--not&lt;/code&gt; 까지 되돌 립니다.</target>
        </trans-unit>
        <trans-unit id="f5ecc3a2c0ef8c576038e5331d800290aa1dbb34" translate="yes" xml:space="preserve">
          <source>Revert some existing commits</source>
          <target state="translated">기존 커밋을 되돌리기</target>
        </trans-unit>
        <trans-unit id="2d05a07b19af8782049520b85fa598b5aae8245a" translate="yes" xml:space="preserve">
          <source>Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.</source>
          <target state="translated">마스터의 5 번째 마지막 커밋 (포함)에서 커밋이 수행 한 변경 사항을 마스터의 3 번째 마지막 커밋 (포함)으로 되돌 리지만 되 돌린 변경 내용으로 커밋을 만들지 마십시오. 되돌리기는 작업 트리와 색인 만 수정합니다.</target>
        </trans-unit>
        <trans-unit id="d36b73a7d31ce14514491b7bd667f4a3a39a76f3" translate="yes" xml:space="preserve">
          <source>Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.</source>
          <target state="translated">HEAD에서 네 번째 마지막 커밋으로 지정된 변경 사항을 되돌리고 되 돌린 변경 사항으로 새 커밋을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7816a94047b619334a2511ddb1fb3870ada25153" translate="yes" xml:space="preserve">
          <source>Reverting a merge commit declares that you will never want the tree changes brought in by the merge. As a result, later merges will only bring in tree changes introduced by commits that are not ancestors of the previously reverted merge. This may or may not be what you want.</source>
          <target state="translated">병합 커밋을 되 돌리면 병합으로 인한 트리 변경을 원하지 않을 것입니다. 결과적으로 나중에 병합하면 이전에 되 돌린 병합의 조상이 아닌 커밋이 도입 한 트리 변경 사항 만 가져옵니다. 이것은 당신이 원하는 것일 수도 아닐 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1541e4f3b28e3bf9bf5cd6cdf1c6fa7c5066ac0" translate="yes" xml:space="preserve">
          <source>Review and edit each patch you&amp;rsquo;re about to send. Default is the value of &lt;code&gt;sendemail.annotate&lt;/code&gt;. See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">보내려는 각 패치를 검토하고 편집하십시오. 기본값은 &lt;code&gt;sendemail.annotate&lt;/code&gt; 의 값입니다 . &lt;code&gt;sendemail.multiEdit&lt;/code&gt; 에 대해서는 구성 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b78ae7131226d816b60a3640c70615147c2668fc" translate="yes" xml:space="preserve">
          <source>Revision range summary</source>
          <target state="translated">개정 범위 요약</target>
        </trans-unit>
        <trans-unit id="0e507d58daf108f33aa81c2ab9d974a6ce0836d6" translate="yes" xml:space="preserve">
          <source>Revision shown. Defaults to HEAD.</source>
          <target state="translated">개정이 표시되었습니다. 기본값은 HEAD입니다.</target>
        </trans-unit>
        <trans-unit id="2dba79611a64646631612329658c566246fbc9f0" translate="yes" xml:space="preserve">
          <source>Revisions</source>
          <target state="translated">Revisions</target>
        </trans-unit>
        <trans-unit id="0b4be1f6169f38f3814188ca6321f0baef4e8d0e" translate="yes" xml:space="preserve">
          <source>Revisions come first and then paths. E.g. in &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt;, &lt;code&gt;v1.0&lt;/code&gt; and &lt;code&gt;v2.0&lt;/code&gt; are revisions and &lt;code&gt;arch/x86&lt;/code&gt; and &lt;code&gt;include/asm-x86&lt;/code&gt; are paths.</source>
          <target state="translated">수정본이 먼저 나온 다음 경로입니다. 예를 들어 &lt;code&gt;git diff v1.0 v2.0 arch/x86 include/asm-x86&lt;/code&gt; , &lt;code&gt;v1.0&lt;/code&gt; 및 &lt;code&gt;v2.0&lt;/code&gt; 은 개정이며 &lt;code&gt;arch/x86&lt;/code&gt; 및 &lt;code&gt;include/asm-x86&lt;/code&gt; 은 경로입니다.</target>
        </trans-unit>
        <trans-unit id="7becdbbb2a8732024f87ab2931981f680230ef94" translate="yes" xml:space="preserve">
          <source>Rewind the master branch to get rid of those three commits.</source>
          <target state="translated">마스터 브랜치를 되 감아 서 세 가지 커밋을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="23707433283a99c49d086ac3b852fb7dc5a49bd7" translate="yes" xml:space="preserve">
          <source>Rewrite branches</source>
          <target state="translated">가지 다시 쓰기</target>
        </trans-unit>
        <trans-unit id="51c6d6dea3e502e9d6305607675f5d9cfa096787" translate="yes" xml:space="preserve">
          <source>Rewriting a single commit</source>
          <target state="translated">단일 커밋 재 작성</target>
        </trans-unit>
        <trans-unit id="f0b0b0c2a8ee1155d88307c80fb06e1df9172561" translate="yes" xml:space="preserve">
          <source>Rewriting history and maintaining patch series</source>
          <target state="translated">히스토리 재 작성 및 패치 시리즈 유지 보수</target>
        </trans-unit>
        <trans-unit id="b4a0f73cd12119000c1f6312d5dd619dd0ae5fda" translate="yes" xml:space="preserve">
          <source>Root of the Maildir to split. This directory should contain the cur, tmp and new subdirectories.</source>
          <target state="translated">분리 할 Maildir의 루트. 이 디렉토리에는 cur, tmp 및 new 서브 디렉토리가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="afeb98169e5519ad4e553da5035454587d62f649" translate="yes" xml:space="preserve">
          <source>Roughly speaking, there are two important workflows: merge and patch. The important difference is that the merge workflow can propagate full history, including merges, while patches cannot. Both workflows can be used in parallel: in &lt;code&gt;git.git&lt;/code&gt;, only subsystem maintainers use the merge workflow, while everyone else sends patches.</source>
          <target state="translated">대략적으로 말하면 병합과 패치라는 두 가지 중요한 작업 과정이 있습니다. 중요한 차이점은 병합 워크 플로는 병합을 포함하여 전체 기록을 전파 할 수 있지만 패치는 불가능하다는 것입니다. 두 워크 플로를 동시에 사용할 수 있습니다. &lt;code&gt;git.git&lt;/code&gt; 에서는 서브 시스템 관리자 만 병합 워크 플로를 사용하고 다른 모든 사람은 패치를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4ad3e9112d465fbfd17a48a5928f94fb9df2be8b" translate="yes" xml:space="preserve">
          <source>Routines to help parsing remote repository access parameters</source>
          <target state="translated">원격 저장소 액세스 매개 변수를 구문 분석하는 데 도움이되는 루틴</target>
        </trans-unit>
        <trans-unit id="3495f8aaa83c51339b8e8d234a997810c199e605" translate="yes" xml:space="preserve">
          <source>Rule: Merge to downstream only at well-defined points</source>
          <target state="translated">규칙 : 잘 정의 된 지점에서만 다운 스트림으로 병합</target>
        </trans-unit>
        <trans-unit id="09660bd61221506e477e31f1dd27fab9f41227cb" translate="yes" xml:space="preserve">
          <source>Rule: Merge upwards</source>
          <target state="translated">규칙 : 위쪽으로 병합</target>
        </trans-unit>
        <trans-unit id="54160ff726068ad54950593ff8fc01c56330b6b4" translate="yes" xml:space="preserve">
          <source>Rule: Throw-away integration branches</source>
          <target state="translated">규칙 : 폐기 통합 분기</target>
        </trans-unit>
        <trans-unit id="2f47e21adb2d5e1ec4b0ccaaeca3d73a008017d2" translate="yes" xml:space="preserve">
          <source>Rule: Topic branches</source>
          <target state="translated">규칙 : 주제 분기</target>
        </trans-unit>
        <trans-unit id="fda6b71ba420bf88a3b35fd7a8c9d96c7d2ca360" translate="yes" xml:space="preserve">
          <source>Run 3-way file level merge for text files, but take lines from both versions, instead of leaving conflict markers. This tends to leave the added lines in the resulting file in random order and the user should verify the result. Do not use this if you do not understand the implications.</source>
          <target state="translated">텍스트 파일에 대해 3 방향 파일 수준 병합을 실행하지만 충돌 마커를 남기지 않고 두 버전에서 줄을 가져옵니다. 결과 파일에 추가 된 줄을 임의의 순서로 남겨 두는 경향이 있으므로 사용자는 결과를 확인해야합니다. 의미를 이해하지 못하는 경우에는 이것을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a160fe3e32ea42046eaaac9053e680c14caafda7" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git fetch origin&lt;/code&gt; from the public repository of your upstream every once in a while. This does only the first half of &lt;code&gt;git pull&lt;/code&gt; but does not merge. The head of the public repository is stored in &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt;.</source>
          <target state="translated">업스트림의 공용 저장소에서 &lt;code&gt;git fetch origin&lt;/code&gt; 을 실행하십시오 . 이것은 &lt;code&gt;git pull&lt;/code&gt; 의 처음 절반 만 수행하지만 병합하지는 않습니다. 공용 저장소의 헤드는 &lt;code&gt;.git/refs/remotes/origin/master&lt;/code&gt; 에 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="e5df7e2d67065569be056bdfd06fe71034940306" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git gc --auto&lt;/code&gt; at the end to perform garbage collection if needed. This is enabled by default.</source>
          <target state="translated">필요한 경우 마지막에 &lt;code&gt;git gc --auto&lt;/code&gt; 를 실행 하여 가비지 수집을 수행하십시오. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4c2111aa7a129dccec5c5c0fa7a3c629e6b4b60" translate="yes" xml:space="preserve">
          <source>Run a merge for files needing merging</source>
          <target state="translated">병합이 필요한 파일에 대해 병합 실행</target>
        </trans-unit>
        <trans-unit id="56deae0bf4d8ef1e2306db4544bba762fbe034dc" translate="yes" xml:space="preserve">
          <source>Run a three-way file merge</source>
          <target state="translated">3 방향 파일 병합 실행</target>
        </trans-unit>
        <trans-unit id="454ceea0bbe28544bd004a32b164a804513700b9" translate="yes" xml:space="preserve">
          <source>Run as if git was started in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; instead of the current working directory. When multiple &lt;code&gt;-C&lt;/code&gt; options are given, each subsequent non-absolute &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; is interpreted relative to the preceding &lt;code&gt;-C
&amp;lt;path&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is present but empty, e.g. &lt;code&gt;-C &quot;&quot;&lt;/code&gt;, then the current working directory is left unchanged.</source>
          <target state="translated">현재 작업 디렉토리 대신 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 에서 git이 시작된 것처럼 실행하십시오 . 여러 개의 &lt;code&gt;-C&lt;/code&gt; 옵션이 제공 될 때 , 각각의 후속 비 절대 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 는 앞의 &lt;code&gt;-C &amp;lt;path&amp;gt;&lt;/code&gt; 대해 해석 됩니다. 경우 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 존재하지만, 예를 들어, 비어 &lt;code&gt;-C &quot;&quot;&lt;/code&gt; , 현재 작업 디렉토리는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a57bdd6deda30e0d464ee7ac9f51bb6cd990f64" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from inetd.</source>
          <target state="translated">git-daemon을 실행하여 inetd에서 / pub / scm을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="2b3f7399788c5a94c105f34c23c2a49d757c1096" translate="yes" xml:space="preserve">
          <source>Run git-daemon to serve /pub/scm from xinetd.</source>
          <target state="translated">git-daemon을 실행하여 xinetd에서 / pub / scm을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="29a03b5fc4e803018eee3893eddf1e9108c87d3d" translate="yes" xml:space="preserve">
          <source>Run interactively.</source>
          <target state="translated">대화식으로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f367a056462dd8b9f00355ca4ea04e6dfae0f7a4" translate="yes" xml:space="preserve">
          <source>Run merge against all files in the index that need merging.</source>
          <target state="translated">병합해야하는 인덱스의 모든 파일에 대해 병합을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="234f84747fbb8e336dcf4106732f26a4c98fccdf" translate="yes" xml:space="preserve">
          <source>Run merge conflict resolution tools to resolve merge conflicts</source>
          <target state="translated">병합 충돌 해결 도구를 실행하여 병합 충돌 해결</target>
        </trans-unit>
        <trans-unit id="6f4bd94ff5f1951786b4d70e32a9fd3f734eea92" translate="yes" xml:space="preserve">
          <source>Run the command silently, without creating a window to display its output.</source>
          <target state="translated">출력을 표시하는 창을 작성하지 않고 명령을 자동으로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1bc8f86a1473f5767bf3c60c210d9437103d96b3" translate="yes" xml:space="preserve">
          <source>Run the tool only if a diff is selected in the GUI. It guarantees that &lt;code&gt;FILENAME&lt;/code&gt; is not empty.</source>
          <target state="translated">GUI에서 diff가 선택된 경우에만 도구를 실행하십시오. &lt;code&gt;FILENAME&lt;/code&gt; 이 비어 있지 않다는 것을 보장합니다 .</target>
        </trans-unit>
        <trans-unit id="6a6c6a22304c9bf76fa5e2f3f8dca8cd7bf5e3ac" translate="yes" xml:space="preserve">
          <source>Run this script and save its output to a file. This file could then be used as projects list file, which means that you can set &lt;code&gt;$projects_list&lt;/code&gt; to its filename.</source>
          <target state="translated">이 스크립트를 실행하고 출력을 파일로 저장하십시오. 그런 다음이 파일을 프로젝트 목록 파일로 사용할 수 있습니다. 즉, &lt;code&gt;$projects_list&lt;/code&gt; 를 파일 이름으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4350cd9be7c2a6a88a109bf8474f97ce8036333" translate="yes" xml:space="preserve">
          <source>Run verbosely.</source>
          <target state="translated">자세하게 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0580e4cb5c8782966251586e9fca0c52971499d2" translate="yes" xml:space="preserve">
          <source>Run verbosely. Does not affect the reporting of progress status to the standard error stream.</source>
          <target state="translated">자세하게 실행하십시오. 표준 오류 스트림에 진행 상태를보고하는 데 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6c2918d91700995262364e3455a1fa1e70615ff" translate="yes" xml:space="preserve">
          <source>Running &quot;git tag&quot; without arguments also lists all tags. The pattern is a shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be given; if any of them matches, the tag is shown.</source>
          <target state="translated">인수없이 &quot;git tag&quot;를 실행하면 모든 태그가 나열됩니다. 패턴은 쉘 와일드 카드입니다 (즉, fnmatch (3)을 사용하여 일치). 여러 패턴이 제공 될 수 있습니다. 둘 중 하나라도 일치하면 태그가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="803264f53d0e1d9dc0bb4982e51be37a05b958fa" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-index&quot;&gt;git-diff-index[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, or &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; with the &lt;code&gt;-p&lt;/code&gt; option produces patch text. You can customize the creation of patch text via the &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; and the &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; environment variables.</source>
          <target state="translated">실행 &lt;a href=&quot;git-diff&quot;&gt;자식-DIFF를 [1]&lt;/a&gt; , &lt;a href=&quot;git-log&quot;&gt;자식 로그 [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;자식 쇼 [1]&lt;/a&gt; , &lt;a href=&quot;git-diff-index&quot;&gt;자식-DIFF 인덱스 [1]&lt;/a&gt; , &lt;a href=&quot;git-diff-tree&quot;&gt;자식-DIFF 트리 [1]&lt;/a&gt; , 또는 &lt;a href=&quot;git-diff-files&quot;&gt;자식-DIFF-파일 [1]&lt;/a&gt; 와 &lt;code&gt;-p&lt;/code&gt; 옵션은 패치 텍스트를 생산하고 있습니다. &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; 및 &lt;code&gt;GIT_DIFF_OPTS&lt;/code&gt; 환경 변수 를 통해 패치 텍스트 작성을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79747aa96d21887b0b235c733b1bf62702e5f734" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git gc&lt;/code&gt; manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the &quot;PACKFILE OPTIMIZATION&quot; section in &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; for more details on the import case.</source>
          <target state="translated">실행 &lt;code&gt;git gc&lt;/code&gt; 정기적으로 같은 도자기 명령을 실행하지 않고 저장소에 개체를 추가 할 때 수동으로 필요한 경우에만해야하는 것은 차선의 대량 수입을 정리하기 위해 일회성 저장소 최적화, 또는 예를 할 수 있습니다. 가져 오기 사례에 대한 자세한 내용 은 &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]&lt;/a&gt; 의 &quot;PACKFILE OPTIMIZATION&quot;섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e2a5725ee1a3773dc9d930811a085d107277efd" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git init&lt;/code&gt; in an existing repository is safe. It will not overwrite things that are already there. The primary reason for rerunning &lt;code&gt;git init&lt;/code&gt; is to pick up newly added templates (or to move the repository to another place if --separate-git-dir is given).</source>
          <target state="translated">기존 저장소에서 &lt;code&gt;git init&lt;/code&gt; 를 실행 하는 것이 안전합니다. 이미 존재하는 것을 덮어 쓰지 않습니다. &lt;code&gt;git init&lt;/code&gt; 를 다시 실행하는 주된 이유는 새로 추가 된 템플릿을 선택하거나 --separate-git-dir이 지정된 경우 리포지토리를 다른 위치로 옮기는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4a12225be5b345f509b740239e0b23dc61c4c69e" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git merge&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; is NOT recommended on a branch you plan to &lt;code&gt;dcommit&lt;/code&gt; from because Subversion users cannot see any merges you&amp;rsquo;ve made. Furthermore, if you merge or pull from a Git branch that is a mirror of an SVN branch, &lt;code&gt;dcommit&lt;/code&gt; may commit to the wrong branch.</source>
          <target state="translated">Subversion 사용자는 병합을 볼 수 없기 때문에 &lt;code&gt;dcommit&lt;/code&gt; 하려는 분기에서 &lt;code&gt;git merge&lt;/code&gt; 또는 &lt;code&gt;git pull&lt;/code&gt; 을 실행 하지 않는 것이 좋습니다 . 또한 SVN 분기의 미러 인 Git 분기를 병합하거나 가져 오면 &lt;code&gt;dcommit&lt;/code&gt; 이 잘못된 분기를 커밋 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e5d95b0a65fda26d5c70bb844d87c3f30d59d6d" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;git pack-refs&lt;/code&gt; in a repository renders it unclonable by Git versions prior to 1.5.1.2 over dumb transports such as HTTP. This variable determines whether &lt;code&gt;git gc&lt;/code&gt; runs &lt;code&gt;git pack-refs&lt;/code&gt;. This can be set to &lt;code&gt;notbare&lt;/code&gt; to enable it within all non-bare repos or it can be set to a boolean value. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">저장소에서 &lt;code&gt;git pack-refs&lt;/code&gt; 를 실행 하면 HTTP와 같은 멍청한 전송을 통해 1.5.1.2 이전의 Git 버전에서이를 복제 할 수 없습니다. 이 변수는 &lt;code&gt;git gc&lt;/code&gt; 가 &lt;code&gt;git pack-refs&lt;/code&gt; 를 실행 할지 여부를 결정합니다 . 이 항목은 맨손이 아닌 모든 repos 내에서 사용 하도록 &lt;code&gt;notbare&lt;/code&gt; 로 설정하거나 부울 값으로 설정할 수 있습니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7e986747909ca421bbba8ffb613702a034d33901" translate="yes" xml:space="preserve">
          <source>Running git-filter-branch with either --tags or --all in your &amp;lt;rev-list options&amp;gt;. In order to retain annotated tags as annotated, you must use --tag-name-filter (and must not have restored from refs/original/ in a previously botched rewrite).</source>
          <target state="translated">&amp;lt;rev-list 옵션&amp;gt;에서 --tags 또는 --all을 사용하여 git-filter-branch를 실행하십시오. 주석이 달린 태그를 주석이있는 상태로 유지하려면 --tag-name-filter를 사용해야합니다 (그리고 이전에 botched 재기록에서 refs / original /에서 복원되지 않아야 함).</target>
        </trans-unit>
        <trans-unit id="48b168cafbabe8dd5092d4e93800a7944e72448e" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;git rerere&lt;/code&gt; command immediately after a conflicted automerge records the conflicted working tree files, with the usual conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; in them. Later, after you are done resolving the conflicts, running &lt;code&gt;git rerere&lt;/code&gt; again will record the resolved state of these files. Suppose you did this when you created the test merge of master into the topic branch.</source>
          <target state="translated">충돌 된 automerge 직후 &lt;code&gt;git rerere&lt;/code&gt; 명령을 실행하면 충돌하는 작업 트리 파일이 일반 충돌 마커 &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;=======&lt;/code&gt; 및 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 와 함께 기록됩니다. 나중에 충돌을 해결 한 후 &lt;code&gt;git rerere&lt;/code&gt; 를 다시 실행 하면 이러한 파일의 해결 된 상태가 기록됩니다. 마스터의 테스트 병합을 토픽 브랜치에 작성할 때이를 수행했다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="59dc4b3f413e4c03677af110697445ae971ad5c3" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;git update-index&lt;/code&gt; itself on the paths whose index entries are different from those from the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">실행 &lt;code&gt;git update-index&lt;/code&gt; 인덱스 항목로부터와는 다른 경로에 자체 &lt;code&gt;HEAD&lt;/code&gt; 커밋.</target>
        </trans-unit>
        <trans-unit id="22e727ddf0d0e8f34303d3a3ff629cb6f10d1775" translate="yes" xml:space="preserve">
          <source>Runs &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt;. It will automatically create a directory based on the basename of the URL passed to it; or if a second argument is passed; it will create a directory and work within that. It accepts all arguments that the &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; commands accept; with the exception of &lt;code&gt;--fetch-all&lt;/code&gt; and &lt;code&gt;--parent&lt;/code&gt;. After a repository is cloned, the &lt;code&gt;fetch&lt;/code&gt; command will be able to update revisions without affecting the working tree; and the &lt;code&gt;rebase&lt;/code&gt; command will be able to update the working tree with the latest changes.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 및 &lt;code&gt;fetch&lt;/code&gt; 를 실행 합니다 . 전달 된 URL의 기본 이름을 기반으로 디렉토리를 자동으로 작성합니다. 또는 두 번째 인수가 전달 된 경우 디렉토리를 생성하고 그 안에서 작동합니다. &lt;code&gt;init&lt;/code&gt; 및 &lt;code&gt;fetch&lt;/code&gt; 명령 이 허용하는 모든 인수를 허용합니다. &lt;code&gt;--fetch-all&lt;/code&gt; 및 &lt;code&gt;--parent&lt;/code&gt; 를 제외 하고 . 리포지토리가 복제 된 후 &lt;code&gt;fetch&lt;/code&gt; 명령은 작업 트리에 영향을주지 않으면 서 개정을 업데이트 할 수 있습니다. 그리고 &lt;code&gt;rebase&lt;/code&gt; 명령은 최신 변경 작업 트리를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="271b9f4ffa51b4716f220d02767212c2cbc90133" translate="yes" xml:space="preserve">
          <source>Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance), removing unreachable objects which may have been created from prior invocations of &lt;code&gt;git add&lt;/code&gt;, packing refs, pruning reflog, rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph.</source>
          <target state="translated">파일 리포지토리 압축 (디스크 공간을 줄이고 성능을 향상시키기 위해), &lt;code&gt;git add&lt;/code&gt; 의 이전 호출에서 생성 된 도달 할 수없는 객체 제거 , ref 패킹, reflog 정리, 메타 데이터 다시 재생 과 같은 여러 저장소 관리 작업을 현재 저장소 내에서 실행합니다. 오래된 작업 나무. commit-graph와 같은 보조 인덱스를 업데이트 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="9aa5449df2c27f8c453076898c93afa895c00117" translate="yes" xml:space="preserve">
          <source>SCM</source>
          <target state="translated">SCM</target>
        </trans-unit>
        <trans-unit id="c571b86549e49bf223cf648388c46288c2241b5a" translate="yes" xml:space="preserve">
          <source>SHA-1</source>
          <target state="translated">SHA-1</target>
        </trans-unit>
        <trans-unit id="312e98fedb54c7d53ac4e72bc404817b90ff078b" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git commit objects.</source>
          <target state="translated">Git 커밋 객체의 SHA-1 식별자.</target>
        </trans-unit>
        <trans-unit id="202b86696ac3129113c6d6b6693f7f6dc827b3d3" translate="yes" xml:space="preserve">
          <source>SHA-1 identifiers of Git tag objects.</source>
          <target state="translated">Git 태그 객체의 SHA-1 식별자.</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="1685ffa85727a883f0235855ad4fe17b10829246" translate="yes" xml:space="preserve">
          <source>SSH and File Transport</source>
          <target state="translated">SSH 및 파일 전송</target>
        </trans-unit>
        <trans-unit id="88179dba2afcc4bab1f73ecdf7a5b0b3ec852b33" translate="yes" xml:space="preserve">
          <source>SSH:</source>
          <target state="translated">SSH:</target>
        </trans-unit>
        <trans-unit id="4d1ffce8cc78d20fc8a69ac29d5637ff598777a6" translate="yes" xml:space="preserve">
          <source>SVN itself only stores times in UTC and nothing else. The regular svn client converts the UTC time to the local time (or based on the TZ= environment). This command has the same behaviour.</source>
          <target state="translated">SVN 자체는 시간을 UTC로만 저장하고 다른 것은 저장하지 않습니다. 일반 svn 클라이언트는 UTC 시간을 현지 시간으로 변환합니다 (또는 TZ = 환경 기준). 이 명령은 동작이 같습니다.</target>
        </trans-unit>
        <trans-unit id="e2462783325d1946b85fa4d6ac9becc9ddef189e" translate="yes" xml:space="preserve">
          <source>Sadly, many merges aren&amp;rsquo;t trivial. If there are files that have been added, moved or removed, or if both branches have modified the same file, you will be left with an index tree that contains &quot;merge entries&quot; in it. Such an index tree can 'NOT' be written out to a tree object, and you will have to resolve any such merge clashes using other tools before you can write out the result.</source>
          <target state="translated">안타깝게도 많은 합병은 사소하지 않습니다. 추가, 이동 또는 제거 된 파일이 있거나 두 가지 모두 동일한 파일을 수정 한 경우 &quot;병합 항목&quot;이 포함 된 색인 트리가 남게됩니다. 이러한 인덱스 트리는 트리 개체에 'NOT'기록 될 수 없으며 결과를 기록하기 전에 다른 도구를 사용하여 이러한 병합 충돌을 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="c65f36deb58ec8692004d5f340eea1de5007232b" translate="yes" xml:space="preserve">
          <source>Salvage your data out of another SCM people love to hate</source>
          <target state="translated">사람들이 싫어하는 다른 SCM에서 데이터를 구하십시오</target>
        </trans-unit>
        <trans-unit id="7da4c768ec454f900a2b009758758bcc4c497617" translate="yes" xml:space="preserve">
          <source>Same as --mode but take mode encoded as a number. This is mainly used by other commands that have already parsed layout mode.</source>
          <target state="translated">--mode와 동일하지만 숫자로 인코딩 된 모드를 사용합니다. 주로 레이아웃 모드를 구문 분석 한 다른 명령에서 주로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2542706528d734cb50feb9bca7bdca378a008047" translate="yes" xml:space="preserve">
          <source>Same as --receive-pack=&amp;lt;git-receive-pack&amp;gt;.</source>
          <target state="translated">--receive-pack = &amp;lt;git-receive-pack&amp;gt;과 같습니다.</target>
        </trans-unit>
        <trans-unit id="70cac94413c3847bbe37b2e76044db02ae24aecd" translate="yes" xml:space="preserve">
          <source>Same as --upload-pack=&amp;lt;git-upload-pack&amp;gt;.</source>
          <target state="translated">--upload-pack = &amp;lt;git-upload-pack&amp;gt;과 같습니다.</target>
        </trans-unit>
        <trans-unit id="11461b23fcbc2ba6f710e4af2d4a469477579e7e" translate="yes" xml:space="preserve">
          <source>Same as -m, except that unmerged entries are discarded instead of failing. When used with &lt;code&gt;-u&lt;/code&gt;, updates leading to loss of working tree changes will not abort the operation.</source>
          <target state="translated">병합되지 않은 항목은 실패하는 대신 삭제된다는 점을 제외하고는 -m과 동일합니다. &lt;code&gt;-u&lt;/code&gt; 와 함께 사용하면 작업 트리 변경이 손실되는 업데이트로 인해 작업이 중단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e08595bc7c109d0c181056c12a1b3a6619cb3279" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=-1&lt;/code&gt;; this is the default.</source>
          <target state="translated">&lt;code&gt;--max-depth=-1&lt;/code&gt; 과 동일 ; 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="fca1bc99780bb8b21bf845d99b40ff5d1d2ac6f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--max-depth=0&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;--max-depth=0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96a9581032de7bee365152ab2d305df909cefe47" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--untracked-cache&lt;/code&gt;. Provided for backwards compatibility with older versions of Git where &lt;code&gt;--untracked-cache&lt;/code&gt; used to imply &lt;code&gt;--test-untracked-cache&lt;/code&gt; but this option would enable the extension unconditionally.</source>
          <target state="translated">&lt;code&gt;--untracked-cache&lt;/code&gt; 와 동일 합니다 . &lt;code&gt;--untracked-cache&lt;/code&gt; 가 &lt;code&gt;--test-untracked-cache&lt;/code&gt; untracked-cache 를 암시하는 데 사용되는 이전 버전의 Git과의 하위 호환성을 제공 하지만이 옵션은 무조건 확장을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="a5a8ba00c3dc1ba60d32f039cdc49baa9cb59855" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;--verify&lt;/code&gt; but shortens the object name to a unique prefix with at least &lt;code&gt;length&lt;/code&gt; characters. The minimum length is 4, the default is the effective value of the &lt;code&gt;core.abbrev&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;--verify&lt;/code&gt; 와 동일 하지만 객체 이름을 최소 &lt;code&gt;length&lt;/code&gt; 문자 를 가진 고유 접두어로 줄 입니다. 최소 길이는 4이며 기본값은 &lt;code&gt;core.abbrev&lt;/code&gt; 구성 변수 의 유효 값입니다 ( &lt;a href=&quot;git-config&quot;&gt;git-config [1] 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="beb85fd3b6ce0903e1b1188af0e814b86495c278" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-a&lt;/code&gt;, unless &lt;code&gt;-d&lt;/code&gt; is used. Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack. Unreachable objects are never intentionally added to a pack, even when repacking. This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed. Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next &lt;code&gt;git gc&lt;/code&gt; invocation. See &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; 를 사용 하지 않는 한 &lt;code&gt;-a&lt;/code&gt; 와 동일합니다 . 그런 다음 이전 팩에서 도달 할 수없는 객체는 이전 팩에 남아 있지 않고 느슨하고 포장이 풀린 객체가됩니다. 다시 포장 할 때에도 도달 할 수없는 객체는 의도적으로 팩에 추가되지 않습니다. 이 옵션은 연결할 수없는 개체가 이전 팩에 그대로 남아서 제거되는 것을 즉시 방지합니다. 대신, 다음 &lt;code&gt;git gc&lt;/code&gt; 호출 과 함께 일반적인 만기 규칙에 따라 도달 할 수없는 느슨한 오브젝트를 제거 합니다. &lt;a href=&quot;git-gc&quot;&gt;git-gc [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff89956ed03482de99fb1d76b0d3426c3c4d4dbc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;git gui citool&lt;/code&gt; (above).</source>
          <target state="translated">&lt;code&gt;git gui citool&lt;/code&gt; (위) 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7f884bfa0e72398b065720ac608779bf0b3372aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;group&lt;/code&gt;, but make the repository readable by all users.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; 과 동일 하지만 모든 사용자가 저장소를 읽을 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="205ac751a2a286c261ce1f6df5fb256a7d0ade8e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; except #commentary is not removed.</source>
          <target state="translated">#commentary가 제거되지 않은 것을 제외하고는 &lt;code&gt;strip&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0f92cc3366a36ceb57ccdcea56b7f1a8684ec893" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;strip&lt;/code&gt; if the message is to be edited. Otherwise &lt;code&gt;whitespace&lt;/code&gt;.</source>
          <target state="translated">메시지를 편집 할 경우 &lt;code&gt;strip&lt;/code&gt; 과 동일 합니다. 그렇지 않으면 &lt;code&gt;whitespace&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a8e2d0cf73dc026e93d34c61a101205dcf767e79" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;whitespace&lt;/code&gt; except that everything from (and including) the line found below is truncated, if the message is to be edited. &quot;&lt;code&gt;#&lt;/code&gt;&quot; can be customized with core.commentChar.</source>
          <target state="translated">동일 &lt;code&gt;whitespace&lt;/code&gt; 메시지를 편집 할 경우 선이 아래의 발견 (등)에서 그 모든 것을 제외하고는 잘립니다. &quot; &lt;code&gt;#&lt;/code&gt; &quot;는 core.commentChar로 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe1030b7b6d63ee2bb092f0de364ad5810d90270" translate="yes" xml:space="preserve">
          <source>Same as above, but the format is inferred from the output file.</source>
          <target state="translated">위와 동일하지만 출력 파일에서 형식이 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="a3268177cdd166695f9afb4cfbb0a75c5f082adf" translate="yes" xml:space="preserve">
          <source>Same as above, but using the builtin tar.gz handling.</source>
          <target state="translated">위와 동일하지만 내장 tar.gz 처리를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="316b1b6951145c81e2f6393678faa4164cbc2393" translate="yes" xml:space="preserve">
          <source>Same as above.</source>
          <target state="translated">같은 상기와.</target>
        </trans-unit>
        <trans-unit id="eceeb52d76c39f830be2caa3098c992d4c73cfa3" translate="yes" xml:space="preserve">
          <source>Same as the default mode, but does not prune some history.</source>
          <target state="translated">기본 모드와 동일하지만 일부 기록을 제거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="db6a81d8b3d32523ab23e52ba20bfc5ab9af3c20" translate="yes" xml:space="preserve">
          <source>Save that patch to a file in UNIX mailbox format. Call it a.patch, say.</source>
          <target state="translated">해당 패치를 UNIX 메일 박스 형식의 파일로 저장하십시오. 그것을 패치라고 부르십시오.</target>
        </trans-unit>
        <trans-unit id="17bbcc9ad074be63eea942d50d7cda88e930f8d2" translate="yes" xml:space="preserve">
          <source>Save the process id in &lt;code&gt;file&lt;/code&gt;. Ignored when the daemon is run under &lt;code&gt;--inetd&lt;/code&gt;.</source>
          <target state="translated">프로세스 ID를 &lt;code&gt;file&lt;/code&gt; 에 저장하십시오 . &lt;code&gt;--inetd&lt;/code&gt; 에서 데몬이 실행될 때 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="15259adada7ee3df28dbdafd2e3ca8076b5f4a15" translate="yes" xml:space="preserve">
          <source>Save your local modifications to a new &lt;code&gt;stash entry&lt;/code&gt; and roll them back to HEAD (in the working tree and in the index). The &amp;lt;message&amp;gt; part is optional and gives the description along with the stashed state.</source>
          <target state="translated">로컬 수정 사항을 새 &lt;code&gt;stash entry&lt;/code&gt; 저장 하고 HEAD (작업 트리 및 색인)로 롤백하십시오. &amp;lt;message&amp;gt; 부분은 선택 사항이며 숨김 상태와 함께 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ea6661dbb08a609142e04fb33fe9864a0d55a0fb" translate="yes" xml:space="preserve">
          <source>Saving a log and replaying it</source>
          <target state="translated">로그 저장 및 재생</target>
        </trans-unit>
        <trans-unit id="256f734933def8151aae2c73ad04adbfd2f5710e" translate="yes" xml:space="preserve">
          <source>Say you modify a branch with &lt;a href=&quot;#fixing-mistakes&quot;&gt;&lt;code&gt;git reset --hard&lt;/code&gt;&lt;/a&gt;, and then realize that the branch was the only reference you had to that point in history.</source>
          <target state="translated">&lt;a href=&quot;#fixing-mistakes&quot;&gt; &lt;code&gt;git reset --hard&lt;/code&gt; 를 사용&lt;/a&gt; 하여 브랜치를 수정하고 브랜치가 히스토리 에서 해당 지점에 대한 유일한 참조임을 인식하십시오.</target>
        </trans-unit>
        <trans-unit id="8f7159e28d007390950b554c8900463bad34bfe1" translate="yes" xml:space="preserve">
          <source>Scan &lt;code&gt;Documentation/&lt;/code&gt; for other stuff left out; in particular:</source>
          <target state="translated">다른 것들이 없는지 &lt;code&gt;Documentation/&lt;/code&gt; 스캔하십시오 ; 특히:</target>
        </trans-unit>
        <trans-unit id="deb6721d53898cf2febea6ade63b57224507999f" translate="yes" xml:space="preserve">
          <source>Scan email archives for other stuff left out</source>
          <target state="translated">다른 자료가 있는지 이메일 아카이브를 스캔하십시오.</target>
        </trans-unit>
        <trans-unit id="b53f30bf6406e325a3dfac40a2ba03843362a3a9" translate="yes" xml:space="preserve">
          <source>Scan man pages to see if any assume more background than this manual provides.</source>
          <target state="translated">매뉴얼 페이지를 스캔하여이 매뉴얼이 제공하는 것보다 더 많은 배경을 가지고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d1e8a9a092bccee1d0d707e7539fd2ea1ed01f5c" translate="yes" xml:space="preserve">
          <source>Scheme (e.g., &lt;code&gt;https&lt;/code&gt; in &lt;code&gt;https://example.com/&lt;/code&gt;). This field must match exactly between the config key and the URL.</source>
          <target state="translated">제도 (예를 들어, &lt;code&gt;https&lt;/code&gt; 에 &lt;code&gt;https://example.com/&lt;/code&gt; ). 이 필드는 구성 키와 URL이 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e05e395ff307d005e7e52d5a8d5532c4a364bbf" translate="yes" xml:space="preserve">
          <source>Search files in the current directory that is not managed by Git.</source>
          <target state="translated">Git이 관리하지 않는 현재 디렉토리에서 파일을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="b73a02f095e861ccf3246948d40c910baf6a01fe" translate="yes" xml:space="preserve">
          <source>Search for regressions:</source>
          <target state="translated">회귀 검색</target>
        </trans-unit>
        <trans-unit id="f6032042d4f48d36194af91f9c0f4e8546fac517" translate="yes" xml:space="preserve">
          <source>Search strategy</source>
          <target state="translated">검색 전략</target>
        </trans-unit>
        <trans-unit id="a28ca13aea7d9b0267664d0e0585dd1effd660f3" translate="yes" xml:space="preserve">
          <source>Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; will be used. Any single-valued variable set in this file will be overwritten by whatever is in &lt;code&gt;~/.gitconfig&lt;/code&gt;. It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently.</source>
          <target state="translated">두 번째 사용자 별 구성 파일 $ XDG_CONFIG_HOME이 설정되지 않거나 비어 있으면 &lt;code&gt;$HOME/.config/git/config&lt;/code&gt; 가 사용됩니다. 이 파일에 설정된 단일 값 변수는 &lt;code&gt;~/.gitconfig&lt;/code&gt; 에있는 내용으로 덮어 씁니다 . 이 파일에 대한 지원이 상당히 최근에 추가되었으므로 때때로 이전 버전의 Git을 사용하는 경우이 파일을 작성하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="08bcebdee7825304638fc52fdc68926c0d85826a" translate="yes" xml:space="preserve">
          <source>Second user-specific credentials file. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is not set or empty, &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; will be used. Any credentials stored in this file will not be used if &lt;code&gt;~/.git-credentials&lt;/code&gt; has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it.</source>
          <target state="translated">두 번째 사용자 별 자격 증명 파일. 경우 &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; 설정하거나 비어 있지 않은, &lt;code&gt;$HOME/.config/git/credentials&lt;/code&gt; 사용됩니다. &lt;code&gt;~/.git-credentials&lt;/code&gt; 에 일치하는 자격 증명 이있는 경우이 파일에 저장된 자격 증명이 사용되지 않습니다 . 때때로 지원하지 않는 구 버전의 Git을 사용하는 경우이 파일을 작성하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b5c3361c98212e9d042aaaa5b0c10d9a1a465d8b" translate="yes" xml:space="preserve">
          <source>Second, repositories found in &lt;code&gt;/pub/scm/&lt;/code&gt; and &lt;code&gt;/var/git/&lt;/code&gt; will be accessible through &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; and &lt;code&gt;http://git.example.org/var/&lt;/code&gt;. You can add as many project roots as you want by adding rewrite rules like the third and the fourth.</source>
          <target state="translated">둘째, &lt;code&gt;/pub/scm/&lt;/code&gt; 및 &lt;code&gt;/var/git/&lt;/code&gt; 는 &lt;code&gt;http://git.example.org/scm/&lt;/code&gt; 및 &lt;code&gt;http://git.example.org/var/&lt;/code&gt; 를 통해 액세스 할 수 있습니다 . 세 번째와 네 번째와 같은 다시 쓰기 규칙을 추가하여 원하는 수의 프로젝트 루트를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d5abfbb7006b1c4a1d7df3783d45b48d9d41d48" translate="yes" xml:space="preserve">
          <source>Seconds wait before reconnecting to smtp server. See also the &lt;code&gt;--relogin-delay&lt;/code&gt; option of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">smtp 서버에 다시 연결하기 전에 대기합니다. &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; 의 &lt;code&gt;--relogin-delay&lt;/code&gt; 옵션 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="16adbe8ae2ec1d5ce021aca603249932e4af29cb" translate="yes" xml:space="preserve">
          <source>Sections can be further divided into subsections. To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below:</source>
          <target state="translated">섹션은 하위 섹션으로 더 나눌 수 있습니다. 하위 섹션을 시작하려면 아래 예제와 같이 섹션 헤더에서 이름을 공백으로 구분하여 큰 따옴표로 묶으십시오.</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="cb670e82b44c131414fdd62cec2e2271a0c3e1ce" translate="yes" xml:space="preserve">
          <source>See &quot;Reset, restore and revert&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for the differences between the three commands.</source>
          <target state="translated">세 명령의 차이점에 대해서는 &lt;a href=&quot;git&quot;&gt;git [1]의&lt;/a&gt; &quot;재설정, 복원 및 되돌리기&quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="449a31d4b9b49095d0b90df41f056d43c8512f47" translate="yes" xml:space="preserve">
          <source>See &amp;ldquo;Responses To Commands&amp;rdquo; below for details about how to read this output safely.</source>
          <target state="translated">이 출력을 안전하게 읽는 방법에 대한 자세한 내용은 아래의 &quot;명령에 대한 응답&quot;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="814949d103c65b43b61081c8789235b00c3553fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;api-trace2&quot;&gt;Trace2 설명서&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="b53c26f4c249563ab9682d7689da982420c04631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-add&quot;&gt;git-add [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa55cebc3f97b3ec5f8f25b42d230a3ac0a7871d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;git-config&quot;&gt;자식-설정을 [1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="927ac170ac73e3dd929a2427d80cab2492ff1deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for core variables and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for settings related to diff generation.</source>
          <target state="translated">핵심 변수에 대해서는 &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; 및 diff 생성과 관련된 설정에 대해서는 &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29e0897ca1f4dba055ef02d2ee4ea34bca59c450" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details on the configuration options mentioned above and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for more details on the refspec syntax.</source>
          <target state="translated">위에서 언급 한 구성 옵션에 대한 자세한 내용 은 &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; 및 refspec 구문에 대한 자세한 내용은 &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c85dd3188b261218c6ce78dddb7cf27f02c4e498" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for the full list of supported options.</source>
          <target state="translated">지원되는 전체 옵션 목록은 &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="873eafed92c6d143cde4cdd22e9f2f62fb8eab44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details, including how conflicts are presented and handled.</source>
          <target state="translated">충돌 표시 및 처리 방법을 포함하여 자세한 내용 은 &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1dbf552c05185bb952ce9cddaaca48b3f486c1e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for some hints on resolving such conflicts.</source>
          <target state="translated">이러한 충돌을 해결하는 데 대한 힌트는 &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="750a5c09f00fba2da655305aeb20c963fba7eb6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for options to generate new packs and replace existing ones.</source>
          <target state="translated">새 팩을 생성하고 기존 팩을 교체하는 옵션에 대해서는 &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f51d5b8b3fb6117dc301434a5ecd4dd13bfc3fc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description.</source>
          <target state="translated">설명은 &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="55b7b7d87b2ef94a0c0800814d27411d440df3c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; for description. Note that this setting is not subject to the &lt;code&gt;identity&lt;/code&gt; mechanism.</source>
          <target state="translated">설명은 &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; 을 참조하십시오 . 이 설정에는 &lt;code&gt;identity&lt;/code&gt; 메커니즘이 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="356db06bc40009203665e547b41d48a6fe47dfb9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="816c081fd3a62310db506118ba38e561a6d69e40" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt; for the details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a58028451af0f9f542d0d8f8d9f591126508cad5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more general info on hook execution.</source>
          <target state="translated">후크 실행에 대한 일반적인 정보는 &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba609b5467f233e457aa9eddbdd4e4c279fc02c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for a detailed explanation of the syntax. You can also place .gitignore files in other directories in your working tree, and they will apply to those directories and their subdirectories. The &lt;code&gt;.gitignore&lt;/code&gt; files can be added to your repository like any other files (just run &lt;code&gt;git add
.gitignore&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt;, as usual), which is convenient when the exclude patterns (such as patterns matching build output files) would also make sense for other users who clone your repository.</source>
          <target state="translated">구문에 대한 자세한 설명은 &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt; 를 참조하십시오 . 작업 트리의 다른 디렉토리에 .gitignore 파일을 배치 할 수 있으며 해당 디렉토리 및 해당 서브 디렉토리에 적용됩니다. &lt;code&gt;.gitignore&lt;/code&gt; 의 파일을 다른 파일처럼 저장소에 추가 할 수 있습니다 (다만 실행 &lt;code&gt;git add .gitignore&lt;/code&gt; 와 &lt;code&gt;git commit&lt;/code&gt; 평소처럼)도에 대한 이해 것 (예 : 빌드 출력 파일을 일치 패턴과 같은) 패턴을 제외 할 때 편리하다, 저장소를 복제하는 다른 사용자</target>
        </trans-unit>
        <trans-unit id="6c08679dcde5f574a046d2c372d4d13c77c14f09" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for more information. The rule of thumb is do not make any assumption about whether a path belongs to $GIT_DIR or $GIT_COMMON_DIR when you need to directly access something inside $GIT_DIR. Use &lt;code&gt;git rev-parse --git-path&lt;/code&gt; to get the final path.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt; 를 참조하십시오. 경험상 $ GIT_DIR 내부에 직접 액세스해야 할 경우 경로가 $ GIT_DIR 또는 $ GIT_COMMON_DIR에 속하는지 여부를 가정하지 않습니다. 최종 경로를 얻으려면 &lt;code&gt;git rev-parse --git-path&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a0cffbb9b88d8945c0266619dda8f84ab7a60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; to get started, then see &lt;a href=&quot;giteveryday&quot;&gt;giteveryday[7]&lt;/a&gt; for a useful minimum set of commands. The &lt;a href=&quot;user-manual&quot;&gt;Git User&amp;rsquo;s Manual&lt;/a&gt; has a more in-depth introduction.</source>
          <target state="translated">참조 &lt;a href=&quot;gittutorial&quot;&gt;[7] gittutorial은&lt;/a&gt; 다음을 참조하십시오 시작하는 &lt;a href=&quot;giteveryday&quot;&gt;giteveryday [7]&lt;/a&gt; 명령 유용한 최소 세트를. &lt;a href=&quot;user-manual&quot;&gt;망할 놈의 사용 설명서는&lt;/a&gt; 좀 더 깊이있는 소개가 있습니다.</target>
        </trans-unit>
        <trans-unit id="edb8fa06792cc06c9610f82e7507e11aaf0b3a79" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for description.</source>
          <target state="translated">설명은 &lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="551344f7c6d18aeed126c268a4887b60ea41a732" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for description.</source>
          <target state="translated">설명은 &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b24fd2d7766898a78228977078b6f143b9eddd17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows[7]&lt;/a&gt; for an overview of recommended workflows.</source>
          <target state="translated">권장되는 워크 플로우에 대한 개요는 &lt;a href=&quot;gitworkflows&quot;&gt;gitworkflows [7]&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5aaf5106e04565ca03205c2325b61134a265836" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; for gitweb source code, browsed using gitweb itself.</source>
          <target state="translated">gitweb 자체를 사용하여 탐색 한 gitweb 소스 코드는 &lt;a href=&quot;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&quot;&gt;http://repo.or.cz/w/git.git/tree/HEAD:/gitweb/&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf4e44a1f9a750a558dfae089d3110695a154f52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;multi-pack-index&quot;&gt;The Multi-Pack-Index Design Document&lt;/a&gt; and &lt;a href=&quot;pack-format&quot;&gt;The Multi-Pack-Index Format&lt;/a&gt; for more information on the multi-pack-index feature.</source>
          <target state="translated">참조 &lt;a href=&quot;multi-pack-index&quot;&gt;멀티 팩 - 인덱스 디자인 문서&lt;/a&gt; 및 &lt;a href=&quot;pack-format&quot;&gt;멀티 팩 - 인덱스 형식&lt;/a&gt; 멀티 팩 - 인덱스 기능에 대한 자세한 정보를.</target>
        </trans-unit>
        <trans-unit id="119e1af35250f977a84e7e9b44e17bab322217d6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;filemodify&lt;/code&gt; above for a detailed description of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 에 대한 자세한 설명은 위의 &lt;code&gt;filemodify&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5e5425cc0264ed1e0714353419a5218265f25cb" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;p4 help revisions&lt;/code&gt; for the full syntax of p4 revision specifiers.</source>
          <target state="translated">p4 개정 지정자의 전체 구문은 &lt;code&gt;p4 help revisions&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="349e8ba30a5911b964eb56ddd5398d0c455fca71" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;pull.rebase&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; and &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; if you want to make &lt;code&gt;git pull&lt;/code&gt; always use &lt;code&gt;--rebase&lt;/code&gt; instead of merging.</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; 이 병합 대신 항상 &lt;code&gt;--rebase&lt;/code&gt; 를 사용 하도록하려면 &lt;a href=&quot;git-config&quot;&gt;git-config [1]의 &lt;/a&gt; &lt;code&gt;pull.rebase&lt;/code&gt; , &lt;code&gt;branch.&amp;lt;name&amp;gt;.rebase&lt;/code&gt; 및 &lt;code&gt;branch.autoSetupRebase&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6821589cea1a5f5eeaa157482f5875c8dd6c83e8" translate="yes" xml:space="preserve">
          <source>See OPTIONS for a list of currently defined options.</source>
          <target state="translated">현재 정의 된 옵션 목록은 옵션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a7e489653a4ac322711d151924724bebeaab7578" translate="yes" xml:space="preserve">
          <source>See REF LIST ATTRIBUTES for a list of currently defined attributes.</source>
          <target state="translated">현재 정의 된 속성의 목록은 참조 목록 속성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="ed7577b94e1ee464c75f81cac37b66a6926c7436" translate="yes" xml:space="preserve">
          <source>See also &quot;Repositories&quot; and later subsections in &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt; 맨 페이지의 &quot;리포지토리&quot;및 이후 하위 섹션도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52af4d47e0ed6dc8c81958e8938b6aa167c96389" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcd469ab484a6e7e06726ac525a02976b65d3216" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#git-quick-start&quot;&gt;Git Quick Reference&lt;/a&gt; for a brief overview of Git commands, without any explanation.</source>
          <target state="translated">설명없이 Git 명령에 대한 간략한 개요 는 &lt;a href=&quot;#git-quick-start&quot;&gt;Git 빠른 참조&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="776296c90f2638f4facdccd84ed267d15501958e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for a more user-friendly way to do some of the most common operations on the index.</source>
          <target state="translated">인덱스에서 가장 일반적인 작업을 수행하는보다 사용자 친화적 인 방법 은 &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d2d6e7dcb0c9c7bc63cd26813647bc47c39be07" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="07d3f2d4e9abbb86fc4947deaf4abd1a8839b08a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; and &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&lt;/a&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&quot;&gt;https://lore.kernel.org/git/7v64clg5u9.fsf@assigned-by-dhcp.cox.net/&lt;/a&gt; 및 &lt;a href=&quot;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns.org/&quot;&gt;https://lore.kernel.org/git/7vy7ej9g38.fsf@gitster.siamese.dyndns&lt;/a&gt; 도 참조 하십시오. 자세한 내용은 .org / 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1c13efbf0ce0a3c500629d1824fbdc470face67d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;%avatar_size&lt;/code&gt; with pixel sizes for icons and avatars (&quot;default&quot; is used for one-line like &quot;log&quot; and &quot;shortlog&quot;, &quot;double&quot; is used for two-line like &quot;commit&quot;, &quot;commitdiff&quot; or &quot;tag&quot;). If the default font sizes or lineheights are changed (e.g. via adding extra CSS stylesheet in &lt;code&gt;@stylesheets&lt;/code&gt;), it may be appropriate to change these values.</source>
          <target state="translated">아이콘 및 아바타의 픽셀 크기를 가진 &lt;code&gt;%avatar_size&lt;/code&gt; 참조 ( &quot;default&quot;는 &quot;log&quot;및 &quot;shortlog&quot;와 같은 한 줄에 사용되며, &quot;double&quot;은 &quot;commit&quot;, &quot;commitdiff&quot;또는 &quot;tag와 같은 두 줄에 사용됨) &quot;). 기본 글꼴 크기 또는 선 높이가 변경되면 (예 : &lt;code&gt;@stylesheets&lt;/code&gt; 에 CSS 스타일 시트를 추가하여 ) 이러한 값을 변경하는 것이 적절할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef4059c160d59845887bc762e1d3b94b36ac9cb5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; 및 &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; 의 PRUNING 섹션 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97a52221a6fcfc08e94858dbbd32d431c7460334" translate="yes" xml:space="preserve">
          <source>See also INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">아래의 호환되지 않는 옵션도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="da70e539ebd47fc0666afc11774bbce890e2d57d" translate="yes" xml:space="preserve">
          <source>See also REBASING MERGES and INCOMPATIBLE OPTIONS below.</source>
          <target state="translated">아래의 거부 거부 및 호환성 옵션도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e1cfc7a6ae7eb249f6af4e953ed0aa13e7a9f32c" translate="yes" xml:space="preserve">
          <source>See also more involved example in &quot;Controlling access to Git repositories&quot; subsection on &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; manpage.</source>
          <target state="translated">&lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt; 맨 페이지의 &quot;Git 리포지토리에 대한 액세스 제어&quot;하위 섹션의 관련 예제도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a90b35f1bca4c9661af072a420272419d14c9fa7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;howto-index&quot;&gt;howto&lt;/a&gt; documents for some useful examples.</source>
          <target state="translated">유용한 예 는 &lt;a href=&quot;howto-index&quot;&gt;하우투&lt;/a&gt; 문서 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6727f96125b7533ade941bf6b96be91f1faec003" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--amend&lt;/code&gt; option to &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]에&lt;/a&gt; 대한 &lt;code&gt;--amend&lt;/code&gt; 옵션 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d4e5e0e34b4d53289a1425851b494735221ec25" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--negotiation-tip&lt;/code&gt; option for &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]에&lt;/a&gt; 대한 &lt;code&gt;--negotiation-tip&lt;/code&gt; 옵션 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="393dae9d9c5b724b3e92a8007628ecdf490bf229" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; configuration variable documented in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;git-config&quot;&gt;git-config [1]에&lt;/a&gt; 설명 된 &lt;code&gt;fetch.negotiationAlgorithm&lt;/code&gt; 구성 변수 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b34c3a53a35e7fde45b0dcf380dd07a6f67e09b3" translate="yes" xml:space="preserve">
          <source>See below for a detailed description of the &lt;code&gt;data&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 명령 에 대한 자세한 설명은 아래를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b157460c4f4c3bf67bdbeab995004fb808185e8" translate="yes" xml:space="preserve">
          <source>See the &quot;CONFIGURATION FILE&quot; section of &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details on the configuration file. The file is plain text, so you can also edit it with your favorite editor.</source>
          <target state="translated">구성 파일에 대한 자세한 내용 은 &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; 의 &quot;CONFIGURATION FILE&quot;섹션 을 참조하십시오. 파일은 일반 텍스트이므로 원하는 편집기로 편집 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1149bacaf9085ecc4180307d6ae05e8d61573cee" translate="yes" xml:space="preserve">
          <source>See the &quot;PRETTY FORMATS&quot; section for some additional details for each format. When &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; part is omitted, it defaults to &lt;code&gt;medium&lt;/code&gt;.</source>
          <target state="translated">각 형식에 대한 자세한 내용은 &quot;PRETTY FORMATS&quot;섹션을 참조하십시오. 경우 &lt;code&gt;=&amp;lt;format&amp;gt;&lt;/code&gt; 부분에, 디폴트 생략 &lt;code&gt;medium&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16b5734b1a38c0fca2aa75fc8f5afb5e38171b76" translate="yes" xml:space="preserve">
          <source>See the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; configuration for a way to carry notes across commands that rewrite commits.</source>
          <target state="translated">커밋을 다시 쓰는 명령에서 메모를 전달하는 방법은 &quot;notes.rewrite. &amp;lt;command&amp;gt;&quot;구성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="37c9890c0abc7db617d319f8c623b95994d12d01" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; and &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; manpages for further usage notes.</source>
          <target state="translated">자세한 사용법 은 &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; 및 &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; 맨 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="664aa71d1d2c6ad85c41bdce7b1df31a05aeb0c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; command to learn how to create and verify tag objects. (Note that &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; can also be used to create &quot;lightweight tags&quot;, which are not tag objects at all, but just simple references whose names begin with &lt;code&gt;refs/tags/&lt;/code&gt;).</source>
          <target state="translated">태그 객체를 생성하고 확인하는 방법 은 &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; 명령을 참조하십시오 . ( &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; 은 태그 객체가 아니라 &quot; &lt;code&gt;refs/tags/&lt;/code&gt; 시작하는 단순한 참조 인 &quot;경량 태그&quot;를 만드는 데에도 사용될 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="d438ee28fcc5eac2c57090871716c0835edb3fb6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-merge How-To&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;결함 복구 병합 사용법&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="36ef80def8fdcd62acbd00beaaea20020f8c5e10" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--pretty&lt;/code&gt; option in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; man page for more display options.</source>
          <target state="translated">더 많은 표시 옵션에 대해서는 &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; 매뉴얼 페이지 에서 &lt;code&gt;--pretty&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4059094394364c65c4e256eefa4143bc85285e53" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; option above for more details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;--tool=&amp;lt;tool&amp;gt;&lt;/code&gt; 의 --tool = &amp;lt;tool&amp;gt; 옵션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cdbbd93582a076d15bd34c470fc66d5137cf3c4d" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;--trust-exit-code&lt;/code&gt; option above for more details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;--trust-exit-code&lt;/code&gt; 의 --trust-exit-code 옵션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8e91773464e68ddb68c67818ddc930117958012" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.auto&lt;/code&gt; option in the &quot;CONFIGURATION&quot; section below for how this heuristic works.</source>
          <target state="translated">이 휴리스틱 작동 방식은 아래 &quot;구성&quot;섹션에서 &lt;code&gt;gc.auto&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3aa11a07b044aa013b3901191823f51922a8ff20" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; configuration variable below. When in use, it&amp;rsquo;ll affect how the auto pack limit works.</source>
          <target state="translated">아래의 &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; 구성 변수를 참조하십시오. 사용 중에는 자동 팩 제한 작동 방식에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="3053c5245151cb0daaf5d132e8a14e630a595774" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt; 의 &lt;code&gt;pathspec&lt;/code&gt; 항목을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="75fe9e67c24619f5763d970fe2b63e0643ff0b35" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;pickaxe&lt;/code&gt; entry in &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore[7]&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore [7]&lt;/a&gt; 의 &lt;code&gt;pickaxe&lt;/code&gt; 항목 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="83948d6384607ede7321a1e18da150f9a73d4146" translate="yes" xml:space="preserve">
          <source>See the CONFIGURATION section for &lt;code&gt;sendemail.multiEdit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sendemail.multiEdit&lt;/code&gt; 에 대해서는 구성 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7f0c85a1fe22d7a44e2019c11a92087c61176c9" translate="yes" xml:space="preserve">
          <source>See the PRUNING section below for more details.</source>
          <target state="translated">자세한 내용은 아래의 PRUNING 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="642ced677c18bf15d387f97024a58b4d20d0707e" translate="yes" xml:space="preserve">
          <source>See the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for what it&amp;rsquo;ll prune depending on various configuration.</source>
          <target state="translated">다양한 구성에 따라 정리되는 내용은 &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; 의 PRUNING 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b23758c15811b8a84155a82ad559efc97bcaf83" translate="yes" xml:space="preserve">
          <source>See the add subcommand for the definition of default remote.</source>
          <target state="translated">기본 원격 정의에 대해서는 add 부속 명령을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7b02d435af668a3154c5db21e5216702c6ccada1" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--depth&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; 의 &lt;code&gt;--depth&lt;/code&gt; 옵션 설명서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8a5c36fc0819626b74533177ce4ae892455a3785" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;code&gt;--window&lt;/code&gt; option in &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; 의 &lt;code&gt;--window&lt;/code&gt; 옵션 설명서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3fcb475ca761c4788b65bc17cc61cddb7ffeaae1" translate="yes" xml:space="preserve">
          <source>See the explanations of the &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt;, &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt;, and &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; options in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; 의 &lt;code&gt;remote.&amp;lt;name&amp;gt;.url&lt;/code&gt; , &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; 및 &lt;code&gt;remote.&amp;lt;name&amp;gt;.push&lt;/code&gt; 옵션에 대한 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8f33051f0ff2a32371d05cfc9580039d116c83c4" translate="yes" xml:space="preserve">
          <source>See the file gitweb/INSTALL in the Git source tree and &lt;a href=&quot;gitweb&quot;&gt;gitweb[1]&lt;/a&gt; for instructions on details setting up a permanent installation with a CGI or Perl capable server.</source>
          <target state="translated">CGI 또는 Perl 가능 서버를 사용한 영구 설치 설정에 대한 자세한 내용 은 Git 소스 트리의 gitweb / INSTALL 파일과 &lt;a href=&quot;gitweb&quot;&gt;gitweb [1]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7471ce55c909897f892e3510360e845c3a8c6f7d" translate="yes" xml:space="preserve">
          <source>See the notes on the quarantine environment below.</source>
          <target state="translated">아래의 검역 환경에 대한 참고 사항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38b41ff72286b874a0f3db64c92581ef765256ff" translate="yes" xml:space="preserve">
          <source>See the references in the &quot;description&quot; section to get started using Git. The following is probably more detail than necessary for a first-time user.</source>
          <target state="translated">Git 사용을 시작하려면 &quot;설명&quot;섹션의 참조를 참조하십시오. 다음은 처음 사용하는 사용자에게 필요한 것보다 자세한 내용 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="3a308d2b2b8eed03e46d2f6cf143cfa2acb546c2" translate="yes" xml:space="preserve">
          <source>See the section describing &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; above for a discussion of the matching semantics.</source>
          <target state="translated">일치하는 의미에 대한 설명은 위의 &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; 을 설명하는 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff8a65e5a8b50b2cd32960f644c92d05159f0bd7" translate="yes" xml:space="preserve">
          <source>See the section on &quot;Quarantine Environment&quot; in &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; for some caveats.</source>
          <target state="translated">주의 사항에 대해서는 &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]의&lt;/a&gt; &quot;Quarantine Environment&quot;섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f11ef173da292966d44f74e581bfe70f66e03523" translate="yes" xml:space="preserve">
          <source>See what files &lt;code&gt;git submodule&lt;/code&gt; created:</source>
          <target state="translated">&lt;code&gt;git submodule&lt;/code&gt; 생성 한 파일보기 :</target>
        </trans-unit>
        <trans-unit id="9cf656c9a09d4ac0135f6d95a0f9e062689ebbd6" translate="yes" xml:space="preserve">
          <source>Select &quot;Create a new project &amp;rarr; From CVS checkout&quot;</source>
          <target state="translated">&quot;새 프로젝트 생성 &amp;rarr; CVS 체크 아웃&quot;을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="4295d4906e2ecc1e09bb3b7dd2f7bb2e8c0aa11e" translate="yes" xml:space="preserve">
          <source>Select file contents to include in the next commit, then make the commit:</source>
          <target state="translated">다음 커밋에 포함 할 파일 내용을 선택한 다음 커밋합니다.</target>
        </trans-unit>
        <trans-unit id="5458b52d7bc655d716d7b187eb088a80fdb02862" translate="yes" xml:space="preserve">
          <source>Select non-matching lines.</source>
          <target state="translated">일치하지 않는 줄을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="8cb11cd07f748f144ab7c53fba5e088fa9457785" translate="yes" xml:space="preserve">
          <source>Select only files that are Added (&lt;code&gt;A&lt;/code&gt;), Copied (&lt;code&gt;C&lt;/code&gt;), Deleted (&lt;code&gt;D&lt;/code&gt;), Modified (&lt;code&gt;M&lt;/code&gt;), Renamed (&lt;code&gt;R&lt;/code&gt;), have their type (i.e. regular file, symlink, submodule, &amp;hellip;​) changed (&lt;code&gt;T&lt;/code&gt;), are Unmerged (&lt;code&gt;U&lt;/code&gt;), are Unknown (&lt;code&gt;X&lt;/code&gt;), or have had their pairing Broken (&lt;code&gt;B&lt;/code&gt;). Any combination of the filter characters (including none) can be used. When &lt;code&gt;*&lt;/code&gt; (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.</source>
          <target state="translated">추가 된 파일 ( &lt;code&gt;A&lt;/code&gt; ), 복사 된 파일 ( &lt;code&gt;C&lt;/code&gt; ), 삭제 된 파일 ( &lt;code&gt;D&lt;/code&gt; ), 수정 된 파일 ( &lt;code&gt;M&lt;/code&gt; ), 이름이 변경된 파일 ( &lt;code&gt;R&lt;/code&gt; ) 만 해당 유형 (예 : 일반 파일, symlink, 하위 모듈,&amp;hellip;)이 변경된 파일 ( &lt;code&gt;T&lt;/code&gt; )을 선택하십시오. 병합되지 않음 ( &lt;code&gt;U&lt;/code&gt; ), 알 수 없음 ( &lt;code&gt;X&lt;/code&gt; ) 또는 페어링 이 끊겼 습니다 ( &lt;code&gt;B&lt;/code&gt; ). 필터 문자의 조합 (없음 포함)을 사용할 수 있습니다. 경우 &lt;code&gt;*&lt;/code&gt; 는 (전부 아니면 없음) 조합에 추가되는 모든 경로는 비교 다른 기준에 일치하는 파일이 존재하는 경우 선택되고; 다른 기준과 일치하는 파일이 없으면 아무것도 선택되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d25b5bb0ae1f31c2bf194221afe3b7c5ccd5c79" translate="yes" xml:space="preserve">
          <source>Select the specified commit after loading the graph. Default behavior is equivalent to specifying &lt;code&gt;--select-commit=HEAD&lt;/code&gt;.</source>
          <target state="translated">그래프를로드 한 후 지정된 커밋을 선택하십시오. 기본 동작은 &lt;code&gt;--select-commit=HEAD&lt;/code&gt; 를 지정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="57773e54b07c6d2a3694e83fd05fece4b0d947e7" translate="yes" xml:space="preserve">
          <source>Send a &quot;thin&quot; pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic.</source>
          <target state="translated">네트워크 트래픽을 줄이기 위해 팩에 포함되지 않은 개체를 기반으로 개체를 축소 된 형태로 기록하는 &quot;씬&quot;팩을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="dba975b50e1dab9f5a9242dc7eff168b3f3c3097" translate="yes" xml:space="preserve">
          <source>Send a collection of patches as emails</source>
          <target state="translated">패치 모음을 이메일로 보내기</target>
        </trans-unit>
        <trans-unit id="68bbb0e77605fda568edfbf41010fd23ca67e845" translate="yes" xml:space="preserve">
          <source>Send a collection of patches from stdin to an IMAP folder</source>
          <target state="translated">stdin에서 IMAP 폴더로 패치 모음 보내기</target>
        </trans-unit>
        <trans-unit id="9e60bdff05a0f017374a45f7533dd42ce19f567b" translate="yes" xml:space="preserve">
          <source>Send archive back to git-archive</source>
          <target state="translated">아카이브를 git-archive로 다시 보내기</target>
        </trans-unit>
        <trans-unit id="06c77ce9ef53aee9301f7f13788f25846ac20a8c" translate="yes" xml:space="preserve">
          <source>Send emails even if safety checks would prevent it.</source>
          <target state="translated">안전 점검으로 인해 문제가 발생하더라도 이메일을 보내십시오.</target>
        </trans-unit>
        <trans-unit id="be63d2739b30ca972f203afdf956fffed1109d64" translate="yes" xml:space="preserve">
          <source>Send log messages to the specified destination. Note that this option does not imply --verbose, thus by default only error conditions will be logged. The &amp;lt;destination&amp;gt; must be one of:</source>
          <target state="translated">지정된 대상으로 로그 메시지를 보냅니다. 이 옵션은 --verbose를 의미하지 않으므로 기본적으로 오류 조건 만 기록됩니다. &amp;lt;대상&amp;gt;은 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="251405e1d50dced2d303a34b1887abbae618fd89" translate="yes" xml:space="preserve">
          <source>Send objects packed back to git-fetch-pack</source>
          <target state="translated">git-fetch-pack으로 다시 패킹 된 객체 보내기</target>
        </trans-unit>
        <trans-unit id="30587fd7018a9775c3e41757ae3e2ad3d70bd2fe" translate="yes" xml:space="preserve">
          <source>Send results to standard output instead of overwriting &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; 을 덮어 쓰지 않고 표준 출력으로 결과를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="3d06a389aa194b4adb3bdedb6cd48b760831d80a" translate="yes" xml:space="preserve">
          <source>Send the patch to yourself, exactly the way you would, except with To: and Cc: lines that do not contain the list and maintainer address.</source>
          <target state="translated">목록과 관리자 주소가 포함되지 않은 To : 및 Cc : 행을 제외하고는 원하는 방식으로 패치를 자신에게 보내십시오.</target>
        </trans-unit>
        <trans-unit id="ceafde86d6c97e1f3a1eee505d203dadbe2732aa" translate="yes" xml:space="preserve">
          <source>Sending</source>
          <target state="translated">Sending</target>
        </trans-unit>
        <trans-unit id="bbde4ea1647345dcea60ec05d6e174947edc5729" translate="yes" xml:space="preserve">
          <source>Sending &lt;strong&gt;SIGUSR1&lt;/strong&gt; to the &lt;code&gt;git fast-import&lt;/code&gt; process ends the current packfile early, simulating a &lt;code&gt;checkpoint&lt;/code&gt; command. The impatient operator can use this facility to peek at the objects and refs from an import in progress, at the cost of some added running time and worse compression.</source>
          <target state="translated">보내기 &lt;strong&gt;SIGUSR1을&lt;/strong&gt; 받는 &lt;code&gt;git fast-import&lt;/code&gt; 처리하는 것은 시뮬레이션, 초기 현재 packfile을 종료 &lt;code&gt;checkpoint&lt;/code&gt; 명령을 사용합니다. 참을성이없는 운전자는이 기능을 사용하여 실행 시간을 추가하고 압축률을 높이는 대신 진행중인 가져 오기를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69d9f7cb6992812d3ae67c5832e95e51eb94b31e" translate="yes" xml:space="preserve">
          <source>Sends missing objects to remote repository, and updates the remote branch.</source>
          <target state="translated">누락 된 개체를 원격 저장소로 보내고 원격 분기를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="23bbe7eedad5f66236da6f21a05fbf3a6d0c4e2b" translate="yes" xml:space="preserve">
          <source>Separate changes</source>
          <target state="translated">별도 변경</target>
        </trans-unit>
        <trans-unit id="eff8ac5c6bf46b60a389d5ad12d1eb060f7f80df" translate="yes" xml:space="preserve">
          <source>Separate out other information hidden behind NUL bytes (e.g. agent string as a capability and symrefs can be requested using &lt;code&gt;ls-refs&lt;/code&gt;)</source>
          <target state="translated">NUL 바이트 뒤에 숨겨진 다른 정보를 분리하십시오 (예 : 기능으로 에이전트 문자열 및 symref는 &lt;code&gt;ls-refs&lt;/code&gt; 를 사용하여 요청할 수 있음 )</target>
        </trans-unit>
        <trans-unit id="ece352ef8327b4eb0b177147a24a8ec2f1418b4f" translate="yes" xml:space="preserve">
          <source>Separate the commits with NULs instead of with new newlines.</source>
          <target state="translated">줄 바꿈 대신 커밋을 NUL로 구분하십시오.</target>
        </trans-unit>
        <trans-unit id="b8e497aff8340b70a81417c3e01a367bc04c018c" translate="yes" xml:space="preserve">
          <source>Separating argument from the option</source>
          <target state="translated">옵션에서 인수 분리</target>
        </trans-unit>
        <trans-unit id="ad1ff98d9455414907920436d0228d1f33b8b9d5" translate="yes" xml:space="preserve">
          <source>Sequence &quot;%f&quot; on the filter command line is replaced with the name of the file the filter is working on. A filter might use this in keyword substitution. For example:</source>
          <target state="translated">필터 명령 줄의 시퀀스 &quot;% f&quot;는 필터가 작업중인 파일 이름으로 바뀝니다. 필터는 이것을 키워드 대체에 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0eabff0639877f6ba301a816aebe732d4b82d7eb" translate="yes" xml:space="preserve">
          <source>Sequencer subcommands</source>
          <target state="translated">시퀀서 부속 명령</target>
        </trans-unit>
        <trans-unit id="4f86f0b14605788e8e970dd961527f669911f656" translate="yes" xml:space="preserve">
          <source>Server Admin</source>
          <target state="translated">서버 관리자</target>
        </trans-unit>
        <trans-unit id="bf86016aaef42ea05ae67a04c37100e13cf311bf" translate="yes" xml:space="preserve">
          <source>Server side implementation of Git over HTTP</source>
          <target state="translated">HTTP를 통한 Git의 서버 측 구현</target>
        </trans-unit>
        <trans-unit id="448833463540a7335612a7134526ca62a325b6eb" translate="yes" xml:space="preserve">
          <source>Server-side syntax highlight support in &quot;blob&quot; view. It requires &lt;code&gt;$highlight_bin&lt;/code&gt; program to be available (see the description of this variable in the &quot;Configuration variables&quot; section above), and therefore is disabled by default.</source>
          <target state="translated">&quot;블롭&quot;보기에서 서버 측 구문 강조 지원. 그것은 필요 &lt;code&gt;$highlight_bin&lt;/code&gt; 프로그램을 사용할 수 (위의 &quot;구성 변수&quot;절에서이 변수의 설명을 참조), 따라서 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="3c9afc64e385fe9ff937f49ef33cea7eda6d2e43" translate="yes" xml:space="preserve">
          <source>Set &amp;lt;ref&amp;gt; to &amp;lt;newvalue&amp;gt; after verifying &amp;lt;oldvalue&amp;gt;, if given. Specify a zero &amp;lt;newvalue&amp;gt; to ensure the ref does not exist after the update and/or a zero &amp;lt;oldvalue&amp;gt; to make sure the ref does not exist before the update.</source>
          <target state="translated">제공된 경우 &amp;lt;oldvalue&amp;gt;를 확인한 후 &amp;lt;ref&amp;gt;를 &amp;lt;newvalue&amp;gt;로 설정하십시오. 업데이트 후 참조가 존재하지 않도록하려면 &amp;lt;newvalue&amp;gt;를 0으로 지정하고 업데이트 전에 참조가 존재하지 않도록하려면 &amp;lt;oldvalue&amp;gt;를 0으로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ab50837f4221ee62152d0a56b00aa01e36d1c0b1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;$maxload&lt;/code&gt; to undefined value (&lt;code&gt;undef&lt;/code&gt;) to turn this feature off. The default value is 300.</source>
          <target state="translated">이 기능을 해제하려면 &lt;code&gt;$maxload&lt;/code&gt; 를 정의되지 않은 값 ( &lt;code&gt;undef&lt;/code&gt; )으로 설정하십시오 . 기본값은 300입니다.</target>
        </trans-unit>
        <trans-unit id="b447103879e346ae5dca39d0e8955736e891677f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;C'&lt;/code&gt; to &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;C'&lt;/code&gt; 를 &lt;code&gt;C&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c1de92d3e849c9a6ed15961e4d9552291b7de46" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; environment to a given string (typically the name of the program) unless it is already set. Whenever the script runs a &lt;code&gt;git&lt;/code&gt; command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref.</source>
          <target state="translated">&lt;code&gt;GIT_REFLOG_ACTION&lt;/code&gt; 환경을 설정 하지 않은 경우 주어진 문자열 (일반적으로 프로그램 이름)로 설정하십시오. 스크립트가 refs를 업데이트 하는 &lt;code&gt;git&lt;/code&gt; 명령을 실행할 때 마다이 문자열의 값을 사용하여 reflog 항목이 작성되어 어떤 명령의 레코드가 ref를 업데이트했는지 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="38478f04f07d7922d4b7c7c155fa10a2d176d8aa" translate="yes" xml:space="preserve">
          <source>Set a configuration variable in the newly-created repository; this takes effect immediately after the repository is initialized, but before the remote history is fetched or any files checked out. The key is in the same format as expected by &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; (e.g., &lt;code&gt;core.eol=true&lt;/code&gt;). If multiple values are given for the same key, each value will be written to the config file. This makes it safe, for example, to add additional fetch refspecs to the origin remote.</source>
          <target state="translated">새로 작성된 저장소에서 구성 변수를 설정하십시오. 이는 리포지토리가 초기화 된 직후, 원격 기록을 가져 오거나 파일을 체크 아웃하기 전에 적용됩니다. 키는 &lt;a href=&quot;git-config&quot;&gt;git-config [1]에서&lt;/a&gt; 예상 한 것과 같은 형식입니다 (예 : &lt;code&gt;core.eol=true&lt;/code&gt; ). 동일한 키에 여러 값이 제공되면 각 값이 구성 파일에 기록됩니다. 예를 들어, 원거리 리모트에 추가 페치 참조 스펙을 추가하는 것이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="467cb3791c7eb0e6e17b468939871379585bf0d6" translate="yes" xml:space="preserve">
          <source>Set a custom directory to store the resulting files instead of the current working directory. All directory components will be created.</source>
          <target state="translated">현재 작업 디렉토리 대신 결과 파일을 저장하도록 사용자 정의 디렉토리를 설정하십시오. 모든 디렉토리 구성 요소가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="d443ac1fac5648ce0c972e61ba93f9dfa28cd774" translate="yes" xml:space="preserve">
          <source>Set a policy to be used by protocol &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; with clone/fetch/push commands. See &lt;code&gt;protocol.allow&lt;/code&gt; above for the available policies.</source>
          <target state="translated">clone / fetch / push 명령과 함께 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 프로토콜에서 사용할 정책을 설정하십시오 . 사용 가능한 정책은 위의 &lt;code&gt;protocol.allow&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffb09a5018db72662a7a10ef6bf79bb4e8417501" translate="yes" xml:space="preserve">
          <source>Set an alternative CVSROOT to use. This corresponds to the CVS -d parameter. Usually users will not want to set this, except if using CVS in an asymmetric fashion.</source>
          <target state="translated">사용할 대체 CVSROOT를 설정하십시오. 이것은 CVS -d 매개 변수에 해당합니다. 비대칭 방식으로 CVS를 사용하는 경우를 제외하고 사용자는 일반적으로이 설정을 원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb6b278f7896d8837cef70de53516ad86e9dbdad" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GIT_DIR&lt;/code&gt; 환경 변수를 설정하십시오 . &lt;a href=&quot;git&quot;&gt;git [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca1b08676b4e36a73ebf5696b8b5a7e5e3fbf70c" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;noMetadata&lt;/code&gt; option in the [svn-remote] config. This option is not recommended, please read the &lt;code&gt;svn.noMetadata&lt;/code&gt; section of this manpage before using this option.</source>
          <target state="translated">[svn-remote] 설정에서 &lt;code&gt;noMetadata&lt;/code&gt; 옵션을 설정하십시오. 이 옵션은 권장되지 않습니다 .이 옵션을 사용하기 전에이 맨 페이지 의 &lt;code&gt;svn.noMetadata&lt;/code&gt; 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="29075e63ef31a9df87f17de44d7d1a90528328cf" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteRoot&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">[svn-remote] 설정에서 &lt;code&gt;rewriteRoot&lt;/code&gt; 옵션을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c2f253f2802c51ea11c741dbafd4f8bda616e672" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;rewriteUUID&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">설정 &lt;code&gt;rewriteUUID&lt;/code&gt; 에서 [SVN-원격] 설정에서 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="b54b27dbc703e4c4c112e37e3cc708e31cfd5c62" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvmProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">설정 &lt;code&gt;useSvmProps&lt;/code&gt; 의 에서 [SVN-원격] 설정에서 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="b1c79663eb36a223e3246a6761c3527b1fcb1cd9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;useSvnsyncProps&lt;/code&gt; option in the [svn-remote] config.</source>
          <target state="translated">설정 &lt;code&gt;useSvnsyncProps&lt;/code&gt; 의 에서 [SVN-원격] 설정에서 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="96cb52718c720acae8e359f2c3854a795081e029" translate="yes" xml:space="preserve">
          <source>Set the Git namespace. See &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for more details. Equivalent to setting the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable.</source>
          <target state="translated">Git 네임 스페이스를 설정하십시오. 자세한 내용은 &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt; 를 참조하십시오. &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; 환경 변수 를 설정하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7cb0d29338f1ad7db15e18be0474164e1bc21a46" translate="yes" xml:space="preserve">
          <source>Set the Git namespace; see &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; for details. The &lt;code&gt;--namespace&lt;/code&gt; command-line option also sets this value.</source>
          <target state="translated">Git 네임 스페이스를 설정하십시오. 자세한 내용은 &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt; 를 참조하십시오. &lt;code&gt;--namespace&lt;/code&gt; 명령 줄 옵션은이 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ce505bfde263ccf76db605c3871e55681201849e" translate="yes" xml:space="preserve">
          <source>Set the commit message to be used for the merge commit (in case one is created).</source>
          <target state="translated">병합 커밋에 사용될 커밋 메시지를 설정합니다 (하나가 생성 된 경우).</target>
        </trans-unit>
        <trans-unit id="60dd95cbd8809da88fe2e4f3deab8c8cfda23f9c" translate="yes" xml:space="preserve">
          <source>Set the creation/deletion cost fudge factor to &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt;. Defaults to 60. Try a larger value if &lt;code&gt;git range-diff&lt;/code&gt; erroneously considers a large change a total rewrite (deletion of one commit and addition of another), and a smaller one in the reverse case. See the ``Algorithm`` section below for an explanation why this is needed.</source>
          <target state="translated">작성 / 삭제 비용 퍼지 계수를 &lt;code&gt;&amp;lt;percent&amp;gt;&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;git range-diff&lt;/code&gt; 가 전체 다시 쓰기 (한 커밋 및 다른 커밋 삭제 및 다른 커밋 삭제)를 크게 변경 한 것으로 간주 하면 더 큰 값을 시도 하고 반대의 경우 더 작은 값을 시도하십시오 . 이것이 필요한 이유에 대한 설명은 아래의``알고리즘 ''섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e4867b6a9e4fdc121bda203b5824a86f390dc42c" translate="yes" xml:space="preserve">
          <source>Set the default date-time mode for the &lt;code&gt;log&lt;/code&gt; command. Setting a value for log.date is similar to using &lt;code&gt;git log&lt;/code&gt;'s &lt;code&gt;--date&lt;/code&gt; option. See &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;log&lt;/code&gt; 명령 의 기본 날짜-시간 모드를 설정하십시오 . log.date의 값을 설정하는 것은 &lt;code&gt;git log&lt;/code&gt; 의 &lt;code&gt;--date&lt;/code&gt; 옵션 을 사용하는 것과 유사합니다 . 자세한 내용은 &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="452331e44dbf8a551529f8aab3eb063db65f0f80" translate="yes" xml:space="preserve">
          <source>Set the default matching behavior. Using a value of &lt;code&gt;basic&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, or &lt;code&gt;perl&lt;/code&gt; will enable the &lt;code&gt;--basic-regexp&lt;/code&gt;, &lt;code&gt;--extended-regexp&lt;/code&gt;, &lt;code&gt;--fixed-strings&lt;/code&gt;, or &lt;code&gt;--perl-regexp&lt;/code&gt; option accordingly, while the value &lt;code&gt;default&lt;/code&gt; will return to the default matching behavior.</source>
          <target state="translated">기본 일치 동작을 설정하십시오. 의 값을 사용하여 &lt;code&gt;basic&lt;/code&gt; , &lt;code&gt;extended&lt;/code&gt; , &lt;code&gt;fixed&lt;/code&gt; , 또는 &lt;code&gt;perl&lt;/code&gt; 활성화 할 것 &lt;code&gt;--basic-regexp&lt;/code&gt; , &lt;code&gt;--extended-regexp&lt;/code&gt; , &lt;code&gt;--fixed-strings&lt;/code&gt; , 또는 &lt;code&gt;--perl-regexp&lt;/code&gt; 값하면서, 그에 따라 옵션을 &lt;code&gt;default&lt;/code&gt; 받는 돌아갑니다 기본 일치 동작.</target>
        </trans-unit>
        <trans-unit id="0fa4faa1629ef6ce85f03023fc833f41e1dcd3a2" translate="yes" xml:space="preserve">
          <source>Set the execute permissions on the updated files.</source>
          <target state="translated">업데이트 된 파일에 대한 실행 권한을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8fcbe8639628c30552376de3870da0a1897ef81f" translate="yes" xml:space="preserve">
          <source>Set the length object names are abbreviated to. If unspecified or set to &quot;auto&quot;, an appropriate value is computed based on the approximate number of packed objects in your repository, which hopefully is enough for abbreviated object names to stay unique for some time. The minimum length is 4.</source>
          <target state="translated">길이 오브젝트 이름을 약자로 설정하십시오. 지정하지 않거나 &quot;auto&quot;로 설정하면 저장소에있는 대략적인 묶음 객체 수를 기반으로 적절한 값이 계산되는데, 이는 축약 된 객체 이름이 한동안 고유하게 유지되기에 충분합니다. 최소 길이는 4입니다.</target>
        </trans-unit>
        <trans-unit id="1c984f4d67f4b1c5f797e0985cdc839cd8173298" translate="yes" xml:space="preserve">
          <source>Set the method with which to authenticate against the HTTP proxy. This only takes effect if the configured proxy string contains a user name part (i.e. is of the form &lt;code&gt;user@host&lt;/code&gt; or &lt;code&gt;user@host:port&lt;/code&gt;). This can be overridden on a per-remote basis; see &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt;. Both can be overridden by the &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; environment variable. Possible values are:</source>
          <target state="translated">HTTP 프록시에 대해 인증 할 방법을 설정하십시오. 구성된 프록시 문자열에 사용자 이름 부분이 포함 된 경우 (예 : &lt;code&gt;user@host&lt;/code&gt; 또는 &lt;code&gt;user@host:port&lt;/code&gt; ) 에만 적용됩니다 . 원격으로이를 무시할 수 있습니다. &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxyAuthMethod&lt;/code&gt; 를 참조하십시오 . 둘 다 &lt;code&gt;GIT_HTTP_PROXY_AUTHMETHOD&lt;/code&gt; 환경 변수 로 대체 될 수 있습니다 . 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4531ba21b83c7504310183413d920d4e527a579c" translate="yes" xml:space="preserve">
          <source>Set the name of placeholder files created by --preserve-empty-dirs. Default: &quot;.gitignore&quot;</source>
          <target state="translated">--preserve-empty-dirs로 작성된 자리 표시 자 파일의 이름을 설정하십시오. 기본값 : &quot;.gitignore&quot;</target>
        </trans-unit>
        <trans-unit id="31570b84b8684acde4e9da43dbd6e7e3871cdd6e" translate="yes" xml:space="preserve">
          <source>Set the path to the repository. This can also be controlled by setting the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable. It can be an absolute path or relative path to current working directory.</source>
          <target state="translated">저장소 경로를 설정하십시오. &lt;code&gt;GIT_DIR&lt;/code&gt; 환경 변수를 설정하여 제어 할 수도 있습니다 . 현재 작업 디렉토리에 대한 절대 경로 또는 상대 경로 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="400ea02361b1fdf84359f8c82c5dbc03e0cfd801" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. If &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; environment variable is set, core.worktree is ignored and not used for determining the root of working tree. This can be overridden by the &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; environment variable and the &lt;code&gt;--work-tree&lt;/code&gt; command-line option. The value can be an absolute path or relative to the path to the .git directory, which is either specified by --git-dir or GIT_DIR, or automatically discovered. If --git-dir or GIT_DIR is specified but none of --work-tree, GIT_WORK_TREE and core.worktree is specified, the current working directory is regarded as the top level of your working tree.</source>
          <target state="translated">작업 트리의 루트 경로를 설정하십시오. 경우 &lt;code&gt;GIT_COMMON_DIR&lt;/code&gt; 의 환경 변수가 설정되어, core.worktree은 무시하고 나무를 작업의 루트를 결정하기 위해 사용되지 않습니다. 이것은 &lt;code&gt;GIT_WORK_TREE&lt;/code&gt; 환경 변수와 &lt;code&gt;--work-tree&lt;/code&gt; 명령 줄 옵션 으로 재정의 할 수 있습니다 . 이 값은 --git-dir 또는 GIT_DIR에 의해 지정되거나 자동으로 검색되는 .git 디렉토리의 경로에 대한 절대 경로이거나 상대 경로 일 수 있습니다. --git-dir 또는 GIT_DIR이 지정되었지만 --work-tree, GIT_WORK_TREE 및 core.worktree가 지정되지 않은 경우 현재 작업 디렉토리는 작업 트리의 최상위 레벨로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e77cf9dbfa8bb073ac521b0115fcf267d700de96" translate="yes" xml:space="preserve">
          <source>Set the path to the root of the working tree. This can also be controlled by the &lt;code&gt;--work-tree&lt;/code&gt; command-line option and the core.worktree configuration variable.</source>
          <target state="translated">작업 트리의 루트 경로를 설정하십시오. &lt;code&gt;--work-tree&lt;/code&gt; 명령 줄 옵션과 core.worktree 구성 변수 로 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d76dd27e6c2a8b0058c2a945baf951d7f68aa28" translate="yes" xml:space="preserve">
          <source>Set the path to the working tree. It can be an absolute path or a path relative to the current working directory. This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a more detailed discussion).</source>
          <target state="translated">작업 트리의 경로를 설정하십시오. 절대 경로이거나 현재 작업 디렉토리에 상대적인 경로 일 수 있습니다. 이는 GIT_WORK_TREE 환경 변수와 core.worktree 구성 변수를 설정하여 제어 할 수도 있습니다 (자세한 설명은 &lt;a href=&quot;git-config&quot;&gt;git-config [1]의&lt;/a&gt; core.worktree 참조 ).</target>
        </trans-unit>
        <trans-unit id="ed921cb30a3554abcb258c374cc8879de4b6e735" translate="yes" xml:space="preserve">
          <source>Set the starting point at which to create the new commits to the merge base of &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;. Running &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; is equivalent to running &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">새 커밋을 생성 할 시작 지점을 &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;의 병합 기반으로 설정하십시오. 실행 &lt;code&gt;git rebase --keep-base &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; 실행하는 것과 같습니다 &lt;code&gt;git rebase --onto &amp;lt;upstream&amp;gt;&amp;hellip;​ &amp;lt;upstream&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6b13ff409b582dcf430b9ece41f38914d244e47" translate="yes" xml:space="preserve">
          <source>Set this option to &lt;code&gt;false&lt;/code&gt; to disable the default heuristics that shift diff hunk boundaries to make patches easier to read.</source>
          <target state="translated">패치를보다 쉽게 ​​읽을 수 있도록 diff hunk 경계를 이동하는 기본 휴리스틱을 사용하지 않으려면 이 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="006b55776506e3606ed55b1bbce55137d0106c81" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver cache the text conversion outputs. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">diff 드라이버가 텍스트 변환 출력을 캐시하게하려면이 옵션을 true로 설정하십시오. 자세한 내용은 &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ef5fd1abf8d8364854389e921b837341fb77c76d" translate="yes" xml:space="preserve">
          <source>Set this option to true to make the diff driver treat files as binary. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">diff 드라이버가 파일을 이진 파일로 취급하도록하려면이 옵션을 true로 설정하십시오. 자세한 내용은 &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ef3e5c6a12efe8e7150b1e7869bbdde3d0dce7a8" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;false&lt;/code&gt; if you want to disable &lt;code&gt;pushNonFFCurrent&lt;/code&gt;, &lt;code&gt;pushNonFFMatching&lt;/code&gt;, &lt;code&gt;pushAlreadyExists&lt;/code&gt;, &lt;code&gt;pushFetchFirst&lt;/code&gt;, and &lt;code&gt;pushNeedsForce&lt;/code&gt; simultaneously.</source>
          <target state="translated">&lt;code&gt;pushNonFFCurrent&lt;/code&gt; , &lt;code&gt;pushNonFFMatching&lt;/code&gt; , &lt;code&gt;pushAlreadyExists&lt;/code&gt; , &lt;code&gt;pushFetchFirst&lt;/code&gt; 및 &lt;code&gt;pushNeedsForce&lt;/code&gt; 를 동시에 비활성화하려면 이 변수를 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3942f1a8d8fbbbd45defb8fdf1e1532d95e95175" translate="yes" xml:space="preserve">
          <source>Set to 0 to prevent protocols used by fetch/push/clone which are configured to the &lt;code&gt;user&lt;/code&gt; state. This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;user&lt;/code&gt; 상태 로 구성된 페치 / 푸시 / 복제에 사용되는 프로토콜을 방지하려면 0으로 설정하십시오 . 이는 신뢰할 수없는 저장소에서 재귀 서브 모듈 초기화를 제한하거나 잠재적으로 신뢰할 수없는 URL을 git 명령에 제공하는 프로그램에 유용합니다. 자세한 내용은 &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b65b88faf09ed3e78aacba5ecd3c0b74f296551e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;change&lt;/code&gt; if you want changes in whitespace to be ignored by default. Set to one of: no, none, never, false if you want changes in whitespace to be significant.</source>
          <target state="translated">공백의 변경 사항을 기본적으로 무시 하려면 &lt;code&gt;change&lt;/code&gt; 하도록 설정하십시오 . 공백의 변경 사항을 중요하게하려면 no, none, never, false 중 하나로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5365106003c727ad2992b276959d7e28e3f5d488" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to use the legacy shell script implementation of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Is &lt;code&gt;true&lt;/code&gt; by default, which means use the built-in rewrite of it in C.</source>
          <target state="translated">&lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; 의 레거시 쉘 스크립트 구현을 사용하려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 가 &lt;code&gt;true&lt;/code&gt; 수단이 사용하는 기본적으로 내장에의 재 작성 C.에</target>
        </trans-unit>
        <trans-unit id="55c516b6a3b5abf93c689c87b62d882f67783e93" translate="yes" xml:space="preserve">
          <source>Set to a value</source>
          <target state="translated">값으로 설정</target>
        </trans-unit>
        <trans-unit id="126c88db7f15369f3dbc6085e635b28af0c85793" translate="yes" xml:space="preserve">
          <source>Set to false to enable &lt;code&gt;--no-show-forced-updates&lt;/code&gt; in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; and &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; commands. Defaults to true.</source>
          <target state="translated">&lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; 및 &lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt; 명령 에서 &lt;code&gt;--no-show-forced-updates&lt;/code&gt; 를 활성화하려면 false로 설정하십시오 . 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="361b59fb11064babad5acb39754e365b2c18e181" translate="yes" xml:space="preserve">
          <source>Set to long name (git-upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">서비스 헬퍼의 긴 이름 (git-upload-pack 등)을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="4bc0f158fa5fccd4891458dbb2fe87fd0c2639c2" translate="yes" xml:space="preserve">
          <source>Set to long name (upload-pack, etc&amp;hellip;​) of service helper needs to invoke.</source>
          <target state="translated">서비스 도우미의 긴 이름 (업로드 팩 등)으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e57cc917cd5904e6e25fccb477e015eebd2cea7f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;auto&quot;</source>
          <target state="translated">문자열 값 &quot;auto&quot;로 설정</target>
        </trans-unit>
        <trans-unit id="f9270f5e7d6f6a107dd8727f8e03989aa7e1e07f" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;crlf&quot;</source>
          <target state="translated">문자열 값 &quot;crlf&quot;로 설정</target>
        </trans-unit>
        <trans-unit id="a22b46e67f1294009226c3e99f53a466328184f5" translate="yes" xml:space="preserve">
          <source>Set to string value &quot;lf&quot;</source>
          <target state="translated">문자열 값 &quot;lf&quot;로 설정</target>
        </trans-unit>
        <trans-unit id="7f3636e90ee07f52b1799adf7d20919a4160ef67" translate="yes" xml:space="preserve">
          <source>Set to true to enable --branch by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-branch takes precedence over this variable.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; 에서 기본적으로 --branch를 활성화하려면 true로 설정하십시오 . --no-branch 옵션이이 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="01828a4204064cca5b2e88b220546dc5742bc0f1" translate="yes" xml:space="preserve">
          <source>Set to true to enable --short by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;. The option --no-short takes precedence over this variable.</source>
          <target state="translated">&lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; 에서 기본적으로 --short를 활성화하려면 true로 설정하십시오 . --no-short 옵션이이 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="a2f50541fbb43557b6973a5064eb81647dcf94e2" translate="yes" xml:space="preserve">
          <source>Set to true to enable &lt;code&gt;--ahead-behind&lt;/code&gt; and false to enable &lt;code&gt;--no-ahead-behind&lt;/code&gt; by default in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for non-porcelain status formats. Defaults to true.</source>
          <target state="translated">비 도자기 상태 형식의 경우 &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; 에서 기본적으로 &lt;code&gt;--ahead-behind&lt;/code&gt; 를 활성화하려면 true로 설정 하고 &lt;code&gt;--no-ahead-behind&lt;/code&gt; 를 활성화하려면 false로 설정하십시오 . 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="96f0b77e868eff9d4ad63451b6702c714a9e3c67" translate="yes" xml:space="preserve">
          <source>Set to true to write a commit-graph after every &lt;code&gt;git fetch&lt;/code&gt; command that downloads a pack-file from a remote. Using the &lt;code&gt;--split&lt;/code&gt; option, most executions will create a very small commit-graph file on top of the existing commit-graph file(s). Occasionally, these files will merge and the write may take longer. Having an updated commit-graph file helps performance of many Git commands, including &lt;code&gt;git merge-base&lt;/code&gt;, &lt;code&gt;git push -f&lt;/code&gt;, and &lt;code&gt;git log --graph&lt;/code&gt;. Defaults to false, unless &lt;code&gt;feature.experimental&lt;/code&gt; is true.</source>
          <target state="translated">팩 파일을 원격에서 다운로드하는 모든 &lt;code&gt;git fetch&lt;/code&gt; 명령 후에 commit-graph를 쓰려면 true로 설정하십시오 . &lt;code&gt;--split&lt;/code&gt; 옵션을 사용하면 대부분의 실행에서 기존 커밋 그래프 파일 위에 매우 작은 커밋 그래프 파일이 생성됩니다. 간혹 이러한 파일이 병합되어 쓰기가 더 오래 걸릴 수 있습니다. 커밋 그래프 파일을 업데이트하면 &lt;code&gt;git merge-base&lt;/code&gt; , &lt;code&gt;git push -f&lt;/code&gt; 및 &lt;code&gt;git log --graph&lt;/code&gt; 를 포함한 많은 Git 명령의 성능을 향상 시킬 수 있습니다. &lt;code&gt;feature.experimental&lt;/code&gt; 이 true가 아닌 경우 기본값은 false 입니다.</target>
        </trans-unit>
        <trans-unit id="6596cd35135fea85976308a2f017fa88ea4c3f97" translate="yes" xml:space="preserve">
          <source>Set up &amp;lt;branchname&amp;gt;'s tracking information so &amp;lt;upstream&amp;gt; is considered &amp;lt;branchname&amp;gt;'s upstream branch. If no &amp;lt;branchname&amp;gt; is specified, then it defaults to the current branch.</source>
          <target state="translated">&amp;lt;branchname&amp;gt;의 추적 정보를 설정하여 &amp;lt;upstream&amp;gt;이 &amp;lt;branchname&amp;gt;의 업스트림 분기로 간주되도록하십시오. &amp;lt;branchname&amp;gt;이 지정되지 않은 경우 기본값은 현재 분기입니다.</target>
        </trans-unit>
        <trans-unit id="a7d9f42de7103c698b8b04159cb04db5a6d63650" translate="yes" xml:space="preserve">
          <source>Set up a mirror of the source repository. This implies &lt;code&gt;--bare&lt;/code&gt;. Compared to &lt;code&gt;--bare&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt; not only maps local branches of the source to local branches of the target, it maps all refs (including remote-tracking branches, notes etc.) and sets up a refspec configuration such that all these refs are overwritten by a &lt;code&gt;git remote update&lt;/code&gt; in the target repository.</source>
          <target state="translated">소스 저장소의 미러를 설정하십시오. 이것은 &lt;code&gt;--bare&lt;/code&gt; 를 의미 합니다 . 비교하기 &lt;code&gt;--bare&lt;/code&gt; , &lt;code&gt;--mirror&lt;/code&gt; 뿐만 아니라 대상의 로컬 브랜치에 대한 소스의 로컬 브랜치 매핑 그것은 refspec 구성까지 이러한 모든 (분기 원격 추적 등 포함 노트) 심판 및 집합을 매핑이 심판은 모든 대상 리포지토리 의 &lt;code&gt;git remote update&lt;/code&gt; 로 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7e96219d093661439598475221c87d2588db74a2" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">분기 &amp;lt;name&amp;gt;에 병합하기위한 기본 옵션을 설정합니다. 구문 및 지원되는 옵션은 &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; 의 구문과 동일 하지만 공백 문자를 포함하는 옵션 값은 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ae1bdc4ada17600e4b52aa414b8e4fd8124c824c" translate="yes" xml:space="preserve">
          <source>Sets default options for merging into branch &amp;lt;name&amp;gt;. The syntax and supported options are the same as those of &lt;code&gt;git merge&lt;/code&gt;, but option values containing whitespace characters are currently not supported.</source>
          <target state="translated">분기 &amp;lt;name&amp;gt;에 병합하기위한 기본 옵션을 설정합니다. 구문 및 지원되는 옵션은 &lt;code&gt;git merge&lt;/code&gt; 의 구문과 동일 하지만 공백 문자를 포함하는 옵션 값은 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d284647c4bbe7eed170d8bbd06667eb66997a29f" translate="yes" xml:space="preserve">
          <source>Sets location of common system-wide configuration file.</source>
          <target state="translated">공통 시스템 전체 구성 파일의 위치를 ​​설정합니다.</target>
        </trans-unit>
        <trans-unit id="b2395ce7c9c6f7832c2a162201b3e7779e8713ae" translate="yes" xml:space="preserve">
          <source>Sets location of fallback system-wide configuration file. This file is read only if per-instance one does not exist.</source>
          <target state="translated">대체 시스템 전체 구성 파일의 위치를 ​​설정합니다. 이 파일은 인스턴스 별 파일이없는 경우에만 읽습니다.</target>
        </trans-unit>
        <trans-unit id="80c7084a9261d496ded6a154cb1d21190935c2fb" translate="yes" xml:space="preserve">
          <source>Sets location of per-instance configuration file.</source>
          <target state="translated">인스턴스 별 구성 파일의 위치를 ​​설정합니다.</target>
        </trans-unit>
        <trans-unit id="e0e9d645e60e4880815c1beb8a485ff180b9df6b" translate="yes" xml:space="preserve">
          <source>Sets or deletes the default branch (i.e. the target of the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt;) for the named remote. Having a default branch for a remote is not required, but allows the name of the remote to be specified in lieu of a specific branch. For example, if the default branch for &lt;code&gt;origin&lt;/code&gt; is set to &lt;code&gt;master&lt;/code&gt;, then &lt;code&gt;origin&lt;/code&gt; may be specified wherever you would normally specify &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">명명 된 리모트 의 디폴트 브랜치 (즉, symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; 의 타겟)를 설정 또는 삭제합니다 . 리모트에 대한 기본 분기가 필요하지는 않지만 특정 분기 대신 리모트의 이름을 지정할 수 있습니다. 에 대한 기본 분기 예를 들어, &lt;code&gt;origin&lt;/code&gt; 으로 설정되어 &lt;code&gt;master&lt;/code&gt; , 다음 &lt;code&gt;origin&lt;/code&gt; 당신이 일반적으로 지정합니다 곳을 지정할 수 있습니다 &lt;code&gt;origin/master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2e044e154b8bedcebccbb47c9cffea4e43f05f2" translate="yes" xml:space="preserve">
          <source>Sets service path (--upload-pack, --receive-pack etc.) for next connect. Remote helper may support this option, but must not rely on this option being set before connect request occurs.</source>
          <target state="translated">다음 연결을위한 서비스 경로 (--upload-pack, --receive-pack 등)를 설정합니다. 원격 도우미는이 옵션을 지원할 수 있지만 연결 요청이 발생하기 전에이 옵션이 설정되어 있지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="4daf5e09ce23fccb50e846fa35fe9d7420d00620" translate="yes" xml:space="preserve">
          <source>Sets the Subversion property given as the first argument, to the value given as the second argument for the file given as the third argument.</source>
          <target state="translated">첫 번째 인수로 지정된 Subversion 속성을 세 번째 인수로 지정된 파일의 두 번째 인수로 제공된 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7bdcb303e2640fa11b5be793f726d7f4d39f5dcd" translate="yes" xml:space="preserve">
          <source>Sets the URL of the specified submodule to &amp;lt;newurl&amp;gt;. Then, it will automatically synchronize the submodule&amp;rsquo;s new remote URL configuration.</source>
          <target state="translated">지정된 서브 모듈의 URL을 &amp;lt;newurl&amp;gt;로 설정합니다. 그런 다음 서브 모듈의 새로운 원격 URL 구성을 자동으로 동기화합니다.</target>
        </trans-unit>
        <trans-unit id="81149e7775b257084aed4c2f69389cf77384d49e" translate="yes" xml:space="preserve">
          <source>Sets the default for whether to confirm before sending. Must be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;compose&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. See &lt;code&gt;--confirm&lt;/code&gt; in the previous section for the meaning of these values.</source>
          <target state="translated">보내기 전에 확인 여부에 대한 기본값을 설정합니다. &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; , &lt;code&gt;cc&lt;/code&gt; , &lt;code&gt;compose&lt;/code&gt; 또는 &lt;code&gt;auto&lt;/code&gt; 중 하나 여야합니다 . 이 값의 의미에 대해서는 이전 섹션의 &lt;code&gt;--confirm&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae96977bcaf8246e51bbdd562c9442e5f847dd67" translate="yes" xml:space="preserve">
          <source>Sets the default remote tracking branch for the submodule. The &lt;code&gt;--branch&lt;/code&gt; option allows the remote branch to be specified. The &lt;code&gt;--default&lt;/code&gt; option removes the submodule.&amp;lt;name&amp;gt;.branch configuration key, which causes the tracking branch to default to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">하위 모듈의 기본 원격 추적 분기를 설정합니다. &lt;code&gt;--branch&lt;/code&gt; 옵션은 원격 지사가 지정할 수 있습니다. &lt;code&gt;--default&lt;/code&gt; 옵션은 서브 모듈. &amp;lt;이름&amp;gt; .branch 구성 키, 기본적으로 추적 가지 원인이 제거 &lt;code&gt;master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ebd0697d4e9cc9507469a589b214100fff93c18" translate="yes" xml:space="preserve">
          <source>Sets the default value of --ignore-submodules. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain, and not lower level &lt;code&gt;diff&lt;/code&gt; commands such as &lt;code&gt;git diff-files&lt;/code&gt;. &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git switch&lt;/code&gt; also honor this setting when reporting uncommitted changes. Setting it to &lt;code&gt;all&lt;/code&gt; disables the submodule summary normally shown by &lt;code&gt;git commit&lt;/code&gt; and &lt;code&gt;git status&lt;/code&gt; when &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set unless it is overridden by using the --ignore-submodules command-line option. The &lt;code&gt;git submodule&lt;/code&gt; commands are not affected by this setting.</source>
          <target state="translated">--ignore-submodules의 기본값을 설정합니다. 이것은 &lt;code&gt;git diff&lt;/code&gt; Porcelain 에만 영향을 미치며 &lt;code&gt;git diff-files&lt;/code&gt; 와 같은 하위 수준 &lt;code&gt;diff&lt;/code&gt; 명령 에는 영향을 미치지 않습니다 . 커밋되지 않은 변경 사항을보고 할 때 &lt;code&gt;git checkout&lt;/code&gt; 및 &lt;code&gt;git switch&lt;/code&gt; 도이 설정을 따릅니다. &lt;code&gt;all&lt;/code&gt; 로 설정 하면 &lt;code&gt;status.submoduleSummary&lt;/code&gt; 가 --ignore-submodules 명령 줄 옵션을 사용하여 재정의되지 않는 한 &lt;code&gt;git commit&lt;/code&gt; 및 &lt;code&gt;git status&lt;/code&gt; 로 일반적으로 표시되는 하위 모듈 요약이 비활성화 됩니다 . &lt;code&gt;git submodule&lt;/code&gt; 명령이 설정의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="223bc7be9fc4d628a9979e3c0b82abe9a693f525" translate="yes" xml:space="preserve">
          <source>Sets the git refspec against which the shelved P4 changelist is compared. Defaults to p4/master.</source>
          <target state="translated">쉘프 된 P4 변경 목록을 비교할 git refspec을 설정합니다. 기본값은 p4 / master입니다.</target>
        </trans-unit>
        <trans-unit id="b66175dc0e90d1aff6b86be51b6554732d676a1f" translate="yes" xml:space="preserve">
          <source>Sets the line ending type to use in the working directory for files that are marked as text (either by having the &lt;code&gt;text&lt;/code&gt; attribute set, or by having &lt;code&gt;text=auto&lt;/code&gt; and Git auto-detecting the contents as text). Alternatives are &lt;code&gt;lf&lt;/code&gt;, &lt;code&gt;crlf&lt;/code&gt; and &lt;code&gt;native&lt;/code&gt;, which uses the platform&amp;rsquo;s native line ending. The default value is &lt;code&gt;native&lt;/code&gt;. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information on end-of-line conversion. Note that this value is ignored if &lt;code&gt;core.autocrlf&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">텍스트로 표시된 파일 ( &lt;code&gt;text&lt;/code&gt; 속성이 설정되어 있거나 &lt;code&gt;text=auto&lt;/code&gt; 및 Git이 내용을 텍스트로 자동 감지 함) 을 사용하여 작업 디렉토리에서 사용할 행 끝 유형을 설정 합니다. 대안은 플랫폼의 기본 줄 끝을 사용하는 &lt;code&gt;lf&lt;/code&gt; , &lt;code&gt;crlf&lt;/code&gt; 및 &lt;code&gt;native&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;native&lt;/code&gt; 입니다. 라인 끝 변환에 대한 자세한 내용 은 &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; 를 참조하십시오. &lt;code&gt;core.autocrlf&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;input&lt;/code&gt; 으로 설정된 경우이 값이 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="767fb38cee626faf4bebc702c67f21f5034dd689" translate="yes" xml:space="preserve">
          <source>Sets the transport helper option &amp;lt;name&amp;gt; to &amp;lt;value&amp;gt;. Outputs a single line containing one of &lt;code&gt;ok&lt;/code&gt; (option successfully set), &lt;code&gt;unsupported&lt;/code&gt; (option not recognized) or &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (option &amp;lt;name&amp;gt; is supported but &amp;lt;value&amp;gt; is not valid for it). Options should be set before other commands, and may influence the behavior of those commands.</source>
          <target state="translated">전송 도우미 옵션 &amp;lt;name&amp;gt;을 &amp;lt;value&amp;gt;로 설정합니다. &lt;code&gt;ok&lt;/code&gt; (옵션이 성공적으로 설정 됨), &lt;code&gt;unsupported&lt;/code&gt; 않음 (옵션이 인식되지 않음) 또는 &lt;code&gt;error &amp;lt;msg&amp;gt;&lt;/code&gt; (&amp;lt;name&amp;gt; 옵션은 지원되지만 &amp;lt;value&amp;gt;는 유효하지 않음 ) 중 하나를 포함하는 단일 행을 출력합니다 . 옵션은 다른 명령보다 먼저 설정해야하며 해당 명령의 동작에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38552fb2c7ab669744831fa34346e5ff34c9ae00" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will be picked up by &lt;a href=&quot;git-fsck&quot;&gt;git-fsck[1]&lt;/a&gt;, but to accept pushes of such data set &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; instead, or to clone or fetch it set &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">설정 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 에 의해 픽업 될 &lt;a href=&quot;git-fsck&quot;&gt;자식-fsck가 [1]&lt;/a&gt; 있지만, 이러한 데이터 세트의 푸시 수락 &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 대신 또는 복제하는 또는 설정 페치 &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8d5bb1f4cfa6fbc6e58411c45908a4ed9f34950" translate="yes" xml:space="preserve">
          <source>Setting an unknown &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; value will cause fsck to die, but doing the same for &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; will only cause git to warn.</source>
          <target state="translated">알 수없는 &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 값을 설정하면 fsck가 종료되지만 &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 및 &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; 에 대해 동일하게 수행하면 git이 경고 만합니다 .</target>
        </trans-unit>
        <trans-unit id="ec7eb0199cb3dbce5770abe0a0c2186f2bc8c0a6" translate="yes" xml:space="preserve">
          <source>Setting the &quot;binary&quot; attribute also unsets the &quot;text&quot; and &quot;diff&quot; attributes as above. Note that macro attributes can only be &quot;Set&quot;, though setting one might have the effect of setting or unsetting other attributes or even returning other attributes to the &quot;Unspecified&quot; state.</source>
          <target state="translated">&quot;binary&quot;속성을 설정하면 위와 같이 &quot;text&quot;및 &quot;diff&quot;속성도 설정 해제됩니다. 매크로 속성을 설정하면 다른 속성을 설정 또는 설정 해제하거나 다른 속성을 &quot;지정되지 않음&quot;상태로 되돌릴 수도 있지만 매크로 속성은 &quot;설정&quot;만 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0809d7ae8979681e24885ec19091ca517e2431a" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;mergetool.keepBackup&lt;/code&gt; configuration variable to &lt;code&gt;false&lt;/code&gt; causes &lt;code&gt;git mergetool&lt;/code&gt; to automatically remove the backup as files are successfully merged.</source>
          <target state="translated">&lt;code&gt;mergetool.keepBackup&lt;/code&gt; 구성 변수를 &lt;code&gt;false&lt;/code&gt; 로 설정하면 파일이 성공적으로 병합 될 때 &lt;code&gt;git mergetool&lt;/code&gt; 이 자동으로 백업을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="6f0c93315d42b41cf980b4419425789cdaac4058" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;text&lt;/code&gt; attribute on a path enables end-of-line normalization and marks the path as a text file. End-of-line conversion takes place without guessing the content type.</source>
          <target state="translated">경로에 &lt;code&gt;text&lt;/code&gt; 속성을 설정하면 줄 끝 정규화가 가능하고 경로가 텍스트 파일로 표시됩니다. 줄 끝 변환은 내용 유형을 추측하지 않고 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3d1285aa205a15a3a5aafcd8d0c8d4ab4efd4f97" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; will tell gitweb to use the named file (i.e. in this example &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;) as a configuration for gitweb. You don&amp;rsquo;t really need it in above example; it is required only if your configuration file is in different place than built-in (during compiling gitweb) &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details, especially information about precedence rules.</source>
          <target state="translated">환경 변수 &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; 를 설정하면 gitweb이 명명 된 파일 (예 : &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; )을 gitweb의 구성으로 사용하도록 지시 합니다. 위의 예제에서는 실제로 필요하지 않습니다. 구성 파일이 내장 (gitweb 컴파일 중) &lt;code&gt;gitweb_config.perl&lt;/code&gt; 또는 &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; 와 다른 위치에있는 경우에만 필요합니다 . 우선 순위 규칙에 대한 자세한 내용 은 &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3d285efb6da308c8dd90713d0979acc9d8958228" translate="yes" xml:space="preserve">
          <source>Setting this to 0 disables not only automatic packing based on the number of loose objects, but any other heuristic &lt;code&gt;git gc --auto&lt;/code&gt; will otherwise use to determine if there&amp;rsquo;s work to do, such as &lt;code&gt;gc.autoPackLimit&lt;/code&gt;.</source>
          <target state="translated">이 값을 0으로 설정하면 느슨한 객체 수를 기준으로 자동 패킹을 비활성화 할 수있을뿐 아니라 다른 휴리스틱 &lt;code&gt;git gc --auto&lt;/code&gt; 는 &lt;code&gt;gc.autoPackLimit&lt;/code&gt; 과 같이 수행 할 작업이 있는지 판별하는 데 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ab556d3ed86f8d66a38201c818a74d5378c14e11" translate="yes" xml:space="preserve">
          <source>Setting this to a value &amp;lt;vcs&amp;gt; will cause Git to interact with the remote with the git-remote-&amp;lt;vcs&amp;gt; helper.</source>
          <target state="translated">이것을 &amp;lt;vcs&amp;gt; 값으로 설정하면 Git은 git-remote- &amp;lt;vcs&amp;gt; 헬퍼와 리모트와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="a78325706284f4930016d288e2c051f8a8fd0d2b" translate="yes" xml:space="preserve">
          <source>Setting this value to --no-tags disables automatic tag following when fetching from remote &amp;lt;name&amp;gt;. Setting it to --tags will fetch every tag from remote &amp;lt;name&amp;gt;, even if they are not reachable from remote branch heads. Passing these flags directly to &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; can override this setting. See options --tags and --no-tags of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">이 값을 --no-tags로 설정하면 원격 &amp;lt;name&amp;gt;에서 가져올 때 자동 태그 추적이 비활성화됩니다. --tags로 설정하면 원격 분기 헤드에서 도달 할 수없는 경우에도 원격 &amp;lt;name&amp;gt;에서 모든 태그를 가져옵니다. 이 플래그를 &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]에&lt;/a&gt; 직접 전달하면 이 설정을 무시할 수 있습니다. &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; 의 옵션 --tags 및 --no-tags를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="842c183b9c42b0c2525b9292639925b0e5a22ce0" translate="yes" xml:space="preserve">
          <source>Setting this variable to &quot;true&quot; is the same as setting the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; on all files and core.eol to &quot;crlf&quot;. Set to true if you want to have &lt;code&gt;CRLF&lt;/code&gt; line endings in your working directory and the repository has LF line endings. This variable can be set to &lt;code&gt;input&lt;/code&gt;, in which case no output conversion is performed.</source>
          <target state="translated">이 변수를 &quot;true&quot;로 설정하는 것은 모든 파일 에서 &lt;code&gt;text&lt;/code&gt; 속성을 &quot;auto&quot; 로 설정 하고 core.eol을 &quot;crlf&quot; 로 설정하는 것과 같습니다 . 작업 디렉토리에 &lt;code&gt;CRLF&lt;/code&gt; 줄 끝이 있고 저장소에 LF 줄 끝이 있으면 true로 설정하십시오 . 이 변수는 &lt;code&gt;input&lt;/code&gt; 으로 설정 될 수 있으며 ,이 경우 출력 변환이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f2485239ca9db9231d9dc605e4c20a0278342cb8" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as case-insensitive.</source>
          <target state="translated">이 변수를 &lt;code&gt;1&lt;/code&gt; 로 설정 하면 Git은 모든 경로 스펙을 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ca46b471bd9797687c8acd1761125db08a21576" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as glob patterns (aka &quot;glob&quot; magic).</source>
          <target state="translated">이 변수를 &lt;code&gt;1&lt;/code&gt; 로 설정 하면 Git은 모든 경로 스펙을 glob 패턴 (일명 &quot;glob&quot;매직)으로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="d6f6c7a0196e6bb7bea48f89270c29c4b30ce796" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs as literal (aka &quot;literal&quot; magic).</source>
          <target state="translated">이 변수를 &lt;code&gt;1&lt;/code&gt; 로 설정 하면 Git은 모든 경로 스펙을 리터럴 (일명 &quot;리터럴&quot;매직)로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="5ca9aa98c8773f3ffdcfb04129c5f9a059aea952" translate="yes" xml:space="preserve">
          <source>Setting this variable to &lt;code&gt;1&lt;/code&gt; will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; will search for commits that touch the path &lt;code&gt;*.c&lt;/code&gt;, not any paths that the glob &lt;code&gt;*.c&lt;/code&gt; matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by &lt;code&gt;git ls-tree&lt;/code&gt;, &lt;code&gt;--raw&lt;/code&gt; diff output, etc).</source>
          <target state="translated">이 변수를 &lt;code&gt;1&lt;/code&gt; 로 설정 하면 Git은 글로브 패턴이 아닌 모든 경로 스펙을 문자 그대로 취급합니다. 예를 들어, &lt;code&gt;GIT_LITERAL_PATHSPECS=1 git log -- '*.c'&lt;/code&gt; 를 실행하면 glob &lt;code&gt;*.c&lt;/code&gt; 와 일치 하는 경로가 아니라 &lt;code&gt;*.c&lt;/code&gt; 경로를 터치하는 커밋을 검색합니다 . Git에 리터럴 경로 (예 : &lt;code&gt;git ls-tree&lt;/code&gt; , &lt;code&gt;--raw&lt;/code&gt; diff output 등으로 이전에 제공된 경로)를 제공하는 경우이 방법을 원할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2a80c691de90ce5c2f5bcae0ddb71cd520d2404" translate="yes" xml:space="preserve">
          <source>Setting up a public repository</source>
          <target state="translated">공용 저장소 설정</target>
        </trans-unit>
        <trans-unit id="3d54bc92ce527cc2dc9817e011bfea7d52def59f" translate="yes" xml:space="preserve">
          <source>Setting up a shared repository</source>
          <target state="translated">공유 저장소 설정</target>
        </trans-unit>
        <trans-unit id="85d7095bad4cc89bf24fcc23e9812d88b70300be" translate="yes" xml:space="preserve">
          <source>Setup and Config</source>
          <target state="translated">설정 및 구성</target>
        </trans-unit>
        <trans-unit id="42bf423e8b49af69779df6afbd52c08e60ab95d8" translate="yes" xml:space="preserve">
          <source>Sharing and Updating Projects</source>
          <target state="translated">프로젝트 공유 및 업데이트</target>
        </trans-unit>
        <trans-unit id="5bd75d5b2b55f503aa568f15ed9baa9da5d8844b" translate="yes" xml:space="preserve">
          <source>Sharing development with others</source>
          <target state="translated">다른 사람들과 개발 공유</target>
        </trans-unit>
        <trans-unit id="7a899aac208ff2bb86fe5c7bc28489c4a1362bac" translate="yes" xml:space="preserve">
          <source>Sharing your changes</source>
          <target state="translated">변경 사항 공유</target>
        </trans-unit>
        <trans-unit id="bc5ae6560f23ddf791959b3443d3c0070e504dbd" translate="yes" xml:space="preserve">
          <source>Short (shortened to &lt;code&gt;$projects_list_description_width&lt;/code&gt; in the projects list page, which is 25 characters by default; see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt;) single line description of a project (of a repository). Plain text file; HTML will be escaped. By default set to</source>
          <target state="translated">프로젝트 목록 페이지에서 &lt;code&gt;$projects_list_description_width&lt;/code&gt; 로 단축 ( 기본적으로 25 자, &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt; 참조 ) 프로젝트의 한 줄 설명 (저장소). 일반 텍스트 파일; HTML이 이스케이프됩니다. 기본적으로</target>
        </trans-unit>
        <trans-unit id="5d86956f14bde9ab427b7b6c31b677817dd478ab" translate="yes" xml:space="preserve">
          <source>Short Format</source>
          <target state="translated">짧은 형식</target>
        </trans-unit>
        <trans-unit id="838e7194f933ef4cd0297d8b96a9d80cda6328ea" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;--log-destination=syslog&lt;/code&gt;.</source>
          <target state="translated">에 대한 짧은 &lt;code&gt;--log-destination=syslog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c9f02f4be5538f5a655964a6f76417ed0e96f8f" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--copy --force&lt;/code&gt;.</source>
          <target state="translated">에 대한 바로 가기 &lt;code&gt;--copy --force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56f96ad104be0e60414a9d6fef2d8f4255f1054e" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--delete --force&lt;/code&gt;.</source>
          <target state="translated">에 대한 바로 가기 &lt;code&gt;--delete --force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae41f0ca95cbe8106d76bc74825f096a7f244ce" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;--move --force&lt;/code&gt;.</source>
          <target state="translated">에 대한 바로 가기 &lt;code&gt;--move --force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48b1cb87c7e9a2d1ef18425956f9eed09b368016" translate="yes" xml:space="preserve">
          <source>Shortcut version for a frequently used remote repository:</source>
          <target state="translated">자주 사용하는 원격 저장소의 바로 가기 버전 :</target>
        </trans-unit>
        <trans-unit id="6460a14591c54e9d0ad48cc5a6224ee494fca842" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;eolinfo&amp;gt; and &amp;lt;eolattr&amp;gt; of files. &amp;lt;eolinfo&amp;gt; is the file content identification used by Git when the &quot;text&quot; attribute is &quot;auto&quot; (or not set and core.autocrlf is not false). &amp;lt;eolinfo&amp;gt; is either &quot;-text&quot;, &quot;none&quot;, &quot;lf&quot;, &quot;crlf&quot;, &quot;mixed&quot; or &quot;&quot;.</source>
          <target state="translated">파일의 &amp;lt;eolinfo&amp;gt; 및 &amp;lt;eolattr&amp;gt;을 표시하십시오. &amp;lt;eolinfo&amp;gt;는 &quot;text&quot;속성이 &quot;auto&quot;(또는 설정되어 있지 않고 core.autocrlf가 false가 아님) 인 경우 Git에서 사용하는 파일 내용 식별입니다. &amp;lt;eolinfo&amp;gt;는 &quot;-text&quot;, &quot;none&quot;, &quot;lf&quot;, &quot;crlf&quot;, &quot;mixed&quot;또는 &quot;&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="6a8bdc54a2349a127936d3843203ecd6d2eac153" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading and trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt; 선행 및 후행 줄을 표시하고 연속 된 일치 그룹 사이에 &lt;code&gt;--&lt;/code&gt; 를 포함하는 줄을 배치하십시오 .</target>
        </trans-unit>
        <trans-unit id="f867e00ffafd6cd49c4546fd923f10e52f747e26" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; leading lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt; 행을 표시하고 연속 된 일치 그룹 사이에 &lt;code&gt;--&lt;/code&gt; 을 포함하는 행을 배치하십시오 .</target>
        </trans-unit>
        <trans-unit id="a761d1fc7e4500bf5753e3c7e973fa02308ed552" translate="yes" xml:space="preserve">
          <source>Show &amp;lt;num&amp;gt; trailing lines, and place a line containing &lt;code&gt;--&lt;/code&gt; between contiguous groups of matches.</source>
          <target state="translated">&amp;lt;num&amp;gt; 후행을 표시하고 연속 된 일치 그룹 사이에 &lt;code&gt;--&lt;/code&gt; 를 포함하는 행을 배치하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec26d3779318f9118ffbcaac500e06b8c03b82aa" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; if defined, else &lt;code&gt;$GIT_DIR&lt;/code&gt;.</source>
          <target state="translated">보기 &lt;code&gt;$GIT_COMMON_DIR&lt;/code&gt; 다른 사람이 정의 된 경우에는 &lt;code&gt;$GIT_DIR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7091c2825a946a2f8e36c69c5a82c708d938854f" translate="yes" xml:space="preserve">
          <source>Show &lt;code&gt;$GIT_DIR&lt;/code&gt; if defined. Otherwise show the path to the .git directory. The path shown, when relative, is relative to the current working directory.</source>
          <target state="translated">정의 된 경우 &lt;code&gt;$GIT_DIR&lt;/code&gt; 표시하십시오 . 그렇지 않으면 .git 디렉토리의 경로를 표시하십시오. 상대 경로 인 경우 표시된 경로는 현재 작업 디렉토리에 상대적인 경로입니다.</target>
        </trans-unit>
        <trans-unit id="92bc441ca5dd76e30902fc3cfc432e05960c64fb" translate="yes" xml:space="preserve">
          <source>Show a Git logical variable</source>
          <target state="translated">Git 논리 변수 표시</target>
        </trans-unit>
        <trans-unit id="59a5fc6a75e992fe3955834b9f589f3efdf7f45b" translate="yes" xml:space="preserve">
          <source>Show a browser for the tree of the &lt;code&gt;maint&lt;/code&gt; branch. Files selected in the browser can be viewed with the internal blame viewer.</source>
          <target state="translated">&lt;code&gt;maint&lt;/code&gt; 분기 의 트리에 대한 브라우저를 표시하십시오 . 브라우저에서 선택한 파일은 내부 비난 뷰어로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51464c06cc3ed971f0047721a669b06e6f8dc753" translate="yes" xml:space="preserve">
          <source>Show a confirmation dialog before actually running the tool.</source>
          <target state="translated">실제로 도구를 실행하기 전에 확인 대화 상자를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="6f525616d2d7c1f4fb302645f1046a33897806da" translate="yes" xml:space="preserve">
          <source>Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat.</source>
          <target state="translated">병합 끝에 diffstat를 표시하십시오. diffstat는 구성 옵션 merge.stat에 의해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="328b16c9977fc386d8875a1c0557b3f9bae42a58" translate="yes" xml:space="preserve">
          <source>Show a diffstat of what changed upstream since the last rebase. The diffstat is also controlled by the configuration option rebase.stat.</source>
          <target state="translated">마지막 리베이스 이후 업스트림에서 변경된 내용의 차이를 보여줍니다. diffstat는 구성 옵션 rebase.stat에 의해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="89145a6b6d57b54925b2a014779bdd41b63aab6d" translate="yes" xml:space="preserve">
          <source>Show a word diff, using the &amp;lt;mode&amp;gt; to delimit changed words. By default, words are delimited by whitespace; see &lt;code&gt;--word-diff-regex&lt;/code&gt; below. The &amp;lt;mode&amp;gt; defaults to &lt;code&gt;plain&lt;/code&gt;, and must be one of:</source>
          <target state="translated">&amp;lt;mode&amp;gt;를 사용하여 변경된 단어를 구분하여 단어 diff를 표시하십시오. 기본적으로 단어는 공백으로 구분됩니다. 아래의 &lt;code&gt;--word-diff-regex&lt;/code&gt; 를 참조하십시오. &amp;lt;mode&amp;gt;의 기본값은 &lt;code&gt;plain&lt;/code&gt; 이며 다음 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="2104f8f059827e60ca6f3a921f9a667c9ac35df8" translate="yes" xml:space="preserve">
          <source>Show all available formats.</source>
          <target state="translated">사용 가능한 모든 형식을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="995122a1c6abd2724409485dae28721d5cc2418d" translate="yes" xml:space="preserve">
          <source>Show all branches, tags, or remote-tracking branches, respectively (i.e., refs found in &lt;code&gt;refs/heads&lt;/code&gt;, &lt;code&gt;refs/tags&lt;/code&gt;, or &lt;code&gt;refs/remotes&lt;/code&gt;, respectively).</source>
          <target state="translated">모든 브랜치, 태그 또는 원격 추적 브랜치를 각각 표시합니다 (예 : &lt;code&gt;refs/heads&lt;/code&gt; , &lt;code&gt;refs/tags&lt;/code&gt; 또는 &lt;code&gt;refs/remotes&lt;/code&gt; 각각에있는 참조).</target>
        </trans-unit>
        <trans-unit id="321f7678ea19c696fd3fd95db6c787353e8f0a5f" translate="yes" xml:space="preserve">
          <source>Show all commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the &lt;code&gt;include/scsi&lt;/code&gt; or &lt;code&gt;drivers/scsi&lt;/code&gt; subdirectories</source>
          <target state="translated">&lt;code&gt;include/scsi&lt;/code&gt; 또는 &lt;code&gt;drivers/scsi&lt;/code&gt; 서브 디렉토리의 파일을 변경 한 버전 &lt;code&gt;v2.6.12&lt;/code&gt; 이후의 모든 커밋 표시</target>
        </trans-unit>
        <trans-unit id="d180629218690191e783f9ea37e5d26feab056b5" translate="yes" xml:space="preserve">
          <source>Show all refs (branches, tags, etc.).</source>
          <target state="translated">모든 심판 (지점, 태그 등)을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3e7cf0b7d79082307562ec61629e132b2c74285c" translate="yes" xml:space="preserve">
          <source>Show all refs found in &lt;code&gt;refs/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;refs/&lt;/code&gt; 있는 모든 참조를 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="05ca74609707b569a39bc5511a1daaae1bd87257" translate="yes" xml:space="preserve">
          <source>Show all refs matching the shell glob pattern &lt;code&gt;pattern&lt;/code&gt;. If the pattern does not start with &lt;code&gt;refs/&lt;/code&gt;, this is automatically prepended. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">쉘 글로브 패턴 &lt;code&gt;pattern&lt;/code&gt; 일치하는 모든 참조를 표시합니다 . 패턴이 &lt;code&gt;refs/&lt;/code&gt; 시작하지 않으면 자동으로 앞에 붙습니다. 패턴에 글 로빙 문자 ( &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; 또는 &lt;code&gt;[&lt;/code&gt; ) 가 포함되어 있지 않으면 &lt;code&gt;/*&lt;/code&gt; 를 추가하여 접두사 일치로 바뀝니다 .</target>
        </trans-unit>
        <trans-unit id="4fa56b2fc9907d1086b87e5377bf4476cff2c390" translate="yes" xml:space="preserve">
          <source>Show as patches the commits since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">include / scsi 또는 drivers / scsi 서브 디렉토리의 파일을 변경 한 버전 &lt;code&gt;v2.6.12&lt;/code&gt; 이후의 커밋을 패치로 표시</target>
        </trans-unit>
        <trans-unit id="276551039d5a6f576b01b648390b28318eb26dab" translate="yes" xml:space="preserve">
          <source>Show at most 100 changes made to the file &lt;code&gt;Makefile&lt;/code&gt;. Instead of only looking for changes in the current branch look in all branches.</source>
          <target state="translated">&lt;code&gt;Makefile&lt;/code&gt; 파일에 대해 최대 100 개의 변경 사항을 표시하십시오 . 현재 지점의 변경 사항 만 찾는 대신 모든 지점을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="cc93fcf462d3cdf3d2aeea5e45651f27c396f5a0" translate="yes" xml:space="preserve">
          <source>Show blank SHA-1 for boundary commits. This can also be controlled via the &lt;code&gt;blame.blankboundary&lt;/code&gt; config option.</source>
          <target state="translated">경계 커밋에 대해 빈 SHA-1을 표시합니다. 이는 &lt;code&gt;blame.blankboundary&lt;/code&gt; 구성 옵션을 통해 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eaa41db61e1f1bab3111c0b0f717c116280f3b36" translate="yes" xml:space="preserve">
          <source>Show blank commit object name for boundary commits in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">경계 커밋에 대한 빈 커밋 객체 이름을 &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]에 표시하십시오&lt;/a&gt; . 이 옵션의 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="d4cb9ae41338f332d90c61100df1a02ed4371d7a" translate="yes" xml:space="preserve">
          <source>Show both remote-tracking branches and local branches.</source>
          <target state="translated">원격 추적 지점과 로컬 지점을 모두 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c2301bc581a2d36c1e5747eb8ae04fffb9591539" translate="yes" xml:space="preserve">
          <source>Show branches and their commits</source>
          <target state="translated">지점과 커밋 표시</target>
        </trans-unit>
        <trans-unit id="d55feca71232703b0c06113161bcc96210d9bd44" translate="yes" xml:space="preserve">
          <source>Show brief usage of interactive git-clean.</source>
          <target state="translated">대화식 git-clean의 간단한 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="233374b02c6c18c443fd85da32c678488395ad01" translate="yes" xml:space="preserve">
          <source>Show cached files in the output (default)</source>
          <target state="translated">출력에 캐시 된 파일 표시 (기본값)</target>
        </trans-unit>
        <trans-unit id="ea36f7bdbf7d288541a5d87f6a09bd8649bf7e54" translate="yes" xml:space="preserve">
          <source>Show canonical names and email addresses of contacts</source>
          <target state="translated">연락처의 정식 이름 및 이메일 주소 표시</target>
        </trans-unit>
        <trans-unit id="cfb0dd7a634282eef7f2e441b5e77786240e4318" translate="yes" xml:space="preserve">
          <source>Show changes between commits, commit and working tree, etc</source>
          <target state="translated">커밋, 커밋 및 작업 트리 등의 변경 사항 표시</target>
        </trans-unit>
        <trans-unit id="5a1290ea3e3483a3f5ab5d9ff576cc5a9304f139" translate="yes" xml:space="preserve">
          <source>Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes between two blob objects, or changes between two files on disk.</source>
          <target state="translated">작업 트리와 인덱스 또는 트리 간 변경 사항, 인덱스와 트리 간 변경 사항, 두 트리 간 변경 사항, 두 BLOB 개체 간 변경 사항 또는 디스크의 두 파일 간 변경 사항을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="29297be7cb8a5068699eafedd98e29f9ce3b8ef6" translate="yes" xml:space="preserve">
          <source>Show changes using common diff tools</source>
          <target state="translated">일반적인 diff 도구를 사용하여 변경 사항 표시</target>
        </trans-unit>
        <trans-unit id="e6231251cf44dee07a16dc6977218fd9c6ce32a0" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">유색 차이를 보여줍니다. &lt;code&gt;--color&lt;/code&gt; (즉, &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; 없는 )는 &lt;code&gt;--color=always&lt;/code&gt; 와 같습니다 . &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 은 &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; 또는 &lt;code&gt;auto&lt;/code&gt; 중 하나 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f57a0260693cc114a660b9cc49bd9ca37b9d97bc" translate="yes" xml:space="preserve">
          <source>Show colored diff. &lt;code&gt;--color&lt;/code&gt; (i.e. without &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt;) is the same as &lt;code&gt;--color=always&lt;/code&gt;. &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; can be one of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. It can be changed by the &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;color.diff&lt;/code&gt; configuration settings.</source>
          <target state="translated">유색 차이를 보여줍니다. &lt;code&gt;--color&lt;/code&gt; (즉, &lt;code&gt;=&amp;lt;when&amp;gt;&lt;/code&gt; 없는 )는 &lt;code&gt;--color=always&lt;/code&gt; 와 같습니다 . &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; 은 &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;never&lt;/code&gt; 또는 &lt;code&gt;auto&lt;/code&gt; 중 하나 일 수 있습니다 . &lt;code&gt;color.ui&lt;/code&gt; 및 &lt;code&gt;color.diff&lt;/code&gt; 구성 설정 으로 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1325c8ee6526284b9e19b2d177df5189d833f9f" translate="yes" xml:space="preserve">
          <source>Show colored matches. The value must be always (the default), never, or auto.</source>
          <target state="translated">컬러 경기를 표시합니다. 값은 항상 (기본값), 절대 또는 자동이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ae1799387849e3f0fc844a1cc566a09160bccbf5" translate="yes" xml:space="preserve">
          <source>Show commit logs</source>
          <target state="translated">커밋 로그 표시</target>
        </trans-unit>
        <trans-unit id="091e7ae4df5348623adddab90ca75314d19e3c27" translate="yes" xml:space="preserve">
          <source>Show commit summary between the given commit (defaults to HEAD) and working tree/index. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by &lt;code&gt;--cached&lt;/code&gt;) are shown. If the option &lt;code&gt;--files&lt;/code&gt; is given, show the series of commits in the submodule between the index of the super project and the working tree of the submodule (this option doesn&amp;rsquo;t allow to use the &lt;code&gt;--cached&lt;/code&gt; option or to provide an explicit commit).</source>
          <target state="translated">주어진 커밋 (기본값은 HEAD)과 작업 트리 / 인덱스 사이에 커밋 요약을 표시합니다. 문제가있는 서브 모듈의 경우, 주어진 수퍼 프로젝트 커밋과 인덱스 또는 작업 트리 ( &lt;code&gt;--cached&lt;/code&gt; 로 전환 ) 사이의 서브 모듈에있는 일련의 커밋 이 표시됩니다. &lt;code&gt;--files&lt;/code&gt; 옵션 이 주어지면, 수퍼 프로젝트의 색인과 서브 모듈의 작업 트리 사이의 서브 모듈에 일련의 커밋을 표시하십시오 (이 옵션은 &lt;code&gt;--cached&lt;/code&gt; 옵션 을 사용 하거나 명시 적을 제공하는 것을 허용하지 않습니다) 범하다).</target>
        </trans-unit>
        <trans-unit id="895d627a1559b0f7b8ffb93987e2fbd111bfab2e" translate="yes" xml:space="preserve">
          <source>Show commits more recent than a specific date.</source>
          <target state="translated">특정 날짜보다 최근 커밋을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="10992a126510a25dfd1dd64a15502560e4eb97fe" translate="yes" xml:space="preserve">
          <source>Show commits older than a specific date.</source>
          <target state="translated">특정 날짜보다 오래된 커밋을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="65509170881e19fa232abfecd80c1044bc1bc01b" translate="yes" xml:space="preserve">
          <source>Show conflicts in &quot;diff3&quot; style.</source>
          <target state="translated">&quot;diff3&quot;스타일로 충돌을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="a627c4be174c8a5ee15f7fc10aa836495b1089c5" translate="yes" xml:space="preserve">
          <source>Show deleted files in the output</source>
          <target state="translated">출력에서 삭제 된 파일 표시</target>
        </trans-unit>
        <trans-unit id="84454ab6d9a5866ee531cd5f7e98a88b4117a393" translate="yes" xml:space="preserve">
          <source>Show directions on how to proceed from the current state in the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt;, in the template shown when writing commit messages in &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, and in the help message shown by &lt;a href=&quot;git-switch&quot;&gt;git-switch[1]&lt;/a&gt; or &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; when switching branch.</source>
          <target state="translated">&lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; 에 커밋 메시지를 작성할 때 표시되는 템플릿 과 &lt;a href=&quot;git-switch&quot;&gt;git-switch [1]에&lt;/a&gt; 의해 표시된 도움말 메시지에서 &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; 의 출력에서 ​​현재 상태로 진행하는 방법에 대한 지시 사항을 표시 하십시오 . 또는 분기를 전환 할 때 &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc1f3cf9452e6039731a7a1df5dffca4ae78ea2" translate="yes" xml:space="preserve">
          <source>Show every object whose name begins with the given prefix. The &amp;lt;prefix&amp;gt; must be at least 4 hexadecimal digits long to avoid listing each and every object in the repository by mistake.</source>
          <target state="translated">이름이 주어진 접두사로 시작하는 모든 객체를 표시하십시오. 실수로 저장소의 각 오브젝트를 나열하지 않도록 &amp;lt;prefix&amp;gt;는 16 진수 이상의 4 자리 여야합니다.</target>
        </trans-unit>
        <trans-unit id="0d94de8daf12eebfa732214b2af1b9a367d2d94d" translate="yes" xml:space="preserve">
          <source>Show files on the filesystem that need to be removed due to file/directory conflicts for checkout-index to succeed.</source>
          <target state="translated">checkout-index가 성공하려면 파일 / 디렉토리 충돌로 인해 제거해야하는 파일 시스템의 파일을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="ad0ababacc675e26eaf1a0889c9c6ef14ce3769a" translate="yes" xml:space="preserve">
          <source>Show given paths which don&amp;rsquo;t match any pattern. This only makes sense when &lt;code&gt;--verbose&lt;/code&gt; is enabled, otherwise it would not be possible to distinguish between paths which match a pattern and those which don&amp;rsquo;t.</source>
          <target state="translated">패턴과 일치하지 않는 주어진 경로를 표시하십시오. &lt;code&gt;--verbose&lt;/code&gt; 가 활성화 된 경우에만 의미 가 있습니다. 그렇지 않으면 패턴과 일치하는 경로와 그렇지 않은 경로를 구별 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="762aaa5ab5565ca8e2b3774059028eb53b59477c" translate="yes" xml:space="preserve">
          <source>Show help message.</source>
          <target state="translated">도움말 메시지를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="838b52958b292fca61c3a5108dd4ee2a3a75c971" translate="yes" xml:space="preserve">
          <source>Show ignored files as well.</source>
          <target state="translated">무시 된 파일도 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="e68b8eea48173094c49e93c786ee56fa7184a0b7" translate="yes" xml:space="preserve">
          <source>Show in a format designed for machine consumption.</source>
          <target state="translated">기계 소 비용으로 설계된 형식으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="db93b492cc402222428883561395c8e5b81cce1c" translate="yes" xml:space="preserve">
          <source>Show information about files in the index and the working tree</source>
          <target state="translated">색인 및 작업 트리의 파일에 대한 정보 표시</target>
        </trans-unit>
        <trans-unit id="d2d64dc76cbd792285e7b6cfa7570beea5afa702" translate="yes" xml:space="preserve">
          <source>Show just what commits would be submitted to p4; do not change state in Git or p4.</source>
          <target state="translated">p4에 제출할 커밋을 보여줍니다. Git 또는 p4의 상태를 변경하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="76fafda4935f99c8dd9af522c6c8e19e60857b59" translate="yes" xml:space="preserve">
          <source>Show logs with difference each commit introduces</source>
          <target state="translated">커밋이 도입 한 차이와 함께 로그 표시</target>
        </trans-unit>
        <trans-unit id="aa7fe52bb648501db2c178df84cc787b4333ba17" translate="yes" xml:space="preserve">
          <source>Show long rev (Default: off).</source>
          <target state="translated">긴 개정 표시 (기본값 : 해제).</target>
        </trans-unit>
        <trans-unit id="5e7221f97ed7eacfd8cdc162cdb28622dbce9b38" translate="yes" xml:space="preserve">
          <source>Show modified files in the output</source>
          <target state="translated">출력에 수정 된 파일 표시</target>
        </trans-unit>
        <trans-unit id="68201a6a34d181c9493b1441e79fe99724faace5" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, and avoid showing commits on multiple lines of history intermixed.</source>
          <target state="translated">모든 자식이 표시되기 전에 부모를 표시하지 말고 여러 줄의 역사가 섞인 커밋을 표시하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8b60cbbf5a70ba9636b88509153ae8ade5e1cc90" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the author timestamp order.</source>
          <target state="translated">모든 자식이 표시되기 전에 부모를 표시하지 않지만 작성자 타임 스탬프 순서대로 커밋을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="fc0432ce52689cf9d25cd4a23e5fba4317479073" translate="yes" xml:space="preserve">
          <source>Show no parents before all of its children are shown, but otherwise show commits in the commit timestamp order.</source>
          <target state="translated">모든 자식이 표시되기 전에 부모를 표시하지 않으면 커밋 타임 스탬프 순서로 커밋을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f771bb437a0a632ca38fbb772c5f1f11e2687b42" translate="yes" xml:space="preserve">
          <source>Show object size of blob (file) entries.</source>
          <target state="translated">얼룩 (파일) 항목의 객체 크기를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="8ab164ff8a8b9e0dee1e1b73990f42cea75d4c17" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &quot;Specifying Ranges&quot; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">지정된 개정 범위의 커밋 만 표시합니다. &amp;lt;개정 범위&amp;gt;가 지정되지 않은 경우 기본값은 &lt;code&gt;HEAD&lt;/code&gt; (즉, 현재 커밋으로 이어지는 전체 기록)입니다. &lt;code&gt;origin..HEAD&lt;/code&gt; 는 현재 커밋 (예 : &lt;code&gt;HEAD&lt;/code&gt; ) 에서 도달 할 수 있지만 &lt;code&gt;origin&lt;/code&gt; 에서는 도달 할 수없는 모든 커밋을 지정합니다 . &amp;lt;개정 범위&amp;gt; 철자법의 전체 목록은 &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; 의 &quot;범위 지정&quot;섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="329dbdc2afc2b5cab87309e7fc9f29edaec58da0" translate="yes" xml:space="preserve">
          <source>Show only commits in the specified revision range. When no &amp;lt;revision range&amp;gt; is specified, it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the whole history leading to the current commit). &lt;code&gt;origin..HEAD&lt;/code&gt; specifies all the commits reachable from the current commit (i.e. &lt;code&gt;HEAD&lt;/code&gt;), but not from &lt;code&gt;origin&lt;/code&gt;. For a complete list of ways to spell &amp;lt;revision range&amp;gt;, see the &lt;code&gt;Specifying Ranges&lt;/code&gt; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">지정된 개정 범위의 커밋 만 표시합니다. &amp;lt;개정 범위&amp;gt;가 지정되지 않은 경우 기본값은 &lt;code&gt;HEAD&lt;/code&gt; (즉, 현재 커밋으로 이어지는 전체 기록)입니다. &lt;code&gt;origin..HEAD&lt;/code&gt; 는 현재 커밋 (예 : &lt;code&gt;HEAD&lt;/code&gt; ) 에서 도달 할 수 있지만 &lt;code&gt;origin&lt;/code&gt; 에서는 도달 할 수없는 모든 커밋을 지정합니다 . &amp;lt;개정 범위&amp;gt; 철자법의 전체 목록 은 &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; 의 &lt;code&gt;Specifying Ranges&lt;/code&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c46a13d2904f8d6c610a867599fe01f9862dd57c" translate="yes" xml:space="preserve">
          <source>Show only commits that are enough to explain how the files that match the specified paths came to be. See &lt;code&gt;History Simplification&lt;/code&gt; below for details and other simplification modes.</source>
          <target state="translated">지정된 경로와 일치하는 파일이 어떻게 만들어 졌는지 설명하기에 충분한 커밋 만 표시하십시오. 자세한 내용 및 기타 단순화 모드는 아래의 &lt;code&gt;History Simplification&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="66430bcd7753c6221125437192d0fae1e7031a91" translate="yes" xml:space="preserve">
          <source>Show only commits which have at least (or at most) that many parent commits. In particular, &lt;code&gt;--max-parents=1&lt;/code&gt; is the same as &lt;code&gt;--no-merges&lt;/code&gt;, &lt;code&gt;--min-parents=2&lt;/code&gt; is the same as &lt;code&gt;--merges&lt;/code&gt;. &lt;code&gt;--max-parents=0&lt;/code&gt; gives all root commits and &lt;code&gt;--min-parents=3&lt;/code&gt; all octopus merges.</source>
          <target state="translated">많은 상위 커밋이있는 커밋 만 표시합니다. 특히에서 &lt;code&gt;--max-parents=1&lt;/code&gt; 과 동일 &lt;code&gt;--no-merges&lt;/code&gt; , &lt;code&gt;--min-parents=2&lt;/code&gt; 와 동일 &lt;code&gt;--merges&lt;/code&gt; . &lt;code&gt;--max-parents=0&lt;/code&gt; 은 모든 루트 커밋을 제공하고 &lt;code&gt;--min-parents=3&lt;/code&gt; 은 모든 문어 병합을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="af5969993dd03043080efc38142a1ed4316038eb" translate="yes" xml:space="preserve">
          <source>Show only ignored files in the output. When showing files in the index, print only those matched by an exclude pattern. When showing &quot;other&quot; files, show only those matched by an exclude pattern. Standard ignore rules are not automatically activated, therefore at least one of the &lt;code&gt;--exclude*&lt;/code&gt; options is required.</source>
          <target state="translated">출력에서 무시 된 파일 만 표시하십시오. 색인에 파일을 표시 할 때 제외 패턴과 일치하는 파일 만 인쇄하십시오. &quot;기타&quot;파일을 표시 할 때 제외 패턴과 일치하는 파일 만 표시하십시오. 표준 무시 규칙은 자동으로 활성화되지 않으므로 &lt;code&gt;--exclude*&lt;/code&gt; 옵션 중 하나 이상 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="002b0d2d59d3dcff4e51f5a87881355bfa57f547" translate="yes" xml:space="preserve">
          <source>Show only modification, rename, and copy, but not addition or deletion.</source>
          <target state="translated">수정, 이름 바꾸기 및 복사 만 표시하고 추가 또는 삭제는 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c49ead1d682188547c7f67234f6eb73a64f21cf" translate="yes" xml:space="preserve">
          <source>Show only names and status of changed files. See the description of the &lt;code&gt;--diff-filter&lt;/code&gt; option on what the status letters mean.</source>
          <target state="translated">변경된 파일의 이름과 상태 만 표시합니다. 상태 문자의 의미에 대해서는 &lt;code&gt;--diff-filter&lt;/code&gt; 옵션에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ce605c7552a8aba98345c842476a27b2a9c28e4" translate="yes" xml:space="preserve">
          <source>Show only names and the nature of change, but not actual diff output.</source>
          <target state="translated">이름과 변경 특성 만 표시하지만 실제 diff 출력은 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="835669256cac48c4e209f28cd6e5b641f9186e51" translate="yes" xml:space="preserve">
          <source>Show only names of changed files.</source>
          <target state="translated">변경된 파일 이름 만 표시합니다.</target>
        </trans-unit>
        <trans-unit id="be1dc5236687c9842a30e8f5499d3363ce72f159" translate="yes" xml:space="preserve">
          <source>Show only the named tree entry itself, not its children.</source>
          <target state="translated">자식이 아닌 명명 된 트리 항목 자체 만 표시합니다.</target>
        </trans-unit>
        <trans-unit id="8c61ca2fb81ac3434e9edecd88dadef66a32e9a7" translate="yes" xml:space="preserve">
          <source>Show only unmerged branches in the &lt;code&gt;revPrompt&lt;/code&gt; subdialog. This is useful for tools similar to merge or rebase, but not for things like checkout or reset.</source>
          <target state="translated">&lt;code&gt;revPrompt&lt;/code&gt; 하위 대화 상자에 병합되지 않은 분기 만 표시하십시오 . 이는 병합 또는 리베이스와 유사한 도구에는 유용하지만 체크 아웃 또는 재설정과 같은 도구에는 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bcce9ca1424c944de6ae0083c8d4fdfea35ee963" translate="yes" xml:space="preserve">
          <source>Show other (i.e. untracked) files in the output</source>
          <target state="translated">출력에 다른 (즉, 추적되지 않은) 파일 표시</target>
        </trans-unit>
        <trans-unit id="b66aeda059663e06293f23a26a8d9280cb01bb39" translate="yes" xml:space="preserve">
          <source>Show packed archive index</source>
          <target state="translated">압축 아카이브 색인 표시</target>
        </trans-unit>
        <trans-unit id="867eafced11331f75ab644a43b8e1a6c8a1b09e5" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as objects are considered. The &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; text will be printed with each progress update.</source>
          <target state="translated">오브젝트가 고려 될 때 stderr에 진행 보고서를 표시하십시오. &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; 텍스트가 각각 진행 업데이트로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="f20a140b8853bef6c5df99f49ec5adde7b92f174" translate="yes" xml:space="preserve">
          <source>Show progress reports on stderr as patches are generated.</source>
          <target state="translated">패치가 생성 될 때 stderr에 진행 보고서를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="873f06beb8dcdfdf113f3a3696210210ae4585eb" translate="yes" xml:space="preserve">
          <source>Show progress.</source>
          <target state="translated">진행 상황을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0aa1726b9011fcb05b9b5a738460be2bb61ef6af" translate="yes" xml:space="preserve">
          <source>Show raw timestamp (Default: off).</source>
          <target state="translated">원시 타임 스탬프를 표시합니다 (기본값 : 해제).</target>
        </trans-unit>
        <trans-unit id="7167725b750724d1668f3392932bcc3766402e73" translate="yes" xml:space="preserve">
          <source>Show recursive diffs.</source>
          <target state="translated">재귀 diff를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="4a21113a85b9e00a6d43c59bc8a68e2e1734a7de" translate="yes" xml:space="preserve">
          <source>Show references matching one or more patterns. Patterns are matched from the end of the full name, and only complete parts are matched, e.g. &lt;code&gt;master&lt;/code&gt; matches &lt;code&gt;refs/heads/master&lt;/code&gt;, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;, &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; but not &lt;code&gt;refs/heads/mymaster&lt;/code&gt; or &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt;.</source>
          <target state="translated">하나 이상의 패턴과 일치하는 참조를 표시합니다. 전체 이름의 끝에서 패턴이 일치하고 &lt;code&gt;master&lt;/code&gt; 일치 &lt;code&gt;refs/heads/master&lt;/code&gt; , &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; , &lt;code&gt;refs/tags/jedi/master&lt;/code&gt; 와 일치 하지만 &lt;code&gt;refs/heads/mymaster&lt;/code&gt; 또는 &lt;code&gt;refs/remotes/master/jedi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5256f8d763cc4d210c603b98ae747ed57f6b9b37" translate="yes" xml:space="preserve">
          <source>Show repository only if this file exists (in repository). Only effective if this variable evaluates to true. Can be set when building gitweb by setting &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt;. This path is relative to &lt;code&gt;GIT_DIR&lt;/code&gt;. git-daemon[1] uses &lt;code&gt;git-daemon-export-ok&lt;/code&gt;, unless started with &lt;code&gt;--export-all&lt;/code&gt;. By default this variable is not set, which means that this feature is turned off.</source>
          <target state="translated">이 파일이 존재하는 경우에만 (저장소에) 저장소를 표시하십시오. 이 변수가 true로 평가되는 경우에만 유효합니다. &lt;code&gt;GITWEB_EXPORT_OK&lt;/code&gt; 를 설정하여 gitweb을 빌드 할 때 설정할 수 있습니다 . 이 경로는 &lt;code&gt;GIT_DIR&lt;/code&gt; 에 상대적 입니다. git-daemon [1]은 &lt;code&gt;--export-all&lt;/code&gt; 로 시작하지 않는 한 &lt;code&gt;git-daemon-export-ok&lt;/code&gt; 를 사용합니다 . 기본적으로이 변수는 설정되어 있지 않으므로이 기능이 해제되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="61630b8887fba0c6ae1f6471c93d4b1ac2d78421" translate="yes" xml:space="preserve">
          <source>Show staged contents' mode bits, object name and stage number in the output.</source>
          <target state="translated">출력에 스테이지 컨텐츠의 모드 비트, 오브젝트 이름 및 스테이지 번호를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="146391550f639861a0610768d29eef80cf7e2b56" translate="yes" xml:space="preserve">
          <source>Show the HEAD reference, even if it would normally be filtered out.</source>
          <target state="translated">일반적으로 필터링되는 경우에도 HEAD 참조를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="fea0b0dc87e518d09c89e0b3cebe67d85f5ef7a7" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the root of the superproject&amp;rsquo;s working tree (if exists) that uses the current repository as its submodule. Outputs nothing if the current repository is not used as a submodule by any project.</source>
          <target state="translated">현재 저장소를 서브 모듈로 사용하는 수퍼 프로젝트의 작업 트리 루트 (있는 경우)의 절대 경로를 표시하십시오. 현재 저장소가 프로젝트에서 하위 모듈로 사용되지 않으면 아무것도 출력하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81d568ac49f075957202365490a4c231f9c1f3ac" translate="yes" xml:space="preserve">
          <source>Show the absolute path of the top-level directory of the working tree. If there is no working tree, report an error.</source>
          <target state="translated">작업 트리 최상위 디렉토리의 절대 경로를 표시하십시오. 작업 트리가 없으면 오류를보고하십시오.</target>
        </trans-unit>
        <trans-unit id="d58575cff5ae50bf5388e0984f120c24ef0b57bb" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name (Default: off). This can also be controlled via the &lt;code&gt;blame.showEmail&lt;/code&gt; config option.</source>
          <target state="translated">저자 이름 대신 작성자 이메일을 표시합니다 (기본값 : 꺼짐). &lt;code&gt;blame.showEmail&lt;/code&gt; 구성 옵션을 통해 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ecb96a53849cc4ea467a6d904be25f5e345a592" translate="yes" xml:space="preserve">
          <source>Show the author email instead of author name in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This option defaults to false.</source>
          <target state="translated">&lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; 에 저자 이름 대신 저자 이메일을 표시하십시오 . 이 옵션의 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="4bcbe1ac6c4bdbbf9ea91698126aa20a057ccc2c" translate="yes" xml:space="preserve">
          <source>Show the branch and tracking info even in short-format.</source>
          <target state="translated">분기 및 추적 정보를 짧은 형식으로도 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="a7915b46ed412ee27d561c779d7568440c30d97c" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &quot;--&quot; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">지난 2 주 동안 &lt;code&gt;gitk&lt;/code&gt; 파일에 대한 변경 사항을 표시하십시오 . &quot;-&quot;는 &lt;code&gt;gitk&lt;/code&gt; 라는 &lt;strong&gt;브랜치&lt;/strong&gt; 와의 혼동을 피하기 위해 필요합니다</target>
        </trans-unit>
        <trans-unit id="a8fc389f3fa0446576124b8d36bfb677216cd040" translate="yes" xml:space="preserve">
          <source>Show the changes during the last two weeks to the file &lt;code&gt;gitk&lt;/code&gt;. The &lt;code&gt;--&lt;/code&gt; is necessary to avoid confusion with the &lt;strong&gt;branch&lt;/strong&gt; named &lt;code&gt;gitk&lt;/code&gt;</source>
          <target state="translated">지난 2 주 동안 &lt;code&gt;gitk&lt;/code&gt; 파일에 대한 변경 사항을 표시하십시오 . 는 &lt;code&gt;--&lt;/code&gt; 와 혼동을 피하기 위해 필요한 &lt;strong&gt;지점&lt;/strong&gt; 이름 &lt;code&gt;gitk&lt;/code&gt; 이</target>
        </trans-unit>
        <trans-unit id="877bab942fc51a3086fcc16e754d1712669dc82e" translate="yes" xml:space="preserve">
          <source>Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created. When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, it shows the latest one. By default, the command shows the diffstat, but it will accept any format known to &lt;code&gt;git diff&lt;/code&gt; (e.g., &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; to view the second most recent entry in patch form). You can use stash.showStat and/or stash.showPatch config variables to change the default behavior.</source>
          <target state="translated">숨김 항목에 처음 기록되었을 때 숨김 컨텐츠와 커밋 백 간의 차이로 숨김 항목에 기록 된 변경 사항을 표시하십시오. &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; 가 제공 되지 않으면 가장 최근의 것이 표시됩니다. 기본적으로이 명령은 diffstat를 표시하지만 &lt;code&gt;git diff&lt;/code&gt; 로 알려진 형식 (예 : &lt;code&gt;git stash show -p stash@{1}&lt;/code&gt; 을 사용하여 가장 최근의 두 번째 항목을 패치 형식으로 표시) 을 승인합니다 . stash.showStat 및 / 또는 stash.showPatch 구성 변수를 사용하여 기본 동작을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dc3c2578e3a9fa987c1a16be4e18cd8d21ed499" translate="yes" xml:space="preserve">
          <source>Show the changes since version &lt;code&gt;v2.6.12&lt;/code&gt; that changed any file in the include/scsi or drivers/scsi subdirectories</source>
          <target state="translated">include / scsi 또는 drivers / scsi 서브 디렉토리의 파일을 변경 한 버전 &lt;code&gt;v2.6.12&lt;/code&gt; 이후의 변경 사항 표시</target>
        </trans-unit>
        <trans-unit id="59882bbc15f62948be114af14833ad7f6dee5f50" translate="yes" xml:space="preserve">
          <source>Show the commit itself and the commit log message even if the diff itself is empty.</source>
          <target state="translated">diff 자체가 비어 있어도 커밋 자체와 커밋 로그 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="8a1797e0ff002e85bbdedc5376243381a92ddebf" translate="yes" xml:space="preserve">
          <source>Show the commit subjects next to the SHA1s.</source>
          <target state="translated">SHA1 옆에 커밋 제목을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="13a02f2303b4ed4a2167fcf812fcf1ac53740ea9" translate="yes" xml:space="preserve">
          <source>Show the commits that are in the &quot;test&quot; branch but not yet in the &quot;release&quot; branch, along with the list of paths each commit modifies.</source>
          <target state="translated">&quot;test&quot;브랜치에는 있지만 아직 &quot;release&quot;브랜치에는없는 커밋을 각 커밋이 수정하는 경로 목록과 함께 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="724ae33ae952d72a471b3d97f22a84d58cfd2176" translate="yes" xml:space="preserve">
          <source>Show the content as converted by the filters configured in the current working tree for the given &amp;lt;path&amp;gt; (i.e. smudge filters, end-of-line conversion, etc). In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt;.</source>
          <target state="translated">주어진 &amp;lt;path&amp;gt;에 대해 현재 작업 트리에 구성된 필터 (예 : 얼룩 필터, 라인 끝 변환 등)로 변환 된 내용을 표시합니다. 이 경우 &amp;lt;object&amp;gt;는 &amp;lt;tree-ish&amp;gt; : &amp;lt;path&amp;gt; 또는 : &amp;lt;path&amp;gt; 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="be70371f28252f06cf6503a94132408841f759d7" translate="yes" xml:space="preserve">
          <source>Show the content as transformed by a textconv filter. In this case, &amp;lt;object&amp;gt; has to be of the form &amp;lt;tree-ish&amp;gt;:&amp;lt;path&amp;gt;, or :&amp;lt;path&amp;gt; in order to apply the filter to the content recorded in the index at &amp;lt;path&amp;gt;.</source>
          <target state="translated">textconv 필터로 변환 된 내용을 표시하십시오. 이 경우 &amp;lt;path&amp;gt;의 색인에 기록 된 내용에 필터를 적용하려면 &amp;lt;object&amp;gt;의 형식이 &amp;lt;tree-ish&amp;gt; : &amp;lt;path&amp;gt; 또는 : &amp;lt;path&amp;gt; 여야합니다.</target>
        </trans-unit>
        <trans-unit id="78813d71262485f1cc698929fd8f6ed3ab93eba8" translate="yes" xml:space="preserve">
          <source>Show the contents of &lt;code&gt;Makefile&lt;/code&gt; in revision &lt;code&gt;v0.99.8&lt;/code&gt; and provide annotations for each line. Unlike the above example the file is read from the object database and not the working directory.</source>
          <target state="translated">개정판 &lt;code&gt;v0.99.8&lt;/code&gt; 에 &lt;code&gt;Makefile&lt;/code&gt; 의 내용을 표시하고 각 줄에 주석을 제공하십시오. 위의 예와 달리 파일은 작업 디렉토리가 아닌 오브젝트 데이터베이스에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="5c3c76e526574e694470512f190e4502f8d279a5" translate="yes" xml:space="preserve">
          <source>Show the contents of the file &lt;code&gt;Makefile&lt;/code&gt; in the current working directory, and provide annotations for both the original author of each line, and who moved the line to its current location. The uncommitted file is annotated, and uncommitted changes (if any) are explicitly attributed to &lt;code&gt;Not Yet Committed&lt;/code&gt;.</source>
          <target state="translated">현재 작업 디렉토리에 &lt;code&gt;Makefile&lt;/code&gt; 파일의 내용을 표시하고 각 줄의 원래 작성자와 해당 줄을 현재 위치로 이동 한 사람 모두에게 주석을 제공하십시오. 커밋되지 않은 파일이 주석하고, 커밋되지 않은 변경 (있는 경우)를 명시 적으로에 기인 &lt;code&gt;Not Yet Committed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e218b59d83785be7915643dfc5b6a7b490def489" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing hunks that are close to each other. Defaults to &lt;code&gt;diff.interHunkContext&lt;/code&gt; or 0 if the config option is unset.</source>
          <target state="translated">diff hunk 사이에 지정된 행 수까지 컨텍스트를 표시하여 서로 가까운 hunk를 융합하십시오. 기본값은 &lt;code&gt;diff.interHunkContext&lt;/code&gt; 이거나 config 옵션이 설정되지 않은 경우 0입니다.</target>
        </trans-unit>
        <trans-unit id="738d68d4dedc5068c7659d3b55ae573e291dd6e6" translate="yes" xml:space="preserve">
          <source>Show the context between diff hunks, up to the specified number of lines, thereby fusing the hunks that are close to each other. This value serves as the default for the &lt;code&gt;--inter-hunk-context&lt;/code&gt; command line option.</source>
          <target state="translated">지정된 수의 줄까지 diff hunk 사이의 컨텍스트를 표시하여 서로 가까운 hunk를 융합하십시오. 이 값은 &lt;code&gt;--inter-hunk-context&lt;/code&gt; 명령 줄 옵션 의 기본값으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4f70107eeb8997652e58a1d8572c279efb177133" translate="yes" xml:space="preserve">
          <source>Show the current patch in an interactive rebase or when rebase is stopped because of conflicts. This is the equivalent of &lt;code&gt;git show REBASE_HEAD&lt;/code&gt;.</source>
          <target state="translated">대화식 리베이스 또는 충돌로 인해 리베이스가 중지 된 경우 현재 패치를 표시합니다. 이것은 &lt;code&gt;git show REBASE_HEAD&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="70f379614ad3c3f540d932681a54d5c082f0dab9" translate="yes" xml:space="preserve">
          <source>Show the email address of each author.</source>
          <target state="translated">각 저자의 이메일 주소를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="7d75f0f1d94f4cb5fb2f3f4826ebeee8b6bd4db1" translate="yes" xml:space="preserve">
          <source>Show the entire e-mail message &quot;git am&quot; has stopped at, because of conflicts.</source>
          <target state="translated">충돌로 인해 전체 전자 메일 메시지 &quot;git am&quot;이 중지되었음을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="172de3da6fec23b745b3f7495e42b18d6ff2e3d5" translate="yes" xml:space="preserve">
          <source>Show the filename above the matches in that file instead of at the start of each shown line.</source>
          <target state="translated">표시된 각 줄의 시작 부분이 아니라 해당 파일에서 일치하는 파일 이름 위에 파일 이름을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="f95469ae696b3f00df813ab275db8edbf948a14b" translate="yes" xml:space="preserve">
          <source>Show the filename in the original commit. By default the filename is shown if there is any line that came from a file with a different name, due to rename detection.</source>
          <target state="translated">원래 커밋에 파일 이름을 표시하십시오. 이름 바꾸기 감지로 인해 다른 이름의 파일에서 나온 행이 있으면 기본적으로 파일 이름이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3e3d59b4bf16e3f56b771d2e4d942efd80dd4d82" translate="yes" xml:space="preserve">
          <source>Show the full 40-byte hexadecimal commit object name. This negates &lt;code&gt;--abbrev-commit&lt;/code&gt; and those options which imply it such as &quot;--oneline&quot;. It also overrides the &lt;code&gt;log.abbrevCommit&lt;/code&gt; variable.</source>
          <target state="translated">전체 40 바이트 16 진 확약 오브젝트 이름을 표시하십시오. 이것은 &lt;code&gt;--abbrev-commit&lt;/code&gt; 과 &quot;--oneline&quot;과 같은 옵션을 무시합니다. 또한 &lt;code&gt;log.abbrevCommit&lt;/code&gt; 변수를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="f9a9f3cf0d88f67dc0a2f911b2a17556553b49ba" translate="yes" xml:space="preserve">
          <source>Show the given destination prefix instead of &quot;b/&quot;.</source>
          <target state="translated">&quot;b /&quot;대신 지정된 대상 접두사를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="4a610521917af2112009fac9ef83beff567eff6c" translate="yes" xml:space="preserve">
          <source>Show the given source prefix instead of &quot;a/&quot;.</source>
          <target state="translated">&quot;a /&quot;대신 지정된 소스 접두사를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="77be67edff03e9adcf5b9f00110ef7e89bbf43f4" translate="yes" xml:space="preserve">
          <source>Show the line number in the original commit (Default: off).</source>
          <target state="translated">원래 커밋에 줄 번호를 표시하십시오 (기본값 : off).</target>
        </trans-unit>
        <trans-unit id="7fc90bd9d374d0e136811a02e380e22be094fea9" translate="yes" xml:space="preserve">
          <source>Show the notes (see &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;) that annotate the commit, when showing the commit log message. This is the default for &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git show&lt;/code&gt; and &lt;code&gt;git whatchanged&lt;/code&gt; commands when there is no &lt;code&gt;--pretty&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, or &lt;code&gt;--oneline&lt;/code&gt; option given on the command line.</source>
          <target state="translated">커밋 로그 메시지를 표시 할 때 커밋에 주석을 &lt;a href=&quot;git-notes&quot;&gt;달는&lt;/a&gt; 노트 ( git-notes [1] 참조 )를 표시하십시오. 이것은 명령 행에 &lt;code&gt;--pretty&lt;/code&gt; , &lt;code&gt;--format&lt;/code&gt; 또는 &lt;code&gt;--oneline&lt;/code&gt; 옵션 이 없을 때 &lt;code&gt;git log&lt;/code&gt; , &lt;code&gt;git show&lt;/code&gt; 및 &lt;code&gt;git whatchanged&lt;/code&gt; 명령 의 기본값입니다 .</target>
        </trans-unit>
        <trans-unit id="5d9c16ddef53da23b241c4981fec0a65a72c29ca" translate="yes" xml:space="preserve">
          <source>Show the notes for a given object (defaults to HEAD).</source>
          <target state="translated">주어진 개체에 대한 메모를 표시합니다 (기본값은 HEAD).</target>
        </trans-unit>
        <trans-unit id="f0bfdb6e91a5688fc1141d3407d575275f304926" translate="yes" xml:space="preserve">
          <source>Show the number of entries currently stashed away.</source>
          <target state="translated">현재 숨겨져있는 항목 수를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3c9a6685a00f511f81c04581bd599d8474c49f6d" translate="yes" xml:space="preserve">
          <source>Show the object format (hash algorithm) used for the repository for storage inside the &lt;code&gt;.git&lt;/code&gt; directory, input, or output. For input, multiple algorithms may be printed, space-separated. If not specified, the default is &quot;storage&quot;.</source>
          <target state="translated">&lt;code&gt;.git&lt;/code&gt; 디렉토리, 입력 또는 출력 내에 저장하기 위해 저장소에 사용 된 오브젝트 형식 (해시 알고리즘)을 표시하십시오 . 입력을 위해 여러 알고리즘이 인쇄되어 공백으로 분리 될 수 있습니다. 지정하지 않으면 기본값은 &quot;storage&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2065145a8ccf699cb187c308bae854443dde9e61" translate="yes" xml:space="preserve">
          <source>Show the path to the shared index file in split index mode, or empty if not in split-index mode.</source>
          <target state="translated">분할 색인 모드에서 공유 색인 파일의 경로를 표시하거나 분할 색인 모드가 아닌 경우 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc95b34844d65ed902bda405925620eb3e5a1983" translate="yes" xml:space="preserve">
          <source>Show the porcelain format, but output commit information for each line, not just the first time a commit is referenced. Implies --porcelain.</source>
          <target state="translated">도자기 형식을 보여 주지만 커밋이 처음 참조 될 때만이 아니라 각 행에 대한 커밋 정보를 출력합니다. 도자기를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c81496056d90f54bdff08b7b7019335227bad0b2" translate="yes" xml:space="preserve">
          <source>Show the preceding line that contains the function name of the match, unless the matching line is a function name itself. The name is determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="translated">일치하는 행이 함수 이름 자체가 아닌 한, 일치하는 함수 이름이 포함 된 선행 행을 표시하십시오. 이름은 &lt;code&gt;git diff&lt;/code&gt; 가 패치 덩어리 헤더 를 처리하는 것과 같은 방식으로 결정됩니다 ( &lt;a href=&quot;gitattributes&quot;&gt;gitattributes&lt;/a&gt; 에서 &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; 덩어리 헤더 정의 [5] 참조 ).</target>
        </trans-unit>
        <trans-unit id="114a9aa417c57ec620d43a64c520abeb8e1f3f29" translate="yes" xml:space="preserve">
          <source>Show the progress of checking files out.</source>
          <target state="translated">파일 체크 아웃 진행 상태를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e5e665e21c64d0029d8257ef6e137aa1376a6118" translate="yes" xml:space="preserve">
          <source>Show the remote-tracking branches.</source>
          <target state="translated">원격 추적 지점을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="b9c5b299181f4d64f3ea6e8b9c13b148fff537b5" translate="yes" xml:space="preserve">
          <source>Show the result incrementally in a format designed for machine consumption.</source>
          <target state="translated">기계 소비를 위해 설계된 형식으로 결과를 점진적으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="c999f8cbf6fa5c24fdf8b2b9b5596b445f624a80" translate="yes" xml:space="preserve">
          <source>Show the status of the submodules. This will print the SHA-1 of the currently checked out commit for each submodule, along with the submodule path and the output of &lt;code&gt;git describe&lt;/code&gt; for the SHA-1. Each SHA-1 will possibly be prefixed with &lt;code&gt;-&lt;/code&gt; if the submodule is not initialized, &lt;code&gt;+&lt;/code&gt; if the currently checked out submodule commit does not match the SHA-1 found in the index of the containing repository and &lt;code&gt;U&lt;/code&gt; if the submodule has merge conflicts.</source>
          <target state="translated">서브 모듈의 상태를 표시하십시오. 그러면 서브 모듈 경로 및 SHA-1에 대한 &lt;code&gt;git describe&lt;/code&gt; 출력과 함께 각 서브 모듈에 대해 현재 체크 아웃 된 커밋의 SHA-1이 인쇄됩니다 . 각각의 SHA-1은 아마도로 시작됩니다 &lt;code&gt;-&lt;/code&gt; 서브 모듈이 초기화되어 있지 않은 경우, &lt;code&gt;+&lt;/code&gt; 현재 체크 아웃 된 서브 모듈이 일치하지 않는 커밋 경우 SHA-1이 포함 된 저장소와의 인덱스에있는 &lt;code&gt;U&lt;/code&gt; 서브 모듈이 병합 충돌이있는 경우.</target>
        </trans-unit>
        <trans-unit id="32335b1eb1c0a4fbecaf630b0ab1df57722da3d3" translate="yes" xml:space="preserve">
          <source>Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found.</source>
          <target state="translated">함수 이름이 포함 된 이전 행의 주변 텍스트를 다음 함수 이름 앞의 텍스트까지 표시하여 일치하는 항목을 찾은 전체 함수를 효과적으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="ee3926cd6bade9ce34cbcecec5eb956d896d053e" translate="yes" xml:space="preserve">
          <source>Show the tree objects in the diff output. This implies &lt;code&gt;-r&lt;/code&gt;.</source>
          <target state="translated">diff 출력에 트리 오브젝트를 표시하십시오. 이것은 &lt;code&gt;-r&lt;/code&gt; 을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="984ffa4d6fa814707b9db0fd0df1de10038cb7e9" translate="yes" xml:space="preserve">
          <source>Show the whole commit history, but skip any merges</source>
          <target state="translated">커밋 기록 전체를 표시하지만 병합을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="41ba3127797e7497aaa54b06768281c0f54c0178" translate="yes" xml:space="preserve">
          <source>Show the working tree status</source>
          <target state="translated">작업 트리 상태 표시</target>
        </trans-unit>
        <trans-unit id="4be15cef7828db991e29f252f2096ac52eaa87a1" translate="yes" xml:space="preserve">
          <source>Show three-way merge without touching index</source>
          <target state="translated">인덱스를 건드리지 않고 3 방향 병합 표시</target>
        </trans-unit>
        <trans-unit id="c011e03eeb56d943a760cc013e6f2e4eb1d425c0" translate="yes" xml:space="preserve">
          <source>Show tree entries even when going to recurse them. Has no effect if &lt;code&gt;-r&lt;/code&gt; was not passed. &lt;code&gt;-d&lt;/code&gt; implies &lt;code&gt;-t&lt;/code&gt;.</source>
          <target state="translated">반복 할 때에도 트리 항목을 표시합니다. &lt;code&gt;-r&lt;/code&gt; 이 전달되지 않으면 효과 가 없습니다. &lt;code&gt;-d&lt;/code&gt; 는 &lt;code&gt;-t&lt;/code&gt; 를 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="0ebf2c3da3729666fcca774c5c0088e26b46bc94" translate="yes" xml:space="preserve">
          <source>Show unified diff between the HEAD commit and what would be committed at the bottom of the commit message template to help the user describe the commit by reminding what changes the commit has. Note that this diff output doesn&amp;rsquo;t have its lines prefixed with &lt;code&gt;#&lt;/code&gt;. This diff will not be a part of the commit message. See the &lt;code&gt;commit.verbose&lt;/code&gt; configuration variable in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">HEAD 커밋과 커밋 메시지 템플릿의 맨 아래에 커밋 된 내용 사이에 통합 된 차이점을 표시하여 커밋의 변경 사항을 상기시켜 사용자가 커밋을 설명 할 수 있도록합니다. 이 diff 출력에는 &lt;code&gt;#&lt;/code&gt; 앞에 접두사가 붙지 않습니다 . 이 diff는 커밋 메시지의 일부가 아닙니다. &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; 의 &lt;code&gt;commit.verbose&lt;/code&gt; 구성 변수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ec5cbecb883dc178104f40a9f6290a06e20fc1c" translate="yes" xml:space="preserve">
          <source>Show uniquely abbreviated commit object as fallback.</source>
          <target state="translated">고유하게 축약 된 확약 오브젝트를 대체로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="10c7ca24c353332c5b887c6b6a1d6dd7a457b5d5" translate="yes" xml:space="preserve">
          <source>Show unmerged files in the output (forces --stage)</source>
          <target state="translated">출력에 병합되지 않은 파일 표시 (forces --stage)</target>
        </trans-unit>
        <trans-unit id="b5d593f0c18fdb91296748ca1fac373587b954d6" translate="yes" xml:space="preserve">
          <source>Show untracked files.</source>
          <target state="translated">추적되지 않은 파일을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="26b08d61663ae392b69c5a69245f4edf21293755" translate="yes" xml:space="preserve">
          <source>Show various types of objects</source>
          <target state="translated">다양한 유형의 객체 표시</target>
        </trans-unit>
        <trans-unit id="21c5bff92d5285947c85ec0c1484f22db009a919" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file</source>
          <target state="translated">파일의 각 줄을 마지막으로 수정 한 개정 및 작성자 표시</target>
        </trans-unit>
        <trans-unit id="966d3662ec6148441d1b868ba18110f8156c9e7e" translate="yes" xml:space="preserve">
          <source>Show what revision and author last modified each line of a file. The output of this mode is format-compatible with the output of &amp;lsquo;svn blame&amp;rsquo; by default. Like the SVN blame command, local uncommitted changes in the working tree are ignored; the version of the file in the HEAD revision is annotated. Unknown arguments are passed directly to &lt;code&gt;git blame&lt;/code&gt;.</source>
          <target state="translated">파일의 각 행을 마지막으로 수정 한 개정 및 작성자를 표시하십시오. 이 모드의 출력은 기본적으로 'svn blame'의 출력과 형식 호환됩니다. SVN blame 명령과 마찬가지로 작업 트리에서 커밋되지 않은 로컬 변경 사항은 무시됩니다. HEAD 개정판의 파일 버전에 주석이 달렸습니다. 알 수없는 인수는 &lt;code&gt;git blame&lt;/code&gt; 에 직접 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="bf9833b3864a606f143f671880d0d7c492524c3a" translate="yes" xml:space="preserve">
          <source>Show what would be done and clean files interactively. See &amp;ldquo;Interactive mode&amp;rdquo; for details.</source>
          <target state="translated">수행 할 작업을 표시하고 파일을 대화식으로 정리하십시오. 자세한 내용은 &quot;대화식 모드&quot;를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="df9413d989d45b2c0aaf57aba32e9c05293cab52" translate="yes" xml:space="preserve">
          <source>Show what would be done, without making any changes.</source>
          <target state="translated">변경하지 않고 수행 할 작업을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="be4ca0a0825cd627301347d0b898edf805764f04" translate="yes" xml:space="preserve">
          <source>Show whole surrounding functions of changes.</source>
          <target state="translated">변화의 전체 주변 기능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="468ba140a3b94d2f9cd6ef93cfa9cab1327c9537" translate="yes" xml:space="preserve">
          <source>Show words as &lt;code&gt;[-removed-]&lt;/code&gt; and &lt;code&gt;{+added+}&lt;/code&gt;. Makes no attempts to escape the delimiters if they appear in the input, so the output may be ambiguous.</source>
          <target state="translated">단어를 &lt;code&gt;[-removed-]&lt;/code&gt; 및 &lt;code&gt;{+added+}&lt;/code&gt; . 분리 문자가 입력에 표시되면 분리 문자를 이스케이프하려고 시도하지 않으므로 출력이 모호 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="853a8e226495d515cddaf8f8812833ecd070bbe7" translate="yes" xml:space="preserve">
          <source>Showing commits unique to a given branch</source>
          <target state="translated">주어진 브랜치에 고유 한 커밋 표시</target>
        </trans-unit>
        <trans-unit id="96ca3a302ef6077a82014da5f00857782e6cb86a" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; gives up trying to guess based on the source and destination refs what remote ref namespace the source belongs in, but where we can still suggest that the user push to either refs/heads/* or refs/tags/* based on the type of the source object.</source>
          <target state="translated">때 표시 &lt;a href=&quot;git-push&quot;&gt;자식 푸시 [1]&lt;/a&gt; 원격 심판 소스에 속하는 네임 스페이스 어떤 소스 및 대상 심판을 기준으로 생각하려고까지 제공하지만, 우리는 여전히 제안 할 수 있습니다 곳 중 심판 / 헤드 / * 또는 심판 / 태그 사용자 푸시 / *는 소스 객체의 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="75d7e8b680f4e534527cb3c486bef0af3659328c" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that does not qualify for fast-forwarding (e.g., a tag.)</source>
          <target state="translated">&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; 가 빨리 감기에 적합하지 않은 업데이트 (예 : 태그)를 거부 할 때 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a0a872703503f071b91634941e8be2dc5533cd1" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object that is not a commit-ish, or make the remote ref point at an object that is not a commit-ish.</source>
          <target state="translated">&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; 가 커밋이 아닌 객체를 가리키는 원격 참조를 덮어 쓰거나 원격 참조가 커밋이 아닌 객체를 가리 키도록하는 업데이트를 거부 할 때 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b4c04c7663321c0bb15512a5590b839a243ed3d" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; rejects an update that tries to overwrite a remote ref that points at an object we do not have.</source>
          <target state="translated">&lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; 가 가지고 있지 않은 객체를 가리키는 원격 참조를 덮어 쓰려는 업데이트를 거부 할 때 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="78b784f23e7ef12a1020b996b898b9ff902a30e8" translate="yes" xml:space="preserve">
          <source>Shown when &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; computes the ahead/behind counts for a local ref compared to its remote tracking ref, and that calculation takes longer than expected. Will not appear if &lt;code&gt;status.aheadBehind&lt;/code&gt; is false or the option &lt;code&gt;--no-ahead-behind&lt;/code&gt; is given.</source>
          <target state="translated">도시 때 &lt;a href=&quot;git-status&quot;&gt;자식 - 상태 [1]&lt;/a&gt; 의 원격 추적 (REF)과 비교하여 로컬 타이밍에서 카운트 뒤에 /를 전방을 계산하고, 그 계산이 예상보다 오래 걸린다. &lt;code&gt;status.aheadBehind&lt;/code&gt; 가 false이거나 &lt;code&gt;--no-ahead-behind&lt;/code&gt; 옵션이 제공 되면 나타나지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d338c5b596db1d1f3b4bc876559fe0665e8ac5fb" translate="yes" xml:space="preserve">
          <source>Shows &amp;lt;n&amp;gt; most recent ref-log entries for the given ref. If &amp;lt;base&amp;gt; is given, &amp;lt;n&amp;gt; entries going back from that entry. &amp;lt;base&amp;gt; can be specified as count or date. When no explicit &amp;lt;ref&amp;gt; parameter is given, it defaults to the current branch (or &lt;code&gt;HEAD&lt;/code&gt; if it is detached).</source>
          <target state="translated">주어진 심판에 대한 가장 최근의 심판 기록 항목을 &amp;lt;n&amp;gt; 보여줍니다. &amp;lt;base&amp;gt;가 제공되면 &amp;lt;n&amp;gt; 개의 항목이 해당 항목에서 되돌아옵니다. &amp;lt;base&amp;gt;는 개수 또는 날짜로 지정할 수 있습니다. 명시적인 &amp;lt;ref&amp;gt; 매개 변수가 제공되지 않으면 현재 분기 (또는 분리 된 경우 &lt;code&gt;HEAD&lt;/code&gt; )로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="145d28125d096ddf08f1e26c4d9787f99dd5cc7e" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in any of local branches but not in any of remote-tracking branches for &lt;code&gt;origin&lt;/code&gt; (what you have that origin doesn&amp;rsquo;t).</source>
          <target state="translated">로컬 분기에 있지만 &lt;code&gt;origin&lt;/code&gt; 대한 원격 추적 분기에는없는 모든 커밋을 표시 합니다 (원본이없는 것).</target>
        </trans-unit>
        <trans-unit id="c51c52f011be107f5e19468bb7f02daf26af2024" translate="yes" xml:space="preserve">
          <source>Shows all commits that are in local master but not in any remote repository master branches.</source>
          <target state="translated">로컬 마스터에는 있지만 원격 저장소 마스터 분기에는없는 모든 커밋을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="10371d1293071dacd448b9fdd202c3afd277b14e" translate="yes" xml:space="preserve">
          <source>Shows commit logs and diff output each commit introduces.</source>
          <target state="translated">각 커밋이 소개하는 커밋 로그 및 diff 출력을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="476dac31e594be06f217fa896bee0115d58f6b4c" translate="yes" xml:space="preserve">
          <source>Shows history of the file or directory in a given repository path, starting from given revision (defaults to HEAD, i.e. default branch).</source>
          <target state="translated">지정된 리포지토리 (기본값은 HEAD, 즉 기본 분기)에서 시작하여 지정된 리포지토리 경로에 파일 또는 디렉토리의 기록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="952b827e77460f64206eeaa3be7cd6994665a085" translate="yes" xml:space="preserve">
          <source>Shows how the function &lt;code&gt;main()&lt;/code&gt; in the file &lt;code&gt;main.c&lt;/code&gt; evolved over time.</source>
          <target state="translated">&lt;code&gt;main.c&lt;/code&gt; 파일의 &lt;code&gt;main()&lt;/code&gt; 함수 가 시간이 지남 에 따라 어떻게 진화 했는지 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ce9fdc182e7532561a25c9e84afbf603141702a1" translate="yes" xml:space="preserve">
          <source>Shows information about a file or directory similar to what &amp;lsquo;svn info&amp;rsquo; provides. Does not currently support a -r/--revision argument. Use the --url option to output only the value of the &lt;code&gt;URL:&lt;/code&gt; field.</source>
          <target state="translated">'svn info'가 제공하는 것과 유사한 파일 또는 디렉토리에 대한 정보를 표시합니다. 현재 -r /-revision 인수를 지원하지 않습니다. &lt;code&gt;URL:&lt;/code&gt; 필드 의 값만 출력하려면 --url 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca1b824d0d56099189f69630ad24bacce78fa10f" translate="yes" xml:space="preserve">
          <source>Shows information about a specific commit in a repository. The &lt;code&gt;commit&lt;/code&gt; view shows information about commit in more detail, the &lt;code&gt;commitdiff&lt;/code&gt; action shows changeset for given commit.</source>
          <target state="translated">저장소의 특정 커밋에 대한 정보를 표시합니다. (가) &lt;code&gt;commit&lt;/code&gt; 뷰 프로그램 정보에 대해보다 상세히 커밋 &lt;code&gt;commitdiff&lt;/code&gt; 의 행동 프로그램은 주어진 커밋에 대한 변경 집합.</target>
        </trans-unit>
        <trans-unit id="ab228fa7c7d65eb09f46d0e73fe8d72b79bc229a" translate="yes" xml:space="preserve">
          <source>Shows log information (commit message or just commit subject) for a given branch (starting from given revision).</source>
          <target state="translated">주어진 브랜치에 대한 로그 정보 (커밋 메시지 또는 커밋 제목)를 표시합니다 (주어진 개정에서 시작).</target>
        </trans-unit>
        <trans-unit id="a3433f3c29ab88ea9167add81dd6a17e06d4de7e" translate="yes" xml:space="preserve">
          <source>Shows one or more objects (blobs, trees, tags and commits).</source>
          <target state="translated">하나 이상의 객체 (블롭, 트리, 태그 및 커밋)를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c89f1cda347c61bcda5c7bb78673af53b8dae0ad" translate="yes" xml:space="preserve">
          <source>Shows only commits that are NOT on the first branch given. This helps track topic branches by hiding any commit that is already in the main line of development. When given &quot;git show-branch --topics master topic1 topic2&quot;, this will show the revisions given by &quot;git rev-list ^master topic1 topic2&quot;</source>
          <target state="translated">주어진 첫 번째 분기에없는 커밋 만 표시합니다. 이는 기본 개발 라인에있는 커밋을 숨겨 주제 분기를 추적하는 데 도움이됩니다. &quot;git show-branch --topics master topic1 topic2&quot;가 주어지면 &quot;git rev-list ^ master topic1 topic2&quot;에 의해 제공된 개정이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ad855617a566df1f282b86f94f82b5d862a150d3" translate="yes" xml:space="preserve">
          <source>Shows the Subversion externals. Use -r/--revision to specify a specific revision.</source>
          <target state="translated">Subversion 외부를 표시합니다. -r /-revision을 사용하여 특정 개정을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="71ee8b01832959c514dd0597fe4e33b8eee16c88" translate="yes" xml:space="preserve">
          <source>Shows the blame (also called annotation) information for a file. On a per line basis it shows the revision in which that line was last changed and the user that committed the change. The incremental version (which if configured is used automatically when JavaScript is enabled) uses Ajax to incrementally add blame info to the contents of given file.</source>
          <target state="translated">파일에 대한 책임 (주석이라고도 함) 정보를 표시합니다. 행 단위로 해당 행이 마지막으로 변경된 개정 및 변경을 커밋 한 사용자가 표시됩니다. 인크 리 멘탈 버전 (JavaScript가 활성화 된 경우 자동으로 구성되는 경우)은 Ajax를 사용하여 지정된 파일의 컨텐츠에 비난 정보를 점진적으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="048347ade13621e5b8c85cb1ac7da77939e1ffa9" translate="yes" xml:space="preserve">
          <source>Shows the commit ancestry graph starting from the commits named with &amp;lt;rev&amp;gt;s or &amp;lt;glob&amp;gt;s (or all refs under refs/heads and/or refs/tags) semi-visually.</source>
          <target state="translated">&amp;lt;rev&amp;gt; s 또는 &amp;lt;glob&amp;gt; s (또는 refs / heads 및 / 또는 refs / tags 아래의 모든 ref)로 명명 된 커밋에서 시작하여 커밋 상위 그래프를 반 시각적으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d974b70c2c30c4540e25d821a52ee3e8a89faf35" translate="yes" xml:space="preserve">
          <source>Shows the commit logs.</source>
          <target state="translated">커밋 로그를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="afa4aeeb0e59c57a072646fb612e51228d9e8ce5" translate="yes" xml:space="preserve">
          <source>Shows the commits that changed &lt;code&gt;builtin/rev-list.c&lt;/code&gt;, including those commits that occurred before the file was given its present name.</source>
          <target state="translated">파일에 현재 이름이 부여되기 전에 발생한 커밋을 포함하여 &lt;code&gt;builtin/rev-list.c&lt;/code&gt; 를 변경 한 커밋을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="0d2116a149d849234c7b09c554d651b4894474fc" translate="yes" xml:space="preserve">
          <source>Shows the contents of the file &lt;code&gt;Documentation/README&lt;/code&gt; as they were current in the 10th last commit of the branch &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 지점의 마지막 10 번째 커밋에서 현재의 &lt;code&gt;Documentation/README&lt;/code&gt; 파일의 내용을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="ccc9b587b1ac64f4516513aa59159ddedbb8a45f" translate="yes" xml:space="preserve">
          <source>Shows the difference between two revisions of the same file.</source>
          <target state="translated">동일한 파일의 두 개정판의 차이점을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8c5916992e873dd9df6491dab9446ed99d2ca43b" translate="yes" xml:space="preserve">
          <source>Shows the files and directories in a given repository path, at given revision. This is default command if no action is specified in the URL, and path is given.</source>
          <target state="translated">지정된 개정판에서 지정된 저장소 경로의 파일 및 디렉토리를 표시합니다. URL에 조치가 지정되지 않은 경우 기본 명령이며 경로가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="890a038d1a0efbf86457550ddb0f94462d132854" translate="yes" xml:space="preserve">
          <source>Shows the history including change diffs, but only from the &amp;ldquo;main branch&amp;rdquo; perspective, skipping commits that come from merged branches, and showing full diffs of changes introduced by the merges. This makes sense only when following a strict policy of merging all topic branches when staying on a single integration branch.</source>
          <target state="translated">변경 차이를 포함한 히스토리를 보여 주지만 &quot;메인 브랜치&quot;관점에서만, 병합 된 분기에서 온 커밋을 건너 뛰고, 병합에서 도입 된 전체 변경 사항을 보여줍니다. 이는 단일 통합 브랜치에 머무를 때 모든 토픽 브랜치를 병합하는 엄격한 정책을 따르는 경우에만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6e093f4d97154b146a36fee068be195950aadfd" translate="yes" xml:space="preserve">
          <source>Shows the subject of the commit pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v1.0.0&lt;/code&gt; 태그가 가리키는 커밋의 주제를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="9b44c59ff3bc267fd7a4cbc7d7224ea23d69056e" translate="yes" xml:space="preserve">
          <source>Shows the tag &lt;code&gt;v1.0.0&lt;/code&gt;, along with the object the tags points at.</source>
          <target state="translated">태그가 가리키는 객체와 함께 태그 &lt;code&gt;v1.0.0&lt;/code&gt; 을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="092526538596a5fe7b0994948947cb6672086546" translate="yes" xml:space="preserve">
          <source>Shows the tree pointed to by the tag &lt;code&gt;v1.0.0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v1.0.0&lt;/code&gt; 태그가 가리키는 트리를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="436f07afaaab4f38cb1e7cf08118570b5794b7ea" translate="yes" xml:space="preserve">
          <source>Side note: Unfortunately, people tend to fixate on the written-in-shell aspect and periodically ask if git-filter-branch could be rewritten in another language to fix the performance issues. Not only does that ignore the bigger intrinsic problems with the design, it&amp;rsquo;d help less than you&amp;rsquo;d expect: if git-filter-branch itself were not shell, then the convenience functions (map(), skip_commit(), etc) and the &lt;code&gt;--setup&lt;/code&gt; argument could no longer be executed once at the beginning of the program but would instead need to be prepended to every user filter (and thus re-executed with every commit).</source>
          <target state="translated">참고 사항 : 불행히도 사람들은 쉘로 작성된 측면을 수정하는 경향이 있으며 성능 문제를 해결하기 위해 git-filter-branch를 다른 언어로 다시 작성할 수 있는지 정기적으로 묻습니다. git-filter-branch 자체가 쉘이 아닌 경우 편의 함수 (map (), skip_commit () 등)는 디자인과 관련하여 더 큰 본질적인 문제를 무시할뿐만 아니라 예상보다 덜 도움이됩니다. 그리고 &lt;code&gt;--setup&lt;/code&gt; 인수는 더 이상 프로그램의 시작 부분에 한 번 실행되지 수 있지만, 대신 모든 사용자 필터 앞에 추가 할 (따라서 모든 확약 재실행)해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a31cdd9cba3408afdcd7a253a0ac442839b0979" translate="yes" xml:space="preserve">
          <source>Side note: it may be possible to do step 2 with about:config and the following settings but no one&amp;rsquo;s tried yet.</source>
          <target state="translated">참고 : about : config 및 다음 설정으로 2 단계를 수행 할 수 있지만 아직 시도한 사람은 없습니다.</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="ff3ca843a6395cdc7d40686539d66fc535a8aaed" translate="yes" xml:space="preserve">
          <source>Signals the end of options; the rest of the parameters are &amp;lt;pathspec&amp;gt; limiters.</source>
          <target state="translated">옵션의 끝을 알립니다. 나머지 매개 변수는 &amp;lt;pathspec&amp;gt; 리미터입니다.</target>
        </trans-unit>
        <trans-unit id="221dd464fe44b38e2417a0ae6570e07534a3d7ea" translate="yes" xml:space="preserve">
          <source>Signing annotated tags during import from within fast-import is not supported. Trying to include your own PGP/GPG signature is not recommended, as the frontend does not (easily) have access to the complete set of bytes which normally goes into such a signature. If signing is required, create lightweight tags from within fast-import with &lt;code&gt;reset&lt;/code&gt;, then create the annotated versions of those tags offline with the standard &lt;code&gt;git tag&lt;/code&gt; process.</source>
          <target state="translated">빠른 가져 오기 내에서 가져 오는 동안 주석이 달린 태그에 서명하는 것은 지원되지 않습니다. 프론트 엔드는 일반적으로 그러한 서명으로 들어가는 전체 바이트 세트에 액세스하지 않기 때문에 자신의 PGP / GPG 서명을 포함시키는 것은 권장되지 않습니다. 서명이 필요한 경우 &lt;code&gt;reset&lt;/code&gt; 을 사용하여 빠른 가져 오기 내에서 경량 태그 를 작성한 다음 표준 &lt;code&gt;git tag&lt;/code&gt; 프로세스를 사용하여 해당 태그의 주석이 달린 버전을 오프라인으로 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="e73ba37a846fd05171a6c58829f1ab0aa4e069d7" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files from the merge result. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort.</source>
          <target state="translated">병합 결과에서 무시 된 파일을 자동으로 덮어 씁니다. 이것이 기본 동작입니다. 중단 하려면 &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7ca941070a3e177fd03230132f7162630714492" translate="yes" xml:space="preserve">
          <source>Silently overwrite ignored files when switching branches. This is the default behavior. Use &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; to abort the operation when the new branch contains ignored files.</source>
          <target state="translated">분기를 전환 할 때 무시 된 파일을 자동으로 덮어 씁니다. 이것이 기본 동작입니다. 새 분기에 무시 된 파일이 포함 된 경우 작업을 중단 하려면 &lt;code&gt;--no-overwrite-ignore&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffd6334e8fa69c33df5ff56f9d3009483e17a61e" translate="yes" xml:space="preserve">
          <source>Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history.</source>
          <target state="translated">--depth와 비슷하지만 각 원격 분기 히스토리의 팁 대신 현재 얕은 경계에서 커밋 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="16434785e2f2781f48016d9fab6f521e71729a0f" translate="yes" xml:space="preserve">
          <source>Similar to -u. But when re-coding, the charset specified here is used instead of the one specified by i18n.commitencoding or UTF-8.</source>
          <target state="translated">-u와 유사합니다. 그러나 다시 코딩 할 때 여기에 지정된 문자 세트는 i18n.commitencoding 또는 UTF-8에 지정된 문자 세트 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="35df8b1f29f7a7b94cf0adfb128190781a631c4c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--create&lt;/code&gt; except that if &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; already exists, it will be reset to &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt;. This is a convenient shortcut for:</source>
          <target state="translated">&lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; 가 이미 존재 하는 경우 &lt;code&gt;&amp;lt;start-point&amp;gt;&lt;/code&gt; 로 재설정 된다는 점을 제외하고 &lt;code&gt;--create&lt;/code&gt; 와 유사합니다 . 다음과 같은 편리한 단축키입니다.</target>
        </trans-unit>
        <trans-unit id="a329dc4873c426988eca07322671d0e252450f5a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--file&lt;/code&gt; but use the given blob instead of a file. E.g. you can use &lt;code&gt;master:.gitmodules&lt;/code&gt; to read values from the file &lt;code&gt;.gitmodules&lt;/code&gt; in the master branch. See &quot;SPECIFYING REVISIONS&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt; for a more complete list of ways to spell blob names.</source>
          <target state="translated">유사합니다 &lt;code&gt;--file&lt;/code&gt; 하지만 파일 대신 주어진 방울을 사용합니다. 예를 들어 &lt;code&gt;master:.gitmodules&lt;/code&gt; 를 사용 하여 마스터 분기의 &lt;code&gt;.gitmodules&lt;/code&gt; 파일에서 값을 읽을 수 있습니다 . 블롭 이름을 철자하는 방법에 대한 전체 목록은 &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]의&lt;/a&gt; &quot;수정 수정&quot;섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="96ae9e148f9a848728ba835436ff9b06a051bf18" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--local&lt;/code&gt; except that &lt;code&gt;.git/config.worktree&lt;/code&gt; is read from or written to if &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; is present. If not it&amp;rsquo;s the same as &lt;code&gt;--local&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;extensions.worktreeConfig&lt;/code&gt; 가있는 경우 &lt;code&gt;.git/config.worktree&lt;/code&gt; 를 읽거나 쓰는 점을 제외하고 &lt;code&gt;--local&lt;/code&gt; 과 비슷합니다 . 그렇지 않은 경우 &lt;code&gt;--local&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9921875dc5f741363cc389c12f0a866da77aa3f9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects-edge&lt;/code&gt;, but it tries harder to find excluded commits at the cost of increased time. This is used instead of &lt;code&gt;--objects-edge&lt;/code&gt; to build &amp;ldquo;thin&amp;rdquo; packs for shallow repositories.</source>
          <target state="translated">유사 &lt;code&gt;--objects-edge&lt;/code&gt; 하지만 시간이 증가의 비용을 제외 커밋을 찾기 위해 더 열심히하려고합니다. 얕은 리포지토리를위한 &quot;씬&quot;팩을 빌드하기 위해 &lt;code&gt;--objects-edge&lt;/code&gt; 대신 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="827a1dc116e1ce95f15ed3122df77ff565d151ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--objects&lt;/code&gt;, but also print the IDs of excluded commits prefixed with a &amp;ldquo;-&amp;rdquo; character. This is used by &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; to build a &amp;ldquo;thin&amp;rdquo; pack, which records objects in deltified form based on objects contained in these excluded commits to reduce network traffic.</source>
          <target state="translated">유사 &lt;code&gt;--objects&lt;/code&gt; 뿐만 아니라 접두어 제외 커밋의 ID를 인쇄 &quot;-&quot;문자를. 이것은 &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; 에서 &quot;thin&quot;팩을 작성하는 데 사용됩니다.이 팩은 네트워크 트래픽을 줄이기 위해 이러한 제외 된 커밋에 포함 된 객체를 기반으로 deltified 형식으로 객체를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="db4263bd2603c01331f2d853a8cad6132476aed7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--stat&lt;/code&gt; 와 유사 하지만 더 기계 친화적으로 만들기 위해 추가 및 삭제 된 줄 수를 약어없이 10 진수 표기법과 경로 이름으로 표시합니다. 바이너리 파일의 경우, 두 개의 출력 &lt;code&gt;-&lt;/code&gt; 대신 말의 &lt;code&gt;0 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="507e19add19af137dd267ca439cffb2e494aaec7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;--stat&lt;/code&gt;, but shows the number of added and deleted lines in decimal notation and the pathname without abbreviation, to make it more machine friendly. For binary files, outputs two &lt;code&gt;-&lt;/code&gt; instead of saying &lt;code&gt;0 0&lt;/code&gt;. Turns off &quot;apply&quot;.</source>
          <target state="translated">유사 &lt;code&gt;--stat&lt;/code&gt; 더 머신 친절하게,하지만 쇼 진수 표기법으로 추가 및 삭제 된 행의 수와 약어없이 경로 이름을. 바이너리 파일의 경우, 두 개의 출력 &lt;code&gt;-&lt;/code&gt; 대신 말의 &lt;code&gt;0 0&lt;/code&gt; . &quot;적용&quot;을 끕니다.</target>
        </trans-unit>
        <trans-unit id="cebb3f179c2f7afdfbf89dc9db3668db1b27ceee" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;assume unchanged&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">유사 &lt;code&gt;-t&lt;/code&gt; 으로 표시된 파일 만 사용 소문자 문자가 &lt;code&gt;assume unchanged&lt;/code&gt; (참조 &lt;a href=&quot;git-update-index&quot;&gt;자식 업데이트 색인을 [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c8a85313dff4970a1ca58c4ac403a9e5f1e1fd26" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;-t&lt;/code&gt;, but use lowercase letters for files that are marked as &lt;code&gt;fsmonitor valid&lt;/code&gt; (see &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;-t&lt;/code&gt; 와 유사 하지만 &lt;code&gt;fsmonitor valid&lt;/code&gt; 로 표시된 파일에 대해서는 소문자를 사용 하십시오 ( &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1] 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d753bc37a0732c319a3b637b8b9f6c853acf890c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;list&lt;/code&gt;, except that it is used if and only if the caller wants to the resulting ref list to prepare push commands. A helper supporting both push and fetch can use this to distinguish for which operation the output of &lt;code&gt;list&lt;/code&gt; is going to be used, possibly reducing the amount of work that needs to be performed.</source>
          <target state="translated">호출자가 푸시 명령을 준비하기 위해 결과 참조 목록을 원할 경우에만 사용된다는 점을 제외하고 &lt;code&gt;list&lt;/code&gt; 와 비슷 합니다. push 및 fetch를 모두 지원하는 도우미는이를 사용하여 &lt;code&gt;list&lt;/code&gt; 의 출력 이 사용될 작업을 구별하여 수행해야하는 작업량을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d877d80bc2ddec8772b0999fdcc01984ec807892" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;zebra&lt;/code&gt;, but additional dimming of uninteresting parts of moved code is performed. The bordering lines of two adjacent blocks are considered interesting, the rest is uninteresting. &lt;code&gt;dimmed_zebra&lt;/code&gt; is a deprecated synonym.</source>
          <target state="translated">&lt;code&gt;zebra&lt;/code&gt; 와 유사 하지만 이동 된 코드의 관심없는 부분에 대한 추가 디밍이 수행됩니다. 인접한 두 블록의 경계선은 흥미로운 것으로 간주되며 나머지는 흥미롭지 않습니다. &lt;code&gt;dimmed_zebra&lt;/code&gt; 는 더 이상 사용되지 않는 동의어입니다.</target>
        </trans-unit>
        <trans-unit id="bf8bcfbd909889dac33d6d2f89b63bfd39d6ccea" translate="yes" xml:space="preserve">
          <source>Similar to Git&amp;rsquo;s &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt;, this key is designed to be used in cases where &lt;code&gt;url&lt;/code&gt; points to an SVN repository via a read-only transport, to provide an alternate read/write transport. It is assumed that both keys point to the same repository. Unlike &lt;code&gt;commiturl&lt;/code&gt;, &lt;code&gt;pushurl&lt;/code&gt; is a base path. If either &lt;code&gt;commiturl&lt;/code&gt; or &lt;code&gt;pushurl&lt;/code&gt; could be used, &lt;code&gt;commiturl&lt;/code&gt; takes precedence.</source>
          <target state="translated">Git의 &lt;code&gt;remote.&amp;lt;name&amp;gt;.pushurl&lt;/code&gt; 과 유사 하게이 키는 &lt;code&gt;url&lt;/code&gt; 이 읽기 전용 전송을 통해 SVN 저장소를 가리키는 경우 대체 읽기 / 쓰기 전송을 제공하기 위해 사용되도록 설계되었습니다 . 두 키가 동일한 리포지토리를 가리키는 것으로 가정합니다. 달리 &lt;code&gt;commiturl&lt;/code&gt; , &lt;code&gt;pushurl&lt;/code&gt; 는 기본 경로입니다. 어느 경우 &lt;code&gt;commiturl&lt;/code&gt; 또는 &lt;code&gt;pushurl&lt;/code&gt; 이 사용될 수 &lt;code&gt;commiturl&lt;/code&gt; 은 우선합니다.</target>
        </trans-unit>
        <trans-unit id="91682fd49c343f959bbb6403f6f6863feba84482" translate="yes" xml:space="preserve">
          <source>Similar to above:</source>
          <target state="translated">위와 비슷합니다 :</target>
        </trans-unit>
        <trans-unit id="e5c2486b9a7763634d7231fd9214964f9084de7d" translate="yes" xml:space="preserve">
          <source>Similar to the above, but Apache can be used to return static files that are stored on disk. On many systems this may be more efficient as Apache can ask the kernel to copy the file contents from the file system directly to the network:</source>
          <target state="translated">위와 비슷하지만 Apache를 사용하여 디스크에 저장된 정적 파일을 반환 할 수 있습니다. 많은 시스템에서 Apache가 커널에게 파일 시스템에서 파일 내용을 네트워크로 직접 복사하도록 요청할 수 있으므로이 방법이 더 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d010174e63754716183c2af28e1291061e29078" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users of the svnsync(1) command distributed with SVN 1.4.x and later.</source>
          <target state="translated">useSvmProps 옵션과 유사합니다. 이것은 SVN 1.4.x 이상과 함께 배포 된 svnsync (1) 명령 사용자를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="742718eb04c74d19e18742babbe16ee5d5955f76" translate="yes" xml:space="preserve">
          <source>Similar to the useSvmProps option; this is for users who need to remap the UUID manually. This may be useful in situations where the original UUID is not available via either useSvmProps or useSvnsyncProps.</source>
          <target state="translated">useSvmProps 옵션과 유사합니다. UUID를 수동으로 다시 매핑해야하는 사용자를위한 것입니다. useSvmProps 또는 useSvnsyncProps를 통해 원래 UUID를 사용할 수없는 상황에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b4ceb453e6bfcacc89ab013230d146d7c2efc84" translate="yes" xml:space="preserve">
          <source>Similar to two-line header for traditional &lt;code&gt;unified&lt;/code&gt; diff format, &lt;code&gt;/dev/null&lt;/code&gt; is used to signal created or deleted files.</source>
          <target state="translated">전통적인 &lt;code&gt;unified&lt;/code&gt; diff 형식의 2 줄 헤더와 유사하게 &lt;code&gt;/dev/null&lt;/code&gt; 은 생성되거나 삭제 된 파일을 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9acea96e7cbe682e6caa9d2b57eedce27f5ebab4" translate="yes" xml:space="preserve">
          <source>Similarly, for a maintenance release, &lt;code&gt;maint&lt;/code&gt; is tracking the commits to be released. Therefore, in the steps above simply tag and push &lt;code&gt;maint&lt;/code&gt; rather than &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 유지 관리 릴리스의 경우 &lt;code&gt;maint&lt;/code&gt; 은 해제 될 커밋을 추적합니다. 따라서 위의 단계에서 &lt;code&gt;master&lt;/code&gt; 대신 &lt;code&gt;maint&lt;/code&gt; 를 태그하고 푸시하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8cf6e3fc26d2562fdbc09f3e09e2deb878c7a85" translate="yes" xml:space="preserve">
          <source>Similarly, when moving files around, one can find that filenames with non-ascii or special characters end up in a different directory, one that includes a double quote character. (This is technically the same issue as above with quoting, but perhaps an interesting different way that it can and has manifested as a problem.)</source>
          <target state="translated">마찬가지로, 파일을 이동할 때 ASCII가 아닌 문자 나 특수 문자가있는 파일 이름은 큰 따옴표 문자가 포함 된 다른 디렉토리에있게됩니다. (이것은 기술적으로 위에서 인용 한 것과 같은 문제이지만 아마도 문제로 나타날 수 있고 흥미로운 다른 방법 일 것입니다.)</target>
        </trans-unit>
        <trans-unit id="47fa1a83138cf11ea34d19a92cc77db11eb4b97c" translate="yes" xml:space="preserve">
          <source>Similarly, when the &quot;recursive&quot; merge strategy runs, and finds that there are criss-cross merges and thus more than one merge base (which is fairly unusual, but it does happen), it will generate one temporary midway tree (or possibly even more, if you had lots of criss-crossing merges and more than two merge bases) as a temporary internal merge base, and again, those are real objects, but the end result will not end up pointing to them, so they end up &quot;dangling&quot; in your repository.</source>
          <target state="translated">마찬가지로 &quot;재귀 적&quot;병합 전략이 실행되고 십자형 병합이 있고 둘 이상의 병합 기반이있는 것을 발견하면 (이것은 매우 드문 일이지만 발생합니다) 임시 중간 중간 트리 (또는 가능할 수도 있음)를 생성합니다 또한 임시 내부 병합 기준으로 많은 교차 교차 병합과 2 개 이상의 병합 기준이있는 경우) 실제 객체이지만 최종 결과는이를 가리 키지 않으므로 &quot; 저장소에 매달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="50765cb4cf598285ffabcacb2eda47bdf85bbc67" translate="yes" xml:space="preserve">
          <source>Similarly, you need only trust the SHA-1 name of a top-level tree object to trust the contents of the entire directory that it refers to, and if you receive the SHA-1 name of a commit from a trusted source, then you can easily verify the entire history of commits reachable through parents of that commit, and all of those contents of the trees referred to by those commits.</source>
          <target state="translated">마찬가지로 최상위 트리 개체의 SHA-1 이름 만 신뢰하면 참조하는 전체 디렉토리의 내용을 신뢰하고 신뢰할 수있는 소스로부터 커밋의 SHA-1 이름을 수신하면 해당 커밋의 부모 및 해당 커밋이 참조하는 트리의 모든 내용을 통해 도달 가능한 커밋의 전체 기록을 쉽게 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35267477ddadd32e54d2580eaf5f6347904aefaa" translate="yes" xml:space="preserve">
          <source>Simple UNIX mbox splitter program</source>
          <target state="translated">간단한 유닉스 mbox 스플리터 프로그램</target>
        </trans-unit>
        <trans-unit id="e6081dd40a736a561294c958c5f476bf808af40b" translate="yes" xml:space="preserve">
          <source>Simplifies the history to the simplest history explaining the final state of the tree. Simplest because it prunes some side branches if the end result is the same (i.e. merging branches with the same content)</source>
          <target state="translated">트리의 최종 상태를 설명하는 가장 간단한 히스토리로 히스토리를 단순화합니다. 최종 결과가 동일한 경우 일부 사이드 브랜치를 제거하므로 가장 간단합니다 (예 : 동일한 컨텐츠의 브랜치 병합)</target>
        </trans-unit>
        <trans-unit id="7d47a55c52a010c445880763e4c0c53ec8d956ef" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;dcommit&lt;/code&gt; uses rebase internally, any Git branches you &lt;code&gt;git push&lt;/code&gt; to before &lt;code&gt;dcommit&lt;/code&gt; on will require forcing an overwrite of the existing ref on the remote repository. This is generally considered bad practice, see the &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; documentation for details.</source>
          <target state="translated">&lt;code&gt;dcommit&lt;/code&gt; 은 내부적으로 rebase를 사용 하므로 dcommit 을 시작하기 전에 &lt;code&gt;git push&lt;/code&gt; 를 사용 하는 원격 Git 브랜치 는 원격 리포지토리의 기존 참조를 덮어 &lt;code&gt;dcommit&lt;/code&gt; 합니다. 이것은 일반적으로 나쁜 습관으로 간주됩니다. 자세한 내용은 &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d3cbf9539838f097e44d7366548fff10dd5a4bb6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;git fast-import&lt;/code&gt; cannot tag trees, you will not be able to export the linux.git repository completely, as it contains a tag referencing a tree instead of a commit.</source>
          <target state="translated">때문에 &lt;code&gt;git fast-import&lt;/code&gt; 대신 커밋의 나무를 참조하는 태그가 포함로 할 수없는 태그 나무, 당신은 완전히 linux.git 저장소를 내보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e8a0aceddf81ac41c98d5a8bdbe00960df868272" translate="yes" xml:space="preserve">
          <source>Since every developer&amp;rsquo;s repository has the same complete copy of the project history, no repository is special, and it is trivial for another developer to take over maintenance of a project, either by mutual agreement, or because a maintainer becomes unresponsive or difficult to work with.</source>
          <target state="translated">모든 개발자의 저장소에는 동일한 프로젝트 히스토리 사본이 있으므로 저장소는 특별하지 않으며 다른 개발자가 상호 합의에 의해 또는 유지 보수 담당자가 응답하지 않거나 작업하기가 어렵 기 때문에 프로젝트 유지 보수를 인수하는 것이 쉽지 않습니다. .</target>
        </trans-unit>
        <trans-unit id="ff45ae2cc9973e736a0612a33b064d4efb949c7a" translate="yes" xml:space="preserve">
          <source>Since keeping up-to-date with both branches and tags on the remote is a common use-case the &lt;code&gt;--prune-tags&lt;/code&gt; option can be supplied along with &lt;code&gt;--prune&lt;/code&gt; to prune local tags that don&amp;rsquo;t exist on the remote, and force-update those tags that differ. Tag pruning can also be enabled with &lt;code&gt;fetch.pruneTags&lt;/code&gt; or &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; in the config. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">원격에서 브랜치와 태그를 모두 최신 상태로 유지하는 것이 일반적인 사용 사례 &lt;code&gt;--prune-tags&lt;/code&gt; 옵션을 &lt;code&gt;--prune&lt;/code&gt; 과 함께 제공 하여 원격에 존재하지 않는 로컬 태그를 제거 할 수 있습니다. 다른 태그를 강제 업데이트하십시오. 구성에서 &lt;code&gt;fetch.pruneTags&lt;/code&gt; 또는 &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; 를 사용하여 태그 제거를 활성화 할 수도 있습니다 . &lt;a href=&quot;git-config&quot;&gt;git-config [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0932a869e1657064106036f8682ab82f7b34c539" translate="yes" xml:space="preserve">
          <source>Since object names are computed the same way in every repository, the same content stored in two repositories will always be stored under the same name.</source>
          <target state="translated">객체 이름은 모든 리포지토리에서 동일한 방식으로 계산되므로 두 리포지토리에 저장된 동일한 컨텐츠는 항상 동일한 이름으로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="c6783a475fdc4e2463b00ffd216c9d8a1b41c5ce" translate="yes" xml:space="preserve">
          <source>Since the blob is entirely defined by its data, if two files in a directory tree (or in multiple different versions of the repository) have the same contents, they will share the same blob object. The object is totally independent of its location in the directory tree, and renaming a file does not change the object that file is associated with.</source>
          <target state="translated">BLOB는 데이터에 의해 완전히 정의되므로 디렉토리 트리 (또는 여러 다른 버전의 저장소)에있는 두 파일의 내용이 동일한 경우 동일한 Blob 오브젝트를 공유합니다. 객체는 디렉토리 트리에서의 위치와 완전히 독립적이며 파일 이름을 바꾸더라도 파일과 관련된 객체는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a3fb22d6e6da288d244e8acdd9955bf43f0ad8d0" translate="yes" xml:space="preserve">
          <source>Since the current state of closing.txt is cached in the index file, it is listed as &quot;Changes to be committed&quot;. Since file.txt has changes in the working directory that aren&amp;rsquo;t reflected in the index, it is marked &quot;changed but not updated&quot;. At this point, running &quot;git commit&quot; would create a commit that added closing.txt (with its new contents), but that didn&amp;rsquo;t modify file.txt.</source>
          <target state="translated">닫기 .txt의 현재 상태가 인덱스 파일에 캐시되므로 &quot;커밋 변경 사항&quot;으로 표시됩니다. file.txt에는 작업 디렉토리에서 색인에 반영되지 않은 변경 사항이 있으므로 &quot;변경되었지만 업데이트되지 않음&quot;으로 표시됩니다. 이 시점에서 &quot;git commit&quot;을 실행하면 새 내용과 함께 closing.txt를 추가했지만 file.txt를 수정하지 않은 커밋이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="78b19ba60aba5b2f618c3990a75d2fca7411595a" translate="yes" xml:space="preserve">
          <source>Since the noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps and useSvmProps options all affect the metadata generated and used by &lt;code&gt;git svn&lt;/code&gt;; they &lt;strong&gt;must&lt;/strong&gt; be set in the configuration file before any history is imported and these settings should never be changed once they are set.</source>
          <target state="translated">noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps 및 useSvmProps 옵션은 모두 &lt;code&gt;git svn&lt;/code&gt; 에서 생성하고 사용하는 메타 데이터에 영향을줍니다 . 그들은 &lt;strong&gt;있어야&lt;/strong&gt; 어떤 역사를 가져 오기 전에 구성 파일에 설정하고이 설정되면이 설정은 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="6c0fcca9337c1cb048efaf57760c6fdc1a7b6b6f" translate="yes" xml:space="preserve">
          <source>Singe line category of a project, used to group projects if &lt;code&gt;$projects_list_group_categories&lt;/code&gt; is enabled. By default (file and configuration variable absent), uncategorized projects are put in the &lt;code&gt;$project_list_default_category&lt;/code&gt; category. You can use the &lt;code&gt;gitweb.category&lt;/code&gt; repo configuration variable, but the file takes precedence.</source>
          <target state="translated">&lt;code&gt;$projects_list_group_categories&lt;/code&gt; 가 활성화 된 경우 프로젝트의 단일 라인 범주로 프로젝트를 그룹화하는 데 사용됩니다 . 기본적으로 (파일 및 구성 변수가 없음) 분류되지 않은 프로젝트는 &lt;code&gt;$project_list_default_category&lt;/code&gt; 범주에 배치됩니다. &lt;code&gt;gitweb.category&lt;/code&gt; repo 구성 변수를 사용할 수 있지만 파일이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="1622ee3a3548a98ace63f4a1f20c802cbd3d6865" translate="yes" xml:space="preserve">
          <source>Single Tree Merge</source>
          <target state="translated">단일 트리 병합</target>
        </trans-unit>
        <trans-unit id="68fe6fe857d1a576bbea2c5ba543ec91391124bd" translate="yes" xml:space="preserve">
          <source>Single URL for gitweb and for fetching</source>
          <target state="translated">gitweb과 페칭을위한 단일 URL</target>
        </trans-unit>
        <trans-unit id="c63aa67778ae9fde52963fd98eabefccd9f535ba" translate="yes" xml:space="preserve">
          <source>Size of the Git repository: In its current form Git scales up poorly for large repositories containing content that is not compressed by delta computation between trees. For example, you can use submodules to hold large binary assets and these repositories can be shallowly cloned such that you do not have a large history locally.</source>
          <target state="translated">Git 리포지토리의 크기 : 현재 형태에서 Git은 트리 간의 델타 계산에 의해 압축되지 않은 내용을 포함하는 큰 리포지토리에 대해 제대로 확장되지 않습니다. 예를 들어 하위 모듈을 사용하여 큰 이진 자산을 보유 할 수 있으며 이러한 리포지토리는 얕게 복제되어 로컬로 큰 기록이 없습니다.</target>
        </trans-unit>
        <trans-unit id="109e0b1e1d08be0f664fabdbefc14a841a52fd41" translate="yes" xml:space="preserve">
          <source>Skip &quot;branches&quot; and &quot;tags&quot; of first level directories</source>
          <target state="translated">첫 번째 레벨 디렉토리의 &quot;분기&quot;및 &quot;태그&quot;건너 뛰기</target>
        </trans-unit>
        <trans-unit id="89ac85d0525bb0b20e17b8b50eb25e661e2c2664" translate="yes" xml:space="preserve">
          <source>Skip &quot;doc*&quot; directory for every fetch</source>
          <target state="translated">가져올 때마다 &quot;doc *&quot;디렉토리를 건너 뛰십시오.</target>
        </trans-unit>
        <trans-unit id="160b3d2c26cf27627f75b323f1f2f273b38eb0f3" translate="yes" xml:space="preserve">
          <source>Skip &lt;code&gt;number&lt;/code&gt; commits before starting to show the commit output.</source>
          <target state="translated">커밋 출력 표시를 시작하기 전에 &lt;code&gt;number&lt;/code&gt; 커밋을 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="143f0d9f0b5891b48ad38fad90174c475ab3d608" translate="yes" xml:space="preserve">
          <source>Skip algorithm</source>
          <target state="translated">알고리즘 건너 뛰기</target>
        </trans-unit>
        <trans-unit id="fd9da89bf39cfad867f423a79c66781ba5934141" translate="yes" xml:space="preserve">
          <source>Skip algorithm discussed</source>
          <target state="translated">알고리즘 건너 뛰기</target>
        </trans-unit>
        <trans-unit id="e6458f822412c73c4c309bd3d568b1a062547077" translate="yes" xml:space="preserve">
          <source>Skip and remove all lines starting with comment character (default &lt;code&gt;#&lt;/code&gt;).</source>
          <target state="translated">주석 문자로 시작하는 모든 줄을 건너 뛰고 제거하십시오 (기본값 &lt;code&gt;#&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d0905b7d9c2aadf471da8a0572104f192b6463b" translate="yes" xml:space="preserve">
          <source>Skip move or rename actions which would lead to an error condition. An error happens when a source is neither existing nor controlled by Git, or when it would overwrite an existing file unless &lt;code&gt;-f&lt;/code&gt; is given.</source>
          <target state="translated">오류 조건으로 이어질 이동 또는 이름 바꾸기 작업을 건너 뜁니다. 소스가 존재하지 않거나 Git에 의해 제어되지 않거나 &lt;code&gt;-f&lt;/code&gt; 를 지정 하지 않으면 기존 파일을 덮어 쓰는 경우 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="93791f01919fc21e7203f6ad13249cb4adbabc2c" translate="yes" xml:space="preserve">
          <source>Skip output of blob objects and instead refer to blobs via their original SHA-1 hash. This is useful when rewriting the directory structure or history of a repository without touching the contents of individual files. Note that the resulting stream can only be used by a repository which already contains the necessary objects.</source>
          <target state="translated">얼룩 개체의 출력을 건너 뛰고 대신 원래 SHA-1 해시를 통해 얼룩을 참조합니다. 개별 파일의 내용을 건드리지 않고 디렉토리 구조 또는 저장소의 히스토리를 다시 작성할 때 유용합니다. 결과 스트림은 필요한 오브젝트가 이미 포함 된 저장소에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3704502c09a46589e3fc638d0b7431bdbfb4de69" translate="yes" xml:space="preserve">
          <source>Skip paths matching the regex.</source>
          <target state="translated">정규식과 일치하는 경로를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="8024d787464bdc42cf9e1692fcecd2225427e388" translate="yes" xml:space="preserve">
          <source>Skip the current commit and continue with the rest of the sequence.</source>
          <target state="translated">현재 커밋을 건너 뛰고 나머지 시퀀스를 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="8b89cae0a7a7a1a500c597f44f79f240ec0b9f01" translate="yes" xml:space="preserve">
          <source>Skip the current patch. This is only meaningful when restarting an aborted patch.</source>
          <target state="translated">현재 패치를 건너 뜁니다. 중단 된 패치를 다시 시작할 때만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="37f2142ef251b529e2961f797b73a85bc8215244" translate="yes" xml:space="preserve">
          <source>Skip the first &amp;lt;nn&amp;gt; numbers, for example if -f3 is specified, start the numbering with 0004.</source>
          <target state="translated">첫 번째 &amp;lt;nn&amp;gt; 숫자를 건너 뜁니다 (예 : -f3이 지정된 경우 0004로 번호 매기기 시작).</target>
        </trans-unit>
        <trans-unit id="53b34cae8fb29a9d928b4eaf4c1d1171200a7cd2" translate="yes" xml:space="preserve">
          <source>Skip untracked files matching pattern. Note that pattern is a shell wildcard pattern. See EXCLUDE PATTERNS below for more information.</source>
          <target state="translated">추적되지 않은 파일 일치 패턴을 건너 뜁니다. 패턴은 쉘 와일드 카드 패턴입니다. 자세한 내용은 아래의 제외 패턴을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5c514bc7b54c5d446f341bd390aa604bcfe7a779" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit</source>
          <target state="translated">스킵 워크 트리 비트</target>
        </trans-unit>
        <trans-unit id="1c6f4418b45f18f2276258a670ff4fb3ee82370c" translate="yes" xml:space="preserve">
          <source>Skip-worktree bit can be defined in one (long) sentence: When reading an entry, if it is marked as skip-worktree, then Git pretends its working directory version is up to date and read the index version instead.</source>
          <target state="translated">건너 뛰기 작업 트리 비트는 하나의 긴 문장으로 정의 할 수 있습니다. 항목을 읽을 때 건너 뛰기 작업 트리로 표시되면 Git은 작업 디렉토리 버전이 최신 인 것으로 가정하고 대신 인덱스 버전을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="497781ce21708a17d4e26d12bd089a723d673b06" translate="yes" xml:space="preserve">
          <source>So &quot;git bisect&quot; is designed to help find a &quot;first bad commit&quot;. And to be as efficient as possible, it tries to perform a binary search.</source>
          <target state="translated">따라서 &quot;git bisect&quot;는 &quot;첫 번째 잘못된 커밋&quot;을 찾는 데 도움이되도록 설계되었습니다. 그리고 가능한 효율적으로 이진 검색을 수행하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="2f63b69e28337cf529c035b03d9daaf28859996c" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;git diff&lt;/code&gt; is comparing against something other than the head. The thing that it&amp;rsquo;s comparing against is actually the index file, which is stored in .git/index in a binary format, but whose contents we can examine with ls-files:</source>
          <target state="translated">그래서 &lt;code&gt;git diff&lt;/code&gt; 머리가 아닌 다른 뭔가에 대해 비교된다. 비교하는 것은 실제로 이진 형식으로 .git / index에 저장되지만 ls-files로 내용을 검사 할 수있는 색인 파일입니다.</target>
        </trans-unit>
        <trans-unit id="87fbbf25154de6df0238ad0568533ed6007a8d44" translate="yes" xml:space="preserve">
          <source>So a good work-flow should be designed around the above points. That is making bisecting easier, more useful and standard.</source>
          <target state="translated">따라서 위의 점을 중심으로 좋은 작업 흐름을 설계해야합니다. 그것은 이등분을보다 쉽고 유용하며 표준으로 만들고 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe9010d034fcf65a3dd663b44598da34c322ed58" translate="yes" xml:space="preserve">
          <source>So be careful when using this with a refspec like &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt;, or any other refspec which might map references from multiple remotes to the same local namespace.</source>
          <target state="translated">따라서 이것을 &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; 와 같은 refspec과 함께 사용할 때 또는 여러 리모트에서 참조를 동일한 로컬 네임 스페이스에 맵핑 할 수있는 다른 refspec 과 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b170fc73b3dfabca43a4cde5eef61bd350b47e1" translate="yes" xml:space="preserve">
          <source>So by default &lt;code&gt;git commit&lt;/code&gt; uses the index to create the commit, not the working tree; the &quot;-a&quot; option to commit tells it to first update the index with all changes in the working tree.</source>
          <target state="translated">따라서 기본적으로 &lt;code&gt;git commit&lt;/code&gt; 은 인덱스를 사용하여 작업 트리가 아닌 커밋을 만듭니다. 커밋하는 &quot;-a&quot;옵션은 먼저 작업 트리의 모든 변경 사항으로 인덱스를 업데이트하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="f86c14eb732dcf1c0bad37f2fc6a2cc528890e0c" translate="yes" xml:space="preserve">
          <source>So doing a &lt;code&gt;git diff-index --cached&lt;/code&gt; is basically very useful when you are asking yourself &quot;what have I already marked for being committed, and what&amp;rsquo;s the difference to a previous tree&quot;.</source>
          <target state="translated">&lt;code&gt;git diff-index --cached&lt;/code&gt; 를 수행하는 것은 &quot;내가 이미 커밋 된 것으로 표시 한 것과 이전 트리와의 차이점&quot;을 스스로에게 물어볼 때 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d45f632df019622532eb259f26fdc9a9f2411148" translate="yes" xml:space="preserve">
          <source>So for example when &lt;code&gt;--thread&lt;/code&gt; and &lt;code&gt;--no-chain-reply-to&lt;/code&gt; are specified, the second and subsequent patches will be replies to the first one like in the illustration below where &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; is in reply to &lt;code&gt;[PATCH 0/2]&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;--thread&lt;/code&gt; 및 &lt;code&gt;--no-chain-reply-to&lt;/code&gt; 를 지정하면 두 번째 및 이후 패치는 아래 그림과 같이 &lt;code&gt;[PATCH v2 0/3]&lt;/code&gt; 이 &lt;code&gt;[PATCH 0/2]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8dac83a478835c1820a1dc8da47f73a69f302106" translate="yes" xml:space="preserve">
          <source>So git bisect is unconditional goodness - and feel free to quote that ;-)</source>
          <target state="translated">따라서 git bisect는 무조건적 선하심입니다.</target>
        </trans-unit>
        <trans-unit id="9a21b5de38126daf9f68802ae918237cb622de11" translate="yes" xml:space="preserve">
          <source>So if there is no bad merge base, the bisection process continues as usual after this step.</source>
          <target state="translated">따라서 잘못된 병합 기준이 없으면이 단계 후에도 정상적으로 이분법 프로세스가 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="d61ad44b1ad1935830d69abe827279c6ac721854" translate="yes" xml:space="preserve">
          <source>So if we could just &quot;replace&quot; Z by Z' when we bisect, then we would not need to add anything to a script. It would just work for anyone in the project sharing the special branches and the replacements.</source>
          <target state="translated">따라서 이등분 할 때 Z를 Z로 '바꿀'수 있다면 스크립트에 아무것도 추가 할 필요가 없습니다. 특별한 브랜치와 교체를 공유하는 프로젝트의 모든 사람에게 효과적입니다.</target>
        </trans-unit>
        <trans-unit id="6be137f4b3e3bebc88bcbf9a9fd9420c4009228f" translate="yes" xml:space="preserve">
          <source>So if you know how to create test cases and how to bisect, you will be subject to a virtuous circle:</source>
          <target state="translated">따라서 테스트 사례를 만드는 방법과 이등분하는 방법을 알고 있다면 선순환이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b28d1446f9340641647b1bfa92704042d040df77" translate="yes" xml:space="preserve">
          <source>So if you used &quot;git bisect skip&quot; (or the run script exited with special code 125) you could get a result like this:</source>
          <target state="translated">따라서 &quot;git bisect skip&quot;(또는 특수 코드 125로 종료 된 실행 스크립트)을 사용하면 다음과 같은 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edcb1ada2530409c42369421497ba8e78619bff1" translate="yes" xml:space="preserve">
          <source>So in the above example the best bisection point is commit C.</source>
          <target state="translated">위의 예에서 가장 좋은이 분점은 커밋 C입니다.</target>
        </trans-unit>
        <trans-unit id="6fdeecf50af4098d1933aa89ebcede0a8177561f" translate="yes" xml:space="preserve">
          <source>So in the end this means that to find the best bisection commits we should maximize the function:</source>
          <target state="translated">결국 이것은 최고의 bisection commit을 찾으려면 함수를 최대화해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="58a2f1d134fdcd7a3743e88aa224e9253e6fbd42" translate="yes" xml:space="preserve">
          <source>So it is a fact that commits near an untestable commit have a high probability of being untestable themselves. And the best bisection commits are often found together too (due to the bisection algorithm).</source>
          <target state="translated">따라서 테스트 할 수없는 커밋 근처의 커밋은 테스트 할 수없는 확률이 높습니다. 그리고 최고의 이분법 커밋은 종종 (이분법 알고리즘으로 인해) 함께 발견됩니다.</target>
        </trans-unit>
        <trans-unit id="aa016e179ca75d2a0eb71de197505264fa3225e9" translate="yes" xml:space="preserve">
          <source>So now we know how Git uses the object database to represent a project&amp;rsquo;s history:</source>
          <target state="translated">이제 Git이 오브젝트 데이터베이스를 사용하여 프로젝트 히스토리를 나타내는 방법을 알았습니다.</target>
        </trans-unit>
        <trans-unit id="ce2a816c8c6bc197cebf7da353940391ec82e2e3" translate="yes" xml:space="preserve">
          <source>So now you know that the missing blob was the data for a file named &lt;code&gt;myfile&lt;/code&gt;. And chances are you can also identify the directory&amp;mdash;​let&amp;rsquo;s say it&amp;rsquo;s in &lt;code&gt;somedirectory&lt;/code&gt;. If you&amp;rsquo;re lucky the missing copy might be the same as the copy you have checked out in your working tree at &lt;code&gt;somedirectory/myfile&lt;/code&gt;; you can test whether that&amp;rsquo;s right with &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object[1]&lt;/a&gt;:</source>
          <target state="translated">이제 누락 된 얼룩이 &lt;code&gt;myfile&lt;/code&gt; 이라는 파일의 데이터라는 것을 알았습니다 . 또한 디렉토리를 식별 할 수도 있습니다. 디렉토리가 &lt;code&gt;somedirectory&lt;/code&gt; 에 있다고 가정 해 봅시다 . 운이 좋으면 누락 된 사본은 작업 트리에서 &lt;code&gt;somedirectory/myfile&lt;/code&gt; 의 체크 아웃 한 사본과 동일 할 수 있습니다 . &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object [1] 사용&lt;/a&gt; 하여 올바른지 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02795e1f800cead1112ee5200f5eaf14f8868f55" translate="yes" xml:space="preserve">
          <source>So of course it&amp;rsquo;s much better as it&amp;rsquo;s O(N * T) vs O(N * T * M) if you would test everything after each commit.</source>
          <target state="translated">물론 각 커밋 후에 모든 것을 테스트한다면 O (N * T) 대 O (N * T * M)이므로 훨씬 좋습니다.</target>
        </trans-unit>
        <trans-unit id="bf839044c5c4761411ba28111f62e6182a819140" translate="yes" xml:space="preserve">
          <source>So only the W and B commits will be kept. Because commits X and Y will have been removed by rules a) and b) respectively, and because commits G are removed by rule b) too.</source>
          <target state="translated">따라서 W 및 B 커밋 만 유지됩니다. 커밋 X와 Y는 각각 규칙 a)와 b)에 의해 제거되고 커밋 G도 규칙 b)에 의해 제거되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="2adeb678ade18152fba70f98a363a63cf540c6c1" translate="yes" xml:space="preserve">
          <source>So regressions are fought all the time by developers, and indeed it is well known that bugs should be fixed as soon as possible, so as soon as they are found. That&amp;rsquo;s why it is interesting to have good tools for this purpose.</source>
          <target state="translated">따라서 회귀는 개발자가 항상 싸워야하며 실제로 버그는 가능한 빨리 수정해야한다는 것이 잘 알려져 있습니다. 그렇기 때문에이 목적을 위해 좋은 도구를 사용하는 것이 흥미 롭습니다.</target>
        </trans-unit>
        <trans-unit id="e3329398bcdff474dec989568418215901207762" translate="yes" xml:space="preserve">
          <source>So test suites and &quot;git bisect&quot; are complementary tools that are very powerful and efficient when used together.</source>
          <target state="translated">따라서 테스트 스위트와 &quot;git bisect&quot;는 함께 사용할 때 매우 강력하고 효율적인 보완 도구입니다.</target>
        </trans-unit>
        <trans-unit id="af6a5f3f7d1b778946d7ea3d80d407ba283ecbfd" translate="yes" xml:space="preserve">
          <source>So the algorithm used by &quot;git bisect&quot; to find the best bisection commit when there are no skipped commits is the following:</source>
          <target state="translated">따라서 건너 뛴 커밋이 없을 때 최상의 bisection 커밋을 찾기 위해 &quot;git bisect&quot;에서 사용하는 알고리즘은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d52372a3732a9693c38928f4af80ece55caba390" translate="yes" xml:space="preserve">
          <source>So the current algorithm seems to be the best possible given what we initially supposed.</source>
          <target state="translated">따라서 현재의 알고리즘은 우리가 처음에 생각한 것을 고려할 때 가장 좋은 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="ff070bb5b96ce6bdea0ee7e21e6149356aab622c" translate="yes" xml:space="preserve">
          <source>So the ideal is usually to produce a series of patches such that:</source>
          <target state="translated">따라서 이상적인 것은 일반적으로 다음과 같은 일련의 패치를 생성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a9929fd0a7cc637ffed9aa6825e45ac8df015448" translate="yes" xml:space="preserve">
          <source>So to help people find commits that introduce a &quot;bad&quot; behavior, the &quot;git bisect&quot; set of commands was invented. And it follows of course that in &quot;git bisect&quot; parlance, commits where the &quot;interesting behavior&quot; is present are called &quot;bad&quot; commits, while other commits are called &quot;good&quot; commits. And a commit that introduce the behavior we are interested in is called a &quot;first bad commit&quot;. Note that there could be more than one &quot;first bad commit&quot; in the commit space we are searching.</source>
          <target state="translated">따라서 사람들이 &quot;나쁜&quot;행동을 유발하는 커밋을 찾을 수 있도록 &quot;git bisect&quot;명령 세트가 개발되었습니다. 그리고 &quot;git bisect&quot;용어에서 &quot;흥미로운 행동&quot;이 존재하는 커밋은 &quot;나쁜&quot;커밋이라고하고 다른 커밋은 &quot;좋은&quot;커밋이라고합니다. 그리고 우리가 관심있는 행동을 소개하는 커밋을 &quot;첫 번째 나쁜 커밋&quot;이라고합니다. 검색중인 커밋 공간에 둘 이상의 &quot;첫 번째 잘못된 커밋&quot;이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15c2cfea7209fe12c9a7f928eefdf57e7efd00f9" translate="yes" xml:space="preserve">
          <source>So to introduce some real trust in the system, the only thing you need to do is to digitally sign just 'one' special note, which includes the name of a top-level commit. Your digital signature shows others that you trust that commit, and the immutability of the history of commits tells others that they can trust the whole history.</source>
          <target state="translated">따라서 시스템에 대한 진정한 신뢰를 얻으려면 최상위 커밋 이름을 포함하는 '한 가지'특별한 메모에 디지털 서명 만하면됩니다. 당신의 디지털 서명은 당신이 그 커밋을 신뢰한다는 것을 다른 사람들에게 보여주고, 커밋 기록의 불변성은 다른 사람들에게 그들이 전체 역사를 신뢰할 수 있다고 말합니다.</target>
        </trans-unit>
        <trans-unit id="909741d50394835646e0e74eaab338b4f855de2e" translate="yes" xml:space="preserve">
          <source>So to populate the index with the two files you just created, you can do</source>
          <target state="translated">방금 만든 두 파일로 인덱스를 채우려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f597f374b45ae15a5bbfbd431d1e5af284187139" translate="yes" xml:space="preserve">
          <source>So using a PRNG with a bias to favor commits away from the good and bad commits looked like a good choice.</source>
          <target state="translated">따라서 좋은 커밋과 나쁜 커밋에서 커밋을 선호하는 편견과 함께 PRNG를 사용하는 것이 좋은 선택처럼 보였습니다.</target>
        </trans-unit>
        <trans-unit id="1d3965fc903eee9b8f55d2c4363ff10ff9b5318f" translate="yes" xml:space="preserve">
          <source>So very soon it will not be possible to completely test everything.</source>
          <target state="translated">곧 모든 것을 완전히 테스트하는 것은 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="c734302804af13b8fb3578fee7c8a382eab7f492" translate="yes" xml:space="preserve">
          <source>So we chose G, H, K or L as the best bisection point, which is better than F. Because if for example L is bad, then we will know not only that L, M and N are bad but also that G, H, I and J are not the first bad commit (since we suppose that there is only one first bad commit and it must be an ancestor of L).</source>
          <target state="translated">따라서 우리는 G, H, K 또는 L을 F보다 나은 최고의이 분점으로 선택했습니다. 예를 들어 L이 나쁘면 L, M 및 N이 나쁘다는 것뿐만 아니라 G, H도 알 수 있습니다. , I와 J는 첫 번째 나쁜 커밋이 아닙니다 (우리는 첫 번째 나쁜 커밋이 하나만 있고 L의 조상이어야한다고 가정하기 때문에).</target>
        </trans-unit>
        <trans-unit id="52135537297d21de1e1bab64c3c62387485ffd7b" translate="yes" xml:space="preserve">
          <source>So we would be left with only:</source>
          <target state="translated">따라서 우리는 다음과 같이 남게됩니다.</target>
        </trans-unit>
        <trans-unit id="9a854aba22b6e93e9800490c72e201394edc5390" translate="yes" xml:space="preserve">
          <source>So what are the tools used to fight regressions? They are nearly the same as those used to fight regular bugs. The only specific tools are test suites and tools similar as &quot;git bisect&quot;.</source>
          <target state="translated">그렇다면 회귀와 싸우는 데 사용되는 도구는 무엇입니까? 그것들은 일반적인 버그와 싸우는 데 사용되는 것과 거의 동일합니다. 유일한 툴은 테스트 스위트와 &quot;git bisect&quot;와 유사한 툴입니다.</target>
        </trans-unit>
        <trans-unit id="17175b38ddc3adc987023ab7708e71618fdb213f" translate="yes" xml:space="preserve">
          <source>So what our &lt;code&gt;git add&lt;/code&gt; did was store a new blob and then put a reference to it in the index file. If we modify the file again, we&amp;rsquo;ll see that the new modifications are reflected in the &lt;code&gt;git diff&lt;/code&gt; output:</source>
          <target state="translated">그래서 우리의 &lt;code&gt;git add&lt;/code&gt; 한 일은 새로운 덩어리를 저장하고 인덱스 파일에 대한 참조를 넣어했다. 파일을 다시 수정하면 새로운 수정 사항이 &lt;code&gt;git diff&lt;/code&gt; 출력에 반영됩니다 .</target>
        </trans-unit>
        <trans-unit id="c52a5d49814c75f968644da3c05f28677f66e5d9" translate="yes" xml:space="preserve">
          <source>So when a commit is marked as &quot;bad&quot; we know we can remove all the commits in the graph except those that are ancestors of the new &quot;bad&quot; commit. This means that:</source>
          <target state="translated">따라서 커밋이 &quot;나쁜&quot;것으로 표시되면 새로운 &quot;나쁜&quot;커밋의 조상 인 커밋을 제외한 모든 커밋을 그래프에서 제거 할 수 있습니다. 이것은 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2ab9a98e063e3527611545f584f2c39a22096906" translate="yes" xml:space="preserve">
          <source>So, look into &lt;code&gt;builtin/cat-file.c&lt;/code&gt;, search for &lt;code&gt;cmd_cat_file()&lt;/code&gt; and look what it does.</source>
          <target state="translated">따라서 &lt;code&gt;builtin/cat-file.c&lt;/code&gt; 를 찾아 &lt;code&gt;cmd_cat_file()&lt;/code&gt; 을 검색하고 그 기능을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="190b1ee6ab5b81f82f0d76cf355df1a21f43d2e3" translate="yes" xml:space="preserve">
          <source>So, think about something which you are interested in, say, &quot;how can I access a blob just knowing the object name of it?&quot;. The first step is to find a Git command with which you can do it. In this example, it is either &lt;code&gt;git show&lt;/code&gt; or &lt;code&gt;git cat-file&lt;/code&gt;.</source>
          <target state="translated">따라서 관심있는 대상에 대해 생각해보십시오. &quot;개체 이름 만 알고있는 Blob에 어떻게 액세스 할 수 있습니까?&quot; 첫 번째 단계는 Git 명령을 찾는 것입니다. 이 예제에서는 &lt;code&gt;git show&lt;/code&gt; 또는 &lt;code&gt;git cat-file&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1efaef427fd5b515b3e304fc27457e91eec84a25" translate="yes" xml:space="preserve">
          <source>So, we can use somebody else&amp;rsquo;s work from a remote repository, but how can &lt;strong&gt;you&lt;/strong&gt; prepare a repository to let other people pull from it?</source>
          <target state="translated">따라서 원격 저장소에서 다른 사람의 작업을 사용할 수 있지만 다른 사람이 가져 오도록 저장소를 어떻게 준비 할 &lt;strong&gt;수&lt;/strong&gt; 있습니까?</target>
        </trans-unit>
        <trans-unit id="1d69dd0a510947edc4fb12eee97c080f4a377f68" translate="yes" xml:space="preserve">
          <source>Software bugs, or errors, are so prevalent and so detrimental that they cost the U.S. economy an estimated $59.5 billion annually, or about 0.6 percent of the gross domestic product, according to a newly released study commissioned by the Department of Commerce&amp;rsquo;s National Institute of Standards and Technology (NIST). At the national level, over half of the costs are borne by software users and the remainder by software developers/vendors. The study also found that, although all errors cannot be removed, more than a third of these costs, or an estimated $22.2 billion, could be eliminated by an improved testing infrastructure that enables earlier and more effective identification and removal of software defects. These are the savings associated with finding an increased percentage (but not 100 percent) of errors closer to the development stages in which they are introduced. Currently, over half of all errors are not found until &quot;downstream&quot; in the development process or during post-sale software use.</source>
          <target state="translated">미 상무부의 국립 표준 연구소 (National Institute of Standards)가 의뢰 한 새로 발표 된 연구에 따르면, 소프트웨어 버그 또는 오류는 매우 널리 퍼져 해마다 미국 경제에 연간 약 595 억 달러, 또는 국내 총생산의 약 0.6 %가 소요되는 것으로 추정됩니다. 그리고 기술 (NIST). 국가 차원에서 비용의 절반 이상이 소프트웨어 사용자가 부담하고 나머지는 소프트웨어 개발자 / 공급 업체가 부담합니다. 또한 모든 오류를 제거 할 수는 없지만 소프트웨어 결함을보다 빠르고 정확하게 식별 및 제거 할 수있는 향상된 테스트 인프라를 통해 이러한 비용의 3 분의 1 이상 또는 약 222 억 달러가 제거 될 수 있음을 발견했습니다.이는 도입 단계에 근접한 증가 된 비율 (100 % 아님)의 오류를 찾는 데 따른 비용 절감입니다. 현재 개발 과정에서 또는 다운 이후 판매 소프트웨어 사용 중에 &quot;다운 스트림&quot;이 될 때까지 모든 오류의 절반 이상이 발견되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f90a777e081dbed9d193d82399cc2e3159bf44a3" translate="yes" xml:space="preserve">
          <source>Software developers already spend approximately 80 percent of development costs on identifying and correcting defects, and yet few products of any type other than software are shipped with such high levels of errors.</source>
          <target state="translated">소프트웨어 개발자는 이미 결함을 식별하고 수정하는 데 개발 비용의 약 80 %를 소비하지만 소프트웨어 이외의 다른 유형의 제품에는 이러한 수준의 오류가있는 제품은 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="b27e803e858c897a720eecea15e5bd37677e07bf" translate="yes" xml:space="preserve">
          <source>Some Git commands take options that are only used for plumbing or that are deprecated, and such options are hidden from the default usage. This option gives the full list of options.</source>
          <target state="translated">일부 Git 명령은 배관에만 사용되거나 더 이상 사용되지 않는 옵션을 사용하며 이러한 옵션은 기본 사용법에서 숨겨집니다. 이 옵션은 전체 옵션 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="987ad55498ef51019e6595f32f9ee9a10fb74d21" translate="yes" xml:space="preserve">
          <source>Some actions require or allow to specify two revisions, and sometimes even two pathnames. In most general form such path_info (component) based gitweb URL looks like this:</source>
          <target state="translated">일부 작업에는 두 개의 수정본, 때로는 두 개의 경로 이름이 필요하거나 지정해야합니다. 가장 일반적인 형태로 이러한 path_info (구성 요소) 기반 gitweb URL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4e1994dd201b175192ea5080be05071ba824a420" translate="yes" xml:space="preserve">
          <source>Some atoms like %(align) and %(if) always require a matching %(end). We call them &quot;opening atoms&quot; and sometimes denote them as %($open).</source>
          <target state="translated">% (align) 및 % (if)와 같은 일부 원자는 항상 일치하는 % (end)를 필요로합니다. 우리는 이것을 &quot;개방 원자&quot;라고 부르며 때로는 % ($ open)로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b05a87bd0e5e1c61140759ab02c7e9f3bf4a2773" translate="yes" xml:space="preserve">
          <source>Some basic familiarity with Git is required. Having gone through &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; and &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt; should be sufficient.</source>
          <target state="translated">Git에 대한 기본 지식이 필요합니다. 겪었 데 &lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt; 및 &lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt; 에 충분해야한다.</target>
        </trans-unit>
        <trans-unit id="61fa4c6dc6ae1d559b0a8be1b0de50848c850d66" translate="yes" xml:space="preserve">
          <source>Some changes are so trivial that it is not necessary to create a separate branch and then merge into each of the test and release branches. For these changes, just apply directly to the &lt;code&gt;release&lt;/code&gt; branch, and then merge that into the &lt;code&gt;test&lt;/code&gt; branch.</source>
          <target state="translated">일부 변경 사항은 너무나 사소하므로 별도의 분기를 만든 다음 각 테스트 및 릴리스 분기에 병합 할 필요가 없습니다. 이러한 변경 사항은 &lt;code&gt;release&lt;/code&gt; 브랜치에 직접 적용한 다음 &lt;code&gt;test&lt;/code&gt; 브랜치에 병합하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="59b18808ec08d9ea8408e805bbd7fa2f7edcfa73" translate="yes" xml:space="preserve">
          <source>Some commands (e.g. svn and http interfaces) that interactively ask for a password can be told to use an external program given via the value of this variable. Can be overridden by the &lt;code&gt;GIT_ASKPASS&lt;/code&gt; environment variable. If not set, fall back to the value of the &lt;code&gt;SSH_ASKPASS&lt;/code&gt; environment variable or, failing that, a simple password prompt. The external program shall be given a suitable prompt as command-line argument and write the password on its STDOUT.</source>
          <target state="translated">대화식으로 비밀번호를 요청하는 일부 명령 (예 : svn 및 http 인터페이스)은이 변수의 값을 통해 제공되는 외부 프로그램을 사용하도록 지시 할 수 있습니다. &lt;code&gt;GIT_ASKPASS&lt;/code&gt; 환경 변수 로 대체 할 수 있습니다 . 설정하지 않으면 &lt;code&gt;SSH_ASKPASS&lt;/code&gt; 환경 변수 의 값으로 돌아가 거나 실패한 경우 간단한 비밀번호 프롬프트로 돌아갑니다 . 외부 프로그램은 명령 행 인수로 적합한 프롬프트를 제공 받아 STDOUT에 암호를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2234711ff3c27c62e0fc4ab53a0833622d8f13d" translate="yes" xml:space="preserve">
          <source>Some configuration variables control the way the &lt;code&gt;--trailer&lt;/code&gt; arguments are applied to each commit message and the way any existing trailer in the commit message is changed. They also make it possible to automatically add some trailers.</source>
          <target state="translated">일부 구성 변수는 &lt;code&gt;--trailer&lt;/code&gt; 인수가 각 커밋 메시지에 적용되는 방식과 커밋 메시지의 기존 트레일러가 변경되는 방식을 제어합니다 . 또한 일부 예고편을 자동으로 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="938be1fd3d7f894aaa8fcd897f4e95cd6aacc1b6" translate="yes" xml:space="preserve">
          <source>Some configuration variables have their default values (embedded in the CGI script) set during building gitweb &amp;mdash; if that is the case, this fact is put in their description. See gitweb&amp;rsquo;s &lt;code&gt;INSTALL&lt;/code&gt; file for instructions on building and installing gitweb.</source>
          <target state="translated">일부 구성 변수에는 gitweb을 빌드하는 동안 기본값 (CGI 스크립트에 포함)이 설정되어 있습니다.이 경우 해당 사실이 설명에 포함됩니다. gitweb 빌드 및 설치에 대한 지침 은 gitweb의 &lt;code&gt;INSTALL&lt;/code&gt; 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d66e22fd5f2bbbc188c5b064782bc9e186f6b28" translate="yes" xml:space="preserve">
          <source>Some email servers (e.g. smtp.163.com) limit the number emails to be sent per session (connection) and this will lead to a failure when sending many messages. With this option, send-email will disconnect after sending $&amp;lt;num&amp;gt; messages and wait for a few seconds (see --relogin-delay) and reconnect, to work around such a limit. You may want to use some form of credential helper to avoid having to retype your password every time this happens. Defaults to the &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; configuration variable.</source>
          <target state="translated">일부 전자 메일 서버 (예 : smtp.163.com)는 세션 당 전송되는 전자 메일 수 (연결)를 제한하므로 많은 메시지를 보낼 때 오류가 발생합니다. 이 옵션을 사용하면 $ &amp;lt;num&amp;gt; 메시지를 보낸 후 send-email의 연결이 끊어지고 몇 초 동안 기다린 후 (--relogin-delay 참조) 다시 연결하여 이러한 한계를 극복합니다. 이런 상황이 발생할 때마다 비밀번호를 다시 입력하지 않아도되도록 일종의 자격 증명 도우미를 사용할 수 있습니다. &lt;code&gt;sendemail.smtpBatchSize&lt;/code&gt; 구성 변수가 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="92168eb294cb53195c326d7cdc472c76b820a62e" translate="yes" xml:space="preserve">
          <source>Some features cannot be overridden per project. For those features the structure of appropriate &lt;code&gt;%feature&lt;/code&gt; hash element has a simpler form:</source>
          <target state="translated">프로젝트별로 일부 기능을 재정의 할 수 없습니다. 이러한 기능의 경우 적절한 &lt;code&gt;%feature&lt;/code&gt; 해시 요소 의 구조 는 더 간단한 형식입니다.</target>
        </trans-unit>
        <trans-unit id="7345fdef7f54471f79d673ac02c80817717e5d21" translate="yes" xml:space="preserve">
          <source>Some filesystems lose the executable bit when a file that is marked as executable is checked out, or checks out a non-executable file with executable bit on. &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; or &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt; probe the filesystem to see if it handles the executable bit correctly and this variable is automatically set as necessary.</source>
          <target state="translated">실행 파일로 표시된 파일을 체크 아웃하거나 실행 파일이 켜져있는 비 실행 파일을 체크 아웃하면 일부 파일 시스템에서 실행 비트가 손실됩니다. &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; 또는 &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; 은 파일 시스템을 검사하여 실행 파일이 올바르게 처리되는지 확인하고이 변수는 필요에 따라 자동으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1c65f795a263fd4e4ffc8fd7edc082e1bb01009b" translate="yes" xml:space="preserve">
          <source>Some filters will generate empty commits that leave the tree untouched. This option instructs git-filter-branch to remove such commits if they have exactly one or zero non-pruned parents; merge commits will therefore remain intact. This option cannot be used together with &lt;code&gt;--commit-filter&lt;/code&gt;, though the same effect can be achieved by using the provided &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; function in a commit filter.</source>
          <target state="translated">일부 필터는 빈 커밋을 생성하여 트리를 그대로 둡니다. 이 옵션은 자르지 않은 부모가 정확히 하나 또는 0 인 경우 커밋을 제거하도록 git-filter-branch에 지시합니다. 따라서 병합 커밋은 그대로 유지됩니다. 이 옵션은 &lt;code&gt;--commit-filter&lt;/code&gt; 와 함께 사용할 수 없지만 커밋 필터에서 제공된 &lt;code&gt;git_commit_non_empty_tree&lt;/code&gt; 함수를 사용하여 동일한 효과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="172ca906089028fc890c646e25bab698db638084" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_fl()&lt;/code&gt; suffix to indicate that they take &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;line-number&lt;/code&gt; arguments.</source>
          <target state="translated">일부 함수에는 &lt;code&gt;_fl()&lt;/code&gt; 접미사가있어 &lt;code&gt;file&lt;/code&gt; 및 &lt;code&gt;line-number&lt;/code&gt; 인수 를 사용함 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="cf5b41401ecbf41c583b9f31bc11f9978bf853cb" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_printf_fl()&lt;/code&gt; suffix to indicate that they also take a varargs argument.</source>
          <target state="translated">일부 함수에는 &lt;code&gt;_printf_fl()&lt;/code&gt; 접미사가있어 varargs 인수도 사용함 을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c20fab9f2e759692fa04bbce7cef5cc908557231" translate="yes" xml:space="preserve">
          <source>Some functions have a &lt;code&gt;_va_fl()&lt;/code&gt; suffix to indicate that they also take a &lt;code&gt;va_list&lt;/code&gt; argument.</source>
          <target state="translated">일부 함수에는 &lt;code&gt;_va_fl()&lt;/code&gt; 접미사가있어 &lt;code&gt;va_list&lt;/code&gt; 인수 도 사용함 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="eba90c7cd2e8efb76a00a6ef6fd10ba0e6c2d355" translate="yes" xml:space="preserve">
          <source>Some improvements to the algorithms inside &quot;git bisect&quot; are possible and some new features could help in some cases, but overall &quot;git bisect&quot; works already very well, is used a lot, and is already very useful. To back up that last claim, let&amp;rsquo;s give the final word to Ingo Molnar when he was asked by the author how much time does he think &quot;git bisect&quot; saves him when he uses it:</source>
          <target state="translated">&quot;git bisect&quot;내부의 알고리즘에 대한 일부 개선이 가능하고 일부 새로운 기능은 일부 경우에 도움이 될 수 있지만 전반적인 &quot;git bisect&quot;는 이미 잘 작동하고 많이 사용되며 이미 매우 유용합니다. 마지막 주장을 뒷받침하기 위해, 저자가 &quot;git bisect&quot;를 사용했을 때 얼마나 많은 시간을 절약한다고 생각하는지에 대한 질문을받은 Ingo Molnar에게 마지막 단어를 드리겠습니다.</target>
        </trans-unit>
        <trans-unit id="051a4238025a126fd35cea3d27808e1a33c19d81" translate="yes" xml:space="preserve">
          <source>Some key/value pairs are common to all events and some are event-specific.</source>
          <target state="translated">일부 키 / 값 쌍은 모든 이벤트에 공통적이며 일부는 이벤트에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="171887e25dc7a6bd359791fb5478731797724aa1" translate="yes" xml:space="preserve">
          <source>Some malformed strings may be accepted as valid dates. In some of these cases Git will still be able to obtain the correct date from the malformed string. There are also some types of malformed strings which Git will parse wrong, and yet consider valid. Seriously malformed strings will be rejected.</source>
          <target state="translated">일부 잘못된 문자열은 유효한 날짜로 허용 될 수 있습니다. 이러한 경우 중 일부는 Git이 잘못된 문자열에서 정확한 날짜를 얻을 수 있습니다. Git이 잘못 구문 분석하지만 유효한 것으로 간주하는 잘못된 형식의 문자열 유형도 있습니다. 형식이 잘못된 문자열은 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="783d5fee630f867a836aab31a09a1120dfa61932" translate="yes" xml:space="preserve">
          <source>Some more interesting work has been done in the upstream project, and &lt;code&gt;origin&lt;/code&gt; has advanced:</source>
          <target state="translated">업스트림 프로젝트에서 좀 더 흥미로운 작업이 이루어졌으며 &lt;code&gt;origin&lt;/code&gt; 가 발전했습니다.</target>
        </trans-unit>
        <trans-unit id="f3d95fe16308405a40d9c1590f99de534764e169" translate="yes" xml:space="preserve">
          <source>Some old repositories have tags without a tagger. The fast-import protocol was pretty strict about that, and did not allow that. So fake a tagger to be able to fast-import the output.</source>
          <target state="translated">일부 오래된 리포지토리에는 태그가없는 태그가 있습니다. 빠른 가져 오기 프로토콜은 그것에 대해 매우 엄격했으며 허용하지 않았습니다. 따라서 태그를 가짜로 만들어서 출력을 빠르게 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f1322ce775635ebc0b366d585bc7dbdc07c75d2" translate="yes" xml:space="preserve">
          <source>Some optional features and policies</source>
          <target state="translated">일부 선택적 기능 및 정책</target>
        </trans-unit>
        <trans-unit id="184f39eeceeacf637176614462d419ff5408c775" translate="yes" xml:space="preserve">
          <source>Some other SCM systems let the user create a tag from multiple files which are not from the same commit/changeset. Or to create tags which are a subset of the files available in the repository.</source>
          <target state="translated">일부 다른 SCM 시스템에서는 사용자가 동일한 커밋 / 변경 세트가 아닌 여러 파일에서 태그를 만들 수 있습니다. 또는 저장소에서 사용 가능한 파일의 서브 세트 인 태그를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="e0986df979670ad50493b8dd4aeecf085f900c18" translate="yes" xml:space="preserve">
          <source>Some other commands that also work on files in the working tree and/or in the index can take &lt;code&gt;--staged&lt;/code&gt; and/or &lt;code&gt;--worktree&lt;/code&gt;.</source>
          <target state="translated">작업 트리 및 / 또는 인덱스의 파일에서 작동하는 다른 명령은 &lt;code&gt;--staged&lt;/code&gt; 및 / 또는 &lt;code&gt;--worktree&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e825ac68d84922615f20a915d3c1eb9e9c71680" translate="yes" xml:space="preserve">
          <source>Some placeholders may depend on other options given to the revision traversal engine. For example, the &lt;code&gt;%g*&lt;/code&gt; reflog options will insert an empty string unless we are traversing reflog entries (e.g., by &lt;code&gt;git log -g&lt;/code&gt;). The &lt;code&gt;%d&lt;/code&gt; and &lt;code&gt;%D&lt;/code&gt; placeholders will use the &quot;short&quot; decoration format if &lt;code&gt;--decorate&lt;/code&gt; was not already provided on the command line.</source>
          <target state="translated">일부 자리 표시자는 수정 순회 엔진에 지정된 다른 옵션에 따라 달라질 수 있습니다. 예를 들어, &lt;code&gt;%g*&lt;/code&gt; reflog 옵션은 reflog 항목을 통과하지 않는 한 빈 문자열을 삽입합니다 (예 : &lt;code&gt;git log -g&lt;/code&gt; ). &lt;code&gt;%d&lt;/code&gt; 와 &lt;code&gt;%D&lt;/code&gt; 자리 경우 &quot;짧은&quot;장식 형식을 사용합니다 &lt;code&gt;--decorate&lt;/code&gt; 가 이미 명령 행에 제공되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="b90f1a06edbdea1cb1ea924bb534bf207be4c8cd" translate="yes" xml:space="preserve">
          <source>Some special diff options allow diffing the working directory against any of these stages:</source>
          <target state="translated">일부 특수 diff 옵션을 사용하면 작업 디렉토리를 다음 단계와 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="379a99bc56f81a74676a3582df5345ad077361ae" translate="yes" xml:space="preserve">
          <source>Some workflows require that one or more branches of development on one machine be replicated on another machine, but the two machines cannot be directly connected, and therefore the interactive Git protocols (git, ssh, http) cannot be used.</source>
          <target state="translated">일부 워크 플로우에서는 한 머신의 하나 이상의 개발 브랜치를 다른 머신에서 복제해야하지만 두 머신을 직접 연결할 수 없으므로 대화식 Git 프로토콜 (git, ssh, http)을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4efa70b7553b32aea10bdaaf89e5cdb60eb1465e" translate="yes" xml:space="preserve">
          <source>Somebody asks you to pull, and the changes sound worthy of merging.</source>
          <target state="translated">누군가가 당신에게 물을 것을 요구하고, 그 변화는 합병 할 가치가있는 것으로 들립니다.</target>
        </trans-unit>
        <trans-unit id="75bb6efa7b5bca1608dd13b1f00b4537d22f7537" translate="yes" xml:space="preserve">
          <source>Somebody hands you a copy of a file, and asks which commits modified a file such that it contained the given content either before or after the commit. You can find out with this:</source>
          <target state="translated">누군가 당신에게 파일의 사본을 건네고, 커밋 전후에 주어진 내용을 포함하도록 파일을 수정 한 커밋을 요청합니다. 당신은 이것으로 알 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="7ef51555538cdc5f80247933eec8146e7de62402" translate="yes" xml:space="preserve">
          <source>Someone can do a history rewrite, realize they messed up, restore from the backups in refs/original/, and then redo their git-filter-branch command. (The backup in refs/original/ is not a real backup; it dereferences tags first.)</source>
          <target state="translated">누군가는 기록을 다시 작성하고 엉망이 된 것을 알고 refs / original /의 백업에서 복원 한 다음 git-filter-branch 명령을 다시 실행할 수 있습니다. (refs / original /의 백업은 실제 백업이 아니므로 태그를 먼저 참조하지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="8b7568eaac49251d7ecfa53edc4f2d50e2427376" translate="yes" xml:space="preserve">
          <source>Someone can have a set of &quot;working and tested filters&quot; which they document or provide to a coworker, who then runs them on a different OS where the same commands are not working/tested (some examples in the git-filter-branch manpage are also affected by this). BSD vs. GNU userland differences can really bite. If lucky, error messages are spewed. But just as likely, the commands either don&amp;rsquo;t do the filtering requested, or silently corrupt by making some unwanted change. The unwanted change may only affect a few commits, so it&amp;rsquo;s not necessarily obvious either. (The fact that problems won&amp;rsquo;t necessarily be obvious means they are likely to go unnoticed until the rewritten history is in use for quite a while, at which point it&amp;rsquo;s really hard to justify another flag-day for another rewrite.)</source>
          <target state="translated">누군가는 문서화하거나 동료에게 제공하는 &quot;작동 및 테스트 된 필터&quot;세트를 가질 수 있으며, 그런 다음 동일한 명령이 작동 / 테스트되지 않은 다른 OS에서 실행됩니다 (git-filter-branch 맨 페이지의 일부 예는 또한 이것에 의해 영향을받습니다). BSD와 GNU 사용자 영역의 차이점은 실제로 물릴 수 있습니다. 운이 좋으면 오류 메시지가 표시됩니다. 그러나 명령은 요청 된 필터링을 수행하지 않거나 원치 않는 변경을 수행하여 자동으로 손상됩니다. 원하지 않는 변경은 몇 가지 커밋에만 영향을 줄 수 있으므로 반드시 명확한 것은 아닙니다. (문제가 분명하지 않다는 사실은 재기록 된 역사가 꽤 오랫동안 사용되기 전까지는 눈에 띄지 않을 가능성이 있다는 것을 의미합니다.이 시점에서 또 다른 재기록을 위해 또 다른 국기의 날을 정당화하기는 정말로 어렵습니다.)</target>
        </trans-unit>
        <trans-unit id="f6f28be0bc03c39873befbc10c61feb3cd6f09d9" translate="yes" xml:space="preserve">
          <source>Sometime later when enough time has passed and testing done, you can pull the same branch into the &lt;code&gt;release&lt;/code&gt; tree ready to go upstream. This is where you see the value of keeping each patch (or patch series) in its own branch. It means that the patches can be moved into the &lt;code&gt;release&lt;/code&gt; tree in any order.</source>
          <target state="translated">나중에 충분한 시간이 지났고 테스트가 완료되면 동일한 분기를 &lt;code&gt;release&lt;/code&gt; 트리 로 가져와 업스트림으로 이동할 수 있습니다. 여기에서 각 패치 (또는 패치 시리즈)를 자체 분기에 유지하는 가치를 볼 수 있습니다. 즉, 패치 를 임의의 순서로 &lt;code&gt;release&lt;/code&gt; 트리 로 옮길 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3de282e58de418da244c9ed4c8dec9bb8a8937a" translate="yes" xml:space="preserve">
          <source>Sometimes it happens that the current state cannot be tested, for example if it does not compile because there was a bug preventing it at that time. This is what the special exit code 125 is for. It tells &quot;git bisect run&quot; that the current commit should be marked as untestable and that another one should be chosen and checked out.</source>
          <target state="translated">때로는 현재 상태를 테스트 할 수없는 경우가 있습니다. 예를 들어, 당시 버그를 방지하여 컴파일하지 않은 경우입니다. 이것이 특수 종료 코드 125의 목적입니다. &quot;git bisect run&quot;에 현재 커밋을 테스트 할 수없는 것으로 표시하고 다른 커밋을 선택하여 체크 아웃해야한다고 지시합니다.</target>
        </trans-unit>
        <trans-unit id="ab0983c0f5d9e7bd28c3834685713747f93c2919" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to see the diff of a text-converted version of some binary files. For example, a word processor document can be converted to an ASCII text representation, and the diff of the text shown. Even though this conversion loses some information, the resulting diff is useful for human viewing (but cannot be applied directly).</source>
          <target state="translated">때때로 일부 바이너리 파일의 텍스트 변환 버전의 차이점을 보는 것이 바람직합니다. 예를 들어, 워드 프로세서 문서는 ASCII 텍스트 표현과 텍스트의 diff로 변환 될 수 있습니다. 이 변환에서 일부 정보가 손실 되더라도 diff는 사람이 보는 데 유용하지만 직접 적용 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a66c6ccc61eb22dbd8fb180270521a352bb26eb7" translate="yes" xml:space="preserve">
          <source>Sometimes the thing fixed in b.2. cannot be amended to the not-quite perfect commit it fixes, because that commit is buried deeply in a patch series. That is exactly what interactive rebase is for: use it after plenty of &quot;a&quot;s and &quot;b&quot;s, by rearranging and editing commits, and squashing multiple commits into one.</source>
          <target state="translated">때때로 b.2에서 수정 된 것. 커밋은 패치 시리즈에 깊이 묻혀 있기 때문에 수정되지 않은 완벽한 커밋으로 수정할 수 없습니다. 이것이 바로 대화식 리베이스의 목적입니다. 커밋을 재 배열하고 편집하고 여러 커밋을 하나로 스 쿼싱하여 많은 &quot;a&quot;와 &quot;b&quot;후에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7d8c42c4820860471a909b97a129a9232304c94a" translate="yes" xml:space="preserve">
          <source>Sometimes what you want instead is a set of patches; for this you can use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt;:</source>
          <target state="translated">때때로 당신이 원하는 것은 대신 패치 세트입니다; 이를 위해 &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]을&lt;/a&gt; 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="abb396ee2420ccad29c3b6a0f48213b60cfe8e4f" translate="yes" xml:space="preserve">
          <source>Sometimes you are not looking for the commit that introduced a breakage, but rather for a commit that caused a change between some other &quot;old&quot; state and &quot;new&quot; state. For example, you might be looking for the commit that introduced a particular fix. Or you might be looking for the first commit in which the source-code filenames were finally all converted to your company&amp;rsquo;s naming standard. Or whatever.</source>
          <target state="translated">때로는 중단을 유발 한 커밋을 찾지 않고 다른 &quot;이전&quot;상태와 &quot;새로운&quot;상태 사이에서 변경을 일으키는 커밋을 찾고 있습니다. 예를 들어, 특정 수정 사항을 도입 한 커미트를 찾고있을 수 있습니다. 또는 소스 코드 파일 이름이 회사의 명명 표준으로 모두 변환 된 첫 번째 커밋을 찾고있을 것입니다. 또는 무엇이든.</target>
        </trans-unit>
        <trans-unit id="709d16fb784b306222cc9b75f2da6965fd037ce9" translate="yes" xml:space="preserve">
          <source>Sometimes you are only interested in parts of the history, for example the commits modifying a particular &amp;lt;path&amp;gt;. But there are two parts of &lt;code&gt;History Simplification&lt;/code&gt;, one part is selecting the commits and the other is how to do it, as there are various strategies to simplify the history.</source>
          <target state="translated">때로는 특정 &amp;lt;path&amp;gt;를 수정하는 커밋과 같이 기록의 일부에만 관심이 있습니다. 그러나 &lt;code&gt;History Simplification&lt;/code&gt; 에는 두 가지 부분이 있습니다 . 한 부분은 커밋을 선택하는 것이고 다른 하나는 기록을 단순화하는 다양한 전략이 있기 때문에이를 수행하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="3329bd14db714a1ebe54846da15c65686d4c297b" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to create a new branch &lt;code&gt;without&lt;/code&gt; actually checking it out and switching to it. If so, just use the command</source>
          <target state="translated">때로는 실제로 체크 아웃하고 전환 &lt;code&gt;without&lt;/code&gt; 새 브랜치를 생성하려고 할 수 있습니다 . 그렇다면 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9e0d77cc540587abb285618787352fd870a1def8" translate="yes" xml:space="preserve">
          <source>Sometimes you want to edit a commit deeper in your history. One approach is to use &lt;code&gt;git format-patch&lt;/code&gt; to create a series of patches and then reset the state to before the patches:</source>
          <target state="translated">때때로 당신은 당신의 역사에서 커밋을 더 깊이 편집하려고합니다. 한 가지 방법은 &lt;code&gt;git format-patch&lt;/code&gt; 를 사용하여 일련의 패치를 작성한 다음 상태를 패치 이전으로 재설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="17cc71829facf5cb6a6b321a2cbf6c64d2bc06da" translate="yes" xml:space="preserve">
          <source>Sometimes you would need to override a setting of an attribute for a path to &lt;code&gt;Unspecified&lt;/code&gt; state. This can be done by listing the name of the attribute prefixed with an exclamation point &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">때때로 경로에 대한 속성 설정을 &lt;code&gt;Unspecified&lt;/code&gt; 상태 로 대체해야 할 수도 있습니다 . 느낌표가 접두사로 붙은 속성 이름을 나열하면됩니다 &lt;code&gt;!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18f66cee3089e3b2788a7d42c7fbfe71e8e6eab6" translate="yes" xml:space="preserve">
          <source>Sometimes, more than one builtin is contained in one source file. For example, &lt;code&gt;cmd_whatchanged()&lt;/code&gt; and &lt;code&gt;cmd_log()&lt;/code&gt; both reside in &lt;code&gt;builtin/log.c&lt;/code&gt;, since they share quite a bit of code. In that case, the commands which are &lt;code&gt;not&lt;/code&gt; named like the &lt;code&gt;.c&lt;/code&gt; file in which they live have to be listed in &lt;code&gt;BUILT_INS&lt;/code&gt; in the &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">때때로 하나 이상의 소스 파일이 하나의 소스 파일에 포함되어 있습니다. 예를 들어, &lt;code&gt;cmd_whatchanged()&lt;/code&gt; 및 &lt;code&gt;cmd_log()&lt;/code&gt; 모두 약간의 코드를 공유하므로 &lt;code&gt;builtin/log.c&lt;/code&gt; 에 있습니다. 이 경우, &lt;code&gt;.c&lt;/code&gt; 파일 과 같이 이름 이 지정 &lt;code&gt;not&lt;/code&gt; 명령 은 &lt;code&gt;Makefile&lt;/code&gt; 의 &lt;code&gt;BUILT_INS&lt;/code&gt; 에 나열되어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="59356e5b6f2fcc25a08169f8960c8b579beeb31f" translate="yes" xml:space="preserve">
          <source>Sometimes, you do not know where to look for a feature. In many such cases, it helps to search through the output of &lt;code&gt;git log&lt;/code&gt;, and then &lt;code&gt;git show&lt;/code&gt; the corresponding commit.</source>
          <target state="translated">경우에 따라 기능을 찾을 위치를 모릅니다. 많은 경우, &lt;code&gt;git log&lt;/code&gt; 의 출력을 검색 한 다음 &lt;code&gt;git show&lt;/code&gt; 가 해당 커밋을 표시 하는 데 도움이됩니다 .</target>
        </trans-unit>
        <trans-unit id="94a8d6cf12f26243dde0f5140dd4760ee8881bb4" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. Supports &quot;version:refname&quot; or &quot;v:refname&quot; (tag names are treated as versions). The &quot;version:refname&quot; sort order can also be affected by the &quot;versionsort.suffix&quot; configuration variable. See &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt; for more sort options, but be aware keys like &lt;code&gt;committerdate&lt;/code&gt; that require access to the objects themselves will not work for refs whose objects have not yet been fetched from the remote, and will give a &lt;code&gt;missing object&lt;/code&gt; error.</source>
          <target state="translated">주어진 키를 기준으로 정렬하십시오. 접두사 &lt;code&gt;-&lt;/code&gt; 값의 내림차순으로 정렬합니다. &quot;version : refname&quot;또는 &quot;v : refname&quot;을 지원합니다 (태그 이름은 버전으로 취급 됨). &quot;version : refname&quot;정렬 순서는 &quot;versionsort.suffix&quot;구성 변수의 영향을받을 수도 있습니다. 정렬 옵션에 대한 자세한 내용은 &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt; 을 참조하십시오. 그러나 객체 자체에 액세스해야하는 &lt;code&gt;committerdate&lt;/code&gt; 와 같은 키 는 객체를 아직 원격에서 가져 오지 않은 참조에 대해서는 작동하지 않으며 &lt;code&gt;missing object&lt;/code&gt; 오류.</target>
        </trans-unit>
        <trans-unit id="4f8164295fbfdf007f932844e4ac7576dc2d1ee2" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. You may use the --sort=&amp;lt;key&amp;gt; option multiple times, in which case the last key becomes the primary key. Also supports &quot;version:refname&quot; or &quot;v:refname&quot; (tag names are treated as versions). The &quot;version:refname&quot; sort order can also be affected by the &quot;versionsort.suffix&quot; configuration variable. The keys supported are the same as those in &lt;code&gt;git for-each-ref&lt;/code&gt;. Sort order defaults to the value configured for the &lt;code&gt;tag.sort&lt;/code&gt; variable if it exists, or lexicographic order otherwise. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">주어진 키를 기준으로 정렬하십시오. 접두사 &lt;code&gt;-&lt;/code&gt; 값의 내림차순으로 정렬합니다. --sort = &amp;lt;key&amp;gt; 옵션을 여러 번 사용할 수 있으며,이 경우 마지막 키가 기본 키가됩니다. &quot;version : refname&quot;또는 &quot;v : refname&quot;도 지원합니다 (태그 이름은 버전으로 취급 됨). &quot;version : refname&quot;정렬 순서는 &quot;versionsort.suffix&quot;구성 변수의 영향을받을 수도 있습니다. 지원되는 키는 &lt;code&gt;git for-each-ref&lt;/code&gt; 의 키와 동일 합니다. 정렬 순서의 기본값은 &lt;code&gt;tag.sort&lt;/code&gt; 변수에 대해 구성된 값 (있는 경우), 그렇지 않으면 사전 순서입니다. &lt;a href=&quot;git-config&quot;&gt;git-config [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="235c15477db9421be496a9bdb61ee9fe5440e8e8" translate="yes" xml:space="preserve">
          <source>Sort based on the key given. Prefix &lt;code&gt;-&lt;/code&gt; to sort in descending order of the value. You may use the --sort=&amp;lt;key&amp;gt; option multiple times, in which case the last key becomes the primary key. The keys supported are the same as those in &lt;code&gt;git
for-each-ref&lt;/code&gt;. Sort order defaults to the value configured for the &lt;code&gt;branch.sort&lt;/code&gt; variable if exists, or to sorting based on the full refname (including &lt;code&gt;refs/...&lt;/code&gt; prefix). This lists detached HEAD (if present) first, then local branches and finally remote-tracking branches. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">주어진 키를 기준으로 정렬하십시오. 접두사 &lt;code&gt;-&lt;/code&gt; 값의 내림차순으로 정렬합니다. --sort = &amp;lt;key&amp;gt; 옵션을 여러 번 사용할 수 있으며,이 경우 마지막 키가 기본 키가됩니다. 지원되는 키는 &lt;code&gt;git for-each-ref&lt;/code&gt; 의 키와 동일 합니다. 정렬 순서의 기본값은 &lt;code&gt;branch.sort&lt;/code&gt; 변수에 대해 구성된 값 (있는 경우) 또는 전체 refname ( &lt;code&gt;refs/...&lt;/code&gt; 접두사 포함)을 기준으로 정렬 됩니다. 분리 된 HEAD (있는 경우)를 먼저 표시 한 다음 로컬 브랜치 및 원격 추적 브랜치를 나열합니다. &lt;a href=&quot;git-config&quot;&gt;git-config [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f1523e64bd22fd24a21f855bbd22c50e1efc550" translate="yes" xml:space="preserve">
          <source>Sort commits by date when possible.</source>
          <target state="translated">가능하면 날짜별로 커밋을 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="2c6b9826784b28663433b0a6dc2f2674e6b29a9a" translate="yes" xml:space="preserve">
          <source>Sort output according to the number of commits per author instead of author alphabetic order.</source>
          <target state="translated">작성자 알파벳 순서 대신 작성자 당 커밋 수에 따라 출력을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="97d057704ff7369f19e3dfc333c10a22925317f1" translate="yes" xml:space="preserve">
          <source>Sorting and filtering branches are case insensitive.</source>
          <target state="translated">분기 정렬 및 필터링은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ce7d777697e6536cabaa9eaf03abf69552dd696" translate="yes" xml:space="preserve">
          <source>Sorting and filtering refs are case insensitive.</source>
          <target state="translated">참조 정렬 및 필터링은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d38ff15fbd7490d8843677184f9c7afbcdf73ce" translate="yes" xml:space="preserve">
          <source>Sorting and filtering tags are case insensitive.</source>
          <target state="translated">태그 정렬 및 필터링은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74d012567bc749743b2f7f680471d74e8b0444d4" translate="yes" xml:space="preserve">
          <source>Source code management (tool).</source>
          <target state="translated">소스 코드 관리 (도구).</target>
        </trans-unit>
        <trans-unit id="36b1651cdc36dfe13b6c0271ea5052804f0ae0c9" translate="yes" xml:space="preserve">
          <source>Sparse checkout</source>
          <target state="translated">스파 스 체크 아웃</target>
        </trans-unit>
        <trans-unit id="7aaf15f27eda1de7eaf7b123729519d3afe58336" translate="yes" xml:space="preserve">
          <source>Specifically, the following are removed until none of them remain:</source>
          <target state="translated">특히 다음 중 하나도 남아 있지 않을 때까지 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="6fb30b05a9f660538f592f3613160c9d3d393240" translate="yes" xml:space="preserve">
          <source>Specified branch is an ancestor of the remote HEAD</source>
          <target state="translated">지정된 브랜치는 원격 HEAD의 조상입니다.</target>
        </trans-unit>
        <trans-unit id="095f9fffc528a2b593b5d023d80910beab9fba54" translate="yes" xml:space="preserve">
          <source>Specified branch resolves to an object that exists locally</source>
          <target state="translated">지정된 분기가 로컬로 존재하는 개체로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="8bd7d2d739debb36a1057aa4a730675102718bfe" translate="yes" xml:space="preserve">
          <source>Specifies a port different from the default port (SMTP servers typically listen to smtp port 25, but may also listen to submission port 587, or the common SSL smtp port 465); symbolic port names (e.g. &quot;submission&quot; instead of 587) are also accepted. The port can also be set with the &lt;code&gt;sendemail.smtpServerPort&lt;/code&gt; configuration variable.</source>
          <target state="translated">기본 포트와 다른 포트를 지정합니다 (SMTP 서버는 일반적으로 smtp 포트 25를 수신하지만 제출 포트 587 또는 공통 SSL smtp 포트 465를 수신 할 수도 있음). 기호 포트 이름 (예 : 587 대신 &quot;제출&quot;)도 허용됩니다. &lt;code&gt;sendemail.smtpServerPort&lt;/code&gt; 구성 변수를 사용하여 포트를 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07c63275a8584ac825542ccb56fd0f5b3bf25b5a" translate="yes" xml:space="preserve">
          <source>Specifies compression level for newly-compressed data in the generated pack. If not specified, pack compression level is determined first by pack.compression, then by core.compression, and defaults to -1, the zlib default, if neither is set. Add --no-reuse-object if you want to force a uniform compression level on all data no matter the source.</source>
          <target state="translated">생성 된 팩에서 새로 압축 된 데이터의 압축 레벨을 지정합니다. 지정하지 않으면 pack 압축 수준은 먼저 pack.compression에 의해 결정된 다음 core.compression에 의해 결정되며 기본값이 -1로 설정되어 있지 않으면 zlib 기본값입니다. 소스에 관계없이 모든 데이터에 균일 한 압축 수준을 적용하려면 --no-reuse-object를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="2e586cba19f8fbc5a10baac47fbd5c9e37781d67" translate="yes" xml:space="preserve">
          <source>Specifies how a merge is handled when the merged-in history is already a descendant of the current history. &lt;code&gt;--ff&lt;/code&gt; is the default unless merging an annotated (and possibly signed) tag that is not stored in its natural place in the &lt;code&gt;refs/tags/&lt;/code&gt; hierarchy, in which case &lt;code&gt;--no-ff&lt;/code&gt; is assumed.</source>
          <target state="translated">병합 된 기록이 이미 현재 기록의 후손 인 경우 병합이 처리되는 방법을 지정합니다. &lt;code&gt;--ff&lt;/code&gt; &lt;code&gt;refs/tags/&lt;/code&gt; 계층 구조 의 자연 위치에 저장되지 않은 주석이 달린 (및 부호있는) 태그를 병합하지 않는 한 --ff 는 기본값 이며,이 경우 &lt;code&gt;--no-ff&lt;/code&gt; 로 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="1e4cfa4b695628b655fba3d437b2ed50df8c7399" translate="yes" xml:space="preserve">
          <source>Specifies how many context lines should be used in calls to diff made by the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;. The default is &quot;5&quot;.</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]에&lt;/a&gt; 의한 diff 호출에 사용되어야하는 컨텍스트 라인 수를 지정합니다 . 기본값은 &quot;5&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ee05d66bfede680eae8d8ce792188074b5498ff4" translate="yes" xml:space="preserve">
          <source>Specifies how many submodules are fetched/cloned at the same time. A positive integer allows up to that number of submodules fetched in parallel. A value of 0 will give some reasonable default. If unset, it defaults to 1.</source>
          <target state="translated">동시에 페치 / 복제되는 서브 모듈 수를 지정합니다. 양의 정수는 병렬로 페치 된 최대 수의 서브 모듈을 허용합니다. 값이 0이면 합리적인 기본값이 제공됩니다. 설정하지 않으면 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="316fa49ea084b12859b1b97d79b0376bed50442d" translate="yes" xml:space="preserve">
          <source>Specifies how the submodules obtain alternates when submodules are cloned. Possible values are &lt;code&gt;no&lt;/code&gt;, &lt;code&gt;superproject&lt;/code&gt;. By default &lt;code&gt;no&lt;/code&gt; is assumed, which doesn&amp;rsquo;t add references. When the value is set to &lt;code&gt;superproject&lt;/code&gt; the submodule to be cloned computes its alternates location relative to the superprojects alternate.</source>
          <target state="translated">서브 모듈이 복제 될 때 서브 모듈이 대체를 얻는 방법을 지정합니다. 가능한 값은 &lt;code&gt;no&lt;/code&gt; , &lt;code&gt;superproject&lt;/code&gt; 입니다. 기본적으로 &lt;code&gt;no&lt;/code&gt; 는 가정되며 참조를 추가하지 않습니다. 값이 &lt;code&gt;superproject&lt;/code&gt; 로 설정되면, 복제 될 서브 모듈은 수퍼 프로젝트 대체물에 대한 대체 위치를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="b31fc36154a26e26a1c078ebba51ee8a4995b30b" translate="yes" xml:space="preserve">
          <source>Specifies how to treat errors with the alternates for a submodule as computed via &lt;code&gt;submodule.alternateLocation&lt;/code&gt;. Possible values are &lt;code&gt;ignore&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;die&lt;/code&gt;. Default is &lt;code&gt;die&lt;/code&gt;. Note that if set to &lt;code&gt;ignore&lt;/code&gt; or &lt;code&gt;info&lt;/code&gt;, and if there is an error with the computed alternate, the clone proceeds as if no alternate was specified.</source>
          <target state="translated">을 통해 산출 된 지정 방법 서브 모듈의 대체와 오류를 치료하는 &lt;code&gt;submodule.alternateLocation&lt;/code&gt; . 가능한 값은 &lt;code&gt;ignore&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;die&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;die&lt;/code&gt; 입니다. &lt;code&gt;ignore&lt;/code&gt; 또는 &lt;code&gt;info&lt;/code&gt; 로 설정 하고 계산 된 대체에 오류가있는 경우 대체가 지정되지 않은 것처럼 복제가 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="be724c0999a6ad4178618a1619dc5ee566f604f6" translate="yes" xml:space="preserve">
          <source>Specifies if commands recurse into submodules by default. This applies to all commands that have a &lt;code&gt;--recurse-submodules&lt;/code&gt; option, except &lt;code&gt;clone&lt;/code&gt;. Defaults to false.</source>
          <target state="translated">기본적으로 명령이 하위 모듈로 되풀이되는지 여부를 지정합니다. 이는 &lt;code&gt;clone&lt;/code&gt; 을 제외한 &lt;code&gt;--recurse-submodules&lt;/code&gt; 옵션 이있는 모든 명령에 적용됩니다 . 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="4a0da697fa597c14275c00dd14541ab0c3dfd994" translate="yes" xml:space="preserve">
          <source>Specifies the Fully Qualified Domain Name (FQDN) used in the HELO/EHLO command to the SMTP server. Some servers require the FQDN to match your IP address. If not set, git send-email attempts to determine your FQDN automatically. Default is the value of &lt;code&gt;sendemail.smtpDomain&lt;/code&gt;.</source>
          <target state="translated">HELO / EHLO 명령에 사용 된 FQDN (정규화 된 도메인 이름)을 SMTP 서버에 지정합니다. 일부 서버는 FQDN이 IP 주소와 일치해야합니다. 설정하지 않으면 git send-email은 FQDN을 자동으로 확인하려고 시도합니다. 기본값은 &lt;code&gt;sendemail.smtpDomain&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="5037aaf03dca1f2f538183f1496bfc2b7e1efabf" translate="yes" xml:space="preserve">
          <source>Specifies the default encoding to use for displaying of file contents in &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt; and &lt;a href=&quot;gitk&quot;&gt;gitk[1]&lt;/a&gt;. It can be overridden by setting the &lt;code&gt;encoding&lt;/code&gt; attribute for relevant files (see &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;). If this option is not set, the tools default to the locale encoding.</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt; 및 &lt;a href=&quot;gitk&quot;&gt;gitk [1]&lt;/a&gt; 에 파일 내용을 표시하는 데 사용할 기본 인코딩을 지정합니다 . 관련 파일 의 &lt;code&gt;encoding&lt;/code&gt; 속성을 설정하여 재정의 할 수 있습니다 ( &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; 참조 ). 이 옵션을 설정하지 않으면 도구는 기본적으로 로캘 인코딩으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="8d7b044fb5611f2bdd400a7d800ea730223f6289" translate="yes" xml:space="preserve">
          <source>Specifies the dictionary used for spell checking commit messages in the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;. When set to &quot;none&quot; spell checking is turned off.</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt; 에서 맞춤법 검사 커밋 메시지에 사용되는 사전을 지정합니다 . &quot;없음&quot;으로 설정하면 맞춤법 검사가 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="d083f984efe9263940e7d58fa993a7931f1dd65f" translate="yes" xml:space="preserve">
          <source>Specifies the encoding used to output author names and commit summaries. Setting it to &lt;code&gt;none&lt;/code&gt; makes blame output unconverted data. For more information see the discussion about encoding in the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; manual page.</source>
          <target state="translated">작성자 이름 및 커밋 요약을 출력하는 데 사용되는 인코딩을 지정합니다. &lt;code&gt;none&lt;/code&gt; 으로 설정하면 변환 되지 않은 데이터가 출력됩니다. 자세한 내용은 &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; 매뉴얼 페이지 에서 인코딩에 대한 설명을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="a27599ead22294e56acfe0afc5fbf545479773f2" translate="yes" xml:space="preserve">
          <source>Specifies the format used to output dates in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. If unset the iso format is used. For supported values, see the discussion of the &lt;code&gt;--date&lt;/code&gt; option at &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">날짜를 &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; 로 출력하는 데 사용되는 형식을 지정합니다 . 설정하지 않으면 iso 형식이 사용됩니다. 지원되는 값 은 &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; 에서 &lt;code&gt;--date&lt;/code&gt; 옵션에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08d91dd5a7053d3bafb0000dd55ac78c15731e93" translate="yes" xml:space="preserve">
          <source>Specifies the format used to output dates. If --date is not provided, the value of the blame.date config variable is used. If the blame.date config variable is also not set, the iso format is used. For supported values, see the discussion of the --date option at &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">날짜를 출력하는 데 사용되는 형식을 지정합니다. --date를 제공하지 않으면 blame.date 구성 변수의 값이 사용됩니다. blame.date 구성 변수도 설정되지 않은 경우 iso 형식이 사용됩니다. 지원되는 값은 &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; 에서 --date 옵션에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08b582fd23612321f471de0a5131383c71313dc1" translate="yes" xml:space="preserve">
          <source>Specifies the general prompt string to display at the top of the dialog, before subsections for &lt;code&gt;argPrompt&lt;/code&gt; and &lt;code&gt;revPrompt&lt;/code&gt;. The default value includes the actual command.</source>
          <target state="translated">&lt;code&gt;argPrompt&lt;/code&gt; 및 &lt;code&gt;revPrompt&lt;/code&gt; 의 하위 섹션 전에 대화 상자의 맨 위에 표시 할 일반 프롬프트 문자열을 지정합니다 . 기본값은 실제 명령을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="a9e526c09a4c4719d9406e0b96ea75a516e14797" translate="yes" xml:space="preserve">
          <source>Specifies the maximal number of fetch operations to be run in parallel at a time (submodules, or remotes when the &lt;code&gt;--multiple&lt;/code&gt; option of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; is in effect).</source>
          <target state="translated">한 번에 병렬로 실행할 최대 페치 조작 수를 지정합니다 ( &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; 의 &lt;code&gt;--multiple&lt;/code&gt; 옵션이 적용되는 경우 서브 모듈 또는 리모트 ).</target>
        </trans-unit>
        <trans-unit id="841aeff1992a5e30906fb04c48bd487428f81ede" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when loading the index. This is meant to reduce index load time on multiprocessor machines. Specifying 0 or &lt;code&gt;true&lt;/code&gt; will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly. Specifying 1 or &lt;code&gt;false&lt;/code&gt; will disable multithreading. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">인덱스를로드 할 때 생성 할 스레드 수를 지정합니다. 이는 다중 프로세서 시스템에서 인덱스로드 시간을 줄이기위한 것입니다. 0 또는 &lt;code&gt;true&lt;/code&gt; 를 지정 하면 Git은 CPU 수를 자동 감지하고 그에 따라 스레드 수를 설정합니다. 1 또는 &lt;code&gt;false&lt;/code&gt; 를 지정 하면 멀티 스레딩이 비활성화됩니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a1edc546a8b44445b5552ac6cb04ae2f0f6c55a7" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when resolving deltas. This requires that index-pack be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and use maximum 3 threads.</source>
          <target state="translated">델타를 해결할 때 생성 할 스레드 수를 지정합니다. 인덱스 팩을 pthreads로 컴파일해야합니다. 그렇지 않으면이 옵션은 경고와 함께 무시됩니다. 이는 다중 프로세서 시스템에서 포장 시간을 단축하기위한 것입니다. 그러나 델타 검색 창에 필요한 메모리 양에는 스레드 수가 곱해집니다. 0을 지정하면 Git은 CPU 수를 자동 감지하고 최대 3 개의 스레드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="62a88cce2e4d60d8d3773b73f0efea252799f6cf" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when searching for best delta matches. This requires that &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly.</source>
          <target state="translated">최상의 델타 일치를 검색 할 때 생성 할 스레드 수를 지정합니다. 이를 위해서는 &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; 를 pthreads로 컴파일해야합니다. 그렇지 않으면이 옵션은 경고와 함께 무시됩니다. 이는 다중 프로세서 시스템에서 포장 시간을 단축하기위한 것입니다. 그러나 델타 검색 창에 필요한 메모리 양에는 스레드 수가 곱해집니다. 0을 지정하면 Git은 CPU 수를 자동 감지하고 그에 따라 스레드 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b8f98a607312c9ba066372345125a9cb60221982" translate="yes" xml:space="preserve">
          <source>Specifies the number of threads to spawn when searching for best delta matches. This requires that pack-objects be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPU&amp;rsquo;s and set the number of threads accordingly.</source>
          <target state="translated">최상의 델타 일치를 검색 할 때 생성 할 스레드 수를 지정합니다. 이를 위해서는 pack 객체를 pthread로 컴파일해야합니다. 그렇지 않으면이 옵션은 경고와 함께 무시됩니다. 이는 다중 프로세서 시스템에서 포장 시간을 단축하기위한 것입니다. 그러나 델타 검색 창에 필요한 메모리 양에는 스레드 수가 곱해집니다. 0을 지정하면 Git은 CPU 수를 자동 감지하고 그에 따라 스레드 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a17b7410705517c5284c60d4c1158e205890521a" translate="yes" xml:space="preserve">
          <source>Specifies the number of times to retry a p4 command (notably, &lt;code&gt;p4 sync&lt;/code&gt;) if the network times out. The default value is 3. Set the value to 0 to disable retries or if your p4 version does not support retries (pre 2012.2).</source>
          <target state="translated">네트워크 시간이 초과 된 경우 p4 명령 (특히 &lt;code&gt;p4 sync&lt;/code&gt; ) 을 재 시도하는 횟수를 지정합니다 . 기본값은 3입니다. 재 시도를 비활성화하거나 p4 버전이 재 시도를 지원하지 않는 경우 (2012.2 이전) 값을 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0ebc03abb12118370c422382dc91c5979f3d39ba" translate="yes" xml:space="preserve">
          <source>Specifies the pathname to the file that contains patterns to describe paths that are not meant to be tracked, in addition to &lt;code&gt;.gitignore&lt;/code&gt; (per-directory) and &lt;code&gt;.git/info/exclude&lt;/code&gt;. Defaults to &lt;code&gt;$XDG_CONFIG_HOME/git/ignore&lt;/code&gt;. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is either not set or empty, &lt;code&gt;$HOME/.config/git/ignore&lt;/code&gt; is used instead. See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.gitignore&lt;/code&gt; (디렉토리 당) 및 &lt;code&gt;.git/info/exclude&lt;/code&gt; 외에도 추적하지 않을 경로를 설명하는 패턴이 포함 된 파일의 경로 이름을 지정합니다 . 기본값은 &lt;code&gt;$XDG_CONFIG_HOME/git/ignore&lt;/code&gt; 입니다. 경우 &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; 하나 설정하거나 비어 있지 않은, &lt;code&gt;$HOME/.config/git/ignore&lt;/code&gt; 대신 사용됩니다. &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d124e54be4e690b62098ac284ac76a08ab37106b" translate="yes" xml:space="preserve">
          <source>Specifies the radius of history context in days to show in &lt;a href=&quot;gitk&quot;&gt;gitk[1]&lt;/a&gt; for the selected commit, when the &lt;code&gt;Show History
Context&lt;/code&gt; menu item is invoked from &lt;code&gt;git gui blame&lt;/code&gt;. If this variable is set to zero, the whole history is shown.</source>
          <target state="translated">일 지정 역사 컨텍스트의 반경에서 보여 &lt;a href=&quot;gitk&quot;&gt;gitk이 [1]&lt;/a&gt; 때, 커밋 선택에 대한 &lt;code&gt;Show History Context&lt;/code&gt; 메뉴 항목에서 호출 &lt;code&gt;git gui blame&lt;/code&gt; . 이 변수를 0으로 설정하면 전체 히스토리가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f11e5547d2e0c72dd049c0935b29638a6ee69cf3" translate="yes" xml:space="preserve">
          <source>Specifies the shell command line to execute when the corresponding item of the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;&lt;code&gt;Tools&lt;/code&gt; menu is invoked. This option is mandatory for every tool. The command is executed from the root of the working directory, and in the environment it receives the name of the tool as &lt;code&gt;GIT_GUITOOL&lt;/code&gt;, the name of the currently selected file as &lt;code&gt;FILENAME&lt;/code&gt;, and the name of the current branch as &lt;code&gt;CUR_BRANCH&lt;/code&gt; (if the head is detached, &lt;code&gt;CUR_BRANCH&lt;/code&gt; is empty).</source>
          <target state="translated">&lt;a href=&quot;git-gui&quot;&gt;git-gui [1] &lt;/a&gt; &lt;code&gt;Tools&lt;/code&gt; 메뉴 의 해당 항목 이 호출 될 때 실행할 쉘 명령 행을 지정합니다 . 이 옵션은 모든 도구에 필수입니다. 명령은 작업 디렉토리의 루트에서 실행되며 환경에서 도구 이름은 &lt;code&gt;GIT_GUITOOL&lt;/code&gt; , 현재 선택된 파일 이름은 &lt;code&gt;FILENAME&lt;/code&gt; , 현재 브랜치 이름은 &lt;code&gt;CUR_BRANCH&lt;/code&gt; (헤드가 분리, &lt;code&gt;CUR_BRANCH&lt;/code&gt; 가 비어 있습니다).</target>
        </trans-unit>
        <trans-unit id="b9843bcfef468e8924053c3490935a52737f70b4" translate="yes" xml:space="preserve">
          <source>Specifies the threshold to use in &lt;code&gt;git gui blame&lt;/code&gt; original location detection, measured in alphanumeric characters. See the &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt; manual for more information on copy detection.</source>
          <target state="translated">영숫자 문자로 측정 된 &lt;code&gt;git gui blame&lt;/code&gt; 원래 위치 감지 에 사용할 임계 값을 지정합니다 . 복사 감지에 대한 자세한 내용은 &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="35d941c623037130ce3eda15ee67700140f974b9" translate="yes" xml:space="preserve">
          <source>Specifies the title to use for the prompt dialog. The default is the tool name.</source>
          <target state="translated">프롬프트 대화 상자에 사용할 제목을 지정합니다. 기본값은 도구 이름입니다.</target>
        </trans-unit>
        <trans-unit id="52c4a2a4dc795a08ca1c6e643c489de2ec8bd5e5" translate="yes" xml:space="preserve">
          <source>Specifies whether the index file should include an &quot;End Of Index Entry&quot; section. This reduces index load time on multiprocessor machines but produces a message &quot;ignoring EOIE extension&quot; when reading the index using Git versions before 2.20. Defaults to &lt;code&gt;true&lt;/code&gt; if index.threads has been explicitly enabled, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">인덱스 파일에 &quot;Index of End Entry&quot;섹션을 포함해야하는지 여부를 지정합니다. 이렇게하면 다중 프로세서 시스템에서 인덱스로드 시간이 줄어들지 만 2.20 이전의 Git 버전을 사용하여 인덱스를 읽을 때 &quot;EOIE 확장명 무시&quot;메시지가 표시됩니다. index.threads가 명시 적으로 활성화 된 경우 기본값은 &lt;code&gt;true&lt;/code&gt; 이고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="525e2825828b98c76d10ccc05a720012cdd9968e" translate="yes" xml:space="preserve">
          <source>Specifies whether the index file should include an &quot;Index Entry Offset Table&quot; section. This reduces index load time on multiprocessor machines but produces a message &quot;ignoring IEOT extension&quot; when reading the index using Git versions before 2.20. Defaults to &lt;code&gt;true&lt;/code&gt; if index.threads has been explicitly enabled, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">색인 파일에 &quot;색인 항목 오프셋 테이블&quot;섹션이 포함되어야하는지 여부를 지정합니다. 이렇게하면 다중 프로세서 컴퓨터에서 인덱스로드 시간이 줄어들지 만 2.20 이전의 Git 버전을 사용하여 인덱스를 읽을 때 &quot;IEOT 확장명 무시&quot;메시지가 나타납니다. index.threads가 명시 적으로 활성화 된 경우 기본값은 &lt;code&gt;true&lt;/code&gt; 이고, 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8fdd8a31fc755f041d294b5f0a76be847216c212" translate="yes" xml:space="preserve">
          <source>Specifies which key format to use when signing with &lt;code&gt;--gpg-sign&lt;/code&gt;. Default is &quot;openpgp&quot; and another possible value is &quot;x509&quot;.</source>
          <target state="translated">&lt;code&gt;--gpg-sign&lt;/code&gt; 으로 서명 할 때 사용할 키 형식을 지정 합니다 . 기본값은 &quot;openpgp&quot;이고 다른 가능한 값은 &quot;x509&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="53399059f89e05e568d5d0da51714e4798f56246" translate="yes" xml:space="preserve">
          <source>Specifies which refs to fetch and which local refs to update. When no &amp;lt;refspec&amp;gt;s appear on the command line, the refs to fetch are read from &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; variables instead (see &lt;a href=&quot;#CRTB&quot;&gt;CONFIGURED REMOTE-TRACKING BRANCHES&lt;/a&gt; below).</source>
          <target state="translated">가져올 참조와 업데이트 할 로컬 참조를 지정합니다. 명령 행에 &amp;lt;refspec&amp;gt;이 나타나지 않으면, fetch 할 ref는 &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; 변수에서 대신 읽습니다 ( 아래의 &lt;a href=&quot;#CRTB&quot;&gt;REMOTE-TRACKING BRANCHES 구성&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="60264eae7c0d99030432a57153dd31a20ae2e753" translate="yes" xml:space="preserve">
          <source>Specifies which refs to fetch and which local refs to update. When no &amp;lt;refspec&amp;gt;s appear on the command line, the refs to fetch are read from &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; variables instead (see &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;).</source>
          <target state="translated">가져올 참조와 업데이트 할 로컬 참조를 지정합니다. 명령 행에 &amp;lt;refspec&amp;gt;이 나타나지 않으면, 대신 &lt;a href=&quot;git-fetch&quot;&gt;가져 오는&lt;/a&gt; 참조 는 &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; 변수 에서 읽습니다 ( git-fetch [1] 참조 ).</target>
        </trans-unit>
        <trans-unit id="12c5a4fe1da6e3ddd052994379342b3963b9ece6" translate="yes" xml:space="preserve">
          <source>Specify a &quot;Bcc:&quot; value for each email. Default is the value of &lt;code&gt;sendemail.bcc&lt;/code&gt;.</source>
          <target state="translated">각 이메일에 대해 &quot;숨은 참조 :&quot;값을 지정하십시오. 기본값은 &lt;code&gt;sendemail.bcc&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="490afafb9292b82bc6ff88488dc739661601f0fb" translate="yes" xml:space="preserve">
          <source>Specify a (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;) pair that should be applied as a trailer to the input messages. See the description of this command.</source>
          <target state="translated">입력 메시지에 예고편으로 적용해야하는 (&amp;lt;토큰&amp;gt;, &amp;lt;값&amp;gt;) 쌍을 지정하십시오. 이 명령에 대한 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fda787c4a6303bd8c4899e47b2fd75ed69b102b2" translate="yes" xml:space="preserve">
          <source>Specify a comma separate list of common whitespace problems to notice in the same format as the &lt;code&gt;core.whitespace&lt;/code&gt; configuration variable.</source>
          <target state="translated">&lt;code&gt;core.whitespace&lt;/code&gt; 구성 변수 와 동일한 형식으로 확인할 일반적인 공백 문제의 쉼표로 구분 된 목록을 지정 하십시오.</target>
        </trans-unit>
        <trans-unit id="f01423252b19025369d9eaeaea940daec72c630e" translate="yes" xml:space="preserve">
          <source>Specify a command to execute once per patch file which should generate patch file specific &quot;Cc:&quot; entries. Output of this command must be single email address per line. Default is the value of &lt;code&gt;sendemail.ccCmd&lt;/code&gt; configuration value.</source>
          <target state="translated">패치 파일 특정 &quot;Cc :&quot;항목을 생성해야하는 패치 파일 당 한 번 실행할 명령을 지정하십시오. 이 명령의 출력은 한 줄에 하나의 이메일 주소 여야합니다. 기본값은 &lt;code&gt;sendemail.ccCmd&lt;/code&gt; 구성 값입니다.</target>
        </trans-unit>
        <trans-unit id="8a69aa64125bc041f34a0988fcc820e93ea1cefe" translate="yes" xml:space="preserve">
          <source>Specify a command to execute once per patch file which should generate patch file specific &quot;To:&quot; entries. Output of this command must be single email address per line. Default is the value of &lt;code&gt;sendemail.tocmd&lt;/code&gt; configuration value.</source>
          <target state="translated">패치 파일마다 &quot;To :&quot;항목을 생성해야하는 패치 파일 당 한 번 실행할 명령을 지정하십시오. 이 명령의 출력은 한 줄에 하나의 이메일 주소 여야합니다. 기본값은 &lt;code&gt;sendemail.tocmd&lt;/code&gt; 구성 값입니다.</target>
        </trans-unit>
        <trans-unit id="f6cbbfb6d081efa8553064ef51812c93149ccd37" translate="yes" xml:space="preserve">
          <source>Specify a custom command for viewing diffs. &lt;code&gt;git-difftool&lt;/code&gt; ignores the configured defaults and runs &lt;code&gt;$command $LOCAL $REMOTE&lt;/code&gt; when this option is specified. Additionally, &lt;code&gt;$BASE&lt;/code&gt; is set in the environment.</source>
          <target state="translated">diff를보기위한 사용자 정의 명령을 지정하십시오. &lt;code&gt;git-difftool&lt;/code&gt; 은 구성된 기본값을 무시 하고이 옵션이 지정되면 &lt;code&gt;$command $LOCAL $REMOTE&lt;/code&gt; 실행 합니다. 또한 &lt;code&gt;$BASE&lt;/code&gt; 는 환경에서 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f8f61e37f968bf27d42f1bb30c54e88a19aa0b4c" translate="yes" xml:space="preserve">
          <source>Specify a starting &quot;Cc:&quot; value for each email. Default is the value of &lt;code&gt;sendemail.cc&lt;/code&gt;.</source>
          <target state="translated">각 이메일의 시작 &quot;Cc :&quot;값을 지정하십시오. 기본값은 &lt;code&gt;sendemail.cc&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="d751165243a07b0d8cf01d157a40d624e1274cc2" translate="yes" xml:space="preserve">
          <source>Specify a web browser that may be used by some commands. Currently only &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt; and &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt; may use it.</source>
          <target state="translated">일부 명령에서 사용할 수있는 웹 브라우저를 지정하십시오. 현재는 &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt; 및 &lt;a href=&quot;git-help&quot;&gt;git-help [1] 만&lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3184d8ec3f5fc0c7b49c79eaaa392759be7aeb74" translate="yes" xml:space="preserve">
          <source>Specify an additional category of recipients to suppress the auto-cc of:</source>
          <target state="translated">받는 사람의 추가 범주를 지정하여 다음과 같은 자동 참조를 억제하십시오.</target>
        </trans-unit>
        <trans-unit id="6c3bb30f438f4e33cf02f17fe7e170959d2a5bad" translate="yes" xml:space="preserve">
          <source>Specify an external helper to be called when a username or password credential is needed; the helper may consult external storage to avoid prompting the user for the credentials. Note that multiple helpers may be defined. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for details.</source>
          <target state="translated">사용자 이름 또는 비밀번호 자격 증명이 필요할 때 호출 할 외부 도우미를 지정하십시오. 도우미는 사용자에게 자격 증명을 요구하지 않도록 외부 저장소를 참조 할 수 있습니다. 여러 헬퍼가 정의 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="88abf188bf279fdc57952e5f78070fe3d6b977d1" translate="yes" xml:space="preserve">
          <source>Specify an island name which gets to have its objects be packed first. This creates a kind of pseudo-pack at the front of one pack, so that the objects from the specified island are hopefully faster to copy into any pack that should be served to a user requesting these objects. In practice this means that the island specified should likely correspond to what is the most commonly cloned in the repo. See also &quot;DELTA ISLANDS&quot; in &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;.</source>
          <target state="translated">객체를 먼저 포장 할 섬 이름을 지정하십시오. 이것은 하나의 팩의 전면에 일종의 유사 팩을 생성하므로 지정된 섬의 객체가 이러한 객체를 요청하는 사용자에게 제공되어야하는 팩으로 복사하는 것이 더 빠릅니다. 실제로 이것은 지정된 섬이 리포지토리에서 가장 일반적으로 복제 된 것과 일치해야 함을 의미합니다. &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]의&lt;/a&gt; &quot;DELTA ISLANDS&quot;도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f4ddca39682ecb94c54d4e5428623a9fabd67c0" translate="yes" xml:space="preserve">
          <source>Specify any of the options listed under OPTIONS that do not change stream semantic to suit the frontend&amp;rsquo;s needs. This command is optional and is not needed to perform an import.</source>
          <target state="translated">프론트 엔드의 요구에 맞게 스트림 의미를 변경하지 않는 OPTIONS 아래에 나열된 옵션을 지정하십시오. 이 명령은 선택 사항이며 가져 오기를 수행 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="126df40ac6c274763f2820bec126088754eb50a7" translate="yes" xml:space="preserve">
          <source>Specify authenticate method for authentication with IMAP server. If Git was built with the NO_CURL option, or if your curl version is older than 7.34.0, or if you&amp;rsquo;re running git-imap-send with the &lt;code&gt;--no-curl&lt;/code&gt; option, the only supported method is &lt;code&gt;CRAM-MD5&lt;/code&gt;. If this is not set then &lt;code&gt;git imap-send&lt;/code&gt; uses the basic IMAP plaintext LOGIN command.</source>
          <target state="translated">IMAP 서버 인증을위한 인증 방법을 지정하십시오. Git이 NO_CURL 옵션으로 빌드되었거나 curl 버전이 7.34.0보다 오래된 경우 또는 &lt;code&gt;--no-curl&lt;/code&gt; 옵션으로 git-imap-send를 실행 하는 경우 지원되는 유일한 방법은 &lt;code&gt;CRAM-MD5&lt;/code&gt; 입니다. 이것이 설정되어 있지 않으면 &lt;code&gt;git imap-send&lt;/code&gt; 는 기본 IMAP 평문 LOGIN 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="db15aaae21c1056154eef62ce5f5cbd5e82beaa7" translate="yes" xml:space="preserve">
          <source>Specify encoding of compose message. Default is the value of the &lt;code&gt;sendemail.composeencoding&lt;/code&gt;; if that is unspecified, UTF-8 is assumed.</source>
          <target state="translated">작성 메시지의 인코딩을 지정하십시오. 기본값은 &lt;code&gt;sendemail.composeencoding&lt;/code&gt; 의 값입니다 . 지정하지 않으면 UTF-8로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="bb2c4dacdd5136c6abef6fcc4de5e9c24a473010" translate="yes" xml:space="preserve">
          <source>Specify how differences in submodules are shown. When specifying &lt;code&gt;--submodule=short&lt;/code&gt; the &lt;code&gt;short&lt;/code&gt; format is used. This format just shows the names of the commits at the beginning and end of the range. When &lt;code&gt;--submodule&lt;/code&gt; or &lt;code&gt;--submodule=log&lt;/code&gt; is specified, the &lt;code&gt;log&lt;/code&gt; format is used. This format lists the commits in the range like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;summary&lt;/code&gt; does. When &lt;code&gt;--submodule=diff&lt;/code&gt; is specified, the &lt;code&gt;diff&lt;/code&gt; format is used. This format shows an inline diff of the changes in the submodule contents between the commit range. Defaults to &lt;code&gt;diff.submodule&lt;/code&gt; or the &lt;code&gt;short&lt;/code&gt; format if the config option is unset.</source>
          <target state="translated">서브 모듈의 차이점을 표시하는 방법을 지정하십시오. &lt;code&gt;--submodule=short&lt;/code&gt; 를 지정 하면 &lt;code&gt;short&lt;/code&gt; 형식이 사용됩니다. 이 형식은 범위의 시작과 끝에서 커밋 이름을 보여줍니다. 때 &lt;code&gt;--submodule&lt;/code&gt; 또는 &lt;code&gt;--submodule=log&lt;/code&gt; 지정되면, &lt;code&gt;log&lt;/code&gt; 형식이 사용됩니다. 이 형식은 &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;summary&lt;/code&gt; 과 같은 범위의 커밋을 나열합니다 . 경우 &lt;code&gt;--submodule=diff&lt;/code&gt; 지정되면, &lt;code&gt;diff&lt;/code&gt; 포맷이 사용된다. 이 형식은 커밋 범위 사이의 하위 모듈 내용 변경 내용을 인라인으로 표시합니다. 기본적으로 &lt;code&gt;diff.submodule&lt;/code&gt; 또는 &lt;code&gt;short&lt;/code&gt; 구성 옵션이 설정되지 않은 경우 형식입니다.</target>
        </trans-unit>
        <trans-unit id="e212f603460a2824026571f0244622b2735e495f" translate="yes" xml:space="preserve">
          <source>Specify how multiple patterns are combined using Boolean expressions. &lt;code&gt;--or&lt;/code&gt; is the default operator. &lt;code&gt;--and&lt;/code&gt; has higher precedence than &lt;code&gt;--or&lt;/code&gt;. &lt;code&gt;-e&lt;/code&gt; has to be used for all patterns.</source>
          <target state="translated">부울 표현식을 사용하여 여러 패턴을 결합하는 방법을 지정하십시오. &lt;code&gt;--or&lt;/code&gt; 기본 연산자입니다. &lt;code&gt;--and&lt;/code&gt; 보다 우선 순위가있다 &lt;code&gt;--or&lt;/code&gt; . &lt;code&gt;-e&lt;/code&gt; 는 모든 패턴에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ffbe8c6ac43df98980b6107e62dec3dfa7156507" translate="yes" xml:space="preserve">
          <source>Specify how to handle &lt;code&gt;encoding&lt;/code&gt; header in commit objects. When asking to &lt;code&gt;abort&lt;/code&gt; (which is the default), this program will die when encountering such a commit object. With &lt;code&gt;yes&lt;/code&gt;, the commit message will be re-encoded into UTF-8. With &lt;code&gt;no&lt;/code&gt;, the original encoding will be preserved.</source>
          <target state="translated">커밋 개체에서 &lt;code&gt;encoding&lt;/code&gt; 헤더 를 처리 하는 방법을 지정하십시오 . &lt;code&gt;abort&lt;/code&gt; 요청할 때 (기본값)이 확약 오브젝트가 발생하면이 프로그램이 종료됩니다. 함께 &lt;code&gt;yes&lt;/code&gt; 의 메시지가 재 인코딩 UTF-8로 될 것입니다 커밋. 함께 &lt;code&gt;no&lt;/code&gt; 원래의 인코딩은 보존되지 않는다.</target>
        </trans-unit>
        <trans-unit id="37815a435af244972cccaee7f12b140bf366ab25" translate="yes" xml:space="preserve">
          <source>Specify how to handle signed tags. Since any transformation after the export can change the tag names (which can also happen when excluding revisions) the signatures will not match.</source>
          <target state="translated">서명 된 태그를 처리하는 방법을 지정하십시오. 내 보낸 후 변환하면 태그 이름을 변경할 수 있으므로 (수정을 제외 할 때도 발생할 수 있음) 서명이 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e5b9b1beb3e649edbd3450c18f18cbc2b0b3c2a" translate="yes" xml:space="preserve">
          <source>Specify how to handle tags whose tagged object is filtered out. Since revisions and files to export can be limited by path, tagged objects may be filtered completely.</source>
          <target state="translated">태그가 지정된 객체가 필터링 된 태그를 처리하는 방법을 지정하십시오. 내보낼 개정 및 파일은 경로별로 제한 될 수 있으므로 태그가 지정된 객체가 완전히 필터링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58a10039b2ffb00f4c15d28cf7a59fdf8252b1ba" translate="yes" xml:space="preserve">
          <source>Specify layout mode. See configuration variable column.ui for option syntax in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">레이아웃 모드를 지정하십시오. &lt;a href=&quot;git-config&quot;&gt;git-config [1]의&lt;/a&gt; 옵션 구문에 대해서는 구성 변수 column.ui를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd9fc5283ae0d7709eafb7d7c044a946ec4a926f" translate="yes" xml:space="preserve">
          <source>Specify submit behavior when a conflict with p4 is found, as per --conflict. The default behavior is &lt;code&gt;ask&lt;/code&gt;.</source>
          <target state="translated">--conflict에 따라 p4와의 충돌이 발견되면 제출 동작을 지정하십시오. 기본 동작은 &lt;code&gt;ask&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6b47b0eac1308c340a251aaa9bc02b368f9e6ec9" translate="yes" xml:space="preserve">
          <source>Specify that the Git repository is to be shared amongst several users. This allows users belonging to the same group to push into that repository. When specified, the config variable &quot;core.sharedRepository&quot; is set so that files and directories under &lt;code&gt;$GIT_DIR&lt;/code&gt; are created with the requested permissions. When not specified, Git will use permissions reported by umask(2).</source>
          <target state="translated">여러 사용자가 Git 저장소를 공유하도록 지정하십시오. 이를 통해 동일한 그룹에 속한 사용자가 해당 저장소로 푸시 할 수 있습니다. 지정된 경우 &quot;core.sharedRepository&quot;구성 변수가 설정되어 &lt;code&gt;$GIT_DIR&lt;/code&gt; GIT_DIR 아래의 파일 및 디렉토리 가 요청 된 권한으로 작성됩니다. 지정하지 않으면 Git은 umask (2)에 의해보고 된 권한을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="553f83584ef890feb9fc0a5fa486ad4027a85d31" translate="yes" xml:space="preserve">
          <source>Specify that the p4 client spec should be used to identify p4 depot paths of interest. This is equivalent to specifying the option &lt;code&gt;--use-client-spec&lt;/code&gt;. See the &quot;CLIENT SPEC&quot; section above. This variable is a boolean, not the name of a p4 client.</source>
          <target state="translated">p4 클라이언트 스펙을 사용하여 관심있는 p4 저장소 경로를 식별하도록 지정하십시오. 이는 &lt;code&gt;--use-client-spec&lt;/code&gt; 옵션을 지정하는 것과 같습니다 . 위의 &quot;CLIENT SPEC&quot;섹션을 참조하십시오. 이 변수는 p4 클라이언트의 이름이 아닌 부울입니다.</target>
        </trans-unit>
        <trans-unit id="ee45839e9a36541472b0e6b0c79bb025ae2d044b" translate="yes" xml:space="preserve">
          <source>Specify the SVN username to perform the commit as. This option overrides the &lt;code&gt;username&lt;/code&gt; configuration property.</source>
          <target state="translated">커밋을 수행 할 SVN 사용자 이름을 지정하십시오. 이 옵션은 &lt;code&gt;username&lt;/code&gt; 구성 속성을 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="ce5445a596c457d8087a3ba95eb2c606f830762e" translate="yes" xml:space="preserve">
          <source>Specify the [svn-remote &quot;&amp;lt;remote name&amp;gt;&quot;] section to use, this allows SVN multiple repositories to be tracked. Default: &quot;svn&quot;</source>
          <target state="translated">사용할 [svn-remote &quot;&amp;lt;remote name&amp;gt;&quot;] 섹션을 지정하면 SVN 다중 저장소를 추적 할 수 있습니다. 기본값 : &quot;svn&quot;</target>
        </trans-unit>
        <trans-unit id="9617526476bf00e3e1b98443975d22edd359d482" translate="yes" xml:space="preserve">
          <source>Specify the address where replies from recipients should go to. Use this if replies to messages should go to another address than what is specified with the --from parameter.</source>
          <target state="translated">수신자의 답장을받을 주소를 지정하십시오. 메시지에 대한 회신이 --from 매개 변수로 지정된 주소 이외의 다른 주소로 이동해야하는 경우이 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ee03a68cf221fcf3ea580414a042d4bf2bb9f1e8" translate="yes" xml:space="preserve">
          <source>Specify the browser that will be used to display help in the &lt;code&gt;web&lt;/code&gt; format. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;web&lt;/code&gt; 형식으로 도움말을 표시하는 데 사용될 브라우저를 지정하십시오 . &lt;a href=&quot;git-help&quot;&gt;git-help [1]를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8aa86dc00b5d1ada804b541ee50aabffe17fa3ad" translate="yes" xml:space="preserve">
          <source>Specify the character used to indicate new, old or context lines in the generated patch. Normally they are &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and ' ' respectively.</source>
          <target state="translated">생성 된 패치에서 신규, 기존 또는 컨텍스트 라인을 나타내는 데 사용되는 문자를 지정하십시오. 일반적으로 각각 &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; 및 ''입니다.</target>
        </trans-unit>
        <trans-unit id="cb636a61044a94ec71c2c0e48db959f09a640e28" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified browser. The specified command is evaluated in shell with the URLs passed as arguments. (See git-web{litdd}browse[1].)</source>
          <target state="translated">지정된 브라우저를 호출하는 명령을 지정하십시오. 지정된 명령은 URL로 인수로 전달 된 쉘에서 평가됩니다. (git-web {litdd} browse [1]을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="f8ec599a595d519e45f7089bd76b8eb2f0cf86d7" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified diff tool.</source>
          <target state="translated">지정된 diff 도구를 호출하는 명령을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="045550ad84d88752a76cca9657a08fe5f6314875" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified diff tool. The specified command is evaluated in shell with the following variables available: &lt;code&gt;LOCAL&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff pre-image and &lt;code&gt;REMOTE&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff post-image.</source>
          <target state="translated">지정된 diff 도구를 호출하는 명령을 지정하십시오. 지정된 명령은 사용 가능한 다음 변수를 사용하여 쉘에서 평가됩니다. &lt;code&gt;LOCAL&lt;/code&gt; 은 diff pre-image 의 내용을 포함하는 임시 파일 이름으로 설정 되고 &lt;code&gt;REMOTE&lt;/code&gt; 는 diff post의 내용을 포함하는 임시 파일 이름으로 설정됩니다. -영상.</target>
        </trans-unit>
        <trans-unit id="a4e7d7e1334d2dbe270d234d60ef8777bddd17c9" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified man viewer. The specified command is evaluated in shell with the man page passed as argument. (See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.)</source>
          <target state="translated">지정된 man viewer를 호출하는 명령을 지정하십시오. 지정된 명령은 셸에서 man 페이지가 인수로 전달되어 평가됩니다. ( &lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="3a2ff684c7c448a4b91310593e49dad0e76d3118" translate="yes" xml:space="preserve">
          <source>Specify the command to invoke the specified merge tool. The specified command is evaluated in shell with the following variables available: &lt;code&gt;BASE&lt;/code&gt; is the name of a temporary file containing the common base of the files to be merged, if available; &lt;code&gt;LOCAL&lt;/code&gt; is the name of a temporary file containing the contents of the file on the current branch; &lt;code&gt;REMOTE&lt;/code&gt; is the name of a temporary file containing the contents of the file from the branch being merged; &lt;code&gt;MERGED&lt;/code&gt; contains the name of the file to which the merge tool should write the results of a successful merge.</source>
          <target state="translated">지정된 병합 도구를 호출하는 명령을 지정하십시오. 지정된 명령은 사용 가능한 다음 변수를 사용하여 쉘에서 평가됩니다. &lt;code&gt;BASE&lt;/code&gt; 는 사용 가능한 경우 병합 될 파일의 ​​공통 기반을 포함하는 임시 파일의 이름입니다. &lt;code&gt;LOCAL&lt;/code&gt; 은 현재 분기의 파일 내용을 포함하는 임시 파일의 이름입니다. &lt;code&gt;REMOTE&lt;/code&gt; 는 병합중인 브랜치의 파일 내용을 포함하는 임시 파일의 이름입니다. &lt;code&gt;MERGED&lt;/code&gt; 는 병합 도구가 성공적인 병합 결과를 작성해야하는 파일 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6a0cfc4c034bf82c50504b5853ea3a2048b66aa0" translate="yes" xml:space="preserve">
          <source>Specify the default pack index version. Valid values are 1 for legacy pack index used by Git versions prior to 1.5.2, and 2 for the new pack index with capabilities for packs larger than 4 GB as well as proper protection against the repacking of corrupted packs. Version 2 is the default. Note that version 2 is enforced and this config option ignored whenever the corresponding pack is larger than 2 GB.</source>
          <target state="translated">기본 팩 인덱스 버전을 지정하십시오. 유효한 값은 1.5.2 이전의 Git 버전에서 사용 된 레거시 팩 인덱스의 경우 1이고, 4GB보다 큰 팩의 기능이있는 새 팩 인덱스의 경우 2이며 손상된 팩의 재 포장에 대한 적절한 보호입니다. 버전 2가 기본값입니다. 버전 2가 적용되고 해당 팩이 2GB보다 클 때마다이 구성 옵션이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="237b5a9487d0a4c4f3b292963fb14ac9431d7354" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be copied. (See the &quot;TEMPLATE DIRECTORY&quot; section of &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;.)</source>
          <target state="translated">템플리트를 복사 할 디렉토리를 지정하십시오. ( &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; 의 &quot;TEMPLATE DIRECTORY&quot;섹션을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="9e017dab9e6089dc4c6b8916eff9198d29b5fa5a" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be used. (See the &quot;TEMPLATE DIRECTORY&quot; section below.)</source>
          <target state="translated">템플리트를 사용할 디렉토리를 지정하십시오. 아래의 &quot;템플릿 디렉토리&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="10fbc8bd7f7f67034717ffef3bdc652592011a96" translate="yes" xml:space="preserve">
          <source>Specify the directory from which templates will be used; (See the &quot;TEMPLATE DIRECTORY&quot; section of &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;.)</source>
          <target state="translated">템플리트를 사용할 디렉토리를 지정하십시오. ( &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; 의 &quot;TEMPLATE DIRECTORY&quot;섹션을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="6d06560706961e8be925ad5b0c5ec94cdc91c729" translate="yes" xml:space="preserve">
          <source>Specify the encryption to use, either &lt;code&gt;ssl&lt;/code&gt; or &lt;code&gt;tls&lt;/code&gt;. Any other value reverts to plain SMTP. Default is the value of &lt;code&gt;sendemail.smtpEncryption&lt;/code&gt;.</source>
          <target state="translated">사용할 암호화를 &lt;code&gt;ssl&lt;/code&gt; 또는 &lt;code&gt;tls&lt;/code&gt; 로 지정하십시오 . 다른 값은 일반 SMTP로 되돌아갑니다. 기본값은 &lt;code&gt;sendemail.smtpEncryption&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="4d476f2efa135b04b0d382124ae1d7eb2f09baec" translate="yes" xml:space="preserve">
          <source>Specify the envelope sender used to send the emails. This is useful if your default address is not the address that is subscribed to a list. In order to use the &lt;code&gt;From&lt;/code&gt; address, set the value to &quot;auto&quot;. If you use the sendmail binary, you must have suitable privileges for the -f parameter. Default is the value of the &lt;code&gt;sendemail.envelopeSender&lt;/code&gt; configuration variable; if that is unspecified, choosing the envelope sender is left to your MTA.</source>
          <target state="translated">이메일을 보내는 데 사용되는 봉투 발신자를 지정하십시오. 기본 주소가 목록에 등록 된 주소가 아닌 경우에 유용합니다. &lt;code&gt;From&lt;/code&gt; 주소 를 사용하려면 값을 &quot;auto&quot;로 설정하십시오. sendmail 바이너리를 사용하는 경우 -f 매개 변수에 대한 적절한 권한이 있어야합니다. 기본값은 &lt;code&gt;sendemail.envelopeSender&lt;/code&gt; 구성 변수 의 값입니다 . 지정하지 않으면 봉투 발신자를 선택하는 것이 MTA에 맡겨집니다.</target>
        </trans-unit>
        <trans-unit id="57154856f70bd26e9f32c73474da174dbb6a71bf" translate="yes" xml:space="preserve">
          <source>Specify the format in which differences in submodules are shown. The &quot;short&quot; format just shows the names of the commits at the beginning and end of the range. The &quot;log&quot; format lists the commits in the range like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;summary&lt;/code&gt; does. The &quot;diff&quot; format shows an inline diff of the changed contents of the submodule. Defaults to &quot;short&quot;.</source>
          <target state="translated">서브 모듈의 차이점이 표시되는 형식을 지정하십시오. &quot;짧은&quot;형식은 범위의 시작과 끝에서 커밋 이름을 보여줍니다. &quot;log&quot;형식은 &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;summary&lt;/code&gt; 과 같은 범위의 커밋을 나열합니다 . &quot;diff&quot;형식은 서브 모듈의 변경된 내용의 인라인 diff를 보여줍니다. 기본값은 &quot;짧음&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ee4e54ea6641c26749f683e2086f11110bfcb031" translate="yes" xml:space="preserve">
          <source>Specify the full path of &lt;code&gt;git-upload-pack&lt;/code&gt; on the remote host. This allows listing references from repositories accessed via SSH and where the SSH daemon does not use the PATH configured by the user.</source>
          <target state="translated">원격 호스트에서 &lt;code&gt;git-upload-pack&lt;/code&gt; 의 전체 경로를 지정하십시오 . 이를 통해 SSH를 통해 액세스 한 저장소 및 SSH 디먼이 사용자가 구성한 PATH를 사용하지 않는 저장소의 참조를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e05f34f2b12543d24deddf183d7f5563e4746b8d" translate="yes" xml:space="preserve">
          <source>Specify the initial subject of the email thread. Only necessary if --compose is also set. If --compose is not set, this will be prompted for.</source>
          <target state="translated">이메일 스레드의 초기 제목을 지정하십시오. --compose도 설정 한 경우에만 필요합니다. --compose가 설정되어 있지 않으면 프롬프트가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7f0e894272a77fe6a04290fbdb329a63eb87bf76" translate="yes" xml:space="preserve">
          <source>Specify the layout when list items in &lt;code&gt;git clean -i&lt;/code&gt;, which always shows files and directories in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;git clean -i&lt;/code&gt; 에 목록 항목이있을 때 레이아웃을 지정하십시오. 항상 파일과 디렉토리를 열로 표시합니다. 자세한 내용은 &lt;code&gt;column.ui&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f7208179bdf36d6bc3e9b1d1f4f91288e1356b3f" translate="yes" xml:space="preserve">
          <source>Specify the location of the CVS checkout to use for the export. This option does not require GIT_DIR to be set before execution if the current directory is within a Git repository. The default is the value of &lt;code&gt;cvsexportcommit.cvsdir&lt;/code&gt;.</source>
          <target state="translated">내보내기에 사용할 CVS 체크 아웃 위치를 지정하십시오. 현재 디렉토리가 Git 저장소 내에있는 경우이 옵션을 실행하기 전에 GIT_DIR을 설정할 필요가 없습니다. 기본값은 &lt;code&gt;cvsexportcommit.cvsdir&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="4c1271576d0edb7f1f0d6c8d0d3f48964a9bd30e" translate="yes" xml:space="preserve">
          <source>Specify the most recent revision to keep. All later revisions are discarded.</source>
          <target state="translated">유지할 최신 개정판을 지정하십시오. 이후의 모든 개정은 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="dbfd748a4216557f92920425eee493e6f587b7d2" translate="yes" xml:space="preserve">
          <source>Specify the name of a CVS checkout using the -w switch or execute it from the root of the CVS working copy. In the latter case GIT_DIR must be defined. See examples below.</source>
          <target state="translated">-w 스위치를 사용하여 CVS 체크 아웃 이름을 지정하거나 CVS 작업 사본의 루트에서 실행하십시오. 후자의 경우 GIT_DIR을 정의해야합니다. 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6f5685351080bbe842e1b77f6e72d7f56e71124e" translate="yes" xml:space="preserve">
          <source>Specify the path where the HTML documentation resides. File system paths and URLs are supported. HTML pages will be prefixed with this path when help is displayed in the &lt;code&gt;web&lt;/code&gt; format. This defaults to the documentation path of your Git installation.</source>
          <target state="translated">HTML 문서가있는 경로를 지정하십시오. 파일 시스템 경로 및 URL이 지원됩니다. &lt;code&gt;web&lt;/code&gt; 형식으로 도움말이 표시되면 HTML 페이지 앞에이 경로가 접두어로 표시됩니다 . 기본적으로 Git 설치의 문서 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3939c032cc21518f83cfc7e855a79944401164b0" translate="yes" xml:space="preserve">
          <source>Specify the pathname of a file to use as the template for new commit messages.</source>
          <target state="translated">새 커밋 메시지의 템플리트로 사용할 파일의 경로 이름을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="626310e55266a25c38521d0786f942652add8252" translate="yes" xml:space="preserve">
          <source>Specify the primary recipient of the emails generated. Generally, this will be the upstream maintainer of the project involved. Default is the value of the &lt;code&gt;sendemail.to&lt;/code&gt; configuration value; if that is unspecified, and --to-cmd is not specified, this will be prompted for.</source>
          <target state="translated">생성 된 이메일의 기본 수신자를 지정하십시오. 일반적으로 이것은 관련된 프로젝트의 업스트림 관리자가됩니다. 기본값은 &lt;code&gt;sendemail.to&lt;/code&gt; 구성 값입니다. 지정하지 않고 --to-cmd를 지정하지 않으면 프롬프트가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="904cbddb8fe90053f040a40b660f937c8ee221c5" translate="yes" xml:space="preserve">
          <source>Specify the program that will be used to browse your working repository in gitweb. See &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt;.</source>
          <target state="translated">gitweb에서 작업 저장소를 탐색하는 데 사용될 프로그램을 지정하십시오. &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="87648a4a4b9f3684c45dea895b93d3728e0b89f7" translate="yes" xml:space="preserve">
          <source>Specify the programs that may be used to display help in the &lt;code&gt;man&lt;/code&gt; format. See &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;man&lt;/code&gt; 형식으로 도움말을 표시하는 데 사용할 수있는 프로그램을 지정하십시오 . &lt;a href=&quot;git-help&quot;&gt;git-help [1]를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c051775f78daae77408669a949bcd688ddbd949c" translate="yes" xml:space="preserve">
          <source>Specify the restore location. If neither option is specified, by default the working tree is restored. Specifying &lt;code&gt;--staged&lt;/code&gt; will only restore the index. Specifying both restores both.</source>
          <target state="translated">복원 위치를 지정하십시오. 옵션을 지정하지 않으면 기본적으로 작업 트리가 복원됩니다. &lt;code&gt;--staged&lt;/code&gt; 를 지정 하면 인덱스 만 복원됩니다. 둘 다 지정하면 둘 다 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="95b7f682630cddb98a68355ef07c41860159997c" translate="yes" xml:space="preserve">
          <source>Specify the sender of the emails. If not specified on the command line, the value of the &lt;code&gt;sendemail.from&lt;/code&gt; configuration option is used. If neither the command-line option nor &lt;code&gt;sendemail.from&lt;/code&gt; are set, then the user will be prompted for the value. The default for the prompt will be the value of GIT_AUTHOR_IDENT, or GIT_COMMITTER_IDENT if that is not set, as returned by &quot;git var -l&quot;.</source>
          <target state="translated">이메일 발신자를 지정하십시오. 명령 행에 지정되지 않은 경우 &lt;code&gt;sendemail.from&lt;/code&gt; 구성 옵션 의 값 이 사용됩니다. 명령 줄 옵션이나 &lt;code&gt;sendemail.from&lt;/code&gt; 을 설정 하지 않으면 값을 입력하라는 메시지가 표시됩니다. 프롬프트의 기본값은 &quot;git var -l&quot;에 의해 리턴되는 GIT_AUTHOR_IDENT의 값이거나 설정되지 않은 경우 GIT_COMMITTER_IDENT입니다.</target>
        </trans-unit>
        <trans-unit id="8cba2f98ceccc0dae91e3c30287bb75513f4e951" translate="yes" xml:space="preserve">
          <source>Specify the style in which conflicted hunks are written out to working tree files upon merge. The default is &quot;merge&quot;, which shows a &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; conflict marker, changes made by one side, a &lt;code&gt;=======&lt;/code&gt; marker, changes made by the other side, and then a &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; marker. An alternate style, &quot;diff3&quot;, adds a &lt;code&gt;|||||||&lt;/code&gt; marker and the original text before the &lt;code&gt;=======&lt;/code&gt; marker.</source>
          <target state="translated">병합시 충돌하는 덩어리가 작업 트리 파일에 기록되는 스타일을 지정하십시오. 기본값은 &quot;병합&quot;으로, &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 충돌 마커, 한 쪽의 변경 사항, &lt;code&gt;=======&lt;/code&gt; 마커, 다른 쪽의 변경 사항, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 마커. 대체 스타일 &quot;diff3&quot;은 &lt;code&gt;|||||||&lt;/code&gt; 마커와 &lt;code&gt;=======&lt;/code&gt; 마커 앞의 원본 텍스트 .</target>
        </trans-unit>
        <trans-unit id="d1c5be6270e8c898e52c9ccc68e940ca06ec404b" translate="yes" xml:space="preserve">
          <source>Specify the system that is used for large (binary) files. Please note that large file systems do not support the &lt;code&gt;git p4 submit&lt;/code&gt; command. Only Git LFS is implemented right now (see &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;https://git-lfs.github.com/&lt;/a&gt; for more information). Download and install the Git LFS command line extension to use this option and configure it like this:</source>
          <target state="translated">큰 (이진) 파일에 사용되는 시스템을 지정하십시오. 큰 파일 시스템은 &lt;code&gt;git p4 submit&lt;/code&gt; 명령을 지원하지 않습니다 . 현재 Git LFS 만 구현되어 있습니다 ( 자세한 내용 은 &lt;a href=&quot;https://git-lfs.github.com/&quot;&gt;https://git-lfs.github.com/&lt;/a&gt; 참조 ). 이 옵션을 사용하려면 Git LFS 명령 행 확장을 다운로드하여 설치하고 다음과 같이 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="d0eef78fea38d4df295115dcb10e8e7ee7e56973" translate="yes" xml:space="preserve">
          <source>Specify the terminal width. By default &lt;code&gt;git column&lt;/code&gt; will detect the terminal width, or fall back to 80 if it is unable to do so.</source>
          <target state="translated">터미널 너비를 지정하십시오. 기본적으로 &lt;code&gt;git column&lt;/code&gt; 은 터미널 너비를 감지하거나, 그렇지 않으면 80 으로 줄어 듭니다 .</target>
        </trans-unit>
        <trans-unit id="724bb2755b4bad5b8b472dcd4850810c5212797c" translate="yes" xml:space="preserve">
          <source>Specify the transfer encoding to be used to send the message over SMTP. 7bit will fail upon encountering a non-ASCII message. quoted-printable can be useful when the repository contains files that contain carriage returns, but makes the raw patch email file (as saved from a MUA) much harder to inspect manually. base64 is even more fool proof, but also even more opaque. auto will use 8bit when possible, and quoted-printable otherwise.</source>
          <target state="translated">SMTP를 통해 메시지를 보내는 데 사용할 전송 인코딩을 지정하십시오. 비 ASCII 메시지가 표시되면 7 비트가 실패합니다. quoted-printable은 저장소에 캐리지 리턴이 포함 된 파일이 포함되어 있지만 MUA에서 저장된 원시 패치 이메일 파일을 수동으로 검사하기가 훨씬 더 어려울 때 유용 할 수 있습니다. base64는 더 어리석은 증거이지만 더 불투명합니다. auto는 가능한 경우 8 비트를 사용하고 그렇지 않으면 인용 인쇄 가능합니다.</target>
        </trans-unit>
        <trans-unit id="9612f0c17aac603d9a46ca6cb5d976f3bf4c5bf3" translate="yes" xml:space="preserve">
          <source>Specify the type (default: &quot;blob&quot;).</source>
          <target state="translated">유형을 지정하십시오 (기본값 : &quot;blob&quot;).</target>
        </trans-unit>
        <trans-unit id="13769f1d436d268baed7051a7c066221785b088a" translate="yes" xml:space="preserve">
          <source>Specify the type of dates the frontend will supply to fast-import within &lt;code&gt;author&lt;/code&gt;, &lt;code&gt;committer&lt;/code&gt; and &lt;code&gt;tagger&lt;/code&gt; commands. See &amp;ldquo;Date Formats&amp;rdquo; below for details about which formats are supported, and their syntax.</source>
          <target state="translated">프론트 엔드 내에서 빠르게 수입에 알려 주어야합니다 날짜의 유형을 지정 &lt;code&gt;author&lt;/code&gt; , &lt;code&gt;committer&lt;/code&gt; 와 &lt;code&gt;tagger&lt;/code&gt; 명령을. 지원되는 형식 및 구문에 대한 자세한 내용은 아래의 &quot;날짜 형식&quot;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="19ebff060f03d17e125a48bf86da29f25cd1bf35" translate="yes" xml:space="preserve">
          <source>Specify the version with which new index files should be initialized. This does not affect existing repositories. If &lt;code&gt;feature.manyFiles&lt;/code&gt; is enabled, then the default is 4.</source>
          <target state="translated">새 색인 파일을 초기화 할 버전을 지정하십시오. 기존 리포지토리에는 영향을 미치지 않습니다. &lt;code&gt;feature.manyFiles&lt;/code&gt; 가 사용 가능한 경우 기본값은 4입니다.</target>
        </trans-unit>
        <trans-unit id="1dcaca1644c579ca7480d7fe912a3d5f89533d59" translate="yes" xml:space="preserve">
          <source>Specify what action will be performed when there is already at least one trailer with the same &amp;lt;token&amp;gt; in the message. A setting provided with &lt;code&gt;--if-exists&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--if-exists&lt;/code&gt; or &lt;code&gt;--no-if-exists&lt;/code&gt;. Possible actions are &lt;code&gt;addIfDifferent&lt;/code&gt;, &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;doNothing&lt;/code&gt;.</source>
          <target state="translated">메시지에 &amp;lt;토큰&amp;gt;이 같은 트레일러가 이미 하나 이상있을 때 수행 할 작업을 지정하십시오. &lt;code&gt;--trailer&lt;/code&gt; &lt;code&gt;--if-exists&lt;/code&gt; 와 함께 제공되는 설정 은 모든 구성 변수를 무시 하고 다음 번 --if &lt;code&gt;--if-exists&lt;/code&gt; 또는 &lt;code&gt;--no-if-exists&lt;/code&gt; 가 나타날 때까지 모든 --trailer 옵션에 적용됩니다 . 가능한 조치는 &lt;code&gt;addIfDifferent&lt;/code&gt; , &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt; , &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;replace&lt;/code&gt; 및 &lt;code&gt;doNothing&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0811642f4a0657e779f7ae4b567538044cd6208f" translate="yes" xml:space="preserve">
          <source>Specify what action will be performed when there is no other trailer with the same &amp;lt;token&amp;gt; in the message. A setting provided with &lt;code&gt;--if-missing&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--if-missing&lt;/code&gt; or &lt;code&gt;--no-if-missing&lt;/code&gt;. Possible actions are &lt;code&gt;doNothing&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">메시지에 &amp;lt;토큰&amp;gt;이 같은 다른 트레일러가 없을 때 수행 할 작업을 지정하십시오. &lt;code&gt;--trailer&lt;/code&gt; &lt;code&gt;--if-missing&lt;/code&gt; 과 함께 제공되는 설정 은 모든 구성 변수를 무시 하고 다음 번 --if &lt;code&gt;--if-missing&lt;/code&gt; 또는 &lt;code&gt;--no-if-missing&lt;/code&gt; 이 나타날 때까지 모든 --trailer 옵션에 적용됩니다 . 가능한 조치는 &lt;code&gt;doNothing&lt;/code&gt; 또는 &lt;code&gt;add&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4d686969af43bc9772a0a2bdde0f0d6918dfd1d4" translate="yes" xml:space="preserve">
          <source>Specify what destination ref to update with what source object. The format of a &amp;lt;refspec&amp;gt; parameter is an optional plus &lt;code&gt;+&lt;/code&gt;, followed by the source object &amp;lt;src&amp;gt;, followed by a colon &lt;code&gt;:&lt;/code&gt;, followed by the destination ref &amp;lt;dst&amp;gt;.</source>
          <target state="translated">어떤 소스 오브젝트로 업데이트 할 대상 참조를 지정하십시오. &amp;lt;refspec&amp;gt; 매개 변수의 형식은 선택적인 plus &lt;code&gt;+&lt;/code&gt; , 소스 오브젝트 &amp;lt;src&amp;gt;, 콜론 &lt;code&gt;:&lt;/code&gt; , 목적지 ref &amp;lt;dst&amp;gt;입니다.</target>
        </trans-unit>
        <trans-unit id="6138b51fead99efbf1d6930137f2b387251ef604" translate="yes" xml:space="preserve">
          <source>Specify where all new trailers will be added. A setting provided with &lt;code&gt;--where&lt;/code&gt; overrides all configuration variables and applies to all &lt;code&gt;--trailer&lt;/code&gt; options until the next occurrence of &lt;code&gt;--where&lt;/code&gt; or &lt;code&gt;--no-where&lt;/code&gt;. Possible values are &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt; or &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">모든 새 예고편을 추가 할 위치를 지정하십시오. 제공된 설정 &lt;code&gt;--where&lt;/code&gt; 는 모든 구성 변수를 무시하고 모든 적용 &lt;code&gt;--trailer&lt;/code&gt; 다음 발생까지 옵션 &lt;code&gt;--where&lt;/code&gt; 또는 &lt;code&gt;--no-where&lt;/code&gt; . 가능한 값은 &lt;code&gt;after&lt;/code&gt; , &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; 또는 &lt;code&gt;start&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9446eb9819e4ea522bac17e494630aff8d54bebb" translate="yes" xml:space="preserve">
          <source>Specify whether supported commands should output in columns. This variable consists of a list of tokens separated by spaces or commas:</source>
          <target state="translated">지원되는 명령이 열로 출력되어야하는지 여부를 지정하십시오. 이 변수는 공백 또는 쉼표로 구분 된 토큰 목록으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="c44825f076cf0385d99447ca6f9388f9e5d821d6" translate="yes" xml:space="preserve">
          <source>Specify whether to output branch listing in &lt;code&gt;git branch&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;git branch&lt;/code&gt; 의 분기 목록 을 열로 출력할지 여부를 지정하십시오 . 자세한 내용은 &lt;code&gt;column.ui&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eb8ddb4258375ad9322849684e1d07ab6e005bcd" translate="yes" xml:space="preserve">
          <source>Specify whether to output tag listing in &lt;code&gt;git tag&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">태그 목록을 &lt;code&gt;git tag&lt;/code&gt; 로 열로 출력할지 여부를 지정하십시오 . 자세한 내용은 &lt;code&gt;column.ui&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7607c69174b01d1bb15ae17f25fe8a2d96f9d58f" translate="yes" xml:space="preserve">
          <source>Specify whether to output untracked files in &lt;code&gt;git status&lt;/code&gt; in columns. See &lt;code&gt;column.ui&lt;/code&gt; for details.</source>
          <target state="translated">추적되지 않은 파일을 &lt;code&gt;git status&lt;/code&gt; 에서 열로 출력할지 여부를 지정하십시오 . 자세한 내용은 &lt;code&gt;column.ui&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b984e35657451690beb2903dd3dd6390cb372f55" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;--no-symlinks&lt;/code&gt; instructs &lt;code&gt;git difftool&lt;/code&gt; to create copies instead. &lt;code&gt;--no-symlinks&lt;/code&gt; is the default on Windows.</source>
          <target state="translated">&lt;code&gt;--no-symlinks&lt;/code&gt; 를 지정 하면 &lt;code&gt;git difftool&lt;/code&gt; 이 대신 사본을 작성 하도록 지시 합니다. &lt;code&gt;--no-symlinks&lt;/code&gt; 는 Windows의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="3b6b4914f3cbc4ad3df641c0c4177b0ed1427ac9" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;-b&lt;/code&gt; causes a new branch to be created as if &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; were called and then checked out. In this case you can use the &lt;code&gt;--track&lt;/code&gt; or &lt;code&gt;--no-track&lt;/code&gt; options, which will be passed to &lt;code&gt;git branch&lt;/code&gt;. As a convenience, &lt;code&gt;--track&lt;/code&gt; without &lt;code&gt;-b&lt;/code&gt; implies branch creation; see the description of &lt;code&gt;--track&lt;/code&gt; below.</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; 를 지정 하면 &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; 이 호출 된 다음 체크 아웃 된 것처럼 새 분기가 작성됩니다 . 이 경우 &lt;code&gt;--track&lt;/code&gt; 또는 &lt;code&gt;--no-track&lt;/code&gt; 옵션을 사용할 수 있습니다.이 옵션은 &lt;code&gt;git branch&lt;/code&gt; 로 전달됩니다 . 편의상, &lt;code&gt;--track&lt;/code&gt; 없이 &lt;code&gt;-b&lt;/code&gt; 이 지점 생성을 의미한다; 아래 &lt;code&gt;--track&lt;/code&gt; 에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d1224dfe57ea23830be77ce6389d9ea1f14e370" translate="yes" xml:space="preserve">
          <source>Specifying ranges</source>
          <target state="translated">범위 지정</target>
        </trans-unit>
        <trans-unit id="c7c8ec2e47baa0d09987a0c4d6001b20abaaf2b4" translate="yes" xml:space="preserve">
          <source>Specifying references</source>
          <target state="translated">참조 지정</target>
        </trans-unit>
        <trans-unit id="393f3ea7b8cd86c4b234c1534e51343677169802" translate="yes" xml:space="preserve">
          <source>Specifying revisions</source>
          <target state="translated">개정판 지정</target>
        </trans-unit>
        <trans-unit id="c12054d536cbd9889e1a4db4d75b48d8a7f03cd2" translate="yes" xml:space="preserve">
          <source>Specifying the refs</source>
          <target state="translated">심판 지정</target>
        </trans-unit>
        <trans-unit id="31f2abfdb1a3e7bab64495f843d089d388ea45e0" translate="yes" xml:space="preserve">
          <source>Spend extra cycles to find renames, copies and complete rewrites (very expensive).</source>
          <target state="translated">추가주기를 사용하여 이름 변경, 복사 및 전체 재 작성을 찾을 수 있습니다 (매우 비쌉니다).</target>
        </trans-unit>
        <trans-unit id="6b695c34f0798ffd5026fe42cf041af8a841d861" translate="yes" xml:space="preserve">
          <source>Spend extra time to make sure the smallest possible diff is produced.</source>
          <target state="translated">가장 작은 diff가 만들어 지도록 여분의 시간을 보내십시오.</target>
        </trans-unit>
        <trans-unit id="8622c4dc8f748203e018cc0d2ec4e20b07c9830d" translate="yes" xml:space="preserve">
          <source>Split a commit apart into a sequence of commits</source>
          <target state="translated">커밋을 일련의 커밋으로 분리</target>
        </trans-unit>
        <trans-unit id="9da7a78d6cd0199fb3cad874edd1ba683b830e12" translate="yes" xml:space="preserve">
          <source>Split index</source>
          <target state="translated">분할 인덱스</target>
        </trans-unit>
        <trans-unit id="704e5487b89b9b30fcd9e576ab8763e642a1b938" translate="yes" xml:space="preserve">
          <source>Splits a mbox file or a Maildir into a list of files: &quot;0001&quot; &quot;0002&quot; .. in the specified directory so you can process them further from there.</source>
          <target state="translated">mbox 파일 또는 Maildir을 지정된 디렉토리에있는 파일 목록 &quot;0001&quot; &quot;0002&quot;..로 분할하여 거기서 더 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="30bc5e98fc4346f828d1d387cd6e1c89bab7df56" translate="yes" xml:space="preserve">
          <source>Splits mail messages in a mailbox into commit log message, authorship information and patches, and applies them to the current branch.</source>
          <target state="translated">사서함의 메일 메시지를 커밋 로그 메시지, 제작 정보 및 패치로 분할하여 현재 분기에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="05a6d55bcdcfd4539a8e45cc0dd3c2f28f1895ad" translate="yes" xml:space="preserve">
          <source>Splitting a (logically single) project into multiple repositories and tying them back together. This can be used to overcome current limitations of Git&amp;rsquo;s implementation to have finer grained access:</source>
          <target state="translated">(논리적으로 단일 한) 프로젝트를 여러 저장소로 나누고 다시 묶습니다. 이것은 Git 구현의 현재 제한을 극복하여 세분화 된 액세스를 갖도록 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dca5d29240b446b8bdd6f26fb0b4e46cb995769f" translate="yes" xml:space="preserve">
          <source>Splitting commits</source>
          <target state="translated">커밋 분할</target>
        </trans-unit>
        <trans-unit id="ab83ac1fcfed8f50260b11e517c47e9b533419b5" translate="yes" xml:space="preserve">
          <source>Splitting the CVS log into patch sets is done by &lt;code&gt;cvsps&lt;/code&gt;. At least version 2.1 is required.</source>
          <target state="translated">CVS 로그를 패치 세트로 분할하는 것은 &lt;code&gt;cvsps&lt;/code&gt; 에 의해 수행됩니다 . 버전 2.1 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a74a609811ea3b4041281496e2aa5c500ba6558b" translate="yes" xml:space="preserve">
          <source>Sq-quote</source>
          <target state="translated">Sq-quote</target>
        </trans-unit>
        <trans-unit id="d3e10219341e654fff6647b0dadeaeaf0534cae6" translate="yes" xml:space="preserve">
          <source>Squelch the progress indicator.</source>
          <target state="translated">진행 표시기를 que 치십시오.</target>
        </trans-unit>
        <trans-unit id="56175f21751e04201e148f2612c700747850548a" translate="yes" xml:space="preserve">
          <source>Start &lt;code&gt;git gui&lt;/code&gt; and arrange to make exactly one commit before exiting and returning to the shell. The interface is limited to only commit actions, slightly reducing the application&amp;rsquo;s startup time and simplifying the menubar.</source>
          <target state="translated">&lt;code&gt;git gui&lt;/code&gt; 를 시작 하고 종료하고 쉘로 돌아 가기 전에 정확히 하나의 커밋을 준비 하십시오 . 인터페이스는 커밋 작업만으로 제한되어 응용 프로그램의 시작 시간을 약간 줄이고 메뉴 표시 줄을 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="1ad6edca0ad31761798d28bd8f2bcba01ec6ebde" translate="yes" xml:space="preserve">
          <source>Start a blame viewer on the specified file on the given version (or working directory if not specified).</source>
          <target state="translated">지정된 버전 (또는 지정되지 않은 경우 작업 디렉토리)의 지정된 파일에서 Blame Viewer를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="27818282f52d064df23dffafcd6a743ee7870fc8" translate="yes" xml:space="preserve">
          <source>Start a new Git repository for an existing code base</source>
          <target state="translated">기존 코드 기반을위한 새로운 Git 리포지토리 시작</target>
        </trans-unit>
        <trans-unit id="749535e22d531edd1c6d9e666c57e169bc2a2908" translate="yes" xml:space="preserve">
          <source>Start a tree browser showing all files in the specified commit. Files selected through the browser are opened in the blame viewer.</source>
          <target state="translated">지정된 커밋의 모든 파일을 보여주는 트리 브라우저를 시작하십시오. 브라우저를 통해 선택한 파일이 Blame Viewer에서 열립니다.</target>
        </trans-unit>
        <trans-unit id="4f65c13509b4c270214524b3ab095bad926fc4e3" translate="yes" xml:space="preserve">
          <source>Start an interactive rebase with &lt;code&gt;git rebase -i &amp;lt;commit&amp;gt;^&lt;/code&gt;, where &amp;lt;commit&amp;gt; is the commit you want to split. In fact, any commit range will do, as long as it contains that commit.</source>
          <target state="translated">&lt;code&gt;git rebase -i &amp;lt;commit&amp;gt;^&lt;/code&gt; 을 사용하여 대화식 리베이스를 시작하십시오. 여기서 &amp;lt;commit&amp;gt;은 분할하려는 커밋입니다. 실제로, 해당 커밋이 포함되어있는 한 모든 커밋 범위가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="e89944344f3db8073a18706746155c852e5164e1" translate="yes" xml:space="preserve">
          <source>Start cleaning files and directories, and then quit.</source>
          <target state="translated">파일 및 디렉토리 정리를 시작한 다음 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="b87ef51ca99e7074691b94843e801ff9544539ca" translate="yes" xml:space="preserve">
          <source>Start development from a known tag</source>
          <target state="translated">알려진 태그에서 개발 시작</target>
        </trans-unit>
        <trans-unit id="57f8f31bd16af3371648ce77ae5076e70d2a7e21" translate="yes" xml:space="preserve">
          <source>Start it with the last commit you want to retain as-is:</source>
          <target state="translated">그대로 유지하려는 마지막 커밋으로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="2deb883b26612605cc58ed80bbd657e3f5419b69" translate="yes" xml:space="preserve">
          <source>Start numbering the patches at &amp;lt;n&amp;gt; instead of 1.</source>
          <target state="translated">1 대신 &amp;lt;n&amp;gt;에서 패치 번호를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="f25f51b92f6dabcbe2c2bbe2f01c2d471018dd10" translate="yes" xml:space="preserve">
          <source>Start off with just creating any random files that you want to maintain in your Git repository. We&amp;rsquo;ll start off with a few bad examples, just to get a feel for how this works:</source>
          <target state="translated">Git 리포지토리에서 유지하려는 임의의 파일을 만드는 것부터 시작하십시오. 우리는 이것이 어떻게 작동하는지에 대한 느낌을 얻기 위해 몇 가지 나쁜 예를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="93ea699c6796ebb7b82a3a5927dc702e8f1a7316" translate="yes" xml:space="preserve">
          <source>Start the httpd instance and exit. Regenerate configuration files as necessary for spawning a new instance.</source>
          <target state="translated">httpd 인스턴스를 시작하고 종료하십시오. 새 인스턴스를 생성하는 데 필요한 구성 파일을 재생성하십시오.</target>
        </trans-unit>
        <trans-unit id="4e8cde71c6f29e3b4dc0142edc8a7bdf1a0bc89b" translate="yes" xml:space="preserve">
          <source>Start the stream with a &lt;code&gt;feature done&lt;/code&gt; stanza, and terminate it with a &lt;code&gt;done&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;feature done&lt;/code&gt; 스탠자로 스트림을 시작하고 &lt;code&gt;done&lt;/code&gt; 명령으로 종료하십시오 .</target>
        </trans-unit>
        <trans-unit id="96e592387dc94e730df0ef669b5a78ed012d4c94" translate="yes" xml:space="preserve">
          <source>Starting a bisection</source>
          <target state="translated">이분법 시작</target>
        </trans-unit>
        <trans-unit id="b8f1956c80187223247d01b968f642bf0007a014" translate="yes" xml:space="preserve">
          <source>Starting point at which to create the new commits. If the --onto option is not specified, the starting point is &amp;lt;upstream&amp;gt;. May be any valid commit, and not just an existing branch name.</source>
          <target state="translated">새로운 커밋을 생성하는 시작점. --onto 옵션을 지정하지 않으면 시작 지점은 &amp;lt;업스트림&amp;gt;입니다. 기존 브랜치 이름뿐만 아니라 유효한 커밋 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2a5514cb8b0c290a6aeca31b2e191aff35672b1" translate="yes" xml:space="preserve">
          <source>Stash the changes in a dirty working directory away</source>
          <target state="translated">더티 작업 디렉토리에 변경 사항을 보관하십시오.</target>
        </trans-unit>
        <trans-unit id="abb935cbc47e1b75159f277e4b22bfc5de7bbee9" translate="yes" xml:space="preserve">
          <source>Static configuration of usernames for a given authentication context.</source>
          <target state="translated">주어진 인증 컨텍스트에 대한 사용자 이름의 정적 구성.</target>
        </trans-unit>
        <trans-unit id="20520ab082263228efd3ab7ffc11e41906666da4" translate="yes" xml:space="preserve">
          <source>Status letters C and R are always followed by a score (denoting the percentage of similarity between the source and target of the move or copy). Status letter M may be followed by a score (denoting the percentage of dissimilarity) for file rewrites.</source>
          <target state="translated">상태 문자 C와 R은 항상 점수 뒤에옵니다 (이동 또는 사본의 소스와 대상 간의 유사성 비율을 나타냄). 상태 문자 M 다음에는 파일 다시 쓰기에 대한 점수 (유사 비율을 나타냄)가 올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5910dfc64a273edb8d032604ca6d54bef3bf2f4e" translate="yes" xml:space="preserve">
          <source>Stop the httpd instance and exit. This does not generate any of the configuration files for spawning a new instance, nor does it close the browser.</source>
          <target state="translated">httpd 인스턴스를 중지하고 종료하십시오. 이렇게하면 새 인스턴스를 생성하기위한 구성 파일이 생성되지 않으며 브라우저가 닫히지 않습니다.</target>
        </trans-unit>
        <trans-unit id="12d3bab755f474b20ad13c1ab918e01e5f4eb7c4" translate="yes" xml:space="preserve">
          <source>Stop when a given path disappears from the tree.</source>
          <target state="translated">주어진 경로가 트리에서 사라지면 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="7363904e3ee0fd364e644f2e1b28c12dd383e027" translate="yes" xml:space="preserve">
          <source>Storage format</source>
          <target state="translated">저장 형식</target>
        </trans-unit>
        <trans-unit id="9ff8274c9fcae633894b9e7ab1c37fd6e74f1f7a" translate="yes" xml:space="preserve">
          <source>Store Git commit times in the local time zone instead of UTC. This makes &lt;code&gt;git log&lt;/code&gt; (even without --date=local) show the same times that &lt;code&gt;svn log&lt;/code&gt; would in the local time zone.</source>
          <target state="translated">Git 커밋 시간을 UTC 대신 현지 시간대로 저장하십시오. 이것은 &lt;code&gt;git log&lt;/code&gt; (--date = local이 없어도)가 &lt;code&gt;svn log&lt;/code&gt; 가 현지 시간대 와 동일한 시간을 표시하게합니다 .</target>
        </trans-unit>
        <trans-unit id="c403801561a0441c1d742dd0499050f55d110cd9" translate="yes" xml:space="preserve">
          <source>Store a given stash created via &lt;code&gt;git stash create&lt;/code&gt; (which is a dangling merge commit) in the stash ref, updating the stash reflog. This is intended to be useful for scripts. It is probably not the command you want to use; see &quot;push&quot; above.</source>
          <target state="translated">&lt;code&gt;git stash create&lt;/code&gt; (매달린 병합 커밋)를 통해 생성 된 지정된 숨김을 숨김 참조에 저장하고 숨김 참조를 업데이트합니다. 스크립트에 유용합니다. 사용하려는 명령이 아닐 수도 있습니다. 위의 &quot;푸시&quot;를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b41300dc42c243e3949e2ecb7a4c10aea769103e" translate="yes" xml:space="preserve">
          <source>Store credentials indefinitely on disk. See &lt;a href=&quot;git-credential-store&quot;&gt;git-credential-store[1]&lt;/a&gt; for details.</source>
          <target state="translated">자격 증명을 디스크에 무기한 저장합니다. 자세한 내용은 &lt;a href=&quot;git-credential-store&quot;&gt;git-credential-store [1]&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5597429620f06451a38a8e17b35a345310b01123" translate="yes" xml:space="preserve">
          <source>Store the fetched branch into a local branch before merging into the current branch:</source>
          <target state="translated">현재 브랜치에 병합하기 전에 페치 된 브랜치를 로컬 브랜치에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="687760eb98a14d7d5a6fbbba834cf9ccaaf83ea1" translate="yes" xml:space="preserve">
          <source>Store the files instead of deflating them.</source>
          <target state="translated">수축시키지 말고 파일을 보관하십시오.</target>
        </trans-unit>
        <trans-unit id="1512a579e2c05cbf63724a7c8d50327696297b00" translate="yes" xml:space="preserve">
          <source>Stores a set of &quot;objects&quot;, and an individual &lt;a href=&quot;#def_object&quot;&gt;object&lt;/a&gt; is identified by its &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;. The objects usually live in &lt;code&gt;$GIT_DIR/objects/&lt;/code&gt;.</source>
          <target state="translated">&quot;객체&quot;세트를 저장하고 개별 &lt;a href=&quot;#def_object&quot;&gt;객체&lt;/a&gt; 는 해당 &lt;a href=&quot;#def_object_name&quot;&gt;객체 이름으로&lt;/a&gt; 식별됩니다 . 객체는 보통 &lt;code&gt;$GIT_DIR/objects/&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6349a625008b244d26dbb9000ad7480816812a5" translate="yes" xml:space="preserve">
          <source>Stores shorthands for URL and default refnames for use when interacting with remote repositories via &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; commands. See the REMOTES section in &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; for details. This mechanism is legacy and not likely to be found in modern repositories. This directory is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/remotes&quot; will be used instead.</source>
          <target state="translated">&lt;code&gt;git fetch&lt;/code&gt; , &lt;code&gt;git pull&lt;/code&gt; 및 &lt;code&gt;git push&lt;/code&gt; 명령을 통해 원격 리포지토리와 상호 작용할 때 사용할 URL 및 기본 참조 이름에 대한 속기를 저장 합니다. 자세한 내용은 &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; 의 REMOTES 섹션 을 참조하십시오. 이 메커니즘은 레거시이며 현대 리포지토리에서는 찾을 수 없습니다. $ GIT_COMMON_DIR이 설정되고 대신 &quot;$ GIT_COMMON_DIR / remotes&quot;가 사용되면이 디렉토리는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="39f2d5fc66110ba4ba0f8069c43a058a9f84529f" translate="yes" xml:space="preserve">
          <source>Storing multiple repositories as namespaces of a single repository avoids storing duplicate copies of the same objects, such as when storing multiple branches of the same source. The alternates mechanism provides similar support for avoiding duplicates, but alternates do not prevent duplication between new objects added to the repositories without ongoing maintenance, while namespaces do.</source>
          <target state="translated">여러 저장소를 단일 저장소의 네임 스페이스로 저장하면 동일한 소스의 여러 분기를 저장할 때와 같이 동일한 오브젝트의 중복 사본을 저장하지 않아도됩니다. 대체 메커니즘은 중복을 피하기위한 유사한 지원을 제공하지만 대체는 유지 보수없이 저장소에 추가 된 새 오브젝트 간의 복제를 막지 않지만 네임 스페이스는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ca1c76454e0d7e7718b023221d2b0aad3d2a1aba" translate="yes" xml:space="preserve">
          <source>Stream Comments</source>
          <target state="translated">스트림 댓글</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="5ab8d5b6efb1646dea2e4ea7d3282e3cb65c24cb" translate="yes" xml:space="preserve">
          <source>String to be printed at the beginning of each line.</source>
          <target state="translated">각 줄의 시작 부분에 인쇄 할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="382f9b3217a7726b3a52ca62702799f6d5434b48" translate="yes" xml:space="preserve">
          <source>String to be printed at the end of each line, including newline character.</source>
          <target state="translated">줄 바꿈 문자를 포함하여 각 줄의 끝에 인쇄 할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ae0208ff14e492381101b38c4426143fc9d98dd6" translate="yes" xml:space="preserve">
          <source>String(s) &lt;code&gt;receive-pack&lt;/code&gt; and &lt;code&gt;upload-pack&lt;/code&gt; use to decide which refs to omit from their initial advertisements. Use more than one definition to specify multiple prefix strings. A ref that is under the hierarchies listed in the value of this variable is excluded, and is hidden when responding to &lt;code&gt;git push&lt;/code&gt; or &lt;code&gt;git
fetch&lt;/code&gt;. See &lt;code&gt;receive.hideRefs&lt;/code&gt; and &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; for program-specific versions of this config.</source>
          <target state="translated">String (s) &lt;code&gt;receive-pack&lt;/code&gt; 및 &lt;code&gt;upload-pack&lt;/code&gt; 은 초기 광고에서 생략 할 참조를 결정하는 데 사용됩니다. 여러 개의 접두사 문자열을 지정하려면 둘 이상의 정의를 사용하십시오. 이 변수의 값에 나열된 계층 구조 아래에있는 참조는 제외되며 &lt;code&gt;git push&lt;/code&gt; 또는 &lt;code&gt;git fetch&lt;/code&gt; 응답하면 숨겨집니다 . 이 구성의 프로그램 별 버전은 &lt;code&gt;receive.hideRefs&lt;/code&gt; 및 &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd5fa82aac351e4a1096fc62004ba110d66fe810" translate="yes" xml:space="preserve">
          <source>Strip leading and trailing empty lines, trailing whitespace, commentary and collapse consecutive empty lines.</source>
          <target state="translated">선행 및 후행 빈 줄 제거, 후행 공백, 주석 및 연속적인 빈 줄 축소.</target>
        </trans-unit>
        <trans-unit id="7c8cf84261f17414d41a19324152deb0638ecb13" translate="yes" xml:space="preserve">
          <source>Subcommands</source>
          <target state="translated">Subcommands</target>
        </trans-unit>
        <trans-unit id="2dacf65959849884a011f36f76a04eebea94c5ea" translate="yes" xml:space="preserve">
          <source>Submit</source>
          <target state="translated">Submit</target>
        </trans-unit>
        <trans-unit id="f3de51d87e152838b373a65e626718325c16a058" translate="yes" xml:space="preserve">
          <source>Submit only the specified commit or range of commits, instead of the full list of changes that are in the current Git branch.</source>
          <target state="translated">현재 Git 브랜치에있는 전체 변경 사항 목록 대신 지정된 커밋 또는 커밋 범위 만 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="08c8f65685b697a18634ff4dd66ae0c7b7f8944c" translate="yes" xml:space="preserve">
          <source>Submit options</source>
          <target state="translated">옵션 제출</target>
        </trans-unit>
        <trans-unit id="3e96d88de40c1b4ce507f5624d2a7a2ae94fe14f" translate="yes" xml:space="preserve">
          <source>Submit variables</source>
          <target state="translated">변수 제출</target>
        </trans-unit>
        <trans-unit id="0213e9a40d8de329179170c49c9f0b36b9c8f25d" translate="yes" xml:space="preserve">
          <source>Submit your commits back to p4:</source>
          <target state="translated">커밋을 p4에 다시 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="45b948a665e37752fe7a51975e7be3fc7f05181f" translate="yes" xml:space="preserve">
          <source>Submitting changes from a Git repository back to the p4 repository requires a separate p4 client workspace. This should be specified using the &lt;code&gt;P4CLIENT&lt;/code&gt; environment variable or the Git configuration variable &lt;code&gt;git-p4.client&lt;/code&gt;. The p4 client must exist, but the client root will be created and populated if it does not already exist.</source>
          <target state="translated">Git 저장소에서 p4 저장소로 변경 사항을 다시 제출하려면 별도의 p4 클라이언트 작업 공간이 필요합니다. 이것은 &lt;code&gt;P4CLIENT&lt;/code&gt; 환경 변수 또는 Git 구성 변수 &lt;code&gt;git-p4.client&lt;/code&gt; 를 사용하여 지정해야합니다 . p4 클라이언트가 존재해야하지만 클라이언트 루트가 없으면 클라이언트 루트가 작성되어 채워집니다.</target>
        </trans-unit>
        <trans-unit id="6fdf0bad4a57f28ad8887a6fe4e3d9618491f48f" translate="yes" xml:space="preserve">
          <source>Submitting patches to a project</source>
          <target state="translated">프로젝트에 패치 제출</target>
        </trans-unit>
        <trans-unit id="d2d7b7a6dabf5680ef6fc53443124ea60acd88af" translate="yes" xml:space="preserve">
          <source>Submitting requires a p4 client, which is not in the same location as the Git repository. Patches are applied, one at a time, to this p4 client and submitted from there.</source>
          <target state="translated">제출하려면 p4 클라이언트가 필요하며 Git 저장소와 동일한 위치에 있지 않습니다. 패치는 한 번에 하나씩이 p4 클라이언트에 적용되어 해당 p4 클라이언트에 제출됩니다.</target>
        </trans-unit>
        <trans-unit id="e107551e51d7866e29fbfac7f1a9d70e892a1c9c" translate="yes" xml:space="preserve">
          <source>Submodule operations can be configured using the following mechanisms (from highest to lowest precedence):</source>
          <target state="translated">다음과 같은 메커니즘을 사용하여 서브 모듈 작업을 구성 할 수 있습니다 (가장 높은 우선 순위에서 가장 낮은 우선 순위로).</target>
        </trans-unit>
        <trans-unit id="12d390f8025584ad2ceb29d8156199827eb766f2" translate="yes" xml:space="preserve">
          <source>Submodules</source>
          <target state="translated">Submodules</target>
        </trans-unit>
        <trans-unit id="8b3b72a48d6b77673f309811c21a1f34bda69f2a" translate="yes" xml:space="preserve">
          <source>Submodules are initialized and cloned using their default settings. This is equivalent to running &lt;code&gt;git submodule update --init --recursive &amp;lt;pathspec&amp;gt;&lt;/code&gt; immediately after the clone is finished. This option is ignored if the cloned repository does not have a worktree/checkout (i.e. if any of &lt;code&gt;--no-checkout&lt;/code&gt;/&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--bare&lt;/code&gt;, or &lt;code&gt;--mirror&lt;/code&gt; is given)</source>
          <target state="translated">하위 모듈은 기본 설정을 사용하여 초기화 및 복제됩니다. 이것은 복제가 완료된 직후 &lt;code&gt;git submodule update --init --recursive &amp;lt;pathspec&amp;gt;&lt;/code&gt; 을 실행하는 것과 같습니다 . 복제 된 저장소에 작업 트리 / 체크 아웃이없는 경우 (예 : &lt;code&gt;--no-checkout&lt;/code&gt; / &lt;code&gt;-n&lt;/code&gt; , &lt;code&gt;--bare&lt;/code&gt; 또는 &lt;code&gt;--mirror&lt;/code&gt; 가 지정된 경우) 이 옵션은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f0558d8aae211aae78435cf5f18fbee56b357b16" translate="yes" xml:space="preserve">
          <source>Submodules can be used for at least two different use cases:</source>
          <target state="translated">서브 모듈은 두 가지 이상의 다른 사용 사례에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a4ac6e80eae220504fcac25436c9a1e818ef8b5" translate="yes" xml:space="preserve">
          <source>Submodules can take the following forms:</source>
          <target state="translated">서브 모듈은 다음과 같은 형식을 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ee6b51df0a5b53ba35723ec36f91cb14154873c" translate="yes" xml:space="preserve">
          <source>Submodules have more state and instead report M the submodule has a different HEAD than recorded in the index m the submodule has modified content ? the submodule has untracked files since modified content or untracked files in a submodule cannot be added via &lt;code&gt;git add&lt;/code&gt; in the superproject to prepare a commit.</source>
          <target state="translated">서브 모듈은 더 많은 상태를 가지고 대신 서브 모듈이 컨텐츠를 수정 한 인덱스에 기록 된 것과 다른 HEAD를 가지고 있다고보고한다. 커밋을 준비하기 위해 수퍼 프로젝트의 &lt;code&gt;git add&lt;/code&gt; 를 통해 서브 모듈에서 수정 된 컨텐츠 또는 추적되지 않은 파일을 추가 할 수 없으므로 서브 모듈에 추적되지 않은 파일이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a03a02ecd76c4aa6d233be9ed15c5b8f09cfe2e" translate="yes" xml:space="preserve">
          <source>Subsection names are case sensitive and can contain any characters except newline and the null byte. Doublequote &lt;code&gt;&quot;&lt;/code&gt; and backslash can be included by escaping them as &lt;code&gt;\&quot;&lt;/code&gt; and &lt;code&gt;\\&lt;/code&gt;, respectively. Backslashes preceding other characters are dropped when reading; for example, &lt;code&gt;\t&lt;/code&gt; is read as &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;\0&lt;/code&gt; is read as &lt;code&gt;0&lt;/code&gt; Section headers cannot span multiple lines. Variables may belong directly to a section or to a given subsection. You can have &lt;code&gt;[section]&lt;/code&gt; if you have &lt;code&gt;[section &quot;subsection&quot;]&lt;/code&gt;, but you don&amp;rsquo;t need to.</source>
          <target state="translated">서브 섹션 이름은 대소 문자를 구분하며 개행 및 널 바이트를 제외한 모든 문자를 포함 할 수 있습니다. 큰 따옴표 &lt;code&gt;&quot;&lt;/code&gt; 및 백 슬래시는 각각 &lt;code&gt;\&quot;&lt;/code&gt; 및 &lt;code&gt;\\&lt;/code&gt; 로 이스케이프하여 포함시킬 수 있습니다 . 읽을 때 다른 문자 앞에 오는 백 슬래시는 삭제됩니다. 예를 들어, &lt;code&gt;\t&lt;/code&gt; 로 판독 &lt;code&gt;t&lt;/code&gt; 및 &lt;code&gt;\0&lt;/code&gt; 으로 판독 &lt;code&gt;0&lt;/code&gt; 여러 줄 수없는 걸쳐 섹션 헤더. 변수는 섹션 또는 지정된 하위 섹션에 직접 속할 수 있습니다. 당신은 할 수 있습니다 &lt;code&gt;[section]&lt;/code&gt; 당신이있는 경우 &lt;code&gt;[section &quot;subsection&quot;]&lt;/code&gt; ,하지만 당신은 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="99e9a313960d39fea11c6c21bc5f471c5ed54f4e" translate="yes" xml:space="preserve">
          <source>Subsequent requests are then made directly to the service &lt;code&gt;$GIT_URL/git-upload-pack&lt;/code&gt;. (This works the same for git-receive-pack).</source>
          <target state="translated">그런 다음 후속 요청이 &lt;code&gt;$GIT_URL/git-upload-pack&lt;/code&gt; 서비스로 직접 이루어집니다 . 이것은 git-receive-pack과 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ecd7815bae661c84db8b72f60f38c2e3bca8ef1f" translate="yes" xml:space="preserve">
          <source>Subsequent updates to branches always create new files under &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; directory hierarchy.</source>
          <target state="translated">분기에 대한 후속 업데이트는 항상 &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; 디렉토리 계층 아래에 새 파일을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="b2bf2538aec79c0d5fa040a786e252ac3772aa80" translate="yes" xml:space="preserve">
          <source>Substitute the character &quot;/&quot; in branch names with &amp;lt;subst&amp;gt;</source>
          <target state="translated">분기 이름에서 &quot;/&quot;문자를 &amp;lt;subst&amp;gt;로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="d44c96fa5a053386ed38d9e6a7cca3107588bf57" translate="yes" xml:space="preserve">
          <source>Successful execution (a zero exit status) of this hook does not ensure the ref will actually be updated, it is only a prerequisite. As such it is not a good idea to send notices (e.g. email) from this hook. Consider using the post-receive hook instead.</source>
          <target state="translated">이 후크의 성공적인 실행 (제로 종료 상태)은 심판이 실제로 업데이트되도록 보장하지 않으며, 이는 전제 조건 일뿐입니다. 따라서이 후크에서 통지 (예 : 이메일)를 보내는 것은 좋지 않습니다. 수신 후 후크를 대신 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="0454547376d4a4928bbfee6331b7c2a9fb4a2161" translate="yes" xml:space="preserve">
          <source>Such duplicates are generally frowned upon because they clutter up history, making it harder to follow. To clean things up, you need to transplant the commits on &lt;code&gt;topic&lt;/code&gt; to the new &lt;code&gt;subsystem&lt;/code&gt; tip, i.e., rebase &lt;code&gt;topic&lt;/code&gt;. This becomes a ripple effect: anyone downstream from &lt;code&gt;topic&lt;/code&gt; is forced to rebase too, and so on!</source>
          <target state="translated">이러한 복제본은 일반적으로 역사를 어지럽히 기 때문에 따르기가 어려워서 찌그러집니다. 정리하려면 &lt;code&gt;topic&lt;/code&gt; 에 대한 커밋을 새로운 &lt;code&gt;subsystem&lt;/code&gt; 팁 (예 : rebase &lt;code&gt;topic&lt;/code&gt; ) 에 이식해야합니다 . 이것은 파급 효과가된다 : &lt;code&gt;topic&lt;/code&gt; 하류에있는 사람 은 모두 리베이스해야한다.</target>
        </trans-unit>
        <trans-unit id="8866d8895f273e182aecc88b4155660c1e2db399" translate="yes" xml:space="preserve">
          <source>Summarize &lt;code&gt;git log&lt;/code&gt; output</source>
          <target state="translated">&lt;code&gt;git log&lt;/code&gt; 출력 요약</target>
        </trans-unit>
        <trans-unit id="ec1e3fb20faac142815eb47774b44cb84610e827" translate="yes" xml:space="preserve">
          <source>Summarizes &lt;code&gt;git log&lt;/code&gt; output in a format suitable for inclusion in release announcements. Each commit will be grouped by author and title.</source>
          <target state="translated">릴리스 알림에 포함하기에 적합한 형식으로 &lt;code&gt;git log&lt;/code&gt; 출력을 요약 합니다. 각 커밋은 저자와 제목별로 그룹화됩니다.</target>
        </trans-unit>
        <trans-unit id="5c7562d8e87120565b992b08061dcfabc4f3c861" translate="yes" xml:space="preserve">
          <source>Supplies raw data (for use as blob/file content, commit messages, or annotated tag messages) to fast-import. Data can be supplied using an exact byte count or delimited with a terminating line. Real frontends intended for production-quality conversions should always use the exact byte count format, as it is more robust and performs better. The delimited format is intended primarily for testing fast-import.</source>
          <target state="translated">빠른 가져 오기에 원시 데이터 (블롭 / 파일 내용, 커밋 메시지 또는 주석이 달린 태그 메시지로 사용)를 제공합니다. 정확한 바이트 수를 사용하거나 종료 라인으로 구분하여 데이터를 제공 할 수 있습니다. 프로덕션 품질 변환을위한 실제 프런트 엔드는보다 강력하고 성능이 우수하므로 항상 정확한 바이트 수 형식을 사용해야합니다. 구분 형식은 기본적으로 빠른 가져 오기를 테스트하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="e8dbb2eeb155ce2917c101c99bacbd864a5c427e" translate="yes" xml:space="preserve">
          <source>Support for these types of regular expressions is an optional compile-time dependency. If Git wasn&amp;rsquo;t compiled with support for them providing this option will cause it to die.</source>
          <target state="translated">이러한 유형의 정규식 지원은 선택적 컴파일 타임 종속성입니다. Git이이 옵션을 제공하는 것을 지원하도록 컴파일되지 않은 경우 죽게됩니다.</target>
        </trans-unit>
        <trans-unit id="8e97694d704a0343a9b684d493f12b44246fec5f" translate="yes" xml:space="preserve">
          <source>Support for this command is mandatory.</source>
          <target state="translated">이 명령에 대한 지원은 필수입니다.</target>
        </trans-unit>
        <trans-unit id="e1b49c8e0d2e923baa9b1bdde89fd2d2c159197a" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;connect&lt;/code&gt;.</source>
          <target state="translated">지원되는 명령 : &lt;code&gt;connect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0b920ef57768d484ba1cc526d81f954a574c57f" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list for-push&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;.</source>
          <target state="translated">지원되는 명령 : &lt;code&gt;list for-push&lt;/code&gt; , &lt;code&gt;export&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72ec6998fb5b35dff686188df85ab0e3ad151b49" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list for-push&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;.</source>
          <target state="translated">지원되는 명령 : &lt;code&gt;list for-push&lt;/code&gt; , &lt;code&gt;push&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5829938d9cd5455d30d44c2ed56081b81ad0e8b1" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;.</source>
          <target state="translated">지원되는 명령 : &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4005d18cc0bff6da83fb1c69518c92481df2684" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">지원되는 명령 : &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff15abbc5988387a102f85b87106fa0f9a061a4c" translate="yes" xml:space="preserve">
          <source>Supported commands: &lt;code&gt;stateless-connect&lt;/code&gt;.</source>
          <target state="translated">지원되는 명령 : &lt;code&gt;stateless-connect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d7833eb7ee78a4c26a83fcc81c3d2e9095611eb" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;connect&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;연결&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3a93883be31e9529a29debf1107a5749f91adad7" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;export&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;내보내기&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="18465219e925f5ab7417753a2928593ca3f010cd" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;fetch&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;fetch&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="6b3f007fcd47faeaf9e41420b8dd45804e011830" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;fetch&quot; or &quot;import&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;fetch&quot;또는 &quot;import&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4aca0b5526d05a696e7b36938ee6f6c5a0ea9ae4" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;import&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;가져 오기&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e7ddf6d69b0131cf639e3107da22aa777a2105a4" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;option&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;옵션&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c098533fa12e5c25ff58bd90a0ea089d5ecbd91f" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;push&quot; capability.</source>
          <target state="translated">도우미에 &quot;푸시&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="fb7b526ef7e22c9e1afe23a10d0bc8d29b1f28b6" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;push&quot; or &quot;export&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;푸시&quot;또는 &quot;내보내기&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b4c51ee5ffb300c10c9d8c4078d940f537159814" translate="yes" xml:space="preserve">
          <source>Supported if the helper has the &quot;stateless-connect&quot; capability.</source>
          <target state="translated">헬퍼에 &quot;stateless-connect&quot;기능이있는 경우 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="05ab661bd504730c5b7114057d0bdfc9f5d779d8" translate="yes" xml:space="preserve">
          <source>Supports file additions, removals, and commits that affect binary files.</source>
          <target state="translated">이진 파일에 영향을주는 파일 추가, 제거 및 커밋을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="837f71448f49e2e0d9f370a0f4924a3332c3ce70" translate="yes" xml:space="preserve">
          <source>Suppose a shared repository is set up in /pub/repo.git on the host foo.com. Then as an individual committer you can clone the shared repository over ssh with:</source>
          <target state="translated">공유 저장소가 호스트 foo.com의 /pub/repo.git에 설정되어 있다고 가정하십시오. 그런 다음 개별 커미터로 다음을 사용하여 ssh를 통해 공유 저장소를 복제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="776b1e3e664257166a794955fe1e330d0ed23c81" translate="yes" xml:space="preserve">
          <source>Suppose further that the two development lines merge cleanly at C, so no conflict resolution is required.</source>
          <target state="translated">두 개의 개발 라인이 C에서 깔끔하게 병합되므로 충돌 해결이 필요하지 않다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="e8f9a38765e97d2341920d57addc2939bc25d7eb" translate="yes" xml:space="preserve">
          <source>Suppose that Alice has started a new project with a Git repository in /home/alice/project, and that Bob, who has a home directory on the same machine, wants to contribute.</source>
          <target state="translated">Alice가 / home / alice / project에서 Git 저장소를 사용하여 새 프로젝트를 시작했으며 동일한 시스템에 홈 디렉토리가있는 Bob이 참여하려고한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="f0185bb1f9b382ec2ad8024131a049405c5d0a74" translate="yes" xml:space="preserve">
          <source>Suppose that in the meantime on the lower line of development somebody adds a new calling site for that function at commit Y. The commits from Z leading to B all assume the old semantics of that function and the callers and the callee are consistent with each other. There is no bug at B, either.</source>
          <target state="translated">개발의 하위 라인에 누군가가 커밋 Y에서 해당 함수에 대한 새로운 호출 사이트를 추가한다고 가정하십시오. Z에서 B로 이어지는 커밋은 모두 해당 함수의 오래된 의미를 가정하고 호출자와 호출 수신자는 서로 일치한다고 가정합니다 . B에도 버그가 없습니다.</target>
        </trans-unit>
        <trans-unit id="391a0e24d7cf4e807cbdc6c67d247a126500a7a1" translate="yes" xml:space="preserve">
          <source>Suppose that on the upper line of development, the meaning of one of the functions that exists at Z is changed at commit X. The commits from Z leading to A change both the function&amp;rsquo;s implementation and all calling sites that exist at Z, as well as new calling sites they add, to be consistent. There is no bug at A.</source>
          <target state="translated">개발의 상위 라인에서 Z에 존재하는 함수 중 하나의 의미가 커밋 X에서 변경된다고 가정합니다. Z에서 A로 이어지는 커밋은 함수의 구현과 Z에 존재하는 모든 호출 사이트뿐만 아니라 그들이 추가하는 새로운 호출 사이트, 일관성. A에는 버그가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4264938eda486beabd24f72d431c53e3aa7556fd" translate="yes" xml:space="preserve">
          <source>Suppose that you create a branch &lt;code&gt;mywork&lt;/code&gt; on a remote-tracking branch &lt;code&gt;origin&lt;/code&gt;, and create some commits on top of it:</source>
          <target state="translated">원격 추적 브랜치 &lt;code&gt;origin&lt;/code&gt; 에서 브랜치 &lt;code&gt;mywork&lt;/code&gt; 를 작성하고 그 위에 커밋을 작성한다고 가정 하십시오.</target>
        </trans-unit>
        <trans-unit id="3c9c906e2a1276113a369eaaabf56387154b9496" translate="yes" xml:space="preserve">
          <source>Suppose that you have created lots of logically separate changes and committed them together. Then, later you decide that it might be better to have each logical chunk associated with its own commit. You can use git reset to rewind history without changing the contents of your local files, and then successively use &lt;code&gt;git add -p&lt;/code&gt; to interactively select which hunks to include into each commit, using &lt;code&gt;git commit -c&lt;/code&gt; to pre-populate the commit message.</source>
          <target state="translated">논리적으로 분리 된 많은 변경 사항을 만들어 함께 커밋했다고 가정합니다. 그런 다음 나중에 각 논리적 청크를 자체 커밋과 연결하는 것이 더 나을 수도 있습니다. git reset-을 사용하여 로컬 파일의 내용을 변경하지 않고 기록을 되 감은 다음 &lt;code&gt;git add -p&lt;/code&gt; 를 사용 하여 커밋 메시지를 미리 채우려면 &lt;code&gt;git commit -c&lt;/code&gt; 를 사용하여 각 커밋에 포함 할 덩어리를 대화식으로 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="02fbd8fc87f2a350a49d8620ee0b30d4bf4e4abd" translate="yes" xml:space="preserve">
          <source>Suppose version 2.6.18 of your project worked, but the version at &quot;master&quot; crashes. Sometimes the best way to find the cause of such a regression is to perform a brute-force search through the project&amp;rsquo;s history to find the particular commit that caused the problem. The &lt;a href=&quot;git-bisect&quot;&gt;git-bisect[1]&lt;/a&gt; command can help you do this:</source>
          <target state="translated">프로젝트의 버전 2.6.18이 작동했지만 &quot;마스터&quot;버전이 충돌한다고 가정합니다. 때로는 이러한 회귀의 원인을 찾는 가장 좋은 방법은 프로젝트 기록을 통해 무차별 검색을 수행하여 문제를 일으킨 특정 커밋을 찾는 것입니다. &lt;a href=&quot;git-bisect&quot;&gt;자식-양분 [1]&lt;/a&gt; 명령을 사용하면이 작업을 수행 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fe43e13972d777424e11db2803667e644671ba7d" translate="yes" xml:space="preserve">
          <source>Suppose you are a contributor to a large project, and you want to add a complicated feature, and to present it to the other developers in a way that makes it easy for them to read your changes, verify that they are correct, and understand why you made each change.</source>
          <target state="translated">대규모 프로젝트에 기고하고 복잡한 기능을 추가하고 변경 사항을 쉽게 읽고 변경 사항이 올바른지 확인하고 이유를 이해하기 쉬운 방식으로 다른 개발자에게 제공하려고한다고 가정합니다. 당신은 각각을 변경했습니다.</target>
        </trans-unit>
        <trans-unit id="3acc0c164272600e31526ab46c74892c1aa07162" translate="yes" xml:space="preserve">
          <source>Suppose you are interrupted by an urgent fix request while you are in the middle of a large change. The files in your working tree are not in any shape to be committed yet, but you need to get to the other branch for a quick bugfix.</source>
          <target state="translated">대규모 변경 중에 긴급 수정 요청이 중단되었다고 가정합니다. 작업 트리의 파일은 아직 커밋되지 않았지만 빠른 버그 수정을 위해 다른 지점으로 이동해야합니다.</target>
        </trans-unit>
        <trans-unit id="206336da1c56023f89c7e12354f95287caca26a2" translate="yes" xml:space="preserve">
          <source>Suppose you are working on something and you commit it, and then you continue working a bit more, but now you think that what you have in your working tree should be in another branch that has nothing to do with what you committed previously. You can start a new branch and reset it while keeping the changes in your working tree.</source>
          <target state="translated">당신이 어떤 일을하고 있고 그것을 저지른 다음에 조금 더 계속 일한다고 가정 해 봅시다. 그러나 지금 당신은 당신의 작업 트리에있는 것이 이전에 커밋 한 것과 아무 관련이없는 다른 브랜치에 있어야한다고 생각합니다. 작업 트리에서 변경 사항을 유지하면서 새 분기를 시작하고 재설정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25caa4df3e00bbf0c1bcbf48ca3bbcb805b36ab6" translate="yes" xml:space="preserve">
          <source>Suppose you have added a file to your index, but later decide you do not want to add it to your commit. You can remove the file from the index while keeping your changes with git reset.</source>
          <target state="translated">인덱스에 파일을 추가했지만 나중에 커밋에 추가하지 않기로 결정했다고 가정하십시오. git reset으로 변경 사항을 유지하면서 인덱스에서 파일을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9419c8de1f4e3152ef10e8d631b17a6a8c4bb66f" translate="yes" xml:space="preserve">
          <source>Suppose you know that the commit e05db0fd fixed a certain problem. You&amp;rsquo;d like to find the earliest tagged release that contains that fix.</source>
          <target state="translated">커밋 e05db0fd가 특정 문제를 해결했다고 가정 해 봅시다. 해당 픽스가 포함 된 가장 빠른 태그 릴리스를 찾고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="c40ef08f6cb59edadae067c6870364980c310ebf" translate="yes" xml:space="preserve">
          <source>Suppose you specified &lt;code&gt;foo&lt;/code&gt; as the &amp;lt;paths&amp;gt;. We shall call commits that modify &lt;code&gt;foo&lt;/code&gt; !TREESAME, and the rest TREESAME. (In a diff filtered for &lt;code&gt;foo&lt;/code&gt;, they look different and equal, respectively.)</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; 를 &amp;lt;paths&amp;gt;로 지정 했다고 가정하십시오 . &lt;code&gt;foo&lt;/code&gt; ! TREESAME 및 나머지 TREESAME 를 수정하는 커밋을 호출 합니다. ( &lt;code&gt;foo&lt;/code&gt; 로 필터링 된 diff에서는 각각 다르게 보이고 동일하게 보입니다.)</target>
        </trans-unit>
        <trans-unit id="cb2a200ea83c58efe22ad112266f5c75d08a4a2e" translate="yes" xml:space="preserve">
          <source>Suppose you want to check whether two branches point at the same point in history.</source>
          <target state="translated">두 분기가 히스토리에서 동일한 지점을 가리키는 지 확인하려고한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="a4ad635bf26628e292f1bfd04aa9f0a4ae18d146" translate="yes" xml:space="preserve">
          <source>Suppose you want to know how many commits you&amp;rsquo;ve made on &lt;code&gt;mybranch&lt;/code&gt; since it diverged from &lt;code&gt;origin&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;mybranch&lt;/code&gt; 가 &lt;code&gt;origin&lt;/code&gt; 에서 벗어난 이후 얼마나 많은 커밋을했는지 알고 싶다고 가정 해보십시오 .</target>
        </trans-unit>
        <trans-unit id="f9ddeae1484388d5dab75e34df1cfd67e52a3e70" translate="yes" xml:space="preserve">
          <source>Suppose you want to rebase the side branch starting at &quot;A&quot; to &quot;Q&quot;. Make sure that the current HEAD is &quot;B&quot;, and call</source>
          <target state="translated">&quot;A&quot;에서 &quot;Q&quot;로 시작하는 사이드 브랜치를 리베이스한다고 가정합니다. 현재 HEAD가 &quot;B&quot;인지 확인하고 전화하십시오.</target>
        </trans-unit>
        <trans-unit id="b5613771383533c24d3d428fdc1ae60e9fd438c4" translate="yes" xml:space="preserve">
          <source>Suppose you want to remove a file (containing confidential information or copyright violation) from all commits:</source>
          <target state="translated">모든 커밋에서 파일 (기밀 정보 또는 저작권 위반 포함)을 제거한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ff7d0768a57dca637d6eab253f0d487ae1222161" translate="yes" xml:space="preserve">
          <source>Suppose you would like to see all the commits reachable from the branch head named &lt;code&gt;master&lt;/code&gt; but not from any other head in your repository.</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 라는 브랜치 헤드에서 도달 할 수 있지만 리포지토리의 다른 헤드에서는 도달 할 수없는 모든 커밋을보고 싶다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="9946995b81548e47df6c8b8392c1840733fdb964" translate="yes" xml:space="preserve">
          <source>Suppress all output, including the listing of updated refs, unless an error occurs. Progress is not reported to the standard error stream.</source>
          <target state="translated">오류가 발생하지 않는 한 업데이트 된 참조 목록을 포함하여 모든 출력을 억제하십시오. 진행률은 표준 오류 스트림에보고되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4b3a6cd7a8560fe90c65c121ee87d36135f6602" translate="yes" xml:space="preserve">
          <source>Suppress all progress reports.</source>
          <target state="translated">모든 진행률 보고서를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a819bd2ff05cd55161823638237268e190be312a" translate="yes" xml:space="preserve">
          <source>Suppress commit description and provide a commit count summary only.</source>
          <target state="translated">커밋 설명을 억제하고 커밋 수 요약 만 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="e799a643bdb9c82fda51c43573cb85b70de9e54e" translate="yes" xml:space="preserve">
          <source>Suppress commit summary message.</source>
          <target state="translated">커밋 요약 메시지를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a696049e271af3ebf56a00bfbec639053a19da0" translate="yes" xml:space="preserve">
          <source>Suppress diff output. Useful for commands like &lt;code&gt;git show&lt;/code&gt; that show the patch by default, or to cancel the effect of &lt;code&gt;--patch&lt;/code&gt;.</source>
          <target state="translated">diff 출력을 억제합니다. 기본적으로 패치를 표시하거나 &lt;code&gt;--patch&lt;/code&gt; 의 효과를 취소하는 &lt;code&gt;git show&lt;/code&gt; 같은 명령에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="93e56a37493c6ba4434b0b6ea5eb008e9221a320" translate="yes" xml:space="preserve">
          <source>Suppress the author name and timestamp from the output.</source>
          <target state="translated">출력에서 작성자 이름 및 시간 소인을 억제하십시오.</target>
        </trans-unit>
        <trans-unit id="f43798729bfff9f209d330c349626cb5165ac751" translate="yes" xml:space="preserve">
          <source>Swap two inputs; that is, show differences from index or on-disk file to tree contents.</source>
          <target state="translated">두 입력을 교환하십시오. 즉, 인덱스 또는 디스크상의 파일과 트리 내용의 차이점을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e5e55f7f46ad773b6efc6aca47e818298efdba7d" translate="yes" xml:space="preserve">
          <source>Switch branches</source>
          <target state="translated">분기 전환</target>
        </trans-unit>
        <trans-unit id="c1c3479fb48988243819a9ed632d7db49472e85a" translate="yes" xml:space="preserve">
          <source>Switch branches or restore working tree files</source>
          <target state="translated">분기 전환 또는 작업 트리 파일 복원</target>
        </trans-unit>
        <trans-unit id="dfdb03e90173f2e2bacd7c02f01c4407ebc5e4a7" translate="yes" xml:space="preserve">
          <source>Switch to &lt;code&gt;topic/wip&lt;/code&gt; branch and keep working.</source>
          <target state="translated">&lt;code&gt;topic/wip&lt;/code&gt; 브랜치로 전환 하고 계속 작동합니다.</target>
        </trans-unit>
        <trans-unit id="376cbb6cbd05a4fda1d6b5e220f115dcce8e44f1" translate="yes" xml:space="preserve">
          <source>Switch to a commit for inspection and discardable experiments. See the &quot;DETACHED HEAD&quot; section in &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; for details.</source>
          <target state="translated">검사 및 폐기 가능한 실험을 위해 커밋으로 전환하십시오. 자세한 내용은 &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; 의 &quot;DETACHED HEAD&quot;섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0362a7c9eb4dad56855ff5dd55a91d5b93e6f9c7" translate="yes" xml:space="preserve">
          <source>Switch to a specified branch. The working tree and the index are updated to match the branch. All new commits will be added to the tip of this branch.</source>
          <target state="translated">지정된 분기로 전환하십시오. 작업 트리와 인덱스가 분기와 일치하도록 업데이트됩니다. 모든 새로운 커밋이이 브랜치의 끝에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c4a37023c84f04e66def4788394f47d95de02383" translate="yes" xml:space="preserve">
          <source>Switching branches does not require a clean index and working tree (i.e. no differences compared to &lt;code&gt;HEAD&lt;/code&gt;). The operation is aborted however if the operation leads to loss of local changes, unless told otherwise with &lt;code&gt;--discard-changes&lt;/code&gt; or &lt;code&gt;--merge&lt;/code&gt;.</source>
          <target state="translated">스위칭 브랜치에는 깨끗한 인덱스와 작업 트리가 필요하지 않습니다 (즉 &lt;code&gt;HEAD&lt;/code&gt; 와 비교하여 차이가 없음 ). 그러나 &lt;code&gt;--discard-changes&lt;/code&gt; 또는 &lt;code&gt;--merge&lt;/code&gt; 로 달리 지시하지 않는 한 작업으로 인해 로컬 변경 내용이 손실되면 작업이 중단됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a44d54fe8d0fbe571632defb5e0f0bfcb635688" translate="yes" xml:space="preserve">
          <source>Symbolic identifiers</source>
          <target state="translated">기호 식별자</target>
        </trans-unit>
        <trans-unit id="edf50a81800d6af816fa28268463b4a137a670b4" translate="yes" xml:space="preserve">
          <source>Symbolic reference: instead of containing the &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; id itself, it is of the format 'ref: refs/some/thing' and when referenced, it recursively dereferences to this reference. '&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;' is a prime example of a symref. Symbolic references are manipulated with the &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref[1]&lt;/a&gt; command.</source>
          <target state="translated">상징적 참조 : &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; ID 자체 를 포함하는 대신 'ref : refs / some / thing'형식이며 참조 할 때이 참조를 재귀 적으로 역 참조합니다. ' &lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt; '는 symref의 주요 예입니다. 기호 참조는 &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref [1]&lt;/a&gt; 명령 으로 조작됩니다 .</target>
        </trans-unit>
        <trans-unit id="6dc4afea6b4b62629fc3af96ff8aeb71d81ce355" translate="yes" xml:space="preserve">
          <source>Symbolic reference: instead of containing the &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; id itself, it is of the format &lt;code&gt;ref: refs/some/thing&lt;/code&gt; and when referenced, it recursively dereferences to this reference. &lt;code&gt;&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;&lt;/code&gt; is a prime example of a symref. Symbolic references are manipulated with the &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref[1]&lt;/a&gt; command.</source>
          <target state="translated">기호 참조 : &lt;a href=&quot;#def_SHA1&quot;&gt;SHA-1&lt;/a&gt; ID 자체 를 포함하는 대신 &lt;code&gt;ref: refs/some/thing&lt;/code&gt; 형식 이며이 참조를 재귀 적으로 참조 해제합니다. &lt;code&gt;&lt;a href=&quot;#def_HEAD&quot;&gt;HEAD&lt;/a&gt;&lt;/code&gt; 는 symref의 주요 예입니다. 기호 참조는 &lt;a href=&quot;git-symbolic-ref&quot;&gt;git-symbolic-ref [1]&lt;/a&gt; 명령 으로 조작됩니다 .</target>
        </trans-unit>
        <trans-unit id="7d980e6b3e0dc3c2265b8f39aea640f21a2c26c7" translate="yes" xml:space="preserve">
          <source>Symlinks in &lt;code&gt;$GIT_DIR&lt;/code&gt; are not resolved before matching.</source>
          <target state="translated">&lt;code&gt;$GIT_DIR&lt;/code&gt; GIT_DIR의 심볼릭 링크는 일치하기 전에 확인되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="905f63092ff26517a7aa8083857b3c8af9707002" translate="yes" xml:space="preserve">
          <source>Sync</source>
          <target state="translated">Sync</target>
        </trans-unit>
        <trans-unit id="1cafa24e02c13e63ccc749c8cc50c089372b01c9" translate="yes" xml:space="preserve">
          <source>Sync options</source>
          <target state="translated">동기화 옵션</target>
        </trans-unit>
        <trans-unit id="a05ba5351cf72e05a13ed22352248517859a3ce9" translate="yes" xml:space="preserve">
          <source>Synchronizes submodules' remote URL configuration setting to the value specified in &lt;code&gt;.gitmodules&lt;/code&gt;. It will only affect those submodules which already have a URL entry in .git/config (that is the case when they are initialized or freshly added). This is useful when submodule URLs change upstream and you need to update your local repositories accordingly.</source>
          <target state="translated">하위 모듈의 원격 URL 구성 설정을 &lt;code&gt;.gitmodules&lt;/code&gt; 에 지정된 값으로 동기화합니다 . .git / config에 이미 URL 항목이있는 하위 모듈에만 영향을 미칩니다 (즉, 초기화되거나 새로 추가 된 경우). 하위 모듈 URL이 업스트림으로 변경되어 로컬 리포지토리를 적절히 업데이트해야 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3ac8d1a1aa5500a3e968826312a150affc9dc46d" translate="yes" xml:space="preserve">
          <source>Syncing repositories</source>
          <target state="translated">리포지토리 동기화</target>
        </trans-unit>
        <trans-unit id="566e604d58292e23d183e78e39f3823e9b42de23" translate="yes" xml:space="preserve">
          <source>Synonym for --dirstat=cumulative</source>
          <target state="translated">--dirstat = cumulative의 동의어</target>
        </trans-unit>
        <trans-unit id="f1c4d35b0c03f286600f7fb27eae33fe27989165" translate="yes" xml:space="preserve">
          <source>Synonym for --dirstat=files,param1,param2&amp;hellip;​</source>
          <target state="translated">--dirstat = files, param1, param2의 동의어&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="030318e98e2891ff258d5f1c486159aabe2ec3cd" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt; (the noun).</source>
          <target state="translated">&lt;a href=&quot;#def_commit&quot;&gt;커밋의&lt;/a&gt; 동의어 (명사).</target>
        </trans-unit>
        <trans-unit id="98387ba9809590c01ed4197e28a198c994b76d39" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;.</source>
          <target state="translated">동의어 &lt;a href=&quot;#def_object_name&quot;&gt;개체 이름&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05205baafaafa5f371ceb6761f66c9a9092bfca8" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt; (for arch people).</source>
          <target state="translated">&lt;a href=&quot;#def_repository&quot;&gt;저장소의&lt;/a&gt; 동의어 (아치 사용자 용)</target>
        </trans-unit>
        <trans-unit id="bd983733ce10be3d6383ba3ae94c790c5998f587" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;--date=relative&lt;/code&gt;.</source>
          <target state="translated">동의어 &lt;code&gt;--date=relative&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7204033ad0a3ce5a123aa68893dbb1ec2d44eb7f" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;-p --raw&lt;/code&gt;.</source>
          <target state="translated">동의어 &lt;code&gt;-p --raw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2c85a45d4841ec1bc0daa5da30d63888f50f751" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;-p --stat&lt;/code&gt;.</source>
          <target state="translated">동의어 &lt;code&gt;-p --stat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4826ecc5c9ae249b105cc0f800bf317e1bf3ce71" translate="yes" xml:space="preserve">
          <source>Synonym to &lt;code&gt;--more=-1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--more=-1&lt;/code&gt; 과 동의어</target>
        </trans-unit>
        <trans-unit id="375d34b627071e9b56cd3502d59bf963af19d37c" translate="yes" xml:space="preserve">
          <source>Synonym to &lt;code&gt;merge.log&lt;/code&gt;; this is deprecated and will be removed in the future.</source>
          <target state="translated">&lt;code&gt;merge.log&lt;/code&gt; 와 동의어 ; 이것은 더 이상 사용되지 않으며 향후 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="d87db41828b59d9f281eb9d60b0fac7e88c656b9" translate="yes" xml:space="preserve">
          <source>Synonyms to --log and --no-log; these are deprecated and will be removed in the future.</source>
          <target state="translated">--log 및 --no-log와 동의어; 이들은 더 이상 사용되지 않으며 향후 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="c9c7aa6b4fd156059c823cdabeac32daf66bec16" translate="yes" xml:space="preserve">
          <source>Synonyms to --stat and --no-stat; these are deprecated and will be removed in the future.</source>
          <target state="translated">--stat 및 --no-stat의 동의어; 이들은 더 이상 사용되지 않으며 향후 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="121e826ad7717bacfd25c6cf738291790df9e550" translate="yes" xml:space="preserve">
          <source>Syntax is compatible with the file used by &lt;code&gt;git cvsimport&lt;/code&gt; but an empty email address can be supplied with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">구문은 &lt;code&gt;git cvsimport&lt;/code&gt; 에서 사용하는 파일과 호환 되지만 빈 전자 메일 주소는 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 로 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd2d182068c3eb81ead850c75865e8ae2f054c99" translate="yes" xml:space="preserve">
          <source>System-wide configuration file.</source>
          <target state="translated">시스템 전체 구성 파일</target>
        </trans-unit>
        <trans-unit id="bb78aa3d24f5df42764064db56cde78ca1a563d8" translate="yes" xml:space="preserve">
          <source>T: change in the type of the file</source>
          <target state="translated">T : 파일 형식 변경</target>
        </trans-unit>
        <trans-unit id="a5e95b00d8bbc7641f64bca05aef94e0873eb866" translate="yes" xml:space="preserve">
          <source>THIS COMMAND IS EXPERIMENTAL. ITS BEHAVIOR, AND THE BEHAVIOR OF OTHER COMMANDS IN THE PRESENCE OF SPARSE-CHECKOUTS, WILL LIKELY CHANGE IN THE FUTURE.</source>
          <target state="translated">이 명령은 실험적입니다. 스파 스 체크 아웃의 존재에서 그 행동과 다른 명령의 행동은 미래에 거의 변하지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="9667ca46bdeede85b6c2fc52e7779cc06938e375" translate="yes" xml:space="preserve">
          <source>THIS COMMAND IS EXPERIMENTAL. THE BEHAVIOR MAY CHANGE.</source>
          <target state="translated">이 명령은 실험적입니다. 행동이 바뀔 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="667949023cc3f454cb0d70e83c52143e1650458d" translate="yes" xml:space="preserve">
          <source>TRAILER:</source>
          <target state="translated">TRAILER:</target>
        </trans-unit>
        <trans-unit id="a2ba9a257606db8185ab32e1350e244ce43cc422" translate="yes" xml:space="preserve">
          <source>Tag Object</source>
          <target state="translated">태그 객체</target>
        </trans-unit>
        <trans-unit id="cb8b1e1903f812d19eec6ff05583389fd13d1603" translate="yes" xml:space="preserve">
          <source>Tag format</source>
          <target state="translated">태그 형식</target>
        </trans-unit>
        <trans-unit id="7e41343aeba4393f005c76977eda409bbd77862f" translate="yes" xml:space="preserve">
          <source>Tag names are automatically prefixed with &lt;code&gt;refs/tags/&lt;/code&gt; when stored in Git, so importing the CVS branch symbol &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; would use just &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, and fast-import will write the corresponding ref as &lt;code&gt;refs/tags/RELENG-1_0-FINAL&lt;/code&gt;.</source>
          <target state="translated">태그 이름이 자동으로 접두어 &lt;code&gt;refs/tags/&lt;/code&gt; 그래서 CVS 가지 기호를 가져, 힘내에 저장 &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; 단지 사용하는 것이 &lt;code&gt;RELENG-1_0-FINAL&lt;/code&gt; 에 대한 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; , 빠른 가져 오기는 해당 심판 쓸 것 &lt;code&gt;refs/tags/RELENG-1_0-FINAL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e6fe4e0ae7885e683d9ee3f683c218e6902b977" translate="yes" xml:space="preserve">
          <source>Tag objects (created with &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u&lt;/code&gt;) are called &quot;annotated&quot; tags; they contain a creation date, the tagger name and e-mail, a tagging message, and an optional GnuPG signature. Whereas a &quot;lightweight&quot; tag is simply a name for an object (usually a commit object).</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-s&lt;/code&gt; 또는 &lt;code&gt;-u&lt;/code&gt; 로 작성된 태그 객체를 &quot;주석&quot;태그라고합니다. 여기에는 생성 날짜, 태거 이름 및 전자 메일, 태깅 메시지 및 선택적 GnuPG 서명이 포함됩니다. &quot;가벼운&quot;태그는 단순히 객체 (일반적으로 커밋 객체)의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="71ea1d47718752d76e2ffd9d2603ad43ca73b3c9" translate="yes" xml:space="preserve">
          <source>Tagging a version</source>
          <target state="translated">버전 태그</target>
        </trans-unit>
        <trans-unit id="637cc41ee731974198f97641d9bdfb130460784b" translate="yes" xml:space="preserve">
          <source>Tags are expected to always point at the same version of a project, while heads are expected to advance as development progresses.</source>
          <target state="translated">태그는 항상 같은 버전의 프로젝트를 가리킬 것으로 예상되는 반면, 개발이 진행됨에 따라 헤드는 발전 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="888bc919d88641f62426fddc6b7cfc9f6452b8d3" translate="yes" xml:space="preserve">
          <source>Take an existing commit object, and reuse the log message and the authorship information (including the timestamp) when creating the commit.</source>
          <target state="translated">기존 커밋 개체를 가져 와서 커밋을 만들 때 로그 메시지와 제작 정보 (타임 스탬프 포함)를 재사용하십시오.</target>
        </trans-unit>
        <trans-unit id="69d5f1e03c82cbcd587369170c6624b0cf043d55" translate="yes" xml:space="preserve">
          <source>Take the commit message from the given file. This option disables the &lt;code&gt;--edit&lt;/code&gt; option.</source>
          <target state="translated">주어진 파일에서 커밋 메시지를 가져옵니다. 이 옵션은 &lt;code&gt;--edit&lt;/code&gt; 옵션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="55362ac1695784c6e28770360066065f70c4271a" translate="yes" xml:space="preserve">
          <source>Take the commit message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the message from the standard input.</source>
          <target state="translated">주어진 파일에서 커밋 메시지를 가져옵니다. &lt;code&gt;-&lt;/code&gt; 를 사용 하여 표준 입력에서 메시지를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="e36d4d8811a867676a670c71431af6f45b8cdbfc" translate="yes" xml:space="preserve">
          <source>Take the configuration from the given file instead of .git/config. Using the &quot;--global&quot; option forces this to ~/.gitconfig. Using the &quot;--system&quot; option forces this to $(prefix)/etc/gitconfig.</source>
          <target state="translated">.git / config 대신 지정된 파일에서 구성을 가져옵니다. &quot;--global&quot;옵션을 사용하면 이것을 ~ / .gitconfig로 설정합니다. &quot;--system&quot;옵션을 사용하면 $ (prefix) / etc / gitconfig가됩니다.</target>
        </trans-unit>
        <trans-unit id="29a57524801de08e4acaf7aa5d5fef7d3a95fdaf" translate="yes" xml:space="preserve">
          <source>Take the given blob object (for example, another note) as the note message. (Use &lt;code&gt;git notes copy &amp;lt;object&amp;gt;&lt;/code&gt; instead to copy notes between objects.)</source>
          <target state="translated">지정된 Blob 객체 (예 : 다른 메모)를 메모 메시지로 사용하십시오. ( &lt;code&gt;git notes copy &amp;lt;object&amp;gt;&lt;/code&gt; 간에 메모를 복사 하려면 git notes copy &amp;lt;object&amp;gt; 를 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="d362e00efeb54e4840d9ea63f1d18d0cce50b4f2" translate="yes" xml:space="preserve">
          <source>Take the list of merged objects from &amp;lt;file&amp;gt; instead of stdin.</source>
          <target state="translated">stdin 대신 &amp;lt;file&amp;gt;에서 병합 된 객체 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="85714dc37d705ec3059aca2b86357cf12078cff0" translate="yes" xml:space="preserve">
          <source>Take the list of refs from stdin, one per line. If there are refs specified on the command line in addition to this option, then the refs from stdin are processed after those on the command line.</source>
          <target state="translated">stdin의 참조 목록을 한 줄에 하나씩 가져옵니다. 이 옵션 외에 명령 행에 지정된 참조가있는 경우 stdin의 참조는 명령 행의 참조 이후에 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="e793a474854bfcd7a2387829ec157d014acaec34" translate="yes" xml:space="preserve">
          <source>Take the note message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the note message from the standard input. Lines starting with &lt;code&gt;#&lt;/code&gt; and empty lines other than a single line between paragraphs will be stripped out.</source>
          <target state="translated">주어진 파일에서 메모 메시지를 가져옵니다. 표준 입력에서 메모 메시지를 읽으려면 &lt;code&gt;-&lt;/code&gt; 를 사용하십시오 . &lt;code&gt;#&lt;/code&gt; 으로 시작하고 단락 사이의 한 줄 이외의 빈 줄은 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b415454b3e57aca4cd9775be68c013d0b1cba35f" translate="yes" xml:space="preserve">
          <source>Take the tag message from the given file. Use &lt;code&gt;-&lt;/code&gt; to read the message from the standard input. Implies &lt;code&gt;-a&lt;/code&gt; if none of &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; is given.</source>
          <target state="translated">주어진 파일에서 태그 메시지를 가져옵니다. &lt;code&gt;-&lt;/code&gt; 를 사용 하여 표준 입력에서 메시지를 읽습니다. &lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-s&lt;/code&gt; 또는 &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; 가 없으면 &lt;code&gt;-a&lt;/code&gt; 를 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="437fabd9a3b90a4e3feee997e0efd394e0e18037" translate="yes" xml:space="preserve">
          <source>Take the version from the current branch as the tentative merge result, and declare that the merge has conflicts. This is suitable for binary files that do not have a well-defined merge semantics.</source>
          <target state="translated">현재 분기의 버전을 임시 병합 결과로 가져 와서 병합이 충돌한다고 선언하십시오. 이는 잘 정의 된 병합 의미가없는 이진 파일에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="8adfe6e8bfbfb71c863cfc8d3c7f83de8a17ccfc" translate="yes" xml:space="preserve">
          <source>Takes the list of merged objects on stdin and produces a suitable commit message to be used for the merge commit, usually to be passed as the &lt;code&gt;&amp;lt;merge-message&amp;gt;&lt;/code&gt; argument of &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">stdin에서 병합 된 오브젝트 목록을 가져 와서 병합 커밋에 사용될 적절한 커밋 메시지를 생성합니다. 일반적 으로 &lt;code&gt;git merge&lt;/code&gt; 의 &lt;code&gt;&amp;lt;merge-message&amp;gt;&lt;/code&gt; 인수로 전달 됩니다.</target>
        </trans-unit>
        <trans-unit id="a792b2d24cbb9bea552de7c52e443e6ec570f86e" translate="yes" xml:space="preserve">
          <source>Takes the patches given on the command line and emails them out. Patches can be specified as files, directories (which will send all files in the directory), or directly as a revision list. In the last case, any format accepted by &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; can be passed to git send-email.</source>
          <target state="translated">명령 행에 제공된 패치를 가져 와서 이메일로 보냅니다. 패치는 파일, 디렉토리 (디렉토리의 모든 파일을 전송 함) 또는 직접 개정 목록으로 지정할 수 있습니다. 마지막으로, &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]에&lt;/a&gt; 의해 허용 된 모든 형식은 git send-email로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a0ff7754ecf08c3c8186e018764aeb2fd2691af" translate="yes" xml:space="preserve">
          <source>Talk to the IMAP server using git&amp;rsquo;s own IMAP routines instead of using libcurl. Ignored if Git was built with the NO_OPENSSL option set.</source>
          <target state="translated">libcurl 대신 git 자신의 IMAP 루틴을 사용하여 IMAP 서버와 대화하십시오. NO_OPENSSL 옵션 세트로 Git을 빌드 한 경우 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8452733fe9983e27bdd86ccd2806b4879b9eed76" translate="yes" xml:space="preserve">
          <source>Target of the home link on the top of all pages (the first part of view &quot;breadcrumbs&quot;). By default it is set to the absolute URI of a current page (to the value of &lt;code&gt;$my_uri&lt;/code&gt; variable, or to &quot;/&quot; if &lt;code&gt;$my_uri&lt;/code&gt; is undefined or is an empty string).</source>
          <target state="translated">모든 페이지 상단의 홈 링크 대상 (보기의 &quot;빵 부스러기&quot;). 기본적으로 현재 페이지의 절대 URI ( &lt;code&gt;$my_uri&lt;/code&gt; 변수 의 값 또는 &lt;code&gt;$my_uri&lt;/code&gt; 가 정의되지 않았거나 빈 문자열 인 경우 &quot;/&quot; )로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b83c8f8bfe5de4730b897d69d4046995d166efe4" translate="yes" xml:space="preserve">
          <source>Targets are defined using a VTable allowing easy extension to other formats in the future. This might be used to define a binary format, for example.</source>
          <target state="translated">대상은 향후 다른 형식으로 쉽게 확장 할 수있는 VTable을 사용하여 정의됩니다. 예를 들어 이진 형식을 정의하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b51ba0493561f3b3deddd8211a5a385cd8601db7" translate="yes" xml:space="preserve">
          <source>Technical discussion</source>
          <target state="translated">기술 토론</target>
        </trans-unit>
        <trans-unit id="7d2e519ddfe0c57b9b7de69eeaa388f193a9848e" translate="yes" xml:space="preserve">
          <source>Tell Git that canonical representation of files in the repository has changed over time (e.g. earlier commits record text files with CRLF line endings, but recent ones use LF line endings). In such a repository, Git can convert the data recorded in commits to a canonical form before performing a merge to reduce unnecessary conflicts. For more information, see section &quot;Merging branches with differing checkin/checkout attributes&quot; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;.</source>
          <target state="translated">저장소에서 파일의 표준 표현은 시간이 지남에 따라 변경되었다고 알려주십시오 (예 : 이전에는 CRLF 줄 끝을 가진 레코드 텍스트 파일을 커밋하지만 최근 파일은 LF 줄 끝을 사용합니다). 이러한 리포지토리에서 Git은 병합을 수행하기 전에 커밋에 기록 된 데이터를 표준 형식으로 변환하여 불필요한 충돌을 줄입니다. 자세한 내용은 &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]의&lt;/a&gt; &quot;다른 체크인 / 체크 아웃 속성으로 분기 병합&quot;섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5b3a0f2444b1d5713e25e3bc88878530e280cdf" translate="yes" xml:space="preserve">
          <source>Tell Git to use it.</source>
          <target state="translated">Git에게 사용하도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="bebd78f164bb96ec184a42572b9740f676dbf149" translate="yes" xml:space="preserve">
          <source>Tell cvsexportcommit that the current working directory is not only a Git checkout, but also the CVS checkout. Therefore, Git will reset the working directory to the parent commit before proceeding.</source>
          <target state="translated">cvsexportcommit에게 현재 작업 디렉토리가 Git 체크 아웃 일뿐만 아니라 CVS 체크 아웃임을 알려주십시오. 따라서 Git은 계속하기 전에 작업 디렉토리를 상위 커밋으로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="ccc8867e7c10f12bec70f18c0ebdd4b98ffcfd5b" translate="yes" xml:space="preserve">
          <source>Tell git-credential-cache&amp;mdash;​daemon to ignore SIGHUP, instead of quitting.</source>
          <target state="translated">git-credential-cache에게 종료 대신 SIGHUP을 무시하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="500ee09ba16068aaf0936f5ee6b5ef58c4f8bd06" translate="yes" xml:space="preserve">
          <source>Tell the command to automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected.</source>
          <target state="translated">수정 및 삭제 된 파일을 자동으로 스테이징하도록 명령에 지시하지만 Git에 알리지 않은 새 파일은 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a69e5b7ab968a315154a9d1fd7cf0d147021841a" translate="yes" xml:space="preserve">
          <source>Telling Git about your changes.</source>
          <target state="translated">변경 사항에 대해 Git에 알리기</target>
        </trans-unit>
        <trans-unit id="52aedbe077c84f7c253f79171da85dc15b08fdf7" translate="yes" xml:space="preserve">
          <source>Telling Git your name</source>
          <target state="translated">Git에게 당신의 이름을 말</target>
        </trans-unit>
        <trans-unit id="47964a2a2b9ba19cb7edfe94ae99ae894e487ad7" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git add&lt;/code&gt; to continue adding files when some files cannot be added due to indexing errors. Equivalent to the &lt;code&gt;--ignore-errors&lt;/code&gt; option of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;. &lt;code&gt;add.ignore-errors&lt;/code&gt; is deprecated, as it does not follow the usual naming convention for configuration variables.</source>
          <target state="translated">지시 &lt;code&gt;git add&lt;/code&gt; 일부 파일이 인덱싱 오류로 인해 추가 할 수없는 경우 파일을 계속 추가 할 수 있습니다. &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; 의 &lt;code&gt;--ignore-errors&lt;/code&gt; 옵션과 동일합니다 . &lt;code&gt;add.ignore-errors&lt;/code&gt; 는 구성 변수에 대한 일반적인 명명 규칙을 따르지 않으므로 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e23c71acb4f3fb6cc5e3124fdbba41789615dcfa" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git apply&lt;/code&gt; how to handle whitespaces, in the same way as the &lt;code&gt;--whitespace&lt;/code&gt; option. See &lt;a href=&quot;git-apply&quot;&gt;git-apply[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;git apply&lt;/code&gt; 에게 &lt;code&gt;--whitespace&lt;/code&gt; 옵션 과 같은 방식으로 공백을 처리하는 방법을 적용 하도록 지시 합니다. &lt;a href=&quot;git-apply&quot;&gt;git-apply [1]을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b4fd4c56fbd55fd6a4b61da1b1b25feb1363cb0" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;git branch&lt;/code&gt;, &lt;code&gt;git switch&lt;/code&gt; and &lt;code&gt;git checkout&lt;/code&gt; to set up new branches so that &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; will appropriately merge from the starting point branch. Note that even if this option is not set, this behavior can be chosen per-branch using the &lt;code&gt;--track&lt;/code&gt; and &lt;code&gt;--no-track&lt;/code&gt; options. The valid settings are: &lt;code&gt;false&lt;/code&gt; &amp;mdash; no automatic setup is done; &lt;code&gt;true&lt;/code&gt; &amp;mdash; automatic setup is done when the starting point is a remote-tracking branch; &lt;code&gt;always&lt;/code&gt; &amp;mdash; automatic setup is done when the starting point is either a local branch or remote-tracking branch. This option defaults to true.</source>
          <target state="translated">지시 &lt;code&gt;git branch&lt;/code&gt; , &lt;code&gt;git switch&lt;/code&gt; 와 &lt;code&gt;git checkout&lt;/code&gt; 수 있도록 새로운 지점을 설정하는 &lt;a href=&quot;git-pull&quot;&gt;자식 풀 [1]&lt;/a&gt; 적절하게 시작 지점 지점에서 병합합니다. 이 옵션을 설정하지 않아도 &lt;code&gt;--track&lt;/code&gt; 및 &lt;code&gt;--no-track&lt;/code&gt; 옵션을 사용하여 지점 별로이 동작을 선택할 수 있습니다. 유효한 설정은 다음과 같습니다. &lt;code&gt;false&lt;/code&gt; &amp;mdash; 자동 설정이 수행되지 않습니다. &lt;code&gt;true&lt;/code&gt; &amp;mdash; 시작점이 원격 추적 분기 인 경우 자동 설정이 수행됩니다. &lt;code&gt;always&lt;/code&gt; &amp;mdash; 시작 지점이 로컬 지점 또는 원격 추적 지점 인 경우 자동 설정이 수행됩니다. 이 옵션의 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="33792c2c707e004799933a452c481ccd3dd6df72" translate="yes" xml:space="preserve">
          <source>Tells &lt;code&gt;merge-recursive&lt;/code&gt; to use a different diff algorithm, which can help avoid mismerges that occur due to unimportant matching lines (such as braces from distinct functions). See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--diff-algorithm&lt;/code&gt;.</source>
          <target state="translated">어떤지 &lt;code&gt;merge-recursive&lt;/code&gt; (예컨대 고유 함수로부터 교정기 등) 중요 매칭 라인 인해 발생할 않도록 mismerges 도움 DIFF 다른 알고리즘을 사용한다. &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--diff-algorithm&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="322e9bf79fc78c188017b38cca0390d8ca24df83" translate="yes" xml:space="preserve">
          <source>Tells Git if the executable bit of files in the working tree is to be honored.</source>
          <target state="translated">작업 트리에있는 파일의 실행 가능한 비트를 준수해야하는지 Git에 알립니다.</target>
        </trans-unit>
        <trans-unit id="e732c8317ebf66ceb1e3db1424bc67bd01187e09" translate="yes" xml:space="preserve">
          <source>Template directory</source>
          <target state="translated">템플릿 디렉토리</target>
        </trans-unit>
        <trans-unit id="ab43df8613b6388c0548cc8be9da228db8e98898" translate="yes" xml:space="preserve">
          <source>Temporarily setting aside work in progress</source>
          <target state="translated">진행중인 작업을 임시로 설정</target>
        </trans-unit>
        <trans-unit id="8e2754fc91f29834706af71cfa26258d56805769" translate="yes" xml:space="preserve">
          <source>Temporary files</source>
          <target state="translated">임시 파일</target>
        </trans-unit>
        <trans-unit id="9c01e9143498ee202aefdfaa27172587b4069975" translate="yes" xml:space="preserve">
          <source>Terminate entries with NUL, instead of LF. This implies the &lt;code&gt;--porcelain=v1&lt;/code&gt; output format if no other format is given.</source>
          <target state="translated">LF 대신 NUL로 항목을 종료하십시오. 다른 형식이 지정되지 않은 경우 &lt;code&gt;--porcelain=v1&lt;/code&gt; 출력 형식을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="07c6a191135373ac9d2aee0a3bde3b658792a63e" translate="yes" xml:space="preserve">
          <source>Terminate with error if there is no &lt;code&gt;done&lt;/code&gt; command at the end of the stream. This option might be useful for detecting errors that cause the frontend to terminate before it has started to write a stream.</source>
          <target state="translated">스트림 끝에 &lt;code&gt;done&lt;/code&gt; 명령 이 없으면 오류로 종료 하십시오. 이 옵션은 스트림 쓰기를 시작하기 전에 프런트 엔드가 종료되는 오류를 감지하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="cf10c8624337ce67bcf480537830a31a54a327a5" translate="yes" xml:space="preserve">
          <source>Test suites are very nice. But when they are used alone, they are supposed to be used so that all the tests are checked after each commit. This means that they are not very efficient, because many tests are run for no interesting result, and they suffer from combinatorial explosion.</source>
          <target state="translated">테스트 스위트는 매우 좋습니다. 그러나 그들이 단독으로 사용될 때, 그들은 모든 커밋 후에 모든 테스트가 확인되도록 사용되어야합니다. 이것은 많은 테스트가 흥미로운 결과를 위해 실행되지 않고 조합 폭발로 고통 받기 때문에 매우 효율적이지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c7039b793911c3e74e0619b364427be7bb23668d" translate="yes" xml:space="preserve">
          <source>Testing has been done using both the CLI CVS client, and the Eclipse CVS plugin. Most functionality works fine with both of these clients.</source>
          <target state="translated">테스트는 CLI CVS 클라이언트와 Eclipse CVS 플러그인을 모두 사용하여 수행되었습니다. 대부분의 기능은이 두 클라이언트 모두에서 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="499b8eda34fd3ef3837b1d2448aadbb6279371d8" translate="yes" xml:space="preserve">
          <source>Testing partial commits</source>
          <target state="translated">부분 커밋 테스트</target>
        </trans-unit>
        <trans-unit id="c5dcd73cdfef43c79255820898dee98a4377a12f" translate="yes" xml:space="preserve">
          <source>Text editor for use by Git commands. The value is meant to be interpreted by the shell when it is used. Examples: &lt;code&gt;~/bin/vi&lt;/code&gt;, &lt;code&gt;$SOME_ENVIRONMENT_VARIABLE&lt;/code&gt;, &lt;code&gt;&quot;C:\Program Files\Vim\gvim.exe&quot;
--nofork&lt;/code&gt;. The order of preference is the &lt;code&gt;$GIT_EDITOR&lt;/code&gt; environment variable, then &lt;code&gt;core.editor&lt;/code&gt; configuration, then &lt;code&gt;$VISUAL&lt;/code&gt;, then &lt;code&gt;$EDITOR&lt;/code&gt;, and then the default chosen at compile time, which is usually &lt;code&gt;vi&lt;/code&gt;.</source>
          <target state="translated">Git 명령에 사용되는 텍스트 편집기. 값은 사용될 때 쉘에 의해 해석됩니다. 예 : &lt;code&gt;~/bin/vi&lt;/code&gt; , &lt;code&gt;$SOME_ENVIRONMENT_VARIABLE&lt;/code&gt; , &lt;code&gt;&quot;C:\Program Files\Vim\gvim.exe&quot; --nofork&lt;/code&gt; . 우선 순위는 &lt;code&gt;$GIT_EDITOR&lt;/code&gt; 환경 변수, &lt;code&gt;core.editor&lt;/code&gt; 구성, &lt;code&gt;$VISUAL&lt;/code&gt; , &lt;code&gt;$EDITOR&lt;/code&gt; 및 컴파일시 선택된 기본값 (일반적으로 &lt;code&gt;vi&lt;/code&gt; ) 입니다.</target>
        </trans-unit>
        <trans-unit id="016aa532b4e9fa7fee1cc89b5c6aa348edd44f21" translate="yes" xml:space="preserve">
          <source>Text editor used by &lt;code&gt;git rebase -i&lt;/code&gt; for editing the rebase instruction file. The value is meant to be interpreted by the shell when it is used. It can be overridden by the &lt;code&gt;GIT_SEQUENCE_EDITOR&lt;/code&gt; environment variable. When not configured the default commit message editor is used instead.</source>
          <target state="translated">rebase 명령 파일을 편집하기 위해 &lt;code&gt;git rebase -i&lt;/code&gt; 에서 사용하는 텍스트 편집기 . 값은 사용될 때 쉘에 의해 해석됩니다. &lt;code&gt;GIT_SEQUENCE_EDITOR&lt;/code&gt; 환경 변수 로 대체 할 수 있습니다 . 구성하지 않으면 기본 커밋 메시지 편집기가 대신 사용됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
