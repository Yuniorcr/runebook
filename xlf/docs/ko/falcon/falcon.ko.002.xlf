<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="falcon">
    <body>
      <group id="falcon">
        <trans-unit id="c1d999784822a8a3684b2199ecb9aaf4a8131cf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;instructions&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Specific guidance for the developer, e.g.: &amp;lsquo;Please migrate to add_proxy(&amp;hellip;)&amp;rsquo;&amp;lsquo;</source>
          <target state="translated">&lt;strong&gt;instructions&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Specific guidance for the developer, e.g.: &amp;lsquo;Please migrate to add_proxy(&amp;hellip;)&amp;rsquo;&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d55a3ed922f5a7107f2c79cb3865466f72e72896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;iterable&lt;/strong&gt; (&lt;em&gt;iterable&lt;/em&gt;) &amp;ndash; An iterable that yields zero or more bytestrings, per PEP-3333</source>
          <target state="translated">&lt;strong&gt;iterable&lt;/strong&gt; ( &lt;em&gt;iterable&lt;/em&gt; ) &amp;ndash; PEP-3333에 따라 0 개 이상의 바이트 스트링을 생성하는 iterable</target>
        </trans-unit>
        <trans-unit id="a2aa56cc2ab85bad84e17fea2416d75d4f859adc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;json&lt;/strong&gt; (&lt;em&gt;JSON serializable&lt;/em&gt;) &amp;ndash; A JSON document to serialize as the body of the request (default: &lt;code&gt;None&lt;/code&gt;). If specified, overrides &lt;code&gt;body&lt;/code&gt; and the Content-Type header in &lt;code&gt;headers&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;json&lt;/strong&gt; ( &lt;em&gt;JSON serializable&lt;/em&gt; ) &amp;ndash; 요청 본문으로 직렬화 할 JSON 문서입니다 (기본값 : &lt;code&gt;None&lt;/code&gt; ). 지정된 경우 &lt;code&gt;headers&lt;/code&gt; 의 &lt;code&gt;body&lt;/code&gt; 및 Content-Type 헤더를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="148290291b85c1a92c3fe04624586ce1ce4edb2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;json&lt;/strong&gt; (&lt;em&gt;JSON serializable&lt;/em&gt;) &amp;ndash; Default JSON document to use in responses. Will be serialized to a string and encoded as UTF-8. Either &lt;em&gt;json&lt;/em&gt; or &lt;em&gt;body&lt;/em&gt; may be specified, but not both.</source>
          <target state="translated">&lt;strong&gt;json&lt;/strong&gt; ( &lt;em&gt;JSON serializable&lt;/em&gt; ) &amp;ndash; 응답에 사용할 기본 JSON 문서입니다. 문자열로 직렬화되고 UTF-8로 인코딩됩니다. 어느 &lt;em&gt;JSON&lt;/em&gt; 또는 &lt;em&gt;몸이&lt;/em&gt; 지정되었지만 둘 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f921135b427e4cd12cf3dfdb0d1cec02fc0b5ce6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keep_blank&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to return fields even if they do not have a value (default &lt;code&gt;False&lt;/code&gt;). For comma-separated values, this option also determines whether or not empty elements in the parsed list are retained.</source>
          <target state="translated">&lt;strong&gt;keep_blank&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to return fields even if they do not have a value (default &lt;code&gt;False&lt;/code&gt; ). For comma-separated values, this option also determines whether or not empty elements in the parsed list are retained.</target>
        </trans-unit>
        <trans-unit id="e9ff29b19291b10fceff25dab7266e0220d98a7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keep_blank_qs_values&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to return fields even if they do not have a value (default &lt;code&gt;False&lt;/code&gt;). For comma-separated values, this option also determines whether or not empty elements in the parsed list are retained.</source>
          <target state="translated">&lt;strong&gt;keep_blank_qs_values&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 값이없는 경우에도 필드를 리턴 하려면 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 (기본값 : &lt;code&gt;False&lt;/code&gt; ). 쉼표로 구분 된 값의 경우이 옵션은 구문 분석 된 목록의 빈 요소가 유지되는지 여부도 결정합니다.</target>
        </trans-unit>
        <trans-unit id="3fc54239fe1f28a456b8f5e2e4571ccd446dceca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;kwargs&lt;/strong&gt; &amp;ndash; URI template &lt;em&gt;name=value&lt;/em&gt; pairs, if any, along with any extra args injected by middleware.</source>
          <target state="translated">&lt;strong&gt;kwargs&lt;/strong&gt; &amp;ndash; 미들웨어에 의해 주입 된 추가 인수와 함께 URI 템플리트 &lt;em&gt;이름 = 값&lt;/em&gt; 쌍 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="0f7eb9cffca8f43f8cb2df226d1a7679b261cb32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;kwargs&lt;/strong&gt; (&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Same as those defined for &lt;code&gt;falcon.testing.create_environ&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;kwargs&lt;/strong&gt; ( &lt;em&gt;선택 사항&lt;/em&gt; ) &amp;ndash; &lt;code&gt;falcon.testing.create_environ&lt;/code&gt; 에 정의 된 것과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7ae3685d8333cf7ddbe1d1b05f6af1e04c4f31b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;loads&lt;/strong&gt; (&lt;em&gt;func&lt;/em&gt;) &amp;ndash; Function to use when deserializing JSON requests.</source>
          <target state="translated">&lt;strong&gt;loads&lt;/strong&gt; (&lt;em&gt;func&lt;/em&gt;) &amp;ndash; Function to use when deserializing JSON requests.</target>
        </trans-unit>
        <trans-unit id="74ed1a87e1e930a31f54dbb57fd31443a30f2110" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;location&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI to provide as the Location header in the response.</source>
          <target state="translated">&lt;strong&gt;location&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 응답에서 Location 헤더로 제공 할 URI입니다.</target>
        </trans-unit>
        <trans-unit id="372767cf20ae27e6d804ace26106aed6bffe4000" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;location&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI to provide as the Location header in the response.</source>
          <target state="translated">&lt;strong&gt;location&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI to provide as the Location header in the response.</target>
        </trans-unit>
        <trans-unit id="77a897a6574dc6e92ca5a3c779ddfa01a18a8153" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Maximum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash; 리턴 할 최대 문자열 길이</target>
        </trans-unit>
        <trans-unit id="6148701af0db02b1e0c3467c719b3c16f62cea2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is greater than this number.</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash;이 숫자보다 큰 경우 값을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="407fe39fbc4ddd985701d3624061d1d51e5d30fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash;이 매개 변수에 허용 된 최대 값으로 설정하십시오. param이 발견되고 해당 값이 max보다 큰 경우 &lt;code&gt;HTTPError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3926c37c3196f6af7efa659956af962a38aaa51a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Maximum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Maximum string length to return, inclusive</target>
        </trans-unit>
        <trans-unit id="ecc5c736ad8e9158c1f8adaf1d5d011600efb313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is greater than this number.</source>
          <target state="translated">&lt;strong&gt;max&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is greater than this number.</target>
        </trans-unit>
        <trans-unit id="4feab799c11a464faf94a1946ecbccd312d6bc02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_age&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;max_age&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="8dc36103b40b1b27c6eb2e6963415d67638d222f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_age&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;max_age&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="6da555df676cd6adda4c0b51be1868f6a76e4bf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;max_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</target>
        </trans-unit>
        <trans-unit id="7415636900f71ea840697d5eb7e26ffd2b63a5d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;max_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the maximum value allowed for this param. If the param is found and its value is greater than max_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</target>
        </trans-unit>
        <trans-unit id="ba96c3af6da6e05365976f04d8b5ecf65a9689d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; A serializable object.</source>
          <target state="translated">&lt;strong&gt;media&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; A serializable object.</target>
        </trans-unit>
        <trans-unit id="629286ebf4ae43a88fde420a5cbfe572a5533e2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An Internet media type to check.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 확인할 인터넷 미디어 유형입니다.</target>
        </trans-unit>
        <trans-unit id="af279faa01b0a0e9daf0ac28759a0e402d1044f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default media type to use as the value for the Content-Type header on responses (default &amp;lsquo;application/json&amp;rsquo;). The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, such as &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 응답에서 Content-Type 헤더의 값으로 사용할 기본 미디어 유형 (기본 'application / json'). &lt;code&gt;falcon&lt;/code&gt; 모듈 등의 일반적인 미디어 유형, 상수의 수 제공 &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt; 등,</target>
        </trans-unit>
        <trans-unit id="450d3ab60c3d087d46a6fe01675ce7451cfd8e82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An Internet media type to check.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An Internet media type to check.</target>
        </trans-unit>
        <trans-unit id="d4a5a16899142b322054b61a4a8cb2f24871f0bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default media type to use as the value for the Content-Type header on responses (default &amp;lsquo;application/json&amp;rsquo;). The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, such as &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt;media_type&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default media type to use as the value for the Content-Type header on responses (default &amp;lsquo;application/json&amp;rsquo;). The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, such as &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="779bd25b6e93ec8bf62b591249a5378d355eb34c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;media_types&lt;/strong&gt; (&lt;em&gt;iterable of str&lt;/em&gt;) &amp;ndash; One or more Internet media types from which to choose the client&amp;rsquo;s preferred type. This value &lt;strong&gt;must&lt;/strong&gt; be an iterable collection of strings.</source>
          <target state="translated">&lt;strong&gt;media_types&lt;/strong&gt; ( &lt;em&gt;str 반복 가능&lt;/em&gt; ) &amp;ndash; 클라이언트가 선호하는 유형을 선택할 수있는 하나 이상의 인터넷 미디어 유형. 이 값 &lt;strong&gt;은&lt;/strong&gt; 반복 가능한 문자열 모음 &lt;strong&gt;이어야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3a3bb5addbcea5528dd6c0f0500471f647f5ba31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#unicode&quot;&gt;unicode&lt;/a&gt;) &amp;ndash; Description of the problem. On Python 2, instances of &lt;code&gt;unicode&lt;/code&gt; will be converted to UTF-8.</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str &lt;/a&gt;&lt;em&gt;또는 &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#unicode&quot;&gt;unicode&lt;/a&gt; ) &amp;ndash; 문제에 대한 설명입니다. Python 2에서 &lt;code&gt;unicode&lt;/code&gt; 인스턴스는 UTF-8로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="15eef077f755a3b844fb6e8ce586399b136f8f16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;unicode&lt;/em&gt;) &amp;ndash; Description of the problem. On Python 2, instances of &lt;code&gt;unicode&lt;/code&gt; will be converted to UTF-8.</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;unicode&lt;/em&gt;) &amp;ndash; Description of the problem. On Python 2, instances of &lt;code&gt;unicode&lt;/code&gt; will be converted to UTF-8.</target>
        </trans-unit>
        <trans-unit id="e1f017b7ed9c530778c5af0603f0f8ebfcd8f913" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP method to use in the request (default: &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 요청에 사용할 HTTP 메소드 (기본값 : 'GET')</target>
        </trans-unit>
        <trans-unit id="aa979d6fa50bb3f01e2177a8d0eefbcd1f9e3c17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP method to use (default &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 사용할 HTTP 메소드 (기본 'GET')</target>
        </trans-unit>
        <trans-unit id="2e15abcb25113f0ce19b4bf93e3dfd7c54ae02b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP method to use in the request (default: &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP method to use in the request (default: &amp;lsquo;GET&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="610a72c7dded6c81aa3a96584daaa6159935d068" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP method to use (default &amp;lsquo;GET&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;method&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP method to use (default &amp;lsquo;GET&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="c02139faf32d9441e634ec751113f7b020406a25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method_map&lt;/strong&gt; &amp;ndash; A dict with HTTP methods mapped to responders explicitly defined in a resource.</source>
          <target state="translated">&lt;strong&gt;method_map&lt;/strong&gt; &amp;ndash; 자원에 명시 적으로 정의 된 응답자에 HTTP 메소드가 맵핑 된 dict.</target>
        </trans-unit>
        <trans-unit id="713c1eb4f6fd9b4bdaf1584b5a153e023972bf3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method_name&lt;/strong&gt; &amp;ndash; Name of the method to retrieve.</source>
          <target state="translated">&lt;strong&gt;method_name&lt;/strong&gt; &amp;ndash; 검색 할 메소드 이름.</target>
        </trans-unit>
        <trans-unit id="0ca65485e86a53a230d2496bfdefd46bd3d21806" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;middleware&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;list&lt;/em&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;미들웨어&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;개체 &lt;/a&gt;&lt;em&gt;또는 &lt;/em&gt;&lt;em&gt;목록&lt;/em&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="02ccaa41417d59014c15414b64accaaa9595d4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;middleware&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#list&quot;&gt;list&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;middleware&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#list&quot;&gt;list&lt;/a&gt;) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="dd1cb222a4ef22f40b64a5b1c51b66d7777902fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Minimum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash; 반환 할 최소 문자열 길이 (포함)</target>
        </trans-unit>
        <trans-unit id="e96e065a1ba64d5d81fdd8e9ce0f946c1630af3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is less than this number.</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash;이 숫자보다 작 으면 값을 거부하십시오.</target>
        </trans-unit>
        <trans-unit id="512459d69475555fef0535314bbd48f0c81d741b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash;이 매개 변수에 허용 된 최소값으로 설정하십시오. param이 발견되고 min보다 작 으면 &lt;code&gt;HTTPError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9072a33509632e055aa33f55f86f52f4063b9c56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Minimum string length to return, inclusive</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Minimum string length to return, inclusive</target>
        </trans-unit>
        <trans-unit id="e5ab144e23b6f30cb75f1c13675ef6e82110f799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is less than this number.</source>
          <target state="translated">&lt;strong&gt;min&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Reject the value if it is less than this number.</target>
        </trans-unit>
        <trans-unit id="43c47bd31c40533373756a647e0beac5ff802dd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;min_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#float&quot;&gt;float&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</target>
        </trans-unit>
        <trans-unit id="6189a9bec0be4eab8431517ee5aabd477b4ac700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;min_value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Set to the minimum value allowed for this param. If the param is found and it is less than min_value, an &lt;code&gt;HTTPError&lt;/code&gt; is raised.</target>
        </trans-unit>
        <trans-unit id="ffadb71523c3b2e11709636b323489ecd0e70ab9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;morsel&lt;/strong&gt; &amp;ndash; A &lt;code&gt;Morsel&lt;/code&gt; object from which to derive the cookie data.</source>
          <target state="translated">&lt;strong&gt;morsel&lt;/strong&gt; &amp;ndash; 쿠키 데이터를 파생시키는 &lt;code&gt;Morsel&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f35023b7677e72bce3e3a1bf4ecd22499c82dcbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of the invalid parameter.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 유효하지 않은 매개 변수에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="f77ea4e82b6b71d346ae1e04e66a77df4d168290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of why the value is invalid.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 값이 유효하지 않은 이유에 대한 설명.</target>
        </trans-unit>
        <trans-unit id="08d75c37bd36b144259d801183922237c2248b6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of the invalid parameter.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of the invalid parameter.</target>
        </trans-unit>
        <trans-unit id="30dc358982919c9360773cff23fbff6864bd15b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of why the value is invalid.</source>
          <target state="translated">&lt;strong&gt;msg&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A description of why the value is invalid.</target>
        </trans-unit>
        <trans-unit id="820964f7f190058892e182e78de4674913828ea0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 쿠키 이름</target>
        </trans-unit>
        <trans-unit id="324cdf575c54c912c11949fa5b83e305334fac15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; and contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 헤더 이름 (대소 문자 구분). &lt;code&gt;str&lt;/code&gt; 또는 &lt;code&gt;StringType&lt;/code&gt; 이어야하며 US-ASCII 문자 만 포함 해야합니다 . Python 2.x에서는 &lt;code&gt;unicode&lt;/code&gt; 유형도 허용되지만 이러한 문자열은 US-ASCII로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="7e07596522b9f1cf11d5ca41543800aaeb0fe5bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). The restrictions noted below for the header&amp;rsquo;s value also apply here.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 헤더 이름 (대소 문자 구분). 헤더 값에 대해 아래에 언급 된 제한 사항도 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="4a1ea7c7f3a3df976b330cf08b276c59ec5b7a53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Content-Type&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하지 않는 헤더 이름 (예 : 'Content-Type')</target>
        </trans-unit>
        <trans-unit id="bd56a7e618f937d72da9056f89e1d0359db19b2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Date&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하지 않는 헤더 이름 (예 : 'Date')</target>
        </trans-unit>
        <trans-unit id="3509f7fb59dd946d4c9745f5e8f705e6856e4781" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive. Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;, and only character values 0x00 through 0xFF may be used on platforms that use wide characters.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하지 않는 헤더 이름입니다. &lt;code&gt;str&lt;/code&gt; 또는 &lt;code&gt;StringType&lt;/code&gt; 유형이어야하며 넓은 문자를 사용하는 플랫폼에서는 0x00에서 0xFF까지의 문자 값만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6838ad35511286cfa66fe1990b703ad44e94b2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;detailed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하는 매개 변수 이름입니다 (예 : '상세').</target>
        </trans-unit>
        <trans-unit id="12634538c9459b6783aa70185ac6f7b05c12d4e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;id&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하는 매개 변수 이름 (예 : 'id').</target>
        </trans-unit>
        <trans-unit id="f32a093488314f51f204d843b5bab95cc5e70d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;ids&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하는 매개 변수 이름입니다 (예 : 'ids').</target>
        </trans-unit>
        <trans-unit id="9e1fb06d8305e7ade0d62938f672cd3d89251ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;limit&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하는 매개 변수 이름입니다 (예 : 'limit').</target>
        </trans-unit>
        <trans-unit id="d8c48a931f3c04f2206bc7fa1324eecbaa921250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;payload&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하는 매개 변수 이름입니다 (예 : 'payload').</target>
        </trans-unit>
        <trans-unit id="8ee1c68153a8dd8e1d89b3c2056189e3226cac0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;sort&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 대소 문자를 구분하는 매개 변수 이름입니다 (예 : '정렬').</target>
        </trans-unit>
        <trans-unit id="ff46ce456834734755e8fbff85b8037e3d6451e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name</target>
        </trans-unit>
        <trans-unit id="0d3b686a5af705a3fdef9cb12d65c7d62d4bf046" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name, case-sensitive.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie name, case-sensitive.</target>
        </trans-unit>
        <trans-unit id="b11ac5ed17b406d9f708018f29525a4577a658a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; and contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; and contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</target>
        </trans-unit>
        <trans-unit id="dc03d5bf80937e11794b1511e731074cd583e272" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). The restrictions noted below for the header&amp;rsquo;s value also apply here.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name (case-insensitive). The restrictions noted below for the header&amp;rsquo;s value also apply here.</target>
        </trans-unit>
        <trans-unit id="12ce3a1523bb8b1897f9acb950154aebdce40f89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Content-Type&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Content-Type&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="d196791d1d6c47dfc046c37e6b9d2bdadf665a22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Date&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive (e.g., &amp;lsquo;Date&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="7bd7d085fd6e56a971b844efda4eae4b9e8ae3c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive. Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;, and only character values 0x00 through 0xFF may be used on platforms that use wide characters.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Header name, case-insensitive. Must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; , and only character values 0x00 through 0xFF may be used on platforms that use wide characters.</target>
        </trans-unit>
        <trans-unit id="90c0e155be92fc7c53522f72819e8a94fb998335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;detailed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;detailed&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="90c9cb26730ae6c023849a413a972231de2627ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;id&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;id&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="b02016883d77749a746ca19adf4883fa57e3ad63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;ids&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;ids&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="dae7b025f4ac4823300cc584ea9b4f6e4cfa68b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;limit&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;limit&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="6eab1894295bf9765bdb86df2647365af5d556c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;payload&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;payload&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="5076939db043feb2c232701ce17aacf7b389e34d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;sort&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Parameter name, case-sensitive (e.g., &amp;lsquo;sort&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="1e4d628db9dcb61ee8a0b5aba2ac6c4d50372c9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;num_digits&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Require the value to have the given number of digits.</source>
          <target state="translated">&lt;strong&gt;num_digits&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash; 값에 지정된 자릿수가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0970cbe45a251cc72a5f0af388d7c62d9629087b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;num_digits&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Require the value to have the given number of digits.</source>
          <target state="translated">&lt;strong&gt;num_digits&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Require the value to have the given number of digits.</target>
        </trans-unit>
        <trans-unit id="55ee4a4c77e9a7d7db948d2c9db14b74d4059eb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj&lt;/strong&gt; &amp;ndash; Object on which to look up the method.</source>
          <target state="translated">&lt;strong&gt;obj&lt;/strong&gt; &amp;ndash; 메소드를 검색 할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="caf87632ba8db9410dca839d50e62cbf705a244f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; A serializable object.</source>
          <target state="translated">&lt;strong&gt;obj&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt; ) &amp;ndash; 직렬화 가능한 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c3dd766c3355e8226eac7a5aab9f935d1321c7cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj_type&lt;/strong&gt; &amp;ndash; A dict-like type that will be used to store the error information (default &lt;code&gt;dict&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;obj_type&lt;/strong&gt; &amp;ndash; 오류 정보를 저장하는 데 사용될 dict-like 유형입니다 (기본 &lt;code&gt;dict&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4ed33c07ccc0777928b5ceab3db617f9ca410f0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obs_date&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Support obs-date formats according to RFC 7231, e.g.: &amp;ldquo;Sunday, 06-Nov-94 08:49:37 GMT&amp;rdquo; (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;obs_date&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; RFC 7231에 따라 obs-date 형식을 지원합니다 ( 예 :&amp;ldquo;Sunday, 06-Nov-94 08:49:37 GMT&amp;rdquo;(기본값 &lt;code&gt;False&lt;/code&gt; )).</target>
        </trans-unit>
        <trans-unit id="b4fb692bc98d05a4bbd24c9959676f50ebb8b36f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obs_date&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Support obs-date formats according to RFC 7231, e.g.: &amp;ldquo;Sunday, 06-Nov-94 08:49:37 GMT&amp;rdquo; (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;obs_date&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Support obs-date formats according to RFC 7231, e.g.: &amp;ldquo;Sunday, 06-Nov-94 08:49:37 GMT&amp;rdquo; (default &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="56e816b8bc2bb30f049c0030db3e2ede55ca3f10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;one.&lt;/strong&gt; (&lt;em&gt;this&lt;/em&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;one.&lt;/strong&gt; (&lt;em&gt;this&lt;/em&gt;) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="c8bea9c25609799f5d652b41bca52fa40fa470c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; Set of global options passed from the API handler.</source>
          <target state="translated">&lt;strong&gt;options&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt; ) &amp;ndash; API 핸들러에서 전달 된 글로벌 옵션 세트입니다.</target>
        </trans-unit>
        <trans-unit id="5c7aa09ed9b68fac56479b38ffb09911612fd67e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; Set of global options passed from the API handler.</source>
          <target state="translated">&lt;strong&gt;options&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; Set of global options passed from the API handler.</target>
        </trans-unit>
        <trans-unit id="1392c2fbda6b7aaea6b8831ae49e62bc268babea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;other&lt;/strong&gt; (&lt;a href=&quot;#falcon.ETag&quot;&gt;ETag&lt;/a&gt;) &amp;ndash; The other &lt;a href=&quot;#falcon.ETag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt; to which you are comparing</source>
          <target state="translated">&lt;strong&gt;other&lt;/strong&gt; (&lt;a href=&quot;#falcon.ETag&quot;&gt;ETag&lt;/a&gt;) &amp;ndash; The other &lt;a href=&quot;#falcon.ETag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; to which you are comparing</target>
        </trans-unit>
        <trans-unit id="5692e9bc4a93ddb937ba8ec5e450d475eb5db89b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the missing parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 누락 된 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="44b462efa75b5a8dd814a172e762a95dad83b511" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8efb52e52689e2dc5c7b3ab51d2708a667d98ccc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the missing parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the missing parameter.</target>
        </trans-unit>
        <trans-unit id="d75cf3af3daa487faf747fe96f0f836e24259082" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the parameter.</source>
          <target state="translated">&lt;strong&gt;param_name&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The name of the parameter.</target>
        </trans-unit>
        <trans-unit id="c6a8b7d326e152831aff6ff48dfac460b3ccead8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;PARAMS&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;딕셔너리&lt;/a&gt; ) - 각각의 키 파라미터 이름이고, 각 값 중 하나 인 파라미터 사전의 &lt;code&gt;str&lt;/code&gt; 하거나 변환 할 수있는 것이 &lt;code&gt;str&lt;/code&gt; , 또는 값의 목록. 경우 &lt;code&gt;list&lt;/code&gt; , 값은 값의 쉼표로 구분 된 문자열로 변환됩니다 (예를 들어, '일 = 1,2,3').</target>
        </trans-unit>
        <trans-unit id="266abbad6e22e95fb71e5e3913c1aba96c63a037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of query string parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;PARAMS&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;DICT&lt;/a&gt; ) - 쿼리 문자열 매개 변수의 사전, 각 키가 매개 변수 이름이며, 각 값 중 하나입니다 &lt;code&gt;str&lt;/code&gt; 또는으로 변환 할 수있는 일이 &lt;code&gt;str&lt;/code&gt; , 또는 값의 목록입니다. 경우 &lt;code&gt;list&lt;/code&gt; , 값은 값의 쉼표로 구분 된 문자열로 변환됩니다 (예를 들어, '일 = 1,2,3').</target>
        </trans-unit>
        <trans-unit id="7ee5bf3579b2714233b44a3a7ae5b1f7eeebe9c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt; , or a list of such values. If a &lt;code&gt;list&lt;/code&gt; , the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="4a600f45587d8b3636907cb12871dcf08dee5196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of query string parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt;, or a list of such values. If a &lt;code&gt;list&lt;/code&gt;, the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;params&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary of query string parameters, where each key is a parameter name, and each value is either a &lt;code&gt;str&lt;/code&gt; or something that can be converted into a &lt;code&gt;str&lt;/code&gt; , or a list of such values. If a &lt;code&gt;list&lt;/code&gt; , the value will be converted to a comma-delimited string of values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="8b2168a05c7abd538c3e5f3e8863fbdf30de56c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params_csv&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to encode list values in query string params by specifying multiple instances of the parameter (e.g., &amp;lsquo;thing=1&amp;amp;thing=2&amp;amp;thing=3&amp;rsquo;). Otherwise, parameters will be encoded as comma-separated values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;). Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;params_csv&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 매개 변수의 여러 인스턴스 (예 : 'thing = 1 &amp;amp; thing = 2 &amp;amp; thing = 3')를 지정하여 쿼리 문자열 params에서 목록 값을 인코딩 하려면 &lt;code&gt;False&lt;/code&gt; 로 설정하십시오 . 그렇지 않으면 매개 변수는 쉼표로 구분 된 값 (예 : 'thing = 1,2,3')으로 인코딩됩니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="808f6b1e8f19af343e1efb305a11bf5a77a30d1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params_csv&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to encode list values in query string params by specifying multiple instances of the parameter (e.g., &amp;lsquo;thing=1&amp;amp;thing=2&amp;amp;thing=3&amp;rsquo;). Otherwise, parameters will be encoded as comma-separated values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;). Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;params_csv&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to encode list values in query string params by specifying multiple instances of the parameter (e.g., &amp;lsquo;thing=1&amp;amp;thing=2&amp;amp;thing=3&amp;rsquo;). Otherwise, parameters will be encoded as comma-separated values (e.g., &amp;lsquo;thing=1,2,3&amp;rsquo;). Defaults to &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96b09df0fb0066e0e81c2eb5f5ce4ef665dbb95d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;parse_qs_csv&lt;/strong&gt; &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; in order to disable splitting query parameters on &lt;code&gt;,&lt;/code&gt; (default &lt;code&gt;True&lt;/code&gt;). Depending on the user agent, encoding lists as multiple occurrences of the same parameter might be preferable. In this case, setting &lt;code&gt;parse_qs_csv&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; will cause the framework to treat commas as literal characters in each occurring parameter value.</source>
          <target state="translated">&lt;strong&gt;parse_qs_csv&lt;/strong&gt; -로 설정 &lt;code&gt;False&lt;/code&gt; 에 해제 분할 쿼리 매개 변수를 위해 &lt;code&gt;,&lt;/code&gt; (기본 &lt;code&gt;True&lt;/code&gt; ). 사용자 에이전트에 따라 동일한 매개 변수가 여러 번 나타날 때 목록을 인코딩하는 것이 좋습니다. 이 경우 &lt;code&gt;parse_qs_csv&lt;/code&gt; 를 &lt;code&gt;False&lt;/code&gt; 로 설정 하면 프레임 워크가 쉼표를 각각의 발생하는 매개 변수 값에서 리터럴 문자로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d7ab9753843cdf4ba89965fe50188b6e74c22f21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;경로&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="84322c5015f768347f029d1324c10729c3225a00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The URL path to request</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 요청할 URL 경로</target>
        </trans-unit>
        <trans-unit id="1e64739e33f93617092f1e61061ea8108cbd50f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The URL path to request (default: &amp;lsquo;/&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 요청할 URL 경로 (기본값 : '/')</target>
        </trans-unit>
        <trans-unit id="bcc558933a8f22bf04611cf3843f49a6df848300" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The path for the request (default &amp;lsquo;/&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 요청 경로 (기본값 '/')</target>
        </trans-unit>
        <trans-unit id="00b45285b19de417e79d3e73dd0376cb4f6f55e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The path to request.</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 요청할 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5705e36baa994d8ae74c0ce664f26c39280449e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="6428d0d48bc53fa88130a23eafeb5e43c5bb6dc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The URL path to request</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The URL path to request</target>
        </trans-unit>
        <trans-unit id="2f8635c9c39674215879fe54b5328da8980efa1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The path for the request (default &amp;lsquo;/&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;path&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The path for the request (default &amp;lsquo;/&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="6cd4ea591b0d5e919f808f90e690c099626ef3de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;port&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The TCP port to simulate. Defaults to the standard port used by the given scheme (i.e., 80 for &amp;lsquo;http&amp;rsquo; and 443 for &amp;lsquo;https&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;port&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 시뮬레이션 할 TCP 포트. 주어진 체계에서 사용되는 표준 포트 (기본값 : 80, 'http'는 443).</target>
        </trans-unit>
        <trans-unit id="ee62e3fbba448a088e1e0b2e5f5378147a89c7bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;port&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The TCP port to simulate. Defaults to the standard port used by the given scheme (i.e., 80 for &amp;lsquo;http&amp;rsquo; and 443 for &amp;lsquo;https&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;port&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The TCP port to simulate. Defaults to the standard port used by the given scheme (i.e., 80 for &amp;lsquo;http&amp;rsquo; and 443 for &amp;lsquo;https&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="ebf05db05ebbd28c48ba2022e013f4e9cc0aa8d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to exclude the &amp;lsquo;?&amp;rsquo; prefix in the result string (default &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;prefix&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; '?'를 제외하려면 &lt;code&gt;False&lt;/code&gt; 로 설정하십시오. 결과 문자열의 접두사 (기본값 &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5a4d21de3f02695777178bfb49618234b1535c26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;접두사&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="13b72e63b39db60ec7866aa675d09820b7c1fa71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to exclude the &amp;lsquo;?&amp;rsquo; prefix in the result string (default &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to exclude the &amp;lsquo;?&amp;rsquo; prefix in the result string (default &lt;code&gt;True&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a5dda5db19379524dd526e6ee8a5575a0f328095" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;prefix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="8e789c333b6b90d18040d279285b4c9e024aa6e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protocol&lt;/strong&gt; &amp;ndash; The protocol to use for the URL scheme (default: &amp;lsquo;http&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;protocol&lt;/strong&gt; &amp;ndash; URL 체계에 사용할 프로토콜 (기본값 : 'http')</target>
        </trans-unit>
        <trans-unit id="eea471b77d786e0d90191647e25f040ba970100b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protocol&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP protocol to simulate (default &amp;lsquo;HTTP/1.1&amp;rsquo;). If set to &amp;lsquo;HTTP/1.0&amp;rsquo;, the Host header will not be added to the environment.</source>
          <target state="translated">&lt;strong&gt;protocol&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 시뮬레이션 할 HTTP 프로토콜 (기본값 'HTTP / 1.1'). 'HTTP / 1.0'으로 설정하면 호스트 헤더가 환경에 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e659f68d2a99a2edd64df45dd951d408cda60f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protocol&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP protocol to simulate (default &amp;lsquo;HTTP/1.1&amp;rsquo;). If set to &amp;lsquo;HTTP/1.0&amp;rsquo;, the Host header will not be added to the environment.</source>
          <target state="translated">&lt;strong&gt;protocol&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The HTTP protocol to simulate (default &amp;lsquo;HTTP/1.1&amp;rsquo;). If set to &amp;lsquo;HTTP/1.0&amp;rsquo;, the Host header will not be added to the environment.</target>
        </trans-unit>
        <trans-unit id="c0a80ec01233ba72f295096d3b1636853db44313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A raw query string to include in the request (default: &lt;code&gt;None&lt;/code&gt;). If specified, overrides &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 요청에 포함 할 원시 쿼리 문자열입니다 (기본값 : &lt;code&gt;None&lt;/code&gt; ). 지정된 경우 &lt;code&gt;params&lt;/code&gt; 를 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="fe2729e2c567e77f2097bdfcb2ea1263dff99906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to parse.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 구문 분석 할 쿼리 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b498f298666f64bb32694105e211a3a196c9fafc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to simulate, without a leading &amp;lsquo;?&amp;rsquo; (default &amp;lsquo;&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 선행 '?'없이 시뮬레이션 할 쿼리 문자열 (기본 '')</target>
        </trans-unit>
        <trans-unit id="46b250bdf8e259914355bb6ed40bfe5e7257c940" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A raw query string to include in the request (default: &lt;code&gt;None&lt;/code&gt;). If specified, overrides &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A raw query string to include in the request (default: &lt;code&gt;None&lt;/code&gt; ). If specified, overrides &lt;code&gt;params&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4004d3d054f078e42c804545c6a33acf75d2e826" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to parse.</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to parse.</target>
        </trans-unit>
        <trans-unit id="5b352a6374ea6270c90fd0c4a94f6328dc9740d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to simulate, without a leading &amp;lsquo;?&amp;rsquo; (default &amp;lsquo;&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;query_string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The query string to simulate, without a leading &amp;lsquo;?&amp;rsquo; (default &amp;lsquo;&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="0914864b58b93c199e17d8d9f52be57e6a8a9879" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;quoted&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original quoted string</source>
          <target state="translated">&lt;strong&gt;quoted&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 원래 인용 된 문자열</target>
        </trans-unit>
        <trans-unit id="52abc0fa93fb556ca6790ae8e7c5c3c0152bb610" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;quoted&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original quoted string</source>
          <target state="translated">&lt;strong&gt;quoted&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original quoted string</target>
        </trans-unit>
        <trans-unit id="33d9ece0dd5c929f97f762b08d6be426f90f32dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;raw&lt;/strong&gt; (&lt;em&gt;bytes&lt;/em&gt;) &amp;ndash; Input bytes to deserialize</source>
          <target state="translated">&lt;strong&gt;raw&lt;/strong&gt; ( &lt;em&gt;bytes&lt;/em&gt; ) &amp;ndash; 역 직렬화 할 입력 바이트</target>
        </trans-unit>
        <trans-unit id="fa9f5182572e76a5fca0af4a20912f0fd6d160d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rel&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;rel&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="dc054f509d36b8e31ed6089277dda88f3011674c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rel&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;rel&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="b3c7444259430659e8b1706862493121245c594e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;remote_addr&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A string to use as the remote IP address for the request (default: &amp;lsquo;127.0.0.1&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;remote_addr&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A string to use as the remote IP address for the request (default: &amp;lsquo;127.0.0.1&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="d8bd5b342f32d225d7addcc5602a5edec941267e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;remote_addr&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Remote address for the request (default &amp;lsquo;127.0.0.1&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;remote_addr&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Remote address for the request (default &amp;lsquo;127.0.0.1&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="010c831764585a6a05fb23e58f4943e7a35db870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;req&lt;/strong&gt; &amp;ndash; Falcon &lt;code&gt;Request&lt;/code&gt; instance.</source>
          <target state="translated">&lt;strong&gt;req&lt;/strong&gt; &amp;ndash; 팔콘 &lt;code&gt;Request&lt;/code&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="0a8a544d5728254840dc6b57e50004dbd6e00759" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;req&lt;/strong&gt; (&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt;) &amp;ndash; The Request object that will be passed to the routed responder. Currently the value of this argument is ignored by &lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt;&lt;code&gt;CompiledRouter&lt;/code&gt;&lt;/a&gt;. Routing is based solely on the path.</source>
          <target state="translated">&lt;strong&gt;req&lt;/strong&gt; (&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt;) &amp;ndash; The Request object that will be passed to the routed responder. Currently the value of this argument is ignored by &lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt; &lt;code&gt;CompiledRouter&lt;/code&gt; &lt;/a&gt;. Routing is based solely on the path.</target>
        </trans-unit>
        <trans-unit id="9767a9afe69da91218bb2eefdee8efc12a5eb0e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;req_schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. The request will be validated against this schema.</source>
          <target state="translated">&lt;strong&gt;req_schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. The request will be validated against this schema.</target>
        </trans-unit>
        <trans-unit id="4d3eb3be4bfbfc1553caf40cea170e2cc2b1f960" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;request_type&lt;/strong&gt; (&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt;) &amp;ndash; &lt;code&gt;Request&lt;/code&gt;-like class to use instead of Falcon&amp;rsquo;s default class. Among other things, this feature affords inheriting from &lt;code&gt;falcon.request.Request&lt;/code&gt; in order to override the &lt;code&gt;context_type&lt;/code&gt; class variable. (default &lt;code&gt;falcon.request.Request&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;request_type&lt;/strong&gt; ( &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;Request&lt;/a&gt; ) &amp;ndash; Falcon의 기본 클래스 대신 사용할 &lt;code&gt;Request&lt;/code&gt; 과 유사한 클래스입니다. 무엇 &lt;code&gt;falcon.request.Request&lt;/code&gt; 기능 은 &lt;code&gt;context_type&lt;/code&gt; 클래스 변수 를 재정의하기 위해 falcon.request.Request 에서 상속 합니다. (기본 &lt;code&gt;falcon.request.Request&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d6eec5915313c703e925f0d9b74d0eb3c6a62923" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 매개 변수를 찾을 수 없을 때 &lt;code&gt;None&lt;/code&gt; 을 리턴하는 대신 &lt;code&gt;HTTPBadRequest&lt;/code&gt; 를 발생 시키 려면 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 (기본 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5cc2ce1fa76876ed8dc3564501d1c5c621ec988b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a UUID (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 매개 변수가 없거나 UUID가 아닌 경우 &lt;code&gt;None&lt;/code&gt; 을 리턴하는 대신 &lt;code&gt;HTTPBadRequest&lt;/code&gt; 를 발생 시키 려면 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 (기본 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cb2fd5592ccd3f95aa0c4e2d109bca39604c8467" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a recognized boolean string (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 매개 변수를 찾을 수 없거나 인식되는 부울 문자열이 아닌 경우 &lt;code&gt;None&lt;/code&gt; 을 리턴하는 대신 &lt;code&gt;HTTPBadRequest&lt;/code&gt; 를 발생 시키 려면 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 (기본 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f10a4d6071ef2d3af9cbd5bd2fa8314bd065b570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an integer (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 매개 변수를 찾을 수 없거나 정수가 아닌 경우 &lt;code&gt;None&lt;/code&gt; 을 리턴하는 대신 &lt;code&gt;HTTPBadRequest&lt;/code&gt; 를 발생 시키 려면 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 (기본 &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eec59641f60ec4b38ffb72b81829aca45e2ad780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning gracefully when the header is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 헤더를 찾을 수 없을 때 정상적으로 리턴하는 대신 &lt;code&gt;HTTPBadRequest&lt;/code&gt; 를 발생 시키 려면 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 (기본값 : &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d7fa65e7ea7bd75329b5c3c57f4c345328250306" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found (default &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3e528382fefc4ff396eb56e9079aa437aeba572d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a UUID (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a UUID (default &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9c11d49fc8cdf9c787d5e4bf8a6e3bb4b94d680e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a recognized boolean string (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not a recognized boolean string (default &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1458507bc76682a35dda09983aea51c8f8332b44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an float (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an float (default &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="093433da512dc8ce8278490d5e9d83dd01be56e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an integer (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning &lt;code&gt;None&lt;/code&gt; when the parameter is not found or is not an integer (default &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="deaed2dcf7204bb39c2fa82dc044bcdc323aa50d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning gracefully when the header is not found (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;required&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;True&lt;/code&gt; to raise &lt;code&gt;HTTPBadRequest&lt;/code&gt; instead of returning gracefully when the header is not found (default &lt;code&gt;False&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef195ae1b1692846d92f74cbfeb0da1c7e33f508" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; &amp;ndash; An object with &lt;em&gt;responder&lt;/em&gt; methods, following the naming convention &lt;em&gt;on_*&lt;/em&gt;, that correspond to each method the resource supports. For example, if a resource supports GET and POST, it should define &lt;code&gt;on_get(self, req, resp)&lt;/code&gt; and &lt;code&gt;on_post(self, req, resp)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt; &amp;ndash; 자원이 지원하는 각 메소드에 해당하는 이름 지정 규칙 &lt;em&gt;on_ *에&lt;/em&gt; 따라 &lt;em&gt;응답자&lt;/em&gt; 메소드가 있는 오브젝트입니다 . 예를 들어, 자원이 GET 및 POST를 지원하는 경우 &lt;code&gt;on_get(self, req, resp)&lt;/code&gt; 및 &lt;code&gt;on_post(self, req, resp)&lt;/code&gt; 정의해야합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52a4b91fc4f7a6d8a7f2680989c94aade491a3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; The resource instance to associate with the URI template.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; The resource instance to associate with the URI template.</target>
        </trans-unit>
        <trans-unit id="21a0e837fde78a074c8113ea07063beefd3acadd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. Falcon will pass &amp;ldquo;GET&amp;rdquo; requests to on_get, &amp;ldquo;PUT&amp;rdquo; requests to on_put, etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt; ( &lt;em&gt;instance&lt;/em&gt; ) &amp;ndash; REST 리소스를 나타내는 객체입니다. Falcon은&amp;ldquo;GET&amp;rdquo;요청을 on_get에 전달하고&amp;ldquo;PUT&amp;rdquo;요청을 on_put 등에 전달합니다. 리소스에서 HTTP 메소드를 지원하지 않는 경우 해당 요청 핸들러를 정의하지 않으면 Falcon이 올바른 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a59f5b59808b6c833b631530a3cacdbdc4afab85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. Falcon will pass GET requests to &lt;code&gt;on_get()&lt;/code&gt;, PUT requests to &lt;code&gt;on_put()&lt;/code&gt;, etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. Falcon will pass GET requests to &lt;code&gt;on_get()&lt;/code&gt; , PUT requests to &lt;code&gt;on_put()&lt;/code&gt; , etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</target>
        </trans-unit>
        <trans-unit id="a20856b0c915df9d02cb36ddfea210355e0c9628" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. The default maps the HTTP method &lt;code&gt;GET&lt;/code&gt; to &lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;on_post()&lt;/code&gt;, etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</source>
          <target state="translated">&lt;strong&gt;resource&lt;/strong&gt; (&lt;em&gt;instance&lt;/em&gt;) &amp;ndash; Object which represents a REST resource. The default maps the HTTP method &lt;code&gt;GET&lt;/code&gt; to &lt;code&gt;on_get()&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;on_post()&lt;/code&gt; , etc. If any HTTP methods are not supported by your resource, simply don&amp;rsquo;t define the corresponding request handlers, and Falcon will do the right thing.</target>
        </trans-unit>
        <trans-unit id="a9870e945d8ceafdb6ef04865e9d1a1a1b1685f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resource_length&lt;/strong&gt; &amp;ndash; The maximum value for the last-byte-pos of a range request. Used to set the Content-Range header.</source>
          <target state="translated">&lt;strong&gt;resource_length&lt;/strong&gt; &amp;ndash; 범위 요청의 마지막 바이트 위치에 대한 최대 값입니다. Content-Range 헤더를 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="da33b43d632ef16cb028d8d26c6a6c8a0b7493b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resp&lt;/strong&gt; &amp;ndash; Falcon &lt;code&gt;Response&lt;/code&gt; instance.</source>
          <target state="translated">&lt;strong&gt;resp&lt;/strong&gt; &amp;ndash; 팔콘 &lt;code&gt;Response&lt;/code&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="79db0aa426435fe8e612d20d5ca12dbcbd08b06f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;resp_schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. The response will be validated against this schema.</source>
          <target state="translated">&lt;strong&gt;resp_schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. The response will be validated against this schema.</target>
        </trans-unit>
        <trans-unit id="0dc5e811aa9af4e5c730073eeb03067f448bf93e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;response_type&lt;/strong&gt; (&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;Response&lt;/a&gt;) &amp;ndash; &lt;code&gt;Response&lt;/code&gt;-like class to use instead of Falcon&amp;rsquo;s default class. (default &lt;code&gt;falcon.response.Response&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;response_type&lt;/strong&gt; ( &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;Response&lt;/a&gt; ) &amp;ndash; Falcon의 기본 클래스 대신 사용할 &lt;code&gt;Response&lt;/code&gt; 과 유사한 클래스입니다. (기본 &lt;code&gt;falcon.response.Response&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e3e51910f94e994989f209caf702bf26e956c1fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;retry_after&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/datetime.html#module-datetime&quot;&gt;datetime&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Value for the Retry-After header. If a &lt;code&gt;datetime&lt;/code&gt; object, will serialize as an HTTP date. Otherwise, a non-negative &lt;code&gt;int&lt;/code&gt; is expected, representing the number of seconds to wait.</source>
          <target state="translated">&lt;strong&gt;retry_after&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/datetime.html#module-datetime&quot;&gt;datetime &lt;/a&gt;&lt;em&gt;또는 &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash; Retry-After 헤더의 값입니다. 경우 &lt;code&gt;datetime&lt;/code&gt; 객체는 HTTP 날짜로 직렬화합니다. 그렇지 않으면, 대기하는 초 수를 나타내는 음이 아닌 &lt;code&gt;int&lt;/code&gt; 가 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="213f361ae61b045632426e12c332da76f35b7f7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;retry_after&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt;datetime&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Value for the Retry-After header. If a &lt;code&gt;datetime&lt;/code&gt; object, will serialize as an HTTP date. Otherwise, a non-negative &lt;code&gt;int&lt;/code&gt; is expected, representing the number of seconds to wait.</source>
          <target state="translated">&lt;strong&gt;retry_after&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#module-datetime&quot;&gt;datetime&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; Value for the Retry-After header. If a &lt;code&gt;datetime&lt;/code&gt; object, will serialize as an HTTP date. Otherwise, a non-negative &lt;code&gt;int&lt;/code&gt; is expected, representing the number of seconds to wait.</target>
        </trans-unit>
        <trans-unit id="a6f86a3c0457bf635d27c3c6d578513d8e880a2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;router&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; An instance of a custom router to use in lieu of the default engine. (See also: &lt;a href=&quot;routing#routing-custom&quot;&gt;Custom Routers&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;router&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#object&quot;&gt;object&lt;/a&gt; ) &amp;ndash; 기본 엔진 대신 사용할 사용자 정의 라우터의 인스턴스입니다. (또한 &lt;a href=&quot;routing#routing-custom&quot;&gt;사용자 정의 라우터&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="3a57b91e706404354951487e7ad62409d4b7cf2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;router&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; An instance of a custom router to use in lieu of the default engine. (See also: &lt;a href=&quot;routing#routing-custom&quot;&gt;Custom Routers&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;router&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; An instance of a custom router to use in lieu of the default engine. (See also: &lt;a href=&quot;routing#routing-custom&quot;&gt;Custom Routers&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="03567e0a67ff6b011983f5b443ab0e8228aad71e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;schema&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A dictionary that follows the JSON Schema specification. See &lt;a href=&quot;http://json-schema.org/&quot;&gt;json-schema.org&lt;/a&gt; for more information on defining a compatible dictionary.</source>
          <target state="translated">&lt;strong&gt;schema&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt; ) &amp;ndash; JSON 스키마 사양을 따르는 사전입니다. 호환 가능한 사전 정의에 대한 자세한 정보는 &lt;a href=&quot;http://json-schema.org/&quot;&gt;json-schema.org&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ccf6b40297a0815b845ce9f939b17f6e1cb4433" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scheme&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URL scheme, either &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo; (default &amp;lsquo;http&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;scheme&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; URL 체계, 'http'또는 'https'(기본 'http')</target>
        </trans-unit>
        <trans-unit id="161598da0e155c4bc604bc3d33654d366826f614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scheme&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URL scheme, either &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo; (default &amp;lsquo;http&amp;rsquo;)</source>
          <target state="translated">&lt;strong&gt;scheme&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URL scheme, either &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo; (default &amp;lsquo;http&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="2629cf5306cbf82e7ce168597407ec6fd7a0b158" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;secure&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;보안&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="74ce8e30ed27442bcf965176a7b9ca55c28ed187" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;secure&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;secure&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="c25ffe8b7225d07a0158c7f82660bcd445ce55d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;serializer&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; A function taking the form &lt;code&gt;func(req, resp, exception)&lt;/code&gt;, where &lt;code&gt;req&lt;/code&gt; is the request object that was passed to the responder method, &lt;code&gt;resp&lt;/code&gt; is the response object, and &lt;code&gt;exception&lt;/code&gt; is an instance of &lt;code&gt;falcon.HTTPError&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;serializer&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt; ) &amp;ndash; &lt;code&gt;func(req, resp, exception)&lt;/code&gt; 형식의 함수입니다 . 여기서 &lt;code&gt;req&lt;/code&gt; 는 responder 메서드에 전달 된 요청 객체이고 &lt;code&gt;resp&lt;/code&gt; 는 응답 객체이며 &lt;code&gt;exception&lt;/code&gt; 은 &lt;code&gt;falcon.HTTPError&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="3f4d22bcfcf32c25e7368103476c2a3f9e5c1ac2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;serializer&lt;/strong&gt; (&lt;em&gt;callable&lt;/em&gt;) &amp;ndash; A function taking the form &lt;code&gt;func(req, resp, exception)&lt;/code&gt;, where &lt;code&gt;req&lt;/code&gt; is the request object that was passed to the responder method, &lt;code&gt;resp&lt;/code&gt; is the response object, and &lt;code&gt;exception&lt;/code&gt; is an instance of &lt;code&gt;falcon.HTTPError&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;serializer&lt;/strong&gt; ( &lt;em&gt;callable&lt;/em&gt; ) &amp;ndash; &lt;code&gt;func(req, resp, exception)&lt;/code&gt; 형식을 취하는 함수입니다 . 여기서 &lt;code&gt;req&lt;/code&gt; 는 응답자 메서드에 전달 된 요청 객체이고 &lt;code&gt;resp&lt;/code&gt; 는 응답 객체이며 &lt;code&gt;exception&lt;/code&gt; 은 &lt;code&gt;falcon.HTTPError&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="b5be9328e992f823cfc78a77d2d0869267afdcee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sink&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; A callable taking the form &lt;code&gt;func(req, resp)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;sink&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt; ) &amp;ndash; &lt;code&gt;func(req, resp)&lt;/code&gt; 형식의 콜 러블 .</target>
        </trans-unit>
        <trans-unit id="45e3e16cd7dd2ba2829b59a2df1f54497139b329" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sink&lt;/strong&gt; (&lt;em&gt;callable&lt;/em&gt;) &amp;ndash; A callable taking the form &lt;code&gt;func(req, resp)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;sink&lt;/strong&gt; ( &lt;em&gt;callable&lt;/em&gt; ) &amp;ndash; &lt;code&gt;func(req, resp)&lt;/code&gt; 형식을 취하는 콜 러블 입니다.</target>
        </trans-unit>
        <trans-unit id="30fbdb2fd28b5f0f9505d8813718a64347e14be2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP status string, including status code and reason string</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 상태 코드 및 이유 문자열을 포함한 HTTP 상태 문자열</target>
        </trans-unit>
        <trans-unit id="0a99309ad2a833a0033b97402593c344235e9d95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default status string to use in responses</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 응답에 사용할 기본 상태 문자열</target>
        </trans-unit>
        <trans-unit id="58593536ef7438af40c5bbc095a6b63f57677d08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;ldquo;400 Bad Request&amp;rdquo;</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; HTTP 상태 코드 및 텍스트 (예 : &quot;400 Bad Request&quot;)</target>
        </trans-unit>
        <trans-unit id="4aef11e1ad1cfe3914e154efa705ce49d552b83f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;lsquo;748 Confounded by Ponies&amp;rsquo;.</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; HTTP 상태 코드 및 '748 Confounded by Ponies'와 같은 텍스트</target>
        </trans-unit>
        <trans-unit id="b6acaf699a882c3702b30781cec01307874da651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; An HTTP status string, including status code and reason string</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 상태 코드 및 이유 문자열을 포함한 HTTP 상태 문자열</target>
        </trans-unit>
        <trans-unit id="1e1378ac696d73e5a9f4393e6b92e71ddcdb94ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Default status string to use in responses</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 응답에 사용할 기본 상태 문자열</target>
        </trans-unit>
        <trans-unit id="5fb3906cb08d36a76842cbd8114d02f72388fb10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;ldquo;400 Bad Request&amp;rdquo;</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; &quot;400 Bad Request&quot;와 같은 HTTP 상태 코드 및 텍스트</target>
        </trans-unit>
        <trans-unit id="3ac5846f8d06059b7b304d5f414b5fd5871f33ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; HTTP status code and text, such as &amp;lsquo;748 Confounded by Ponies&amp;rsquo;.</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; '748 Confounded by Ponies'와 같은 HTTP 상태 코드 및 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="ffc35fa55d7db062b12535a414a874522e314342" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status_code&lt;/strong&gt; &amp;ndash; integer or string that can be converted to an integer</source>
          <target state="translated">&lt;strong&gt;status_code&lt;/strong&gt; &amp;ndash; 정수 또는 정수로 변환 할 수있는 문자열</target>
        </trans-unit>
        <trans-unit id="3e1548f0cbdc4c8f2d40a4e2652348b5da034dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is found (default &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt; ) &amp;ndash; param이 발견 될 때만 param 값을 배치 할 &lt;code&gt;dict&lt;/code&gt; - like 객체입니다 (기본값 &lt;code&gt;None&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a7302b126fb439cc6ee5771a26f2467c6c3290e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is present.</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt; ) &amp;ndash; param이 존재하는 경우에만 param의 값을 배치 할 &lt;code&gt;dict&lt;/code&gt; - like 객체입니다.</target>
        </trans-unit>
        <trans-unit id="2b092dbf1b2312e95e2227b2119eadaefd4515a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is found (default &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt; ) &amp;ndash; param 값을 배치 할 &lt;code&gt;dict&lt;/code&gt; 유사 객체이지만 매개 변수가 발견 된 경우에만 해당됩니다 (기본값 &lt;code&gt;None&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="322ab32608b1ab67be5af15927af9ed4a7c00a39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;store&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; A &lt;code&gt;dict&lt;/code&gt;-like object in which to place the value of the param, but only if the param is present.</source>
          <target state="translated">&lt;strong&gt;store&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt; ) &amp;ndash; param의 값을 배치 할 &lt;code&gt;dict&lt;/code&gt; 와 유사한 객체이지만 param이있는 경우에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="4573151b1f3cfaa44352fc00b327f3aab4e54404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stream&lt;/strong&gt; &amp;ndash; A readable file-like object.</source>
          <target state="translated">&lt;strong&gt;stream&lt;/strong&gt; &amp;ndash; 읽을 수있는 파일 류 객체.</target>
        </trans-unit>
        <trans-unit id="d15ca432f08ed39e6648384ac0c3358389271fb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stream&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt;) &amp;ndash; Input data to deserialize.</source>
          <target state="translated">&lt;strong&gt;stream&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/functions.html#object&quot;&gt;object&lt;/a&gt; ) &amp;ndash; 역 직렬화 할 입력 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="37586746b9d4a99a9fc3535b7125affb728c01c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suffix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Optional responder name suffix for this route. If a suffix is provided, Falcon will map GET requests to &lt;code&gt;on_get_{suffix}()&lt;/code&gt;, POST requests to &lt;code&gt;on_post_{suffix}()&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt;suffix&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash;이 경로에 대한 선택적 응답자 이름 접미사. 접미사가 제공되면 Falcon은 GET 요청을 &lt;code&gt;on_get_{suffix}()&lt;/code&gt; 에 &lt;code&gt;on_post_{suffix}()&lt;/code&gt; 하고 POST 요청을 on_post_ {suffix} () 등에 매핑합니다 .</target>
        </trans-unit>
        <trans-unit id="5ded38f50ff2bc7df71b722f23d38f6fe5b49175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suffix&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Optional responder name suffix for this route. If a suffix is provided, Falcon will map GET requests to &lt;code&gt;on_get_{suffix}()&lt;/code&gt;, POST requests to &lt;code&gt;on_post_{suffix}()&lt;/code&gt;, etc. In this way, multiple closely-related routes can be mapped to the same resource. For example, a single resource class can use suffixed responders to distinguish requests for a single item vs. a collection of those same items. Another class might use a suffixed responder to handle a shortlink route in addition to the regular route for the resource.</source>
          <target state="translated">&lt;strong&gt;suffix&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash;이 경로에 대한 선택적 응답자 이름 접미사. 접미사가 제공되면 Falcon은 GET 요청을 &lt;code&gt;on_get_{suffix}()&lt;/code&gt; 에 &lt;code&gt;on_post_{suffix}()&lt;/code&gt; 하고 POST 요청을 on_post_ {suffix} () 등에 매핑합니다. 이러한 방식으로 밀접하게 관련된 여러 경로를 동일한 리소스에 매핑 할 수 있습니다. 예를 들어 단일 리소스 클래스는 접미사가 붙은 응답자를 사용하여 단일 항목에 대한 요청과 동일한 항목 모음을 구분할 수 있습니다. 또 다른 클래스는 리소스에 대한 일반 경로 외에 짧은 링크 경로를 처리하기 위해 접미사가 붙은 응답자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c80f7a6f6440d26c90f3e52575dd8fb66201358" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;target&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Target IRI for the resource identified by the link. Will be converted to a URI, if necessary, per &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987, Section 3.1.&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;target&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 링크로 식별 된 자원의 대상 IRI 필요한 경우 &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987, 섹션 3.1에&lt;/a&gt; 따라 URI로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b0e07fc100e5a021a55970aab5aa3e7f73e4bedb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;target&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Target IRI for the resource identified by the link. Will be converted to a URI, if necessary, per &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987, Section 3.1.&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;target&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 링크로 식별되는 리소스에 대한 대상 IRI입니다. 필요한 경우 &lt;a href=&quot;https://tools.ietf.org/html/rfc3987#section-3.1.&quot;&gt;RFC 3987, 섹션 3.1에&lt;/a&gt; 따라 URI로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e407b9a990d4c092f41a9a6e4f58b49e1642211c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The template to compile. Note that field names are restricted to ASCII a-z, A-Z, and the underscore character.</source>
          <target state="translated">&lt;strong&gt;template&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 컴파일 할 템플릿입니다. 필드 이름은 ASCII az, AZ 및 밑줄 문자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="38752ca79a2c92a5a7075ac7ac8a803661b77f6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The template to compile. Note that field names are restricted to ASCII a-z, A-Z, and the underscore character.</source>
          <target state="translated">&lt;strong&gt;template&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 컴파일 할 템플릿입니다. 필드 이름은 ASCII az, AZ 및 밑줄 문자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="e104bf4c21aef6fad239e28f2f78390c4ea0651d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;400 Bad Request&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '400 Bad Request').</target>
        </trans-unit>
        <trans-unit id="4320ccb4499af8d1061a23bfff4f8c39fe24b014" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;401 Unauthorized&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '401 Unauthorized').</target>
        </trans-unit>
        <trans-unit id="8f92c37e3a43ff79557349a2d63ac78b6b502eae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;403 Forbidden&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '403 Forbidden').</target>
        </trans-unit>
        <trans-unit id="03ca8cbcedd647422b9628c50b9f804dd002d349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;409 Conflict&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본 '409 충돌').</target>
        </trans-unit>
        <trans-unit id="7ae32ee240165f880c172a545bb3990a045a4c41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;411 Length Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '411 Length Required').</target>
        </trans-unit>
        <trans-unit id="e13f5cf3f540158dc8c3170c64871d171bc2d491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;412 Precondition Failed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '412 Precondition Failed').</target>
        </trans-unit>
        <trans-unit id="701997da83a8cd1cd4679b4b11d818f755b8a78b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;413 Request Entity Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '413 Request Entity Too Large').</target>
        </trans-unit>
        <trans-unit id="9a25b9defd25dd6d895514e1de6296d79dfe98e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;414 URI Too Long&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '414 URI Too Long').</target>
        </trans-unit>
        <trans-unit id="b5fc43b3e7c4c3bb0400b0cd333db5303d7c8e00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;422 Unprocessable Entity&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '422 처리 할 수없는 엔티티').</target>
        </trans-unit>
        <trans-unit id="72d80e70eff7903ee5a8e1c3de657d3b433829fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;423 Locked&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '423 Locked').</target>
        </trans-unit>
        <trans-unit id="67a3c4a2be5af2ae2f5d6f1ec7f8f2f806a1f318" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;424 Failed Dependency&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '424 Failed Dependency')</target>
        </trans-unit>
        <trans-unit id="86ce2a3739d409e91ce55a01dadad526ec023d83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;428 Precondition Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '428 사전 조건 필요').</target>
        </trans-unit>
        <trans-unit id="ab023ad028146b9cbcd15abf9046a2e09de80d69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;429 Too Many Requests&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '429 Too Many Requests').</target>
        </trans-unit>
        <trans-unit id="d838fa09f7ca6e4d2d36e44548f472124d99763b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;431 Request Header Fields Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 : 431 요청 헤더 필드가 너무 큼).</target>
        </trans-unit>
        <trans-unit id="6b90c8a0da15d8d452ab86ef8e9eb2c3b736721e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;451 Unavailable For Legal Reasons&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값은 '451 법적 사유로 사용할 수 없음').</target>
        </trans-unit>
        <trans-unit id="1102d15bae94c3cbe4e6b60e1170dd087aeb190f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;500 Internal Server Error&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '500 Internal Server Error').</target>
        </trans-unit>
        <trans-unit id="49859c7ef0837ea473a1c139b0c432e48f558506" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;502 Bad Gateway&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '502 Bad Gateway').</target>
        </trans-unit>
        <trans-unit id="5c9fa01c4de7cd9e6396c6b3f595bfee801a9d61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;503 Service Unavailable&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본 '503 서비스를 사용할 수 없음').</target>
        </trans-unit>
        <trans-unit id="5b4d2060ff1886c79427ee217617a2aff5d8513d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;507 Insufficient Storage&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 : '507 스토리지 부족')</target>
        </trans-unit>
        <trans-unit id="bc4c55bc48b4eb75ae5d00db371540c6b64dd333" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;508 Loop Detected&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '508 Loop Detected').</target>
        </trans-unit>
        <trans-unit id="9c18b3c97aad9e1399ea8d23abb57ca8ea47595d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;511 Network Authentication Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '511 네트워크 인증 필요').</target>
        </trans-unit>
        <trans-unit id="d0568a6ede027a44416a209b5bb52e5771678156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, and &lt;code&gt;description&lt;/code&gt; is also not provided, no body will be included in the response.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 인간 친화적 오류 제목입니다. 제공되지 않고 &lt;code&gt;description&lt;/code&gt; 도 제공되지 않으면 응답에 본문이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0cb6d9cdc59ee7d712eb10617fb97a40fcff3a79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, defaults to the HTTP status line as determined by the &lt;code&gt;status&lt;/code&gt; argument.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 인간 친화적 오류 제목입니다. 제공하지 않으면 &lt;code&gt;status&lt;/code&gt; 인수에 의해 결정된 HTTP 상태 행이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="b7947c841eff0d0d09701505be442d5ca409e9de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-readable label for the destination of the link (default &lt;code&gt;None&lt;/code&gt;). If the title includes non-ASCII characters, you will need to use &lt;code&gt;title_star&lt;/code&gt; instead, or provide both a US-ASCII version using &lt;code&gt;title&lt;/code&gt; and a Unicode version using &lt;code&gt;title_star&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 링크 대상에 대한 사람이 읽을 수있는 레이블입니다 (기본값 : &lt;code&gt;None&lt;/code&gt; ). 제목에 ASCII가 아닌 문자가 포함 된 경우 대신 &lt;code&gt;title_star&lt;/code&gt; 를 사용 하거나 &lt;code&gt;title&lt;/code&gt; 을 사용하는 US-ASCII 버전 과 &lt;code&gt;title_star&lt;/code&gt; 를 사용하는 유니 코드 버전을 모두 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="52caa1ebfc55f5783d0c69aa39bd9a7f03222a86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;400 Bad Request&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '400 Bad Request').</target>
        </trans-unit>
        <trans-unit id="92a9338c5639276d85c717604726a4966acf2ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;401 Unauthorized&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '401 Unauthorized').</target>
        </trans-unit>
        <trans-unit id="0f825b4308d5d45fef84c190d0f709aba01bb5d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;403 Forbidden&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '403 Forbidden').</target>
        </trans-unit>
        <trans-unit id="f3d931746ae1663c7a35b07ddfd032c795b0564c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;409 Conflict&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '409 Conflict').</target>
        </trans-unit>
        <trans-unit id="20ef6a48ad29e42164465b8d5bcccad5b62fc0b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;411 Length Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '411 길이 필요').</target>
        </trans-unit>
        <trans-unit id="304a5f0c77ebc67ffc66017ab1a71481efcaf614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;412 Precondition Failed&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '412 Precondition Failed').</target>
        </trans-unit>
        <trans-unit id="700abd62481d17368bba30e662d93e2dcc1bca2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;413 Payload Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '413 Payload Too Large').</target>
        </trans-unit>
        <trans-unit id="4a8989377ab5ba47494d37c4fe6444bcc62216ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;414 URI Too Long&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '414 URI Too Long').</target>
        </trans-unit>
        <trans-unit id="ed020b1031540d7109a4560f80f15a1140800952" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;422 Unprocessable Entity&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '422 Unprocessable Entity').</target>
        </trans-unit>
        <trans-unit id="a970094bd44fe64b97cddf6bb87b1cfd73124483" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;423 Locked&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '423 Locked').</target>
        </trans-unit>
        <trans-unit id="4357fd96f471ba5ca8dcb0e9f01d9c54fce57903" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;424 Failed Dependency&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '424 Failed Dependency').</target>
        </trans-unit>
        <trans-unit id="4b3cfb811054dc169cb3c46e6189b86fe08f7957" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;428 Precondition Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '428 Precondition Required').</target>
        </trans-unit>
        <trans-unit id="54ef63477b698f4954bd1f6f423c97c452064cd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;429 Too Many Requests&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '429 Too Many Requests').</target>
        </trans-unit>
        <trans-unit id="ce7ec0cde1eefb532fb8cf69a2c463453715ea4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;431 Request Header Fields Too Large&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '431 Request Header Fields Too Large').</target>
        </trans-unit>
        <trans-unit id="a4caca0557259b63b22b0abfb27de2d66ba29abf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;451 Unavailable For Legal Reasons&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '451 Unavailable For Legal Reasons').</target>
        </trans-unit>
        <trans-unit id="e8a75e251e208521cad0f7b92a2303252867262b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;500 Internal Server Error&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '500 내부 서버 오류').</target>
        </trans-unit>
        <trans-unit id="afa80d48909500a5de05b94e273d360e7cfb3726" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;502 Bad Gateway&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '502 Bad Gateway').</target>
        </trans-unit>
        <trans-unit id="6a600bb5263e84c95d4c2bbf5b28ae20beb448d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;503 Service Unavailable&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '503 Service Unavailable').</target>
        </trans-unit>
        <trans-unit id="7fca39d1f73f827c798a482b20d8b776a5c31372" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;507 Insufficient Storage&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '507 Insufficient Storage').</target>
        </trans-unit>
        <trans-unit id="b4b3d70c218e0e6916c0c806639eba5297c93695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;508 Loop Detected&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '508 Loop Detected').</target>
        </trans-unit>
        <trans-unit id="bfa0e1fff710f4e18b6d802e221e33ea6d998d81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Error title (default &amp;lsquo;511 Network Authentication Required&amp;rsquo;).</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 오류 제목 (기본값 '511 네트워크 인증 필요').</target>
        </trans-unit>
        <trans-unit id="d614f599725b67bece2e6ab60c940762ee263df1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, and &lt;code&gt;description&lt;/code&gt; is also not provided, no body will be included in the response.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 사람에게 친숙한 오류 제목입니다. 제공되지 않고 &lt;code&gt;description&lt;/code&gt; 도 제공되지 않은 경우 응답에 본문이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85203491573221cd678852960292851da998f35c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-friendly error title. If not provided, defaults to the HTTP status line as determined by the &lt;code&gt;status&lt;/code&gt; argument.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 사람에게 친숙한 오류 제목입니다. 제공되지 않은 경우 &lt;code&gt;status&lt;/code&gt; 인수에 의해 결정된 HTTP 상태 행이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="75d7a55470dd21220b4d2966d4f8290163893e0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Human-readable label for the destination of the link (default &lt;code&gt;None&lt;/code&gt;). If the title includes non-ASCII characters, you will need to use &lt;code&gt;title_star&lt;/code&gt; instead, or provide both a US-ASCII version using &lt;code&gt;title&lt;/code&gt; and a Unicode version using &lt;code&gt;title_star&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;title&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 사람이 읽을 수있는 링크 대상 레이블입니다 (기본값 &lt;code&gt;None&lt;/code&gt; ). 제목에 ASCII가 아닌 문자가 포함 된 경우 &lt;code&gt;title_star&lt;/code&gt; 를 대신 사용 하거나 &lt;code&gt;title&lt;/code&gt; 을 사용하는 US-ASCII 버전 과 &lt;code&gt;title_star&lt;/code&gt; 를 사용하는 유니 코드 버전을 모두 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d40e8ebe8e0da775ad123bad351feef50f30b9e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title_star&lt;/strong&gt; (&lt;em&gt;tuple of str&lt;/em&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;title_star&lt;/strong&gt; ( &lt;em&gt;str 튜플&lt;/em&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="fc2f1baeba4deeadd83e98213a8a3281e40b8fa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; An optional transform function that takes as input each element in the list as a &lt;code&gt;str&lt;/code&gt; and outputs a transformed element for inclusion in the list that will be returned. For example, passing &lt;code&gt;int&lt;/code&gt; will transform list items into numbers.</source>
          <target state="translated">&lt;strong&gt;transform&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#callable&quot;&gt;callable&lt;/a&gt; ) &amp;ndash; 목록의 각 요소를 &lt;code&gt;str&lt;/code&gt; 로 입력하고 반환 될 목록에 포함 할 변환 된 요소를 출력 하는 선택적 변환 함수입니다 . 예를 들어, &lt;code&gt;int&lt;/code&gt; 를 전달 하면 목록 항목이 숫자로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="68179d354d78de6789a0347cf2ad4ebd28dfa771" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#callable&quot;&gt;callable&lt;/a&gt;) &amp;ndash; An optional transform function that takes as input each element in the list as a &lt;code&gt;str&lt;/code&gt; and outputs a transformed element for inclusion in the list that will be returned. For example, passing &lt;code&gt;int&lt;/code&gt; will transform list items into numbers.</source>
          <target state="translated">&lt;strong&gt;transform&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/functions.html#callable&quot;&gt;callable&lt;/a&gt; ) &amp;ndash; 목록의 각 요소를 &lt;code&gt;str&lt;/code&gt; 로 입력으로 취하고 반환 될 목록에 포함하기 위해 변환 된 요소를 출력 하는 선택적 변환 함수입니다 . 예를 들어 &lt;code&gt;int&lt;/code&gt; 를 전달 하면 목록 항목이 숫자로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="4ed2bbcf709e2a73627c45bfc2e3142c91ee44b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type_hint&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Provides a hint as to the media type of the result of dereferencing the link (default &lt;code&gt;None&lt;/code&gt;). As noted in RFC 5988, this is only a hint and does not override the Content-Type header returned when the link is followed.</source>
          <target state="translated">&lt;strong&gt;type_hint&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 링크 역 참조 결과의 미디어 유형에 대한 힌트를 제공합니다 (기본값 &lt;code&gt;None&lt;/code&gt; ). RFC 5988에서 언급했듯이 이것은 힌트 일 뿐이며 링크를 따라갈 때 반환되는 Content-Type 헤더를 재정의하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9f3c90b6acc0d4b5c480fd2a771db9948290bc6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type_hint&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Provides a hint as to the media type of the result of dereferencing the link (default &lt;code&gt;None&lt;/code&gt;). As noted in RFC 5988, this is only a hint and does not override the Content-Type header returned when the link is followed.</source>
          <target state="translated">&lt;strong&gt;type_hint&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 링크 역 참조 결과의 미디어 유형에 대한 힌트를 제공합니다 (기본값 &lt;code&gt;None&lt;/code&gt; ). RFC 5988에서 언급했듯이 이것은 힌트 일 뿐이며 링크를 따라갈 때 반환되는 Content-Type 헤더를 재정의하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c91ddcc106a1ec7d1e4aa1c9c12acf604a56075" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unquote_plus&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt;) &amp;ndash; Set to &lt;code&gt;False&lt;/code&gt; to retain any plus (&amp;lsquo;+&amp;rsquo;) characters in the given string, rather than converting them to spaces (default &lt;code&gt;True&lt;/code&gt;). Typically you should set this to &lt;code&gt;False&lt;/code&gt; when decoding any part of a URI other than the query string.</source>
          <target state="translated">&lt;strong&gt;unquote_plus&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/functions.html#bool&quot;&gt;bool&lt;/a&gt; ) &amp;ndash; 주어진 문자열에서 더하기 ( '+') 문자를 공백으로 변환하지 않고 유지 하려면 &lt;code&gt;False&lt;/code&gt; 로 설정 합니다 (기본값 &lt;code&gt;True&lt;/code&gt; ). 일반적으로 쿼리 문자열 이외의 URI 부분을 디코딩 할 때이 값을 &lt;code&gt;False&lt;/code&gt; 로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="aa0115cadc84a13af05fc9b5b9660d1048b4fa39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI fragment to encode. It is assumed not to cross delimiter boundaries, and so any reserved URI delimiter characters included in it will be escaped. If &lt;code&gt;value&lt;/code&gt; is a wide string (i.e., &lt;code&gt;six.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 인코딩 할 URI 조각입니다. 분리 문자 경계를 넘지 않는 것으로 가정되므로 여기에 포함 된 예약 된 URI 분리 문자는 이스케이프됩니다. 경우 &lt;code&gt;value&lt;/code&gt; 넓은 문자열 (즉, 인 &lt;code&gt;six.text_type&lt;/code&gt; ), 그것은 UTF-8 바이트 배열로 인코딩되고있는 멀티 서열 퍼센트 부호화 그대로있을 것이다.</target>
        </trans-unit>
        <trans-unit id="f9a3a4e15dcc1ce3ae9d365b629fdb6ab1120752" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI or part of a URI to encode. If this is a wide string (i.e., &lt;code&gt;six.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 인코딩 할 URI 또는 ​​URI의 일부입니다. 이것이 넓은 문자열 인 경우 (즉, &lt;code&gt;six.text_type&lt;/code&gt; ) UTF-8 바이트 배열로 인코딩되며 모든 멀티 바이트 시퀀스는 그대로 퍼센트 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="6ff99339358dca362409f03988c8bfb7a6a053d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; The requested path to route.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 요청 된 라우팅 경로.</target>
        </trans-unit>
        <trans-unit id="9f5891897389a108ca14028d6d2801652a327d35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI fragment to encode. It is assumed not to cross delimiter boundaries, and so any reserved URI delimiter characters included in it will be escaped. If &lt;code&gt;value&lt;/code&gt; is a wide string (i.e., &lt;code&gt;compat.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 인코딩 할 URI 조각. 구분자 경계를 넘지 않는 것으로 간주되므로 여기에 포함 된 예약 된 URI 구분 문자는 이스케이프됩니다. 경우 &lt;code&gt;value&lt;/code&gt; 다양한 캐릭터 (예이다 &lt;code&gt;compat.text_type&lt;/code&gt; 가 ), 그것은 UTF-8 바이트 배열로 인코딩되고있는 멀티 서열 퍼센트 부호화 그대로있을 것이다.</target>
        </trans-unit>
        <trans-unit id="8b4283d3e641d19fa935138c2e70d0e6564366f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; URI or part of a URI to encode. If this is a wide string (i.e., &lt;code&gt;compat.text_type&lt;/code&gt;), it will be encoded to a UTF-8 byte array and any multibyte sequences will be percent-encoded as-is.</source>
          <target state="translated">&lt;strong&gt;uri&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 인코딩 할 URI 또는 ​​URI의 일부입니다. 이것이 와이드 문자열 (즉, &lt;code&gt;compat.text_type&lt;/code&gt; )이면 UTF-8 바이트 배열로 인코딩되고 모든 멀티 바이트 시퀀스는있는 그대로 퍼센트 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="a6912fe364399cc85dd87520933bc3910261678f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri_template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;uri_template&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="654f53c5ce5c83e0542e725ae39096b0e13e81d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri_template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash;</source>
          <target state="translated">&lt;strong&gt;uri_template&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash;</target>
        </trans-unit>
        <trans-unit id="81fc40a75ae517cca52d5737e453fa2109a6b0c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uri_template&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; A URI template to use for the route</source>
          <target state="translated">&lt;strong&gt;uri_template&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 경로에 사용할 URI 템플릿</target>
        </trans-unit>
        <trans-unit id="5e643a75b8a99fdf007993da9f9c47fe7e989881" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie value</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 쿠키 값</target>
        </trans-unit>
        <trans-unit id="37cb31109ecb31f8eb6e6375ceb95a54cda37dc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original string to convert.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 변환 할 원본 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b56c2a5de16b903100f90e16572fe1fa619099e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Value for the header. Must be convertable to &lt;code&gt;str&lt;/code&gt; or be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;. Strings must contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/functions.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 헤더 값입니다. &lt;code&gt;str&lt;/code&gt; 로 변환 가능 하거나 &lt;code&gt;str&lt;/code&gt; 또는 &lt;code&gt;StringType&lt;/code&gt; 유형 이어야합니다 . 문자열은 US-ASCII 문자 만 포함해야합니다. Python 2.x에서는 &lt;code&gt;unicode&lt;/code&gt; 유형도 허용되지만 이러한 문자열은 US-ASCII로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="2f9ffbec4ff8b87685488b3b357ff713328c8534" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Cookie value</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 쿠키 값</target>
        </trans-unit>
        <trans-unit id="1386a1ad9884ebcd805b2ad4edccb89821d8a43f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Original string to convert.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 변환 할 원래 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="b61ecbe5e93d201be2aca8af265cd12222f5592a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Value for the header. Must be convertable to &lt;code&gt;str&lt;/code&gt; or be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;. Strings must contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 헤더 값. &lt;code&gt;str&lt;/code&gt; 로 변환 가능 하거나 &lt;code&gt;str&lt;/code&gt; 또는 &lt;code&gt;StringType&lt;/code&gt; 유형 이어야합니다 . 문자열에는 US-ASCII 문자 만 포함되어야합니다. Python 2.x에서는 &lt;code&gt;unicode&lt;/code&gt; 유형도 허용되지만 이러한 문자열도 US-ASCII로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="412ffa6c39f062ae746c92e8d8916d8182354bc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wsgierrors&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/2/library/io.html#module-io&quot;&gt;io&lt;/a&gt;) &amp;ndash; The stream to use as &lt;em&gt;wsgierrors&lt;/em&gt; (default &lt;code&gt;sys.stderr&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;wsgierrors&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/2/library/io.html#module-io&quot;&gt;io&lt;/a&gt; ) &amp;ndash; &lt;em&gt;wsgierrors&lt;/em&gt; 로 사용할 스트림 (기본 &lt;code&gt;sys.stderr&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8229f7cb5e35ecc16426036dc27b9f2ff3221c2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wsgierrors&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/io.html#module-io&quot;&gt;io&lt;/a&gt;) &amp;ndash; The stream to use as &lt;em&gt;wsgierrors&lt;/em&gt; (default &lt;code&gt;sys.stderr&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;wsgierrors&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/io.html#module-io&quot;&gt;io&lt;/a&gt; ) &amp;ndash; &lt;em&gt;wsgierrors&lt;/em&gt; 로 사용할 스트림 (기본값 &lt;code&gt;sys.stderr&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bb7d6df6d917978324379be400bed47d56451a9e" translate="yes" xml:space="preserve">
          <source>A 2-member &lt;code&gt;tuple&lt;/code&gt; parsed from the value of the Range header.</source>
          <target state="translated">Range 헤더의 값에서 구문 분석 된 2- 멤버 &lt;code&gt;tuple&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0fa83428a743df148996cc3f0b002ea9fa94c57e" translate="yes" xml:space="preserve">
          <source>A 303 response to a GET request indicates that the origin server does not have a representation of the target resource that can be transferred over HTTP. However, the Location header in the response may be dereferenced to obtain a representation for an alternative resource. The recipient may find this alternative useful, even though it does not represent the original target resource.</source>
          <target state="translated">GET 요청에 대한 303 응답은 오리진 서버에 HTTP를 통해 전송할 수있는 대상 자원의 표현이 없음을 나타냅니다. 그러나 응답의 Location 헤더는 대체 리소스에 대한 표현을 얻기 위해 역 참조 될 수 있습니다. 수신자는이 대안이 원래 대상 자원을 나타내지 않더라도 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b26f1d8f9da0c7cb62f363e6df95050e5f60df3" translate="yes" xml:space="preserve">
          <source>A 4-member tuple composed of (resource, method_map,</source>
          <target state="translated">(resource, method_map,</target>
        </trans-unit>
        <trans-unit id="f7817d960c1bb59ec2d01477ebb45261235a13eb" translate="yes" xml:space="preserve">
          <source>A 404 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">404 응답은 기본적으로 캐시 가능합니다. 즉, 방법 정의 나 명시 적 캐시 제어에 의해 달리 지시되지 않는 한.</target>
        </trans-unit>
        <trans-unit id="0ab2c2d12d08fbcf4e353f15c4fa10fc67f1b31b" translate="yes" xml:space="preserve">
          <source>A 404 status code does not indicate whether this lack of representation is temporary or permanent; the 410 Gone status code is preferred over 404 if the origin server knows, presumably through some configurable means, that the condition is likely to be permanent.</source>
          <target state="translated">404 상태 코드는 이러한 표현 부족이 일시적인지 영구적인지를 나타내지 않습니다. 410 사라짐 상태 코드는 원래 서버가 구성 가능한 수단을 통해 조건이 영구적 일 가능성이 있다는 것을 알고있는 경우 404보다 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="eade9853498c5cfeb88d06d35bd9c62a5fc700af" translate="yes" xml:space="preserve">
          <source>A 405 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">405 응답은 기본적으로 캐시 가능합니다. 즉, 방법 정의 나 명시 적 캐시 제어에 의해 달리 지시되지 않는 한.</target>
        </trans-unit>
        <trans-unit id="52fdfbe087f467e1ae18c5d70c509e91d433cc0d" translate="yes" xml:space="preserve">
          <source>A 410 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">410 응답은 기본적으로 캐시 가능합니다. 즉, 방법 정의 나 명시 적 캐시 제어에 의해 달리 지시되지 않는 한.</target>
        </trans-unit>
        <trans-unit id="2c79f4ae36e5e4a864363ddbc272bfbc4c426dad" translate="yes" xml:space="preserve">
          <source>A 414 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">414 응답은 기본적으로 캐시 가능합니다. 즉, 방법 정의 나 명시 적 캐시 제어에 의해 달리 지시되지 않는 한.</target>
        </trans-unit>
        <trans-unit id="f8ff6c17dca972c9336623f6fa8836c35f4094df" translate="yes" xml:space="preserve">
          <source>A 451 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls.</source>
          <target state="translated">451 응답은 기본적으로 캐시 가능합니다. 즉, 방법 정의 나 명시 적 캐시 제어에 의해 달리 지시되지 않는 한.</target>
        </trans-unit>
        <trans-unit id="d445f24f5412be51d324515e3972946073e60d9e" translate="yes" xml:space="preserve">
          <source>A 501 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2.&quot;&gt;RFC 7234, Section 4.2.2.&lt;/a&gt;</source>
          <target state="translated">501 응답은 기본적으로 캐시 가능합니다. 즉, &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-4.2.2.&quot;&gt;RFC 7234, 섹션 4.2.2에&lt;/a&gt; 설명 된 방법 정의 또는 명시 적 캐시 제어로 달리 표시되지 않는 한 .</target>
        </trans-unit>
        <trans-unit id="47cb5a1ce6e35ddb29ed19150c65c88df9d443c2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of header names and values to set, or a &lt;code&gt;list&lt;/code&gt; of (&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;) tuples. Both &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt;, and only character values 0x00 through 0xFF may be used on platforms that use wide characters.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; 세트 헤더 이름 및 값, 또는 &lt;code&gt;list&lt;/code&gt; (의 &lt;em&gt;이름&lt;/em&gt; , &lt;em&gt;값&lt;/em&gt; ) 튜플. &lt;em&gt;이름&lt;/em&gt; 과 &lt;em&gt;값&lt;/em&gt; 은 모두 &lt;code&gt;str&lt;/code&gt; 또는 &lt;code&gt;StringType&lt;/code&gt; 유형이어야하며 와이드 문자를 사용하는 플랫폼에서는 문자 값 0x00 ~ 0xFF 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50c70ad805f1aae6759433f4d1fbcd4b99e35c5d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;process_request&lt;/em&gt; middleware method may short-circuit further request processing by setting &lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;, e.g.:</source>
          <target state="translated">&lt;em&gt;process_request&lt;/em&gt; 미들웨어있어서 설정하여 단락 상기 요청을 처리 할 수있다 &lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt; &lt;code&gt;complete&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;True&lt;/code&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="78d3d6145ca2b6b67eef1b1fee2d1730a8aa986e" translate="yes" xml:space="preserve">
          <source>A JSON document for the error.</source>
          <target state="translated">오류에 대한 JSON 문서입니다.</target>
        </trans-unit>
        <trans-unit id="4b06f9d330e7e4319c8184206469d8b372f93481" translate="yes" xml:space="preserve">
          <source>A PUT request to &amp;ldquo;/user/kgriffs&amp;rdquo; would be routed to:</source>
          <target state="translated">&quot;/ user / kgriffs&quot;에 대한 PUT 요청은 다음으로 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="aa379ef37c42923b7835e419f99cdc3e4d48b401" translate="yes" xml:space="preserve">
          <source>A URI query string, including the &amp;lsquo;?&amp;rsquo; prefix (unless &lt;code&gt;prefix&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;), or an empty string if no params are given (the &lt;code&gt;dict&lt;/code&gt; is empty).</source>
          <target state="translated">'?'를 포함하는 URI 쿼리 문자열 접두사 ( &lt;code&gt;prefix&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 가 아닌 경우 ) 또는 매개 변수가 제공되지 않은 경우 빈 문자열 ( &lt;code&gt;dict&lt;/code&gt; 가 비어 있음)입니다.</target>
        </trans-unit>
        <trans-unit id="d2080bc00b6c1b4224cda9171d1c456a81e9e14b" translate="yes" xml:space="preserve">
          <source>A UTC datetime instance corresponding to the given HTTP date.</source>
          <target state="translated">지정된 HTTP 날짜에 해당하는 UTC 날짜 / 시간 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="80a2e1ae5c1b4b60cdffa7dd93661c4541303c96" translate="yes" xml:space="preserve">
          <source>A WSGI application is just a callable with a well-defined signature so that you can host the application with any web server that understands the &lt;a href=&quot;http://legacy.python.org/dev/peps/pep-3333/&quot;&gt;WSGI protocol&lt;/a&gt;.</source>
          <target state="translated">WSGI 응용 프로그램은 잘 정의 된 서명으로 호출 가능하므로 &lt;a href=&quot;http://legacy.python.org/dev/peps/pep-3333/&quot;&gt;WSGI 프로토콜&lt;/a&gt; 을 이해하는 모든 웹 서버에서 응용 프로그램을 호스팅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e5b5fa79dd90565d8dc779762838a5575b027c3" translate="yes" xml:space="preserve">
          <source>A WSGI application is just a callable with a well-defined signature so that you can host the application with any web server that understands the &lt;a href=&quot;https://legacy.python.org/dev/peps/pep-3333/&quot;&gt;WSGI protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a84bb578502a9d8d547b46b8a25260646a93cd4" translate="yes" xml:space="preserve">
          <source>A WSGI application to target when simulating requests (default: &lt;code&gt;falcon.API()&lt;/code&gt;). When testing your application, you will need to set this to your own instance of &lt;code&gt;falcon.API&lt;/code&gt;. For example:</source>
          <target state="translated">요청을 시뮬레이션 할 때 대상으로 지정할 WSGI 애플리케이션 (기본값 : &lt;code&gt;falcon.API()&lt;/code&gt; ). 애플리케이션을 테스트 할 때이를 &lt;code&gt;falcon.API&lt;/code&gt; 의 자체 인스턴스로 설정해야합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="01e54ec15e63e5dfac68ef3378e5da0ed3600aff" translate="yes" xml:space="preserve">
          <source>A case-insensitive dictionary containing all the headers in the response, except for cookies, which may be accessed via the &lt;code&gt;cookies&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;cookies&lt;/code&gt; 속성을 통해 액세스 할 수있는 쿠키를 제외하고 응답의 모든 헤더를 포함하는 대소 문자를 구분하지 않는 사전 입니다.</target>
        </trans-unit>
        <trans-unit id="fd6bd4457f6f7cd1de6f874b7e6297589c9b050d" translate="yes" xml:space="preserve">
          <source>A context manager to temporarily redirect stdout or stderr</source>
          <target state="translated">stdout 또는 stderr을 임시로 리디렉션하는 컨텍스트 관리자</target>
        </trans-unit>
        <trans-unit id="ebe6618d5ef950b1058812abd40abdde0df38d1c" translate="yes" xml:space="preserve">
          <source>A custom error serializer (see &lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt;&lt;code&gt;set_error_serializer()&lt;/code&gt;&lt;/a&gt;) may choose to set a response body regardless of the value of this property.</source>
          <target state="translated">사용자 지정 오류 직렬 변환기 ( &lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt; &lt;code&gt;set_error_serializer()&lt;/code&gt; &lt;/a&gt; 참조 )는이 속성의 값에 관계없이 응답 본문을 설정하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ff53c6104c52469a0071267a59565543379cdbd" translate="yes" xml:space="preserve">
          <source>A custom router is any class that implements the following interface:</source>
          <target state="translated">사용자 정의 라우터는 다음 인터페이스를 구현하는 모든 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="7dc5bedf0245a338de7206a576b3e2e21aec3c73" translate="yes" xml:space="preserve">
          <source>A custom routing engine may be specified when instantiating &lt;a href=&quot;api#falcon.API&quot;&gt;&lt;code&gt;falcon.API()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;api#falcon.API&quot;&gt; &lt;code&gt;falcon.API()&lt;/code&gt; &lt;/a&gt; 인스턴스화 할 때 사용자 지정 라우팅 엔진을 지정할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="214be40aafb89c59151f7d87c9264bd0360cbc5e" translate="yes" xml:space="preserve">
          <source>A decoded URL. If the URL contains escaped non-ASCII characters, UTF-8 is assumed per RFC 3986.</source>
          <target state="translated">디코딩 된 URL. URL에 이스케이프 된 비 ASCII 문자가 포함 된 경우 RFC 3986에 따라 UTF-8이 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="742eebc145eaa51a6431f91f719874a2cbb0c3c2" translate="yes" xml:space="preserve">
          <source>A decoded URL. Will be of type &lt;code&gt;unicode&lt;/code&gt; on Python 2 IFF the URL contained escaped non-ASCII characters, in which case UTF-8 is assumed per RFC 3986.</source>
          <target state="translated">디코딩 된 URL. Python 2 IFF에서 &lt;code&gt;unicode&lt;/code&gt; 유형으로 URL에 이스케이프 된 비 ASCII 문자가 포함되어 있으며이 경우 RFC 3986에 따라 UTF-8이 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="70b80659a9386821056f6ada97663bbfd4480fe4" translate="yes" xml:space="preserve">
          <source>A deserialized object.</source>
          <target state="translated">역 직렬화 된 객체입니다.</target>
        </trans-unit>
        <trans-unit id="6aaa1e837fd4c388134f9ee9743cbe881c4409db" translate="yes" xml:space="preserve">
          <source>A dict of name/value cookie pairs. The returned object should be treated as read-only to avoid unintended side-effects. If a cookie appears more than once in the request, only the first value encountered will be made available here.</source>
          <target state="translated">이름 / 값 쿠키 쌍의 사전. 반환 된 객체는 의도하지 않은 부작용을 피하기 위해 읽기 전용으로 처리되어야합니다. 요청에 쿠키가 두 번 이상 나타나는 경우 처음 발견 된 값만 여기에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="093952f65b1eb68a5300d274aec23ae44aa82585" translate="yes" xml:space="preserve">
          <source>A dict-like object that allows you to configure the media-types that you would like to handle. By default, a handler is provided for the &lt;code&gt;application/json&lt;/code&gt; media type.</source>
          <target state="translated">처리하려는 미디어 유형을 구성 할 수있는 dict-like 개체입니다. 기본적으로 &lt;code&gt;application/json&lt;/code&gt; 미디어 유형에 대한 핸들러가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="abe75a164023c36ad606dd4fbe61be4ae96331e7" translate="yes" xml:space="preserve">
          <source>A dictionary like object that manages internet media type handlers.</source>
          <target state="translated">인터넷 미디어 타입 핸들러를 관리하는 객체와 같은 사전.</target>
        </trans-unit>
        <trans-unit id="6c4c7a082c70949af956c73a371d4aee128cd1b5" translate="yes" xml:space="preserve">
          <source>A dictionary of (&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;) pairs, one per query parameter. Note that &lt;em&gt;value&lt;/em&gt; may be a single &lt;code&gt;str&lt;/code&gt;, or a &lt;code&gt;list&lt;/code&gt; of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">쿼리 매개 변수 당 하나씩 ( &lt;em&gt;name&lt;/em&gt; , &lt;em&gt;value&lt;/em&gt; ) 쌍 의 사전입니다 . 참고 &lt;em&gt;값을&lt;/em&gt; 하나 될 수 &lt;code&gt;str&lt;/code&gt; , 또는 &lt;code&gt;list&lt;/code&gt; 의 &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb70d853f3d2eeb2ac7d7046ff860dd6245a13e0" translate="yes" xml:space="preserve">
          <source>A dictionary of &lt;a href=&quot;#falcon.testing.Cookie&quot;&gt;&lt;code&gt;falcon.testing.Cookie&lt;/code&gt;&lt;/a&gt; values parsed from the response, by name.</source>
          <target state="translated">응답에서 이름별로 구문 분석 된 &lt;a href=&quot;#falcon.testing.Cookie&quot;&gt; &lt;code&gt;falcon.testing.Cookie&lt;/code&gt; &lt;/a&gt; 값 의 사전입니다 .</target>
        </trans-unit>
        <trans-unit id="b9f0d074e7bc459642e07b852dd4e8b7258d4a56" translate="yes" xml:space="preserve">
          <source>A dictionary of header names and values to set, or a &lt;code&gt;list&lt;/code&gt; of (&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;) tuples. Both &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; must be of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;StringType&lt;/code&gt; and contain only US-ASCII characters. Under Python 2.x, the &lt;code&gt;unicode&lt;/code&gt; type is also accepted, although such strings are also limited to US-ASCII.</source>
          <target state="translated">설정할 헤더 이름 및 값 사전 또는 ( &lt;em&gt;name&lt;/em&gt; , &lt;em&gt;value&lt;/em&gt; ) 튜플 &lt;code&gt;list&lt;/code&gt; &lt;em&gt;이름&lt;/em&gt; 과 &lt;em&gt;값&lt;/em&gt; 은 모두 &lt;code&gt;str&lt;/code&gt; 또는 &lt;code&gt;StringType&lt;/code&gt; 이어야하며 US-ASCII 문자 만 포함 해야합니다 . Python 2.x에서는 &lt;code&gt;unicode&lt;/code&gt; 유형도 허용되지만 이러한 문자열은 US-ASCII로 제한됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3cefcaee88015b8738e6852ca9481b441675f9c" translate="yes" xml:space="preserve">
          <source>A dictionary populated with the error&amp;rsquo;s title, description, etc.</source>
          <target state="translated">오류 제목, 설명 등으로 채워진 사전</target>
        </trans-unit>
        <trans-unit id="3811369ceadf4f626aad44d8e04ec968ab5e6cdc" translate="yes" xml:space="preserve">
          <source>A field expression consists of a bracketed field name. For example, given the following template:</source>
          <target state="translated">필드 표현식은 괄호로 묶인 필드 이름으로 구성됩니다. 예를 들어 다음과 같은 템플릿이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="fb2bf91aecfb9022a5d83c0aea2341bc49194996" translate="yes" xml:space="preserve">
          <source>A function of the form &lt;code&gt;func(req, resp, resource, params)&lt;/code&gt;, where &lt;code&gt;resource&lt;/code&gt; is a reference to the resource class instance associated with the request, and &lt;code&gt;params&lt;/code&gt; is a dict of URI Template field names, if any, that will be passed into the resource responder as kwargs.</source>
          <target state="translated">&lt;code&gt;func(req, resp, resource, params)&lt;/code&gt; 형식의 함수 . 여기서 &lt;code&gt;resource&lt;/code&gt; 는 요청과 연관된 자원 클래스 인스턴스에 대한 참조이고 &lt;code&gt;params&lt;/code&gt; 는 URI 템플리트 필드 이름 (있는 경우)으로 전달됩니다. 자원 응답자를 kwargs로</target>
        </trans-unit>
        <trans-unit id="64cc23cdea16a11883d68d5317a00c2765b7e567" translate="yes" xml:space="preserve">
          <source>A function or callable object taking the form &lt;code&gt;func(ex, req, resp, params)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func(ex, req, resp, params)&lt;/code&gt; 형식을 취하는 함수 또는 호출 가능한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="593d97d6e38f58c57da31e839644b507bc06c6ac" translate="yes" xml:space="preserve">
          <source>A function or callable object taking the form &lt;code&gt;func(req, resp, ex, params)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;func(req, resp, ex, params)&lt;/code&gt; 형식을 취하는 함수 또는 호출 가능한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="ef822f5d5dd36e263f3d01b3fb5f46416aaa536f" translate="yes" xml:space="preserve">
          <source>A handler can raise an instance of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt; to communicate information about the issue to the client. Alternatively, a handler may modify &lt;code&gt;resp&lt;/code&gt; directly.</source>
          <target state="translated">처리기는 &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt; 인스턴스를 발생시켜 문제에 대한 정보를 클라이언트에게 전달할 수 있습니다. 또는 핸들러가 &lt;code&gt;resp&lt;/code&gt; 를 직접 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34bd0421ebe52f2d0f4727b20fe33f315779b042" translate="yes" xml:space="preserve">
          <source>A header is missing from the request.</source>
          <target state="translated">요청에 헤더가 없습니다.</target>
        </trans-unit>
        <trans-unit id="04181ac435e54f5f8f9b384b84902ef55be69fdd" translate="yes" xml:space="preserve">
          <source>A mapping of HTTP methods to explicitly defined resource responders.</source>
          <target state="translated">HTTP 메소드를 명시 적으로 정의 된 자원 응답자에 맵핑</target>
        </trans-unit>
        <trans-unit id="a83a802ab426efe79c463b1cd90a6d0e3fe4d8fc" translate="yes" xml:space="preserve">
          <source>A mapping of HTTP methods to responders.</source>
          <target state="translated">응답자에 대한 HTTP 메소드 맵핑</target>
        </trans-unit>
        <trans-unit id="4f268684bc05dd9dd953c528a4411d863e182605" translate="yes" xml:space="preserve">
          <source>A mapping of dot-prefixed file extensions to Internet media types (RFC 2046). Defaults to &lt;code&gt;mimetypes.types_map&lt;/code&gt; after calling &lt;code&gt;mimetypes.init()&lt;/code&gt;.</source>
          <target state="translated">점 접두사가 붙은 파일 확장명을 인터넷 미디어 유형 (RFC 2046)에 매핑합니다. &lt;code&gt;mimetypes.init()&lt;/code&gt; 호출 후 기본값은 &lt;code&gt;mimetypes.types_map&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e332cccd28f9d33eb4afbb0ba6f5e96e9c76b914" translate="yes" xml:space="preserve">
          <source>A number of Falcon add-ons, templates, and complementary packages are available for use in your projects. We&amp;rsquo;ve listed several of these on the &lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wiki&lt;/a&gt; as a starting point, but you may also wish to search PyPI for additional resources.</source>
          <target state="translated">프로젝트에서 여러 가지 Falcon 애드온, 템플릿 및 보완 패키지를 사용할 수 있습니다. &lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon wiki&lt;/a&gt; 에서이 중 몇 가지를 시작점으로 나열 했지만 PyPI에서 추가 리소스를 검색 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c5e2b0cc228fe7bdd151a81d4f136196f397183" translate="yes" xml:space="preserve">
          <source>A parameter in the request is invalid. This error may refer to a parameter in a query string, form, or document that was submitted with the request.</source>
          <target state="translated">요청의 매개 변수가 유효하지 않습니다. 이 오류는 요청과 함께 제출 된 쿼리 문자열, 양식 또는 문서의 매개 변수를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b57a680a5f807b00333509746ff09287451eccf" translate="yes" xml:space="preserve">
          <source>A parameter is missing from the request. This error may refer to a parameter in a query string, form, or document that was submitted with the request.</source>
          <target state="translated">요청에서 매개 변수가 누락되었습니다. 이 오류는 요청과 함께 제출 된 쿼리 문자열, 양식 또는 문서의 매개 변수를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e5200e1596b468706cf774dae342629f076bc78" translate="yes" xml:space="preserve">
          <source>A parsed (&lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt;) tuple from the given host string, with the port converted to an &lt;code&gt;int&lt;/code&gt;. If the host string does not specify a port, &lt;code&gt;default_port&lt;/code&gt; is used instead.</source>
          <target state="translated">제공된 호스트 문자열에서 구문 분석 된 ( &lt;em&gt;host&lt;/em&gt; , &lt;em&gt;port&lt;/em&gt; ) 튜플 이며 &lt;em&gt;포트&lt;/em&gt; 는 &lt;code&gt;int&lt;/code&gt; 로 변환됩니다 . 호스트 문자열이 포트를 지정하지 않으면 &lt;code&gt;default_port&lt;/code&gt; 가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ee604dd26bffc2106fcd079b6b015d61867a7bfb" translate="yes" xml:space="preserve">
          <source>A proposal has been made to add a new routing feature that will afford mapping related routes to a single resource class, if so desired. To learn more, see &lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;#584 on GitHub&lt;/a&gt;.</source>
          <target state="translated">원하는 경우 단일 경로에 관련 경로를 매핑 할 수있는 새로운 라우팅 기능을 추가 할 것을 제안했습니다. 자세한 내용 &lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;은 GitHub의 # 584를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="33da59ad78b2058240b6554e89a0605d7fa63b4e" translate="yes" xml:space="preserve">
          <source>A regex string, typically starting with &amp;lsquo;/&amp;rsquo;, which will trigger the sink if it matches the path portion of the request&amp;rsquo;s URI. Both strings and precompiled regex objects may be specified. Characters are matched starting at the beginning of the URI path.</source>
          <target state="translated">일반적으로 '/'로 시작하는 정규식 문자열은 싱크가 요청 URI의 경로 부분과 일치하면 싱크를 트리거합니다. 문자열과 사전 컴파일 된 정규식 객체를 모두 지정할 수 있습니다. URI 경로의 시작 부분에서 문자가 일치합니다.</target>
        </trans-unit>
        <trans-unit id="413f947eca6fdc60c0f93251cad497872f52d9f8" translate="yes" xml:space="preserve">
          <source>A resource in Falcon is just a regular Python class that includes one or more methods representing the standard HTTP verbs supported by that resource. Each requested URL is mapped to a specific resource.</source>
          <target state="translated">Falcon의 리소스는 해당 리소스에서 지원하는 표준 HTTP 동사를 나타내는 하나 이상의 메서드가 포함 된 일반적인 Python 클래스입니다. 요청 된 각 URL은 특정 리소스에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="674fe5eef9be8e915e2ded580e75350ab802dddb" translate="yes" xml:space="preserve">
          <source>A serializable object supported by the media handlers configured via &lt;a href=&quot;api#falcon.RequestOptions&quot;&gt;&lt;code&gt;falcon.RequestOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;api#falcon.RequestOptions&quot;&gt; &lt;code&gt;falcon.RequestOptions&lt;/code&gt; &lt;/a&gt; 를 통해 구성된 미디어 핸들러에서 지원하는 직렬화 가능한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="ef3dc1d16978cdd5c4d5c8bab2b1f21eb2e30db0" translate="yes" xml:space="preserve">
          <source>A server that wishes to make public why the request has been forbidden can describe that reason in the response payload (if any).</source>
          <target state="translated">요청이 금지 된 이유를 공개하려는 서버는 응답 페이로드 (있는 경우)에서 해당 이유를 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddf8b77c23e904d663539004bdc7e66b01fa1e75" translate="yes" xml:space="preserve">
          <source>A set of behavioral options related to incoming requests. (See also: &lt;a href=&quot;#falcon.RequestOptions&quot;&gt;&lt;code&gt;RequestOptions&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">들어오는 요청과 관련된 일련의 행동 옵션. (또한 &lt;a href=&quot;#falcon.RequestOptions&quot;&gt; &lt;code&gt;RequestOptions&lt;/code&gt; &lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="4ed5cbb3652768e276d8e4a6c06c31a5f978d1e7" translate="yes" xml:space="preserve">
          <source>A set of behavioral options related to outgoing responses. (See also: &lt;a href=&quot;#falcon.ResponseOptions&quot;&gt;&lt;code&gt;ResponseOptions&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">발신 응답과 관련된 일련의 행동 옵션. (또한 &lt;a href=&quot;#falcon.ResponseOptions&quot;&gt; &lt;code&gt;ResponseOptions&lt;/code&gt; &lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="6f0fb560520a78426aab82c394508d2346de7f5f" translate="yes" xml:space="preserve">
          <source>A templatized URI. Care must be taken to ensure the template does not mask any sink patterns, if any are registered.</source>
          <target state="translated">템플릿 화 된 URI입니다. 템플릿이 싱크 패턴을 가리지 않도록주의해야합니다 (등록 된 경우).</target>
        </trans-unit>
        <trans-unit id="8d86fa1b5dab0d76dbd8e24b1e166bc1ef1c2101" translate="yes" xml:space="preserve">
          <source>A tuple to use in constructing a value for the Content-Range header.</source>
          <target state="translated">Content-Range 헤더의 값을 구성하는 데 사용할 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="3a426844a16adf2ed3b639cf387935ed1f1abea4" translate="yes" xml:space="preserve">
          <source>A universal wheel is available on PyPI for the the Falcon framework. Installing it is as simple as:</source>
          <target state="translated">팔콘 프레임 워크를 위해 PyPI에서 범용 휠을 사용할 수 있습니다. 설치는 다음과 같이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="e202bc3f85159de1e37340e10a4c7404c8acd390" translate="yes" xml:space="preserve">
          <source>About Apache 2.0</source>
          <target state="translated">아파치 2.0에 대하여</target>
        </trans-unit>
        <trans-unit id="17d2e05f52f32f2f78c3fb8ea572aa37c10e3a0f" translate="yes" xml:space="preserve">
          <source>Abstract Base Class for an internet media type handler</source>
          <target state="translated">인터넷 미디어 타입 핸들러의 추상 기본 클래스</target>
        </trans-unit>
        <trans-unit id="101586ad6ff3acf4a39d266fd10a4039c1cf0050" translate="yes" xml:space="preserve">
          <source>Abstract base class for URI template field converters.</source>
          <target state="translated">URI 템플릿 필드 변환기의 추상 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="574b19bf8f75e9882d44eade4da3f89b7b621b37" translate="yes" xml:space="preserve">
          <source>Add a link header to the response.</source>
          <target state="translated">응답에 링크 헤더를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="97c3a9fb0a9d4ec6dce52491a565cb02c1ba9a66" translate="yes" xml:space="preserve">
          <source>Add a route to a directory of static files.</source>
          <target state="translated">정적 파일 디렉토리에 경로를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="49b5e6793ca79e68b569612e1db35e89c792f479" translate="yes" xml:space="preserve">
          <source>Additional information about error handling is available in the &lt;a href=&quot;../api/errors#errors&quot;&gt;error handling reference&lt;/a&gt;.</source>
          <target state="translated">오류 처리에 대한 추가 정보는 &lt;a href=&quot;../api/errors#errors&quot;&gt;오류 처리 참조 서에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccd68f8196f0c32164ad6b88fabe8fd76463f0a1" translate="yes" xml:space="preserve">
          <source>Adds a route between a URI path template and a resource.</source>
          <target state="translated">URI 경로 템플릿과 리소스 사이에 경로를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5ece858931644b3ad369df14dbb197c18bbd895a" translate="yes" xml:space="preserve">
          <source>Adds the following attributes to the hooked responder&amp;rsquo;s resource class:</source>
          <target state="translated">후크 된 응답자의 자원 클래스에 다음 속성을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="39d7b40a7d8c45e7c11615b50d3726072eaa63d8" translate="yes" xml:space="preserve">
          <source>After the method returns, setting this flag will cause the framework to skip any remaining &lt;em&gt;process_request&lt;/em&gt; and &lt;em&gt;process_resource&lt;/em&gt; methods, as well as the responder method that the request would have been routed to. However, any &lt;em&gt;process_response&lt;/em&gt; middleware methods will still be called.</source>
          <target state="translated">메서드가 반환 된 후이 플래그를 설정하면 프레임 워크가 나머지 &lt;em&gt;process_request&lt;/em&gt; 및 &lt;em&gt;process_resource&lt;/em&gt; 메서드 와 요청이 라우팅 될 응답자 메서드 를 건너 뜁니다 . 그러나 모든 &lt;em&gt;process_response&lt;/em&gt; 미들웨어 메소드는 계속 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d0fe4f0da3b914d34b2c2b1f4fcb1e0f7bcca9e2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;uri&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="3dd97e94ab0a385279351f809403266798bdd680" translate="yes" xml:space="preserve">
          <source>All Windows developers can use Waitress production-quality pure-Python WSGI server with very acceptable performance. Unfortunately Gunicorn is still not working on Windows and uWSGI need to have Cygwin on Windows installed. Waitress can be good alternative for Windows users if they want quick start using Falcon on it.</source>
          <target state="translated">모든 Windows 개발자는 매우 적합한 성능으로 Waitress 프로덕션 품질의 순수 Python WSGI 서버를 사용할 수 있습니다. 불행히도 Gunicorn은 여전히 ​​Windows에서 작동하지 않으며 uWSGI에는 Windows에 Cygwin이 설치되어 있어야합니다. Falcon을 사용하여 빠른 시작을 원한다면 Windows 사용자에게는 웨이트리스가 좋은 대안이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="585f32ae0635464b5a3e34c72ef3772232d9d8a7" translate="yes" xml:space="preserve">
          <source>All classes are available directly in the &lt;code&gt;falcon&lt;/code&gt; package namespace:</source>
          <target state="translated">모든 클래스는 &lt;code&gt;falcon&lt;/code&gt; 패키지 네임 스페이스 에서 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebd37e65d26bb4b8d554283b3a8ae382addfbefb" translate="yes" xml:space="preserve">
          <source>All green! But since we used a mock, we&amp;rsquo;re no longer covering the actual saving of the image. Let&amp;rsquo;s add a test for that:</source>
          <target state="translated">모든 녹색! 그러나 우리는 모형을 사용했기 때문에 더 이상 이미지의 실제 저장을 다루지 않습니다. 이에 대한 테스트를 추가하겠습니다 :</target>
        </trans-unit>
        <trans-unit id="795ce2d5c7d53e2c0a33dec0a507666bbc7cfefd" translate="yes" xml:space="preserve">
          <source>All reserved characters are lumped together into a single set of &amp;ldquo;delimiters&amp;rdquo;, and everything in that set is escaped.</source>
          <target state="translated">예약 된 모든 문자는 하나의 &quot;구분 기호&quot;로 묶이고 해당 세트의 모든 항목이 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="3cd04e628be90c619e6e598c8d493e3ecb104500" translate="yes" xml:space="preserve">
          <source>Also note the use of &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;. The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, including &lt;code&gt;falcon.MEDIA_JSON&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_HTML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_JS&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_TEXT&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_JPEG&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_PNG&lt;/code&gt;, and &lt;code&gt;falcon.MEDIA_GIF&lt;/code&gt;.</source>
          <target state="translated">또한 &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; 사용에 유의하십시오 . &lt;code&gt;falcon&lt;/code&gt; 모듈을 포함한 일반적인 미디어 유형, 상수의 수 제공 &lt;code&gt;falcon.MEDIA_JSON&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_HTML&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_JS&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_TEXT&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_JPEG&lt;/code&gt; , &lt;code&gt;falcon.MEDIA_PNG&lt;/code&gt; 을 , 및 &lt;code&gt;falcon.MEDIA_GIF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3edde059aabdc61613a6b4424788af27bb6a4fe6" translate="yes" xml:space="preserve">
          <source>Also, don&amp;rsquo;t be shy about pulling up Falcon&amp;rsquo;s source code on GitHub or in your favorite text editor. The team has tried to make the code as straightforward and readable as possible; where other documentation may fall short, the code basically can&amp;rsquo;t be wrong.</source>
          <target state="translated">또한 GitHub 또는 자주 사용하는 텍스트 편집기에서 Falcon의 소스 코드를 가져와도 부끄러워하지 마십시오. 팀은 코드를 가능한 한 간단하고 읽기 쉽게 만들려고 노력했습니다. 다른 문서가 부족한 경우 코드는 기본적으로 잘못 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="839a64e723e51c290bad3adc5934ad8f4c24e24f" translate="yes" xml:space="preserve">
          <source>Also, note that if the template contains a trailing slash character, it will be stripped in order to normalize the routing logic.</source>
          <target state="translated">또한 템플릿에 후행 슬래시 문자가 포함 된 경우 라우팅 논리를 정규화하기 위해 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="de4f9bab2893281b020fe20c6bd63dd9deb5b28a" translate="yes" xml:space="preserve">
          <source>Also, note the &lt;code&gt;name&lt;/code&gt; parameter for the &lt;code&gt;on_get()&lt;/code&gt; responder. Any URI parameters that you specify in your routes will be turned into corresponding kwargs and passed into the target responder as such. We&amp;rsquo;ll see how to specify URI parameters in a moment.</source>
          <target state="translated">또한 &lt;code&gt;on_get()&lt;/code&gt; 응답자 의 &lt;code&gt;name&lt;/code&gt; 매개 변수에 유의하십시오 . 경로에 지정하는 모든 URI 매개 변수는 해당 kwargs로 바뀌고 대상 응답자로 전달됩니다. 잠시 후 URI 매개 변수를 지정하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="e283fa86aa627d8e1374eef98e11355c313481c8" translate="yes" xml:space="preserve">
          <source>Alternatively, POSTed form parameters may be read directly from &lt;a href=&quot;../api/request_and_response#falcon.Request.stream&quot;&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/a&gt; and parsed via &lt;a href=&quot;../api/util#falcon.uri.parse_query_string&quot;&gt;&lt;code&gt;falcon.uri.parse_query_string()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.6/library/urllib.parse.html#urllib.parse.parse_qs&quot;&gt;urllib.parse.parse_qs()&lt;/a&gt;.</source>
          <target state="translated">또는 &lt;a href=&quot;../api/util#falcon.uri.parse_query_string&quot;&gt; &lt;code&gt;falcon.uri.parse_query_string()&lt;/code&gt; &lt;/a&gt; 양식 매개 변수를 &lt;a href=&quot;../api/request_and_response#falcon.Request.stream&quot;&gt; &lt;code&gt;stream&lt;/code&gt; &lt;/a&gt; 에서 직접 읽고 falcon.uri.parse_query_string () 또는 &lt;a href=&quot;https://docs.python.org/3.6/library/urllib.parse.html#urllib.parse.parse_qs&quot;&gt;urllib.parse.parse_qs ()&lt;/a&gt; 를 통해 구문 분석 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="646c6e441110fddb0e5cf696a28caf6ba7f38a81" translate="yes" xml:space="preserve">
          <source>Alternatively, a single resource class could implement suffixed responders in order to handle all three routes:</source>
          <target state="translated">또는 단일 리소스 클래스가 세 가지 경로를 모두 처리하기 위해 접미사 응답자를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="254d4285d6ae6337f42ad1f6b41b3b15a5931e0e" translate="yes" xml:space="preserve">
          <source>Alternatively, if you would like to add an additional handler such as MessagePack, this can be easily done in the following manner:</source>
          <target state="translated">또는 MessagePack과 같은 추가 핸들러를 추가하려는 경우 다음과 같은 방식으로 쉽게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f08bc8a32f920a5894d95cc4823901e62cf06252" translate="yes" xml:space="preserve">
          <source>Alternatively, when passing the stream directly to a consumer, it may be necessary to branch off the value of the Content-Length header:</source>
          <target state="translated">또는 스트림을 소비자에게 직접 전달할 때 Content-Length 헤더의 값을 분기해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a1b6d084f1cc16ba6a65539b9b37ebf089dce52" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use suffixed responders to map both routes to the same resource class:</source>
          <target state="translated">또는 접미사가 붙은 응답자를 사용하여 두 경로를 동일한 리소스 클래스에 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7150265c8e05f55e9638f34760affa6e25874ea" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the standard Python &lt;code&gt;help()&lt;/code&gt; function:</source>
          <target state="translated">또는 표준 Python &lt;code&gt;help()&lt;/code&gt; 함수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a9cbfd2b49b4f76ab005cf630cb24407458e46b" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;content_length&lt;/code&gt; properties may be set directly, using this method ensures &lt;code&gt;content_length&lt;/code&gt; is not accidentally neglected when the length of the stream is known in advance. Using this method is also slightly more performant as compared to setting the properties individually.</source>
          <target state="translated">있지만 &lt;code&gt;stream&lt;/code&gt; 과 &lt;code&gt;content_length&lt;/code&gt; 속성을 직접 설정 될 수 있고,이 메소드 있도록 보장하여 &lt;code&gt;content_length&lt;/code&gt; 스트림의 길이가 사전에 공지되면 실수 무시되지 않는다. 이 방법을 사용하면 속성을 개별적으로 설정하는 것보다 약간 더 성능이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="58d7a3bd071ac41d516880592d3c395f4990733e" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;stream_len&lt;/code&gt; properties may be set directly, using this method ensures &lt;code&gt;stream_len&lt;/code&gt; is not accidentally neglected when the length of the stream is known in advance.</source>
          <target state="translated">있지만 &lt;code&gt;stream&lt;/code&gt; 과 &lt;code&gt;stream_len&lt;/code&gt; 특성이 보장하지만 사용 방법, 직접 설정 될 수있다 &lt;code&gt;stream_len&lt;/code&gt; 스트림의 길이를 미리 알 때 실수를 무시되지 않는다.</target>
        </trans-unit>
        <trans-unit id="70d39774e3cdbf8aff904139d9be46b638357697" translate="yes" xml:space="preserve">
          <source>Although uWSGI may serve HTTP requests directly, it can be helpful to use a reverse proxy, such as NGINX, to offload TLS negotiation, static file serving, etc.</source>
          <target state="translated">uWSGI는 HTTP 요청을 직접 제공 할 수 있지만 NGINX와 같은 역방향 프록시를 사용하여 TLS 협상, 정적 파일 제공 등을 오프로드하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="562b3ba4a3ff9fc895846bd1fab7b8a268b9b12f" translate="yes" xml:space="preserve">
          <source>An RFC 1123 date string, e.g.: &amp;ldquo;Tue, 15 Nov 1994 12:45:26 GMT&amp;rdquo;.</source>
          <target state="translated">RFC 1123 날짜 문자열 (예 :&amp;ldquo;화, 1994 년 11 월 15 일 12:45:26 GMT&amp;rdquo;).</target>
        </trans-unit>
        <trans-unit id="edcf2f1cadde618a75afae7a099720bd263ab241" translate="yes" xml:space="preserve">
          <source>An XML document for the error.</source>
          <target state="translated">오류에 대한 XML 문서</target>
        </trans-unit>
        <trans-unit id="622d9468e6182a10e3e174b6f06261075d99f084" translate="yes" xml:space="preserve">
          <source>An escaped version of &lt;code&gt;uri&lt;/code&gt;, where all disallowed characters have been percent-encoded.</source>
          <target state="translated">허용되지 않는 모든 문자가 퍼센트 인코딩 된 &lt;code&gt;uri&lt;/code&gt; 의 이스케이프 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="a511af9bee4279eb8668da0a0b8bbe927e1ce74f" translate="yes" xml:space="preserve">
          <source>An href that the client can provide to the user for getting help.</source>
          <target state="translated">클라이언트가 도움을 받기 위해 사용자에게 제공 할 수있는 href입니다.</target>
        </trans-unit>
        <trans-unit id="05f145346ad89b296f557416d0e249c6ee7186e8" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;~.ETag&lt;/code&gt; representing the parsed entity-tag.</source>
          <target state="translated">구문 분석 된 엔티티 태그를 나타내는 &lt;code&gt;~.ETag&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="148f54ead1bb160f92a682a454ce78d3e4271b24" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.req_options&quot;&gt;&lt;code&gt;API.req_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; behaviors.</source>
          <target state="translated">이 클래스의 인스턴스는 특정 &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 동작 을 구성하기 위해 &lt;a href=&quot;#falcon.API.req_options&quot;&gt; &lt;code&gt;API.req_options&lt;/code&gt; &lt;/a&gt; 를 통해 노출됩니다 .</target>
        </trans-unit>
        <trans-unit id="160ac067de61c625b3c333295f802a346182f4db" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.resp_options&quot;&gt;&lt;code&gt;API.resp_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; behaviors.</source>
          <target state="translated">이 클래스의 인스턴스는 특정 &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 동작 을 구성하기 위해 &lt;a href=&quot;#falcon.API.resp_options&quot;&gt; &lt;code&gt;API.resp_options&lt;/code&gt; &lt;/a&gt; 를 통해 노출됩니다 .</target>
        </trans-unit>
        <trans-unit id="e215cbdcdb3cf4e73a7476cf01f9abbef00cde02" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.router_options&quot;&gt;&lt;code&gt;API.router_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;a href=&quot;routing#falcon.routing.CompiledRouter&quot;&gt;&lt;code&gt;CompiledRouter&lt;/code&gt;&lt;/a&gt; behaviors.</source>
          <target state="translated">이 클래스의 인스턴스는 특정 &lt;a href=&quot;routing#falcon.routing.CompiledRouter&quot;&gt; &lt;code&gt;CompiledRouter&lt;/code&gt; &lt;/a&gt; 동작 을 구성하기 위해 &lt;a href=&quot;#falcon.API.router_options&quot;&gt; &lt;code&gt;API.router_options&lt;/code&gt; &lt;/a&gt; 를 통해 노출됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6f8258298727cd1486d036116e6d540c71b36ea" translate="yes" xml:space="preserve">
          <source>An instance of this class is exposed via &lt;a href=&quot;#falcon.API.router_options&quot;&gt;&lt;code&gt;API.router_options&lt;/code&gt;&lt;/a&gt; for configuring certain &lt;code&gt;CompiledRouter&lt;/code&gt; behaviors.</source>
          <target state="translated">이 클래스의 인스턴스는 특정 &lt;code&gt;CompiledRouter&lt;/code&gt; 동작 을 구성하기 위해 &lt;a href=&quot;#falcon.API.router_options&quot;&gt; &lt;code&gt;API.router_options&lt;/code&gt; &lt;/a&gt; 를 통해 노출됩니다 .</target>
        </trans-unit>
        <trans-unit id="98b25f7dac3e89ff8507f753b451d3596d290576" translate="yes" xml:space="preserve">
          <source>An internal application code that a user can reference when requesting support for the error.</source>
          <target state="translated">사용자가 오류에 대한 지원을 요청할 때 참조 할 수있는 내부 애플리케이션 코드입니다.</target>
        </trans-unit>
        <trans-unit id="273983c234b9ff0e88c35ff607b02528a9f99306" translate="yes" xml:space="preserve">
          <source>An iterator yielding the same bytestrings as &lt;code&gt;iterable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; 것과 동일한 바이트 문자열을 생성하는 반복기</target>
        </trans-unit>
        <trans-unit id="e6e3f4b141bfbbd23bebfa8c8edf42f938c88503" translate="yes" xml:space="preserve">
          <source>An opaque quoted string, possibly prefixed by a weakness indicator &lt;code&gt;W/&lt;/code&gt;.</source>
          <target state="translated">약점 표시기 &lt;code&gt;W/&lt;/code&gt; 앞에 붙은 불투명 한 인용 문자열 .</target>
        </trans-unit>
        <trans-unit id="5112cce594a01029d04db41c2dc483ed8840f6b3" translate="yes" xml:space="preserve">
          <source>An origin server that wishes to &amp;ldquo;hide&amp;rdquo; the current existence of a forbidden target resource MAY instead respond with a status code of 404 Not Found.</source>
          <target state="translated">금지 된 대상 자원의 현재 존재를 &quot;숨기기&quot;하려는 원 서버는 대신 상태 코드 404 Not Found로 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa2f8dd84bbc37a942b3e3ce4b0ad4a76a69cd62" translate="yes" xml:space="preserve">
          <source>And then attach the hook to the &lt;code&gt;on_post()&lt;/code&gt; responder:</source>
          <target state="translated">그런 다음 &lt;code&gt;on_post()&lt;/code&gt; 응답자에 후크를 연결하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fa5eca2d5b5ec94d7bc56b979c99b5de12207d6" translate="yes" xml:space="preserve">
          <source>Any additional args and kwargs not defined above are passed through to the underlying router&amp;rsquo;s &lt;code&gt;add_route()&lt;/code&gt; method. The default router does not expect any additional arguments, but custom routers may take advantage of this feature to receive additional options when setting up routes.</source>
          <target state="translated">위에 정의되지 않은 추가 인수와 &lt;code&gt;add_route()&lt;/code&gt; 는 기본 라우터의 add_route () 메소드로 전달됩니다. 기본 라우터는 추가 인수를 기대하지 않지만 사용자 지정 라우터는이 기능을 활용하여 경로를 설정할 때 추가 옵션을받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dcb5e66486ba4cd6598185a50b5f1c8a55b9cfa" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments not defined above are passed through to the underlying router&amp;rsquo;s &lt;code&gt;add_route()&lt;/code&gt; method. The default router ignores any additional keyword arguments, but custom routers may take advantage of this feature to receive additional options when setting up routes. Custom routers MUST accept such arguments using the variadic pattern (&lt;code&gt;**kwargs&lt;/code&gt;), and ignore any keyword arguments that they don&amp;rsquo;t support.</source>
          <target state="translated">위에 정의되지 않은 추가 키워드 인수는 기본 라우터의 &lt;code&gt;add_route()&lt;/code&gt; 메서드로 전달됩니다. 기본 라우터는 추가 키워드 인수를 무시하지만 사용자 지정 라우터는이 기능을 활용하여 경로를 설정할 때 추가 옵션을받을 수 있습니다. 커스텀 라우터는 가변 패턴 ( &lt;code&gt;**kwargs&lt;/code&gt; )을 사용하여 이러한 인수를 수락해야 하며 지원하지 않는 키워드 인수는 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a151e80ad828286f6d4898ad3792dc8029ddabb" translate="yes" xml:space="preserve">
          <source>As illustrated above, by default, all &lt;em&gt;process_response&lt;/em&gt; methods will be executed, even when a &lt;em&gt;process_request&lt;/em&gt;, &lt;em&gt;process_resource&lt;/em&gt;, or resource responder raises an error. This behavior is controlled by the &lt;a href=&quot;api#api&quot;&gt;API class&amp;rsquo;s&lt;/a&gt;&lt;code&gt;independent_middleware&lt;/code&gt; keyword argument.</source>
          <target state="translated">위에서 설명한 것처럼 기본적으로 모든 &lt;em&gt;process_response&lt;/em&gt; 메서드는 &lt;em&gt;process_request&lt;/em&gt; , &lt;em&gt;process_resource&lt;/em&gt; 또는 리소스 응답자가 오류를 발생시키는 경우에도 실행됩니다 . 이 동작은 &lt;a href=&quot;api#api&quot;&gt;API 클래스의 &lt;/a&gt; &lt;code&gt;independent_middleware&lt;/code&gt; 키워드 인수에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="ba092521d70df324df0ee65e05f28f314e9d1071" translate="yes" xml:space="preserve">
          <source>As mentioned previously, Falcon&amp;rsquo;s docstrings are quite extensive, and so you can learn a lot just by poking around Falcon&amp;rsquo;s modules from a Python REPL, such as &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt; or &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt;.</source>
          <target state="translated">앞에서 언급했듯이 Falcon의 docstring은 매우 광범위하므로 &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt; 또는 &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt; 과 같은 Python REPL에서 Falcon 모듈을 파킹하여 많은 것을 배울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65c962473e3e93dea240a4b5a9c10deb9692883f" translate="yes" xml:space="preserve">
          <source>As mentioned previously, Falcon&amp;rsquo;s docstrings are quite extensive, and so you can learn a lot just by poking around Falcon&amp;rsquo;s modules from a Python REPL, such as &lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt; or &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9cf7650efbd59525741b513fbdd6e81d6a3d8d" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, you can use &lt;code&gt;req&lt;/code&gt; to get information about the incoming request. However, you can also use &lt;code&gt;resp&lt;/code&gt; to play with the HTTP response as needed, and you can even use hooks to inject extra kwargs:</source>
          <target state="translated">위의 예에서 볼 수 있듯이 &lt;code&gt;req&lt;/code&gt; 를 사용 하여 수신 요청에 대한 정보를 얻을 수 있습니다 . 그러나 &lt;code&gt;resp&lt;/code&gt; 를 사용 하여 필요에 따라 HTTP 응답을 재생할 수 있으며 후크를 사용하여 추가 크워 그를 주입 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa654a45029386b9c44828c13bc4a9a37e2710a0" translate="yes" xml:space="preserve">
          <source>As you can see, &lt;code&gt;Resource&lt;/code&gt; is just a regular class. You can name the class anything you like. Falcon uses duck-typing, so you don&amp;rsquo;t need to inherit from any sort of special base class.</source>
          <target state="translated">보시다시피 &lt;code&gt;Resource&lt;/code&gt; 는 일반 클래스입니다. 수업 이름을 원하는대로 지정할 수 있습니다. Falcon은 오리 타이핑을 사용하므로 어떤 종류의 특수 기본 클래스에서도 상속 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b39bf9a8456b9703909cdb818a703a76e4d05815" translate="yes" xml:space="preserve">
          <source>As you can see, the bulk of the setup logic has been moved to &lt;code&gt;create_app()&lt;/code&gt;, which can be used to obtain an API object either for testing or for hosting in production. &lt;code&gt;get_app()&lt;/code&gt; takes care of instantiating additional resources and configuring the application for hosting.</source>
          <target state="translated">보시다시피, 대량의 설정 로직이 &lt;code&gt;create_app()&lt;/code&gt; 로 옮겨져 테스트 또는 프로덕션 호스팅을위한 API 객체를 얻는 데 사용할 수 있습니다. &lt;code&gt;get_app()&lt;/code&gt; 는 추가 리소스를 인스턴스화하고 호스팅을 위해 응용 프로그램을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="90dd4bd6082eb1cfe3405ba99dbbbbe9103f348a" translate="yes" xml:space="preserve">
          <source>As you can see, the result isn&amp;rsquo;t exactly graceful. To fix this, we&amp;rsquo;ll need to add some exception handling. Modify your &lt;code&gt;Item&lt;/code&gt; class as follows:</source>
          <target state="translated">보시다시피 결과는 정확하게 우아하지 않습니다. 이 문제를 해결하려면 예외 처리를 추가해야합니다. 다음과 같이 &lt;code&gt;Item&lt;/code&gt; 클래스를 수정하십시오 :</target>
        </trans-unit>
        <trans-unit id="0bb7ed6c7e45bb3ef71ae07989f79a0d7ad300d1" translate="yes" xml:space="preserve">
          <source>As you can see, this test relies heavily on mocking, making it somewhat fragile in the face of implementation changes. We&amp;rsquo;ll revisit this later. For now, run the tests again and watch to make sure they fail. A key step in the TDD workflow is verifying that your tests &lt;strong&gt;do not&lt;/strong&gt; pass before moving on to the implementation:</source>
          <target state="translated">보시다시피이 테스트는 조롱에 크게 의존하므로 구현 변경에 따라 다소 취약합니다. 나중에 다시 방문하겠습니다. 지금은 테스트를 다시 실행하고 실패했는지 확인하십시오. TDD 워크 플로우의 핵심 단계 는 구현으로 넘어 가기 전에 테스트 &lt;strong&gt;가&lt;/strong&gt; 통과 &lt;strong&gt;하지 않는지&lt;/strong&gt; 확인하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="cbdb491c6d768ee6971384cddaa278e9cd0fa40d" translate="yes" xml:space="preserve">
          <source>As you can see, we generate a unique name for the image, and then write it out by reading from &lt;code&gt;req.stream&lt;/code&gt;. It&amp;rsquo;s called &lt;code&gt;stream&lt;/code&gt; instead of &lt;code&gt;body&lt;/code&gt; to emphasize the fact that you are really reading from an input stream; by default Falcon does not spool or decode request data, instead giving you direct access to the incoming binary stream provided by the WSGI server.</source>
          <target state="translated">보시다시피 이미지의 고유 이름을 생성 한 다음 &lt;code&gt;req.stream&lt;/code&gt; 을 읽어 이미지를 작성하십시오 . 입력 스트림에서 실제로 읽고 있다는 사실을 강조하기 위해 &lt;code&gt;body&lt;/code&gt; 대신 &lt;code&gt;stream&lt;/code&gt; 이라고 합니다. 기본적으로 Falcon은 요청 데이터를 스풀링하거나 디코딩하지 않고 대신 WSGI 서버에서 제공하는 수신 바이너리 스트림에 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2a8b7909a8d102fbfa6cf1b97a23b314675473b" translate="yes" xml:space="preserve">
          <source>As you can see, we renamed &lt;code&gt;Resource&lt;/code&gt; to &lt;code&gt;Collection&lt;/code&gt; and added a new &lt;code&gt;Item&lt;/code&gt; class to represent a single image resource. Also, note the &lt;code&gt;name&lt;/code&gt; parameter for the &lt;code&gt;on_get()&lt;/code&gt; responder. Any URI parameters that you specify in your routes will be turned into corresponding kwargs and passed into the target responder as such. We&amp;rsquo;ll see how to specify URI parameters in a moment.</source>
          <target state="translated">보시다시피, 우리는 &lt;code&gt;Resource&lt;/code&gt; 의 이름 을 &lt;code&gt;Collection&lt;/code&gt; 으로 변경 하고 단일 이미지 리소스를 나타내는 새로운 &lt;code&gt;Item&lt;/code&gt; 클래스를 추가했습니다 . 또한 &lt;code&gt;on_get()&lt;/code&gt; 응답자 의 &lt;code&gt;name&lt;/code&gt; 매개 변수에 유의하십시오 . 라우트에 지정하는 모든 URI 매개 변수는 해당 kwarg로 변환되어 대상 응답자로 전달됩니다. 잠시 후에 URI 매개 변수를 지정하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="a80e1e3d71912f144a0c6cccdb50c5659cc9cc97" translate="yes" xml:space="preserve">
          <source>As you can see, we renamed &lt;code&gt;Resource&lt;/code&gt; to &lt;code&gt;Collection&lt;/code&gt; and added a new &lt;code&gt;Item&lt;/code&gt; class to represent a single image resource. Alternatively, these two classes could be consolidated into one by using suffixed responders. (See also: &lt;a href=&quot;../api/api#falcon.API.add_route&quot;&gt;&lt;code&gt;add_route()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">보시다시피 &lt;code&gt;Resource&lt;/code&gt; 의 이름 을 &lt;code&gt;Collection&lt;/code&gt; 으로 바꾸고 단일 이미지 리소스를 나타내는 새 &lt;code&gt;Item&lt;/code&gt; 클래스를 추가했습니다 . 또는 접미사가 붙은 응답자를 사용하여이 두 클래스를 하나로 통합 할 수 있습니다. (참조 : &lt;a href=&quot;../api/api#falcon.API.add_route&quot;&gt; &lt;code&gt;add_route()&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="533e6a63b97eb14ab8c1ed23430958d35ba08d5c" translate="yes" xml:space="preserve">
          <source>As you can see, we specified a new route, &lt;code&gt;/images/{name}&lt;/code&gt;. This causes Falcon to expect all associated responders to accept a &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="translated">보다시피, 우리는 새로운 경로 &lt;code&gt;/images/{name}&lt;/code&gt; 을 지정했습니다 . 이로 인해 Falcon은 모든 관련 응답자가 &lt;code&gt;name&lt;/code&gt; 인수 를 수락 할 것을 기대합니다 .</target>
        </trans-unit>
        <trans-unit id="785fda8ad1f225251bb29c236db600dbe8256387" translate="yes" xml:space="preserve">
          <source>As you can see, we&amp;rsquo;ve redone the POST. While there are fewer mocks, the assertions have gotten more elaborate to properly check interactions at the interface boundaries.</source>
          <target state="translated">보시다시피 POST를 다시 작성했습니다. 모의 수가 적지 만, 인터페이스 경계에서 상호 작용을 올바르게 확인하기 위해 어설 션이 더 정교 해졌습니다.</target>
        </trans-unit>
        <trans-unit id="80017dff1b764f3839d29657e81a9891283c8ef6" translate="yes" xml:space="preserve">
          <source>Associate a templatized URI path with a resource.</source>
          <target state="translated">템플릿 화 된 URI 경로를 리소스와 연결합니다.</target>
        </trans-unit>
        <trans-unit id="911775ed09c2061e1df058742ddbf09428b55156" translate="yes" xml:space="preserve">
          <source>Assuming your database library manages its own connection pool, all you need to do is initialize the client and pass an instance of it into your resource classes. For example, using SQLAlchemy Core:</source>
          <target state="translated">데이터베이스 라이브러리가 자체 연결 풀을 관리한다고 가정하면 클라이언트를 초기화하고 인스턴스를 자원 클래스에 전달하기 만하면됩니다. 예를 들어, SQLAlchemy Core 사용 :</target>
        </trans-unit>
        <trans-unit id="75f95b65ae7ae0283a2c92385750aec41177a408" translate="yes" xml:space="preserve">
          <source>At the risk of erring on the side of flexibility, Falcon does not provide API spec support out of the box. However, there are several community projects available in this vein. Our &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;Add on Catalog&lt;/a&gt; lists a couple of these projects, but you may also wish to search &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI&lt;/a&gt; for additional packages.</source>
          <target state="translated">유연성 측면에서 오류가 발생할 위험이 있으므로 Falcon은 즉시 API 사양 지원을 제공하지 않습니다. 그러나 이러한 맥락에서 사용할 수있는 여러 커뮤니티 프로젝트가 있습니다. 우리의 &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;카탈로그에 추가는&lt;/a&gt; 이 프로젝트의 몇 가지를 나열,하지만 당신은 또한 검색하실 수 있습니다 &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI을&lt;/a&gt; 추가 패키지.</target>
        </trans-unit>
        <trans-unit id="bbcf22d0203954989589fe878672e58587eb681f" translate="yes" xml:space="preserve">
          <source>At the risk of erring on the side of flexiblity, Falcon does not provide API spec support out of the box. However, there are several community projects available in this vein. Our &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;Add on Catalog&lt;/a&gt; lists a couple of these projects, but you may also wish to search &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI&lt;/a&gt; for additional packages.</source>
          <target state="translated">유연성 측면에서 오류가 발생할 위험이 있으므로 Falcon은 즉시 API 사양 지원을 제공하지 않습니다. 그러나이 정맥에는 몇 가지 커뮤니티 프로젝트가 있습니다. 우리의 &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;카탈로그에 추가는&lt;/a&gt; 이 프로젝트의 몇 가지를 나열,하지만 당신은 또한 검색하실 수 있습니다 &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI을&lt;/a&gt; 추가 패키지.</target>
        </trans-unit>
        <trans-unit id="6244158256a329579b799aee36f607d1de509519" translate="yes" xml:space="preserve">
          <source>At this point you should have a pretty good understanding of the basic parts that make up a Falcon-based API. Before we finish up, let&amp;rsquo;s just take a few minutes to clean up the code and add some error handling.</source>
          <target state="translated">이 시점에서 Falcon 기반 API를 구성하는 기본 부분을 잘 이해해야합니다. 완료하기 전에 코드를 정리하고 오류 처리를 추가하는 데 몇 분이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="124b897a6881631c9022703d64573acec5311168" translate="yes" xml:space="preserve">
          <source>At this point, you should have a good grip on how to apply common testing strategies to your Falcon application. For the sake of brevity we&amp;rsquo;ll omit further testing instructions from the following sections, focusing instead on showcasing more of Falcon&amp;rsquo;s features.</source>
          <target state="translated">이 시점에서 일반적인 테스트 전략을 Falcon 응용 프로그램에 적용하는 방법을 잘 파악해야합니다. 간결성을 위해 다음 섹션에서 더 많은 테스트 지침을 생략하고 대신 Falcon의 기능을 더 많이 소개하는 데 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="6250b2d5ba185037a32428d0470aa41b51714997" translate="yes" xml:space="preserve">
          <source>Base Class</source>
          <target state="translated">기본 클래스</target>
        </trans-unit>
        <trans-unit id="bb02fe167f2d0f6413813c668b7ad831e9ef4860" translate="yes" xml:space="preserve">
          <source>Because &lt;em&gt;process_request&lt;/em&gt; executes before routing has occurred, if a component modifies &lt;code&gt;req.path&lt;/code&gt; in its &lt;em&gt;process_request&lt;/em&gt; method, the framework will use the modified value to route the request.</source>
          <target state="translated">라우팅이 발생하기 전에 &lt;em&gt;process_request가&lt;/em&gt; 실행되기 때문에 구성 요소 가 &lt;em&gt;process_request&lt;/em&gt; 메소드 에서 &lt;code&gt;req.path&lt;/code&gt; 를 수정 하면 프레임 워크는 수정 된 값을 사용하여 요청을 라우팅합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e64bfca49c754d4fccd63672fa8942a05e269fcd" translate="yes" xml:space="preserve">
          <source>Because field names correspond to argument names in responder methods, they must be valid Python identifiers.</source>
          <target state="translated">필드 이름은 응답자 메소드의 인수 이름에 해당하므로 유효한 Python 식별자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="3e9780a084faf8907a404487e0c5c8b79d738298" translate="yes" xml:space="preserve">
          <source>Before hook for capturing responder arguments.</source>
          <target state="translated">응답자 인수를 캡처하기위한 후크 전.</target>
        </trans-unit>
        <trans-unit id="e8d9975d904ad40ef75d062607b5cfdbe6dcb4f4" translate="yes" xml:space="preserve">
          <source>Before proceeding, install NGINX according to &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/&quot;&gt;the instructions for your platform&lt;/a&gt;.</source>
          <target state="translated">계속하기 전에 &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/&quot;&gt;플랫폼의 지침에&lt;/a&gt; 따라 NGINX를 설치 하십시오 .</target>
        </trans-unit>
        <trans-unit id="715e5b8868abb86c14081e9614a7be89aad4e33a" translate="yes" xml:space="preserve">
          <source>Bound method, or &lt;code&gt;None&lt;/code&gt; if the method does not exist on the object.</source>
          <target state="translated">바운드 메서드 또는 메서드가 개체에 없으면 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f2e649106f63695831382d819e79684dafbee78" translate="yes" xml:space="preserve">
          <source>Built-in Converters</source>
          <target state="translated">내장 컨버터</target>
        </trans-unit>
        <trans-unit id="ea5a95aec87b1d1ecf2c3e8294ac4c27d21f9f98" translate="yes" xml:space="preserve">
          <source>By contributing to this project, you agree to also license your source code under the terms of the Apache License, Version 2.0, as described above.</source>
          <target state="translated">이 프로젝트에 참여함으로써 위에서 설명한대로 Apache 라이센스, 버전 2.0의 조항에 따라 소스 코드의 라이센스를 얻는 데 동의하게됩니다.</target>
        </trans-unit>
        <trans-unit id="097359d46826510e24a49784a08879fa06d38de1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ensure_ascii&lt;/code&gt; is passed to the &lt;code&gt;json.dumps&lt;/code&gt; function. If you override the &lt;code&gt;dumps&lt;/code&gt; function, you will need to explicitly set &lt;code&gt;ensure_ascii&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; in order to enable the serialization of Unicode characters to UTF-8. This is easily done by using &lt;code&gt;functools.partial&lt;/code&gt; to apply the desired keyword argument. In fact, you can use this same technique to customize any option supported by the &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions:</source>
          <target state="translated">기본적으로 &lt;code&gt;ensure_ascii&lt;/code&gt; 는 &lt;code&gt;json.dumps&lt;/code&gt; 함수에 전달됩니다 . &lt;code&gt;dumps&lt;/code&gt; 기능 을 재정의하는 경우 유니 코드 문자를 UTF-8로 직렬화 할 수 있도록하려면 &lt;code&gt;ensure_ascii&lt;/code&gt; 를 명시 적 으로 &lt;code&gt;False&lt;/code&gt; 로 설정해야합니다 . &lt;code&gt;functools.partial&lt;/code&gt; 을 사용 하여 원하는 키워드 인수를 적용하면 쉽게 수행 할 수 있습니다 . 실제로이 동일한 기술을 사용하여 &lt;code&gt;dumps&lt;/code&gt; 및 &lt;code&gt;loads&lt;/code&gt; 기능 에서 지원하는 옵션을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14f9f45582f2317100ba8588416a45470210a824" translate="yes" xml:space="preserve">
          <source>By default, Falcon does not consume request bodies. However, setting the &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; on an instance of &lt;code&gt;falcon.API&lt;/code&gt; will cause the framework to consume the request body when the content type is &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, making the form parameters accessible via &lt;a href=&quot;../api/request_and_response#falcon.Request.params&quot;&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/request_and_response#falcon.Request.get_param&quot;&gt;&lt;code&gt;get_param()&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">기본적으로 Falcon은 요청 본문을 사용하지 않습니다. 그러나, 설정을 &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; 에 &lt;code&gt;True&lt;/code&gt; 의 인스턴스에 &lt;code&gt;falcon.API&lt;/code&gt; 콘텐츠 유형 인 경우 요청 본문을 소비하는 프레임 워크의 원인이됩니다 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 통해 양식 매개 변수를 액세스 할 수 있도록, &lt;a href=&quot;../api/request_and_response#falcon.Request.params&quot;&gt; &lt;code&gt;params&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../api/request_and_response#falcon.Request.get_param&quot;&gt; &lt;code&gt;get_param()&lt;/code&gt; &lt;/a&gt; , 기타</target>
        </trans-unit>
        <trans-unit id="d51e9b3bf350d54f6d708e50e0541fcadb01caa8" translate="yes" xml:space="preserve">
          <source>By default, Falcon enables the &lt;code&gt;secure&lt;/code&gt; cookie attribute. Therefore, if you are testing your app over HTTP (instead of HTTPS), the client will not send the cookie in subsequent requests.</source>
          <target state="translated">기본적으로 Falcon은 &lt;code&gt;secure&lt;/code&gt; 쿠키 속성을 활성화 합니다. 따라서 HTTPS 대신 HTTP를 통해 앱을 테스트하는 경우 클라이언트는 후속 요청에서 쿠키를 보내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb5beec7242db6ce5492d3ae4a7d824c94001cd2" translate="yes" xml:space="preserve">
          <source>By default, Falcon normalizes incoming URI paths to simplify later processing and improve the predictability of application logic. This behavior can be disabled via the &lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt;&lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt;&lt;/a&gt; request option.</source>
          <target state="translated">기본적으로 Falcon은 수신 URI 경로를 정규화하여 나중에 처리를 단순화하고 응용 프로그램 논리의 예측 가능성을 향상시킵니다. 이 동작은 &lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt; &lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt; &lt;/a&gt; 요청 옵션을 통해 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4687c53e6c2f150cdc743155aff842858b09e8b1" translate="yes" xml:space="preserve">
          <source>By default, Falcon sets the &lt;code&gt;secure&lt;/code&gt; attribute for cookies. This instructs the client to never transmit the cookie in the clear over HTTP, in order to protect any sensitive data that cookie might contain. If a cookie is set, and a subsequent request is made over HTTP (rather than HTTPS), the client will not include that cookie in the request.</source>
          <target state="translated">기본적으로 Falcon은 쿠키 의 &lt;code&gt;secure&lt;/code&gt; 속성을 설정합니다 . 이는 쿠키에 포함 된 중요한 데이터를 보호하기 위해 클라이언트가 HTTP를 통해 쿠키를 전송하지 않도록 지시합니다. 쿠키가 설정되고 후속 요청이 HTTPS가 아닌 HTTP를 통해 이루어진 경우 클라이언트는 해당 쿠키를 요청에 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e60d0f3477ffa69bfab8cbd3d6530b3f893ad5da" translate="yes" xml:space="preserve">
          <source>By default, the framework installs two handlers, one for &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. These can be overridden by adding a custom error handler method for the exception type in question.</source>
          <target state="translated">기본적으로 프레임 워크는 &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 용 핸들러 와 &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt; 용 핸들러를 설치합니다 . 문제의 예외 유형에 대한 사용자 지정 오류 처리기 메서드를 추가하여 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9626e67aa789731ed12f4a26b5d7c057e3f00a14" translate="yes" xml:space="preserve">
          <source>By default, the framework installs two handlers, one for &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. These can be overridden via &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;add_error_handler()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본적으로 프레임 워크는 &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 용 핸들러 와 &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt; 용 핸들러를 설치합니다 . 이는 &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;add_error_handler()&lt;/code&gt; &lt;/a&gt; 를 통해 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="016e5d11a5bb2adda4578237397516d9ea456971" translate="yes" xml:space="preserve">
          <source>Byte string representing response content.</source>
          <target state="translated">응답 내용을 나타내는 바이트 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3348cc07058a464ebb973af5bfdb70ca7968c2db" translate="yes" xml:space="preserve">
          <source>CPython</source>
          <target state="translated">CPython</target>
        </trans-unit>
        <trans-unit id="02675302c1306c0a55178554c9b39f3bdbb2eb32" translate="yes" xml:space="preserve">
          <source>CPython 2.6-2.7, PyPy 2.7, Jython 2.7, and</source>
          <target state="translated">CPython 2.6-2.7, PyPy 2.7, Jython 2.7 및</target>
        </trans-unit>
        <trans-unit id="3e8362aade9054132e1b501b022bf427bf94b3bc" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites any existing values for the given header. If a list containing multiple instances of the same header is provided, only the last value will be used. To add multiple values to the response for a given header, see &lt;a href=&quot;#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드를 호출하면 주어진 헤더의 기존 값을 덮어 씁니다. 동일한 헤더의 여러 인스턴스가 포함 된 목록이 제공되는 경우 마지막 값만 사용됩니다. 주어진 헤더에 대한 응답에 여러 값을 추가하려면 &lt;a href=&quot;#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="20cd2fcec7c222d93b4fa7ccedc8c9be3ef682ce" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites any values already set for this header. To append an additional value for this header, use &lt;a href=&quot;#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 메서드를 호출하면이 헤더에 대해 이미 설정된 값을 덮어 씁니다. 이 헤더에 추가 값을 추가하려면 대신 &lt;a href=&quot;#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c1a4c7796582bc0694ad9f800582cec39d0de051" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites existing values, if any.</source>
          <target state="translated">이 메소드를 호출하면 기존 값이 있으면 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="77a2b5fd4b7fc09015dfd578f7603884002a36fe" translate="yes" xml:space="preserve">
          <source>Calling this method overwrites the existing value, if any.</source>
          <target state="translated">이 메소드를 호출하면 기존 값이 있으면 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="7711b5de742b5096975f28141dcea1c38b1ea07e" translate="yes" xml:space="preserve">
          <source>Calling this method repeatedly will cause each link to be appended to the Link header value, separated by commas.</source>
          <target state="translated">이 메소드를 반복적으로 호출하면 각 링크가 쉼표로 구분되어 링크 헤더 값에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="f4fd8b4e86cc608b48d1db94f3dd203f464df3db" translate="yes" xml:space="preserve">
          <source>Can Falcon serve static files?</source>
          <target state="translated">Falcon은 정적 파일을 제공 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="38c05e1c359fb28b41b66cb4d14c3887561bed7a" translate="yes" xml:space="preserve">
          <source>Captures &lt;code&gt;req&lt;/code&gt;, &lt;code&gt;resp&lt;/code&gt;, and &lt;code&gt;kwargs&lt;/code&gt;. Also sets up a sample response.</source>
          <target state="translated">&lt;code&gt;req&lt;/code&gt; , &lt;code&gt;resp&lt;/code&gt; 및 &lt;code&gt;kwargs&lt;/code&gt; 를 캡처합니다 . 샘플 응답도 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f5defaa466b275206ab89d5e9a35d75ec90e8c44" translate="yes" xml:space="preserve">
          <source>CaseInsensitiveDict</source>
          <target state="translated">CaseInsensitiveDict</target>
        </trans-unit>
        <trans-unit id="62c42a4bdefb243f7f9604d1ba6f7c57ebe6de72" translate="yes" xml:space="preserve">
          <source>Central to both REST and the Falcon framework is the concept of a &amp;ldquo;resource&amp;rdquo;. Resources are simply all the things in your API or application that can be accessed by a URL. For example, an event booking application may have resources such as &amp;ldquo;ticket&amp;rdquo; and &amp;ldquo;venue&amp;rdquo;, while a video game backend may have resources such as &amp;ldquo;achievements&amp;rdquo; and &amp;ldquo;player&amp;rdquo;.</source>
          <target state="translated">REST와 Falcon 프레임 워크의 핵심은&amp;ldquo;자원&amp;rdquo;의 개념입니다. 리소스는 단순히 URL로 액세스 할 수있는 API 또는 애플리케이션의 모든 것입니다. 예를 들어, 이벤트 예약 응용 프로그램에는 &quot;티켓&quot;및 &quot;장소&quot;와 같은 리소스가있을 수 있지만 비디오 게임 백엔드는 &quot;업적&quot;및 &quot;플레이어&quot;와 같은 리소스가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5945467e827b0ebb1f66477ed4e7541c3984d27f" translate="yes" xml:space="preserve">
          <source>Changelogs</source>
          <target state="translated">Changelogs</target>
        </trans-unit>
        <trans-unit id="33d0f973f219e3bcb421625f8123bc3fcf073aea" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../api/hooks#hooks&quot;&gt;hooks reference&lt;/a&gt; to learn more.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;../api/hooks#hooks&quot;&gt;후크 참조&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d194759ef22efcd895c2bdef7ff22d689be7cb3" translate="yes" xml:space="preserve">
          <source>Checking code &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage&lt;/a&gt; would have helped us detect the missing test above; it&amp;rsquo;s always a good idea to include coverage testing in your workflow to ensure you don&amp;rsquo;t have any bugs hiding off somewhere in an unexercised code path.</source>
          <target state="translated">코드 &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;범위를&lt;/a&gt; 확인 하면 위의 누락 된 테스트를 감지하는 데 도움이 될 것입니다. 실행되지 않은 코드 경로의 어딘가에 버그가 숨겨져 있지 않도록 워크 플로에 적용 범위 테스트를 포함시키는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d62eec87d5465678ad63f15af3d48c623279cf26" translate="yes" xml:space="preserve">
          <source>Child classes may add additional methods and attributes as needed.</source>
          <target state="translated">자식 클래스는 필요에 따라 메소드와 속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="4cf0d65cb6eac011dfe336dee7d7c8ba88210f8f" translate="yes" xml:space="preserve">
          <source>Class method that deserializes a single entity-tag string from a precondition header.</source>
          <target state="translated">전제 조건 헤더에서 단일 엔티티 태그 문자열을 역 직렬화하는 클래스 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="fbdcd291b2ad149e63df7cb2411ad8ab4b429429" translate="yes" xml:space="preserve">
          <source>Class variable that determines the factory or type to use for initializing the &lt;code&gt;context&lt;/code&gt; attribute. By default, the framework will instantiate bare objects (instances of the bare &lt;a href=&quot;util#falcon.Context&quot;&gt;&lt;code&gt;falcon.Context&lt;/code&gt;&lt;/a&gt; class). However, you may override this behavior by creating a custom child class of &lt;code&gt;falcon.Request&lt;/code&gt;, and then passing that new class to &lt;code&gt;falcon.API()&lt;/code&gt; by way of the latter&amp;rsquo;s &lt;code&gt;request_type&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 속성 을 초기화하는 데 사용할 팩토리 또는 유형을 결정하는 클래스 변수입니다 . 기본적으로 프레임 워크는 베어 오브젝트 (베어 &lt;a href=&quot;util#falcon.Context&quot;&gt; &lt;code&gt;falcon.Context&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스)를 인스턴스화합니다 . 그러나 &lt;code&gt;falcon.Request&lt;/code&gt; 의 사용자 지정 자식 클래스를 만든 다음 후자의 &lt;code&gt;request_type&lt;/code&gt; 매개 변수 를 통해 &lt;code&gt;falcon.API()&lt;/code&gt; 에 새 클래스를 전달 하여이 동작을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12ac0ac4c51beceed99f43d7b40ebe567e9a9aed" translate="yes" xml:space="preserve">
          <source>Class variable that determines the factory or type to use for initializing the &lt;code&gt;context&lt;/code&gt; attribute. By default, the framework will instantiate bare objects (instances of the bare &lt;a href=&quot;util#falcon.Context&quot;&gt;&lt;code&gt;falcon.Context&lt;/code&gt;&lt;/a&gt; class). However, you may override this behavior by creating a custom child class of &lt;code&gt;falcon.Response&lt;/code&gt;, and then passing that new class to &lt;code&gt;falcon.API()&lt;/code&gt; by way of the latter&amp;rsquo;s &lt;code&gt;response_type&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 속성 을 초기화하는 데 사용할 팩토리 또는 유형을 결정하는 클래스 변수입니다 . 기본적으로 프레임 워크는 베어 오브젝트 (베어 &lt;a href=&quot;util#falcon.Context&quot;&gt; &lt;code&gt;falcon.Context&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스)를 인스턴스화합니다 . 그러나 &lt;code&gt;falcon.Response&lt;/code&gt; 의 사용자 정의 자식 클래스를 만든 다음 후자의 &lt;code&gt;response_type&lt;/code&gt; 매개 변수 를 통해 &lt;code&gt;falcon.API()&lt;/code&gt; 에 새 클래스를 전달 하여이 동작을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6b54dda1fedcf05b00da33c5a51d1cdd3067a40" translate="yes" xml:space="preserve">
          <source>Classes and Functions</source>
          <target state="translated">클래스와 함수</target>
        </trans-unit>
        <trans-unit id="acdd86525dc424aafef2f8972c7a26e7f9de8010" translate="yes" xml:space="preserve">
          <source>Clears the contents of the cookie, and instructs the user agent to immediately expire its own copy of the cookie.</source>
          <target state="translated">쿠키의 내용을 지우고 사용자 에이전트가 자체 쿠키 사본을 즉시 만료하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="4c477c96fff89baae45b42c105b31c534cce4443" translate="yes" xml:space="preserve">
          <source>Coercion to &lt;code&gt;int&lt;/code&gt; is attempted if provided with &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 또는 &lt;code&gt;str&lt;/code&gt; 이 제공되면 &lt;code&gt;int&lt;/code&gt; 로 강제 변환을 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="da4a4f6c35a1a0cc303a13f2450d0ffd55359ac5" translate="yes" xml:space="preserve">
          <source>Commas are a reserved character that can be escaped according to &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.2&quot;&gt;RFC 3986 - 2.2. Reserved Characters&lt;/a&gt;, so one possible solution is to percent encode any commas that appear in your JSON query string. The other option is to switch the way Falcon handles commas in a query string by setting the &lt;a href=&quot;../api/api#falcon.RequestOptions.auto_parse_qs_csv&quot;&gt;&lt;code&gt;auto_parse_qs_csv&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; on an instance of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">쉼표는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-2.2&quot;&gt;RFC 3986-2.2&lt;/a&gt; 에 따라 이스케이프 될 수있는 예약 문자입니다 . 예약 문자 이므로 JSON 쿼리 문자열에 표시되는 쉼표를 백분율로 인코딩하는 것이 가능합니다. 다른 옵션을 설정하여 쿼리 문자열의 방법 팔콘 핸들의 쉼표를 전환하는 것입니다 &lt;a href=&quot;../api/api#falcon.RequestOptions.auto_parse_qs_csv&quot;&gt; &lt;code&gt;auto_parse_qs_csv&lt;/code&gt; 을&lt;/a&gt; 에 &lt;code&gt;False&lt;/code&gt; 의 인스턴스에 &lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="816fb3b05e17e4c77187bf13ed9de6aa7df7c968" translate="yes" xml:space="preserve">
          <source>Community Guide</source>
          <target state="translated">커뮤니티 가이드</target>
        </trans-unit>
        <trans-unit id="c5efbcb24d47dec707f0382bf39536b847982af3" translate="yes" xml:space="preserve">
          <source>Compatible with PyPy</source>
          <target state="translated">PyPy와 호환</target>
        </trans-unit>
        <trans-unit id="4c891c192f0de8f4f5f4f640320060c5369b39c8" translate="yes" xml:space="preserve">
          <source>Compatible with PyPy and Jython</source>
          <target state="translated">PyPy 및 Jython과 호환</target>
        </trans-unit>
        <trans-unit id="1cfa43b8b73f8cac11680b834a6f57051faa6e4b" translate="yes" xml:space="preserve">
          <source>Compile the given URI template string into a pattern matcher.</source>
          <target state="translated">주어진 URI 템플릿 문자열을 패턴 매 처로 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="ab7dbbe52e48e186e501f3f159167b17a7c0c417" translate="yes" xml:space="preserve">
          <source>Configuration options for the router. If a custom router is in use, and it does not expose any configurable options, referencing this attribute will raise an instance of &lt;code&gt;AttributeError&lt;/code&gt;.</source>
          <target state="translated">라우터의 구성 옵션. 사용자 정의 라우터가 사용 중이고 구성 가능한 옵션이 노출되지 않은 경우이 속성을 참조하면 &lt;code&gt;AttributeError&lt;/code&gt; 인스턴스가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="8e5da62b8b6c6f503a092c716dbd12d97760dd3c" translate="yes" xml:space="preserve">
          <source>Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the representation being PUT included changes to a resource that conflict with those made by an earlier (third-party) request, the origin server might use a 409 response to indicate that it can&amp;rsquo;t complete the request. In this case, the response representation would likely contain information useful for merging the differences based on the revision history.</source>
          <target state="translated">PUT 요청에 대한 응답으로 충돌이 발생할 가능성이 높습니다. 예를 들어, 버전 관리를 사용 중이고 PUT 표시에 이전 (타사) 요청에 의해 작성된 자원과 충돌하는 자원에 대한 변경 사항이 포함 된 경우, 오리진 서버는 409 응답을 사용하여 완료 할 수 없음을 표시 할 수 있습니다. 의뢰. 이 경우 응답 표현에는 수정 내역을 기반으로 차이점을 병합하는 데 유용한 정보가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="789c1c22a8074561d72f396cc6f09dbc2a7f9f13" translate="yes" xml:space="preserve">
          <source>Connecting NGINX and uWSGI</source>
          <target state="translated">NGINX 및 uWSGI 연결</target>
        </trans-unit>
        <trans-unit id="3eb17a29f2bf901fbffd30c40a6b273cd757c338" translate="yes" xml:space="preserve">
          <source>Content-Type Negotiation</source>
          <target state="translated">컨텐츠 유형 협상</target>
        </trans-unit>
        <trans-unit id="2d1591539944922fbf8aeb2eecb1641331d6f6de" translate="yes" xml:space="preserve">
          <source>Contribute to Falcon</source>
          <target state="translated">팔콘에 공헌</target>
        </trans-unit>
        <trans-unit id="3d509b30bf54fa310617d730d3abd2f7acce93dc" translate="yes" xml:space="preserve">
          <source>Convenience class to hold contextual information in its attributes.</source>
          <target state="translated">속성에 컨텍스트 정보를 포함하는 편의 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="bbbef391dcabce0890050870ce640464ead90ad0" translate="yes" xml:space="preserve">
          <source>Convenience class to represent a parsed HTTP entity-tag.</source>
          <target state="translated">구문 분석 된 HTTP 엔티티 태그를 나타내는 편의 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d99640e60a74abcf6f766137635643bbf4660c62" translate="yes" xml:space="preserve">
          <source>Convenience method for setting both &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;content_length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; 및 &lt;code&gt;content_length&lt;/code&gt; 를 모두 설정하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="2c70af17f90c881fcaa891962c9b2ac60e80e429" translate="yes" xml:space="preserve">
          <source>Convenience method for setting both &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;stream_len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; 과 &lt;code&gt;stream_len&lt;/code&gt; 을 설정하기위한 편리한 방법 .</target>
        </trans-unit>
        <trans-unit id="682554934283a755b07ded57721187958457c27e" translate="yes" xml:space="preserve">
          <source>Convert a URI template field value to another format or type.</source>
          <target state="translated">URI 템플리트 필드 값을 다른 형식 또는 유형으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="905d426af441b888e2dffca01c61e06acbcedbec" translate="yes" xml:space="preserve">
          <source>Converter instances are shared between requests. Therefore, in threaded deployments, care must be taken to implement custom converters in a thread-safe manner.</source>
          <target state="translated">변환기 인스턴스는 요청간에 공유됩니다. 따라서 스레드 배포에서는 스레드 안전 방식으로 사용자 지정 변환기를 구현할 때주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="fc28f16632788844e3d49048367c3374451c1573" translate="yes" xml:space="preserve">
          <source>Converter names may only contain ASCII letters, digits, and underscores, and must start with either a letter or an underscore.</source>
          <target state="translated">변환기 이름은 ASCII 문자, 숫자 및 밑줄 만 포함 할 수 있으며 문자 또는 밑줄로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="6fa86c8a0f152535c1f81601ff8a657b085c7a72" translate="yes" xml:space="preserve">
          <source>Converters are instantiated with the argument specification given in the field expression. These specifications follow the standard Python syntax for passing arguments. For example, the comments in the following code show how a converter would be instantiated given different argument specifications in the URI template:</source>
          <target state="translated">변환기는 필드 표현식에 제공된 인수 스펙으로 인스턴스화됩니다. 이 스펙은 인수를 전달하기위한 표준 Python 구문을 따릅니다. 예를 들어, 다음 코드의 주석은 URI 템플리트에서 다른 인수 스펙을 지정하여 변환기를 인스턴스화하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f88c0b3128b2b7b39f55c4a4519aabab01f65fb1" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;datetime&lt;/code&gt; instance to an HTTP date string.</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; 인스턴스를 HTTP 날짜 문자열로 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="3bbca2d930489d659dcae47e5790f1bdcbb6a1be" translate="yes" xml:space="preserve">
          <source>Converts a dictionary of parameters to a query string.</source>
          <target state="translated">매개 변수 사전을 쿼리 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ce697c71ac7f76583108d53a1c0256978ee41b04" translate="yes" xml:space="preserve">
          <source>Converts a field value to a datetime.</source>
          <target state="translated">필드 값을 날짜 / 시간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="62edd19dc7f3910899528cc1c0157ebdc58d6979" translate="yes" xml:space="preserve">
          <source>Converts a field value to a uuid.UUID.</source>
          <target state="translated">필드 값을 uuid.UUID로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e3b73fba8bccde954cf7e360cf9e67f18022897b" translate="yes" xml:space="preserve">
          <source>Converts a field value to an int.</source>
          <target state="translated">필드 값을 정수로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="05b1f2a12478d0525dccc0459372429878710a46" translate="yes" xml:space="preserve">
          <source>Converts an HTTP date string to a datetime instance.</source>
          <target state="translated">HTTP 날짜 문자열을 날짜 / 시간 인스턴스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="52cabcdecb4a78e9d3e198bd01f25ced9b1173a9" translate="yes" xml:space="preserve">
          <source>Cookie support is available in Falcon version 0.3 or later.</source>
          <target state="translated">쿠키 지원은 Falcon 버전 0.3 이상에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="f74e3e0858e4eadd6757dd44d2a5dd9e1ed8e181" translate="yes" xml:space="preserve">
          <source>Cookies can be read from a request either via the &lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt;&lt;code&gt;get_cookie_values()&lt;/code&gt;&lt;/a&gt; method or the &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; attribute on the &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. Generally speaking, the &lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt;&lt;code&gt;get_cookie_values()&lt;/code&gt;&lt;/a&gt; method should be used unless you need a collection of all the cookies in the request.</source>
          <target state="translated">쿠키는 &lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt; &lt;code&gt;get_cookie_values()&lt;/code&gt; &lt;/a&gt; 메소드 또는 &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt; &lt;code&gt;cookies&lt;/code&gt; &lt;/a&gt; 속성을 통해 요청에서 읽을 수 있습니다 . 일반적으로 요청의 모든 쿠키 모음이 필요하지 않으면 &lt;a href=&quot;request_and_response#falcon.Request.get_cookie_values&quot;&gt; &lt;code&gt;get_cookie_values()&lt;/code&gt; &lt;/a&gt; 메서드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5d94dc42419b137d3621ba9043c5b9efaa52a10" translate="yes" xml:space="preserve">
          <source>Cookies can be read from a request via the &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; request attribute:</source>
          <target state="translated">쿠키는 &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt; &lt;code&gt;cookies&lt;/code&gt; &lt;/a&gt; 요청 속성을 통해 요청에서 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f90fabaf3f84b9284a1f0ebeff849f1918f093b6" translate="yes" xml:space="preserve">
          <source>Copy of all headers set for the response, sans cookies. Note that a new copy is created and returned each time this property is referenced.</source>
          <target state="translated">응답에 대해 설정된 모든 헤더의 사본, 쿠키는 없습니다. 이 속성이 참조 될 때마다 새 복사본이 만들어지고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a86fcc28d2314a833c0be3d49e97b2818be0b9e3" translate="yes" xml:space="preserve">
          <source>Copyright 2012-2017 by Rackspace Hosting, Inc. and other contributors, as noted in the individual source code files.</source>
          <target state="translated">개별 소스 코드 파일에 명시된대로 Rackspace Hosting, Inc. 및 기타 기고자에 의한 저작권 2012-2017.</target>
        </trans-unit>
        <trans-unit id="e90a21ec1c15274f9df0fabaf503e978e92a5c40" translate="yes" xml:space="preserve">
          <source>Creates a mock PEP-3333 environ &lt;code&gt;dict&lt;/code&gt; for simulating WSGI requests.</source>
          <target state="translated">WSGI 요청을 시뮬레이션하기위한 모의 PEP-3333 환경 &lt;code&gt;dict&lt;/code&gt; 을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f49f1250b1b443be6c845eb001819b18feb9a1fc" translate="yes" xml:space="preserve">
          <source>Creating Resources</source>
          <target state="translated">자원 만들기</target>
        </trans-unit>
        <trans-unit id="2173925ca03217e63463d2a77316cf649645885b" translate="yes" xml:space="preserve">
          <source>Cronitor</source>
          <target state="translated">Cronitor</target>
        </trans-unit>
        <trans-unit id="1c1b11c24cd13ab88f68bf76acd3f0f1e75de284" translate="yes" xml:space="preserve">
          <source>Curl is a bit of a pain to use, so let&amp;rsquo;s install &lt;a href=&quot;https://github.com/jkbr/httpie&quot;&gt;HTTPie&lt;/a&gt; and use it from now on.</source>
          <target state="translated">컬은 사용하기에 약간의 고통이므로 &lt;a href=&quot;https://github.com/jkbr/httpie&quot;&gt;HTTPie를&lt;/a&gt; 설치 하고 지금부터 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d7f6daf5ba050f3ec443cb9f518439c7667a6631" translate="yes" xml:space="preserve">
          <source>Custom Converters</source>
          <target state="translated">맞춤형 변환기</target>
        </trans-unit>
        <trans-unit id="40ef00cb23aa2f9aa1cc4e3e6d49b3dd1f6dfbb1" translate="yes" xml:space="preserve">
          <source>Custom Handler Type</source>
          <target state="translated">맞춤 처리기 유형</target>
        </trans-unit>
        <trans-unit id="7d4e4042402db652eb9245c2378f0292ebd1cee9" translate="yes" xml:space="preserve">
          <source>Custom Routers</source>
          <target state="translated">커스텀 라우터</target>
        </trans-unit>
        <trans-unit id="f7cb24f05cf2229e1c77daf9a2327190af482e56" translate="yes" xml:space="preserve">
          <source>Custom converters can be registered via the &lt;a href=&quot;api#falcon.routing.CompiledRouterOptions.converters&quot;&gt;&lt;code&gt;converters&lt;/code&gt;&lt;/a&gt; router option. A converter is simply a class that implements the &lt;code&gt;BaseConverter&lt;/code&gt; interface:</source>
          <target state="translated">사용자 정의 변환기는 &lt;a href=&quot;api#falcon.routing.CompiledRouterOptions.converters&quot;&gt; &lt;code&gt;converters&lt;/code&gt; &lt;/a&gt; 라우터 옵션을 통해 등록 할 수 있습니다 . 변환기는 단순히 &lt;code&gt;BaseConverter&lt;/code&gt; 인터페이스 를 구현하는 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="98ae5722116a688043aa0a890968d925606f10d9" translate="yes" xml:space="preserve">
          <source>Custom routers may derive from the default &lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt;&lt;code&gt;CompiledRouter&lt;/code&gt;&lt;/a&gt; engine, or implement a completely different routing strategy (such as object-based routing).</source>
          <target state="translated">사용자 지정 라우터는 기본 &lt;a href=&quot;#falcon.routing.CompiledRouter&quot;&gt; &lt;code&gt;CompiledRouter&lt;/code&gt; &lt;/a&gt; 엔진 에서 파생 되거나 완전히 다른 라우팅 전략 (예 : 개체 기반 라우팅)을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ca63ba129586b826230e7ab236a656534fb95bc" translate="yes" xml:space="preserve">
          <source>Custom routers may derive from the default &lt;code&gt;CompiledRouter&lt;/code&gt; engine, or implement a completely different routing strategy (such as object-based routing).</source>
          <target state="translated">사용자 정의 라우터는 기본 &lt;code&gt;CompiledRouter&lt;/code&gt; 엔진 에서 파생 되거나 완전히 다른 라우팅 전략 (예 : 객체 기반 라우팅)을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d599667d492faa0d4dc25235bb3f1908820235e5" translate="yes" xml:space="preserve">
          <source>DRY request processing via middleware components and hooks</source>
          <target state="translated">미들웨어 구성 요소 및 후크를 통한 DRY 요청 처리</target>
        </trans-unit>
        <trans-unit id="729dd8c41d2f16a778eb1f6eae91c344cfed3bef" translate="yes" xml:space="preserve">
          <source>DST adjustment for GMT, which is always 0.</source>
          <target state="translated">GMT에 대한 DST 조정 (항상 0)</target>
        </trans-unit>
        <trans-unit id="440ecfb98e6459b3f52635afa46d0881f856e87e" translate="yes" xml:space="preserve">
          <source>Decoded response body of type &lt;code&gt;unicode&lt;/code&gt; under Python 2.7, and of type &lt;code&gt;str&lt;/code&gt; otherwise. If the content type does not specify an encoding, UTF-8 is assumed.</source>
          <target state="translated">Python 2.7에서는 &lt;code&gt;unicode&lt;/code&gt; 유형 , 그렇지 않으면 &lt;code&gt;str&lt;/code&gt; 유형의 디코딩 된 응답 본문입니다 . 콘텐츠 유형이 인코딩을 지정하지 않으면 UTF-8로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="9d71821868bea853ae341bc16cd517da5ee6a8ee" translate="yes" xml:space="preserve">
          <source>Decodes percent-encoded characters in a URI or query string.</source>
          <target state="translated">URI 또는 ​​쿼리 문자열에서 퍼센트 인코딩 된 문자를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="23245f11c7da756a1242f8862b9737918f14bf2c" translate="yes" xml:space="preserve">
          <source>Decorator for validating &lt;code&gt;req.media&lt;/code&gt; using JSON Schema.</source>
          <target state="translated">JSON 스키마를 사용하여 &lt;code&gt;req.media&lt;/code&gt; 를 검증하는 데코레이터 .</target>
        </trans-unit>
        <trans-unit id="217cd8ac1b5f442e1d9ff55d7458849ddd6b3ff5" translate="yes" xml:space="preserve">
          <source>Decorator to execute the given action function &lt;em&gt;after&lt;/em&gt; the responder.</source>
          <target state="translated">응답자 &lt;em&gt;다음에&lt;/em&gt; 지정된 동작 기능을 실행하는 데코레이터 .</target>
        </trans-unit>
        <trans-unit id="206ad47d99ebfeddb66d0d09f1a5fb038b625cbe" translate="yes" xml:space="preserve">
          <source>Decorator to execute the given action function &lt;em&gt;before&lt;/em&gt; the responder.</source>
          <target state="translated">응답자 &lt;em&gt;전에&lt;/em&gt; 주어진 동작 기능을 실행하는 데코레이터 .</target>
        </trans-unit>
        <trans-unit id="7157067c0c7bc52981a89abe3a6814131705c440" translate="yes" xml:space="preserve">
          <source>Default Router</source>
          <target state="translated">기본 라우터</target>
        </trans-unit>
        <trans-unit id="78d219d332eca3bb46dc7d72ec8124f1be525d8c" translate="yes" xml:space="preserve">
          <source>Defines a set of configurable request options.</source>
          <target state="translated">구성 가능한 요청 옵션 세트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="3ffcc8538aa9d49155b2f0afa892cf2fc1416e41" translate="yes" xml:space="preserve">
          <source>Defines a set of configurable response options.</source>
          <target state="translated">구성 가능한 응답 옵션 세트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="af3baaf9007b6e0d9628de852bdc499c08abede6" translate="yes" xml:space="preserve">
          <source>Defines a set of configurable router options.</source>
          <target state="translated">구성 가능한 라우터 옵션 세트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="65583ccaeaf9c8bd44b667c0084cba48c6065217" translate="yes" xml:space="preserve">
          <source>Defines the lifetime of the cookie in seconds. By default, cookies expire when the user agent exits. If both &lt;code&gt;max_age&lt;/code&gt; and &lt;code&gt;expires&lt;/code&gt; are set, the latter is ignored by the user agent.</source>
          <target state="translated">쿠키의 수명을 초 단위로 정의합니다. 기본적으로 쿠키는 사용자 에이전트가 종료 될 때 만료됩니다. 두 경우 &lt;code&gt;max_age&lt;/code&gt; 및이 &lt;code&gt;expires&lt;/code&gt; 설정, 후자는 사용자 에이전트에 의해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7501e464f9d9324dfe20fe1a2154b4e2cea38460" translate="yes" xml:space="preserve">
          <source>Delete a header that was previously set for this response.</source>
          <target state="translated">이 응답에 대해 이전에 설정된 헤더를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="e50b7c8fce20053f557756eb03b5bf7ac9b856e6" translate="yes" xml:space="preserve">
          <source>Depending on the requested action, the server may or may not return a representation to the client. Representations may be encoded in any one of a number of Internet media types, such as JSON and HTML.</source>
          <target state="translated">요청 된 조치에 따라 서버는 클라이언트에 표시를 리턴하거나 리턴하지 않을 수 있습니다. 표현은 JSON 및 HTML과 같은 여러 인터넷 미디어 유형 중 하나로 인코딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb4192a0d1e98db49f6315e471f852385eb84ca8" translate="yes" xml:space="preserve">
          <source>Deploy</source>
          <target state="translated">Deploy</target>
        </trans-unit>
        <trans-unit id="d41e5da928a3bdb9ddaa15c74c645bd836717caa" translate="yes" xml:space="preserve">
          <source>Deploying Falcon behind uWSGI</source>
          <target state="translated">Deploying Falcon behind uWSGI</target>
        </trans-unit>
        <trans-unit id="742c8d21ae5b34835d8e66f1fb1a7f38c85aed99" translate="yes" xml:space="preserve">
          <source>Deploying Falcon on Linux with NGINX and uWSGI</source>
          <target state="translated">Deploying Falcon on Linux with NGINX and uWSGI</target>
        </trans-unit>
        <trans-unit id="9b63d53521c97f956baea2fdc5b2d60ada5a1f80" translate="yes" xml:space="preserve">
          <source>Deployment Guide</source>
          <target state="translated">배포 안내서</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="bbaf2db3d14806b75dbf5b659d3bf9b4b0dbb52b" translate="yes" xml:space="preserve">
          <source>Deprecated alias for &lt;a href=&quot;#falcon.Response.content_length&quot;&gt;&lt;code&gt;content_length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Deprecated alias for &lt;a href=&quot;#falcon.Response.content_length&quot;&gt; &lt;code&gt;content_length&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6323d445a5409f452a72eb8270bc538077905e2e" translate="yes" xml:space="preserve">
          <source>Deprecated alias of &lt;a href=&quot;#falcon.Request.get_param_as_json&quot;&gt;&lt;code&gt;get_param_as_json()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">더 이상 사용되지 않는 &lt;a href=&quot;#falcon.Request.get_param_as_json&quot;&gt; &lt;code&gt;get_param_as_json()&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f035c500d4b20eba9d55ecc7ce3b01cece50b8d5" translate="yes" xml:space="preserve">
          <source>Description of the error to send to the client.</source>
          <target state="translated">Description of the error to send to the client.</target>
        </trans-unit>
        <trans-unit id="fef0fd90f9c4c55ce1c372e15b54aa639ccc836f" translate="yes" xml:space="preserve">
          <source>Deserialize the &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;falcon.Request&lt;/code&gt;&lt;/a&gt; body.</source>
          <target state="translated">&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;falcon.Request&lt;/code&gt; &lt;/a&gt; 바디를 역 직렬화합니다 .</target>
        </trans-unit>
        <trans-unit id="775c9ea24ea11c62d76254c84513bacad76d2b22" translate="yes" xml:space="preserve">
          <source>Deserialized JSON body. Will be &lt;code&gt;None&lt;/code&gt; if the body has no content to deserialize. Otherwise, raises an error if the response is not valid JSON.</source>
          <target state="translated">Deserialized JSON body. Will be &lt;code&gt;None&lt;/code&gt; if the body has no content to deserialize. Otherwise, raises an error if the response is not valid JSON.</target>
        </trans-unit>
        <trans-unit id="0299df69519745ac509aaf71de243d99707f67aa" translate="yes" xml:space="preserve">
          <source>Design Philosophy</source>
          <target state="translated">디자인 철학</target>
        </trans-unit>
        <trans-unit id="26bdd0d149e362c043f926983ccdddac9f21f2cc" translate="yes" xml:space="preserve">
          <source>Destructor, unittest-style</source>
          <target state="translated">소멸자, 단위 테스트 스타일</target>
        </trans-unit>
        <trans-unit id="7a7609e929a44556809fd4e890e3583331d74511" translate="yes" xml:space="preserve">
          <source>Determine whether or not the client accepts a given media type.</source>
          <target state="translated">클라이언트가 지정된 매체 유형을 승인하는지 여부를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="e71aed4a8cd681b35395696e1150d367f87966c1" translate="yes" xml:space="preserve">
          <source>Determine whether or not the query string parameter already exists.</source>
          <target state="translated">Determine whether or not the query string parameter already exists.</target>
        </trans-unit>
        <trans-unit id="3e0e00a46ffeb9620360ccca7635bdfc71120c30" translate="yes" xml:space="preserve">
          <source>Dictionary to hold any data about the response which is specific to your app. Falcon itself will not interact with this attribute after it has been initialized.</source>
          <target state="translated">Dictionary to hold any data about the response which is specific to your app. Falcon itself will not interact with this attribute after it has been initialized.</target>
        </trans-unit>
        <trans-unit id="6f1dbb02e0e2077d6b22d60c0740afd0dfedcc20" translate="yes" xml:space="preserve">
          <source>Direct the client to only return the cookie in subsequent requests if they are made over HTTPS (default: &lt;code&gt;True&lt;/code&gt;). This prevents attackers from reading sensitive cookie data.</source>
          <target state="translated">클라이언트가 HTTPS를 통해 만들어진 후속 요청에서만 쿠키를 반환하도록 지시합니다 (기본값 : &lt;code&gt;True&lt;/code&gt; ). 이를 통해 공격자는 민감한 쿠키 데이터를 읽을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="88edb6420768d175ccdffa45fb8843480c5a139e" translate="yes" xml:space="preserve">
          <source>Direct the client to only transfer the cookie with unscripted HTTP requests (default: &lt;code&gt;True&lt;/code&gt;). This is intended to mitigate some forms of cross-site scripting.</source>
          <target state="translated">클라이언트가 스크립트되지 않은 HTTP 요청으로 쿠키 만 전송하도록 지시합니다 (기본값 : &lt;code&gt;True&lt;/code&gt; ). 이는 일부 형태의 크로스 사이트 스크립팅을 완화하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9453e2cbe8751ce3af537387a9b66a0af7d69c6d" translate="yes" xml:space="preserve">
          <source>Disallowed characters are percent-encoded in a way that models &lt;code&gt;urllib.parse.quote(safe=&quot;~&quot;)&lt;/code&gt;. However, the Falcon function is faster in the average case than the similar &lt;code&gt;quote&lt;/code&gt; function found in urlib. It also strives to be easier to use by assuming a sensible default of allowed characters.</source>
          <target state="translated">허용되지 않는 문자는 &lt;code&gt;urllib.parse.quote(safe=&quot;~&quot;)&lt;/code&gt; 를 모델링하는 방식으로 퍼센트 인코딩됩니다 . 그러나 Falcon 함수는 urlib에 있는 유사한 &lt;code&gt;quote&lt;/code&gt; 함수 보다 평균적으로 더 빠릅니다 . 또한 허용되는 기본 문자를 적절하게 가정하여 사용하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="333272f4e9f2cff00edea32074481a620157e72f" translate="yes" xml:space="preserve">
          <source>Does Falcon set Content-Length or do I need to do that explicitly?</source>
          <target state="translated">팔콘은 Content-Length를 설정합니까 아니면 명시 적으로해야합니까?</target>
        </trans-unit>
        <trans-unit id="b86ca5300d5d9b26968a342f6624405b9094fc7f" translate="yes" xml:space="preserve">
          <source>Does Falcon support WebSocket?</source>
          <target state="translated">팔콘은 WebSocket을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="433816f574ded160cec7e99a85ad5bd601572a17" translate="yes" xml:space="preserve">
          <source>Does Falcon support asyncio?</source>
          <target state="translated">팔콘은 비동기를 지원합니까?</target>
        </trans-unit>
        <trans-unit id="c17c8e44f565b0f86049e467380a5969f33ca0ba" translate="yes" xml:space="preserve">
          <source>Does Falcon work with HTTP/2?</source>
          <target state="translated">팔콘은 HTTP / 2에서 작동합니까?</target>
        </trans-unit>
        <trans-unit id="10c6fdd97981e24b2bcf53bec7e2cea827bec567" translate="yes" xml:space="preserve">
          <source>Due to the limitations of WSGI, Falcon is unable to support &lt;code&gt;asyncio&lt;/code&gt; at this time. However, we are exploring alternatives to WSGI (such as &lt;a href=&quot;https://github.com/django/asgiref/blob/master/specs/asgi.rst&quot;&gt;ASGI&lt;/a&gt;) that will allow us to support asyncio natively in the future.</source>
          <target state="translated">WSGI의 제한으로 인해 Falcon은 현재 &lt;code&gt;asyncio&lt;/code&gt; 를 지원할 수 없습니다 . 그러나 향후 기본적으로 비동기를 지원할 수있는 WSGI ( &lt;a href=&quot;https://github.com/django/asgiref/blob/master/specs/asgi.rst&quot;&gt;ASGI&lt;/a&gt; 등)의 대안을 모색 하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="da446339868958f4e1cc59fafdca99f23d6ca74f" translate="yes" xml:space="preserve">
          <source>Due to the limitations of WSGI, Falcon is unable to support the WebSocket protocol as stated above.</source>
          <target state="translated">WSGI의 제한으로 인해 Falcon은 위에서 설명한 WebSocket 프로토콜을 지원할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6156a516dbfc6ea31bca7b52f7d996c965a0b36f" translate="yes" xml:space="preserve">
          <source>EMC</source>
          <target state="translated">EMC</target>
        </trans-unit>
        <trans-unit id="11d00f6ed181afbae6281cf892e585dcee85b274" translate="yes" xml:space="preserve">
          <source>ETag</source>
          <target state="translated">ETag</target>
        </trans-unit>
        <trans-unit id="a59688eba337a50736da76d745806f1f667fc91e" translate="yes" xml:space="preserve">
          <source>Each API instance provides a callable WSGI interface and a routing engine.</source>
          <target state="translated">각 API 인스턴스는 호출 가능한 WSGI 인터페이스와 라우팅 엔진을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9f5e53b022ed9dc5fe0bdeb568aeb8bd562852fd" translate="yes" xml:space="preserve">
          <source>Each component&amp;rsquo;s &lt;em&gt;process_request&lt;/em&gt;, &lt;em&gt;process_resource&lt;/em&gt;, and &lt;em&gt;process_response&lt;/em&gt; methods are executed hierarchically, as a stack, following the ordering of the list passed via the &lt;code&gt;middleware&lt;/code&gt; kwarg of &lt;a href=&quot;api#api&quot;&gt;falcon.API&lt;/a&gt;. For example, if a list of middleware objects are passed as &lt;code&gt;[mob1, mob2, mob3]&lt;/code&gt;, the order of execution is as follows:</source>
          <target state="translated">각 구성 요소의 &lt;em&gt;process_request&lt;/em&gt; , &lt;em&gt;process_resource&lt;/em&gt; 및 &lt;em&gt;process_response의&lt;/em&gt; 방법은 통해 전달 된리스트의 순서에 따라 스택으로 계층 적으로 실행된다 &lt;code&gt;middleware&lt;/code&gt; 의 kwarg &lt;a href=&quot;api#api&quot;&gt;falcon.API&lt;/a&gt; . 예를 들어, 미들웨어 오브젝트 목록이 &lt;code&gt;[mob1, mob2, mob3]&lt;/code&gt; 으로 전달되는 경우 실행 순서는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f406d0d1f99daf1740b0ed19bec1a7cb264b54d8" translate="yes" xml:space="preserve">
          <source>Each field is converted to a named group, so that when a match is found, the fields can be easily extracted using &lt;a href=&quot;https://docs.python.org/2/library/re.html#re.MatchObject.groupdict&quot;&gt;&lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 필드는 이름이 지정된 그룹으로 변환되므로 일치하는 항목이 발견되면 &lt;a href=&quot;https://docs.python.org/2/library/re.html#re.MatchObject.groupdict&quot;&gt; &lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt; &lt;/a&gt; 사용하여 필드를 쉽게 추출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7f00036493d8bd9741da3cc1b0c06fd5dfbfc5a" translate="yes" xml:space="preserve">
          <source>Each field is converted to a named group, so that when a match is found, the fields can be easily extracted using &lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt;.</source>
          <target state="translated">Each field is converted to a named group, so that when a match is found, the fields can be easily extracted using &lt;code&gt;re.MatchObject.groupdict()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="165753f601fa09554ba2c8a0a48eea9b6027512a" translate="yes" xml:space="preserve">
          <source>Each resource class defines various &amp;ldquo;responder&amp;rdquo; methods, one for each HTTP method the resource allows. Responder names start with &lt;code&gt;on_&lt;/code&gt; and are named according to which HTTP method they handle, as in &lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;on_post()&lt;/code&gt;, &lt;code&gt;on_put()&lt;/code&gt;, etc.</source>
          <target state="translated">각 리소스 클래스는 리소스가 허용하는 각 HTTP 메서드마다 하나씩 다양한 &quot;응답자&quot;메서드를 정의합니다. 응답자 이름은 &lt;code&gt;on_&lt;/code&gt; 로 시작하고 &lt;code&gt;on_get()&lt;/code&gt; , &lt;code&gt;on_post()&lt;/code&gt; , &lt;code&gt;on_put()&lt;/code&gt; 등에서 처리하는 HTTP 메소드에 따라 이름이 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="646f2e2ef01e4f55d9b4cc42a9104c1afb835ef4" translate="yes" xml:space="preserve">
          <source>Each responder also receives a &lt;code&gt;Response&lt;/code&gt; object that can be used for setting the status code, headers, and body of the response:</source>
          <target state="translated">각 응답자는 상태 코드, 헤더 및 응답 본문을 설정하는 데 사용할 수 있는 &lt;code&gt;Response&lt;/code&gt; 객체 도받습니다 .</target>
        </trans-unit>
        <trans-unit id="d3c0844abd55a9bfb6c5b8339fb95f7bbe1bee95" translate="yes" xml:space="preserve">
          <source>Each responder in a resource receives a &lt;code&gt;Request&lt;/code&gt; object that can be used to read the headers, query parameters, and body of the request. You can use the standard &lt;code&gt;help()&lt;/code&gt; function or IPython&amp;rsquo;s magic &lt;code&gt;?&lt;/code&gt; function to list the attributes and methods of Falcon&amp;rsquo;s &lt;code&gt;Request&lt;/code&gt; class:</source>
          <target state="translated">리소스의 각 응답자 는 헤더, 쿼리 매개 변수 및 요청 본문을 읽는 데 사용할 수 있는 &lt;code&gt;Request&lt;/code&gt; 개체를 받습니다 . 표준 &lt;code&gt;help()&lt;/code&gt; 함수 또는 IPython의 마법을 사용할 수 &lt;code&gt;?&lt;/code&gt; Falcon의 &lt;code&gt;Request&lt;/code&gt; 클래스 의 속성과 메소드를 나열하는 함수 :</target>
        </trans-unit>
        <trans-unit id="c55ab0140edbfbb58e34e829e02c6d18e88152f2" translate="yes" xml:space="preserve">
          <source>Earlier we pointed out that our POST test relied heavily on mocking, relying on assumptions that may or may not hold true as the code evolves. To mitigate this problem, we&amp;rsquo;ll not only have to refactor the tests, but also the application itself.</source>
          <target state="translated">앞에서 우리는 POST 테스트가 코드가 발전함에 따라 사실 일 수도 있고 그렇지 않을 수도있는 가정에 의존하여 조롱에 크게 의존한다고 지적했다. 이 문제를 완화하려면 테스트를 리팩터링해야 할뿐만 아니라 애플리케이션 자체도 리팩토링해야합니다.</target>
        </trans-unit>
        <trans-unit id="7a5cfd205582374128d08fa3eed383f40815420b" translate="yes" xml:space="preserve">
          <source>Easy access to headers and bodies through request and response classes</source>
          <target state="translated">요청 및 응답 클래스를 통해 헤더 및 본문에 쉽게 액세스</target>
        </trans-unit>
        <trans-unit id="9ca0878681522886c271137626bb93f0dc36a138" translate="yes" xml:space="preserve">
          <source>Either a file-like object with a &lt;code&gt;read()&lt;/code&gt; method that takes an optional size argument and returns a block of bytes, or an iterable object, representing response content, and yielding blocks as byte strings. Falcon will use &lt;em&gt;wsgi.file_wrapper&lt;/em&gt;, if provided by the WSGI server, in order to efficiently serve file-like objects.</source>
          <target state="translated">선택적인 size 인수를 사용하여 바이트 블록 또는 응답 내용을 나타내는 반복 가능한 객체를 반환하고 블록을 바이트 문자열로 생성 하는 &lt;code&gt;read()&lt;/code&gt; 메서드가 있는 파일과 유사한 객체입니다 . Falcon은 WSGI 서버에서 제공하는 경우 파일과 유사한 객체를 효율적으로 제공하기 위해 &lt;em&gt;wsgi.file_wrapper&lt;/em&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="dd2f8fde4a791557c2d695ee3100ad40ba255251" translate="yes" xml:space="preserve">
          <source>Either a single object or a list of objects (instantiated classes) that implement the following middleware component interface:</source>
          <target state="translated">다음 미들웨어 구성 요소 인터페이스를 구현하는 단일 오브젝트 또는 오브젝트 목록 (인스턴스화 된 클래스)입니다.</target>
        </trans-unit>
        <trans-unit id="4ef71783b141a2d11192414b87a22a812cb80cb2" translate="yes" xml:space="preserve">
          <source>Empty object to hold any data (in its attributes) about the request which is specific to your app (e.g. session object). Falcon itself will not interact with this attribute after it has been initialized.</source>
          <target state="translated">Empty object to hold any data (in its attributes) about the request which is specific to your app (e.g. session object). Falcon itself will not interact with this attribute after it has been initialized.</target>
        </trans-unit>
        <trans-unit id="43a82d2239220d9c6c89d95b71708f6e463e008f" translate="yes" xml:space="preserve">
          <source>Empty object to hold any data (in its attributes) about the response which is specific to your app (e.g. session object). Falcon itself will not interact with this attribute after it has been initialized.</source>
          <target state="translated">Empty object to hold any data (in its attributes) about the response which is specific to your app (e.g. session object). Falcon itself will not interact with this attribute after it has been initialized.</target>
        </trans-unit>
        <trans-unit id="f029b2ac6838e372f0fa401b3a39ec9d5ca678e2" translate="yes" xml:space="preserve">
          <source>Enabling this option makes the form parameters accessible via &lt;a href=&quot;request_and_response#falcon.Request.params&quot;&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;request_and_response#falcon.Request.get_param&quot;&gt;&lt;code&gt;get_param()&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">이 옵션을 활성화하면 &lt;a href=&quot;request_and_response#falcon.Request.params&quot;&gt; &lt;code&gt;params&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;request_and_response#falcon.Request.get_param&quot;&gt; &lt;code&gt;get_param()&lt;/code&gt; &lt;/a&gt; 등을 통해 폼 매개 변수에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2dfe17979242954f01820bab666a1248faf47f85" translate="yes" xml:space="preserve">
          <source>Encapsulates the result of a simulated WSGI request.</source>
          <target state="translated">시뮬레이션 된 WSGI 요청의 결과를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="7d7cebcbcce845f1caf1a867178ff8f9f746cfc4" translate="yes" xml:space="preserve">
          <source>Encodes a full or relative URI according to RFC 3986.</source>
          <target state="translated">RFC 3986에 따라 전체 또는 상대 URI를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="32866acddd5ac64d35a4e2a319c5b20321a865cb" translate="yes" xml:space="preserve">
          <source>Encodes a value string according to RFC 3986.</source>
          <target state="translated">RFC 3986에 따라 값 문자열을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="ee20c6a8f3c82704b0c724ac8d99c26e4e40e19c" translate="yes" xml:space="preserve">
          <source>Error handlers are matched in LIFO order. In other words, when searching for an error handler to match a raised exception, and more than one handler matches the exception type, the framework will choose the one that was most recently registered. Therefore, more general error handlers (e.g., for the standard &lt;code&gt;Exception&lt;/code&gt; type) should be added first, to avoid masking more specific handlers for subclassed types.</source>
          <target state="translated">오류 처리기는 LIFO 순서로 일치합니다. 즉, 발생한 예외와 일치하는 오류 처리기를 검색하고 둘 이상의 처리기가 예외 유형과 일치하면 프레임 워크는 가장 최근에 등록 된 처리기를 선택합니다. 따라서 서브 클래 싱 된 유형에 대해보다 구체적인 핸들러를 마스킹하지 않도록 보다 일반적인 오류 핸들러 (예 : 표준 &lt;code&gt;Exception&lt;/code&gt; 유형의 경우)를 먼저 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="3359764f9e08b6eeb67bd22cb401f62266b45657" translate="yes" xml:space="preserve">
          <source>Error handlers may be registered for any exception type, including &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. This feature provides a central location for logging and otherwise handling exceptions raised by responders, hooks, and middleware components.</source>
          <target state="translated">Error handlers may be registered for any exception type, including &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt;. This feature provides a central location for logging and otherwise handling exceptions raised by responders, hooks, and middleware components.</target>
        </trans-unit>
        <trans-unit id="35bf342ec90ed3bf74e2871976342e87b0fccbb1" translate="yes" xml:space="preserve">
          <source>Error handlers may be registered for any type, including &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;. This feature provides a central location for logging and otherwise handling exceptions raised by responders, hooks, and middleware components.</source>
          <target state="translated">오류 핸들러는 &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; 를&lt;/a&gt; 포함한 모든 유형에 대해 등록 될 수 있습니다 . 이 기능은 응답자, 후크 및 미들웨어 구성 요소에서 발생한 예외를 로깅하고 처리 할 수있는 중앙 위치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="66245aa64a86154ca6a2ea42b381f9d26b64b3c7" translate="yes" xml:space="preserve">
          <source>Error handlers may be registered for any type, including &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;. This feature provides a central location for logging and otherwise handling exceptions raised by responders, hooks, and middleware components.</source>
          <target state="translated">오류 핸들러는 &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; 를&lt;/a&gt; 포함한 모든 유형에 대해 등록 될 수 있습니다 . 이 기능은 응답자, 후크 및 미들웨어 구성 요소에서 발생한 예외를 로깅하고 처리 할 수있는 중앙 위치를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3f95d4177f3c0a25ab5e3dd92d80a6502213f9fd" translate="yes" xml:space="preserve">
          <source>Error title to send to the client.</source>
          <target state="translated">Error title to send to the client.</target>
        </trans-unit>
        <trans-unit id="bde86c7f4b7dc767f358479138f8cb086c648eda" translate="yes" xml:space="preserve">
          <source>Errors are anticipated, detected, and handled appropriately within each responder and with the aid of custom error handlers.</source>
          <target state="translated">오류는 각 응답자 내에서 그리고 사용자 지정 오류 처리기를 사용하여 적절하게 예상, 감지 및 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="ab5b9b756db80059caf4778cf1f03df3e7182963" translate="yes" xml:space="preserve">
          <source>Errors are anticipated, detected, logged, and handled appropriately within each responder or by global error handling hooks.</source>
          <target state="translated">각 응답기 내에서 또는 전역 오류 처리 후크를 통해 오류를 예상, 감지, 기록 및 처리합니다.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">예외 처리</target>
        </trans-unit>
        <trans-unit id="ee8510efdf378ab696b93e4748700719f7f04f94" translate="yes" xml:space="preserve">
          <source>Expiration timestamp for the cookie, or &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">Expiration timestamp for the cookie, or &lt;code&gt;None&lt;/code&gt; if not specified.</target>
        </trans-unit>
        <trans-unit id="75f06aa13c189adf2f5019fbbfe4710304a99656" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; to support WSGI functional testing.</source>
          <target state="translated">확장 &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 지원 WSGI 기능 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="eac660c7fea7ccf9c5f962c287ec1cb3dfe2faf7" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; to support WSGI functional testing.</source>
          <target state="translated">Extends &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; to support WSGI functional testing.</target>
        </trans-unit>
        <trans-unit id="02c94538d1874480a4371b6ab14ef1e2eea48fb4" translate="yes" xml:space="preserve">
          <source>Extensibility</source>
          <target state="translated">Extensibility</target>
        </trans-unit>
        <trans-unit id="c848f40d2452ea442d3bd32214649cb87c2524cd" translate="yes" xml:space="preserve">
          <source>Extra headers to add to the response.</source>
          <target state="translated">Extra headers to add to the response.</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="63f5c347ef158500f121d78160b7a92c3c94ee35" translate="yes" xml:space="preserve">
          <source>Falcon</source>
          <target state="translated">Falcon</target>
        </trans-unit>
        <trans-unit id="ff48f03e1496cdfcab9efde703a6ff29f4c06783" translate="yes" xml:space="preserve">
          <source>Falcon &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;lives on GitHub&lt;/a&gt;, making the code easy to browse, download, fork, etc. Pull requests are always welcome! Also, please remember to star the project if it makes you happy. :)</source>
          <target state="translated">팔콘 &lt;a href=&quot;https://github.com/falconry/falcon&quot;&gt;은 GitHub&lt;/a&gt; 에 있으며 코드를 쉽게 탐색, 다운로드, 포크 등으로 쉽게 만들 수 있습니다. 풀 요청은 언제나 환영합니다! 또한 행복하다면 프로젝트에 별표를 표시해야합니다. :)</target>
        </trans-unit>
        <trans-unit id="f985cf6a12e639ab0c0d300aa39acb655162eae9" translate="yes" xml:space="preserve">
          <source>Falcon &lt;a href=&quot;middleware#middleware&quot;&gt;middleware components&lt;/a&gt; can also be used to insert logic before and after requests. However, unlike hooks, &lt;a href=&quot;middleware#middleware&quot;&gt;middleware components&lt;/a&gt; are triggered &lt;strong&gt;globally&lt;/strong&gt; for all requests.</source>
          <target state="translated">Falcon &lt;a href=&quot;middleware#middleware&quot;&gt;미들웨어 구성 요소&lt;/a&gt; 를 사용하여 요청 전후에 로직을 삽입 할 수도 있습니다. 그러나 후크와 달리 &lt;a href=&quot;middleware#middleware&quot;&gt;미들웨어 구성 요소&lt;/a&gt; 는 모든 요청에 ​​대해 &lt;strong&gt;전체적으로&lt;/strong&gt; 트리거 됩니다.</target>
        </trans-unit>
        <trans-unit id="65a06e2be7aac7c96da06e023e8b6c51baf9ba19" translate="yes" xml:space="preserve">
          <source>Falcon License</source>
          <target state="translated">팔콘 라이센스</target>
        </trans-unit>
        <trans-unit id="2ff92c93236f195dd672d7d5152b84a0ce77a3ac" translate="yes" xml:space="preserve">
          <source>Falcon add-ons and complementary packages</source>
          <target state="translated">팔콘 애드온 및 보완 패키지</target>
        </trans-unit>
        <trans-unit id="45e56cf3c6bb3d12c9fc3ce9b0c73701bf0c08dd" translate="yes" xml:space="preserve">
          <source>Falcon allows for easy and customizable internet media type handling. By default Falcon only enables a single JSON handler. However, additional handlers can be configured through the &lt;a href=&quot;api#falcon.RequestOptions&quot;&gt;&lt;code&gt;falcon.RequestOptions&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api#falcon.ResponseOptions&quot;&gt;&lt;code&gt;falcon.ResponseOptions&lt;/code&gt;&lt;/a&gt; objects specified on your &lt;a href=&quot;api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Falcon은 쉽고 사용자 정의 가능한 인터넷 미디어 유형 처리를 허용합니다. 기본적으로 Falcon은 단일 JSON 핸들러 만 사용합니다. 그러나 추가 핸들러는 통해 구성 할 수 있습니다 &lt;a href=&quot;api#falcon.RequestOptions&quot;&gt; &lt;code&gt;falcon.RequestOptions&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;api#falcon.ResponseOptions&quot;&gt; &lt;code&gt;falcon.ResponseOptions&lt;/code&gt; 는&lt;/a&gt; 당신에 지정된 오브젝트 &lt;a href=&quot;api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1f672f0128390601d121f95602600d2c84ad96d" translate="yes" xml:space="preserve">
          <source>Falcon also fully supports &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.6-2.7, and 3.3+.</source>
          <target state="translated">Falcon은 &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.6-2.7 및 3.3+ 도 완벽하게 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="002b14694690e328be54f6c23431c08d2c5df58d" translate="yes" xml:space="preserve">
          <source>Falcon also fully supports &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.7 and 3.5+.</source>
          <target state="translated">Falcon은 &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;CPython&lt;/a&gt; 2.7 및 3.5+ 도 완벽하게 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="2b15873bbe86c4e87696ba5782f4adcfc5427ceb" translate="yes" xml:space="preserve">
          <source>Falcon also provides a generic &lt;code&gt;HTTPStatus&lt;/code&gt; class. Raise this class from a hook, middleware, or a responder to stop handling the request and skip to the response handling. It takes status, additional headers and body as input arguments.</source>
          <target state="translated">Falcon은 일반 &lt;code&gt;HTTPStatus&lt;/code&gt; 클래스 도 제공합니다 . 후크, 미들웨어 또는 응답자에서이 클래스를 발생시켜 요청 처리를 중지하고 응답 처리로 건너 뜁니다. 입력 인수로 상태, 추가 헤더 및 본문을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a04fb937268d26a387dd343dc484a3b4a6f67c71" translate="yes" xml:space="preserve">
          <source>Falcon also supports more complex parameterized path segments that contain multiple values. For example, a version control API might use the following route template for diffing two code branches:</source>
          <target state="translated">Falcon은 또한 여러 값을 포함하는보다 복잡한 매개 변수화 된 경로 세그먼트를 지원합니다. 예를 들어, 버전 제어 API는 두 가지 코드 분기를 비교하기 위해 다음 경로 템플릿을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcfee5f0c0c8cdbc7927b7371d72f84d6a292203" translate="yes" xml:space="preserve">
          <source>Falcon apps work with any WSGI server, and run great under CPython 2.7, PyPy, and CPython 3.3+.</source>
          <target state="translated">팔콘 앱은 모든 WSGI 서버에서 작동하며 CPython 2.7, PyPy 및 CPython 3.3+에서 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="64c4fff7a7d8955f63960d5d796cce83989a3f01" translate="yes" xml:space="preserve">
          <source>Falcon apps work with any WSGI server, and run like a champ under CPython 2.7/3.5+ and PyPy.</source>
          <target state="translated">Falcon apps work with any WSGI server, and run like a champ under CPython 2.7/3.5+ and PyPy.</target>
        </trans-unit>
        <trans-unit id="30ff7f06ee541aa1bfc890408dff2d83e05b1ddb" translate="yes" xml:space="preserve">
          <source>Falcon attempts to serialize the &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; instance using its &lt;a href=&quot;../api/errors#falcon.HTTPError.to_json&quot;&gt;&lt;code&gt;to_json()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../api/errors#falcon.HTTPError.to_xml&quot;&gt;&lt;code&gt;to_xml()&lt;/code&gt;&lt;/a&gt; methods, according to the Accept header in the request. If neither JSON nor XML is acceptable, no response body will be generated. You can override this behavior if needed via &lt;a href=&quot;../api/api#falcon.API.set_error_serializer&quot;&gt;&lt;code&gt;set_error_serializer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Falcon 은 요청의 Accept 헤더에 따라 &lt;a href=&quot;../api/errors#falcon.HTTPError.to_json&quot;&gt; &lt;code&gt;to_json()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../api/errors#falcon.HTTPError.to_xml&quot;&gt; &lt;code&gt;to_xml()&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하여 &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 인스턴스 를 직렬화하려고 시도합니다 . JSON이나 XML을 모두 수용 할 수 없으면 응답 본문이 생성되지 않습니다. 필요한 경우 &lt;a href=&quot;../api/api#falcon.API.set_error_serializer&quot;&gt; &lt;code&gt;set_error_serializer()&lt;/code&gt; &lt;/a&gt; 를 통해이 동작을 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ce0df4c5f0585e0379acc2e86a5c07583ed7f3b" translate="yes" xml:space="preserve">
          <source>Falcon can process a list of &lt;code&gt;tuple&lt;/code&gt; slightly faster than a &lt;code&gt;dict&lt;/code&gt;.</source>
          <target state="translated">Falcon은 &lt;code&gt;dict&lt;/code&gt; 보다 약간 빠른 &lt;code&gt;tuple&lt;/code&gt; 목록을 처리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="3e4c286f6834327372f62f90146b2f304b8c7fc9" translate="yes" xml:space="preserve">
          <source>Falcon can process a list of tuples slightly faster than a dict.</source>
          <target state="translated">팔콘은 딕트보다 약간 빠른 튜플 목록을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="48d16cef4fb3abb175934bc1380b83df78c1de40" translate="yes" xml:space="preserve">
          <source>Falcon conforms to the standard &lt;a href=&quot;https://www.python.org/dev/peps/pep-0333/&quot;&gt;WSGI protocol&lt;/a&gt; that most Python web applications have been using since 2003. If you have deployed Python applications like Django, Flask, or others, you will find yourself quite at home with Falcon and your standard Apache/mod_wsgi, gunicorn, or other WSGI servers should suffice.</source>
          <target state="translated">Falcon conforms to the standard &lt;a href=&quot;https://www.python.org/dev/peps/pep-0333/&quot;&gt;WSGI protocol&lt;/a&gt; that most Python web applications have been using since 2003. If you have deployed Python applications like Django, Flask, or others, you will find yourself quite at home with Falcon and your standard Apache/mod_wsgi, gunicorn, or other WSGI servers should suffice.</target>
        </trans-unit>
        <trans-unit id="3e190e5b799c3b82e2170b9965b1ae27cddb2a45" translate="yes" xml:space="preserve">
          <source>Falcon currently only provides a JSON Schema media validator; however, JSON Schema is very versatile and can be used to validate any deserialized media type that JSON also supports (i.e. dicts, lists, etc).</source>
          <target state="translated">Falcon은 현재 JSON 스키마 미디어 검사기 만 제공합니다. 그러나 JSON 스키마는 매우 다양하며 JSON이 지원하는 직렬화 해제 된 미디어 유형 (예 : dicts, list 등)의 유효성을 검사하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b70472072a8b2328159abb8119444c3bff614b91" translate="yes" xml:space="preserve">
          <source>Falcon currently only supports partial negotiation out of the box. By default, when the &lt;code&gt;media&lt;/code&gt; attribute is used it attempts to de/serialize based on the &lt;code&gt;Content-Type&lt;/code&gt; header value. The missing link that Falcon doesn&amp;rsquo;t provide is the connection between the &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;falcon.Request&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Accept&lt;/code&gt; header provided by a user and the &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;falcon.Response&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="translated">Falcon은 현재 기본적으로 부분 협상 만 지원합니다. 기본적으로 &lt;code&gt;media&lt;/code&gt; 속성을 사용하면 &lt;code&gt;Content-Type&lt;/code&gt; 헤더 값을 기반으로 de / serialize를 시도 합니다. Falcon이 제공하지 않는 누락 된 링크 는 사용자가 제공 한 &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;falcon.Request&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Accept&lt;/code&gt; 헤더와 &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;falcon.Response&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Content-Type&lt;/code&gt; 헤더 간의 연결 입니다.</target>
        </trans-unit>
        <trans-unit id="0fc0369a56969f0cee94796a740ef9a8bea55713" translate="yes" xml:space="preserve">
          <source>Falcon defaults to treating commas in a query string as literal characters delimiting a comma separated list. For example, given the query string &lt;code&gt;?c=1,2,3&lt;/code&gt;, Falcon defaults to adding this to your &lt;code&gt;request.params&lt;/code&gt; dictionary as &lt;code&gt;{'c': ['1', '2', '3']}&lt;/code&gt;. If you attempt to use JSON in the value of the query string, for example &lt;code&gt;?c={'a':1,'b':2}&lt;/code&gt;, the value will get added to your &lt;code&gt;request.params&lt;/code&gt; in a way that you probably don&amp;rsquo;t expect: &lt;code&gt;{'c': [&quot;{'a':1&quot;, &quot;'b':2}&quot;]}&lt;/code&gt;.</source>
          <target state="translated">Falcon은 기본적으로 쿼리 문자열의 쉼표를 쉼표로 구분 된 목록을 구분하는 리터럴 문자로 취급합니다. 예를 들어, 쿼리 문자열 &lt;code&gt;?c=1,2,3&lt;/code&gt; 지정된 경우 Falcon은 기본적으로이를 &lt;code&gt;request.params&lt;/code&gt; 사전에 &lt;code&gt;{'c': ['1', '2', '3']}&lt;/code&gt; 합니다. 쿼리 문자열 값에 JSON을 사용하려고하면 (예 : &lt;code&gt;?c={'a':1,'b':2}&lt;/code&gt; ) 값이 &lt;code&gt;request.params&lt;/code&gt; 에 추가됩니다. ''예상 : &lt;code&gt;{'c': [&quot;{'a':1&quot;, &quot;'b':2}&quot;]}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19700eeabd9858730b3a56693543cccf728c68d1" translate="yes" xml:space="preserve">
          <source>Falcon defines a set of exceptions that can be raised within a middleware method, hook, or responder in order to trigger a 3xx (Redirection) response to the client. Raising one of these classes short-circuits request processing in a manner similar to raising an instance or subclass of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Falcon은 클라이언트에 대한 3xx (리디렉션) 응답을 트리거하기 위해 미들웨어 메소드, 후크 또는 응답기에서 발생할 수있는 예외 세트를 정의합니다. 이러한 클래스 중 하나를 발생 &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 의 인스턴스 또는 서브 클래스를 발생시키는 것과 유사한 방식으로 요청 처리를 단락 시킵니다.</target>
        </trans-unit>
        <trans-unit id="041110baeb8cec21e5eb2d4fcbf01352e7364e95" translate="yes" xml:space="preserve">
          <source>Falcon depends on &lt;code&gt;six&lt;/code&gt; and &lt;code&gt;python-mimeparse&lt;/code&gt;. &lt;code&gt;python-mimeparse&lt;/code&gt; is a better-maintained fork of the similarly named &lt;code&gt;mimeparse&lt;/code&gt; project. Normally the correct package will be selected by Falcon&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt;. However, if you are using an alternate strategy to manage dependencies, please take care to install the correct package in order to avoid errors.</source>
          <target state="translated">팔콘은 &lt;code&gt;six&lt;/code&gt; 와 &lt;code&gt;python-mimeparse&lt;/code&gt; 에 의존 합니다. &lt;code&gt;python-mimeparse&lt;/code&gt; 는 비슷한 이름의 &lt;code&gt;mimeparse&lt;/code&gt; 프로젝트 에서 더 잘 유지 관리되는 포크입니다 . 일반적으로 올바른 패키지는 Falcon의 &lt;code&gt;setup.py&lt;/code&gt; 에 의해 선택됩니다 . 그러나 대체 전략을 사용하여 종속성을 관리하는 경우 오류가 발생하지 않도록 올바른 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="2dc109fe672187d17f3ee0103d06304b59bf42a0" translate="yes" xml:space="preserve">
          <source>Falcon does not currently support parsing files submitted by an HTTP form (&lt;code&gt;multipart/form-data&lt;/code&gt;), although we do plan to add this feature in a future version. In the meantime, you can use the standard &lt;code&gt;cgi.FieldStorage&lt;/code&gt; class to parse the request:</source>
          <target state="translated">Falcon은 현재 HTTP 양식 ( &lt;code&gt;multipart/form-data&lt;/code&gt; )이 제출 한 파일 구문 분석을 지원하지 않지만 향후 버전에서이 기능을 추가 할 계획입니다. 그 동안 표준 &lt;code&gt;cgi.FieldStorage&lt;/code&gt; 클래스를 사용 하여 요청을 구문 분석 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="893fc520da135bd087daa58536d9df61e8adcf13" translate="yes" xml:space="preserve">
          <source>Falcon does not require the installation of any other packages, although if Cython has been installed into the environment, it will be used to optimize the framework as explained above.</source>
          <target state="translated">Falcon does not require the installation of any other packages, although if Cython has been installed into the environment, it will be used to optimize the framework as explained above.</target>
        </trans-unit>
        <trans-unit id="178a7f28b5f4652fbfd18ffcf548fb18a2a0551b" translate="yes" xml:space="preserve">
          <source>Falcon expects form-encoded request bodies to be encoded according to the standard W3C algorithm (see also &lt;a href=&quot;http://goo.gl/6rlcux&quot;&gt;http://goo.gl/6rlcux&lt;/a&gt;).</source>
          <target state="translated">Falcon은 양식 인코딩 된 요청 본문이 표준 W3C 알고리즘에 따라 인코딩 될 것으로 예상합니다 ( &lt;a href=&quot;http://goo.gl/6rlcux&quot;&gt;http://goo.gl/6rlcux 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c4b85556d3e04ab6f63de7efdf95459322daf641" translate="yes" xml:space="preserve">
          <source>Falcon expects form-encoded request bodies to be encoded according to the standard W3C algorithm (see also &lt;a href=&quot;https://goo.gl/6rlcux&quot;&gt;http://goo.gl/6rlcux&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ea1b124e1240e3e9bf53d95b82cc6d3f0b08b5" translate="yes" xml:space="preserve">
          <source>Falcon generally tries to minimize the number of objects that it instantiates. It does this for two reasons: first, to avoid the expense of creating the object, and second to reduce memory usage by reducing the total number of objects required under highly concurrent workloads. Therefore, when adding a route, Falcon requires an &lt;em&gt;instance&lt;/em&gt; of your resource class, rather than the class type. That same instance will be used to serve all requests coming in on that route.</source>
          <target state="translated">Falcon generally tries to minimize the number of objects that it instantiates. It does this for two reasons: first, to avoid the expense of creating the object, and second to reduce memory usage by reducing the total number of objects required under highly concurrent workloads. Therefore, when adding a route, Falcon requires an &lt;em&gt;instance&lt;/em&gt; of your resource class, rather than the class type. That same instance will be used to serve all requests coming in on that route.</target>
        </trans-unit>
        <trans-unit id="3f09e0064f3e01c26b36cb0375af89d26a5a5266" translate="yes" xml:space="preserve">
          <source>Falcon generally tries to minimize the number of objects that it instantiates. It does this for two reasons: first, to avoid the expense of creating the object, and second to reduce memory usage. Therefore, when adding a route, Falcon requires an &lt;em&gt;instance&lt;/em&gt; of your resource class, rather than the class type. That same instance will be used to serve all requests coming in on that route.</source>
          <target state="translated">팔콘은 일반적으로 인스턴스화하는 객체 수를 최소화하려고합니다. 먼저 두 가지 이유가 있습니다. 첫째, 오브젝트 작성 비용을 피하고 둘째는 메모리 사용을 줄입니다. 따라서 경로를 추가 할 때 Falcon에는 클래스 유형이 아닌 리소스 클래스 &lt;em&gt;인스턴스&lt;/em&gt; 가 필요합니다 . 동일한 인스턴스가 해당 경로에서 들어오는 모든 요청을 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d1b91eb49c14b6998d3fd7c99d4b838195c4670f" translate="yes" xml:space="preserve">
          <source>Falcon is a WSGI framework and as such does not serve HTTP requests directly. However, you can get most of the benefits of HTTP/2 by simply deploying any HTTP/2-compliant web server or load balancer in front of your app to translate between HTTP/2 and HTTP/1.1. Eventually we expect that Python web servers (such as uWSGI) will support HTTP/2 natively, eliminating the need for a translation layer.</source>
          <target state="translated">Falcon은 WSGI 프레임 워크이므로 HTTP 요청을 직접 제공하지 않습니다. 그러나 HTTP / 2와 HTTP / 1.1 사이를 변환하기 위해 앱 앞에 HTTP / 2 호환 웹 서버 또는로드 밸런서를 배포하면 HTTP / 2의 이점을 최대한 활용할 수 있습니다. 결국 uWSGI와 같은 Python 웹 서버는 기본적으로 HTTP / 2를 지원하므로 변환 계층이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="08add0fc9564a2148338ad5c29cc77a0f80535ad" translate="yes" xml:space="preserve">
          <source>Falcon is a minimalist WSGI library for building speedy web APIs and app backends. We like to think of Falcon as the &lt;code&gt;Dieter Rams&lt;/code&gt; of web frameworks.</source>
          <target state="translated">Falcon은 빠른 웹 API 및 앱 백엔드를 구축하기위한 최소한의 WSGI 라이브러리입니다. 우리는 Falcon 을 웹 프레임 워크 의 &lt;code&gt;Dieter Rams&lt;/code&gt; 로 생각하고 싶습니다 .</target>
        </trans-unit>
        <trans-unit id="ce64070b7a41f29416d6b0a95631568828ed2fe6" translate="yes" xml:space="preserve">
          <source>Falcon is designed for applications that require a high level of customization or performance tuning. The framework&amp;rsquo;s minimalist design frees the developer to select the best strategies and 3rd-party packages for the task at hand.</source>
          <target state="translated">Falcon은 높은 수준의 사용자 지정 또는 성능 조정이 필요한 응용 프로그램을 위해 설계되었습니다. 프레임 워크의 미니멀리스트 디자인은 개발자가 작업에 가장 적합한 전략과 타사 패키지를 선택할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="08927384fe350eda2d01fb26bf3840a05b37b6fe" translate="yes" xml:space="preserve">
          <source>Falcon is released under the terms of the &lt;a href=&quot;http://opensource.org/licenses/Apache-2.0&quot;&gt;Apache 2.0 License&lt;/a&gt;. This means that you can use it in your commercial applications without having to also open-source your own code. It also means that if someone happens to contribute code that is associated with a patent, you are granted a free license to use said patent. That&amp;rsquo;s a pretty sweet deal.</source>
          <target state="translated">Falcon은 &lt;a href=&quot;http://opensource.org/licenses/Apache-2.0&quot;&gt;Apache 2.0 라이센스&lt;/a&gt; 조건에 따라 릴리스됩니다 . 즉, 자신의 코드를 오픈 소스하지 않고도 상용 응용 프로그램에서 사용할 수 있습니다. 또한 누군가가 특허와 관련된 코드를 제공하는 경우 해당 특허를 사용할 수있는 무료 라이센스가 부여됨을 의미합니다. 꽤 좋은 거래입니다.</target>
        </trans-unit>
        <trans-unit id="e28af00753c7472e86581b49d5042b07b62fdb76" translate="yes" xml:space="preserve">
          <source>Falcon is released under the terms of the &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;Apache 2.0 License&lt;/a&gt;. This means that you can use it in your commercial applications without having to also open-source your own code. It also means that if someone happens to contribute code that is associated with a patent, you are granted a free license to use said patent. That&amp;rsquo;s a pretty sweet deal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e693fff89fba4cc021a57b3ebb6d7f3af5f9c8c5" translate="yes" xml:space="preserve">
          <source>Falcon is used around the world by a growing number of organizations, including:</source>
          <target state="translated">팔콘은 다음을 포함하여 점점 더 많은 조직에서 전 세계적으로 사용되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebec94c9185cdd938b233168f02d7f9a44883e86" translate="yes" xml:space="preserve">
          <source>Falcon makes it easy to efficiently serve static files by simply assigning an open file to &lt;code&gt;resp.stream&lt;/code&gt;&lt;a href=&quot;tutorial#tutorial-serving-images&quot;&gt;as demonstrated in the tutorial&lt;/a&gt;. You can also serve an entire directory of files via &lt;a href=&quot;../api/api#falcon.API.add_static_route&quot;&gt;&lt;code&gt;falcon.API.add_static_route()&lt;/code&gt;&lt;/a&gt;. However, if possible, it is best to serve static files directly from a web server like Nginx, or from a CDN.</source>
          <target state="translated">Falcon을 사용 &lt;a href=&quot;tutorial#tutorial-serving-images&quot;&gt;하면 자습서에서 &lt;/a&gt; &lt;code&gt;resp.stream&lt;/code&gt; 대로 열린 파일을 resp.stream에 지정하면 정적 파일을 효율적으로 제공 할 수 있습니다 . &lt;a href=&quot;../api/api#falcon.API.add_static_route&quot;&gt; &lt;code&gt;falcon.API.add_static_route()&lt;/code&gt; &lt;/a&gt; 를 통해 파일의 전체 디렉토리를 제공 할 수도 있습니다 . 그러나 가능하면 Nginx와 같은 웹 서버 또는 CDN에서 직접 정적 파일을 제공하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="579f5aec8b920abd906a5ff47a0e1cda2ece2346" translate="yes" xml:space="preserve">
          <source>Falcon provides a list of constants for common &lt;a href=&quot;http://httpstatus.es&quot;&gt;HTTP response status codes&lt;/a&gt;.</source>
          <target state="translated">Falcon은 일반적인 &lt;a href=&quot;http://httpstatus.es&quot;&gt;HTTP 응답 상태 코드에 대한&lt;/a&gt; 상수 목록을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4b8849afcd8ec22e51fd14346744d2d18826e039" translate="yes" xml:space="preserve">
          <source>Falcon provides a number of constants for common status codes. They all start with the &lt;code&gt;HTTP_&lt;/code&gt; prefix, as in: &lt;code&gt;falcon.HTTP_204&lt;/code&gt;.</source>
          <target state="translated">Falcon은 일반적인 상태 코드에 대한 여러 상수를 제공합니다. 모두 &lt;code&gt;falcon.HTTP_204&lt;/code&gt; 와 같이 &lt;code&gt;HTTP_&lt;/code&gt; 접두사로 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="ca003e1b7eda3901a9295ddc490c2fe136e79263" translate="yes" xml:space="preserve">
          <source>Falcon provides a number of exception classes that can be raised to redirect the client to a different location (see also &lt;a href=&quot;../api/redirects#redirects&quot;&gt;Redirection&lt;/a&gt;).</source>
          <target state="translated">Falcon은 클라이언트를 다른 위치로 리디렉션하기 위해 발생할 수있는 많은 예외 클래스를 제공합니다 ( &lt;a href=&quot;../api/redirects#redirects&quot;&gt;리디렉션&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="cc047f388844ceeb1fdcecbb806c60707a5a94b4" translate="yes" xml:space="preserve">
          <source>Falcon routes incoming requests to resources based on a set of URI templates. If the path requested by the client matches the template for a given route, the request is then passed on to the associated resource for processing.</source>
          <target state="translated">Falcon은 일련의 URI 템플릿을 기반으로 들어오는 요청을 리소스로 라우팅합니다. 클라이언트가 요청한 경로가 지정된 경로의 템플리트와 일치하면 요청이 처리를 위해 연관된 자원으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="0974014c5d0f223b7da30099352aa5920a97f31b" translate="yes" xml:space="preserve">
          <source>Falcon skips processing the response body when, according to the HTTP spec, no body should be returned. If the client sends a HEAD request, the framework will always return an empty body. Falcon will also return an empty body whenever the response status is any of the following:</source>
          <target state="translated">HTTP 사양에 따라 본문을 반환하지 않으면 Falcon이 응답 본문 처리를 건너 뜁니다. 클라이언트가 HEAD 요청을 보내면 프레임 워크는 항상 빈 본문을 반환합니다. 팔콘은 또한 응답 상태가 다음 중 하나 일 때마다 빈 본문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ec2cf57886dfd94a138ab528debe4d7f89ff1901" translate="yes" xml:space="preserve">
          <source>Falcon speaks WSGI, and so in order to serve a Falcon app, you will need a WSGI server. Gunicorn and uWSGI are some of the more popular ones out there, but anything that can load a WSGI app will do.</source>
          <target state="translated">Falcon은 WSGI를 사용하므로 Falcon 앱을 제공하려면 WSGI 서버가 필요합니다. Gunicorn과 uWSGI는 가장 인기있는 것들이지만 WSGI 앱을로드 할 수있는 모든 것이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="fd572600798963641bc96fba40722fd2b796abec" translate="yes" xml:space="preserve">
          <source>Falcon supports &lt;a href=&quot;../api/testing#testing&quot;&gt;testing&lt;/a&gt; its &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; object by simulating HTTP requests.</source>
          <target state="translated">Falcon은 HTTP 요청을 시뮬레이션 하여 &lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt; 객체 &lt;a href=&quot;../api/testing#testing&quot;&gt;테스트를&lt;/a&gt; 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="7b608045782856dd0f7366d158830c89a6ab6a0a" translate="yes" xml:space="preserve">
          <source>Falcon supports &lt;em&gt;before&lt;/em&gt; and &lt;em&gt;after&lt;/em&gt; hooks. You install a hook simply by applying one of the decorators below, either to an individual responder or to an entire resource.</source>
          <target state="translated">팔콘 지원 &lt;em&gt;이전&lt;/em&gt; 과 &lt;em&gt;이후&lt;/em&gt; 후크. 아래의 데코레이터 중 하나를 개별 응답자 또는 전체 리소스에 적용하여 후크를 설치하면됩니다.</target>
        </trans-unit>
        <trans-unit id="778cb5db8ddb4c6be8b25e475991ac9b618ec18c" translate="yes" xml:space="preserve">
          <source>Falcon supports using any callable as a hook. This allows for using a class instead of a function:</source>
          <target state="translated">Falcon은 모든 호출 가능 기능을 후크로 사용하도록 지원합니다. 이를 통해 함수 대신 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00b805955b6ca46c1f5fe233004ea2255ebc74ef" translate="yes" xml:space="preserve">
          <source>Falcon talks, podcasts, and blog posts</source>
          <target state="translated">팔콘 대화, 팟 캐스트 및 블로그 게시물</target>
        </trans-unit>
        <trans-unit id="37cf1ea3e0d8774208499ede0becf96035ae0a06" translate="yes" xml:space="preserve">
          <source>Falcon tries to do as little as possible while remaining highly effective.</source>
          <target state="translated">팔콘은 가능한 한 적은 노력을 기울이면서도 높은 효과를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="a04545ece9eb984bf88daa8ff2b345a998f56134" translate="yes" xml:space="preserve">
          <source>Falcon uses Python classes to represent resources. In practice, these classes act as controllers in your application. They convert an incoming request into one or more internal actions, and then compose a response back to the client based on the results of those actions.</source>
          <target state="translated">팔콘은 파이썬 클래스를 사용하여 리소스를 나타냅니다. 실제로 이러한 클래스는 응용 프로그램에서 컨트롤러 역할을합니다. 수신 요청을 하나 이상의 내부 조치로 변환 한 다음 해당 조치의 결과에 따라 클라이언트에게 응답을 다시 구성합니다.</target>
        </trans-unit>
        <trans-unit id="849a3798efb24ec9d4b33aa623a6966d5bca2413" translate="yes" xml:space="preserve">
          <source>Falcon will convert any instance or subclass of &lt;a href=&quot;#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; raised by a responder, hook, or middleware component into an appropriate HTTP response. The default error serializer supports both JSON and XML. If the client indicates acceptance of both JSON and XML with equal weight, JSON will be chosen. Other media types may be supported by overriding the default serializer via &lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt;&lt;code&gt;set_error_serializer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Falcon은 응답자, 후크 또는 미들웨어 구성 요소에서 발생한 &lt;a href=&quot;#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; 의&lt;/a&gt; 인스턴스 또는 서브 클래스를 적절한 HTTP 응답으로 변환합니다. 기본 오류 시리얼 라이저는 JSON과 XML을 모두 지원합니다. 클라이언트가 동일한 가중치로 JSON과 XML을 모두 승인하면 JSON이 선택됩니다. 다른 매체 유형은 &lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt; &lt;code&gt;set_error_serializer()&lt;/code&gt; &lt;/a&gt; 를 통해 기본 직렬 변환기를 대체하여 지원 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f168ede4e3323e698d737ecdc8c5ad127f9aa0f6" translate="yes" xml:space="preserve">
          <source>Falcon will format the &lt;code&gt;datetime&lt;/code&gt; as an HTTP date string.</source>
          <target state="translated">Falcon은 &lt;code&gt;datetime&lt;/code&gt; 을 HTTP 날짜 문자열로 형식화 합니다.</target>
        </trans-unit>
        <trans-unit id="faca0002c3cb4cdaf6aba6e84c1ade8a03ce44a7" translate="yes" xml:space="preserve">
          <source>Falcon will re-raise errors that do not inherit from &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; unless you have registered a custom error handler for that type (see also: &lt;a href=&quot;../api/api#api&quot;&gt;falcon.API&lt;/a&gt;).</source>
          <target state="translated">Falcon은 해당 유형에 대한 사용자 정의 오류 처리기를 등록하지 않은 경우 &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 에서 상속되지 않은 오류를 다시 발생시킵니다 ( &lt;a href=&quot;../api/api#api&quot;&gt;falcon.API&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1c2b0a1663ec6d97a20405737934843e795698cc" translate="yes" xml:space="preserve">
          <source>Falcon will re-raise errors that do not inherit from &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;falcon.HTTPError&lt;/code&gt;&lt;/a&gt; unless you have registered a custom error handler for that type.</source>
          <target state="translated">Falcon은 해당 유형에 대한 사용자 지정 오류 처리기를 등록하지 않은 경우 &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;falcon.HTTPError&lt;/code&gt; &lt;/a&gt; 에서 상속되지 않은 오류를 다시 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="3bd4c4a98fb8d43cb5324130f210e9c9146752d1" translate="yes" xml:space="preserve">
          <source>Falcon will try to do this for you, based on the value of &lt;code&gt;resp.body&lt;/code&gt;, &lt;code&gt;resp.data&lt;/code&gt;, or &lt;code&gt;resp.stream_len&lt;/code&gt; (whichever is set in the response, checked in that order.)</source>
          <target state="translated">Falcon은 &lt;code&gt;resp.body&lt;/code&gt; , &lt;code&gt;resp.data&lt;/code&gt; 또는 &lt;code&gt;resp.stream_len&lt;/code&gt; (응답에 설정되고 순서대로 확인 된 값)에 따라이 작업을 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="ab423a3cc5948032bd50d9ab9b30f959f1c8dfb9" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s API class is a WSGI &amp;ldquo;application&amp;rdquo; that you can host with any standard-compliant WSGI server.</source>
          <target state="translated">Falcon의 API 클래스는 표준 호환 WSGI 서버에서 호스팅 할 수있는 WSGI&amp;ldquo;응용 프로그램&amp;rdquo;입니다.</target>
        </trans-unit>
        <trans-unit id="4590a30c4fd9f3d471e4df058b81f264f33d48ca" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s default router supports the use of field converters to transform a URI template field value. Field converters may also perform simple input validation. For example, the following URI template uses the &lt;code&gt;int&lt;/code&gt; converter to convert the value of &lt;code&gt;tid&lt;/code&gt; to a Python &lt;code&gt;int&lt;/code&gt;, but only if it has exactly eight digits:</source>
          <target state="translated">Falcon의 기본 라우터는 필드 템플릿을 사용하여 URI 템플릿 필드 값을 변환 할 수 있도록 지원합니다. 필드 변환기는 간단한 입력 검증을 수행 할 수도 있습니다. 예를 들어 다음 URI 템플릿은 &lt;code&gt;int&lt;/code&gt; 변환기를 사용하여 &lt;code&gt;tid&lt;/code&gt; 값을 Python &lt;code&gt;int&lt;/code&gt; 로 변환 하지만 정확히 8 자리가있는 경우에만 해당합니다.</target>
        </trans-unit>
        <trans-unit id="b10d744fcc92ada624416d23e7d377cb1dd9cce9" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s default router uses Python classes to represent resources. In practice, these classes act as controllers in your application. They convert an incoming request into one or more internal actions, and then compose a response back to the client based on the results of those actions. (See also: &lt;a href=&quot;../user/tutorial#tutorial-resources&quot;&gt;Tutorial: Creating Resources&lt;/a&gt;)</source>
          <target state="translated">팔콘의 기본 라우터는 파이썬 클래스를 사용하여 리소스를 나타냅니다. 실제로 이러한 클래스는 응용 프로그램에서 컨트롤러 역할을합니다. 수신 요청을 하나 이상의 내부 조치로 변환 한 다음 해당 조치의 결과에 따라 클라이언트에게 응답을 다시 구성합니다. (또한 참조 : &lt;a href=&quot;../user/tutorial#tutorial-resources&quot;&gt;학습서 : 자원 작성&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="b4e631bb1721b80046b8797d90b1e9502bc17fd1" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s default routing engine is based on a decision tree that is first compiled into Python code, and then evaluated by the runtime.</source>
          <target state="translated">Falcon의 기본 라우팅 엔진은 의사 결정 트리를 기반으로합니다. 의사 결정 트리는 먼저 Python 코드로 컴파일 된 다음 런타임에 의해 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="e34603de04425064250bd5a732a2557fc5c5ac97" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s design borrows several key concepts from the REST architectural style.</source>
          <target state="translated">Falcon의 디자인은 REST 아키텍처 스타일에서 몇 가지 주요 개념을 차용합니다.</target>
        </trans-unit>
        <trans-unit id="f5347790147b10c48d6a28d2156722f19b998e0a" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s middleware interface is defined as follows:</source>
          <target state="translated">팔콘의 미들웨어 인터페이스는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="4930d01484a2d41a9c1cec1fc1539c197da8b35c" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s testing framework supports both &lt;code&gt;unittest&lt;/code&gt; and &lt;code&gt;pytest&lt;/code&gt;. In fact, the tutorial in the docs provides an excellent introduction to &lt;a href=&quot;http://falcon.readthedocs.io/en/stable/user/tutorial.html#testing-your-application&quot;&gt;testing Falcon apps with pytest&lt;/a&gt;.</source>
          <target state="translated">Falcon의 테스트 프레임 워크는 &lt;code&gt;unittest&lt;/code&gt; 와 &lt;code&gt;pytest&lt;/code&gt; 를 모두 지원합니다 . 실제로 문서의 자습서는 &lt;a href=&quot;http://falcon.readthedocs.io/en/stable/user/tutorial.html#testing-your-application&quot;&gt;pytest로 Falcon 앱&lt;/a&gt; 을 테스트 하는 데 대한 훌륭한 소개를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="cc2df42e51db8c101524a393cb89cc591cb35d33" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s testing framework supports both &lt;code&gt;unittest&lt;/code&gt; and &lt;code&gt;pytest&lt;/code&gt;. In fact, the tutorial in the docs provides an excellent introduction to &lt;a href=&quot;https://falcon.readthedocs.io/en/stable/user/tutorial.html#testing-your-application&quot;&gt;testing Falcon apps with pytest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9474f3f31577298d109e6165417fc8c0009ebd5" translate="yes" xml:space="preserve">
          <source>Falcon&amp;rsquo;s testing module contains various test classes and utility functions to support functional testing for both Falcon-based apps and the Falcon framework itself.</source>
          <target state="translated">Falcon의 테스트 모듈에는 Falcon 기반 앱과 Falcon 프레임 워크 자체에 대한 기능 테스트를 지원하기위한 다양한 테스트 클래스와 유틸리티 함수가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f27ed5ed09b48fe5d8714941ba33ef9fb2017cc" translate="yes" xml:space="preserve">
          <source>Fast URI router which compiles its routing logic to Python code.</source>
          <target state="translated">Fast URI router which compiles its routing logic to Python code.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="ba9e0d7f6e416856c1efeafa1a9defd902f95ee7" translate="yes" xml:space="preserve">
          <source>Field Converters</source>
          <target state="translated">필드 컨버터</target>
        </trans-unit>
        <trans-unit id="5efcf860a76a2093db8b28c2f5d9f80bbf7592a4" translate="yes" xml:space="preserve">
          <source>File-like input object for reading the body of the request, if any. This object provides direct access to the server&amp;rsquo;s data stream and is non-seekable. In order to avoid unintended side effects, and to provide maximum flexibility to the application, Falcon itself does not buffer or spool the data in any way.</source>
          <target state="translated">요청 본문이있는 경우 파일과 같은 입력 개체입니다. 이 개체는 서버의 데이터 스트림에 직접 액세스 할 수 있으며 검색 할 수 없습니다. 의도하지 않은 부작용을 피하고 응용 프로그램에 최대한의 유연성을 제공하기 위해 Falcon 자체는 어떤 식 으로든 데이터를 버퍼링하거나 스풀링하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d16028b31f615db31eed649289cd6734da0ae72" translate="yes" xml:space="preserve">
          <source>File-like wrapper around &lt;code&gt;stream&lt;/code&gt; to normalize certain differences between the native input objects employed by different WSGI servers. In particular, &lt;code&gt;bounded_stream&lt;/code&gt; is aware of the expected Content-Length of the body, and will never block on out-of-bounds reads, assuming the client does not stall while transmitting the data to the server.</source>
          <target state="translated">다른 WSGI 서버에서 사용하는 기본 입력 오브젝트 간의 특정 차이점을 표준화하기 위해 &lt;code&gt;stream&lt;/code&gt; 주위의 파일 유사 랩퍼 . 특히 &lt;code&gt;bounded_stream&lt;/code&gt; 은 본문의 예상 Content-Length를 알고 있으며 클라이언트가 데이터를 서버로 전송하는 동안 정지하지 않는다고 가정하면 범위를 벗어난 읽기를 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74e180505028745d4a357c0b2af3717366b16a36" translate="yes" xml:space="preserve">
          <source>Finally, if one of the &lt;em&gt;process_response&lt;/em&gt; methods raises an error, or the routed &lt;code&gt;on_*&lt;/code&gt; responder method itself raises an error, the exception will be handled in a similar manner as above. Then, the framework will execute any remaining middleware on the stack.</source>
          <target state="translated">Finally, if one of the &lt;em&gt;process_response&lt;/em&gt; methods raises an error, or the routed &lt;code&gt;on_*&lt;/code&gt; responder method itself raises an error, the exception will be handled in a similar manner as above. Then, the framework will execute any remaining middleware on the stack.</target>
        </trans-unit>
        <trans-unit id="1aee5479c01361915b11f6475cf1d3098722f7fb" translate="yes" xml:space="preserve">
          <source>Finally, if one of the &lt;em&gt;process_response&lt;/em&gt; methods raises an error, or the routed on_* responder method itself raises an error, the exception will be handled in a similar manner as above. Then, the framework will execute any remaining middleware on the stack.</source>
          <target state="translated">마지막으로 &lt;em&gt;process_response&lt;/em&gt; 메소드 중 하나 에서 오류가 발생하거나 라우트 된 on_ * 응답자 메소드 자체에서 오류가 발생하면 위와 유사한 방식으로 예외가 처리됩니다. 그런 다음 프레임 워크는 스택에서 남아있는 미들웨어를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2062f22f892474a055e42a67082eb1e65e2679b3" translate="yes" xml:space="preserve">
          <source>Finally, restart Gunicorn and then try sending a POST request to the resource from the command line (substituting &lt;code&gt;test.png&lt;/code&gt; for a path to any PNG you like.)</source>
          <target state="translated">마지막으로 Gunicorn을 다시 시작한 다음 명령 줄에서 리소스로 POST 요청을 보내십시오 ( 원하는 PNG의 경로를 &lt;code&gt;test.png&lt;/code&gt; 로 대체 ).</target>
        </trans-unit>
        <trans-unit id="94bbc7814565d1527c8c56ae061c43e7edcc2177" translate="yes" xml:space="preserve">
          <source>Finally, start (or restart) NGINX:</source>
          <target state="translated">Finally, start (or restart) NGINX:</target>
        </trans-unit>
        <trans-unit id="c711251063e4abf5f1ad85c6cc6e8d8c49986a95" translate="yes" xml:space="preserve">
          <source>Finally, to build Falcon&amp;rsquo;s docs from source, simply run:</source>
          <target state="translated">마지막으로 소스에서 Falcon의 문서를 작성하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3c9d82f77c6b3f084561de3044e7ac19b2e49691" translate="yes" xml:space="preserve">
          <source>Finally, we need to update the test code. Modify &lt;code&gt;test_app.py&lt;/code&gt; to look similar to this:</source>
          <target state="translated">마지막으로 테스트 코드를 업데이트해야합니다. 다음과 유사하게 &lt;code&gt;test_app.py&lt;/code&gt; 를 수정 하십시오.</target>
        </trans-unit>
        <trans-unit id="058bfd44e6c504c52fbe2877760c624f7fed27e4" translate="yes" xml:space="preserve">
          <source>First Steps</source>
          <target state="translated">첫 단계</target>
        </trans-unit>
        <trans-unit id="041010aa1d1724de15abf3bf3c4d85802c02cbe2" translate="yes" xml:space="preserve">
          <source>First, create a &lt;code&gt;tests&lt;/code&gt; directory with &lt;code&gt;__init__.py&lt;/code&gt; and a test module (&lt;code&gt;test_app.py&lt;/code&gt;) inside it. The project&amp;rsquo;s structure should now look like this:</source>
          <target state="translated">먼저 &lt;code&gt;__init__.py&lt;/code&gt; 및 테스트 모듈 ( &lt;code&gt;test_app.py&lt;/code&gt; )이 포함 된 &lt;code&gt;tests&lt;/code&gt; 디렉토리를 만듭니다 . 프로젝트 구조는 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="4bb0897f5b5514300c14b7b964e8e8d400348082" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s check the incoming media type when something is posted to make sure it is a common image type. We&amp;rsquo;ll implement this with a &lt;code&gt;before&lt;/code&gt; hook.</source>
          <target state="translated">먼저 어떤 매체가 게시 될 때 들어오는 매체 유형이 공통 이미지 유형인지 확인하십시오. 우리는 이것을 &lt;code&gt;before&lt;/code&gt; hook으로 구현할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="fdbb4a98e2aaf92a1011f190525ebfa76a55f0f8" translate="yes" xml:space="preserve">
          <source>Flags a method as deprecated.</source>
          <target state="translated">메소드를 추천하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="255a145f34e8afe2b573a9b10d240f6a23db5466" translate="yes" xml:space="preserve">
          <source>For Python 2, you will also need to install the &lt;code&gt;mock&lt;/code&gt; package:</source>
          <target state="translated">Python 2의 경우 &lt;code&gt;mock&lt;/code&gt; 패키지도 설치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="69e6ed15dfcbc969ed7ad440d0b1cd59e4d7755b" translate="yes" xml:space="preserve">
          <source>For a slight performance cost, you may instead wish to use &lt;a href=&quot;#falcon.Request.bounded_stream&quot;&gt;&lt;code&gt;bounded_stream&lt;/code&gt;&lt;/a&gt;, which wraps the native WSGI input object to normalize its behavior.</source>
          <target state="translated">약간의 성능 비용으로 대신 &lt;a href=&quot;#falcon.Request.bounded_stream&quot;&gt; &lt;code&gt;bounded_stream&lt;/code&gt; &lt;/a&gt; 을 사용 하여 기본 WSGI 입력 오브젝트를 랩핑하여 동작을 정상화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cf9f267637b2c329df93fff3076285d054119f7" translate="yes" xml:space="preserve">
          <source>For byte ranges, failing to overlap the current extent means that the first-byte-pos of all of the byte-range-spec values were greater than the current length of the selected representation. When this status code is generated in response to a byte-range request, the sender SHOULD generate a Content-Range header field specifying the current length of the selected representation.</source>
          <target state="translated">바이트 범위의 경우 현재 범위와 겹치지 않으면 모든 바이트 범위 스펙 값의 첫 번째 바이트 위치가 선택한 표현의 현재 길이보다 큼을 의미합니다. 바이트 상태 요청에 대한 응답으로이 상태 코드가 생성되면 발신자는 선택된 표현의 현재 길이를 지정하는 Content-Range 헤더 필드를 생성해야한다 (SHOULD).</target>
        </trans-unit>
        <trans-unit id="dda90eb3fe1e5e905586c5529ea3e4f2a417a925" translate="yes" xml:space="preserve">
          <source>For dynamically-generated content, you can choose to not set &lt;code&gt;stream_len&lt;/code&gt;, in which case Falcon will then leave off the Content-Length header, and hopefully your WSGI server will do the Right Thing&amp;trade; (assuming you&amp;rsquo;ve told it to enable keep-alive).</source>
          <target state="translated">동적으로 생성 된 컨텐츠의 경우 &lt;code&gt;stream_len&lt;/code&gt; 을 설정하지 않도록 선택할 수 있습니다 .이 경우 Falcon은 Content-Length 헤더를 제외하고 WSGI 서버가 Right Thing &amp;trade;을 수행 할 것입니다. 살아 있는).</target>
        </trans-unit>
        <trans-unit id="3643e5122ea4ac2aad60cb92defa1d10e5a4cf24" translate="yes" xml:space="preserve">
          <source>For example, consider this hook that validates a POST request for an image resource:</source>
          <target state="translated">예를 들어 이미지 리소스에 대한 POST 요청의 유효성을 검사하는이 후크를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="221fc3e4cfe443d6a21587b5183e78490e353c8e" translate="yes" xml:space="preserve">
          <source>For example, the following will not block when Content-Length is 0 or the header is missing altogether:</source>
          <target state="translated">예를 들어, Content-Length가 0이거나 헤더가 모두 누락 된 경우 다음이 차단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="45b427f81dcfd712a7c5da04118efe6dffe8e737" translate="yes" xml:space="preserve">
          <source>For example, this error condition may occur if an XML request body contains well-formed (i.e., syntactically correct), but semantically erroneous, XML instructions.</source>
          <target state="translated">예를 들어, XML 요청 본문에 올바른 형식 (구문 적으로 올바른)이지만 의미 상 잘못된 XML 명령어가 포함 된 경우이 오류 조건이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c0bc344f663c4f3f12474fe11ec5d01fec59fdd" translate="yes" xml:space="preserve">
          <source>For example, with this option enabled, adding a route for &lt;code&gt;'/foo/bar'&lt;/code&gt; implicitly adds a route for &lt;code&gt;'/foo/bar/'&lt;/code&gt;. In other words, requests coming in for either path will be sent to the same resource.</source>
          <target state="translated">For example, with this option enabled, adding a route for &lt;code&gt;'/foo/bar'&lt;/code&gt; implicitly adds a route for &lt;code&gt;'/foo/bar/'&lt;/code&gt; . In other words, requests coming in for either path will be sent to the same resource.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c3bce093ce3bbf6ade2bae939dfac6cee9debb82" translate="yes" xml:space="preserve">
          <source>For historical reasons, a user agent MAY change the request method from POST to GET for the subsequent request. If this behavior is undesired, the 307 (Temporary Redirect) status code can be used instead.</source>
          <target state="translated">역사적 이유로, 사용자 에이전트는 후속 요청에 대해 요청 방법을 POST에서 GET으로 변경할 수 있습니다. 이 동작이 원치 않으면 307 (Temporary Redirect) 상태 코드를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ae27e90a22cf332be3824c6826ec68d81952688" translate="yes" xml:space="preserve">
          <source>For historical reasons, a user agent MAY change the request method from POST to GET for the subsequent request. If this behavior is undesired, the 308 (Permanent Redirect) status code can be used instead.</source>
          <target state="translated">역사적 이유로, 사용자 에이전트는 후속 요청에 대해 요청 방법을 POST에서 GET으로 변경할 수 있습니다. 이 동작이 원치 않으면 308 (영구적 리디렉션) 상태 코드를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="818d46d689ee45afb12ed2f60e33db0299af824e" translate="yes" xml:space="preserve">
          <source>For more sophisticated use cases, have a look at Falcon add-ons from the community, such as &lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt;, or try one of the generic &lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;WSGI CORS libraries available on PyPI&lt;/a&gt;. If you use an API gateway, you might also look into what CORS functionality it provides at that level.</source>
          <target state="translated">For more sophisticated use cases, have a look at Falcon add-ons from the community, such as &lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt;, or try one of the generic &lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;WSGI CORS libraries available on PyPI&lt;/a&gt;. If you use an API gateway, you might also look into what CORS functionality it provides at that level.</target>
        </trans-unit>
        <trans-unit id="cc4dffc7260ca916d7f11e9ebc856e2ed603e171" translate="yes" xml:space="preserve">
          <source>For more sophisticated use cases, have a look at Falcon add-ons from the community, such as &lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt;, or try one of the generic &lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;WSGI CORS libraries available on PyPI&lt;/a&gt;. If you use an API gateway, you might also look into what CORS functionaly it provides at that level.</source>
          <target state="translated">보다 정교한 사용 사례는 &lt;a href=&quot;https://github.com/lwcolton/falcon-cors&quot;&gt;falcon-cors&lt;/a&gt; 와 같은 커뮤니티의 Falcon 애드온을 보거나 &lt;a href=&quot;https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=cors&amp;amp;submit=search&quot;&gt;PyPI에서 사용 가능한&lt;/a&gt; 일반 WSGI CORS 라이브러리 중 하나를 사용해보십시오 . API 게이트웨이를 사용하는 경우 해당 레벨에서 제공하는 CORS 기능을 조사 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d14ccff58aa87b156e3428ef02a686b7e84cec0" translate="yes" xml:space="preserve">
          <source>For setting cookies, see &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">쿠키를 설정하려면 &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dac53b9260c4ee0c293b6552a0de400aa75706e9" translate="yes" xml:space="preserve">
          <source>For setting cookies, see instead &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">쿠키를 설정하려면 대신 &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="544cc5dc603722508f8d3b50cc46f77c2a60a2fa" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;secure&lt;/code&gt; cookie attribute to be effective, your application will need to enforce HTTPS.</source>
          <target state="translated">를 들어 &lt;code&gt;secure&lt;/code&gt; 쿠키 속성이 효과가, 응용 프로그램이 HTTPS를 시행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d8ed7f8d220685456c08bf8ce6ffafb03dd6de4d" translate="yes" xml:space="preserve">
          <source>For the purposes of this tutorial, we&amp;rsquo;ll assume that you have implemented a way to configure your application, such as with a &lt;code&gt;create_api()&lt;/code&gt; function or a module-level script. This role of this function or script is to supply an instance of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt;, which implements the standard WSGI callable interface.</source>
          <target state="translated">For the purposes of this tutorial, we&amp;rsquo;ll assume that you have implemented a way to configure your application, such as with a &lt;code&gt;create_api()&lt;/code&gt; function or a module-level script. This role of this function or script is to supply an instance of &lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;, which implements the standard WSGI callable interface.</target>
        </trans-unit>
        <trans-unit id="8c6b83d507a693fe2d475f11151ec7472ef971f9" translate="yes" xml:space="preserve">
          <source>For this attribute to be effective, your web server or load balancer will need to enforce HTTPS when setting the cookie, as well as in all subsequent requests that require the cookie to be sent back from the client.</source>
          <target state="translated">이 속성을 적용하려면 웹 서버 또는로드 밸런서가 쿠키를 설정할 때뿐만 아니라 쿠키를 클라이언트에서 다시 보내야하는 모든 후속 요청에서도 HTTPS를 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a85e86191485a14dc336d7d44ba6667043b9136" translate="yes" xml:space="preserve">
          <source>From the main project directory, exercise your new test by running pytest against the &lt;code&gt;tests&lt;/code&gt; directory:</source>
          <target state="translated">기본 프로젝트 디렉토리에서 &lt;code&gt;tests&lt;/code&gt; 디렉토리 에 대해 pytest를 실행하여 새 테스트를 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="2cdd32ada41f2c934920302feb5dd0666cc082d6" translate="yes" xml:space="preserve">
          <source>Full Unicode support</source>
          <target state="translated">완전한 유니 코드 지원</target>
        </trans-unit>
        <trans-unit id="1d9303b0a252dc2ac0eb81f969a7ccf0d5678e03" translate="yes" xml:space="preserve">
          <source>Fully exercising your code is critical to creating a robust application. Let&amp;rsquo;s take a moment to write a test for what&amp;rsquo;s been implemented so far.</source>
          <target state="translated">강력한 응용 프로그램을 작성하려면 코드를 완전히 연습해야합니다. 지금까지 구현 된 내용에 대한 테스트를 작성해 봅시다.</target>
        </trans-unit>
        <trans-unit id="7e9182b5f484c16d68476ad0e76ae49a9936dc25" translate="yes" xml:space="preserve">
          <source>Functional testing framework for Falcon apps and Falcon itself.</source>
          <target state="translated">팔콘 앱과 팔콘 자체를위한 기능 테스트 프레임 워크.</target>
        </trans-unit>
        <trans-unit id="db391822e28226377a1e6e34d41886f0089f87f2" translate="yes" xml:space="preserve">
          <source>Functional tests</source>
          <target state="translated">기능 테스트</target>
        </trans-unit>
        <trans-unit id="804eeb7d7f6dd7bdc678cf2d9c452916c6e20adf" translate="yes" xml:space="preserve">
          <source>Functional tests define the application&amp;rsquo;s behavior from the outside. When using TDD, this can be a more natural place to start as opposed to lower-level unit testing, since it is difficult to anticipate what internal interfaces and components are needed in advance of defining the application&amp;rsquo;s user-facing functionality.</source>
          <target state="translated">기능 테스트는 외부에서 애플리케이션의 동작을 정의합니다. TDD를 사용하는 경우 애플리케이션의 사용자 대면 기능을 정의하기 전에 어떤 내부 인터페이스 및 구성 요소가 필요한지 예측하기 어렵 기 때문에 하위 레벨 단위 테스트와 달리 시작하는 것이 더 자연 스러울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53543df5d4b89ab9d90496b7dbb45eb839738ed7" translate="yes" xml:space="preserve">
          <source>Further Considerations</source>
          <target state="translated">Further Considerations</target>
        </trans-unit>
        <trans-unit id="6d42fca63bcec787bb0dd495d1e4c5fa4697b26d" translate="yes" xml:space="preserve">
          <source>Furthermore, the first bytestring yielded from iteration, if any, is prefetched before returning the wrapped iterator in order to ensure the WSGI &lt;code&gt;start_response&lt;/code&gt; function is called even if the WSGI application is a generator.</source>
          <target state="translated">Furthermore, the first bytestring yielded from iteration, if any, is prefetched before returning the wrapped iterator in order to ensure the WSGI &lt;code&gt;start_response&lt;/code&gt; function is called even if the WSGI application is a generator.</target>
        </trans-unit>
        <trans-unit id="ddb28232c5649bf80e5b132a565afdea85dc0469" translate="yes" xml:space="preserve">
          <source>GET responder.</source>
          <target state="translated">응답자를 받으십시오.</target>
        </trans-unit>
        <trans-unit id="12d9dc6100d29fbc3e17784e3524cc33c739d170" translate="yes" xml:space="preserve">
          <source>GMT offset, which is equivalent to UTC and so is aways 0.</source>
          <target state="translated">GMT 오프셋은 UTC와 동일하므로 0에 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a2087739644c1ed19a2b5f05439c1feb34cb2b5" translate="yes" xml:space="preserve">
          <source>GMT timezone class implementing the &lt;a href=&quot;https://docs.python.org/2/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/2/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;datetime.tzinfo&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 GMT 시간대 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="1bd721c801e7440e028d11401a8582eac0cf1096" translate="yes" xml:space="preserve">
          <source>GMT timezone class implementing the &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">GMT timezone class implementing the &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;datetime.tzinfo&lt;/code&gt; &lt;/a&gt; interface.</target>
        </trans-unit>
        <trans-unit id="8f459ff0e724da57621747ebae67e25b18f6d0be" translate="yes" xml:space="preserve">
          <source>GameState may be thought of as a sub-resource of Game. It is a distinct logical entity encapsulated within a more general Game concept.</source>
          <target state="translated">GameState는 Game의 하위 리소스로 간주 될 수 있습니다. 보다 일반적인 게임 개념 내에 캡슐화 된 고유 한 논리 엔터티입니다.</target>
        </trans-unit>
        <trans-unit id="7e0cd963d88e66dc3f2f2545a55f5be3771c0ace" translate="yes" xml:space="preserve">
          <source>Generally speaking, Falcon assumes that resource responders (&lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;on_post()&lt;/code&gt;, etc.) will, for the most part, do the right thing. In other words, Falcon doesn&amp;rsquo;t try very hard to protect responder code from itself.</source>
          <target state="translated">일반적으로 Falcon은 리소스 응답자 ( &lt;code&gt;on_get()&lt;/code&gt; , &lt;code&gt;on_post()&lt;/code&gt; 등)가 대부분 올바른 작업을 수행 한다고 가정합니다 . 다시 말해, Falcon은 응답기 코드 자체를 보호하기 위해 많은 노력을 기울이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="21cb25fbb11d16eb1e5978d5c482c4cb86a9d261" translate="yes" xml:space="preserve">
          <source>Generally speaking, Falcon assumes that resource responders (such as &lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;on_post()&lt;/code&gt;, etc.) will, for the most part, do the right thing. In other words, Falcon doesn&amp;rsquo;t try very hard to protect responder code from itself.</source>
          <target state="translated">일반적으로 Falcon은 리소스 응답자 (예 : &lt;code&gt;on_get()&lt;/code&gt; , &lt;code&gt;on_post()&lt;/code&gt; 등)가 대부분 올바른 작업을 수행 한다고 가정합니다 . 다시 말해, Falcon은 응답기 코드 자체를 보호하기 위해 많은 노력을 기울이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6dc753913dc92b9c22ce3895189602dccccba2d0" translate="yes" xml:space="preserve">
          <source>Generally you do not need to use this router class directly, as an instance is created by default when the falcon.API class is initialized.</source>
          <target state="translated">Generally you do not need to use this router class directly, as an instance is created by default when the falcon.API class is initialized.</target>
        </trans-unit>
        <trans-unit id="e570be774d63fbe92ec6be0f1f7936f6f9da8a70" translate="yes" xml:space="preserve">
          <source>Get Help</source>
          <target state="translated">도움 받기</target>
        </trans-unit>
        <trans-unit id="4cb8a23e40c4b83ce13aee431aaf2ad64d22240c" translate="yes" xml:space="preserve">
          <source>Get a bound method of the given object by name.</source>
          <target state="translated">이름으로 지정된 객체의 바운드 메서드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0decb86a6b1cccf19ae53419c0d2a59ae3952163" translate="yes" xml:space="preserve">
          <source>Get the name of this timezone.</source>
          <target state="translated">이 시간대의 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="15056d31920113c824e17488676d3df1279a400e" translate="yes" xml:space="preserve">
          <source>Get the offset from UTC.</source>
          <target state="translated">UTC에서 오프셋을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8af0beaaa89a8a653ae9bcb84936b517ccf50047" translate="yes" xml:space="preserve">
          <source>Gets both the http status code and description from just a code</source>
          <target state="translated">코드에서 http 상태 코드와 설명을 모두 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="53a514a6fadc5324d1356de25696484687f6f994" translate="yes" xml:space="preserve">
          <source>Getting Cookies</source>
          <target state="translated">쿠키 얻기</target>
        </trans-unit>
        <trans-unit id="207c7dd0038af9ca412da6559dd3d407efdc77e0" translate="yes" xml:space="preserve">
          <source>Given a JSON value, decode it to an appropriate Python type, (e.g., &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, etc.)</source>
          <target state="translated">JSON 값이 주어지면 적절한 Python 유형 (예 : &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;str&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; 등)으로 디코딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="a07a90bd5a724ca3e9390ae98424f806ec6c7271" translate="yes" xml:space="preserve">
          <source>Given that a weak entity-tag comparison can be performed by using the &lt;code&gt;==&lt;/code&gt; operator (per the example below), only a &lt;a href=&quot;#falcon.ETag.strong_compare&quot;&gt;&lt;code&gt;strong_compare()&lt;/code&gt;&lt;/a&gt; method is provided.</source>
          <target state="translated">Given that a weak entity-tag comparison can be performed by using the &lt;code&gt;==&lt;/code&gt; operator (per the example below), only a &lt;a href=&quot;#falcon.ETag.strong_compare&quot;&gt; &lt;code&gt;strong_compare()&lt;/code&gt; &lt;/a&gt; method is provided.</target>
        </trans-unit>
        <trans-unit id="da08cc8ffd531f39c85100abde3816296096747f" translate="yes" xml:space="preserve">
          <source>Global, resource, and method hooks</source>
          <target state="translated">글로벌, 리소스 및 메소드 훅</target>
        </trans-unit>
        <trans-unit id="cb84f6989f67fc00b5ea2a19e8557df1df9eef92" translate="yes" xml:space="preserve">
          <source>Go ahead and edit your &lt;code&gt;images.py&lt;/code&gt; file to look something like this:</source>
          <target state="translated">다음과 같이 &lt;code&gt;images.py&lt;/code&gt; 파일을 편집하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="459f430ab3c239f6c58c78274d5240c4f2e6f5a6" translate="yes" xml:space="preserve">
          <source>HTTP method requested (e.g., &amp;lsquo;GET&amp;rsquo;, &amp;lsquo;POST&amp;rsquo;, etc.)</source>
          <target state="translated">HTTP method requested (e.g., &amp;lsquo;GET&amp;rsquo;, &amp;lsquo;POST&amp;rsquo;, etc.)</target>
        </trans-unit>
        <trans-unit id="dc8b7f4fe30e194ee03d8fe4edbebbd36fed2cca" translate="yes" xml:space="preserve">
          <source>HTTP status line (e.g., &amp;lsquo;200 OK&amp;rsquo;). Falcon requires the full status line, not just the code (e.g., 200). This design makes the framework more efficient because it does not have to do any kind of conversion or lookup when composing the WSGI response.</source>
          <target state="translated">HTTP status line (e.g., &amp;lsquo;200 OK&amp;rsquo;). Falcon requires the full status line, not just the code (e.g., 200). This design makes the framework more efficient because it does not have to do any kind of conversion or lookup when composing the WSGI response.</target>
        </trans-unit>
        <trans-unit id="f970b44dd68f2a7b97313d554a71465611301c60" translate="yes" xml:space="preserve">
          <source>HTTP status line, e.g. &amp;lsquo;748 Confounded by Ponies&amp;rsquo;.</source>
          <target state="translated">HTTP status line, e.g. &amp;lsquo;748 Confounded by Ponies&amp;rsquo;.</target>
        </trans-unit>
        <trans-unit id="74d985ac8472b9aa46337d05279b47176bc42763" translate="yes" xml:space="preserve">
          <source>HTTP status line, e.g. &amp;lsquo;785 TPS Cover Sheet not attached&amp;rsquo;.</source>
          <target state="translated">HTTP status line, e.g. &amp;lsquo;785 TPS Cover Sheet not attached&amp;rsquo;.</target>
        </trans-unit>
        <trans-unit id="7a46d9fb4b9c45939f090973b2a7d6787e0b8e71" translate="yes" xml:space="preserve">
          <source>HTTP status string given in the response</source>
          <target state="translated">HTTP status string given in the response</target>
        </trans-unit>
        <trans-unit id="cd3a82fd6705b54f8fb334a7dcd3c47633d6edef" translate="yes" xml:space="preserve">
          <source>HTTPBadRequest: The param was not found in the request, even though</source>
          <target state="translated">HTTPBadRequest : 요청에서 매개 변수를 찾을 수 없지만</target>
        </trans-unit>
        <trans-unit id="30f54d504445ecf5ddb6be219662b25f552c465d" translate="yes" xml:space="preserve">
          <source>HTTPStatus</source>
          <target state="translated">HTTPStatus</target>
        </trans-unit>
        <trans-unit id="185434ef08177b5f6e4b2f54c1806599d820828d" translate="yes" xml:space="preserve">
          <source>HTTPie won&amp;rsquo;t display the image, but you can see that the response headers were set correctly. Just for fun, go ahead and paste the above URI into your browser. The image should display correctly.</source>
          <target state="translated">HTTPie는 이미지를 표시하지 않지만 응답 헤더가 올바르게 설정되었음을 알 수 있습니다. 재미를 위해 위의 URI를 브라우저에 붙여 넣으십시오. 이미지가 올바르게 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d74206995902f4d32b97f064af370c4a682ce655" translate="yes" xml:space="preserve">
          <source>Handler built using Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/2/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">파이썬의 &lt;a href=&quot;https://docs.python.org/2/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt; 모듈을 사용하여 빌드 된 핸들러 .</target>
        </trans-unit>
        <trans-unit id="e711da3916da77c0800bf8cb5f7b36d4f5ee00e7" translate="yes" xml:space="preserve">
          <source>Handler built using the &lt;code&gt;msgpack&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;msgpack&lt;/code&gt; 모듈을 사용하여 작성된 핸들러 .</target>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="51e24336e3a240690ed33dab57d11867cbc8baa9" translate="yes" xml:space="preserve">
          <source>Headers as a case-insensitive &lt;code&gt;dict&lt;/code&gt;-like object, instead of a &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">Headers as a case-insensitive &lt;code&gt;dict&lt;/code&gt; -like object, instead of a &lt;code&gt;list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f234992da49bd3af66ca0628cee98d2bb88a0fec" translate="yes" xml:space="preserve">
          <source>Headers can be forged by any client or proxy. Use this property with caution and validate all values before using them. Do not rely on the access route to authorize requests.</source>
          <target state="translated">모든 클라이언트 또는 프록시가 헤더를 위조 할 수 있습니다. 이 속성을주의해서 사용하고 사용하기 전에 모든 값을 확인하십시오. 요청을 승인하기 위해 액세스 경로에 의존하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="1cbc952e8c63914134e2eede89ef63a1c732924d" translate="yes" xml:space="preserve">
          <source>Here is a more involved example that demonstrates reading headers and query parameters, handling errors, and working with request and response bodies.</source>
          <target state="translated">다음은 헤더와 쿼리 매개 변수를 읽고, 오류를 처리하고, 요청 및 응답 본문을 사용하는 방법을 보여주는보다 관련성있는 예입니다.</target>
        </trans-unit>
        <trans-unit id="8152a6393525a5e7e3dac478683d885ec5438d8b" translate="yes" xml:space="preserve">
          <source>Here is a simple example from Falcon&amp;rsquo;s README, showing how to get started writing an API:</source>
          <target state="translated">다음은 Falcon의 README의 간단한 예제이며 API 작성을 시작하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ac88991e7074474f9e5e5fe35be822560c7a2682" translate="yes" xml:space="preserve">
          <source>Here is an example &lt;code&gt;on_get()&lt;/code&gt; method that demonstrates how to use instances of this class:</source>
          <target state="translated">Here is an example &lt;code&gt;on_get()&lt;/code&gt; method that demonstrates how to use instances of this class:</target>
        </trans-unit>
        <trans-unit id="07a7fa14e78fec4c849ca098f2a89191dfd3578a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a quick example to show how all the pieces fit together:</source>
          <target state="translated">다음은 모든 조각이 어떻게 결합되는지 보여주는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="c764fba7f0ff6cdb79f8d9ac8fe3052d5b821e23" translate="yes" xml:space="preserve">
          <source>Highly-optimized, extensible code base</source>
          <target state="translated">고도로 최적화되고 확장 가능한 코드 기반</target>
        </trans-unit>
        <trans-unit id="1960acf57d01884941dad63407fee0e4a1984e81" translate="yes" xml:space="preserve">
          <source>Hmm, it looks like we forgot to update &lt;code&gt;app.py&lt;/code&gt;. Let&amp;rsquo;s do that now:</source>
          <target state="translated">흠, &lt;code&gt;app.py&lt;/code&gt; 업데이트를 잊어 버린 것 같습니다 . 지금 해보자 :</target>
        </trans-unit>
        <trans-unit id="2f3856f3bee2218da00682ea5300db8d8a163355" translate="yes" xml:space="preserve">
          <source>Hook method for setting up the test fixture before exercising it.</source>
          <target state="translated">시험기구를 운동하기 전에 설치하기위한 후크 방법.</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="7b0018779bb47a9dcc13f761cf958056725365c3" translate="yes" xml:space="preserve">
          <source>Hooks and middleware components can be used together to authenticate and authorize requests. For example, a middleware component could be used to parse incoming credentials and place the results in &lt;code&gt;req.context&lt;/code&gt;. Downstream components or hooks could then use this information to authorize the request, taking into account the user&amp;rsquo;s role and the requested resource.</source>
          <target state="translated">후크와 미들웨어 구성 요소를 함께 사용하여 요청을 인증하고 권한을 부여 할 수 있습니다. 예를 들어, 미들웨어 구성 요소를 사용하여 수신 신임 정보를 구문 분석하고 결과를 &lt;code&gt;req.context&lt;/code&gt; 에 배치 할 수 있습니다 . 그런 다음 다운 스트림 구성 요소 또는 후크는이 정보를 사용하여 사용자의 역할 및 요청 된 자원을 고려하여 요청을 승인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c18d7cf08fffc070bf93293ab30b6d8519ee7285" translate="yes" xml:space="preserve">
          <source>Hooks may inject extra params as needed. For example:</source>
          <target state="translated">후크는 필요에 따라 추가 매개 변수를 주입 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75dabf684ed3bc6d1a6f409290fd5326a19a9185" translate="yes" xml:space="preserve">
          <source>Host request header field</source>
          <target state="translated">Host request header field</target>
        </trans-unit>
        <trans-unit id="0e4c5c11f2b021533848ba507e5b431926b61592" translate="yes" xml:space="preserve">
          <source>Hosting Your App</source>
          <target state="translated">앱 호스팅</target>
        </trans-unit>
        <trans-unit id="3284516fc702aa3381ee91f529fb505a6a9b4f90" translate="yes" xml:space="preserve">
          <source>How can I access POSTed files?</source>
          <target state="translated">POST 된 파일에 어떻게 액세스 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="333ab3af3faf1249f2db5ff570cb4ea8d9410ed5" translate="yes" xml:space="preserve">
          <source>How can I access POSTed form params?</source>
          <target state="translated">POST 양식 매개 변수에 어떻게 액세스 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="d8d19bff5a287794a39072e75b8acc621bfd9338" translate="yes" xml:space="preserve">
          <source>How can I handle forward slashes within a route template field?</source>
          <target state="translated">경로 템플릿 필드에서 슬래시를 어떻게 처리 할 수 ​​있습니까?</target>
        </trans-unit>
        <trans-unit id="cc1aaa736f830829609114b2c3f429cacd8ade10" translate="yes" xml:space="preserve">
          <source>How can I pass data from a hook to a responder, and between hooks?</source>
          <target state="translated">후크에서 응답자 및 후크간에 데이터를 전달하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="3216e9aea9f643cd6106e9f208765e6a6e515671" translate="yes" xml:space="preserve">
          <source>How can I serve a downloadable file with falcon?</source>
          <target state="translated">팔콘으로 다운로드 가능한 파일을 어떻게 제공 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="de6ed4aab870412831ea6988ea299b61c4c34405" translate="yes" xml:space="preserve">
          <source>How can I use resp.media with types like datetime?</source>
          <target state="translated">datetime과 같은 유형의 resp.media를 어떻게 사용합니까?</target>
        </trans-unit>
        <trans-unit id="ba6194dc1a48a2280c65125c3f83d9c4985b0617" translate="yes" xml:space="preserve">
          <source>How can I write a custom handler for 404 and 500 pages in falcon?</source>
          <target state="translated">팔콘에서 404 및 500 페이지에 대한 사용자 정의 핸들러를 작성하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="cc560dba02e30b7739cab96dd96e513e531b2873" translate="yes" xml:space="preserve">
          <source>How do I adapt my code to default context type changes in Falcon 2.0?</source>
          <target state="translated">How do I adapt my code to default context type changes in Falcon 2.0?</target>
        </trans-unit>
        <trans-unit id="7b21860522f30f3dc475f19c70f084a454f119e0" translate="yes" xml:space="preserve">
          <source>How do I authenticate requests?</source>
          <target state="translated">요청은 어떻게 인증합니까?</target>
        </trans-unit>
        <trans-unit id="94ce3a35816ed1faa867206cf9038fbb151fff21" translate="yes" xml:space="preserve">
          <source>How do I consume a query string that has a JSON value?</source>
          <target state="translated">JSON 값이있는 쿼리 문자열을 어떻게 사용합니까?</target>
        </trans-unit>
        <trans-unit id="66deef7e3e0990bcf9267b9b045b758236b5d2c4" translate="yes" xml:space="preserve">
          <source>How do I generate API documentation for my Falcon API?</source>
          <target state="translated">Falcon API에 대한 API 문서를 어떻게 생성합니까?</target>
        </trans-unit>
        <trans-unit id="2ed4543802c869649472aba006c6c54d69cd7f11" translate="yes" xml:space="preserve">
          <source>How do I implement CORS with Falcon?</source>
          <target state="translated">Falcon으로 CORS를 어떻게 구현합니까?</target>
        </trans-unit>
        <trans-unit id="1eb8ab326292bae6d1d935024aba7806b75dc322" translate="yes" xml:space="preserve">
          <source>How do I implement both POSTing and GETing items for the same resource?</source>
          <target state="translated">동일한 리소스에 대해 POST 및 GETing 항목을 모두 구현하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="fdb5e7125b22f89c2219059dc5be892639856a4d" translate="yes" xml:space="preserve">
          <source>How do I implement redirects within Falcon?</source>
          <target state="translated">Falcon 내에서 리디렉션을 어떻게 구현합니까?</target>
        </trans-unit>
        <trans-unit id="c1d45e83926ddbc8737d8fe21969f88071ba9b8c" translate="yes" xml:space="preserve">
          <source>How do I manage my database connections?</source>
          <target state="translated">데이터베이스 연결을 어떻게 관리합니까?</target>
        </trans-unit>
        <trans-unit id="9b67d4be707d681812bb5ca6b8751b329058b613" translate="yes" xml:space="preserve">
          <source>How do I split requests between my original app and the part I migrated to Falcon?</source>
          <target state="translated">How do I split requests between my original app and the part I migrated to Falcon?</target>
        </trans-unit>
        <trans-unit id="ede76eecc9c16803e237e5ffd7622d91e8b3350c" translate="yes" xml:space="preserve">
          <source>How do I test my Falcon app? Can I use pytest?</source>
          <target state="translated">Falcon 앱을 어떻게 테스트합니까? pytest를 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="6c2e017967a8cbe44943a76e68fc099c42031585" translate="yes" xml:space="preserve">
          <source>How do I use WSGI middleware with Falcon?</source>
          <target state="translated">Falcon과 함께 WSGI 미들웨어를 어떻게 사용합니까?</target>
        </trans-unit>
        <trans-unit id="2bfc8c222008bb1085635683c090d1522e94d124" translate="yes" xml:space="preserve">
          <source>How does Falcon handle a trailing slash in the request path?</source>
          <target state="translated">How does Falcon handle a trailing slash in the request path?</target>
        </trans-unit>
        <trans-unit id="b26ce7a6a8f8a0a32d2f8b9b0ba0d6c85be14533" translate="yes" xml:space="preserve">
          <source>How is Falcon different?</source>
          <target state="translated">팔콘은 어떻게 다릅니 까?</target>
        </trans-unit>
        <trans-unit id="843d7bd0a3c1afa93060c8650324bda7c63c03a6" translate="yes" xml:space="preserve">
          <source>Hurricane Electric</source>
          <target state="translated">허리케인 전기</target>
        </trans-unit>
        <trans-unit id="4eb39d4003af70c1800436fc685b665d78da11c6" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m setting a cookie, but it isn&amp;rsquo;t being returned in subsequent requests.</source>
          <target state="translated">쿠키를 설정하고 있지만 후속 요청에서 쿠키가 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="07bc6a3458332df1533ce4adcbfeac79e73c463e" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m setting a response body, but it isn&amp;rsquo;t getting returned. What&amp;rsquo;s going on?</source>
          <target state="translated">응답 본문을 설정하고 있지만 반환되지 않습니다. 무슨 일이야?</target>
        </trans-unit>
        <trans-unit id="9817f92df0973b7d3c0d9427d5802b3a4de5302e" translate="yes" xml:space="preserve">
          <source>IP address of the closest client or proxy to the WSGI server.</source>
          <target state="translated">IP address of the closest client or proxy to the WSGI server.</target>
        </trans-unit>
        <trans-unit id="e1969032507555baac955c1fd56a05e275f0118e" translate="yes" xml:space="preserve">
          <source>IP address of the original client, as well as any known addresses of proxies fronting the WSGI server.</source>
          <target state="translated">IP address of the original client, as well as any known addresses of proxies fronting the WSGI server.</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="771a30ef0179eb30ea16cf6b0020491e841d1b2b" translate="yes" xml:space="preserve">
          <source>Identifier: &lt;code&gt;dt&lt;/code&gt;</source>
          <target state="translated">식별자 : &lt;code&gt;dt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd58f3dd470acd6284b430edeb2cb929d550e96d" translate="yes" xml:space="preserve">
          <source>Identifier: &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">식별자 : &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf17d27b8fa866f8c33bc4429991365203d6696f" translate="yes" xml:space="preserve">
          <source>Identifier: &lt;code&gt;uuid&lt;/code&gt;</source>
          <target state="translated">식별자 : &lt;code&gt;uuid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8414b4fd22c852e869cd79ac92f078aafd072b6f" translate="yes" xml:space="preserve">
          <source>Idiomatic HTTP error responses</source>
          <target state="translated">관용적 인 HTTP 오류 응답</target>
        </trans-unit>
        <trans-unit id="0c74a037657cdf698222b96f80f9e150f4c86fb4" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://pypi.python.org/pypi/ujson&quot;&gt;ujson&lt;/a&gt; is available, Falcon will use it to speed up media (de)serialization, error serialization, and query string parsing. Note that &lt;code&gt;ujson&lt;/code&gt; can actually be slower on PyPy than the standard &lt;code&gt;json&lt;/code&gt; module due to ctypes overhead, and so we recommend only using &lt;code&gt;ujson&lt;/code&gt; with CPython deployments:</source>
          <target state="translated">경우 &lt;a href=&quot;https://pypi.python.org/pypi/ujson&quot;&gt;ujson이&lt;/a&gt; 가능하며, 팔콘 미디어 (드) 직렬화 오류 직렬화 및 쿼리 문자열 구문 분석 속도를 높이기 위해 사용됩니다. 참고 &lt;code&gt;ujson&lt;/code&gt; 가 실제로 표준보다 느린 PyPy에있을 수 있습니다 &lt;code&gt;json&lt;/code&gt; 오버 헤드 때문에하는 ctypes에 모듈, 우리 만 사용하는 것이 좋습니다 있도록 &lt;code&gt;ujson&lt;/code&gt; CPython의 배포와 함께 :</target>
        </trans-unit>
        <trans-unit id="49a047f2705427027e640b6027aba5fe610b1dc1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;resp.status&lt;/code&gt; is not set explicitly, it defaults to &lt;code&gt;200 OK&lt;/code&gt;, which is exactly what we want &lt;code&gt;on_get()&lt;/code&gt; to do.</source>
          <target state="translated">&lt;code&gt;resp.status&lt;/code&gt; 가 명시 적으로 설정되어 있지 않은 경우 , 기본값은 &lt;code&gt;200 OK&lt;/code&gt; 입니다 . 이것이 정확히 &lt;code&gt;on_get()&lt;/code&gt; 이 원하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="99f4df4c3e1711835fd178e372a4e0bf62cb8d92" translate="yes" xml:space="preserve">
          <source>If Falcon doesn&amp;rsquo;t have an internet media type handler that supports your use case, you can easily implement your own using the abstract base class provided by Falcon:</source>
          <target state="translated">Falcon에 사용 사례를 지원하는 인터넷 미디어 유형 처리기가없는 경우 Falcon에서 제공하는 추상 기본 클래스를 사용하여 자체 구현을 쉽게 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1d59ab4dd400b9422f6a9f940638e3c4220dd25" translate="yes" xml:space="preserve">
          <source>If JSON Schema does not meet your needs, a custom validator may be implemented in a similar manner to the one above.</source>
          <target state="translated">JSON 스키마가 요구 사항을 충족하지 않으면 사용자 지정 유효성 검사기가 위와 유사한 방식으로 구현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c249cdaef977d215f15022f3ed7709777e4acdf3" translate="yes" xml:space="preserve">
          <source>If a custom media type is used and the type includes a &amp;ldquo;+json&amp;rdquo; or &amp;ldquo;+xml&amp;rdquo; suffix, the default serializer will convert the error to JSON or XML, respectively.</source>
          <target state="translated">사용자 정의 미디어 유형이 사용되고 유형에 &quot;+ json&quot;또는 &quot;+ xml&quot;접미사가 포함 된 경우 기본 직렬 변환기는 각각 오류를 JSON 또는 XML로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e8c3b50ac0992e4e173edb54b07d8c7101094f47" translate="yes" xml:space="preserve">
          <source>If a query param does not have a value, Falcon will by default ignore that parameter. For example, passing &lt;code&gt;'foo'&lt;/code&gt; or &lt;code&gt;'foo='&lt;/code&gt; will result in the parameter being ignored.</source>
          <target state="translated">쿼리 매개 변수에 값이 없으면 Falcon은 기본적으로 해당 매개 변수를 무시합니다. 예를 들어, &lt;code&gt;'foo'&lt;/code&gt; 또는 &lt;code&gt;'foo='&lt;/code&gt; 전달 하면 매개 변수가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="010a287f7be8095ef272dc51c7b37f154272d1f6" translate="yes" xml:space="preserve">
          <source>If an HTML form is POSTed to the API using the &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; media type, Falcon can automatically parse the parameters from the request body and merge them into the query string parameters. To enable this functionality, set &lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt;&lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt; via &lt;a href=&quot;api#falcon.API.req_options&quot;&gt;&lt;code&gt;API.req_options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt; 미디어 유형을 사용하여 HTML 양식을 API에 POST하면 Falcon은 요청 본문에서 매개 변수를 자동으로 구문 분석하여 쿼리 문자열 매개 변수로 병합 할 수 있습니다. 이 기능을 사용하려면 &lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt; &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; &lt;/a&gt; 를 통해 &lt;a href=&quot;api#falcon.API.req_options&quot;&gt; &lt;code&gt;API.req_options&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d644b155276d34eaf6f7a7d8d03d7ccd4551b24c" translate="yes" xml:space="preserve">
          <source>If an HTML form is POSTed to the API using the &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; media type, and the &lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt;&lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt;&lt;/a&gt; option is set, the framework will consume &lt;code&gt;stream&lt;/code&gt; in order to parse the parameters and merge them into the query string parameters. In this case, the stream will be left at EOF.</source>
          <target state="translated">&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt; 미디어 유형을 사용하여 HTML 양식을 API에 POST 하고 &lt;a href=&quot;api#falcon.RequestOptions.auto_parse_form_urlencoded&quot;&gt; &lt;code&gt;auto_parse_form_urlencoded&lt;/code&gt; &lt;/a&gt; 옵션이 설정된 경우 프레임 워크는 매개 변수를 구문 분석하고 쿼리 문자열 매개 변수에 병합하기 위해 &lt;code&gt;stream&lt;/code&gt; 을 소비 합니다 . 이 경우 스트림은 EOF에 남습니다.</target>
        </trans-unit>
        <trans-unit id="fbf6f7146e3526259b810542266889208322ae44" translate="yes" xml:space="preserve">
          <source>If an existing project is making extensive use of dictionary contexts, the type can be explicitly overridden back to dict by employing custom request/response types:</source>
          <target state="translated">If an existing project is making extensive use of dictionary contexts, the type can be explicitly overridden back to dict by employing custom request/response types:</target>
        </trans-unit>
        <trans-unit id="e0921a18fbb995a62e51073d6d2f0fb61661415a" translate="yes" xml:space="preserve">
          <source>If an iterable of exception types is specified instead of a single type, the handler must be explicitly specified.</source>
          <target state="translated">If an iterable of exception types is specified instead of a single type, the handler must be explicitly specified.</target>
        </trans-unit>
        <trans-unit id="d0dc1f017112cc413532ee9ab63140ab30313f5f" translate="yes" xml:space="preserve">
          <source>If authentication credentials were provided in the request, the server considers them insufficient to grant access. The client SHOULD NOT automatically repeat the request with the same credentials. The client MAY repeat the request with new or different credentials. However, a request might be forbidden for reasons unrelated to the credentials.</source>
          <target state="translated">요청에 인증 자격 증명이 제공된 경우 서버는 자격 증명이 액세스 권한을 부여하기에 충분하지 않은 것으로 간주합니다. 클라이언트는 동일한 자격 증명으로 요청을 자동으로 반복해서는 안됩니다. 클라이언트는 새로운 자격 증명이나 다른 자격 증명으로 요청을 반복 할 수 있습니다. 그러나 신임 정보와 관련이없는 이유로 요청이 금지 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7012f0f2569a51c838d52d6540b453eb32d8eb32" translate="yes" xml:space="preserve">
          <source>If available, uses &lt;code&gt;testtools&lt;/code&gt; in lieu of &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">가능한 경우 &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 대신 &lt;code&gt;testtools&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fb649699c5c9f08fe0a058c51d981745af86f98" translate="yes" xml:space="preserve">
          <source>If available, uses &lt;code&gt;testtools&lt;/code&gt; in lieu of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If available, uses &lt;code&gt;testtools&lt;/code&gt; in lieu of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b9ca6fdaf9e050a8c1c93d91aacade60e0e8ce63" translate="yes" xml:space="preserve">
          <source>If everything goes well, you should see something like this:</source>
          <target state="translated">If everything goes well, you should see something like this:</target>
        </trans-unit>
        <trans-unit id="a33ae9ad6ee1d2731ea5c0e2c530352861cfd704" translate="yes" xml:space="preserve">
          <source>If no route matches a request, but the path in the requested URI matches a sink prefix, Falcon will pass control to the associated sink, regardless of the HTTP method requested.</source>
          <target state="translated">요청과 일치하는 경로는 없지만 요청 된 URI의 경로가 싱크 접두사와 일치하면 Falcon은 요청 된 HTTP 메서드에 관계없이 연결된 싱크로 제어를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="fd17f9e67525b2d4b6894e5e9e813eb1cd784d27" translate="yes" xml:space="preserve">
          <source>If no route matches the request, control then passes to a default responder that simply raises an instance of &lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt;&lt;code&gt;HTTPNotFound&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">요청과 일치하는 경로가 없으면 제어는 단순히 &lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt; &lt;code&gt;HTTPNotFound&lt;/code&gt; &lt;/a&gt; 인스턴스를 발생 시키는 기본 응답기로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="4c919be2f98eedf331520725c41503747ff532a5" translate="yes" xml:space="preserve">
          <source>If no route matches the request, control then passes to a default responder that simply raises an instance of &lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt;&lt;code&gt;HTTPNotFound&lt;/code&gt;&lt;/a&gt;. Normally this will result in sending a 404 response back to the client.</source>
          <target state="translated">요청과 일치하는 경로가 없으면 제어는 단순히 &lt;a href=&quot;errors#falcon.HTTPNotFound&quot;&gt; &lt;code&gt;HTTPNotFound&lt;/code&gt; &lt;/a&gt; 인스턴스를 발생 시키는 기본 응답기로 전달합니다 . 일반적으로 이로 인해 클라이언트에 404 응답이 다시 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="4975a951fad347357444e95be1bfd50a220595cb" translate="yes" xml:space="preserve">
          <source>If none of the above headers are available, or if the Forwarded header is available but the &amp;ldquo;host&amp;rdquo; parameter is not included in the first hop, the value of &lt;a href=&quot;#falcon.Request.host&quot;&gt;&lt;code&gt;host&lt;/code&gt;&lt;/a&gt; is returned instead.</source>
          <target state="translated">사용 가능한 위의 헤더가 없거나 Forwarded 헤더를 사용할 수 있지만 &quot;host&quot;매개 변수가 첫 번째 홉에 포함되지 않은 경우 대신 &lt;a href=&quot;#falcon.Request.host&quot;&gt; &lt;code&gt;host&lt;/code&gt; &lt;/a&gt; 값 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2c681478047dcafd1d7fbded49f1fa6d4595d09b" translate="yes" xml:space="preserve">
          <source>If none of these headers are available, or if the Forwarded header is available but does not contain a &amp;ldquo;proto&amp;rdquo; parameter in the first hop, the value of &lt;a href=&quot;#falcon.Request.scheme&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; is returned instead.</source>
          <target state="translated">이러한 헤더를 사용할 수 없거나 Forwarded 헤더를 사용할 수 있지만 첫 번째 홉에 &quot;proto&quot;매개 변수를 포함하지 않으면 &lt;a href=&quot;#falcon.Request.scheme&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 값이 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a5cd08e95e58cb0ddfc6be32290c9cc40a2cfb62" translate="yes" xml:space="preserve">
          <source>If none of these headers are available, the value of &lt;a href=&quot;#falcon.Request.remote_addr&quot;&gt;&lt;code&gt;remote_addr&lt;/code&gt;&lt;/a&gt; is used instead.</source>
          <target state="translated">이러한 헤더를 사용할 수 없으면 &lt;a href=&quot;#falcon.Request.remote_addr&quot;&gt; &lt;code&gt;remote_addr&lt;/code&gt; &lt;/a&gt; 값이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9d8dcfc6c203738eadb6e67647a5dff554e68fd7" translate="yes" xml:space="preserve">
          <source>If not set explicitly, the status defaults to &amp;lsquo;200 OK&amp;rsquo;.</source>
          <target state="translated">명시 적으로 설정하지 않으면 상태는 기본적으로 '200 OK'입니다.</target>
        </trans-unit>
        <trans-unit id="c85fab0101c7c0d3ca83c24349755737e4113c7c" translate="yes" xml:space="preserve">
          <source>If not specified explicitly, the handler will default to &lt;code&gt;exception.handle&lt;/code&gt;, where &lt;code&gt;exception&lt;/code&gt; is the error type specified above, and &lt;code&gt;handle&lt;/code&gt; is a static method (i.e., decorated with @staticmethod) that accepts the same params just described. For example:</source>
          <target state="translated">명시 적으로 지정하지 않으면 핸들러는 기본적으로 &lt;code&gt;exception.handle&lt;/code&gt; 로 설정됩니다 . 여기서 &lt;code&gt;exception&lt;/code&gt; 은 위에서 지정한 오류 유형이며 &lt;code&gt;handle&lt;/code&gt; 은 방금 설명한 동일한 매개 변수를 허용하는 정적 메소드 (예 : @staticmethod로 장식 됨)입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7da55f8a981dfcec3d1cba69584dc69e89d19f94" translate="yes" xml:space="preserve">
          <source>If one of the &lt;em&gt;process_request&lt;/em&gt; middleware methods raises an error, it will be processed according to the error type. If the type matches a registered error handler, that handler will be invoked and then the framework will begin to unwind the stack, skipping any lower layers. The error handler may itself raise an instance of HTTPError, in which case the framework will use the latter exception to update the &lt;em&gt;resp&lt;/em&gt; object. Regardless, the framework will continue unwinding the middleware stack. For example, if &lt;em&gt;mob2.process_request&lt;/em&gt; were to raise an error, the framework would execute the stack as follows:</source>
          <target state="translated">&lt;em&gt;process_request&lt;/em&gt; 미들웨어 메소드 중 하나 에서 오류가 발생하면 오류 유형에 따라 처리됩니다. 형식이 등록 된 오류 처리기와 일치하면 해당 처리기가 호출 된 다음 프레임 워크가 스택을 풀기 시작하여 하위 계층을 건너 뜁니다. 에러 핸들러는 자체적으로 HTTPError 인스턴스를 발생시킬 수 있으며,이 경우 프레임 워크는 후자의 예외를 사용하여 &lt;em&gt;resp&lt;/em&gt; 객체 를 업데이트 합니다. 어쨌든 프레임 워크는 미들웨어 스택을 계속해서 풀립니다. 예를 들어 &lt;em&gt;mob2.process_request&lt;/em&gt; 가 오류를 발생시키는 경우 프레임 워크는 다음과 같이 스택을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c40f662f80a7adcc93ad0e0cf6e5db0edbeb7f1c" translate="yes" xml:space="preserve">
          <source>If one of the &lt;em&gt;process_request&lt;/em&gt; middleware methods raises an exception, it will be processed according to the exception type. If the type matches a registered error handler, that handler will be invoked and then the framework will begin to unwind the stack, skipping any lower layers. The error handler may itself raise an instance of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;, in which case the framework will use the latter exception to update the &lt;em&gt;resp&lt;/em&gt; object.</source>
          <target state="translated">If one of the &lt;em&gt;process_request&lt;/em&gt; middleware methods raises an exception, it will be processed according to the exception type. If the type matches a registered error handler, that handler will be invoked and then the framework will begin to unwind the stack, skipping any lower layers. The error handler may itself raise an instance of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt;, in which case the framework will use the latter exception to update the &lt;em&gt;resp&lt;/em&gt; object.</target>
        </trans-unit>
        <trans-unit id="e2e7034b99d083b93742d87c470a032abe3d7f81" translate="yes" xml:space="preserve">
          <source>If pytest reports any errors, take a moment to fix them up before proceeding to the next section of the tutorial.</source>
          <target state="translated">pytest가 오류를보고하면 학습서의 다음 섹션으로 진행하기 전에 오류를 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="c1cecd8f7833db200efce14cf931b9a5df676f46" translate="yes" xml:space="preserve">
          <source>If range requests are not supported for the target resource, the header may be set to &amp;ldquo;none&amp;rdquo; to advise the client not to attempt any such requests.</source>
          <target state="translated">대상 자원에 대해 범위 요청이 지원되지 않는 경우 클라이언트가 그러한 요청을 시도하지 않도록 알리기 위해 헤더가 &quot;없음&quot;으로 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ee4a240a216a4fd8f4f07084f631a1cbf43684b" translate="yes" xml:space="preserve">
          <source>If set to a Unicode type (&lt;code&gt;unicode&lt;/code&gt; in Python 2, or &lt;code&gt;str&lt;/code&gt; in Python 3), Falcon will encode the text as UTF-8 in the response. If the content is already a byte string, use the &lt;a href=&quot;#falcon.Response.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute instead (it&amp;rsquo;s faster).</source>
          <target state="translated">유니 코드 유형 ( Python 2의 &lt;code&gt;unicode&lt;/code&gt; 또는 Python 3의 &lt;code&gt;str&lt;/code&gt; ) 으로 설정된 경우 Falcon은 응답에서 텍스트를 UTF-8로 인코딩합니다. 내용이 이미 바이트 문자열 인 경우 &lt;a href=&quot;#falcon.Response.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; 속성을 대신 사용하십시오 (더 빠릅니다).</target>
        </trans-unit>
        <trans-unit id="17d0acf51826fdb06c9db1dbdc9e09b42c2a0187" translate="yes" xml:space="preserve">
          <source>If the above approach isn&amp;rsquo;t an option for your deployment, you can implement a simple WSGI wrapper that does the same thing:</source>
          <target state="translated">If the above approach isn&amp;rsquo;t an option for your deployment, you can implement a simple WSGI wrapper that does the same thing:</target>
        </trans-unit>
        <trans-unit id="573d02ffdadba443b074a6b8aad734c25b906555" translate="yes" xml:space="preserve">
          <source>If the condition is temporary, the server SHOULD generate a Retry- After header field to indicate that it is temporary and after what time the client MAY try again.</source>
          <target state="translated">조건이 일시적인 경우, 서버는 재시도 후 헤더 필드를 생성하여 일시적이고 클라이언트가 다시 시도 할 수있는 시간을 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="24fc003e9a743de3e85bb1d466ef3edf7227ecc8" translate="yes" xml:space="preserve">
          <source>If the header already exists, the new value will be appended to it, delimited by a comma. Most header specifications support this format, Set-Cookie being the notable exceptions.</source>
          <target state="translated">헤더가 이미 존재하면 새 값이 쉼표로 구분되어 추가됩니다. 대부분의 헤더 사양은이 형식을 지원하며 Set-Cookie는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="6a797705c8440425c9094af80f76a89ff9545961" translate="yes" xml:space="preserve">
          <source>If the header already exists, the new value will normally be appended to it, delimited by a comma. The notable exception to this rule is Set-Cookie, in which case a separate header line for each value will be included in the response.</source>
          <target state="translated">If the header already exists, the new value will normally be appended to it, delimited by a comma. The notable exception to this rule is Set-Cookie, in which case a separate header line for each value will be included in the response.</target>
        </trans-unit>
        <trans-unit id="0a13e5fdcb43c7d74f4ffd6b953e6c3ccbde5c58" translate="yes" xml:space="preserve">
          <source>If the header was not previously set, nothing is done (no error is raised).</source>
          <target state="translated">헤더가 이전에 설정되지 않은 경우 아무 것도 수행되지 않습니다 (오류가 발생하지 않음).</target>
        </trans-unit>
        <trans-unit id="26ae121a2a80263c75a453d89623796bbdb65531" translate="yes" xml:space="preserve">
          <source>If the header was not previously set, nothing is done (no error is raised). Otherwise, all values set for the header will be removed from the response.</source>
          <target state="translated">If the header was not previously set, nothing is done (no error is raised). Otherwise, all values set for the header will be removed from the response.</target>
        </trans-unit>
        <trans-unit id="8a9772480c43cb209bccd442bfcbc289c19755f4" translate="yes" xml:space="preserve">
          <source>If the hostname in the request is an IP address, the value for &lt;code&gt;subdomain&lt;/code&gt; is undefined.</source>
          <target state="translated">요청의 호스트 이름이 IP 주소 인 경우 &lt;code&gt;subdomain&lt;/code&gt; 값 이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d84520a364d77e696a0bf33ec0a9ed1eff03e3f2" translate="yes" xml:space="preserve">
          <source>If the origin server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 Not Found ought to be used instead.</source>
          <target state="translated">원래 서버가 조건이 영구적인지 여부를 알 수 없거나 결정할 기능이없는 경우 상태 코드 404 Not Found를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="71db10bd4d9062f56e1d2a1efd89bbd86c02c188" translate="yes" xml:space="preserve">
          <source>If the prefix overlaps a registered route template, the route will take precedence and mask the sink.</source>
          <target state="translated">접두사가 등록 된 배관 템플릿과 겹치면 배관이 우선하여 싱크를 가리게됩니다.</target>
        </trans-unit>
        <trans-unit id="b79d8369e2fb021095a1979c95ecf8c47ef07edb" translate="yes" xml:space="preserve">
          <source>If the request included authentication credentials, then the 401 response indicates that authorization has been refused for those credentials. The user agent MAY repeat the request with a new or replaced Authorization header field. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user agent SHOULD present the enclosed representation to the user, since it usually contains relevant diagnostic information.</source>
          <target state="translated">요청에 인증 자격 증명이 포함 된 경우 401 응답은 해당 자격 증명에 대한 권한 부여가 거부되었음을 나타냅니다. 사용자 에이전트는 새로운 또는 교체 된 Authorization 헤더 필드로 요청을 반복 할 수있다. 401 응답에 이전 응답과 동일한 시도가 포함되어 있고 사용자 에이전트가 이미 한 번 이상 인증을 시도한 경우 일반적으로 관련 진단 정보가 포함되어 있으므로 사용자 에이전트는 동봉 된 표현을 사용자에게 제시해야합니다.</target>
        </trans-unit>
        <trans-unit id="30a9371621efb0f45399e1e0594ff1695b6da6f5" translate="yes" xml:space="preserve">
          <source>If the request was proxied, the scheme may not match what was originally requested by the client. &lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt;&lt;code&gt;forwarded_scheme&lt;/code&gt;&lt;/a&gt; can be used, instead, to handle such cases.</source>
          <target state="translated">요청이 프록시 된 경우 스킴은 클라이언트가 원래 요청한 것과 일치하지 않을 수 있습니다. 대신 &lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt; &lt;code&gt;forwarded_scheme&lt;/code&gt; &lt;/a&gt; 을 사용하여 이러한 경우를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="02eef3815d00d52dd17e509b355d63e5bad80063" translate="yes" xml:space="preserve">
          <source>If the stream is set to an iterable object that requires resource cleanup, it can implement a close() method to do so. The close() method will be called upon completion of the request.</source>
          <target state="translated">If the stream is set to an iterable object that requires resource cleanup, it can implement a close() method to do so. The close() method will be called upon completion of the request.</target>
        </trans-unit>
        <trans-unit id="f12ba5b258144051107e375b00521896538d6d42" translate="yes" xml:space="preserve">
          <source>If the stream length is unknown, you can set &lt;code&gt;stream&lt;/code&gt; directly, and ignore &lt;code&gt;content_length&lt;/code&gt;. In this case, the WSGI server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</source>
          <target state="translated">If the stream length is unknown, you can set &lt;code&gt;stream&lt;/code&gt; directly, and ignore &lt;code&gt;content_length&lt;/code&gt; . In this case, the WSGI server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</target>
        </trans-unit>
        <trans-unit id="e37fc2ccc6e55e89b6b38804bee9e12e61e6dd3b" translate="yes" xml:space="preserve">
          <source>If the stream length is unknown, you can set &lt;code&gt;stream&lt;/code&gt; directly, and ignore &lt;code&gt;stream_len&lt;/code&gt;. In this case, the WSGI server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</source>
          <target state="translated">스트림 길이를 알 수없는 경우 &lt;code&gt;stream&lt;/code&gt; 직접 설정 하고 &lt;code&gt;stream_len&lt;/code&gt; 을 무시할 수 있습니다 . 이 경우 WSGI 서버는 청크 인코딩 또는 PEP-3333에서 제안한 다른 전략 중 하나를 사용하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a03c52f9e1d02aa0b2d67bc43208c8fc234338f" translate="yes" xml:space="preserve">
          <source>If the value is malformed and can not be converted, Falcon will reject the request with a 404 response to the client.</source>
          <target state="translated">값이 잘못되어 변환 할 수없는 경우 Falcon은 클라이언트에 대한 404 응답으로 요청을 거부합니다.</target>
        </trans-unit>
        <trans-unit id="3c53504913222c9b54265dc76fd90a2a9af8e3cc" translate="yes" xml:space="preserve">
          <source>If you are a Windows user, Waitress can be used in lieu of Gunicorn, since the latter doesn&amp;rsquo;t work under Windows:</source>
          <target state="translated">Windows 사용자 인 경우 웨이트리스는 Gunicorn 대신 사용할 수 있습니다. 후자는 Windows에서 작동하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="8a7021295c87ea0f78a907e0d8b7ac2e1fca7bb8" translate="yes" xml:space="preserve">
          <source>If you are deploying to PyPy, we recommend sticking with the standard library&amp;rsquo;s JSON implementation, since it will be faster in most cases as compared to a third-party library.</source>
          <target state="translated">If you are deploying to PyPy, we recommend sticking with the standard library&amp;rsquo;s JSON implementation, since it will be faster in most cases as compared to a third-party library.</target>
        </trans-unit>
        <trans-unit id="9a5ef66b026a9cf19aa1ee5ad855b60a1a04dcef" translate="yes" xml:space="preserve">
          <source>If you are interested in the design-first approach mentioned above, you may also want to check out API design and gateway services such as Tyk, Apiary, Amazon API Gateway, or Google Cloud Endpoints.</source>
          <target state="translated">위에서 언급 한 디자인 우선 접근 방식에 관심이있는 경우 Tyk, Apiary, Amazon API Gateway 또는 Google Cloud Endpoints와 같은 API 디자인 및 게이트웨이 서비스를 확인할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9df4e83e5b0f2301e105772694047456e209f5a1" translate="yes" xml:space="preserve">
          <source>If you are using the Falcon framework for a community or commercial project, please consider adding your information to our wiki under &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;Who&amp;rsquo;s Using Falcon?&lt;/a&gt;</source>
          <target state="translated">커뮤니티 또는 상업용 프로젝트에 Falcon 프레임 워크를 사용하는 경우 Falcon을 사용하는 &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Who's-using-Falcon%3F&quot;&gt;사람&lt;/a&gt; 아래의 Wiki에 정보를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8eb45149bbe2a1da4f34d25bda4d625202ec8c5" translate="yes" xml:space="preserve">
          <source>If you are working on a remote server, switch to the myproject user and pull down the source code for your application.</source>
          <target state="translated">If you are working on a remote server, switch to the myproject user and pull down the source code for your application.</target>
        </trans-unit>
        <trans-unit id="b7e61dee0a701c16ae6015bb9e84e2c8ac4aaddf" translate="yes" xml:space="preserve">
          <source>If you do need full negotiation, it is very easy to bridge the gap using middleware. Here is an example of how this can be done:</source>
          <target state="translated">전체 협상이 필요한 경우 미들웨어를 사용하여 격차를 해소하는 것이 매우 쉽습니다. 이 작업을 수행하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eab26131a66550b6534bac04a3cddb0b76b3dff9" translate="yes" xml:space="preserve">
          <source>If you do not know the size of the stream in advance, you can work around that by using chunked encoding, but that&amp;rsquo;s beyond the scope of this tutorial.</source>
          <target state="translated">미리 스트림의 크기를 모르는 경우 청크 인코딩을 사용하여이 문제를 해결할 수 있지만이 자습서에서는 다루지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59dfd6d6a339e830a9dd45a3b0274c2f1b5603e3" translate="yes" xml:space="preserve">
          <source>If you have a lot of experience with other Python web frameworks, you may be used to using decorators to set up your routes. Falcon&amp;rsquo;s particular approach provides the following benefits:</source>
          <target state="translated">다른 Python 웹 프레임 워크에 대한 경험이 많은 경우 데코레이터를 사용하여 경로를 설정하는 데 익숙 할 수 있습니다. 팔콘의 특별한 접근 방식은 다음과 같은 이점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8e057d203bf5bce9bfe7da34877403b3a2e8aad3" translate="yes" xml:space="preserve">
          <source>If you have access to your load balancer or reverse proxy configuration, we recommend setting up path or subdomain-based rules to split requests between your original implementation and the parts that have been migrated to Falcon (e.g., by adding an additional &lt;code&gt;location&lt;/code&gt; directive to your NGINX config).</source>
          <target state="translated">If you have access to your load balancer or reverse proxy configuration, we recommend setting up path or subdomain-based rules to split requests between your original implementation and the parts that have been migrated to Falcon (e.g., by adding an additional &lt;code&gt;location&lt;/code&gt; directive to your NGINX config).</target>
        </trans-unit>
        <trans-unit id="4a6a4d5cd1d3c6fa0be1573dd4e468726f25282f" translate="yes" xml:space="preserve">
          <source>If you have another case where the body isn&amp;rsquo;t being returned, it&amp;rsquo;s probably a bug! &lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;Let us know&lt;/a&gt; so we can help.</source>
          <target state="translated">시체가 반환되지 않는 또 다른 경우가 있다면 아마도 버그 일 것입니다! 우리가 도울 수 있도록 &lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;알려주십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab04e655048b85fd627d161e03851b2faf77e8f3" translate="yes" xml:space="preserve">
          <source>If you have another case where the body isn&amp;rsquo;t being returned, it&amp;rsquo;s probably a bug! &lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;Let us know&lt;/a&gt; so we can help.</source>
          <target state="translated">If you have another case where the body isn&amp;rsquo;t being returned, it&amp;rsquo;s probably a bug! &lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;Let us know&lt;/a&gt; so we can help.</target>
        </trans-unit>
        <trans-unit id="4df8938df467581163f7a19a49d3423f788271e7" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t done so already, please take a moment to &lt;a href=&quot;install#install&quot;&gt;install&lt;/a&gt; the Falcon web framework before continuing.</source>
          <target state="translated">아직 그렇게하지 않았다면 계속 진행하기 전에 Falcon 웹 프레임 워크 를 &lt;a href=&quot;install#install&quot;&gt;설치&lt;/a&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="6cffc94a79349a22997a71af99a58c6777963046" translate="yes" xml:space="preserve">
          <source>If you need to mix-and-match both approaches under migration, beware that setting attributes such as &lt;em&gt;items&lt;/em&gt; or &lt;em&gt;values&lt;/em&gt; would obviously shadow the corresponding mapping interface functions.</source>
          <target state="translated">If you need to mix-and-match both approaches under migration, beware that setting attributes such as &lt;em&gt;items&lt;/em&gt; or &lt;em&gt;values&lt;/em&gt; would obviously shadow the corresponding mapping interface functions.</target>
        </trans-unit>
        <trans-unit id="aa56520df6b2c0a058a4c82690e830a7988bb0d0" translate="yes" xml:space="preserve">
          <source>If you need to transparently handle reconnecting after an error, or for other use cases that may not be supported by your client library, simply encapsulate the client library within a management class that handles all the tricky bits, and pass that around instead.</source>
          <target state="translated">오류 후 또는 클라이언트 라이브러리에서 지원하지 않을 수있는 다른 사용 사례에 대해 투명하게 재 연결을 처리해야하는 경우, 모든 까다로운 비트를 처리하는 관리 클래스 내에 클라이언트 라이브러리를 캡슐화하고 대신 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="74b82853ed33efde97ccb0facaf66ac6cc3a1461" translate="yes" xml:space="preserve">
          <source>If you want to verify that Cython is being invoked, simply pass &lt;code&gt;-v&lt;/code&gt; to pip in order to echo the compilation commands:</source>
          <target state="translated">Cython이 호출되는지 확인 하려면 컴파일 명령을 에코하려면 &lt;code&gt;-v&lt;/code&gt; 를 pip에 전달 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9d595cfaa96b4a0ee743786285905f1a24bbd99" translate="yes" xml:space="preserve">
          <source>If you would like to recognize such parameters, you must set the &lt;code&gt;keep_blank_qs_values&lt;/code&gt; request option to &lt;code&gt;True&lt;/code&gt;. Request options are set globally for each instance of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; via the &lt;a href=&quot;../api/api#falcon.API.req_options&quot;&gt;&lt;code&gt;req_options&lt;/code&gt;&lt;/a&gt; property. For example:</source>
          <target state="translated">이러한 매개 변수를 인식하려면 &lt;code&gt;keep_blank_qs_values&lt;/code&gt; 요청 옵션을 &lt;code&gt;True&lt;/code&gt; 로 설정해야합니다 . 요청 옵션은 &lt;a href=&quot;../api/api#falcon.API.req_options&quot;&gt; &lt;code&gt;req_options&lt;/code&gt; &lt;/a&gt; 특성을 통해 &lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; 의&lt;/a&gt; 각 인스턴스에 대해 전체적으로 설정 됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc89a5503140a4a41bba69053c6d6c983b24b3b0" translate="yes" xml:space="preserve">
          <source>If your app sets &lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt;&lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;, Falcon will normalize incoming URI paths to simplify later processing and improve the predictability of application logic. This can be helpful when implementing a REST API schema that does not interpret a trailing slash character as referring to the name of an implicit sub-resource, as traditionally used by websites to reference index pages.</source>
          <target state="translated">If your app sets &lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt; &lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt; &lt;/a&gt; to &lt;code&gt;True&lt;/code&gt; , Falcon will normalize incoming URI paths to simplify later processing and improve the predictability of application logic. This can be helpful when implementing a REST API schema that does not interpret a trailing slash character as referring to the name of an implicit sub-resource, as traditionally used by websites to reference index pages.</target>
        </trans-unit>
        <trans-unit id="706fdc336d4337d1d3a80c35412523d4cbae971b" translate="yes" xml:space="preserve">
          <source>If your application is behind one or more reverse proxies, you can use &lt;a href=&quot;#falcon.Request.access_route&quot;&gt;&lt;code&gt;access_route&lt;/code&gt;&lt;/a&gt; to retrieve the real IP address of the client.</source>
          <target state="translated">응용 프로그램이 하나 이상의 역방향 프록시 뒤에있는 경우 &lt;a href=&quot;#falcon.Request.access_route&quot;&gt; &lt;code&gt;access_route&lt;/code&gt; &lt;/a&gt; 를 사용 하여 클라이언트의 실제 IP 주소를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2190b48a14dc2a699a6aad020c2a0dbd189cfd6" translate="yes" xml:space="preserve">
          <source>If your resource does not support a particular HTTP method, simply omit the corresponding responder and Falcon will use a default responder that raises an instance of &lt;a href=&quot;errors#falcon.HTTPMethodNotAllowed&quot;&gt;&lt;code&gt;HTTPMethodNotAllowed&lt;/code&gt;&lt;/a&gt; when that method is requested. Normally this results in sending a 405 response back to the client.</source>
          <target state="translated">자원이 특정 HTTP 메소드를 지원하지 않는 경우 해당 응답자를 생략하면 Falcon은 해당 메소드가 요청 될 때 &lt;a href=&quot;errors#falcon.HTTPMethodNotAllowed&quot;&gt; &lt;code&gt;HTTPMethodNotAllowed&lt;/code&gt; &lt;/a&gt; 인스턴스를 발생 시키는 기본 응답자를 사용합니다 . 일반적으로 이로 인해 405 응답이 클라이언트로 다시 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="7f7dc7dff960ceff451714f29b61b5a89bb8feac" translate="yes" xml:space="preserve">
          <source>In Falcon 1.3 we shipped initial support for &lt;a href=&quot;http://falcon.readthedocs.io/en/stable/api/routing.html#field-converters&quot;&gt;field converters&lt;/a&gt;. We&amp;rsquo;ve discussed building on this feature to support consuming multiple path segments ala Flask. This work is currently planned for 2.0.</source>
          <target state="translated">Falcon 1.3에서는 &lt;a href=&quot;http://falcon.readthedocs.io/en/stable/api/routing.html#field-converters&quot;&gt;필드 변환기에&lt;/a&gt; 대한 초기 지원을 제공했습니다 . 우리는이 기능을 기반으로 Flask의 여러 경로 세그먼트 소비를 지원하는 것에 대해 논의했습니다. 이 작업은 현재 2.0으로 계획되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="814f2082a2545753267bf9d81c69e59178f29a2b" translate="yes" xml:space="preserve">
          <source>In Falcon 1.3 we shipped initial support for &lt;a href=&quot;https://falcon.readthedocs.io/en/stable/api/routing.html#field-converters&quot;&gt;field converters&lt;/a&gt;. We&amp;rsquo;ve discussed building on this feature to support consuming multiple path segments ala Flask. This work is currently planned for 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be20db3c0333b2e49db6434fc918987bc7bb8cb7" translate="yes" xml:space="preserve">
          <source>In Falcon versions prior to 2.0, the default context type was &lt;code&gt;dict&lt;/code&gt;. To ease the migration to attribute-based context object approach, this class also implements the mapping interface; that is, object attributes are linked to dictionary items, and vice versa. For instance:</source>
          <target state="translated">In Falcon versions prior to 2.0, the default context type was &lt;code&gt;dict&lt;/code&gt; . To ease the migration to attribute-based context object approach, this class also implements the mapping interface; that is, object attributes are linked to dictionary items, and vice versa. For instance:</target>
        </trans-unit>
        <trans-unit id="0b074282024ac499a013305835e3e031bb0cfb61" translate="yes" xml:space="preserve">
          <source>In Falcon, these resources would be implemented with standard classes:</source>
          <target state="translated">Falcon에서 이러한 리소스는 표준 클래스로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="a5a492dec0d0d2e70784f07444c5189ec800c6af" translate="yes" xml:space="preserve">
          <source>In a similar manner, setting &lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt; from within a &lt;em&gt;process_resource&lt;/em&gt; method will short-circuit further request processing at that point.</source>
          <target state="translated">In a similar manner, setting &lt;a href=&quot;request_and_response#falcon.Response.complete&quot;&gt; &lt;code&gt;complete&lt;/code&gt; &lt;/a&gt; to &lt;code&gt;True&lt;/code&gt; from within a &lt;em&gt;process_resource&lt;/em&gt; method will short-circuit further request processing at that point.</target>
        </trans-unit>
        <trans-unit id="699b30bf1419460c9c124e24a30aff5107606e6e" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt;, the Python community maintains several other super-powered REPLs that you may wish to try, including &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt; and &lt;a href=&quot;https://github.com/jonathanslenders/ptpython&quot;&gt;ptpython&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt; 외에도 Python 커뮤니티는 &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/jonathanslenders/ptpython&quot;&gt;ptpython을&lt;/a&gt; 포함하여 시도해 볼 수있는 몇 가지 다른 강력한 REPL을 유지 관리 합니다.</target>
        </trans-unit>
        <trans-unit id="8806f0f4a0c590af54674826d84dc42c376869f1" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt;, the Python community maintains several other super-powered REPLs that you may wish to try, including &lt;a href=&quot;http://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt; and &lt;a href=&quot;https://github.com/jonathanslenders/ptpython&quot;&gt;ptpython&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0530ec8dc8904e4c7e3f4fe31b65046a6530c6" translate="yes" xml:space="preserve">
          <source>In addition to setting up NGINX and uWSGI to run your application, you will of course need to deploy a database server or any other services required by your application. Due to the wide variety of options and considerations in this space, we have chosen not to include ancillary services in this guide. However, the Falcon community is always happy to help with deployment questions, so &lt;a href=&quot;https://falcon.readthedocs.io/en/stable/community/help.html#chat&quot;&gt;please don&amp;rsquo;t hesitate to ask&lt;/a&gt;.</source>
          <target state="translated">In addition to setting up NGINX and uWSGI to run your application, you will of course need to deploy a database server or any other services required by your application. Due to the wide variety of options and considerations in this space, we have chosen not to include ancillary services in this guide. However, the Falcon community is always happy to help with deployment questions, so &lt;a href=&quot;https://falcon.readthedocs.io/en/stable/community/help.html#chat&quot;&gt;please don&amp;rsquo;t hesitate to ask&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7f1c6a570d3ec19e21bb42d5ed57b3ba48de9a24" translate="yes" xml:space="preserve">
          <source>In addition to the standard &lt;code&gt;req&lt;/code&gt; and &lt;code&gt;resp&lt;/code&gt; parameters, if the route&amp;rsquo;s template contains field expressions, any responder that desires to receive requests for that route must accept arguments named after the respective field names defined in the template.</source>
          <target state="translated">표준 &lt;code&gt;req&lt;/code&gt; 및 &lt;code&gt;resp&lt;/code&gt; 매개 변수 외에도 경로의 템플리트에 필드 표현식이 포함 된 경우 해당 경로에 대한 요청을 수신하려는 응답자는 템플리트에 정의 된 각 필드 이름의 이름을 지정한 인수를 승인해야합니다.</target>
        </trans-unit>
        <trans-unit id="37e503948302dfd5c658e47f034c52504db7765b" translate="yes" xml:space="preserve">
          <source>In addition to the standard HTML form-based method for specifying lists by repeating a given param multiple times, Falcon supports a more compact form in which the param may be given a single time but set to a &lt;code&gt;list&lt;/code&gt; of comma-separated elements (e.g., &amp;lsquo;foo=a,b,c&amp;rsquo;).</source>
          <target state="translated">Falcon은 주어진 매개 변수를 여러 번 반복하여 목록을 지정하는 표준 HTML 양식 기반 방법 외에도 매개 변수가 한 번만 제공 될 수 있지만 쉼표로 구분 된 요소 &lt;code&gt;list&lt;/code&gt; (예 : 'foo = a, b, c').</target>
        </trans-unit>
        <trans-unit id="118890d90e96b933e8371270d136929e0c807a4b" translate="yes" xml:space="preserve">
          <source>In cases where the response content is a stream (readable file-like object), Falcon will not supply a Content-Length header to the WSGI server unless &lt;code&gt;content_length&lt;/code&gt; is explicitly set. Consequently, the server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</source>
          <target state="translated">In cases where the response content is a stream (readable file-like object), Falcon will not supply a Content-Length header to the WSGI server unless &lt;code&gt;content_length&lt;/code&gt; is explicitly set. Consequently, the server may choose to use chunked encoding or one of the other strategies suggested by PEP-3333.</target>
        </trans-unit>
        <trans-unit id="fc561c9406795f72910b06f0cde0dcec2756b1d4" translate="yes" xml:space="preserve">
          <source>In order for a website or SPA to access an API hosted under a different domain name, that API must implement &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt;. For a public API, implementing CORS in Falcon can be as simple as implementing a middleware component similar to the following:</source>
          <target state="translated">웹 사이트 또는 SPA가 다른 도메인 이름으로 호스팅되는 API에 액세스하려면 해당 API가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS (Cross-Origin Resource Sharing)를&lt;/a&gt; 구현해야합니다 . 퍼블릭 API의 경우 Falcon에서 CORS를 구현하는 것은 다음과 유사한 미들웨어 구성 요소를 구현하는 것만 큼 간단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe6213bb775f037b434893a45a6eec78751b157a" translate="yes" xml:space="preserve">
          <source>In order to be converted, the field value must consist of a string of 32 hexadecimal digits, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122#section-3.&quot;&gt;RFC 4122, Section 3.&lt;/a&gt; Note, however, that hyphens and the URN prefix are optional.</source>
          <target state="translated">변환하려면 필드 값이 &lt;a href=&quot;https://tools.ietf.org/html/rfc4122#section-3.&quot;&gt;RFC 4122, 섹션 3에&lt;/a&gt; 정의 된대로 32 개의 16 진수 문자열로 구성되어야합니다 . 그러나 하이픈과 URN 접두어는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="9dfc5187f4dcb2463c61fe63cd810563880deeec" translate="yes" xml:space="preserve">
          <source>In order to pass data from a hook function to a resource function use the &lt;code&gt;req.context&lt;/code&gt; and &lt;code&gt;resp.context&lt;/code&gt; objects. These context objects are intended to hold request and response data specific to your app as it passes through the framework.</source>
          <target state="translated">In order to pass data from a hook function to a resource function use the &lt;code&gt;req.context&lt;/code&gt; and &lt;code&gt;resp.context&lt;/code&gt; objects. These context objects are intended to hold request and response data specific to your app as it passes through the framework.</target>
        </trans-unit>
        <trans-unit id="e2955b5f9a9365a1e5f99f7a25c6d736bce54cdf" translate="yes" xml:space="preserve">
          <source>In order to pass data from a middleware function to a resource function use the &lt;code&gt;req.context&lt;/code&gt; and &lt;code&gt;resp.context&lt;/code&gt; objects. These context objects are intended to hold request and response data specific to your app as it passes through the framework.</source>
          <target state="translated">In order to pass data from a middleware function to a resource function use the &lt;code&gt;req.context&lt;/code&gt; and &lt;code&gt;resp.context&lt;/code&gt; objects. These context objects are intended to hold request and response data specific to your app as it passes through the framework.</target>
        </trans-unit>
        <trans-unit id="55c9cb03432f148c56e64d7ca8a147d7e31670cc" translate="yes" xml:space="preserve">
          <source>In order to successfully remove a cookie, both the path and the domain must match the values that were used when the cookie was created.</source>
          <target state="translated">쿠키를 성공적으로 제거하려면 경로와 도메인이 쿠키를 만들 때 사용 된 값과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="c7e501ae12333b379bf363ec7e4648c1a4eb5663" translate="yes" xml:space="preserve">
          <source>In response, you should get a &lt;code&gt;404 Not Found&lt;/code&gt;. This is the default response given by Falcon when it can not find a resource that matches the requested URL path.</source>
          <target state="translated">이에 대한 응답으로 &lt;code&gt;404 Not Found&lt;/code&gt; 가 표시 됩니다. 요청 된 URL 경로와 일치하는 리소스를 찾을 수 없을 때 Falcon이 제공하는 기본 응답입니다.</target>
        </trans-unit>
        <trans-unit id="d7948b083d6be47d62a0ad48412dc61fedcbc69f" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;on_get()&lt;/code&gt; responder method for the resource, you can tell the user agent to download the file by setting the Content-Disposition header. Falcon includes the &lt;code&gt;downloadable_as&lt;/code&gt; property to make this easy:</source>
          <target state="translated">자원 의 &lt;code&gt;on_get()&lt;/code&gt; 응답기 메소드에서 Content-Disposition 헤더를 설정하여 파일을 다운로드하도록 사용자 에이전트에 지시 할 수 있습니다. Falcon에는 &lt;code&gt;downloadable_as&lt;/code&gt; 속성이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="373ae6e6a8be00aa191900f524e9305e8991c978" translate="yes" xml:space="preserve">
          <source>In the REST architectural style, the URL only identifies the resource; it does not specify what action to take on that resource. Instead, users choose from a set of standard methods. For HTTP, these are the familiar GET, POST, HEAD, etc. Clients can query a resource to discover which methods it supports.</source>
          <target state="translated">REST 아키텍처 스타일에서 URL은 자원 만 식별합니다. 해당 자원에 대해 수행 할 조치를 지정하지 않습니다. 대신, 사용자는 일련의 표준 방법 중에서 선택합니다. HTTP의 경우 이는 친숙한 GET, POST, HEAD 등입니다. 클라이언트는 리소스를 쿼리하여 지원하는 메소드를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8e62020562ee28dc1c16fd409fe7232d06420ea" translate="yes" xml:space="preserve">
          <source>In the case of the refactoring work from the last section, we could have inadvertently introduced a functional bug into the application that our unit tests would not have caught. This can happen when a bug is a result of an unexpected interaction between multiple units, between the application and the web server, or between the application and any external services it depends on.</source>
          <target state="translated">마지막 섹션의 리팩토링 작업의 경우 우연히 단위 테스트에서 포착하지 못한 기능 버그를 응용 프로그램에 도입했을 수 있습니다. 버그는 여러 장치 간, 응용 프로그램과 웹 서버 간 또는 응용 프로그램과 외부 서비스가 의존하는 예기치 않은 상호 작용으로 인해 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c5a58deb98f7460cd79f3ba8813acde5d9c5a7e" translate="yes" xml:space="preserve">
          <source>In the future, we hope to support an alternative approach, using the proposal from &lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;#584 on GitHub&lt;/a&gt;, that will afford combining all of these resources into a single class like so:</source>
          <target state="translated">앞으로 &lt;a href=&quot;https://github.com/falconry/falcon/issues/584&quot;&gt;GitHub의 # 584&lt;/a&gt; 제안을 사용하여 이러한 모든 리소스를 단일 클래스로 결합 할 수 있는 대체 접근 방식을 지원할 수 있도록 노력하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="25a08e3abce469512002fe63f94802055640cf2b" translate="yes" xml:space="preserve">
          <source>In the meantime, the workaround is to percent-encode the forward slash. If you don&amp;rsquo;t control the clients and can&amp;rsquo;t enforce this, you can implement a Falcon middleware component to rewrite the path before it is routed.</source>
          <target state="translated">그 동안 해결 방법은 슬래시를 퍼센트 인코딩하는 것입니다. 클라이언트를 제어하지 않고이를 적용 할 수없는 경우 경로가 라우팅되기 전에 경로를 다시 쓰도록 Falcon 미들웨어 구성 요소를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a45105a33fb9edabeec9b7961005f2ff5dc0439a" translate="yes" xml:space="preserve">
          <source>In the meantime, we recommend using &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; via Gunicorn or uWSGI in order to scale IO-bound services.</source>
          <target state="translated">한편, 우리는 사용하는 것이 좋습니다 &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; IO 바운드 서비스를 확장하기 위해 Gunicorn 또는 uWSGI를 통해입니다.</target>
        </trans-unit>
        <trans-unit id="f3c9f9153f4e990161c0bd6ee99075c43df7389c" translate="yes" xml:space="preserve">
          <source>In the meantime, we recommend using the battle-tested &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; library via Gunicorn or uWSGI to scale IO-bound services. &lt;a href=&quot;https://pypi.org/project/meinheld/&quot;&gt;meinheld&lt;/a&gt; has also been used successfully by the community to power high-throughput, low-latency services. Note that if you use Gunicorn, you can combine gevent and PyPy to achieve an impressive level of performance. (Unfortunately, uWSGI does not yet support using gevent and PyPy together.)</source>
          <target state="translated">In the meantime, we recommend using the battle-tested &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; library via Gunicorn or uWSGI to scale IO-bound services. &lt;a href=&quot;https://pypi.org/project/meinheld/&quot;&gt;meinheld&lt;/a&gt; has also been used successfully by the community to power high-throughput, low-latency services. Note that if you use Gunicorn, you can combine gevent and PyPy to achieve an impressive level of performance. (Unfortunately, uWSGI does not yet support using gevent and PyPy together.)</target>
        </trans-unit>
        <trans-unit id="cf5399eb35ba2879b341be4a158190a7043d1c78" translate="yes" xml:space="preserve">
          <source>In the meantime, you might try leveraging &lt;a href=&quot;http://uwsgi.readthedocs.io/en/latest/WebSockets.html&quot;&gt;uWSGI&amp;rsquo;s native WebSocket support&lt;/a&gt;, or implementing a standalone service via Aymeric Augustin&amp;rsquo;s handy &lt;a href=&quot;https://pypi.python.org/pypi/websockets/4.0.1&quot;&gt;websockets&lt;/a&gt; library.</source>
          <target state="translated">그 동안 &lt;a href=&quot;http://uwsgi.readthedocs.io/en/latest/WebSockets.html&quot;&gt;uWSGI의 기본 WebSocket 지원을&lt;/a&gt; 활용 하거나 Aymeric Augustin의 편리한 &lt;a href=&quot;https://pypi.python.org/pypi/websockets/4.0.1&quot;&gt;웹 소켓&lt;/a&gt; 라이브러리 를 통해 독립형 서비스를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee745d60b360e9ecb219ca0df13d51fc0a96ec9a" translate="yes" xml:space="preserve">
          <source>In the meantime, you might try leveraging &lt;a href=&quot;https://uwsgi.readthedocs.io/en/latest/WebSockets.html&quot;&gt;uWSGI&amp;rsquo;s native WebSocket support&lt;/a&gt;, or implementing a standalone service via Aymeric Augustin&amp;rsquo;s handy &lt;a href=&quot;https://pypi.python.org/pypi/websockets/4.0.1&quot;&gt;websockets&lt;/a&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cb31aa2791af21a83c68c38c391bc709aa6e7c" translate="yes" xml:space="preserve">
          <source>In this tutorial we&amp;rsquo;ll walk through building an API for a simple image sharing service. Along the way, we&amp;rsquo;ll discuss Falcon&amp;rsquo;s major features and introduce the terminology used by the framework.</source>
          <target state="translated">이 자습서에서는 간단한 이미지 공유 서비스를위한 API 작성 과정을 안내합니다. 그 과정에서 Falcon의 주요 기능에 대해 논의하고 프레임 워크에서 사용하는 용어를 소개합니다.</target>
        </trans-unit>
        <trans-unit id="c470cfbc90aab3d139aa58a6aabdd0ba91fefdd5" translate="yes" xml:space="preserve">
          <source>Individual path segments may contain one or more field expressions, and fields need not span the entire path segment. For example:</source>
          <target state="translated">개별 경로 세그먼트는 하나 이상의 필드 표현식을 포함 할 수 있으며 필드는 전체 경로 세그먼트에 걸쳐있을 필요는 없습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bfbf2381b5d95ec911e583415ac5ecdcfae76cbd" translate="yes" xml:space="preserve">
          <source>Initializer, unittest-style</source>
          <target state="translated">이니셜 라이저, 단위 테스트 스타일</target>
        </trans-unit>
        <trans-unit id="cdd6766fd4dcd0a1325aa3ce3b0152d72635d504" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;on_get()&lt;/code&gt; responder, we set the Content-Type header based on the filename extension, and then stream out the image directly from an open file handle. Note the use of &lt;code&gt;resp.content_length&lt;/code&gt;. Whenever using &lt;code&gt;resp.stream&lt;/code&gt; instead of &lt;code&gt;resp.body&lt;/code&gt; or &lt;code&gt;resp.data&lt;/code&gt;, you typically also specify the expected length of the stream using the Content-Length header, so that the web client knows how much data to read from the response.</source>
          <target state="translated">Inside the &lt;code&gt;on_get()&lt;/code&gt; responder, we set the Content-Type header based on the filename extension, and then stream out the image directly from an open file handle. Note the use of &lt;code&gt;resp.content_length&lt;/code&gt; . Whenever using &lt;code&gt;resp.stream&lt;/code&gt; instead of &lt;code&gt;resp.body&lt;/code&gt; or &lt;code&gt;resp.data&lt;/code&gt; , you typically also specify the expected length of the stream using the Content-Length header, so that the web client knows how much data to read from the response.</target>
        </trans-unit>
        <trans-unit id="9c2df83f3d4ca21e7ac476c414bcbe86b6611038" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;on_get()&lt;/code&gt; responder, we set the Content-Type header based on the filename extension, and then stream out the image directly from an open file handle. Note the use of &lt;code&gt;resp.stream_len&lt;/code&gt;. Whenever using &lt;code&gt;resp.stream&lt;/code&gt; instead of &lt;code&gt;resp.body&lt;/code&gt; or &lt;code&gt;resp.data&lt;/code&gt;, you typically also specify the expected length of the stream so that the web client knows how much data to read from the response.</source>
          <target state="translated">&lt;code&gt;on_get()&lt;/code&gt; 응답자 내에서 파일 이름 확장자를 기반으로 Content-Type 헤더를 설정 한 다음 열린 파일 핸들에서 직접 이미지를 스트리밍합니다. &lt;code&gt;resp.stream_len&lt;/code&gt; 사용에 유의하십시오 . 사용할 때마다 &lt;code&gt;resp.stream&lt;/code&gt; 대신 &lt;code&gt;resp.body&lt;/code&gt; 또는 &lt;code&gt;resp.data&lt;/code&gt; 를 웹 클라이언트는 응답에서 읽을 수있는 데이터의 양을 알 수 있도록, 일반적으로 또한 스트림의 예상 길이를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="20c52e00f1813458387eeb6afc3de39bf772d139" translate="yes" xml:space="preserve">
          <source>Installing one of the pre-built Falcon wheels is a great way to get up and running quickly. However, when deploying your application in production, you may wish to compile Falcon via Cython yourself, using the target system&amp;rsquo;s native toolchain.</source>
          <target state="translated">미리 제작 된 Falcon 휠 중 하나를 설치하는 것은 빠르게 시작하고 실행할 수있는 좋은 방법입니다. 그러나 프로덕션에 애플리케이션을 배포 할 때 타겟 시스템의 기본 도구 모음을 사용하여 Cython을 통해 직접 Falcon을 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a6ba0c4cabfe0d4ac09c7674094d6af47707925" translate="yes" xml:space="preserve">
          <source>Installing the Falcon wheel is a great way to get up and running quickly in a development environment, but for an extra speed boost when deploying your application in production, Falcon can compile itself with Cython.</source>
          <target state="translated">Falcon 휠을 설치하면 개발 환경에서 빠르게 시작하고 실행할 수 있지만 프로덕션 환경에서 응용 프로그램을 배포 할 때 속도를 높이기 위해 Falcon을 Cython으로 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffa93fdc6f201f73f4afdef23e97413631072207" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; are first-class WSGI apps, so you can use the standard pattern outlined in PEP-3333. In your main &amp;ldquo;app&amp;rdquo; file, you would simply wrap your api instance with a middleware app. For example:</source>
          <target state="translated">&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt; 인스턴스는 일류 WSGI 앱이므로 PEP-3333에 요약 된 표준 패턴을 사용할 수 있습니다. 기본 &quot;앱&quot;파일에서는 단순히 API 인스턴스를 미들웨어 앱으로 래핑합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="beb9336afe3f21a9e34bd3dec2c9d2162079e9ff" translate="yes" xml:space="preserve">
          <source>Instances of the Request and Response classes are passed into responders as the second and third arguments, respectively.</source>
          <target state="translated">Request 및 Response 클래스의 인스턴스는 각각 두 번째 및 세 번째 인수로 응답자에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="6752670ac4fd3d43c072341f57aeec0c7e6fa7d6" translate="yes" xml:space="preserve">
          <source>Introducing Hooks</source>
          <target state="translated">후크 소개</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="2da3b0cc715468e0f6e1467eeba3124b57f629bd" translate="yes" xml:space="preserve">
          <source>Intuitive request and response objects</source>
          <target state="translated">직관적 인 요청 및 응답 객체</target>
        </trans-unit>
        <trans-unit id="d10567ff32e2cdcd410d4f313e69bc56c6cb04b6" translate="yes" xml:space="preserve">
          <source>Intuitive routing via URI templates and REST-inspired resource classes</source>
          <target state="translated">URI 템플릿 및 REST 기반 리소스 클래스를 통한 직관적 인 라우팅</target>
        </trans-unit>
        <trans-unit id="21a4083cf1417f95583341860b00e4cf980825bb" translate="yes" xml:space="preserve">
          <source>Is Falcon thread-safe?</source>
          <target state="translated">팔콘은 안전합니까?</target>
        </trans-unit>
        <trans-unit id="9bcce22f9dbdcd7f672921f0d5c996d42b39040c" translate="yes" xml:space="preserve">
          <source>It can be used both when the set of request header fields in total is too large, and when a single header field is at fault. In the latter case, the response representation SHOULD specify which header field was too large.</source>
          <target state="translated">요청 헤더 필드 세트의 총계가 너무 큰 경우와 단일 헤더 필드에 결함이있는 경우 모두 사용할 수 있습니다. 후자의 경우, 응답 표현은 어떤 헤더 필드가 너무 큰지를 명시해야한다.</target>
        </trans-unit>
        <trans-unit id="018d6b1a58ca31202335662a9a601a6e16a05b08" translate="yes" xml:space="preserve">
          <source>It is always a good idea to keep an eye on the uWSGI logs, as they will contain exceptions and other information from your application that can help shed some light on unexpected behaviors.</source>
          <target state="translated">It is always a good idea to keep an eye on the uWSGI logs, as they will contain exceptions and other information from your application that can help shed some light on unexpected behaviors.</target>
        </trans-unit>
        <trans-unit id="8fb51f8278a2171f68f546709483135fee832a97" translate="yes" xml:space="preserve">
          <source>It is best to execute the application as a different OS user than the one who owns the source code for your application. The application user should &lt;em&gt;NOT&lt;/em&gt; have write access to your source. This mitigates the chance that someone could write a malicious Python file to your source directory through an upload endpoint you might define; when your application restarts, the malicious file is loaded and proceeds to cause any number of BadThings:sup:(tm) to happen.</source>
          <target state="translated">It is best to execute the application as a different OS user than the one who owns the source code for your application. The application user should &lt;em&gt;NOT&lt;/em&gt; have write access to your source. This mitigates the chance that someone could write a malicious Python file to your source directory through an upload endpoint you might define; when your application restarts, the malicious file is loaded and proceeds to cause any number of BadThings:sup:(tm) to happen.</target>
        </trans-unit>
        <trans-unit id="c038eb17f0b3cdc0510c29a89f2666a4b77e4075" translate="yes" xml:space="preserve">
          <source>It is common to carve out a portion of an app and reimplement it in Falcon to boost performance where it is most needed.</source>
          <target state="translated">It is common to carve out a portion of an app and reimplement it in Falcon to boost performance where it is most needed.</target>
        </trans-unit>
        <trans-unit id="dcb87d2567f1acf2241fcb1604adcab48584697b" translate="yes" xml:space="preserve">
          <source>It is helpful to switch to the project user (myproject) and use the home directory as the application environment.</source>
          <target state="translated">It is helpful to switch to the project user (myproject) and use the home directory as the application environment.</target>
        </trans-unit>
        <trans-unit id="afd3e7889014966b85509bbfdb14e86f5f393702" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s customary for the project&amp;rsquo;s top-level module to be called the same as the project, so let&amp;rsquo;s create another &amp;ldquo;look&amp;rdquo; folder inside the first one and mark it as a python module by creating an empty &lt;code&gt;__init__.py&lt;/code&gt; file in it:</source>
          <target state="translated">프로젝트의 최상위 모듈을 프로젝트와 동일하게 호출하는 것이 일반적이므로 첫 번째 폴더 안에 다른 &quot;look&quot;폴더를 만들고 빈 &lt;code&gt;__init__.py&lt;/code&gt; 파일을 만들어서 파이썬 모듈로 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="50a18558f9fd3156504b7e98d5be725724e68270" translate="yes" xml:space="preserve">
          <source>Its typical use is to avoid the &amp;ldquo;lost update&amp;rdquo; problem, where a client GETs a resource&amp;rsquo;s state, modifies it, and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. By requiring requests to be conditional, the server can assure that clients are working with the correct copies.</source>
          <target state="translated">일반적인 사용은 클라이언트가 자원 상태를 가져 와서 수정 한 후 서버에 다시 PUT하는 &quot;손실 된 업데이트&quot;문제를 피하는 것입니다. 반면에 제 3자가 서버의 상태를 수정하여 충돌을 일으키는 경우. 요청이 조건부 여야하므로 서버는 클라이언트가 올바른 사본을 사용하고 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f32c5ee83d86b64171401b1772268cfb078a6d0" translate="yes" xml:space="preserve">
          <source>JSON media handler.</source>
          <target state="translated">JSON media handler.</target>
        </trans-unit>
        <trans-unit id="d8a4fe63c907dd43b119a667e2bb9e84cd61e987" translate="yes" xml:space="preserve">
          <source>JSON serializable</source>
          <target state="translated">JSON serializable</target>
        </trans-unit>
        <trans-unit id="cb3e1dccbf3c2728522d139cac9df12544cd39e0" translate="yes" xml:space="preserve">
          <source>Keyword Arguments:</source>
          <target state="translated">키워드 인수 :</target>
        </trans-unit>
        <trans-unit id="30ee8e7c3e291db43f99c5ce645f3f9d498b40ca" translate="yes" xml:space="preserve">
          <source>Leadpages</source>
          <target state="translated">Leadpages</target>
        </trans-unit>
        <trans-unit id="852c5992c9af765f2beab8da287de2b470773866" translate="yes" xml:space="preserve">
          <source>Learning by Example</source>
          <target state="translated">예제를 통한 학습</target>
        </trans-unit>
        <trans-unit id="92f8d5466357ba2f499e90ebbc5c2705b6a3884f" translate="yes" xml:space="preserve">
          <source>Leftmost (i.e., most specific) subdomain from the hostname. If only a single domain name is given, &lt;code&gt;subdomain&lt;/code&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Leftmost (i.e., most specific) subdomain from the hostname. If only a single domain name is given, &lt;code&gt;subdomain&lt;/code&gt; will be &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f42be1ee25dbd07296612129ccc7a07c94d2953" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s address this by creating a separate class to represent a single image resource. We will then add an &lt;code&gt;on_get()&lt;/code&gt; method to respond to the path above.</source>
          <target state="translated">단일 이미지 리소스를 나타내는 별도의 클래스를 만들어이 문제를 해결해 보겠습니다. 그런 다음 &lt;code&gt;on_get()&lt;/code&gt; 메소드를 추가하여 위의 경로에 응답합니다.</target>
        </trans-unit>
        <trans-unit id="7ee08a574d1a802ee6f530ff24345e9f9274786b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check our progress:</source>
          <target state="translated">진행 상황을 확인합시다 :</target>
        </trans-unit>
        <trans-unit id="bb7dc3b2cbbfb10b4e2d4c87098b225d7debfbba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check to see if we broke anything with the changes above:</source>
          <target state="translated">위의 변경 사항으로 인해 문제가 발생했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="85ba237fdbf25479947322a67780dc7a619a4728" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we have the following URL schema:</source>
          <target state="translated">다음과 같은 URL 스키마가 있다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="c02033b9978d2121520a8c3527e3b8bf0755df92" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see a quick example of how this works. Try requesting an invalid image name from your application:</source>
          <target state="translated">이것이 어떻게 작동하는지에 대한 간단한 예를 보자. 애플리케이션에서 잘못된 이미지 이름을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="f668615d2a0c52f258debdb2c85756f9e38298d2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see this in action. Create a new test module, &lt;code&gt;tests/test_integration.py&lt;/code&gt; with the following contents:</source>
          <target state="translated">이것을 실제로 보자. 다음 내용 으로 새 테스트 모듈 &lt;code&gt;tests/test_integration.py&lt;/code&gt; 를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="88757d25a7e9d64fa5a5893d5b32a8ae3b0e36ee" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by adding an additional import statement to &lt;code&gt;test_app.py&lt;/code&gt;. We need to import two modules from &lt;code&gt;unittest.mock&lt;/code&gt; if you are using Python 3, or from &lt;code&gt;mock&lt;/code&gt; if you are using Python 2.</source>
          <target state="translated">&lt;code&gt;test_app.py&lt;/code&gt; 에 추가 import 문을 추가하여 시작하겠습니다 . Python 3을 사용하는 경우 &lt;code&gt;unittest.mock&lt;/code&gt; 또는 Python 2를 사용하는 경우 &lt;code&gt;mock&lt;/code&gt; 에서 두 개의 모듈을 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="d104822353ccb1cd987c76fc7132820bb6d1a262" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by installing the &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; package:</source>
          <target state="translated">&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; 패키지 를 설치하여 시작하겠습니다 :</target>
        </trans-unit>
        <trans-unit id="bb2629c03dee9892b0ea3aafbf0d883450e32aba" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try again:</source>
          <target state="translated">다시 해보자:</target>
        </trans-unit>
        <trans-unit id="92f85d751b68a2181f83f9c5fe071b221863b873" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. Restart Gunicorn (unless you&amp;rsquo;re using &lt;code&gt;--reload&lt;/code&gt;), and send a GET request to the resource:</source>
          <target state="translated">해 봅시다. 다시 시작 Gunicorn (당신이 사용하지 않는 &lt;code&gt;--reload&lt;/code&gt; 을 ), 및 자원에 대한 GET 요청을 보내 :</target>
        </trans-unit>
        <trans-unit id="720914fd632105ac2f8ba3fd36f070522568f1e9" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;); you may not use this file except in compliance with the License. You may obtain a copy of the License at</source>
          <target state="translated">Apache 라이센스, 버전 2.0 ( &quot;라이센스&quot;)에 따라 라이센스가 부여됩니다. 라이센스를 준수하지 않는 한이 파일을 사용할 수 없습니다. 라이센스 사본은 다음에서 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="translated">Apache 라이센스, 버전 2.0에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="65464c2e405228ec556cfe55dd96c47826c69912" translate="yes" xml:space="preserve">
          <source>Like the former test, this one still uses mocks. But the structure of the code has been improved through the techniques of componentization and dependency inversion, making the application more flexible and testable.</source>
          <target state="translated">이전 테스트와 마찬가지로이 테스트는 여전히 모의를 사용합니다. 그러나 코드의 구조는 구성 요소 화 및 종속성 반전 기술을 통해 개선되어 응용 프로그램을보다 유연하고 테스트 가능하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7a08658b70389680910d35a95cc829f66b2b4cbf" translate="yes" xml:space="preserve">
          <source>List items must be comma-separated or must be provided as multiple instances of the same param in the query string ala &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;.</source>
          <target state="translated">목록 항목은 쉼표로 구분되거나 쿼리 문자열 ala &lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt; 에서 동일한 매개 변수의 여러 인스턴스로 제공되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="bbb2d6ecb7b5eb5f1cd3829261340b7dd62fe433" translate="yes" xml:space="preserve">
          <source>Localized title describing the destination of the link (default &lt;code&gt;None&lt;/code&gt;). The value must be a two-member tuple in the form of (&lt;em&gt;language-tag&lt;/em&gt;, &lt;em&gt;text&lt;/em&gt;), where &lt;em&gt;language-tag&lt;/em&gt; is a standard language identifier as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;RFC 5646, Section 2.1&lt;/a&gt;, and &lt;em&gt;text&lt;/em&gt; is a Unicode string.</source>
          <target state="translated">링크 대상을 설명하는 현지화 된 제목 (기본값 &lt;code&gt;None&lt;/code&gt; ). 값은 ( &lt;em&gt;language-tag&lt;/em&gt; , &lt;em&gt;text&lt;/em&gt; ) 형식의 두 멤버 튜플이어야합니다. 여기서 &lt;em&gt;언어 태그&lt;/em&gt; 는 &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;RFC 5646, 섹션 2.1에&lt;/a&gt; 정의 된 표준 언어 식별자 이고 &lt;em&gt;텍스트&lt;/em&gt; 는 유니 코드 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="90586903c62a446d0bc9d65174e9dba59693c18e" translate="yes" xml:space="preserve">
          <source>Make a note of the path returned in the Location header, and use it to GET the image:</source>
          <target state="translated">Location 헤더에 반환 된 경로를 기록하고이를 사용하여 이미지를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9a2cabcf63c1e67ad03e2f45ca284498a3b9d2d1" translate="yes" xml:space="preserve">
          <source>Many developers choose to write tests like the above to sanity-check their application&amp;rsquo;s primary functionality, while leaving the bulk of testing to simulated requests and unit tests. These latter types of tests generally execute much faster and facilitate more fine-grained test assertions as compared to higher-level functional and system tests. That being said, testing strategies vary widely and you should choose the one that best suits your needs.</source>
          <target state="translated">많은 개발자들이 애플리케이션의 기본 기능을 검사하고, 시뮬레이션 된 요청과 단위 테스트에는 많은 테스트를 남겨두기 위해 위와 같은 테스트를 작성합니다. 후자의 유형의 테스트는 일반적으로 더 높은 수준의 기능 및 시스템 테스트와 비교하여 훨씬 더 빠르게 실행되고보다 세분화 된 테스트 어설 션을 용이하게합니다. 즉, 테스트 전략은 매우 다양하므로 필요에 가장 적합한 전략을 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="787d79a55cb633b3a73422c8fa4b6ab2f7d71b85" translate="yes" xml:space="preserve">
          <source>Map HTTP methods (e.g., GET, POST) to methods of a resource object.</source>
          <target state="translated">Map HTTP methods (e.g., GET, POST) to methods of a resource object.</target>
        </trans-unit>
        <trans-unit id="7cc06d01f95d26366da8c2b7eb2441cca4b925ac" translate="yes" xml:space="preserve">
          <source>Maps HTTP methods (e.g., &amp;lsquo;GET&amp;rsquo;, &amp;lsquo;POST&amp;rsquo;) to methods of a resource object.</source>
          <target state="translated">HTTP 메소드 (예 : 'GET', 'POST')를 자원 오브젝트의 메소드에 맵핑합니다.</target>
        </trans-unit>
        <trans-unit id="334c8de85e9732fb13aa2e3519b9a27fd950e459" translate="yes" xml:space="preserve">
          <source>Maps HTTP methods (e.g., GET, POST) to methods of a resource object.</source>
          <target state="translated">Maps HTTP methods (e.g., GET, POST) to methods of a resource object.</target>
        </trans-unit>
        <trans-unit id="c2fea1178c6c75a68937b02e8fd968c1d1278005" translate="yes" xml:space="preserve">
          <source>Maps HTTP methods not explicitly defined on a resource to default responders.</source>
          <target state="translated">자원에 명시 적으로 정의되지 않은 HTTP 메소드를 기본 응답자에 맵핑합니다.</target>
        </trans-unit>
        <trans-unit id="0c77aeece8c258113148c6fb487946bf97b34672" translate="yes" xml:space="preserve">
          <source>Media</source>
          <target state="translated">Media</target>
        </trans-unit>
        <trans-unit id="ca27d35ad3e3980222af003a4fc24313141850e1" translate="yes" xml:space="preserve">
          <source>Media Type Constants</source>
          <target state="translated">미디어 타입 상수</target>
        </trans-unit>
        <trans-unit id="eb8978ed84b5906ad4191a0b252828be64701bfa" translate="yes" xml:space="preserve">
          <source>Middleware</source>
          <target state="translated">Middleware</target>
        </trans-unit>
        <trans-unit id="a814d9bc1b088977b052c9b4a1d76a3643ee9bf4" translate="yes" xml:space="preserve">
          <source>Middleware components provide a way to execute logic before the framework routes each request, after each request is routed but before the target responder is called, or just before the response is returned for each request. Components are registered with the &lt;code&gt;middleware&lt;/code&gt; kwarg when instantiating Falcon&amp;rsquo;s &lt;a href=&quot;api#api&quot;&gt;API class&lt;/a&gt;.</source>
          <target state="translated">미들웨어 구성 요소는 프레임 워크가 각 요청을 라우팅하기 전에, 각 요청이 라우팅 된 후, 대상 응답자가 호출되기 전에 또는 각 요청에 대한 응답이 리턴되기 직전에 로직을 실행하는 방법을 제공합니다. Falcon의 &lt;a href=&quot;api#api&quot;&gt;API 클래스를&lt;/a&gt; 인스턴스화 할 때 구성 요소가 &lt;code&gt;middleware&lt;/code&gt; kwarg에 등록됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b1789e8099dd1eca9325abfa793416ee1d4f92e" translate="yes" xml:space="preserve">
          <source>Minimal attack surface for writing secure APIs</source>
          <target state="translated">보안 API 작성을위한 최소 공격 표면</target>
        </trans-unit>
        <trans-unit id="548f449b63ff41eaaff5a2d679ffa56b2015fc20" translate="yes" xml:space="preserve">
          <source>Misc.</source>
          <target state="translated">Misc.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="18a66692db95621eeac4cf868e07e123b8c17157" translate="yes" xml:space="preserve">
          <source>Mixin for &lt;code&gt;HTTPError&lt;/code&gt; child classes that have no representation.</source>
          <target state="translated">표현이없는 &lt;code&gt;HTTPError&lt;/code&gt; 하위 클래스 용 Mixin</target>
        </trans-unit>
        <trans-unit id="d634308003ff858f289d2833f637dfc9bee3fc78" translate="yes" xml:space="preserve">
          <source>Mixins</source>
          <target state="translated">Mixins</target>
        </trans-unit>
        <trans-unit id="57f32177faf3fe398357213955472adc14244ae6" translate="yes" xml:space="preserve">
          <source>Mock object representing a WSGI &lt;code&gt;start_response&lt;/code&gt; callable.</source>
          <target state="translated">WSGI &lt;code&gt;start_response&lt;/code&gt; 호출 가능을 나타내는 모의 객체 .</target>
        </trans-unit>
        <trans-unit id="d907ecbaf81629879335721ae59305b05f7d36e1" translate="yes" xml:space="preserve">
          <source>Mock resource for functional testing of framework components.</source>
          <target state="translated">프레임 워크 구성 요소의 기능 테스트를위한 모의 리소스</target>
        </trans-unit>
        <trans-unit id="4ada82816dfe2e0269ece2ee6874e24ee123b79d" translate="yes" xml:space="preserve">
          <source>Mock resource for functional testing.</source>
          <target state="translated">기능 테스트를위한 모의 리소스</target>
        </trans-unit>
        <trans-unit id="243f2cfc43bc372259c8987781f3df52a9f5d12d" translate="yes" xml:space="preserve">
          <source>More Features</source>
          <target state="translated">더 많은 기능</target>
        </trans-unit>
        <trans-unit id="ad8afd3c596f156c633397c752f4089b6e646ccc" translate="yes" xml:space="preserve">
          <source>Multiple instances of a header in the response are currently not supported; it is unspecified which value will &amp;ldquo;win&amp;rdquo; and be represented in &lt;code&gt;headers&lt;/code&gt;.</source>
          <target state="translated">응답에서 헤더의 여러 인스턴스는 현재 지원되지 않습니다. 어떤 값이 &quot;승리&quot;되고 &lt;code&gt;headers&lt;/code&gt; 로 표시되는지는 지정되지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="bca17c462ecc0230fc46035c8a188262af9df5f8" translate="yes" xml:space="preserve">
          <source>NGINX and uWSGI can communicate via normal TCP (using an IP address) or UNIX sockets (using a socket file). TCP sockets are easier to set up and generally work for simple deployments. If you want to have finer control over which processes, users, or groups may access the uWSGI application, or you are looking for a bit of a speed boost, consider using UNIX sockets. uWSGI can automatically drop privileges with &lt;code&gt;chmod-socket&lt;/code&gt; and switch users with &lt;code&gt;chown-socket&lt;/code&gt;.</source>
          <target state="translated">NGINX and uWSGI can communicate via normal TCP (using an IP address) or UNIX sockets (using a socket file). TCP sockets are easier to set up and generally work for simple deployments. If you want to have finer control over which processes, users, or groups may access the uWSGI application, or you are looking for a bit of a speed boost, consider using UNIX sockets. uWSGI can automatically drop privileges with &lt;code&gt;chmod-socket&lt;/code&gt; and switch users with &lt;code&gt;chown-socket&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2afc29d164b1520c5775acec995b087a323f52bb" translate="yes" xml:space="preserve">
          <source>NGINX is a powerful web server and reverse proxy and uWSGI is a fast and highly-configurable WSGI application server. Together, NGINX and uWSGI create a one-two punch of speed and functionality which will suffice for most applications. In addition, this stack provides the building blocks for a horizontally-scalable and highly-available (HA) production environment and the configuration below is just a starting point.</source>
          <target state="translated">NGINX is a powerful web server and reverse proxy and uWSGI is a fast and highly-configurable WSGI application server. Together, NGINX and uWSGI create a one-two punch of speed and functionality which will suffice for most applications. In addition, this stack provides the building blocks for a horizontally-scalable and highly-available (HA) production environment and the configuration below is just a starting point.</target>
        </trans-unit>
        <trans-unit id="67bcd0286508abed1b4948a73af4a37a0ebec226" translate="yes" xml:space="preserve">
          <source>NGINX natively supports &lt;a href=&quot;https://uwsgi-docs.readthedocs.io/en/latest/Protocol.html&quot;&gt;the uwsgi protocol&lt;/a&gt;, for efficiently proxying requests to uWSGI. In NGINX parlance, we will create an &amp;ldquo;upstream&amp;rdquo; and direct that upstream (via a TCP socket) to our now-running uWSGI application.</source>
          <target state="translated">NGINX natively supports &lt;a href=&quot;https://uwsgi-docs.readthedocs.io/en/latest/Protocol.html&quot;&gt;the uwsgi protocol&lt;/a&gt;, for efficiently proxying requests to uWSGI. In NGINX parlance, we will create an &amp;ldquo;upstream&amp;rdquo; and direct that upstream (via a TCP socket) to our now-running uWSGI application.</target>
        </trans-unit>
        <trans-unit id="5691cfb1dbb0e884359880488ab13de4bf56817a" translate="yes" xml:space="preserve">
          <source>Named groups are converted to kwargs and passed to the sink as such.</source>
          <target state="translated">명명 된 그룹은 크워 그로 변환되어 싱크로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d7969e43451a120c70b8e5d07110ba4ad27195b7" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects are created for each incoming HTTP request. However, a single instance of each resource class attached to a route is shared among all requests. Therefore, as long as you are careful about the way responders access class member variables to avoid conflicts, your WSGI app should be thread-safe.</source>
          <target state="translated">들어오는 각 HTTP 요청에 대해 새 &lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 오브젝트가 작성됩니다. 그러나 경로에 연결된 각 리소스 클래스의 단일 인스턴스는 모든 요청간에 공유됩니다. 따라서 응답자가 충돌을 피하기 위해 클래스 멤버 변수에 액세스하는 방법에주의를 기울이는 한 WSGI 앱은 스레드로부터 안전해야합니다.</target>
        </trans-unit>
        <trans-unit id="f6866423bbaa10f59e29cb66c0edc110fe67dd9d" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s take a look at the &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; class. Install &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython&lt;/a&gt; and fire it up:</source>
          <target state="translated">다음으로 &lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt; 클래스를 살펴 보겠습니다 . &lt;a href=&quot;http://ipython.org/&quot;&gt;IPython을&lt;/a&gt; 설치 하고 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="040061e07fa8c21c774ef9e7536d2926ad3620e6" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s take a look at the &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; class. Install &lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt; and fire it up:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e494b824e11d9d622e32a4a565a6443d8a3e095" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s wire up this resource and see it in action. Go back to &lt;code&gt;app.py&lt;/code&gt; and modify it so that it looks something like this:</source>
          <target state="translated">다음으로이 리소스를 연결하여 실제로 살펴 보겠습니다. &lt;code&gt;app.py&lt;/code&gt; 로 돌아가서 다음 과 같이 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="4209fb7cbf7f0e812d9797777d0409e02960a358" translate="yes" xml:space="preserve">
          <source>Next, create a virtual environment which can be used to install your dependencies.</source>
          <target state="translated">Next, create a virtual environment which can be used to install your dependencies.</target>
        </trans-unit>
        <trans-unit id="ddacfc1661cfeb685db5bd25390532f48419c70a" translate="yes" xml:space="preserve">
          <source>Next, edit &lt;code&gt;test_app.py&lt;/code&gt; to look like this:</source>
          <target state="translated">다음으로 &lt;code&gt;test_app.py&lt;/code&gt; 를 다음과 같이 편집 하십시오 :</target>
        </trans-unit>
        <trans-unit id="7499c9553e8201168cd3cda6c25fd9dc1c69664c" translate="yes" xml:space="preserve">
          <source>Next, install the &lt;code&gt;requests&lt;/code&gt; package (as required by the new test) and make sure Gunicorn is up and running:</source>
          <target state="translated">다음으로 새로운 테스트에 필요한 &lt;code&gt;requests&lt;/code&gt; 패키지를 설치하고 Gunicorn이 작동하고 실행 중인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bba085c247dcbacb5400d9c16895f8dfd47bf409" translate="yes" xml:space="preserve">
          <source>Next, just for fun, let&amp;rsquo;s modify our resource to use &lt;a href=&quot;http://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt; instead of JSON. Start by installing the relevant package:</source>
          <target state="translated">다음으로 재밌게 JSON 대신 &lt;a href=&quot;http://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt; 을 사용하도록 리소스를 수정 해 보겠습니다 . 관련 패키지를 설치하여 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="24f66dba4d7edbc257d74d9ca7e32ff9337b6df7" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s create a hook that will run before each request to post a message. Add this method below the definition of &lt;code&gt;ALLOWED_IMAGE_TYPES&lt;/code&gt;:</source>
          <target state="translated">다음으로, 메시지를 게시하기 위해 각 요청 전에 실행되는 후크를 작성해 봅시다. &lt;code&gt;ALLOWED_IMAGE_TYPES&lt;/code&gt; 정의 아래에이 메소드를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee7da3c6f00cf356a744d0b4531f6b00a2e8303a" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s create a new file that will be the entry point into your app:</source>
          <target state="translated">다음으로 앱의 진입 점이 될 새 파일을 만들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="44ef4da65d145f89188969132317d69cce65b73f" translate="yes" xml:space="preserve">
          <source>No dependencies on other Python packages</source>
          <target state="translated">No dependencies on other Python packages</target>
        </trans-unit>
        <trans-unit id="e0c18f456a6d04471bd59ac6cfc9034a5e24fdcd" translate="yes" xml:space="preserve">
          <source>None of the ranges in the request&amp;rsquo;s Range header field overlap the current extent of the selected resource or that the set of ranges requested has been rejected due to invalid ranges or an excessive request of small or overlapping ranges.</source>
          <target state="translated">요청의 범위 헤더 필드에있는 범위 중 어느 것도 선택된 자원의 현재 범위와 겹치지 않거나 유효하지 않은 범위 또는 범위가 너무 작거나 겹치는 요청으로 인해 요청 된 범위 세트가 거부되었습니다.</target>
        </trans-unit>
        <trans-unit id="88d30ed9760bbdf6947fcb4020169e27cb9e89cb" translate="yes" xml:space="preserve">
          <source>Normally, when a header has multiple values, they will be returned as a single, comma-delimited string. However, the Set-Cookie header does not support this format, and so attempting to retrieve it will raise an error.</source>
          <target state="translated">Normally, when a header has multiple values, they will be returned as a single, comma-delimited string. However, the Set-Cookie header does not support this format, and so attempting to retrieve it will raise an error.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="0cc489a90a364043364ddfd58c307e3bcd78a435" translate="yes" xml:space="preserve">
          <source>Note also that any exception (not just instances of &lt;a href=&quot;#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;) can be caught, logged, and otherwise handled at the global level by registering one or more custom error handlers. See also &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;add_error_handler()&lt;/code&gt;&lt;/a&gt; to learn more about this feature.</source>
          <target state="translated">또한 하나 이상의 사용자 정의 오류 처리기를 등록 하면 예외 ( &lt;a href=&quot;#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 인스턴스뿐만 아니라 )를 전역 수준에서 포착, 기록 및 처리 할 수 ​​있습니다. 이 기능에 대한 자세한 내용은 &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;add_error_handler()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9376671dd97b6dfe70024e34cf69a93a4f4303a" translate="yes" xml:space="preserve">
          <source>Note also that routing is also normalized, so adding a route for &amp;ldquo;/foo/bar&amp;rdquo; also implicitly adds a route for &amp;ldquo;/foo/bar/&amp;rdquo;. Requests coming in for either path will be sent to the same resource.</source>
          <target state="translated">또한 라우팅도 정규화되므로 &quot;/ foo / bar&quot;에 대한 경로를 추가하면 &quot;/ foo / bar /&quot;에 대한 경로도 암시 적으로 추가됩니다. 어느 경로로든 들어오는 요청은 동일한 리소스로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="4af56060e2ad136105d5f57d6e6ea5d263917ca3" translate="yes" xml:space="preserve">
          <source>Note also that you can pass additional arguments to your hook function as needed:</source>
          <target state="translated">필요에 따라 추가 인수를 후크 함수에 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b63082acee31325f8c8d1ef3357c092c52915e84" translate="yes" xml:space="preserve">
          <source>Note that calling this method is equivalent to setting the corresponding header property (when said property is available) to &lt;code&gt;None&lt;/code&gt;. For example:</source>
          <target state="translated">이 메소드를 호출하는 것은 해당 헤더 속성 (해당 속성을 사용할 수있는 경우)을 &lt;code&gt;None&lt;/code&gt; 으로 설정하는 것과 같습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8c6a3b23f16436dd6f6588ed90a03d5ddc6c6a5" translate="yes" xml:space="preserve">
          <source>Note that each component need not implement all &lt;code&gt;process_*&lt;/code&gt; methods; in the case that one of the three methods is missing, it is treated as a noop in the stack. For example, if &lt;code&gt;mob2&lt;/code&gt; did not implement &lt;em&gt;process_request&lt;/em&gt; and &lt;code&gt;mob3&lt;/code&gt; did not implement &lt;em&gt;process_response&lt;/em&gt;, the execution order would look like this:</source>
          <target state="translated">각 컴포넌트는 모든 &lt;code&gt;process_*&lt;/code&gt; 메소드를 구현할 필요는 없습니다 . 세 가지 방법 중 하나가 누락 된 경우 스택에서 noop으로 처리됩니다. 예를 들어, &lt;code&gt;mob2&lt;/code&gt; 가 구현하지 않았다 &lt;em&gt;process_request&lt;/em&gt; 및 &lt;code&gt;mob3&lt;/code&gt; 가 구현하지 않았다 &lt;em&gt;process_response을&lt;/em&gt; , 실행 순서는 다음과 같이 보일 것이다 :</target>
        </trans-unit>
        <trans-unit id="36fceccbaaba2c4e1d9ebffaac1d7f3f2826f8df" translate="yes" xml:space="preserve">
          <source>Note that in many cases clients can still access the denied resource by using technical countermeasures such as a VPN or the Tor network.</source>
          <target state="translated">많은 경우 클라이언트는 여전히 VPN이나 ​​Tor 네트워크와 같은 기술적 대책을 사용하여 거부 된 리소스에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e86dd5d358447b7cf5ae9a0dcf0ee44a4b6422c" translate="yes" xml:space="preserve">
          <source>Note that in the above example, the WSGI callable is simple assigned to a variable, &lt;code&gt;application&lt;/code&gt;, rather than being passed to a self-hosting WSGI server such as &lt;code&gt;wsgiref.simple_server.make_server&lt;/code&gt;. Starting an independent WSGI server in your &lt;code&gt;wsgi.py&lt;/code&gt; file will render unexpected results.</source>
          <target state="translated">Note that in the above example, the WSGI callable is simple assigned to a variable, &lt;code&gt;application&lt;/code&gt; , rather than being passed to a self-hosting WSGI server such as &lt;code&gt;wsgiref.simple_server.make_server&lt;/code&gt; . Starting an independent WSGI server in your &lt;code&gt;wsgi.py&lt;/code&gt; file will render unexpected results.</target>
        </trans-unit>
        <trans-unit id="d475bd08d5adbf2c515dd7ccf5b3e8bc98571274" translate="yes" xml:space="preserve">
          <source>Note that static routes are matched in LIFO order, and are only attempted after checking dynamic routes and sinks.</source>
          <target state="translated">정적 경로는 LIFO 순서로 일치하며 동적 경로 및 싱크를 확인한 후에 만 ​​시도됩니다.</target>
        </trans-unit>
        <trans-unit id="e66ff60a49f68bbc89dc53af6e4c8a1b815fca59" translate="yes" xml:space="preserve">
          <source>Note that the 511 response SHOULD NOT contain a challenge or the authentication interface itself, because clients would show the interface as being associated with the originally requested URL, which may cause confusion.</source>
          <target state="translated">클라이언트는 원래 요청한 URL과 연관된 것으로 인터페이스를 표시하므로 혼동을 유발할 수 있으므로 511 응답에는 챌린지 또는 인증 인터페이스 자체가 포함되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c93012d2afb2c25cd3cc6058c1c61dff35d327fe" translate="yes" xml:space="preserve">
          <source>Note the method signature. &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;start_response&lt;/code&gt; are standard WSGI params. Falcon adds a thin abstraction on top of these params so you don&amp;rsquo;t have to interact with them directly.</source>
          <target state="translated">메소드 서명에 유의하십시오. &lt;code&gt;env&lt;/code&gt; 및 &lt;code&gt;start_response&lt;/code&gt; 는 표준 WSGI 매개 변수입니다. Falcon은 이러한 매개 변수 위에 얇은 추상화를 추가하므로 직접 상호 작용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c5e9e35ded1fcb694b65fd0f633df85308336b46" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;falcon.HTTP_201&lt;/code&gt; for setting the response status to &amp;ldquo;201 Created&amp;rdquo;. We could have also used the &lt;code&gt;falcon.HTTP_CREATED&lt;/code&gt; alias. For a full list of predefined status strings, simply call &lt;code&gt;help()&lt;/code&gt; on &lt;code&gt;falcon.status_codes&lt;/code&gt;:</source>
          <target state="translated">사용 주 &lt;code&gt;falcon.HTTP_201&lt;/code&gt; 을 &quot;만든 201&quot;에 대한 응답 상태를 설정. &lt;code&gt;falcon.HTTP_CREATED&lt;/code&gt; 별칭을 사용할 수도 있습니다 . 사전 정의 된 상태 문자열의 전체 목록 을 &lt;code&gt;falcon.status_codes&lt;/code&gt; 에서 &lt;code&gt;help()&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4d61684c386cf1357212f71687449cd6b93662a" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;resp.data&lt;/code&gt; in lieu of &lt;code&gt;resp.body&lt;/code&gt;. If you assign a bytestring to the latter, Falcon will figure it out, but you can realize a small performance gain by assigning directly to &lt;code&gt;resp.data&lt;/code&gt;.</source>
          <target state="translated">사용 주 &lt;code&gt;resp.data&lt;/code&gt; 대신 &lt;code&gt;resp.body&lt;/code&gt; 을 . &lt;code&gt;resp.data&lt;/code&gt; 을 후자 에 할당하면 Falcon이이 를 알아낼 수 있지만 resp.data에 직접 할당하여 약간의 성능 향상을 실현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db2b7a93b8c067b65f95460059125d0d3334ddb1" translate="yes" xml:space="preserve">
          <source>Note, however, that it is more efficient to handle permanent redirects directly with your web server, if possible, rather than placing additional load on your app for such requests.</source>
          <target state="translated">그러나 가능하면 웹 서버로 직접 리디렉션을 처리하는 것이 그러한 요청에 대해 앱에 추가로드를 배치하는 것보다 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="1ecff5eaabb3037179de7dc9547660f73b541900" translate="yes" xml:space="preserve">
          <source>Note: The existence of the 503 status code does not imply that a server has to use it when becoming overloaded. Some servers might simply refuse the connection.</source>
          <target state="translated">참고 : 503 상태 코드가 있다고해서 서버가 오버로드 될 때 서버가이를 사용해야한다는 의미는 아닙니다. 일부 서버는 단순히 연결을 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39c4d15abddf9325d73ca18f18551f31059e5666" translate="yes" xml:space="preserve">
          <source>Now add the following test:</source>
          <target state="translated">이제 다음 테스트를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e9d8aca9faa254fe883d9f972dd0e17b781893fc" translate="yes" xml:space="preserve">
          <source>Now give it a try:</source>
          <target state="translated">이제 시도해보십시오.</target>
        </trans-unit>
        <trans-unit id="c7e4a0570b7b50b22c55214d53531c71113414ce" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s try that request again:</source>
          <target state="translated">이제 해당 요청을 다시 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="bbf0f3d4096127fd2f148d2712bce50cd315ab0b" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s wire everything up and give it a try. Edit &lt;code&gt;app.py&lt;/code&gt; to look similar to the following:</source>
          <target state="translated">이제 모든 것을 연결하고 시도해 봅시다. 다음과 유사하게 &lt;code&gt;app.py&lt;/code&gt; 를 편집하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7bd0e17feeeae9ce2e92ccf9d171ea0f4c9d9e1" translate="yes" xml:space="preserve">
          <source>Now re-run your app and try to POST another picture:</source>
          <target state="translated">이제 앱을 다시 실행하고 다른 사진을 게시하십시오.</target>
        </trans-unit>
        <trans-unit id="98619ab3e90c40f4dec5deb685153f51baa0a5f5" translate="yes" xml:space="preserve">
          <source>Now that we have a way of getting images into the service, we of course need a way to get them back out. What we want to do is return an image when it is requested, using the path that came back in the Location header.</source>
          <target state="translated">이제 이미지를 서비스로 가져 오는 방법이 생겼으므로 이미지를 다시 가져올 수있는 방법이 필요합니다. 우리가하고 싶은 일은 Location 헤더에 돌아온 경로를 사용하여 이미지가 요청되면 이미지를 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="dd505283733ba9915b48c0398501818491056d9d" translate="yes" xml:space="preserve">
          <source>Now that you have a simple Falcon app, you can take it for a spin with a WSGI server. Python includes a reference server for self-hosting, but let&amp;rsquo;s use something more robust that you might use in production.</source>
          <target state="translated">이제 간단한 Falcon 앱이 생겼으므로 WSGI 서버를 사용하여 회전 할 수 있습니다. 파이썬에는 자체 호스팅을위한 참조 서버가 포함되어 있지만 프로덕션 환경에서 사용할 수있는보다 강력한 것을 사용합시다.</target>
        </trans-unit>
        <trans-unit id="2a01f63f486459ed34617ea6d081761561d7696d" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve added a hook to validate the media type, you can see it in action by attempting to POST something nefarious:</source>
          <target state="translated">미디어 유형의 유효성을 검사하기위한 후크를 추가 했으므로 사악한 것을 POST하여 시도해 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb09b7e68f160c179881e1be238fcab1ae3d14a7" translate="yes" xml:space="preserve">
          <source>Now you can re-run the app against the desired storage directory:</source>
          <target state="translated">이제 원하는 스토리지 디렉토리에 대해 앱을 다시 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91e2f3d05172882aecebf31917977a53c313d4ae" translate="yes" xml:space="preserve">
          <source>Now you should see a failed test assertion regarding &lt;code&gt;mock_file_open&lt;/code&gt;. To fix this, we need to switch our strategy from monkey-patching to dependency injection. Return to &lt;code&gt;app.py&lt;/code&gt; and modify it to look similar to the following:</source>
          <target state="translated">이제 &lt;code&gt;mock_file_open&lt;/code&gt; 에 관한 테스트 어설 션이 실패한 것을 볼 수 있습니다 . 이 문제를 해결하려면 전략을 원숭이 패치에서 의존성 주입으로 전환해야합니다. &lt;code&gt;app.py&lt;/code&gt; 로 돌아가서 다음과 유사하게 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="3c0d7bb971bdb5c08bedbfac07fd1c1c425a74e5" translate="yes" xml:space="preserve">
          <source>Now, before every call to that responder, Falcon will first invoke &lt;code&gt;validate_image_type()&lt;/code&gt;. There isn&amp;rsquo;t anything special about this function, other than it must accept four arguments. Every hook takes, as its first two arguments, a reference to the same &lt;code&gt;req&lt;/code&gt; and &lt;code&gt;resp&lt;/code&gt; objects that are passed into responders. The &lt;code&gt;resource&lt;/code&gt; argument is a Resource instance associated with the request. The fourth argument, named &lt;code&gt;params&lt;/code&gt; by convention, is a reference to the kwarg dictionary Falcon creates for each request. &lt;code&gt;params&lt;/code&gt; will contain the route&amp;rsquo;s URI template params and their values, if any.</source>
          <target state="translated">이제 해당 응답자를 호출하기 전에 Falcon은 먼저 &lt;code&gt;validate_image_type()&lt;/code&gt; 호출 합니다. 이 함수에는 특별한 인수가 없습니다. 네 가지 인수를 받아 들여야합니다. 모든 후크는 첫 번째 두 인수 로 응답자에 전달 된 동일한 &lt;code&gt;req&lt;/code&gt; 및 &lt;code&gt;resp&lt;/code&gt; 오브젝트에 대한 참조를 갖 습니다. &lt;code&gt;resource&lt;/code&gt; 인수는 요청과 관련된 리소스 인스턴스입니다. 규칙에 따라 &lt;code&gt;params&lt;/code&gt; 라는 네 번째 인수 는 Falcon이 각 요청에 대해 작성하는 kwarg 사전에 대한 참조입니다. &lt;code&gt;params&lt;/code&gt; 는 경로의 URI 템플릿 params 및 해당되는 경우 해당 값을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="fd6c6ddd10a2465ece51ef4ceaca3f984e2c46ae" translate="yes" xml:space="preserve">
          <source>Now, if you check your storage directory, it should contain a copy of the image you just POSTed.</source>
          <target state="translated">이제 저장소 디렉토리를 확인하면 방금 POST 한 이미지의 사본이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="bdc654d076aee6522061c2f914572bdb32eed5ea" translate="yes" xml:space="preserve">
          <source>Now, if you do make changes to Falcon itself, please consider contributing your awesome work back to the community.</source>
          <target state="translated">이제 Falcon 자체를 변경하면 멋진 작업을 커뮤니티에 기여하는 것을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8530beb9e731d4423fc757ab1d956b564b22f5d0" translate="yes" xml:space="preserve">
          <source>Now, in a different terminal, try querying the running app with curl:</source>
          <target state="translated">이제 다른 터미널에서 curl로 실행중인 앱을 쿼리하십시오.</target>
        </trans-unit>
        <trans-unit id="4645c8ed3135645d62a0315b3ea44a255c61a254" translate="yes" xml:space="preserve">
          <source>Now, open &lt;code&gt;app.py&lt;/code&gt; in your favorite text editor and add the following lines:</source>
          <target state="translated">이제 좋아하는 텍스트 편집기에서 &lt;code&gt;app.py&lt;/code&gt; 를 열고 다음 행을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="76c45fddb2fc5eb950e43270255aba702e6e8612" translate="yes" xml:space="preserve">
          <source>Now, type the following to introspect the &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; callable:</source>
          <target state="translated">이제 &lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt; 호출 가능 을 검사하려면 다음을 입력하십시오 .</target>
        </trans-unit>
        <trans-unit id="542e2878291f6dfa04257a48e2c5d435711bb67a" translate="yes" xml:space="preserve">
          <source>Now, when a request comes in for &lt;code&gt;/images&lt;/code&gt;, Falcon will call the responder on the images resource that corresponds to the requested HTTP method.</source>
          <target state="translated">이제 &lt;code&gt;/images&lt;/code&gt; 에 대한 요청이 들어 오면 Falcon은 요청 된 HTTP 메소드에 해당하는 이미지 리소스에서 응답자를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a9ce1e4316147895f11091181c84e46cd56c6589" translate="yes" xml:space="preserve">
          <source>Now, you might imagine that such a hook should apply to all responders for a resource. In fact, hooks can be applied to an entire resource by simply decorating the class:</source>
          <target state="translated">이제 이러한 후크가 자원에 대한 모든 응답자에게 적용되어야한다고 상상할 수 있습니다. 실제로 클래스를 간단히 장식하여 후크를 전체 리소스에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ca8a88a675f12112df167d170cf48d0f7d8a616" translate="yes" xml:space="preserve">
          <source>Number of times &lt;code&gt;start_response&lt;/code&gt; was called.</source>
          <target state="translated">Number of times &lt;code&gt;start_response&lt;/code&gt; was called.</target>
        </trans-unit>
        <trans-unit id="86fc1c4601765aeab55471f454ffc192454be653" translate="yes" xml:space="preserve">
          <source>On Windows where Gunicorn and uWSGI don&amp;rsquo;t work yet you can use Waitress server</source>
          <target state="translated">Gunicorn 및 uWSGI가 아직 작동하지 않는 Windows에서는 웨이트리스 서버를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="f7f468da57ab95ccfea60accc1f063e882b32c98" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;media&lt;/code&gt; is called on a request, it&amp;rsquo;ll consume the request&amp;rsquo;s stream.</source>
          <target state="translated">요청시 &lt;code&gt;media&lt;/code&gt; 가 호출 되면 요청 스트림을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c9fc352cefc141d44ae45888de551723388e2571" translate="yes" xml:space="preserve">
          <source>Once the docs have been built, you can view them by opening the following index page in your browser. On OS X it&amp;rsquo;s as simple as:</source>
          <target state="translated">문서가 작성되면 브라우저에서 다음 색인 페이지를 열어서 볼 수 있습니다. OS X에서는 다음과 같이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="9c6f9bc1cfe0a36fa875aa95eae59b41d61bd809" translate="yes" xml:space="preserve">
          <source>Once you have cloned the repo or downloaded a tarball from GitHub, you can install Falcon like this:</source>
          <target state="translated">repo를 복제하거나 GitHub에서 tarball을 다운로드하면 다음과 같이 Falcon을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="235a19fcfad1734633adce481044cbccef2ee6e8" translate="yes" xml:space="preserve">
          <source>One of the headers in the request is invalid.</source>
          <target state="translated">요청의 헤더 중 하나가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e0fd9c73b449983900d100530d61a2ef14e4694" translate="yes" xml:space="preserve">
          <source>One of these methods should be used instead of &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt;&lt;code&gt;set_header()&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt;&lt;code&gt;set_header()&lt;/code&gt;&lt;/a&gt; you cannot set multiple headers with the same name (which is how multiple cookies are sent to the client).</source>
          <target state="translated">One of these methods should be used instead of &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt; &lt;code&gt;set_header()&lt;/code&gt; &lt;/a&gt;. With &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt; &lt;code&gt;set_header()&lt;/code&gt; &lt;/a&gt; you cannot set multiple headers with the same name (which is how multiple cookies are sent to the client).</target>
        </trans-unit>
        <trans-unit id="9da69c5adfc9a6bc07f069bc69f0693cea5f84cf" translate="yes" xml:space="preserve">
          <source>One or more authentication challenges to use as the value of the WWW-Authenticate header in the response.</source>
          <target state="translated">응답에서 WWW-Authenticate 헤더의 값으로 사용할 인증 문제가 하나 이상 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ae7c0235075906063857c63fb8a07d47ea15a3e" translate="yes" xml:space="preserve">
          <source>One or more conditions given in the request header fields evaluated to false when tested on the server.</source>
          <target state="translated">요청 헤더 필드에 제공된 하나 이상의 조건이 서버에서 테스트 될 때 false로 평가되었습니다.</target>
        </trans-unit>
        <trans-unit id="3f051c3e9d0e520323a23d1d17763302fa635a56" translate="yes" xml:space="preserve">
          <source>Only continous ranges are supported (e.g., &amp;ldquo;bytes=0-0,-1&amp;rdquo; would result in an HTTPBadRequest exception when the attribute is accessed.)</source>
          <target state="translated">연속 범위 만 지원됩니다 (예 : &quot;bytes = 0-0, -1&quot;은 속성에 액세스 할 때 HTTPBadRequest 예외를 발생시킵니다).</target>
        </trans-unit>
        <trans-unit id="81857be8c8acd02b58bbe58a7acec1b652fc7776" translate="yes" xml:space="preserve">
          <source>Only depends on six and mimeparse</source>
          <target state="translated">6과 mimeparse에만 의존</target>
        </trans-unit>
        <trans-unit id="cfd55528500ce82ff43d207937034ac2da5afd6c" translate="yes" xml:space="preserve">
          <source>Only noop &lt;code&gt;on_get()&lt;/code&gt; and &lt;code&gt;on_post()&lt;/code&gt; responders are implemented; when overriding these, or adding additional responders in child classes, they can be decorated with the &lt;a href=&quot;#falcon.testing.capture_responder_args&quot;&gt;&lt;code&gt;falcon.testing.capture_responder_args()&lt;/code&gt;&lt;/a&gt; hook in order to capture the &lt;em&gt;req&lt;/em&gt;, &lt;em&gt;resp&lt;/em&gt;, and &lt;em&gt;params&lt;/em&gt; arguments that are passed to the responder. Responders may also be decorated with the &lt;code&gt;falcon.testing.set_resp_defaults()&lt;/code&gt; hook in order to set &lt;em&gt;resp&lt;/em&gt; properties to default &lt;em&gt;status&lt;/em&gt;, &lt;em&gt;body&lt;/em&gt;, and &lt;em&gt;header&lt;/em&gt; values.</source>
          <target state="translated">noop &lt;code&gt;on_get()&lt;/code&gt; 및 &lt;code&gt;on_post()&lt;/code&gt; 응답자 만 구현됩니다. 이를 오버라이드하거나 하위 클래스에 응답자를 추가 할 때 응답자 에게 전달 되는 &lt;em&gt;req&lt;/em&gt; , &lt;em&gt;resp&lt;/em&gt; 및 &lt;em&gt;params&lt;/em&gt; 인수 를 캡처하기 위해 &lt;a href=&quot;#falcon.testing.capture_responder_args&quot;&gt; &lt;code&gt;falcon.testing.capture_responder_args()&lt;/code&gt; &lt;/a&gt; 후크 로 장식 할 수 있습니다 . 응답자는 &lt;code&gt;falcon.testing.set_resp_defaults()&lt;/code&gt; 후크 로 장식 되어 &lt;em&gt;resp&lt;/em&gt; 특성을 기본 &lt;em&gt;상태&lt;/em&gt; , &lt;em&gt;본문&lt;/em&gt; 및 &lt;em&gt;헤더&lt;/em&gt; 값 으로 설정할 수 있습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e48798cb183cf71bdfdbb384f61ed66137cdbe86" translate="yes" xml:space="preserve">
          <source>Open a new terminal and run the following:</source>
          <target state="translated">새 터미널을 열고 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3d8bd6f9a145c81ba3f59062586c5cf6108400d0" translate="yes" xml:space="preserve">
          <source>OpenStack</source>
          <target state="translated">OpenStack</target>
        </trans-unit>
        <trans-unit id="ec88fcb6d25d5b1be71e82bce96f86acb7be89b1" translate="yes" xml:space="preserve">
          <source>Opera Software</source>
          <target state="translated">오페라 소프트웨어</target>
        </trans-unit>
        <trans-unit id="ed83cc1138b01c27b6845a510ae0c03e6fb942b4" translate="yes" xml:space="preserve">
          <source>Or on Linux:</source>
          <target state="translated">또는 Linux에서 :</target>
        </trans-unit>
        <trans-unit id="25f4768f2d0bf2d9493d3f638e85e7c78f3db953" translate="yes" xml:space="preserve">
          <source>Or, if you want to edit the code, first fork the main repo, clone the fork to your desktop, and then run the following to install it using symbolic linking, so that when you change your code, the changes will be automagically available to your app without having to reinstall the package:</source>
          <target state="translated">또는 코드를 편집하려면 먼저 기본 저장소를 포크하고 포크를 데스크탑에 복제 한 다음 기호 링크를 사용하여 다음을 실행하여 코드를 변경할 때 변경 사항을 자동으로 사용할 수 있도록하십시오. 패키지를 다시 설치할 필요없이 앱 :</target>
        </trans-unit>
        <trans-unit id="9fc6030c819ec58b4a1eddf77d6a9473a099d9ac" translate="yes" xml:space="preserve">
          <source>Or, suppose you had a hook that you would like to apply to &lt;em&gt;all&lt;/em&gt; responders for a given resource. In that case, you would simply decorate the resource class:</source>
          <target state="translated">또는 주어진 자원에 대한 &lt;em&gt;모든&lt;/em&gt; 응답자 에게 적용 할 후크가 있다고 가정하십시오 . 이 경우 단순히 리소스 클래스를 장식하면됩니다.</target>
        </trans-unit>
        <trans-unit id="c5b258f43418d6aa5bca2b2f7856e2cbaa25764b" translate="yes" xml:space="preserve">
          <source>Or, to install the latest beta or release candidate, if any:</source>
          <target state="translated">또는 최신 베타 또는 릴리스 후보를 설치하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="fb9e852068a0bd991030aaafb5a1ac94af3ec5cf" translate="yes" xml:space="preserve">
          <source>Or, to run the default set of tests:</source>
          <target state="translated">또는 기본 테스트 세트를 실행하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="c78f60c2a75e929d3b7552a83d56bd7bba189fa6" translate="yes" xml:space="preserve">
          <source>Or, using the more verbose name:</source>
          <target state="translated">또는 더 자세한 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="404e7dd0d94065b81d620080226c6758c806379c" translate="yes" xml:space="preserve">
          <source>Ordered list of all values specified in the Cookie header for the named cookie, or &lt;code&gt;None&lt;/code&gt; if the cookie was not included in the request. If the cookie is specified more than once in the header, the returned list of values will preserve the ordering of the individual &lt;code&gt;cookie-pair&lt;/code&gt;&amp;rsquo;s in the header.</source>
          <target state="translated">Ordered list of all values specified in the Cookie header for the named cookie, or &lt;code&gt;None&lt;/code&gt; if the cookie was not included in the request. If the cookie is specified more than once in the header, the returned list of values will preserve the ordering of the individual &lt;code&gt;cookie-pair&lt;/code&gt; &amp;rsquo;s in the header.</target>
        </trans-unit>
        <trans-unit id="5eb32bfe82be1e2685576515fb15243de39c76ab" translate="yes" xml:space="preserve">
          <source>Original URI for proxied requests. Uses &lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt;&lt;code&gt;forwarded_scheme&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#falcon.Request.forwarded_host&quot;&gt;&lt;code&gt;forwarded_host&lt;/code&gt;&lt;/a&gt; in order to reconstruct the original URI requested by the user agent.</source>
          <target state="translated">Original URI for proxied requests. Uses &lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt; &lt;code&gt;forwarded_scheme&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#falcon.Request.forwarded_host&quot;&gt; &lt;code&gt;forwarded_host&lt;/code&gt; &lt;/a&gt; in order to reconstruct the original URI requested by the user agent.</target>
        </trans-unit>
        <trans-unit id="259f0e1eacc07a74e5ba76fa9a657af27c817031" translate="yes" xml:space="preserve">
          <source>Original URL scheme requested by the user agent, if the request was proxied. Typical values are &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;.</source>
          <target state="translated">Original URL scheme requested by the user agent, if the request was proxied. Typical values are &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;.</target>
        </trans-unit>
        <trans-unit id="5277dc139c2f1134bd76c80e090283dedde76dac" translate="yes" xml:space="preserve">
          <source>Original host request header as received by the first proxy in front of the application server.</source>
          <target state="translated">Original host request header as received by the first proxy in front of the application server.</target>
        </trans-unit>
        <trans-unit id="96792ae315e80ddbda2f275f15c9fb3301e95776" translate="yes" xml:space="preserve">
          <source>Other than that, it&amp;rsquo;s pretty much up to you if you want to use the standard library config library or something like &lt;code&gt;aumbry&lt;/code&gt; as demonstrated by this &lt;a href=&quot;https://github.com/jmvrbanac/falcon-example/tree/master/example&quot;&gt;falcon example app&lt;/a&gt;</source>
          <target state="translated">그 외에, 이 &lt;a href=&quot;https://github.com/jmvrbanac/falcon-example/tree/master/example&quot;&gt;팔콘 예제 앱에서&lt;/a&gt; 보여주는 것처럼 표준 라이브러리 구성 라이브러리 또는 &lt;code&gt;aumbry&lt;/code&gt; 와 같은 것을 사용하려면 그것은 당신에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="a44677569902b8e1dd4f4ca1c518818f4b58fb88" translate="yes" xml:space="preserve">
          <source>Our friendly community is available to answer your questions and help you work through sticky problems. See also: &lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;Getting Help&lt;/a&gt;.</source>
          <target state="translated">우리의 친절한 커뮤니티는 귀하의 질문에 답변하고 끈끈한 문제를 해결하는 데 도움을 줄 수 있습니다. &lt;a href=&quot;https://falcon.readthedocs.io/en/1.4.1/community/help.html#help&quot;&gt;도움말 얻기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c746b316ed33b9ba1ec2567ee7de4da6eda7a40d" translate="yes" xml:space="preserve">
          <source>Our friendly community is available to answer your questions and help you work through sticky problems. See also: &lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;Getting Help&lt;/a&gt;.</source>
          <target state="translated">Our friendly community is available to answer your questions and help you work through sticky problems. See also: &lt;a href=&quot;https://falcon.readthedocs.io/en/2.0.0/community/help.html#help&quot;&gt;Getting Help&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c17acddc840349fb8886d576a04d8c12a81a4815" translate="yes" xml:space="preserve">
          <source>Override the default serializer for instances of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 인스턴스의 기본 직렬 변환기를 대체하십시오 .</target>
        </trans-unit>
        <trans-unit id="6992f72e6503da0e1cd27dc4f0955bd8b9a860f6" translate="yes" xml:space="preserve">
          <source>Overriding the default JSON implementation is simply a matter of specifying the desired &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions:</source>
          <target state="translated">Overriding the default JSON implementation is simply a matter of specifying the desired &lt;code&gt;dumps&lt;/code&gt; and &lt;code&gt;loads&lt;/code&gt; functions:</target>
        </trans-unit>
        <trans-unit id="f116c51115119a5ea38854471c1f660c684883c0" translate="yes" xml:space="preserve">
          <source>PEP-3333 prohibits apps from setting hop-by-hop headers itself, such as Transfer-Encoding.</source>
          <target state="translated">PEP-3333은 앱이 Transfer-Encoding과 같은 홉별 헤더 자체를 설정하지 못하도록합니다.</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="6b8d507f2a1de117b2f5c96164b6a17e0a6908ca" translate="yes" xml:space="preserve">
          <source>Parse a canonical &amp;lsquo;host:port&amp;rsquo; string into parts.</source>
          <target state="translated">정식 'host : port'문자열을 부분으로 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="da47e55a4ec2c81f08f769255b984760e95bf13a" translate="yes" xml:space="preserve">
          <source>Parse a host string (which may or may not contain a port) into parts, taking into account that the string may contain either a domain name or an IP address. In the latter case, both IPv4 and IPv6 addresses are supported.</source>
          <target state="translated">문자열에 도메인 이름이나 IP 주소가 포함될 수 있음을 고려하여 호스트 문자열 (포트를 포함하거나 포함하지 않을 수 있음)을 부분으로 구문 분석하십시오. 후자의 경우 IPv4 및 IPv6 주소가 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="794acc47b5b414480d4f807db1da691652637acd" translate="yes" xml:space="preserve">
          <source>Parse a query string into a dict.</source>
          <target state="translated">쿼리 문자열을 dict로 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="ea1a491e912f9daa702857e38df7400a342f2ae0" translate="yes" xml:space="preserve">
          <source>Path portion of the request URI (not including query string).</source>
          <target state="translated">Path portion of the request URI (not including query string).</target>
        </trans-unit>
        <trans-unit id="8beeff300f6e467f3968347959cf64955a6b5da7" translate="yes" xml:space="preserve">
          <source>People usually fall into two camps when it comes to this question. The first camp likes to instantiate a config object and pass that around to the initializers of the resource classes so the data sharing is explicit. The second camp likes to create a config module and import that wherever it&amp;rsquo;s needed.</source>
          <target state="translated">사람들은이 질문에 대해 보통 두 개의 캠프에 빠집니다. 첫 번째 캠프는 구성 오브젝트를 인스턴스화하고이를 자원 클래스의 초기화 자로 전달하여 데이터 공유가 명시되도록합니다. 두 번째 캠프는 구성 모듈을 만들고 필요할 때마다 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f053abcaaa8688a58983a4832717942f512943eb" translate="yes" xml:space="preserve">
          <source>Per &lt;a href=&quot;https://tools.ietf.org/html/rfc7239&quot;&gt;RFC 7239&lt;/a&gt;, the access route may contain &amp;ldquo;unknown&amp;rdquo; and obfuscated identifiers, in addition to IPv4 and IPv6 addresses</source>
          <target state="translated">당 &lt;a href=&quot;https://tools.ietf.org/html/rfc7239&quot;&gt;RFC 7239&lt;/a&gt; , 액세스 경로는 IPv4 및 IPv6 주소에 추가로 &quot;알 수없는&quot;및 난독 식별자를 포함 할 수</target>
        </trans-unit>
        <trans-unit id="89285d2a833db68bbdb2e0703c2fb6bfb0962ec3" translate="yes" xml:space="preserve">
          <source>Perfection is finally attained not when there is no longer anything to add, but when there is no longer anything to take away.</source>
          <target state="translated">더 이상 추가 할 항목이 없을 때가 아니라 더 이상 제거 할 항목이 없을 때 완벽하게됩니다.</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="13ae0851548193d6ae5c1c4b8902349072c22425" translate="yes" xml:space="preserve">
          <source>Performs a request against a WSGI application. Uses &lt;a href=&quot;https://docs.python.org/2/library/wsgiref.html#module-wsgiref.validate&quot;&gt;&lt;code&gt;wsgiref.validate&lt;/code&gt;&lt;/a&gt; to ensure the response is valid WSGI.</source>
          <target state="translated">WSGI 애플리케이션에 대한 요청을 수행합니다. 용도는 &lt;a href=&quot;https://docs.python.org/2/library/wsgiref.html#module-wsgiref.validate&quot;&gt; &lt;code&gt;wsgiref.validate&lt;/code&gt; &lt;/a&gt; 응답이 유효한 WSGI 보장하기 위해.</target>
        </trans-unit>
        <trans-unit id="d9c18fd67e21d18f615b9a10ce80b063143aa079" translate="yes" xml:space="preserve">
          <source>Performs a request against a WSGI application. Uses &lt;a href=&quot;https://docs.python.org/3/library/wsgiref.html#module-wsgiref.validate&quot;&gt;&lt;code&gt;wsgiref.validate&lt;/code&gt;&lt;/a&gt; to ensure the response is valid WSGI.</source>
          <target state="translated">Performs a request against a WSGI application. Uses &lt;a href=&quot;https://docs.python.org/3/library/wsgiref.html#module-wsgiref.validate&quot;&gt; &lt;code&gt;wsgiref.validate&lt;/code&gt; &lt;/a&gt; to ensure the response is valid WSGI.</target>
        </trans-unit>
        <trans-unit id="b7bbf7af19a7ee37d66cc4d2e4c86c3760cb68a2" translate="yes" xml:space="preserve">
          <source>Performs a strong entity-tag comparison.</source>
          <target state="translated">Performs a strong entity-tag comparison.</target>
        </trans-unit>
        <trans-unit id="917141fa84ea4c398e37ac460c02d49e0537ec7c" translate="yes" xml:space="preserve">
          <source>Port used for the request. If the request URI does not specify a port, the default one for the given schema is returned (80 for HTTP and 443 for HTTPS).</source>
          <target state="translated">Port used for the request. If the request URI does not specify a port, the default one for the given schema is returned (80 for HTTP and 443 for HTTPS).</target>
        </trans-unit>
        <trans-unit id="8adbec6126c02333575f5f2803ce97b013eabfb2" translate="yes" xml:space="preserve">
          <source>Preamble &amp;amp; Disclaimer</source>
          <target state="translated">Preamble &amp;amp; Disclaimer</target>
        </trans-unit>
        <trans-unit id="2bab01c023d2077a254f644d1fe205a96f1293cc" translate="yes" xml:space="preserve">
          <source>Predefined Errors</source>
          <target state="translated">미리 정의 된 오류</target>
        </trans-unit>
        <trans-unit id="3814890ea00230cddc33993d6a2b8417c1bf7b1d" translate="yes" xml:space="preserve">
          <source>Preparing your Application for Service</source>
          <target state="translated">Preparing your Application for Service</target>
        </trans-unit>
        <trans-unit id="7060d72f8fb4f22922cca3ef2ed4df2d353b0505" translate="yes" xml:space="preserve">
          <source>Prepends timestamp and request info to message, and writes the result out to the WSGI server&amp;rsquo;s error stream (&lt;code&gt;wsgi.error&lt;/code&gt;).</source>
          <target state="translated">타임 스탬프 및 요청 정보를 메시지 앞에 추가하고 결과를 WSGI 서버의 오류 스트림 ( &lt;code&gt;wsgi.error&lt;/code&gt; )에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="2421f489b5b7558f687867e88178a61e4b70c292" translate="yes" xml:space="preserve">
          <source>PyPy</source>
          <target state="translated">PyPy</target>
        </trans-unit>
        <trans-unit id="5881886d3c9ffa0de2835a7f154a6625625c157e" translate="yes" xml:space="preserve">
          <source>Python 2 specific &lt;code&gt;dict&lt;/code&gt; methods are exposed regardless of the Python language version, however, as they are delegated to the underlying &lt;code&gt;__dict__&lt;/code&gt;, a similar error would be raised as if attempting to use these methods for a usual Python 3 dict.</source>
          <target state="translated">Python 2 specific &lt;code&gt;dict&lt;/code&gt; methods are exposed regardless of the Python language version, however, as they are delegated to the underlying &lt;code&gt;__dict__&lt;/code&gt; , a similar error would be raised as if attempting to use these methods for a usual Python 3 dict.</target>
        </trans-unit>
        <trans-unit id="ce4e6deef8cc3411fc3342199975127ef1306f40" translate="yes" xml:space="preserve">
          <source>Python 2.6 users will need to use the deprecated &lt;code&gt;msgpack-python&lt;/code&gt; package instead, pinned to version 0.4.8.</source>
          <target state="translated">Python 2.6 사용자는 더 이상 사용되지 않는 &lt;code&gt;msgpack-python&lt;/code&gt; 패키지를 0.4.8 버전으로 고정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1681600dfaf6395933fb4f4c22eb26e6c933fb23" translate="yes" xml:space="preserve">
          <source>Query string parameters are assumed to use standard form-encoding. Only parameters with values are returned. For example, given &amp;lsquo;foo=bar&amp;amp;flag&amp;rsquo;, this function would ignore &amp;lsquo;flag&amp;rsquo; unless the &lt;code&gt;keep_blank_qs_values&lt;/code&gt; option is set.</source>
          <target state="translated">쿼리 문자열 매개 변수는 표준 양식 인코딩을 사용하는 것으로 가정합니다. 값이있는 매개 변수 만 리턴됩니다. 예를 들어, 'foo = bar &amp;amp; flag' 가 지정 되면 &lt;code&gt;keep_blank_qs_values&lt;/code&gt; 옵션이 설정되어 있지 않으면이 함수는 'flag'를 무시 합니다.</target>
        </trans-unit>
        <trans-unit id="abe26121d3eca826488c38051bcdf738ba28bebb" translate="yes" xml:space="preserve">
          <source>Query string portion of the request URI, without the preceding &amp;lsquo;?&amp;rsquo; character.</source>
          <target state="translated">Query string portion of the request URI, without the preceding &amp;lsquo;?&amp;rsquo; character.</target>
        </trans-unit>
        <trans-unit id="917bcf00a5f43df11b199071267499daef7275d9" translate="yes" xml:space="preserve">
          <source>Quick Links</source>
          <target state="translated">빠른 링크</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">Quickstart</target>
        </trans-unit>
        <trans-unit id="7812e97529b97228418b8e9d2caee1b9c24b60b7" translate="yes" xml:space="preserve">
          <source>REST-inspired mapping of URIs to resources</source>
          <target state="translated">URI에서 리소스로 REST에서 영감을 얻은 매핑</target>
        </trans-unit>
        <trans-unit id="5f7045f5c4f9c161d93eae2b540395e77901b82a" translate="yes" xml:space="preserve">
          <source>RFC 3986 defines a set of &amp;ldquo;unreserved&amp;rdquo; characters as well as a set of &amp;ldquo;reserved&amp;rdquo; characters used as delimiters.</source>
          <target state="translated">RFC 3986은 &quot;예약되지 않은&quot;문자 세트와 구분 기호로 사용되는 &quot;예약 된&quot;문자 세트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="541ffc79a5e55a66dd8de3d93bc1bbba599b1808" translate="yes" xml:space="preserve">
          <source>RFC 3986 defines a set of &amp;ldquo;unreserved&amp;rdquo; characters as well as a set of &amp;ldquo;reserved&amp;rdquo; characters used as delimiters. This function escapes all other &amp;ldquo;disallowed&amp;rdquo; characters by percent-encoding them.</source>
          <target state="translated">RFC 3986은 &quot;예약되지 않은&quot;문자 세트와 구분 기호로 사용되는 &quot;예약 된&quot;문자 세트를 정의합니다. 이 기능은 백분율로 인코딩하여 다른 모든 &quot;허용되지 않은&quot;문자를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="2637a04add25ca378ec74004768868e8b4d48576" translate="yes" xml:space="preserve">
          <source>Rackspace</source>
          <target state="translated">Rackspace</target>
        </trans-unit>
        <trans-unit id="8a37b05fb0be969ec08c7778fb7fdd021f4bdc7a" translate="yes" xml:space="preserve">
          <source>Raise an instance of this class from a hook, middleware, or responder to short-circuit request processing in a manner similar to &lt;code&gt;falcon.HTTPError&lt;/code&gt;, but for non-error status codes.</source>
          <target state="translated">후크, 미들웨어 또는 응답기에서 &lt;code&gt;falcon.HTTPError&lt;/code&gt; 와 유사한 방식으로 오류가 아닌 상태 코드를 위해 단락 요청 처리에 이르기까지이 클래스의 인스턴스를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="aa9f30eaa15c7dc4d3318b7af1c18f170c156554" translate="yes" xml:space="preserve">
          <source>Raise an instance or subclass of &lt;code&gt;HTTPError&lt;/code&gt; to have Falcon return a formatted error response and an appropriate HTTP status code to the client when something goes wrong. JSON and XML media types are supported by default.</source>
          <target state="translated">&lt;code&gt;HTTPError&lt;/code&gt; 의 인스턴스 또는 서브 클래스를 제기 하여 Falcon이 형식화 된 오류 응답 및 적절한 HTTP 상태 코드를 클라이언트에 리턴하도록합니다. JSON 및 XML 미디어 유형이 기본적으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c36d9458e0d1baae7403b5ce642a78b09e4acc7f" translate="yes" xml:space="preserve">
          <source>Raises</source>
          <target state="translated">Raises</target>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="73ecf11b986d536b02cca27af69e039bfda48560" translate="yes" xml:space="preserve">
          <source>Rather than directly manipulate the &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, a responder may raise an instance of either &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt;&lt;code&gt;HTTPStatus&lt;/code&gt;&lt;/a&gt;. Falcon will convert these exceptions to appropriate HTTP responses. Alternatively, you can handle them youself via &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;add_error_handler()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응답자는 &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 객체를 직접 조작하지 않고 &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;status#falcon.HTTPStatus&quot;&gt; &lt;code&gt;HTTPStatus&lt;/code&gt; &lt;/a&gt; 인스턴스를 발생시킬 수 있습니다 . Falcon은 이러한 예외를 적절한 HTTP 응답으로 변환합니다. 또는 &lt;a href=&quot;api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;add_error_handler()&lt;/code&gt; &lt;/a&gt; 를 통해 직접 처리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb64ffae759aaf1990b71c32c3aa6e0f64557393" translate="yes" xml:space="preserve">
          <source>Raw HTTP headers from the request with canonical dash-separated names. Parsing all the headers to create this dict is done the first time this attribute is accessed, and the returned object should be treated as read-only. Note that this parsing can be costly, so unless you need all the headers in this format, you should instead use the &lt;code&gt;get_header()&lt;/code&gt; method or one of the convenience attributes to get a value for a specific header.</source>
          <target state="translated">Raw HTTP headers from the request with canonical dash-separated names. Parsing all the headers to create this dict is done the first time this attribute is accessed, and the returned object should be treated as read-only. Note that this parsing can be costly, so unless you need all the headers in this format, you should instead use the &lt;code&gt;get_header()&lt;/code&gt; method or one of the convenience attributes to get a value for a specific header.</target>
        </trans-unit>
        <trans-unit id="46613f85d9d94b2273e32ba10cca6cb8290e4ca2" translate="yes" xml:space="preserve">
          <source>Raw headers list passed to &lt;code&gt;start_response&lt;/code&gt;, per PEP-333.</source>
          <target state="translated">PEP-333에 따라 &lt;code&gt;start_response&lt;/code&gt; 에 전달 된 원시 헤더 목록 입니다.</target>
        </trans-unit>
        <trans-unit id="c27aeace1e5b480f00448f136ac7d5c2116b1f72" translate="yes" xml:space="preserve">
          <source>Raw response body, or &lt;code&gt;bytes&lt;/code&gt; if the response body was empty.</source>
          <target state="translated">원시 응답 본문 또는 응답 본문이 비어있는 경우 &lt;code&gt;bytes&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d4a74b503a1543250fe9facd1ec8c2b031a7e575" translate="yes" xml:space="preserve">
          <source>Read the docs</source>
          <target state="translated">문서를 읽으십시오</target>
        </trans-unit>
        <trans-unit id="ac8af52700686417608788436f4a4bdb099e02f5" translate="yes" xml:space="preserve">
          <source>Read-only property that determines whether error details will be serialized when composing the HTTP response. In &lt;code&gt;HTTPError&lt;/code&gt; this property always returns &lt;code&gt;True&lt;/code&gt;, but child classes may override it in order to return &lt;code&gt;False&lt;/code&gt; when an empty HTTP body is desired.</source>
          <target state="translated">HTTP 응답을 작성할 때 오류 세부 정보를 직렬화할지 여부를 결정하는 읽기 전용 속성입니다. 에서 &lt;code&gt;HTTPError&lt;/code&gt; 이 속성은 항상 반환 &lt;code&gt;True&lt;/code&gt; ,하지만 아이 클래스는 반환하기 위해 재정의 할 수 &lt;code&gt;False&lt;/code&gt; 빈 HTTP 본문이 요구 될 때.</target>
        </trans-unit>
        <trans-unit id="b77aad5fb24921ef76ac8f3e500ed93fddae8f2a" translate="yes" xml:space="preserve">
          <source>Redirection</source>
          <target state="translated">Redirection</target>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="8ff9100a6b0fb062918bd6373a9727a022cc5db6" translate="yes" xml:space="preserve">
          <source>Refactoring for testability</source>
          <target state="translated">테스트 가능성을위한 리팩토링</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="2e395df36104e81592b601908656c5b3dd7dbe01" translate="yes" xml:space="preserve">
          <source>Reference to the WSGI environ &lt;code&gt;dict&lt;/code&gt; passed in from the server. (See also PEP-3333.)</source>
          <target state="translated">서버에서 전달 된 WSGI 환경 &lt;code&gt;dict&lt;/code&gt; 에 대한 참조 입니다. (또한 PEP-3333 참조.)</target>
        </trans-unit>
        <trans-unit id="e46b51d346ff921540f669b5d502854c80c5854c" translate="yes" xml:space="preserve">
          <source>Regardless, the framework will continue unwinding the middleware stack. For example, if &lt;em&gt;mob2.process_request&lt;/em&gt; were to raise an error, the framework would execute the stack as follows:</source>
          <target state="translated">그럼에도 불구하고 프레임 워크는 미들웨어 스택을 계속 해제합니다. 예를 들어 &lt;em&gt;mob2.process_request&lt;/em&gt; 가 오류를 발생시키는 경우 프레임 워크는 다음과 같이 스택을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e3ad26172e38902bb7ea57aefccd9929e0b56e09" translate="yes" xml:space="preserve">
          <source>Register a handler for a given exception error type.</source>
          <target state="translated">주어진 예외 오류 유형에 대한 핸들러를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="a28b4ceb1ec425f481bfce4962ab04093ccee2b7" translate="yes" xml:space="preserve">
          <source>Register a handler for one or more exception types.</source>
          <target state="translated">하나 이상의 예외 유형에 대한 핸들러를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="90bde4aaf5943224b0a47976ee1d30df52125140" translate="yes" xml:space="preserve">
          <source>Register a sink method for the API.</source>
          <target state="translated">API에 대한 싱크 메소드를 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="5b8ab1ba78a0f2d5acda2bd71f86eb9c6c54e642" translate="yes" xml:space="preserve">
          <source>Relation type of the link, such as &amp;ldquo;next&amp;rdquo; or &amp;ldquo;bookmark&amp;rdquo;.</source>
          <target state="translated">링크의 관계 유형 (예 : &quot;다음&quot;또는 &quot;책갈피&quot;)</target>
        </trans-unit>
        <trans-unit id="4d4f66ae4acdbb2c4e43a46421d42629ff63f38c" translate="yes" xml:space="preserve">
          <source>Release v1.4 (&lt;a href=&quot;user/install#install&quot;&gt;Installation&lt;/a&gt;)</source>
          <target state="translated">릴리스 v1.4 ( &lt;a href=&quot;user/install#install&quot;&gt;설치&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="f1beea7d1b1f935451dcb53cb7da251fd139bc08" translate="yes" xml:space="preserve">
          <source>Release v2.0 (&lt;a href=&quot;user/install#install&quot;&gt;Installation&lt;/a&gt;)</source>
          <target state="translated">릴리스 v2.0 ( &lt;a href=&quot;user/install#install&quot;&gt;설치&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e7badc88c22ef66f3695121b211fa9ca0b248bc3" translate="yes" xml:space="preserve">
          <source>Replacing the Default Handlers</source>
          <target state="translated">기본 처리기 교체</target>
        </trans-unit>
        <trans-unit id="c2464af0a89128a10b68558c0a4129f46198114a" translate="yes" xml:space="preserve">
          <source>Represents a client&amp;rsquo;s HTTP request.</source>
          <target state="translated">클라이언트의 HTTP 요청을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a9aba2fc12d8bfb2e24ce401c1a9e0e79d85ba05" translate="yes" xml:space="preserve">
          <source>Represents a cookie returned by a simulated request.</source>
          <target state="translated">시뮬레이션 된 요청에 의해 반환 된 쿠키를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bfd0cadceadf4122b69f568c81e0565f4531391a" translate="yes" xml:space="preserve">
          <source>Represents a generic HTTP error.</source>
          <target state="translated">일반적인 HTTP 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3c8e9d56e793453dd7f40680bb211a84977b9f27" translate="yes" xml:space="preserve">
          <source>Represents a generic HTTP status.</source>
          <target state="translated">일반 HTTP 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7bfc4e9d1e730dcdc62161a5732a5b0eab7b6322" translate="yes" xml:space="preserve">
          <source>Represents a parsed Forwarded header.</source>
          <target state="translated">구문 분석 된 전달 헤더를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dc8c956871f584f974a8dd1e3ff0defa2f447d92" translate="yes" xml:space="preserve">
          <source>Represents an HTTP response to a client request.</source>
          <target state="translated">클라이언트 요청에 대한 HTTP 응답을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="09aecefd1d349d481af2e97012491a0d9f35b13d" translate="yes" xml:space="preserve">
          <source>Represents the collection of named converters that may be referenced in URI template field expressions. Adding additional converters is simply a matter of mapping an identifier to a converter class:</source>
          <target state="translated">URI 템플리트 필드 표현식에서 참조 될 수있는 명명 된 변환기의 콜렉션을 나타냅니다. 변환기를 추가하면 식별자를 변환기 클래스에 매핑하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="ba7f7130b023657b84f984949de69cdd9a2909d1" translate="yes" xml:space="preserve">
          <source>Request &amp;amp; Response</source>
          <target state="translated">요청 및 응답</target>
        </trans-unit>
        <trans-unit id="d392c04224d3067d4165670b3ae0f79d59b1a1c5" translate="yes" xml:space="preserve">
          <source>Request Handling</source>
          <target state="translated">요청 처리</target>
        </trans-unit>
        <trans-unit id="a4fad55a98a9dd0e93de14214b50a92bce240602" translate="yes" xml:space="preserve">
          <source>Request and Response Objects</source>
          <target state="translated">요청 및 응답 객체</target>
        </trans-unit>
        <trans-unit id="8f32495064a86ea6bdd90ee73ef8760773803adb" translate="yes" xml:space="preserve">
          <source>Resource class methods provide a uniform interface that does not have to be reinvented (and maintained) from class to class and application to application.</source>
          <target state="translated">자원 클래스 메소드는 클래스에서 애플리케이션으로 또는 애플리케이션에서 재개발 (및 유지 보수) 할 필요가없는 균일 한 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6ba0c55e65823aa40b58ed06e305debd11813c93" translate="yes" xml:space="preserve">
          <source>Resource responders set response variables to sane values.</source>
          <target state="translated">자원 응답자는 응답 변수를 정상 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0fd46939d4b44ec47328a35d137f09dcdf7fde5c" translate="yes" xml:space="preserve">
          <source>Responders must always define at least two arguments to receive &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects, respectively:</source>
          <target state="translated">응답자는 &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 오브젝트를 각각 수신하려면 항상 두 개 이상의 인수를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">Response</target>
        </trans-unit>
        <trans-unit id="aed6b088abecc3c4895e8313ebe4404020e21a3c" translate="yes" xml:space="preserve">
          <source>Response Handling</source>
          <target state="translated">응답 처리</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
