<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="23f1d75b99a4a822888962100272fdc4bae837a2" translate="yes" xml:space="preserve">
          <source>If a failure occurs in Union, Rehearsal serves a different and critical purpose. When you submit a new change and it fixes the break in Union, you will have proved that a sequence of two changes, one that breaks the system, and one that comes after and fixes it, results in a healthy system. You do not yet know what happens when you apply the cumulative change to an environment that never saw the failure. Sometimes a fix&amp;rsquo;s success depends upon state left behind as a result of a preceding failure. The Rehearsal stage is an opportunity to test the change in an environment that didn&amp;rsquo;t see the failure.</source>
          <target state="translated">Union에서 실패가 발생하면 Rehearsal은 다른 중요한 목적을 수행합니다. 새로운 변경 사항을 제출하고 Union에서 중단을 수정하면 일련의 두 가지 변경, 즉 시스템을 중단시키는 하나와 이후에 발생하여 수정하는 일련의 변경으로 인해 시스템이 정상임을 입증하게됩니다. 실패를 본 적이없는 환경에 누적 변경을 적용하면 어떤 일이 발생하는지 아직 알 수 없습니다. 때때로 수정의 성공은 이전 실패의 결과로 남겨진 상태에 달려 있습니다. 리허설 단계는 실패를 보지 못한 환경의 변화를 테스트 할 수있는 기회입니다.</target>
        </trans-unit>
        <trans-unit id="91e85f5834fbf77bbea9794bbac9c9045104c62f" translate="yes" xml:space="preserve">
          <source>If a git repository contains many cookbooks, the user can specify the path to the desired cookbook using the &lt;code&gt;rel&lt;/code&gt; option:</source>
          <target state="translated">git 저장소에 많은 쿡북이 포함 된 경우 사용자는 &lt;code&gt;rel&lt;/code&gt; 옵션을 사용하여 원하는 쿡북의 경로를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1851f0a6ce7180605a891d54bd2b9b951ee77e22" translate="yes" xml:space="preserve">
          <source>If a hostname is not resolvable, refer to a local systems administrator for specific guidance on how to add the hostname to the DNS system. If the Chef Infra Server is being into a testing environment, just add the hostname to &lt;code&gt;/etc/hosts&lt;/code&gt;. The following example shows how a hostname can be added to &lt;code&gt;/etc/hosts&lt;/code&gt; when running Red Hat or CentOS:</source>
          <target state="translated">호스트 이름을 확인할 수없는 경우 DNS 시스템에 호스트 이름을 추가하는 방법에 대한 구체적인 지침은 로컬 시스템 관리자에게 문의하십시오. Chef Infra Server가 테스트 환경에있는 경우 호스트 이름을 &lt;code&gt;/etc/hosts&lt;/code&gt; 에 추가하기 만하면 됩니다. 다음 예제는 Red Hat 또는 CentOS를 실행할 때 &lt;code&gt;/etc/hosts&lt;/code&gt; 이름을 / etc / hosts에 추가하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3cbdc514c762cadd83eb6b2a7905d377301c63f5" translate="yes" xml:space="preserve">
          <source>If a hostname is not resolvable, refer to a local systems administrator for specific guidance on how to add the hostname to the DNS system. If the Chef server is being into a testing environment, just add the hostname to &lt;code&gt;/etc/hosts&lt;/code&gt;. The following example shows how a hostname can be added to &lt;code&gt;/etc/hosts&lt;/code&gt; when running Red Hat or CentOS:</source>
          <target state="translated">호스트 이름을 확인할 수없는 경우 DNS 시스템에 호스트 이름을 추가하는 방법에 대한 특정 지침은 로컬 시스템 관리자에게 문의하십시오. Chef 서버가 테스트 환경에있는 경우 호스트 이름을 &lt;code&gt;/etc/hosts&lt;/code&gt; 에 추가하십시오 . 다음 예는 Red Hat 또는 CentOS를 실행할 때 &lt;code&gt;/etc/hosts&lt;/code&gt; 이름을 / etc / hosts에 추가하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2f275e35018a9d16023858c2e088b49909817650" translate="yes" xml:space="preserve">
          <source>If a job dies, all remaining processes with the same process ID may be kept running. Set to &lt;code&gt;true&lt;/code&gt; to kill all remaining processes.</source>
          <target state="translated">작업이 종료되면 동일한 프로세스 ID를 가진 나머지 모든 프로세스가 계속 실행 중일 수 있습니다. 나머지 모든 프로세스를 종료 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f74a2fc22fec3ec165ff4042c9b74593eb38dcbc" translate="yes" xml:space="preserve">
          <source>If a job dies, all remaining processes with the same process ID may be kept running. Set to true to kill all remaining processes.</source>
          <target state="translated">작업이 종료되면 동일한 프로세스 ID를 가진 나머지 모든 프로세스가 계속 실행될 수 있습니다. 나머지 모든 프로세스를 종료하려면 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9c82fdeb674eea115416e9f00f3136a1b75aadc9" translate="yes" xml:space="preserve">
          <source>If a keyserver is provided, this is assumed to be the fingerprint; otherwise it can be either the URI of GPG key for the repo, or a cookbook_file.</source>
          <target state="translated">키 서버가 제공되면 이것은 지문으로 간주됩니다. 그렇지 않으면 리포지토리에 대한 GPG 키의 URI 또는 ​​cookbook_file 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41dbf8f42ccb056692dbc44d76a8be4545732d5e" translate="yes" xml:space="preserve">
          <source>If a named configuration is not provided, chef-shell will attempt to load the chef-shell.rb file from the &lt;code&gt;.chef&lt;/code&gt; directory. For example: &lt;code&gt;~/.chef/chef_shell.rb&lt;/code&gt;</source>
          <target state="translated">명명 된 구성이 제공되지 않으면 chef-shell은 &lt;code&gt;.chef&lt;/code&gt; 디렉토리 에서 chef-shell.rb 파일을로드하려고 시도합니다 . 예를 들면 다음과 같습니다. &lt;code&gt;~/.chef/chef_shell.rb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd627ce8217e2a832860b1e99a3fe6d9adf14a14" translate="yes" xml:space="preserve">
          <source>If a new page is created or an old page is deleted, they must be added or removed from the &lt;code&gt;sitemap.md&lt;/code&gt; page.</source>
          <target state="translated">새 페이지가 생성되거나 이전 페이지가 삭제 된 경우 &lt;code&gt;sitemap.md&lt;/code&gt; 페이지 에서 해당 페이지를 추가하거나 제거해야합니다 .</target>
        </trans-unit>
        <trans-unit id="32918f44eabf2a951f49e12d2776173dfc580e3b" translate="yes" xml:space="preserve">
          <source>If a new private key was generated, both the private and public keys are returned.</source>
          <target state="translated">새 개인 키가 생성되면 개인 키와 공개 키가 모두 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3142d33709e3bcfed9964edb8a2ad148035a42e8" translate="yes" xml:space="preserve">
          <source>If a node is found to have a state other than &amp;lsquo;running&amp;rsquo;, the node status is then also updated to &amp;lsquo;unreachable&amp;rsquo;.</source>
          <target state="translated">노드의 상태가 '실행 중'이 아닌 것으로 확인되면 노드 상태도 '도달 할 수 없음'으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="0ed5dc8055f58650ba7e46e822e9d5ff28558a3b" translate="yes" xml:space="preserve">
          <source>If a policy is assigned to an API token on creation, the API token will have permissions. If no policy is selected during its creation, the API token will have no permissions. To assign permissions to the API token any time after creation, navigate to &lt;em&gt;Policies&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab, locate the appropriate policy, and then add the API token as a member of the policy using a &lt;a href=&quot;../iam_v2_guide/index#member-expressions&quot;&gt;member expression&lt;/a&gt;.</source>
          <target state="translated">정책이 생성시 API 토큰에 할당되면 API 토큰에 권한이 부여됩니다. 생성 중에 정책을 선택하지 않으면 API 토큰에 권한이 없습니다. 생성 후 언제든지 API 토큰에 권한을 할당하려면 &lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;정책&lt;/em&gt; 으로 이동 하고 적절한 정책을 찾은 다음 &lt;a href=&quot;../iam_v2_guide/index#member-expressions&quot;&gt;멤버 표현식을&lt;/a&gt; 사용하여 API 토큰을 정책의 멤버로 추가합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9878d416411372e0ecb4d3b768c468b5605f2f4" translate="yes" xml:space="preserve">
          <source>If a problem is discovered in Union (it will happen, that is what Union is for), the cooperating teams need to have a conversation about the right fix. Sometimes the fix may require a change on a different project than the one that initiated the break. To fix the break, you submit a new change through the pipeline. Chef Automate is fundamentally a roll-forward system.</source>
          <target state="translated">Union에서 문제가 발견되면 (일어날 것입니다. 이것이 바로 Union의 목적입니다) 협력 팀은 올바른 해결 방법에 대해 대화를해야합니다. 때로는 수정을 위해 중단을 시작한 프로젝트와 다른 프로젝트에서 변경이 필요할 수 있습니다. 중단을 수정하려면 파이프 라인을 통해 새 변경 사항을 제출합니다. Chef Automate는 기본적으로 롤 포워드 시스템입니다.</target>
        </trans-unit>
        <trans-unit id="278f781f9139fbcc00cc5fc72c7088581ed941b7" translate="yes" xml:space="preserve">
          <source>If a problem is discovered in Union (it will happen, that is what Union is for), the cooperating teams need to have a conversation about the right fix. Sometimes the fix may require a change on a different project than the one that initiated the break. To fix the break, you submit a new change through the pipeline. Workflow is fundamentally a roll-forward system.</source>
          <target state="translated">Union에서 문제가 발견되면 (일어날 것입니다. 이것이 바로 Union의 목적입니다) 협력 팀은 올바른 해결 방법에 대해 대화를해야합니다. 때로는 수정을 위해 중단을 시작한 프로젝트와 다른 프로젝트에서 변경이 필요할 수 있습니다. 중단을 수정하려면 파이프 라인을 통해 새 변경 사항을 제출합니다. 워크 플로는 기본적으로 롤 포워드 시스템입니다.</target>
        </trans-unit>
        <trans-unit id="ab44831b76ded7c95f5bd176cc148d3dc0b1c8c9" translate="yes" xml:space="preserve">
          <source>If a project has pending edits from changes to ingest rules, then all projects must be updated for those pending edits to take effect. Updating projects will apply all pending edits and move ingested resources into the correct projects. This background process can take a few minutes for systems with a limited number of nodes, and &lt;strong&gt;several days&lt;/strong&gt; for systems with a large number of nodes.</source>
          <target state="translated">프로젝트에 수집 규칙 변경에서 보류중인 편집이있는 경우 보류중인 편집이 적용되도록 모든 프로젝트를 업데이트해야합니다. 프로젝트를 업데이트하면 보류중인 모든 편집 내용이 적용되고 수집 된 리소스가 올바른 프로젝트로 이동됩니다. 이 백그라운드 프로세스는 노드의 제한된 수와 함께 시스템을위한 몇 분 정도 걸릴 수 있습니다 &lt;strong&gt;며칠&lt;/strong&gt; 많은 수의 노드와 시스템.</target>
        </trans-unit>
        <trans-unit id="bb568a53a9188b2b1f0ba361f287ad502876adec" translate="yes" xml:space="preserve">
          <source>If a project is a cookbook, we recommend starting with &lt;code&gt;delivery-truck&lt;/code&gt;, an open source build cookbook created for driving cookbook pipelines in Chef Automate. You can customize some aspects of &lt;code&gt;delivery-truck&lt;/code&gt; through your project&amp;rsquo;s &lt;code&gt;.delivery/config.json&lt;/code&gt;. To have more control or to opt-out of some of the behavior of &lt;code&gt;delivery-truck&lt;/code&gt;, create a wrapper build cookbook.</source>
          <target state="translated">프로젝트가 쿡북 인 경우 Chef Automate에서 쿡북 파이프 라인을 구동하기 위해 생성 된 오픈 소스 빌드 쿡북 인 &lt;code&gt;delivery-truck&lt;/code&gt; 으로 시작하는 것이 좋습니다 . 프로젝트의 &lt;code&gt;.delivery/config.json&lt;/code&gt; 을 통해 &lt;code&gt;delivery-truck&lt;/code&gt; 의 일부 측면을 사용자 지정할 수 있습니다 . 더 많은 제어 권한을 갖거나 &lt;code&gt;delivery-truck&lt;/code&gt; 의 일부 동작을 옵트 아웃하려면 래퍼 빌드 쿡북을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="992cd7659c66d9aad284219f336af165542c7f67" translate="yes" xml:space="preserve">
          <source>If a project is a cookbook, we recommend starting with &lt;strong&gt;delivery-truck&lt;/strong&gt;, an open source build cookbook created for driving cookbook pipelines in Chef Automate. You can customize some aspects of &lt;strong&gt;delivery-truck&lt;/strong&gt; through your project&amp;rsquo;s &lt;code&gt;.delivery/config.json&lt;/code&gt;. To have more control or to opt-out of some of the behavior of &lt;strong&gt;delivery-truck&lt;/strong&gt;, create a wrapper build cookbook.</source>
          <target state="translated">프로젝트가 쿡북 인 경우 Chef Automate에서 쿡북 파이프 라인을 구동하기 위해 생성 된 오픈 소스 빌드 쿡북 인 &lt;strong&gt;delivery-truck으로&lt;/strong&gt; 시작하는 것이 좋습니다 . 프로젝트의 &lt;code&gt;.delivery/config.json&lt;/code&gt; 을 통해 &lt;strong&gt;배달 트럭&lt;/strong&gt; 의 일부 측면을 사용자 지정할 수 있습니다 . 더 많은 제어 권한을 갖거나 &lt;strong&gt;delivery-truck&lt;/strong&gt; 의 일부 동작을 옵트 아웃하려면 래퍼 빌드 쿡북을 만듭니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00f0d3031c2877dac56657cf9ebc5f0ac1d5a104" translate="yes" xml:space="preserve">
          <source>If a recently deposed leader is likely the node with the most up-to-date data, you may want to reinstate its leadership.</source>
          <target state="translated">최근에 퇴사 한 리더가 가장 최신 데이터를 보유한 노드 일 가능성이 높은 경우 해당 리더를 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ace56d53ff76c11a10204cc108ae30cd030b969b" translate="yes" xml:space="preserve">
          <source>If a request is made for the feed after the waiting period, then the request will result in a single event, a &amp;ldquo;summary&amp;rdquo; event, which contains the same data as requesting a named-job resource. In this case, any &lt;code&gt;Last-Event-ID&lt;/code&gt; will be ignored.</source>
          <target state="translated">대기 기간 후에 피드에 대한 요청이 이루어지면 요청은 명명 된 작업 리소스를 요청하는 것과 동일한 데이터를 포함하는 &quot;요약&quot;이벤트 인 단일 이벤트를 생성합니다. 이 경우 모든 &lt;code&gt;Last-Event-ID&lt;/code&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5c59b2328d76592f2edac24f02a5bb0545a33b68" translate="yes" xml:space="preserve">
          <source>If a resource group contains one virtual machine with an OS disk and 2 data disks that are all Managed Disks, then the count would be 3.</source>
          <target state="translated">리소스 그룹에 OS 디스크가있는 가상 머신 1 개와 모두 Managed Disks 인 2 개의 데이터 디스크가 포함 된 경우 개수는 3 개가됩니다.</target>
        </trans-unit>
        <trans-unit id="205e316213f218617190c5827d336416606f1901" translate="yes" xml:space="preserve">
          <source>If a response other than &lt;code&gt;&quot;0 processes are in enforce mode&quot;&lt;/code&gt; or &lt;code&gt;&quot;0 profiles are in enforce mode.&quot;&lt;/code&gt; is returned, AppArmor must be set to &lt;code&gt;Complaining&lt;/code&gt; mode or disabled.</source>
          <target state="translated">&lt;code&gt;&quot;0 processes are in enforce mode&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;0 profiles are in enforce mode.&quot;&lt;/code&gt; 이외의 응답 인 경우 이 표시되면 AppArmor가 &lt;code&gt;Complaining&lt;/code&gt; 모드 로 설정 되거나 비활성화 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f65e38e63dd26f395e44ecf3c75422a434b6cbb8" translate="yes" xml:space="preserve">
          <source>If a response other than &lt;code&gt;&quot;Disabled&quot;&lt;/code&gt; or &lt;code&gt;&quot;Permissive&quot;&lt;/code&gt; is returned, SELinux must be disabled.</source>
          <target state="translated">&lt;code&gt;&quot;Disabled&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;Permissive&quot;&lt;/code&gt; 이외의 응답 이 반환되면 SELinux를 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="a5bd0cd79566ba6a594b8e08df7f2e85de71d2a9" translate="yes" xml:space="preserve">
          <source>If a run-list or any dependencies require a cookbook that is present in more than one source, be explicit about which source is preferred. This will ensure that a cookbook is always pulled from an expected source. For example, an internally-developed cookbook named &lt;code&gt;chef-client&lt;/code&gt; will conflict with the public &lt;code&gt;chef-client&lt;/code&gt; cookbook that is maintained by Chef. To specify a named source for a cookbook:</source>
          <target state="translated">실행 목록 또는 종속성에 둘 이상의 소스에있는 쿡북이 필요한 경우 어떤 소스가 선호되는지 명시해야합니다. 이렇게하면 쿡북이 항상 예상 된 소스에서 가져 오게됩니다. 예를 들어 내부에서 개발 한 &lt;code&gt;chef-client&lt;/code&gt; 라는 요리 책은 Chef가 유지 관리 하는 공용 &lt;code&gt;chef-client&lt;/code&gt; 요리 책 과 충돌합니다 . 쿡북의 이름이 지정된 소스를 지정하려면 :</target>
        </trans-unit>
        <trans-unit id="31c9009307a6d3bda66e76a3c1ac34d3fd00c8b3" translate="yes" xml:space="preserve">
          <source>If a running Supervisor cannot decrypt a secret due to a missing key, it will retry with exponential backoff starting with a one-second interval. This allows an administrator to provide the Supervisor with the key to resume normal operations, without taking down the Supervisor.</source>
          <target state="translated">실행중인 Supervisor가 키 누락으로 인해 암호를 해독 할 수없는 경우 1 초 간격으로 시작하는 지수 백오 프로 재 시도합니다. 이를 통해 관리자는 감독자를 중단하지 않고도 정상 작동을 재개 할 수있는 키를 감독자에게 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08deb75d7e607aaeeb30dcbfe6c1947ad864e400" translate="yes" xml:space="preserve">
          <source>If a specific recipe is included more than once with the &lt;code&gt;include_recipe&lt;/code&gt; method or elsewhere in the run_list directly, only the first instance is processed and subsequent inclusions are ignored.</source>
          <target state="translated">특정 레시피가 &lt;code&gt;include_recipe&lt;/code&gt; 메소드를 사용하여 두 번 이상 포함 되거나 run_list의 다른 위치에 직접 포함 된 경우 첫 번째 인스턴스 만 처리되고 후속 포함은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3cd31626216248ea6c5e5e2e5df68b995b84a920" translate="yes" xml:space="preserve">
          <source>If a string or a block return &lt;code&gt;false&lt;/code&gt;, the Chef Infra Client run will stop and an error is raised.</source>
          <target state="translated">문자열 또는 블록이 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 Chef Infra Client 실행이 중지되고 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b8027180729b5cfc14b7448be1353ba7ff22364a" translate="yes" xml:space="preserve">
          <source>If a string or a block return &lt;code&gt;false&lt;/code&gt;, the Chef Infra Client run will stop and an error is returned.</source>
          <target state="translated">문자열 또는 블록이 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 Chef Infra Client 실행이 중지되고 오류가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="767d31dee0bee4f220fb19aea47cc2e403883935" translate="yes" xml:space="preserve">
          <source>If a string or a block return &lt;code&gt;false&lt;/code&gt;, the chef-client run will stop and an error is returned.</source>
          <target state="translated">문자열 또는 블록이 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 chef-client 실행이 중지되고 오류가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0f154811784559152460a75fe69fa915e42a5cca" translate="yes" xml:space="preserve">
          <source>If a user, following a sign in through LDAP or SAML, sees a</source>
          <target state="translated">사용자가 LDAP 또는 SAML을 통해 로그인 한 후</target>
        </trans-unit>
        <trans-unit id="a9e3444c422093585d453093a696775d3dc226bf" translate="yes" xml:space="preserve">
          <source>If all goes according to plan, the first node should be ready to restart, pull down all the packages and/or scripts, load Chef Infra Client, and do the first client run.</source>
          <target state="translated">모든 것이 계획대로 진행되면 첫 번째 노드를 다시 시작하고 모든 패키지 및 / 또는 스크립트를 풀다운하고 Chef Infra Client를로드하고 첫 번째 클라이언트 실행을 수행 할 준비가되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9250d4ca8a274a1fdf51d6acd8dccd987429d13d" translate="yes" xml:space="preserve">
          <source>If all goes according to plan, then you should be ready to reset/restart your first node, have it pull down all the packages and/or scripts, load Chef Infra Client, and do the first client run.</source>
          <target state="translated">모든 것이 계획대로 진행되면 첫 번째 노드를 재설정 / 다시 시작하고 모든 패키지 및 / 또는 스크립트를 풀다운하고 Chef Infra Client를로드하고 첫 번째 클라이언트 실행을 수행 할 준비가되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="78db8a51bfe55b4cf47ba6188ea1e16936fe9d9c" translate="yes" xml:space="preserve">
          <source>If all phases of Union succeed, then the Rehearsal stage is triggered. Rehearsal increases confidence in the artifacts and the deployment by repeating the process that occurred in Union in a different environment.</source>
          <target state="translated">Union의 모든 단계가 성공하면 리허설 단계가 시작됩니다. 리허설은 다른 환경에서 Union에서 발생한 프로세스를 반복하여 아티팩트 및 배포에 대한 자신감을 높입니다.</target>
        </trans-unit>
        <trans-unit id="28df1dcd9ee63cc60863afa08bba7b018924a1a8" translate="yes" xml:space="preserve">
          <source>If an Active Directory user account is referenced with a valid ID</source>
          <target state="translated">Active Directory 사용자 계정이 유효한 ID로 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="d358084201a6f625a0a897ffa434c3afd87df339" translate="yes" xml:space="preserve">
          <source>If an Active Directory user account is referenced with an invalid ID</source>
          <target state="translated">Active Directory 사용자 계정이 잘못된 ID로 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="4164ee433d471b0a9388cb8c2889948c06cf1056" translate="yes" xml:space="preserve">
          <source>If an CosmosDb Database Account is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;CosmosDb Database Account&lt;/code&gt;</source>
          <target state="translated">CosmosDb 데이터베이스 계정이 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;CosmosDb Database Account&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="bf4c411e068fd0c4edeeeb3bc447bd9b715288c3" translate="yes" xml:space="preserve">
          <source>If an CosmosDb Database Account is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;CosmosDb Database Account&lt;/code&gt;</source>
          <target state="translated">CosmosDb 데이터베이스 계정이 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;CosmosDb Database Account&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="8bced6c8f429aa6f20fb9fe7c940367db40075fe" translate="yes" xml:space="preserve">
          <source>If an Event Hub Authorization Rule is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Namespace Name&lt;/code&gt;, &lt;code&gt;Event Hub Name&lt;/code&gt; and &lt;code&gt;Authorization Rule Name&lt;/code&gt;</source>
          <target state="translated">이벤트 허브 권한 부여 규칙이 유효한 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Namespace Name&lt;/code&gt; , &lt;code&gt;Event Hub Name&lt;/code&gt; 및 &lt;code&gt;Authorization Rule Name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30f965fc20f436bbac0f058ed9d81ca2ec17c106" translate="yes" xml:space="preserve">
          <source>If an Event Hub Event Hub is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Namespace Name&lt;/code&gt; and &lt;code&gt;Event Hub Name&lt;/code&gt;</source>
          <target state="translated">Event Hub 이벤트 허브가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Namespace Name&lt;/code&gt; 및 &lt;code&gt;Event Hub Name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="096dd5d946d109a21755dadac7f27692f9b8115f" translate="yes" xml:space="preserve">
          <source>If an Event Hub Namespace is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;Namespace Name&lt;/code&gt;</source>
          <target state="translated">Event Hub 네임 스페이스가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;Namespace Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="29a525db1794a54accaf789dc009789c4b724ed6" translate="yes" xml:space="preserve">
          <source>If an Event Hub Namespace is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; or &lt;code&gt;Namespace Name&lt;/code&gt;</source>
          <target state="translated">Event Hub 네임 스페이스가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 또는 &lt;code&gt;Namespace Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="1f1613b587b958494394b695d65d6dbf67c770d4" translate="yes" xml:space="preserve">
          <source>If an IoT Hub Event Hub Consumer Group is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Resource Name&lt;/code&gt;, &lt;code&gt;Event Hub Endpoint&lt;/code&gt; and &lt;code&gt;Consumer Group&lt;/code&gt;</source>
          <target state="translated">IoT Hub 이벤트 허브 소비자 그룹이 유효한 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Resource Name&lt;/code&gt; , &lt;code&gt;Event Hub Endpoint&lt;/code&gt; 및 &lt;code&gt;Consumer Group&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="035f0fe8eec1a13a8d0a08dd4de04cd2873e6058" translate="yes" xml:space="preserve">
          <source>If an IoT Hub Event Hub Consumer Group is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Resource Name&lt;/code&gt;, &lt;code&gt;Event Hub Endpoint&lt;/code&gt; or &lt;code&gt;Consumer Group&lt;/code&gt;</source>
          <target state="translated">IoT Hub 이벤트 허브 소비자 그룹이 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Resource Name&lt;/code&gt; , &lt;code&gt;Event Hub Endpoint&lt;/code&gt; 또는 &lt;code&gt;Consumer Group&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6c5045bc50b6f39e94c176e1a567ac5f02bbf22" translate="yes" xml:space="preserve">
          <source>If an IoT Hub is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;Resource Name&lt;/code&gt;</source>
          <target state="translated">IoT Hub가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;Resource Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="85b1e79e2a823a2d2d3e4783c1515735407192cf" translate="yes" xml:space="preserve">
          <source>If an IoT Hub is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; or &lt;code&gt;Resource Name&lt;/code&gt;</source>
          <target state="translated">IoT Hub가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 또는 &lt;code&gt;Resource Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="889d0b6fc851452cbb206ac5094122f2fceaae24" translate="yes" xml:space="preserve">
          <source>If an SSL error is returned similar to:</source>
          <target state="translated">다음과 유사한 SSL 오류가 반환되는 경우 :</target>
        </trans-unit>
        <trans-unit id="7c9f804db91d326018a6af1236b45205ae3080da" translate="yes" xml:space="preserve">
          <source>If an SSL notice is shown due to your self-signed certificate while connecting to Chef Supermarket via a web browser, accept the SSL certificate. A trusted SSL certificate should be used for private Chef Supermarket that is used in production.</source>
          <target state="translated">웹 브라우저를 통해 Chef Supermarket에 연결하는 동안 자체 서명 된 인증서로 인해 SSL 알림이 표시되면 SSL 인증서를 수락하십시오. 프로덕션에 사용되는 사설 Chef Supermarket에는 신뢰할 수있는 SSL 인증서를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f930a4108ea34991b277edc6b4b8e86aed10c648" translate="yes" xml:space="preserve">
          <source>If an SSL notice is shown while connecting to Chef Supermarket via a web browser, accept the SSL certificate. A trusted SSL certificate should be used for private Chef Supermarket that is used in production.</source>
          <target state="translated">웹 브라우저를 통해 Chef Supermarket에 연결하는 동안 SSL 알림이 표시되면 SSL 인증서를 수락하십시오. 프로덕션에 사용되는 사설 Chef Supermarket에는 신뢰할 수있는 SSL 인증서를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb2ff12b1e28613fc39f25563b2971b088bb87e4" translate="yes" xml:space="preserve">
          <source>If an absolute path is provided, the &lt;code&gt;exist&lt;/code&gt; matcher tests if the command exists on the filesystem at the specified location. Otherwise, the &lt;code&gt;exist&lt;/code&gt; matcher tests if the command is found in the PATH.</source>
          <target state="translated">절대 경로가 제공되면 &lt;code&gt;exist&lt;/code&gt; 매처는 명령이 지정된 위치의 파일 시스템에 있는지 테스트합니다. 그렇지 않으면 &lt;code&gt;exist&lt;/code&gt; 매처는 명령이 PATH에 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="f8a11c1eb44464d95eb0351a749eb40115ebb57f" translate="yes" xml:space="preserve">
          <source>If an audit was unsuccessful, the chef-client will return output similar to:</source>
          <target state="translated">감사에 실패한 경우 요리사 클라이언트는 다음과 유사한 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="91ad06f50b4f89f96885888b94511a44c3bf8460" translate="yes" xml:space="preserve">
          <source>If an environment variable is set, it &lt;strong&gt;MUST&lt;/strong&gt; be lowercase. If it is not, add a lowercase version of that proxy variable to the shell (e.g. &lt;code&gt;~/.bashrc&lt;/code&gt;) using one (or more) the following commands.</source>
          <target state="translated">환경 변수가 설정되면 &lt;strong&gt;반드시&lt;/strong&gt; 소문자 여야합니다. 그렇지 않은 경우 하나 이상의 다음 명령을 사용하여 해당 프록시 변수의 소문자 버전을 쉘 (예 : &lt;code&gt;~/.bashrc&lt;/code&gt; )에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="4dd7a9276c3242cb55de35bfa056c3668bf6ca76" translate="yes" xml:space="preserve">
          <source>If an existing file is present and the third argument is set with a shasum digest, the file will be checked to see if it&amp;rsquo;s valid. If so, the function ends early and returns 0. Otherwise, the shasums do not match so the file-on-disk is removed and a normal download proceeds as though no previous file existed. This is designed to restart an interrupted download.</source>
          <target state="translated">기존 파일이 있고 세 번째 인수가 shasum 다이제스트로 설정된 경우 파일이 유효한지 확인합니다. 그렇다면 함수는 일찍 종료되고 0을 반환합니다. 그렇지 않으면 shasum이 일치하지 않으므로 디스크의 파일이 제거되고 이전 파일이없는 것처럼 정상적인 다운로드가 진행됩니다. 이것은 중단 된 다운로드를 다시 시작하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="ad33322866f226833fc3131fe5565821ae55bcf5" translate="yes" xml:space="preserve">
          <source>If an explicit &lt;code&gt;gem_binary&lt;/code&gt; parameter is not being used with the &lt;code&gt;gem_package&lt;/code&gt; resource, it is preferable to provide the install options as a hash. This approach allows the provider to install the gem without needing to spawn an external gem process.</source>
          <target state="translated">명시적인 경우 &lt;code&gt;gem_binary&lt;/code&gt; 매개 변수가 사용되지 않는 &lt;code&gt;gem_package&lt;/code&gt; 자원, 해시로 설치 옵션을 제공하는 것이 바람직하다. 이 접근 방식을 통해 공급자는 외부 gem 프로세스를 생성하지 않고도 gem을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa443c05d8dfe8f5fff7ff0bdaf39e0bb1de4b01" translate="yes" xml:space="preserve">
          <source>If an organization does not have any nodes associated with it, it does not show up in the &lt;strong&gt;Nodes&lt;/strong&gt; section of the Chef Automate UI. This is also true for roles, cookbooks, recipes, attributes, resources, node names, and environments. Only those items that have a node associated with them will appear in the UI. Chef Automate has all the data for all of these, but does not highlight them in the UI. This is designed to keep the UI focused on the nodes in your cluster.</source>
          <target state="translated">조직에 연결된 노드가없는 경우 Chef Automate UI 의 &lt;strong&gt;노드&lt;/strong&gt; 섹션에 표시되지 않습니다 . 이는 역할, 요리 책, 레시피, 속성, 리소스, 노드 이름 및 환경에도 해당됩니다. 연결된 노드가있는 항목 만 UI에 표시됩니다. Chef Automate에는 이러한 모든 데이터가 있지만 UI에서 강조 표시하지는 않습니다. 이는 UI가 클러스터의 노드에 집중하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="03a432f947b29dc4fffa61afe9836292a76f135f" translate="yes" xml:space="preserve">
          <source>If an organization is using an internal certificate authority, then the root certificate will not appear in any &lt;code&gt;cacerts.pem&lt;/code&gt; file that ships by default with operating systems and web browsers. Because of this, no currently deployed system will be able to verify certificates that are issued in this manner. To allow other systems to trust certificates from an internal certificate authority, this root certificate will need to be configured so that other systems can follow the chain of authority back to the root certificate. (An intermediate certificate is not enough because the root certificate is not already globally known.)</source>
          <target state="translated">조직에서 내부 인증 기관을 사용하는 경우 루트 인증서는 기본적으로 운영 체제 및 웹 브라우저와 함께 제공되는 &lt;code&gt;cacerts.pem&lt;/code&gt; 파일에 표시되지 않습니다 . 따라서 현재 배포 된 시스템은 이러한 방식으로 발급 된 인증서를 확인할 수 없습니다. 다른 시스템이 내부 인증 기관의 인증서를 신뢰하도록하려면이 루트 인증서를 구성하여 다른 시스템이 다시 루트 인증서에 대한 기관 체인을 따를 수 있도록해야합니다. (루트 인증서가 이미 전역 적으로 알려지지 않았기 때문에 중간 인증서로는 충분하지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="6a9a7dd910f703d188375b213f4be87ab6d6a834" translate="yes" xml:space="preserve">
          <source>If an organization is using an internal certificate authority, then the root certificate will not appear in any &lt;code&gt;cacerts.pem&lt;/code&gt; file that ships by default with operating systems and web browsers. Because of this, no currently deployed system will be able to verify certificates that are issued in this manner. To allow other systems to trust certificates from an internal certificate authority, this root certificate will need to be configured so that other systems can follow the chain of authority back to the root certificate. (An intermediate certificate is not enough becuase the root certificate is not already globally known.)</source>
          <target state="translated">조직에서 내부 인증 기관을 사용하는 경우 기본적으로 운영 체제 및 웹 브라우저와 함께 제공되는 &lt;code&gt;cacerts.pem&lt;/code&gt; 파일 에 루트 인증서가 나타나지 않습니다 . 이로 인해 현재 배포 된 시스템에서는 이러한 방식으로 발급 된 인증서를 확인할 수 없습니다. 다른 시스템이 내부 인증 기관의 인증서를 신뢰하도록하려면 다른 시스템이 권한 체인을 따라 루트 인증서로 돌아갈 수 있도록이 루트 인증서를 구성해야합니다. 루트 인증서가 이미 세계적으로 알려지지 않았기 때문에 중간 인증서로는 충분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="34484689e24dbdb1617b36fa2e2a7a412f0e6998" translate="yes" xml:space="preserve">
          <source>If any of our PINGREQ targets receive an ACK, they forward it to us, and the member remains Alive.</source>
          <target state="translated">PINGREQ 대상 중 하나가 ACK를 받으면이를 우리에게 전달하고 구성원은 살아 있습니다.</target>
        </trans-unit>
        <trans-unit id="68026ac8e0bfc0e39056791152093501c13dc308" translate="yes" xml:space="preserve">
          <source>If any of the backends or frontends are in different networks from each other then add a &lt;code&gt;postgresql.md5_auth_cidr_addresses&lt;/code&gt; line to &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; with the following content where &lt;code&gt;, &quot;&amp;lt;NET-1_IN_CIDR&amp;gt;&quot;, ..., &quot;&amp;lt;NET-N_IN_CIDR&amp;gt;&quot;&lt;/code&gt; is the list of all of the networks that your backends and frontends are in. See the &lt;a href=&quot;index#configuring-frontend-and-backend-members-on-different-networks&quot;&gt;Configuring Frontend and Backend Members on Different Networks&lt;/a&gt; section for more information:</source>
          <target state="translated">백엔드 또는 프런트 엔드가 서로 다른 네트워크에있는 경우 &lt;code&gt;postgresql.md5_auth_cidr_addresses&lt;/code&gt; 줄을 &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; 에 추가합니다. 여기서 &lt;code&gt;, &quot;&amp;lt;NET-1_IN_CIDR&amp;gt;&quot;, ..., &quot;&amp;lt;NET-N_IN_CIDR&amp;gt;&quot;&lt;/code&gt; 은 백엔드와 프런트 엔드가있는 모든 네트워크의 목록입니다. 자세한 내용은 &lt;a href=&quot;index#configuring-frontend-and-backend-members-on-different-networks&quot;&gt;다른 네트워크에서 프런트 엔드 및 백엔드 구성원 구성&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="90c7af1550a3a3a669fadf13d90b1eec1af577ca" translate="yes" xml:space="preserve">
          <source>If any of the status values return &lt;code&gt;fail&lt;/code&gt;, this typically means the Chef Infra Server is unavailable for that service.</source>
          <target state="translated">상태 값 중 하나라도 &lt;code&gt;fail&lt;/code&gt; 을 반환하는 경우 이는 일반적으로 해당 서비스에 대해 Chef Infra Server를 사용할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="62be9a9df074f863db850edb7dc5d7d5523e1e1b" translate="yes" xml:space="preserve">
          <source>If any of the status values return &lt;code&gt;fail&lt;/code&gt;, this typically means the Chef server is unavailable for that service.</source>
          <target state="translated">상태 값 중 하나라도 &lt;code&gt;fail&lt;/code&gt; 하면 이는 해당 서버에서 Chef 서버를 사용할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="63cf1f2ae303ff75fc5974272f49b1a7ca11152c" translate="yes" xml:space="preserve">
          <source>If any of the tests fail, check the output and compare your settings in the &lt;code&gt;mac.rb&lt;/code&gt; or &lt;code&gt;windows.rb&lt;/code&gt; files against the matching tests.</source>
          <target state="translated">테스트 중 하나라도 실패하면 출력을 확인하고 &lt;code&gt;mac.rb&lt;/code&gt; 또는 &lt;code&gt;windows.rb&lt;/code&gt; 파일 의 설정을 일치하는 테스트 와 비교하십시오 .</target>
        </trans-unit>
        <trans-unit id="05b98e210ad5e9ed18da34cbde0c1543ca353fff" translate="yes" xml:space="preserve">
          <source>If any services depend on the secret being changed, attempt to restart them after changing the secret. Added in Chef Server 12.16.2.</source>
          <target state="translated">변경중인 암호에 의존하는 서비스가 있으면 암호를 변경 한 후 서비스를 다시 시작하십시오. Chef Server 12.16.2에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="8159392b83ac42691b9bc780f41743d17060efaf" translate="yes" xml:space="preserve">
          <source>If any tests fail for either project, the entire Union run will fail and neither project will be automatically promoted. Additionally, if there&amp;rsquo;s another failed Union run before the first one fails which includes some of the same projects, then all the projects from both Union runs must pass their tests before anything can be promoted.</source>
          <target state="translated">두 프로젝트 중 하나에 대한 테스트가 실패하면 전체 Union 실행이 실패하고 두 프로젝트 모두 자동으로 승격되지 않습니다. 또한 동일한 프로젝트 중 일부를 포함하여 첫 번째가 실패하기 전에 다른 Union 실행이 실패한 경우 두 Union 실행의 모든 ​​프로젝트가 테스트를 통과해야 어떤 것이 든 승격 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1ca4b758fe2dfaaa5a823603ce9cdf31e76865b" translate="yes" xml:space="preserve">
          <source>If anything other than &lt;code&gt;0&lt;/code&gt; is returned, the machine is running the &lt;code&gt;xen&lt;/code&gt; kernel.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 이외의 값 이 반환되면 시스템은 &lt;code&gt;xen&lt;/code&gt; 커널을 실행하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="77f80fd056d2a2c9c5bf82ba856ee22237b681b1" translate="yes" xml:space="preserve">
          <source>If authentication is enabled for Elasticsearch or Kibana, Chef Automate&amp;rsquo;s web server will look for the session cookie and validate the session is valid and active.</source>
          <target state="translated">Elasticsearch 또는 Kibana에 대한 인증이 활성화 된 경우 Chef Automate의 웹 서버는 세션 쿠키를 찾고 세션이 유효하고 활성 상태인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2e4edfa3e85579296033f23db0706f80cd40e937" translate="yes" xml:space="preserve">
          <source>If boot diagnostics are enabled for the machine they will be saved in a storage account. This method returns the URI for the storage account.</source>
          <target state="translated">머신에 대해 부팅 진단이 활성화 된 경우 스토리지 계정에 저장됩니다. 이 메서드는 스토리지 계정의 URI를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="125339240352d7f4eb48b59626485fee4ca94ea7" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;filepath&lt;/code&gt; is given, the value passed in &lt;code&gt;content&lt;/code&gt; is used.</source>
          <target state="translated">두 경우 &lt;code&gt;content&lt;/code&gt; 및 &lt;code&gt;filepath&lt;/code&gt; 주어진다에 전달 된 값 &lt;code&gt;content&lt;/code&gt; 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa9189b14a72b3bbbbc0f80ead40d2d674d2bca8" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;group_name&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; is set then &lt;code&gt;name&lt;/code&gt; takes priority</source>
          <target state="translated">&lt;code&gt;group_name&lt;/code&gt; 과 &lt;code&gt;name&lt;/code&gt; 이 모두 설정되면 &lt;code&gt;name&lt;/code&gt; 이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="ace79663d401eca191a558e8dca1203ab869565d" translate="yes" xml:space="preserve">
          <source>If capture is enabled, then the client will capture both the stdout and the stderr channels of the command. The channel output will be sent back regardless of whether the command succeeded or failed. It will be sent in raw form, including any terminating whitespace. If the command produced no output, then the value will be an empty string.</source>
          <target state="translated">캡처가 활성화 된 경우 클라이언트는 명령의 stdout 및 stderr 채널을 모두 캡처합니다. 명령의 성공 여부에 관계없이 채널 출력이 다시 전송됩니다. 종료 공백을 포함하여 원시 형식으로 전송됩니다. 명령이 출력을 생성하지 않으면 값은 빈 문자열이됩니다.</target>
        </trans-unit>
        <trans-unit id="0e0081eafc09a1336ebd98c5d99fb19593f2be8c" translate="yes" xml:space="preserve">
          <source>If configured, it will retrieve additional attributes, using the configured names (&lt;code&gt;user_id_attr&lt;/code&gt;, &lt;code&gt;email_attr&lt;/code&gt;, and &lt;code&gt;user_display_name_attr&lt;/code&gt;). See &lt;a href=&quot;../configuration/index#ldap&quot;&gt;Configuration: LDAP&lt;/a&gt; for an overview.</source>
          <target state="translated">구성된 경우 구성된 이름 ( &lt;code&gt;user_id_attr&lt;/code&gt; , &lt;code&gt;email_attr&lt;/code&gt; 및 &lt;code&gt;user_display_name_attr&lt;/code&gt; )을 사용하여 추가 속성을 검색합니다 . 개요는 &lt;a href=&quot;../configuration/index#ldap&quot;&gt;구성 : LDAP&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="963b968678f3c72f2fa88ef472f7f1178a8668a7" translate="yes" xml:space="preserve">
          <source>If desired, create subgroups of Effortless Infra nodes by adding a second condition that matches a specific &lt;code&gt;Chef Policy Name&lt;/code&gt;.</source>
          <target state="translated">원하는 경우 특정 &lt;code&gt;Chef Policy Name&lt;/code&gt; 과 일치하는 두 번째 조건을 추가하여 Effortless Infra 노드의 하위 그룹을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="663ac21d2dae074bd14b210cf3a2d8d9bec13e0b" translate="yes" xml:space="preserve">
          <source>If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Only IPv4 is supported.</source>
          <target state="translated">대상 범위가 지정된 경우 방화벽은 이러한 범위에 대상 IP 주소가있는 트래픽에만 적용됩니다. 이러한 범위는 CIDR 형식으로 표현되어야합니다. IPv4 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="274d1ddf8ec53d5fcd5d8a03ed70942d3dc8ebd8" translate="yes" xml:space="preserve">
          <source>If enabled, all container images will be validated by Binary Authorization.</source>
          <target state="translated">활성화하면 모든 컨테이너 이미지가 Binary Authorization에 의해 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="cc3608d2e3c805206ce4859783859010ad7f8d32" translate="yes" xml:space="preserve">
          <source>If enabled, pods must be valid under a PodSecurityPolicy to be created.</source>
          <target state="translated">활성화 된 경우 포드는 생성 될 PodSecurityPolicy에서 유효해야합니다.</target>
        </trans-unit>
        <trans-unit id="55e8ba5b6fc3238aef3950a80abbc84c5948b9f0" translate="yes" xml:space="preserve">
          <source>If field is true, then the column families that are not specified in columnFamilies list are not exposed in the table schema</source>
          <target state="translated">field가 true이면 columnFamilies 목록에 지정되지 않은 column family가 테이블 스키마에 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="643b9889e55880d40795d9d6172ba22eb153d976" translate="yes" xml:space="preserve">
          <source>If field is true, then the rowkey column families will be read and converted to string.</source>
          <target state="translated">field가 true이면 rowkey 열 패밀리를 읽고 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="c53fc919d04890d86f36760b8cc9730c859fedcc" translate="yes" xml:space="preserve">
          <source>If for whatever reason you do not want your user to be in the &lt;code&gt;root&lt;/code&gt; group inside the container, you will need to add some additional volumes in order to create the needed directories. However, since you will (by definition) not have write permissions on the &lt;code&gt;/hab&lt;/code&gt; directory as a whole, your Supervisor &lt;em&gt;will not&lt;/em&gt; be able to update either itself or the services it supervises.</source>
          <target state="translated">어떤 이유로 든 사용자가 컨테이너 내부의 &lt;code&gt;root&lt;/code&gt; 그룹 에 있지 않도록 하려면 필요한 디렉터리를 만들기 위해 몇 가지 추가 볼륨을 추가해야합니다. 그러나 정의에 따라 &lt;code&gt;/hab&lt;/code&gt; 디렉토리 전체 에 대한 쓰기 권한 &lt;em&gt;이 없기&lt;/em&gt; 때문에 감독자 &lt;em&gt;는&lt;/em&gt; 자신이나 감독하는 서비스를 업데이트 할 수 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f9ae45877e97010c3730d49cb0fcdd1a267f8d7c" translate="yes" xml:space="preserve">
          <source>If host-based firewalls (iptables, ufw, etc.) are being used, ensure that ports 80 and 443 are open. See the &lt;a href=&quot;../install_server_pre/index#firewalls&quot;&gt;firewalls&lt;/a&gt; section of the install prerequisites for additional details.</source>
          <target state="translated">호스트 기반 방화벽 (iptables, ufw 등)을 사용하는 경우 포트 80 및 443이 열려 있는지 확인합니다. 추가 세부 사항은 설치 전제 조건 의 &lt;a href=&quot;../install_server_pre/index#firewalls&quot;&gt;방화벽&lt;/a&gt; 섹션을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="35600fbd84308f3af7bb364b0a9f0b00d344abd7" translate="yes" xml:space="preserve">
          <source>If host-based firewalls (iptables, ufw, etc.) are being used, ensure that ports 80 and 443 are open. See the &lt;a href=&quot;install_server_pre/index#firewalls&quot;&gt;firewalls&lt;/a&gt; section of the install prerequisites for additional details.</source>
          <target state="translated">호스트 기반 방화벽 (iptables, ufw 등)을 사용하는 경우 포트 80 및 443이 열려 있는지 확인합니다. 추가 세부 사항은 설치 전제 조건 의 &lt;a href=&quot;install_server_pre/index#firewalls&quot;&gt;방화벽&lt;/a&gt; 섹션을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="fc426b268121e6ac1a6040a844c8080f607f3721" translate="yes" xml:space="preserve">
          <source>If it finds a plan both inside as well as outside of a target folder, the target specific plan will be used as long as that is the target currently being built. However it is strongly recommended that you do not have plans both inside and outside of a target folder. We currently allow this only for backwards compatibility with some existing plans but plan to eventually fail builds where a plan exists in both places. The best practice when you need multiple plans for different targets is to put each plan in its own target folder.</source>
          <target state="translated">대상 폴더 내부 및 외부 모두에서 계획을 찾으면 현재 빌드중인 대상인 한 대상 특정 계획이 사용됩니다. 그러나 대상 폴더 내부와 외부 모두에 계획을 세우지 않는 것이 좋습니다. 현재 일부 기존 계획과의 하위 호환성을 위해서만 허용되지만 계획이 두 위치에 모두 존재하는 빌드에서는 결국 실패 할 계획입니다. 서로 다른 대상에 대해 여러 계획이 필요한 경우 모범 사례는 각 계획을 자체 대상 폴더에 저장하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b07b7bea68d770c131a4df12cfde7d21761fd90a" translate="yes" xml:space="preserve">
          <source>If it is difficult to determine why a particular value is being used, you can use the Event Log to determine what is happening.</source>
          <target state="translated">특정 값이 사용되는 이유를 확인하기 어려운 경우 이벤트 로그를 사용하여 어떤 일이 발생하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8855e035cb4c1bcb79f543e451c8930ac282d50b" translate="yes" xml:space="preserve">
          <source>If it is valid for the property to be set to nil, then update the property to include that.</source>
          <target state="translated">속성을 nil로 설정하는 것이 유효한 경우 속성을 업데이트하여이를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="74b724c553d09b751a8551e4d4b34fad54f353f1" translate="yes" xml:space="preserve">
          <source>If it is verified that the primary host is going to be down for a while, the secondary can be promoted to primary:</source>
          <target state="translated">기본 호스트가 잠시 다운 될 것으로 확인되면 보조 호스트를 기본 호스트로 승격시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11cde72d18e1f89697db55c813e56a8644fb353e" translate="yes" xml:space="preserve">
          <source>If it remains &lt;code&gt;DUnknown&lt;/code&gt;, DRBD on the secondary can be manually restarted and it will start to sync. The &lt;code&gt;DUnknown&lt;/code&gt; status is the report which indicates that DRBD sees no network connection to its partner.</source>
          <target state="translated">&lt;code&gt;DUnknown&lt;/code&gt; 으로 유지 되면 보조의 DRBD를 수동으로 다시 시작할 수 있으며 동기화를 시작합니다. &lt;code&gt;DUnknown&lt;/code&gt; 의 상태는 DRBD는 파트너 네트워크 연결을 볼 수 없음을 나타냅니다 보고서입니다.</target>
        </trans-unit>
        <trans-unit id="affff728355612ca82b492a711e3dfd9dd924448" translate="yes" xml:space="preserve">
          <source>If key should be a cookbook_file, specify a cookbook where the key is located for files/default. Default value is nil, so it will use the cookbook where the resource is used.</source>
          <target state="translated">키가 cookbook_file이어야하는 경우 파일 / 기본값에 대한 키가있는 요리 책을 지정하십시오. 기본값은 nil이므로 리소스가 사용되는 쿡북을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6b43b6addc0d07d76ca0567a29437a4842d7437e" translate="yes" xml:space="preserve">
          <source>If logging is enabled for this subnetwork</source>
          <target state="translated">이 서브 네트워크에 로깅이 사용 설정된 경우</target>
        </trans-unit>
        <trans-unit id="a5b2a24c15cc22d8b13afc97c59c54fcb57778b3" translate="yes" xml:space="preserve">
          <source>If multiple configuration files exists in a &lt;code&gt;.d&lt;/code&gt; directory, ensure that the same setting has the same value in all files.</source>
          <target state="translated">&lt;code&gt;.d&lt;/code&gt; 디렉토리 에 여러 구성 파일이있는 경우 모든 파일에서 동일한 설정 값이 동일한 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b16c135af2e01375b9d4f2784e0c265f3e2e8538" translate="yes" xml:space="preserve">
          <source>If multiple cookbook directories are being used, chef-solo expects the tar.gz archive to have a directory structure similar to the following:</source>
          <target state="translated">여러 요리 책 디렉토리를 사용하는 경우 chef-solo는 tar.gz 아카이브가 다음과 유사한 디렉토리 구조를 가질 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="597321f14dcdf9561a0001c53fbd700f972f8292" translate="yes" xml:space="preserve">
          <source>If multiple pipelines are desired:</source>
          <target state="translated">여러 파이프 라인이 필요한 경우 :</target>
        </trans-unit>
        <trans-unit id="b9a1e87040f87b42c5a083be6008fe521e95d789" translate="yes" xml:space="preserve">
          <source>If necessary, promote what is thought as the most recent leader. Refer to the &lt;a href=&quot;index#promoting-a-previous-leader&quot;&gt;Promoting a Previous Leader section&lt;/a&gt; for more detail.</source>
          <target state="translated">필요한 경우 가장 최근의 리더로 생각되는 것을 홍보하십시오. 자세한 내용은 &lt;a href=&quot;index#promoting-a-previous-leader&quot;&gt;이전 리더 승격 섹션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f04c5325c4ca39272608a8ca9feff7d5a0a9575" translate="yes" xml:space="preserve">
          <source>If needed, you can &amp;ldquo;step forward&amp;rdquo; versions by first going from 12 to 13, correcting any issues, and then incrementing from 13 to 14, etc. until you reach Chef Infra Client 16.</source>
          <target state="translated">필요한 경우 먼저 12에서 13으로 이동하여 문제를 수정 한 다음 Chef Infra Client 16에 도달 할 때까지 13에서 14로 증가하는 방식으로 버전을 &quot;앞으로 진행&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f188456eb1142b5949ccc9c3f155bd0d4b095f71" translate="yes" xml:space="preserve">
          <source>If neither the &lt;strong&gt;Dependencies&lt;/strong&gt; or &lt;strong&gt;Required By&lt;/strong&gt; tabs are visible, then that particular project is not part of a declared dependency graph.</source>
          <target state="translated">어느 경우 &lt;strong&gt;종속성&lt;/strong&gt; 또는 &lt;strong&gt;필요에 의해&lt;/strong&gt; 탭은 특정 프로젝트가 선언 된 종속 그래프의 일부가 아님을 다음 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="717cd30fe07795bbd4bbf2ebdd15dd886e987df3" translate="yes" xml:space="preserve">
          <source>If new_size or heap_size is also specified directly in java_opts, it will be ignored in favor of the chef-server.rb values or the defaults as calculated here. Only use chef-server.rb to set heap and new sizes. Learn more about &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html&quot;&gt;Elasticsearch heap-size documentation&lt;/a&gt;.</source>
          <target state="translated">new_size 또는 heap_size도 java_opts에 직접 지정되는 경우 여기에서 계산 된대로 chef-server.rb 값 또는 기본값을 선호하여 무시됩니다. 힙 및 새 크기를 설정하려면 chef-server.rb 만 사용하십시오. &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html&quot;&gt;Elasticsearch 힙 크기 문서&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="4adbca7162e37162900050f29e01696e71a40b8e" translate="yes" xml:space="preserve">
          <source>If new_size or heap_size is also specified directly in java_opts, it will be ignored in favor of the chef-server.rb values or the defaults as calculated here. Only use chef-server.rb to set heap and new sizes. Learn more about &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html&quot;&gt;Elasticsearch heap-size&lt;/a&gt;. It will error out if the system memory is less than 4 GB. This value is bounded between 1 GB - 28 GB.</source>
          <target state="translated">new_size 또는 heap_size도 java_opts에 직접 지정되는 경우 여기에서 계산 된대로 chef-server.rb 값 또는 기본값을 선호하여 무시됩니다. 힙 및 새 크기를 설정하려면 chef-server.rb 만 사용하십시오. &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html&quot;&gt;Elasticsearch 힙 크기&lt;/a&gt; 에 대해 자세히 알아보세요 . 시스템 메모리가 4GB 미만이면 오류가 발생합니다. 이 값은 1GB-28GB 사이로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="f406f162077bfd5c494358124a7f1a4864ef0e1b" translate="yes" xml:space="preserve">
          <source>If no NAMED_CONF is given chef-shell will load ~/.chef/chef_shell.rb if it exists</source>
          <target state="translated">NAMED_CONF가 주어지지 않으면 chef-shell은 ~ / .chef / chef_shell.rb를로드합니다.</target>
        </trans-unit>
        <trans-unit id="d7c38691de4b22564fa67fb656744d2f65d4bebd" translate="yes" xml:space="preserve">
          <source>If no Supervisor can make contact with Supervisor B, either directly or indirectly, the network comes to view Supervisor B as &amp;ldquo;confirmed&amp;rdquo; dead. In this case, Supervisor B is effectively removed from all membership lists across the network. As a result, no Supervisors try to contact it again. This is ultimately what happens when you shut down a Supervisor; the rest of the network realizes that it is gone and can reconfigure any services to no longer communicate with any services that were running on it.</source>
          <target state="translated">감독자가 감독자 B와 직접 또는 간접적으로 연락 할 수없는 경우 네트워크는 감독자 B를 &quot;확인&quot;된 것으로 간주합니다. 이 경우 Supervisor B는 네트워크의 모든 구성원 목록에서 효과적으로 제거됩니다. 결과적으로 감독자가 다시 연락을 시도하지 않습니다. 이것은 궁극적으로 Supervisor를 종료 할 때 발생합니다. 나머지 네트워크는 네트워크가 사라 졌음을 인식하고 실행 중이던 서비스와 더 이상 통신하지 않도록 서비스를 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac25590706d74c30c98ded99312c0992968ff471" translate="yes" xml:space="preserve">
          <source>If no chef_shell.rb can be found, chef-shell falls back to load:</source>
          <target state="translated">chef_shell.rb를 찾을 수 없으면 chef-shell이 ​​다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="6270bc2d62ec200f9a4f260d6606c5589a1fbd75" translate="yes" xml:space="preserve">
          <source>If no command line argument or environment variable is set, these products will attempt to request acceptance through an interactive prompt. If the prompt cannot be displayed, then the product will fail with an exit code 172.</source>
          <target state="translated">명령 줄 인수 또는 환경 변수가 설정되지 않은 경우 이러한 제품은 대화 형 프롬프트를 통해 수락을 요청합니다. 프롬프트가 표시되지 않으면 제품이 종료 코드 172와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="257e550593af4959ef2bf00f2c1cd8884d8cf8de" translate="yes" xml:space="preserve">
          <source>If no key is configured or the key file can&amp;rsquo;t be read, the keys array will be empty: &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">키가 구성되지 않았거나 키 파일을 읽을 수없는 경우 키 배열이 비어 있습니다 : &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78337b4ec44082db384d583b1541a02203005a61" translate="yes" xml:space="preserve">
          <source>If no parameter is provided, the subscription&amp;rsquo;s default VPC will be returned.</source>
          <target state="translated">매개 변수가 제공되지 않으면 구독의 기본 VPC가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ed2f607389164897afda9bc35bfac8b4ef9fa6a3" translate="yes" xml:space="preserve">
          <source>If no parameters are passed, the resource will attempt to retrieve the &lt;code&gt;default&lt;/code&gt; ECS Cluster.</source>
          <target state="translated">매개 변수가 전달되지 않으면 리소스가 &lt;code&gt;default&lt;/code&gt; ECS 클러스터 검색을 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="91786dd1de4f2bc3850b5117719bd4f94366343a" translate="yes" xml:space="preserve">
          <source>If no properties are marked &lt;code&gt;true&lt;/code&gt;, the property that defaults to the &lt;code&gt;name&lt;/code&gt; of the resource is marked &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">속성이 &lt;code&gt;true&lt;/code&gt; 로 표시되지 않으면 자원 &lt;code&gt;name&lt;/code&gt; 으로 기본 설정되는 속성이 &lt;code&gt;true&lt;/code&gt; 로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="1b5263732e2db817cf9df5b948a1b29570a0a9f1" translate="yes" xml:space="preserve">
          <source>If no virtualization platform is detected, this will return &lt;code&gt;true&lt;/code&gt;. For unsupported virtualization platforms this can result in false posititves.</source>
          <target state="translated">가상화 플랫폼이 감지되지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 지원되지 않는 가상화 플랫폼의 경우 이로 인해 오탐이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cd6bff0a9e64406677f6ff80bff75e414495916" translate="yes" xml:space="preserve">
          <source>If no, recursively check if the user is a member of a security group that has permission to that object</source>
          <target state="translated">그렇지 않은 경우 사용자가 해당 개체에 대한 권한이있는 보안 그룹의 구성원인지 반복적으로 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8a21421a957c200973f77bca7fcbf29ddf49e5e7" translate="yes" xml:space="preserve">
          <source>If nodes in a backend HA cluster are not available, etcd may not be able to form a cluster. If etcd cannot form a cluster, rebuild the cluster. First reset the cluster identifier on an active node, rebuild the nodes that will be part of the cluster, and then rejoin the rebuilt nodes to the cluster by using the &lt;code&gt;chef-backend-ctl join-cluster&lt;/code&gt; subcommand.</source>
          <target state="translated">백엔드 HA 클러스터의 노드를 사용할 수없는 경우 etcd가 클러스터를 형성하지 못할 수 있습니다. etcd가 클러스터를 형성 할 수없는 경우 클러스터를 다시 빌드하십시오. 먼저 활성 노드에서 클러스터 식별자를 재설정하고 클러스터의 일부가 될 노드를 재 구축 한 다음 &lt;code&gt;chef-backend-ctl join-cluster&lt;/code&gt; 하위 명령 을 사용하여 재 구축 된 노드를 클러스터에 다시 조인합니다 .</target>
        </trans-unit>
        <trans-unit id="194a52bb5404e00084013cb8d0482585a8f509c2" translate="yes" xml:space="preserve">
          <source>If not set, the table is partitioned by pseudo column, referenced via either &amp;lsquo;_PARTITIONTIME&amp;rsquo; as TIMESTAMP type, or &amp;lsquo;_PARTITIONDATE&amp;rsquo; as DATE type. If field is specified, the table is instead partitioned by this field. The field must be a top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or REQUIRED.</source>
          <target state="translated">설정되지 않은 경우 테이블은 TIMESTAMP 유형의 '_PARTITIONTIME'또는 DATE 유형의 '_PARTITIONDATE'를 통해 참조되는 유사 열로 분할됩니다. 필드가 지정된 경우 테이블은 대신이 필드로 분할됩니다. 필드는 최상위 TIMESTAMP 또는 DATE 필드 여야합니다. 모드는 NULLABLE 또는 REQUIRED 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c95c5fcf8931150403bf1f57df792ba6473be5d4" translate="yes" xml:space="preserve">
          <source>If omitted, the default &lt;code&gt;max_archives&lt;/code&gt;, &lt;code&gt;max_snapshots&lt;/code&gt;, and &lt;code&gt;notation&lt;/code&gt; settings will create daily backups and keep the most recent seven. Any standard cron notation is supported. If you wish to keep all backups or snapshots you can set both &lt;code&gt;max_snapshots&lt;/code&gt; and/or &lt;code&gt;max_archives&lt;/code&gt; options to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">생략하면 기본 &lt;code&gt;max_archives&lt;/code&gt; , &lt;code&gt;max_snapshots&lt;/code&gt; 및 &lt;code&gt;notation&lt;/code&gt; 설정이 매일 백업을 만들고 최근 7 개를 유지합니다. 모든 표준 크론 표기법이 지원됩니다. 모든 백업 또는 스냅 샷을 유지하려면 &lt;code&gt;max_snapshots&lt;/code&gt; 및 / 또는 &lt;code&gt;max_archives&lt;/code&gt; 옵션을 모두 &lt;code&gt;nil&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a88e49473b9ac6baab6ab2563cca48158fbe22f" translate="yes" xml:space="preserve">
          <source>If one is present, verify that it has the correct read permissions.</source>
          <target state="translated">있는 경우 올바른 읽기 권한이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ca61c66017cb21888dab2500d792330a4aaa489f" translate="yes" xml:space="preserve">
          <source>If only a project name is provided, the master pipeline for that project is the dependency.</source>
          <target state="translated">프로젝트 이름 만 제공되는 경우 해당 프로젝트의 마스터 파이프 라인은 종속성입니다.</target>
        </trans-unit>
        <trans-unit id="39704e213ce3427c63fed241114f163033c31901" translate="yes" xml:space="preserve">
          <source>If potential misconfigurations are detected for this SSL policy, this field will be populated with warning messages.</source>
          <target state="translated">이 SSL 정책에 대해 잠재적 인 잘못된 구성이 감지되면이 필드가 경고 메시지로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="91cc499a6774d37bd949570e07c6e9cd783ac5c6" translate="yes" xml:space="preserve">
          <source>If processes is started by using the &lt;strong&gt;execute&lt;/strong&gt; or &lt;strong&gt;script&lt;/strong&gt; resources (or any of the resources based on those two resources, such as &lt;strong&gt;bash&lt;/strong&gt;), use the &lt;code&gt;environment&lt;/code&gt; attribute to alter the environment that will be passed to the process.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 또는 &lt;strong&gt;스크립트&lt;/strong&gt; 자원 (또는 &lt;strong&gt;bash&lt;/strong&gt; 와 같은 두 자원을 기반으로하는 자원) 을 사용하여 프로세스를 시작한 경우 &lt;code&gt;environment&lt;/code&gt; 속성을 사용 하여 프로세스에 전달 될 환경을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="e55560f96f828aedbd27e5ce7e51ceca943e3c51" translate="yes" xml:space="preserve">
          <source>If provisioning uses the SSH driver, do the following:</source>
          <target state="translated">프로비저닝이 SSH 드라이버를 사용하는 경우 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="542e1b2365c9904aba128b2caa8f5e459bac075c" translate="yes" xml:space="preserve">
          <source>If push delivery is used with this subscription, this field is used to configure it. An empty pushConfig signifies that the subscriber will pull and ack messages using API methods.</source>
          <target state="translated">푸시 배달이이 구독과 함께 사용되는 경우이 필드를 사용하여 구성합니다. 빈 pushConfig는 구독자가 API 메서드를 사용하여 메시지를 가져오고 확인 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9a493a01e51ef0ee1a88bdbd69a8974dac20a684" translate="yes" xml:space="preserve">
          <source>If quorum had been set at 80% (&lt;code&gt;--quorum 80%&lt;/code&gt;), then quorum would have passed with the previous example.</source>
          <target state="translated">쿼럼이 80 % ( &lt;code&gt;--quorum 80%&lt;/code&gt; ) 로 설정된 경우 이전 예제에서 쿼럼이 통과되었을 것입니다.</target>
        </trans-unit>
        <trans-unit id="d8576a6c0a631d4c9e673459ded7aafbea203ad5" translate="yes" xml:space="preserve">
          <source>If rights are not specified, nothing will be changed. Chef Infra Client does not clear out the rights on a file or directory if rights are not specified.</source>
          <target state="translated">권한을 지정하지 않으면 아무것도 변경되지 않습니다. 권한이 지정되지 않은 경우 Chef Infra Client는 파일 또는 디렉토리에 대한 권한을 지우지 않습니다.</target>
        </trans-unit>
        <trans-unit id="661f6db2649f37b7838e2b28fa6528b301f915ff" translate="yes" xml:space="preserve">
          <source>If rights are not specified, nothing will be changed. The chef-client does not clear out the rights on a file or directory if rights are not specified.</source>
          <target state="translated">권한이 지정되지 않으면 아무 것도 변경되지 않습니다. chef-client는 권한이 지정되지 않은 경우 파일 또는 디렉토리에 대한 권한을 지우지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e621528744bfb0e04cb8bacde19fbe837099da93" translate="yes" xml:space="preserve">
          <source>If running Chef Client releases prior to Chef Client 14, please disable the Ohai Passwd and Sessions plugins on your nodes in &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; or using the Chef Infra Client cookbook to keep the data sent to your Automate system to a minimum. This improves search performance and reduces disk space requirements.</source>
          <target state="translated">Chef Client 14 이전의 Chef Client 릴리스를 실행하는 경우 &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; 의 노드에서 Ohai Passwd 및 Sessions 플러그인을 비활성화 하거나 Chef Infra Client 쿡북을 사용하여 Automate 시스템으로 전송되는 데이터를 최소로 유지하십시오. . 이렇게하면 검색 성능이 향상되고 디스크 공간 요구 사항이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="5f96fa0d0d6d57799b8c60a84d8736075c36bc47" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, Chef Infra Server will proxy all requests sent to &lt;code&gt;/data-collector&lt;/code&gt; to the configured Chef Automate &lt;code&gt;data_collector['root_url']&lt;/code&gt;. Note that &lt;em&gt;this route&lt;/em&gt; does not check the request signature and add the right data_collector token, but just proxies the Automate endpoint &lt;strong&gt;as-is&lt;/strong&gt;. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정하면 Chef Infra Server는 &lt;code&gt;/data-collector&lt;/code&gt; 로 전송 된 모든 요청 을 구성된 Chef Automate &lt;code&gt;data_collector['root_url']&lt;/code&gt; 로 프록시 합니다. 하는 것으로 &lt;em&gt;이 경로는&lt;/em&gt; 요청 서명을 확인하고 오른쪽 data_collector 토큰을 추가 할 수 있지만 단지 자동화 엔드 포인트 프록시를하지 않는 &lt;strong&gt;있는 그대로를&lt;/strong&gt; . 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a1c13870d3b12ba651474cb1495a7380dfea858" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, Chef Infra Server will proxy all requests sent to &lt;code&gt;/data-collector&lt;/code&gt; to the configured Chef Automate &lt;code&gt;data_collector['root_url']&lt;/code&gt;. Note that &lt;em&gt;this route&lt;/em&gt; does not check the request signature and add the right data_collector token, but just proxies the Chef Automate endpoint &lt;strong&gt;as-is&lt;/strong&gt;. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정하면 Chef Infra Server는 &lt;code&gt;/data-collector&lt;/code&gt; 로 전송 된 모든 요청 을 구성된 Chef Automate &lt;code&gt;data_collector['root_url']&lt;/code&gt; 로 프록시 합니다. 하는 것으로 &lt;em&gt;이 경로는&lt;/em&gt; 요청 서명을 확인하고 오른쪽 data_collector 토큰을 추가 할 수 있지만 단지 요리사 자동화 엔드 포인트 프록시를하지 않는 &lt;strong&gt;있는 그대로를&lt;/strong&gt; . 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e663a71bece9b0832699736a2203c8d54d1915" translate="yes" xml:space="preserve">
          <source>If set to the lowercase string &lt;code&gt;&quot;true&quot;&lt;/code&gt; this environment variable will unconditionally disable interactive progress bars (i.e. &amp;ldquo;spinners&amp;rdquo;) where possible</source>
          <target state="translated">소문자 문자열 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 로 설정 하면이 환경 변수는 가능한 경우 대화 형 진행률 표시 줄 (예 : &quot;스피너&quot;)을 무조건 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6f5fd6d8e373a9e1d23f22941294dc852930f09b" translate="yes" xml:space="preserve">
          <source>If set to the lowercase string &lt;code&gt;&quot;true&quot;&lt;/code&gt; this environment variable will unconditionally disable text coloring where possible</source>
          <target state="translated">소문자 문자열 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 로 설정 하면이 환경 변수는 가능한 경우 텍스트 색상 표시를 무조건 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="96e4952076aa97410d0383cfdf55a5d0b1ecfc50" translate="yes" xml:space="preserve">
          <source>If set to true then this exclusion is disabled and it does not exclude any log entries.</source>
          <target state="translated">true로 설정하면이 제외가 비활성화되고 로그 항목이 제외되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f7631b82ac7e6da3395fbbc07b7e8957e6e8aac" translate="yes" xml:space="preserve">
          <source>If set to true, Chef Infra Server will proxy all requests sent to /data-collector to the configured Chef Automate &lt;code&gt;data_collector['root_url']&lt;/code&gt;. Note that this route does not check the request signature and add the right data_collector token, but just proxies the Chef Automate endpoint as-is.</source>
          <target state="translated">true로 설정하면 Chef Infra Server는 / data-collector로 전송 된 모든 요청을 구성된 Chef Automate &lt;code&gt;data_collector['root_url']&lt;/code&gt; 로 프록시 합니다. 이 경로는 요청 서명을 확인하지 않고 올바른 data_collector 토큰을 추가하지만 Chef Automate 엔드 포인트를있는 그대로 프록시합니다.</target>
        </trans-unit>
        <trans-unit id="753700fdd8314bd127f66d2ba2afd0cca063b005" translate="yes" xml:space="preserve">
          <source>If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false.</source>
          <target state="translated">true로 설정하면 요청을 리디렉션하기 전에 원래 URL의 모든 쿼리 부분이 제거됩니다. false로 설정하면 원래 URL의 쿼리 부분이 유지됩니다. 기본값은 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5631fd6201caff9f54315c2a354885eaedd5286c" translate="yes" xml:space="preserve">
          <source>If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.</source>
          <target state="translated">true로 설정된 경우이 테이블에 대한 쿼리에는 파티션 제거에 사용할 수있는 파티션 필터를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a79bd2cec4eb690e3c3089c01401475c3bf70b2a" translate="yes" xml:space="preserve">
          <source>If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.</source>
          <target state="translated">true로 설정하면 리디렉션 된 요청의 URL 체계가 https로 설정됩니다. false로 설정하면 리디렉션 된 요청의 URL 체계가 요청의 URL 체계와 동일하게 유지됩니다. TargetHttpProxys에서 사용되는 UrlMaps에 대해서만 설정해야합니다. TargetHttpsProxy에 대해이를 true로 설정하는 것은 허용되지 않습니다. 기본값은 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0ab2a54a71904dda00dd676e69c6bad13cb84f12" translate="yes" xml:space="preserve">
          <source>If set to true, the specified action is not enforced.</source>
          <target state="translated">true로 설정하면 지정된 작업이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7a79673d2632558fd6c544c031fc5482c9a9536f" translate="yes" xml:space="preserve">
          <source>If set, a specified proxy is passed to GPG via &lt;code&gt;http-proxy=&lt;/code&gt;.</source>
          <target state="translated">설정된 경우 지정된 프록시가 &lt;code&gt;http-proxy=&lt;/code&gt; 를 통해 GPG로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1b2343c30f3e2e5a8306b40be7b1fd983ba13e1" translate="yes" xml:space="preserve">
          <source>If set, any properly signed requests arriving at &lt;code&gt;/organizations/ORGNAME/owners/OWNER/compliance&lt;/code&gt; will be forwarded to this URL. This is expected to be a fully qualified resource, e.g. &lt;code&gt;http://compliance.example.org/owners/OWNER/compliance&lt;/code&gt;.</source>
          <target state="translated">설정되면 &lt;code&gt;/organizations/ORGNAME/owners/OWNER/compliance&lt;/code&gt; 에 도착하는 올바르게 서명 된 요청 이이 URL로 전달됩니다. 이는 정규화 된 리소스 (예 : &lt;code&gt;http://compliance.example.org/owners/OWNER/compliance&lt;/code&gt; ) 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="62f4646d69c84836fac104b563e70490504c2f3d" translate="yes" xml:space="preserve">
          <source>If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply. Only IPv4 is supported.</source>
          <target state="translated">소스 범위가 지정되면 방화벽은이 범위에 소스 IP 주소가있는 트래픽에만 적용됩니다. 이러한 범위는 CIDR 형식으로 표현되어야합니다. sourceRanges 및 sourceTags 중 하나 또는 둘 다를 설정할 수 있습니다. 두 속성이 모두 설정된 경우 방화벽은 sourceRanges 내에 소스 IP 주소가있는 트래픽이나 sourceTags 속성에 나열된 태그에 속하는 소스 IP에 적용됩니다. 방화벽을 적용하기 위해 연결이 두 속성과 일치 할 필요는 없습니다. IPv4 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="493d28629c1cda97ddc26a2be89c1aad5c2cf38b" translate="yes" xml:space="preserve">
          <source>If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a service account in this list. Source service accounts cannot be used to control traffic to an instance&amp;rsquo;s external IP address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time as sourceTags or targetTags.</source>
          <target state="translated">소스 서비스 계정이 지정된 경우 방화벽은이 목록에 서비스 계정이있는 인스턴스에서 발생하는 트래픽에만 적용됩니다. 서비스 계정은 IP 주소가 아닌 인스턴스와 연결되어 있으므로 소스 서비스 계정은 인스턴스의 외부 IP 주소에 대한 트래픽을 제어하는 ​​데 사용할 수 없습니다. sourceRanges는 sourceServiceAccounts와 동시에 설정할 수 있습니다. 둘 다 설정하면 방화벽이 sourceRanges 내에 소스 IP 주소가있는 트래픽에 적용되거나 소스 IP가 sourceServiceAccount에 나열된 서비스 계정이있는 인스턴스에 속합니다. 방화벽을 적용하기 위해 연결이 두 속성과 일치 할 필요는 없습니다. sourceServiceAccounts는 sourceTags 또는 targetTags와 동시에 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="21bcc90efcfde35a276e1811a76c0cefaf125160" translate="yes" xml:space="preserve">
          <source>If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in source tags. Source tags cannot be used to control traffic to an instance&amp;rsquo;s external IP address. Because tags are associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply.</source>
          <target state="translated">소스 태그가 지정된 경우 방화벽은 소스 태그에 나열된 태그에 속하는 소스 IP를 사용하는 트래픽에만 적용됩니다. 인스턴스의 외부 IP 주소에 대한 트래픽을 제어하는 ​​데 소스 태그를 사용할 수 없습니다. 태그는 IP 주소가 아닌 인스턴스와 연결되기 때문입니다. sourceRanges 및 sourceTags 중 하나 또는 둘 다를 설정할 수 있습니다. 두 속성이 모두 설정된 경우 방화벽은 sourceRanges 내에 소스 IP 주소가있는 트래픽이나 sourceTags 속성에 나열된 태그에 속하는 소스 IP에 적용됩니다. 방화벽을 적용하기 위해 연결이 두 속성과 일치 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="68181214da4f50be70f8e8567520e0a9f3017c0f" translate="yes" xml:space="preserve">
          <source>If specified in &lt;code&gt;pkg_source&lt;/code&gt;, a compressed file containing the source code is downloaded.</source>
          <target state="translated">&lt;code&gt;pkg_source&lt;/code&gt; 에 지정된 경우 소스 코드가 포함 된 압축 파일이 다운로드됩니다.</target>
        </trans-unit>
        <trans-unit id="a0e7e3c351fab40f4ca8fd8f57281132be552c6a" translate="yes" xml:space="preserve">
          <source>If specified, Pub/Sub will generate and attach an OIDC JWT token as an Authorization header in the HTTP request for every pushed message.</source>
          <target state="translated">지정된 경우 Pub / Sub는 푸시 된 모든 메시지에 대한 HTTP 요청의 Authorization 헤더로 OIDC JWT 토큰을 생성하고 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="c394975aac0c5af5c7a21902fe6088700fa835b2" translate="yes" xml:space="preserve">
          <source>If specified, configures time-based partitioning for this table.</source>
          <target state="translated">지정된 경우이 테이블에 대한 시간 기반 분할을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="f32eef391ccf069be4227141f0f46f854bfc6cc8" translate="yes" xml:space="preserve">
          <source>If still no conclusion can be made, report the incident to the &lt;strong&gt;Deciders&lt;/strong&gt; listed above.</source>
          <target state="translated">여전히 결론을 내릴 수 없으면 위에 나열된 &lt;strong&gt;결정자&lt;/strong&gt; 에게 사건을보고하십시오 .</target>
        </trans-unit>
        <trans-unit id="a546d913cc5cce1c3882cb9e3d898964b3f90ea5" translate="yes" xml:space="preserve">
          <source>If successful, this command will generate a &lt;code&gt;chef-backend.rb&lt;/code&gt; file at &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; with the values for the &lt;code&gt;publish_address&lt;/code&gt;, &lt;code&gt;vip_interface&lt;/code&gt;, and &lt;code&gt;vip&lt;/code&gt; added automatically.</source>
          <target state="translated">성공하면이 명령은 자동으로 추가 된 &lt;code&gt;publish_address&lt;/code&gt; , &lt;code&gt;vip_interface&lt;/code&gt; 및 &lt;code&gt;vip&lt;/code&gt; 값을 사용하여 &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; 에 &lt;code&gt;chef-backend.rb&lt;/code&gt; 파일을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="21e9cbf2c291d05955df61ef986d3ea7b2c1aff2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;/attributes/default.rb&lt;/code&gt; directory and/or file does not exist, create it.</source>
          <target state="translated">는 IF &lt;code&gt;/attributes/default.rb&lt;/code&gt; 의 디렉토리 및 / 또는 파일이 존재하지 않는, 그것을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a39c6157e8f1d54351a409bf70a5e7381e00115" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;SEARCH_QUERY&lt;/code&gt; does not contain a colon character (&lt;code&gt;:&lt;/code&gt;), then the default query pattern is &lt;code&gt;tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*&lt;/code&gt;, which means the following two search queries are effectively the same:</source>
          <target state="translated">는 IF &lt;code&gt;SEARCH_QUERY&lt;/code&gt; 이 (콜론 문자를 포함하지 않습니다 &lt;code&gt;:&lt;/code&gt; ), 디폴트 쿼리 패턴은 &lt;code&gt;tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*&lt;/code&gt; 는 다음 두 검색어가 사실상 동일 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8498f556039582727a40dfad74f70aec92e7ea99" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;apache2_module_conf_generate.pl&lt;/code&gt; file was located in the cookbook directory under &lt;code&gt;files/host-foo.example.com/&lt;/code&gt;, the specified file(s) would only be copied to the machine with the domain name foo.example.com.</source>
          <target state="translated">는 IF &lt;code&gt;apache2_module_conf_generate.pl&lt;/code&gt; 의 파일이 아래의 요리 책 디렉토리에 위치한 &lt;code&gt;files/host-foo.example.com/&lt;/code&gt; 지정된 파일 (들) 도메인 이름 만 foo.example.com과 컴퓨터에 복사 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="41ca378b18bb0e8ccaa6098755bac4e49dac0ac3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;api_key&lt;/code&gt; option is not given, it will use the value of the &lt;code&gt;$ARTIFACTORY_API_KEY&lt;/code&gt; environment variable by default.</source>
          <target state="translated">는 IF &lt;code&gt;api_key&lt;/code&gt; 옵션이 주어지지 않는, 그것은의 값을 사용합니다 &lt;code&gt;$ARTIFACTORY_API_KEY&lt;/code&gt; 기본적으로 환경 변수를.</target>
        </trans-unit>
        <trans-unit id="e38bd209f0fe425e94372ed156ad158e640db57f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;config.json&lt;/code&gt; file may specify some or all of the publish options together as a single block:</source>
          <target state="translated">&lt;code&gt;config.json&lt;/code&gt; 파일이 게시 옵션의 일부 또는 전체를 단일 블록으로 함께 지정할 수있는 경우 :</target>
        </trans-unit>
        <trans-unit id="dfc09beec9d8e66459f449d05eddbb57c6dbe2ba" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;config.json&lt;/code&gt; file specifies the following cookbooks are published to a GitHub repository:</source>
          <target state="translated">경우] &lt;code&gt;config.json&lt;/code&gt; 의 다음 요리 책은 GitHub의 저장소에 게시 된 파일을 지정합니다 :</target>
        </trans-unit>
        <trans-unit id="c029bee7a69e56b2322eecb1adfe064456b03704" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;config.json&lt;/code&gt; file specifies the following cookbooks are published to a git repository located on an open source git server:</source>
          <target state="translated">경우] &lt;code&gt;config.json&lt;/code&gt; 의 다음 요리 책은 오픈 소스 자식 서버에있는 자식 저장소에 게시 된 파일을 지정합니다 :</target>
        </trans-unit>
        <trans-unit id="88123f783eea9aeff9bb80ee01de41697e394a23" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;config.json&lt;/code&gt; file specifies the following cookbooks are published to the Chef Infra Server that is part of this Chef Automate configuration:</source>
          <target state="translated">경우] &lt;code&gt;config.json&lt;/code&gt; 의 다음 요리 책이 요리사 자동화 구성의 일부인 요리사 인프라 서버에 게시 된 파일을 지정합니다 :</target>
        </trans-unit>
        <trans-unit id="a56bd646aa0a2707ada87a8950e0f110ff08f43c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;config.json&lt;/code&gt; file specifies the following cookbooks are published to the public Chef Supermarket:</source>
          <target state="translated">경우] &lt;code&gt;config.json&lt;/code&gt; 의 다음 요리 책이 대중 요리사 슈퍼마켓에 게시 된 파일을 지정합니다 :</target>
        </trans-unit>
        <trans-unit id="ca5e3f4d25515eb9689ae463365a788d6161289a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;config.json&lt;/code&gt; file specifies:</source>
          <target state="translated">경우] &lt;code&gt;config.json&lt;/code&gt; 의 파일을 지정합니다 :</target>
        </trans-unit>
        <trans-unit id="12c7c122913e605acd5b37d936014bb7e2bfcd73" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;deny_rights&lt;/code&gt; permission were to be used instead, something could slip through unless all users and groups were denied.</source>
          <target state="translated">는 IF &lt;code&gt;deny_rights&lt;/code&gt; 의 권한을 대신 사용할 수 있던 모든 사용자와 그룹이 거부되었습니다 않는 한, 뭔가를 통해 미끄러 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01ff5003cb3204c292664dbd0239b41ab7770289" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;get_project_application&lt;/code&gt; method is called from the &lt;code&gt;provision.rb&lt;/code&gt; recipe, be sure that &lt;code&gt;delivery-truck::provision&lt;/code&gt; is executed before &lt;code&gt;get_project_application&lt;/code&gt; by putting it in a &lt;code&gt;ruby_block&lt;/code&gt; or into a separate recipe that is called from &lt;code&gt;provision.rb&lt;/code&gt; via &lt;code&gt;include_recipe&lt;/code&gt;. If the &lt;code&gt;get_project_application&lt;/code&gt; method is called directly in &lt;code&gt;provision.rb&lt;/code&gt;:</source>
          <target state="translated">는 IF &lt;code&gt;get_project_application&lt;/code&gt; 의 방법은에서 호출 &lt;code&gt;provision.rb&lt;/code&gt; 의 요리법, 있는지 확인 할 &lt;code&gt;delivery-truck::provision&lt;/code&gt; 전에 실행 &lt;code&gt;get_project_application&lt;/code&gt; A의를 넣어 &lt;code&gt;ruby_block&lt;/code&gt; 또는에서 호출되는 별도의 조리법에 &lt;code&gt;provision.rb&lt;/code&gt; 를 통해 &lt;code&gt;include_recipe&lt;/code&gt; . 는 IF &lt;code&gt;get_project_application&lt;/code&gt; 의 방법은 직접이라고 &lt;code&gt;provision.rb&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7c6b81dcc23106b060b5ca80723d8896680c0cb6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;health-check&lt;/code&gt; hook exits with a non-&lt;code&gt;ok&lt;/code&gt; status the next &lt;code&gt;health-check&lt;/code&gt; will run after the default &lt;code&gt;health-check&lt;/code&gt; interval (thirty seconds). This is only done when the configured interval is greater than the default interval.</source>
          <target state="translated">는 IF &lt;code&gt;health-check&lt;/code&gt; 비와 후크 종료 &lt;code&gt;ok&lt;/code&gt; 상태는 다음 &lt;code&gt;health-check&lt;/code&gt; 기본 후 실행됩니다 &lt;code&gt;health-check&lt;/code&gt; 간격 (삼십초). 이는 구성된 간격이 기본 간격보다 큰 경우에만 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="531c1e80f1c7308790ee5fed98b4b31e9e9696bf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;health-check&lt;/code&gt; hook returns an &lt;code&gt;ok&lt;/code&gt; status for the first time, then the next &lt;code&gt;health-check&lt;/code&gt; will run after a randomly chosen delay between 0 and the configured &lt;code&gt;health-check&lt;/code&gt; interval. This introduces a splay - a degree of difference - in the timing between the first and second &lt;code&gt;health-check&lt;/code&gt; runs. All following health-check hooks run at the configured interval. The splay prevents more than one health-check hook from starting at the same time by giving each of them a unique starting point.</source>
          <target state="translated">는 IF &lt;code&gt;health-check&lt;/code&gt; 후크가 반환 &lt;code&gt;ok&lt;/code&gt; 처음 상태를, 그 다음 &lt;code&gt;health-check&lt;/code&gt; 0 사이에 무작위로 선택된 지연 및 구성된 후 실행됩니다 &lt;code&gt;health-check&lt;/code&gt; 간격. 이로 인해 첫 번째 및 두 번째 &lt;code&gt;health-check&lt;/code&gt; 실행 사이의 타이밍에 약간의 차이 가 발생합니다. 다음의 모든 상태 확인 후크는 구성된 간격으로 실행됩니다. 스플레이는 각각 고유 한 시작 지점을 제공하여 둘 이상의 상태 확인 후크가 동시에 시작되는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="512b14bc0b553f555695a29c337f27bfc2006d55" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;include_recipe&lt;/code&gt; method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored.</source>
          <target state="translated">경우] &lt;code&gt;include_recipe&lt;/code&gt; 의 방법은, 레시피를 포함하는 회 이상 사용하고, 첫 번째 포함될 처리 및 후속 개재물은 무시된다.</target>
        </trans-unit>
        <trans-unit id="cbb5e9255b6fe3d26eb89c6d2d36c86fcfdb0475" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group identifiers exist prior to installing the Chef Infra Server, the Chef Infra Server installation process will use the existing identifiers instead of creating them.</source>
          <target state="translated">는 IF &lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 사용자 및 그룹 식별자는 요리사 인프라 서버를 설치하기 전에 존재 요리사 인프라 서버 설치 프로세스를 만드는 대신 기존의 ID를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="06a33b7d3c6ccf4a5a3cf306b4a0bb6cbd7f077c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group identifiers exist prior to installing the Chef server, the Chef server installation process will use the existing identifiers instead of creating them.</source>
          <target state="translated">는 IF &lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 사용자 및 그룹 식별자는 요리사 서버를 설치하기 전에 존재 요리사 서버 설치 프로세스를 만드는 대신 기존의 ID를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4410281295e1dc902a95cd68a8646f7e48dc0a41" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;project.toml&lt;/code&gt; file contains:</source>
          <target state="translated">경우] &lt;code&gt;project.toml&lt;/code&gt; 의 파일이 포함되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="c80b793085754916f8cd1d388abb502dabaa2726" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; property is not specified, the package name MUST be exactly the same as the display name found in &lt;strong&gt;Add/Remove programs&lt;/strong&gt; or exactly the same as the &lt;code&gt;DisplayName&lt;/code&gt; property in the appropriate registry key, which may be one of the following:</source>
          <target state="translated">는 IF &lt;code&gt;source&lt;/code&gt; 속성이 지정되지 않은 패키지 이름이 표시 이름에서 발견 동일해야합니다 &lt;strong&gt;추가 / 제거 프로그램&lt;/strong&gt; 또는 정확하게 같은 &lt;code&gt;DisplayName&lt;/code&gt; 다음 중 하나가 될 수있는 적절한 레지스트리 키의 속성 :</target>
        </trans-unit>
        <trans-unit id="bb0d2d3048b0c948341bacc1b98c432e3920f8ef" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; property is not specified, the package name MUST be exactly the same as the display name found in &lt;strong&gt;Add/Remove programs&lt;/strong&gt; or exacty the same as the &lt;code&gt;DisplayName&lt;/code&gt; property in the appropriate registry key:</source>
          <target state="translated">경우 &lt;code&gt;source&lt;/code&gt; 속성이 지정되지 않은 표시 이름에서 발견, 패키지 이름은 동일해야합니다 &lt;strong&gt;추가 / 제거 프로그램&lt;/strong&gt; 또는 exacty와 같은 &lt;code&gt;DisplayName&lt;/code&gt; 해당하는 레지스트리 키 특성 :</target>
        </trans-unit>
        <trans-unit id="79254906e8a6b5b9e284983e8c01b1d9bfea1f12" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urls&lt;/code&gt; parameter contains a single entry, the host of the supplied URI will be sent as the Host header.</source>
          <target state="translated">경우 &lt;code&gt;urls&lt;/code&gt; 하나의 항목이 포함 된 매개 변수, 공급 된 URI의 호스트는 호스트 헤더로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="ac6f2199eb29004cd21238b66b74e394d1e3ba2f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urls&lt;/code&gt; parameter contains more than one entry, no Host header will be sent.</source>
          <target state="translated">&lt;code&gt;urls&lt;/code&gt; 매개 변수에 둘 이상의 항목이 포함 된 경우 호스트 헤더가 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="989e5301546cd0cf765abaf7e48030612a25d1cc" translate="yes" xml:space="preserve">
          <source>If the &lt;strong&gt;opscode-expander&lt;/strong&gt; does not start correctly, then take a look at the &lt;code&gt;/var/log/opscode/opscode-expander/current&lt;/code&gt; log file for error messages.</source>
          <target state="translated">는 IF &lt;strong&gt;opscode 확장기가&lt;/strong&gt; 제대로 시작되지 않으며, 다음 번 봐 걸릴 &lt;code&gt;/var/log/opscode/opscode-expander/current&lt;/code&gt; 오류 메시지에 대한 로그 파일을.</target>
        </trans-unit>
        <trans-unit id="55be02342c352f32ffa213a7c354b4f364f60812" translate="yes" xml:space="preserve">
          <source>If the &lt;strong&gt;opscode-expander&lt;/strong&gt; is running, check the queue length:</source>
          <target state="translated">는 IF &lt;strong&gt;opscode-확장이&lt;/strong&gt; 실행되고, 큐의 길이를 확인 :</target>
        </trans-unit>
        <trans-unit id="d2cc5e4fb11cd648256f7fc9f1ea04b3a57e7138" translate="yes" xml:space="preserve">
          <source>If the &lt;strong&gt;service&lt;/strong&gt; resource cannot find the appropriate command to verify the status of a service, why-run mode will assume that the command would have been installed by a previous resource and that the service would not be running</source>
          <target state="translated">&lt;strong&gt;서비스&lt;/strong&gt; 자원 이 &lt;strong&gt;서비스&lt;/strong&gt; 상태를 확인하기위한 적절한 명령을 찾을 수없는 경우 , 왜 실행 모드는 명령이 이전 자원에 ​​의해 설치되었고 서비스가 실행되지 않는다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b050ecddc6e34725e17a1db6f2b0d27f3a51ae1c" translate="yes" xml:space="preserve">
          <source>If the &lt;strong&gt;service&lt;/strong&gt; resource cannot find the appropriate command to verify the status of a service, why-run mode will assume that the command would have been installed by a previous resource and that the service would not be running.</source>
          <target state="translated">&lt;strong&gt;서비스&lt;/strong&gt; 리소스가 &lt;strong&gt;서비스&lt;/strong&gt; 상태를 확인하는 데 적합한 명령을 찾을 수없는 경우 why-run 모드는 명령이 이전 리소스에 의해 설치되었고 서비스가 실행되지 않는 것으로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="af7eec4d2f3ae4bb945f55a6be1333cc44f0e274" translate="yes" xml:space="preserve">
          <source>If the Chef Habitat License prompt cannot be displayed, then the product fails with an exit code 172. If Chef Habitat cannot persist the accepted license, it sends a message STDOUT, but the product invocation will continue successfully. In a future invocation, however, the user will need to accept the license again.</source>
          <target state="translated">Chef Habitat 라이센스 프롬프트가 표시되지 않으면 제품이 종료 코드 172와 함께 실패합니다. Chef Habitat에서 승인 된 라이센스를 유지할 수없는 경우 STDOUT 메시지를 보내지 만 제품 호출은 성공적으로 계속됩니다. 그러나 향후 호출에서 사용자는 라이선스를 다시 수락해야합니다.</target>
        </trans-unit>
        <trans-unit id="60667ce6aa96f5d64d62a7875c3669a691b46e46" translate="yes" xml:space="preserve">
          <source>If the Chef Habitat artifact identifier isn&amp;rsquo;t fully qualified (having fewer than four components), and exactly one artifact is required, then the missing components are assumed to be the most recent values. For example:</source>
          <target state="translated">Chef Habitat 아티팩트 식별자가 정규화되지 않았고 (구성 요소가 4 개 미만) 정확히 하나의 아티팩트가 필요한 경우 누락 된 구성 요소는 가장 최근 값으로 간주됩니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="d1190672ac73f4186eaa54f52ae7a4d7e0f16d67" translate="yes" xml:space="preserve">
          <source>If the Chef Infra Server is configured to use HTTP, add the following settings:</source>
          <target state="translated">Chef Infra Server가 HTTP를 사용하도록 구성된 경우 다음 설정을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f8a28dd5df0913cc0101c800587a139dd2dd4125" translate="yes" xml:space="preserve">
          <source>If the Chef Infra Server is configured to use HTTPS (such as the hosted Chef Infra Server), add the following settings:</source>
          <target state="translated">Chef Infra Server가 HTTPS (예 : 호스팅 된 Chef Infra Server)를 사용하도록 구성된 경우 다음 설정을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3559f7bf6bc7db4328121e0dadf6928f69861ef2" translate="yes" xml:space="preserve">
          <source>If the Chef server is configured to use HTTP, add the following settings:</source>
          <target state="translated">Chef 서버가 HTTP를 사용하도록 구성된 경우 다음 설정을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0235d0bb664658bcfc205f95a36ab4557e24fd74" translate="yes" xml:space="preserve">
          <source>If the Chef server is configured to use HTTPS (such as the hosted Chef server), add the following settings:</source>
          <target state="translated">Chef 서버가 HTTPS (예 : 호스트 된 Chef 서버)를 사용하도록 구성된 경우 다음 설정을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7eea141c335fd08d138414fc915a3945fdd1b24c" translate="yes" xml:space="preserve">
          <source>If the LDAP search fails to retrieve the configured attributes, the sign in process will fail.</source>
          <target state="translated">LDAP 검색이 구성된 속성을 검색하지 못하면 로그인 프로세스가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="5efb57bf9c72d9397465e6563286fc56cd5f528c" translate="yes" xml:space="preserve">
          <source>If the Microsoft Azure &lt;a href=&quot;https://github.com/Azure/azure-xplat-cli&quot;&gt;cross-platform command line tool (Xplat-CLI)&lt;/a&gt; is installed on the workstation, along with the Azure Chef Extension, the &lt;code&gt;get-chef&lt;/code&gt; and &lt;code&gt;set-chef&lt;/code&gt; extensions may be used to manage Chef running on virtual machines in Microsoft Azure.</source>
          <target state="translated">Microsoft Azure &lt;a href=&quot;https://github.com/Azure/azure-xplat-cli&quot;&gt;크로스 플랫폼 명령 줄 도구 (Xplat-CLI)&lt;/a&gt; 가 Azure Chef 확장과 함께 워크 스테이션에 설치된 경우 &lt;code&gt;get-chef&lt;/code&gt; 및 &lt;code&gt;set-chef&lt;/code&gt; 확장을 사용하여 Microsoft Azure의 가상 머신에서 실행되는 Chef를 관리 할 수 ​​있습니다. .</target>
        </trans-unit>
        <trans-unit id="731b0e3a74394ba9c436ad6c41b0b2cd5627040a" translate="yes" xml:space="preserve">
          <source>If the NGINX configuration file is not located at the default path, &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;, the path can specified as the first parameter of the describe block:</source>
          <target state="translated">NGINX 구성 파일이 기본 경로 인 &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; 에없는 경우 해당 경로를 describe 블록의 첫 번째 매개 변수로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d74da6d6638a71d85488b61153ea70009181628" translate="yes" xml:space="preserve">
          <source>If the RabbitMQ queue that is used by Chef Analytics stops consuming messages, the Chef server data partition will fill up and may affect the overall performance of the Chef server application itself. The settings for the RabbitMQ queue are tunable, including for queue length monitoring, queue capacity, maximum number of messages that can be in the queue before messages are dropped, the point at which messages are dropped, for settings used by the rabbitmq-management plugin, and so on.</source>
          <target state="translated">Chef Analytics에서 사용하는 RabbitMQ 큐가 메시지 소비를 중지하면 Chef 서버 데이터 파티션이 채워져 Chef 서버 애플리케이션 자체의 전체 성능에 영향을 줄 수 있습니다. RabbitMQ 관리 플러그인에서 사용하는 설정에 대해 큐 길이 모니터링, 큐 용량, 메시지를 삭제하기 전에 큐에있을 수있는 최대 메시지 수, 메시지가 삭제되는 지점을 포함하여 RabbitMQ 큐에 대한 설정을 조정할 수 있습니다. , 등등.</target>
        </trans-unit>
        <trans-unit id="88f5b110475f716e306edc79488de754359f1127" translate="yes" xml:space="preserve">
          <source>If the SSL certificate can be verified, the response to</source>
          <target state="translated">SSL 인증서를 확인할 수 있으면</target>
        </trans-unit>
        <trans-unit id="54603050365f5935d91f6bbd0b58868c51efb945" translate="yes" xml:space="preserve">
          <source>If the SSL certificate cannot be verified, the response to</source>
          <target state="translated">SSL 인증서를 확인할 수없는 경우</target>
        </trans-unit>
        <trans-unit id="e244589edfd7a5cc2992738d8d1dbddf9d650fad" translate="yes" xml:space="preserve">
          <source>If the Supervisor does not have the &lt;code&gt;core/postgresql&lt;/code&gt; package in its local cache, it will contact Builder, retrieve the latest version and the public key for the &lt;code&gt;core&lt;/code&gt; origin, verify the cryptographic integrity of the package, and then start it.</source>
          <target state="translated">Supervisor가 로컬 캐시에 &lt;code&gt;core/postgresql&lt;/code&gt; 패키지 가없는 경우 Builder에 연락하여 최신 버전과 &lt;code&gt;core&lt;/code&gt; 오리진 의 공개 키를 검색 하고 패키지의 암호화 무결성을 확인한 다음 시작합니다.</target>
        </trans-unit>
        <trans-unit id="86cfa54576b93fd2309aad198f0c76f0d4c1194e" translate="yes" xml:space="preserve">
          <source>If the UID and GID of &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; do not match on both backend Chef Infra Server machines, a high availability configuration will not run correctly.</source>
          <target state="translated">&lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 의 UID 및 GID가 두 백엔드 Chef Infra Server 시스템에서 일치하지 않으면 고 가용성 구성이 올바르게 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60ac8d4c45796b7f816fe6dab06d2ffe14f54582" translate="yes" xml:space="preserve">
          <source>If the UID and GID of &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; do not match on both backend Chef server machines, a high availability configuration will not run correctly.</source>
          <target state="translated">&lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 의 UID 및 GID가 두 백엔드 Chef 서버 시스템에서 일치하지 않으면 고 가용성 구성이 올바르게 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="01932a6957fffa9dbb258444cdb650eae100c336" translate="yes" xml:space="preserve">
          <source>If the audit was successful, the chef-client will return output similar to:</source>
          <target state="translated">감사가 성공하면 요리사 클라이언트는 다음과 유사한 결과를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="606859ebff66c25541496f4363eca3830345a05e" translate="yes" xml:space="preserve">
          <source>If the authentication is happening on the node, there are a number of common causes:</source>
          <target state="translated">인증이 노드에서 발생하는 경우 여러 가지 일반적인 원인이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6edc0bd36e7123af17ab4582556a99d2aa774f96" translate="yes" xml:space="preserve">
          <source>If the authentication request occurs during the initial Chef Infra Client run, the issue is most likely with the private key.</source>
          <target state="translated">최초 Chef Infra Client 실행 중에 인증 요청이 발생하면 개인 키에 문제가있을 가능성이 큽니다.</target>
        </trans-unit>
        <trans-unit id="0dee1bf2e56c29f2932c2296531ca6ef100595ab" translate="yes" xml:space="preserve">
          <source>If the authentication request occurs during the initial chef-client run, the issue is most likely with the private key.</source>
          <target state="translated">초기 chef-client 실행 중에 인증 요청이 발생하면 개인 키에 문제가있을 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="a9bc48d3bbf4cdb78ab1301ce8d35ced051e84e4" translate="yes" xml:space="preserve">
          <source>If the chef-server.rb file does not exist, create a file called &lt;code&gt;chef-server.rb&lt;/code&gt; and put it in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory.</source>
          <target state="translated">chef-server.rb 파일이 없으면 &lt;code&gt;chef-server.rb&lt;/code&gt; 라는 파일을 작성 하여 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="5ef478279d5431bb3849585280afb98faa734fbd" translate="yes" xml:space="preserve">
          <source>If the chosen node won&amp;rsquo;t promote, run the following commands on the other host to reset its disk state:</source>
          <target state="translated">선택한 노드가 승격되지 않으면 다른 호스트에서 다음 명령을 실행하여 디스크 상태를 재설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f1df84f969b922a8d546dff522b69b591b4b4f85" translate="yes" xml:space="preserve">
          <source>If the current AWS Account &lt;em&gt;&lt;strong&gt;is&lt;/strong&gt;&lt;/em&gt; the Master Account, you may also access properties of that account.</source>
          <target state="translated">현재 AWS 계정 &lt;em&gt;&lt;strong&gt;이&lt;/strong&gt;&lt;/em&gt; 마스터 계정 인 경우 해당 계정의 속성에도 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76b307eadc6beb3a5dfe0a52b8560461accab905" translate="yes" xml:space="preserve">
          <source>If the defaults have been changed for any reason, and if that change would result in less than 2 UID/GIDs being available to the &lt;code&gt;useradd&lt;/code&gt; program, edit &lt;code&gt;/etc/login.defs&lt;/code&gt; with changes to make at least 2 more UIDs and GIDs available for association. The currently used ID ranges for UIDs and GIDs can be found in &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/group&lt;/code&gt;, respectively.</source>
          <target state="translated">어떤 이유로 든 기본값이 변경된 경우 해당 변경으로 인해 &lt;code&gt;useradd&lt;/code&gt; 프로그램에서 2 개의 UID / GID를 사용할 수없는 경우 &lt;code&gt;/etc/login.defs&lt;/code&gt; 를 편집 하여 2 개 이상의 UID 및 GID를 사용할 수있게하십시오. 협회. UID 및 GID에 현재 사용되는 ID 범위는 각각 &lt;code&gt;/etc/passwd&lt;/code&gt; 및 &lt;code&gt;/etc/group&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ddad55f0d08c9598f76ef14a91b1898fe07fb8e" translate="yes" xml:space="preserve">
          <source>If the desired default pipeline is &lt;em&gt;not&lt;/em&gt; master, manually edit &lt;code&gt;.delivery/cli.toml&lt;/code&gt; to reflect the desired pipeline.</source>
          <target state="translated">원하는 기본 파이프 라인이 마스터 가 &lt;em&gt;아닌&lt;/em&gt; 경우 원하는 파이프 라인을 반영하도록 &lt;code&gt;.delivery/cli.toml&lt;/code&gt; 을 수동으로 편집 하십시오 .</target>
        </trans-unit>
        <trans-unit id="32addd588b9e3f52c5f897346fbfa79f53e88336" translate="yes" xml:space="preserve">
          <source>If the directory you provided in the initial prompt contains only &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;chef-client&lt;/code&gt;, then &lt;code&gt;chef capture&lt;/code&gt; prompts you to add the locations for sources for the remaining three:</source>
          <target state="translated">초기 프롬프트에서 제공하는 디렉토리 만 포함 된 경우 &lt;code&gt;cron&lt;/code&gt; 와 &lt;code&gt;chef-client&lt;/code&gt; 다음 &lt;code&gt;chef capture&lt;/code&gt; 의 지시를 당신은 세 남아에 대한 소스의 위치를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="cebd0f559ea15e12092a3ac9af868a2dbc895df1" translate="yes" xml:space="preserve">
          <source>If the disk is encrypted or not (&lt;code&gt;true&lt;/code&gt;|&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">디스크가 암호화되었는지 여부 ( &lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fbe31079bba6e2ac31dece2a5b2c03b8cf1dfdf1" translate="yes" xml:space="preserve">
          <source>If the field is false, the default, only the logs owned by the sink&amp;rsquo;s parent resource are available for export. If the field is true, then logs from all the projects, folders, and billing accounts contained in the sink&amp;rsquo;s parent resource are also available for export. Whether a particular log entry from the children is exported depends on the sink&amp;rsquo;s filter expression.</source>
          <target state="translated">필드가 false (기본값)이면 싱크의 상위 리소스가 소유 한 로그 만 내보낼 수 있습니다. 필드가 true이면 싱크의 상위 리소스에 포함 된 모든 프로젝트, 폴더, 결제 계정의 로그도 내보낼 수 있습니다. 하위 항목의 특정 로그 항목을 내보낼 지 여부는 싱크의 필터 표현식에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="dc6b0ceee00818b9cbc3a3c9915f3b24330b2117" translate="yes" xml:space="preserve">
          <source>If the file does not exist, a 2048-bit RSA key will be generated using OpenSSL (when running &lt;code&gt;automate-ctl reconfigure&lt;/code&gt;). You can also provide that RSA private key in PEM format yourself:</source>
          <target state="translated">파일이 없으면 OpenSSL을 사용하여 2048 비트 RSA 키가 생성됩니다 ( &lt;code&gt;automate-ctl reconfigure&lt;/code&gt; 실행시 ). 해당 RSA 개인 키를 PEM 형식으로 직접 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="625c7934c2d92b3cd501e889ca0b63c46c920d3b" translate="yes" xml:space="preserve">
          <source>If the hint file contains JSON content, it will be returned as a hash from the call to &lt;code&gt;hint?&lt;/code&gt;.</source>
          <target state="translated">힌트 파일에 JSON 내용이 포함되어 있으면 힌트 호출에서 해시로 반환 &lt;code&gt;hint?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d789852516e4d6ee79d073cc33bd68f82659961f" translate="yes" xml:space="preserve">
          <source>If the host or port was wrong, or Chef Automate was not able to reach the LDAP service, the sign in screen will display</source>
          <target state="translated">호스트 또는 포트가 잘못되었거나 Chef Automate가 LDAP 서비스에 연결할 수없는 경우 로그인 화면이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="684c09f1b96845fc0d16780e8916020890fa9023" translate="yes" xml:space="preserve">
          <source>If the hosted zone if private or public</source>
          <target state="translated">프라이빗 또는 퍼블릭 인 경우 호스팅 영역</target>
        </trans-unit>
        <trans-unit id="efaf7875d48cb6507de13ba6f386f36cf0581ead" translate="yes" xml:space="preserve">
          <source>If the hostname is a FQDN, it will return something like:</source>
          <target state="translated">호스트 이름이 FQDN이면 다음과 같이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a7a8c5ac392289df5547842058370ab46ae46f1f" translate="yes" xml:space="preserve">
          <source>If the hostname is all lowercase, it will return something like:</source>
          <target state="translated">호스트 이름이 모두 소문자이면 다음과 같이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5bf8ab31efd44dc5c2142045b6f066078168eaa7" translate="yes" xml:space="preserve">
          <source>If the hostname is not a FQDN, it must be configured so that it is one.</source>
          <target state="translated">호스트 이름이 FQDN이 아닌 경우 FQDN이되도록 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="169cad190b3d043cf793e1f25f856219aa3149d2" translate="yes" xml:space="preserve">
          <source>If the hostname is resolvable, it will return something like:</source>
          <target state="translated">호스트 이름을 확인할 수 있으면 다음과 같이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="070ccfd1d6eb2b05109951d1dc3fb48474f016de" translate="yes" xml:space="preserve">
          <source>If the hostname&amp;rsquo;s alphabetic parts are not all lowercase, it must be configured so that they are.</source>
          <target state="translated">호스트 이름의 알파벳 부분이 모두 소문자가 아닌 경우에는 해당 부분이되도록 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="86c000338e4618e29e01c8c516f77afd44acead8" translate="yes" xml:space="preserve">
          <source>If the license isn&amp;rsquo;t accepted through either of these methods, Habitat will request acceptance through an interactive prompt.</source>
          <target state="translated">이러한 방법 중 하나를 통해 라이선스가 수락되지 않으면 Habitat은 대화 형 프롬프트를 통해 수락을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="bcf568b54b1f2e4b7350b1f5992b8509e353d043" translate="yes" xml:space="preserve">
          <source>If the network partition did not result in a loss of quorum, then the failed nodes in the cluster should recover on their own once connectivity is restored.</source>
          <target state="translated">네트워크 파티션으로 인해 쿼럼이 손실되지 않은 경우 연결이 복원되면 클러스터의 실패한 노드가 자체적으로 복구되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dcf0bf3aefcdb1ecf6b730caf81bd41d8f285b6c" translate="yes" xml:space="preserve">
          <source>If the node has MySQL, stops MySQL</source>
          <target state="translated">노드에 MySQL이있는 경우 MySQL을 중지합니다</target>
        </trans-unit>
        <trans-unit id="3c574556a189ada2ae541464673ec26f3b7e9966" translate="yes" xml:space="preserve">
          <source>If the number of total messages continues to increase, increase the number of workers available to the &lt;strong&gt;opscode-expander&lt;/strong&gt; service.</source>
          <target state="translated">전체 메시지 수가 계속 증가하면 &lt;strong&gt;opscode-expander&lt;/strong&gt; 서비스에 사용 가능한 작업자 수를 늘리십시오 .</target>
        </trans-unit>
        <trans-unit id="880c0d1a1e50643a627401360f6640d536b23eca" translate="yes" xml:space="preserve">
          <source>If the original primary can be brought back online, the cluster management script run by Keepalived will try to do a DRBD takeover, based on that host&amp;rsquo;s original primary Chef server master status.</source>
          <target state="translated">원래 기본을 온라인으로 되돌릴 수있는 경우 Keepalived가 실행하는 클러스터 관리 스크립트는 해당 호스트의 원래 기본 Chef 서버 마스터 상태에 따라 DRBD 인계를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="02139858040ebf366fac9dd0024eda257a8d80a3" translate="yes" xml:space="preserve">
          <source>If the other resource does not exist, the subscription will not raise an error. Contrast this with the stricter semantics of &lt;code&gt;notifies&lt;/code&gt;, which will raise an error if the other resource does not exist.</source>
          <target state="translated">다른 리소스가없는 경우 구독에서 오류가 발생하지 않습니다. 엄격한 의미의 명암이 &lt;code&gt;notifies&lt;/code&gt; 다른 리소스가 존재하지 않는 경우, 에러를 발생한다.</target>
        </trans-unit>
        <trans-unit id="0fa88a39411ed54b438cfc6c42407cb304388fbc" translate="yes" xml:space="preserve">
          <source>If the package builds successfully, it is placed into a &lt;code&gt;results&lt;/code&gt; directory at the same level as your plan.</source>
          <target state="translated">패키지가 성공적으로 빌드되면 계획과 동일한 수준 의 &lt;code&gt;results&lt;/code&gt; 디렉터리에 배치됩니다 .</target>
        </trans-unit>
        <trans-unit id="1d725041e991dd2f99e6948508a6404312c64528" translate="yes" xml:space="preserve">
          <source>If the package is not found, then this resource behaves as follows:</source>
          <target state="translated">패키지를 찾을 수없는 경우이 리소스는 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="fca2b863ec4ce153e8c3f3fb8c8e7bf0deacfbdb" translate="yes" xml:space="preserve">
          <source>If the pipeline succeeds in generating and publishing the artifacts, then the Acceptance stage begins. This is the first phase that assesses build artifacts rather than source code.</source>
          <target state="translated">파이프 라인이 아티팩트 생성 및 게시에 성공하면 수락 단계가 시작됩니다. 이것은 소스 코드가 아닌 빌드 아티팩트를 평가하는 첫 번째 단계입니다.</target>
        </trans-unit>
        <trans-unit id="c0489d15d53236f8e2e410fd31d318018700af87" translate="yes" xml:space="preserve">
          <source>If the primary Chef Automate server is still accessible, log into it and run the following command as the root user:</source>
          <target state="translated">기본 Chef Automate 서버에 계속 액세스 할 수있는 경우 로그인하고 루트 사용자로 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6cdb99db72f372299bef6bfd4abc3a40c3c9be04" translate="yes" xml:space="preserve">
          <source>If the problematic service is a Ruby-based service and the frontend machines have free RAM or CPU, consider increasing the number of worker processes. If the problematic service is &lt;strong&gt;opscode-erchef&lt;/strong&gt;, use the request log to determine whether a particular component of requests is slow.</source>
          <target state="translated">문제가있는 서비스가 Ruby 기반 서비스이고 프런트 엔드 머신에 여유 RAM 또는 CPU가있는 경우 작업자 프로세스 수를 늘리는 것이 좋습니다. 문제가있는 서비스가 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 인 경우 요청 로그를 사용하여 요청의 특정 구성 요소가 느린 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7e28ed5cac338cc0506dcce2c0bf39095a1a9041" translate="yes" xml:space="preserve">
          <source>If the process name is too common for a string to uniquely find it, you may use a regexp. Inclusion of whitespace characters may be needed.</source>
          <target state="translated">프로세스 이름이 너무 일반적이어서 문자열이 고유하게 찾을 수없는 경우 정규 표현식을 사용할 수 있습니다. 공백 문자를 포함해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95af8124cb85543908a2e24f4a8611144523b850" translate="yes" xml:space="preserve">
          <source>If the product attempts to persist the accepted license and fails, a message will be sent to STDOUT, but product invocation will continue successfully. In a future invocation, however, the license would need to be accepted again.</source>
          <target state="translated">제품이 승인 된 라이센스를 유지하려고 시도했지만 실패하면 메시지가 STDOUT에 전송되지만 제품 호출은 성공적으로 계속됩니다. 그러나 향후 호출에서는 라이센스를 다시 수락해야합니다.</target>
        </trans-unit>
        <trans-unit id="b59e893b687a57674644a3dcd87ce9ab87005302" translate="yes" xml:space="preserve">
          <source>If the profile is pointed to a remote endpoint using the &lt;code&gt;command&lt;/code&gt; resource will run it on the remote OS.</source>
          <target state="translated">프로필이 &lt;code&gt;command&lt;/code&gt; 리소스를 사용하여 원격 끝점을 가리키는 경우 원격 OS에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="7ec50500b9a1fa87942ce218f59ea32a35144b83" translate="yes" xml:space="preserve">
          <source>If the project is cloned from Bitbucket (or if a pre-existing clone is used), add it using &lt;code&gt;delivery remote&lt;/code&gt;. The URL for &lt;code&gt;delivery clone&lt;/code&gt; can be found on the project&amp;rsquo;s page in the Workflow web UI.</source>
          <target state="translated">프로젝트가 Bitbucket에서 복제 된 경우 (또는 기존 복제가 사용되는 경우) &lt;code&gt;delivery remote&lt;/code&gt; 를 사용하여 추가합니다 . &lt;code&gt;delivery clone&lt;/code&gt; 의 URL 은 워크 플로 웹 UI의 프로젝트 페이지에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b62abe74c324b124680ca731d28c8207ab395b9c" translate="yes" xml:space="preserve">
          <source>If the project item does not exist, &lt;code&gt;delivery-sugar&lt;/code&gt; will try to load the secrets from the project&amp;rsquo;s parent organization. It will look for an item called:</source>
          <target state="translated">프로젝트 항목이없는 경우 &lt;code&gt;delivery-sugar&lt;/code&gt; 는 프로젝트의 상위 조직에서 비밀을로드하려고합니다. 다음과 같은 항목을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="8fc80c12f26d9d89dff74be4ddfab613018a4ca3" translate="yes" xml:space="preserve">
          <source>If the project item does not exist, &lt;strong&gt;delivery-sugar&lt;/strong&gt; will try to load the secrets from the project&amp;rsquo;s parent organization. It will look for an item called:</source>
          <target state="translated">프로젝트 항목이없는 경우 &lt;strong&gt;delivery-sugar&lt;/strong&gt; 는 프로젝트의 상위 조직에서 비밀을로드하려고합니다. 다음과 같은 항목을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="2b7885c0811676ac1096ce4e8394b34548eb78e1" translate="yes" xml:space="preserve">
          <source>If the qualifier is not a valid BigQuery field identifier, a valid identifier must be provided as the column field name and is used as field name in queries.</source>
          <target state="translated">한정자가 유효한 BigQuery 필드 식별자가 아닌 경우 유효한 식별자를 열 필드 이름으로 제공해야하며 쿼리에서 필드 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0428138d685be3a2b26fa48afb4d956b6fd70864" translate="yes" xml:space="preserve">
          <source>If the reCAPTCHA service cannot be reached, allow to sign-up? Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">reCAPTCHA 서비스에 연결할 수없는 경우 가입을 허용 하시겠습니까? 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6cf83b95075c89327d2073540f3e7d3f29bc69c" translate="yes" xml:space="preserve">
          <source>If the referenced resource does not exist, an error is raised. In contrast, &lt;code&gt;subscribes&lt;/code&gt; will not fail if the source resource is not found.</source>
          <target state="translated">참조 된 리소스가 없으면 오류가 발생합니다. 반대로 소스 리소스를 찾을 수없는 경우 &lt;code&gt;subscribes&lt;/code&gt; 이 실패하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="61a653d1479017e5f44989fb25db0f086fe60093" translate="yes" xml:space="preserve">
          <source>If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.</source>
          <target state="translated">요청 된 객체 경로가 누락되고 mainPageSuffix 객체가 누락 된 경우 (해당하는 경우) 서비스는이 버킷에서 명명 된 객체를 404 찾을 수 없음 결과에 대한 콘텐츠로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed505c40ea77ac70795f5d226a8efea619a07af8" translate="yes" xml:space="preserve">
          <source>If the requested object path is missing, the service will ensure the path has a trailing &amp;lsquo;/&amp;rsquo;, append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.</source>
          <target state="translated">요청 된 개체 경로가 누락 된 경우 서비스는 경로 뒤에 '/'가 있는지 확인하고이 접미사를 추가 한 다음 결과 개체 검색을 시도합니다. 이를 통해 디렉토리 페이지를 나타내는 index.html 객체를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba868c23bde4b2d0c0b627826233d2e517a1866c" translate="yes" xml:space="preserve">
          <source>If the retention policy is locked. If true, the retention policy cannot be removed and the period cannot be reduced.</source>
          <target state="translated">보존 정책이 잠겨있는 경우. true 인 경우 보존 정책을 제거 할 수 없으며 기간을 줄일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b74a4efc4ba9bf064ab480018c91b23ea52dd6d0" translate="yes" xml:space="preserve">
          <source>If the search indexes are not being updated properly, first ensure that the &lt;strong&gt;opscode-expander&lt;/strong&gt; service is running on the backend machine:</source>
          <target state="translated">검색 색인이 올바르게 업데이트되지 않으면 먼저 &lt;strong&gt;opscode-expander&lt;/strong&gt; 서비스가 백엔드 시스템에서 실행 중인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7603076f9a40bba25c0d62aa3ad27dcb9faebb55" translate="yes" xml:space="preserve">
          <source>If the secondary host is lost completely, a new host can be installed in its place, the device built, and then DRBD started. The new host will pair with the existing primary, sync data, and be ready to take over if necessary.</source>
          <target state="translated">보조 호스트가 완전히 손실되면 새 호스트를 대신 설치하여 장치를 구축 한 다음 DRBD를 시작할 수 있습니다. 새로운 호스트는 기존의 기본 동기화 데이터와 쌍을 이루어 필요할 경우 인계 할 준비가됩니다.</target>
        </trans-unit>
        <trans-unit id="96944d7b854dbaf3949ee9d3d9a534a3b34fd980" translate="yes" xml:space="preserve">
          <source>If the server returned &lt;code&gt;0&lt;/code&gt; for the &lt;code&gt;xen&lt;/code&gt; kernel, run:</source>
          <target state="translated">서버 가 &lt;code&gt;xen&lt;/code&gt; 커널에 대해 &lt;code&gt;0&lt;/code&gt; 을 리턴 한 경우 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="27c48a30ef255df98e64a81891c1ddd97e698b01" translate="yes" xml:space="preserve">
          <source>If the server returned something other than &lt;code&gt;0&lt;/code&gt;, run:</source>
          <target state="translated">서버가 &lt;code&gt;0&lt;/code&gt; 이외의 것을 반환하면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="13461f3c054e49d256f3ef4e25262573ff820348" translate="yes" xml:space="preserve">
          <source>If the service is down, the status line will appear similar to the following:</source>
          <target state="translated">서비스가 다운되면 상태 표시 줄이 다음과 유사하게 나타납니다.</target>
        </trans-unit>
        <trans-unit id="335ee9bd71ce5bbcf9647ace719d0b94f827f9cd" translate="yes" xml:space="preserve">
          <source>If the service is not found, then this resource behaves as follows:</source>
          <target state="translated">서비스를 찾을 수없는 경우이 리소스는 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3006bd57c7964ba571e8ab1b61be4b3fead81302" translate="yes" xml:space="preserve">
          <source>If the session is invalid, or if no session information is present, the server returns a &lt;code&gt;401 Unauthorized&lt;/code&gt; message.</source>
          <target state="translated">세션이 유효하지 않거나 세션 정보가없는 경우 서버는 &lt;code&gt;401 Unauthorized&lt;/code&gt; 메시지를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="762b0d6ca1bd6590cad1d675c6f450b55b11ca22" translate="yes" xml:space="preserve">
          <source>If the session is valid and active, the request is permitted.</source>
          <target state="translated">세션이 유효하고 활성 상태이면 요청이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="8136672d7f5a960f029a08ca61bdb87532559e45" translate="yes" xml:space="preserve">
          <source>If the size of a Compliance Report is over 4MB, then the &lt;em&gt;Reports&lt;/em&gt; page (Compliance &amp;gt; Reports) may not display as expected. &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;Audit Cookbook 9.4.0 and later&lt;/a&gt; supports some attribute options that trims a report to its smallest size when combined with latest Chef Automate version. Contact Chef Support to determine the best way to manage your Compliance Report size.</source>
          <target state="translated">준수 보고서의 크기가 4MB를 초과하면 &lt;em&gt;보고서&lt;/em&gt; 페이지 (준수&amp;gt; 보고서)가 예상대로 표시되지 않을 수 있습니다. &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;Audit Cookbook 9.4.0 이상&lt;/a&gt; 은 최신 Chef Automate 버전과 결합 될 때 보고서를 가장 작은 크기로 줄이는 일부 속성 옵션을 지원합니다. 준수 보고서 크기를 관리하는 가장 좋은 방법을 결정하려면 Chef 지원에 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="f0b17888cfd5df0e818f30206e80ddeb17720fbb" translate="yes" xml:space="preserve">
          <source>If the size of a Compliance Report is over 4MB, then the &lt;em&gt;Reports&lt;/em&gt; page may not display as expected.</source>
          <target state="translated">준수 보고서의 크기가 4MB를 초과하면 &lt;em&gt;보고서&lt;/em&gt; 페이지가 예상대로 표시되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3bf707e0bbd6910a75b27f6fb988411804096a5" translate="yes" xml:space="preserve">
          <source>If the status of the secondary reports &lt;code&gt;Inconsistent&lt;/code&gt; or &lt;code&gt;UpToDate&lt;/code&gt; without manual intervention, all is well.</source>
          <target state="translated">보조의 상태가 수동 개입없이 &lt;code&gt;Inconsistent&lt;/code&gt; 또는 &lt;code&gt;UpToDate&lt;/code&gt; 로보고 되면 모든 것이 정상 입니다.</target>
        </trans-unit>
        <trans-unit id="813933979ff84c5870debb69b86971ec83d08ab8" translate="yes" xml:space="preserve">
          <source>If the system clock drifts more than 15 minutes from the actual time, the following type of error will be shown:</source>
          <target state="translated">시스템 시계가 실제 시간에서 15 분 이상 벗어나면 다음 유형의 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a9bef89796a23c318b9d6139e7930997d6c16340" translate="yes" xml:space="preserve">
          <source>If the tag is missing for an image, &lt;code&gt;latest&lt;/code&gt; is assumed as default:</source>
          <target state="translated">이미지에 태그가 없으면 &lt;code&gt;latest&lt;/code&gt; 이 기본값으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e2ed236cfe6be07ee960172ad66399da5feb7841" translate="yes" xml:space="preserve">
          <source>If the upgrade process times out, re-run the command until it finishes successfully.</source>
          <target state="translated">업그레이드 프로세스가 시간 초과되면 성공적으로 완료 될 때까지 명령을 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a177870f5bd7fb0636f547a7c88a67c6a0cfd99b" translate="yes" xml:space="preserve">
          <source>If the user is a member of any org admin groups, attempt to remove from those groups. Ignored if &lt;code&gt;--no-disassociate-user&lt;/code&gt; is set.</source>
          <target state="translated">사용자가 조직 관리 그룹의 구성원 인 경우 해당 그룹에서 제거해보십시오. &lt;code&gt;--no-disassociate-user&lt;/code&gt; 가 설정된 경우 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="0137113737700711794f1f02d1f6f835229a7eb9" translate="yes" xml:space="preserve">
          <source>If the version number is less than or equal to the current version number, the change(s) will not be applied.</source>
          <target state="translated">버전 번호가 현재 버전 번호보다 작거나 같으면 변경 사항이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad5879f7dc4a7d509917b33b3ebe2f409d02e187" translate="yes" xml:space="preserve">
          <source>If there are failures as you work through the remaining world, you may discover this is due to a) an older version of the software that can&amp;rsquo;t build against a newer/different compiler, b) a failure that is currently in master and not yet caught (ex: source url now returns a 404), c) other issues which require more debugging and work. You can try to fix the package at this moment and re-run the &lt;code&gt;stage3-build-remaining-plan.sh&lt;/code&gt; which will resume your failed build and continue. Alternatively, you could remove that Plan out of the rebuild set and deal with it separately. The catch here is that your failing package might become a dependency of another package later on, so you would want to remove those as well. Thankfully, there&amp;rsquo;s a way you can get this list, by running another program in the &lt;code&gt;core-plans&lt;/code&gt; repository. Note that you want to run this in the same common parent directory containing the &lt;code&gt;core-plans&lt;/code&gt; and &lt;code&gt;habitat&lt;/code&gt; git clones, and also outside of a Studio. Let&amp;rsquo;s assume that the plan is for &lt;code&gt;core/doxygen&lt;/code&gt;. You can run:</source>
          <target state="translated">나머지 세계에서 작업 할 때 오류가 발생하면 a) 새롭거나 다른 컴파일러에 대해 빌드 할 수없는 이전 버전의 소프트웨어, b) 현재 마스터에 있고 그렇지 않은 오류로 인한 것임을 알 수 있습니다. 아직 잡혔다 (예 : 소스 URL이 이제 404를 반환 함), c) 더 많은 디버깅과 작업이 필요한 기타 문제. 이 시점에서 패키지를 수정하고 &lt;code&gt;stage3-build-remaining-plan.sh&lt;/code&gt; 를 다시 실행 하여 실패한 빌드를 재개하고 계속할 수 있습니다. 또는 재 구축 세트에서 해당 계획을 제거하고 별도로 처리 할 수 ​​있습니다. 여기서 문제는 실패한 패키지가 나중에 다른 패키지의 종속성이 될 수 있으므로 이러한 패키지도 제거해야한다는 것입니다. 고맙게도 &lt;code&gt;core-plans&lt;/code&gt; 에서 다른 프로그램을 실행하여이 목록을 얻을 수있는 방법이 있습니다.저장소. &lt;code&gt;core-plans&lt;/code&gt; 및 &lt;code&gt;habitat&lt;/code&gt; git 클론을 포함하는 동일한 공통 상위 디렉토리 에서 그리고 Studio 외부에서도 실행하려고합니다. 계획이 &lt;code&gt;core/doxygen&lt;/code&gt; 에 대한 것이라고 가정 해 봅시다 . 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cedfc99c16ea6fe7b132cb8d8fd4ada052599619" translate="yes" xml:space="preserve">
          <source>If there are many customer records in an environment, a simple recipe can be used to loop over every customer, like this:</source>
          <target state="translated">환경에 많은 고객 레코드가있는 경우 간단한 레시피를 사용하여 다음과 같이 모든 고객을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="489355b812373e0c5a62e178af8db4ca57c90094" translate="yes" xml:space="preserve">
          <source>If there are more than two front end machines in a cluster, the &lt;code&gt;postgresql['max_connections']&lt;/code&gt; setting should be increased. The increased value depends on the number of machines in the front end, but also the number of services that are running on each of these machines.</source>
          <target state="translated">클러스터에 프런트 엔드 시스템이 둘 이상있는 경우 &lt;code&gt;postgresql['max_connections']&lt;/code&gt; 설정을 늘려야합니다. 증가 된 값은 프런트 엔드의 시스템 수와 각 시스템에서 실행중인 서비스 수에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6631d2ef564bf6c031e72f54a9794fc30338ce35" translate="yes" xml:space="preserve">
          <source>If there are multiple Service Groups with the same &lt;em&gt;OK&lt;/em&gt; health percentage, then the Service Groups will display in the same order of priority: &lt;em&gt;Critical&lt;/em&gt;, &lt;em&gt;Unknown&lt;/em&gt;, and &lt;em&gt;Warning&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;OK&lt;/em&gt; 상태 백분율 이 동일한 서비스 그룹이 여러 개있는 경우 서비스 그룹은 &lt;em&gt;Critical&lt;/em&gt; , &lt;em&gt;Unknown&lt;/em&gt; , &lt;em&gt;Warning&lt;/em&gt; 의 동일한 우선 순위 순서로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="2024f89122039ad2bb3c88f2c389f23eaff53cce" translate="yes" xml:space="preserve">
          <source>If there are multiple versions of a package installed with the same display name, all of those packages will be removed unless a version is provided in the &lt;code&gt;version&lt;/code&gt; property or unless it can be discovered in the installer file specified by the &lt;code&gt;source&lt;/code&gt; property.</source>
          <target state="translated">표시 이름이 동일한 여러 버전의 패키지가 설치된 경우 &lt;code&gt;version&lt;/code&gt; 속성 에 버전이 제공 되지 않거나 &lt;code&gt;source&lt;/code&gt; 속성에 지정된 설치 프로그램 파일에서 찾을 수없는 경우 해당 패키지가 모두 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="9d43725735c9e2fd11cd161a2c6115693a1fc722" translate="yes" xml:space="preserve">
          <source>If there are multiple versions of a package installed with the same display name, all of those packages will be removed unless a version is provided in the &lt;strong&gt;version&lt;/strong&gt; property or unless it can be discovered in the installer file specified by the &lt;strong&gt;source&lt;/strong&gt; property.</source>
          <target state="translated">동일한 표시 이름으로 설치된 패키지의 여러 버전이있는 경우 &lt;strong&gt;버전&lt;/strong&gt; 속성 에 버전이 제공 되지 않거나 &lt;strong&gt;소스&lt;/strong&gt; 속성에 지정된 설치 프로그램 파일에서 검색 될 수없는 경우 이러한 모든 패키지가 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="9df08737d4b6dc11dfac7b747155a02845835bfc" translate="yes" xml:space="preserve">
          <source>If there are no destinations, aggregation will not occur</source>
          <target state="translated">목적지가없는 경우 집계가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a47b80178dfe93bcd29c4c98509ca38db080405" translate="yes" xml:space="preserve">
          <source>If there are only a handful of controls that should be executed from an included profile, it&amp;rsquo;s not necessarily to skip all the unneeded controls, or worse, copy/paste those controls bit-for-bit into your profile. Instead, use the &lt;code&gt;require_controls&lt;/code&gt; command.</source>
          <target state="translated">포함 된 프로필에서 실행해야하는 컨트롤이 몇 개만있는 경우 필요하지 않은 컨트롤을 모두 건너 뛰거나 더 나쁜 경우에는 해당 컨트롤을 프로필에 비트 단위로 복사 / 붙여 넣기 할 필요가 없습니다. 대신 &lt;code&gt;require_controls&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d271d1e7920da6e19c7dac4fecebae9ef88db5eb" translate="yes" xml:space="preserve">
          <source>If there&amp;rsquo;s no ORGANIZATION-validator.pem file, regenerate it.</source>
          <target state="translated">ORGANIZATION-validator.pem 파일이 없으면 다시 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="c028850c8b8726dc04f91bcb6b801aaefa750052" translate="yes" xml:space="preserve">
          <source>If there&amp;rsquo;s no client.rb file, regenerate it and ensure the values for the &lt;code&gt;node_name&lt;/code&gt; and &lt;code&gt;client_key&lt;/code&gt; settings are correct.</source>
          <target state="translated">client.rb 파일이 없으면 파일을 다시 생성하고 &lt;code&gt;node_name&lt;/code&gt; 및 &lt;code&gt;client_key&lt;/code&gt; 설정 값 이 올바른지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="66411a08a0ad8d02ae83327209f0da3afe2aac0d" translate="yes" xml:space="preserve">
          <source>If they have not been increased, run the following commands as a root user:</source>
          <target state="translated">이를 늘리지 않은 경우 루트 사용자로 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c8ebf5fe0c07bec1f91f92dc3e61472ad6c7f7a5" translate="yes" xml:space="preserve">
          <source>If this command is run on both back-end servers, it will put the back-end cluster into a state where no server holds the DRBD resource.</source>
          <target state="translated">이 명령이 두 백엔드 서버에서 실행되면 백엔드 클러스터가 DRBD 자원을 보유하는 서버가없는 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="68d09c950e7f81b342f7640d81c9509763a3f785" translate="yes" xml:space="preserve">
          <source>If this command runs successfully, it will return the following:</source>
          <target state="translated">이 명령이 성공적으로 실행되면 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4af60ea84bb58da150ef4b5841331ea591825637" translate="yes" xml:space="preserve">
          <source>If this is &lt;em&gt;not&lt;/em&gt; a managed disk this will be the storage account name in which the disk is stored.</source>
          <target state="translated">관리 디스크 가 &lt;em&gt;아닌&lt;/em&gt; 경우 디스크가 저장되는 스토리지 계정 이름이됩니다.</target>
        </trans-unit>
        <trans-unit id="037e8f7dbb7b2052df705375f440dd3655d15d72" translate="yes" xml:space="preserve">
          <source>If this is &lt;em&gt;not&lt;/em&gt; a managed disk, then the &lt;code&gt;vhd_uri&lt;/code&gt; will be the full URI to the disk in the storage account.</source>
          <target state="translated">관리 디스크 가 &lt;em&gt;아닌&lt;/em&gt; 경우 &lt;code&gt;vhd_uri&lt;/code&gt; 는 스토리지 계정의 디스크에 대한 전체 URI가됩니다.</target>
        </trans-unit>
        <trans-unit id="c7450bc7494251b267a511911e62fc842fddcc03" translate="yes" xml:space="preserve">
          <source>If this is a managed disk then this is the fully qualified id for the disk in Azure.</source>
          <target state="translated">관리 디스크 인 경우 Azure의 디스크에 대한 정규화 된 ID입니다.</target>
        </trans-unit>
        <trans-unit id="2fc8468f770160b867c1d74c6e68b39fe8d5c0ed" translate="yes" xml:space="preserve">
          <source>If this is a managed disk this is the storage account type, e.g. &lt;code&gt;Standard_LRS&lt;/code&gt;.</source>
          <target state="translated">관리 디스크 인 경우 스토리지 계정 유형 (예 : &lt;code&gt;Standard_LRS&lt;/code&gt; ) 입니다.</target>
        </trans-unit>
        <trans-unit id="85335e97132e8964c3119c8e9208a80c4365ca5a" translate="yes" xml:space="preserve">
          <source>If this is a managed disk, this returns the resource group in which the disk is stored.</source>
          <target state="translated">관리 디스크 인 경우 디스크가 저장된 자원 그룹을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="692f6c6d48bbe5b53a1e763dc983ef335e5739b1" translate="yes" xml:space="preserve">
          <source>If this is a managed disk, this returns the subscription id of where the disk is stored.</source>
          <target state="translated">관리 디스크 인 경우 디스크가 저장된 구독 ID를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d1b44fb82b0a175e976c1ed96368e9e54c17c3d1" translate="yes" xml:space="preserve">
          <source>If this is a new Chef Infra Server, create an organization on the Chef Infra Server with:</source>
          <target state="translated">새 Chef Infra Server 인 경우 다음을 사용하여 Chef Infra Server에 조직을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="53d6583dfa036fde62473217b979fa4da8589c15" translate="yes" xml:space="preserve">
          <source>If this is a secret backing a KV certificate, then this field specifies the corresponding key backing the KV certificate.</source>
          <target state="translated">KV 인증서를 지원하는 비밀 인 경우이 필드는 KV 인증서를 지원하는 해당 키를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5f9d44ac7d238084d85cd50e632d84c9c1ddbd16" translate="yes" xml:space="preserve">
          <source>If this is set only the latest version of value are exposed for all columns in this column family</source>
          <target state="translated">이것이 설정되면이 column family의 모든 열에 대해 최신 버전의 값만 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1e5b499e545618226ef083cbe25be3def7460d11" translate="yes" xml:space="preserve">
          <source>If this is set, only the latest version of value in this column are exposed</source>
          <target state="translated">이것이 설정되면이 열에있는 값의 최신 버전 만 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="097e977528ae02dccbcd62cad05b3da5351477b4" translate="yes" xml:space="preserve">
          <source>If this is the first time that you are using a Policyfile, use the &lt;code&gt;chef install&lt;/code&gt; command to generate a lock file:</source>
          <target state="translated">Policyfile을 처음 사용하는 경우에는 &lt;code&gt;chef install&lt;/code&gt; 명령을 사용하여 잠금 파일을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="f51cb0c93d63ed322641a4c262a923c499e164ad" translate="yes" xml:space="preserve">
          <source>If this is your first time provisioning a VM, this operation may take a few minutes to download the base OS image.</source>
          <target state="translated">VM을 처음 프로비저닝하는 경우이 작업은 기본 OS 이미지를 다운로드하는 데 몇 분 정도 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3ccf40139f0fe40406dd90c9b98ed9095af980e" translate="yes" xml:space="preserve">
          <source>If this value is not specified, knife will use &lt;code&gt;https://supermarket.chef.io&lt;/code&gt; by default.</source>
          <target state="translated">이 값을 지정하지 않으면 knife는 기본적으로 &lt;code&gt;https://supermarket.chef.io&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="19d50b33b57d48d3b6e79a6a77c3a251085c0763" translate="yes" xml:space="preserve">
          <source>If those settings are missing, you will get authentication errors and be unable to proceed.</source>
          <target state="translated">이러한 설정이 누락 된 경우 인증 오류가 발생하고 계속할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c0cf0f025a559e19c99f86f0f388b3ca030a6a59" translate="yes" xml:space="preserve">
          <source>If true requests to different hosts will be cached separately.</source>
          <target state="translated">true 인 경우 다른 호스트에 대한 요청이 별도로 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="cfaa9aad6d84488daf77aaf40c115b361130c360" translate="yes" xml:space="preserve">
          <source>If true then the policy is enforced. If false then any configuration is acceptable</source>
          <target state="translated">참이면 정책이 적용됩니다. false이면 모든 구성이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="3947660fea0eafde90c9f2869dd26ed30f99f29c" translate="yes" xml:space="preserve">
          <source>If true, Chef Infra Client will fetch the katello-ca-consumer-latest.noarch.rpm from the satellite_host using HTTPS.</source>
          <target state="translated">true 인 경우 Chef Infra Client는 HTTPS를 사용하여 satellite_host에서 katello-ca-consumer-latest.noarch.rpm을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="72b0aed37fa7ffe4d74c2940c0c09b304abda6a9" translate="yes" xml:space="preserve">
          <source>If true, RHSM will attempt to automatically attach the host to applicable subscriptions. It is generally better to use an activation key with the subscriptions pre-defined.</source>
          <target state="translated">참이면 RHSM은 자동으로 해당 서브 스크립 션에 호스트를 연결하려고합니다. 일반적으로 구독이 미리 정의 된 활성화 키를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="335e73183254f4dfac166e6895b2347d6a007954" translate="yes" xml:space="preserve">
          <source>If true, all instances int he cluster will only have internal IP addresses</source>
          <target state="translated">true이면 클러스터의 모든 인스턴스에 내부 IP 주소 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="01ea01ef5e3ca84f6f7692f4552fa32c8484e6bf" translate="yes" xml:space="preserve">
          <source>If true, clients can access ILB from all regions. Otherwise only allows from the local region the ILB is located at.</source>
          <target state="translated">true 인 경우 클라이언트는 모든 지역에서 ILB에 액세스 할 수 있습니다. 그렇지 않으면 ILB가있는 로컬 지역에서만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="fdb4dbb9dede6e1417f71b1cc5d4ffa9782fd6fb" translate="yes" xml:space="preserve">
          <source>If true, enable Cloud CDN for this BackendBucket.</source>
          <target state="translated">true이면이 BackendBucket에 Cloud CDN을 사용 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4fc8968a6667739ccea0b0594f26d0ecdd6e38ad" translate="yes" xml:space="preserve">
          <source>If true, enable Cloud CDN for this BackendService.</source>
          <target state="translated">true 인 경우이 BackendService에 Cloud CDN을 사용 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2fae9e4db21559bb10d739080f2749593d445446" translate="yes" xml:space="preserve">
          <source>If true, http and https requests will be cached separately.</source>
          <target state="translated">true 인 경우 http 및 https 요청이 별도로 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="49c61f2c15afd72bf419a7bb87c5011cf9ee35b9" translate="yes" xml:space="preserve">
          <source>If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.</source>
          <target state="translated">true 인 경우 query_string_whitelist 및 query_string_blacklist에 따라 캐시 키에 쿼리 문자열 매개 변수를 포함합니다. 둘 다 설정되지 않은 경우 전체 쿼리 문자열이 포함됩니다. false이면 쿼리 문자열이 캐시 키에서 완전히 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="150f59ac32aba9ebd142293c014ea1f014e68d4e" translate="yes" xml:space="preserve">
          <source>If true, online prediction access logs are sent to StackDriver Logging.</source>
          <target state="translated">true 인 경우 온라인 예측 액세스 로그가 StackDriver Logging으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="ce70d929113172778bafebf2bb066053e5c52d1c" translate="yes" xml:space="preserve">
          <source>If true, online prediction nodes send stderr and stdout streams to Stackdriver Logging</source>
          <target state="translated">true이면 온라인 예측 노드가 stderr 및 stdout 스트림을 Stackdriver Logging으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4df3e922f195dbe7a4fe6706eccc8d81c3583d61" translate="yes" xml:space="preserve">
          <source>If true, the &amp;lsquo;katello-agent&amp;rsquo; RPM will be installed.</source>
          <target state="translated">참이면 'katello-agent'RPM이 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="729ae78262944b1fcf182ec9ffa5f9a08c917b45" translate="yes" xml:space="preserve">
          <source>If true, the system will be registered even if it is already registered. Normally, any register operations will fail if the machine has already been registered.</source>
          <target state="translated">true이면 이미 등록되어 있어도 시스템이 등록됩니다. 일반적으로 기기가 이미 등록 된 경우 모든 등록 작업이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="bb9c5ad0a6010b2efb9323926c30cc8a4a735b30" translate="yes" xml:space="preserve">
          <source>If two &lt;code&gt;control_group&lt;/code&gt; blocks have the same name, the chef-client will raise an exception. For example, the following &lt;code&gt;control_group&lt;/code&gt; blocks exist in different cookbooks:</source>
          <target state="translated">두 &lt;code&gt;control_group&lt;/code&gt; 블록의 이름이 같은 경우 chef-client는 예외를 발생시킵니다. 예를 들어 다음과 같은 &lt;code&gt;control_group&lt;/code&gt; 블록이 다른 요리 책에 있습니다.</target>
        </trans-unit>
        <trans-unit id="9790169724529bb4e1f21471be2b9332075722ba" translate="yes" xml:space="preserve">
          <source>If two operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one Chef Infra Client is making updates to a data bag at a time.</source>
          <target state="translated">두 작업이 동시에 데이터 백의 내용을 업데이트하려고 시도하는 경우 마지막으로 쓴 시도는 데이터 백의 내용을 업데이트하는 작업입니다. 이러한 상황은 데이터 손실로 이어질 수 있으므로 조직은 한 번에 하나의 Chef Infra Client 만 데이터 백을 업데이트하도록 조치를 취해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a1b1c2cbc2c5d5be8aab66474497e6b5a698b7d" translate="yes" xml:space="preserve">
          <source>If used outside a control block, &lt;code&gt;only_if&lt;/code&gt; skips all controls in the current file</source>
          <target state="translated">제어 블록 외부에서 사용되는 경우 &lt;code&gt;only_if&lt;/code&gt; 는 현재 파일의 모든 제어를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="92e7cf24288f5efc303e8636f86c51603f32387d" translate="yes" xml:space="preserve">
          <source>If using Subversion as the version source control application, it is important not to upload certain files that Subversion uses to maintain the version history of each file. This is because Chef Infra Client will never use it while configuring nodes, plus the amount of data in an upload that includes top-level Subversion data could be significant.</source>
          <target state="translated">버전 소스 제어 응용 프로그램으로 Subversion을 사용하는 경우 Subversion이 각 파일의 버전 기록을 유지하기 위해 사용하는 특정 파일을 업로드하지 않는 것이 중요합니다. 이는 Chef Infra Client가 노드를 구성하는 동안 절대 사용하지 않을뿐만 아니라 최상위 Subversion 데이터를 포함하는 업로드의 데이터 양이 상당 할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="c90e104496dc454179f082fc8db5feccd2dff521" translate="yes" xml:space="preserve">
          <source>If using the Chef extension in an ARM template, it is recommended that you base64 encode your validation key and set this option to &lt;code&gt;base64encoded&lt;/code&gt;</source>
          <target state="translated">ARM 템플릿에서 Chef 확장을 사용하는 경우 유효성 검사 키를 base64로 인코딩하고이 옵션을 &lt;code&gt;base64encoded&lt;/code&gt; 로 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e44129b045e5b7a62d0cc80a7199f36cfb2efb77" translate="yes" xml:space="preserve">
          <source>If values are missing, they will not be overwritten. If &lt;code&gt;public_key&lt;/code&gt; is null, the public key will not be overwritten.</source>
          <target state="translated">값이 없으면 덮어 쓰지 않습니다. 경우 &lt;code&gt;public_key&lt;/code&gt; 널 (null)이며, 공개 키는 덮어 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="507a93cb1bc7754b94c906a3b6e443aeb8c75209" translate="yes" xml:space="preserve">
          <source>If we do not receive an &amp;ldquo;ACK&amp;rdquo; in 1 second, choose 5 peers (the &amp;ldquo;PINGREQ targets&amp;rdquo;), and send them a &amp;ldquo;PINGREQ(member)&amp;rdquo; message for the member who failed the PING.</source>
          <target state="translated">1 초 내에 &quot;ACK&quot;를받지 못하면 5 개의 피어 ( &quot;PINGREQ 대상&quot;)를 선택하고 PING에 실패한 멤버에 대해 &quot;PINGREQ (멤버)&quot;메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="f93ca2ff5c78a1d921df160f81de4f3c875b6af5" translate="yes" xml:space="preserve">
          <source>If we do not receive an ACK via PINGREQ with 2.1 seconds, we mark the member as Suspect, and set an expiration timer of 9.3 seconds.</source>
          <target state="translated">2.1 초 동안 PINGREQ를 통해 ACK를받지 못하면 구성원을 Suspect로 표시하고 만료 타이머를 9.3 초로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a2c41b121dd6f222aa8bffa0dc884323898fc992" translate="yes" xml:space="preserve">
          <source>If we do not receive an Alive status for the member within the 9.3 second suspicion expiration window, the member is marked as Confirmed.</source>
          <target state="translated">9.3 초의 의심 만료 기간 내에 회원의 Alive 상태를받지 못하면 해당 회원은 Confirmed로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="791157964bab4dda8da2fd1d925eabc19f42bc13" translate="yes" xml:space="preserve">
          <source>If we go back to the &lt;a href=&quot;../index&quot;&gt;overview of Chef&lt;/a&gt;, but then focus only on where attributes are located, it looks something like this:</source>
          <target state="translated">&lt;a href=&quot;../index&quot;&gt;Chef 개요&lt;/a&gt; 로 돌아가서 속성이있는 위치에만 초점을 맞추면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3e6ea83cd1c136bc11722b59daa201a812ffafb1" translate="yes" xml:space="preserve">
          <source>If we receive an &amp;ldquo;ACK&amp;rdquo; message before 1 second elapses, the member remains Alive.</source>
          <target state="translated">1 초가 지나기 전에&amp;ldquo;ACK&amp;rdquo;메시지를 받으면 멤버는 살아 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ca68b3e27609522bb7721e70478e3e00e2b2a9d" translate="yes" xml:space="preserve">
          <source>If writing code designed to be run internally to Chef, for example in a cookbook or a knife plugin, transition to using &lt;code&gt;Chef::ServerAPI&lt;/code&gt;. In most cases this is as simple as creating a &lt;code&gt;Chef::ServerAPI&lt;/code&gt; instance rather than a &lt;code&gt;Chef::REST&lt;/code&gt; one.</source>
          <target state="translated">예를 들어 쿡북 또는 나이프 플러그인에서 Chef 내부적으로 실행되도록 설계된 코드를 작성하는 경우 &lt;code&gt;Chef::ServerAPI&lt;/code&gt; 사용으로 전환 하십시오 . 대부분의 경우 이것은 &lt;code&gt;Chef::REST&lt;/code&gt; 인스턴스가 아닌 &lt;code&gt;Chef::ServerAPI&lt;/code&gt; 인스턴스 를 생성하는 것만 큼 간단 합니다.</target>
        </trans-unit>
        <trans-unit id="53f1ee60665c97ff6c7d61ec4431a44cf7c2e172" translate="yes" xml:space="preserve">
          <source>If writing code to interact with a Chef Infra Server from other code, move to the &lt;a href=&quot;https://rubygems.org/gems/chef-api&quot;&gt;chef-api gem&lt;/a&gt;.</source>
          <target state="translated">다른 코드에서 Chef Infra Server와 상호 작용하는 코드를 작성하는 경우 &lt;a href=&quot;https://rubygems.org/gems/chef-api&quot;&gt;chef-api gem으로&lt;/a&gt; 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea3dea0a7b845f3a316a5ef74fe40ec5e759f1f2" translate="yes" xml:space="preserve">
          <source>If yes, allow the user to perform the action</source>
          <target state="translated">그렇다면 사용자가 작업을 수행하도록 허용</target>
        </trans-unit>
        <trans-unit id="b91435aa79e99958491e291e526d81bcd865bdc3" translate="yes" xml:space="preserve">
          <source>If you add or update dependencies in &lt;code&gt;inspec.yml&lt;/code&gt;, dependencies may be re-vendored and the lockfile updated with &lt;code&gt;inspec vendor --overwrite&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;inspec.yml&lt;/code&gt; 에 종속성 을 추가하거나 업데이트 하면 종속성이 다시 공급되고 잠금 파일이 &lt;code&gt;inspec vendor --overwrite&lt;/code&gt; 로 업데이트 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8fd5168296f712a3f7548cfabaef96c06a4183d" translate="yes" xml:space="preserve">
          <source>If you added a &lt;code&gt;postgresql.md5_auth_cidr_addresses&lt;/code&gt; line to the leader&amp;rsquo;s &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; in &lt;a href=&quot;index#step-1-create-cluster&quot;&gt;Step 1: Create Cluster&lt;/a&gt; then update this node&amp;rsquo;s &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; with the following content where &lt;code&gt;postgresql.md5_auth_cidr_addresses&lt;/code&gt; is set to the same value used in the leader&amp;rsquo;s &lt;code&gt;chef-backend.rb&lt;/code&gt;. If all of the backend and frontend clusters are in the same network then you don&amp;rsquo;t need to modify this node&amp;rsquo;s &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; at all.</source>
          <target state="translated">&lt;a href=&quot;index#step-1-create-cluster&quot;&gt;1 단계 : 클러스터 생성&lt;/a&gt; 에서 리더의 &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; 에 &lt;code&gt;postgresql.md5_auth_cidr_addresses&lt;/code&gt; 행을 추가 한 경우이 노드의 &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; 를 다음 내용으로 업데이트 합니다. &lt;code&gt;postgresql.md5_auth_cidr_addresses&lt;/code&gt; 는 리더의 &lt;code&gt;chef-backend.rb&lt;/code&gt; 에서 사용 된 것과 동일한 값으로 설정됩니다 . 모든 백엔드 및 프런트 엔드 클러스터가 동일한 네트워크에있는 경우이 노드의 &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt; 를 전혀 수정할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f5506f188a2f0c401371339216043eaba1c2e113" translate="yes" xml:space="preserve">
          <source>If you already have a file you&amp;rsquo;d like to use that is in a different location, set the &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable with the full path to that file.</source>
          <target state="translated">다른 위치에있는 사용하려는 파일이 이미있는 경우 해당 파일의 전체 경로로 &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; 환경 변수를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="72643d2a6c0b12d4c3830dd69ee30b5601feba14" translate="yes" xml:space="preserve">
          <source>If you already use Hosted Chef as your Chef Infra Server, skip to the cookbook sharing method of your choice:</source>
          <target state="translated">이미 Hosted Chef를 Chef Infra Server로 사용하고 있다면 원하는 요리 책 공유 방법으로 건너 뛰십시오.</target>
        </trans-unit>
        <trans-unit id="2681b099199c5ddc9756145b798d4f751ea059b4" translate="yes" xml:space="preserve">
          <source>If you are a Chef Compliance Remediation customer, add your remediation package next.</source>
          <target state="translated">Chef Compliance Remediation 고객 인 경우 다음에 수정 패키지를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9edf84dc6b7733667d6ae9b2d3ac087c59fa3086" translate="yes" xml:space="preserve">
          <source>If you are deploying Chef Habitat Builder with Chef Automate in an airgapped environment, follow &lt;a href=&quot;../airgapped_installation/index&quot;&gt;the documentation on building an airgap bundle&lt;/a&gt;.</source>
          <target state="translated">Airgapped 환경에서 Chef Automate를 사용하여 Chef Habitat Builder를 배포 &lt;a href=&quot;../airgapped_installation/index&quot;&gt;하는 경우 airgap 번들 빌드에 대한 설명서를&lt;/a&gt; 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="e9104ae2f9e0c522c98da73ae95231f5596737c0" translate="yes" xml:space="preserve">
          <source>If you are familiar with Capistrano, the following examples should help you know when to use the various callbacks that are available. If you are not familiar with Capistrano, then follow the semantic names of these callbacks to help you determine when to use each of the callbacks within a recipe that is built with the &lt;strong&gt;deploy&lt;/strong&gt; resource.</source>
          <target state="translated">Capistrano에 익숙한 경우, 다음 예제는 사용 가능한 다양한 콜백을 언제 사용해야하는지 아는 데 도움이됩니다. Capistrano에 익숙하지 않은 경우 이러한 콜백의 시맨틱 이름을 따라 &lt;strong&gt;배치&lt;/strong&gt; 자원으로 빌드 된 레시피 내에서 각 콜백을 사용할시기를 결정하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc0d7f0114e948722cb2cb670c5b64e911bdac8d" translate="yes" xml:space="preserve">
          <source>If you are familiar with Chef projects and know the component that is causing you a problem, you can file an issue in the corresponding GitHub project. All of our Open Source Software can be found in our GitHub organizations at &lt;a href=&quot;https://github.com/chef&quot;&gt;https://github.com/chef&lt;/a&gt;, &lt;a href=&quot;https://github.com/inspec&quot;&gt;https://github.com/inspec&lt;/a&gt;, and &lt;a href=&quot;https://github.com/habitat-sh&quot;&gt;https://github.com/habitat-sh&lt;/a&gt;. All projects include GitHub issue templates to help gather information needed for a thorough review.</source>
          <target state="translated">Chef 프로젝트에 익숙하고 문제를 일으키는 구성 요소를 알고있는 경우 해당 GitHub 프로젝트에서 문제를 제출할 수 있습니다. 모든 오픈 소스 소프트웨어는 GitHub 조직 ( &lt;a href=&quot;https://github.com/chef&quot;&gt;https://github.com/chef&lt;/a&gt; , &lt;a href=&quot;https://github.com/inspec&quot;&gt;https://github.com/inspec&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/habitat-sh&quot;&gt;https://github.com/habitat-sh)&lt;/a&gt; 에서 찾을 수 있습니다 . 모든 프로젝트에는 철저한 검토에 필요한 정보를 수집하는 데 도움이되는 GitHub 문제 템플릿이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc74563f306210dff91a12c0b16a174358e4c7cc" translate="yes" xml:space="preserve">
          <source>If you are going to use Munki, confirm if the S3 bucket is correctly configured for it.</source>
          <target state="translated">Munki를 사용하려는 경우 S3 버킷이 올바르게 구성되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4e6c541ddd13b2137cff089496c2dcd8065a7951" translate="yes" xml:space="preserve">
          <source>If you are going to use Munki, is the S3 bucket correctly configured for it?</source>
          <target state="translated">Munki를 사용하려는 경우 S3 버킷이 올바르게 구성되어 있습니까?</target>
        </trans-unit>
        <trans-unit id="9a6bed326e53dfb7178ba6f9e854c4e3a12ebc3c" translate="yes" xml:space="preserve">
          <source>If you are migrating an &lt;a href=&quot;../../install_chef_air_gap/index#chef-automate&quot;&gt;airgapped Chef Automate installation&lt;/a&gt;, contact your Chef account representative for a Chef Automate 2 license.</source>
          <target state="translated">&lt;a href=&quot;../../install_chef_air_gap/index#chef-automate&quot;&gt;airgapped Chef Automate 설치를&lt;/a&gt; 마이그레이션하는 경우 Chef 계정 담당자에게 Chef Automate 2 라이선스를 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="a0c24fed8118b62dbef4a0b2ff8559385327a138" translate="yes" xml:space="preserve">
          <source>If you are migrating from Chef Automate 1, you probably have already deployed a data collector token on either your Chef Infra Servers or your Chef Infra Clients. To re-use your existing data collector token from your Chef Automate 1 installation, you need to perform the configuration change outlined here.</source>
          <target state="translated">Chef Automate 1에서 마이그레이션하는 경우 Chef Infra 서버 또는 Chef Infra 클라이언트에 데이터 수집기 ​​토큰을 이미 배포했을 수 있습니다. Chef Automate 1 설치에서 기존 데이터 수집기 ​​토큰을 재사용하려면 여기에 설명 된 구성 변경을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="2acb26703df0d05ac41bfa696b7a51a0b5fcbc93" translate="yes" xml:space="preserve">
          <source>If you are new to Chef Automate, you can see it in action in the self-paced &lt;a href=&quot;https://learn.chef.io/tracks/continuous-automation#/&quot;&gt;Continuous Automation&lt;/a&gt; track on Learn Chef. There, you&amp;rsquo;ll set up your own Chef Automate installation and a sample application to experiment with.</source>
          <target state="translated">Chef Automate를 처음 사용하는 경우 Learn Chef 의자가 진행형 &lt;a href=&quot;https://learn.chef.io/tracks/continuous-automation#/&quot;&gt;연속 자동화&lt;/a&gt; 트랙 에서 실제로 작동하는 모습을 볼 수 있습니다 . 여기에서 직접 Chef Automate 설치와 실험 할 샘플 애플리케이션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ec0192e23a233b8cb9322e71a94b58f52c18b5b4" translate="yes" xml:space="preserve">
          <source>If you are new to Chef Infra, we highly recommend the &lt;a href=&quot;https://learn.chef.io/courses/course-v1:chef+Infra101+perpetual/about&quot;&gt;Manage Your Fleet with Chef Infra&lt;/a&gt; course on Learn Chef to familiarize yourself with Chef Infra concepts.</source>
          <target state="translated">Chef Infra를 처음 사용하는 경우 Chef Infra 개념에 익숙해 지려면 Learn Chef의 &lt;a href=&quot;https://learn.chef.io/courses/course-v1:chef+Infra101+perpetual/about&quot;&gt;Chef Infra로 차량 관리&lt;/a&gt; 과정을 적극 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="c662989ba177b67f1a10d1355eb9189367660b60" translate="yes" xml:space="preserve">
          <source>If you are running a package in a specific channel and demote</source>
          <target state="translated">특정 채널에서 패키지를 실행 중이고 강등하는 경우</target>
        </trans-unit>
        <trans-unit id="c641eb31104fd644ef9efe8f59815b09139bee96" translate="yes" xml:space="preserve">
          <source>If you are running your private Supermarket in AWS, you may need to set an additional attribute for the node&amp;rsquo;s public IP address:</source>
          <target state="translated">AWS에서 프라이빗 슈퍼마켓을 운영하는 경우 노드의 퍼블릭 IP 주소에 대한 추가 속성을 설정해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8cf92e9561fc5c3e8eed05df7ada66cc6b4775" translate="yes" xml:space="preserve">
          <source>If you are unable to open Chef Automate, check that the &lt;code&gt;config.toml&lt;/code&gt; contains the host&amp;rsquo;s public DNS name as the FQDN.</source>
          <target state="translated">Chef Automate를 열 수없는 경우 &lt;code&gt;config.toml&lt;/code&gt; 에 호스트의 퍼블릭 DNS 이름이 FQDN으로 포함되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="791b54c50b404b9b5acb39920c332e0466bb1f38" translate="yes" xml:space="preserve">
          <source>If you are unable to open Chef Automate, check that the &lt;code&gt;config.toml&lt;/code&gt; contains the public DNS as the FQDN.</source>
          <target state="translated">Chef Automate를 열 수없는 경우 &lt;code&gt;config.toml&lt;/code&gt; 에 FQDN으로 퍼블릭 DNS가 포함되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="99434b0cb22fa0910901bb9ca7ef999650226b90" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../chef_solo/index&quot;&gt;Chef Solo&lt;/a&gt;, you will most likely want to use the &lt;a href=&quot;https://www.terraform.io/docs/provisioners/remote-exec.html&quot;&gt;Terraform remote-exec Provisioner&lt;/a&gt; rather than the Terraform Chef Provisioner. The remote-exec Provisioner may be used to run a script or an inline set of commands on the newly created machine. Please refer to the &lt;a href=&quot;https://www.terraform.io/docs/provisioners/remote-exec.html&quot;&gt;Terraform remote-exec Provisioner documentation&lt;/a&gt; for further options and examples.</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;../chef_solo/index&quot;&gt;요리사 솔로&lt;/a&gt; , 당신은 가능성이 가장 높은 사용하는 것이 좋습니다 &lt;a href=&quot;https://www.terraform.io/docs/provisioners/remote-exec.html&quot;&gt;Terraform 원격 간부 제공자를&lt;/a&gt; Terraform 요리사 제공자보다는. remote-exec Provisioner는 새로 생성 된 컴퓨터에서 스크립트 또는 인라인 명령 집합을 실행하는 데 사용할 수 있습니다. 추가 옵션 및 예제 는 &lt;a href=&quot;https://www.terraform.io/docs/provisioners/remote-exec.html&quot;&gt;Terraform remote-exec Provisioner 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e03c2da22677ef6f960ab0a2090de3de5fb57ac2" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;chef-sugar&lt;/code&gt;&amp;mdash;a &lt;a href=&quot;https://supermarket.chef.io/cookbooks/chef-sugar&quot;&gt;community cookbook&lt;/a&gt;&amp;mdash;it must be version 3.0.1 (or higher) to use the previous example. If you are using an older version of &lt;code&gt;chef-sugar&lt;/code&gt;, the following workaround is required:</source>
          <target state="translated">당신이 사용하는 경우 &lt;code&gt;chef-sugar&lt;/code&gt; -a의 &lt;a href=&quot;https://supermarket.chef.io/cookbooks/chef-sugar&quot;&gt;커뮤니티를 요리 책&lt;/a&gt; - 그것은 이전 예제를 사용하는 버전 3.0.1 (또는 그 이상)이어야합니다. 이전 버전의 &lt;code&gt;chef-sugar&lt;/code&gt; 를 사용하는 경우 다음 해결 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a9d67b29bcec556770ed145d0fb45cab6bd93204" translate="yes" xml:space="preserve">
          <source>If you are using Azure Resource Manager templates to create your infrastructure you can use the Chef extension to have Azure handle the bootstrapping/configuration of your node to your Chef Infra Server.</source>
          <target state="translated">Azure Resource Manager 템플릿을 사용하여 인프라를 만드는 경우 Chef 확장을 사용하여 Azure가 Chef Infra Server에 대한 노드의 부트 스트랩 / 구성을 처리하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="703e670bf5c2e5c733a148447326f237c2ba5b54" translate="yes" xml:space="preserve">
          <source>If you are using Chef Automate to manage changes in Chef cookbooks, you can wrap, or use directly, &lt;code&gt;delivery-truck&lt;/code&gt;, a build cookbook for building and testing cookbooks. The &lt;code&gt;delivery-truck&lt;/code&gt; and &lt;code&gt;delivery-sugar&lt;/code&gt; cookbooks contain helpers that can be used for non-cookbook workflows as well. You can wrap or modify the &lt;code&gt;delivery-truck&lt;/code&gt; cookbook to suit your own needs.</source>
          <target state="translated">Chef Automate를 사용하여 Chef 쿡북의 변경 사항을 관리 하는 경우 쿡북 빌드 및 테스트를위한 빌드 쿡북 인 &lt;code&gt;delivery-truck&lt;/code&gt; 을 직접 랩핑하거나 사용할 수 있습니다 . &lt;code&gt;delivery-truck&lt;/code&gt; 및 &lt;code&gt;delivery-sugar&lt;/code&gt; 요리 책뿐만 아니라 비 요리 책 워크 플로우에 사용할 수있는 도우미가 포함되어 있습니다. &lt;code&gt;delivery-truck&lt;/code&gt; 요리 책을 자신의 필요에 맞게 포장하거나 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a75c82a6b807787fbdc516ee141961b563cb73c" translate="yes" xml:space="preserve">
          <source>If you are using Chef InSpec from a platform-specific package (rpm, msi, etc.) or from a Chef prepared shell in ChefDK, you can directly launch Chef InSpec shell against your local machine using the following. See &lt;a href=&quot;../../install_dk#set-system-ruby&quot;&gt;https://docs.chef.io/install_dk.html#set-system-ruby&lt;/a&gt; for details.</source>
          <target state="translated">플랫폼 별 패키지 (rpm, msi 등) 또는 ChefDK의 Chef 준비 셸에서 Chef InSpec을 사용하는 경우 다음을 사용하여 로컬 컴퓨터에 대해 Chef InSpec 셸을 직접 시작할 수 있습니다. 자세한 내용은 &lt;a href=&quot;../../install_dk#set-system-ruby&quot;&gt;https://docs.chef.io/install_dk.html#set-system-ruby&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9fd2a36329c33d2f3b6336b80a8fe83a16994de7" translate="yes" xml:space="preserve">
          <source>If you are using a certificate signed by a trusted certificate authority instead of the default certificate, you can provide Builder with the root certificate authority for the signed certificate.</source>
          <target state="translated">기본 인증서 대신 신뢰할 수있는 인증 기관에서 서명 한 인증서를 사용하는 경우 빌더에 서명 된 인증서에 대한 루트 인증 기관을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3745b3ff6911c38232f3a013cb56c2e86a1803d8" translate="yes" xml:space="preserve">
          <source>If you are using a custom certificate authority or a self-signed certificate then you will need the third option. This file should contain to the entire certificate chain in pem format. See &lt;a href=&quot;../fips#certificate_management&quot;&gt;FIPS Certificate Management&lt;/a&gt; for an example on how to generate the file.</source>
          <target state="translated">사용자 지정 인증 기관 또는 자체 서명 된 인증서를 사용하는 경우 세 번째 옵션이 필요합니다. 이 파일은 pem 형식의 전체 인증서 체인을 포함해야합니다. 파일 생성 방법에 대한 예는 &lt;a href=&quot;../fips#certificate_management&quot;&gt;FIPS 인증서 관리&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="043d081f8070d6ed390aa9154f6d02df719899d4" translate="yes" xml:space="preserve">
          <source>If you are using a private Chef Supermarket, you can activate the Fieri service like this:</source>
          <target state="translated">개인 Chef Supermarket을 사용하는 경우 다음과 같이 Fieri 서비스를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1742eff5e75b9844cad5ef6075edef57df8f48e2" translate="yes" xml:space="preserve">
          <source>If you are using a raw container-based deployment (i.e., not a managed platform like Kubernetes), you will want to mount an appropriate &lt;code&gt;CTL_SECRET&lt;/code&gt; file into the container.</source>
          <target state="translated">원시 컨테이너 기반 배포를 사용하는 경우 (즉, Kubernetes와 같은 관리 형 플랫폼이 아님) 적절한 &lt;code&gt;CTL_SECRET&lt;/code&gt; 파일을 컨테이너 에 마운트하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="992efa515c0e1ad7a139eb15f6d532fafdc0cee0" translate="yes" xml:space="preserve">
          <source>If you are using the cli option &lt;code&gt;--config&lt;/code&gt;, you can also set reporters.</source>
          <target state="translated">cli 옵션 &lt;code&gt;--config&lt;/code&gt; 를 사용하는 경우 리포터를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="79e5e3a2acf12e747999bf64008efafde496fce5" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t locate a cookbook, do not download it from an external source, such as the public Chef Supermarket. The cookbook version in your development environment must match the version on your node. &lt;a href=&quot;#download-cookbooks-from-chef-infra-server&quot;&gt;As a last resort&lt;/a&gt;, the Upgrade Lab can get copies of your cookbooks from the Chef Infra Server during the &lt;code&gt;capture&lt;/code&gt; phase.</source>
          <target state="translated">요리 책을 찾을 수없는 경우 공용 Chef Supermarket과 같은 외부 소스에서 다운로드하지 마십시오. 개발 환경의 쿡북 버전은 노드의 버전과 일치해야합니다. &lt;a href=&quot;#download-cookbooks-from-chef-infra-server&quot;&gt;최후의 수단&lt;/a&gt; 으로 Upgrade Lab은 &lt;code&gt;capture&lt;/code&gt; 단계 중에 Chef Infra Server에서 요리 책 사본을 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f85c6669110f9e737fd4c53e05af4b674d52c1c5" translate="yes" xml:space="preserve">
          <source>If you cannot run as the &lt;code&gt;root&lt;/code&gt; user, but you are fine with &lt;code&gt;root&lt;/code&gt; being the container user&amp;rsquo;s primary group, you can simply specify a user ID to run as. This user need not exist in the container itself, and it&amp;rsquo;s better if it doesn&amp;rsquo;t. Using pure Docker, it might look like this:</source>
          <target state="translated">&lt;code&gt;root&lt;/code&gt; 사용자 로 실행할 수 없지만 &lt;code&gt;root&lt;/code&gt; 가 컨테이너 사용자의 기본 그룹 으로 괜찮다면 실행할 사용자 ID를 지정하기 만하면됩니다. 이 사용자는 컨테이너 자체에 존재할 필요가 없으며 그렇지 않은 경우 더 좋습니다. 순수한 Docker를 사용하면 다음과 같이 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61524fa7b0f4b388c3c99e487da48a90ba3d1e8d" translate="yes" xml:space="preserve">
          <source>If you choose &lt;strong&gt;Bitbucket&lt;/strong&gt;, you must follow the integration steps in &lt;a href=&quot;../integrate_delivery_bitbucket/index&quot;&gt;Integrate Delivery with Bitbucket&lt;/a&gt; before you can add a project. After you have done that you can add a new Chef Automate project through this web UI by entering the Bitbucket project key, repository, and target branch information.</source>
          <target state="translated">&lt;strong&gt;Bitbucket&lt;/strong&gt; 을 선택 하는 경우 프로젝트를 추가하기 전에 &lt;a href=&quot;../integrate_delivery_bitbucket/index&quot;&gt;Integrate Delivery with Bitbucket&lt;/a&gt; 의 통합 단계를 따라야합니다 . 그런 다음 Bitbucket 프로젝트 키, 리포지토리 및 대상 브랜치 정보를 입력하여이 웹 UI를 통해 새 Chef Automate 프로젝트를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="295f1935b02b33d1d4b260f962e02caab4735012" translate="yes" xml:space="preserve">
          <source>If you choose &lt;strong&gt;Bitbucket&lt;/strong&gt;, you must follow the integration steps in &lt;a href=&quot;integrate_delivery_bitbucket/index&quot;&gt;Integrate Delivery with Bitbucket&lt;/a&gt; before you can add a project. After you have done that you can add a new Chef Automate project through this web UI by entering the Bitbucket project key, repository, and target branch information.</source>
          <target state="translated">&lt;strong&gt;Bitbucket&lt;/strong&gt; 을 선택 하는 경우 프로젝트를 추가하기 전에 &lt;a href=&quot;integrate_delivery_bitbucket/index&quot;&gt;Integrate Delivery with Bitbucket&lt;/a&gt; 의 통합 단계를 따라야합니다 . 그런 다음 Bitbucket 프로젝트 키, 리포지토리 및 대상 브랜치 정보를 입력하여이 웹 UI를 통해 새 Chef Automate 프로젝트를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cddd4d4cfbe4c3fcbc37821cbb8825bf1acfd447" translate="yes" xml:space="preserve">
          <source>If you choose &lt;strong&gt;Chef Delivery&lt;/strong&gt;, simply click &lt;strong&gt;Save and Close&lt;/strong&gt; to finish adding the project.</source>
          <target state="translated">&lt;strong&gt;Chef Delivery&lt;/strong&gt; 를 선택하는 경우 &lt;strong&gt;저장 후 닫기&lt;/strong&gt; 를 클릭 하여 프로젝트 추가를 완료하면됩니다.</target>
        </trans-unit>
        <trans-unit id="708ce933f2284c7a34eaf89e09c3499ae25c8abb" translate="yes" xml:space="preserve">
          <source>If you choose &lt;strong&gt;GitHub&lt;/strong&gt;, a text area opens. Enter the following:</source>
          <target state="translated">&lt;strong&gt;GitHub&lt;/strong&gt; 를 선택 하면 텍스트 영역이 열립니다. 다음을 입력:</target>
        </trans-unit>
        <trans-unit id="5face77a30946f90cc7c0327111981d3f05be333" translate="yes" xml:space="preserve">
          <source>If you chose a scheduled day to install, then choose an hour on that day for you installation</source>
          <target state="translated">설치 예정일을 선택한 경우 해당 날짜의 설치 시간을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="2504b2abc2c6600684082284149b2e088b94b285" translate="yes" xml:space="preserve">
          <source>If you clone a repo from git, you must override &lt;code&gt;do_verify()&lt;/code&gt; to &lt;code&gt;return 0&lt;/code&gt; in a &lt;code&gt;plan.sh&lt;/code&gt; or if you are authoring a &lt;code&gt;plan.ps1&lt;/code&gt; then override &lt;code&gt;Invoke-Verify&lt;/code&gt; with an empty implementation.</source>
          <target state="translated">당신이 자식에서의 repo를 복제하는 경우는 오버라이드 (override) 할 필요가 있습니다 &lt;code&gt;do_verify()&lt;/code&gt; 하는 &lt;code&gt;return 0&lt;/code&gt; A의 &lt;code&gt;plan.sh&lt;/code&gt; 또는 당신이 제작하는 경우 &lt;code&gt;plan.ps1&lt;/code&gt; 을 다음 오버라이드 (override) &lt;code&gt;Invoke-Verify&lt;/code&gt; 빈 구현.</target>
        </trans-unit>
        <trans-unit id="f6757dc211ebfd39c2bc3c7fee33cbb3b1117409" translate="yes" xml:space="preserve">
          <source>If you clone from GitHub instead (or make use of a pre-existing clone), you will need to add a &lt;code&gt;delivery&lt;/code&gt; remote. The Workflow clone URL can be found on the project&amp;rsquo;s page in the Workflow UI. To create the remote, run the following:</source>
          <target state="translated">대신 GitHub에서 복제하는 경우 (또는 기존 복제를 사용하는 경우) &lt;code&gt;delivery&lt;/code&gt; 원격 을 추가해야합니다 . 워크 플로 복제 URL은 워크 플로 UI의 프로젝트 페이지에서 찾을 수 있습니다. 리모컨을 생성하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ebf18aee638146b8665275ad02dc9cd4cba70b57" translate="yes" xml:space="preserve">
          <source>If you copied the shared &lt;code&gt;chef-backend-secrets.json&lt;/code&gt; file to a user HOME directory on this host, remove it now.</source>
          <target state="translated">공유 된 &lt;code&gt;chef-backend-secrets.json&lt;/code&gt; 파일을이 호스트의 사용자 HOME 디렉토리에 복사 한 경우 지금 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="0fbfc73ecd6d2fc6f16993750e4c164c645ef1fb" translate="yes" xml:space="preserve">
          <source>If you created a new Habitat origin from your host machine or from the Studio, Builder will not have either of the origin keys corresponding to your artifact. Builder will not accept uploaded artifacts without first having the correct public origin key.</source>
          <target state="translated">호스트 컴퓨터 또는 Studio에서 새 Habitat 오리진을 만든 경우 Builder에는 아티팩트에 해당하는 오리진 키가 없습니다. 빌더는 먼저 올바른 공개 원본 키가 없으면 업로드 된 아티팩트를 수락하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76023072523473d9adf4e85a3db9a7c32c9b8c8a" translate="yes" xml:space="preserve">
          <source>If you decided to override the OS default detection frequency, specify your choice here. Valid choices are 0 - 22</source>
          <target state="translated">OS 기본 감지 빈도를 재정의하기로 결정한 경우 여기에서 선택 사항을 지정하십시오. 유효한 선택은 0-22입니다.</target>
        </trans-unit>
        <trans-unit id="7888293ad0d92e4fbf329df6487fe5df061a8c15" translate="yes" xml:space="preserve">
          <source>If you discover common environment variables that Chef Habitat doesn&amp;rsquo;t currently treat appropriately, feel free to request an addition to the codebase, or even to submit a pull request yourself.</source>
          <target state="translated">Chef Habitat에서 현재 적절하게 처리하지 않는 공통 환경 변수를 발견 한 경우 코드베이스에 추가를 요청하거나 풀 요청을 직접 제출할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="afe342431029c1f452d52012cf514f44edb92be4" translate="yes" xml:space="preserve">
          <source>If you do clone a repo from git, you must override do_verify() to return 0.</source>
          <target state="translated">git에서 리포지토리를 복제하는 경우 do_verify ()를 재정 의하여 0을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="389b21ce7cb346ccf6088a18abea3e976992dffc" translate="yes" xml:space="preserve">
          <source>If you do need to use FIPS mode, there are a few steps to get it up and running in Delivery CLI on your workstation.</source>
          <target state="translated">FIPS 모드를 사용해야하는 경우 워크 스테이션의 Delivery CLI에서이를 시작하고 실행하는 몇 가지 단계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="119941131adecf1b7c9bbce16adacd8b86880fb9" translate="yes" xml:space="preserve">
          <source>If you do need to write code which mutates the system through pure-Ruby then you should do so like this:</source>
          <target state="translated">pure-Ruby를 통해 시스템을 변경하는 코드를 작성해야한다면 다음과 같이해야합니다.</target>
        </trans-unit>
        <trans-unit id="fee4b7c3c5e3b1dfefcb8ee86ca299938fc12884" translate="yes" xml:space="preserve">
          <source>If you do not already have one, sign up for your account at &lt;a href=&quot;https://azure.microsoft.com&quot;&gt;https://azure.microsoft.com&lt;/a&gt;</source>
          <target state="translated">아직 계정이없는 경우 &lt;a href=&quot;https://azure.microsoft.com&quot;&gt;https://azure.microsoft.com&lt;/a&gt; 에서 계정을 등록 하십시오.</target>
        </trans-unit>
        <trans-unit id="aa0644437022bfd6f16185dc266222b1a9e3e8cb" translate="yes" xml:space="preserve">
          <source>If you do not configure a token, the default token value is: &lt;code&gt;93a49a4f2482c64126f7b6015e6b0f30284287ee4054ff8807fb63d9cbd1c506&lt;/code&gt;</source>
          <target state="translated">토큰을 구성하지 않는 경우 기본 토큰 값은 &lt;code&gt;93a49a4f2482c64126f7b6015e6b0f30284287ee4054ff8807fb63d9cbd1c506&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5787e9db32dad5a856a1896a4a6073ad9957d24a" translate="yes" xml:space="preserve">
          <source>If you do not have a &lt;code&gt;policyfiles&lt;/code&gt; directory in your chef-repo, create one:</source>
          <target state="translated">chef-repo에 &lt;code&gt;policyfiles&lt;/code&gt; 디렉토리 가 없으면 새로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6c66edbfdcb504b7bf4f31c26464ce7b9ffa9524" translate="yes" xml:space="preserve">
          <source>If you do not have a version control system and CI/CD pipeline in place, then please contact your account team for help or find us at &lt;a href=&quot;mailto:sales@chef.io&quot;&gt;sales@chef.io&lt;/a&gt;.</source>
          <target state="translated">버전 제어 시스템과 CI / CD 파이프 라인이없는 경우 계정 팀에 도움을 요청하거나 &lt;a href=&quot;mailto:sales@chef.io&quot;&gt;sales@chef.io&lt;/a&gt; 에서 저희를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="c76804249bdd437c78744b64d1eece1d4de804ea" translate="yes" xml:space="preserve">
          <source>If you do not have access to the original version-controlled source of a cookbook, press return at the prompt for &lt;code&gt;chef capture&lt;/code&gt; to use a copy of the cookbook downloaded from the Chef Infra Server.</source>
          <target state="translated">쿡북의 원래 버전 제어 소스에 액세스 할 수없는 경우 Chef Infra Server에서 다운로드 한 쿡북 사본을 사용하려면 &lt;code&gt;chef capture&lt;/code&gt; 프롬프트에서 Return 키를 누르십시오 .</target>
        </trans-unit>
        <trans-unit id="ae7864bf687675aac8a93ba460a2961b3e2bdb73" translate="yes" xml:space="preserve">
          <source>If you do not use a Chef Infra Server in your environment (if you only use &lt;code&gt;chef-solo&lt;/code&gt;, for example), you</source>
          <target state="translated">환경에서 Chef Infra Server를 사용하지 않는 경우 ( 예 : &lt;code&gt;chef-solo&lt;/code&gt; 만 사용하는 경우 )</target>
        </trans-unit>
        <trans-unit id="75b938bb1601314748da0de3b8589aa9a896a129" translate="yes" xml:space="preserve">
          <source>If you do not use a Chef Infra Server in your environment (if you only use &lt;code&gt;chef-solo&lt;/code&gt;, for example), you can configure your Chef Infra Clients to send their run data to Automate directly.</source>
          <target state="translated">환경에서 Chef Infra Server를 사용하지 않는 경우 ( 예 : &lt;code&gt;chef-solo&lt;/code&gt; 만 사용하는 경우 ) 실행 데이터를 Automate에 직접 보내도록 Chef Infra 클라이언트를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cc940a2134c1c3a73dce61ceed59073ea6b6c3a" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t have a node object file available then you can get an approximate size of the node data by running the following command on a node.</source>
          <target state="translated">사용 가능한 노드 개체 파일이없는 경우 노드에서 다음 명령을 실행하여 노드 데이터의 대략적인 크기를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac6a85d8623fbcc901fd13ca1c9e1637b9571159" translate="yes" xml:space="preserve">
          <source>If you experience errors in this Chef run, you may need to supply attributes or make modifications to your Policyfile, so that your cookbook can run using the latest Chef Infra Client.</source>
          <target state="translated">이 Chef 실행에서 오류가 발생하면 최신 Chef Infra Client를 사용하여 쿡북을 실행할 수 있도록 속성을 제공하거나 Policyfile을 수정해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2f4dbb5eb8e3e0529502bb8d8febb08d51088ba" translate="yes" xml:space="preserve">
          <source>If you experience failures when running the profile, know that most basic virtual machines are not fully hardened to your security policies. If you want to fix the failures, look at &lt;a href=&quot;effortless-config.md&quot;&gt;Chef Infra and the Effortless Config Pattern&lt;/a&gt;.</source>
          <target state="translated">프로필을 실행할 때 오류가 발생하면 대부분의 기본 가상 머신이 보안 정책에 완전히 강화되지 않았 음을 알아 두십시오. 오류를 수정하려면 &lt;a href=&quot;effortless-config.md&quot;&gt;Chef Infra 및 Effortless Config Pattern을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b2fda697a3f87b297f2aad408bbb68befe8e923" translate="yes" xml:space="preserve">
          <source>If you feel your safety is in jeopardy, please do not hesitate to contact local law enforcement.</source>
          <target state="translated">귀하의 안전이 위태 롭다고 생각되면 주저하지 말고 현지 법 집행 기관에 연락하십시오.</target>
        </trans-unit>
        <trans-unit id="ba60672cc52fb2f09a0abbfb0c5ec8d971917700" translate="yes" xml:space="preserve">
          <source>If you forget to add a DCO sign-off before submitting a pull request, you can amend your commit by entering &lt;code&gt;git commit --amend -s&lt;/code&gt;. After that you&amp;rsquo;ll likely have to force push your commit to github by entering &lt;code&gt;git push -f&lt;/code&gt;.</source>
          <target state="translated">풀 요청을 제출하기 전에 DCO 사인 오프를 추가하는 것을 잊은 경우 &lt;code&gt;git commit --amend -s&lt;/code&gt; 를 입력하여 커밋을 수정할 수 있습니다 . 그 후에 &lt;code&gt;git push -f&lt;/code&gt; 를 입력하여 커밋을 github에 강제로 푸시해야 할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="804130c5db94aa7a8fb15512db2c33dbc59e94c1" translate="yes" xml:space="preserve">
          <source>If you get to a situation in which the primary host is lost and unrecoverable, but the last status of the DRBD pair was reporting that the secondary node was in an &lt;code&gt;Inconsistent&lt;/code&gt; state, it is very likely that some data will be lost. The DRBD status on the remaining host will look something like the following:</source>
          <target state="translated">기본 호스트가 유실되고 복구 불가능한 상황이 발생하지만 DRBD 쌍의 마지막 상태가 보조 노드가 &lt;code&gt;Inconsistent&lt;/code&gt; 상태 에 있다고보고 한 경우 일부 데이터가 유실 될 가능성이 큽니다. 나머지 호스트의 DRBD 상태는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2c3f604156a8510e5ad6bdad0a4aca4f74eaa3e0" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;../backup/index#backup-to-a-filesystem&quot;&gt;configured the backup directory&lt;/a&gt; to a directory other than the default directory (&lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt;), you must supply the backup directory. Without a backup ID, Chef Automate uses the most recent backup in the backup directory.</source>
          <target state="translated">이 경우 &lt;a href=&quot;../backup/index#backup-to-a-filesystem&quot;&gt;백업 디렉토리를 구성&lt;/a&gt; 기본 디렉토리 (이외의 디렉토리 &lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt; ), 당신은 백업 디렉토리를 제공해야합니다. 백업 ID가 없으면 Chef Automate는 백업 디렉터리의 최신 백업을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f87c4ed9350316236a5e649e05866269147f3da6" translate="yes" xml:space="preserve">
          <source>If you have FIPS compliance enabled at the kernel level and install or reconfigure the Chef Infra Server then it will default to running in FIPS mode.</source>
          <target state="translated">커널 수준에서 FIPS 준수를 활성화하고 Chef Infra Server를 설치 또는 재구성하면 기본적으로 FIPS 모드에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="5087bb79c79b908843d9a9d9f534bdef7f288cfa" translate="yes" xml:space="preserve">
          <source>If you have FIPS compliance enabled at the kernel level then Chef Infra Client will default to running in FIPS mode. Otherwise you can add &lt;code&gt;fips true&lt;/code&gt; to the &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; or &lt;code&gt;C:\\chef\\client.rb&lt;/code&gt;.</source>
          <target state="translated">커널 수준에서 FIPS 준수를 활성화 한 경우 Chef Infra Client는 기본적으로 FIPS 모드에서 실행됩니다. 그렇지 않으면 &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; 또는 &lt;code&gt;C:\\chef\\client.rb&lt;/code&gt; 에 &lt;code&gt;fips true&lt;/code&gt; 를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6fb6c6fc7eab9be87398f3c015e71e7feba6a6a8" translate="yes" xml:space="preserve">
          <source>If you have FIPS compliance enabled in the operating system at the kernel level and install or reconfigure the Chef Automate server then it will default to running in FIPS mode.</source>
          <target state="translated">커널 수준의 운영 체제에서 FIPS 준수를 활성화하고 Chef Automate 서버를 설치 또는 재구성하면 기본적으로 FIPS 모드에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="b98e34f4005bb43df0236dea4d26ab573676211d" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;Name&lt;/code&gt; tag applied to the EC2 instance, this can be used to lookup the instance. This must be passed as a &lt;code&gt;name: 'value'&lt;/code&gt; key-value entry in a hash.</source>
          <target state="translated">당신이있는 경우 &lt;code&gt;Name&lt;/code&gt; EC2 인스턴스에 적용되는 태그를, 이것은 인스턴스를 조회 할 수 있습니다. &lt;code&gt;name: 'value'&lt;/code&gt; 으로 전달되어야합니다 : 해시의 'value' 키-값 항목.</target>
        </trans-unit>
        <trans-unit id="d5ecbfbae2fd4325d5d6c7cf0f58e6354eb2b058" translate="yes" xml:space="preserve">
          <source>If you have a GitHub repository with multiple components inside, you will most likely also have individual plans for those components that are located inside of component subfolders. By default, Builder will only look for a package plan in either the root of the repository, or in a &lt;code&gt;habitat&lt;/code&gt; subfolder at the root. If it does not find a plan file in those locations, it will not automatically issue builds when it detects file changes in the repository.</source>
          <target state="translated">내부에 여러 구성 요소가있는 GitHub 저장소가있는 경우 구성 요소 하위 폴더 내부에있는 해당 구성 요소에 대한 개별 계획도있을 것입니다. 기본적으로 Builder는 저장소의 루트 또는 루트의 &lt;code&gt;habitat&lt;/code&gt; 하위 폴더에서 패키지 계획 만 찾습니다 . 해당 위치에서 계획 파일을 찾지 못하면 저장소에서 파일 변경을 감지 할 때 자동으로 빌드를 발행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9603bc6d19a98c79b7792ff32eb3c86712ae2c89" translate="yes" xml:space="preserve">
          <source>If you have a WSUS Server and Target Groups, set this True</source>
          <target state="translated">WSUS 서버 및 대상 그룹이있는 경우 True로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="98bcf4e06b67947210d668cffecc1388ca6ea2d9" translate="yes" xml:space="preserve">
          <source>If you have a bunch of nested cookbooks or Policyfiles in a complex &lt;a href=&quot;../roles/index&quot;&gt;Chef Roles&lt;/a&gt; and &lt;a href=&quot;../environments/index&quot;&gt;Chef Environments&lt;/a&gt; setup, you may not want to move to Effortless.</source>
          <target state="translated">복잡한 &lt;a href=&quot;../roles/index&quot;&gt;Chef 역할&lt;/a&gt; 및 &lt;a href=&quot;../environments/index&quot;&gt;Chef 환경&lt;/a&gt; 설정에 여러 중첩 된 쿡북 또는 정책 파일이있는 경우 Effortless로 이동하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6a4221a1ccb2969903977d43709786d369e549ef" translate="yes" xml:space="preserve">
          <source>If you have a cookbook that relies on &lt;code&gt;platform_family 'rhel'&lt;/code&gt; to support Red Hat based distributions as well as Amazon Linux, you&amp;rsquo;ll need to modify your code to specifically check for the &lt;code&gt;'amazon'&lt;/code&gt; platform family.</source>
          <target state="translated">Red Hat 기반 배포 및 Amazon Linux를 지원하기 위해 &lt;code&gt;platform_family 'rhel'&lt;/code&gt; 에 의존하는 요리 책이있는 경우 &lt;code&gt;'amazon'&lt;/code&gt; 플랫폼 제품군 을 구체적으로 확인하도록 코드를 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="35f7e8672b52b5ca26accdbdc277f7d7e05b14ca" translate="yes" xml:space="preserve">
          <source>If you have a cookbook that relies on data from &lt;code&gt;node['cloud']&lt;/code&gt; you will need to update the code to the new format in Chef Client 13. On a Chef Client 12 or earlier node you can compare the data formats by running &lt;code&gt;ohai cloud&lt;/code&gt; and &lt;code&gt;ohai cloud_v2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node['cloud']&lt;/code&gt; 데이터에 의존하는 요리 책이있는 경우 Chef Client 13의 새 형식으로 코드를 업데이트해야합니다. Chef Client 12 또는 이전 노드에서 &lt;code&gt;ohai cloud&lt;/code&gt; 를 실행하여 데이터 형식을 비교할 수 있습니다. 및 &lt;code&gt;ohai cloud_v2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f6e00dbcc6c844471293d32e31c243ec9b1670a" translate="yes" xml:space="preserve">
          <source>If you have a cookbook that relies on data from &lt;code&gt;node['cloud_v2']&lt;/code&gt; you will need to update the code to instead use &lt;code&gt;node['cloud']&lt;/code&gt; attributes. Keep in mind that if you&amp;rsquo;re attempting to support Chef &amp;lt; 13 this data will be different. Foodcritic&amp;rsquo;s FC095 rule will detect any usage of the &lt;code&gt;node['cloud_v2']&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;code&gt;node['cloud_v2']&lt;/code&gt; 의 데이터에 의존하는 요리 책이있는 경우 대신 &lt;code&gt;node['cloud']&lt;/code&gt; 속성을 사용하도록 코드를 업데이트해야 합니다. Chef &amp;lt;13을 지원하려는 경우이 데이터가 달라집니다. Foodcritic의 FC095 규칙은 &lt;code&gt;node['cloud_v2']&lt;/code&gt; 속성의 사용을 감지 합니다.</target>
        </trans-unit>
        <trans-unit id="5c35b94ddf3f4d49aa3ae75e5aa50016c5155bd8" translate="yes" xml:space="preserve">
          <source>If you have a cookbook that relies on data from &lt;code&gt;node['filesystem']&lt;/code&gt; you will need to update the code to use data in the new format when migrating to Chef Client 13 or later. On a Chef Client 12 or earlier node you can view the new format by running ohai filesystem2 or on a Chef Client 13+ node you can run &lt;code&gt;ohai filesystem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node['filesystem']&lt;/code&gt; 의 데이터에 의존하는 쿡북이있는 경우 Chef Client 13 이상으로 마이그레이션 할 때 새 형식의 데이터를 사용하도록 코드를 업데이트해야합니다. Chef Client 12 이전 노드에서는 ohai filesystem2를 실행하여 새 형식을 볼 수 있으며 Chef Client 13+ 노드에서는 &lt;code&gt;ohai filesystem&lt;/code&gt; 을 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5dcf2d7ba9ab4c1672bc298ea56bc63182d6b038" translate="yes" xml:space="preserve">
          <source>If you have a cookbook that relies on data from &lt;code&gt;node['filesystem2']&lt;/code&gt; you will need to update the code to instead use &lt;code&gt;node['filesystem']&lt;/code&gt;. Keep in mind that if you&amp;rsquo;re attempting to support releases earlier than Chef Client 13 the data structure of node[&amp;lsquo;filesystem&amp;rsquo;] will be different. Foodcritic&amp;rsquo;s FC094 rule will detect any usage of the &lt;code&gt;node['filesystem_v2']&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;code&gt;node['filesystem2']&lt;/code&gt; 의 데이터에 의존하는 요리 책이있는 경우 대신 &lt;code&gt;node['filesystem']&lt;/code&gt; 을 사용하도록 코드를 업데이트해야합니다 . Chef Client 13 이전 릴리스를 지원하려는 경우 node [ 'filesystem']의 데이터 구조가 달라진다는 점에 유의하십시오. Foodcritic의 FC094 규칙은 &lt;code&gt;node['filesystem_v2']&lt;/code&gt; 속성의 사용을 감지 합니다.</target>
        </trans-unit>
        <trans-unit id="f11b8eb9919c577856ea53657b9c150a43600ca9" translate="yes" xml:space="preserve">
          <source>If you have a pre-existing fleet of Supervisors which have already been started up with their own individually-generated secrets, you will likely want to overwrite their existing &lt;code&gt;CTL_SECRET&lt;/code&gt; files with one that has a key of your own creation.</source>
          <target state="translated">이미 개별적으로 생성 된 비밀로 시작된 기존 Supervisor 플릿이있는 경우 기존 &lt;code&gt;CTL_SECRET&lt;/code&gt; 파일을 자신이 생성 한 키가있는 파일 로 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8d79e9cb42490f572c65931c7af4a587c2facbd" translate="yes" xml:space="preserve">
          <source>If you have access to Chef Infra Server through Automate or Chef Manage, you can download the starter kit. The starter kit will create the necessary configuration files: the &lt;code&gt;.chef&lt;/code&gt; directory, &lt;code&gt;config.rb&lt;/code&gt;, &lt;code&gt;ORGANIZATION-validator.pem&lt;/code&gt;, and &lt;code&gt;USER.pem&lt;/code&gt;. Simply download the starter kit and then move it to the desired location on your Chef Workstation machine.</source>
          <target state="translated">Automate 또는 Chef Manage를 통해 Chef Infra Server에 액세스 할 수있는 경우 스타터 키트를 다운로드 할 수 있습니다. 스타터 킷은 필요한 구성 파일 인 &lt;code&gt;.chef&lt;/code&gt; 디렉토리, &lt;code&gt;config.rb&lt;/code&gt; , &lt;code&gt;ORGANIZATION-validator.pem&lt;/code&gt; 및 &lt;code&gt;USER.pem&lt;/code&gt; 을 생성 합니다. 스타터 키트를 다운로드 한 다음 Chef Workstation 컴퓨터의 원하는 위치로 이동하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="162c6b9094bbc02a72aa660b6e8d98c7fa493285" translate="yes" xml:space="preserve">
          <source>If you have access to Chef server (hosted or on premises), you can download the starter kit. The starter kit will create the necessary configuration files&amp;mdash;the .chef directory, knife.rb, the ORGANIZATION-validator.pem, and USER.pem files) with the correct information that is required to interact with the Chef server. Simply download the starter kit and then move it to the desired location on your workstation.</source>
          <target state="translated">Chef 서버 (호스트 또는 온 프레미스)에 액세스 할 수있는 경우 스타터 키트를 다운로드 할 수 있습니다. 스타터 키트는 필요한 구성 파일 (.chef 디렉토리, knife.rb, ORGANIZATION-validator.pem 및 USER.pem 파일)을 Chef 서버와 상호 작용하는 데 필요한 올바른 정보로 작성합니다. 스타터 키트를 다운로드 한 후 워크 스테이션의 원하는 위치로 옮기십시오.</target>
        </trans-unit>
        <trans-unit id="a049c81694129fd1e90eb25da5b78fad24bdae11" translate="yes" xml:space="preserve">
          <source>If you have access to cookbook sources, storing cookbooks in one parent directory is easier, similar to this:</source>
          <target state="translated">요리 책 소스에 액세스 할 수있는 경우 다음과 같이 상위 디렉토리에 요리 책을 저장하는 것이 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="68574d39ba6b3975ef3851f3410a6190b8215eb3" translate="yes" xml:space="preserve">
          <source>If you have already uploaded your package to a channel and wish to promote it to a different channel, use the &lt;code&gt;hab pkg promote&lt;/code&gt; subcommand as shown below.</source>
          <target state="translated">패키지를 이미 채널에 업로드했고 다른 채널로 승격 시키려면 아래와 같이 &lt;code&gt;hab pkg promote&lt;/code&gt; 하위 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7544d86b0d609608fb0f0fe356c915bdfb3a12c0" translate="yes" xml:space="preserve">
          <source>If you have any lack of clarity about behaviors we include in the definition of &amp;ldquo;harassment&amp;rdquo;, please read the &lt;a href=&quot;http://citizencodeofconduct.org/&quot;&gt;Citizen Code of Conduct&lt;/a&gt;. In particular, we do not tolerate behavior that excludes people in socially marginalized groups.</source>
          <target state="translated">&quot;괴롭힘&quot;의 정의에 포함 된 행동에 대해 명확하지 않은 경우 &lt;a href=&quot;http://citizencodeofconduct.org/&quot;&gt;시민 행동 강령을&lt;/a&gt; 읽어보십시오 . 특히 우리는 사회적으로 소외된 집단의 사람들을 배제하는 행동을 용납하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2676f187f4f258ae59594227f73464075fe3d2e0" translate="yes" xml:space="preserve">
          <source>If you have built automation that is dependent on the old behavior of Chef Client, we strongly recommend updating it to support the extended set of exit codes. However, it&amp;rsquo;s still possible to enable the old behavior. Add the setting</source>
          <target state="translated">Chef Client의 이전 동작에 의존하는 자동화를 구축 한 경우 확장 된 종료 코드 세트를 지원하도록 업데이트하는 것이 좋습니다. 그러나 이전 동작을 활성화하는 것은 여전히 ​​가능합니다. 설정 추가</target>
        </trans-unit>
        <trans-unit id="80ccb51498944c198c34eef58a6ee2f5f592333e" translate="yes" xml:space="preserve">
          <source>If you have complex applications, you should deploy them with Chef Habitat as it has more features that better support complex applications</source>
          <target state="translated">복잡한 애플리케이션이있는 경우 복잡한 애플리케이션을 더 잘 지원하는 더 많은 기능이 있으므로 Chef Habitat을 사용하여 배포해야합니다.</target>
        </trans-unit>
        <trans-unit id="23d1e70a31b5b71de9cba6876b2dae989073c208" translate="yes" xml:space="preserve">
          <source>If you have concerns about applying the Chef Backend recovery process to your cluster, please consult with Support before taking the steps outlined in this guide.</source>
          <target state="translated">Chef 백엔드 복구 프로세스를 클러스터에 적용하는 데 문제가있는 경우이 가이드에 설명 된 단계를 수행하기 전에 지원팀에 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="89eaff0748e99508709bc43bc043c70f5b9577f0" translate="yes" xml:space="preserve">
          <source>If you have configured a &lt;code&gt;user_query_filter&lt;/code&gt;, it is wrapped into the filter argument:</source>
          <target state="translated">&lt;code&gt;user_query_filter&lt;/code&gt; 를 구성한 경우 필터 인수로 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="efe2b343d9760ababc63d798b9ffbb578da413dc" translate="yes" xml:space="preserve">
          <source>If you have created a &lt;code&gt;~/.azure/credentials&lt;/code&gt; file as above, you may also use the Chef InSpec command line &lt;code&gt;--target&lt;/code&gt; / &lt;code&gt;-t&lt;/code&gt; option to select a subscription ID. For example:</source>
          <target state="translated">위와 같이 &lt;code&gt;~/.azure/credentials&lt;/code&gt; 파일을 생성 한 경우 Chef InSpec 명령 줄 &lt;code&gt;--target&lt;/code&gt; / &lt;code&gt;-t&lt;/code&gt; 옵션을 사용하여 구독 ID를 선택할 수도 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="925be3856250956d2d72658e7efacb4e23d0c0bb" translate="yes" xml:space="preserve">
          <source>If you have custom Ohai V6 plugins installed via cookbook or bootstrap you will need to update these plugins to the Ohai V7 plugin format.</source>
          <target state="translated">쿡북이나 부트 스트랩을 통해 사용자 정의 Ohai V6 플러그인을 설치 한 경우 이러한 플러그인을 Ohai V7 플러그인 형식으로 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="6af6370253c9a290f1b2521213073b3631de7446" translate="yes" xml:space="preserve">
          <source>If you have defined a &lt;code&gt;config&lt;/code&gt; subdirectory with a templatized configuration file in your plan, then they will be included in the same relative location within the installed package directory. For more information on templatized configuration files, see &lt;a href=&quot;../config_templates/index&quot;&gt;Add configuration to plans&lt;/a&gt;.</source>
          <target state="translated">계획에 템플릿 화 된 구성 파일이 있는 &lt;code&gt;config&lt;/code&gt; 하위 디렉토리를 정의한 경우 설치된 패키지 디렉토리 내의 동일한 상대 위치에 포함됩니다. 템플릿 화 된 구성 파일에 대한 자세한 내용은 &lt;a href=&quot;../config_templates/index&quot;&gt;계획에 구성 추가를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="784d50c98483bdb8c6e777466b32dcb6eaeb6d70" translate="yes" xml:space="preserve">
          <source>If you have defined a &lt;code&gt;config_install&lt;/code&gt; subdirectory with a templatized configuration file in your plan, then they will be included in the same relative location within the installed package directory. For more information on templatized configuration files, see &lt;a href=&quot;../config_templates/index&quot;&gt;Add configuration to plans&lt;/a&gt;.</source>
          <target state="translated">계획에 템플릿 화 된 구성 파일이 있는 &lt;code&gt;config_install&lt;/code&gt; 하위 디렉터리를 정의한 경우 설치된 패키지 디렉터리 내의 동일한 상대 위치에 포함됩니다. 템플릿 화 된 구성 파일에 대한 자세한 내용은 &lt;a href=&quot;../config_templates/index&quot;&gt;계획에 구성 추가를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="226b5c21181eecc69a25140a4556647bac157d7e" translate="yes" xml:space="preserve">
          <source>If you have defined a &lt;code&gt;default.toml&lt;/code&gt; file in the root of your plan, then it will be included in the same relative location within the installed package directory. For more information on configuration and the default.toml file, see &lt;a href=&quot;../service_updates/index&quot;&gt;Configuration Updates&lt;/a&gt;.</source>
          <target state="translated">계획의 루트에 &lt;code&gt;default.toml&lt;/code&gt; 파일을 정의한 경우 설치된 패키지 디렉토리 내의 동일한 상대 위치에 포함됩니다. 구성 및 default.toml 파일에 대한 자세한 내용은 &lt;a href=&quot;../service_updates/index&quot;&gt;구성 업데이트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0e9157eef6ea85e6e496a48f7bb8470f59294da" translate="yes" xml:space="preserve">
          <source>If you have defined a &lt;code&gt;hooks&lt;/code&gt; subdirectory with hook scripts in your plan, then they will be included in the same relative location within the installed package directory. Read more about &lt;a href=&quot;../application_lifecycle_hooks/index&quot;&gt;Application Lifecycle Hooks&lt;/a&gt;.</source>
          <target state="translated">계획에 후크 스크립트가 있는 &lt;code&gt;hooks&lt;/code&gt; 하위 디렉토리를 정의한 경우 설치된 패키지 디렉토리 내의 동일한 상대 위치에 포함됩니다. &lt;a href=&quot;../application_lifecycle_hooks/index&quot;&gt;Application Lifecycle Hooks&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="afb8ac3c9cda9c863e521aa89c9d1fb3837722e2" translate="yes" xml:space="preserve">
          <source>If you have many files you need to fix, or the binary package automatically generates scripts with hardcoded shebang lines, you may need to simply symlink Chef Habitat&amp;rsquo;s version into where the binary package expects it to go:</source>
          <target state="translated">수정해야 할 파일이 많거나 바이너리 패키지가 하드 코딩 된 shebang 라인이있는 스크립트를 자동으로 생성하는 경우, 단순히 Chef Habitat 버전을 바이너리 패키지가 예상하는 위치로 심볼릭 링크해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adfd104e6a5e6100f91abf2e42b632399ca64baf" translate="yes" xml:space="preserve">
          <source>If you have not already done so, &lt;a href=&quot;../api_tokens/index#creating-a-standard-api-token&quot;&gt;create an API token&lt;/a&gt; in Chef Automate. Save it somewhere safe and accessible to you for use in this step.</source>
          <target state="translated">아직 수행하지 않은 경우 Chef Automate에서 &lt;a href=&quot;../api_tokens/index#creating-a-standard-api-token&quot;&gt;API 토큰&lt;/a&gt; 을 생성 하십시오. 이 단계에서 사용할 수 있도록 안전한 곳에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="2af1079d89466872888857461561a7a9de21ad45" translate="yes" xml:space="preserve">
          <source>If you have not done so already, you must enable Docker support for Cloud Foundry before you can upload your Cloud Foundry-specific Docker image.</source>
          <target state="translated">아직 수행하지 않은 경우 Cloud Foundry 특정 Docker 이미지를 업로드하기 전에 Cloud Foundry에 대한 Docker 지원을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="d72dc9f837b1ec9ef4e6a41c1e0f8aa0e5dbdd35" translate="yes" xml:space="preserve">
          <source>If you have not done so, read &lt;a href=&quot;../desktop_pattern/index&quot;&gt;The Chef Desktop Development Pattern&lt;/a&gt; to familiarize yourself with some of the basic steps for getting started. We will repeat a number of those steps here.</source>
          <target state="translated">그렇게하지 않았다면 &lt;a href=&quot;../desktop_pattern/index&quot;&gt;The Chef Desktop Development Pattern&lt;/a&gt; 을 읽고 시작하기위한 몇 가지 기본 단계에 익숙해 지십시오. 여기에서 여러 단계를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="ee44544a0d3e04c91298041945e2ef030779ed7b" translate="yes" xml:space="preserve">
          <source>If you have problems with SAML configuration and integration, see the SAML section of &lt;a href=&quot;../troubleshooting_chef_automate/index&quot;&gt;Troubleshooting Chef Automate Deployments&lt;/a&gt; for debugging tips.</source>
          <target state="translated">SAML 구성 및 통합에 &lt;a href=&quot;../troubleshooting_chef_automate/index&quot;&gt;문제가있는&lt;/a&gt; 경우 디버깅 팁은 Chef Automate 배포 문제 해결 의 SAML 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88d3bb63c99cbf4dfb4413726969e4834314bc6f" translate="yes" xml:space="preserve">
          <source>If you have requirements around data size and/or redundancy, see &lt;a href=&quot;#configuring-external-data-stores&quot;&gt;Configuring External Data Stores&lt;/a&gt; for information on configuring Chef Automate to use an externally-deployed PostgreSQL database cluster and/or Elasticsearch cluster. If you have requirements around a highly-available deployment of Chef Automate, please reach out to a Customer Success or Professional Services representative for assistance.</source>
          <target state="translated">데이터 크기 및 / 또는 중복성에 대한 요구 사항이있는 경우 외부에 배포 된 PostgreSQL 데이터베이스 클러스터 및 / 또는 Elasticsearch 클러스터를 사용하도록 Chef Automate를 구성하는 방법에 대한 정보는 &lt;a href=&quot;#configuring-external-data-stores&quot;&gt;외부 데이터 저장소 구성을&lt;/a&gt; 참조하십시오 . Chef Automate의 고 가용성 배포에 대한 요구 사항이있는 경우 고객 성공 또는 전문 서비스 담당자에게 도움을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="1e1f548534c90a94b7b59a8b921faca601fb691d" translate="yes" xml:space="preserve">
          <source>If you have the &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcsa.doc/GUID-223C2821-BD98-4C7A-936B-7DBE96291BA4.html&quot;&gt;VCSA&lt;/a&gt; or are planning on upgrading to vCenter 6.5+, this is the plugin to use</source>
          <target state="translated">당신이있는 경우 &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcsa.doc/GUID-223C2821-BD98-4C7A-936B-7DBE96291BA4.html&quot;&gt;VCSA를&lt;/a&gt; 하거나 VCENTER 6.5+로 업그레이드 계획하고,이 사용할 수있는 플러그인입니다</target>
        </trans-unit>
        <trans-unit id="e298f4711829d4cf1747e524267e95d7475f1ecb" translate="yes" xml:space="preserve">
          <source>If you have the &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcsa.doc/GUID-223C2821-BD98-4C7A-936B-7DBE96291BA4.html&quot;&gt;VCSA&lt;/a&gt; or are planning on upgrading to vCenter 6.5+, use this plugin</source>
          <target state="translated">당신이있는 경우 &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcsa.doc/GUID-223C2821-BD98-4C7A-936B-7DBE96291BA4.html&quot;&gt;VCSA를&lt;/a&gt; 하거나 VCENTER 6.5+로 업그레이드 계획하고,이 플러그인을 사용</target>
        </trans-unit>
        <trans-unit id="5c5c1525dd6a3813261f49f88265569c9a1b1731" translate="yes" xml:space="preserve">
          <source>If you have vRealize Automation &amp;lt; 7.0, you will need to downgrade the &lt;a href=&quot;https://github.com/chef-partners/vmware-vra-gem&quot;&gt;vmware-vra-gem&lt;/a&gt; to version &lt;code&gt;1.7.0&lt;/code&gt;</source>
          <target state="translated">vRealize Automation 7.0 미만인 경우 &lt;a href=&quot;https://github.com/chef-partners/vmware-vra-gem&quot;&gt;vmware-vra-gem&lt;/a&gt; 을 버전 &lt;code&gt;1.7.0&lt;/code&gt; 으로 다운 그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="58cbbe067bfd81f6f83c30e00a7ce6c7399d262c" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t already, a good first step is to read &lt;a href=&quot;../plan_writing/index&quot;&gt;the Writing Plans&lt;/a&gt; documentation.</source>
          <target state="translated">아직 읽지 않았다면 첫 번째 단계는 &lt;a href=&quot;../plan_writing/index&quot;&gt;Writing Plans&lt;/a&gt; 문서 를 읽는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="0868cabfbfc21e0542d13c26407ceb0b1e85279e" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t created an account yet, see the &lt;a href=&quot;../builder_account/index&quot;&gt;Create a Builder Account&lt;/a&gt; section above.</source>
          <target state="translated">아직 계정을 생성하지 않았다면 위 &lt;a href=&quot;../builder_account/index&quot;&gt;의 빌더 계정 생성&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb8d90ffbbc0f90f9c4e39a14d13eed5fdb68557" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t done so already, &lt;a href=&quot;../install_habitat/index&quot;&gt;download the &lt;code&gt;hab&lt;/code&gt; CLI&lt;/a&gt; and install it per the instructions on the download page.</source>
          <target state="translated">아직 수행하지 않은 경우, &lt;a href=&quot;../install_habitat/index&quot;&gt;다운로드 &lt;code&gt;hab&lt;/code&gt; CLI를&lt;/a&gt; 하고 다운로드 페이지의 지침에 따라 설치합니다.</target>
        </trans-unit>
        <trans-unit id="c4a12b7982fed6e3b23b3ea24cc1dd4a5fd9f600" translate="yes" xml:space="preserve">
          <source>If you just want to use each result of the search and don&amp;rsquo;t care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block:</source>
          <target state="translated">검색의 각 결과를 사용하고 집계 결과에 신경 쓰지 않으려면 검색 방법에 코드 블록을 제공 할 수 있습니다. 그런 다음 각 결과는 블록으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="ce48e52e862b0d7222a9220677d1477db91513d6" translate="yes" xml:space="preserve">
          <source>If you need documentation for previous versions, see the &lt;a href=&quot;https://docs-archive.chef.io&quot;&gt;Docs Archive&lt;/a&gt;.</source>
          <target state="translated">이전 버전에 대한 문서가 필요한 경우 &lt;a href=&quot;https://docs-archive.chef.io&quot;&gt;문서 자료실을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="91e49ae3647156a9943acea7a7973df0f7beceac" translate="yes" xml:space="preserve">
          <source>If you need more than four heading levels, use bold emphasis and then white space to make the heading text stand out and separate the heading from the content:</source>
          <target state="translated">4 개 이상의 제목 수준이 필요한 경우 굵게 강조한 다음 공백을 사용하여 제목 텍스트를 돋보이게하고 제목과 콘텐츠를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="766cd999dacf0c6b084e1700bb3bfb1f7ba95ebb" translate="yes" xml:space="preserve">
          <source>If you need to build the stage1 tarball from scratch, we will be following the &lt;a href=&quot;http://www.linuxfromscratch.org/lfs/&quot;&gt;Linux from Scratch&lt;/a&gt; guide, specifically from the start to the end of section II.5. (&amp;ldquo;Constructing a Temporary System&amp;rdquo;). By this point, you should be the &lt;code&gt;root&lt;/code&gt; user with a &lt;code&gt;/mnt/lfs/tools&lt;/code&gt; directory containing the cross compiled minimal toolchain. From here, we create a tarball of the &lt;code&gt;tools/&lt;/code&gt; directory and append our Chef Habitat-specific software into it:</source>
          <target state="translated">스테이지 1 타르볼을 처음부터 빌드해야하는 경우 , 특히 섹션 II.5의 시작부터 끝까지 &lt;a href=&quot;http://www.linuxfromscratch.org/lfs/&quot;&gt;Linux from Scratch&lt;/a&gt; 가이드를 따릅니다. ( &quot;임시 시스템 구축&quot;). 이 시점 에서 크로스 컴파일 된 최소 도구 모음이 포함 된 &lt;code&gt;/mnt/lfs/tools&lt;/code&gt; 디렉토리 가있는 &lt;code&gt;root&lt;/code&gt; 사용자 여야합니다 . 여기에서 &lt;code&gt;tools/&lt;/code&gt; 디렉토리 의 tarball을 만들고 Chef Habitat 전용 소프트웨어를 여기에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f842d5db84c5a8a584d76d49944bf2757c5065dd" translate="yes" xml:space="preserve">
          <source>If you need to change the GitHub credentials, follow these steps:</source>
          <target state="translated">GitHub 자격 증명을 변경해야하는 경우 다음 단계를 따르세요.</target>
        </trans-unit>
        <trans-unit id="db105b83d08c957edbfe552b19aafd6b0c6fb66e" translate="yes" xml:space="preserve">
          <source>If you need to change your configured IdP, you will need to replace your existing configuration by following these steps:</source>
          <target state="translated">구성된 IdP를 변경해야하는 경우 다음 단계에 따라 기존 구성을 교체해야합니다.</target>
        </trans-unit>
        <trans-unit id="1c0fa480387f5bd19b02a1c2cfc7d3cca6a53192" translate="yes" xml:space="preserve">
          <source>If you need to change your configured external identity provider settings, replace your existing configuration by following these steps:</source>
          <target state="translated">구성된 외부 ID 공급자 설정을 변경해야하는 경우 다음 단계에 따라 기존 구성을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="33d08488eff0de696814d23e98c3bab27d9fa0ec" translate="yes" xml:space="preserve">
          <source>If you need to escape characters in a distinguished name, such as when using Active Directory, they must be &lt;a href=&quot;https://social.technet.microsoft.com/wiki/contents/articles/5312.active-directory-characters-to-escape.aspx&quot;&gt;escaped with a backslash escape character&lt;/a&gt;.</source>
          <target state="translated">Active Directory를 사용할 때와 같이 고유 이름의 문자를 이스케이프해야하는 경우 &lt;a href=&quot;https://social.technet.microsoft.com/wiki/contents/articles/5312.active-directory-characters-to-escape.aspx&quot;&gt;백 슬래시 이스케이프 문자&lt;/a&gt; 로 이스케이프 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0db63a56fa54aa8495bee4eae1b3e088feee410b" translate="yes" xml:space="preserve">
          <source>If you need to re-enable socket mode for now, you can run chef-client &amp;ndash;local-mode &amp;ndash;listen or set knife[:listen] = true in your .chef/knife.rb or .chef/config.rb.</source>
          <target state="translated">지금 소켓 모드를 다시 활성화해야하는 경우 .chef / knife.rb 또는 .chef / config.rb에서 chef-client &amp;ndash;local-mode &amp;ndash;listen을 실행하거나 knife [: listen] = true를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8cbb164ad98129fa3a5f66010500f357d31c4f9" translate="yes" xml:space="preserve">
          <source>If you need to set up a GitHub account, select the &lt;strong&gt;Sign up here&lt;/strong&gt; link</source>
          <target state="translated">GitHub 계정을 설정해야하는 경우 &lt;strong&gt;여기에서 등록&lt;/strong&gt; 링크를 선택 &lt;strong&gt;하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b9690a36ea75a652200961598d1ffb47ede8691" translate="yes" xml:space="preserve">
          <source>If you need to test the parameters of the target file for a symlink, you can use the &lt;code&gt;link_path&lt;/code&gt; (recursive resolution) or &lt;code&gt;shallow_link_path&lt;/code&gt; (direct link) method for the &lt;code&gt;file&lt;/code&gt; resource.</source>
          <target state="translated">심볼릭 링크에 대한 대상 파일의 매개 변수를 테스트해야하는 경우 &lt;code&gt;file&lt;/code&gt; 리소스에 대해 &lt;code&gt;link_path&lt;/code&gt; (재귀 확인) 또는 &lt;code&gt;shallow_link_path&lt;/code&gt; (직접 링크) 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d889dcfec810259b204b0794b74e49e5dea2584f" translate="yes" xml:space="preserve">
          <source>If you need to troubleshoot any settings, you can verify the value that knife is using with the &lt;code&gt;knife config get KEY&lt;/code&gt; command, for example:</source>
          <target state="translated">설정 문제를 해결해야하는 경우 &lt;code&gt;knife config get KEY&lt;/code&gt; 명령을 사용하여 knife가 사용하는 값을 확인할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8650477d9fad4c36ebf1b9b91f9afc1cec693209" translate="yes" xml:space="preserve">
          <source>If you need to un-associate a channel from a specific package release, you can do so using the &lt;code&gt;hab pkg demote&lt;/code&gt; subcommand. Packages can be demoted from all channels except &lt;code&gt;unstable&lt;/code&gt;.</source>
          <target state="translated">특정 패키지 릴리스에서 채널 연결을 해제해야하는 경우 &lt;code&gt;hab pkg demote&lt;/code&gt; 하위 명령을 사용하여 연결을 해제 할 수 있습니다 . 패키지는 &lt;code&gt;unstable&lt;/code&gt; 제외한 모든 채널에서 강등 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0997165bc2e1b6f9e82116bb0c265cfcf02dc36c" translate="yes" xml:space="preserve">
          <source>If you need to upgrade the version of ChefDK on your runner, you can do so by logging into the runner, upgrading ChefDK, and manually appending the Chef Automate server certificate to the cert file that ships in ChefDK.</source>
          <target state="translated">실행기에서 ChefDK 버전을 업그레이드해야하는 경우 실행기에 로그인하고 ChefDK를 업그레이드 한 다음 ChefDK에서 제공되는 인증서 파일에 Chef Automate 서버 인증서를 수동으로 추가하면됩니다.</target>
        </trans-unit>
        <trans-unit id="b06471eb5ee4918de9931f106d947a85979462b5" translate="yes" xml:space="preserve">
          <source>If you omit this setting or set it to &amp;ldquo;v1&amp;rdquo;, the previous job dispatch system using Push Jobs 1.x will be used instead.</source>
          <target state="translated">이 설정을 생략하거나 &quot;v1&quot;로 설정하면 Push Jobs 1.x를 사용하는 이전 작업 디스패치 시스템이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="180b640d4033974c75740889b2582fb224728050" translate="yes" xml:space="preserve">
          <source>If you only need to start the application or service when the Chef Habitat service starts, you can instead use the &lt;code&gt;pkg_svc_run&lt;/code&gt; setting and specify the command as a string. When your package is created, a basic run hook will be created by Chef Habitat.</source>
          <target state="translated">Chef Habitat 서비스가 시작될 때만 응용 프로그램 또는 서비스를 시작해야하는 경우 대신 &lt;code&gt;pkg_svc_run&lt;/code&gt; 설정을 사용하고 명령을 문자열로 지정할 수 있습니다 . 패키지가 생성되면 Chef Habitat에서 기본 런 훅을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7e0eb05d4c30a9a0e36d706f6f3b430e72124396" translate="yes" xml:space="preserve">
          <source>If you prefer, you can use a package manager to install Chef InSpec. Once you downloaded the latest &lt;a href=&quot;https://downloads.chef.io/inspec&quot;&gt;Chef InSpec package&lt;/a&gt; relevant to your Linux-based platform, use the command for the respective package manager listed below. Replace the example file path with the file path leading to your downloaded package.</source>
          <target state="translated">원하는 경우 패키지 관리자를 사용하여 Chef InSpec을 설치할 수 있습니다. Linux 기반 플랫폼과 관련된 최신 &lt;a href=&quot;https://downloads.chef.io/inspec&quot;&gt;Chef InSpec 패키지&lt;/a&gt; 를 다운로드 한 후 아래 나열된 각 패키지 관리자에 대한 명령을 사용하십시오. 예제 파일 경로를 다운로드 한 패키지로 이어지는 파일 경로로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="01e5564b6327b2ca3a2d3343f12281a1cad58776" translate="yes" xml:space="preserve">
          <source>If you provide a configuration file during deployment (&lt;code&gt;chef-automate deploy /path/to/config.toml&lt;/code&gt;), you must specify any proxy settings in that configuration file.</source>
          <target state="translated">배포 중에 구성 파일을 제공하는 경우 ( &lt;code&gt;chef-automate deploy /path/to/config.toml&lt;/code&gt; ) 해당 구성 파일에서 프록시 설정을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c1e04a8c7279fc0d559aa89d97bd17be2341daa" translate="yes" xml:space="preserve">
          <source>If you really do need to do this, it is easiest to make a local resource with a new name and refer to the core resource directly. Otherwise, you need to ensure that the core resource you want is registered (via &lt;code&gt;require &quot;inspec/resource/&amp;lt;name&amp;gt;&quot;&lt;/code&gt;) &lt;em&gt;before&lt;/em&gt; your profile is run to ensure it is eagerly loaded and in the global resource registry.</source>
          <target state="translated">이 작업이 정말로 필요한 경우 새 이름으로 로컬 리소스를 만들고 핵심 리소스를 직접 참조하는 것이 가장 쉽습니다. 그렇지 않으면, 당신은 당신이 원하는 핵심 자원이 등록되어 있는지 확인해야합니다 (통해 &lt;code&gt;require &quot;inspec/resource/&amp;lt;name&amp;gt;&quot;&lt;/code&gt; ) &lt;em&gt;전에&lt;/em&gt; 프로필이 열심히로드하기 위해 실행하고 글로벌 리소스 레지스트리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="19a7af058bcd2c81afdb9fe4d9205f96c378ff4a" translate="yes" xml:space="preserve">
          <source>If you receive a &lt;code&gt;missing read permission&lt;/code&gt; error when running the &lt;code&gt;knife user list&lt;/code&gt; subcommand after the upgrade process is finished, you will need to update the value for the &lt;code&gt;chef_server_url&lt;/code&gt; setting in the knife.rb file. The default value for that setting is:</source>
          <target state="translated">당신이받는 경우 &lt;code&gt;missing read permission&lt;/code&gt; 실행시 오류가 &lt;code&gt;knife user list&lt;/code&gt; 업그레이드 프로세스가 완료 된 후 하위 명령을, 당신은의 값을 업데이트해야합니다 &lt;code&gt;chef_server_url&lt;/code&gt; 의 knife.rb 파일에 설정합니다. 해당 설정의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d95fa36ba15a6326d37a0f080c1040ad647c0056" translate="yes" xml:space="preserve">
          <source>If you receive an error, try running</source>
          <target state="translated">오류가 발생하면 실행 해보십시오.</target>
        </trans-unit>
        <trans-unit id="a7083083287fa744a29bb33321cc23000faeb608" translate="yes" xml:space="preserve">
          <source>If you rely on &lt;code&gt;knife search&lt;/code&gt;, or setting up a new Chef Infra Server is not possible, upload the upgraded cookbooks to your existing Chef Infra Server. If you do this, be sure to pin your cookbook versions on existing nodes, so that the upgraded cookbook can be manually promoted to desired nodes.</source>
          <target state="translated">&lt;code&gt;knife search&lt;/code&gt; 에 의존 하거나 새 Chef Infra Server를 설정할 수없는 경우 업그레이드 된 쿡북을 기존 Chef Infra Server에 업로드하십시오. 이렇게하면 업그레이드 된 쿡북을 원하는 노드로 수동으로 승격 할 수 있도록 쿡북 버전을 기존 노드에 고정해야합니다.</target>
        </trans-unit>
        <trans-unit id="dda22ee0367b8911a5bd399407bb6ae3754c3126" translate="yes" xml:space="preserve">
          <source>If you rely on the format of a CPU model_name value such as &lt;code&gt;node['cpu'['0']['model_name']&lt;/code&gt; you will need to update your cookbook code to reference &lt;code&gt;node['cpu']['0']['description']&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;node['cpu'['0']['model_name']&lt;/code&gt; 와 같은 CPU model_name 값의 형식에 의존하는 경우 &lt;code&gt;node['cpu']['0']['description']&lt;/code&gt; 를 참조하도록 쿡북 코드를 업데이트해야합니다 . '설명'] 대신.</target>
        </trans-unit>
        <trans-unit id="caaedee0c2d11d4f6e6d0bd7f95e12011205745d" translate="yes" xml:space="preserve">
          <source>If you require a response from Chef per the terms of a support level agreement (SLA), please contact &lt;a href=&quot;https://www.chef.io/support/&quot;&gt;Chef Support&lt;/a&gt; directly.</source>
          <target state="translated">지원 수준 계약 (SLA) 조건에 따라 Chef의 응답이 필요한 경우 &lt;a href=&quot;https://www.chef.io/support/&quot;&gt;Chef 지원에&lt;/a&gt; 직접 문의하십시오 .</target>
        </trans-unit>
        <trans-unit id="36d98120f52f0de8ce0b8f5e78005c18882bdef9" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;chef-run host1 my_cookbook&lt;/code&gt; and the current directory does not have a cookbook named &lt;code&gt;my_cookbook&lt;/code&gt;, then &lt;code&gt;chef-run&lt;/code&gt; searches the configured paths, with those configured in &lt;code&gt;~/.chef-workstation/config.toml&lt;/code&gt; taking priority over those in &lt;code&gt;~/.chef/config.rb&lt;/code&gt;.</source>
          <target state="translated">당신이 실행하면 &lt;code&gt;chef-run host1 my_cookbook&lt;/code&gt; 현재 디렉토리 요리 책 이름이없는 &lt;code&gt;my_cookbook&lt;/code&gt; 을 다음 &lt;code&gt;chef-run&lt;/code&gt; 검색에 구성된 것과 구성된 경로 &lt;code&gt;~/.chef-workstation/config.toml&lt;/code&gt; 에서 그 우선 순위를 복용 &lt;code&gt;~/.chef/config.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4acf43803623d18d7d84ee8d8ad27ad896a0587" translate="yes" xml:space="preserve">
          <source>If you run this test on your local system and happen to be using Bob&amp;rsquo;s account it will succeed. But if you were to run it against &lt;code&gt;--target alice@remote-host.com&lt;/code&gt; it will still report that the user is bob instead of alice.</source>
          <target state="translated">로컬 시스템에서이 테스트를 실행하고 Bob의 계정을 사용하면 성공할 것입니다. 그러나 &lt;code&gt;--target alice@remote-host.com&lt;/code&gt; 에 대해 실행 하는 경우 사용자가 alice 대신 bob이라고보고합니다.</target>
        </trans-unit>
        <trans-unit id="7e849d8aa3b918279ca079f64cc6bec4e98a04cf" translate="yes" xml:space="preserve">
          <source>If you see this error when trying to recreate the ORGANIZATION-validator.pem, it&amp;rsquo;s possible that Chef Infra Client itself was deleted. In this situation, the ORGANIZATION-validator.pem will need to be recreated. In these directions, &lt;code&gt;ORGANIZATION&lt;/code&gt; should be replaced with the name of your organization.</source>
          <target state="translated">ORGANIZATION-validator.pem을 다시 만들려고 할 때이 오류가 표시되면 Chef Infra Client 자체가 삭제되었을 수 있습니다. 이 상황에서 ORGANIZATION-validator.pem을 다시 만들어야합니다. 이러한 지침에서 &lt;code&gt;ORGANIZATION&lt;/code&gt; 은 조직 의 이름으로 대체되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ff0566c2ccc4c105b7a05ab86f449eb18a0261dc" translate="yes" xml:space="preserve">
          <source>If you select &lt;strong&gt;Internal&lt;/strong&gt;, options for &lt;strong&gt;Name and Email&lt;/strong&gt;, first name, last name, email address, and &lt;strong&gt;Security Information&lt;/strong&gt;, a login name and password, appear.</source>
          <target state="translated">&lt;strong&gt;내부&lt;/strong&gt; 를 선택하면 &lt;strong&gt;이름 및 이메일&lt;/strong&gt; 옵션 , 이름, 성, 이메일 주소 및 &lt;strong&gt;보안 정보&lt;/strong&gt; , 로그인 이름 및 비밀번호가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="47a202dcc3568727cc0939bc542fc562a14b4ac9" translate="yes" xml:space="preserve">
          <source>If you select &lt;strong&gt;LDAP&lt;/strong&gt;, the &lt;strong&gt;Name and Email&lt;/strong&gt; options go away and a &lt;strong&gt;Security Information&lt;/strong&gt; option for the user&amp;rsquo;s LDAP username and SSH public key appears.</source>
          <target state="translated">&lt;strong&gt;LDAP&lt;/strong&gt; 를 선택 하면 &lt;strong&gt;이름 및 이메일&lt;/strong&gt; 옵션이 사라지고 사용자의 LDAP 사용자 이름 및 SSH 공개 키에 대한 &lt;strong&gt;보안 정보&lt;/strong&gt; 옵션이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="66ef7fbc5ee7f84938a1154d10a36a6afbf0f783" translate="yes" xml:space="preserve">
          <source>If you select &lt;strong&gt;LDAP&lt;/strong&gt;, the &lt;strong&gt;Name and Email&lt;/strong&gt; options go away and a &lt;strong&gt;Security Information&lt;/strong&gt; option for the user&amp;rsquo;s LDAP username appears.</source>
          <target state="translated">&lt;strong&gt;LDAP&lt;/strong&gt; 를 선택 하면 &lt;strong&gt;이름 및 이메일&lt;/strong&gt; 옵션이 사라지고 사용자의 LDAP 사용자 이름에 대한 &lt;strong&gt;보안 정보&lt;/strong&gt; 옵션이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="8ede3076c02f72225455fc065fab399506a92dc5" translate="yes" xml:space="preserve">
          <source>If you specify the path to the cookbook &lt;code&gt;chef-run&lt;/code&gt; will execute the default recipe from the cookbook on the target node.</source>
          <target state="translated">쿡북 경로를 지정하면 &lt;code&gt;chef-run&lt;/code&gt; 은 대상 노드의 쿡북에서 기본 레시피를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="51abb6d1dc2eb0754fa119c3527dd30c5689444c" translate="yes" xml:space="preserve">
          <source>If you started on IAM v1 and migrated your IAM v1 policies to IAM v2, then you should move any members of your IAM v1 legacy policies to the appropriate IAM v2 policies, and afterwards, delete the IAM v1 legacy policies.</source>
          <target state="translated">IAM v1에서 시작하고 IAM v1 정책을 IAM v2로 마이그레이션 한 경우 IAM v1 레거시 정책의 구성원을 적절한 IAM v2 정책으로 이동 한 후 IAM v1 레거시 정책을 삭제해야합니다.</target>
        </trans-unit>
        <trans-unit id="fc5e75ec61217cfe1af6b170fb3c92d838f83927" translate="yes" xml:space="preserve">
          <source>If you supply the &lt;code&gt;--purge&lt;/code&gt; option, the server will also be removed from the Chef Infra Server</source>
          <target state="translated">당신이 제공하는 경우 &lt;code&gt;--purge&lt;/code&gt; 옵션을, 서버는 요리사 인프라 서버에서도 삭제됩니다</target>
        </trans-unit>
        <trans-unit id="3b51d7abb72408ba785baf514a3d4bbe65e26aba" translate="yes" xml:space="preserve">
          <source>If you upload a new version of this tarball for broader use with the Studio software, it is worth updating the source location in the Studio&amp;rsquo;s &lt;a href=&quot;https://github.com/habitat-sh/habitat/blob/master/components/studio/libexec/hab-studio-type-stage1.sh&quot;&gt;hab-studio-type-stage1.sh&lt;/a&gt; code (the line with &lt;code&gt;${STAGE1_TOOLS_URL}&lt;/code&gt;). Note that simply to use or test a new tarball with Studio, you should only need to set the following before using &lt;code&gt;hab studio&lt;/code&gt; commands:</source>
          <target state="translated">Studio 소프트웨어에서 더 광범위하게 사용하기 위해이 tarball의 새 버전을 업로드하는 경우 Studio의 &lt;a href=&quot;https://github.com/habitat-sh/habitat/blob/master/components/studio/libexec/hab-studio-type-stage1.sh&quot;&gt;hab-studio-type-stage1.sh&lt;/a&gt; 코드 ( &lt;code&gt;${STAGE1_TOOLS_URL}&lt;/code&gt; 줄) 에서 소스 위치를 업데이트하는 것이 좋습니다 . 단순히 Studio에서 새 tarball을 사용하거나 테스트하려면 &lt;code&gt;hab studio&lt;/code&gt; 명령을 사용하기 전에 다음을 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3d3af144797eaf2aa902c1e2dba59fe3e768fbef" translate="yes" xml:space="preserve">
          <source>If you use Chef Infra or Chef InSpec to manage your operating system configs, you should look at using Effortless. Effortless uses the power of Chef Habitat to help with you with Chef Infra and Chef InSpec dependency management. Chef Habitat pulls in the cookbooks and profiles that your cookbook and/or Chef InSpec profiles depend upon and packages them as a signed artifact. By packaging the latest and best practices for running Chef Infra and Chef InSpec on your systems, you do not have to worry about setting up the Chef Infra Client or the Chef InSpec client to run on your system.</source>
          <target state="translated">Chef Infra 또는 Chef InSpec을 사용하여 운영 체제 구성을 관리하는 경우 Effortless 사용을 살펴 봐야합니다. Effortless는 Chef Habitat의 강력한 기능을 사용하여 Chef Infra 및 Chef InSpec 종속성 관리를 지원합니다. Chef Habitat은 쿡북 및 / 또는 Chef InSpec 프로필이 의존하는 쿡북 및 프로필을 가져 와서 서명 된 아티팩트로 패키지화합니다. 시스템에서 Chef Infra 및 Chef InSpec을 실행하기위한 최신 및 모범 사례를 패키징하면 시스템에서 실행할 Chef Infra 클라이언트 또는 Chef InSpec 클라이언트 설정에 대해 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e2e224ba9a145151bea5b73de21aa3ee7bd8cf09" translate="yes" xml:space="preserve">
          <source>If you use Chef Infra to deploy complex applications, you may not want to use the Effortless pattern.</source>
          <target state="translated">Chef Infra를 사용하여 복잡한 애플리케이션을 배포하는 경우 Effortless 패턴을 사용하고 싶지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ff571ea7e8a958da3292ba84c69db20bb1ed1c9" translate="yes" xml:space="preserve">
          <source>If you use a proxy to manage outbound HTTP(S) connections, ensure these variables are set when running the migration.</source>
          <target state="translated">프록시를 사용하여 아웃 바운드 HTTP (S) 연결을 관리하는 경우 마이그레이션을 실행할 때 이러한 변수가 설정되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="302984ae4aede0ec3f58b8620532b7c4ab95c86f" translate="yes" xml:space="preserve">
          <source>If you use a target URI and the portion after the &lt;code&gt;://&lt;/code&gt; cannot be matched to credential set name, Chef InSpec will send the URI to Train to be parsed as a Train URI. Thus, you can still do &lt;code&gt;ssh://someuser@myhost.com&lt;/code&gt;.</source>
          <target state="translated">대상 URI를 사용하고 &lt;code&gt;://&lt;/code&gt; 뒤의 부분 을 자격 증명 집합 이름과 일치시킬 수없는 경우 Chef InSpec은 Train URI로 구문 분석 될 URI를 Train에 전송합니다. 따라서 여전히 &lt;code&gt;ssh://someuser@myhost.com&lt;/code&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="48196cfd244f31e4104db689e5b9234b17c62292" translate="yes" xml:space="preserve">
          <source>If you use dedicated disks or partitions for either of these applications in Chef Automate 1, you must modify your disk mount configuration to make these disks/partitions available to Chef Automate 2.</source>
          <target state="translated">Chef Automate 1에서 이러한 애플리케이션 중 하나에 전용 디스크 또는 파티션을 사용하는 경우 이러한 디스크 / 파티션을 Chef Automate 2에서 사용할 수 있도록 디스크 마운트 구성을 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="218e8a402c26f526585c1a7fb76a1b4bded4b58d" translate="yes" xml:space="preserve">
          <source>If you use environments, upload them to the new server:</source>
          <target state="translated">환경을 사용하는 경우 새 서버에 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="6b20d56476ca76dd5b2b824c7e1a05c60ce656a1" translate="yes" xml:space="preserve">
          <source>If you use node search, upload the node data to the new server:</source>
          <target state="translated">노드 검색을 사용하는 경우 노드 데이터를 새 서버에 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="15fb3a4e510f2448e21ed5ab70f05a31d35d6dcf" translate="yes" xml:space="preserve">
          <source>If you use roles, upload them to the new server:</source>
          <target state="translated">역할을 사용하는 경우 새 서버에 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="556b20519763fb062ea9c9c5cb9d7ab2e61d870d" translate="yes" xml:space="preserve">
          <source>If you use the API interface without the CLI, instances of this resource will behave as if the sought-after package was not found.</source>
          <target state="translated">CLI없이 API 인터페이스를 사용하는 경우이 리소스의 인스턴스는 원하는 패키지를 찾을 수없는 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f9908940cd8fc8d863006444858ef7e76891dfcb" translate="yes" xml:space="preserve">
          <source>If you use the CLI interface without the API, unavailable properties will behave as if the resource was not found (see below).</source>
          <target state="translated">API없이 CLI 인터페이스를 사용하는 경우 사용할 수없는 속성은 리소스를 찾을 수없는 것처럼 작동합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="6c07d42f0a80f3459d09407e70007656eaa8d5d8" translate="yes" xml:space="preserve">
          <source>If you use the CLI interface without the API, unavailable properties will return empty arrays or &lt;code&gt;nil&lt;/code&gt;, and unavailable filter criteria will never match. See each property and filter criteria for details.</source>
          <target state="translated">API없이 CLI 인터페이스를 사용하는 경우 사용할 수없는 속성은 빈 배열 또는 &lt;code&gt;nil&lt;/code&gt; 을 반환 하고 사용할 수없는 필터 기준은 일치하지 않습니다. 자세한 내용은 각 속성 및 필터 기준을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e8c3fe0fe307bfd62db9989d735b3e27725ed2ec" translate="yes" xml:space="preserve">
          <source>If you use this resource without the CLI, this resource will always return zero matches.</source>
          <target state="translated">CLI없이이 리소스를 사용하는 경우이 리소스는 항상 0 개 일치 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eeb6e53f78066e6dc8e825e74ba32eb50191ac91" translate="yes" xml:space="preserve">
          <source>If you use vRO this provides the majority of the necessary features</source>
          <target state="translated">vRO를 사용하는 경우 필요한 기능의 대부분을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="aab7eda2f091c00a30ffafd3c272f3f90edd6603" translate="yes" xml:space="preserve">
          <source>If you used data bags, upload them to the new server:</source>
          <target state="translated">데이터 백을 사용한 경우 새 서버에 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="a1adc3098d83096addb686c159df787fbb35f9b7" translate="yes" xml:space="preserve">
          <source>If you want to auto-populate more of the &lt;code&gt;pkg_*&lt;/code&gt; variables, you also have the option of setting them when calling &lt;code&gt;hab plan init&lt;/code&gt;, as shown in the following example:</source>
          <target state="translated">더 많은 &lt;code&gt;pkg_*&lt;/code&gt; 변수 를 자동으로 채우 려면 다음 예제와 같이 &lt;code&gt;hab plan init&lt;/code&gt; 를 호출 할 때 변수를 설정하는 옵션도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e7208642ef278d8748e2ecc795d91bd1ab51486" translate="yes" xml:space="preserve">
          <source>If you want to override phases of a scaffold&amp;rsquo;s build in your plans, make sure to override the main &lt;code&gt;do_xxx&lt;/code&gt; phase, not the callback directly. ex override &lt;code&gt;do_install()&lt;/code&gt; instead of &lt;code&gt;do_default_install&lt;/code&gt; or &lt;code&gt;do_node_install&lt;/code&gt;.</source>
          <target state="translated">계획에서 스캐 폴드 빌드의 단계를 재정의 하려면 콜백이 아닌 기본 &lt;code&gt;do_xxx&lt;/code&gt; 단계 를 재정의해야합니다 . ex 는 &lt;code&gt;do_default_install&lt;/code&gt; 또는 &lt;code&gt;do_node_install&lt;/code&gt; 대신 &lt;code&gt;do_install()&lt;/code&gt; 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="405b7077f71a062445f1f0e185c119d38d1b3184" translate="yes" xml:space="preserve">
          <source>If you want to see all of the information about resources in a single document, see: &lt;a href=&quot;https://docs.chef.io/resources.html&quot;&gt;https://docs.chef.io/resources.html&lt;/a&gt;. Keep reading this page for topics about individual resources.</source>
          <target state="translated">단일 문서에서 자원에 대한 모든 정보를 보려면 &lt;a href=&quot;https://docs.chef.io/resources.html&quot;&gt;https://docs.chef.io/resources.html을&lt;/a&gt; 참조 하십시오 . 개별 자원에 대한 주제는이 페이지를 계속 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="b0942457a2d4576ad532de1f74edac0494931470" translate="yes" xml:space="preserve">
          <source>If you want to setup a policy that override attributes should never be used:</source>
          <target state="translated">속성을 재정의하는 정책을 설정하려면 절대 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="f296de78650780ef13124f2f652b0640349ac64f" translate="yes" xml:space="preserve">
          <source>If you wish to access Elasticsearch via your Chef Automate server via a CLI tool (such as &lt;code&gt;curl&lt;/code&gt;) or an API client (such as &lt;a href=&quot;https://github.com/elastic/elasticsearch-ruby&quot;&gt;elasticsearch-ruby&lt;/a&gt;), you must pass three additional HTTP headers in your requests for your request to be properly authenticated:</source>
          <target state="translated">CLI 도구 (예 : &lt;code&gt;curl&lt;/code&gt; ) 또는 API 클라이언트 (예 : &lt;a href=&quot;https://github.com/elastic/elasticsearch-ruby&quot;&gt;elasticsearch-ruby&lt;/a&gt; ) 를 통해 Chef Automate 서버를 통해 Elasticsearch에 액세스 하려면 요청이 제대로 인증되도록 요청에 3 개의 추가 HTTP 헤더를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="a0e8818a8e47277386817bd22810692a07d456a5" translate="yes" xml:space="preserve">
          <source>If you wish to configure a specific endpoint, you can specify the &lt;code&gt;job_settings&lt;/code&gt; for that data type and configure it using data types sub-resource. For example, if you want to configure compliance settings, create a smaller JSON payload:</source>
          <target state="translated">특정 엔드 포인트를 구성하려는 경우 해당 데이터 유형에 대한 &lt;code&gt;job_settings&lt;/code&gt; 를 지정하고 데이터 유형 하위 리소스를 사용하여 구성 할 수 있습니다. 예를 들어 규정 준수 설정을 구성하려면 더 작은 JSON 페이로드를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a2603ca5f1ac4b0806da9c9771b286c10710cb69" translate="yes" xml:space="preserve">
          <source>If you wish to connect to a remote machine (called a target within InSpec), you can use the &lt;code&gt;-t&lt;/code&gt; flag. We support connecting using SSH, WinRM and docker. If no target is provided, we implicitly support the &amp;ldquo;local&amp;rdquo; target - i.e. tests running on the current machine running InSpec. For an SSH connection, use &lt;code&gt;-i&lt;/code&gt; for specifying SSH key files, and the &lt;code&gt;--sudo*&lt;/code&gt; commands for requesting a privilege escalation after logging in. For a WinRM connection, use &lt;code&gt;--path&lt;/code&gt; to change the login path, &lt;code&gt;--ssl&lt;/code&gt; to use SSL for transport layer encryption.</source>
          <target state="translated">원격 시스템 (InSpec 내에서 대상이라고 함)에 연결하려는 경우 &lt;code&gt;-t&lt;/code&gt; 플래그를 사용할 수 있습니다 . SSH, WinRM 및 Docker를 사용한 연결을 지원합니다. 대상이 제공되지 않으면 &quot;로컬&quot;대상을 암시 적으로 지원합니다. 즉, InSpec을 실행하는 현재 컴퓨터에서 실행되는 테스트입니다. SSH 연결의 경우 &lt;code&gt;-i&lt;/code&gt; 를 사용 하여 SSH 키 파일을 지정하고 &lt;code&gt;--sudo*&lt;/code&gt; 명령을 사용 하여 로그인 후 권한 에스컬레이션을 요청합니다. WinRM 연결의 경우 &lt;code&gt;--path&lt;/code&gt; 를 사용하여 로그인 경로를 변경하고 &lt;code&gt;--ssl&lt;/code&gt; 을 사용하여 전송 계층 암호화를위한 SSL.</target>
        </trans-unit>
        <trans-unit id="466db2ab15705e469f888afa783512c8218b9fbc" translate="yes" xml:space="preserve">
          <source>If you wish to disable authentication for either Kibana or Elasticsearch, you may use the following configuration parameters in your &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; configuration file:</source>
          <target state="translated">Kibana 또는 Elasticsearch에 대한 인증을 비활성화하려면 &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; 구성 파일 에서 다음 구성 매개 변수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb5f14e72e753d1ac32ccea3f2cf3b3e367e49b3" translate="yes" xml:space="preserve">
          <source>If you wish to export a package that is not on Builder, create a Chef Habitat artifact by running the &lt;code&gt;build&lt;/code&gt; command, then point &lt;code&gt;hab pkg&lt;/code&gt; to the &lt;code&gt;.hart&lt;/code&gt; file within the &lt;code&gt;/results&lt;/code&gt; directory:</source>
          <target state="translated">Builder에없는 패키지를 내보내려면 &lt;code&gt;build&lt;/code&gt; 명령 을 실행하여 Chef Habitat 아티팩트를 생성 한 다음 &lt;code&gt;hab pkg&lt;/code&gt; 가 &lt;code&gt;/results&lt;/code&gt; 디렉토리 내의 &lt;code&gt;.hart&lt;/code&gt; 파일 을 가리 키 도록합니다 .</target>
        </trans-unit>
        <trans-unit id="b3f61b6d955ca51c7d232107049e75c3a9ee5817" translate="yes" xml:space="preserve">
          <source>If you wish to operate your Chef Automate server from behind a proxy, you may specify you proxy host name and configuration using these options.</source>
          <target state="translated">프록시 뒤에서 Chef Automate 서버를 작동하려면 이러한 옵션을 사용하여 프록시 호스트 이름과 구성을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce34b4e4437b7fde4231fe7aa18b1c007b221c2e" translate="yes" xml:space="preserve">
          <source>If you wish to pass the profiles directly after specifying the reporters you will need to use the end of options flag &lt;code&gt;--&lt;/code&gt;.</source>
          <target state="translated">리포터를 지정한 후 직접 프로필을 전달하려면 end of options 플래그 &lt;code&gt;--&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6e393bdf6bebca6f5a1933b894d8a19259d94c40" translate="yes" xml:space="preserve">
          <source>If you wish to run a single Chef InSpec command and fetch its results, you may use the &lt;code&gt;-c&lt;/code&gt; flag. This is similar to using &lt;code&gt;bash -c&lt;/code&gt;.</source>
          <target state="translated">단일 Chef InSpec 명령을 실행하고 그 결과를 가져 오려면 &lt;code&gt;-c&lt;/code&gt; 플래그를 사용할 수 있습니다 . 이것은 &lt;code&gt;bash -c&lt;/code&gt; 를 사용하는 것과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="9c3aa46950a9ebd5bc4f30159b665d7d68ae05e1" translate="yes" xml:space="preserve">
          <source>If you wish to run this tar file on a remote machine (i.e. a virtual machine in a cloud environment), scp (or whatever transfer protocol you prefer) the file to whatever you wish to run it.</source>
          <target state="translated">이 tar 파일을 원격 머신 (예 : 클라우드 환경의 가상 머신)에서 실행하려면 scp (또는 선호하는 전송 프로토콜)를 실행하려는 파일로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b8a243145a02092e24805d8a3754def02d2795b6" translate="yes" xml:space="preserve">
          <source>If you wish to target a pipeline that is NOT the defined default, add the &lt;code&gt;--pipeline=$BRANCH_NAME&lt;/code&gt; flag to the delivery-cli command.</source>
          <target state="translated">정의 된 기본값이 아닌 파이프 라인을 대상 으로 지정하려면 delivery-cli 명령에 &lt;code&gt;--pipeline=$BRANCH_NAME&lt;/code&gt; 플래그를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="825a9f00f976534b122567d9816266270735ac2b" translate="yes" xml:space="preserve">
          <source>If you wish to use Chef Automate&amp;rsquo;s built-in S3 backup support, or if you want to bring your own license, complete the following steps:</source>
          <target state="translated">Chef Automate의 내장 S3 백업 지원을 사용하거나 자체 라이선스를 가져 오려면 다음 단계를 완료하십시오.</target>
        </trans-unit>
        <trans-unit id="e61914983bc067ecced9ad6f84d73d288a6d4558" translate="yes" xml:space="preserve">
          <source>If you wish to use IAM authentication to provide your Elasticsearch nodes access to the S3 bucket, you must apply the appropriate IAM policy to each host system in the cluster.</source>
          <target state="translated">IAM 인증을 사용하여 Elasticsearch 노드에 S3 버킷에 대한 액세스 권한을 제공하려면 클러스터의 각 호스트 시스템에 적절한 IAM 정책을 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0ea524ca49050adb80aa495a29299a11fdce5a1f" translate="yes" xml:space="preserve">
          <source>If you wish to use a default filter for the entire project, you need to set the &amp;ldquo;default&amp;rdquo; tag. For example, if you wanted your project phase jobs to be executed on only ubuntu and centos platforms, you could write:</source>
          <target state="translated">전체 프로젝트에 기본 필터를 사용하려면 &quot;default&quot;태그를 설정해야합니다. 예를 들어 프로젝트 단계 작업이 우분투 및 centos 플랫폼에서만 실행되도록하려면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1563c552cbfbe9653fc75278a23601c9e4512fb4" translate="yes" xml:space="preserve">
          <source>If you would like additional details, the following technical journal articles describe the algorithms that form the basis of Chef Habitat&amp;rsquo;s gossip system:</source>
          <target state="translated">추가 세부 정보가 필요한 경우 다음 기술 저널 기사에서 Chef Habitat의 가십 시스템의 기초를 형성하는 알고리즘에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="11bd8a06b0a8e76e44e1cfa557d85167df3dc221" translate="yes" xml:space="preserve">
          <source>If you would like to delegate ownership of a project to another user so that they may assign resources, you will want to make that user a &lt;a href=&quot;index#project-owners&quot;&gt;Project Owner&lt;/a&gt; of that project.</source>
          <target state="translated">리소스를 할당 할 수 있도록 프로젝트의 소유권을 다른 사용자에게 위임하려는 경우 해당 사용자 를 해당 프로젝트 의 &lt;a href=&quot;index#project-owners&quot;&gt;프로젝트 소유자&lt;/a&gt; 로 지정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ba6b4ca9d43f006f01c4c6438c4c296f74d80f41" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in getting hands-on experience, go to &lt;a href=&quot;https://learn.chef.io/&quot;&gt;https://learn.chef.io/&lt;/a&gt; for tutorials, information about formal training classes and community resources.</source>
          <target state="translated">실습 경험을 얻으려면 &lt;a href=&quot;https://learn.chef.io/&quot;&gt;https://learn.chef.io/&lt;/a&gt; 에서 자습서, 공식 교육 수업에 대한 정보 및 커뮤니티 리소스를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5b0d17a6ceedbb611c24eac1721b20be231031cb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re receiving an error like the following it most likely means you&amp;rsquo;ll need to regenerate the ORGANIZATION-validator.pem file:</source>
          <target state="translated">다음과 같은 오류가 발생하는 경우 ORGANIZATION-validator.pem 파일을 다시 생성해야 할 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="687d3b8ff4cdc7a09b0ea386d88c9a94f3bc538b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re running this command on Windows in Git Bash with MinTTY you must include &lt;code&gt;winpty&lt;/code&gt; before &lt;code&gt;delivery token&lt;/code&gt; to avoid errors.</source>
          <target state="translated">당신이 MinTTY 함께 힘내 배쉬에서 Windows에서이 명령을 실행하는 경우에는 포함해야 &lt;code&gt;winpty&lt;/code&gt; 을 하기 전에 &lt;code&gt;delivery token&lt;/code&gt; 을 피 오류로.</target>
        </trans-unit>
        <trans-unit id="0eab1655c19a01c463a1c025c15242827bd227bb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re seeing an error like:</source>
          <target state="translated">다음과 같은 오류가 표시되는 경우 :</target>
        </trans-unit>
        <trans-unit id="4dfedef294b76854ae4e7fad9fc5f00c54d042ff" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re seeing output like this:</source>
          <target state="translated">다음과 같은 출력이 표시되는 경우 :</target>
        </trans-unit>
        <trans-unit id="659effc70fa7a7ab539337fe839d9afac1d80fd0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re staunchly in the anti-curl-bash camp, you can get the latest packages from the &lt;a href=&quot;../install_habitat/index&quot;&gt;download links&lt;/a&gt; listed previously.</source>
          <target state="translated">anti-curl-bash 캠프에 충실하다면 이전에 나열된 &lt;a href=&quot;../install_habitat/index&quot;&gt;다운로드 링크&lt;/a&gt; 에서 최신 패키지를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="040c7da4fc93df71bfaccd1bc7f5bf0a8abb5810" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Berkshelf, update your &lt;code&gt;Berksfile&lt;/code&gt; to replace &lt;code&gt;https://supermarket.chef.io&lt;/code&gt; with the URL of your private Supermarket:</source>
          <target state="translated">당신이 Berkshelf를 사용하는 경우, 귀하의 업데이트 &lt;code&gt;Berksfile&lt;/code&gt; 를 대체 할 &lt;code&gt;https://supermarket.chef.io&lt;/code&gt; 을 개인 슈퍼마켓의 URL :</target>
        </trans-unit>
        <trans-unit id="b92d54547fde3e4fcea4829e9fc9d714b8daced7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using Hosted Chef as your regular Chef Infra Server, skip to the second step.</source>
          <target state="translated">Hosted Chef를 일반 Chef Infra Server로 사용하는 경우 두 번째 단계로 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="c333a4d37a7ca29c80d0825600d9537229679703" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using your own license, create and copy a pre-signed link with the AWS command line tools and save it. For example:</source>
          <target state="translated">자체 라이선스를 사용하는 경우 AWS 명령 줄 도구를 사용하여 사전 서명 된 링크를 생성 및 복사하고 저장합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="397820781a5115cb42dceb392f687983375fe6f1" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;chef_server_url&lt;/code&gt; configuration ends with &lt;code&gt;/organizations/ORG_NAME&lt;/code&gt; (as shown above), this setting will default to &lt;code&gt;https://chef.yourdomain.com/&lt;/code&gt;.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;chef_server_url&lt;/code&gt; 의 로 구성 종료 &lt;code&gt;/organizations/ORG_NAME&lt;/code&gt; (위 그림 참조)가이 설정을 기본값으로 &lt;code&gt;https://chef.yourdomain.com/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f00159cc26a128cd4cb5d17116ad95eaa2c13aae" translate="yes" xml:space="preserve">
          <source>If your Chef Infra Server uses data bags, you will need to download the &lt;code&gt;data_bags&lt;/code&gt; directory into your chef repo with the &lt;code&gt;chef exec knife download data_bags&lt;/code&gt; command. This command does not support embedded keys in credentials files. If you use embedded keys, move the key to a key file.</source>
          <target state="translated">Chef Infra Server가 데이터 백을 사용 하는 경우 &lt;code&gt;chef exec knife download data_bags&lt;/code&gt; 명령을 사용 하여 &lt;code&gt;data_bags&lt;/code&gt; 디렉토리를 chef 리포지토리 에 다운로드해야합니다 . 이 명령은 자격 증명 파일에 포함 된 키를 지원하지 않습니다. 포함 된 키를 사용하는 경우 키를 키 파일로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="1abf2cb6fa4e44fb04d727736f69f5a7cb395614" translate="yes" xml:space="preserve">
          <source>If your LDAP server supports &lt;em&gt;anonymous bind&lt;/em&gt;, and you want to use that, unset both bind DN and password:</source>
          <target state="translated">LDAP 서버가 &lt;em&gt;익명 바인드를&lt;/em&gt; 지원 하고이를 사용하려는 경우 바인드 DN과 비밀번호를 모두 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="cd39882ec187362dc7b071073039730553f3d1b4" translate="yes" xml:space="preserve">
          <source>If your directory looks like this</source>
          <target state="translated">디렉토리가 다음과 같은 경우</target>
        </trans-unit>
        <trans-unit id="cb3d43c136f336826de20a763ae4b0b9154f75c1" translate="yes" xml:space="preserve">
          <source>If your host is airgapped, run the command:</source>
          <target state="translated">호스트가 airgapp 된 경우 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="9ce5964502a8c84fd4a954b8ba09267fcb45c9e4" translate="yes" xml:space="preserve">
          <source>If your host machine is running Linux, do the following to run your packages for one-off evaluations (not production uses!):</source>
          <target state="translated">호스트 컴퓨터가 Linux를 실행중인 경우 다음을 수행하여 일회성 평가를 위해 패키지를 실행합니다 (프로덕션 사용이 아님).</target>
        </trans-unit>
        <trans-unit id="310e798080bd810f643b15d522476fb8a5754619" translate="yes" xml:space="preserve">
          <source>If your organization does not have a cookbook pipeline in place, or if you are setting up a proof of concept, you can directly upload the cookbooks to the new server. We do not recommend this because it makes it difficult to manage changes to cookbook code. This command does not support embedded keys in credentials files, so you must place the key in a key file.</source>
          <target state="translated">조직에 쿡북 파이프 라인이 없거나 개념 증명을 설정하는 경우 쿡북을 새 서버에 직접 업로드 할 수 있습니다. 요리 책 코드의 변경 사항을 관리하기 어렵 기 때문에 권장하지 않습니다. 이 명령은 자격 증명 파일에 포함 된 키를 지원하지 않으므로 키 파일에 키를 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="192a8f5dbe57858e5c9d99b2bf39d5fa37c6cec2" translate="yes" xml:space="preserve">
          <source>If your organization has provided custom SSL certificates to the Chef Infra Server, the locations of that custom certificate and private key are defined in &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; as values for the &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; and &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; settings. Delete the files referenced in those two settings and regenerate new keys using the same authority.</source>
          <target state="translated">조직에서 Chef Infra Server에 사용자 지정 SSL 인증서를 제공 한 경우 해당 사용자 지정 인증서 및 개인 키의 위치는 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; 에 &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; 값으로 정의됩니다. ssl_certificate_key '] 설정. 이 두 설정에서 참조 된 파일을 삭제하고 동일한 권한을 사용하여 새 키를 다시 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="2030762608f27b7f54ad07e5d3c6d542c0700def" translate="yes" xml:space="preserve">
          <source>If your organization has provided custom SSL certificates to the Chef server, the locations of that custom certificate and private key are defined in &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; as values for the &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; and &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; settings. Delete the files referenced in those two settings and regenerate new keys using the same authority.</source>
          <target state="translated">조직에서 Chef 서버에 사용자 정의 SSL 인증서를 제공 한 경우 해당 사용자 정의 인증서 및 개인 키의 위치는 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; 에 &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; 값으로 정의됩니다. '] 설정. 이 두 설정에서 참조 된 파일을 삭제하고 동일한 권한을 사용하여 새 키를 재생성하십시오.</target>
        </trans-unit>
        <trans-unit id="3fd08286c08915d2c83a5384922f35b6b4ded675" translate="yes" xml:space="preserve">
          <source>If your package does not download any application or service source files, then you will need to override the &lt;strong&gt;do_download()&lt;/strong&gt;, &lt;strong&gt;do_verify()&lt;/strong&gt;, and &lt;strong&gt;do_unpack()&lt;/strong&gt; callbacks. See &lt;a href=&quot;../build_phase_callbacks/index&quot;&gt;Callbacks&lt;/a&gt; for more details.</source>
          <target state="translated">패키지가 애플리케이션 또는 서비스 소스 파일을 다운로드하지 않는 경우 &lt;strong&gt;do_download ()&lt;/strong&gt; , &lt;strong&gt;do_verify ()&lt;/strong&gt; 및 &lt;strong&gt;do_unpack ()&lt;/strong&gt; 콜백 을 재정의해야합니다 . 자세한 내용은 &lt;a href=&quot;../build_phase_callbacks/index&quot;&gt;콜백&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a38e69150c4f3790b04df25624d618bbdf19bbbd" translate="yes" xml:space="preserve">
          <source>If your package has a custom license, use a string literal matching the title of the license. For example, you&amp;rsquo;ll see &lt;code&gt;pkg_license=('Boost Software License')&lt;/code&gt; for the &lt;code&gt;cmake&lt;/code&gt; plan.</source>
          <target state="translated">패키지에 사용자 지정 라이선스가있는 경우 라이선스 제목과 일치하는 문자열 리터럴을 사용합니다. 예를 들어 &lt;code&gt;cmake&lt;/code&gt; 계획의 경우 &lt;code&gt;pkg_license=('Boost Software License')&lt;/code&gt; 가 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="00ec334e8188e9b404c81eb78766d0f56a1e6647" translate="yes" xml:space="preserve">
          <source>If your packages don&amp;rsquo;t require communication with the Chef Habitat Supervisor ring, such as binds, secrets, etc., then you can execute your packages directly on the cluster. You can deploy Chef Habitat packages exported as containers to Kubernetes with the &lt;a href=&quot;http://kubernetes.io/docs/user-guide/pods/single-container/&quot;&gt;&lt;code&gt;kubectl&lt;/code&gt; command&lt;/a&gt;. Using the &lt;a href=&quot;../pkg_exports/index#exporting-to-docker&quot;&gt;Docker exporter&lt;/a&gt; to create a containerized application, you can launch the container like this example:</source>
          <target state="translated">패키지가 바인드, 비밀 등과 같은 Chef Habitat Supervisor 링과의 통신을 필요로하지 않는 경우 클러스터에서 직접 패키지를 실행할 수 있습니다. &lt;a href=&quot;http://kubernetes.io/docs/user-guide/pods/single-container/&quot;&gt; &lt;code&gt;kubectl&lt;/code&gt; 명령을&lt;/a&gt; 사용하여 Kubernetes에 컨테이너로 내 보낸 Chef Habitat 패키지를 배포 할 수 있습니다 . &lt;a href=&quot;../pkg_exports/index#exporting-to-docker&quot;&gt;Docker 내보내기&lt;/a&gt; 를 사용하여 컨테이너화 된 애플리케이션을 생성하면 다음 예와 같이 컨테이너를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="252351733fdee6e70e35b519de00a026196b4729" translate="yes" xml:space="preserve">
          <source>If your permanent peer Supervisors are not running any services, they will be less subject to the pressures that would cause service-running Supervisors to come and go. They can exist solely to anchor the entire Supervisor network.</source>
          <target state="translated">영구 동료 감독자가 서비스를 실행하지 않는 경우 서비스 실행 감독자가오고가는 압력을 덜 받게됩니다. 그들은 전체 Supervisor 네트워크를 고정하기 위해서만 존재할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c05a35a13bcb8f069876ed403ef2fa7afc45b7b" translate="yes" xml:space="preserve">
          <source>If your recipe is in a cookbook you can also specify that cookbook:</source>
          <target state="translated">레시피가 요리 책에있는 경우 해당 요리 책을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f46fc7e88f4135e62d50fc974290759a35502e41" translate="yes" xml:space="preserve">
          <source>If your service group is also running with the &lt;code&gt;--topology leader&lt;/code&gt; flag, the leader of that election will never become the update leader, so all followers within a leader topology will update first.</source>
          <target state="translated">서비스 그룹이 &lt;code&gt;--topology leader&lt;/code&gt; 플래그를 사용하여 실행중인 경우 해당 선택의 리더가 업데이트 리더가되지 않으므로 리더 토폴로지 내의 모든 팔로워가 먼저 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="1ff7129a1c94302f7e9fdf700d6cfce0f4f02b26" translate="yes" xml:space="preserve">
          <source>If your situation requires it, Chef Habitat makes it simple to switch from containerized to non-containerized workloads. This is because Chef Habitat packages only have a requirement on the kernel version of your operating system. (Linux: kernel 2.6.32 or later, Windows: Windows Server 2008 R2 or later and Windows 7 64-bit or later). You can take the same .hart file you use to export to a Docker container and run it on a virtual machine or bare metal. By only requiring the kernel, Chef Habitat gives you the ability to switch container formats or to switch to non-containerized workloads without significant rework.</source>
          <target state="translated">상황에 따라 필요한 경우 Chef Habitat을 사용하면 컨테이너화 된 워크로드에서 컨테이너화되지 않은 워크로드로 쉽게 전환 할 수 있습니다. Chef Habitat 패키지에는 운영 체제의 커널 버전에 대한 요구 사항 만 있기 때문입니다. (Linux : 커널 2.6.32 이상, Windows : Windows Server 2008 R2 이상 및 Windows 7 64 비트 이상). Docker 컨테이너로 내보내는 데 사용하는 것과 동일한 .hart 파일을 가져 와서 가상 머신 또는 베어 메탈에서 실행할 수 있습니다. 커널 만 요구함으로써 Chef Habitat은 상당한 재 작업없이 컨테이너 형식을 전환하거나 컨테이너화되지 않은 워크로드로 전환 할 수있는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="baced609b0b9701696a6a5dee6025595a9e72037" translate="yes" xml:space="preserve">
          <source>If zsh is your preferred shell then run the following:</source>
          <target state="translated">zsh가 선호하는 쉘이면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="204a79176dbc2713e2aedfe9daa8c3b5fde04ec2" translate="yes" xml:space="preserve">
          <source>If, in the example above, the second location was used, then create the &lt;code&gt;.chef/bootstrap/&lt;/code&gt; directory in the chef-repo, and then create the Embedded Ruby (ERB) template file by running commands similar to the following:</source>
          <target state="translated">위의 예에서 두 번째 위치가 사용 된 경우 chef-repo에서 &lt;code&gt;.chef/bootstrap/&lt;/code&gt; 디렉토리를 작성한 후 다음과 유사한 명령을 실행하여 Embedded Ruby (ERB) 템플리트 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c0eb6f78556d0e9a15dd326648eb408f9d2a4eb9" translate="yes" xml:space="preserve">
          <source>If, on the other hand, Supervisor B is started back up again, it can rejoin the network. All the other Supervisors will (through the same SWIM mechanism described) recognize that it is back, and will mark it as alive once again. Services will be reconfigured to communicate with Supervisor B&amp;rsquo;s services as appropriate.</source>
          <target state="translated">반면에 Supervisor B가 다시 시작되면 네트워크에 다시 참여할 수 있습니다. 다른 모든 감독자는 (설명 된 동일한 수영 메커니즘을 통해) 그것이 돌아 왔음을 인식하고 다시 한 번 살아있는 것으로 표시 할 것입니다. 서비스는 감독자 B의 서비스와 적절하게 통신하도록 재구성됩니다.</target>
        </trans-unit>
        <trans-unit id="dc63e004828d4a8346d68af1c503c7da0cec732f" translate="yes" xml:space="preserve">
          <source>Ignore an origin member invitation</source>
          <target state="translated">원본 회원 초대 무시</target>
        </trans-unit>
        <trans-unit id="2f517efc9bfd503d218b408688a06bfefbe1a311" translate="yes" xml:space="preserve">
          <source>Ignore any errors when setting the value on the command line.</source>
          <target state="translated">명령 줄에서 값을 설정할 때 모든 오류를 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="c2572a977b2f55fff539e6e6b9cd5f106d9ff876" translate="yes" xml:space="preserve">
          <source>Ignore origin invitations:</source>
          <target state="translated">원본 초대 무시 :</target>
        </trans-unit>
        <trans-unit id="f31438f3d7308dc487142bb2532411156f515867" translate="yes" xml:space="preserve">
          <source>Ignore the following error messages:</source>
          <target state="translated">다음 오류 메시지는 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="25a85bb7c800b6456e5cda87d3d099587471becc" translate="yes" xml:space="preserve">
          <source>Immediately flush the entries to the config file. Without this the actual writing of the file is delayed in the Chef run so all entries can be accumulated before writing the file out.</source>
          <target state="translated">항목을 구성 파일로 즉시 플러시하십시오. 이것이 없으면 Chef 실행에서 파일의 실제 쓰기가 지연되므로 파일을 쓰기 전에 모든 항목이 누적 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62036a7016ec20273ff717698fbad321c4ff002b" translate="yes" xml:space="preserve">
          <source>Impact</source>
          <target state="translated">Impact</target>
        </trans-unit>
        <trans-unit id="3000d9e8486f6dfdb0bdff6cc8575dbeab262059" translate="yes" xml:space="preserve">
          <source>Import Origin Keys</source>
          <target state="translated">오리진 키 가져 오기</target>
        </trans-unit>
        <trans-unit id="9d95c3b11186a5c2ccbf9832b98c4116b9ab524f" translate="yes" xml:space="preserve">
          <source>Import Origin Keys with the CLI</source>
          <target state="translated">CLI를 사용하여 원본 키 가져 오기</target>
        </trans-unit>
        <trans-unit id="62d55664db411aa07e9132c855db1949e38f545a" translate="yes" xml:space="preserve">
          <source>Import Project</source>
          <target state="translated">프로젝트 가져 오기</target>
        </trans-unit>
        <trans-unit id="5c3690fb1c24e537249f40caafe0042c67d07c65" translate="yes" xml:space="preserve">
          <source>Import-Module chef</source>
          <target state="translated">Import-Module 셰프</target>
        </trans-unit>
        <trans-unit id="142fc938270f8ebc5e4d24c3b80f45ed41674f11" translate="yes" xml:space="preserve">
          <source>Importance of the control</source>
          <target state="translated">통제의 중요성</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="82f395f839428f0c86315bae6414c13de5bea46a" translate="yes" xml:space="preserve">
          <source>Important Terms</source>
          <target state="translated">중요한 용어</target>
        </trans-unit>
        <trans-unit id="930e02f7d2a748f6b99ee4bfa99aefade6d29d52" translate="yes" xml:space="preserve">
          <source>Imported v1 custom policies that you created, which are marked with the &lt;code&gt;[Legacy]&lt;/code&gt; prefix and a &lt;code&gt;(custom)&lt;/code&gt; suffix.</source>
          <target state="translated">&lt;code&gt;[Legacy]&lt;/code&gt; 접두사와 &lt;code&gt;(custom)&lt;/code&gt; 접미사 로 표시된 사용자가 생성 한 v1 사용자 지정 정책을 가져 왔습니다 .</target>
        </trans-unit>
        <trans-unit id="c64011d25ff0c84d4e79aca73db9be8073c98923" translate="yes" xml:space="preserve">
          <source>Imported v1 default policies&amp;ndash;now called &lt;em&gt;legacy policies&lt;/em&gt;&amp;ndash;in the new v2 policy format and marked with the &lt;code&gt;[Legacy]&lt;/code&gt; prefix.</source>
          <target state="translated">가져온 v1 기본 정책 (현재 &lt;em&gt;레거시 정책&lt;/em&gt; 이라고 함) 은 새로운 v2 정책 형식으로 &lt;code&gt;[Legacy]&lt;/code&gt; 접두사 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="1a09b7a747dd4390b06240464db0cb57f8c901bb" translate="yes" xml:space="preserve">
          <source>Imports the Chef Automate 1 snapshot into Chef Automate 2.</source>
          <target state="translated">Chef Automate 1 스냅 샷을 Chef Automate 2로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1033092ced6991008cd3c8918f8f4ade87560d5a" translate="yes" xml:space="preserve">
          <source>Improved printing of octal comparisons</source>
          <target state="translated">8 진 비교 인쇄 개선</target>
        </trans-unit>
        <trans-unit id="9d095db2655ccb8ceebbf3cb74aa975ecd24cbc1" translate="yes" xml:space="preserve">
          <source>In 64-bit versions of Microsoft Windows, &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Example&lt;/code&gt; is a re-directed key. In the following examples, because &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Example&lt;/code&gt; is a 32-bit key, the output will be &amp;ldquo;Found 32-bit key&amp;rdquo; if they are run on a version of Microsoft Windows that is 64-bit:</source>
          <target state="translated">64 비트 버전의 Microsoft Windows에서 &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Example&lt;/code&gt; 은 리디렉션 된 키입니다. 다음 예에서 &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Example&lt;/code&gt; 은 32 비트 키이므로 64 비트 인 Microsoft Windows 버전에서 실행되는 경우 &quot;발견 된 32 비트 키&quot;가 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="8afe7423b8f9a2cea7236b959a3461c5c01cf85a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;path/to/client.rb&lt;/code&gt;, include:</source>
          <target state="translated">에서 &lt;code&gt;path/to/client.rb&lt;/code&gt; , 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="279dae0df3e41fd2f7cd48898c8646be4acb13ef" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;Data Feeds&lt;/em&gt;, select &lt;strong&gt;Delete Data Feed&lt;/strong&gt; from the menu at the end of the table row</source>
          <target state="translated">에서 &lt;em&gt;데이터 피드&lt;/em&gt; , 선택 &lt;strong&gt;삭제 데이터 피드&lt;/strong&gt; 테이블 행의 끝에있는 메뉴를</target>
        </trans-unit>
        <trans-unit id="a1d6da9549952aa225ebe06b8c47114ae686483b" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;Data Feeds&lt;/em&gt;, select the Data Feed name to open its detail page</source>
          <target state="translated">에서 &lt;em&gt;데이터 피드&lt;/em&gt; , 자사의 세부 정보 페이지를 열려면 데이터 피드 이름을 선택</target>
        </trans-unit>
        <trans-unit id="55898ff5c5dc07a83a0dce16520545fc9c45137f" translate="yes" xml:space="preserve">
          <source>In April 2019 many of our software distributions switched to being governed under the Chef EULA, while the software projects remained governed by the Apache 2.0 license. To understand which license applies to those distributions, see the &lt;a href=&quot;../versions/index&quot;&gt;versions page&lt;/a&gt;. General information about this change can be found in our &lt;a href=&quot;https://blog.chef.io/2019/04/02/chef-software-announces-the-enterprise-automation-stack/&quot;&gt;announcement&lt;/a&gt;.</source>
          <target state="translated">2019 년 4 월에 많은 소프트웨어 배포가 Chef EULA의 적용을받는 것으로 전환되었지만 소프트웨어 프로젝트는 Apache 2.0 라이선스의 적용을 받았습니다. 이러한 배포에 적용되는 라이센스를 이해하려면 &lt;a href=&quot;../versions/index&quot;&gt;버전 페이지를 참조하십시오&lt;/a&gt; . 이 변경 사항에 대한 일반 정보는 &lt;a href=&quot;https://blog.chef.io/2019/04/02/chef-software-announces-the-enterprise-automation-stack/&quot;&gt;공지 사항&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="620b2ab6c0f4438dee7d9661a8a1c263cf4e5df8" translate="yes" xml:space="preserve">
          <source>In April 2019 many of our software distributions switched to being governed under the Chef EULA, while the software projects remained governed by the Apache 2.0 license. To understand which license applies to those distributions, see the &lt;a href=&quot;versions/index&quot;&gt;versions page&lt;/a&gt;. General information about this change can be found in our &lt;a href=&quot;https://blog.chef.io/2019/04/02/chef-software-announces-the-enterprise-automation-stack/&quot;&gt;announcement&lt;/a&gt;.</source>
          <target state="translated">2019 년 4 월에 많은 소프트웨어 배포가 Chef EULA의 적용을받는 것으로 전환되었지만 소프트웨어 프로젝트는 Apache 2.0 라이선스의 적용을 받았습니다. 이러한 배포에 적용되는 라이센스를 이해하려면 &lt;a href=&quot;versions/index&quot;&gt;버전 페이지를 참조하십시오&lt;/a&gt; . 이 변경 사항에 대한 일반 정보는 &lt;a href=&quot;https://blog.chef.io/2019/04/02/chef-software-announces-the-enterprise-automation-stack/&quot;&gt;공지 사항&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3098458d234eeec689c888810a3e8d84f27b3911" translate="yes" xml:space="preserve">
          <source>In Azure AD, add Chef Automate as a &lt;em&gt;&amp;ldquo;non-gallery application&amp;rdquo;&lt;/em&gt;, and then configure its SAML sign-in method. &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/configure-saml-single-sign-on&quot;&gt;The Azure AD documentation&lt;/a&gt; provides a detailed guide. Enter &lt;code&gt;https://automate.example.com/dex/callback&lt;/code&gt; as the value for both &lt;em&gt;Identifier (Entity ID)&lt;/em&gt; and &lt;em&gt;Reply URL (Assertion Consumer Service URL)&lt;/em&gt;.</source>
          <target state="translated">Azure AD에서 Chef Automate를 &lt;em&gt;&quot;비 갤러리 애플리케이션&quot;&lt;/em&gt; 으로 추가 한 다음 SAML 로그인 방법을 구성합니다. &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/configure-saml-single-sign-on&quot;&gt;Azure AD 설명서&lt;/a&gt; 는 자세한 가이드를 제공합니다. &lt;em&gt;식별자 (엔티티 ID)&lt;/em&gt; 및 &lt;em&gt;회신 URL (어설 션 소비자 서비스 URL)&lt;/em&gt; 값으로 &lt;code&gt;https://automate.example.com/dex/callback&lt;/code&gt; 을 입력 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a872a79b153b5c3536d53c5857e0867e0e20b74" translate="yes" xml:space="preserve">
          <source>In Chef Client 12.5.1 through 15, resources could be addressed from recipe code using only the name of the resource, provided that no other &lt;code&gt;provides&lt;/code&gt; declaration was used in the same file.</source>
          <target state="translated">Chef Client 12.5.1에서 15까지의 리소스 는 동일한 파일에서 다른 &lt;code&gt;provides&lt;/code&gt; 선언이 사용 되지 않은 경우 리소스 이름 만 사용하여 레시피 코드에서 주소를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ed06b4ddae249a9449ba437b3087ed78c4d4773" translate="yes" xml:space="preserve">
          <source>In Chef Client 12.5.1, the custom resources API allowed specifying property names as the short form of &lt;code&gt;property_name&lt;/code&gt; inside of actions, instead of the long form of &lt;code&gt;new_resource.property_name&lt;/code&gt; (as was previously required in provider code in LWRPs/HWRPs/etc). That change caused unsolvable namespace clashes and will be removed in Chef Client 14.0, and it will become mandatory to refer to properties as &lt;code&gt;new_resource.property_name&lt;/code&gt; in actions.</source>
          <target state="translated">Chef Client 12.5.1에서 사용자 지정 리소스 API 는 &lt;code&gt;new_resource.property_name&lt;/code&gt; 의 긴 형식 (이전에 LWRP / HWRPs / etc의 공급자 코드에서 필요했던 것처럼) 대신 작업 내에서 &lt;code&gt;property_name&lt;/code&gt; 의 짧은 형식으로 속성 이름을 지정할 수 있도록 허용했습니다 . 이 변경으로 인해 해결할 수없는 네임 스페이스 충돌이 발생했으며 Chef Client 14.0에서 제거 되며 작업에서 속성을 &lt;code&gt;new_resource.property_name&lt;/code&gt; 으로 참조해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4a6ee7f41c74ad027a854d98396583992287fced" translate="yes" xml:space="preserve">
          <source>In Chef Client 13, resources with the same name will be treated as entirely separate, without any cloning of properties.</source>
          <target state="translated">Chef Client 13에서 동일한 이름의 리소스는 속성 복제없이 완전히 별개로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6bd76457a922411c87abf2265e7dd85c86407c" translate="yes" xml:space="preserve">
          <source>In Chef Client 14 several legacy mixins will be removed. Usage of these mixins has resulted in deprecation warnings for several years. They were traditionally used in some HWRPs, but are rarely found in code available on the Supermarket.</source>
          <target state="translated">Chef Client 14에서는 여러 레거시 믹스 인이 제거됩니다. 이러한 믹스 인을 사용하면 몇 년 동안 사용 중단 경고가 발생했습니다. 전통적으로 일부 HWRP에서 사용되었지만 슈퍼마켓에서 제공되는 코드에서는 거의 발견되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="badd40b1b82afe78f9c9b578ced12008c6ca5a63" translate="yes" xml:space="preserve">
          <source>In Chef Client 14, the short &lt;code&gt;-r&lt;/code&gt; form will be removed, as it conflicts with the ability to specify a run list.</source>
          <target state="translated">Chef Client 14에서는 실행 목록을 지정하는 기능과 충돌 하므로 짧은 &lt;code&gt;-r&lt;/code&gt; 형식이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="401d47684008635c34eb4fb0670e4fd17f262a7b" translate="yes" xml:space="preserve">
          <source>In Chef Habitat 0.68.0 and less, some hooks used &lt;code&gt;_&lt;/code&gt; in their names. This is now deprecated; if you used them, please use &lt;code&gt;-&lt;/code&gt; instead.</source>
          <target state="translated">Chef Habitat 0.68.0 이하에서 일부 후크 는 이름에 &lt;code&gt;_&lt;/code&gt; 를 사용했습니다. 이제 더 이상 사용되지 않습니다. 사용했다면 &lt;code&gt;-&lt;/code&gt; 대신 사용하세요 .</target>
        </trans-unit>
        <trans-unit id="8f9dfed51e6c8118a4601efcb70397f8270b94e6" translate="yes" xml:space="preserve">
          <source>In Chef Habitat the unit of automation is the application itself. This chapter includes content related specifically to the process and workflow of developing a plan that will instruct Chef Habitat in how to build, deploy, and manage your application.</source>
          <target state="translated">Chef Habitat에서 자동화 단위는 애플리케이션 자체입니다. 이 장에는 Chef Habitat에게 애플리케이션을 빌드, 배포 및 관리하는 방법을 지시하는 계획 개발 프로세스 및 워크 플로와 관련된 콘텐츠가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e1e21058db110781523230969eae144fb5d3783" translate="yes" xml:space="preserve">
          <source>In Chef InSpec 2.0, the HTTP test will automatically execute remotely whenever Chef InSpec is testing a remote node.</source>
          <target state="translated">Chef InSpec 2.0에서 HTTP 테스트는 Chef InSpec이 원격 노드를 테스트 할 때마다 자동으로 원격 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="49ee070594da8d8b85acf8b2e9ba45cd29ca2db3" translate="yes" xml:space="preserve">
          <source>In Chef InSpec 4+, every input is namespaced. For example, you could have an input named &lt;code&gt;wrapper/favorite_food&lt;/code&gt; and one named &lt;code&gt;child/favorite_food&lt;/code&gt;. If no explicit profile option is set within the &lt;code&gt;wrapper&lt;/code&gt; profile metadata file, then &lt;code&gt;wrapper&lt;/code&gt; is assumed to be the profile.</source>
          <target state="translated">Chef InSpec 4+에서는 모든 입력에 네임 스페이스가 지정됩니다. 예를 들어 &lt;code&gt;wrapper/favorite_food&lt;/code&gt; 라는 입력 과 &lt;code&gt;child/favorite_food&lt;/code&gt; 라는 입력이있을 수 있습니다 . 명시 적 프로파일 옵션이 내에서 설정되지 않으면 &lt;code&gt;wrapper&lt;/code&gt; 프로필 메타 데이터 파일, 다음 &lt;code&gt;wrapper&lt;/code&gt; 프로파일로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e4df45420902ccc098c03fcb9b4665d0c68ca379" translate="yes" xml:space="preserve">
          <source>In Chef InSpec you would split up groups into files.</source>
          <target state="translated">Chef InSpec에서는 그룹을 파일로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="9fe7f0301f20b240f0698c01e1a44653ae4b6912" translate="yes" xml:space="preserve">
          <source>In Chef InSpec, a common pattern is to write a wrapper profile that depends on another profile. This pattern pulls profiles from a main profile source like the &lt;a href=&quot;https://automate.chef.io/docs/profiles/&quot;&gt;Chef Automate Profile Store&lt;/a&gt;. See an &lt;a href=&quot;https://github.com/chef/effortless/tree/master/examples/effortless_audit&quot;&gt;example of this pattern&lt;/a&gt;.</source>
          <target state="translated">Chef InSpec에서 일반적인 패턴은 다른 프로필에 의존하는 래퍼 프로필을 작성하는 것입니다. 이 패턴은 &lt;a href=&quot;https://automate.chef.io/docs/profiles/&quot;&gt;Chef Automate 프로필 저장소&lt;/a&gt; 와 같은 기본 프로필 소스에서 프로필을 가져옵니다 . &lt;a href=&quot;https://github.com/chef/effortless/tree/master/examples/effortless_audit&quot;&gt;이 패턴&lt;/a&gt; 의 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="83c4a6eeadd38ea5ce2e6de55ce8d9b4d4345977" translate="yes" xml:space="preserve">
          <source>In Chef Infra Client 16.3 the node Blacklist and Whitelist features were renamed to Blocklist and Allowlist. For backwards compatibility the old configuration values will continue to work, but this document will describe the Blocklist and Allowlist names. See each section below for the appropriate legacy configuration values if you are running legacy clients in your organization.</source>
          <target state="translated">Chef Infra Client 16.3에서 노드 블랙리스트 및 화이트리스트 기능은 차단 목록 및 허용 목록으로 이름이 변경되었습니다. 이전 버전과의 호환성을 위해 이전 구성 값은 계속 작동하지만이 문서에서는 차단 목록 및 허용 목록 이름에 대해 설명합니다. 조직에서 레거시 클라이언트를 실행하는 경우 적절한 레거시 구성 값은 아래 각 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d967c94111de32dd0a1c70d6c2a5bfbce3771fd5" translate="yes" xml:space="preserve">
          <source>In Chef, there are two different types of permissions issues, object specific and global permissions. To figure out which type of permission issue you&amp;rsquo;re experiencing, run Chef Infra Client again using the &lt;code&gt;-l debug&lt;/code&gt; options to see debugging output.</source>
          <target state="translated">Chef에는 두 가지 유형의 권한 문제, 개체 별 권한과 전역 권한이 있습니다. 어떤 유형의 권한 문제가 발생 하는지 확인 하려면 &lt;code&gt;-l debug&lt;/code&gt; 옵션을 사용하여 Chef Infra Client를 다시 실행하여 디버깅 출력을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="238af41ac0bc03b13f2ae86a302b8d3868502625" translate="yes" xml:space="preserve">
          <source>In Debian/Ubuntu: &lt;code&gt;dpkg -i PATH_TO_DEB&lt;/code&gt;</source>
          <target state="translated">Debian / Ubuntu : &lt;code&gt;dpkg -i PATH_TO_DEB&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0033242ca9840db7ce83feec1d6819480dfc31a5" translate="yes" xml:space="preserve">
          <source>In InSpec, &lt;code&gt;describe&lt;/code&gt; blocks should not be nested; instead use &lt;code&gt;control&lt;/code&gt; blocks to describe a higher-level grouping of tests.</source>
          <target state="translated">InSpec에서 &lt;code&gt;describe&lt;/code&gt; 블록은 중첩되지 않아야합니다. 대신 &lt;code&gt;control&lt;/code&gt; 블록을 사용 하여 더 높은 수준의 테스트 그룹을 설명하십시오.</target>
        </trans-unit>
        <trans-unit id="aeffbfdca9975ff941c9e3514524886c5e8ec95e" translate="yes" xml:space="preserve">
          <source>In Ohai/Chef Client 13 we replaced the existing Cloud plugin with the Cloud V2 plugin. That was done by having Ohai populate both &lt;code&gt;node['cloud']&lt;/code&gt; and &lt;code&gt;node['cloud_v2']&lt;/code&gt; with the data previously found at &lt;code&gt;node['cloud_v2']&lt;/code&gt;. In Chef Client 14 we will no longer populate &lt;code&gt;node['cloud_v2']&lt;/code&gt;.</source>
          <target state="translated">Ohai / Chef Client 13에서는 기존 Cloud 플러그인을 Cloud V2 플러그인으로 대체했습니다. Ohai가 &lt;code&gt;node['cloud']&lt;/code&gt; 및 &lt;code&gt;node['cloud_v2']&lt;/code&gt; 를 이전에 &lt;code&gt;node['cloud_v2']&lt;/code&gt; 에서 찾은 데이터로 채우도록하여 수행되었습니다 . Chef Client 14에서는 더 이상 &lt;code&gt;node['cloud_v2']&lt;/code&gt; 를 채우지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="857559ad958ddd4dfc9bd2cd3f98ad7dba6b27f0" translate="yes" xml:space="preserve">
          <source>In Ohai/Chef Client 13 we replaced the existing Filesystem plugin with the Filesystem V2 plugin. That was done by having Ohai populate both &lt;code&gt;node['filesystem']&lt;/code&gt; and &lt;code&gt;node['filesystem_v2']&lt;/code&gt; with the data previously found at &lt;code&gt;node['filesystem2']&lt;/code&gt;. In Chef Client 14 we will no longer populate &lt;code&gt;node['filesystem2']&lt;/code&gt;.</source>
          <target state="translated">Ohai / Chef Client 13에서는 기존 Filesystem 플러그인을 Filesystem V2 플러그인으로 대체했습니다. 이는 Ohai가 &lt;code&gt;node['filesystem']&lt;/code&gt; 및 &lt;code&gt;node['filesystem_v2']&lt;/code&gt; 를 이전에 &lt;code&gt;node['filesystem2']&lt;/code&gt; 에서 찾은 데이터로 채우도록함으로써 수행되었습니다 . Chef Client 14에서는 더 이상 &lt;code&gt;node['filesystem2']&lt;/code&gt; 를 채우지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="25b4578891bbeedcce8428510cba8bf503057064" translate="yes" xml:space="preserve">
          <source>In Ohai/Chef Client 13 we replaced the existing Filesystem plugin with the Filesystem2 plugin. This was done by having the Filesystem2 plugin populate both &lt;code&gt;node['fileystem2']&lt;/code&gt; and &lt;code&gt;node['filesystem']&lt;/code&gt;. The Filesystem2 plugin includes a different data format that resolves many of the longstanding bugs in the Filesystem plugin.</source>
          <target state="translated">Ohai / Chef Client 13에서는 기존 Filesystem 플러그인을 Filesystem2 플러그인으로 대체했습니다. 이는 Filesystem2 플러그인이 &lt;code&gt;node['fileystem2']&lt;/code&gt; 및 &lt;code&gt;node['filesystem']&lt;/code&gt; 모두를 채우도록함으로써 수행되었습니다 . Filesystem2 플러그인에는 Filesystem 플러그인의 오랜 버그를 해결하는 다양한 데이터 형식이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7dab24516cb9c1b316a7c9362b344cf4d6b9710" translate="yes" xml:space="preserve">
          <source>In Ohai/Chef releases 13 we replaced the existing Cloud plugin with the Cloud_v2 plugin. This was done by having the Cloud_v2 plugin populate both &lt;code&gt;node['cloud']&lt;/code&gt; and &lt;code&gt;node['cloud_v2']&lt;/code&gt;. The Cloud_v2 plugin includes a different data format that resolves many of the longstanding bugs in the existing Cloud plugin.</source>
          <target state="translated">Ohai / Chef 릴리스 13에서는 기존 Cloud 플러그인을 Cloud_v2 플러그인으로 대체했습니다. 이는 Cloud_v2 플러그인이 &lt;code&gt;node['cloud']&lt;/code&gt; 및 &lt;code&gt;node['cloud_v2']&lt;/code&gt; 를 모두 채우도록함으로써 수행되었습니다 . Cloud_v2 플러그인에는 기존 Cloud 플러그인의 오랜 버그를 해결하는 다양한 데이터 형식이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8edf5b1f6c17d23d1fe0ac27b5165075c27db6d" translate="yes" xml:space="preserve">
          <source>In Ohai/Chef releases prior to Chef Client 13, Amazon Linux was identified as &lt;code&gt;platform_family 'rhel'&lt;/code&gt;. In Ohai/Chef Client 13 and later, Amazon Linux will be identified as the &lt;code&gt;platform_family 'amazon'&lt;/code&gt;. When Amazon Linux was created it closely mirrored the structure and package naming of RHEL 5, and with the release of RHEL 6 Amazon Linux moved to closely resemble RHEL 6. With the release of RHEL 7 Red Hat switched to the systemd init system, however Amazon Linux has not yet decided to make that same switch. In addition to the init system differences, Amazon Linux has added many critical packages with their own unique naming conventions. This makes it very hard for users to write cookbooks for RHEL that will work on Amazon Linux systems out of the box. In order to simplify multi-platform cookbook code and to make it more clear when cookbooks actually support Amazon Linux, we&amp;rsquo;ve created the &amp;lsquo;&lt;code&gt;amazon&lt;/code&gt; platform family and removed Amazon Linux from the &lt;code&gt;rhel&lt;/code&gt; platform family.</source>
          <target state="translated">Chef Client 13 이전의 Ohai / Chef 릴리스에서 Amazon Linux는 &lt;code&gt;platform_family 'rhel'&lt;/code&gt; 로 식별되었습니다 . Ohai / Chef Client 13 이상에서 Amazon Linux는 &lt;code&gt;platform_family 'amazon'&lt;/code&gt; 으로 식별됩니다.. Amazon Linux가 생성되었을 때 RHEL 5의 구조 및 패키지 이름을 밀접하게 미러링했으며 RHEL 6이 출시됨에 따라 Amazon Linux가 RHEL 6과 매우 유사하게 이동했습니다. RHEL 7이 출시되면서 Red Hat은 systemd init 시스템으로 전환되었지만 Amazon Linux는 아직 동일한 전환을 결정하지 않았습니다. init 시스템 차이점 외에도 Amazon Linux는 고유 한 이름 지정 규칙을 사용하여 많은 중요 패키지를 추가했습니다. 이로 인해 사용자가 Amazon Linux 시스템에서 즉시 작동하는 RHEL 용 쿡북을 작성하기가 매우 어렵습니다. 다중 플랫폼 쿡북 코드를 단순화하고 쿡북이 실제로 Amazon Linux를 지원하는시기를 더 명확하게하기 위해 ' &lt;code&gt;amazon&lt;/code&gt; 플랫폼 제품군을 만들고 &lt;code&gt;rhel&lt;/code&gt; 플랫폼 제품군 에서 Amazon Linux를 제거했습니다 .</target>
        </trans-unit>
        <trans-unit id="0144b12285325694179faa4a8d11f0ef6a90efe5" translate="yes" xml:space="preserve">
          <source>In Powershell plans, if your variable contains values that are file paths pointing inside the Chef Habitat &lt;code&gt;/hab&lt;/code&gt; directory, you can use the &lt;code&gt;-IsPath&lt;/code&gt; flag to ensure that the path remains portable accross different Chef Habitat environments. For example in a local (non-Docker) Windows Studio, the following line:</source>
          <target state="translated">Powershell 플랜에서 변수에 Chef Habitat &lt;code&gt;/hab&lt;/code&gt; 디렉터리 내부를 가리키는 파일 경로 인 값이 포함 된 경우 &lt;code&gt;-IsPath&lt;/code&gt; 플래그를 사용하여 경로가 다른 Chef Habitat 환경에서 이식 가능한 상태로 유지되도록 할 수 있습니다 . 예를 들어 로컬 (Docker가 아닌) Windows Studio에서 다음 줄은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a5b5e2486d831ee67d643a4c1a51898a7a3dc30" translate="yes" xml:space="preserve">
          <source>In Red Hat/CentOS: &lt;code&gt;yum install PATH_TO_RPM&lt;/code&gt;</source>
          <target state="translated">Red Hat / CentOS : &lt;code&gt;yum install PATH_TO_RPM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7c1c9feaf4e28842124d3d962f7fa548589b990" translate="yes" xml:space="preserve">
          <source>In UNIX, a process environment is a set of key-value pairs made available to a process. Programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used.</source>
          <target state="translated">UNIX에서 프로세스 환경은 프로세스에 사용 가능한 일련의 키-값 쌍입니다. 프로그램은 해당 환경에 프로그램을 실행하는 데 필요한 정보가 포함되어 있어야합니다. 이러한 키-값 쌍에 액세스하는 방법에 대한 세부 사항은 사용중인 언어의 API에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="63152f82cc294563966b69de3a74a28309b24a0c" translate="yes" xml:space="preserve">
          <source>In Workflow&amp;rsquo;s web UI, click the &lt;code&gt;Admin&lt;/code&gt; button in the top navigation.</source>
          <target state="translated">Workflow의 웹 UI 에서 상단 탐색 메뉴 의 &lt;code&gt;Admin&lt;/code&gt; 버튼을 클릭합니다 .</target>
        </trans-unit>
        <trans-unit id="652efa33462453dd509acf571cf42fb05f7d77c0" translate="yes" xml:space="preserve">
          <source>In Workflow&amp;rsquo;s web UI, click the &lt;code&gt;Workflow&lt;/code&gt; button in the top navigation.</source>
          <target state="translated">워크 플로의 웹 UI 에서 상단 탐색에있는 &lt;code&gt;Workflow&lt;/code&gt; 버튼을 클릭합니다 .</target>
        </trans-unit>
        <trans-unit id="1466a48db606b7622ef69de30955545b044f53ab" translate="yes" xml:space="preserve">
          <source>In a Chef Backend High Availability deployment, the etcd service is extremely sensitive and can get into a bad state across backend nodes due to disk and/or network latency. When this happens, it is common for the cluster to be unable to automatically failover/recover.</source>
          <target state="translated">Chef 백엔드 고 가용성 배포에서 etcd 서비스는 매우 민감하며 디스크 및 / 또는 네트워크 대기 시간으로 인해 백엔드 노드에서 잘못된 상태가 될 수 있습니다. 이 경우 클러스터가 자동으로 장애 조치 / 복구를 할 수없는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="18f558ecde6b1fc8057af06f224e5972b13ceede" translate="yes" xml:space="preserve">
          <source>In a command window, enter each of the following:</source>
          <target state="translated">명령 창에서 다음을 각각 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="905b030c496011e62ad719bedf6f41554a62ee5e" translate="yes" xml:space="preserve">
          <source>In a command window, enter the following:</source>
          <target state="translated">명령 창에서 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="20419a7bb8478cb5c4f02c0b54fbfcf86b00a214" translate="yes" xml:space="preserve">
          <source>In a command window, navigate to the Chef repository:</source>
          <target state="translated">명령 창에서 Chef 저장소로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="b1f832a8cb1b44431be3cb41b06d52fb7d934301" translate="yes" xml:space="preserve">
          <source>In a command window, navigate to the chef-repo:</source>
          <target state="translated">명령 창에서 chef-repo로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="5de9ccc266c6524187e1436f99327f563b18af80" translate="yes" xml:space="preserve">
          <source>In a cookbook library file, you can add this in order to print out all attribute changes in cookbooks:</source>
          <target state="translated">쿡북 라이브러리 파일에서 쿡북의 모든 속성 변경 사항을 출력하기 위해 다음을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b34da4f302b1cf3edc7d2114da9c5951a118537f" translate="yes" xml:space="preserve">
          <source>In a disaster recovery scenario, the backup and restore processes allow you to restore a data backup into a newly built cluster. It is not intended for the recovery of an individual machine in the chef-backend cluster or for a point-in-time rollback of an existing cluster.</source>
          <target state="translated">재해 복구 시나리오에서 백업 및 복원 프로세스를 통해 데이터 백업을 새로 구축 된 클러스터로 복원 할 수 있습니다. chef-backend 클러스터의 개별 시스템 복구 또는 기존 클러스터의 특정 시점 롤백을위한 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1699111ea29d4541d83bb5756b7092ee6f8f1cb4" translate="yes" xml:space="preserve">
          <source>In a large installation, restricting these results to a subset of results may be necessary:</source>
          <target state="translated">대규모 설치에서는 이러한 결과를 일부 결과로 제한해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afa4ce585b90c598464f69386d9b1d0446760096" translate="yes" xml:space="preserve">
          <source>In a large installation, you may need to restrict this to a subset of the requests:</source>
          <target state="translated">대규모 설치에서는이를 요청의 하위 집합으로 제한해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="144167c2f0bf152fb4c63fc623ced7ffdff58ae8" translate="yes" xml:space="preserve">
          <source>In a leader-follower topology, one of the members of the service group is elected the leader, and the other members of that service group become the followers of that leader. This topology is common for database systems like MySQL or PostgreSQL, where applications send writes to one member, and those writes are replicated to one or more read replicas.</source>
          <target state="translated">리더-팔로어 토폴로지에서 서비스 그룹의 구성원 중 하나가 리더로 선출되고 해당 서비스 그룹의 다른 구성원이 해당 리더의 팔로워가됩니다. 이 토폴로지는 애플리케이션이 하나의 구성원에게 쓰기를 보내고 해당 쓰기가 하나 이상의 읽기 전용 복제본에 복제되는 MySQL 또는 PostgreSQL과 같은 데이터베이스 시스템에 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="a1abd9db0e8e44a1622c1d6c1bff31bd7f359e01" translate="yes" xml:space="preserve">
          <source>In a specified recipe</source>
          <target state="translated">지정된 레시피에서</target>
        </trans-unit>
        <trans-unit id="0c28f3f8efce33f46d2c6aa8af73548374b3e57f" translate="yes" xml:space="preserve">
          <source>In a very similar example, a change can still ship if it is related to a breakage as long as that breakage does not occur in an immediate upstream dependency. Again, assume the same change is made to project A that broke project B. Then, a change is made to project E that passes its project tests. A project with changes can only impact projects that consume it, so project E is safe to promote although its dependency project C is blocked due to project C&amp;rsquo;s dependency on project A. This promotion of project E&amp;rsquo;s change can happen because the version of project C in Union and Rehearsal is still what it was before the change to project A was pushed through the pipeline and broke project B&amp;rsquo;s run-time tests in Union.</source>
          <target state="translated">매우 유사한 예에서, 파손이 즉각적인 업스트림 종속성에서 발생하지 않는 한 파손과 관련된 변경 사항이 계속 제공 될 수 있습니다. 다시, 프로젝트 B를 중단 한 프로젝트 A에 동일한 변경이 이루어 졌다고 가정합니다. 그런 다음 프로젝트 테스트를 통과 한 프로젝트 E에 변경이 이루어집니다. 변경 사항이있는 프로젝트는이를 소비하는 프로젝트에만 영향을 줄 수 있으므로 프로젝트 C의 프로젝트 A에 대한 종속성으로 인해 해당 종속성 프로젝트 C가 차단되었지만 프로젝트 E는 승격해도 안전합니다. Union and Rehearsal은 여전히 ​​프로젝트 A의 변경 사항이 파이프 라인을 통해 푸시되고 Union에서 프로젝트 B의 런타임 테스트를 중단하기 전의 모습입니다.</target>
        </trans-unit>
        <trans-unit id="f11c32fbcac9deeda2cdec55992eaf863c0fb222" translate="yes" xml:space="preserve">
          <source>In addition Chef InSpec provides additional &lt;a href=&quot;../resources/index&quot;&gt;resources&lt;/a&gt; that are not available in Serverspec:</source>
          <target state="translated">또한 Chef InSpec은 Serverspec에서 사용할 수없는 추가 &lt;a href=&quot;../resources/index&quot;&gt;리소스&lt;/a&gt; 를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="02a9782efd8ea60cadb77af765bcad92274e5444" translate="yes" xml:space="preserve">
          <source>In addition to &amp;lsquo;Maintainer&amp;rsquo; access, the &amp;lsquo;Administrator&amp;rsquo; role adds the privileges for writing origin keys and membership roles, as well as for reading and writing origin secrets. Administrators have full read and write access to packages, channels, origin membership, jobs, keys, integrations, invitations, roles, secrets, settings.</source>
          <target state="translated">'관리자'액세스 외에 '관리자'역할은 오리진 키 및 멤버십 역할을 작성하고 오리진 비밀을 읽고 쓰는 권한을 추가합니다. 관리자는 패키지, 채널, 오리진 멤버십, 작업, 키, 통합, 초대, 역할, 비밀, 설정에 대한 전체 읽기 및 쓰기 액세스 권한을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="844b8ff641313b7f6235ac79c7dee8233b33e9b6" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../service_updates/index&quot;&gt;configuration updates&lt;/a&gt;, you can upload files to a service group. Keep these small - we recommend 4k or less per file, and keep the count of files to a minimum.</source>
          <target state="translated">&lt;a href=&quot;../service_updates/index&quot;&gt;구성 업데이트&lt;/a&gt; 외에도 서비스 그룹에 파일을 업로드 할 수 있습니다. 크기를 작게 유지하세요. 파일 당 4K 이하를 권장하고 파일 수는 최소로 유지하세요.</target>
        </trans-unit>
        <trans-unit id="ab7be74058f9ef779fdb018d56eb86c700f71e2e" translate="yes" xml:space="preserve">
          <source>In addition to GitHub issues, we also utilize a feedback site that helps our product team track and rank feature requests. If you have a feature request, this is an excellent place to start: &lt;a href=&quot;https://feedback.chef.io&quot;&gt;https://feedback.chef.io&lt;/a&gt;.</source>
          <target state="translated">GitHub 문제 외에도 제품 팀이 기능 요청을 추적하고 순위를 매기는 데 도움이되는 피드백 사이트도 활용합니다. 기능 요청이있는 경우 &lt;a href=&quot;https://feedback.chef.io&quot;&gt;https://feedback.chef.io&lt;/a&gt; 에서 시작하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3c088b6a8a68fe1ce51e423bda0a34a7c10ffbd1" translate="yes" xml:space="preserve">
          <source>In addition to VSCode, for this guide you need the following extensions from the Visual Studio Code Marketplace:</source>
          <target state="translated">이 가이드에는 VSCode 외에도 Visual Studio Code Marketplace의 다음 확장이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1e4e6998329f2a22ead209c9662b2eac7d496186" translate="yes" xml:space="preserve">
          <source>In addition to attributes and recipes, the following items are also part of cookbooks:</source>
          <target state="translated">속성과 레시피 외에도 다음 항목은 요리 책의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="4984bf7429d8f214bc07d5118c374575e8ec029f" translate="yes" xml:space="preserve">
          <source>In addition to avoiding system-level gems and modules you should also limit the use of external dependencies to resource packs or plugins. Gems need to be resolved, installed, vendored, and protected from conflicts. We aim to avoid exposing this complexity to users of InSpec, to make it a great tool even if you are not a developer.</source>
          <target state="translated">시스템 수준의 gem과 모듈을 피하는 것 외에도 리소스 팩이나 플러그인에 대한 외부 종속성 사용을 제한해야합니다. Gems는 해결, 설치, 벤더 링 및 충돌로부터 보호되어야합니다. 우리는 개발자가 아니더라도 InSpec을 훌륭한 도구로 만들기 위해 이러한 복잡성이 InSpec 사용자에게 노출되지 않도록하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="fbca91120ebb2e28880a82b7e65b0cda5ce0c296" translate="yes" xml:space="preserve">
          <source>In addition to forwarding Chef run data to Automate, Chef Infra Server will send messages to Chef Automate whenever an action is taken on a Chef Infra Server object, such as when a cookbook is uploaded to the Chef Infra Server or when a user edits a role.</source>
          <target state="translated">Chef 실행 데이터를 Automate로 전달하는 것 외에도 Chef Infra Server는 쿡북이 Chef Infra Server에 업로드되거나 사용자가 역할을 편집 할 때와 같이 Chef Infra Server 객체에서 작업이 수행 될 때마다 Chef Automate로 메시지를 보냅니다. .</target>
        </trans-unit>
        <trans-unit id="0e4a1d7265fc430d7b1db7c3c6bf7ec1ad22dadc" translate="yes" xml:space="preserve">
          <source>In addition to forwarding Chef run data to Chef Automate, Chef Infra Server will send messages to Chef Automate whenever an action is taken on a Chef Infra Server object, such as when a cookbook is uploaded to the Chef Infra Server or when a user edits a role.</source>
          <target state="translated">Chef 실행 데이터를 Chef Automate로 전달하는 것 외에도 Chef Infra Server는 쿡북이 Chef Infra Server에 업로드되거나 사용자가 역할.</target>
        </trans-unit>
        <trans-unit id="7e018037a90aecdc5fe7c7b2293d4c8958d708f1" translate="yes" xml:space="preserve">
          <source>In addition to read-only access, an origin &amp;lsquo;Member&amp;rsquo; can upload and build packages in the &amp;lsquo;unstable&amp;rsquo; channel, but they cannot promote packages to other channels.</source>
          <target state="translated">읽기 전용 액세스 외에도 오리진 '멤버'는 '불안정한'채널에서 패키지를 업로드하고 빌드 할 수 있지만 다른 채널로 패키지를 승격 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="18f53af6a6599da91a05d9334053f672c5356f71" translate="yes" xml:space="preserve">
          <source>In addition to specifying the keys you defined in &lt;code&gt;pkg_exports&lt;/code&gt;, you must have a default.toml file indicating the port values to expose.</source>
          <target state="translated">&lt;code&gt;pkg_exports&lt;/code&gt; 에 정의한 키를 지정하는 것 외에도 노출 할 포트 값을 나타내는 default.toml 파일이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5c384c1ca4c4606356be22f42537766efa41be2a" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;pkg_binds&lt;/code&gt; array, Plan authors may also specify &lt;code&gt;pkg_binds_optional&lt;/code&gt;. It has exactly the same structure as &lt;code&gt;pkg_binds&lt;/code&gt;, but, as the name implies, these bindings are &lt;em&gt;optional&lt;/em&gt;; however, it is worth examining exactly what is meant by &amp;ldquo;optional&amp;rdquo; in this case.</source>
          <target state="translated">&lt;code&gt;pkg_binds&lt;/code&gt; 배열 외에도 계획 작성자는 &lt;code&gt;pkg_binds_optional&lt;/code&gt; 을 지정할 수도 있습니다 . &lt;code&gt;pkg_binds&lt;/code&gt; 와 정확히 동일한 구조를 갖지만 이름에서 알 수 있듯이 이러한 바인딩은 &lt;em&gt;선택 사항입니다&lt;/em&gt; . 그러나이 경우 &quot;선택 사항&quot;이 무엇을 의미하는지 정확히 살펴 보는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="19c5cf341a8e724ec359f55c4757f5d422efac36" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;shared&lt;/code&gt; sub-directory, the deploy process will create sub-directories named &lt;code&gt;releases&lt;/code&gt; and &lt;code&gt;current&lt;/code&gt; (also in the &lt;code&gt;deploy&lt;/code&gt; directory). The &lt;code&gt;release&lt;/code&gt; directory holds (up to) five most recently deployed versions of an application. The &lt;code&gt;current&lt;/code&gt; directory holds the currently-released version.</source>
          <target state="translated">&lt;code&gt;shared&lt;/code&gt; 하위 디렉토리 외에도 배포 프로세스는 &lt;code&gt;releases&lt;/code&gt; 및 &lt;code&gt;current&lt;/code&gt; ( 및 &lt;code&gt;deploy&lt;/code&gt; 디렉토리) 라는 하위 디렉토리를 만듭니다 . &lt;code&gt;release&lt;/code&gt; 디렉토리는 응용 프로그램의 다섯 개 가장 최근에 배포 된 버전 (까지) 보유하고 있습니다. &lt;code&gt;current&lt;/code&gt; 디렉토리는 현재 출시 된 버전을 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="42f0678a8b3cad91b47ae6d7a13916f16dbeb250" translate="yes" xml:space="preserve">
          <source>In addition to the Verify checks, the Build stage provides three additional phases:</source>
          <target state="translated">확인 검사 외에도 빌드 단계는 세 가지 추가 단계를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d03f5311fbf91bf38dd32598a99e6cf120cd540d" translate="yes" xml:space="preserve">
          <source>In addition to the above methods, users can specify &lt;code&gt;chef_license 'accept'&lt;/code&gt; in their Chef Infra Client and Chef Infra Server config. On a workstation, this can be specified in &lt;code&gt;~/.chef/config.rb&lt;/code&gt; or &lt;code&gt;~/.chef/knife.rb&lt;/code&gt;, and on a node, it can be specified in &lt;code&gt;/etc/chef/client.rb&lt;/code&gt;. This method of license acceptance is backwards-compatible to non-EULA versions of Chef Infra Client.</source>
          <target state="translated">위의 방법 외에도 사용자는 Chef Infra Client 및 Chef Infra Server 구성에서 &lt;code&gt;chef_license 'accept'&lt;/code&gt; 를 지정할 수 있습니다 . 워크 스테이션에서는 &lt;code&gt;~/.chef/config.rb&lt;/code&gt; 또는 &lt;code&gt;~/.chef/knife.rb&lt;/code&gt; 에서 지정할 수 있고 노드에서는 &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; 에서 지정할 수 있습니다 . 이 라이선스 수락 방법은 Chef Infra Client의 비 EULA 버전과 역 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="14caf7f71aa800d1d4867bb8e7758caf3e902acc" translate="yes" xml:space="preserve">
          <source>In addition to the default install behavior, the Chef Software Install script supports the following options:</source>
          <target state="translated">기본 설치 동작 외에도 Chef 소프트웨어 설치 스크립트는 다음 옵션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2be0928c69ec88f9c8363c7744cecb0e7ea010ae" translate="yes" xml:space="preserve">
          <source>In addition to the default settings in a &lt;code&gt;config.rb&lt;/code&gt; file, there are other subcommand-specific settings that can be added:</source>
          <target state="translated">&lt;code&gt;config.rb&lt;/code&gt; 파일 의 기본 설정 외에도 추가 할 수있는 다른 하위 명령 별 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f47d947eba7f427cb553b39857311982f88993f" translate="yes" xml:space="preserve">
          <source>In addition to the default settings in a knife config.rb file, there are other subcommand-specific settings that can be added. When a subcommand is run, knife will use:</source>
          <target state="translated">knife config.rb 파일의 기본 설정 외에도 추가 할 수있는 다른 하위 명령 별 설정이 있습니다. 하위 명령이 실행되면 knife는 다음을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="573e17e899694fb831be9dfbaeecc32b286492ba" translate="yes" xml:space="preserve">
          <source>In addition to the default settings in a knife.rb file, there are other subcommand-specific settings that can be added. When a subcommand is run, knife will use:</source>
          <target state="translated">knife.rb 파일의 기본 설정 외에도 추가 할 수있는 다른 하위 명령 별 설정이 있습니다. 하위 명령이 실행될 때 knife는 다음을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4892df9f0b5494208cb8443ec34cc1b534d0abef" translate="yes" xml:space="preserve">
          <source>In addition, Chef InSpec supports Input Plugins, which can provide optional integrations to specific key-value stores.</source>
          <target state="translated">또한 Chef InSpec은 특정 키-값 저장소에 대한 선택적 통합을 제공 할 수있는 입력 플러그인을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4b98eebdd9616f953e608b8f301d27ff4fbd8260" translate="yes" xml:space="preserve">
          <source>In addition, SSE allows comments in the stream, indicated by a starting colon. Push Jobs Server uses comments to send &amp;ldquo;no-op&amp;rdquo; events every 15 (configurable) seconds, as a form of keepalive for the socket.</source>
          <target state="translated">또한 SSE는 시작 콜론으로 표시된 스트림에서 주석을 허용합니다. Push Jobs Server는 소켓에 대한 연결 유지의 한 형태로 주석을 사용하여 15 초 (구성 가능)마다 &quot;no-op&quot;이벤트를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="71973a69c5fc29a7d23985eac16a92671556d56b" translate="yes" xml:space="preserve">
          <source>In addition, add Chef Automate&amp;rsquo;s TLS certificate to Builder&amp;rsquo;s list of accepted certificates. Locate Chef Automate&amp;rsquo;s default self-signed certificate by running &lt;code&gt;cat /hab/svc/automate-load-balancer/data/automate.example.com.cert&lt;/code&gt;, copy this default certificate, and then add it to your Builder instance&amp;rsquo;s list of accepted certificates.</source>
          <target state="translated">또한 Chef Automate의 TLS 인증서를 Builder의 허용 된 인증서 목록에 추가합니다. &lt;code&gt;cat /hab/svc/automate-load-balancer/data/automate.example.com.cert&lt;/code&gt; 를 실행하여 Chef Automate의 기본 자체 서명 인증서를 찾고 ,이 기본 인증서를 복사 한 다음 빌더 인스턴스의 허용 인증서 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="46ed3792b1882be2a466d2bd246029fb3d8deda4" translate="yes" xml:space="preserve">
          <source>In addition, for inherited profiles:</source>
          <target state="translated">또한 상속 된 프로필의 경우 :</target>
        </trans-unit>
        <trans-unit id="dafb0165e7b40e940ed29b2382787fdc4e3d959e" translate="yes" xml:space="preserve">
          <source>In addition, multiple service groups can reside in the same Supervisor network. This allows data exposed by Supervisors to be shared with other members of the ring, regardless of which group they are in.</source>
          <target state="translated">또한 여러 서비스 그룹이 동일한 Supervisor 네트워크에 상주 할 수 있습니다. 이를 통해 감독자가 노출 한 데이터는 소속 그룹에 관계없이 링의 다른 구성원과 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac021c565f0a59017399bb08645c1bdd8111f9e4" translate="yes" xml:space="preserve">
          <source>In addition, pages must be placed in the left navigation menu properly. This may involve moving other pages up or down in the left navigation menu by increasing or decreasing their menu weight which is specified in TOML front matter of each page or possibly in the &lt;code&gt;config.toml&lt;/code&gt; file.</source>
          <target state="translated">또한 페이지는 왼쪽 탐색 메뉴에 올바르게 배치되어야합니다. 여기에는 각 페이지의 TOML 서문 또는 &lt;code&gt;config.toml&lt;/code&gt; 파일에 지정된 메뉴 가중치를 늘리거나 줄여 왼쪽 탐색 메뉴에서 다른 페이지를 위나 아래로 이동하는 것이 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29e4400f21d963a3efb5346c89060ffd0c1bf38e" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler&lt;/a&gt; resource is configured and run using the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook, which is the location in which custom handlers are defined and maintained. Despite being defined in a cookbook (as a custom resource), the &lt;strong&gt;chef_handler&lt;/strong&gt; resource should otherwise be considered a &amp;ldquo;platform resource&amp;rdquo;.</source>
          <target state="translated">또한 &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler&lt;/a&gt; 자원은 사용자 정의 핸들러가 정의 및 유지 보수되는 위치 인 &lt;strong&gt;chef_handler&lt;/strong&gt; 요리 책을 사용하여 구성 및 실행됩니다 . 쿡북 (사용자 정의 리소스)에 정의되어 있지만 &lt;strong&gt;chef_handler&lt;/strong&gt; 리소스는 그렇지 않으면 &quot;플랫폼 리소스&quot;로 간주해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e7b36004503559c264aaf52a5e3d43b452a2742" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;elasticsearch&lt;/code&gt; resource allows for filtering the nodes returned by property before executing the tests:</source>
          <target state="translated">또한 &lt;code&gt;elasticsearch&lt;/code&gt; 리소스를 사용하면 테스트를 실행하기 전에 속성에서 반환 한 노드를 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18bbdecf4997794d0eb4b5d23377aee4408d46c7" translate="yes" xml:space="preserve">
          <source>In addition, the Chef license can be accepted via the omnibus configuration file. Specify &lt;code&gt;chef_license 'accept'&lt;/code&gt; in the &lt;code&gt;chef-server.rb&lt;/code&gt; or &lt;code&gt;supermarket.rb&lt;/code&gt; configuration.</source>
          <target state="translated">또한 옴니버스 구성 파일을 통해 Chef 라이선스를 수락 할 수 있습니다. &lt;code&gt;chef-server.rb&lt;/code&gt; 또는 &lt;code&gt;supermarket.rb&lt;/code&gt; 구성 에서 &lt;code&gt;chef_license 'accept'&lt;/code&gt; 를 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6eabe0fe02d72d60e846fd39d62b55953b9fb0c8" translate="yes" xml:space="preserve">
          <source>In addition, the log file may contain additional entries that detail the amounts of time spent interacting with other services:</source>
          <target state="translated">또한 로그 파일에는 다른 서비스와의 상호 작용에 소요 된 시간을 자세히 설명하는 추가 항목이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="230de503e86545127d8b4f7cd90d3fb97c7616e6" translate="yes" xml:space="preserve">
          <source>In addition, you can make use of the &lt;code&gt;subject&lt;/code&gt; keyword to further control your output if you choose:</source>
          <target state="translated">또한 다음을 선택하면 출력을 추가로 제어하기 위해 &lt;code&gt;subject&lt;/code&gt; 키워드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea17f2db46fdcff64347e110a9a5f7ae5285ba3f" translate="yes" xml:space="preserve">
          <source>In addition:</source>
          <target state="translated">게다가:</target>
        </trans-unit>
        <trans-unit id="e6580fffa3a077c1cc5caefcc620db2cbc81ee96" translate="yes" xml:space="preserve">
          <source>In all cases (beyond community support), a maintenance contract with Chef Software Inc. is required in order to open support tickets and get SLA-based assistance from our support desk.</source>
          <target state="translated">모든 경우 (커뮤니티 지원 이외)에서 지원 티켓을 열고 지원 데스크에서 SLA 기반 지원을 받으려면 Chef Software Inc.와의 유지 관리 계약이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="764c5bd919032d2b8500b4e25abfa57f00f041f9" translate="yes" xml:space="preserve">
          <source>In all cases, when Chef Habitat is assuming a default strategy, it will emit log messages to notify you of that along with instructions on how to change the behavior.</source>
          <target state="translated">모든 경우에 Chef Habitat이 기본 전략을 가정 할 때 동작 변경 방법에 대한 지침과 함께이를 알리는 로그 메시지를 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="721cdee22ff8c1928d1fa5f4ea9ffea76d3b3aa6" translate="yes" xml:space="preserve">
          <source>In all cases, you may wish to run &lt;code&gt;hab svc unload &amp;lt;yourorigin&amp;gt;/&amp;lt;yourname&amp;gt;&lt;/code&gt; when you are done working with your package, to remove it from the Supervisor. Otherwise, your Supervisor will try to start your service each time it start up.</source>
          <target state="translated">모든 경우에 패키지 작업이 완료되면 &lt;code&gt;hab svc unload &amp;lt;yourorigin&amp;gt;/&amp;lt;yourname&amp;gt;&lt;/code&gt; 을 실행 하여 Supervisor에서 제거 할 수 있습니다. 그렇지 않으면 감독자가 서비스를 시작할 때마다 서비스를 시작하려고합니다.</target>
        </trans-unit>
        <trans-unit id="58aaae96e36fa8c74d590a189218bfd62501090a" translate="yes" xml:space="preserve">
          <source>In an environment that requires proxies to reach the Internet, many Chef commands will not work until they are configured correctly. To configure Chef to work in an environment that requires proxies, set the &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, &lt;code&gt;ftp_proxy&lt;/code&gt;, and/or &lt;code&gt;no_proxy&lt;/code&gt; environment variables to specify the proxy settings using a lowercase value.</source>
          <target state="translated">프록시가 인터넷에 연결되어야하는 환경에서는 많은 Chef 명령이 올바르게 구성 될 때까지 작동하지 않습니다. Chef가 프록시가 필요한 환경에서 작동하도록 구성하려면 &lt;code&gt;http_proxy&lt;/code&gt; , &lt;code&gt;https_proxy&lt;/code&gt; , &lt;code&gt;ftp_proxy&lt;/code&gt; 및 / 또는 &lt;code&gt;no_proxy&lt;/code&gt; 환경 변수를 설정하여 소문자 값을 사용하여 프록시 설정을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="1c123eeea215e49ab0ff69c43aea5d19208cbabe" translate="yes" xml:space="preserve">
          <source>In an existing &lt;a href=&quot;#main-cookbook-development-location&quot;&gt;cookbook development directory&lt;/a&gt;</source>
          <target state="translated">기존 &lt;a href=&quot;#main-cookbook-development-location&quot;&gt;요리 책 개발 디렉토리&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b59edaf8d8972a07f4ed3313eb39d4c92258a5" translate="yes" xml:space="preserve">
          <source>In an expanded run-list</source>
          <target state="translated">확장 된 실행 목록에서</target>
        </trans-unit>
        <trans-unit id="80e55e2132be52e5e09dde5d1daba06bf1426b3e" translate="yes" xml:space="preserve">
          <source>In both cases, Chef Infra Client will use the default action (&lt;code&gt;:install&lt;/code&gt;) to install the &lt;code&gt;tar&lt;/code&gt; package.</source>
          <target state="translated">두 경우 모두 Chef Infra Client는 기본 작업 ( &lt;code&gt;:install&lt;/code&gt; )을 사용하여 &lt;code&gt;tar&lt;/code&gt; 패키지 를 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="de04d32794dccb880453f2ad85961169dda83ddd" translate="yes" xml:space="preserve">
          <source>In both cases, if the resource is not found, an exception is returned.</source>
          <target state="translated">두 경우 모두 리소스를 찾을 수 없으면 예외가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="96ba307ac6b20934cfe4cfd99422c5b3d8c10ecb" translate="yes" xml:space="preserve">
          <source>In both cases, the chef-client will use the default action (&lt;code&gt;:install&lt;/code&gt;) to install the &lt;code&gt;tar&lt;/code&gt; package.</source>
          <target state="translated">두 경우 모두 chef-client는 기본 조치 ( &lt;code&gt;:install&lt;/code&gt; )를 사용하여 &lt;code&gt;tar&lt;/code&gt; 패키지 를 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="b5656528cd0115a265eb0da47c65fe3bd1e7f132" translate="yes" xml:space="preserve">
          <source>In certain situations it may be useful to stop a Chef Infra Client run entirely by using an unhandled exception. The &lt;code&gt;raise&lt;/code&gt; keyword can be used to stop a Chef Infra Client run in both the compile and execute phases.</source>
          <target state="translated">특정 상황에서는 처리되지 않은 예외를 사용하여 Chef Infra Client 실행을 완전히 중지하는 것이 유용 할 수 있습니다. &lt;code&gt;raise&lt;/code&gt; 키워드는 컴파일 모두에서 요리사 인프라 클라이언트 실행을 중지하고 단계를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5db3b049abd17c0c39d103d38aa5728f535b4c25" translate="yes" xml:space="preserve">
          <source>In certain situations it may be useful to stop a chef-client run entirely by using an unhandled exception. The &lt;code&gt;raise&lt;/code&gt; and &lt;code&gt;fail&lt;/code&gt; keywords can be used to stop a chef-client run in both the compile and execute phases.</source>
          <target state="translated">특정 상황에서는 처리되지 않은 예외를 사용하여 요리사 클라이언트 실행을 완전히 중지하는 것이 유용 할 수 있습니다. &lt;code&gt;raise&lt;/code&gt; 과 &lt;code&gt;fail&lt;/code&gt; 키워드는 컴파일 모두에서 요리사 클라이언트 실행을 중지하고 단계를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fd9fa0e4c83e2bdbc6546c33406e26aa418d900" translate="yes" xml:space="preserve">
          <source>In certain situations the proxy used by the Chef Infra Server requires authentication. In this situation, three settings must be added to the configuration file. Which settings to add depends on the protocol used to access the Chef Infra Server: HTTP or HTTPS.</source>
          <target state="translated">특정 상황에서 Chef Infra Server에서 사용하는 프록시에는 인증이 필요합니다. 이 경우 세 가지 설정을 구성 파일에 추가해야합니다. 추가 할 설정은 Chef Infra Server에 액세스하는 데 사용되는 프로토콜 (HTTP 또는 HTTPS)에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2cdbb57ef2267f8fdfaca7148251ac567a34ed83" translate="yes" xml:space="preserve">
          <source>In certain situations the proxy used by the Chef server requires authentication. In this situation, three settings must be added to the configuration file. Which settings to add depends on the protocol used to access the Chef server: HTTP or HTTPS.</source>
          <target state="translated">특정 상황에서 Chef 서버가 사용하는 프록시에는 인증이 필요합니다. 이 경우 구성 파일에 세 가지 설정을 추가해야합니다. 추가 할 설정은 Chef 서버에 액세스하는 데 사용되는 프로토콜 (HTTP 또는 HTTPS)에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f098afe2beaa8f78ffb6fe6935228903a62c0134" translate="yes" xml:space="preserve">
          <source>In certain situations this option may be used to update &lt;code&gt;normal&lt;/code&gt; attributes.</source>
          <target state="translated">경우에 따라이 옵션을 사용하여 &lt;code&gt;normal&lt;/code&gt; 속성 을 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45c93e9ac183db219b3dc54a8db13f90dbb89523" translate="yes" xml:space="preserve">
          <source>In chef-shell, it is possible to get extremely verbose debugging using the tracing feature in Interactive Ruby (IRb). chef-shell provides a shortcut for turning tracing on and off. For example:</source>
          <target state="translated">chef-shell에서는 대화식 루비 (IRb)의 추적 기능을 사용하여 매우 자세한 디버깅을 수행 할 수 있습니다. chef-shell은 추적을 켜고 끄는 바로 가기를 제공합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d053efa012c41074bf881ba605152d35bc821a3" translate="yes" xml:space="preserve">
          <source>In chef-shell, it is possible to get verbose debugging using the tracing feature in Interactive Ruby (IRb). chef-shell provides a shortcut for turning tracing on and off. For example:</source>
          <target state="translated">Chef-shell에서는 Interactive Ruby (IRb)의 추적 기능을 사용하여 자세한 디버깅을 얻을 수 있습니다. chef-shell은 추적을 켜고 끄는 단축키를 제공합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="52da5999f72c3f0f7f6cc50970f0af0fe56186be" translate="yes" xml:space="preserve">
          <source>In code review, team members can comment on the diffs. If more changes are required, they can be made either as additional commits on top of the originally submitted feature branch, or the commit(s) can be reworked using &lt;code&gt;git commit --amend&lt;/code&gt; and &lt;code&gt;git rebase&lt;/code&gt;.</source>
          <target state="translated">코드 검토에서 팀 구성원은 차이점에 대해 설명 할 수 있습니다. 더 많은 변경이 필요한 경우 원래 제출 된 기능 브랜치 위에 추가 커밋으로 만들거나 &lt;code&gt;git commit --amend&lt;/code&gt; 및 &lt;code&gt;git rebase&lt;/code&gt; 를 사용하여 커밋을 재 작업 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3619ca66da4b2c4f0a346c37826d9719ef2760c0" translate="yes" xml:space="preserve">
          <source>In common use, the gossip protocol becomes inactive; if there are no rumors to send to a given member, nothing is sent.</source>
          <target state="translated">일반적으로 가십 프로토콜은 비활성화됩니다. 특정 회원에게 보낼 소문이 없으면 아무 것도 보내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a3dea76d6c1a4771e69f1bcd0d67e8a47583ea3e" translate="yes" xml:space="preserve">
          <source>In current versions of Chef, &lt;code&gt;nil&lt;/code&gt; was often used to mean that a property had no good default, and needed to be set by the user. However, it is often to useful to set a property to &lt;code&gt;nil&lt;/code&gt;, meaning that it&amp;rsquo;s not set and should be ignored. In Chef Client 13, it is an error to set &lt;code&gt;default: nil&lt;/code&gt; on a property if that property doesn&amp;rsquo;t allow &lt;code&gt;nil&lt;/code&gt; as a valid value.</source>
          <target state="translated">현재 버전의 Chef에서 &lt;code&gt;nil&lt;/code&gt; 은 속성에 좋은 기본값이 없으며 사용자가 설정해야 함을 의미하는 데 자주 사용되었습니다. 그러나 속성을 &lt;code&gt;nil&lt;/code&gt; 로 설정하는 것이 유용합니다 . 즉, 설정되지 않았으므로 무시해야합니다. Chef Client 13에서 속성이 &lt;code&gt;nil&lt;/code&gt; 을 유효한 값으로 허용하지 않는 경우 속성에 &lt;code&gt;default: nil&lt;/code&gt; 을 설정하는 것은 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="430dffbd142a1f2b8a3046dd655e11520758fc0f" translate="yes" xml:space="preserve">
          <source>In fact, the subprocess wins (because it has to) and this code will result in the content always being nil and the file being empty. The output of the &lt;code&gt;puts&lt;/code&gt; debugging will be correct, however, since &lt;code&gt;content&lt;/code&gt; is being accessed outside of the file resource scope so it acquires it from the &lt;code&gt;new_resource&lt;/code&gt; implicitly (in Chef Client 12.5.1 and Chef Client 13.x)</source>
          <target state="translated">사실, 하위 프로세스가 이기고 (그럴 필요가 있기 때문에)이 코드는 내용이 항상 nil이고 파일이 비어있게합니다. 그러나 &lt;code&gt;content&lt;/code&gt; 가 파일 리소스 범위 외부에서 액세스되고 있으므로 &lt;code&gt;new_resource&lt;/code&gt; 에서 암시 적으로 획득하므로 (Chef Client 12.5.1 및 Chef Client 13.x에서) &lt;code&gt;puts&lt;/code&gt; 디버깅 의 출력은 정확합니다.</target>
        </trans-unit>
        <trans-unit id="5c320d48b6a7545d2b12c64a479cb64b71e1285f" translate="yes" xml:space="preserve">
          <source>In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified.</source>
          <target state="translated">일반적으로 속성 우선 순위는 요리 책 및 역할이 속성 기본값을 정의하고, 일반 속성이 노드에 고유해야하는 값을 정의하고, 노드에 이미 해당 값이있는 경우에도 특정 값을 강제 적용하도록 속성을 대체하도록 설정됩니다. 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="488bf5d1ffac15ef619088e5f42acd125802742f" translate="yes" xml:space="preserve">
          <source>In general, for production environments Chef recommends to start running Chef Supermarket with small virtual machines, and then increase the size of the virtual machine as necessary. Put the &lt;code&gt;/var/opt/supermarket&lt;/code&gt; directory on a separate disk, and then use LVM so that may be expanded.</source>
          <target state="translated">일반적으로 프로덕션 환경의 경우 Chef는 소규모 가상 머신으로 Chef Supermarket을 실행 한 다음 필요에 따라 가상 머신의 크기를 늘리는 것이 좋습니다. 풋 &lt;code&gt;/var/opt/supermarket&lt;/code&gt; 별도의 디스크에 디렉토리를, 그리고 그 확장 될 수 있도록 다음 LVM을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="31afe976802ab922e1a69724b97113d16c5b967f" translate="yes" xml:space="preserve">
          <source>In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section heading. Notes and warnings have a different color than the surrounding text so they can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows.</source>
          <target state="translated">일반적으로 메모와 경고는 중요한 정보를 표시하는 가장 좋은 방법이 아닙니다. 사용하기 전에 정보가 얼마나 중요한지 스스로에게 물어보십시오. 정보가 검색 결과에 반환되도록하려면 정보에 자체 주제 또는 섹션 제목이있는 것이 좋습니다. 메모 및 경고는 주변 텍스트와 색상이 다르므로 문서 내에서 쉽게 찾을 수 있습니다. 참고 및 경고를 사용해야하는 경우 사용 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aede350a28cd698ba96d1b5878dad3e89273f096" translate="yes" xml:space="preserve">
          <source>In general, the API client list should be managed using knife or the Chef server management console, as opposed to the Chef server API.</source>
          <target state="translated">일반적으로 API 클라이언트 목록은 Chef 서버 API가 아닌 knife 또는 Chef 서버 관리 콘솔을 사용하여 관리해야합니다.</target>
        </trans-unit>
        <trans-unit id="89969a96a847b668d1f50a9fea48c68f2e5da72d" translate="yes" xml:space="preserve">
          <source>In general, try to avoid Ruby&amp;rsquo;s IO calls from within Chef InSpec controls and use Chef InSpec resources instead.</source>
          <target state="translated">일반적으로 Chef InSpec 컨트롤 내에서 Ruby의 IO 호출을 피하고 대신 Chef InSpec 리소스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="938d4cc3d3cffc93456603e89b2bb67c77059796" translate="yes" xml:space="preserve">
          <source>In general, use the &lt;code&gt;test&lt;/code&gt; subcommand to verify the end-to-end quality of a cookbook. Use the &lt;code&gt;converge&lt;/code&gt; and &lt;code&gt;verify&lt;/code&gt; subcommands during the normal day-to-day development of a cookbook.</source>
          <target state="translated">일반적으로 &lt;code&gt;test&lt;/code&gt; 하위 명령을 사용하여 요리 책의 종단 간 품질을 확인합니다. 요리 책을 일상적으로 개발하는 동안 &lt;code&gt;converge&lt;/code&gt; 및 &lt;code&gt;verify&lt;/code&gt; 하위 명령을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="843be9f6114de1ea24772d2832ae663a5a2d8d34" translate="yes" xml:space="preserve">
          <source>In general, use the &lt;code&gt;test&lt;/code&gt; subcommand to verify the end-to-end quality of a cookbook. Use the &lt;code&gt;converge&lt;/code&gt; and &lt;code&gt;verify&lt;/code&gt; subcommands during the normal the day-to-day development of a cookbook.</source>
          <target state="translated">일반적으로 &lt;code&gt;test&lt;/code&gt; 하위 명령을 사용하여 요리 책의 종단 간 품질을 확인합니다. 요리 책을 일상적으로 개발하는 동안 &lt;code&gt;converge&lt;/code&gt; 및 &lt;code&gt;verify&lt;/code&gt; 하위 명령을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="cdb76b154325d039481cd1c691c6cd66e8642a45" translate="yes" xml:space="preserve">
          <source>In general, use this approach carefully and only after it is determined that nil or empty values won&amp;rsquo;t provide the expected result.</source>
          <target state="translated">일반적으로 nil 또는 empty 값이 예상 결과를 제공하지 않는 것으로 확인 된 후에 만이 방법을주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="70357fb3388580d56182fbd2cb4650b02a30fbd3" translate="yes" xml:space="preserve">
          <source>In instances that require cookbooks to be stored within a SQL backend, such as in a high availability setup, you must set &lt;code&gt;storage_type&lt;/code&gt; to &lt;code&gt;:sql&lt;/code&gt;:</source>
          <target state="translated">고 가용성 설정과 같이 SQL 백엔드 내에 쿡북을 저장해야하는 경우 &lt;code&gt;storage_type&lt;/code&gt; 을 &lt;code&gt;:sql&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="75441722c549bf878ca4646651cd5343b37124b1" translate="yes" xml:space="preserve">
          <source>In instances that require cookbooks to be stored within a SQL backend, such as in a high availability setup, you must set the &lt;code&gt;storage_type&lt;/code&gt; to &lt;code&gt;:sql&lt;/code&gt;:</source>
          <target state="translated">고 가용성 설정과 같이 SQL 백엔드 내에 쿡북을 저장해야하는 인스턴스에서는 &lt;code&gt;storage_type&lt;/code&gt; 을 &lt;code&gt;:sql&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4f4897148ccfaef4398141bc72a41fe0edc0be39" translate="yes" xml:space="preserve">
          <source>In its simplest form, &lt;code&gt;chef-run&lt;/code&gt; targets a single machine and execute a single resource on that machine:</source>
          <target state="translated">가장 간단한 형태로 &lt;code&gt;chef-run&lt;/code&gt; 은 단일 시스템을 대상으로하고 해당 시스템에서 단일 리소스를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="1115877ce4e9b8ba7fb224f072bb5a2f2b1d0700" translate="yes" xml:space="preserve">
          <source>In kitchen-inspec, using the &lt;code&gt;verifier/inputs&lt;/code&gt; settings</source>
          <target state="translated">kitchen-inspec에서 &lt;code&gt;verifier/inputs&lt;/code&gt; 설정 사용</target>
        </trans-unit>
        <trans-unit id="28145914f96bad05afb932c52bb4ab119e613c7b" translate="yes" xml:space="preserve">
          <source>In large, distributed organizations the ability to modify the configuration of systems is sometimes segmented across teams, often with varying levels of access to those systems. For example, core application services may be deployed to systems by a central server provisioning team, and then developers on different teams build tooling to support specific applications. In this situation, a developer only requires limited access to machines and only needs to perform the operations that are necessary to deploy tooling for a specific application.</source>
          <target state="translated">대규모의 분산 된 조직에서는 시스템 구성을 수정하는 기능이 팀별로 세분화되어 있으며 종종 해당 시스템에 대한 액세스 수준이 다릅니다. 예를 들어 중앙 서버 프로비저닝 팀이 핵심 응용 프로그램 서비스를 시스템에 배포 한 다음 다른 팀의 개발자가 특정 응용 프로그램을 지원하기위한 도구를 작성합니다. 이 상황에서 개발자는 머신에 대한 제한된 액세스 만 필요하며 특정 애플리케이션에 대한 툴링을 배치하는 데 필요한 조작 만 수행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="720cffafdc29c45a9956f46694ba7dadc4742991" translate="yes" xml:space="preserve">
          <source>In many cases, it is better to use the &lt;strong&gt;package&lt;/strong&gt; resource instead of this one. This is because when the &lt;strong&gt;package&lt;/strong&gt; resource is used in a recipe, Chef Infra Client will use details that are collected by Ohai at the start of a Chef Infra Client run to determine the correct package application. Using the &lt;strong&gt;package&lt;/strong&gt; resource allows a recipe to be authored in a way that allows it to be used across many platforms.</source>
          <target state="translated">대부분 의 경우이 리소스 대신 &lt;strong&gt;패키지&lt;/strong&gt; 리소스 를 사용하는 것이 좋습니다 . 이는 &lt;strong&gt;패키지&lt;/strong&gt; 리소스가 레시피에서 사용될 때 Chef Infra Client가 Chef Infra Client 실행을 시작할 때 Ohai가 수집 한 세부 정보를 사용하여 올바른 패키지 애플리케이션을 결정하기 때문입니다. 은 Using &lt;strong&gt;패키지&lt;/strong&gt; 자원은 조리법이 많은 플랫폼에서 사용할 수있게하는 방식으로 작성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abd2855f5102bac9c9dab545385962ba077c806e" translate="yes" xml:space="preserve">
          <source>In many cases, it is better to use the &lt;strong&gt;package&lt;/strong&gt; resource instead of this one. This is because when the &lt;strong&gt;package&lt;/strong&gt; resource is used in a recipe, the chef-client will use details that are collected by Ohai at the start of the chef-client run to determine the correct package application. Using the &lt;strong&gt;package&lt;/strong&gt; resource allows a recipe to be authored in a way that allows it to be used across many platforms.</source>
          <target state="translated">대부분 의 경우이 리소스 대신 &lt;strong&gt;패키지&lt;/strong&gt; 리소스 를 사용하는 것이 좋습니다 . 이는 &lt;strong&gt;패키지&lt;/strong&gt; 리소스가 레시피에 사용될 때 chef-client가 chef-client 실행이 시작될 때 Ohai가 수집 한 세부 사항을 사용하여 올바른 패키지 애플리케이션을 결정하기 때문입니다. 은 Using &lt;strong&gt;패키지&lt;/strong&gt; 자원은 조리법이 많은 플랫폼에서 사용할 수있게하는 방식으로 작성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b857174eae93b875e647adad806b80d5c88ba8cb" translate="yes" xml:space="preserve">
          <source>In many organizations, a suite of security tests must be run before a change can be deployed. The Build phase is the place to run such scans and checks. (You can also add compliance checks into the functional test suites that run against the deployed artifacts.)</source>
          <target state="translated">많은 조직에서 변경 사항을 배포하기 전에 보안 테스트 모음을 실행해야합니다. 빌드 단계는 이러한 스캔 및 검사를 실행하는 장소입니다. (배포 된 아티팩트에 대해 실행되는 기능 테스트 스위트에 준수 검사를 추가 할 수도 있습니다.)</target>
        </trans-unit>
        <trans-unit id="2ecd57b56f866c175d9ee6524cd5719e15b0ea67" translate="yes" xml:space="preserve">
          <source>In most cases, the exception handling available within knife is enough to ensure that exception handling for a plugin is consistent with how knife ordinarily behaves. That said, exceptions can also be handled within a knife plugin in the same way they are handled in any Ruby program.</source>
          <target state="translated">대부분의 경우, knife 내에서 사용 가능한 예외 처리는 플러그인에 대한 예외 처리가 knife가 일반적으로 작동하는 방식과 일치하는지 확인하기에 충분합니다. 즉, 예외는 Ruby 프로그램에서 처리되는 것과 동일한 방식으로 knife 플러그인 내에서 처리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96164a31cbe44fff73b67d0ae88e3a5b49556159" translate="yes" xml:space="preserve">
          <source>In most cases, using the empty values for the layout modifiers will prevent the chef-client from passing symbolic linking information to a node during the chef-client run. However, in some cases, it may be preferable to ensure that one (or more) of these layout modifiers do not pass any symbolic linking information to a node during the chef-client run at all. Because each of these layout modifiers are a Hash, the &lt;code&gt;clear&lt;/code&gt; instance method can be used to clear out these values.</source>
          <target state="translated">대부분의 경우 레이아웃 수정 자에 빈 값을 사용하면 chef-client 실행 중에 chef-client가 기호 링크 정보를 노드에 전달하지 못하게됩니다. 그러나 어떤 경우에는 이러한 레이아웃 수정 자 중 하나 이상이 요리사-클라이언트 실행 중에 노드에 심볼릭 링크 정보를 전혀 전달하지 않는 것이 바람직 할 수 있습니다. 이러한 각 레이아웃 수정자는 해시이므로 &lt;code&gt;clear&lt;/code&gt; instance 메서드를 사용하여 이러한 값을 지울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0b1761fd3323215156da40b4bf6d33c7b2401f4" translate="yes" xml:space="preserve">
          <source>In most cases, you should always start up a Supervisor explicitly, using &lt;code&gt;hab sup run&lt;/code&gt;&lt;em&gt;without&lt;/em&gt; a package identifier argument, &lt;em&gt;especially&lt;/em&gt; in production environments.</source>
          <target state="translated">대부분의 경우 &lt;em&gt;특히&lt;/em&gt; 프로덕션 환경에서 패키지 식별자 인수 &lt;em&gt;없이 &lt;/em&gt; &lt;code&gt;hab sup run&lt;/code&gt; &lt;em&gt;을&lt;/em&gt; 사용하여 항상 명시 적으로 Supervisor를 시작해야 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5933eef4c42eda6a37859752c57c4e6e99badac" translate="yes" xml:space="preserve">
          <source>In most scenarios, converting the standby Chef Automate server to a standalone configuration is the simplest way to get Chef Automate itself back up and running, after which you can rebuild a standby server, update the IP address for the standby server, and then reconfigure the Chef Automate configuration to have a primary and standby server.</source>
          <target state="translated">대부분의 시나리오에서 대기 Chef Automate 서버를 독립 실행 형 구성으로 변환하는 것은 Chef Automate 자체를 백업하고 실행하는 가장 간단한 방법입니다. 그 후에 대기 서버를 재 구축하고 대기 서버의 IP 주소를 업데이트 한 다음 Chef Automate 구성은 기본 및 대기 서버를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="68ed24ed14ced41b0029a1c03ef253c4f53c64cb" translate="yes" xml:space="preserve">
          <source>In most usage cases via Chef Workstation, this license will already have been accepted and will transfer across transparently. But if a user installs Chef Workstation and the first command they ever run is &lt;code&gt;knife bootstrap&lt;/code&gt;, it will perform the same license acceptance flow as the Chef Infra Client product.</source>
          <target state="translated">Chef Workstation을 통한 대부분의 사용 사례에서이 라이선스는 이미 승인되었으며 투명하게 이전됩니다. 그러나 사용자가 Chef Workstation을 설치하고 실행 한 첫 번째 명령이 &lt;code&gt;knife bootstrap&lt;/code&gt; 인 경우 Chef Infra Client 제품과 동일한 라이선스 수락 흐름을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a6bff22bfab2d3cd7af6ba85e2b7c2114d507de5" translate="yes" xml:space="preserve">
          <source>In non-Chef Ruby, the syntax is &lt;code&gt;include&lt;/code&gt; (without the &lt;code&gt;:&lt;/code&gt; prefix), but without the &lt;code&gt;:&lt;/code&gt; prefix Chef Infra Client will try to find a provider named &lt;code&gt;include&lt;/code&gt;. Using the &lt;code&gt;:&lt;/code&gt; prefix tells Chef Infra Client to look for the specified class that follows.</source>
          <target state="translated">비 Chef Ruby에서 구문은 &lt;code&gt;include&lt;/code&gt; ( &lt;code&gt;:&lt;/code&gt; 접두사 없음)이지만 &lt;code&gt;:&lt;/code&gt; 접두사 없이 Chef Infra Client는 &lt;code&gt;include&lt;/code&gt; 라는 공급자를 찾으려고합니다 . &lt;code&gt;:&lt;/code&gt; 접두사를 사용하면 Chef Infra Client가 뒤에 오는 지정된 클래스를 찾도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="f87cc0e77f3c3bdf76378f8984038062a488c7d4" translate="yes" xml:space="preserve">
          <source>In non-Chef Ruby, the syntax is &lt;code&gt;include&lt;/code&gt; (without the &lt;code&gt;:&lt;/code&gt; prefix), but without the &lt;code&gt;:&lt;/code&gt; prefix the chef-client will try to find a provider named &lt;code&gt;include&lt;/code&gt;. Using the &lt;code&gt;:&lt;/code&gt; prefix tells the chef-client to look for the specified class that follows.</source>
          <target state="translated">비 요리사 루비에서, 구문은 다음 &lt;code&gt;include&lt;/code&gt; 합니다 (없이 &lt;code&gt;:&lt;/code&gt; 접두사),하지만하지 않고 &lt;code&gt;:&lt;/code&gt; 접두사 요리사 클라이언트라는 이름의 제공자 찾기 위해 노력할 것입니다 &lt;code&gt;include&lt;/code&gt; . &lt;code&gt;:&lt;/code&gt; 접두사를 사용하면 chef-client가 다음에 지정된 클래스를 찾도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="6a9d3fc23aeccb7bf8f0a8dc29e2dccd2e9e0daa" translate="yes" xml:space="preserve">
          <source>In older versions of Chef Client, it was not possible to discern why a chef run exited simply by examining the error code. This makes it very tricky for tools such as Test Kitchen to reason about the status of a Chef Client run. Starting in Chef Client 12.11, there are now well defined exit codes that the Chef Client can use to communicate the status of the run.</source>
          <target state="translated">이전 버전의 Chef Client에서는 단순히 오류 코드를 검사하여 Chef 실행이 종료 된 이유를 식별 할 수 없었습니다. 이로 인해 Test Kitchen과 같은 도구가 Chef Client 실행 상태를 추론하기가 매우 까다 롭습니다. Chef Client 12.11부터 이제 Chef Client가 실행 상태를 전달하는 데 사용할 수있는 잘 정의 된 종료 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4f48917ce30b8a693b4e165ba03eb72b539f060" translate="yes" xml:space="preserve">
          <source>In order for Chef Habitat&amp;rsquo;s network functionality to work, the Supervisors must first know which other Supervisors they can communicate with. This is a problem of maintaining &amp;ldquo;membership lists&amp;rdquo;, and is achieved using the membership protocol known as [SWIM][SWIM]. As detailed above, we must first &amp;ldquo;seed&amp;rdquo; a Supervisor&amp;rsquo;s membership list with at least one &amp;ldquo;peer&amp;rdquo;; that is, another Supervisor that it can communicate with.</source>
          <target state="translated">Chef Habitat의 네트워크 기능이 작동하려면 감독자가 먼저 통신 할 수있는 다른 감독자를 알아야합니다. 이것은&amp;ldquo;회원 목록&amp;rdquo;을 유지하는 문제이며 [SWIM] [SWIM]이라는 회원 프로토콜을 사용하여 달성됩니다. 위에서 설명한 바와 같이, 우리는 먼저 적어도 하나의 &quot;동료&quot;로 감독자의 회원 목록을 &quot;시드&quot;해야합니다. 즉, 통신 할 수있는 다른 감독자입니다.</target>
        </trans-unit>
        <trans-unit id="9bd697cb0a080b2b83fff31aeda593cab226b6ea" translate="yes" xml:space="preserve">
          <source>In order for your remediation to work, you need to add the provider of the benchmark, the name of the benchmark, and the version of the benchmark as metadata as the first three lines of your &lt;code&gt;config.yml&lt;/code&gt;. Add the metadata:</source>
          <target state="translated">교정이 작동하려면 벤치 마크 제공 업체, 벤치 마크 이름, 벤치 마크 버전을 &lt;code&gt;config.yml&lt;/code&gt; 의 처음 세 줄에 메타 데이터로 추가해야 합니다 . 메타 데이터를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0da1f2d13ced11fdfae3614d1bfd19d5a8f0b726" translate="yes" xml:space="preserve">
          <source>In order to add or edit users, you must have root shell access and the &lt;strong&gt;Admin&lt;/strong&gt; role assigned in Workflow.</source>
          <target state="translated">사용자를 추가하거나 편집하려면 루트 셸 액세스 권한과 워크 플로에 할당 된 &lt;strong&gt;관리자&lt;/strong&gt; 역할 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="828cdf4cc725f461d89abfefc69c86bbf4873354" translate="yes" xml:space="preserve">
          <source>In order to add runners to your &amp;ldquo;AWS OpsWorks for Chef Automate&amp;rdquo; instance you need to do the following:</source>
          <target state="translated">&quot;AWS OpsWorks for Chef Automate&quot;인스턴스에 러너를 추가하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3258c2112975bc373c1a2f574c245c3bb7dd629" translate="yes" xml:space="preserve">
          <source>In order to bootstrap the system from scratch, you should be familiar with how the Linux From Scratch project works.</source>
          <target state="translated">시스템을 처음부터 부트 스트랩하려면 Linux From Scratch 프로젝트의 작동 방식에 대해 잘 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cb9b45e4433af15b61014ffb98802bdd9a8c8e2a" translate="yes" xml:space="preserve">
          <source>In order to continually improve Chef Workstation, we collect information to help us identify bugs and understand how people interact with Chef Workstation.</source>
          <target state="translated">Chef Workstation을 지속적으로 개선하기 위해 버그를 식별하고 사람들이 Chef Workstation과 상호 작용하는 방식을 이해하는 데 도움이되는 정보를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="96cbb661aa9a139f30e52d5da94dd6e44a4d1ef2" translate="yes" xml:space="preserve">
          <source>In order to do this you need to create an Azure Service Principal that has &lt;code&gt;Owner&lt;/code&gt; rights on your ACR instance. You can do this with the following script, changing the environment variable values to match your environment.</source>
          <target state="translated">이렇게하려면 ACR 인스턴스에 대한 &lt;code&gt;Owner&lt;/code&gt; 권한 이있는 Azure 서비스 주체를 만들어야 합니다. 다음 스크립트를 사용하여 환경에 맞게 환경 변수 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d6df128322d973d1773370d11bb7fefefc3aaca" translate="yes" xml:space="preserve">
          <source>In order to have Chef Infra Server send run data from connected Chef Infra Clients, set the data collection proxy attribute to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server가 연결된 Chef Infra 클라이언트에서 실행 데이터를 보내도록하려면 데이터 수집 프록시 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="86b2db8c20f2809cae31d245901253a97786d126" translate="yes" xml:space="preserve">
          <source>In order to load a service into the Supervisor, each bind defined in &lt;code&gt;pkg_binds&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be mapped to a service group; if any of these binds are not mapped, then the Supervisor will refuse to load the service.</source>
          <target state="translated">서비스를 Supervisor로로드 &lt;em&gt;하려면 &lt;/em&gt; &lt;code&gt;pkg_binds&lt;/code&gt; 에 정의 된 각 바인드 가 서비스 그룹에 매핑 &lt;em&gt;되어야합니다&lt;/em&gt; . 이러한 바인드가 매핑되지 않은 경우 Supervisor는 서비스로드를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="544c97abba086e1b167405a5da78a8e9bdbf6224" translate="yes" xml:space="preserve">
          <source>In order to read or write 32-bit registry keys on 64-bit machines running Microsoft Windows, the &lt;code&gt;architecture&lt;/code&gt; property must be set to &lt;code&gt;:i386&lt;/code&gt;. The &lt;code&gt;:x86_64&lt;/code&gt; value can be used to force writing to a 64-bit registry location, but this value is less useful than the default (&lt;code&gt;:machine&lt;/code&gt;) because Chef Infra Client returns an exception if &lt;code&gt;:x86_64&lt;/code&gt; is used and the machine turns out to be a 32-bit machine (whereas with &lt;code&gt;:machine&lt;/code&gt;, Chef Infra Client is able to access the registry key on the 32-bit machine).</source>
          <target state="translated">Microsoft Windows를 실행하는 64 비트 컴퓨터에서 32 비트 레지스트리 키를 읽거나 쓰려면 &lt;code&gt;architecture&lt;/code&gt; 속성을 &lt;code&gt;:i386&lt;/code&gt; 으로 설정해야합니다 . &lt;code&gt;:x86_64&lt;/code&gt; 의의 값은 64 비트 레지스트리 위치에 쓰기 강제로 사용하지만,이 값은 기본값보다 유용 할 수있다 ( &lt;code&gt;:machine&lt;/code&gt; ) 경우 요리사 인프라 클라이언트가 예외를 반환하기 때문에 &lt;code&gt;:x86_64&lt;/code&gt; 에이 사용되며 기계가 밝혀 32 비트 머신 ( &lt;code&gt;:machine&lt;/code&gt; 을 사용 하면 Chef Infra Client가 32 비트 머신의 레지스트리 키에 액세스 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="f60117c08e86cbc3fbb470f1ad7958f18404696d" translate="yes" xml:space="preserve">
          <source>In order to read or write 32-bit registry keys on 64-bit machines running Microsoft Windows, the &lt;code&gt;architecture&lt;/code&gt; property must be set to &lt;code&gt;:i386&lt;/code&gt;. The &lt;code&gt;:x86_64&lt;/code&gt; value can be used to force writing to a 64-bit registry location, but this value is less useful than the default (&lt;code&gt;:machine&lt;/code&gt;) because the chef-client returns an exception if &lt;code&gt;:x86_64&lt;/code&gt; is used and the machine turns out to be a 32-bit machine (whereas with &lt;code&gt;:machine&lt;/code&gt;, the chef-client is able to access the registry key on the 32-bit machine).</source>
          <target state="translated">Microsoft Windows를 실행하는 64 비트 시스템에서 32 비트 레지스트리 키를 읽거나 쓰려면 &lt;code&gt;architecture&lt;/code&gt; 특성을 &lt;code&gt;:i386&lt;/code&gt; 으로 설정해야합니다 . &lt;code&gt;:x86_64&lt;/code&gt; 의의 값은 64 비트 레지스트리 위치에 힘 쓰기로 사용하지만,이 값은 기본값보다 유용 할 수있다 ( &lt;code&gt;:machine&lt;/code&gt; ) 경우 요리사 클라이언트가 예외를 반환하기 때문에 &lt;code&gt;:x86_64&lt;/code&gt; 에이 사용되며 기계가 밝혀 32 비트 시스템이어야합니다 ( &lt;code&gt;:machine&lt;/code&gt; 을 사용하면 chef-client가 32 비트 시스템의 레지스트리 키에 액세스 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="5771fef0180d86ae47ff9030a2ec4d26c1b2521c" translate="yes" xml:space="preserve">
          <source>In order to run a Chef Habitat-packaged service, you must first run a Chef Habitat Supervisor. There are two ways to start up a Supervisor, and it is important to know the implications of each, and which method is appropriate for your circumstances. These instructions describe the behavior of the 0.56.0 Supervisor and later, which dramatically simplified how Supervisors start up. These instructions also deal with the Supervisor &amp;ldquo;by itself&amp;rdquo;; later on, we&amp;rsquo;ll see how to integrate it into different operational scenarios (e.g., SystemD, Windows Services, etc.). It is useful to understand the underlying concepts first.</source>
          <target state="translated">Chef Habitat 패키지 서비스를 실행하려면 먼저 Chef Habitat Supervisor를 실행해야합니다. 감독자를 시작하는 방법에는 두 가지가 있으며 각각의 의미와 상황에 적합한 방법을 아는 것이 중요합니다. 이 지침은 0.56.0 Supervisor 이상의 동작을 설명하여 Supervisor의 시작 방법을 대폭 단순화했습니다. 이 지침은 또한 감독자 &quot;자체&quot;를 다룹니다. 나중에 다른 운영 시나리오 (예 : SystemD, Windows 서비스 등)에 통합하는 방법을 살펴 보겠습니다. 기본 개념을 먼저 이해하는 것이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="eafa48b188958662e11cf9049744022501eb8eae" translate="yes" xml:space="preserve">
          <source>In order to support this in containers and provide maximal flexibility, the contents of the &lt;code&gt;/hab&lt;/code&gt; directory are both readable &lt;em&gt;and writable&lt;/em&gt; by the &lt;code&gt;root&lt;/code&gt;&lt;em&gt;group&lt;/em&gt;. When specifying a user to run a container process as, the user&amp;rsquo;s primary group will be reported as &lt;code&gt;root&lt;/code&gt; if no matching group can be found in &lt;code&gt;/etc/group&lt;/code&gt;. This will allow the user to create and populate the &lt;code&gt;/hab/sup&lt;/code&gt; directory for managing Supervisor state, as well as the &lt;code&gt;/hab/svc&lt;/code&gt; directory, which will contain all the service&amp;rsquo;s state. This is in line with &lt;a href=&quot;https://docs.openshift.com/container-platform/3.3/creating_images/habitat/guidelines.html#openshift-container-platform-specific-guidelines&quot;&gt;recommendations from OpenShift&lt;/a&gt; on how to create containers that can run as a non-root user, but nothing in Chef Habitat&amp;rsquo;s implementation is specific to OpenShift; indeed, all the examples provided below use pure Docker.</source>
          <target state="translated">컨테이너에서이 기능을 지원하고 최대 유연성을 제공하기 위해,의 내용 &lt;code&gt;/hab&lt;/code&gt; 디렉토리는 모두 읽을 수 &lt;em&gt;및 쓰기&lt;/em&gt; 바이 &lt;code&gt;root&lt;/code&gt; &lt;em&gt;그룹&lt;/em&gt; . 컨테이너 프로세스를 실행할 사용자를 지정할 때 &lt;code&gt;/etc/group&lt;/code&gt; 에서 일치하는 그룹을 찾을 수없는 경우 사용자의 기본 그룹이 &lt;code&gt;root&lt;/code&gt; 로보고됩니다 . 이를 통해 사용자는 Supervisor 상태를 관리하기위한 &lt;code&gt;/hab/sup&lt;/code&gt; 디렉토리와 모든 서비스의 상태를 포함 할 &lt;code&gt;/hab/svc&lt;/code&gt; 디렉토리 를 생성하고 채울 수 있습니다. 이것은 &lt;a href=&quot;https://docs.openshift.com/container-platform/3.3/creating_images/habitat/guidelines.html#openshift-container-platform-specific-guidelines&quot;&gt;OpenShift의 권장 사항&lt;/a&gt; 과 일치 합니다.루트가 아닌 사용자로 실행할 수있는 컨테이너를 만드는 방법에 대해 설명합니다. 그러나 Chef Habitat의 구현에는 OpenShift에만 국한된 것이 없습니다. 실제로 아래 제공된 모든 예제는 순수한 Docker를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="51074611d826480d3e5bb45010066cd3182ee175" translate="yes" xml:space="preserve">
          <source>In order to target a remote Supervisor, you must have the appropriate shared secret available, as described above (either in the environment or in the &lt;code&gt;hab&lt;/code&gt; CLI configuration file), and you must also specify the specific Supervisor using the &lt;code&gt;--remote-sup&lt;/code&gt; option. The value for this option should correspond to the value of &lt;code&gt;--listen-ctl&lt;/code&gt; the Supervisor was started with; it is the address and port at which the Supervisor&amp;rsquo;s control gateway may be reached. All Supervisor interaction commands accept a &lt;code&gt;--remote-sup&lt;/code&gt; option for such targeting.</source>
          <target state="translated">원격 Supervisor를 대상으로 지정하려면 위에서 설명한대로 (환경 또는 &lt;code&gt;hab&lt;/code&gt; CLI 구성 파일에서) 적절한 공유 암호를 사용할 수 있어야하며 &lt;code&gt;--remote-sup&lt;/code&gt; 옵션을 사용하여 특정 Supervisor도 지정해야합니다. . 이 옵션의 값은 Supervisor가 시작된 &lt;code&gt;--listen-ctl&lt;/code&gt; 값과 일치해야합니다 . 감독자의 제어 게이트웨이에 도달 할 수있는 주소 및 포트입니다. 모든 Supervisor 상호 작용 명령 은 이러한 타겟팅에 대해 &lt;code&gt;--remote-sup&lt;/code&gt; 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="1e483035228b13de60afc37691322d214e953d76" translate="yes" xml:space="preserve">
          <source>In order to tell Builder about the location of the individual plan files, and in order provide more fine-grained control over when component packages are built, you can programmatically customize how and when Builder will build your plans by specifying build behavior in a &lt;code&gt;.bldr.toml&lt;/code&gt; file at the root of the repository that you connect to Builder.</source>
          <target state="translated">Builder에 개별 계획 파일의 위치를 ​​알리고 구성 요소 패키지가 빌드되는시기를보다 세밀하게 제어하기 위해 Builder가 &lt;code&gt;.bldr.toml&lt;/code&gt; 에서 빌드 동작을 지정하여 계획을 빌드하는 방법과시기를 프로그래밍 방식으로 사용자 지정할 수 있습니다. Builder에 연결하는 저장소의 루트에있는 .toml 파일.</target>
        </trans-unit>
        <trans-unit id="90d23db7ce087b5ba165e7989d9d728ae7532a93" translate="yes" xml:space="preserve">
          <source>In order to use Chef vaults you must follow hierarchical naming standard for your Chef vaults under the workflow-vaults data bag:</source>
          <target state="translated">Chef 볼트를 사용하려면 워크 플로우 볼트 데이터 백 아래에있는 Chef 볼트의 계층 적 명명 표준을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="a2d1e8875ba0cf21bd575ed023e48cc075d75c7f" translate="yes" xml:space="preserve">
          <source>In order to use TLS/SSL for the Chef Automate Web UI, the VM will automatically create and use a self-signed SSL certificate. Modern web browsers typically warn about self-signed certificates during login; however, in this case, you can ignore the warning and accept the certificate.</source>
          <target state="translated">Chef Automate 웹 UI에 TLS / SSL을 사용하기 위해 VM은 자체 서명 된 SSL 인증서를 자동으로 생성하고 사용합니다. 최신 웹 브라우저는 일반적으로 로그인 중에 자체 서명 된 인증서에 대해 경고합니다. 그러나이 경우 경고를 무시하고 인증서를 수락 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3b37d720acf9845b6bbf82b0c966c07627bbf54" translate="yes" xml:space="preserve">
          <source>In order to use TLS/SSL for the Web UI and API, the Amazon Machine Images (AMI) will automatically create and use a self-signed certificate. Modern web browsers typically warn about self-signed certificates during login; however, in this case, you can ignore the warning and accept the certificate.</source>
          <target state="translated">웹 UI 및 API에 TLS / SSL을 사용하기 위해 Amazon 머신 이미지 (AMI)는 자체 서명 된 인증서를 자동으로 생성하고 사용합니다. 최신 웹 브라우저는 일반적으로 로그인 중에 자체 서명 된 인증서에 대해 경고합니다. 그러나이 경우 경고를 무시하고 인증서를 수락 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eedbbdec3b6bacc593ff631c68e9eeab619658b5" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;:rollback&lt;/code&gt; action with this deployment, the &lt;code&gt;:rollback&lt;/code&gt; action must be in a resource block that has the same resource name as the initial deploy action. For example:</source>
          <target state="translated">사용하기 위해 &lt;code&gt;:rollback&lt;/code&gt; 이 배포 행동은 &lt;code&gt;:rollback&lt;/code&gt; 동작 초기 전개 동작과 동일한 자원 이름을 가진 자원 블록에 있어야한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a32959791c7725c9a70647bfe842cc15fc8649c4" translate="yes" xml:space="preserve">
          <source>In order to use the SSM scan job functionality, your instances must have access to &lt;code&gt;AmazonEC2RoleforSSM&lt;/code&gt;, or &lt;code&gt;arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM&lt;/code&gt;.</source>
          <target state="translated">SSM 스캔 작업 기능을 사용하려면 인스턴스에 &lt;code&gt;AmazonEC2RoleforSSM&lt;/code&gt; 또는 &lt;code&gt;arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM&lt;/code&gt; 대한 액세스 권한이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="3465700fde8e72478ab753a2ef0d51fe4d3d718f" translate="yes" xml:space="preserve">
          <source>In profile &lt;code&gt;inspec.yml&lt;/code&gt; metadata files</source>
          <target state="translated">프로필 &lt;code&gt;inspec.yml&lt;/code&gt; 메타 데이터 파일</target>
        </trans-unit>
        <trans-unit id="63a93cc8fc03298b9927b297eb628b850e5cbed0" translate="yes" xml:space="preserve">
          <source>In rare circumstances, jobs that are running at the time of backup creation may be left in an unrecoverable state. For this reason, it&amp;rsquo;s recommended to take a backup when no critical jobs are running.</source>
          <target state="translated">드문 경우지만 백업 생성시 실행중인 작업이 복구 불가능한 상태로 남아있을 수 있습니다. 따라서 중요한 작업이 실행되고 있지 않을 때 백업을 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0f79506bdcf12efa5a5fee2ffe9553e4f0d241d7" translate="yes" xml:space="preserve">
          <source>In some cases, Chef Infra Client may receive a 401 response to the authentication request and a 403 response to an authorization request. An authentication error error may look like the following:</source>
          <target state="translated">일부 경우에 Chef Infra Client는 인증 요청에 대한 401 응답과 인증 요청에 대한 403 응답을 수신 할 수 있습니다. 인증 오류 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84530359c847a15b6afad45f7217c0ec4de97871" translate="yes" xml:space="preserve">
          <source>In some cases, front-end TLS communication may be previously disabled. To re-enable front-end TLS communication, which allows Chef Automate to receive encrypted event data from Chef Habitat, on the Chef Automate host:</source>
          <target state="translated">경우에 따라 프런트 엔드 TLS 통신이 이전에 비활성화되었을 수 있습니다. Chef Automate가 Chef Automate 호스트에서 Chef Habitat에서 암호화 된 이벤트 데이터를 수신 할 수 있도록하는 프런트 엔드 TLS 통신을 다시 활성화하려면 :</target>
        </trans-unit>
        <trans-unit id="255d2281b77919b0982cbf0124c21b5a70a2a678" translate="yes" xml:space="preserve">
          <source>In some cases, such as when knife is not being run from the root directory for the chef-repo, the full path to the data bag item may be required. For example:</source>
          <target state="translated">chef-repo의 루트 디렉터리에서 knife가 실행되지 않는 경우와 같은 일부 경우에는 데이터 백 항목에 대한 전체 경로가 필요할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="180a91f8267d7175a9c9e3f190d6133e7cba419e" translate="yes" xml:space="preserve">
          <source>In some cases, the chef-client may receive a 401 response to the authentication request and a 403 response to an authorization request. An authentication error error may look like the following:</source>
          <target state="translated">일부 경우에, 요리사-클라이언트는 인증 요청에 대한 401 응답 및 인증 요청에 대한 403 응답을 수신 할 수있다. 인증 오류 오류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fc8347fba0f75c960f1ea6bdccefad9272256484" translate="yes" xml:space="preserve">
          <source>In some cases, the hostname for the Chef Infra Server needs to be updated. The process for updating a hostname varies, depending on the platform on which the Chef Infra Server will run. Refer to the manual for the platform or contact a local systems administrator for specific guidance for a specific platform. The following example shows how a hostname can be changed when running Red Hat or CentOS:</source>
          <target state="translated">경우에 따라 Chef Infra Server의 호스트 이름을 업데이트해야합니다. 호스트 이름을 업데이트하는 프로세스는 Chef Infra Server가 실행될 플랫폼에 따라 다릅니다. 특정 플랫폼에 대한 구체적인 지침은 플랫폼 설명서를 참조하거나 로컬 시스템 관리자에게 문의하십시오. 다음 예는 Red Hat 또는 CentOS를 실행할 때 호스트 이름을 변경하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1eb096578ad46f5b37d03fd8583e4986b89edc47" translate="yes" xml:space="preserve">
          <source>In some cases, the hostname for the Chef server needs to be updated. The process for updating a hostname varies, depending on the platform on which the Chef server will run. Refer to the manual for the platform or contact a local systems administrator for specific guidance for a specific platform. The following example shows how a hostname can be changed when running Red Hat or CentOS:</source>
          <target state="translated">경우에 따라 Chef 서버의 호스트 이름을 업데이트해야합니다. 호스트 이름을 업데이트하는 프로세스는 Chef 서버가 실행될 플랫폼에 따라 다릅니다. 특정 플랫폼에 대한 특정 지침은 플랫폼 설명서를 참조하거나 로컬 시스템 관리자에게 문의하십시오. 다음 예는 Red Hat 또는 CentOS를 실행할 때 호스트 이름을 변경하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="888bff0d6313e948b28ae3b35b9aa45bb708a2dd" translate="yes" xml:space="preserve">
          <source>In some cases, the value for a property cannot be known until the execution phase of a Chef Infra Client run. In this situation, using lazy evaluation of property values can be helpful. Instead of a property being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:</source>
          <target state="translated">경우에 따라 Chef Infra Client의 실행 단계가 실행될 때까지 속성 값을 알 수 없습니다. 이 상황에서 속성 값의 지연 평가를 사용하면 도움이 될 수 있습니다. 속성에 값이 할당되는 대신 코드 블록이 할당 될 수 있습니다. 지연 평가를 사용하는 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0be279d4ffb8611cef50ee9f315ea05ef024891" translate="yes" xml:space="preserve">
          <source>In some cases, the value for a property cannot be known until the execution phase of a chef-client run. In this situation, using lazy evaluation of property values can be helpful. Instead of a property being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:</source>
          <target state="translated">경우에 따라 요리사 클라이언트 실행의 실행 단계까지 속성 값을 알 수 없습니다. 이 상황에서 느린 속성 값 평가를 사용하면 도움이 될 수 있습니다. 속성에 값이 할당되는 대신 코드 블록이 할당 될 수 있습니다. 지연 평가 사용 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9d92b85b8131b7b2bf448534bbd5bca095ab913e" translate="yes" xml:space="preserve">
          <source>In some edge cases, this deprecation warning may mention that the property should be referred to as &lt;code&gt;current_resource.property_name&lt;/code&gt; instead of &lt;code&gt;new_resource.property_name&lt;/code&gt;, which is not a mistake; the user should instead use the &lt;code&gt;current_resource.property_name&lt;/code&gt; to preserve prior behavior, or should modify their code to explicitly check the &lt;code&gt;current_resource&lt;/code&gt; if the &lt;code&gt;new_resource&lt;/code&gt; is not set. There are several possible remediations to this in the order of least complicated to the most compatible with the old behavior, and the user will need to select what works best for their use case:</source>
          <target state="translated">일부 &lt;code&gt;new_resource.property_name&lt;/code&gt; 인 경우이 지원 중단 경고에서 속성 을 new_resource.property_name 대신 &lt;code&gt;current_resource.property_name&lt;/code&gt; 으로 참조해야한다고 언급 할 수 있습니다 . 이는 실수가 아닙니다. 사용자는 대신 &lt;code&gt;current_resource.property_name&lt;/code&gt; 을 사용하여 이전 동작을 유지하거나 &lt;code&gt;new_resource&lt;/code&gt; 가 설정되지 않은 경우 &lt;code&gt;current_resource&lt;/code&gt; 를 명시 적으로 확인하도록 코드를 수정해야합니다 . 이전 동작과 가장 호환되는 것에서 가장 덜 복잡한 순서로 몇 가지 가능한 수정 방법이 있으며 사용자는 사용 사례에 가장 적합한 것을 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="bfeb874790f7add1af418c19609dc51fb6b6de2f" translate="yes" xml:space="preserve">
          <source>In some instances, after the upgrade processes is complete, it may be required to stop Keepalived on the back end secondary server, then restart Keepalived on the back end primary server, and then restart Keepalived on the back end secondary server.</source>
          <target state="translated">업그레이드 프로세스가 완료된 후 백엔드 보조 서버에서 Keepalived를 중지 한 후 백엔드 기본 서버에서 Keepalived를 다시 시작한 다음 백엔드 보조 서버에서 Keepalived를 다시 시작해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d31e0ae01e610b44af03306e32865c3282fb9ade" translate="yes" xml:space="preserve">
          <source>In some scenarios, you may be writing checks that involve resources with sensitive content, such as a file resource. In case of failures, you may desire to suppress output. Do this task by adding the &lt;code&gt;:sensitive&lt;/code&gt; flag to the resource definition:</source>
          <target state="translated">일부 시나리오에서는 파일 리소스와 같은 민감한 콘텐츠가 포함 된 리소스를 포함하는 검사를 작성할 수 있습니다. 실패한 경우 출력을 억제 할 수 있습니다. 자원 정의에 : &lt;code&gt;:sensitive&lt;/code&gt; 플래그를 추가하여이 태스크 를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="42b288b560ed8f1f9badd702768a9ae54d505b01" translate="yes" xml:space="preserve">
          <source>In some situations it will be impossible for you to relocate library dependencies using &lt;code&gt;patchelf&lt;/code&gt; as above. For example, if the version of &lt;code&gt;glibc&lt;/code&gt; the software requires is different than that provided by an available version of &lt;code&gt;glibc&lt;/code&gt; in a Chef Habitat package, attempting to &lt;code&gt;patchelf&lt;/code&gt; the program will cause execution to fail due to ABI incompatibility.</source>
          <target state="translated">어떤 상황에서는 위와 같이 &lt;code&gt;patchelf&lt;/code&gt; 를 사용하여 라이브러리 종속성을 재배치 할 수 없습니다 . 예를 들어, 버전 &lt;code&gt;glibc&lt;/code&gt; 소프트웨어가 필요가의 가능한 버전에서 제공하는 것보다 다른 &lt;code&gt;glibc&lt;/code&gt; 는 시도, 요리사 서식지 패키지 &lt;code&gt;patchelf&lt;/code&gt; 실행으로 인해 ABI 호환성에 실패합니다 프로그램.</target>
        </trans-unit>
        <trans-unit id="7b7308914b06d6ecd7d4fa74bbcf2f8ba89a383c" translate="yes" xml:space="preserve">
          <source>In tandem with the changes to the Builder membership roles, we&amp;rsquo;ve also updated the &lt;code&gt;hab&lt;/code&gt; CLI to support RBAC. We&amp;rsquo;re working on adding role management to the Chef Habitat Builder site, but in the meantime, you&amp;rsquo;ll need to use the CLI for now.</source>
          <target state="translated">Builder 멤버십 역할의 변경과 함께 RBAC를 지원 하도록 &lt;code&gt;hab&lt;/code&gt; CLI 도 업데이트했습니다 . Chef Habitat Builder 사이트에 역할 관리를 추가하기 위해 노력하고 있지만 그동안 CLI를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fdd7c6ed97b24c66f94c7bf4f20ffbb0006745a0" translate="yes" xml:space="preserve">
          <source>In the $EDITOR enter the node data in JSON:</source>
          <target state="translated">$ EDITOR에서 노드 데이터를 JSON으로 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="cc9521ba94e974aa987ad2bd8810cf5d7988edd3" translate="yes" xml:space="preserve">
          <source>In the $EDITOR enter the role data in JSON:</source>
          <target state="translated">$ EDITOR에서 JSON으로 역할 데이터를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="a7d0a037df95878839aa6961985083ee3ce37f26" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://discourse.chef.io/c/habitat/&quot;&gt;Chef Discourse&lt;/a&gt;</source>
          <target state="translated">에서 &lt;a href=&quot;https://discourse.chef.io/c/habitat/&quot;&gt;요리사 담화&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="413fede31a66ec66c572db7d44f4da8408422f57" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;.chef&lt;/code&gt; directory, create a &lt;code&gt;config.rb&lt;/code&gt; file that contains:</source>
          <target state="translated">에서 &lt;code&gt;.chef&lt;/code&gt; 디렉토리하는 생성 &lt;code&gt;config.rb&lt;/code&gt; 의 포함 파일 :</target>
        </trans-unit>
        <trans-unit id="4a867a31d03d5344c3c49a569f0634b3060107dc" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;/etc/shadow&lt;/code&gt; file, as indicated by the letter x (&lt;code&gt;x&lt;/code&gt;)</source>
          <target state="translated">에는 &lt;code&gt;/etc/shadow&lt;/code&gt; 파일, 문자 X (로 나타낸 바와 같이 &lt;code&gt;x&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="629e38b199f5cdc4780a83f6a3b4288e59fe0a1c" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;default.rb&lt;/code&gt; recipe, define how this project is to be deployed. This is a normal Chef recipe that is executed by Chef Infra Client, so do the same in this recipe as you would do in any other.</source>
          <target state="translated">에서 &lt;code&gt;default.rb&lt;/code&gt; 요리법,이 프로젝트가 배포하는 방법을 정의합니다. 이것은 Chef Infra Client에서 실행하는 일반 Chef 레시피이므로 다른 레시피에서와 마찬가지로이 레시피에서 동일하게 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="aa6c5574f0247c6817bf869efd07258f7054aae5" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;deploy&lt;/code&gt; directory, a sub-directory named &lt;code&gt;shared&lt;/code&gt; must be created. This sub-directory is where configuration and temporary files will be kept. A typical Ruby on Rails application will have &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;log&lt;/code&gt;, &lt;code&gt;pids&lt;/code&gt;, and &lt;code&gt;system&lt;/code&gt; directories within the &lt;code&gt;shared&lt;/code&gt; directory to keep the files stored there independent of the code in the source repository.</source>
          <target state="translated">에서 &lt;code&gt;deploy&lt;/code&gt; 디렉토리라는 이름의 하위 디렉토리 &lt;code&gt;shared&lt;/code&gt; 작성해야합니다. 이 서브 디렉토리는 구성 및 임시 파일이 보관되는 곳입니다. 일반적인 Ruby on Rails 애플리케이션 에는 &lt;code&gt;shared&lt;/code&gt; 디렉토리 내에 &lt;code&gt;config&lt;/code&gt; , &lt;code&gt;log&lt;/code&gt; , &lt;code&gt;pids&lt;/code&gt; 및 &lt;code&gt;system&lt;/code&gt; 디렉토리 가있어 소스 저장소의 코드와 독립적으로 파일을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="f3bd56e3bb67e06780d39a737b239a4bd5b16b6f" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;kitchen.yml&lt;/code&gt; file, change the &lt;code&gt;product_version&lt;/code&gt; line to &lt;code&gt;16&lt;/code&gt;:</source>
          <target state="translated">에서 &lt;code&gt;kitchen.yml&lt;/code&gt; 의 파일의 변경 &lt;code&gt;product_version&lt;/code&gt; 에 행 &lt;code&gt;16&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0e033b6065eb239242930296cead18cb60e3e083" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;publish.rb&lt;/code&gt; recipe, update &lt;code&gt;&amp;lt;generated_artifact_location&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;package_checksum&amp;gt;&lt;/code&gt; to be correct for this project.</source>
          <target state="translated">에서 &lt;code&gt;publish.rb&lt;/code&gt; 의 레시피 갱신 &lt;code&gt;&amp;lt;generated_artifact_location&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;package_checksum&amp;gt;&lt;/code&gt; 이 프로젝트 올바른 것으로.</target>
        </trans-unit>
        <trans-unit id="f779940076ec996f0c6a1d981c39c68546689d85" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Add New a User&lt;/strong&gt; text area, select one of two types for user. The selection box is grey for the active selection.</source>
          <target state="translated">에서 &lt;strong&gt;추가 신규 사용자의&lt;/strong&gt; 텍스트 영역, 사용자에 대한 두 가지 유형 중 하나를 선택합니다. 선택 상자는 활성 선택에 대해 회색입니다.</target>
        </trans-unit>
        <trans-unit id="8076a90ee8ebaf1ba0a7e9442e4a9672d2b8cd14" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Change Password&lt;/strong&gt;, enter the old password and then the new password.</source>
          <target state="translated">에서 &lt;strong&gt;암호 변경&lt;/strong&gt; , 이전 암호 다음 새 암호를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="0b701ed43aa6d29124306946ddc8ff4d31952cb2" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Create Client&lt;/strong&gt; dialog box, enter the name of the chef-validator key.</source>
          <target state="translated">에서 &lt;strong&gt;생성 클라이언트&lt;/strong&gt; 대화 상자, 요리사 - 검증 키의 이름을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="01596281cebfb976671dfeebde7f079bf5f6f427" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Create Client&lt;/strong&gt; dialog box, enter the name of the client key.</source>
          <target state="translated">에서 &lt;strong&gt;생성 클라이언트&lt;/strong&gt; 대화 상자에서 클라이언트 키의 이름을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="770323baedc663734cc0299088bef384797c780c" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Create Role&lt;/strong&gt; dialog box, enter the name of the role and a description.</source>
          <target state="translated">에서 &lt;strong&gt;역할 만들기&lt;/strong&gt; 대화 상자에서 역할과 설명의 이름을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="02f0477c3f2208fdf183e2760cbc23b12d038b58" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Create a Data Bag Item&lt;/strong&gt; dialog box, enter the data bag identifier, and then JSON data that defines the data bag item.</source>
          <target state="translated">에서 &lt;strong&gt;만들기 데이터 가방 항목&lt;/strong&gt; 대화 상자, 데이터 가방 항목을 정의하는 데이터 가방 식별자 다음 JSON 데이터를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="cd0a1675ddf452aa5a4d492fbdcccb86a35e806a" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Create a Data Bag&lt;/strong&gt; dialog box, enter the name of the data bag.</source>
          <target state="translated">에서 &lt;strong&gt;만들기 데이터 가방&lt;/strong&gt; 대화 상자, 데이터 가방의 이름을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="25f7049e4f829928d5e8a320eb33e47b1356d46b" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Create an Environment&lt;/strong&gt; dialog box, enter the name of the environment and a description.</source>
          <target state="translated">에서 &lt;strong&gt;작성 환경&lt;/strong&gt; 대화 상자, 환경, 설명의 이름을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="d38118bed8bc84b8df86fd273947c49fbc359b03" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Edit Environment Attributes&lt;/strong&gt; dialog box, enter the JSON data that defines the attribute (or attributes).</source>
          <target state="translated">에서 &lt;strong&gt;편집 환경 속성&lt;/strong&gt; 대화 상자, 속성을 정의 (또는 속성) JSON 데이터를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="df76aaf189017846696962f4ec3ec38835415c06" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Edit Node Attributes&lt;/strong&gt; dialog box, make your changes:</source>
          <target state="translated">에서 &lt;strong&gt;편집 노드 속성&lt;/strong&gt; 대화 상자를 변경합니다 :</target>
        </trans-unit>
        <trans-unit id="4dd09a1779007e34d1f08a68c533841e5aee0b63" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Edit Node Run List&lt;/strong&gt; dialog box, drag the role or recipe from the &lt;strong&gt;Available Roles&lt;/strong&gt; or &lt;strong&gt;Available Recipes&lt;/strong&gt; lists to the current run-list.</source>
          <target state="translated">에서 &lt;strong&gt;편집 노드 실행 목록&lt;/strong&gt; 대화 상자에서 역할이나 조리법 드래그 &lt;strong&gt;가능한 역할&lt;/strong&gt; 또는 &lt;strong&gt;사용 가능한 조리법&lt;/strong&gt; 현재 실행 목록에 목록을.</target>
        </trans-unit>
        <trans-unit id="32e8d2733e300b7b267bf42619692f24e3b3e08c" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Edit Node Run List&lt;/strong&gt; dialog box, drag the role or recipe from the &lt;strong&gt;Current Run List&lt;/strong&gt; to the list of available roles or recipes.</source>
          <target state="translated">에서 &lt;strong&gt;편집 노드 실행 목록&lt;/strong&gt; 대화 상자에서 역할이나 조리법 드래그 &lt;strong&gt;현재 실행 목록을&lt;/strong&gt; 사용 가능한 역할 또는 조리법의 목록.</target>
        </trans-unit>
        <trans-unit id="61a24f38517d654d52a332d3f886fc6da6fcdbfd" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Edit Node Run List&lt;/strong&gt; dialog box, make your changes.</source>
          <target state="translated">에서 &lt;strong&gt;편집 노드 실행 목록&lt;/strong&gt; 대화 상자에서 변경합니다.</target>
        </trans-unit>
        <trans-unit id="13fb9f47d4a21e86f1e869a7ca227c79bca7174c" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Edit Role Attributes&lt;/strong&gt; dialog box, enter the JSON data that defines the attribute (or attributes).</source>
          <target state="translated">에서 &lt;strong&gt;역할 편집 속성&lt;/strong&gt; 대화 상자, 속성을 정의 (또는 속성) JSON 데이터를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="4a3a22e14a47c58f5e5dd35022c37a64c2044523" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Invite User&lt;/strong&gt; dialog box, enter the Chef server user name for the user to be invited, and then click the &lt;strong&gt;Invite&lt;/strong&gt; button:</source>
          <target state="translated">&lt;strong&gt;사용자 초대&lt;/strong&gt; 대화 상자 에서 &lt;strong&gt;초대 할 사용자&lt;/strong&gt; 의 Chef 서버 사용자 이름을 입력 한 후 &lt;strong&gt;초대&lt;/strong&gt; 단추 를 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="a47563894db41760fd1955cf4d28786e0073fd56" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Leave Organization&lt;/strong&gt; dialog box, confirm that the key should be regenerated and click the &lt;strong&gt;Leave Organization&lt;/strong&gt; button:</source>
          <target state="translated">에서 &lt;strong&gt;휴가 조직&lt;/strong&gt; 대화 상자에서 확인 키는 재생하고 클릭해야한다는 &lt;strong&gt;휴가 조직&lt;/strong&gt; 버튼을 :</target>
        </trans-unit>
        <trans-unit id="f4412fbf4e67846488800fc8c8cbd51889997b59" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Leave Organization&lt;/strong&gt; dialog box, confirm that you want to leave the organization, and then click the &lt;strong&gt;Leave Organization&lt;/strong&gt; button:</source>
          <target state="translated">에서 &lt;strong&gt;휴가 조직&lt;/strong&gt; 대화 상자에서 확인 당신은 조직을두고, 다음을 클릭합니다 원하는 &lt;strong&gt;휴가 조직&lt;/strong&gt; 버튼을 :</target>
        </trans-unit>
        <trans-unit id="9939d19fcd9b0821d7e1440cec13efab5c969fe3" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Manage Node Tags&lt;/strong&gt; dialog box, enter the name of the tag and then select &lt;strong&gt;Add Tags&lt;/strong&gt; from the drop-down.</source>
          <target state="translated">에서 &lt;strong&gt;관리 노드 태그&lt;/strong&gt; 대화 상자, 태그의 이름을 입력 한 다음 선택 &lt;strong&gt;태그를 추가&lt;/strong&gt; 드롭 다운에서.</target>
        </trans-unit>
        <trans-unit id="69b15118e334433d37ff7c5a7e834d70b9fd74ab" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Manage Node Tags&lt;/strong&gt; dialog box, enter the name of the tag and then select &lt;strong&gt;Delete Tags&lt;/strong&gt; from the drop-down.</source>
          <target state="translated">에서 &lt;strong&gt;관리 노드 태그&lt;/strong&gt; 대화 상자, 태그의 이름을 입력 한 다음 선택 &lt;strong&gt;삭제 태그&lt;/strong&gt; 드롭 다운에서를.</target>
        </trans-unit>
        <trans-unit id="7ab1572d1603e508ec1c4a21e0cea8d4ff3d3cb3" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Reset Key&lt;/strong&gt; dialog box, confirm that the key should be regenerated and click the &lt;strong&gt;Regenerate Key&lt;/strong&gt; button:</source>
          <target state="translated">에서 &lt;strong&gt;리셋 키&lt;/strong&gt; 대화 상자에서 확인 키는 재생하고 클릭해야 함을 &lt;strong&gt;다시 생성 키&lt;/strong&gt; 버튼 :</target>
        </trans-unit>
        <trans-unit id="446e933968d25f42b48fee84e16e95002748217f" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Reset Key&lt;/strong&gt; dialog box, confirm that the key should be regenerated and click the &lt;strong&gt;Reset Key&lt;/strong&gt; button:</source>
          <target state="translated">에서 &lt;strong&gt;리셋 키&lt;/strong&gt; 대화 상자에서 키를 다시 생성되어야 확인하는 클릭 &lt;strong&gt;리셋 키&lt;/strong&gt; 버튼 :</target>
        </trans-unit>
        <trans-unit id="138305f2f115f12a2a5b2a4053a3bc6f63a65d00" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Reset Key&lt;/strong&gt; dialog box, copy the key directly from the dialog box or click the &lt;strong&gt;Download&lt;/strong&gt; button to download the key to your local machine:</source>
          <target state="translated">에서 &lt;strong&gt;리셋 키&lt;/strong&gt; 대화 상자, 대화 상자에서 직접 키를 복사하거나 클릭하여 &lt;strong&gt;다운로드&lt;/strong&gt; 로컬 컴퓨터에 키를 다운로드 버튼을 :</target>
        </trans-unit>
        <trans-unit id="d499d1fcf15f157dde10247fc9391e4a15bb6374" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Settings&lt;/strong&gt; tab navigate to the &lt;em&gt;Notifications&lt;/em&gt; page in the sidebar.</source>
          <target state="translated">에서 &lt;strong&gt;설정&lt;/strong&gt; 받는 탭 탐색 &lt;em&gt;알림&lt;/em&gt; 사이드 바에서 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="a2fcdd579272d2a61388026012811f8833467b33" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Settings&lt;/strong&gt; tab, navigate to &lt;em&gt;Data Feeds&lt;/em&gt; in the sidebar</source>
          <target state="translated">에서 &lt;strong&gt;설정&lt;/strong&gt; 을 탭, 탐색 &lt;em&gt;데이터 피드&lt;/em&gt; 사이드 바에서</target>
        </trans-unit>
        <trans-unit id="ec1c579aef97683b2ac29e4482e3d45f632f0141" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;Settings&lt;/strong&gt; tab, navigate to the &lt;em&gt;Notifications&lt;/em&gt; page in the sidebar.</source>
          <target state="translated">에서 &lt;strong&gt;설정&lt;/strong&gt; 탭을 탐색 &lt;em&gt;알림&lt;/em&gt; 사이드 바에서 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="928607f421ea1930f1862d3032835ce07dea634b" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;default.rb&lt;/strong&gt; recipe, define how this project is to be deployed. This is a normal Chef recipe that is executed by the Chef Infra Client, so do the same in this recipe as you would do in any other.</source>
          <target state="translated">에서 &lt;strong&gt;default.rb&lt;/strong&gt; 요리법,이 프로젝트가 배포하는 방법을 정의합니다. 이것은 Chef Infra Client에서 실행하는 일반 Chef 레시피이므로 다른 레시피에서와 마찬가지로이 레시피에서 동일하게 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="23e5ddea8d24c28126055920f58157ec08956f12" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;publish.rb&lt;/strong&gt; recipe, update &lt;code&gt;&amp;lt;generated_artifact_location&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;package_checksum&amp;gt;&lt;/code&gt; to be correct for this project.</source>
          <target state="translated">에서 &lt;strong&gt;publish.rb의&lt;/strong&gt; 레시피 갱신 &lt;code&gt;&amp;lt;generated_artifact_location&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;package_checksum&amp;gt;&lt;/code&gt; 이 프로젝트 올바른 것으로.</target>
        </trans-unit>
        <trans-unit id="e819dad23cbf7bd095523136df5cc70a4928b8f9" translate="yes" xml:space="preserve">
          <source>In the Add New a User text area, select one of two types for user. The selection box is grey for the active selection.</source>
          <target state="translated">새 사용자 추가 텍스트 영역에서 사용자에 대해 두 가지 유형 중 하나를 선택합니다. 선택 상자는 활성 선택에 대해 회색입니다.</target>
        </trans-unit>
        <trans-unit id="586d9d22c981970672c23c9036647ae1ce744e74" translate="yes" xml:space="preserve">
          <source>In the Audit Cookbook, using the &lt;code&gt;node[:audit][:inputs]&lt;/code&gt;</source>
          <target state="translated">감사 설명서에서 &lt;code&gt;node[:audit][:inputs]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a85d49e3826362b2eed88b8bcf29463ab53f649" translate="yes" xml:space="preserve">
          <source>In the Azure web portal, these values are labeled differently:</source>
          <target state="translated">Azure 웹 포털에서 이러한 값은 다르게 레이블이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="043967da6028f53b2ad8a02453e7286249d9b57e" translate="yes" xml:space="preserve">
          <source>In the Related Links section, select uninstall</source>
          <target state="translated">관련 링크 섹션에서 제거를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="49cdd420ac1bb74d5fb7cbe7b4db016ac2e995cf" translate="yes" xml:space="preserve">
          <source>In the ServiceNow instance, navigate to the System Applications &amp;gt; Applications menu</source>
          <target state="translated">ServiceNow 인스턴스에서 시스템 애플리케이션&amp;gt; 애플리케이션 메뉴로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="0ac3380bca49bd1b68be6f83b7ab33fac7857db0" translate="yes" xml:space="preserve">
          <source>In the Workflow web UI, open the &lt;strong&gt;Organizations&lt;/strong&gt; page.</source>
          <target state="translated">워크 플로 웹 UI에서 &lt;strong&gt;조직&lt;/strong&gt; 페이지를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="359445343f6e733af9ffba035229d91184da7d76" translate="yes" xml:space="preserve">
          <source>In the Workflow web UI, open the &lt;strong&gt;SCM Setup&lt;/strong&gt; page, and update Bitbucket credentials and make changes to the appropriate information.</source>
          <target state="translated">워크 플로 웹 UI에서 &lt;strong&gt;SCM 설정&lt;/strong&gt; 페이지를 열고 Bitbucket 자격 증명을 업데이트하고 적절한 정보를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="787638bd5b30ceb51e5e9c8169a64a680570915d" translate="yes" xml:space="preserve">
          <source>In the Workflow web UI, open the SCM setup page, and then complete the following fields:</source>
          <target state="translated">워크 플로 웹 UI에서 SCM 설정 페이지를 열고 다음 필드를 완료합니다.</target>
        </trans-unit>
        <trans-unit id="93fb6aaf7b3d0ef2c45940f9f631d31b0ae5a003" translate="yes" xml:space="preserve">
          <source>In the Workflow web user interface, open the &lt;strong&gt;Organizations&lt;/strong&gt; page.</source>
          <target state="translated">워크 플로 웹 사용자 인터페이스에서 &lt;strong&gt;조직&lt;/strong&gt; 페이지를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="31a6219bc25e272b614ca06d93b10992c0e58f4a" translate="yes" xml:space="preserve">
          <source>In the Workflow webui, open the &lt;strong&gt;Organizations&lt;/strong&gt; page.</source>
          <target state="translated">워크 플로 웹 UI에서 &lt;strong&gt;조직&lt;/strong&gt; 페이지를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="33bfe21ef344ec4a10f769e68f350ea19c58fcfa" translate="yes" xml:space="preserve">
          <source>In the Workflow webui, open the &lt;strong&gt;SCM Setup&lt;/strong&gt; page.</source>
          <target state="translated">워크 플로 웹 UI에서 &lt;strong&gt;SCM 설정&lt;/strong&gt; 페이지를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="cad8f0653646dd0fc99684aa311d819f2e7a1d61" translate="yes" xml:space="preserve">
          <source>In the above example, all controls from &lt;code&gt;my-app-profile&lt;/code&gt; and &lt;code&gt;my-baseline&lt;/code&gt; profile will be executed every time &lt;code&gt;my-app-profile&lt;/code&gt; is executed &lt;strong&gt;except&lt;/strong&gt; for control &lt;code&gt;baseline-2&lt;/code&gt; from the &lt;code&gt;my-baseline&lt;/code&gt; profile.</source>
          <target state="translated">상기 예에서, 모든 행 제어 &lt;code&gt;my-app-profile&lt;/code&gt; 및 &lt;code&gt;my-baseline&lt;/code&gt; 프로파일마다 실행될 &lt;code&gt;my-app-profile&lt;/code&gt; 실행 &lt;strong&gt;제외한&lt;/strong&gt; 제어를위한 &lt;code&gt;baseline-2&lt;/code&gt; 로부터 &lt;code&gt;my-baseline&lt;/code&gt; 프로파일.</target>
        </trans-unit>
        <trans-unit id="526c3544d6a7fabf5e3b42ef12a6f892dbf5342c" translate="yes" xml:space="preserve">
          <source>In the above example, all controls from &lt;code&gt;my-baseline&lt;/code&gt; are executed along with all the controls from the including profile, &lt;code&gt;my-app-profile&lt;/code&gt;. However, should control &lt;code&gt;baseline-1&lt;/code&gt; fail, it will be raised with an impact of &lt;code&gt;0.5&lt;/code&gt; instead of the originally-intended impact of &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="translated">위의 예에서 &lt;code&gt;my-baseline&lt;/code&gt; 의 모든 컨트롤은 &lt;code&gt;my-app-profile&lt;/code&gt; 포함하는 프로필의 모든 컨트롤과 함께 실행 됩니다 . 그러나 control &lt;code&gt;baseline-1&lt;/code&gt; 이 실패 하면 원래 의도 한 &lt;code&gt;1.0&lt;/code&gt; 의 영향 대신 &lt;code&gt;0.5&lt;/code&gt; 의 영향으로 올라 갑니다.</target>
        </trans-unit>
        <trans-unit id="32163aff1c21d5b1a745683108fc2a4f19d8dad1" translate="yes" xml:space="preserve">
          <source>In the above example, you see the use of &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;attribute::&lt;/code&gt; which are both methods of fetching attributes.</source>
          <target state="translated">위의 예에서는 &lt;code&gt;attribute::&lt;/code&gt; 을 가져 오는 두 가지 방법 인 &lt;code&gt;@&lt;/code&gt; 및 attribute :: 사용을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc48b65e94e847250fd6d8d24380ffc4a3b59eea" translate="yes" xml:space="preserve">
          <source>In the above snippet, the &amp;lsquo;manage-client-id&amp;rsquo; should be a unique string for each Chef Infra Server whose management console will authenticate through SAML. Also, if you have multiple Chef Servers that will authenticate through SAML, you will need to create additional entries for the client id, the client secret and the client redirect URI in the section above for each one.</source>
          <target state="translated">위의 스 니펫에서 'manage-client-id'는 관리 콘솔이 SAML을 통해 인증 할 각 Chef Infra Server에 대한 고유 한 문자열이어야합니다. 또한 SAML을 통해 인증 할 Chef 서버가 여러 개인 경우 위 섹션에서 클라이언트 ID, 클라이언트 시크릿 및 클라이언트 리디렉션 URI에 대한 추가 항목을 각각 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="74a41afb82f765192e3b824d8b5fdad5cda4c786" translate="yes" xml:space="preserve">
          <source>In the absence of either of these components, the process stops after the first compliance scan. The output for the first scan, the remediation, and the second scan are all written to the Chef Habitat Supervisor log.</source>
          <target state="translated">이러한 구성 요소 중 하나가 없으면 첫 번째 컴플라이언스 검색 후 프로세스가 중지됩니다. 첫 번째 스캔, 수정 및 두 번째 스캔의 출력은 모두 Chef Habitat Supervisor 로그에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="d25bc2fdb51334c04f724d96164bd77c1cf2396c" translate="yes" xml:space="preserve">
          <source>In the case of a two-node failure in a standard three-node configuration, the cluster is no longer able to operate, as leader election requires a quorum of two nodes.</source>
          <target state="translated">표준 3 노드 구성에서 2 노드 장애가 발생한 경우 리더 선택시 2 노드의 쿼럼이 필요하므로 클러스터를 더 이상 작동 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d5c0afc06ac164b24ace3ee7ab24fd57e716d061" translate="yes" xml:space="preserve">
          <source>In the case of installing a private Chef Supermarket, Chef recommends the use of a wrapper cookbook to specify certain attributes that are unique to your organization, while enabling the use of the generic installer cookbook which, in turn, installs the Chef Supermarket package behind your firewall.</source>
          <target state="translated">개인 Chef Supermarket을 설치하는 경우 Chef는 랩퍼 쿡북을 사용하여 조직에 고유 한 특정 속성을 지정하는 동시에 일반 설치 쿡북을 사용하도록 권장합니다. 방화벽.</target>
        </trans-unit>
        <trans-unit id="18df3edf1c28a07c862f913e552145191ee6962a" translate="yes" xml:space="preserve">
          <source>In the case that no conclusion can be made, escalate to include the next level of Community Organizers.</source>
          <target state="translated">결론을 내릴 수없는 경우 다음 단계의 커뮤니티 조직자를 포함하도록 에스컬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="451fb942423d42cec67c1280a052c0ebd3b65a89" translate="yes" xml:space="preserve">
          <source>In the chef-client 11.12 release, the &lt;code&gt;local_key_generation&lt;/code&gt; setting was added to the client.rb file.</source>
          <target state="translated">chef-client 11.12 릴리스에서 &lt;code&gt;local_key_generation&lt;/code&gt; 설정이 client.rb 파일에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="2ec8adc342ff3369bf9a5a1f5f887e3fbb986171" translate="yes" xml:space="preserve">
          <source>In the chef-client 11.8 release, the &lt;code&gt;verify_api_cert&lt;/code&gt; setting was added to the client.rb file with a default value of &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">chef-client 11.8 릴리스에서 &lt;code&gt;verify_api_cert&lt;/code&gt; 설정이 기본값이 &lt;code&gt;false&lt;/code&gt; 인 client.rb 파일에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="13dc6fd06c04550aa974910f0726673dd5116c44" translate="yes" xml:space="preserve">
          <source>In the chef-client 12 release, the default value for &lt;code&gt;local_key_generation&lt;/code&gt; was changed to &lt;code&gt;true&lt;/code&gt; and the default value for &lt;code&gt;ssl_verify_mode&lt;/code&gt; was changed to &lt;code&gt;:verify_peer&lt;/code&gt;.</source>
          <target state="translated">요리사 클라이언트 12 릴리스에서의 기본값 &lt;code&gt;local_key_generation&lt;/code&gt; 이 변경되었습니다 &lt;code&gt;true&lt;/code&gt; 과의 기본값 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 이 변경되었습니다 &lt;code&gt;:verify_peer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d549eb5b518ea6329d5e62ac9b36572183c90ba0" translate="yes" xml:space="preserve">
          <source>In the command line, navigate to your cookbook directory. That path should be similar to &lt;code&gt;c:\my_repo\cookbooks\my_cookbook&lt;/code&gt;. Then run the following command to test your code out:</source>
          <target state="translated">명령 줄에서 요리 책 디렉토리로 이동합니다. 해당 경로는 &lt;code&gt;c:\my_repo\cookbooks\my_cookbook&lt;/code&gt; 과 유사해야합니다 . 그런 다음 다음 명령을 실행하여 코드를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="b5b0226b18c23a99eb6fd355576a891cbaacbc82" translate="yes" xml:space="preserve">
          <source>In the command shell, create or navigate to the directory in which project repositories are located.</source>
          <target state="translated">명령 셸에서 프로젝트 저장소가있는 디렉터리를 만들거나 탐색합니다.</target>
        </trans-unit>
        <trans-unit id="cddbbd2070c5e8f7d3efdab795cea84b435f4fd9" translate="yes" xml:space="preserve">
          <source>In the custom CIS package folder, create a new folder called &lt;code&gt;config&lt;/code&gt; and a &lt;code&gt;config.yml&lt;/code&gt; file within that folder:</source>
          <target state="translated">사용자 지정 CIS 패키지 폴더에서 &lt;code&gt;config&lt;/code&gt; 라는 새 폴더 와 해당 폴더 내에 &lt;code&gt;config.yml&lt;/code&gt; 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d752f37dc6034d08647e066a721dbca89fa8753c" translate="yes" xml:space="preserve">
          <source>In the custom resource, add the following custom properties:</source>
          <target state="translated">사용자 정의 자원에서 다음 사용자 정의 특성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="046041f225f26339bedca2391cf572f941f8c389" translate="yes" xml:space="preserve">
          <source>In the event a section or setting name has a period in it, the alternate syntax can be used:</source>
          <target state="translated">섹션 또는 설정 이름에 마침표가있는 경우 대체 구문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="176856285bda3b83350ab71714aaf44e0971da54" translate="yes" xml:space="preserve">
          <source>In the event of a disk full condition for the Redis data store, the &lt;code&gt;dump.rdb&lt;/code&gt; (the primary data store &lt;code&gt;.rdb&lt;/code&gt; used by Redis) can become corrupt and saved as a zero byte file.</source>
          <target state="translated">Redis 데이터 저장소에 대한 디스크 가득 참 조건이 발생하면 &lt;code&gt;dump.rdb&lt;/code&gt; ( Redis에서 사용 하는 기본 데이터 저장소 &lt;code&gt;.rdb&lt;/code&gt; )가 손상되어 0 바이트 파일로 저장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e4c12109f50fb63cc48e6dd1ccb0c882bddf8dd" translate="yes" xml:space="preserve">
          <source>In the event the path contains an element which contains periods, the alternate syntax can be used:</source>
          <target state="translated">경로에 마침표가 포함 된 요소가 포함 된 경우 대체 구문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a97e6effab8f4d9b1221f19433d214d1dda3162d" translate="yes" xml:space="preserve">
          <source>In the example above, every time &lt;code&gt;my-app-profile&lt;/code&gt; is executed, all the controls from &lt;code&gt;my-baseline&lt;/code&gt; are also executed. Therefore, the following controls would be executed:</source>
          <target state="translated">위의 예에서 &lt;code&gt;my-app-profile&lt;/code&gt; 이 실행될 때마다 &lt;code&gt;my-baseline&lt;/code&gt; 의 모든 컨트롤 도 실행됩니다. 따라서 다음 컨트롤이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="0518a02d0aca174209d18e3b7eddc08a7ad3f3ba" translate="yes" xml:space="preserve">
          <source>In the example above, if you look up your package in the Builder UI, or using the &lt;code&gt;hab pkg channels&lt;/code&gt; subcommand, you can see that your package is tagged for both the &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;unstable&lt;/code&gt; channels.</source>
          <target state="translated">위의 예에서 Builder UI에서 패키지를 조회하거나 &lt;code&gt;hab pkg channels&lt;/code&gt; 하위 명령을 사용하면 패키지가 &lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;unstable&lt;/code&gt; 채널 모두에 대해 태그가 지정되었음을 알 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a86f1ed81bde816b31b7b286b23304cd194330a" translate="yes" xml:space="preserve">
          <source>In the example above, the developer ID should match the one you specify in the &lt;code&gt;build-info&lt;/code&gt; file below.</source>
          <target state="translated">위의 예에서 개발자 ID는 아래 의 &lt;code&gt;build-info&lt;/code&gt; 파일 에서 지정한 것과 일치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1c5f1c1e3884bc649c779f2ea918f2dc07fd0599" translate="yes" xml:space="preserve">
          <source>In the following example, imagine you have two Chef Infra Servers, one in San Francisco and another one in New York. Also, assume you have copied the correct &lt;code&gt;config.rb&lt;/code&gt; and &lt;code&gt;client_key&lt;/code&gt; files to the build nodes/runners for each Chef Infra Server.</source>
          <target state="translated">다음 예에서 두 개의 Chef Infra Server가 있다고 가정합니다. 하나는 샌프란시스코에 있고 다른 하나는 뉴욕에 있습니다. 또한 올바른 &lt;code&gt;config.rb&lt;/code&gt; 및 &lt;code&gt;client_key&lt;/code&gt; 파일을 각 Chef Infra Server의 빌드 노드 / 러너에 복사했다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="f59006e3fef1377d0fd22271cfeaef671849fa2e" translate="yes" xml:space="preserve">
          <source>In the following example, imagine you have two Chef servers, one in San Francisco and another one in New York. Also, assume you have copied the correct &lt;code&gt;config.rb&lt;/code&gt; and &lt;code&gt;client_key&lt;/code&gt; files to the build nodes/runners for each Chef Infra Server.</source>
          <target state="translated">다음 예에서는 두 개의 Chef 서버가 있다고 가정합니다. 하나는 샌프란시스코에 있고 다른 하나는 뉴욕에 있습니다. 또한 올바른 &lt;code&gt;config.rb&lt;/code&gt; 및 &lt;code&gt;client_key&lt;/code&gt; 파일을 각 Chef Infra Server의 빌드 노드 / 러너에 복사했다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="39255dfe81e4f38de12bfdffe8f042303ed766a2" translate="yes" xml:space="preserve">
          <source>In the following example, the name of each breakpoint is an arbitrary string.</source>
          <target state="translated">다음 예에서 각 중단 점의 이름은 임의의 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="2f8be2841dda5fc8e991993313bb881523187e1b" translate="yes" xml:space="preserve">
          <source>In the future when you get more comfortable, you can run &lt;code&gt;kitchen test&lt;/code&gt; to perform all of the above steps at once, including the cleanup step.</source>
          <target state="translated">앞으로 더 편안 해지면 &lt;code&gt;kitchen test&lt;/code&gt; 를 실행하여 정리 단계를 포함하여 위의 모든 단계를 한 번에 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ad158a76fce22a9527ef4f082061757acafb8cd" translate="yes" xml:space="preserve">
          <source>In the interest of fostering an open, welcoming, and encouraging environment, we as contributors, maintainers, and community members pledge to making participation in our projects and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, veteran status, or sexual identity and orientation.</source>
          <target state="translated">개방적이고 환영하며 고무적인 환경을 조성하기 위해 우리는 기여자, 관리자 및 커뮤니티 구성원으로서 나이, 신체 크기, 장애, 인종, 성 정체성 및 표현, 경험 수준, 국적, 외모, 인종, 종교, 군필 여부 또는 성적 정체성과 성향.</target>
        </trans-unit>
        <trans-unit id="cccee52cb34ee2c5549da9fb13113868c3313b16" translate="yes" xml:space="preserve">
          <source>In the job feed, for a brief period after a job completes, the event stream will remain available. The request will behave as normal, which means the client will see the stream of events from the beginning of the job (or if specified, the &lt;code&gt;Last-Event-ID&lt;/code&gt;), through to the job completion, and then the connection will be immediately closed by the server. The amount of time before it completes is configurable, but defaults to 5 seconds.</source>
          <target state="translated">작업 피드에서 작업이 완료된 후 잠시 동안 이벤트 스트림을 사용할 수 있습니다. 요청은 정상적으로 작동합니다. 즉, 클라이언트는 작업 시작 (또는 지정된 경우 &lt;code&gt;Last-Event-ID&lt;/code&gt; )부터 작업 완료 까지의 이벤트 스트림을 확인한 다음 연결이 즉시 종료됩니다. 서버에 의해. 완료되기까지의 시간은 구성 가능하지만 기본값은 5 초입니다.</target>
        </trans-unit>
        <trans-unit id="61a43facb87089f1e71c6988c4130af4bbde300c" translate="yes" xml:space="preserve">
          <source>In the logs (&lt;code&gt;journalctl -u chef-automate&lt;/code&gt;), you will find a line from &lt;code&gt;automate-dex.default&lt;/code&gt; like this &amp;ndash; note that for readability, the timestamp and service name has been removed from this example log):</source>
          <target state="translated">로그 ( &lt;code&gt;journalctl -u chef-automate&lt;/code&gt; )에서 다음 과 같은 &lt;code&gt;automate-dex.default&lt;/code&gt; 행을 찾을 수 있습니다. 가독성을 위해이 예제 로그에서 타임 스탬프와 서비스 이름이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="65c764800a390570f788d482858bc893173e09b8" translate="yes" xml:space="preserve">
          <source>In the logs, you will find more information. There is a line informing you about the actual &lt;em&gt;search&lt;/em&gt; query,</source>
          <target state="translated">로그에서 자세한 정보를 찾을 수 있습니다. 실제 &lt;em&gt;검색어&lt;/em&gt; 에 대해 알려주는 줄이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6271c3e17498bca64602b498d917dc6a2556761e" translate="yes" xml:space="preserve">
          <source>In the next several steps, you will fill out your plan file. Copy this basic content into your plan file and make changes by following the next steps. The content values are the same for both Linux and Windows operating systems. Copy the correct file example for your operating system:</source>
          <target state="translated">다음 여러 단계에서 계획 파일을 작성합니다. 이 기본 콘텐츠를 계획 파일에 복사하고 다음 단계에 따라 변경합니다. 컨텐츠 값은 Linux 및 Windows 운영 체제 모두에서 동일합니다. 운영 체제에 맞는 올바른 파일 예제를 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="90775ae3aac6b2a890d4a81367f66084115f7f3e" translate="yes" xml:space="preserve">
          <source>In the next window, select the &lt;code&gt;New&lt;/code&gt; button in the top part. This opens a dialog box that lets you set individual user variables.</source>
          <target state="translated">다음 창 에서 상단 부분 의 &lt;code&gt;New&lt;/code&gt; 버튼을 선택합니다 . 개별 사용자 변수를 설정할 수있는 대화 상자가 열립니다.</target>
        </trans-unit>
        <trans-unit id="792926a4a87389bf84c96ae394a37b48c6ac4ba2" translate="yes" xml:space="preserve">
          <source>In the past, the &lt;code&gt;chef-web-docs&lt;/code&gt; repo contained documentation for prior versions of Chef components. Currently, the repo is limited to the current major versions of Chef components.</source>
          <target state="translated">과거에는 &lt;code&gt;chef-web-docs&lt;/code&gt; 리포지토리에 이전 버전의 Chef 구성 요소에 대한 설명서가 포함되어있었습니다. 현재 저장소는 Chef 구성 요소의 현재 주요 버전으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="94ddaf92013522612dce8def66c8a2ee147509e6" translate="yes" xml:space="preserve">
          <source>In the previous example, two attributes will be extracted (on the Chef server) from any node that matches the search query. The result will be a simple hash with keys &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;ip&lt;/code&gt;, and &lt;code&gt;kernel_version&lt;/code&gt;.</source>
          <target state="translated">이전 예에서는 검색 쿼리와 일치하는 모든 노드에서 두 개의 속성 (Chef 서버에서)이 추출됩니다. 결과는 키 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;ip&lt;/code&gt; 및 &lt;code&gt;kernel_version&lt;/code&gt; 의 간단한 해시가됩니다 .</target>
        </trans-unit>
        <trans-unit id="013e57af41ca681a7e220a880fc6401b6a9c80be" translate="yes" xml:space="preserve">
          <source>In the previous examples, the first resource uses the value &lt;code&gt;/foo/bar&lt;/code&gt; and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource property.</source>
          <target state="translated">앞의 예제에서 첫 번째 자원은 &lt;code&gt;/foo/bar&lt;/code&gt; 값을 사용하고 두 번째 자원은 해당 코드 블록의 컨텐츠가 유효한 자원 특성 인 한 코드 블록이 제공 한 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c4cec7752cf6c8e212a4c67e3dffd2c944971cd0" translate="yes" xml:space="preserve">
          <source>In the previous examples, the names are used to indicate if the breakpoint is before or after a resource and also to specify which resource it is before or after.</source>
          <target state="translated">이전 예에서 이름은 중단 점이 리소스 앞 또는 뒤에 있는지 여부를 나타내며 리소스가 리소스 앞 또는 뒤에 있는지 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac427f41711fa8713049041a602650fdea1e45ce" translate="yes" xml:space="preserve">
          <source>In the profile&amp;rsquo;s control code:</source>
          <target state="translated">프로필의 제어 코드에서 :</target>
        </trans-unit>
        <trans-unit id="77a117e2615425bc92b96ab7de39185edc726d54" translate="yes" xml:space="preserve">
          <source>In the search box in the upper right, enter the search query and click the search icon.</source>
          <target state="translated">오른쪽 상단의 검색 상자에 검색어를 입력하고 검색 아이콘을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="5a1c73aedb562c9e166d8b552060f2a66c5fc712" translate="yes" xml:space="preserve">
          <source>In the top right, from the &lt;strong&gt;Environment&lt;/strong&gt; drop-down, select the environment:</source>
          <target state="translated">오른쪽 상단의 &lt;strong&gt;환경&lt;/strong&gt; 드롭 다운에서 환경을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="19ba4454c108d264e23bc81b78cd6a2a11da7634" translate="yes" xml:space="preserve">
          <source>In these situations, you will have to give up Chef Habitat&amp;rsquo;s guarantees of complete dependency isolation and continue to rely on the library dependencies provided by the host operating system. However, you can continue to use the features of the Chef Habitat Supervisor that provide uniform manageability across your entire fleet of applications.</source>
          <target state="translated">이러한 상황에서는 완전한 종속성 격리에 대한 Chef Habitat의 보장을 포기하고 호스트 운영 체제에서 제공하는 라이브러리 종속성에 계속 의존해야합니다. 그러나 전체 애플리케이션 집합에 걸쳐 균일 한 관리 기능을 제공하는 Chef Habitat Supervisor의 기능을 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1bb83dbb952e525b5b671c4f5466c5b75d6b301" translate="yes" xml:space="preserve">
          <source>In this case the &lt;code&gt;subscribes&lt;/code&gt; property reloads the &lt;code&gt;nginx&lt;/code&gt; service whenever its certificate file, located under &lt;code&gt;/etc/nginx/ssl/example.crt&lt;/code&gt;, is updated. &lt;code&gt;subscribes&lt;/code&gt; does not make any changes to the certificate file itself, it merely listens for a change to the file, and executes the &lt;code&gt;:reload&lt;/code&gt; action for its resource (in this example &lt;code&gt;nginx&lt;/code&gt;) when a change is detected.</source>
          <target state="translated">이 경우 &lt;code&gt;subscribes&lt;/code&gt; 속성 은 &lt;code&gt;/etc/nginx/ssl/example.crt&lt;/code&gt; 아래에있는 인증서 파일 이 업데이트 될 때마다 &lt;code&gt;nginx&lt;/code&gt; 서비스를 다시로드합니다 . &lt;code&gt;subscribes&lt;/code&gt; 는 인증서 파일 자체를 변경하지 않고 파일 변경 사항을 수신 하고 변경 사항이 감지되면 해당 리소스 (이 예에서는 &lt;code&gt;nginx&lt;/code&gt; ) 에 대해 &lt;code&gt;:reload&lt;/code&gt; 작업을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="1c0f5d4bad58d6de6e68e7bc7938ff2be5ca3199" translate="yes" xml:space="preserve">
          <source>In this case, the initial warning that &lt;code&gt;Class Chef::Provider::Foo does not declare 'provides :foo'&lt;/code&gt; is accurate and gives the remediation.</source>
          <target state="translated">이 경우 &lt;code&gt;Class Chef::Provider::Foo does not declare 'provides :foo'&lt;/code&gt; 초기 경고 는 정확하고 수정을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e1477e19b38bcc55fd96973860f61542376b6eca" translate="yes" xml:space="preserve">
          <source>In this case, we only need a single statement providing access to the &lt;em&gt;get&lt;/em&gt;, &lt;em&gt;list&lt;/em&gt;, and &lt;em&gt;update&lt;/em&gt; actions for &lt;em&gt;users&lt;/em&gt; and &lt;em&gt;teams&lt;/em&gt; that have been assigned to the project &lt;code&gt;project-devops&lt;/code&gt;.</source>
          <target state="translated">이 경우 프로젝트 &lt;code&gt;project-devops&lt;/code&gt; 에 할당 된 &lt;em&gt;사용자&lt;/em&gt; 및 &lt;em&gt;팀에&lt;/em&gt; 대한 &lt;em&gt;get&lt;/em&gt; , &lt;em&gt;list&lt;/em&gt; , &lt;em&gt;update&lt;/em&gt; 작업에 대한 액세스를 제공하는 단일 문만 필요합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e39329da303fbf297bed0233dc850967a0bb544" translate="yes" xml:space="preserve">
          <source>In this case, you can leave the Name Id Policy setting on the Chef Automate side to &amp;ldquo;Default (No Policy)&amp;rdquo;, since the IdP will always return what is pre-configured.</source>
          <target state="translated">이 경우 IdP가 항상 미리 구성된 항목을 반환하므로 Chef Automate 측의 이름 Id 정책 설정을 &quot;기본값 (정책 없음)&quot;으로 둘 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ce399a502a7d8b84404e0fe43037318102469a6" translate="yes" xml:space="preserve">
          <source>In this case, you will need to request a specific Name Id Policy through the Chef Automate configuration - for example, &amp;lsquo;Email Address&amp;rsquo;.</source>
          <target state="translated">이 경우 Chef Automate 구성을 통해 특정 이름 ID 정책 (예 : '이메일 주소')을 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="b02c83eaeb42d77db92b3b345fed215aff23696f" translate="yes" xml:space="preserve">
          <source>In this case, you will sign on to Apple Business Manager and use the article above to set up Azure as the MDM which receives the laptops and other devices you wish to manage.</source>
          <target state="translated">이 경우 Apple Business Manager에 로그인하고 위의 문서를 사용하여 관리하려는 랩톱 및 기타 장치를 수신하는 MDM으로 Azure를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="52664ddd3ae521b35fd4704b56e8f49a2ea92916" translate="yes" xml:space="preserve">
          <source>In this example conversion, you will create two local users and add them to default teams that are automatically included in default policies. Note that you could also add users directly to policies without the intermediate teams, but using teams can make managing your system more flexible.</source>
          <target state="translated">이 예제 변환에서는 두 명의 로컬 사용자를 만들고 기본 정책에 자동으로 포함되는 기본 팀에 추가합니다. 중간 팀없이 정책에 사용자를 직접 추가 할 수도 있지만 팀을 사용하면 시스템을보다 유연하게 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="51017e215ee66a38fd3f02b20048abb9252ee8b1" translate="yes" xml:space="preserve">
          <source>In this example output, the &lt;code&gt;username_attr&lt;/code&gt; was set to &lt;code&gt;cnn&lt;/code&gt; (not &lt;code&gt;cn&lt;/code&gt;).</source>
          <target state="translated">이 예제 출력에서 &lt;code&gt;username_attr&lt;/code&gt; 은 &lt;code&gt;cnn&lt;/code&gt; ( &lt;code&gt;cn&lt;/code&gt; 아님) 으로 설정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="702a7c05411a41914f23aaf8be66e8c6952e1072" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;backend-1&lt;/code&gt; is the &lt;strong&gt;leader&lt;/strong&gt; node, as indicated by its role in the &lt;strong&gt;Role&lt;/strong&gt; column.</source>
          <target state="translated">이 예에서 &lt;code&gt;backend-1&lt;/code&gt; 은 &lt;strong&gt;역할&lt;/strong&gt; 열 에서 역할로 표시되는 &lt;strong&gt;리더&lt;/strong&gt; 노드 입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bd0b686a644305360a8245df8d760794d708ac2" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;where(...)&lt;/code&gt; is the filter statement.</source>
          <target state="translated">이 예에서, &lt;code&gt;where(...)&lt;/code&gt; 는 필터 문입니다.</target>
        </trans-unit>
        <trans-unit id="d324c3a8d5f15122dec49401f8df4761d4801dd7" translate="yes" xml:space="preserve">
          <source>In this example, after &lt;a href=&quot;index#creating-a-project&quot;&gt;creating a project&lt;/a&gt; with the ID &lt;code&gt;project-devops&lt;/code&gt;, you will add an ingest rule to this new project. You will update projects to apply this new project rule, causing all matching ingested resources to be associated with &lt;code&gt;project-devops&lt;/code&gt;. You will then use the global project filter to filter your ingested data by &lt;code&gt;project-devops&lt;/code&gt;.</source>
          <target state="translated">이 예에서, 후 &lt;a href=&quot;index#creating-a-project&quot;&gt;프로젝트 만들기&lt;/a&gt; 는 ID와 &lt;code&gt;project-devops&lt;/code&gt; ,이 새로운 프로젝트에 인제 규칙을 추가합니다. 이 새 프로젝트 규칙을 적용하도록 프로젝트를 업데이트하여 일치하는 모든 수집 된 리소스가 &lt;code&gt;project-devops&lt;/code&gt; 와 연결 되도록 합니다. 그런 다음 전역 프로젝트 필터를 사용하여 &lt;code&gt;project-devops&lt;/code&gt; 별로 수집 된 데이터를 필터링합니다 .</target>
        </trans-unit>
        <trans-unit id="277ce76bbf98df0ba8c4d8c8d54b8f16d3c6435f" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;../matchers/index#cmp&quot;&gt;&lt;code&gt;cmp&lt;/code&gt;&lt;/a&gt; matcher is being used to compare the &lt;code&gt;color&lt;/code&gt; property to the expected result &amp;lsquo;black&amp;rsquo;.</source>
          <target state="translated">이 예에서 &lt;a href=&quot;../matchers/index#cmp&quot;&gt; &lt;code&gt;cmp&lt;/code&gt; &lt;/a&gt; 매처는 &lt;code&gt;color&lt;/code&gt; 속성을 예상 결과 'black' 과 비교하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3fb8a5941917684ee6f77333a5901d709d01df70" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;%{path}&lt;/code&gt; portion of this command is expanded to the temporary location where a copy of the file to be created exists. This will use Nginx&amp;rsquo;s syntax checking feature to ensure the file is a valid Nginx configuration file before writing the file. An error will be raised if the executed command returns a non-zero exit status code.</source>
          <target state="translated">이 예 에서이 명령 의 &lt;code&gt;%{path}&lt;/code&gt; 부분은 만들 파일의 복사본이있는 임시 위치로 확장됩니다. 이것은 Nginx의 구문 검사 기능을 사용하여 파일을 쓰기 전에 파일이 유효한 Nginx 구성 파일인지 확인합니다. 실행 된 명령이 0이 아닌 종료 상태 코드를 반환하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2105a335ff9b384bbcc0446c1b3ea535bed7e372" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;compat_resource&lt;/code&gt; cookbook is also installed since it&amp;rsquo;s a dependency of the &lt;code&gt;apt&lt;/code&gt; cookbook. Running the install command also creates a &lt;code&gt;Berksfile.lock&lt;/code&gt;, which represents exactly which cookbook versions Berkshelf installed. This file ensures that someone else can check the cookbook out of git and get exactly the same dependencies as you.</source>
          <target state="translated">이 예제에서 &lt;code&gt;compat_resource&lt;/code&gt; 쿡북은 &lt;code&gt;apt&lt;/code&gt; 쿡북 의 종속성이므로 설치됩니다 . install 명령을 실행하면 Berkshelf가 설치된 쿡북 버전을 정확히 나타내는 &lt;code&gt;Berksfile.lock&lt;/code&gt; 도 생성 됩니다. 이 파일은 다른 누군가가 git에서 쿡북을 확인하고 당신과 똑같은 의존성을 얻을 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="bd13c8c85b3f24d4217cc7e1fb143ed17acf7bbd" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;core/httpd&lt;/code&gt; plan references several other core packages through the use of the &lt;code&gt;pkg_path_for&lt;/code&gt; function before &lt;code&gt;make&lt;/code&gt; is called. You can use a similar pattern if you need reference a binary or library when building your source files.</source>
          <target state="translated">이 예에서 &lt;code&gt;core/httpd&lt;/code&gt; 계획 은 &lt;code&gt;make&lt;/code&gt; 가 호출 되기 전에 &lt;code&gt;pkg_path_for&lt;/code&gt; 함수를 사용하여 여러 다른 핵심 패키지를 참조 합니다. 소스 파일을 빌드 할 때 바이너리 또는 라이브러리를 참조해야하는 경우 유사한 패턴을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7062bce6a3b56d6eea9dfa59c9d1ba44f3ec4e8e" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;nil&lt;/code&gt; tells &lt;code&gt;powershell_package&lt;/code&gt; to install the most up to date version of &lt;code&gt;xCertificate&lt;/code&gt; that is available, while pinning &lt;code&gt;xNetworking&lt;/code&gt; to version 2.12.0.0.</source>
          <target state="translated">이 예제에서 &lt;code&gt;nil&lt;/code&gt; 은 &lt;code&gt;powershell_package&lt;/code&gt; 에 사용 가능한 최신 버전의 &lt;code&gt;xCertificate&lt;/code&gt; 를 설치하도록 지시 하고 &lt;code&gt;xNetworking&lt;/code&gt; 을 버전 2.12.0.0에 고정 합니다.</target>
        </trans-unit>
        <trans-unit id="9f26d437ad8a8dd7ad4d0d4037568569755c4ea9" translate="yes" xml:space="preserve">
          <source>In this example, the corresponding &lt;code&gt;default.toml&lt;/code&gt; file would have the following key/value pairs defined:</source>
          <target state="translated">이 예에서 해당 &lt;code&gt;default.toml&lt;/code&gt; 파일에는 다음과 같은 키 / 값 쌍이 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d18f0c3eeca34cd19f3bfaea1b7bc78f0c148622" translate="yes" xml:space="preserve">
          <source>In this example, you can see that a change on the project Eegah is in Union, and Mitchell depends on Eegah. As a result, both Eegah and Mitchell&amp;rsquo;s tests are being run.</source>
          <target state="translated">이 예에서 Eegah 프로젝트의 변경 사항이 Union에 있고 Mitchell이 ​​Eegah에 의존하고 있음을 알 수 있습니다. 결과적으로 Eegah와 Mitchell의 테스트가 모두 실행되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eeae7c65ac424c3b4cf799a1b91cd6241eb95dd" translate="yes" xml:space="preserve">
          <source>In this guide, we call Chef Automate versions 1.0.0-1.8.96 &amp;ldquo;Chef Automate 1&amp;rdquo; and the current version &amp;ldquo;Chef Automate 2&amp;rdquo;.</source>
          <target state="translated">이 가이드에서는 Chef Automate 버전 1.0.0-1.8.96 &quot;Chef Automate 1&quot;과 현재 버전 &quot;Chef Automate 2&quot;를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5cf2197d28ef9da7e5fbd803ad119feb2629f97b" translate="yes" xml:space="preserve">
          <source>In this next section, you will build out a custom configuration.</source>
          <target state="translated">이 다음 섹션에서는 사용자 지정 구성을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f4a07308d54e722cadedd84327320df661382665" translate="yes" xml:space="preserve">
          <source>In this section you&amp;rsquo;ll install the Chef Infra Server, and create your organization and user. Note that in order to configure Supermarket later in this guide, you will need a user that is a member of the &lt;code&gt;admins&lt;/code&gt; group.</source>
          <target state="translated">이 섹션에서는 Chef Infra Server를 설치하고 조직과 사용자를 생성합니다. 이 가이드의 뒷부분에서 슈퍼마켓을 구성하려면 &lt;code&gt;admins&lt;/code&gt; 그룹 의 구성원 인 사용자가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="310349f79383b83b16bf8d9c4e4d329a4ddc9752" translate="yes" xml:space="preserve">
          <source>In this section, we go into more detail about the pipeline. As we&amp;rsquo;ve said, the Chef Automate pipeline is made up of six stages: Verify, Build, Acceptance, Union, Rehearsal, and Delivered.</source>
          <target state="translated">이 섹션에서는 파이프 라인에 대해 자세히 설명합니다. 앞서 말했듯이 Chef Automate 파이프 라인은 확인, 빌드, 수락, 통합, 리허설 및 배달의 6 단계로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="39971fcdcb053428afb32da1428de7e87827686d" translate="yes" xml:space="preserve">
          <source>In this section, we go into more detail about the pipeline. As we&amp;rsquo;ve said, the Workflow pipeline is made up of six stages: Verify, Build, Acceptance, Union, Rehearsal, and Delivered.</source>
          <target state="translated">이 섹션에서는 파이프 라인에 대해 자세히 설명합니다. 앞서 말했듯이 워크 플로 파이프 라인은 확인, 빌드, 수락, 통합, 리허설 및 배달의 6 단계로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="32c0497b805e135d93fb8be26af9c9e118894659" translate="yes" xml:space="preserve">
          <source>In this section, you can view all of your v2 policies.</source>
          <target state="translated">이 섹션에서는 모든 v2 정책을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd26938d264f8172d02b2c7b2ec76c457112f89d" translate="yes" xml:space="preserve">
          <source>In this section, you will use a wrapper around the &lt;a href=&quot;https://supermarket.chef.io/cookbooks/supermarket-omnibus-cookbook&quot;&gt;supermarket-omnibus-cookbook&lt;/a&gt; to install private Supermarket. The Supermarket cookbook depends upon the following cookbooks:</source>
          <target state="translated">이 섹션에서는 &lt;a href=&quot;https://supermarket.chef.io/cookbooks/supermarket-omnibus-cookbook&quot;&gt;슈퍼마켓 옴니버스 요리 책&lt;/a&gt; 주위에 래퍼를 사용하여 개인 슈퍼마켓을 설치합니다. 슈퍼마켓 요리 책은 다음 요리 책에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d307114f7e7b153bf6da2b0d5eb3a48b20b8cfa2" translate="yes" xml:space="preserve">
          <source>In this situation, re-synchronize the system clocks with the Network Time Protocol (NTP) server, and then re-run Chef Infra Client.</source>
          <target state="translated">이 경우 시스템 시계를 NTP (Network Time Protocol) 서버와 다시 동기화 한 다음 Chef Infra Client를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9aee89581886aa21e2386506b18ba53b48af6a83" translate="yes" xml:space="preserve">
          <source>In this situation, re-synchronize the system clocks with the Network Time Protocol (NTP) server, and then re-run the chef-client.</source>
          <target state="translated">이 경우 시스템 시계를 NTP (Network Time Protocol) 서버와 다시 동기화 한 후 chef-client를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="316004e9f73e3f49ce28fe316268e9fd7c6f1f5c" translate="yes" xml:space="preserve">
          <source>In this situation, run the following &lt;code&gt;chef shell-init&lt;/code&gt; command instead:</source>
          <target state="translated">이 상황에서는 다음 &lt;code&gt;chef shell-init&lt;/code&gt; 명령을 대신 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d26f4f0295c0310e400b59927a317ef8283d464" translate="yes" xml:space="preserve">
          <source>In this situation, the Chef server may be freaking out a bit, so turn off the daemons using the &lt;code&gt;chef-server-ctl stop&lt;/code&gt; command.</source>
          <target state="translated">이 상황에서 Chef 서버는 약간 이상 할 수 있으므로 &lt;code&gt;chef-server-ctl stop&lt;/code&gt; 명령을 사용하여 디먼을 끄십시오 .</target>
        </trans-unit>
        <trans-unit id="1f3f3c4f1f10b65b43f88408d68009ad93eb2528" translate="yes" xml:space="preserve">
          <source>In this stage, we rebuild all the base packages needed by Chef Habitat using the tools (compiler, etc.) from the existing tools tarball. You will need a copy of the &lt;a href=&quot;https://github.com/habitat-sh/habitat&quot;&gt;habitat&lt;/a&gt; and &lt;a href=&quot;https://github.com/habitat-sh/core-plans&quot;&gt;core-plans&lt;/a&gt; repos on your local disk. For our work, we will assume that everything is being run under a common parent directory called &lt;code&gt;habitat-sh/&lt;/code&gt;. Assuming we want to rebuild the Chef Habitat software as of the last release tag (we&amp;rsquo;ll use &lt;code&gt;0.56.0&lt;/code&gt; here) and the core plans from latest, here&amp;rsquo;s how to get set up:</source>
          <target state="translated">이 단계에서는 기존 도구 tarball의 도구 (컴파일러 등)를 사용하여 Chef Habitat에 필요한 모든 기본 패키지를 다시 빌드합니다. 로컬 디스크에 &lt;a href=&quot;https://github.com/habitat-sh/habitat&quot;&gt;서식지&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/habitat-sh/core-plans&quot;&gt;핵심 계획&lt;/a&gt; 저장소 의 사본이 필요합니다 . 우리 작업을 위해 우리는 모든 것이 &lt;code&gt;habitat-sh/&lt;/code&gt; 라는 공통 상위 디렉토리에서 실행되고 있다고 가정합니다 . 마지막 릴리스 태그 ( 여기서는 &lt;code&gt;0.56.0&lt;/code&gt; 사용)를 기준 으로 Chef Habitat 소프트웨어를 다시 빌드하고 최신 버전의 핵심 계획 을 다시 빌드한다고 가정하면 다음 과 같은 설정 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ffd9ec57ea97aca7b0429538a3aadba25bc1447" translate="yes" xml:space="preserve">
          <source>In this stage, we rebuild all the base packages needed by Chef Habitat using the tools (compiler, etc.) from the previous stage, thus making the system self-hosted. This phase involves not using existing packages that are published in any existing Builder API, so we&amp;rsquo;re going to more carefully create a &lt;code&gt;default&lt;/code&gt;-type Studio. If we use a fully-qualified package identifier and use the &lt;code&gt;HAB_STUDIO_BACKLINE_PKG&lt;/code&gt; environment variable, this will skip the call back to a Builder instance.</source>
          <target state="translated">이 단계에서는 이전 단계의 도구 (컴파일러 등)를 사용하여 Chef Habitat에 필요한 모든 기본 패키지를 다시 빌드하여 시스템을 자체 호스팅하도록 만듭니다. 이 단계에서는 기존 Builder API에 게시 된 기존 패키지를 사용하지 않으므로 &lt;code&gt;default&lt;/code&gt; 유형 Studio 를보다 신중하게 만들 것 입니다. 정규화 된 패키지 식별자를 사용하고 &lt;code&gt;HAB_STUDIO_BACKLINE_PKG&lt;/code&gt; 환경 변수를 사용하면 빌더 인스턴스에 대한 호출을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="15fcb2c533cd84d31e48d53294e8dc2609838319" translate="yes" xml:space="preserve">
          <source>In this step, you will install and set up all of the Chef Software components that you need for the Chef Desktop cookbook.</source>
          <target state="translated">이 단계에서는 Chef Desktop 쿡북에 필요한 모든 Chef 소프트웨어 구성 요소를 설치하고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4eeae98c77de47d437f934ccd620c597d7835598" translate="yes" xml:space="preserve">
          <source>In this step, you will prepare your workstation for developing, testing, and deploying the Chef Desktop cookbook.</source>
          <target state="translated">이 단계에서는 Chef Desktop 쿡북을 개발, 테스트 및 배포하기 위해 워크 스테이션을 준비합니다.</target>
        </trans-unit>
        <trans-unit id="8cbaeb6b53c06194381217e3665f301795f6ec15" translate="yes" xml:space="preserve">
          <source>In various use cases like implementing IT compliance across different departments, it becomes handy to extend the control with metadata. Each control may define an additional &lt;code&gt;impact&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt;. An example looks like:</source>
          <target state="translated">여러 부서에서 IT 컴플라이언스를 구현하는 것과 같은 다양한 사용 사례에서 메타 데이터로 제어를 확장하는 것이 편리해집니다. 각 컨트롤은 추가 &lt;code&gt;impact&lt;/code&gt; , &lt;code&gt;title&lt;/code&gt; 또는 &lt;code&gt;desc&lt;/code&gt; 정의 할 수 있습니다 . 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6af1dace563b962c4a9de08f15504aec15619344" translate="yes" xml:space="preserve">
          <source>In versions of the chef-client prior to version 12.0, this subcommand ONLY works when run against the open source Chef server; it does not run against Enterprise Chef (including hosted Enterprise Chef), or Private Chef.</source>
          <target state="translated">버전 12.0 이전의 chef-client 버전에서이 부속 명령은 오픈 소스 Chef 서버에 대해 실행될 때만 작동합니다. Enterprise Chef (호스트 Enterprise Chef 포함) 또는 Private Chef에 대해서는 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5e793e7da816bf164a66295b32c8f08375f645da" translate="yes" xml:space="preserve">
          <source>In working with Chef, you&amp;rsquo;ll most likely encounter issues in your regular workflow. This page is a collection of common errors our users have reported while working with Chef. Please use the accordion below to select the error message that most closely matches your output. If you are unable to find a matching error, or if the provided steps are unhelpful, please &lt;a href=&quot;https://getchef.zendesk.com/hc/en-us&quot;&gt;file a help ticket&lt;/a&gt;.</source>
          <target state="translated">Chef와 함께 작업 할 때 일반적인 워크 플로에서 문제가 발생할 가능성이 높습니다. 이 페이지는 Chef로 작업하는 동안 사용자가보고 한 일반적인 오류 모음입니다. 아래 아코디언을 사용하여 출력과 가장 일치하는 오류 메시지를 선택하십시오. 일치하는 오류를 찾을 수 없거나 제공된 단계가 도움이되지 않으면 &lt;a href=&quot;https://getchef.zendesk.com/hc/en-us&quot;&gt;도움말 티켓을 제출&lt;/a&gt; 하세요 .</target>
        </trans-unit>
        <trans-unit id="6a533969f7dcc589a7a0b154cc0e006c41697336" translate="yes" xml:space="preserve">
          <source>In your &lt;a href=&quot;https://www.packer.io/docs/provisioners/chef-client.html#install_command&quot;&gt;Packer provisioners config&lt;/a&gt;, include:</source>
          <target state="translated">당신의에서 &lt;a href=&quot;https://www.packer.io/docs/provisioners/chef-client.html#install_command&quot;&gt;패커의 provisioners의 설정&lt;/a&gt; , 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="9481839accd054d01277b2a449b4709ecf948ce4" translate="yes" xml:space="preserve">
          <source>In your &lt;a href=&quot;https://www.terraform.io/docs/provisioners/chef.html#version-string-&quot;&gt;Terraform provisioner config&lt;/a&gt;, include:</source>
          <target state="translated">당신에 &lt;a href=&quot;https://www.terraform.io/docs/provisioners/chef.html#version-string-&quot;&gt;Terraform의 제공자의 설정&lt;/a&gt; , 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="3f18d6255a2f0290d4922f9049ac02aa57b76678" translate="yes" xml:space="preserve">
          <source>In your &lt;a href=&quot;https://www.terraform.io/docs/provisioners/habitat.html#version-string-&quot;&gt;Terraform provisioner config&lt;/a&gt;, include:</source>
          <target state="translated">당신에 &lt;a href=&quot;https://www.terraform.io/docs/provisioners/habitat.html#version-string-&quot;&gt;Terraform의 제공자의 설정&lt;/a&gt; , 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="b3c1ac42ec894ed0357d306be47202afb139b2b5" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;Policyfile.rb&lt;/code&gt; file:</source>
          <target state="translated">당신에 &lt;code&gt;Policyfile.rb&lt;/code&gt; 의 파일 :</target>
        </trans-unit>
        <trans-unit id="8881151c6578fbbfd8187ab788c61c8e51d44bd7" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;metadata.rb&lt;/code&gt; file:</source>
          <target state="translated">당신에 &lt;code&gt;metadata.rb&lt;/code&gt; 의 파일 :</target>
        </trans-unit>
        <trans-unit id="108598f503fe429dc51f8fe26eb8440013728ff4" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;recipes/first.rb&lt;/code&gt;</source>
          <target state="translated">당신의 &lt;code&gt;recipes/first.rb&lt;/code&gt; 에서</target>
        </trans-unit>
        <trans-unit id="7b6cfde2210475f4c27ad51c542aa3f55d9d469b" translate="yes" xml:space="preserve">
          <source>In your SAML Identity Provider (IdP), your Chef Automate instance needs to be referenced as a Service Provider (SP). To do so, use &lt;code&gt;https://automate.example.com/dex/callback&lt;/code&gt;. The concrete configuration items differ between IdP products, but it is often something like &amp;ldquo;Assertion Consumption URI&amp;rdquo; or &amp;ldquo;Single sign on URL&amp;rdquo;. For &amp;ldquo;Audience URI&amp;rdquo; or &amp;ldquo;SP Entity ID&amp;rdquo;, use the same address.</source>
          <target state="translated">SAML ID 공급자 (IdP)에서 Chef Automate 인스턴스는 서비스 공급자 (SP)로 참조되어야합니다. 이렇게하려면 &lt;code&gt;https://automate.example.com/dex/callback&lt;/code&gt; 을 사용 하세요 . 구체적인 구성 항목은 IdP 제품마다 다르지만 &quot;Assertion Consumption URI&quot;또는 &quot;Single sign on URL&quot;과 같은 경우가 많습니다. &quot;Audience URI&quot;또는 &quot;SP Entity ID&quot;의 경우 동일한 주소를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c039ca17ddb001ad065fd01395ba93e1f291e229" translate="yes" xml:space="preserve">
          <source>In your clean Linux environment, update and install the system packages:</source>
          <target state="translated">깨끗한 Linux 환경에서 시스템 패키지를 업데이트하고 설치합니다.</target>
        </trans-unit>
        <trans-unit id="c420c72f74ecbefd99b2c28e8588a51b6fcb6ab8" translate="yes" xml:space="preserve">
          <source>In your command shell, create or navigate to a directory where you will store project repositories. Use &lt;code&gt;delivery setup&lt;/code&gt; with arguments as shown below to create a &lt;code&gt;.delivery/cli.toml&lt;/code&gt; file:</source>
          <target state="translated">명령 셸에서 프로젝트 리포지토리를 저장할 디렉터리를 만들거나 탐색합니다. &lt;code&gt;.delivery/cli.toml&lt;/code&gt; 파일 을 생성하려면 아래와 같이 인수와 함께 &lt;code&gt;delivery setup&lt;/code&gt; 을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="c28b24ea9cffa033927fff1a484b887282336a37" translate="yes" xml:space="preserve">
          <source>In-between each step in a deployment process, callbacks can be run using arbitrary Ruby code, including recipes. All callbacks support embedded recipes given in a block, but each callback assumes a shell command (instead of a deploy hook filename) when given a string.</source>
          <target state="translated">배포 프로세스의 각 단계 사이에서 레시피를 포함한 임의의 Ruby 코드를 사용하여 콜백을 실행할 수 있습니다. 모든 콜백은 블록에 제공된 내장 레시피를 지원하지만, 각 콜백은 문자열이 주어지면 배치 훅 파일 이름 대신 쉘 명령을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="07a1f3b90b67f345b61ed4104f91355614af992d" translate="yes" xml:space="preserve">
          <source>InSpec CLI</source>
          <target state="translated">InSpec CLI</target>
        </trans-unit>
        <trans-unit id="37f7d537381dd4f7c6ad92dabb2b2a21f85d2b5e" translate="yes" xml:space="preserve">
          <source>InSpec Configuration File</source>
          <target state="translated">InSpec 구성 파일</target>
        </trans-unit>
        <trans-unit id="fcbfadcd263068ed3dd8a8beff7a80501b07da1e" translate="yes" xml:space="preserve">
          <source>InSpec Resources (Single Page)</source>
          <target state="translated">InSpec 리소스 (단일 페이지)</target>
        </trans-unit>
        <trans-unit id="d3c86e8ffa4b48392401ba1080c1a611b4946c0d" translate="yes" xml:space="preserve">
          <source>InSpec Resources Reference</source>
          <target state="translated">InSpec 리소스 참조</target>
        </trans-unit>
        <trans-unit id="4aa9c7cb6da82e44e7afa0bddf27942671ac2faa" translate="yes" xml:space="preserve">
          <source>InSpec Version</source>
          <target state="translated">InSpec 버전</target>
        </trans-unit>
        <trans-unit id="1ba0d3954a126398a96bcbf3bc3a26f906062445" translate="yes" xml:space="preserve">
          <source>InSpec includes a number of &lt;a href=&quot;../../matchers/index&quot;&gt;universal matchers&lt;/a&gt;.</source>
          <target state="translated">InSpec에는 여러 &lt;a href=&quot;../../matchers/index&quot;&gt;범용&lt;/a&gt; 매 처가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffc2fc1c35d02618fb7b8e17180693d965af2683" translate="yes" xml:space="preserve">
          <source>InSpec includes a number of &lt;a href=&quot;../../matchers/index&quot;&gt;universal matchers&lt;/a&gt;. See below for matchers specific to this resource.</source>
          <target state="translated">InSpec에는 여러 &lt;a href=&quot;../../matchers/index&quot;&gt;범용&lt;/a&gt; 매 처가 포함되어 있습니다 . 이 리소스와 관련된 매처는 아래를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="62d61353837b1e9ce82467de9b8adb885602bf91" translate="yes" xml:space="preserve">
          <source>InSpec scan API</source>
          <target state="translated">InSpec 스캔 API</target>
        </trans-unit>
        <trans-unit id="bac17f7e9754c7be58f30709f5a858d49c2cc79c" translate="yes" xml:space="preserve">
          <source>InSpec scan API /api/x_chef_incident/inspec_scan</source>
          <target state="translated">InSpec 스캔 API / api / x_chef_incident / inspec_scan</target>
        </trans-unit>
        <trans-unit id="a55f7a80354f1ed7015143cf65e5c0e5bf4817f2" translate="yes" xml:space="preserve">
          <source>InSpec scans menu item</source>
          <target state="translated">InSpec 스캔 메뉴 항목</target>
        </trans-unit>
        <trans-unit id="dc428625c0854f91615486b64cf667b46f0a5e9e" translate="yes" xml:space="preserve">
          <source>Inappropriate physical contact or unwelcome sexual attention.</source>
          <target state="translated">부적절한 신체 접촉 또는 원치 않는 성적 관심.</target>
        </trans-unit>
        <trans-unit id="36891d33593f3545c38cd3268e5b2740d63b22ef" translate="yes" xml:space="preserve">
          <source>Inbound from frontend group to backend cluster</source>
          <target state="translated">프런트 엔드 그룹에서 백엔드 클러스터로 인바운드</target>
        </trans-unit>
        <trans-unit id="8b971db86faf093bce2c3f9608a924ae2e52c9f6" translate="yes" xml:space="preserve">
          <source>Inbound from load balancer to frontend group</source>
          <target state="translated">부하 분산기에서 프런트 엔드 그룹으로 인바운드</target>
        </trans-unit>
        <trans-unit id="6c48a0fad96a15d6de885e866b05e94a82b90493" translate="yes" xml:space="preserve">
          <source>Inbound network connectivity from LAN (HTTP/HTTPS) is required for internal clients to access the on-premises Chef Habitat Builder.</source>
          <target state="translated">내부 클라이언트가 온 프레미스 Chef Habitat Builder에 액세스하려면 LAN (HTTP / HTTPS)에서 인바운드 네트워크 연결이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6147d1cc746df546cd3e8a6379ea7ef46afb838a" translate="yes" xml:space="preserve">
          <source>Incarnation</source>
          <target state="translated">Incarnation</target>
        </trans-unit>
        <trans-unit id="a48ee0d0ba94beb2082b340923ce4897ddf6fdaa" translate="yes" xml:space="preserve">
          <source>Include Recipes</source>
          <target state="translated">레시피 포함</target>
        </trans-unit>
        <trans-unit id="c789568dd3e880a06cd0f90f23b8a9c5fc96a118" translate="yes" xml:space="preserve">
          <source>Include a Class</source>
          <target state="translated">수업 포함</target>
        </trans-unit>
        <trans-unit id="fbb428f31f3f5a1b6883c0403a29c414847f54e2" translate="yes" xml:space="preserve">
          <source>Include a Parameter</source>
          <target state="translated">매개 변수 포함</target>
        </trans-unit>
        <trans-unit id="3c05fc31cea1580a3824e7ba6b4c1e7625d96227" translate="yes" xml:space="preserve">
          <source>Include all diagnostics. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">모든 진단을 포함합니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16e855df88a5c24f45f89da51ed85f152c1ef7d7" translate="yes" xml:space="preserve">
          <source>Include data loader diagnostics. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">데이터 로더 진단을 포함합니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77b16af874aef41ac40f72f1723ad4037344de92" translate="yes" xml:space="preserve">
          <source>Include instance diagnostics. Default: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">인스턴스 진단을 포함합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e1b6be86ac453f4b3c578808970a9ac73566c27" translate="yes" xml:space="preserve">
          <source>Include one or more configuration settings and their updated value(s) in your configuration patch &lt;code&gt;.toml&lt;/code&gt; file to reflect the desired global Data Feed behavior:</source>
          <target state="translated">원하는 글로벌 데이터 피드 동작을 반영하기 위해 구성 패치 &lt;code&gt;.toml&lt;/code&gt; 파일에 하나 이상의 구성 설정 및 업데이트 된 값 을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="5ccfd3c8732810f0243f794128b4d1cc03feeac6" translate="yes" xml:space="preserve">
          <source>Including All Controls from a Profile</source>
          <target state="translated">프로필의 모든 컨트롤 포함</target>
        </trans-unit>
        <trans-unit id="ee927d1ccfeb52ef82239189616fae05f7db78fa" translate="yes" xml:space="preserve">
          <source>Incorporate changing permissions to the desired end state from within a recipe</source>
          <target state="translated">레시피 내에서 변경 권한을 원하는 최종 상태로 통합</target>
        </trans-unit>
        <trans-unit id="bd5107d70fd2431f8f5abe19afc5af7ad8aa77fe" translate="yes" xml:space="preserve">
          <source>Incorrect password specified for &lt;code&gt;db_superuser_password&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;db_superuser_password&lt;/code&gt; 에 잘못된 암호가 지정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a722582707b74067bbf0419ac3bdc35585e9fe00" translate="yes" xml:space="preserve">
          <source>Incorrect user name specified for &lt;code&gt;db_superuser&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;db_superuser&lt;/code&gt; 에 대해 잘못된 사용자 이름이 지정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="13a08464cfb4b8f0a9758ccee84a13ec4e7912d9" translate="yes" xml:space="preserve">
          <source>Increase the root volume size to a minimum of 30GB. You might consider even larger if you have hundreds of nodes or need to maintain months of node visibility data.</source>
          <target state="translated">루트 볼륨 크기를 최소 30GB로 늘리십시오. 수백 개의 노드가 있거나 몇 달 동안의 노드 가시성 데이터를 유지해야하는 경우 더 큰 것을 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="daacc98f884fddf5312e9fb5388de1a3ad754f52" translate="yes" xml:space="preserve">
          <source>Increases the amount of time required to complete a Chef Infra Client run.</source>
          <target state="translated">Chef Infra Client 실행을 완료하는 데 필요한 시간을 늘립니다.</target>
        </trans-unit>
        <trans-unit id="b14a1285c4a5787c1be0b1dd42ed3bac38b9402b" translate="yes" xml:space="preserve">
          <source>Increases the amount of time required to complete the chef-client run</source>
          <target state="translated">요리사 클라이언트 실행을 완료하는 데 필요한 시간이 증가합니다.</target>
        </trans-unit>
        <trans-unit id="a36cd70001f2c6ce633af00592ebabd4c9c5808c" translate="yes" xml:space="preserve">
          <source>Increment the Chef Infra Client Version</source>
          <target state="translated">Chef Infra 클라이언트 버전 증가</target>
        </trans-unit>
        <trans-unit id="3fb8d61db4388bdca7fd2614d03c95540b6b1830" translate="yes" xml:space="preserve">
          <source>Increment your build cookbook&amp;rsquo;s version in the cookbook&amp;rsquo;s metadata file.</source>
          <target state="translated">쿡북의 메타 데이터 파일에서 빌드 쿡북의 버전을 늘립니다.</target>
        </trans-unit>
        <trans-unit id="25b433253b2499e9ba9b23517e51f47880d6e315" translate="yes" xml:space="preserve">
          <source>Indicates if BigQuery should accept rows that are missing trailing optional columns</source>
          <target state="translated">BigQuery가 후행 선택적 열이 누락 된 행을 허용해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1a9923af774b1d364ed6a1a80f40dfb1d4a9e0a6" translate="yes" xml:space="preserve">
          <source>Indicates if BigQuery should allow extra values that are not represented in the table schema</source>
          <target state="translated">BigQuery가 테이블 스키마에 표시되지 않은 추가 값을 허용해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="43098d42b6a3d597924c943892926b67b2137d2c" translate="yes" xml:space="preserve">
          <source>Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file</source>
          <target state="translated">BigQuery가 CSV 파일에 줄 바꿈 문자가 포함 된 인용 데이터 섹션을 허용해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="01760709f56aae31f850e97f38d3a8430bf339c4" translate="yes" xml:space="preserve">
          <source>Indicates if dependent services should also be disabled. Can only be turned on if service is disabled.</source>
          <target state="translated">종속 서비스도 비활성화해야하는지 여부를 나타냅니다. 서비스가 비활성화 된 경우에만 켤 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5608ff3d3aaa088e5a626d5ff3c957735bfd277" translate="yes" xml:space="preserve">
          <source>Indicates if the ConfigurationRecorder will record changes for all resources, regardless of type. If this is true, resource_types is ignored.</source>
          <target state="translated">ConfigurationRecorder가 유형에 관계없이 모든 리소스에 대한 변경 사항을 기록할지 여부를 나타냅니다. 이것이 참이면 resource_types가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2a15e9dc9a414b574a82009b4bbe6b1ba098d52c" translate="yes" xml:space="preserve">
          <source>Indicates if the Key has ever been used.</source>
          <target state="translated">키가 사용되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0c26f20baf6ba6f2aea407f18df8405f81ccbbeb" translate="yes" xml:space="preserve">
          <source>Indicates if the Key has never been used.</source>
          <target state="translated">키가 사용 된 적이 없는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f62347afca4129cee7220da68d7bd9186fe75b6f" translate="yes" xml:space="preserve">
          <source>Indicates if the status of the Key is Active.</source>
          <target state="translated">키의 상태가 활성인지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2fa57ff3fe510f08fa7d213b9d91a9917449661a" translate="yes" xml:space="preserve">
          <source>Indicates if the status of the Key is Inactive.</source>
          <target state="translated">키의 상태가 비활성인지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4fc1170a893c6c88bade6746deec1fd6bcf42404" translate="yes" xml:space="preserve">
          <source>Indicates if this alert is enabled or not (&lt;code&gt;true&lt;/code&gt;|&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">이 경고가 활성화되었는지 여부를 나타냅니다 ( &lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="288463fdea0ede0143cae31f3afe1b60f77784d0" translate="yes" xml:space="preserve">
          <source>Indicates that a property is required. For example:</source>
          <target state="translated">속성이 필요함을 나타냅니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="8ca99b9596c479a9b6e6f878c54855b1e90605c7" translate="yes" xml:space="preserve">
          <source>Indicates that all environments, cookbooks, cookbook versions, metadata, and/or data bags will be uploaded, deleted, generated, or tested. The context depends on which knife subcommand and argument is used.</source>
          <target state="translated">모든 환경, 요리 책, 요리 책 버전, 메타 데이터 및 / 또는 데이터 백이 업로드, 삭제, 생성 또는 테스트됨을 나타냅니다. 컨텍스트는 사용되는 knife 부속 명령 및 인수에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="848096c512ed237ebf17b2b8a8fa9c1f6a40483a" translate="yes" xml:space="preserve">
          <source>Indicates that colored output should be used. (Colored output can only be used when output is sent to a terminal.)</source>
          <target state="translated">컬러 출력을 사용해야 함을 나타냅니다. (컬러 출력은 출력이 터미널로 전송되는 경우에만 사용할 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="e5d41fde03ee5bad6172b02891228144527e323b" translate="yes" xml:space="preserve">
          <source>Indicates that the Flow Log is attached to a ENI resource.</source>
          <target state="translated">흐름 로그가 ENI 리소스에 연결되어 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8015ed933dd17f23c92deb37e8ca6fa401d1b1df" translate="yes" xml:space="preserve">
          <source>Indicates that the Flow Log is attached to a subnet resource.</source>
          <target state="translated">흐름 로그가 서브넷 리소스에 연결되어 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1b1c085cbb0a7f37960cd35effda603e66a02dec" translate="yes" xml:space="preserve">
          <source>Indicates that the Flow Log is attached to a vpc resource.</source>
          <target state="translated">흐름 로그가 vpc 리소스에 연결되어 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="73cff1dfa17e12963d132047ab395fa3004284d8" translate="yes" xml:space="preserve">
          <source>Indicates that the name of the partial template file should be interpreted as a path to a file in the local file system or looked up in a cookbook using the normal rules for template files. Set to &lt;code&gt;true&lt;/code&gt; to interpret as a path to a file in the local file system and to &lt;code&gt;false&lt;/code&gt; to use the normal rules for template files</source>
          <target state="translated">부분 템플리트 파일의 이름이 로컬 파일 시스템의 파일 경로로 해석되거나 템플리트 파일의 일반 규칙을 사용하여 요리 책에서 조회되어야 함을 나타냅니다. 로컬 파일 시스템에서 파일 경로로 해석 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하고 템플리트 파일에 일반 규칙을 사용하려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="354c8e3e388444b6b1d84fcb3158bf3d362577e1" translate="yes" xml:space="preserve">
          <source>Indicates that the share is continuously available.</source>
          <target state="translated">공유를 지속적으로 사용할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="be3c3662b51d33e9c14014c7e7ea5f113b4a07b1" translate="yes" xml:space="preserve">
          <source>Indicates that the share is encrypted.</source>
          <target state="translated">공유가 암호화되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4046bec0ba36fc22e9411152fca2eff9b14e4eb2" translate="yes" xml:space="preserve">
          <source>Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.</source>
          <target state="translated">이것이 부팅 디스크임을 나타냅니다. 가상 머신은 루트 파일 시스템으로 디스크의 첫 번째 파티션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7c2d342f612854c15b5fe5a525dc0a7d4fd2ebc9" translate="yes" xml:space="preserve">
          <source>Indicates the depth to which permissions will be applied. Possible values: &lt;code&gt;true&lt;/code&gt; to apply only to the first level of children; &lt;code&gt;false&lt;/code&gt; to apply to all children.</source>
          <target state="translated">권한이 적용될 깊이를 나타냅니다. 가능한 값 : 첫 번째 수준의 어린이에게만 적용되는 경우 &lt;code&gt;true&lt;/code&gt; ; 모든 어린이에게 적용하려면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d1b5bcc491d402cac6a1ba83f043690faf37ac0c" translate="yes" xml:space="preserve">
          <source>Indicates the most frequently failing controls. Hover over an individual bubble to show the control name and the number of failed nodes.</source>
          <target state="translated">가장 자주 실패하는 제어를 나타냅니다. 개별 풍선 위로 마우스를 가져 가면 제어 이름과 실패한 노드의 수가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="54d11ee7aa545fdc5d3165c62d4b5e549d450dee" translate="yes" xml:space="preserve">
          <source>Indicates the profiles with the highest failure rate. Hover over an individual bubble to show the full profile name and the number of failed nodes.</source>
          <target state="translated">실패율이 가장 높은 프로필을 나타냅니다. 개별 풍선 위로 마우스를 가져 가면 전체 프로필 이름과 실패한 노드의 수가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bdf0e7251a42d35e2dfdd2c7d9e2be2eeb6dfb20" translate="yes" xml:space="preserve">
          <source>Indicates the type of database account, e.g. &lt;code&gt;GlobalDocumentDB&lt;/code&gt;, &lt;code&gt;MongoDB&lt;/code&gt;</source>
          <target state="translated">데이터베이스 계정 유형 (예 : &lt;code&gt;GlobalDocumentDB&lt;/code&gt; , &lt;code&gt;MongoDB&lt;/code&gt; )을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="91b6acada7bab40c1f657696c112b91a0f4e9931" translate="yes" xml:space="preserve">
          <source>Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one type of load balancing cannot be used with the other(s).</source>
          <target state="translated">이 지역 백엔드 서비스가 사용될 부하 분산의 종류를 나타냅니다. 한 유형의 부하 분산을 위해 생성 된 백엔드 서비스는 다른 유형과 함께 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ba2e8732c28001008274abe78b8ec0c026895be8" translate="yes" xml:space="preserve">
          <source>Indicates whether a DFS namespace server uses FQDNs in referrals. If this property is set to true, the server uses FQDNs in referrals. If this property is set to false then the server uses NetBIOS names.</source>
          <target state="translated">DFS 네임 스페이스 서버가 조회에서 FQDN을 사용하는지 여부를 나타냅니다. 이 속성을 true로 설정하면 서버는 조회에서 FQDN을 사용합니다. 이 속성이 false로 설정되면 서버는 NetBIOS 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="587ef476b481b461ac346c31ee923731facca6a2" translate="yes" xml:space="preserve">
          <source>Indicates whether a permission is applied to the parent directory. Possible values: &lt;code&gt;true&lt;/code&gt; to apply to the parent directory or file and its children; &lt;code&gt;false&lt;/code&gt; to not apply only to child directories and files.</source>
          <target state="translated">부모 디렉토리에 권한이 적용되는지 여부를 나타냅니다. 가능한 값 : 상위 디렉토리 또는 파일 및 해당 하위에 적용하려면 &lt;code&gt;true&lt;/code&gt; 입니다 . 하위 디렉토리 및 파일에만 적용되지 않으려면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bc050dfc419b358782ceafa5f427b909d71e274b" translate="yes" xml:space="preserve">
          <source>Indicates whether an attempt to bootstrap the Chef Infra Server is made. Generally only enabled on systems that have bootstrap enabled via a &lt;code&gt;server&lt;/code&gt; entry. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server를 부트 스트랩하려는 시도가 있는지 여부를 나타냅니다. 일반적으로 &lt;code&gt;server&lt;/code&gt; 항목을 통해 부트 스트랩이 활성화 된 시스템에서만 활성화됩니다 . 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="831e07ce099339256ccbc829213a3af6ade8149d" translate="yes" xml:space="preserve">
          <source>Indicates whether an attempt to bootstrap the Chef server is made. Generally only enabled on systems that have bootstrap enabled via a &lt;code&gt;server&lt;/code&gt; entry. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef 서버의 부트 스트랩 시도 여부를 나타냅니다. 일반적으로 &lt;code&gt;server&lt;/code&gt; 항목을 통해 부트 스트랩이 활성화 된 시스템에서만 활성화됩니다 . 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28a7af2fb5882ecb849e0625d035cff53b12c3b9" translate="yes" xml:space="preserve">
          <source>Indicates whether or not to export logs.</source>
          <target state="translated">로그를 내보낼 지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="499eaaddb96718ff8178e0ede90f09961fc5fa36" translate="yes" xml:space="preserve">
          <source>Indicates whether the ConfigurationRecorder will record changes for global resource types (such as &lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/intro-structure.html#intro-structure-principal&quot;&gt;Principal&lt;/a&gt;s).</source>
          <target state="translated">ConfigurationRecorder가 전역 리소스 유형 (예 : &lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/intro-structure.html#intro-structure-principal&quot;&gt;Principal&lt;/a&gt; )에 대한 변경 사항을 기록할지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="3a9f7e9d54483f68dfbfc4c06c4269b987dbedbf" translate="yes" xml:space="preserve">
          <source>Indicates whether the RAID array exists. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">RAID 어레이가 존재하는지 여부를 나타냅니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57ad373bb75986c3eefd12fc677981416a99c50d" translate="yes" xml:space="preserve">
          <source>Indicates whether the backend service will be used with internal or external load balancing. A backend service created for one type of load balancing cannot be used with the other.</source>
          <target state="translated">백엔드 서비스를 내부 또는 외부 부하 분산과 함께 사용할지 여부를 나타냅니다. 한 유형의 부하 분산을 위해 생성 된 백엔드 서비스는 다른 유형과 함께 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e01fec2ceb1c74ba455c25edb70afeab87911129" translate="yes" xml:space="preserve">
          <source>Indicates whether the content is encrypted at rest or not.</source>
          <target state="translated">콘텐츠가 유휴 상태에서 암호화되는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d4fe5aa3d0a29eebbe3d64a0916bc6014249881c" translate="yes" xml:space="preserve">
          <source>Indicates whether the content is encrypted at transit or not.</source>
          <target state="translated">콘텐츠가 전송시 암호화되는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4fbbdf44da8f520bd345074f8f5a3fc677e292c5" translate="yes" xml:space="preserve">
          <source>Indicates whether the file system is encrypted or not.</source>
          <target state="translated">파일 시스템이 암호화되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c6af066d6a4a5361cff556e9806e1ae39e789827" translate="yes" xml:space="preserve">
          <source>Indicates whether the internet gateway is &lt;strong&gt;attached&lt;/strong&gt; to a VPC or not (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">인터넷 게이트웨이가 VPC에 &lt;strong&gt;연결&lt;/strong&gt; 되었는지 여부를 나타냅니다 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f0f0b277eef76d7608368ba623a191012046c2a8" translate="yes" xml:space="preserve">
          <source>Indicates whether the internet gateway is attached to a VPC (&lt;code&gt;attached&lt;/code&gt; or &lt;code&gt;detached&lt;/code&gt;). The field name is &lt;code&gt;attachment_state&lt;/code&gt;.</source>
          <target state="translated">인터넷 게이트웨이가 VPC에 연결되었는지 여부를 나타냅니다 ( &lt;code&gt;attached&lt;/code&gt; 또는 &lt;code&gt;detached&lt;/code&gt; ). 필드 이름은 &lt;code&gt;attachment_state&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9171979cfe6dba80a156faa1d69b717b8e21f5a5" translate="yes" xml:space="preserve">
          <source>Indicates whether the internet gateway is in a &lt;strong&gt;detached&lt;/strong&gt; state or not (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">인터넷 게이트웨이가 &lt;strong&gt;분리 된&lt;/strong&gt; 상태 인지 여부를 나타냅니다 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="413f49aa2a0f5841e2d256ec791e7417d7168472" translate="yes" xml:space="preserve">
          <source>Indicates whether the volume will be encrypted.</source>
          <target state="translated">볼륨이 암호화되는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6b6bfd8c1b38dabe906a93f33184104268b2d2dd" translate="yes" xml:space="preserve">
          <source>Indicates whether to retain acknowledged messages. If &lt;code&gt;true&lt;/code&gt;, then messages are not expunged from the subscription&amp;rsquo;s backlog, even if they are acknowledged, until they fall out of the messageRetentionDuration window.</source>
          <target state="translated">확인 된 메시지를 유지할지 여부를 나타냅니다. 경우 &lt;code&gt;true&lt;/code&gt; 그들은 messageRetentionDuration 창 밖으로 떨어질 때까지, 다음 메시지는 그들이 인정하는 경우에도, 구독의 백 로그에서 삭제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="250fcdf8a71a720d7ed6554d01e9b49dc4244b9e" translate="yes" xml:space="preserve">
          <source>Individual Node Display</source>
          <target state="translated">개별 노드 표시</target>
        </trans-unit>
        <trans-unit id="02a35795db495ecd9dd4fd433ded7d99add307d0" translate="yes" xml:space="preserve">
          <source>Individual headers can be tested via:</source>
          <target state="translated">개별 헤더는 다음을 통해 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e0b8d84685da98d9c39148147e04b3d737c97e5" translate="yes" xml:space="preserve">
          <source>Individual teams have competing needs for object and object types&amp;mdash;data bags, environments, roles, and cookbooks are unique to each organization, even if they share the same name</source>
          <target state="translated">개별 팀은 객체 및 객체 유형에 대한 경쟁 요구가 있습니다. 데이터 백, 환경, 역할 및 요리 책은 동일한 이름을 공유하더라도 각 조직마다 고유합니다.</target>
        </trans-unit>
        <trans-unit id="63ce2d22724f2972b329fb1581889ecd2940d652" translate="yes" xml:space="preserve">
          <source>Individual users can opt out of telemetry by unchecking the telemetry box on the welcome pop-up the first time they log into Automate.</source>
          <target state="translated">개별 사용자는 Automate에 처음 로그인 할 때 환영 팝업에서 원격 분석 상자를 선택 취소하여 원격 분석을 옵트 아웃 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a777d8da63977bfcf735fddf04c5c7fceb368c42" translate="yes" xml:space="preserve">
          <source>Individual users who are members of a group will inherit the permissions assigned to the group. The Chef Infra Server includes the following default groups: &lt;code&gt;admins&lt;/code&gt;, &lt;code&gt;clients&lt;/code&gt;, and &lt;code&gt;users&lt;/code&gt;. For users of the hosted Chef Infra Server, an additional default group is provided: &lt;code&gt;billing_admins&lt;/code&gt;.</source>
          <target state="translated">그룹의 구성원 인 개별 사용자는 그룹에 할당 된 권한을 상속받습니다. Chef Infra Server에는 &lt;code&gt;admins&lt;/code&gt; , &lt;code&gt;clients&lt;/code&gt; 및 &lt;code&gt;users&lt;/code&gt; 와 같은 기본 그룹이 포함됩니다 . 호스팅 된 Chef Infra Server 사용자의 경우 추가 기본 그룹 ( &lt;code&gt;billing_admins&lt;/code&gt; ) 이 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="ee3d37ec17ce3a5ed57446447e34a69d1f08ea8c" translate="yes" xml:space="preserve">
          <source>Individual users who are members of a group will inherit the permissions assigned to the group. The Chef server includes the following default groups: &lt;code&gt;admins&lt;/code&gt;, &lt;code&gt;clients&lt;/code&gt;, and &lt;code&gt;users&lt;/code&gt;. For users of the hosted Chef server, an additional default group is provided: &lt;code&gt;billing_admins&lt;/code&gt;.</source>
          <target state="translated">그룹의 구성원 인 개별 사용자는 그룹에 할당 된 권한을 상속받습니다. Chef 서버에는 기본 그룹 인 &lt;code&gt;admins&lt;/code&gt; , &lt;code&gt;clients&lt;/code&gt; 및 &lt;code&gt;users&lt;/code&gt; 가 포함되어 있습니다. 호스팅 된 Chef 서버 사용자의 경우 추가 기본 그룹 인 &lt;code&gt;billing_admins&lt;/code&gt; 가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b631f69842530d659306c8f06dbad594a6b1807" translate="yes" xml:space="preserve">
          <source>Info</source>
          <target state="translated">Info</target>
        </trans-unit>
        <trans-unit id="5b26c0d3b5cb6ae01fc962c22daf3e36d8c16d15" translate="yes" xml:space="preserve">
          <source>Info: The application management documentation for Chef Desktop is under active development. Check back for upcoming enhancements and improvements.</source>
          <target state="translated">정보 : Chef Desktop 용 애플리케이션 관리 문서는 현재 개발 중입니다. 향후 개선 사항 및 개선 사항을 다시 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="77abea4a4d7c2e89dcac758d9c08180b8dbbaba9" translate="yes" xml:space="preserve">
          <source>Information Security</source>
          <target state="translated">정보 보안</target>
        </trans-unit>
        <trans-unit id="fbf9e43f7c116e30851577b0a55b1ebe16c7e4fa" translate="yes" xml:space="preserve">
          <source>Information about &lt;a href=&quot;../install_habitat/index&quot;&gt;installing Chef Habitat&lt;/a&gt; and configuring your workstation can be found in the previous section.</source>
          <target state="translated">&lt;a href=&quot;../install_habitat/index&quot;&gt;Chef Habitat 설치&lt;/a&gt; 및 워크 스테이션 구성 에 대한 정보 는 이전 섹션에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f15824a46981d9eb3137074ad642042ca3903de" translate="yes" xml:space="preserve">
          <source>Information about the application&amp;mdash;the user, their password, the server&amp;mdash;is stored in a data bag on the Chef server</source>
          <target state="translated">응용 프로그램 (사용자, 암호, 서버)에 대한 정보는 Chef 서버의 데이터 백에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="fd6c3fb4d54b2c35b1b2797628feebe4aeed409f" translate="yes" xml:space="preserve">
          <source>Information about the current service&amp;rsquo;s service group</source>
          <target state="translated">현재 서비스의 서비스 그룹에 대한 정보</target>
        </trans-unit>
        <trans-unit id="c0d6d61ea0b1754b1cdb0efa4e262cd4d8ed05de" translate="yes" xml:space="preserve">
          <source>Information for Windows Users</source>
          <target state="translated">Windows 사용자를위한 정보</target>
        </trans-unit>
        <trans-unit id="0ffc4680d65ce7754e932ae1ca2db41fb9ca4c0c" translate="yes" xml:space="preserve">
          <source>Information on whether a stack&amp;rsquo;s actual configuration differs, or has drifted, from it&amp;rsquo;s expected configuration, as defined in the stack template and any values specified as template parameters.</source>
          <target state="translated">스택의 실제 구성이 스택 템플릿 및 템플릿 매개 변수로 지정된 값에 정의 된 예상 구성과 다르거 나 표류했는지에 대한 정보입니다.</target>
        </trans-unit>
        <trans-unit id="8599cb4825732dc9a39b900bd4e81d60124fef48" translate="yes" xml:space="preserve">
          <source>Infra Job Settings</source>
          <target state="translated">인프라 작업 설정</target>
        </trans-unit>
        <trans-unit id="94dee9cee4942be62161cd3326631c9247f44c30" translate="yes" xml:space="preserve">
          <source>Infra node lifecycle jobs have the following options:</source>
          <target state="translated">인프라 노드 수명주기 작업에는 다음과 같은 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="951d9aa32ba8cf46701c7cc519cecd0cfddf565c" translate="yes" xml:space="preserve">
          <source>Infrastructure</source>
          <target state="translated">Infrastructure</target>
        </trans-unit>
        <trans-unit id="324eecf70fe751cea3ef568f70c78c192a94fd32" translate="yes" xml:space="preserve">
          <source>Infrastructure Requirements</source>
          <target state="translated">인프라 요구 사항</target>
        </trans-unit>
        <trans-unit id="35f3f94741872ca78debcb5b303f8969dc557ea8" translate="yes" xml:space="preserve">
          <source>Infrastructure nodes with Environment &lt;code&gt;dev&lt;/code&gt; and Chef Tag &lt;code&gt;devops-123&lt;/code&gt;</source>
          <target state="translated">환경 &lt;code&gt;dev&lt;/code&gt; 및 Chef 태그가있는 인프라 노드 &lt;code&gt;devops-123&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4724823ce38aead5410f8f4037d33f4bb8502b7" translate="yes" xml:space="preserve">
          <source>Ingest</source>
          <target state="translated">Ingest</target>
        </trans-unit>
        <trans-unit id="76db042fcebe0eda9ef81f2860a0dbd3fb126624" translate="yes" xml:space="preserve">
          <source>Ingest Rules</source>
          <target state="translated">수집 규칙</target>
        </trans-unit>
        <trans-unit id="178eee77218bbe0f6c7071bc0dc7b1f2deda0142" translate="yes" xml:space="preserve">
          <source>Ingest Service</source>
          <target state="translated">인제 스트 서비스</target>
        </trans-unit>
        <trans-unit id="30d20c92e619d016844d83c4dcce0edb9c755baa" translate="yes" xml:space="preserve">
          <source>Ingest data into the system</source>
          <target state="translated">시스템에 데이터 수집</target>
        </trans-unit>
        <trans-unit id="0afc69b00c97c7667d8e57af6524d6802dbfee4e" translate="yes" xml:space="preserve">
          <source>Ingest rules allow ingested events and nodes to be added to projects. &lt;em&gt;Node&lt;/em&gt; corresponds to ingested client run and compliance nodes, and &lt;em&gt;Event&lt;/em&gt; corresponds to ingested events on the &lt;em&gt;Event Feed&lt;/em&gt; page.</source>
          <target state="translated">수집 규칙을 사용하면 수집 된 이벤트 및 노드를 프로젝트에 추가 할 수 있습니다. &lt;em&gt;노드&lt;/em&gt; 는 수집 된 클라이언트 실행 및 준수 노드에 해당 하고 &lt;em&gt;이벤트&lt;/em&gt; 는 &lt;em&gt;이벤트 피드&lt;/em&gt; 페이지 에서 수집 된 이벤트에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="e7ab001fc32691a8243422e38d340f50c9a15dc9" translate="yes" xml:space="preserve">
          <source>Ingest rules can be created or changed by navigating to &lt;em&gt;Projects&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab and then selecting a project. When you create or update ingest rules, those changes are staged and &lt;strong&gt;not&lt;/strong&gt; directly applied. Other users may also stage changes.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;프로젝트&lt;/em&gt; 로 이동 한 다음 프로젝트를 선택하여 수집 규칙을 만들거나 변경할 수 있습니다 . 수집 규칙을 생성하거나 업데이트 할 때 이러한 변경 사항은 단계적이며 직접 적용 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 다른 사용자도 스테이지 변경을 수행 할 수 있습니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2a28b6ced05dc527f15eb42f1ee1e6783a6ebe8" translate="yes" xml:space="preserve">
          <source>Ingested Client Run nodes</source>
          <target state="translated">수집 된 클라이언트 실행 노드</target>
        </trans-unit>
        <trans-unit id="9c6cabed3251b2daa617af93b3be8eea8c206cbb" translate="yes" xml:space="preserve">
          <source>Ingested Compliance nodes (including the results of a scan job)</source>
          <target state="translated">수집 된 준수 노드 (스캔 작업 결과 포함)</target>
        </trans-unit>
        <trans-unit id="84b9c699686dd6b02ee314db495d517b21759905" translate="yes" xml:space="preserve">
          <source>Ingested client run and compliance nodes</source>
          <target state="translated">수집 된 클라이언트 실행 및 준수 노드</target>
        </trans-unit>
        <trans-unit id="48f98bafc1835eddadc99e81e516aced5327e008" translate="yes" xml:space="preserve">
          <source>Ingested events require conditions of &lt;code&gt;Event&lt;/code&gt; type to be associated with the correct project. A condition of type &lt;code&gt;Node&lt;/code&gt; will not match an event, even if the condition&amp;rsquo;s operator, attribute, and value all match exactly (and vice versa with &lt;code&gt;Event&lt;/code&gt; project rules and nodes).</source>
          <target state="translated">수집 된 이벤트에는 &lt;code&gt;Event&lt;/code&gt; 유형의 조건이 올바른 프로젝트와 연결되어야합니다. &lt;code&gt;Node&lt;/code&gt; 유형의 조건은 조건의 연산자, 속성 및 값이 모두 정확히 일치하더라도 이벤트와 일치하지 않습니다 ( &lt;code&gt;Event&lt;/code&gt; 프로젝트 규칙 및 노드 와 그 반대의 경우도 마찬가지 임 ).</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="11f2474c2e9a0e4f8e9b1c5e78193f4bc94fd3ec" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. A Hash of environment variables in the form of &lt;code&gt;({&quot;ENV_VARIABLE&quot; =&amp;gt; &quot;VALUE&quot;})&lt;/code&gt;. (These variables must exist for a command to be run successfully.)</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . &lt;code&gt;({&quot;ENV_VARIABLE&quot; =&amp;gt; &quot;VALUE&quot;})&lt;/code&gt; 형식의 환경 변수 해시 . 명령을 성공적으로 실행하려면 이러한 변수가 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="a148be9fb941bcd8b34583a160292621e50b9db9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. Prevent a command from creating a file when that file already exists.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . 해당 파일이 이미 존재하는 경우 명령이 파일을 작성하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="989dd9da77c5f931e34864686dc2b3fa0fa3933b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. Prevent a command from running. This action is used to specify that a command is run only when another resource notifies it.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . 명령이 실행되지 않도록합니다. 이 조치는 다른 자원이이를 통지 할 때만 명령이 실행되도록 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="33969b1926ff68b987269d019d60f9ed6fd95023" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. The amount of time (in seconds) a command is to wait before timing out. Default value: &lt;code&gt;3600&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . 명령이 시간 종료되기 전에 대기하는 시간 (초). 기본 값 : &lt;code&gt;3600&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe2b71ba25a925af0c77ffe49efe20e5d22b7344" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. The current working directory from which a command is run.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . 명령이 실행되는 현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="5089d62bd1bec51f53f514e3516877796d49d466" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. The group name or group ID that must be changed before running a command.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . 명령을 실행하기 전에 변경해야하는 그룹 이름 또는 그룹 ID입니다.</target>
        </trans-unit>
        <trans-unit id="41eb33a6ccf7e39587ae890be1da2291ad108eff" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. The return value for a command. This may be an array of accepted values. An exception is raised when the return value(s) do not match.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . 명령의 반환 값입니다. 허용되는 값의 배열 일 수 있습니다. 반환 값이 일치하지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="46c0b92acbd66677d08d455f16673ba6c1b02cb9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;strong&gt;execute&lt;/strong&gt; resource. The return value for a command. This may be an array of accepted values. An exception is raised when the return value(s) do not match. Default value: &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 에서 상속됩니다 . 명령의 반환 값 허용되는 값의 배열 일 수 있습니다. 반환 값이 일치하지 않으면 예외가 발생합니다. 초기 값 : &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cbc96935ff452f4569b884b5126aedb9b7bef44" translate="yes" xml:space="preserve">
          <source>Initial App Deployment to a Node</source>
          <target state="translated">노드에 초기 앱 배포</target>
        </trans-unit>
        <trans-unit id="03ce1a8962bb9c18fd5221d7ab80f9dd585f84ea" translate="yes" xml:space="preserve">
          <source>Initial Definition Code</source>
          <target state="translated">초기 정의 코드</target>
        </trans-unit>
        <trans-unit id="1b2821e918a9d8eb5f419229a9541a08b4d740de" translate="yes" xml:space="preserve">
          <source>Initial Package Build Flow</source>
          <target state="translated">초기 패키지 빌드 흐름</target>
        </trans-unit>
        <trans-unit id="0ff4ece5679b0ce3b52a49ce10927df18eb61ad5" translate="yes" xml:space="preserve">
          <source>Initial Peer(s)</source>
          <target state="translated">초기 피어</target>
        </trans-unit>
        <trans-unit id="50fd9d6de6223a114a99d212893cab7878325f31" translate="yes" xml:space="preserve">
          <source>Initial attempts to recover should follow this general pattern and use the scenarios and tools shown above to assist in the recovery steps:</source>
          <target state="translated">초기 복구 시도는이 일반적인 패턴을 따라야하며 위에 표시된 시나리오 및 도구를 사용하여 복구 단계를 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8364f46c2bb2294947e9e1c3c14c46a193daa8d" translate="yes" xml:space="preserve">
          <source>Initial configuration of the Chef Infra Server is done automatically using a self-signed certificate to create the certificate and private key files for Nginx. This section details the process for updating a Chef Infra Server&amp;rsquo;s SSL certificate.</source>
          <target state="translated">Chef Infra Server의 초기 구성은 자체 서명 된 인증서를 사용하여 자동으로 수행되어 Nginx 용 인증서 및 개인 키 파일을 생성합니다. 이 섹션에서는 Chef Infra Server의 SSL 인증서를 업데이트하는 프로세스를 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a8dec84925c2631c086550c8ce0e03ea2d80c8c9" translate="yes" xml:space="preserve">
          <source>Initial configuration of the Chef server is done automatically using a self-signed certificate to create the certificate and private key files for Nginx.</source>
          <target state="translated">Chef 서버의 초기 구성은 자체 서명 된 인증서를 사용하여 자동으로 수행되어 Nginx에 대한 인증서 및 개인 키 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4b33be9eb1d9464d884ad309b57b13542c57a409" translate="yes" xml:space="preserve">
          <source>Initial size of the pagefile in megabytes.</source>
          <target state="translated">페이지 파일의 초기 크기 (MB)입니다.</target>
        </trans-unit>
        <trans-unit id="523744dd5e01acba50e43f4cc6bd4f7ce1d68ca3" translate="yes" xml:space="preserve">
          <source>Initialize default config</source>
          <target state="translated">기본 구성 초기화</target>
        </trans-unit>
        <trans-unit id="82fe44265c700759289b931151479194f2968338" translate="yes" xml:space="preserve">
          <source>Initialize default configuration and save it to a file.</source>
          <target state="translated">기본 구성을 초기화하고 파일에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="b04f412c8ce92adbf8bfdf7cb80bbf64ba685cfa" translate="yes" xml:space="preserve">
          <source>Initialize the cookbook for Chef Automate:</source>
          <target state="translated">Chef Automate 용 쿡북을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a290f33fc37a249462a05b5afad6d51f514ce896" translate="yes" xml:space="preserve">
          <source>Initialize the repository with:</source>
          <target state="translated">다음을 사용하여 저장소를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="1c0301475a9db90c1befce5e1d5b9ed811c82fd7" translate="yes" xml:space="preserve">
          <source>Initialize the setting from the command line with:</source>
          <target state="translated">다음을 사용하여 명령 줄에서 설정을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="755ae3b17e81ef42905bbf4caba8992d32c325c1" translate="yes" xml:space="preserve">
          <source>Initializing a new GitHub project in Workflow</source>
          <target state="translated">워크 플로에서 새 GitHub 프로젝트 초기화</target>
        </trans-unit>
        <trans-unit id="b944f8b60e9e13d4e61fa31eaadf91fbb6043db4" translate="yes" xml:space="preserve">
          <source>Initiate the upgrade on the follower nodes first:</source>
          <target state="translated">먼저 팔로워 노드에서 업그레이드를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="e5e7421a2df6030d1b48c96c67eb410f0c0b3092" translate="yes" xml:space="preserve">
          <source>Inline DSL</source>
          <target state="translated">인라인 DSL</target>
        </trans-unit>
        <trans-unit id="62d048ab15fe71589a192aa32dfde8cfed8f778a" translate="yes" xml:space="preserve">
          <source>Inline Markup</source>
          <target state="translated">인라인 마크 업</target>
        </trans-unit>
        <trans-unit id="ba58cbb8452ffe0ebc2dc7dadc99784c0ce98186" translate="yes" xml:space="preserve">
          <source>Inline Methods</source>
          <target state="translated">인라인 방법</target>
        </trans-unit>
        <trans-unit id="76c3bc374de84dce9e480165c9526d41fbc7cb3c" translate="yes" xml:space="preserve">
          <source>Inline Modules</source>
          <target state="translated">인라인 모듈</target>
        </trans-unit>
        <trans-unit id="d4fb6d63b7d2993d85babe6255d15cb29cce0816" translate="yes" xml:space="preserve">
          <source>Inline in control code, using &lt;code&gt;input('input_name', value: 42)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input('input_name', value: 42)&lt;/code&gt; 사용하여 제어 코드의 인라인 .</target>
        </trans-unit>
        <trans-unit id="c375e569f42f06fa4c180895e310bc48b3f7be08" translate="yes" xml:space="preserve">
          <source>Inno Setup (inno)</source>
          <target state="translated">Inno Setup (이노)</target>
        </trans-unit>
        <trans-unit id="d7071f56c6dd0be32a956ae91b6c3a7ca92c8f1d" translate="yes" xml:space="preserve">
          <source>Input Options Reference</source>
          <target state="translated">입력 옵션 참조</target>
        </trans-unit>
        <trans-unit id="60c41a24ceda9fd3106fdd41afbf8a9a20ec8028" translate="yes" xml:space="preserve">
          <source>Input Provider</source>
          <target state="translated">입력 제공자</target>
        </trans-unit>
        <trans-unit id="02d93d16d8d529860f48bd7fbc0669e01038c6d9" translate="yes" xml:space="preserve">
          <source>Input Scope</source>
          <target state="translated">입력 범위</target>
        </trans-unit>
        <trans-unit id="6bc84182091f57d4ab935412c7733b9445cbd6a9" translate="yes" xml:space="preserve">
          <source>Inputs are available throughout the InSpec profile DSL. You can use them anywhere.</source>
          <target state="translated">InSpec 프로파일 DSL 전체에서 입력을 사용할 수 있습니다. 어디서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef96225dd16c55e4474037ca02a402a88503a44f" translate="yes" xml:space="preserve">
          <source>Inputs are documented in detail in the &lt;a href=&quot;../inputs/index&quot;&gt;input documentation&lt;/a&gt;.</source>
          <target state="translated">입력은 입력 문서에 자세히 설명되어 &lt;a href=&quot;../inputs/index&quot;&gt;있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a80ee0f496cb443001c7d33981cf119fc5ce5d31" translate="yes" xml:space="preserve">
          <source>Inputs are the &amp;ldquo;knobs&amp;rdquo; you can use to customize the behavior of Chef InSpec profiles. If a profile supports inputs, you can set the inputs in a variety of ways, allowing flexibility. Profiles that include other profiles can set inputs in the included profile, enabling a multi-layered approach to configuring profiles.</source>
          <target state="translated">입력은 Chef InSpec 프로파일의 동작을 사용자 정의하는 데 사용할 수있는 &quot;노브&quot;입니다. 프로파일이 입력을 지원하는 경우 다양한 방법으로 입력을 설정하여 유연성을 허용 할 수 있습니다. 다른 프로필을 포함하는 프로필은 포함 된 프로필에 입력을 설정할 수 있으므로 프로필 구성에 대한 다층 적 접근이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="5a4e8b8947787226e19621eea867008b21dd33e8" translate="yes" xml:space="preserve">
          <source>Inputs can also be set by custom input plugins, which retrieve values from external sources like secret stores or databases. Please check &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems.org&lt;/a&gt; for available InSpec input plugins.</source>
          <target state="translated">입력은 비밀 저장소 또는 데이터베이스와 같은 외부 소스에서 값을 검색하는 사용자 지정 입력 플러그인으로 설정할 수도 있습니다. 사용 가능한 InSpec 입력 플러그인은 &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems.org&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="722b07a28780a9b9d5a7fef6d2af0c3d5dacae5c" translate="yes" xml:space="preserve">
          <source>Inputs were formerly known as &lt;code&gt;attributes&lt;/code&gt;. Chef InSpec inputs are unrelated to Chef Infra attributes.</source>
          <target state="translated">입력은 이전에 &lt;code&gt;attributes&lt;/code&gt; 알려져있었습니다 . Chef InSpec 입력은 Chef Infra 속성과 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e9bfacc91fb7b611fcabfffa35f37cc2035a4138" translate="yes" xml:space="preserve">
          <source>Insist that your resource group exists</source>
          <target state="translated">리소스 그룹이 존재한다고 주장</target>
        </trans-unit>
        <trans-unit id="95437beaa3de88d82271bdd9c0038b72e81eccb4" translate="yes" xml:space="preserve">
          <source>Inspec 2+ supports running scan jobs against your AWS account configuration, such as CloudWatch or IAM, &lt;a href=&quot;../../inspec/resources/index#aws&quot;&gt;see more here&lt;/a&gt;. Set up Chef Automate to run these scan jobs by providing your AWS Credentials and creating an &lt;em&gt;AWS API Node Manager&lt;/em&gt; in the &lt;strong&gt;Node Integrations&lt;/strong&gt; page in the &lt;strong&gt;Settings&lt;/strong&gt; tab.</source>
          <target state="translated">Inspec 2+는 CloudWatch 또는 IAM과 같은 AWS 계정 구성에 대한 스캔 작업 실행을 지원합니다 . &lt;a href=&quot;../../inspec/resources/index#aws&quot;&gt;자세한 내용은 여기를 참조하십시오&lt;/a&gt; . AWS 자격 증명을 제공 하고 &lt;strong&gt;설정&lt;/strong&gt; 탭 의 &lt;strong&gt;노드 통합&lt;/strong&gt; 페이지에서 &lt;em&gt;AWS API 노드 관리자&lt;/em&gt; 를 생성하여 이러한 스캔 작업을 실행하도록 Chef Automate를 &lt;strong&gt;설정합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8aaafdb4376cbe3eadea2da708f93d503ec4f451" translate="yes" xml:space="preserve">
          <source>Inspec 2+ supports running scan jobs against your Azure account configuration, such as network security groups and ad users. See &lt;a href=&quot;../../inspec/resources/index#azure&quot;&gt;Azure resources&lt;/a&gt; for more information. Set up Chef Automate to run these scan jobs by providing your Azure credentials and creating an &lt;em&gt;Azure API Node Manager&lt;/em&gt;.</source>
          <target state="translated">Inspec 2+는 네트워크 보안 그룹 및 광고 사용자와 같은 Azure 계정 구성에 대한 스캔 작업 실행을 지원합니다. 자세한 내용은 &lt;a href=&quot;../../inspec/resources/index#azure&quot;&gt;Azure 리소스&lt;/a&gt; 를 참조하세요. Azure 자격 증명을 제공하고 &lt;em&gt;Azure API 노드 관리자를&lt;/em&gt; 만들어 이러한 검색 작업을 실행하도록 Chef Automate를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ed563cb6b68199722ac6ebd9cde261d644e0535d" translate="yes" xml:space="preserve">
          <source>Inspect the endpoint</source>
          <target state="translated">끝점 검사</target>
        </trans-unit>
        <trans-unit id="5f6e386e5bf42685a9dc49b8ed95c8af3153fef1" translate="yes" xml:space="preserve">
          <source>Inspect the owners ID</source>
          <target state="translated">소유자 ID 검사</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="caa827fd6189ef7857ff2e152ad4ca8cbbbfa51b" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;../../workstation/install_workstation/index&quot;&gt;Chef Workstation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../workstation/install_workstation/index&quot;&gt;Chef Workstation을&lt;/a&gt; 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="4d56230942228c0d326e246f571ed4763dc9eb6b" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;../install_push_jobs/index&quot;&gt;Push Jobs&lt;/a&gt; using the &lt;strong&gt;push-jobs&lt;/strong&gt; cookbook and a Chef Infra Client run on each of the target nodes.</source>
          <target state="translated">&lt;strong&gt;푸시 작업&lt;/strong&gt; 쿡북과 각 대상 노드에서 실행되는 Chef Infra 클라이언트를 사용하여 &lt;a href=&quot;../install_push_jobs/index&quot;&gt;푸시 작업&lt;/a&gt; 을 설치합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6d5aea1f52826304e01838b99fb838f240acb33" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://downloads.chef.io/chef-workstation&quot;&gt;Chef Workstation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.chef.io/chef-workstation&quot;&gt;Chef Workstation&lt;/a&gt; 설치</target>
        </trans-unit>
        <trans-unit id="92e146e8bb0cbae18d1c43e863b35d1c94fdb087" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://www.habitat.sh/docs/install-habitat/&quot;&gt;Chef Habitat&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.habitat.sh/docs/install-habitat/&quot;&gt;Chef Habitat&lt;/a&gt; 설치</target>
        </trans-unit>
        <trans-unit id="109dd4e329645dac75e5b384e67050804859de8f" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;chef-ha&lt;/code&gt; package. For Red Hat and CentOS 6:</source>
          <target state="translated">&lt;code&gt;chef-ha&lt;/code&gt; 패키지를 설치하십시오 . Red Hat 및 CentOS 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="7458758aa7cba59fe2caf3e5c3c18bda3beefbb0" translate="yes" xml:space="preserve">
          <source>Install A Standalone Chef Infra Server</source>
          <target state="translated">독립 실행 형 Chef Infra 서버 설치</target>
        </trans-unit>
        <trans-unit id="670a0ff2e7d62d581f01ebf533940ba6e7548311" translate="yes" xml:space="preserve">
          <source>Install AWS EC2 Systems Manager on Instances</source>
          <target state="translated">인스턴스에 AWS EC2 Systems Manager 설치</target>
        </trans-unit>
        <trans-unit id="7270814be1a97e2fe395f9c444a91c35b2229eee" translate="yes" xml:space="preserve">
          <source>Install Berkshelf:</source>
          <target state="translated">Berkshelf를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="8bd7bb797efc129e6edde3ad05624a058f030efc" translate="yes" xml:space="preserve">
          <source>Install Channel</source>
          <target state="translated">채널 설치</target>
        </trans-unit>
        <trans-unit id="b50bd95b5ccff9ee137f949c73efbb2ef11899f5" translate="yes" xml:space="preserve">
          <source>Install Chef Automate Incident Creation Application in ServiceNow</source>
          <target state="translated">ServiceNow에 Chef Automate 인시던트 생성 애플리케이션 설치</target>
        </trans-unit>
        <trans-unit id="07d3e72b28f2bffd492599492f8b269e62aa791c" translate="yes" xml:space="preserve">
          <source>Install Chef Automate and Chef Infra Server</source>
          <target state="translated">Chef Automate 및 Chef Infra Server 설치</target>
        </trans-unit>
        <trans-unit id="cc1877140dc42ce447e3e457b71d63abc0870d9c" translate="yes" xml:space="preserve">
          <source>Install Chef Automate and Chef Infra Server on the Same Host</source>
          <target state="translated">동일한 호스트에 Chef Automate 및 Chef Infra Server 설치</target>
        </trans-unit>
        <trans-unit id="35eed44477a5c917d0c601fde95e54b2a0215a8f" translate="yes" xml:space="preserve">
          <source>Install Chef Automate and Chef Infra Server on the same host with this command:</source>
          <target state="translated">다음 명령을 사용하여 동일한 호스트에 Chef Automate 및 Chef Infra Server를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="6ce64756f89141b6d89a18a34c010926699e851e" translate="yes" xml:space="preserve">
          <source>Install Chef Components</source>
          <target state="translated">Chef 구성 요소 설치</target>
        </trans-unit>
        <trans-unit id="cbd6e85b11541d380dfaf85805389d089f39f065" translate="yes" xml:space="preserve">
          <source>Install Chef Habitat Builder On-prem</source>
          <target state="translated">Chef Habitat Builder On-prem 설치</target>
        </trans-unit>
        <trans-unit id="9c9d59e9888aedc336108a50c82c344f51c24ce6" translate="yes" xml:space="preserve">
          <source>Install Chef Habitat Using Homebrew</source>
          <target state="translated">Homebrew를 사용하여 Chef Habitat 설치</target>
        </trans-unit>
        <trans-unit id="b67afd1a499e56ac279ea30f3003ce01f21ac48b" translate="yes" xml:space="preserve">
          <source>Install Chef Habitat for Linux Kernel 2.x from the Command Line</source>
          <target state="translated">명령 줄에서 Linux Kernel 2.x 용 Chef Habitat 설치</target>
        </trans-unit>
        <trans-unit id="fd463e038c6bae0db4606d7ade7657bb591e85e1" translate="yes" xml:space="preserve">
          <source>Install Chef Habitat from the Command Line</source>
          <target state="translated">명령 줄에서 Chef Habitat 설치</target>
        </trans-unit>
        <trans-unit id="7cc7bd3fec93cfc34a8678f121a585b1f542172e" translate="yes" xml:space="preserve">
          <source>Install Chef Habitat using a Powershell install script</source>
          <target state="translated">Powershell 설치 스크립트를 사용하여 Chef Habitat 설치</target>
        </trans-unit>
        <trans-unit id="b9f66406001500a65ca7bc02fe8883572d02cc5b" translate="yes" xml:space="preserve">
          <source>Install Chef Habitat with Chocolatey, by running the following command:</source>
          <target state="translated">다음 명령을 실행하여 Chocolatey와 함께 Chef Habitat을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="8710cf36728ef4da9ef4c64d5b14e219b09f67c0" translate="yes" xml:space="preserve">
          <source>Install Chef InSpec</source>
          <target state="translated">Chef InSpec 설치</target>
        </trans-unit>
        <trans-unit id="4cf6f3fe823e2e483a153ad3c6f23d79b8d4033a" translate="yes" xml:space="preserve">
          <source>Install Chef Infra Client on Windows Nodes</source>
          <target state="translated">Windows 노드에 Chef Infra Client 설치</target>
        </trans-unit>
        <trans-unit id="40823d713466a9dfa2d5d9f393d87ebf265f0331" translate="yes" xml:space="preserve">
          <source>Install Chef Infra Client using an Existing Process</source>
          <target state="translated">기존 프로세스를 사용하여 Chef Infra Client 설치</target>
        </trans-unit>
        <trans-unit id="a2c285b1b5a5f458e69c71b800846dff6a512abe" translate="yes" xml:space="preserve">
          <source>Install Chef Infra Client using the MSI Installer</source>
          <target state="translated">MSI 설치 프로그램을 사용하여 Chef Infra Client 설치</target>
        </trans-unit>
        <trans-unit id="6eee80434b00f4277e25848a3b864f60e715a9b7" translate="yes" xml:space="preserve">
          <source>Install Chef Infra Server</source>
          <target state="translated">Chef Infra Server 설치</target>
        </trans-unit>
        <trans-unit id="a70da0014705d3b669467a156c87c8b9424d46b2" translate="yes" xml:space="preserve">
          <source>Install Chef Infra Server With Automate</source>
          <target state="translated">Automate로 Chef Infra Server 설치</target>
        </trans-unit>
        <trans-unit id="6db0695c27ab12a2b9bb69a4dee558a7af478ea9" translate="yes" xml:space="preserve">
          <source>Install Chef Infra Server and Chef Automate</source>
          <target state="translated">Chef Infra Server 및 Chef Automate 설치</target>
        </trans-unit>
        <trans-unit id="fcf65523d30f6b8bd3c8ba800df1bfbff47437b7" translate="yes" xml:space="preserve">
          <source>Install Chef Manage</source>
          <target state="translated">Chef Manage 설치</target>
        </trans-unit>
        <trans-unit id="bd557d55da7c0bb084e24289d62ad246bb69e9ce" translate="yes" xml:space="preserve">
          <source>Install Chef Manage with:</source>
          <target state="translated">다음을 사용하여 Chef Manage를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="a4da29c8ae7bbd51daa202ab9dde34a97f88fb05" translate="yes" xml:space="preserve">
          <source>Install Chef Push Jobs</source>
          <target state="translated">Chef 푸시 작업 설치</target>
        </trans-unit>
        <trans-unit id="0d67e986dc44e2ac784caf115f1596a32c7c711f" translate="yes" xml:space="preserve">
          <source>Install Chef Workstation</source>
          <target state="translated">Chef Workstation 설치</target>
        </trans-unit>
        <trans-unit id="a5c21a84966e17e456f64ec1be288d83b84a9278" translate="yes" xml:space="preserve">
          <source>Install Chef Workstation: &lt;a href=&quot;https://downloads.chef.io/chef-workstation/&quot;&gt;https://downloads.chef.io/chef-workstation/&lt;/a&gt;.</source>
          <target state="translated">Chef Workstation 설치 : &lt;a href=&quot;https://downloads.chef.io/chef-workstation/&quot;&gt;https://downloads.chef.io/chef-workstation/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b8ef8a694ac82cc6d0dc30befd95ea4991f2e27f" translate="yes" xml:space="preserve">
          <source>Install Chef in an air-gapped environment</source>
          <target state="translated">에어 갭 환경에 Chef 설치</target>
        </trans-unit>
        <trans-unit id="2112750a65cbfcdf6da43f85b40aefb31f01061d" translate="yes" xml:space="preserve">
          <source>Install DRBD. These steps vary, depending on the platform.</source>
          <target state="translated">DRBD를 설치하십시오. 이 단계는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e13bbc33554fa3828d75c79f792da701d84fd05a" translate="yes" xml:space="preserve">
          <source>Install Delivery CLI</source>
          <target state="translated">Delivery CLI 설치</target>
        </trans-unit>
        <trans-unit id="d181b7fc0fbb86371eb43940f17014ac4157c4c1" translate="yes" xml:space="preserve">
          <source>Install Habitat</source>
          <target state="translated">Habitat 설치</target>
        </trans-unit>
        <trans-unit id="074cebdebd1476fb387060cc29147b6bcb677819" translate="yes" xml:space="preserve">
          <source>Install Munki</source>
          <target state="translated">Munki 설치</target>
        </trans-unit>
        <trans-unit id="0aeedc16eda60d0885dde12b1fb7d665e17e4729" translate="yes" xml:space="preserve">
          <source>Install Private Supermarket</source>
          <target state="translated">개인 슈퍼마켓 설치</target>
        </trans-unit>
        <trans-unit id="4ecc382b06dddcd07f2e66fbe54d632a4a6cfd98" translate="yes" xml:space="preserve">
          <source>Install Push Jobs with:</source>
          <target state="translated">다음을 사용하여 푸시 작업을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="ef644f91a9b1ca312b3de5fe989daf0f53678b7b" translate="yes" xml:space="preserve">
          <source>Install Supermarket</source>
          <target state="translated">슈퍼마켓 설치</target>
        </trans-unit>
        <trans-unit id="492a4e30bb9bcb5aebbba738b226bdf4939f87b8" translate="yes" xml:space="preserve">
          <source>Install Supermarket Directly (without a cookbook)</source>
          <target state="translated">슈퍼마켓 직접 설치 (요리 책없이)</target>
        </trans-unit>
        <trans-unit id="6d8b01795b83529963741343fac4b7cfcf518c94" translate="yes" xml:space="preserve">
          <source>Install Supermarket using the appropriate package manager for your distribution:</source>
          <target state="translated">배포에 적합한 패키지 관리자를 사용하여 Supermarket을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="6470a2510219cb8881082c700220c87b0ef350d3" translate="yes" xml:space="preserve">
          <source>Install WinSCP</source>
          <target state="translated">WinSCP 설치</target>
        </trans-unit>
        <trans-unit id="f5fdc08b167b524d0e1d6f214417503ae5d666bf" translate="yes" xml:space="preserve">
          <source>Install Workstation</source>
          <target state="translated">Workstation 설치</target>
        </trans-unit>
        <trans-unit id="628968769c5563935bd114179471380a832fb28e" translate="yes" xml:space="preserve">
          <source>Install a Code Editor</source>
          <target state="translated">코드 편집기 설치</target>
        </trans-unit>
        <trans-unit id="473a3c23a1a74a28d9b83c61ea8be8fb52767bdf" translate="yes" xml:space="preserve">
          <source>Install a Plugin</source>
          <target state="translated">플러그인 설치</target>
        </trans-unit>
        <trans-unit id="b2402fb8c39516613f0d2284e4a80fc5c073515b" translate="yes" xml:space="preserve">
          <source>Install a Standalone Chef Infra Server with a Configuration File</source>
          <target state="translated">구성 파일을 사용하여 Standalone Chef Infra 서버 설치</target>
        </trans-unit>
        <trans-unit id="afe6f1f75fd09b0df9654d3ecb34f4bdf964a421" translate="yes" xml:space="preserve">
          <source>Install a Standby Chef Automate Server</source>
          <target state="translated">Standby Chef Automate 서버 설치</target>
        </trans-unit>
        <trans-unit id="a711ec8ed54ab7fa834d4a5b29022e1ca78b32ef" translate="yes" xml:space="preserve">
          <source>Install a file from a remote location using bash</source>
          <target state="translated">bash를 사용하여 원격 위치에서 파일 설치</target>
        </trans-unit>
        <trans-unit id="ac0e5d280a78e3645580cbccd6edec75055291b0" translate="yes" xml:space="preserve">
          <source>Install a gem and/or ensure that a gem is the latest version.</source>
          <target state="translated">gem을 설치하거나 gem이 최신 버전인지 확인하세요.</target>
        </trans-unit>
        <trans-unit id="32272bce709732a9f669cea022efe6517995f606" translate="yes" xml:space="preserve">
          <source>Install a gems file for use in recipes</source>
          <target state="translated">레시피에 사용할 gems 파일 설치</target>
        </trans-unit>
        <trans-unit id="e9e9d85b19cd942333b01f30425029850164d8d0" translate="yes" xml:space="preserve">
          <source>Install a gems file from the local file system</source>
          <target state="translated">로컬 파일 시스템에서 gems 파일 설치</target>
        </trans-unit>
        <trans-unit id="63226c8c94ba4f053b39462e9220b8b3130a6b79" translate="yes" xml:space="preserve">
          <source>Install a minimum version</source>
          <target state="translated">최소 버전 설치</target>
        </trans-unit>
        <trans-unit id="cd99add119f3b8a6a79beb0b64f2d413978e2def" translate="yes" xml:space="preserve">
          <source>Install a minimum version using the default action</source>
          <target state="translated">기본 작업을 사용하여 최소 버전 설치</target>
        </trans-unit>
        <trans-unit id="bc1b583f4e972e8d55ac430a170968cadf9a58c9" translate="yes" xml:space="preserve">
          <source>Install a package</source>
          <target state="translated">패키지 설치</target>
        </trans-unit>
        <trans-unit id="675f0ccad4f712136208daf1e93632633082f60f" translate="yes" xml:space="preserve">
          <source>Install a package and/or ensure that a package is the latest version.</source>
          <target state="translated">패키지를 설치하거나 패키지가 최신 버전인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="51e5132afd138a2cd535e1dd9cea1808e976f65f" translate="yes" xml:space="preserve">
          <source>Install a package and/or ensure that a package is the latest version. This action will ignore the &lt;code&gt;version&lt;/code&gt; attribute.</source>
          <target state="translated">패키지를 설치하거나 패키지가 최신 버전인지 확인하십시오. 이 조치는 &lt;code&gt;version&lt;/code&gt; 속성 을 무시 합니다.</target>
        </trans-unit>
        <trans-unit id="e92a936bca8b4cc3859d1d77221f0ee06697639d" translate="yes" xml:space="preserve">
          <source>Install a package from a custom source:</source>
          <target state="translated">사용자 지정 소스에서 패키지를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="4ee9dead755ba93375d2c1311bcd632c543b92cf" translate="yes" xml:space="preserve">
          <source>Install a package from an Errata ID</source>
          <target state="translated">에라타 ID에서 패키지 설치</target>
        </trans-unit>
        <trans-unit id="ab0e268827430fbf9b049979002d1283472de389" translate="yes" xml:space="preserve">
          <source>Install a package in a platform</source>
          <target state="translated">플랫폼에 패키지 설치</target>
        </trans-unit>
        <trans-unit id="0818cf7146404077f16aa07176c3ac7eb952b054" translate="yes" xml:space="preserve">
          <source>Install a package version</source>
          <target state="translated">패키지 버전 설치</target>
        </trans-unit>
        <trans-unit id="b8840a3adef6507b28b25f4626d1a3de3bb95460" translate="yes" xml:space="preserve">
          <source>Install a package with a response_file</source>
          <target state="translated">response_file을 사용하여 패키지 설치</target>
        </trans-unit>
        <trans-unit id="85e3bb73c4fc2fc505731654d17d5c1195b203e4" translate="yes" xml:space="preserve">
          <source>Install a package with options</source>
          <target state="translated">옵션이있는 패키지 설치</target>
        </trans-unit>
        <trans-unit id="bdc5519b2e72a52dd4060a3e450d316db1abf969" translate="yes" xml:space="preserve">
          <source>Install a private Supermarket using these &lt;a href=&quot;../install_supermarket/index&quot;&gt;instructions&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;../install_supermarket/index&quot;&gt;지침에 따라&lt;/a&gt; 개인 슈퍼마켓을 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0b0d830b1bb314b19904724dd68e9358b7c3b62" translate="yes" xml:space="preserve">
          <source>Install a private Supermarket using these &lt;a href=&quot;install_supermarket/index&quot;&gt;instructions&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;install_supermarket/index&quot;&gt;지침에 따라&lt;/a&gt; 개인 슈퍼마켓을 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d1f460517817196786ef442d58ac6a9dad12068" translate="yes" xml:space="preserve">
          <source>Install a specific version of a package:</source>
          <target state="translated">특정 버전의 패키지를 설치합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
