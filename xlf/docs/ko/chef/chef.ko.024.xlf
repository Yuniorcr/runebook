<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="0640857f3b3f4f6c9eac34401fb1b8a6f84cffc4" translate="yes" xml:space="preserve">
          <source>The chef-client is finished synchronizing cookbooks.</source>
          <target state="translated">요리사 클라이언트가 요리 책 동기화를 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="01d5d895f154a869be8dfa52e8edd7b11319e97c" translate="yes" xml:space="preserve">
          <source>The chef-client is installed on the target node.</source>
          <target state="translated">chef-client는 대상 노드에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="f4dd7bede28ba9fde1c4792e4ff3d0091ae44708" translate="yes" xml:space="preserve">
          <source>The chef-client is loading attribute files.</source>
          <target state="translated">요리사 클라이언트가 속성 파일을로드 중입니다.</target>
        </trans-unit>
        <trans-unit id="240a166caf6e32201f3677a7a80372048e78b2a0" translate="yes" xml:space="preserve">
          <source>The chef-client is loading custom resources.</source>
          <target state="translated">요리사 클라이언트가 사용자 지정 리소스를로드하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="af30f72b28816a5d682b9a8efbaffcbd358cb7bc" translate="yes" xml:space="preserve">
          <source>The chef-client is loading definitions.</source>
          <target state="translated">요리사 클라이언트가 정의를로드하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dcdcd68e8a15a93bd386b531dab2e317db353f2" translate="yes" xml:space="preserve">
          <source>The chef-client is loading library files.</source>
          <target state="translated">요리사 클라이언트가 라이브러리 파일을로드 중입니다.</target>
        </trans-unit>
        <trans-unit id="5c544640c07f02ac8f5cd5c252330358fc3282fc" translate="yes" xml:space="preserve">
          <source>The chef-client is loading recipes.</source>
          <target state="translated">요리사 클라이언트가 레시피를로드 중입니다.</target>
        </trans-unit>
        <trans-unit id="e0ef1b0dfec23026e57dacf1cf8686fddd03fe2b" translate="yes" xml:space="preserve">
          <source>The chef-client is not registering with the Chef server because it already has a private key or because it does not need one.</source>
          <target state="translated">chef-client는 이미 개인 키를 가지고 있거나 필요하지 않기 때문에 Chef 서버에 등록하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="514b1bf0b909903b22205e3b0190c2d29745c5b6" translate="yes" xml:space="preserve">
          <source>The chef-client may be run in audit-mode. Use audit-mode to evaluate custom rules&amp;mdash;also referred to as audits&amp;mdash;that are defined in recipes. audit-mode may be run in the following ways:</source>
          <target state="translated">요리사 클라이언트는 감사 모드에서 실행될 수 있습니다. 감사 모드를 사용하여 레시피에 정의 된 사용자 정의 규칙 (감사라고도 함)을 평가하십시오. 감사 모드는 다음과 같은 방식으로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8e4965af393933c975b14d4aab79715d72bc870" translate="yes" xml:space="preserve">
          <source>The chef-client may need to be run with elevated privileges in order to get a recipe to converge correctly. On UNIX and UNIX-like operating systems this can be done by running the command as root. On Microsoft Windows this can be done by running the command prompt as an administrator.</source>
          <target state="translated">레시피를 올바르게 수렴하려면 요리사 클라이언트가 높은 권한으로 실행되어야 할 수도 있습니다. UNIX 및 UNIX와 같은 운영 체제에서는 루트로 명령을 실행하여이를 수행 할 수 있습니다. Microsoft Windows에서는 관리자 권한으로 명령 프롬프트를 실행하여이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8a8b4eebeeae0bd30ffd430f964bc9f54395c2b" translate="yes" xml:space="preserve">
          <source>The chef-client may now be used to configure nodes that are running on the AIX platform, versions 6.1 (TL6 or higher, recommended) and 7.1 (TL0 SP3 or higher, recommended). The &lt;strong&gt;service&lt;/strong&gt; resource supports starting, stopping, and restarting services that are managed by System Resource Controller (SRC), as well as managing all service states with BSD-based init systems.</source>
          <target state="translated">chef-client는 이제 AIX 플랫폼, 버전 6.1 (TL6 이상, 권장) 및 7.1 (TL0 SP3 이상, 권장)에서 실행중인 노드를 구성하는 데 사용될 수 있습니다. &lt;strong&gt;서비스&lt;/strong&gt; 자원 지원, 시작, 중지 및 시스템 자원 제어기 (SRC)뿐만 아니라 BSD 기반 초기화 시스템과 모든 서비스 상태 관리와 같은 의해 관리되는 서비스를 다시 시작.</target>
        </trans-unit>
        <trans-unit id="9671ad2d23c7401b2e973175c03e64f0253d2949" translate="yes" xml:space="preserve">
          <source>The chef-client mode in which the Data Collector will be enabled. Possible values: &lt;code&gt;:solo&lt;/code&gt;, &lt;code&gt;:client&lt;/code&gt;, or &lt;code&gt;:both&lt;/code&gt;. The &lt;code&gt;:solo&lt;/code&gt; value is used for Chef operating in Chef Solo Mode or Chef Solo Legacy Mode. Default value: &lt;code&gt;both&lt;/code&gt;.</source>
          <target state="translated">Data Collector가 사용되는 chef-client 모드. 가능한 값은 : &lt;code&gt;:solo&lt;/code&gt; , &lt;code&gt;:client&lt;/code&gt; 또는 &lt;code&gt;:both&lt;/code&gt; 입니다. &lt;code&gt;:solo&lt;/code&gt; 값은 요리사 솔로 모드 나 요리사 솔로 레거시 모드에서 요리사 운영에 사용됩니다. 기본값 : &lt;code&gt;both&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8f2b9c8c61d9c262b22782baaf5a5d2d42fc275" translate="yes" xml:space="preserve">
          <source>The chef-client must be run as a service for it to be able to regularly check in with the Chef server. Select the &lt;strong&gt;Chef Client Service&lt;/strong&gt; option to have the MSI configure the chef-client as a service.</source>
          <target state="translated">Chef-Client는 Chef 서버에 정기적으로 체크인 할 수 있도록 서비스로 실행해야합니다. &lt;strong&gt;Chef Client Service&lt;/strong&gt; 옵션을 선택하여 MSI가 chef-client를 서비스로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="b78130bff82b82078ab610e6063037d12f1b9762" translate="yes" xml:space="preserve">
          <source>The chef-client processes recipes in two phases:</source>
          <target state="translated">요리사 클라이언트는 두 단계로 레시피를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="bb6a351cd99d34f9669a8e82e78170f2287411bf" translate="yes" xml:space="preserve">
          <source>The chef-client pulls down the node object from the Chef server. If this is the first chef-client run for the node, there will not be a node object to pull down from the Chef server. After the node object is pulled down from the Chef server, the chef-client rebuilds the node object. If this is the first chef-client run for the node, the rebuilt node object will contain only the default run-list. For any subsequent chef-client run, the rebuilt node object will also contain the run-list from the previous chef-client run.</source>
          <target state="translated">chef-client는 Chef 서버에서 노드 오브젝트를 가져옵니다. 이것이 노드에 대해 첫 번째 Chef-Client 실행 인 경우 Chef 서버에서 풀다운 할 노드 오브젝트가 없습니다. Chef 서버에서 노드 오브젝트를 가져 오면 chef-client가 노드 오브젝트를 다시 빌드합니다. 이것이 노드에 대한 첫 chef-client 실행 인 경우, 재 빌드 된 노드 오브젝트는 기본 실행 목록 만 포함합니다. 후속 요리사-클라이언트 실행의 경우 재 빌드 된 노드 오브젝트에는 이전 요리사-클라이언트 실행의 실행 목록도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="72bfd9c756f9c16b41823871fed8f0000b5a9d3b" translate="yes" xml:space="preserve">
          <source>The chef-client pushes the node object to the Chef server at the end of the chef-client run; the updated node object on the Chef server is then indexed for search and is stored until the next chef-client run</source>
          <target state="translated">chef-client는 chef-client 실행이 끝날 때 노드 오브젝트를 Chef 서버로 푸시합니다. Chef 서버의 업데이트 된 노드 오브젝트는 검색을 위해 색인화되고 다음 chef-client가 실행될 때까지 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="7909a1feefc277e4c0dce08d9735904065e4b18c" translate="yes" xml:space="preserve">
          <source>The chef-client ran the first resource before the breakpoint (&lt;code&gt;file[/tmp/before-breakpoint]&lt;/code&gt;), but then stopped after execution. The chef-client attempted to name the breakpoint after its position in the source file, but the chef-client was confused because the resource was entered interactively. From here, chef-shell can resume the chef-client run:</source>
          <target state="translated">chef-client는 중단 점 앞의 첫 번째 자원 ( &lt;code&gt;file[/tmp/before-breakpoint]&lt;/code&gt; )을 실행 한 후 실행 후 중지했습니다. 요리사 클라이언트는 소스 파일에서 위치를 지정한 후 중단 점 이름을 지정하려고 시도했지만 요리사가 클라이언트가 대화식으로 입력 되었기 때문에 혼란 스러웠습니다. 여기에서 chef-shell은 chef-client 실행을 재개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed4c2cef6c488a6281ea3f2779e7533f6b29604e" translate="yes" xml:space="preserve">
          <source>The chef-client removed a file from a cookbook.</source>
          <target state="translated">요리사 클라이언트는 요리 책에서 파일을 제거했습니다.</target>
        </trans-unit>
        <trans-unit id="a6c1c2c89e53a693c9e954853986fe0b2de0eb7c" translate="yes" xml:space="preserve">
          <source>The chef-client run audit phase has failed.</source>
          <target state="translated">요리사 클라이언트 실행 감사 단계가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="34b511c190e25ada7e6c33cfda9a5e631c027651" translate="yes" xml:space="preserve">
          <source>The chef-client run audit phase has started.</source>
          <target state="translated">요리사 클라이언트 실행 감사 단계가 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="93d939fa6713946fdef94317500c8e6745bf4315" translate="yes" xml:space="preserve">
          <source>The chef-client run audit phase is finished.</source>
          <target state="translated">요리사 클라이언트 실행 감사 단계가 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="70430ba3274b3850736049fac5151f0f133a0f69" translate="yes" xml:space="preserve">
          <source>The chef-client run can also be rewound, and then stepped through.</source>
          <target state="translated">셰프-클라이언트 실행도 되 감은 다음 단계별로 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b451d1478ece89148e4bacc844be42f87ef0e1d" translate="yes" xml:space="preserve">
          <source>The chef-client run converge phase has failed.</source>
          <target state="translated">요리사 클라이언트 실행 수렴 단계가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="f88efc50d7dd31d7a18dedcaaae831f0fb0dba76" translate="yes" xml:space="preserve">
          <source>The chef-client run converge phase has started.</source>
          <target state="translated">요리사 클라이언트 실행 수렴 단계가 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="22d66346b523d2ae7844faaec6ab1959c0403276" translate="yes" xml:space="preserve">
          <source>The chef-client run converge phase is complete.</source>
          <target state="translated">요리사 클라이언트 실행 수렴 단계가 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="3c0b1a6f9b9ac302fdc20f71f2011c9b6b70840a" translate="yes" xml:space="preserve">
          <source>The chef-client run has completed.</source>
          <target state="translated">요리사 클라이언트 실행이 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="7e2d3aed8d0dccb426c55d6f763378f2de734dc3" translate="yes" xml:space="preserve">
          <source>The chef-client run has failed.</source>
          <target state="translated">요리사 클라이언트 실행이 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="83de402b780bc86e1d28f752900630c6098eecb1" translate="yes" xml:space="preserve">
          <source>The chef-client run has started.</source>
          <target state="translated">요리사 클라이언트 실행이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="e29c0b0446383270a4a63e52d2dabd779fbaf32a" translate="yes" xml:space="preserve">
          <source>The chef-client run proceeds, using HTTPS (port 443), and registers the node with the Chef server.</source>
          <target state="translated">chef-client 실행은 HTTPS (포트 443)를 사용하여 진행하고 Chef 서버에 노드를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="7be895718af572d7acb82ae133ecc907036cdbfc" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded node data from the Chef server. Default and override attributes for roles have been computed, but are not yet applied.</source>
          <target state="translated">chef-client가 Chef 서버에서 노드 데이터를 성공적으로로드했습니다. 역할의 기본 및 재정의 속성이 계산되었지만 아직 적용되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4f4c5696e0ca6d2ad0eac1f2827c8a9039205f34" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named attribute file.</source>
          <target state="translated">chef-client가 이름 지정된 속성 파일을 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="6a17278ff630590260e500586ec31b254b80719f" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named custom resource.</source>
          <target state="translated">요리사 클라이언트가 명명 된 사용자 지정 리소스를 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="90cadce68b4d86356729c5e867157728d2d37118" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named definition.</source>
          <target state="translated">요리사 클라이언트가 명명 된 정의를 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="0fb5f1ececceac065741da97aa420ad457dfbdf7" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named library file.</source>
          <target state="translated">chef-client가 이름 지정된 라이브러리 파일을 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="82f2f312b702049db18784f95fd5ea0e3dfafc46" translate="yes" xml:space="preserve">
          <source>The chef-client successfully loaded the named recipe.</source>
          <target state="translated">요리사 클라이언트가 명명 된 레시피를 성공적으로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="456746db06b5ab5e43feede9d260d60434290709" translate="yes" xml:space="preserve">
          <source>The chef-client successfully pulled down the cookbook collection from the Chef server.</source>
          <target state="translated">chef-client가 Chef 서버에서 요리 책 콜렉션을 성공적으로 풀다운했습니다.</target>
        </trans-unit>
        <trans-unit id="67f53e10b5ac957f262b1f398e48c481a4310313" translate="yes" xml:space="preserve">
          <source>The chef-client supports reading multiple configuration files by putting them inside a &lt;code&gt;.d&lt;/code&gt; configuration directory. For example: &lt;code&gt;/etc/chef/client.d&lt;/code&gt;. All files that end in &lt;code&gt;.rb&lt;/code&gt; in the &lt;code&gt;.d&lt;/code&gt; directory are loaded; other non-&lt;code&gt;.rb&lt;/code&gt; files are ignored.</source>
          <target state="translated">chef-client는 여러 구성 파일을 &lt;code&gt;.d&lt;/code&gt; 구성 디렉토리 에 넣어서 여러 구성 파일을 읽을 수 있도록 지원합니다 . 예를 들어 &lt;code&gt;/etc/chef/client.d&lt;/code&gt; 입니다. &lt;code&gt;.d&lt;/code&gt; 디렉토리 에서 &lt;code&gt;.rb&lt;/code&gt; 로 끝나는 모든 파일 이로드됩니다. &lt;code&gt;.rb&lt;/code&gt; 이외의 다른 파일은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4d5ee8b59ecb25d1563edde7a2061201138e4ddf" translate="yes" xml:space="preserve">
          <source>The chef-client updated the named file in the named cookbook.</source>
          <target state="translated">요리사-클라이언트는 명명 된 요리 책에서 명명 된 파일을 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="3874232c9e6b2b3532b8bb4faa24711171435707" translate="yes" xml:space="preserve">
          <source>The chef-client uses Erubis for templates, which is a fast, secure, and extensible implementation of embedded Ruby. Erubis should be familiar to members of the Ruby on Rails, Merb, or Puppet communities. For more information about Erubis, see: &lt;a href=&quot;http://www.kuwata-lab.com/erubis/&quot;&gt;http://www.kuwata-lab.com/erubis/&lt;/a&gt;.</source>
          <target state="translated">셰프 클라이언트는 템플릿에 Erubis를 사용하는데, 이는 임베디드 Ruby의 빠르고 안전하며 확장 가능한 구현입니다. Erubis는 Ruby on Rails, Merb 또는 Puppet 커뮤니티 회원에게 친숙해야합니다. Erubis에 대한 자세한 내용은 &lt;a href=&quot;http://www.kuwata-lab.com/erubis/&quot;&gt;http://www.kuwata-lab.com/erubis/를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9080eadb3f34329d28b69b3ffec3248b624f7ac2" translate="yes" xml:space="preserve">
          <source>The chef-client uses Ruby as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the chef-client, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required.</source>
          <target state="translated">요리사 클라이언트는 특정 리소스를위한 확장 된 DSL과 함께 요리 책을 만들고 레시피를 정의하기 위해 루비를 참조 언어로 사용합니다. 가장 일반적인 인프라 자동화 시나리오를 충분히 지원할 수 있도록 요리사-고객이 합리적인 리소스 세트를 사용할 수 있습니다. 그러나 추가 자원과 기능이 필요할 때이 DSL을 확장 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="49b0507fc7f32e37b0dc1b6b0b290ca0a5245c0a" translate="yes" xml:space="preserve">
          <source>The chef-client uses Ruby as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The chef-client provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required.</source>
          <target state="translated">요리사 클라이언트는 특정 리소스를위한 확장 된 DSL과 함께 요리 책을 만들고 레시피를 정의하기 위해 루비를 참조 언어로 사용합니다. 요리사-클라이언트는 가장 일반적인 인프라 자동화 시나리오를 충분히 지원할 수 있도록 합리적인 리소스 세트를 제공합니다. 그러나 추가 자원과 기능이 필요할 때이 DSL을 확장 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e18aeef12fb39c61222d066673d0db6fd9491c4" translate="yes" xml:space="preserve">
          <source>The chef-client uses a cache file to keep track of the order in which each revision of an application is deployed. By default, the cache file is located at &lt;code&gt;/var/chef/cache/revision-deploys/APPNAME/&lt;/code&gt;. To force a re-deploy, delete the deployment directory or delete the cache file.</source>
          <target state="translated">chef-client는 캐시 파일을 사용하여 응용 프로그램의 각 개정이 배치되는 순서를 추적합니다. 기본적으로 캐시 파일은 &lt;code&gt;/var/chef/cache/revision-deploys/APPNAME/&lt;/code&gt; 있습니다. 강제로 재배포하려면 배치 디렉토리를 삭제하거나 캐시 파일을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="6c78b3098eb3a914e22ed903fe1a4a5f1114270c" translate="yes" xml:space="preserve">
          <source>The chef-client uses a lock file to ensure that only one chef-client run is in progress at any time. A lock file is created at the start of the chef-client run and is deleted at the end of the chef-client run. A new chef-client run looks for the presence of a lock file and, if present, will wait for that lock file to be deleted. The location of the lock file can vary by platform.</source>
          <target state="translated">요리사 클라이언트는 잠금 파일을 사용하여 언제든지 하나의 요리사 클라이언트 실행 만 진행되도록합니다. chef-client 실행 시작시 잠금 파일이 작성되고 chef-client 실행 종료시 삭제됩니다. 새로운 chef-client 실행은 잠금 파일의 존재를 찾고 존재하는 경우 해당 잠금 파일이 삭제 될 때까지 기다립니다. 잠금 파일의 위치는 플랫폼마다 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39eb0430669c97712a39c00f6fb6a520a19e389c" translate="yes" xml:space="preserve">
          <source>The chef-client uses six types of attributes to determine the value that is applied to a node during the chef-client run. In addition, the chef-client sources attribute values from up to five locations. The combination of attribute types and sources allows for up to 15 different competing values to be available to the chef-client during the chef-client run:</source>
          <target state="translated">chef-client는 6 가지 유형의 속성을 사용하여 chef-client 실행 중에 노드에 적용되는 값을 결정합니다. 또한 chef-client는 최대 5 개의 위치에서 속성 값을 제공합니다. 속성 유형과 소스를 조합하면 chef-client 실행 중에 chef-client가 최대 15 개의 서로 다른 경쟁 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3843af2f2196dc24201f304e237f5ac368a96c0" translate="yes" xml:space="preserve">
          <source>The chef-client uses the EN_US (UTF-8) character set. By default, the AIX base operating system does not include the EN_US (UTF-8) character set and it must be installed prior to installing the chef-client. The EN_US (UTF-8) character set may be installed from the first disc in the AIX media or may be copied from &lt;code&gt;/installp/ppc/*EN_US*&lt;/code&gt; to a location on the logical partition (LPAR). This topic assumes this location to be &lt;code&gt;/tmp/rte&lt;/code&gt;.</source>
          <target state="translated">요리사 클라이언트는 EN_US (UTF-8) 문자 세트를 사용합니다. 기본적으로 AIX 기본 운영 체제에는 EN_US (UTF-8) 문자 세트가 포함되지 않으며 chef-client를 설치하기 전에 설치해야합니다. EN_US (UTF-8) 문자 세트는 AIX 매체의 첫 번째 디스크에서 설치되거나 &lt;code&gt;/installp/ppc/*EN_US*&lt;/code&gt; 에서 논리 파티션 (LPAR)의 위치 로 복사 될 수 있습니다 . 이 주제에서는이 위치가 &lt;code&gt;/tmp/rte&lt;/code&gt; 라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="4544da38e9a2756e621e0d27a780fb303f06c5f6" translate="yes" xml:space="preserve">
          <source>The chef-client version 12.4 release adds an optional feature to the Microsoft Installer Package (MSI) for Chef. This feature enables the ability to pass quoted strings from the Windows PowerShell command line without the need for triple single quotes (&lt;code&gt;''' '''&lt;/code&gt;). This feature installs a Windows PowerShell module (typically in &lt;code&gt;C:\opscode\chef\modules&lt;/code&gt;) that is also appended to the &lt;code&gt;PSModulePath&lt;/code&gt; environment variable. This feature is not enabled by default. To activate this feature, run the following command from within Windows PowerShell:</source>
          <target state="translated">chef-client 버전 12.4 릴리스는 Chef 용 MSI (Microsoft Installer Package)에 선택적 기능을 추가합니다. 이 기능을 사용하면 삼중 작은 따옴표 ( &lt;code&gt;''' '''&lt;/code&gt; ) 없이 Windows PowerShell 명령 줄에서 따옴표로 묶인 문자열을 전달할 수 있습니다 . 이 기능 은 &lt;code&gt;PSModulePath&lt;/code&gt; 환경 변수에 추가 되는 Windows PowerShell 모듈 (일반적으로 &lt;code&gt;C:\opscode\chef\modules&lt;/code&gt; )을 설치 합니다. 이 기능은 기본적으로 활성화되어 있지 않습니다. 이 기능을 활성화하려면 Windows PowerShell 내에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8bb7fbfac71049541c3ad56d57105c387a14ead1" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to find the named recipe.</source>
          <target state="translated">요리사 클라이언트가 명명 된 레시피를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a179f88e527ca4b9eb799c7f3ec603c29449a47f" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named attribute file.</source>
          <target state="translated">chef-client가 이름 지정된 속성 파일을로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9e085ec6385f746ab4e82791d9482b9c46daa33f" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named custom resource.</source>
          <target state="translated">chef-client가 이름 지정된 사용자 정의 자원을로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4cd97b0a4822832ac6bd2063d4eca1122cdd6b3d" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named definition.</source>
          <target state="translated">요리사 클라이언트가 명명 된 정의를로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="702e0efe93cebf53ca3ee8445c607c153473c31d" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named library file.</source>
          <target state="translated">chef-client가 이름 지정된 라이브러리 파일을로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="aacc649815128f2de7021f31737e5ed9e2ac084c" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to load the named recipe.</source>
          <target state="translated">요리사 클라이언트가 명명 된 레시피를로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4823eda1c8e4e0e24b1c89ff94ed7deed45edd26" translate="yes" xml:space="preserve">
          <source>The chef-client was unable to synchronize cookbooks.</source>
          <target state="translated">요리사 클라이언트가 요리 책을 동기화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4924722a7f0945357ef762cb38a1add553e5eb9d" translate="yes" xml:space="preserve">
          <source>The chef-client will determine the correct provider based on configuration data collected by Ohai at the start of the chef-client run. This configuration data is then mapped to a platform and an associated list of providers.</source>
          <target state="translated">요리사 클라이언트는 요리사 클라이언트 실행이 시작될 때 Ohai가 수집 한 구성 데이터를 기반으로 올바른 제공자를 결정합니다. 그런 다음이 구성 데이터는 플랫폼 및 연관된 제공자 목록에 맵핑됩니다.</target>
        </trans-unit>
        <trans-unit id="788b9c4af384614fc8f96dec8b74eb3d4a3f1afb" translate="yes" xml:space="preserve">
          <source>The chef-client will look up the provider for the &lt;code&gt;directory&lt;/code&gt; resource, which happens to be &lt;code&gt;Chef::Provider::Directory&lt;/code&gt;, call &lt;code&gt;load_current_resource&lt;/code&gt; to create a &lt;code&gt;directory[&quot;/tmp/folder&quot;]&lt;/code&gt; resource, and then, based on the current state of the directory, do the specified action, which in this case is to create a directory called &lt;code&gt;/tmp/folder&lt;/code&gt;. If the directory already exists, nothing will happen. If the directory was changed in any way, the resource is marked as updated.</source>
          <target state="translated">chef-client는 &lt;code&gt;Chef::Provider::Directory&lt;/code&gt; 와 같은 &lt;code&gt;directory&lt;/code&gt; 자원 의 제공자를 &lt;code&gt;load_current_resource&lt;/code&gt; 를 호출 하여 &lt;code&gt;directory[&quot;/tmp/folder&quot;]&lt;/code&gt; 자원 을 작성한 다음 현재 상태를 기반으로합니다. 디렉토리의 경우 지정된 조치를 수행하십시오.이 경우 &lt;code&gt;/tmp/folder&lt;/code&gt; 디렉토리를 작성하십시오 . 디렉토리가 이미 존재하면 아무 일도 일어나지 않습니다. 디렉토리가 어떤 식 으로든 변경되면 자원이 업데이트 된 것으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8d711818418c9533b42a9bf3dac8ef32e6e6c468" translate="yes" xml:space="preserve">
          <source>The chef-client will manage the permissions of the entire directory structure below &lt;code&gt;/html&lt;/code&gt;, for a total of 12 files and 4 directories. For example:</source>
          <target state="translated">chef-client는 총 12 개의 파일과 4 개의 디렉토리에 대해 &lt;code&gt;/html&lt;/code&gt; 아래의 전체 디렉토리 구조의 권한을 관리합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="330cd29750c5b644a98a6ce9ba9b29c83c15a6f2" translate="yes" xml:space="preserve">
          <source>The chef-client will only update the property values that require updates and will not make changes when the property values are already in the desired state</source>
          <target state="translated">Chef-Client는 업데이트가 필요한 속성 값만 업데이트하며 속성 값이 이미 원하는 상태 인 경우 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b86115dca01f9af58b68efb5744f45dea69de6c" translate="yes" xml:space="preserve">
          <source>The chef-client will pick up the &lt;code&gt;_default&lt;/code&gt; run-list if &lt;code&gt;env_run_list[environment_name]&lt;/code&gt; is null or nonexistent.</source>
          <target state="translated">&lt;code&gt;env_run_list[environment_name]&lt;/code&gt; 이 null이거나 존재하지 않으면 chef-client는 &lt;code&gt;_default&lt;/code&gt; 실행 목록을 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="a3da7af852bca2f2d4e28f7d9a32e5343fe63617" translate="yes" xml:space="preserve">
          <source>The chef-client will pull down the node object from the Chef server (which contains the attribute data from the previous chef-client run), after which all attributes (except &lt;code&gt;normal&lt;/code&gt; are reset)</source>
          <target state="translated">chef-client는 Chef 서버 (이전 chef-client 실행의 속성 데이터가 포함 된)에서 노드 오브젝트를 풀다운 한 후 모든 속성 ( &lt;code&gt;normal&lt;/code&gt; 제외 )이 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="48d3aa277f4ac334a01f5bdbb1351ce58a54f365" translate="yes" xml:space="preserve">
          <source>The chef-client will rebuild the attribute list and apply attribute precedence while configuring the node</source>
          <target state="translated">chef-client는 노드를 구성하는 동안 속성 목록을 다시 작성하고 속성 우선 순위를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="f11e0fae46c6ecdfabaf7659da973bdd91e24862" translate="yes" xml:space="preserve">
          <source>The chef-client will run a recipe only when asked. When the chef-client runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the chef-client won&amp;rsquo;t change anything.</source>
          <target state="translated">요리사 클라이언트는 요청이있을 때만 레시피를 실행합니다. 요리사 클라이언트가 동일한 레시피를 두 번 이상 실행할 때마다 결과는 동일한 시스템 상태가됩니다. 레시피가 시스템에 대해 실행되지만 시스템이나 레시피에서 아무것도 변경되지 않은 경우 요리사 클라이언트는 아무것도 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6d7a6d18d4eaf06ce459c7e81b0f818379977a3" translate="yes" xml:space="preserve">
          <source>The chef-client will update the cookbooks on the node (if required), which updates the attributes contained in attribute files and recipes</source>
          <target state="translated">요리사 클라이언트는 노드에서 요리 책을 업데이트하고 (필요한 경우) 속성 파일 및 레시피에 포함 된 속성을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="cc928d2b16fa3d1359b3dcd19756fa9ee4abcad0" translate="yes" xml:space="preserve">
          <source>The chef-client will update the role and environment data (if required)</source>
          <target state="translated">요리사 클라이언트는 역할 및 환경 데이터를 업데이트합니다 (필요한 경우).</target>
        </trans-unit>
        <trans-unit id="6abfe7af6db668983ddfe947963994b916178d74" translate="yes" xml:space="preserve">
          <source>The chef-client, by default, will attempt to execute a Homebrew command as the owner of &lt;code&gt;/usr/local/bin/brew&lt;/code&gt;. If that executable does not exist, the chef-client will attempt to find the user by executing &lt;code&gt;which brew&lt;/code&gt;. If that executable cannot be found, the chef-client will print an error message: &lt;code&gt;Could not find the &quot;brew&quot; executable in /usr/local/bin or anywhere on the path.&lt;/code&gt;. Use the &lt;code&gt;homebrew_user&lt;/code&gt; attribute to specify the Homebrew owner for situations where the chef-client cannot automatically detect the correct owner.</source>
          <target state="translated">chef-client는 기본적으로 &lt;code&gt;/usr/local/bin/brew&lt;/code&gt; 의 소유자로서 Homebrew 명령을 실행하려고 시도합니다 . 해당 실행 파일이 없으면 chef-client는 &lt;code&gt;which brew&lt;/code&gt; 를 실행하여 사용자를 찾으려고 시도합니다 . 해당 실행 파일을 찾을 수 없으면 chef-client가 오류 메시지를 인쇄합니다. &lt;code&gt;Could not find the &quot;brew&quot; executable in /usr/local/bin or anywhere on the path.&lt;/code&gt; . chef-client가 올바른 소유자를 자동으로 감지 할 수없는 경우 &lt;code&gt;homebrew_user&lt;/code&gt; 속성을 사용하여 Homebrew 소유자를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b680e77e982b547f9124ddc1b2f716b73d84e207" translate="yes" xml:space="preserve">
          <source>The chef-repo</source>
          <target state="translated">요리사 레포</target>
        </trans-unit>
        <trans-unit id="066a9a27b47ede23b1e8a4e271225c7b4ce21e64" translate="yes" xml:space="preserve">
          <source>The chef-repo contains several directories, each with a README file that describes what it is for and how to use that directory when managing systems.</source>
          <target state="translated">chef-repo에는 여러 디렉토리가 있으며 각각은 디렉토리를 관리하고 시스템 관리시 해당 디렉토리를 사용하는 방법을 설명하는 README 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fe0361a03a5341cd306c38b8cbf15a38733d887" translate="yes" xml:space="preserve">
          <source>The chef-repo directory should be synchronized with a version control system, such as git. All of the data in the chef-repo should be treated like source code.</source>
          <target state="translated">chef-repo 디렉토리는 git과 같은 버전 제어 시스템과 동기화되어야합니다. chef-repo의 모든 데이터는 소스 코드처럼 취급되어야합니다.</target>
        </trans-unit>
        <trans-unit id="946efac753f5cd7aeaff1cdd6bfdb8ef57990ce6" translate="yes" xml:space="preserve">
          <source>The chef-repo is a directory on your workstation that stores everything you need to define your infrastructure with Chef Infra:</source>
          <target state="translated">chef-repo는 Chef Infra로 인프라를 정의하는 데 필요한 모든 것을 저장하는 워크 스테이션의 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="1ac66c0a151e4c52acd0e2a4fd67460e2fc0b0c2" translate="yes" xml:space="preserve">
          <source>The chef-repo is located on a workstation and should be synchronized with a version control system, such as git. All of the data in the chef-repo should be treated like source code.</source>
          <target state="translated">chef-repo는 워크 스테이션에 있으며 git와 같은 버전 제어 시스템과 동기화되어야합니다. chef-repo의 모든 데이터는 소스 코드처럼 취급해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b4be477e7756de95b499479c0e6d508ad7fa701" translate="yes" xml:space="preserve">
          <source>The chef-repo is the location in which the following data objects are stored:</source>
          <target state="translated">chef-repo는 다음 데이터 오브젝트가 저장되는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="b8c89f97cded5e11362fc13bd576a10fdf9ff2e8" translate="yes" xml:space="preserve">
          <source>The chef-repo is the repository structure in which cookbooks are authored, tested, and maintained:</source>
          <target state="translated">chef-repo는 요리 책을 작성, 테스트 및 유지 관리하는 저장소 구조입니다.</target>
        </trans-unit>
        <trans-unit id="4d8d76c2c1b74fe9e598f5501fe17ef2746d7b64" translate="yes" xml:space="preserve">
          <source>The chef-repo should be synchronized with a version control system (such as git), and then managed as if it were source code</source>
          <target state="translated">chef-repo는 버전 제어 시스템 (git 등)과 동기화 된 다음 소스 코드 인 것처럼 관리해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b04d52204f6dda1845324931fe25ef0199914a4" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file contains all of the non-default configuration settings used by the Chef server. (The default settings are built-in to the Chef server configuration and should only be added to the chef-server.rb file to apply non-default values.) These configuration settings are processed when the &lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; command is run, such as immediately after setting up the Chef server or after making a change to the underlying configuration settings after the server has been deployed. The chef-server.rb file is a Ruby file, which means that conditional statements can be used in the configuration file.</source>
          <target state="translated">chef-server.rb 파일에는 Chef 서버가 사용하는 모든 비 기본 구성 설정이 포함되어 있습니다. 기본 설정은 Chef 서버 구성에 기본 제공되며 기본값이 아닌 값을 적용하려면 chef-server.rb 파일에만 추가해야합니다. 이러한 구성 설정은 &lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; 명령이 실행될 때 처리됩니다. (예 : Chef 서버를 설정 한 직후 또는 서버가 배포 된 후 기본 구성 설정을 변경 한 후) chef-server.rb 파일은 Ruby 파일이므로 구성 파일에서 조건문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05976f3f63304fe3c4cce6b4e4081482918ad909" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file contains settings that can be used to edit the number of nodes that are under license:</source>
          <target state="translated">chef-server.rb 파일에는 라이센스가있는 노드 수를 편집하는 데 사용할 수있는 설정이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="66395c906b1d1071324049fc765a21a0d8701487" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file does not exist by default. To modify the settings for the Chef server, create a file named &lt;code&gt;chef-server.rb&lt;/code&gt; in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory.</source>
          <target state="translated">chef-server.rb 파일은 기본적으로 존재하지 않습니다. Chef 서버의 설정을 수정하려면 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리 에 &lt;code&gt;chef-server.rb&lt;/code&gt; 라는 파일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d01fcdd160e8dca1b85d6457c9693710771e571" translate="yes" xml:space="preserve">
          <source>The chef-server.rb file that is located in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory describes the topology of the tiered configuration. On the backend server, create a file named chef-server.rb and save it in the &lt;code&gt;/etc/opscode/&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리 에있는 chef-server.rb 파일 은 계층 구성의 토폴로지를 설명합니다. 백엔드 서버에서 chef-server.rb라는 파일을 작성하여 &lt;code&gt;/etc/opscode/&lt;/code&gt; 디렉토리에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="41e2a6e5c46204499faa660140da4d4a80324a9a" translate="yes" xml:space="preserve">
          <source>The chef-shell executable is run as a command-line tool.</source>
          <target state="translated">chef-shell 실행 파일은 명령 행 도구로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e89b8eb911656b6fc090d9d065c947fb74a18ae1" translate="yes" xml:space="preserve">
          <source>The chef-shell.rb file can be used to configure chef-shell in the same way as the client.rb file is used to configure Chef Infra Client. For example, to configure chef-shell to authenticate to the Chef Infra Server, copy the &lt;code&gt;node_name&lt;/code&gt;, &lt;code&gt;client_key&lt;/code&gt;, and &lt;code&gt;chef_server_url&lt;/code&gt; settings from the config.rb file:</source>
          <target state="translated">chef-shell.rb 파일은 client.rb 파일을 사용하여 Chef Infra Client를 구성하는 것과 동일한 방식으로 chef-shell을 구성하는 데 사용할 수 있습니다. 예를 들어 Chef Infra Server에 인증하도록 chef-shell을 구성 하려면 config.rb 파일에서 &lt;code&gt;node_name&lt;/code&gt; , &lt;code&gt;client_key&lt;/code&gt; 및 &lt;code&gt;chef_server_url&lt;/code&gt; 설정을 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="c59740961be6d4ec56409e6a485e1924517cc180" translate="yes" xml:space="preserve">
          <source>The chef-shell.rb file can be used to configure chef-shell in the same way as the client.rb file is used to configure the chef-client. For example, to configure chef-shell to authenticate to the Chef server, copy the &lt;code&gt;node_name&lt;/code&gt;, &lt;code&gt;client_key&lt;/code&gt;, and &lt;code&gt;chef_server_url&lt;/code&gt; settings from the knife.rb file:</source>
          <target state="translated">chef-shell.rb 파일은 client.rb 파일이 chef-client를 구성하는 데 사용되는 것과 같은 방식으로 chef-shell을 구성하는 데 사용될 수 있습니다. 예를 들어 Chef 서버에 인증하도록 chef-shell을 구성 하려면 knife.rb 파일에서 &lt;code&gt;node_name&lt;/code&gt; , &lt;code&gt;client_key&lt;/code&gt; 및 &lt;code&gt;chef_server_url&lt;/code&gt; 설정을 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="c756bac917ef1a3ad27014bfe9330860cc448e70" translate="yes" xml:space="preserve">
          <source>The chef-solo executable is run as a command-line tool.</source>
          <target state="translated">chef-solo 실행 파일은 명령 행 도구로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1c39a6856d1b5188aa15eed6751079f45b6ef626" translate="yes" xml:space="preserve">
          <source>The chef-validator is allowed to do the following at the start of a Chef Infra Client run. After the Chef Infra Client is registered with Chef Infra Server, that Chef Infra Client is added to the &lt;code&gt;clients&lt;/code&gt; group:</source>
          <target state="translated">Chef-validator는 Chef Infra Client 실행을 시작할 때 다음을 수행 할 수 있습니다. Chef Infra Client가 Chef Infra Server에 등록되면 해당 Chef Infra Client가 &lt;code&gt;clients&lt;/code&gt; 그룹에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="f458dbe5e3253c3a61b946fcb556e8e607a2d6a2" translate="yes" xml:space="preserve">
          <source>The chef-validator is allowed to do the following at the start of a chef-client run. After the chef-client is registered with Chef server, that chef-client is added to the &lt;code&gt;clients&lt;/code&gt; group:</source>
          <target state="translated">셰프 유효성 검사는 셰프 클라이언트 실행이 시작될 때 다음을 수행 할 수 있습니다. chef-client가 Chef 서버에 등록되면 해당 chef-client가 &lt;code&gt;clients&lt;/code&gt; 그룹에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="e28ad18743ee4648084b2a526c663b0bc4f4fde1" translate="yes" xml:space="preserve">
          <source>The chef-vault cookbook is maintained by Chef Software. Use it along with Chef Vault itself. This cookbook adds the &lt;code&gt;chef_vault_item&lt;/code&gt; helper method to the Recipe DSL and the &lt;code&gt;chef_vault_secret&lt;/code&gt; resource. Use them both in recipes to work with data bag secrets.</source>
          <target state="translated">Chef-Vault 요리 책은 Chef Software에서 관리합니다. Chef Vault 자체와 함께 사용하십시오. 이 쿡북 은 레시피 DSL 및 &lt;code&gt;chef_vault_secret&lt;/code&gt; 리소스에 &lt;code&gt;chef_vault_item&lt;/code&gt; 도우미 메서드를 추가합니다 . 레시피에서 두 가지를 모두 사용하여 데이터 백 비밀 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f57d6da5902f01c7c0a184222aed7a2461bd70eb" translate="yes" xml:space="preserve">
          <source>The chefignore file can be located in any subdirectory of a chef-repo: &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/cookbooks&lt;/code&gt;, &lt;code&gt;/cookbooks/COOKBOOK_NAME/&lt;/code&gt;, etc. It should contain sections similar to the following:</source>
          <target state="translated">chefignore 파일은 chef-repo의 하위 디렉토리 ( &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;/cookbooks&lt;/code&gt; , &lt;code&gt;/cookbooks/COOKBOOK_NAME/&lt;/code&gt; 등)에있을 수 있습니다. 다음과 유사한 섹션을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="0878291a2d8ff31c8df6f384e7cc989a44c12d04" translate="yes" xml:space="preserve">
          <source>The chefignore file can be used to ignore all of the files in a directory. For example:</source>
          <target state="translated">chefignore 파일을 사용하여 디렉토리의 모든 파일을 무시할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="73cae1b9a5b2c00dc99fdc7c817be24ad576ce3f" translate="yes" xml:space="preserve">
          <source>The chefignore file is located at the root of the &lt;code&gt;/cookbooks&lt;/code&gt; subdirectory in the chef-repo. It should contain sections similar to the following:</source>
          <target state="translated">chefignore 파일은 chef-repo 의 &lt;code&gt;/cookbooks&lt;/code&gt; 하위 디렉토리 루트에 있습니다. 다음과 유사한 섹션이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6707864f2a5831cb12af14cdf055a352016e467e" translate="yes" xml:space="preserve">
          <source>The chefignore file is used to tell knife which cookbook files in the chef-repo should be ignored when uploading data to the Chef Infra Server. The type of data that should be ignored includes swap files, version control data, build output data, and so on. The chefignore file uses the &lt;code&gt;File.fnmatch&lt;/code&gt; Ruby syntax to define the ignore patterns using &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt; wildcards.</source>
          <target state="translated">chefignore 파일은 데이터를 Chef Infra Server에 업로드 할 때 chef-repo의 어떤 요리 책 파일을 무시해야하는지 knife에 알리는 데 사용됩니다. 무시해야하는 데이터 유형에는 스왑 파일, 버전 제어 데이터, 빌드 출력 데이터 등이 포함됩니다. chefignore 파일은 &lt;code&gt;File.fnmatch&lt;/code&gt; Ruby 구문을 사용하여 &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; 및 &lt;code&gt;?&lt;/code&gt; 를 사용하여 무시 패턴을 정의합니다 . 와일드 카드.</target>
        </trans-unit>
        <trans-unit id="99aa9e485fe0ca16368c8a8c6175bf17e8df34ed" translate="yes" xml:space="preserve">
          <source>The chefignore file is used to tell knife which cookbook files in the chef-repo should be ignored when uploading data to the Chef server. The type of data that should be ignored includes swap files, version control data, build output data, and so on. The chefignore file uses the &lt;code&gt;File.fnmatch&lt;/code&gt; Ruby syntax to define the ignore patterns using &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt; wildcards.</source>
          <target state="translated">chefignore 파일은 Chef 서버에 데이터를 업로드 할 때 chef-repo의 어떤 요리 책 파일을 무시해야하는지 나이프에 알리는 데 사용됩니다. 무시해야 할 데이터 유형에는 스왑 파일, 버전 제어 데이터, 빌드 출력 데이터 등이 포함됩니다. chefignore 파일은 &lt;code&gt;File.fnmatch&lt;/code&gt; Ruby 구문을 사용하여 &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; 및 &lt;code&gt;?&lt;/code&gt; 를 사용하여 무시 패턴을 정의합니다 . 와일드 카드.</target>
        </trans-unit>
        <trans-unit id="9fddafc68f991f61640905108ea293abd154eb78" translate="yes" xml:space="preserve">
          <source>The chunk size. This property should not be used for a RAID 1 mirrored pair (i.e. when the &lt;code&gt;level&lt;/code&gt; property is set to &lt;code&gt;1&lt;/code&gt;).</source>
          <target state="translated">청크 크기. 이 속성은 RAID 1 미러링 쌍 (즉, &lt;code&gt;level&lt;/code&gt; 속성이 &lt;code&gt;1&lt;/code&gt; 로 설정된 경우)에 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="1294e7a28cc610fb894cfa80f12f64f8b10f1402" translate="yes" xml:space="preserve">
          <source>The chunk size. This property should not be used for a RAID 1 mirrored pair (i.e. when the &lt;code&gt;level&lt;/code&gt; property is set to &lt;code&gt;1&lt;/code&gt;). Default value: &lt;code&gt;16&lt;/code&gt;.</source>
          <target state="translated">청크 크기. 이 속성은 RAID 1 미러링 쌍에 사용해서는 안됩니다 (즉, &lt;code&gt;level&lt;/code&gt; 속성이 &lt;code&gt;1&lt;/code&gt; 로 설정된 경우 ). 기본값 : &lt;code&gt;16&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5dc39228867631b1810e50e29e431ddccf0577b" translate="yes" xml:space="preserve">
          <source>The cidr_blocks property provides a list of the CIDR blocks that the matched VPCs serve as strings.</source>
          <target state="translated">cidr_blocks 속성은 일치하는 VPC가 문자열로 사용되는 CIDR 블록 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c6d9ab1ed7d7b81c281b740f1aed0f466168f120" translate="yes" xml:space="preserve">
          <source>The circumstances surrounding the incident.</source>
          <target state="translated">사건을 둘러싼 상황.</target>
        </trans-unit>
        <trans-unit id="ca5a2b52ff3731162dc16d6cf4e0836c9f37833b" translate="yes" xml:space="preserve">
          <source>The city in which your company is located. Default value: &amp;ldquo;Seattle&amp;rdquo;.</source>
          <target state="translated">회사가 위치한 도시입니다. 기본값 :&amp;ldquo;Seattle&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="e0e9e55e14ad74484ad22f615d1f7e4f64bd4bc0" translate="yes" xml:space="preserve">
          <source>The city in which your company is located. Default value: &lt;code&gt;'Seattle'&lt;/code&gt;.</source>
          <target state="translated">회사가 위치한 도시입니다. 기본값 : &lt;code&gt;'Seattle'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e1753bd087c57911b963bfa1e9003f4b0b9bd4e" translate="yes" xml:space="preserve">
          <source>The city in which your company is located. Default value: &lt;code&gt;Seattle&lt;/code&gt;.</source>
          <target state="translated">회사가 위치한 도시. 기본 값 : &lt;code&gt;Seattle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ad12093917e12acc6433df19922fcce1cbfa5ef" translate="yes" xml:space="preserve">
          <source>The class name declares a plugin as a subclass of both &lt;code&gt;Knife&lt;/code&gt; and &lt;code&gt;Chef&lt;/code&gt;. For example:</source>
          <target state="translated">클래스 이름은 플러그인을 &lt;code&gt;Knife&lt;/code&gt; 및 &lt;code&gt;Chef&lt;/code&gt; 의 하위 클래스로 선언합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="4787b815eba0a339a3958e77f6e2fcccc2318d15" translate="yes" xml:space="preserve">
          <source>The client &lt;code&gt;ubuntu-12.04&lt;/code&gt; was added to the &lt;code&gt;chef-vault&lt;/code&gt; during the bootstrap.</source>
          <target state="translated">부트 스트랩 동안 클라이언트 &lt;code&gt;ubuntu-12.04&lt;/code&gt; 가 &lt;code&gt;chef-vault&lt;/code&gt; 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8b6a4b9665a7ad8ec73b11b5bc9a6fa9c454cbfe" translate="yes" xml:space="preserve">
          <source>The client &lt;code&gt;ubuntu-20.04&lt;/code&gt; was added to the &lt;code&gt;chef-vault&lt;/code&gt; during the bootstrap.</source>
          <target state="translated">클라이언트 &lt;code&gt;ubuntu-20.04&lt;/code&gt; 는 부트 스트랩 중에 &lt;code&gt;chef-vault&lt;/code&gt; 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ba19c86c53333fb4d22b8635a37b2b58f04cac08" translate="yes" xml:space="preserve">
          <source>The client itself can decrypt and read the encrypted databag contents as well.</source>
          <target state="translated">클라이언트 자체도 암호화 된 데이터 백 내용을 해독하고 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87e74862573be40ce782ec2e3535d40a09762ed8" translate="yes" xml:space="preserve">
          <source>The client name that was used to sign this request.</source>
          <target state="translated">이 요청에 서명하는 데 사용 된 클라이언트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1151c031671e26296c423068075d486f7db07abc" translate="yes" xml:space="preserve">
          <source>The client-assigned metric identifier. Examples - &amp;ldquo;error*count&amp;rdquo;, &amp;ldquo;nginx/requests&amp;rdquo;. Metric identifiers are limited to 100 characters and can include only the following characters A-Z, a-z, 0-9, and the special characters *-.,+!*',()%/. The forward-slash character (/) denotes a hierarchy of name pieces, and it cannot be the first character of the name.</source>
          <target state="translated">클라이언트가 할당 한 메트릭 식별자입니다. 예- &quot;error * count&quot;, &quot;nginx / requests&quot;. 메트릭 식별자는 100 자로 제한되며 다음 문자 AZ, az, 0-9 및 특수 문자 *-., +! * ', () % / 만 포함 할 수 있습니다. 슬래시 문자 (/)는 이름 부분의 계층 구조를 나타내며 이름의 첫 번째 문자가 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d8f86f62588603945e377e24bb52ce7aa4120601" translate="yes" xml:space="preserve">
          <source>The client.rb file on that machine requires the following settings:</source>
          <target state="translated">해당 컴퓨터의 client.rb 파일에는 다음 설정이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8bf905d5e426cd2304eccf34e7bbe792bbadfad0" translate="yes" xml:space="preserve">
          <source>The client.rb file specifies how Chef Infra Client is configured on a node and has the following characteristics:</source>
          <target state="translated">client.rb 파일은 Chef Infra Client가 노드에서 구성되는 방법을 지정하며 다음과 같은 특성을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="25fdd3825573d0783e68367111a7074d59f4069b" translate="yes" xml:space="preserve">
          <source>The client_id is referred to as the &amp;lsquo;Application ID&amp;rsquo;</source>
          <target state="translated">client_id는 '애플리케이션 ID'라고합니다.</target>
        </trans-unit>
        <trans-unit id="417f68be547e38606fca3afa187320c3ff0ad8f2" translate="yes" xml:space="preserve">
          <source>The client_secret is referred to as the &amp;lsquo;Key (Password Type)&amp;rsquo;</source>
          <target state="translated">client_secret을 'Key (Password Type)'라고합니다.</target>
        </trans-unit>
        <trans-unit id="e78804ade0f8590da61626fcecbe29ec9b0439e1" translate="yes" xml:space="preserve">
          <source>The clients should be managed using knife as opposed to the Chef Infra Server API. The interactions between clients, nodes and acls are tricky.</source>
          <target state="translated">클라이언트는 Chef Infra Server API가 아닌 knife를 사용하여 관리해야합니다. 클라이언트, 노드 및 ACL 간의 상호 작용은 까다 롭습니다.</target>
        </trans-unit>
        <trans-unit id="6186c4a6675df9b5f0d5baffe10fd8a6e19dbe74" translate="yes" xml:space="preserve">
          <source>The closer the current state of the system is to the desired state, the more useful why-run mode will be. For example, if a full run-list is run against a fresh system, that run-list may not be completely correct on the first try, but also that run-list will produce more output than a smaller run-list</source>
          <target state="translated">시스템의 현재 상태가 원하는 상태에 가까울수록 더 유용한 이유 실행 모드가됩니다. 예를 들어, 전체 실행 목록이 새로운 시스템에 대해 실행되는 경우 해당 실행 목록은 첫 번째 시도에서 완전히 정확하지 않을 수 있지만 실행 목록은 더 작은 실행 목록보다 더 많은 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e0dcfe6f0b99bb1f271588dea3c81cda74c4d3ab" translate="yes" xml:space="preserve">
          <source>The cloud Storage URI of a KMS encrypted file containing the root principal password.</source>
          <target state="translated">루트 주체 비밀번호를 포함하는 KMS 암호화 파일의 Cloud Storage URI입니다.</target>
        </trans-unit>
        <trans-unit id="b332dcb699525acf10df3a68bc548198504e971a" translate="yes" xml:space="preserve">
          <source>The cluster this node pool belongs to.</source>
          <target state="translated">이 노드 풀이 속한 클러스터입니다.</target>
        </trans-unit>
        <trans-unit id="e9f3d274b8271793c69d34a85efde1d22a55bd99" translate="yes" xml:space="preserve">
          <source>The code for the DSC configuration script. This property may not be used in conjunction with the &lt;code&gt;command&lt;/code&gt; property.</source>
          <target state="translated">DSC 구성 스크립트의 코드입니다. 이 속성은 &lt;code&gt;command&lt;/code&gt; 속성 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="852ce618b8a43247e94d089eacba82428f308066" translate="yes" xml:space="preserve">
          <source>The code for the DSC configuration script. This property may not be used in the same recipe as the &lt;code&gt;command&lt;/code&gt; property.</source>
          <target state="translated">DSC 구성 스크립트의 코드입니다. 이 특성은 &lt;code&gt;command&lt;/code&gt; 특성 과 동일한 레시피에서 사용될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="988607959e6f256b029907b806b2e5e21791c875" translate="yes" xml:space="preserve">
          <source>The code in a file that is included in a recipe using a callback is evaluated exactly as if the code had been put in the recipe as a block. Files are searched relative to the current release.</source>
          <target state="translated">콜백을 사용하여 래서 피에 포함 된 파일의 코드는 코드가 래서 피에 블록으로 삽입 된 것처럼 정확하게 평가됩니다. 현재 릴리스를 기준으로 파일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="da8c324d873269b1dabfcba2fd31570a49a2adc7" translate="yes" xml:space="preserve">
          <source>The code to be executed on a node located within a distributed Erlang system. Default value: &lt;code&gt;q()&lt;/code&gt;.</source>
          <target state="translated">분산 Erlang 시스템 내에있는 노드에서 실행될 코드입니다. 기본 값 : &lt;code&gt;q()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ecc33096744da6f7c563369a6cddaeeecbdb7be" translate="yes" xml:space="preserve">
          <source>The codepage to use for the WinRM Command Shell</source>
          <target state="translated">WinRM 명령 셸에 사용할 코드 페이지</target>
        </trans-unit>
        <trans-unit id="8b0057baa7746e1165028b07161c262b13febe95" translate="yes" xml:space="preserve">
          <source>The comma-separated exception list of host patterns to exclude from proxying.</source>
          <target state="translated">프록시에서 제외 할 호스트 패턴의 쉼표로 구분 된 예외 목록입니다.</target>
        </trans-unit>
        <trans-unit id="bb8fad8fd94f671df63bd420ef46f9cf425905a4" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;chef-automate deploy&lt;/code&gt; without a configuration file will respect the proxy environment variables:</source>
          <target state="translated">구성 파일없이 &lt;code&gt;chef-automate deploy&lt;/code&gt; 명령 은 프록시 환경 변수를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="2292a744bc76513800d3c85757d18a2affbabcb7" translate="yes" xml:space="preserve">
          <source>The command for the Supervisor to execute when starting a service. This setting requires &lt;code&gt;pkg_bin_dirs&lt;/code&gt; to place package binaries in the path. If your package hs complex start-up behaviors, use a &lt;a href=&quot;#hooks&quot;&gt;run hook&lt;/a&gt; instead. Omit this setting for packages that are designed for consumption by other packages instead of being run directly by a Supervisor. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="translated">서비스를 시작할 때 Supervisor가 실행할 명령입니다. 이 설정을 사용하려면 &lt;code&gt;pkg_bin_dirs&lt;/code&gt; 가 패키지 바이너리를 경로에 배치 해야 합니다. 패키지 시작 동작이 복잡한 경우 대신 &lt;a href=&quot;#hooks&quot;&gt;실행 후크를&lt;/a&gt; 사용하십시오. 감독자가 직접 실행하는 대신 다른 패키지에서 사용하도록 설계된 패키지의 경우이 설정을 생략하십시오. &lt;em&gt;선택 사항&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="afa72a91c6e67ef39df8b72ecf39b17d0c53710f" translate="yes" xml:space="preserve">
          <source>The command is intended to restore an Automate instance completely from backup, however, it does support restoring only specific data types when given compatible backup archives and snapshots.</source>
          <target state="translated">이 명령은 백업에서 Automate 인스턴스를 완전히 복원하기위한 것이지만 호환되는 백업 아카이브 및 스냅 샷이 제공되면 특정 데이터 유형 만 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36ea81036b9a42d8e4fc6713625f2df7d11b1b33" translate="yes" xml:space="preserve">
          <source>The command line can also be used to edit JSON files and files that are related to third-party services, such as Amazon EC2, where the JSON files can contain per-instance metadata that is stored in a file on-disk and then read by Chef Infra Client as required.</source>
          <target state="translated">명령 줄을 사용하여 Amazon EC2와 같은 타사 서비스와 관련된 JSON 파일 및 파일을 편집 할 수도 있습니다. 여기서 JSON 파일은 디스크의 파일에 저장되고 다음에서 읽을 수있는 인스턴스 별 메타 데이터를 포함 할 수 있습니다. 필요에 따라 Chef Infra Client.</target>
        </trans-unit>
        <trans-unit id="b9e0e4ed725895e724139d61a8976ba183171d22" translate="yes" xml:space="preserve">
          <source>The command line can also be used to edit JSON files and files that are related to third-party services, such as Amazon EC2, where the JSON files can contain per-instance metadata that is stored in a file on-disk and then read by chef-solo or chef-client as required.</source>
          <target state="translated">명령 줄을 사용하여 Amazon EC2와 같은 타사 서비스와 관련된 JSON 파일 및 파일을 편집 할 수도 있습니다. 여기서 JSON 파일은 디스크상의 파일에 저장된 다음 인스턴스별로 읽을 수있는 인스턴스 별 메타 데이터를 포함 할 수 있습니다. 필요한 경우 요리사 솔로 또는 요리사 클라이언트.</target>
        </trans-unit>
        <trans-unit id="4edd95ac3540e38b7cda1d1cb1fc75f1d9f0ab15" translate="yes" xml:space="preserve">
          <source>The command line can also be used with JSON files and third-party services, such as Amazon EC2, where the JSON files can contain per-instance metadata stored in a file on-disk and then read by chef-solo or Chef Infra Client as required.</source>
          <target state="translated">명령 줄은 JSON 파일 및 Amazon EC2와 같은 타사 서비스와 함께 사용할 수도 있습니다. 여기서 JSON 파일은 디스크의 파일에 저장된 인스턴스 별 메타 데이터를 포함 할 수 있으며 다음과 같이 chef-solo 또는 Chef Infra Client에서 읽을 수 있습니다. 필수입니다.</target>
        </trans-unit>
        <trans-unit id="5940ac6de69197ff16ca9ec571f7df273e7b8548" translate="yes" xml:space="preserve">
          <source>The command must be run as the root user</source>
          <target state="translated">명령은 루트 사용자로 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6b457be0dc408871b3ed9097e240e07182f2883" translate="yes" xml:space="preserve">
          <source>The command output shows the Chef Habitat Builder services being added:</source>
          <target state="translated">명령 출력은 추가되는 Chef Habitat Builder 서비스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f42c786b7d21674aca32175091d1aab3935cf0f7" translate="yes" xml:space="preserve">
          <source>The command output shows the added Chef Infra Server services:</source>
          <target state="translated">명령 출력에는 추가 된 Chef Infra Server 서비스가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1a64d8cc597b20d4782ff2face3089a6c68e7a01" translate="yes" xml:space="preserve">
          <source>The command to be executed by the windows scheduled task.</source>
          <target state="translated">Windows 예약 된 작업에서 실행할 명령입니다.</target>
        </trans-unit>
        <trans-unit id="d3736b0621453330cf7d99cb07a04ee7440c93ac" translate="yes" xml:space="preserve">
          <source>The command to be run against the results of a search query.</source>
          <target state="translated">검색 결과에 대해 실행할 명령입니다.</target>
        </trans-unit>
        <trans-unit id="7f8954f1efc50163842e27568ad01ff3f3950cf7" translate="yes" xml:space="preserve">
          <source>The command to be run, or the path to a file that contains the command to be run.</source>
          <target state="translated">실행할 명령 또는 실행할 명령이 포함 된 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="a5190a9eefcceea6f8712013f5f00f8620ee0276" translate="yes" xml:space="preserve">
          <source>The command to export a package is &lt;code&gt;hab pkg export &amp;lt;FORMAT&amp;gt; &amp;lt;PKG_IDENT&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../habitat_cli/index#hab-pkg-export&quot;&gt;Chef Habitat CLI Reference Guide&lt;/a&gt; for more CLI information.</source>
          <target state="translated">패키지를 내보내는 명령은 &lt;code&gt;hab pkg export &amp;lt;FORMAT&amp;gt; &amp;lt;PKG_IDENT&amp;gt;&lt;/code&gt; 입니다. 자세한 CLI 정보 는 &lt;a href=&quot;../habitat_cli/index#hab-pkg-export&quot;&gt;Chef Habitat CLI 참조 가이드&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="778463ae98e2e8b432adbef08c3eb5634dde508c" translate="yes" xml:space="preserve">
          <source>The command used to check the run status for a service.</source>
          <target state="translated">서비스의 실행 상태를 확인하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="87d1eccb1aadac8ca34f16264e143af12ec3d62c" translate="yes" xml:space="preserve">
          <source>The command used to restart a service.</source>
          <target state="translated">서비스를 다시 시작하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="29d3ddf7edd99b3a29c8e773aca6e1418451b389" translate="yes" xml:space="preserve">
          <source>The command used to start a service.</source>
          <target state="translated">서비스를 시작하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="261888632cf886b098f3589c713da28891c1fd70" translate="yes" xml:space="preserve">
          <source>The command used to stop a service.</source>
          <target state="translated">서비스를 중지하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="3cc66cb331097c3fdd79aca2c92abc0f80d55a56" translate="yes" xml:space="preserve">
          <source>The command used to tell a service to reload its configuration.</source>
          <target state="translated">서비스에게 구성을 다시로드하도록 지시하는 데 사용되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="315b0a74d40a65b39d818e6b16601d1166ed34d5" translate="yes" xml:space="preserve">
          <source>The command will return something similar to:</source>
          <target state="translated">이 명령은 다음과 유사한 내용을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="be50d440f9551a30be95b60c93dd13b5e876f988" translate="yes" xml:space="preserve">
          <source>The commands for the Chef Habitat CLI (&lt;code&gt;hab&lt;/code&gt;) are listed below.</source>
          <target state="translated">Chef Habitat CLI ( &lt;code&gt;hab&lt;/code&gt; ) 의 명령 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ee5aefab532f00934b8f6e6ab74a21db7e5eaf0d" translate="yes" xml:space="preserve">
          <source>The commands that take this flag are:</source>
          <target state="translated">이 플래그를 사용하는 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5146269cc495860c59e4a43e0770c57fc5accd76" translate="yes" xml:space="preserve">
          <source>The commercial distributions of our products&amp;mdash;such as Chef Infra Client, Chef Habitat, or Chef InSpec&amp;mdash; are governed by either the &lt;a href=&quot;https://www.chef.io/end-user-license-agreement/&quot;&gt;Chef End User License Agreement (Chef EULA)&lt;/a&gt; or your commercial agreement with Chef Software, Inc. as a customer. You are required to accept these terms when using the distributions for the first time. For additional information on how to accept the license, see &lt;a href=&quot;../chef_license_accept/index&quot;&gt;Accepting the Chef License&lt;/a&gt; documentation.</source>
          <target state="translated">Chef Infra Client, Chef Habitat 또는 Chef InSpec과 같은 당사 제품의 상업적 배포는 &lt;a href=&quot;https://www.chef.io/end-user-license-agreement/&quot;&gt;Chef 최종 사용자 라이선스 계약 (Chef EULA)&lt;/a&gt; 또는 Chef Software, Inc.와의 고객 인 상업적 계약에 따라 관리됩니다. 배포판을 처음 사용할 때이 약관에 동의해야합니다. 라이선스 수락 방법에 대한 추가 정보 &lt;a href=&quot;../chef_license_accept/index&quot;&gt;는 Chef 라이선스 수락&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2a156a9c47fa299a74afaa4e18a4ede879f7ba0" translate="yes" xml:space="preserve">
          <source>The commercial distributions of our products&amp;mdash;such as Chef Infra Client, Chef Habitat, or Chef InSpec&amp;mdash; are governed by either the &lt;a href=&quot;https://www.chef.io/end-user-license-agreement/&quot;&gt;Chef End User License Agreement (Chef EULA)&lt;/a&gt; or your commercial agreement with Chef Software, Inc. as a customer. You are required to accept these terms when using the distributions for the first time. For additional information on how to accept the license, see &lt;a href=&quot;chef_license_accept/index&quot;&gt;Accepting the Chef License&lt;/a&gt; documentation.</source>
          <target state="translated">Chef Infra Client, Chef Habitat 또는 Chef InSpec과 같은 당사 제품의 상업적 배포는 &lt;a href=&quot;https://www.chef.io/end-user-license-agreement/&quot;&gt;Chef 최종 사용자 라이선스 계약 (Chef EULA)&lt;/a&gt; 또는 Chef Software, Inc.와의 고객 인 상업적 계약에 따라 관리됩니다. 배포판을 처음 사용할 때이 약관에 동의해야합니다. 라이선스 수락 방법에 대한 추가 정보 &lt;a href=&quot;chef_license_accept/index&quot;&gt;는 Chef 라이선스 수락&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44a1c6f1a83220900ed5ac356d5415f14c180a69" translate="yes" xml:space="preserve">
          <source>The community has authored thousands of cookbooks, ranging from niche cookbooks that are used by only a few organizations to cookbooks that are some of the most popular and are used by nearly everyone.</source>
          <target state="translated">이 커뮤니티는 소수의 조직 만이 사용하는 틈새 요리 책부터 가장 인기 있고 거의 모든 사람이 사용하는 요리 책에 이르기까지 수천 가지 요리 책을 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="a09395f1c675c3a6ff7c56fe8700e750e1e0e81e" translate="yes" xml:space="preserve">
          <source>The community provides many other plugins for knife: &lt;a href=&quot;http://community.opscode.com/&quot;&gt;http://community.opscode.com/&lt;/a&gt;.</source>
          <target state="translated">커뮤니티는 나이프를위한 다른 많은 플러그인을 제공합니다 : &lt;a href=&quot;http://community.opscode.com/&quot;&gt;http://community.opscode.com/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20f46b5f308eb0e171e4401f38e7d0f87f221a9f" translate="yes" xml:space="preserve">
          <source>The community signup URL. Default value: &lt;code&gt;&quot;#{node['supermarket']['chef_server_url']}/signup?ref=community&quot;&lt;/code&gt;.</source>
          <target state="translated">커뮤니티 등록 URL입니다. 기본값 : &lt;code&gt;&quot;#{node['supermarket']['chef_server_url']}/signup?ref=community&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aaa171d841e5b48f9dd6686bc138bb585178f671" translate="yes" xml:space="preserve">
          <source>The comparison to apply between the time series (indicated by filter and aggregation) and the threshold (indicated by threshold_value). The comparison is applied on each time series, with the time series on the left-hand side and the threshold on the right-hand side. Only COMPARISON_LT and COMPARISON_GT are supported currently.</source>
          <target state="translated">시계열 (필터 및 집계로 표시)과 임계 값 (threshold_value로 표시)간에 적용 할 비교입니다. 비교는 왼쪽에 시계열이 있고 오른쪽에 임계 값이있는 각 시계열에 적용됩니다. 현재 COMPARISON_LT 및 COMPARISON_GT 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e90d22e8086a7874964d993369eb0ba1592461f6" translate="yes" xml:space="preserve">
          <source>The compression level used with gzip, from least amount of compression (&lt;code&gt;1&lt;/code&gt;, fastest) to the most (&lt;code&gt;2&lt;/code&gt;, slowest). Default value: &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">gzip과 함께 사용 된 압축 수준은 최소 압축 량 ( &lt;code&gt;1&lt;/code&gt; , 가장 빠름)에서 가장 많이 ( &lt;code&gt;2&lt;/code&gt; , 느림)까지입니다. 기본 값 : &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b903ec25c0f803899aedba19ae7ede51dfe0a7a" translate="yes" xml:space="preserve">
          <source>The compression level used with gzip, from least amount of compression (&lt;code&gt;1&lt;/code&gt;, fastest) to the most (&lt;code&gt;2&lt;/code&gt;, slowest). Possible values: any integer between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; (inclusive). Default value: &lt;code&gt;&quot;2&quot;&lt;/code&gt;.</source>
          <target state="translated">gzip과 함께 사용되는 압축 수준으로, 최소 압축 량 ( &lt;code&gt;1&lt;/code&gt; , 가장 빠름)에서 최대 ( &lt;code&gt;2&lt;/code&gt; , 가장 느림)까지. 가능한 값 : &lt;code&gt;1&lt;/code&gt; 에서 &lt;code&gt;9&lt;/code&gt; (포함) 사이의 모든 정수 . 기본값 : &lt;code&gt;&quot;2&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53f52b7d31454de9c0f111a75160f893c9f2749c" translate="yes" xml:space="preserve">
          <source>The compression type of the data source</source>
          <target state="translated">데이터 소스의 압축 유형</target>
        </trans-unit>
        <trans-unit id="52b160279cef6a81802f652006aff540ca5ea63a" translate="yes" xml:space="preserve">
          <source>The condition(s) under which the action will be taken.</source>
          <target state="translated">조치가 취해질 조건.</target>
        </trans-unit>
        <trans-unit id="f6048b2a290ab47fa6a48b1ccbe572234818d917" translate="yes" xml:space="preserve">
          <source>The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.</source>
          <target state="translated">이 그룹을 관리하는 Compute Engine 인스턴스 그룹 관리자의 구성입니다. 선점 형 인스턴스 그룹에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e30c94b31618d0e45cf7abe8664bd46cd10a1a0f" translate="yes" xml:space="preserve">
          <source>The config settings for Compute Engine resources in an instance group, such as a master or worker group.</source>
          <target state="translated">마스터 또는 작업자 그룹과 같은 인스턴스 그룹의 Compute Engine 리소스에 대한 구성 설정입니다.</target>
        </trans-unit>
        <trans-unit id="b711f1cf9e1dcce812bc862bb46c43346da9a69a" translate="yes" xml:space="preserve">
          <source>The config.rb configuration can include arbitrary Ruby code to extend configuration beyond static values. This can be used to load environmental variables from the workstation. This makes it possible to write a single config.rb file that can be used by all users within your organization. This single file can also be checked into your chef-repo, allowing users to load different config.rb files based on which chef-repo they execute the commands from. This can be especially useful when each chef-repo points to a different chef server or organization.</source>
          <target state="translated">config.rb 구성은 정적 값 이상으로 구성을 확장하기 위해 임의의 Ruby 코드를 포함 할 수 있습니다. 워크 스테이션에서 환경 변수를로드하는 데 사용할 수 있습니다. 이를 통해 조직 내 모든 사용자가 사용할 수있는 단일 config.rb 파일을 작성할 수 있습니다. 이 단일 파일을 chef-repo에 체크인하여 사용자가 명령을 실행하는 chef-repo에 따라 다른 config.rb 파일을로드 할 수 있습니다. 이것은 각 chef-repo가 ​​다른 요리사 서버 또는 조직을 가리키는 경우 특히 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5375e229dfd3c6ab83dba4f2baf7a5beead2fe9b" translate="yes" xml:space="preserve">
          <source>The config.rb file is loaded every time the knife command is invoked using the following load order:</source>
          <target state="translated">다음로드 순서를 사용하여 knife 명령을 호출 할 때마다 config.rb 파일이로드됩니다.</target>
        </trans-unit>
        <trans-unit id="1060e3d41a79d376028a861105a3bcdbb1f477c4" translate="yes" xml:space="preserve">
          <source>The config.rb file on the workstation should be configured for use with the private Chef Supermarket.</source>
          <target state="translated">워크 스테이션의 config.rb 파일은 개인 Chef Supermarket에서 사용하도록 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="7fd3ea814ca4831247477fb7d008a104053cabea" translate="yes" xml:space="preserve">
          <source>The configuration data for the DSC script. The configuration data must be &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd878337(v=vs.85).aspx&quot;&gt;a valid Windows Powershell data file&lt;/a&gt;. This property may not be used in the same recipe as the &lt;code&gt;configuration_data_script&lt;/code&gt; property.</source>
          <target state="translated">DSC 스크립트의 구성 데이터 구성 데이터는 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd878337(v=vs.85).aspx&quot;&gt;유효한 Windows Powershell 데이터 파일&lt;/a&gt; 이어야 합니다 . 이 특성은 &lt;code&gt;configuration_data_script&lt;/code&gt; 특성 과 동일한 레시피에서 사용될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f4283725ba96bf80af39b7121b2ba9974b7a10fd" translate="yes" xml:space="preserve">
          <source>The configuration data for the DSC script. The configuration data must be &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/developer/windows-powershell&quot;&gt;a valid Windows PowerShell data file&lt;/a&gt;. This property may not be used in conjunction with the &lt;code&gt;configuration_data_script&lt;/code&gt; property.</source>
          <target state="translated">DSC 스크립트의 구성 데이터입니다. 구성 데이터는 &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/developer/windows-powershell&quot;&gt;유효한 Windows PowerShell 데이터 파일&lt;/a&gt; 이어야 합니다 . 이 속성은 &lt;code&gt;configuration_data_script&lt;/code&gt; 속성 과 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7e69a9e75f5b5ed0b09480ff5fe586d6c05ecbd6" translate="yes" xml:space="preserve">
          <source>The configuration directory to write the config to.</source>
          <target state="translated">구성을 쓸 구성 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="75b44db48ad3f3b2952c0607dfa8f89bb1a84f9d" translate="yes" xml:space="preserve">
          <source>The configuration file has the following settings for forwarding &lt;code&gt;compliance&lt;/code&gt; requests using the Chef Infra Server authentication system.</source>
          <target state="translated">구성 파일에는 Chef Infra Server 인증 시스템을 사용하여 &lt;code&gt;compliance&lt;/code&gt; 요청 을 전달하기위한 다음 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3597e2cfde74cd3f376e24b297a8d5f648a98401" translate="yes" xml:space="preserve">
          <source>The configuration file has the following settings for forwarding &lt;code&gt;compliance&lt;/code&gt; requests using the chef server authentication system.</source>
          <target state="translated">구성 파일에는 Chef 서버 인증 시스템을 사용하여 &lt;code&gt;compliance&lt;/code&gt; 요청 을 전달하기위한 다음 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b89cea1c767fd2f6d45eedfaa08dbef39d11d1a" translate="yes" xml:space="preserve">
          <source>The configuration file is &lt;code&gt;config.toml&lt;/code&gt;</source>
          <target state="translated">구성 파일은 &lt;code&gt;config.toml&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a569fc1c49f1fb1287d5724bea985452cf4bfa59" translate="yes" xml:space="preserve">
          <source>The configuration file is located at: &lt;code&gt;/etc/chef-manage/manage.rb&lt;/code&gt;.</source>
          <target state="translated">구성 파일은 &lt;code&gt;/etc/chef-manage/manage.rb&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="492478bb15a30d20e11cb54a145663401bf1f463" translate="yes" xml:space="preserve">
          <source>The configuration file to use</source>
          <target state="translated">사용할 구성 파일</target>
        </trans-unit>
        <trans-unit id="a035f3303db06d7ca392915ab767c77934897bb4" translate="yes" xml:space="preserve">
          <source>The configuration file to use.</source>
          <target state="translated">사용할 구성 파일.</target>
        </trans-unit>
        <trans-unit id="6fd68836d6ee304254de6088fb1947514380ba70" translate="yes" xml:space="preserve">
          <source>The configuration file to use. Chef Infra Client and Chef Push Jobs client use the same configuration file: client.rb. Default value: &lt;code&gt;Chef::Config.platform_specific_path(&quot;/etc/chef/client.rb&quot;)&lt;/code&gt;.</source>
          <target state="translated">사용할 구성 파일입니다. Chef Infra Client 및 Chef Push Jobs 클라이언트는 동일한 구성 파일 client.rb를 사용합니다. 기본값 : &lt;code&gt;Chef::Config.platform_specific_path(&quot;/etc/chef/client.rb&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1eeeee896a9dd5c01a43615029b7eb6a4b6fcfd" translate="yes" xml:space="preserve">
          <source>The configuration file to use. For example, when knife is run from a node that is configured to be managed by the Chef Infra Server, this option is used to allow knife to use the same credentials as Chef Infra Client looks when communicating with the Chef Infra Server.</source>
          <target state="translated">사용할 구성 파일입니다. 예를 들어, Chef Infra Server에서 관리하도록 구성된 노드에서 knife가 실행되는 경우이 옵션은 knife가 Chef Infra Server와 통신 할 때 Chef Infra Client가 보는 것과 동일한 자격 증명을 사용하도록 허용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4134a47550a9a00bb8f132af8a95c5b458b0d82b" translate="yes" xml:space="preserve">
          <source>The configuration file to use. For example, when knife is run from a node that is configured to be managed by the Chef server, this option is used to allow knife to use the same credentials as the chef-client when communicating with the Chef server.</source>
          <target state="translated">사용할 구성 파일. 예를 들어, Chef 서버에서 관리하도록 구성된 노드에서 knife가 실행될 때이 옵션은 Chef 서버와 통신 할 때 knife가 chef-client와 동일한 자격 증명을 사용하도록 허용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="60b6cb82cc2410c9c77b990c8862bf92ddd67331" translate="yes" xml:space="preserve">
          <source>The configuration file to use. The Chef Infra Client and Chef Push Jobs client use the same configuration file: client.rb. Default value: &lt;code&gt;Chef::Config.platform_specific_path(&quot;/etc/chef/client.rb&quot;)&lt;/code&gt;.</source>
          <target state="translated">사용할 구성 파일입니다. Chef Infra 클라이언트 및 Chef 푸시 작업 클라이언트는 동일한 구성 파일 client.rb를 사용합니다. 기본값 : &lt;code&gt;Chef::Config.platform_specific_path(&quot;/etc/chef/client.rb&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef8de4351b42bd948882090acad44a84e483ccac" translate="yes" xml:space="preserve">
          <source>The configuration for logging of each type of permission.</source>
          <target state="translated">각 권한 유형의 로깅을위한 구성입니다.</target>
        </trans-unit>
        <trans-unit id="b20b0567f03b5f2f56a759cf541138abefe017a3" translate="yes" xml:space="preserve">
          <source>The configuration is invalid</source>
          <target state="translated">구성이 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="6a0e21282819812d75e2f1e90c57de499c7364ca" translate="yes" xml:space="preserve">
          <source>The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.</source>
          <target state="translated">자동 확장 알고리즘의 구성 매개 변수입니다. 자동 확장 처리에 대해 cpuUtilization, customMetricUtilizations 및 loadBalancingUtilization 정책 중 하나 이상을 정의 할 수 있습니다. 이들 중 아무것도 지정되지 않은 경우 기본값은 cpuUtilization을 기준으로 0.6 또는 60 %로 자동 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="d79aa6d5cd43657d5ed8420ba687e884d4cc4704" translate="yes" xml:space="preserve">
          <source>The configuration scheme is essentially the same as that described in the documentation of the Rust &lt;a href=&quot;https://docs.rs/env_logger/0.6.1/env_logger/#enabling-logging&quot;&gt;env_logger&lt;/a&gt; crate, with the exception that we do not allow additional regular expression-based filtering. The configuration values the Supervisor recognizes are described below:</source>
          <target state="translated">구성 체계는 추가 정규식 기반 필터링을 허용하지 않는다는 점을 제외 하면 Rust &lt;a href=&quot;https://docs.rs/env_logger/0.6.1/env_logger/#enabling-logging&quot;&gt;env_logger&lt;/a&gt; 상자 의 문서에 설명 된 것과 본질적으로 동일 합니다. Supervisor가 인식하는 구성 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca197df223e4383d14d2103fe6288540fa52e606" translate="yes" xml:space="preserve">
          <source>The configuration settings in the &lt;code&gt;delivery.rb&lt;/code&gt; file should not be modified before discussing those changes with Chef. Some of these settings should be considered for tuning (see &lt;a href=&quot;../delivery_server_tuning/index&quot;&gt;Workflow Server Tuning&lt;/a&gt;), but many of them should be left as default values.</source>
          <target state="translated">&lt;code&gt;delivery.rb&lt;/code&gt; 파일 의 구성 설정은 Chef와 이러한 변경 사항을 논의하기 전에 수정해서는 안됩니다. 이러한 설정 중 일부는 조정을 위해 고려해야 하지만 ( &lt;a href=&quot;../delivery_server_tuning/index&quot;&gt;워크 플로 서버 조정&lt;/a&gt; 참조 ) 대부분은 기본값으로 남겨 두어야합니다.</target>
        </trans-unit>
        <trans-unit id="023b1f2ddc029dc6b6536d30fd321c35103a0e4d" translate="yes" xml:space="preserve">
          <source>The configuration the member is currently exporting. This is constrained by what is defined in &lt;code&gt;pkg_exports&lt;/code&gt;, where the values are replaced with the current values (e.g., taking into account things like user.toml, gossiped configuration values, etc.)</source>
          <target state="translated">구성원이 현재 내보내는 구성입니다. 이것은 &lt;code&gt;pkg_exports&lt;/code&gt; 에 정의 된 것에 의해 제한됩니다 . 여기서 값은 현재 값으로 대체됩니다 (예 : user.toml, 험담 한 구성 값 등을 고려).</target>
        </trans-unit>
        <trans-unit id="3841a445b616c78af803bf03744ca29f15a194ec" translate="yes" xml:space="preserve">
          <source>The configuration type of the Chef Infra Server. Possible values: &lt;code&gt;backend&lt;/code&gt;, &lt;code&gt;frontend&lt;/code&gt;, or &lt;code&gt;standalone&lt;/code&gt;. Default value: &lt;code&gt;'standalone'&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server의 구성 유형입니다. 가능한 값 : &lt;code&gt;backend&lt;/code&gt; , &lt;code&gt;frontend&lt;/code&gt; , &lt;code&gt;standalone&lt;/code&gt; . 기본값 : &lt;code&gt;'standalone'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b309ab29e0847af9ea4cf80a9879e1d6dcac014b" translate="yes" xml:space="preserve">
          <source>The configuration type of the Chef server. Possible values: &lt;code&gt;backend&lt;/code&gt;, &lt;code&gt;frontend&lt;/code&gt;, or &lt;code&gt;standalone&lt;/code&gt;. Default value: &lt;code&gt;'standalone'&lt;/code&gt;.</source>
          <target state="translated">Chef 서버의 구성 유형입니다. 가능한 값은 &lt;code&gt;backend&lt;/code&gt; , &lt;code&gt;frontend&lt;/code&gt; 또는 &lt;code&gt;standalone&lt;/code&gt; 입니다. 기본값 : &lt;code&gt;'standalone'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c1abe007c4212409bb266544599ccd29036f7b8b" translate="yes" xml:space="preserve">
          <source>The connection mode of the Redis instance.</source>
          <target state="translated">Redis 인스턴스의 연결 모드입니다.</target>
        </trans-unit>
        <trans-unit id="52c37dc16f53b3c2d9df9fa461548aab6e5da017" translate="yes" xml:space="preserve">
          <source>The connection source to which PostgreSQL is to respond. Default value: &lt;code&gt;'127.0.0.1'&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL이 응답 할 연결 소스입니다. 기본값 : &lt;code&gt;'127.0.0.1'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="173eeb59a8cb741ac3cfc9d09763b529f40aa32f" translate="yes" xml:space="preserve">
          <source>The connection source to which PostgreSQL is to respond. Default value: &lt;code&gt;'localhost'&lt;/code&gt;. In a disaster recovery configuration, this value is similar to: &lt;code&gt;'localhost,192.0.2.0'&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL이 응답 할 연결 소스입니다. 기본값 : &lt;code&gt;'localhost'&lt;/code&gt; . 재해 복구 구성에서이 값은 &lt;code&gt;'localhost,192.0.2.0'&lt;/code&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="d9d0f9cde602de69e23d818f58d034176b63881d" translate="yes" xml:space="preserve">
          <source>The connection source to which PostgreSQL is to respond. Default value: &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">PostgreSQL이 응답 할 연결 소스입니다. 기본 값 : &lt;code&gt;localhost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd75bbab203be89e0a8a617f15cf3f12728d79d9" translate="yes" xml:space="preserve">
          <source>The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.</source>
          <target state="translated">노드 풀의 노드에서 동시에 실행할 수있는 최대 포드 수에 대한 제약입니다.</target>
        </trans-unit>
        <trans-unit id="6a81d3ef13f536f03a09a3a9a0611e29d6dc7588" translate="yes" xml:space="preserve">
          <source>The consumer service defines a &amp;ldquo;binding name&amp;rdquo; as a handle to refer to a service group from which it receives configuration data. However, it must do more than just name the bind, it must also state the configuration values it expects from the service group. Chef Habitat will make sure that whatever service group is bound actually exports the expected values to the consumer service.</source>
          <target state="translated">소비자 서비스는 구성 데이터를 수신하는 서비스 그룹을 참조하는 핸들로 &quot;바인딩 이름&quot;을 정의합니다. 그러나 바인드 이름을 지정하는 것 이상을 수행해야하며 서비스 그룹에서 예상하는 구성 값도 명시해야합니다. Chef Habitat은 바인딩 된 서비스 그룹이 실제로 예상 값을 소비자 서비스로 내보내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="649f930393d1f0630f6a8eba32dded4627ce2ca2" translate="yes" xml:space="preserve">
          <source>The container consists of two parts, the tabs and the panels.</source>
          <target state="translated">컨테이너는 탭과 패널의 두 부분으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="4a7322d7797ffc2c91ad08cf3dbc077385c65080" translate="yes" xml:space="preserve">
          <source>The container name can also be passed with the &lt;code&gt;name&lt;/code&gt; resource parameter:</source>
          <target state="translated">컨테이너 이름은 &lt;code&gt;name&lt;/code&gt; 리소스 매개 변수 와 함께 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b3b0abb5e714ba06cc6433e2b579309565d0ba0" translate="yes" xml:space="preserve">
          <source>The content generation of the object, if applied to an object.</source>
          <target state="translated">개체에 적용된 경우 개체의 콘텐츠 생성입니다.</target>
        </trans-unit>
        <trans-unit id="bf4339f6298b7f74255b044d16b8e124bbf4e49d" translate="yes" xml:space="preserve">
          <source>The content generation of this object. Used for object versioning.</source>
          <target state="translated">이 개체의 콘텐츠 생성입니다. 객체 버전 관리에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c69435dadc9c98dc9082a9f63927745801c81f0f" translate="yes" xml:space="preserve">
          <source>The content of the private key including new lines. This property is used in place of private_key_path in instances where you want to avoid having to first write the private key to disk</source>
          <target state="translated">새 줄을 포함한 개인 키의 내용입니다. 이 속성은 먼저 개인 키를 디스크에 쓸 필요가없는 경우 private_key_path 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2f0cf652d08984aafabe29db9c5786e686f40fd4" translate="yes" xml:space="preserve">
          <source>The content of the private key, including new lines. This property is used in place of private_key_path in instances where you want to avoid having to first write the private key to disk.</source>
          <target state="translated">새 줄을 포함한 개인 키의 내용입니다. 이 속성은 먼저 디스크에 개인 키를 쓸 필요가없는 경우 private_key_path 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3d5e85cabc90b8266e593e7ca5c4a65ad1a9c5f8" translate="yes" xml:space="preserve">
          <source>The content of the template itself may look like this:</source>
          <target state="translated">템플릿 자체의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="64bcb055acde9f0607940e65fccf7a2b7cb57465" translate="yes" xml:space="preserve">
          <source>The content type of the secret.</source>
          <target state="translated">비밀의 콘텐츠 유형입니다.</target>
        </trans-unit>
        <trans-unit id="6bd3364dd34e10cb805f642566b6250d94f1bc75" translate="yes" xml:space="preserve">
          <source>The contents if the &lt;code&gt;inetd.conf&lt;/code&gt; file contain the following:</source>
          <target state="translated">&lt;code&gt;inetd.conf&lt;/code&gt; 파일에 다음이 포함 된 경우 내용 :</target>
        </trans-unit>
        <trans-unit id="a17ac5ba314706dc7bca8e739f4b2fb950c4c23e" translate="yes" xml:space="preserve">
          <source>The contents of a data bag can be loaded into a recipe. For example, a data bag named &lt;code&gt;apps&lt;/code&gt; and a data bag item named &lt;code&gt;my_app&lt;/code&gt;:</source>
          <target state="translated">데이터 백의 내용물을 레시피에로드 할 수 있습니다. 예를 들어 &lt;code&gt;apps&lt;/code&gt; 라는 데이터 백과 &lt;code&gt;my_app&lt;/code&gt; 라는 데이터 백 항목이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="476871c1fa259a0ee8db54aa1c352e8975b720e9" translate="yes" xml:space="preserve">
          <source>The contents of a data bag item named &lt;code&gt;justin&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;justin&lt;/code&gt; 이라는 데이터 백 항목의 내용 :</target>
        </trans-unit>
        <trans-unit id="18602d85a8703e335ddc0e8b2472d3657ad90b27" translate="yes" xml:space="preserve">
          <source>The contents of the ring key when running with &lt;a href=&quot;../sup_secure/index&quot;&gt;wire encryption&lt;/a&gt;. Useful when running in a container.</source>
          <target state="translated">&lt;a href=&quot;../sup_secure/index&quot;&gt;유선 암호화로&lt;/a&gt; 실행할 때 링 키의 내용 . 컨테이너에서 실행할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="40ed6462beaa83a899c82a8c650c65b7a4ec8f68" translate="yes" xml:space="preserve">
          <source>The contents of your app are stored in the Chef Habitat Builder SaaS, where the Chef Habitat community can view and access them. You can also use the on-prem version of Chef Habitat Builder, where you can store and maintain your apps locally.</source>
          <target state="translated">앱의 콘텐츠는 Chef Habitat Builder SaaS에 저장되어 Chef Habitat 커뮤니티에서보고 액세스 할 수 있습니다. 또한 로컬에서 앱을 저장하고 유지할 수있는 Chef Habitat Builder의 온 프레미스 버전을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="12a0d06d6b5e6246a9089594809ebb26797a7361" translate="yes" xml:space="preserve">
          <source>The contents of your organization validator key, the format is dependent on &lt;code&gt;validation_key_format&lt;/code&gt;.</source>
          <target state="translated">조직 유효성 검사기 키의 내용, 형식은 &lt;code&gt;validation_key_format&lt;/code&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="9af8e3432bbda16b970d66b6298524f42d75c332" translate="yes" xml:space="preserve">
          <source>The context from which a command is run matters. For example, when working in the &lt;code&gt;roles/&lt;/code&gt; directory, knife will know what is being worked with. Enter &lt;code&gt;knife show base.json&lt;/code&gt; and knife will return the base role from the Chef Infra Server. From the chef-repo root, enter &lt;code&gt;knife show roles/base.json&lt;/code&gt; to get the same result</source>
          <target state="translated">명령이 실행되는 컨텍스트가 중요합니다. 예를 들어 &lt;code&gt;roles/&lt;/code&gt; 디렉토리 에서 작업 할 때 knife는 작업중인 항목을 알 수 있습니다. &lt;code&gt;knife show base.json&lt;/code&gt; 을 입력 하면 knife가 Chef Infra Server에서 기본 역할을 반환합니다. chef-repo 루트에서 &lt;code&gt;knife show roles/base.json&lt;/code&gt; 을 입력 하여 동일한 결과를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="84df3e20135a7ad0d7483c09c7ad9b50e066ce8f" translate="yes" xml:space="preserve">
          <source>The context from which a command is run matters. For example, when working in the &lt;code&gt;roles/&lt;/code&gt; directory, knife will know what is being worked with. Enter &lt;code&gt;knife show base.json&lt;/code&gt; and knife will return the base role from the Chef server. From the chef-repo root, enter &lt;code&gt;knife show roles/base.json&lt;/code&gt; to get the same result</source>
          <target state="translated">명령이 실행되는 컨텍스트가 중요합니다. 예를 들어, &lt;code&gt;roles/&lt;/code&gt; 디렉토리 에서 작업 할 때 knife는 작업중인 항목을 알게됩니다. &lt;code&gt;knife show base.json&lt;/code&gt; 을 입력 하면 knife가 Chef 서버에서 기본 역할을 리턴합니다. chef-repo 루트에서 &lt;code&gt;knife show roles/base.json&lt;/code&gt; 을 입력 하여 동일한 결과를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="ea9538c5dd361735c7f1c826c7de0bf4e6f1cf9d" translate="yes" xml:space="preserve">
          <source>The continuous availability time-out for the share.</source>
          <target state="translated">공유에 대한 지속적인 가용성 제한 시간입니다.</target>
        </trans-unit>
        <trans-unit id="e1b1bd964d0c0ead1525b2895e24a83864221550" translate="yes" xml:space="preserve">
          <source>The control count in the &lt;em&gt;Profile Status&lt;/em&gt; pane (Reports &amp;gt; Profile Status) shows the total number of executed controls, not the total number of unique controls.</source>
          <target state="translated">의 제어 계수 &lt;em&gt;프로파일 상태&lt;/em&gt; 창 (리포트&amp;gt; 프로필 여부) 실행 제어의 총 수없는 고유 제어의 총 수를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="b2c06e6493f13da28e75dec1f54b83193a33cee8" translate="yes" xml:space="preserve">
          <source>The control will pass if a group with the given group name exists.</source>
          <target state="translated">주어진 그룹 이름을 가진 그룹이 존재하면 제어가 통과됩니다.</target>
        </trans-unit>
        <trans-unit id="a9f426b5553c81455cec0831bc8de59881e74f9e" translate="yes" xml:space="preserve">
          <source>The control will pass if the describe passes all tests.</source>
          <target state="translated">설명이 모든 테스트를 통과하면 컨트롤이 통과됩니다.</target>
        </trans-unit>
        <trans-unit id="d72e73e2a3b6f276fbb4fa6434e51a1d4a2f1fec" translate="yes" xml:space="preserve">
          <source>The control will pass if the describe returns at least one result.</source>
          <target state="translated">설명이 하나 이상의 결과를 반환하면 컨트롤이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="fc7fa959843f2b4b3fae8ca33461891eca549fb3" translate="yes" xml:space="preserve">
          <source>The control will pass if the describe returns at least one result. The field names described in the &lt;a href=&quot;#properties&quot;&gt;properties table&lt;/a&gt; should be used for the &lt;code&gt;&amp;lt;property&amp;gt;&lt;/code&gt; in the &lt;code&gt;where&lt;/code&gt; clause.</source>
          <target state="translated">설명이 하나 이상의 결과를 반환하면 컨트롤이 전달됩니다. &lt;a href=&quot;#properties&quot;&gt;속성 테이블에&lt;/a&gt; 설명 된 필드 이름 은 &lt;code&gt;where&lt;/code&gt; 절의 &lt;code&gt;&amp;lt;property&amp;gt;&lt;/code&gt; 에 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ae4624d5b268614a615cb587d179f8832c39a78d" translate="yes" xml:space="preserve">
          <source>The control will pass if the filter returns at least one result.</source>
          <target state="translated">필터가 하나 이상의 결과를 반환하면 컨트롤이 통과됩니다.</target>
        </trans-unit>
        <trans-unit id="9e3eec9210c90b071f002c363ce5e600783f1bf8" translate="yes" xml:space="preserve">
          <source>The control will pass if the filter returns at least one result. Use &lt;code&gt;should_not&lt;/code&gt; if you expect zero matches.</source>
          <target state="translated">필터가 하나 이상의 결과를 반환하면 컨트롤이 통과됩니다. 0 일치를 예상하는 경우 &lt;code&gt;should_not&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="512887e19b92ab3e1db89e94194dfe5be21078f0" translate="yes" xml:space="preserve">
          <source>The control will pass if the resource contains at least one bucket.</source>
          <target state="translated">리소스에 버킷이 하나 이상 포함 된 경우 제어가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="502de5ab2f7dded9693c2a73650468e1d29488c5" translate="yes" xml:space="preserve">
          <source>The control will pass if the resource returns a result. Use &lt;code&gt;should_not&lt;/code&gt; if you expect zero matches.</source>
          <target state="translated">리소스가 결과를 반환하면 컨트롤이 전달됩니다. 0 일치를 예상하는 경우 &lt;code&gt;should_not&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3db954a843e918c11852afa447d912e10e21892d" translate="yes" xml:space="preserve">
          <source>The convention we&amp;rsquo;ve adopted is to append the different menu levels together, separated by a forward slash, and starting with the highest level. For example, this page is nested under Overview and then Community, so the page&amp;rsquo;s parent identifier is &lt;code&gt;overview/community&lt;/code&gt;.</source>
          <target state="translated">우리가 채택한 규칙은 다른 메뉴 수준을 슬래시로 구분하고 가장 높은 수준부터 시작하여 함께 추가하는 것입니다. 예를 들어이 페이지는 개요와 커뮤니티 아래에 중첩되어 있으므로 페이지의 상위 식별자는 &lt;code&gt;overview/community&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7b3683e86633c018d84a24ee5dbca58665d3b212" translate="yes" xml:space="preserve">
          <source>The convention we&amp;rsquo;ve adopted is to use the identifier of the page&amp;rsquo;s parent, a forward slash, then the page file, a space, and then the page title.</source>
          <target state="translated">우리가 채택한 규칙은 페이지의 부모 식별자, 슬래시, 페이지 파일, 공백, 페이지 제목을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ca7b2ebc1173ce6e99226e189458d4defcfee1a1" translate="yes" xml:space="preserve">
          <source>The cookbook category: &lt;code&gt;&quot;Databases&quot;&lt;/code&gt;, &lt;code&gt;&quot;Web Servers&quot;&lt;/code&gt;, &lt;code&gt;&quot;Process Management&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monitoring &amp;amp; Trending&quot;&lt;/code&gt;, &lt;code&gt;&quot;Programming Languages&quot;&lt;/code&gt;, &lt;code&gt;&quot;Package Management&quot;&lt;/code&gt;, &lt;code&gt;&quot;Applications&quot;&lt;/code&gt;, &lt;code&gt;&quot;Networking&quot;&lt;/code&gt;, &lt;code&gt;&quot;Operating Systems &amp;amp; Virtualization&quot;&lt;/code&gt;, &lt;code&gt;&quot;Utilities&quot;&lt;/code&gt;, or &lt;code&gt;&quot;Other&quot;&lt;/code&gt;.</source>
          <target state="translated">요리 책 범주 : &lt;code&gt;&quot;Databases&quot;&lt;/code&gt; , &lt;code&gt;&quot;Web Servers&quot;&lt;/code&gt; , &lt;code&gt;&quot;Process Management&quot;&lt;/code&gt; , &lt;code&gt;&quot;Monitoring &amp;amp; Trending&quot;&lt;/code&gt; , &lt;code&gt;&quot;Programming Languages&quot;&lt;/code&gt; , &lt;code&gt;&quot;Package Management&quot;&lt;/code&gt; , &lt;code&gt;&quot;Applications&quot;&lt;/code&gt; , &lt;code&gt;&quot;Networking&quot;&lt;/code&gt; , &lt;code&gt;&quot;Operating Systems &amp;amp; Virtualization&quot;&lt;/code&gt; , &lt;code&gt;&quot;Utilities&quot;&lt;/code&gt; , 또는 &lt;code&gt;&quot;Other&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="234951295aa72c4960743bcdaf5321ade5da4a9b" translate="yes" xml:space="preserve">
          <source>The cookbook in which a file is located (if it is not located in the current cookbook).</source>
          <target state="translated">파일이있는 쿡북 (현재 쿡북에없는 경우)</target>
        </trans-unit>
        <trans-unit id="606fa01a3114d057f2314bdabd78f1dbfc8a81f1" translate="yes" xml:space="preserve">
          <source>The cookbook in which a file is located (if it is not located in the current cookbook). The default value is the current cookbook.</source>
          <target state="translated">파일이있는 요리 책 (현재 요리 책에없는 경우) 기본값은 현재 요리 책입니다.</target>
        </trans-unit>
        <trans-unit id="b1e3ac523391d4410b48603b23cc18a976668c9e" translate="yes" xml:space="preserve">
          <source>The cookbook is downloaded from &lt;a href=&quot;https://supermarket.chef.io/cookbooks&quot;&gt;https://supermarket.chef.io/cookbooks&lt;/a&gt; in the tar.gz format.</source>
          <target state="translated">요리 책은 &lt;a href=&quot;https://supermarket.chef.io/cookbooks&quot;&gt;https://supermarket.chef.io/cookbooks&lt;/a&gt; 에서 tar.gz 형식으로 다운로드 됩니다.</target>
        </trans-unit>
        <trans-unit id="47e87908f91f52d15c5228af67fe475f7ee495af" translate="yes" xml:space="preserve">
          <source>The cookbook is downloaded from Chef Supermarket in the tar.gz format.</source>
          <target state="translated">요리 책은 Chef Supermarket에서 tar.gz 형식으로 다운로드됩니다.</target>
        </trans-unit>
        <trans-unit id="050b40ce41cd3c745325e5a357d08b0a2b0ee353" translate="yes" xml:space="preserve">
          <source>The cookbook is downloaded from the &lt;a href=&quot;https://supermarket.chef.io/cookbooks&quot;&gt;Chef Supermarket&lt;/a&gt; in the tar.gz format.</source>
          <target state="translated">요리 책은 &lt;a href=&quot;https://supermarket.chef.io/cookbooks&quot;&gt;Chef Supermarket&lt;/a&gt; 에서 tar.gz 형식으로 다운로드 됩니다.</target>
        </trans-unit>
        <trans-unit id="123e60a17e3806d3234c4f40136e7082f5c9a411" translate="yes" xml:space="preserve">
          <source>The cookbook that is run by the &lt;code&gt;supermarket-ctl reconfigure&lt;/code&gt; command: &lt;a href=&quot;https://github.com/chef/supermarket/tree/master/omnibus/cookbooks/omnibus-supermarket&quot;&gt;https://github.com/chef/supermarket/tree/master/omnibus/cookbooks/omnibus-supermarket&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;supermarket-ctl reconfigure&lt;/code&gt; 명령으로 실행되는 요리 책 : &lt;a href=&quot;https://github.com/chef/supermarket/tree/master/omnibus/cookbooks/omnibus-supermarket&quot;&gt;https://github.com/chef/supermarket/tree/master/omnibus/cookbooks/omnibus-supermarket&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dabdcbe574e6f062a2047f06a1608e14d917c57" translate="yes" xml:space="preserve">
          <source>The cookbook to source the repository template file from. Only necessary if you&amp;rsquo;re not using the built in template.</source>
          <target state="translated">리포지토리 템플릿 파일을 가져올 쿡북입니다. 기본 제공 템플릿을 사용하지 않는 경우에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ace2b129ce1930ca9435cca5c8818e5a353c9f69" translate="yes" xml:space="preserve">
          <source>The cookbook versions used with the environment. Default value: &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">환경과 함께 사용되는 요리 책 버전입니다. 기본값 : &lt;code&gt;{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d2ad73dfd22d760d95a592e22d66630860f0648" translate="yes" xml:space="preserve">
          <source>The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained</source>
          <target state="translated">조직 별 구성 정책이 유지되는 요리 책 (및 요리 책 버전)</target>
        </trans-unit>
        <trans-unit id="8f070640dd90a7210b74528ae20029c7eb1cf3f0" translate="yes" xml:space="preserve">
          <source>The correct configuration settings again depend on your directory server&amp;rsquo;s schema; see the example configs below.</source>
          <target state="translated">올바른 구성 설정은 디렉토리 서버의 스키마에 따라 다릅니다. 아래의 예제 구성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d2ea5183b975f2fc05bb252e79c10ee89faafa5a" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;pg_hba.conf&lt;/code&gt; entry is similar to:</source>
          <target state="translated">해당 &lt;code&gt;pg_hba.conf&lt;/code&gt; 항목은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="0b7f03a2deacae0f1b5dc90e8478f853f5dc5d81" translate="yes" xml:space="preserve">
          <source>The corresponding incident is closed</source>
          <target state="translated">해당 사건이 종결 됨</target>
        </trans-unit>
        <trans-unit id="4acd40256d608aeee5468eab2c44147bfa496d86" translate="yes" xml:space="preserve">
          <source>The corresponding incident is deleted</source>
          <target state="translated">해당 사건이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="96791df96f09706cb132cc0dcd636ef72f84c86e" translate="yes" xml:space="preserve">
          <source>The count of Chef Infra Client converges have started.</source>
          <target state="translated">Chef Infra Client 수렴이 시작되었습니다.</target>
        </trans-unit>
        <trans-unit id="85059f1cecc3e2e7cf8b2298715f47990a534ce1" translate="yes" xml:space="preserve">
          <source>The count of attached entities for each policy.</source>
          <target state="translated">각 정책에 대한 연결된 엔터티 수입니다.</target>
        </trans-unit>
        <trans-unit id="47019d4ff7cc7848d03526babd81649b019bccfd" translate="yes" xml:space="preserve">
          <source>The count of attached entities for the specified policy.</source>
          <target state="translated">지정된 정책에 대해 연결된 엔터티 수입니다.</target>
        </trans-unit>
        <trans-unit id="6e1869d5b99b5ff68f6e785ea34a1f305e39f8bb" translate="yes" xml:space="preserve">
          <source>The count of security groups associated with your cluster.</source>
          <target state="translated">클러스터와 연결된 보안 그룹의 수입니다.</target>
        </trans-unit>
        <trans-unit id="0ae4cb165d84184d744ec14f6c9cbf2d30be9ee3" translate="yes" xml:space="preserve">
          <source>The country in which your company is located. Default value: &amp;ldquo;US&amp;rdquo;.</source>
          <target state="translated">회사가 위치한 국가입니다. 기본값 :&amp;ldquo;US&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="5bc865d4614b62224446221df689266d767199a9" translate="yes" xml:space="preserve">
          <source>The country in which your company is located. Default value: &lt;code&gt;'US'&lt;/code&gt;.</source>
          <target state="translated">회사가 위치한 국가입니다. 기본값 : &lt;code&gt;'US'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60ad2d81fa65884765b4193671c747d07dfa2e10" translate="yes" xml:space="preserve">
          <source>The country in which your company is located. Default value: &lt;code&gt;US&lt;/code&gt;.</source>
          <target state="translated">회사가 위치한 국가 기본 값 : &lt;code&gt;US&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85dbfc6a99857c6141f5d42556d922869cd87cf0" translate="yes" xml:space="preserve">
          <source>The creation date of the Access Key.</source>
          <target state="translated">액세스 키 생성 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="b996b609f628fb12a17c90a86be90b104647251b" translate="yes" xml:space="preserve">
          <source>The creation of required user and group identifiers is done &lt;strong&gt;automatically&lt;/strong&gt; during the installation process for the Chef Infra Server; however, the following user and group accounts &lt;strong&gt;may&lt;/strong&gt; be created in advance of installing the Chef Infra Server if specific UIDs and GIDs are preferred. The user &lt;strong&gt;and&lt;/strong&gt; group must be created as a pair to satisfy reconfiguration requirements.</source>
          <target state="translated">필요한 사용자 및 그룹 식별자 생성은 Chef Infra Server 설치 프로세스 중에 &lt;strong&gt;자동으로&lt;/strong&gt; 수행 &lt;strong&gt;됩니다&lt;/strong&gt; . 그러나 특정 UID 및 GID를 선호하는 경우 Chef Infra Server를 설치하기 전에 다음 사용자 및 그룹 계정을 생성 &lt;strong&gt;할 수&lt;/strong&gt; 있습니다. 재구성 요구 사항을 충족하려면 사용자 &lt;strong&gt;와&lt;/strong&gt; 그룹을 쌍으로 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="edbd6d97ecd99c69fb9f12adf04f03f75d5ffcd6" translate="yes" xml:space="preserve">
          <source>The creation of required user and group identifiers is done &lt;strong&gt;automatically&lt;/strong&gt; during the installation process for the Chef server; however, the following user and group accounts &lt;strong&gt;may&lt;/strong&gt; be created in advance of installing the Chef server if specific UIDs and GIDs are preferred. The user &lt;strong&gt;and&lt;/strong&gt; group must be created as a pair to satisfy reconfiguration requirements.</source>
          <target state="translated">필요한 사용자 및 그룹 식별자의 작성은 Chef 서버의 설치 ​​프로세스 중에 &lt;strong&gt;자동으로&lt;/strong&gt; 수행 &lt;strong&gt;됩니다&lt;/strong&gt; . 그러나 특정 UID 및 GID를 선호하는 경우 Chef 서버를 설치하기 전에 다음 사용자 및 그룹 계정을 만들 &lt;strong&gt;수&lt;/strong&gt; 있습니다. 재구성 요구 사항을 충족 시키려면 사용자 &lt;strong&gt;및&lt;/strong&gt; 그룹을 쌍으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="636026353699988e0282a7bdc7eb57c00382a987" translate="yes" xml:space="preserve">
          <source>The creation time of the EFS file system</source>
          <target state="translated">EFS 파일 시스템 생성 시간</target>
        </trans-unit>
        <trans-unit id="d78e06a7c0fc965d67c0717dcc5dea987b1c72eb" translate="yes" xml:space="preserve">
          <source>The creation time of the bucket in RFC 3339 format.</source>
          <target state="translated">RFC 3339 형식의 버킷 생성 시간입니다.</target>
        </trans-unit>
        <trans-unit id="06a511d1234a368283e275cbdb708639e3fc3829" translate="yes" xml:space="preserve">
          <source>The creation timestamp for this managed instance group in RFC3339 text format.</source>
          <target state="translated">RFC3339 텍스트 형식으로 된이 관리 형 인스턴스 그룹의 생성 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="d9095b46f482965274a7a98dddfd1134eaae9c78" translate="yes" xml:space="preserve">
          <source>The creation token is automatically assigned by AWS if not provided by the user at creation. This is a string with minimum 1 and maximum 64-character long. This must be passed as a &lt;code&gt;creation_token: 'value'&lt;/code&gt; key-value entry in a hash.</source>
          <target state="translated">생성시 사용자가 제공하지 않은 경우 생성 토큰은 AWS에서 자동으로 할당합니다. 최소 1 자 및 최대 64 자 길이의 문자열입니다. 해시에서 &lt;code&gt;creation_token: 'value'&lt;/code&gt; 키-값 항목 으로 전달되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="48cfab422dc70173aacc4914ca74ccda23fa878c" translate="yes" xml:space="preserve">
          <source>The creation token that the EFS file system is associated.</source>
          <target state="translated">EFS 파일 시스템이 연결된 생성 토큰입니다.</target>
        </trans-unit>
        <trans-unit id="ddba4df10abcdfeba1e26eb0ab6a0d993bd5f774" translate="yes" xml:space="preserve">
          <source>The creator of an object on the Chef Infra Server is assigned &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;grant&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;update&lt;/code&gt; permission to that object.</source>
          <target state="translated">Chef Infra Server에서 객체의 생성자에게는 해당 객체에 대한 &lt;code&gt;create&lt;/code&gt; , &lt;code&gt;delete&lt;/code&gt; , &lt;code&gt;grant&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; 및 &lt;code&gt;update&lt;/code&gt; 권한 이 할당됩니다 .</target>
        </trans-unit>
        <trans-unit id="275dc178eddfa0bd728703e3b4679c7d792f1104" translate="yes" xml:space="preserve">
          <source>The creator of an object on the Chef server is assigned &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;grant&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;update&lt;/code&gt; permission to that object.</source>
          <target state="translated">Chef 서버에서 오브젝트의 작성자에게는 해당 오브젝트에 대한 &lt;code&gt;create&lt;/code&gt; , &lt;code&gt;delete&lt;/code&gt; , &lt;code&gt;grant&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; 및 &lt;code&gt;update&lt;/code&gt; 권한이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="8e1a537c7a1a7bba71b75becedc56bf422761f42" translate="yes" xml:space="preserve">
          <source>The credentials file &lt;code&gt;/etc/chef-backend/chef-backend-secrets.json&lt;/code&gt; generated by bootstrapping must be shared with the other nodes. You may copy them directly, or expose them via a common mounted location.</source>
          <target state="translated">부트 스트랩으로 생성 된 자격 증명 파일 &lt;code&gt;/etc/chef-backend/chef-backend-secrets.json&lt;/code&gt; 은 다른 노드와 공유해야합니다. 직접 복사하거나 일반적인 장착 위치를 통해 노출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="487cb10df032f9ad149ea858d969e5d11fe34876" translate="yes" xml:space="preserve">
          <source>The credentials profile to select</source>
          <target state="translated">선택할 자격 증명 프로필</target>
        </trans-unit>
        <trans-unit id="734c1c737c4209da5fe1e7ff10ff07b50e9b1242" translate="yes" xml:space="preserve">
          <source>The credentials profile to select.</source>
          <target state="translated">선택할 자격 증명 프로필입니다.</target>
        </trans-unit>
        <trans-unit id="2cd40230a367deebcb4425793a788d90c77b8006" translate="yes" xml:space="preserve">
          <source>The current authentication type will be highlighted. Change it to SAML.</source>
          <target state="translated">현재 인증 유형이 강조 표시됩니다. SAML로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="3224247c96a68547eec1550299a6cd214d6716d1" translate="yes" xml:space="preserve">
          <source>The current deleted state of the role</source>
          <target state="translated">역할의 현재 삭제 된 상태</target>
        </trans-unit>
        <trans-unit id="94db517218aad6e3ffab8fd3883f3c0b064d6d3b" translate="yes" xml:space="preserve">
          <source>The current launch stage of the role.</source>
          <target state="translated">역할의 현재 시작 단계입니다.</target>
        </trans-unit>
        <trans-unit id="3779c3ef85029e1eeac690978f57a23badd9aacc" translate="yes" xml:space="preserve">
          <source>The current leader of the service group, if any (&lt;code&gt;null&lt;/code&gt; otherwise)</source>
          <target state="translated">서비스 그룹의 현재 리더 (있는 경우) ( 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5d32e2ab40fab10e54aeb47080b16d95ab7735cd" translate="yes" xml:space="preserve">
          <source>The current leader of this service group, if running in a leader topology</source>
          <target state="translated">리더 토폴로지에서 실행중인 경우이 서비스 그룹의 현재 리더</target>
        </trans-unit>
        <trans-unit id="22fd062a6c970c18c128d4422c9b466ec4bfc0e2" translate="yes" xml:space="preserve">
          <source>The current release of Chef Infra Client</source>
          <target state="translated">Chef Infra Client의 현재 릴리스</target>
        </trans-unit>
        <trans-unit id="ad277e6db1842c21f868344cd95f5abef282b1fc" translate="yes" xml:space="preserve">
          <source>The current run-list is shown in the lower right:</source>
          <target state="translated">현재 실행 목록은 오른쪽 아래에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4b8391bb2a7776cd39b36aa5a50c2c546d7098c7" translate="yes" xml:space="preserve">
          <source>The current serving state of the database instance.</source>
          <target state="translated">데이터베이스 인스턴스의 현재 제공 상태입니다.</target>
        </trans-unit>
        <trans-unit id="fcfc52d7ceda6228c2b858670577b0076ea32d20" translate="yes" xml:space="preserve">
          <source>The current software version of the master endpoint.</source>
          <target state="translated">마스터 엔드 포인트의 현재 소프트웨어 버전입니다.</target>
        </trans-unit>
        <trans-unit id="48c5e44474c6fa562f92e5ea9ba86a8d448c2fb7" translate="yes" xml:space="preserve">
          <source>The current state of the EC2 Instance, for example &amp;lsquo;running&amp;rsquo;.</source>
          <target state="translated">EC2 인스턴스의 현재 상태 (예 : '실행 중').</target>
        </trans-unit>
        <trans-unit id="047f489388857c3fa89283794c8e6255787521ba" translate="yes" xml:space="preserve">
          <source>The current state of the cache node. One of the following values: &lt;code&gt;available&lt;/code&gt;, &lt;code&gt;creating&lt;/code&gt;, &lt;code&gt;rebooting&lt;/code&gt;, or &lt;code&gt;deleting&lt;/code&gt;.</source>
          <target state="translated">캐시 노드의 현재 상태입니다. 다음 값 중 하나 : &lt;code&gt;available&lt;/code&gt; , &lt;code&gt;creating&lt;/code&gt; , &lt;code&gt;rebooting&lt;/code&gt; 또는 &lt;code&gt;deleting&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="992750471e7c3a8418e8649eaab5f070a3049c1d" translate="yes" xml:space="preserve">
          <source>The current state of the cluster, e.g. &lt;code&gt;creating&lt;/code&gt;, &lt;code&gt;available&lt;/code&gt;.</source>
          <target state="translated">클러스터의 현재 상태 (예 : &lt;code&gt;creating&lt;/code&gt; , &lt;code&gt;available&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ef88e6faa4abfdcd0421852c41f8573ef8c2d52" translate="yes" xml:space="preserve">
          <source>The current state of the node</source>
          <target state="translated">노드의 현재 상태</target>
        </trans-unit>
        <trans-unit id="e2cc385dde85aab21dac36fcaeb46c4bda068e83" translate="yes" xml:space="preserve">
          <source>The current state of the scan. It returns an &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_ImageScanStatus.html&quot;&gt;image scan status object&lt;/a&gt;.</source>
          <target state="translated">스캔의 현재 상태입니다. &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_ImageScanStatus.html&quot;&gt;이미지 스캔 상태 개체를&lt;/a&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f566188515f3ca9a75448057d842002e1e341e6a" translate="yes" xml:space="preserve">
          <source>The current state of the server is &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;backup&lt;/code&gt;; any migration processes have completed</source>
          <target state="translated">서버의 현재 상태는 &lt;code&gt;master&lt;/code&gt; 또는 &lt;code&gt;backup&lt;/code&gt; . 모든 마이그레이션 프로세스가 완료되었습니다</target>
        </trans-unit>
        <trans-unit id="0bb43b096abc3848bc70b57b75d74017e3ac84b9" translate="yes" xml:space="preserve">
          <source>The current status of each cluster.</source>
          <target state="translated">각 클러스터의 현재 상태입니다.</target>
        </trans-unit>
        <trans-unit id="f2e2bbb7d0a604921d4b97c8176b40675026412a" translate="yes" xml:space="preserve">
          <source>The current status of the cluster.</source>
          <target state="translated">클러스터의 현재 상태입니다.</target>
        </trans-unit>
        <trans-unit id="044c3ddad936205a23788135479045ce5241fffc" translate="yes" xml:space="preserve">
          <source>The current status of this cluster.</source>
          <target state="translated">이 클러스터의 현재 상태입니다.</target>
        </trans-unit>
        <trans-unit id="7c45e505a0664957d0137fbd2d26c3a380246729" translate="yes" xml:space="preserve">
          <source>The current update_leader of the service group, if any (&lt;code&gt;null&lt;/code&gt; otherwise)</source>
          <target state="translated">서비스 그룹의 현재 update_leader (있는 경우) ( 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c7b06582259057228fd1af7a14bc3b2f593a2dde" translate="yes" xml:space="preserve">
          <source>The current version of a cookbook. Version numbers always follow a simple three-number version sequence.</source>
          <target state="translated">요리 책의 현재 버전. 버전 번호는 항상 간단한 3 자리 버전 순서를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="45fa7bbbf67f3241181d1ec4361856dd98eb97fa" translate="yes" xml:space="preserve">
          <source>The current version of the node software components. If they are currently at multiple versions because they&amp;rsquo;re in the process of being upgraded, this reflects the minimum version of all nodes.</source>
          <target state="translated">노드 소프트웨어 구성 요소의 현재 버전입니다. 업그레이드 중이기 때문에 현재 여러 버전에있는 경우 이는 모든 노드의 최소 버전을 반영합니다.</target>
        </trans-unit>
        <trans-unit id="d3d15f57ac5fa57ede0743af5d6acf13baf57a28" translate="yes" xml:space="preserve">
          <source>The current working directory from which a command is run.</source>
          <target state="translated">명령이 실행되는 현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="ce104ad3647eac12951087e7a8572651902c3622" translate="yes" xml:space="preserve">
          <source>The current working directory from which the command will be run.</source>
          <target state="translated">명령이 실행될 현재 작업 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="268d2c468f4cf886bd407fa2469d0930bf3c8acc" translate="yes" xml:space="preserve">
          <source>The current working directory.</source>
          <target state="translated">현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="0f9bcb90e8c3171599efb650513fda504f6a3ced" translate="yes" xml:space="preserve">
          <source>The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or [alternativeLocationId] and can change after a failover event.</source>
          <target state="translated">Redis 엔드 포인트가 배치 된 현재 영역입니다. 기본 등급 인스턴스의 경우 생성시 사용자가 제공 한 [locationId]와 항상 동일합니다. 표준 등급 인스턴스의 경우 이는 [locationId] 또는 [alternativeLocationId] 일 수 있으며 장애 조치 이벤트 후에 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7aa198048b55fe0a2a19ee4457c26ae06105545" translate="yes" xml:space="preserve">
          <source>The custom cookbook is a wrapper around &lt;code&gt;supermarket-omnibus-cookbook&lt;/code&gt;, which performs the actual installation of the Chef Supermarket packages, and then writes the custom &lt;code&gt;node[supermarket_omnibus]&lt;/code&gt; values to &lt;code&gt;/etc/supermarket/supermarket.json&lt;/code&gt;.</source>
          <target state="translated">맞춤 요리 책 래퍼 인 &lt;code&gt;supermarket-omnibus-cookbook&lt;/code&gt; 요리사 슈퍼마켓 패키지의 실제 설치를 수행 한 후 사용자 정의 쓴다 &lt;code&gt;node[supermarket_omnibus]&lt;/code&gt; 에 값을 &lt;code&gt;/etc/supermarket/supermarket.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aace418e21b7406b6778f6a5fb3022cdf16dc2fc" translate="yes" xml:space="preserve">
          <source>The custom resource name is inferred from the name of the cookbook (&lt;code&gt;website&lt;/code&gt;), the name of the recipe (&lt;code&gt;httpd&lt;/code&gt;), and is separated by an underscore(&lt;code&gt;_&lt;/code&gt;): &lt;code&gt;website_httpd&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 자원 이름은 요리 책 이름 ( &lt;code&gt;website&lt;/code&gt; ), 레시피 이름 ( &lt;code&gt;httpd&lt;/code&gt; ) 에서 유추되며 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) : &lt;code&gt;website_httpd&lt;/code&gt; 로 구분됩니다 .</target>
        </trans-unit>
        <trans-unit id="95aea6acdd9ffc027bc0e05e94e2a7a87c900e98" translate="yes" xml:space="preserve">
          <source>The custom resource name is inferred from the name of the cookbook (&lt;code&gt;website&lt;/code&gt;), the name of the resource file (&lt;code&gt;httpd&lt;/code&gt;), and is separated by an underscore(&lt;code&gt;_&lt;/code&gt;): &lt;code&gt;website_httpd&lt;/code&gt;. The custom resource may be used in a recipe.</source>
          <target state="translated">사용자 지정 리소스 이름은 요리 책 이름 ( &lt;code&gt;website&lt;/code&gt; ), 리소스 파일 이름 ( &lt;code&gt;httpd&lt;/code&gt; ) 에서 유추되며 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) : &lt;code&gt;website_httpd&lt;/code&gt; 로 구분됩니다 . 사용자 지정 리소스는 레시피에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f5202e401b2acea437d32a37c1ef1a6ef1f91c7" translate="yes" xml:space="preserve">
          <source>The customer -supplied encryption key of the snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.</source>
          <target state="translated">고객이 제공 한 스냅 샷의 암호화 키입니다. 소스 스냅 샷이 고객 제공 암호화 키로 보호되는 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e97180ef73071b99c856cec6e1ee7668452e2aeb" translate="yes" xml:space="preserve">
          <source>The customer -supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.</source>
          <target state="translated">고객이 제공 한 소스 스냅 샷의 암호화 키입니다. 소스 스냅 샷이 고객 제공 암호화 키로 보호되는 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="00da608ae52a41626b09bad116c865861d1f1fca" translate="yes" xml:space="preserve">
          <source>The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.</source>
          <target state="translated">고객이 제공 한 원본 디스크의 암호화 키입니다. 소스 디스크가 고객 제공 암호화 키로 보호되는 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4a5ad87bc3caa2dbc837fef8e18730600a5268b9" translate="yes" xml:space="preserve">
          <source>The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.</source>
          <target state="translated">고객이 제공 한 소스 이미지의 암호화 키입니다. 원본 이미지가 고객 제공 암호화 키로 보호되는 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4e656ae8431754a153da883bbceca0d3ee55fd14" translate="yes" xml:space="preserve">
          <source>The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.</source>
          <target state="translated">고객이 제공 한 소스 이미지의 암호화 키입니다. 원본 이미지가 고객 제공 암호화 키로 보호되는 경우 필요합니다. 인스턴스 템플릿은 고객 제공 암호화 키를 저장하지 않으므로 소스 이미지가 자체 키로 암호화 된 경우 관리 형 인스턴스 그룹의 인스턴스에 대한 디스크를 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5165ad71230a7d9a9a7628528208b00485c1b066" translate="yes" xml:space="preserve">
          <source>The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.</source>
          <target state="translated">소스 스냅 샷의 고객 제공 암호화 키입니다. 소스 스냅 샷이 고객 제공 암호화 키로 보호되는 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="378d708a63f24c1523e9e261b4aa76d51ee9b15d" translate="yes" xml:space="preserve">
          <source>The daily backup configuration for the instance.</source>
          <target state="translated">인스턴스에 대한 일일 백업 구성입니다.</target>
        </trans-unit>
        <trans-unit id="840c73fbe74503ff5f0c511d7c9b0145aac5d242" translate="yes" xml:space="preserve">
          <source>The dashboard shows the results of all scans with end times on the &lt;em&gt;current selected day&lt;/em&gt;. The &lt;em&gt;current selected day&lt;/em&gt; is based on timestamps in Coordinated Universal Time (UTC).</source>
          <target state="translated">대시 보드에는 &lt;em&gt;현재 선택한 날짜&lt;/em&gt; 의 종료 시간과 함께 모든 검색 결과가 표시 &lt;em&gt;됩니다&lt;/em&gt; . &lt;em&gt;현재 선택한 날짜는&lt;/em&gt; 협정 세계시 (UTC)에 타임 스탬프를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="6a955462b3d4678c2edb3e281f30d5d6826ae145" translate="yes" xml:space="preserve">
          <source>The data aggregates and sends in batches of 50 nodes at a time. The batch amount is 50 by default, but is configurable</source>
          <target state="translated">데이터는 한 번에 50 개 노드의 배치로 집계 및 전송됩니다. 배치 금액은 기본적으로 50이지만 구성 가능합니다.</target>
        </trans-unit>
        <trans-unit id="0bb3b0e02e78b404e191c689843ea7d092afcda2" translate="yes" xml:space="preserve">
          <source>The data bag item as JSON data. For example:</source>
          <target state="translated">JSON 데이터 인 데이터 백 항목입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3e020a9af3b606cb37248cbd4c4268881d89c55d" translate="yes" xml:space="preserve">
          <source>The data bag item&amp;rsquo;s keys and values can be accessed with a Hash:</source>
          <target state="translated">데이터 백 항목의 키와 값은 해시로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbf34a62512039b9c51a706a1454125133ddeea6" translate="yes" xml:space="preserve">
          <source>The data bag itself must already exist on the Chef Infra Server and must be specified as part of the command. The contents of the data bag item are specified using a JSON file. This JSON file may be located at a relative or absolute path; its location must be specified as part of the command. The JSON file that defines the contents of the data bag item must at least contain the name of the data bag item&amp;mdash;&lt;code&gt;&quot;id&quot;: &quot;name&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 백 자체는 Chef Infra Server에 이미 있어야하며 명령의 일부로 지정되어야합니다. 데이터 백 항목의 내용은 JSON 파일을 사용하여 지정됩니다. 이 JSON 파일은 상대 또는 절대 경로에있을 수 있습니다. 해당 위치는 명령의 일부로 지정되어야합니다. 데이터 백 항목의 내용을 정의하는 JSON 파일은 최소한 데이터 백 항목의 이름 인 &lt;code&gt;&quot;id&quot;: &quot;name&quot;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="aa23b832b45d362ca8e8ace4b34d434e55812409" translate="yes" xml:space="preserve">
          <source>The data bag itself must already exist on the Chef server and must be specified as part of the command. The contents of the data bag item are specified using a JSON file. This JSON file may be located at a relative or absolute path; its location must be specified as part of the command. The JSON file that defines the contents of the data bag item must at least contain the name of the data bag item&amp;mdash;&lt;code&gt;&quot;id&quot;: &quot;name&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 백 자체는 Chef 서버에 이미 존재해야하며 명령의 일부로 지정되어야합니다. 데이터 백 항목의 내용은 JSON 파일을 사용하여 지정됩니다. 이 JSON 파일은 상대 또는 절대 경로에있을 수 있습니다. 위치는 명령의 일부로 지정해야합니다. 데이터 백 항목의 내용을 정의하는 JSON 파일은 최소한 데이터 백 항목의 이름 ( &lt;code&gt;&quot;id&quot;: &quot;name&quot;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1cbf6e400a291bd2bef7806d49a01107ed4639df" translate="yes" xml:space="preserve">
          <source>The data bag that contains the item.</source>
          <target state="translated">항목이 포함 된 데이터 백입니다.</target>
        </trans-unit>
        <trans-unit id="61487bec268c2f278cc9f8301a2fc2a6959bae56" translate="yes" xml:space="preserve">
          <source>The data collector functionality is used by Chef Infra Client to send node and converge data to Chef Automate. This feature works for the following: Chef Infra Client, and both the default and legacy modes of Chef solo.</source>
          <target state="translated">데이터 수집기 ​​기능은 Chef Infra Client에서 노드를 보내고 데이터를 Chef Automate로 수렴하는 데 사용됩니다. 이 기능은 Chef Infra Client와 Chef solo의 기본 및 레거시 모드 모두에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="004a5036a8764022677d9529bb670239b0006560" translate="yes" xml:space="preserve">
          <source>The data collector functionality is used by the Chef Infra Client to send node and converge data to Chef Automate. This feature works for Chef Infra Client, as well as both the default and legacy modes of &lt;code&gt;chef-solo&lt;/code&gt;.</source>
          <target state="translated">데이터 수집기 ​​기능은 Chef Infra Client에서 노드를 보내고 데이터를 Chef Automate로 수렴하는 데 사용됩니다. 이 기능은 Chef Infra Client와 &lt;code&gt;chef-solo&lt;/code&gt; 의 기본 및 레거시 모드 모두에서 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="51a9783518c789af7f3bf8b56b96958ae8e5e074" translate="yes" xml:space="preserve">
          <source>The data format</source>
          <target state="translated">데이터 형식</target>
        </trans-unit>
        <trans-unit id="c39d4e7003acc722ace9ec0670bf6859572fc114" translate="yes" xml:space="preserve">
          <source>The data sent to the &lt;code&gt;config&lt;/code&gt; endpoint intentionally follows a different format than the data returned from the &lt;code&gt;status&lt;/code&gt; endpoint. You cannot read the data on the &lt;code&gt;status&lt;/code&gt; endpoint, change some values, and feed the modified data back on the &lt;code&gt;config&lt;/code&gt; endpoint.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 엔드 포인트로 전송 된 데이터는 의도적으로 &lt;code&gt;status&lt;/code&gt; 엔드 포인트 에서 반환 된 데이터와 다른 형식을 따릅니다 . &lt;code&gt;status&lt;/code&gt; 엔드 포인트 의 데이터를 읽고, 일부 값을 변경하고, 수정 된 데이터를 &lt;code&gt;config&lt;/code&gt; 엔드 포인트 에 다시 공급할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="fd3c31a538baa1be34b14734d0fc776bf1e7a6f0" translate="yes" xml:space="preserve">
          <source>The database engine type and version. For First Generation instances, can be MYSQL_5_5, or MYSQL_5_6. For Second Generation instances, can be MYSQL_5_6 or MYSQL_5_7. Defaults to MYSQL_5_6. PostgreSQL instances: POSTGRES_9_6 The databaseVersion property can not be changed after instance creation.</source>
          <target state="translated">데이터베이스 엔진 유형 및 버전. 1 세대 인스턴스의 경우 MYSQL_5_5 또는 MYSQL_5_6 일 수 있습니다. 2 세대 인스턴스의 경우 MYSQL_5_6 또는 MYSQL_5_7 일 수 있습니다. 기본값은 MYSQL_5_6입니다. PostgreSQL 인스턴스 : POSTGRES_9_6 인스턴스 생성 후 databaseVersion 속성을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6e42cc36ed0c3d84b55fa4f2b5b84a039fa5b5ce" translate="yes" xml:space="preserve">
          <source>The database flags passed to the instance at startup</source>
          <target state="translated">시작시 인스턴스에 전달 된 데이터베이스 플래그</target>
        </trans-unit>
        <trans-unit id="bcc1c04e22190651b20580094e25fbe2a1fbec35" translate="yes" xml:space="preserve">
          <source>The database template &lt;code&gt;template1&lt;/code&gt; does not exist.</source>
          <target state="translated">데이터베이스 템플릿 &lt;code&gt;template1&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6e363d6758eca9e62708a46a2dce021e13ddd8e2" translate="yes" xml:space="preserve">
          <source>The database user. Default value: &lt;code&gt;node['supermarket']['postgresql']['username']&lt;/code&gt;.</source>
          <target state="translated">데이터베이스 사용자입니다. 기본값 : &lt;code&gt;node['supermarket']['postgresql']['username']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7aeee447f9cee9721c953640a4e9b1213727ccbb" translate="yes" xml:space="preserve">
          <source>The date and time at which an image was pushed to the repository. The field name is &lt;code&gt;pushed_at_date&lt;/code&gt;.</source>
          <target state="translated">이미지가 저장소로 푸시 된 날짜 및 시간입니다. 필드 이름은 &lt;code&gt;pushed_at_date&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ed3ac32ce6ad2d2695c44e39b83266d3275ea5d" translate="yes" xml:space="preserve">
          <source>The date and time when the cache node was created.</source>
          <target state="translated">캐시 노드가 생성 된 날짜 및 시간입니다.</target>
        </trans-unit>
        <trans-unit id="8481a80fbf6509ae6ab6eaa1ba819dbddbe312e4" translate="yes" xml:space="preserve">
          <source>The date and time, in ISO 8601 date-time format , when the role was created.</source>
          <target state="translated">역할이 생성 된 날짜 및 시간 (ISO 8601 날짜-시간 형식)입니다.</target>
        </trans-unit>
        <trans-unit id="66c2ace8fc53e83ec0db16a16b7ebeb82862f421" translate="yes" xml:space="preserve">
          <source>The date and time, in JavaScript date format, when the repository was created.</source>
          <target state="translated">저장소가 생성 된 날짜 및 시간 (JavaScript 날짜 형식)입니다.</target>
        </trans-unit>
        <trans-unit id="3d7f62586453b855443a0ded290368f3bca544a9" translate="yes" xml:space="preserve">
          <source>The date as a string when the image was uploaded. &amp;lsquo;yyyy-mm-dd&amp;rsquo;</source>
          <target state="translated">이미지가 업로드 된 날짜 (문자열)입니다. 'yyyy-mm-dd'</target>
        </trans-unit>
        <trans-unit id="f4f09980ef4e9d84d0fd940f8b851a4444ffc2f8" translate="yes" xml:space="preserve">
          <source>The date on which a user account was disabled, as the number of days since Jan 1 1970</source>
          <target state="translated">사용자 계정이 비활성화 된 날짜 (1970 년 1 월 1 일 이후 일수)</target>
        </trans-unit>
        <trans-unit id="1e5e8527157eab22e113c048665784d05fe08d04" translate="yes" xml:space="preserve">
          <source>The date on which the associated User was created.</source>
          <target state="translated">연결된 사용자가 생성 된 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="41f8c85303965af5bd983c5703153b1f21560526" translate="yes" xml:space="preserve">
          <source>The date the Access Key was last used.</source>
          <target state="translated">액세스 키가 마지막으로 사용 된 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="d5070fb73e178cc4c2fdc51907621f49e49e04f9" translate="yes" xml:space="preserve">
          <source>The date the DynamoDb Table was created. eg. &lt;code&gt;01/01/2019&lt;/code&gt;</source>
          <target state="translated">DynamoDb 테이블이 생성 된 날짜입니다. 예. &lt;code&gt;01/01/2019&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a1144c41e11a0c547db406c2ba2fb1507ac5fa4" translate="yes" xml:space="preserve">
          <source>The date when this dataset or any of its tables was last modified, in milliseconds since the epoch.</source>
          <target state="translated">이 데이터 세트 또는 테이블이 마지막으로 수정 된 날짜 (기원 이후 밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="3c61cc5dd72813b694facc41a567f7d440418a89" translate="yes" xml:space="preserve">
          <source>The datetime as a string when the image was uploaded. &amp;lsquo;yyyy-mm-dd hh:mm:ss tz&amp;rsquo;</source>
          <target state="translated">이미지가 업로드 된 날짜 / 시간 문자열입니다. 'yyyy-mm-dd hh : mm : ss tz'</target>
        </trans-unit>
        <trans-unit id="cd64a312ce89c60f81b7e8ff3a02172c3678a914" translate="yes" xml:space="preserve">
          <source>The day of month at which Chef Infra Client is to run (1 - 31) or a cron pattern such as &amp;lsquo;1,7,14,21,28&amp;rsquo;.</source>
          <target state="translated">Chef Infra Client를 실행할 날짜 (1-31) 또는 '1,7,14,21,28'과 같은 크론 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="20e33964c39cc82a058b709c91dac29c0a709a1a" translate="yes" xml:space="preserve">
          <source>The day of month at which the cron entry should run (1 - 31). Default value: &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">cron 항목이 실행될 달 (1-31)입니다. 기본값 : &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3c415fbf55acbb87f02b2157e16248bc1d36d3d" translate="yes" xml:space="preserve">
          <source>The day of month at which the cron entry should run (&lt;code&gt;1 - 31&lt;/code&gt;).</source>
          <target state="translated">cron 항목이 실행되어야하는 날짜 ( &lt;code&gt;1 - 31&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f1e161dfd4eaf07131e3b616306a57f595647e14" translate="yes" xml:space="preserve">
          <source>The day of the week on which Chef Infra Client is to run (0-7, mon-sun, or *), where Sunday is both 0 and 7.</source>
          <target state="translated">Chef Infra Client가 실행되는 요일 (0-7, mon-sun 또는 *). 여기서 일요일은 0과 7입니다.</target>
        </trans-unit>
        <trans-unit id="6f90746db094d32078950c1f8cc40799deb69fc8" translate="yes" xml:space="preserve">
          <source>The day of the week on which this entry is to run (0 - 6), where Sunday = 0. Default value: &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">이 항목이 실행될 요일 (0-6), 여기서 일요일 = 0입니다. 기본값 : &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a400628fdf3de06b9a2ef0d43267d4908dd864b" translate="yes" xml:space="preserve">
          <source>The day of the week on which this entry is to run (&lt;code&gt;0-7&lt;/code&gt;, &lt;code&gt;mon-sun&lt;/code&gt;, &lt;code&gt;monday-sunday&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt;), where Sunday is both &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;7&lt;/code&gt;.</source>
          <target state="translated">이 항목이 실행되는 요일 ( &lt;code&gt;0-7&lt;/code&gt; , &lt;code&gt;mon-sun&lt;/code&gt; , &lt;code&gt;monday-sunday&lt;/code&gt; 또는 &lt;code&gt;*&lt;/code&gt; ). 여기서 Sunday는 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;7&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a632a81fc539b3d41184cca5bb3ce6d7dc334dc2" translate="yes" xml:space="preserve">
          <source>The day(s) on which the task runs.</source>
          <target state="translated">작업이 실행되는 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="977291982948b9136e4dd466173a659b3b4f63ff" translate="yes" xml:space="preserve">
          <source>The db_superuser_password can also be set using &lt;code&gt;chef-server-ctl set-db-superuser-password&lt;/code&gt; from the &lt;a href=&quot;../ctl_chef_server/index#ctl-chef-server-secrets-management&quot;&gt;Secrets Management&lt;/a&gt; commands.</source>
          <target state="translated">db_superuser_password는 &lt;a href=&quot;../ctl_chef_server/index#ctl-chef-server-secrets-management&quot;&gt;Secrets Management&lt;/a&gt; 명령 에서 &lt;code&gt;chef-server-ctl set-db-superuser-password&lt;/code&gt; 를 사용하여 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b080daf540fda36046a2a8b3b0db2330f7404de" translate="yes" xml:space="preserve">
          <source>The db_superuser_password can also be set using &lt;code&gt;chef-server-ctl set-db-superuser-password&lt;/code&gt; from the &lt;a href=&quot;ctl_chef_server/index#ctl-chef-server-secrets-management&quot;&gt;Secrets Management&lt;/a&gt; commands.</source>
          <target state="translated">db_superuser_password는 &lt;a href=&quot;ctl_chef_server/index#ctl-chef-server-secrets-management&quot;&gt;Secrets Management&lt;/a&gt; 명령 에서 &lt;code&gt;chef-server-ctl set-db-superuser-password&lt;/code&gt; 를 사용하여 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b36bbe9025fd0d753265dc17ef5be5ff0d832a94" translate="yes" xml:space="preserve">
          <source>The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig. The allowed duration for this deadline is: For HTTP targets, between 15 seconds and 30 minutes, for App Engine HTTP targets, between 15 seconds and 24 hours. A duration in seconds with up to nine fractional digits, terminated by &amp;rsquo;s'. Example: &amp;ldquo;3.5s&amp;rdquo;</source>
          <target state="translated">취업 시도 기한입니다. 요청 핸들러가이 기한까지 응답하지 않으면 요청이 취소되고 시도는 DEADLINE_EXCEEDED 실패로 표시됩니다. 실패한 시도는 실행 로그에서 볼 수 있습니다. Cloud 스케줄러는 RetryConfig에 따라 작업을 다시 시도합니다. 이 기한에 허용되는 기간은 HTTP 대상의 경우 15 초 ~ 30 분, App Engine HTTP 대상의 경우 15 초 ~ 24 시간입니다. 's'로 끝나는 최대 9 개의 소수 자릿수가있는 기간 (초)입니다. 예 :&amp;ldquo;3.5 초&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="76b9e018924c249aba53aed63f3d6b09a7d96764" translate="yes" xml:space="preserve">
          <source>The decimal representation of the network mask. For example: &lt;code&gt;255.255.255.0&lt;/code&gt;.</source>
          <target state="translated">네트워크 마스크의 10 진수 표현입니다. 예를 들어 : &lt;code&gt;255.255.255.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a09b6f15d184cf786f0bff9a71fd037183b925cb" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;Berksfile&lt;/code&gt; will contain the following:</source>
          <target state="translated">기본 &lt;code&gt;Berksfile&lt;/code&gt; 에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f220a7cc643ec55283c7ac4389697ded20162b6c" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;chef-full&lt;/code&gt; template uses the Chef installer. For most bootstrap operations, regardless of the platform on which the target node is running, using the &lt;code&gt;chef-full&lt;/code&gt; distribution is the best approach for installing Chef Infra Client on a target node. In some situations, a custom template may be required.</source>
          <target state="translated">기본 &lt;code&gt;chef-full&lt;/code&gt; 템플릿은 Chef 설치 프로그램을 사용합니다. 대부분의 부트 스트랩 작업의 경우 대상 노드가 실행중인 플랫폼에 관계없이 &lt;code&gt;chef-full&lt;/code&gt; 배포를 사용하는 것이 대상 노드에 Chef Infra Client를 설치하는 가장 좋은 방법입니다. 경우에 따라 사용자 지정 템플릿이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c5a3e649828aea9d1b3af497fd7a2d06c77e503" translate="yes" xml:space="preserve">
          <source>The default action for &lt;code&gt;delivery_chef_cookbook&lt;/code&gt; is &lt;code&gt;:upload&lt;/code&gt;, so you do not need to explicitly include that in your &lt;code&gt;delivery_chef_cookbook&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;delivery_chef_cookbook&lt;/code&gt; 의 기본 작업 은 &lt;code&gt;:upload&lt;/code&gt; 이므로 &lt;code&gt;delivery_chef_cookbook&lt;/code&gt; 구현 에 명시 적으로 포함 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="91974dc9abefe1146078bde3bdb27aaf23e2b619" translate="yes" xml:space="preserve">
          <source>The default action in a custom resource is, by default, the first action listed in the custom resource. For example, action &lt;code&gt;aaaaa&lt;/code&gt; is the default resource:</source>
          <target state="translated">기본적으로 사용자 정의 자원의 기본 조치는 사용자 정의 자원에 나열된 첫 번째 조치입니다. 예를 들어, &lt;code&gt;aaaaa&lt;/code&gt; 조치 는 기본 자원입니다.</target>
        </trans-unit>
        <trans-unit id="05c3539b0647b1f8443086aa2e8bfa6e1943dba8" translate="yes" xml:space="preserve">
          <source>The default backup directory is &lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt;. If it does not exist, the deployment process creates it.</source>
          <target state="translated">기본 백업 디렉토리는 &lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt; 입니다. 존재하지 않는 경우 배포 프로세스에서 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6c20087b0f428ed22a4d3f8f9e9771d1edb26af4" translate="yes" xml:space="preserve">
          <source>The default behavior is &lt;code&gt;true&lt;/code&gt; but emits a warning that the default value will be changed to &lt;code&gt;false&lt;/code&gt; in a future version; setting this explicitly to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; suppresses this warning.</source>
          <target state="translated">기본 동작은 &lt;code&gt;true&lt;/code&gt; 이지만 향후 버전에서 기본값이 &lt;code&gt;false&lt;/code&gt; 로 변경 될 것이라는 경고를 내 보냅니다 . 이를 명시 적으로 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 로 설정하면 이 경고가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="787b16b4e5c27b663959ed626e480c2f1f32e08e" translate="yes" xml:space="preserve">
          <source>The default channel. For example: stable.</source>
          <target state="translated">기본 채널입니다. 예 : 안정.</target>
        </trans-unit>
        <trans-unit id="c1c39b9b4dc06c422010967e88c089f8ae02cd90" translate="yes" xml:space="preserve">
          <source>The default configuration of the Chef Infra Client assumes that it is run as the root user. This affords the Chef Infra Client the greatest flexibility when managing the state of any object. However, the Chef Infra Client may be run as a non-root user&amp;mdash;i.e. &amp;ldquo;run as a user with limited system privileges&amp;rdquo;&amp;mdash;which can be useful when the objects on the system are available to other user accounts.</source>
          <target state="translated">Chef Infra Client의 기본 구성은 루트 사용자로 실행된다고 가정합니다. 이를 통해 Chef Infra Client는 모든 객체의 상태를 관리 할 때 최고의 유연성을 제공합니다. 그러나 Chef Infra Client는 루트가 아닌 사용자 (예 : &quot;제한된 시스템 권한을 가진 사용자로 실행&quot;)로 실행될 수 있으며 이는 시스템의 개체를 다른 사용자 계정에서 사용할 수있는 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efd75700350d59ab95060ee927df81ea5da28efa" translate="yes" xml:space="preserve">
          <source>The default configuration of the chef-client assumes that it is run as the root user. This affords the chef-client the greatest flexibility when managing the state of any object. However, the chef-client may be run as a non-root user&amp;mdash;i.e. &amp;ldquo;run as a user with limited system privileges&amp;rdquo;&amp;mdash;which can be useful when the objects on the system are available to other user accounts.</source>
          <target state="translated">chef-client의 기본 구성은 루트 사용자로 실행되는 것으로 가정합니다. 이를 통해 주방장 고객은 모든 물건의 상태를 관리 할 때 최고의 유연성을 얻을 수 있습니다. 그러나 chef-client는 루트가 아닌 사용자로 실행될 수 있습니다 (예 : &quot;제한된 시스템 권한을 가진 사용자로 실행&quot;). 시스템의 오브젝트를 다른 사용자 계정에서 사용할 수있을 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ef7b64ac9450e129dd58d6e4b6979cadfb70c1a" translate="yes" xml:space="preserve">
          <source>The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.</source>
          <target state="translated">이 클러스터의 노드 풀에있는 노드에서 동시에 실행할 수있는 최대 포드 수에 대한 기본 제약 조건입니다. IP 별칭 지원으로 클러스터가 생성 된 경우에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c773f96cc287a6303da9fe10c71c807fdf202ffc" translate="yes" xml:space="preserve">
          <source>The default directory in which hint files are located is &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt;. Use the &lt;code&gt;Ohai::Config[:hints_path]&lt;/code&gt; setting in the client.rb file to customize this location.</source>
          <target state="translated">힌트 파일이있는 기본 디렉토리는 &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt; 입니다. 사용 &lt;code&gt;Ohai::Config[:hints_path]&lt;/code&gt; 이 위치를 사용자 정의 할 client.rb 파일에 설정합니다.</target>
        </trans-unit>
        <trans-unit id="424b3e20dbf9c4ed2014a9b959d830f0c19d8481" translate="yes" xml:space="preserve">
          <source>The default download root path for packages.</source>
          <target state="translated">패키지의 기본 다운로드 루트 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5df0706590936c8204bd6c9cbad2074012098c65" translate="yes" xml:space="preserve">
          <source>The default email address for your company. Default value: &lt;code&gt;&quot;delivery@getchef.com&quot;&lt;/code&gt;.</source>
          <target state="translated">회사의 기본 이메일 주소입니다. 기본값 : &lt;code&gt;&quot;delivery@getchef.com&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48269f01d544420fe111ce9004e43fef7fcea303" translate="yes" xml:space="preserve">
          <source>The default email address for your company. Default value: &lt;code&gt;'you@example.com'&lt;/code&gt;.</source>
          <target state="translated">회사의 기본 이메일 주소입니다. 기본값 : &lt;code&gt;'you@example.com'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12d545fa52dd1df6feae3ad28a1341a1b8f43f38" translate="yes" xml:space="preserve">
          <source>The default email address for your company. Default value: &lt;code&gt;you@example.com&lt;/code&gt;.</source>
          <target state="translated">회사의 기본 이메일 주소입니다. 기본 값 : &lt;code&gt;you@example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f1b7191e4308c633b5304b829f165832bff32fc" translate="yes" xml:space="preserve">
          <source>The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key.</source>
          <target state="translated">데이터 세트의 모든 테이블에 대한 기본 암호화 키입니다. 이 속성이 설정되면 테이블 생성 요청 (또는 쿼리)이 키를 재정의하지 않는 한 데이터 세트에서 새로 생성 된 모든 파티션을 나눈 테이블의 암호화 키가이 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="83969b23c26f91a1ff8abea0ad951249c0b95566" translate="yes" xml:space="preserve">
          <source>The default implementation extracts your tarball source file into &lt;code&gt;HAB_CACHE_SRC_PATH&lt;/code&gt;. The supported archive extensions on Linux are: .tar, .tar.bz2, .tar.gz, .tar.xz, .rar, .zip, .Z, .7z. Only .zip is supported on Windows. If the file archive could not be found or has an unsupported extension, then a message will be printed to stderr with additional information.</source>
          <target state="translated">기본 구현은 tarball 소스 파일을 &lt;code&gt;HAB_CACHE_SRC_PATH&lt;/code&gt; 로 추출합니다 . Linux에서 지원되는 아카이브 확장은 .tar, .tar.bz2, .tar.gz, .tar.xz, .rar, .zip, .Z, .7z입니다. Windows에서는 .zip 만 지원됩니다. 파일 아카이브를 찾을 수 없거나 지원되지 않는 확장자가있는 경우 추가 정보와 함께 메시지가 stderr에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="cc6881c38e2f2a9f3ce67e1325cc26646023d1bc" translate="yes" xml:space="preserve">
          <source>The default implementation is that the software specified in &lt;code&gt;$pkg_source&lt;/code&gt; is downloaded, checksum-verified, and placed in &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt;, which resolves to a path like &lt;code&gt;/hab/cache/src/filename.tar.gz&lt;/code&gt;. You should override this behavior if you need to change how your binary source is downloaded, if you are not downloading any source code at all, or if you are cloning from git. If you do clone a repo from git, you must override do_verify() to return 0.</source>
          <target state="translated">기본 구현은 &lt;code&gt;$pkg_source&lt;/code&gt; 지정된 소프트웨어를 다운로드하고 체크섬을 확인하여 &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt; 배치하는 것입니다.이 위치는 /hab/cache/src/filename.tar.gz 와 같은 경로로 &lt;code&gt;/hab/cache/src/filename.tar.gz&lt;/code&gt; 됩니다. 바이너리 소스를 다운로드하는 방법을 변경해야하는 경우, 소스 코드를 전혀 다운로드하지 않거나 git에서 복제하는 경우이 동작을 재정의해야합니다. git에서 리포지토리를 복제하는 경우 do_verify ()를 재정 의하여 0을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="0e549976388ad518d3198c545875949490fe2658" translate="yes" xml:space="preserve">
          <source>The default implementation is to run &lt;code&gt;make install&lt;/code&gt; on the source files and place the compiled binaries or libraries in &lt;code&gt;HAB_CACHE_SRC_PATH/$pkg_dirname&lt;/code&gt;, which resolves to a path like &lt;code&gt;/hab/cache/src/packagename-version/&lt;/code&gt;. It uses this location because of do_build() using the &lt;code&gt;--prefix&lt;/code&gt; option when calling the configure script.</source>
          <target state="translated">기본 구현은 소스 파일에서 &lt;code&gt;make install&lt;/code&gt; 을 실행 하고 컴파일 된 바이너리 또는 라이브러리를 &lt;code&gt;HAB_CACHE_SRC_PATH/$pkg_dirname&lt;/code&gt; 에 배치하는 것입니다.이 파일 은 &lt;code&gt;/hab/cache/src/packagename-version/&lt;/code&gt; 과 같은 경로로 확인 됩니다. configure 스크립트를 호출 할 때 &lt;code&gt;--prefix&lt;/code&gt; 옵션을 사용하는 do_build () 때문에이 위치를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c709e43ea469f7d35d0d587d038535a9e36e0418" translate="yes" xml:space="preserve">
          <source>The default implementation is to update the prefix path for the configure script to use &lt;code&gt;$pkg_prefix&lt;/code&gt; and then run &lt;code&gt;make&lt;/code&gt; to compile the downloaded source. This means the script in the default implementation does &lt;code&gt;./configure --prefix=$pkg_prefix &amp;amp;&amp;amp; make&lt;/code&gt;.</source>
          <target state="translated">기본 구현은 &lt;code&gt;$pkg_prefix&lt;/code&gt; 를 사용하도록 구성 스크립트의 접두사 경로를 업데이트 한 다음 &lt;code&gt;make&lt;/code&gt; 를 실행 하여 다운로드 된 소스를 컴파일하는 것입니다. 이는 기본 구현의 스크립트가 &lt;code&gt;./configure --prefix=$pkg_prefix &amp;amp;&amp;amp; make&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f7cab47d090c5c6519620b14b46f5b194a84f3bd" translate="yes" xml:space="preserve">
          <source>The default implementation removes the &lt;code&gt;HAB_CACHE_SRC_PATH/$pkg_dirname&lt;/code&gt; folder in case there was a previously-built version of your package installed on disk. This ensures you start with a clean build environment.</source>
          <target state="translated">기본 구현은 이전에 빌드 된 패키지 버전이 디스크에 설치된 경우 &lt;code&gt;HAB_CACHE_SRC_PATH/$pkg_dirname&lt;/code&gt; 폴더를 제거합니다 . 이렇게하면 깨끗한 빌드 환경에서 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="affbb58f6160f2c03699239168d2f8866f565c8c" translate="yes" xml:space="preserve">
          <source>The default implementation tries to verify the checksum specified in the plan against the computed checksum after downloading the source tarball to disk. If the specified checksum doesn&amp;rsquo;t match the computed checksum, then an error and a message specifying the mismatch will be printed to stderr. You should not need to override this behavior unless your package does not download any files.</source>
          <target state="translated">기본 구현은 소스 tarball을 디스크에 다운로드 한 후 계산 된 체크섬에 대해 계획에 지정된 체크섬을 확인하려고합니다. 지정된 체크섬이 계산 된 체크섬과 일치하지 않으면 불일치를 지정하는 오류 및 메시지가 stderr에 인쇄됩니다. 패키지가 파일을 다운로드하지 않는 한이 동작을 재정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="78ff638303be0113420f81913d2792652a18dfcf" translate="yes" xml:space="preserve">
          <source>The default is 6 if &lt;code&gt;compression&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compression&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 인 경우 기본값은 6 입니다 .</target>
        </trans-unit>
        <trans-unit id="235b1ef5639b713bacee11f936e90d60e73766a5" translate="yes" xml:space="preserve">
          <source>The default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an &lt;code&gt;expirationTime&lt;/code&gt; property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the &lt;code&gt;expirationTime&lt;/code&gt; for a given table is reached, that table will be deleted automatically. If a table&amp;rsquo;s &lt;code&gt;expirationTime&lt;/code&gt; is modified or removed before the table expires, or if you provide an explicit &lt;code&gt;expirationTime&lt;/code&gt; when creating a table, that value takes precedence over the default expiration time indicated by this property.</source>
          <target state="translated">데이터 세트에있는 모든 테이블의 기본 수명 (밀리 초)입니다. 최소값은 3600000 밀리 초 (1 시간)입니다. 이 속성이 설정되면 데이터 세트에서 새로 생성 된 모든 테이블 에는 생성 시간과이 속성의 값으로 설정된 &lt;code&gt;expirationTime&lt;/code&gt; 시간 속성이 있으며 값을 변경하면 기존 테이블이 아닌 새 테이블에만 영향을줍니다. 주어진 테이블 의 &lt;code&gt;expirationTime&lt;/code&gt; 에 도달하면 해당 테이블이 자동으로 삭제됩니다. 테이블이 &lt;code&gt;expirationTime&lt;/code&gt; 되기 전에 테이블의 만료 시간 이 수정 또는 제거되거나 테이블을 생성 할 때 명시 적 &lt;code&gt;expirationTime&lt;/code&gt; 을 제공하면 해당 값이이 속성에 표시된 기본 만료 시간보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="bc7c6cfa66d331ac85a17ea71e5be99baaebb349" translate="yes" xml:space="preserve">
          <source>The default location at which Chef Infra Client expects to find this file is &lt;code&gt;~/.chef/config.rb&lt;/code&gt;; use the &lt;code&gt;--config&lt;/code&gt; option from the command line to change this location</source>
          <target state="translated">Chef Infra Client가이 파일을 찾을 것으로 예상하는 기본 위치는 &lt;code&gt;~/.chef/config.rb&lt;/code&gt; 입니다 . 이 위치를 변경하려면 명령 줄에서 &lt;code&gt;--config&lt;/code&gt; 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d10b3fe0eca76605b00f1dab7697050318942abb" translate="yes" xml:space="preserve">
          <source>The default location in which chef-solo expects to find this file is &lt;code&gt;/etc/chef/solo.rb&lt;/code&gt;; use the &lt;code&gt;--config&lt;/code&gt; option from the command line to change this location</source>
          <target state="translated">chef-solo가이 파일을 찾을 것으로 예상되는 기본 위치는 &lt;code&gt;/etc/chef/solo.rb&lt;/code&gt; 입니다 . 사용 &lt;code&gt;--config&lt;/code&gt; 이 위치를 변경하려면 명령 줄에서 옵션을</target>
        </trans-unit>
        <trans-unit id="2005cd915a267de0e267c6413f1de8ee222d69bd" translate="yes" xml:space="preserve">
          <source>The default location is: &lt;code&gt;/var/opt/supermarket/data/cookbook_versions&lt;/code&gt;.</source>
          <target state="translated">기본 위치는 &lt;code&gt;/var/opt/supermarket/data/cookbook_versions&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a8aa956cb720a6df708e087045bab3989f0cc0fa" translate="yes" xml:space="preserve">
          <source>The default location of the plugins directory depends on which package you install. Default value: &lt;code&gt;/var/opt/opscode/elasticsearch/plugins&lt;/code&gt;</source>
          <target state="translated">플러그인 디렉토리의 기본 위치는 설치하는 패키지에 따라 다릅니다. 기본값 : &lt;code&gt;/var/opt/opscode/elasticsearch/plugins&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef7850e38294874c1bcb787072745ce5ccf70bea" translate="yes" xml:space="preserve">
          <source>The default maximum allowable size for a node object is 1MB, although it is rare for nodes to exceed 150KB. Though compressed, this data is replicated twice, once in Apache Solr, and once in PostgreSQL. In practice, allowing a conservative 2MB of storage on the disk partition per node should be sufficient</source>
          <target state="translated">노드가 150KB를 초과하는 경우는 드물지만 노드 객체의 기본 최대 허용 크기는 1MB입니다. 압축되었지만이 데이터는 Apache Solr에서 한 번, PostgreSQL에서 한 번, 두 번 복제됩니다. 실제로, 노드 당 디스크 파티션에 2MB의 보존 적 스토리지를 허용하면 충분합니다.</target>
        </trans-unit>
        <trans-unit id="1a8f1519d46ab31138339899e2d881c3e4905a9a" translate="yes" xml:space="preserve">
          <source>The default maximum allowable size for a node object is 1MB, although it is rare for nodes to exceed 150KB. Though compressed, this data is replicated twice, once in Elasticsearch, and once in PostgreSQL. In practice, allowing a conservative 2MB of storage on the disk partition per node should be sufficient</source>
          <target state="translated">노드 개체의 기본 최대 허용 크기는 1MB이지만 노드가 150KB를 초과하는 경우는 드뭅니다. 압축되었지만이 데이터는 Elasticsearch에서 한 번, PostgreSQL에서 한 번, 두 번 복제됩니다. 실제로 노드 당 디스크 파티션에 2MB의 보수적 인 스토리지를 허용하면 충분합니다.</target>
        </trans-unit>
        <trans-unit id="d8cc5bb011b4ffd3538cd80a30884507e4177b46" translate="yes" xml:space="preserve">
          <source>The default membership role for any user joining an origin. &amp;lsquo;Read-Only&amp;rsquo; users can read an origin&amp;rsquo;s packages, channels, origin membership, jobs, keys, integrations, invitations, roles, settings but cannot add to, change, or delete anything in the origin, including uploading packages and inviting users to the origin.</source>
          <target state="translated">오리진에 참여하는 모든 사용자의 기본 멤버십 역할입니다. '읽기 전용'사용자는 오리진의 패키지, 채널, 오리진 멤버십, 작업, 키, 통합, 초대, 역할, 설정을 읽을 수 있지만 패키지 업로드 및 사용자 초대를 포함하여 오리진에서 어떤 것도 추가, 변경 또는 삭제할 수 없습니다. 유래.</target>
        </trans-unit>
        <trans-unit id="ac0fe653689415ea16a0190b850591848ebcf00c" translate="yes" xml:space="preserve">
          <source>The default network tier used for configuring resources in this project</source>
          <target state="translated">이 프로젝트에서 리소스를 구성하는 데 사용되는 기본 네트워크 계층</target>
        </trans-unit>
        <trans-unit id="53825b86b5c5d1c4892aa0f5c0e64be481351d5c" translate="yes" xml:space="preserve">
          <source>The default partition expiration for all partitioned tables in the dataset, in milliseconds. Once this property is set, all newly-created partitioned tables in the dataset will have an &lt;code&gt;expirationMs&lt;/code&gt; property in the &lt;code&gt;timePartitioning&lt;/code&gt; settings set to this value, and changing the value will only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of &lt;code&gt;defaultTableExpirationMs&lt;/code&gt; for partitioned tables: only one of &lt;code&gt;defaultTableExpirationMs&lt;/code&gt; and &lt;code&gt;defaultPartitionExpirationMs&lt;/code&gt; will be used for any new partitioned table. If you provide an explicit &lt;code&gt;timePartitioning.expirationMs&lt;/code&gt; when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property.</source>
          <target state="translated">데이터 세트에있는 모든 파티션을 나눈 테이블의 기본 파티션 만료 (밀리 초)입니다. 이 속성이 설정되면, 데이터 세트에서 새로 만든 파티션 테이블은있을 것이다 &lt;code&gt;expirationMs&lt;/code&gt; 의 재산 &lt;code&gt;timePartitioning&lt;/code&gt; 의 이 값으로 설정 설정을하고 값을 변경하지 않는 기존, 새 테이블에만 영향을 미칠 것이다. 파티션의 스토리지에는 파티션 시간에이 값을 더한 만료 시간이 있습니다. 이 속성을 설정하면 분할 된 테이블에 대한 &lt;code&gt;defaultTableExpirationMs&lt;/code&gt; 사용이 재정의 됩니다. 새 분할 된 테이블 에는 &lt;code&gt;defaultTableExpirationMs&lt;/code&gt; 및 &lt;code&gt;defaultPartitionExpirationMs&lt;/code&gt; 중 하나만 사용됩니다. 명시적인 &lt;code&gt;timePartitioning.expirationMs&lt;/code&gt; 를 제공하는 경우 파티션을 나눈 테이블을 만들거나 업데이트 할 때이 값은이 속성에 표시된 기본 파티션 만료 시간보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="6b0996399eb909924fb620b6fe45b4893431c21a" translate="yes" xml:space="preserve">
          <source>The default path where source archives are downloaded, extracted, &amp;amp; compiled.</source>
          <target state="translated">소스 아카이브가 다운로드, 추출 및 컴파일되는 기본 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5f50a621666b2e73e81c6c3b74f317bc60058d06" translate="yes" xml:space="preserve">
          <source>The default port used if the port number is not specified in the network endpoint.</source>
          <target state="translated">네트워크 엔드 포인트에 포트 번호가 지정되지 않은 경우 사용되는 기본 포트입니다.</target>
        </trans-unit>
        <trans-unit id="63c2758f50b2edf5d6899d079110d550b337d924" translate="yes" xml:space="preserve">
          <source>The default provider for all platforms, except for Microsoft Windows.</source>
          <target state="translated">Microsoft Windows를 제외한 모든 플랫폼의 기본 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="a8c88870e14283e732a65686bd228e34b25be477" translate="yes" xml:space="preserve">
          <source>The default provider for all platforms.</source>
          <target state="translated">모든 플랫폼의 기본 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="65b6dfa7bdd03d622d9d75ac93db602443c76dc2" translate="yes" xml:space="preserve">
          <source>The default provider for all platforms. See below for more information.</source>
          <target state="translated">모든 플랫폼의 기본 공급자입니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d5e54b6b5d6d77cf5527ec3c70825e6a93f0324" translate="yes" xml:space="preserve">
          <source>The default provider for all recipes.</source>
          <target state="translated">모든 레시피의 기본 공급자.</target>
        </trans-unit>
        <trans-unit id="d648cde54f95abc7c578a9454eded5db4f3b0c0a" translate="yes" xml:space="preserve">
          <source>The default provider for the &lt;strong&gt;user&lt;/strong&gt; resource.</source>
          <target state="translated">&lt;strong&gt;사용자&lt;/strong&gt; 리소스 의 기본 공급자입니다 .</target>
        </trans-unit>
        <trans-unit id="4a4782a41ef21eb4f375ed3a3a9fa25ce66f4edb" translate="yes" xml:space="preserve">
          <source>The default provider for the Microsoft Windows platform.</source>
          <target state="translated">Microsoft Windows 플랫폼의 기본 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="eb52444f421763bdf5d86943b65537de20093d82" translate="yes" xml:space="preserve">
          <source>The default provisioner that is used by Test Kitchen.</source>
          <target state="translated">Test Kitchen에서 사용하는 기본 프로 비 저너입니다.</target>
        </trans-unit>
        <trans-unit id="1ef78a37f88d541c045323902f72c6b481494a7f" translate="yes" xml:space="preserve">
          <source>The default region to target (if &lt;code&gt;us-east-1&lt;/code&gt; is not desired)</source>
          <target state="translated">타겟팅 할 기본 지역 ( &lt;code&gt;us-east-1&lt;/code&gt; 이 필요하지 않은 경우)</target>
        </trans-unit>
        <trans-unit id="23bc329ad8d6daad39919668de60e60a7ce490c2" translate="yes" xml:space="preserve">
          <source>The default release. For example: &lt;code&gt;stable&lt;/code&gt;.</source>
          <target state="translated">기본 릴리스. 예를 들어, &lt;code&gt;stable&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="179e655da763fbf267339f43cddf6a2387bb9130" translate="yes" xml:space="preserve">
          <source>The default search to use for build nodes if it is not specified in &lt;code&gt;delivery.rb&lt;/code&gt;. Default value:</source>
          <target state="translated">&lt;code&gt;delivery.rb&lt;/code&gt; 에 지정되지 않은 경우 빌드 노드에 사용할 기본 검색 입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="97bdad4a68d0e75b23aa957b9f251b08dcfe4b73" translate="yes" xml:space="preserve">
          <source>The default sender address of all Supermarket mailers. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">모든 슈퍼마켓 우편물의 기본 발신자 주소입니다. 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09636ebf4199e74587ef6e071f21679349ebfbc5" translate="yes" xml:space="preserve">
          <source>The default setting for &lt;code&gt;node-summary&lt;/code&gt; is to display the name, UUID, status, and the last time the nodes checked in via Chef Infra Client, Chef InSpec, or the liveness agent.</source>
          <target state="translated">&lt;code&gt;node-summary&lt;/code&gt; 의 기본 설정 은 이름, UUID, 상태 및 Chef Infra Client, Chef InSpec 또는 활성 에이전트를 통해 노드가 마지막으로 체크인 한 시간을 표시하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="a41b4a0d7cf32dbb74210208226e0b9c21687937" translate="yes" xml:space="preserve">
          <source>The default state of the runit service to &lt;code&gt;down&lt;/code&gt; by creating &lt;code&gt;&amp;lt;sv_dir&amp;gt;/down&lt;/code&gt; file.</source>
          <target state="translated">에 runit 서비스의 기본 상태 &lt;code&gt;down&lt;/code&gt; 작성하여 &lt;code&gt;&amp;lt;sv_dir&amp;gt;/down&lt;/code&gt; 파일.</target>
        </trans-unit>
        <trans-unit id="ab311b80179d8efa93cd0889d1a7301e6ac2bb3a" translate="yes" xml:space="preserve">
          <source>The default value</source>
          <target state="translated">기본값</target>
        </trans-unit>
        <trans-unit id="45de37ca0f101155a281ccb32d4642f6b7c727d0" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;opscode_solr4['heap_size']&lt;/code&gt; should work for many organizations, especially those with fewer than 25 nodes. For organizations with more than 25 nodes, set this value to 25% of system memory or &lt;code&gt;1024&lt;/code&gt;, whichever is smaller. For very large configurations, increase this value to 25% of system memory or &lt;code&gt;4096&lt;/code&gt;, whichever is smaller. This value should not exceed &lt;code&gt;8192&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;opscode_solr4['heap_size']&lt;/code&gt; 의 기본값 은 많은 조직, 특히 25 개 미만의 노드가있는 조직에서 작동합니다. 노드가 25 개를 초과하는 조직의 경우이 값을 시스템 메모리의 25 % 또는 &lt;code&gt;1024&lt;/code&gt; 중 더 작은 값으로 설정하십시오 . 매우 큰 구성의 경우이 값을 시스템 메모리의 25 % 또는 &lt;code&gt;4096&lt;/code&gt; 중 더 작은 값으로 늘리십시오 . 이 값은 &lt;code&gt;8192&lt;/code&gt; 를 초과하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="b146721c5799251840db41f3fb228a694fc31c60" translate="yes" xml:space="preserve">
          <source>The default value is an appropriate value for most configurations. Default value: &lt;code&gt;3269&lt;/code&gt;.</source>
          <target state="translated">기본값은 대부분의 구성에 적합한 값입니다. 기본값 : &lt;code&gt;3269&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2eecee529f36dae51d5b12d82549345d306acd66" translate="yes" xml:space="preserve">
          <source>The default value is the recommended value. Default value: &lt;code&gt;[ '127.0.0.1' ]&lt;/code&gt;.</source>
          <target state="translated">기본값은 권장 값입니다. 기본값 : &lt;code&gt;[ '127.0.0.1' ]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa6439b3881727ad178baa034abed654ea5ea0a1" translate="yes" xml:space="preserve">
          <source>The default value is the recommended value. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 권장 값입니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="053fda8737c7e6ed173908d382f6ff01b117646f" translate="yes" xml:space="preserve">
          <source>The default value is the recommended value. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 권장 값입니다. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20a75db2ebf1c9a4034226b6ba9953c4bef56718" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;all&lt;/code&gt; is recommended unless you are experiencing caching related issues.</source>
          <target state="translated">캐싱 관련 문제가 발생하지 않는 한 &lt;code&gt;all&lt;/code&gt; 의 기본값을 사용 하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3328577f1c19450185e8feab36e094f2629bbe0d" translate="yes" xml:space="preserve">
          <source>The default version of the model. This version will be used to handle prediction requests that do not specify a version.</source>
          <target state="translated">모델의 기본 버전입니다. 이 버전은 버전을 지정하지 않는 예측 요청을 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d113886589f9591f905b042925fea7572ac4baa" translate="yes" xml:space="preserve">
          <source>The default_security_rules property contains the set of Default Security Rules.</source>
          <target state="translated">default_security_rules 속성에는 기본 보안 규칙 집합이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2c2de79ddea64dd9a8e032b47d401a9f2e6fc3f2" translate="yes" xml:space="preserve">
          <source>The defaults for CentOS and Red Hat Enterprise Linux systems look like this:</source>
          <target state="translated">CentOS 및 Red Hat Enterprise Linux 시스템의 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0ad1ebb8cac45a46e2d6a1af14be6cdcf42d7e5" translate="yes" xml:space="preserve">
          <source>The definition is improved by rewriting it as a custom resource. This uses properties to accept input and has a single &lt;code&gt;:create&lt;/code&gt; action:</source>
          <target state="translated">정의는 사용자 지정 리소스로 다시 작성하여 향상됩니다. 이것은 속성을 사용하여 입력을 받아들이고 단일 &lt;code&gt;:create&lt;/code&gt; 작업을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="ef6a64d2cfb2f84886acb34da630aa0d9ef97361" translate="yes" xml:space="preserve">
          <source>The definition is improved by rewriting it as a custom resource:</source>
          <target state="translated">사용자 정의 자원으로 다시 작성하여 정의가 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="6cef8608e7eca642c9ed02c6f0eaf60e0b784576" translate="yes" xml:space="preserve">
          <source>The delay (in seconds) between retry attempts. Default value: &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">재시도 사이의 지연 시간 (초). 초기 값 : &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="743cd188d008f4a3cc1c679ca7c4a557006db3ff" translate="yes" xml:space="preserve">
          <source>The delimiter that is used to separate multiple values for a single key.</source>
          <target state="translated">단일 키의 여러 값을 구분하는 데 사용되는 구분 기호입니다.</target>
        </trans-unit>
        <trans-unit id="25fae47a55dfb05f73daef053d8550b3540b4d49" translate="yes" xml:space="preserve">
          <source>The dependencies that your packages needs at runtime. Refer to packages at three levels of specificity: origin/package, origin/package/version, or origin/package/version/release. Type: array. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="translated">패키지가 런타임에 필요로하는 종속성. 원본 / 패키지, 원본 / 패키지 / 버전 또는 원본 / 패키지 / 버전 / 릴리스의 세 가지 수준의 패키지를 참조하십시오. 유형 : 배열. &lt;em&gt;선택 사항&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0c0a99cb08c96a3ebc7ba97bba26f3fbdc3bf97b" translate="yes" xml:space="preserve">
          <source>The dependencies your package requires at build time. Type: array. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="translated">빌드시 패키지에 필요한 종속성. 유형 : 배열. &lt;em&gt;선택 사항&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ac7e5df39cb2efbd3edb7f61edef526557c673" translate="yes" xml:space="preserve">
          <source>The deployed url for the function.</source>
          <target state="translated">함수에 대해 배포 된 URL입니다.</target>
        </trans-unit>
        <trans-unit id="e90e845977652b6893e41508a7dc6c7536e71ef3" translate="yes" xml:space="preserve">
          <source>The deployment of the app will end up in &lt;code&gt;/srv&lt;/code&gt;, so the full path to this template would be something like &lt;code&gt;/srv/myapp/current/config/database.yml.erb&lt;/code&gt;.</source>
          <target state="translated">앱 배포는 &lt;code&gt;/srv&lt;/code&gt; 에있게 &lt;code&gt;/srv/myapp/current/config/database.yml.erb&lt;/code&gt; 템플릿의 전체 경로는 /srv/myapp/current/config/database.yml.erb 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="54a1689ac1e13e2f5ee6a578be046cbb35613b08" translate="yes" xml:space="preserve">
          <source>The deployment process writes login credentials to the &lt;code&gt;automate-credentials.toml&lt;/code&gt; in your current working directory.</source>
          <target state="translated">배포 프로세스는 현재 작업 디렉터리 의 &lt;code&gt;automate-credentials.toml&lt;/code&gt; 에 로그인 자격 증명을 씁니다 .</target>
        </trans-unit>
        <trans-unit id="a11ced0950eeafeb45b4a6a3238e9904c74a0a0e" translate="yes" xml:space="preserve">
          <source>The deprecation state of this resource.</source>
          <target state="translated">이 리소스의 지원 중단 상태입니다.</target>
        </trans-unit>
        <trans-unit id="08b1ad8907ccf2ff3b4dc2cecbc6bc67bdf579b4" translate="yes" xml:space="preserve">
          <source>The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.</source>
          <target state="translated">이 리소스의 지원 중단 상태입니다. DEPRECATED, OBSOLETE 또는 DELETED 일 수 있습니다. DEPRECATED 리소스를 사용하여 새 리소스를 만드는 작업은 성공적으로 반환되지만 더 이상 사용되지 않는 리소스를 표시하고 교체를 권장하는 경고가 표시됩니다. OBSOLETE 또는 DELETED 리소스를 사용하는 작업은 거부되고 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="554873c776b52cf554fd1914be8ba0b20bdbb67d" translate="yes" xml:space="preserve">
          <source>The deprecation status associated with this image.</source>
          <target state="translated">이 이미지와 관련된 지원 중단 상태입니다.</target>
        </trans-unit>
        <trans-unit id="3ae6cac3e1df9749777214230e042942e752aafc" translate="yes" xml:space="preserve">
          <source>The deprecation status associated with this machine type.</source>
          <target state="translated">이 머신 유형과 관련된 지원 중단 상태입니다.</target>
        </trans-unit>
        <trans-unit id="89dbe6dd7de556c22330cdfa069d96d1581cefe0" translate="yes" xml:space="preserve">
          <source>The depth of a git repository, truncated to the specified number of revisions. See &lt;code&gt;shallow_clone&lt;/code&gt;.</source>
          <target state="translated">지정된 리비전 수로 잘린 git 저장소의 깊이입니다. &lt;code&gt;shallow_clone&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="163f51579b4e081a8276b848813a0dccd201c6bc" translate="yes" xml:space="preserve">
          <source>The description for an environment and/or a role.</source>
          <target state="translated">환경 및 / 또는 역할에 대한 설명.</target>
        </trans-unit>
        <trans-unit id="aba99e1a9ba7e076e9ea5d443608cc7b2e4bc1b8" translate="yes" xml:space="preserve">
          <source>The description of the Microsoft Azure affinity group.</source>
          <target state="translated">Microsoft Azure 선호도 그룹에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="8de04ad0071ecac260536da6882423eb91cebea5" translate="yes" xml:space="preserve">
          <source>The description of the environment. This value populates the description field for the environment on the Chef Infra Server.</source>
          <target state="translated">환경에 대한 설명입니다. 이 값은 Chef Infra Server의 환경에 대한 설명 필드를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="92a43ecc39afa7ddb5868629b11a6e75059cfb0c" translate="yes" xml:space="preserve">
          <source>The description of the environment. This value populates the description field for the environment on the Chef server.</source>
          <target state="translated">환경에 대한 설명. 이 값은 Chef 서버의 환경에 대한 설명 필드를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="986f02bb3089c64d794f06405df8af559de312c4" translate="yes" xml:space="preserve">
          <source>The description of the key.</source>
          <target state="translated">키에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="4768483858dac901eaf9449e87c233d13c8a4f4b" translate="yes" xml:space="preserve">
          <source>The description of the port.</source>
          <target state="translated">포트에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="03a6348bf61cc2d53f0c9cd0a82ba572a59d1525" translate="yes" xml:space="preserve">
          <source>The description of the repository that will be shown by the &lt;code&gt;zypper repos&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;zypper repos&lt;/code&gt; 명령 으로 표시 될 저장소에 대한 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="8774e5d7d3227e362bd094b65a2223468875edc2" translate="yes" xml:space="preserve">
          <source>The description of the role.</source>
          <target state="translated">역할에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="9d4928b2bbe948c596055cde582fa5b3f332d9e3" translate="yes" xml:space="preserve">
          <source>The description of the role. This value populates the description field for the role on the Chef Infra Server.</source>
          <target state="translated">역할에 대한 설명입니다. 이 값은 Chef Infra Server의 역할에 대한 설명 필드를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="2530ca73053df9e519fafe439627fae5e9efb921" translate="yes" xml:space="preserve">
          <source>The description of the role. This value populates the description field for the role on the Chef server.</source>
          <target state="translated">역할에 대한 설명입니다. 이 값은 Chef 서버에서 역할에 대한 설명 필드를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="25609289e2c266f4370dd67dc458f2737a19851d" translate="yes" xml:space="preserve">
          <source>The description of the shortcut</source>
          <target state="translated">바로 가기에 대한 설명</target>
        </trans-unit>
        <trans-unit id="8791df9dfb83b00729a4b7922ba1a31dee483966" translate="yes" xml:space="preserve">
          <source>The description specified for the model when it was created.</source>
          <target state="translated">모델을 만들 때 지정한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="b6db75301f4f90cd8e1db97ac8e7226135e4d73d" translate="yes" xml:space="preserve">
          <source>The description to add to the systemd timer. This will be displayed when running &lt;code&gt;systemctl status&lt;/code&gt; for the timer.</source>
          <target state="translated">systemd 타이머에 추가 할 설명입니다. 이것은 타이머의 &lt;code&gt;systemctl status&lt;/code&gt; 를 실행할 때 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="a3e89c736f48dc0045bfd25fb83e9ca86484511a" translate="yes" xml:space="preserve">
          <source>The description to assign to the firewall rule.</source>
          <target state="translated">방화벽 규칙에 할당 할 설명입니다.</target>
        </trans-unit>
        <trans-unit id="00989901818848a056fe8850394d903e720b8aee" translate="yes" xml:space="preserve">
          <source>The description to associate with the runtime config.</source>
          <target state="translated">런타임 구성과 연결할 설명입니다.</target>
        </trans-unit>
        <trans-unit id="c0bff403ee27ca8d2fd11c3b3192873de6bd0530" translate="yes" xml:space="preserve">
          <source>The description to be applied to the share.</source>
          <target state="translated">공유에 적용 할 설명입니다.</target>
        </trans-unit>
        <trans-unit id="69b81a99cc935ceb44ca7329deca6b9f5bdf80ce" translate="yes" xml:space="preserve">
          <source>The descriptive name for this instance as it appears in UIs. Must be unique per project and between 4 and 30 characters in length.</source>
          <target state="translated">UI에 표시되는이 인스턴스를 설명하는 이름입니다. 프로젝트별로 고유해야하며 길이는 4 ~ 30 자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="db7f9e554a3f113e250f7bd0d101985f8ba810a2" translate="yes" xml:space="preserve">
          <source>The designed cipher to use when generating your key. Run &lt;code&gt;openssl list-cipher-algorithms&lt;/code&gt; to see available options.</source>
          <target state="translated">키를 생성 할 때 사용할 설계된 암호입니다. &lt;code&gt;openssl list-cipher-algorithms&lt;/code&gt; 를 실행 하여 사용 가능한 옵션을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="432a6687d49ba723fd0fe82a5d7df90ee3bc24dc" translate="yes" xml:space="preserve">
          <source>The desired Diffie-Hellmann generator.</source>
          <target state="translated">원하는 Diffie-Hellmann 생성기.</target>
        </trans-unit>
        <trans-unit id="7b1049e684adec76b4feaef939a0f8705608fe6c" translate="yes" xml:space="preserve">
          <source>The desired approach just depends on the desired workflow. For example, if a node requires a new file every day, using the checksum approach would require that the local checksum be updated and/or verified every day as well, in order to ensure that the local checksum was the correct one. Using a conditional &lt;code&gt;GET&lt;/code&gt; in this scenario will greatly simplify the management required to ensure files are being updated accurately.</source>
          <target state="translated">원하는 접근 방식은 원하는 워크 플로에 따라 다릅니다. 예를 들어, 노드에 매일 새 파일이 필요한 경우, 체크섬 방식을 사용하려면 로컬 체크섬이 올바른지 확인하기 위해 매일 로컬 체크섬을 업데이트 및 / 또는 확인해야합니다. 이 시나리오에서 조건부 &lt;code&gt;GET&lt;/code&gt; 을 사용하면 파일을 정확하게 업데이트하는 데 필요한 관리가 크게 간소화됩니다.</target>
        </trans-unit>
        <trans-unit id="e67780802ccffbb72c57a66c453fe3ad8b6796a8" translate="yes" xml:space="preserve">
          <source>The desired bit length of the generated key (if key_type is equal to &amp;lsquo;rsa&amp;rsquo;).</source>
          <target state="translated">생성 된 키의 원하는 비트 길이 (key_type이 'rsa'인 경우).</target>
        </trans-unit>
        <trans-unit id="310f6d10442eb7a55e5c147aa2e4e0f43fc62cb6" translate="yes" xml:space="preserve">
          <source>The desired bit length of the generated key (if key_type is equal to &lt;code&gt;rsa&lt;/code&gt;).</source>
          <target state="translated">생성 된 키의 원하는 비트 길이 (key_type이 &lt;code&gt;rsa&lt;/code&gt; 인 경우 ).</target>
        </trans-unit>
        <trans-unit id="eed33a012253c8ead87d57b449de9189e1636967" translate="yes" xml:space="preserve">
          <source>The desired bit length of the generated key.</source>
          <target state="translated">생성 된 키의 원하는 비트 길이입니다.</target>
        </trans-unit>
        <trans-unit id="d6d5245f3d317e01d98b67815619a7a9398bd85a" translate="yes" xml:space="preserve">
          <source>The desired curve of the generated key (if key_type is equal to &amp;lsquo;ec&amp;rsquo;). Run &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; to see available options.</source>
          <target state="translated">생성 된 키의 원하는 곡선 (key_type이 'ec'인 경우). &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; 를 실행 하여 사용 가능한 옵션을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bb6085b1dee78d265e1dbe983f344d0de49085ef" translate="yes" xml:space="preserve">
          <source>The desired curve of the generated key (if key_type is equal to &amp;lsquo;ec&amp;rsquo;). Run openssl ecparam -list_curves to see available options.</source>
          <target state="translated">생성 된 키의 원하는 곡선 (key_type이 'ec'인 경우). openssl ecparam -list_curves를 실행하여 사용 가능한 옵션을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="235b37ca9ff977dd99360f08f1af8db134562c73" translate="yes" xml:space="preserve">
          <source>The desired curve of the generated key (if key_type is equal to &lt;code&gt;ec&lt;/code&gt;). Run &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; to see available options.</source>
          <target state="translated">생성 된 키의 원하는 곡선 (key_type이 &lt;code&gt;ec&lt;/code&gt; 인 경우 ). &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; 를 실행 하여 사용 가능한 옵션을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8ed169572f04f02baf34a7cb5e91f5e0968609dd" translate="yes" xml:space="preserve">
          <source>The desired passphrase for the key.</source>
          <target state="translated">키에 대해 원하는 암호입니다.</target>
        </trans-unit>
        <trans-unit id="5ca74525cee7f3e55942ca3201ec804d367c083b" translate="yes" xml:space="preserve">
          <source>The desired type of the generated key.</source>
          <target state="translated">생성 된 키의 원하는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="deeb833d84bbfe6bdc4a157d334f69483f691082" translate="yes" xml:space="preserve">
          <source>The desktop services target the following basic functions:</source>
          <target state="translated">데스크탑 서비스는 다음과 같은 기본 기능을 대상으로합니다.</target>
        </trans-unit>
        <trans-unit id="20c77a92de8059809efd76e7a94d07bc675dcb3c" translate="yes" xml:space="preserve">
          <source>The destination bucket where the current bucket&amp;rsquo;s logs should be placed.</source>
          <target state="translated">현재 버킷의 로그를 배치해야하는 대상 버킷입니다.</target>
        </trans-unit>
        <trans-unit id="947cbcc8d8e698d6a052fb3443e7b22a234b5d69" translate="yes" xml:space="preserve">
          <source>The destination range of outgoing packets that this route applies to. Only IPv4 is supported.</source>
          <target state="translated">이 경로가 적용되는 나가는 패킷의 대상 범위입니다. IPv4 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3789345dc9b2770bf675a978b145312e7c178f8f" translate="yes" xml:space="preserve">
          <source>The destination that the shortcut links to.</source>
          <target state="translated">바로 가기가 연결되는 대상입니다.</target>
        </trans-unit>
        <trans-unit id="35f810bc30b116247cb86cc2a307b68776d4d6b4" translate="yes" xml:space="preserve">
          <source>The destroy strategy used at the conclusion of a Test Kitchen run. Possible values: &lt;code&gt;always&lt;/code&gt; (always destroy instances), &lt;code&gt;never&lt;/code&gt; (never destroy instances), or &lt;code&gt;passing&lt;/code&gt; (only destroy instances that passed). Default: &lt;code&gt;passing&lt;/code&gt;.</source>
          <target state="translated">Test Kitchen 실행의 마지막에 사용 된 파괴 전략입니다. 가능한 값 : &lt;code&gt;always&lt;/code&gt; (항상 인스턴스 제거), &lt;code&gt;never&lt;/code&gt; (인스턴스 제거 안 함) 또는 &lt;code&gt;passing&lt;/code&gt; (전달 된 인스턴스 만 제거). 기본 : &lt;code&gt;passing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af48f4004019cb27a21c25f63ba1813a4815b2d2" translate="yes" xml:space="preserve">
          <source>The device to which the virtual IP address is added. Default value: &lt;code&gt;'eth0'&lt;/code&gt;.</source>
          <target state="translated">가상 IP 주소가 추가 된 장치입니다. 기본 값 : &lt;code&gt;'eth0'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="971c832ad22943444a4a415c9d252e46b09aac53" translate="yes" xml:space="preserve">
          <source>The devices to be part of a RAID array.</source>
          <target state="translated">RAID 어레이의 일부가 될 장치.</target>
        </trans-unit>
        <trans-unit id="5cbdd5b14f01e73dc301ed19b108a8531fcf913f" translate="yes" xml:space="preserve">
          <source>The dhcp_option_set_ids property provides a de-duplicated list of the DHCP Option Set IDs that the matched VPCs use when assigning IPs to resources.</source>
          <target state="translated">dhcp_option_set_ids 속성은 일치하는 VPC가 리소스에 IP를 할당 할 때 사용하는 DHCP 옵션 집합 ID의 중복 제거 된 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9eb7654eb5f9fe3e3a981aa2d9afac52c66c471c" translate="yes" xml:space="preserve">
          <source>The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (&lt;code&gt;\&lt;/code&gt;) must be escaped using the Ruby escape character (which is a backslash).</source>
          <target state="translated">이전 두 예제의 차이점은 작은 따옴표와 큰 따옴표로 묶은 문자열입니다. 큰 따옴표를 사용하는 경우 백 슬래시 문자 ( &lt;code&gt;\&lt;/code&gt; )는 Ruby 이스케이프 문자 (백 슬래시)를 사용하여 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="0e48f2868c846a991e7a9090636b117d8bc5b3e2" translate="yes" xml:space="preserve">
          <source>The dimensions associated with this alarm. This must be passed as an array of hashes &lt;code&gt;dimensions: [{key:'value'}]&lt;/code&gt; .</source>
          <target state="translated">이 경보와 관련된 치수입니다. 이것은 해시 &lt;code&gt;dimensions: [{key:'value'}]&lt;/code&gt; 의 배열로 전달되어야 합니다 : [{key : 'value'}] .</target>
        </trans-unit>
        <trans-unit id="73331e92ee8cd9ec84d798f05444efa2d3b43be7" translate="yes" xml:space="preserve">
          <source>The direct path to the file used to pre-seed a package.</source>
          <target state="translated">패키지를 미리 시드하는 데 사용되는 파일의 직접 경로입니다.</target>
        </trans-unit>
        <trans-unit id="7b5ddf01ae983e25cf98d00bc547972e8ed226ee" translate="yes" xml:space="preserve">
          <source>The direction of the firewall rule. Direction means either inbound or outbound traffic.</source>
          <target state="translated">방화벽 규칙의 방향입니다. 방향은 인바운드 또는 아웃 바운드 트래픽을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="374e0667751b38189c2771846fb359904c95278b" translate="yes" xml:space="preserve">
          <source>The directory (or path) in which the device is to be mounted. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">장치가 마운트 될 디렉토리 (또는 경로). 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8d51d57cd1122557b66d3ca1b2b4071b7bad4211" translate="yes" xml:space="preserve">
          <source>The directory (or path) in which the device is to be mounted. Defaults to the name of the resource block if not provided.</source>
          <target state="translated">장치가 마운트 될 디렉토리 (또는 경로)입니다. 제공되지 않은 경우 기본값은 리소스 블록의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e0c567f365785df886d92b12a725fe6fd3cf2700" translate="yes" xml:space="preserve">
          <source>The directory for temporary files. Default value: &lt;code&gt;/tmp/chef-push&lt;/code&gt;.</source>
          <target state="translated">임시 파일 용 디렉토리입니다. 기본값 : &lt;code&gt;/tmp/chef-push&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e209aed93248fcd458429b4cbdb8e8feea723ca" translate="yes" xml:space="preserve">
          <source>The directory in which &lt;code&gt;opscode-expander-reindexer&lt;/code&gt; logs files are located. Default value:</source>
          <target state="translated">&lt;code&gt;opscode-expander-reindexer&lt;/code&gt; 로그 파일이 있는 디렉토리 입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="61bb8ed9bdb238add97fc196d8ba02068ef38799" translate="yes" xml:space="preserve">
          <source>The directory in which Chef Server 11 data is located. Default value: a temporary directory.</source>
          <target state="translated">Chef Server 11 데이터가있는 디렉토리입니다. 기본값 : 임시 디렉토리.</target>
        </trans-unit>
        <trans-unit id="c62c0e5f54e18ffdb81c9b5baba9c02ac0d1580f" translate="yes" xml:space="preserve">
          <source>The directory in which Chef Server 12 data is located. Default value: a temporary directory.</source>
          <target state="translated">Chef Server 12 데이터가있는 디렉토리입니다. 기본값 : 임시 디렉토리.</target>
        </trans-unit>
        <trans-unit id="9520360cb76174a85c97ef3f0e25c8d16fa624da" translate="yes" xml:space="preserve">
          <source>The directory in which Chef Supermarket is installed. Default value: &lt;code&gt;node['supermarket']['install_directory']&lt;/code&gt;.</source>
          <target state="translated">Chef Supermarket이 설치된 디렉토리입니다. 기본값 : &lt;code&gt;node['supermarket']['install_directory']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9556ddbaa223b1af95936575d47eaa34cb09f2ae" translate="yes" xml:space="preserve">
          <source>The directory in which Chef server 12 data is located. Default value: a temporary directory.</source>
          <target state="translated">Chef 서버 12 데이터가있는 디렉토리입니다. 기본값 : 임시 디렉토리</target>
        </trans-unit>
        <trans-unit id="0ccc330152fee2fea6747bfab9fed3e09badeb95" translate="yes" xml:space="preserve">
          <source>The directory in which Kitchen will stage all content on the target node. This directory should be large enough to store all the content and must be writable. (Typically, this value does not need to be modified from the default value.) Default value: &lt;code&gt;/tmp/kitchen&lt;/code&gt;.</source>
          <target state="translated">Kitchen이 대상 노드의 모든 콘텐츠를 준비하는 디렉터리입니다. 이 디렉토리는 모든 컨텐츠를 저장할 수있을만큼 커야하며 쓰기 가능해야합니다. (일반적으로이 값은 기본값에서 수정할 필요가 없습니다.) 기본값 : &lt;code&gt;/tmp/kitchen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5de4b318b27f974b06d1fa3ea9beef5e438a23e" translate="yes" xml:space="preserve">
          <source>The directory in which Ohai plugins are located.</source>
          <target state="translated">Ohai 플러그인이있는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="9bc1d6167d9bbb033980f4dcbd13b3aabf18472a" translate="yes" xml:space="preserve">
          <source>The directory in which Open Source Chef 11 data is located. Default value: a temporary directory.</source>
          <target state="translated">Open Source Chef 11 데이터가있는 디렉토리입니다. 기본값 : 임시 디렉토리</target>
        </trans-unit>
        <trans-unit id="b1e594e170c52ad95f10d7698497cd73c2f7c4a8" translate="yes" xml:space="preserve">
          <source>The directory in which additional Ohai plugins are located. For example: &lt;code&gt;/my/extra/plugins&lt;/code&gt;.</source>
          <target state="translated">추가 Ohai 플러그인이있는 디렉토리입니다. 예 : &lt;code&gt;/my/extra/plugins&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2b5e8764e39de6835bd977606752a6b13a85399" translate="yes" xml:space="preserve">
          <source>The directory in which cookbooks are created. This can be a colon-separated path.</source>
          <target state="translated">요리 책이 만들어지는 디렉토리. 콜론으로 구분 된 경로 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e10121097597a970fca2631cd747577d0b859e96" translate="yes" xml:space="preserve">
          <source>The directory in which cookbooks are located.</source>
          <target state="translated">요리 책이있는 디렉토리.</target>
        </trans-unit>
        <trans-unit id="1919efba8692ea2d96f1269a647b52256cab8834" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value:</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="204b770eaf27a5addae1f5fec8640b9171367cdf" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/postgresql&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/postgresql&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f14b71ea26773fd03a5e63d36fa210fa4246bee" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/rails&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/rails&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbec8f674c071081ebc82216cebd3ccf3746c97d" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/redis&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/redis&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7379ab0d060989160792ce882216bbe20786f5d4" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/sidekiq&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;#{node['supermarket']['log_directory']}/sidekiq&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ded01c3124ea21344e17d6174bd326bec2030db3" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;/var/log/delivery/delivery&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;/var/log/delivery/delivery&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fa6a8102436c825492c1edba0b6c260c349992e" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;/var/log/delivery/elasticsearch&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;/var/log/delivery/elasticsearch&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="985a86fd9d27640fc976ef217667d9dfe9345012" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;/var/log/delivery/kibana&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;/var/log/delivery/kibana&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9051aafee2ce433b5c0c504803a8937c794dca29" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;/var/log/delivery/logstash&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;/var/log/delivery/logstash&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="533cbd5b444433a4ecac5fb49bfaf2a6879959b0" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;/var/log/delivery/lsyncd&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;/var/log/delivery/lsyncd&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9896ea5710db7a3ac9ddd30c2d3d8723aae1094" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;/var/log/delivery/nginx&quot;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;/var/log/delivery/nginx&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d679a819690e8feccd41945c428e4d8ca92bb4e4" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/delivery/notifications'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;'/var/log/delivery/notifications'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e73343ca0b500799e2b2cb2cc36ca75a6c044b63" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/estatsd'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/log/opscode/estatsd'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="541075e2e3f2e6376fa3a30a663f76b0dfb54400" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/keepalived'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본 값 : &lt;code&gt;'/var/log/opscode/keepalived'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97ecf93a6905b847d79bb8f7bcfb19842072929d" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/rabbitmq'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/log/opscode/rabbitmq'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0970ffedd4554e6dfaafb5ef925476ecfab88cd6" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/log/opscode/redis_lb'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/log/opscode/redis_lb'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1d63f9af11094b509192ea3da7932cc441613d0c" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/opt/opscode/oc_id'&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/opt/opscode/oc_id'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6c317117906906e2f75becd031ce7616a9f6ac57" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/delivery/&amp;lt;service_name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;/var/log/delivery/&amp;lt;service_name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43f5948756f52ec47f7ae39aac48fc2bff5b9f73" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/bookshelf&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;/var/log/opscode/bookshelf&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="098898fb63f64b5ba076256340219540e7d72b9a" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/elasticsearch&lt;/code&gt;</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;/var/log/opscode/elasticsearch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1468fc4594a6788530b706ddad29065e70600738" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/nginx&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 초기 값 : &lt;code&gt;/var/log/opscode/nginx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="632e518e2e21adcbf574a31ba022a9529fa29898" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/oc_bifrost&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 초기 값 : &lt;code&gt;/var/log/opscode/oc_bifrost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45f28305518222de31e0b25441358380bde7e940" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/opscode-erchef&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 초기 값 : &lt;code&gt;/var/log/opscode/opscode-erchef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ec133f0bc3776deb894395a6eb3a91c77257604" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/log/opscode/postgresql/#{node['private_chef']['postgresql']['version']}&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;/var/log/opscode/postgresql/#{node['private_chef']['postgresql']['version']}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="310f1cb5bb67ce3779d41dcc639e90367542cc62" translate="yes" xml:space="preserve">
          <source>The directory in which log data is stored. The default value is the recommended value. Default value: &lt;code&gt;node['supermarket']['nginx']['log_directory']&lt;/code&gt;.</source>
          <target state="translated">로그 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;node['supermarket']['nginx']['log_directory']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7057ca4557628d57cc979c967f864a06ee88e2ab" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value:</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="f73a84965cf8693e895f5c8c202f6002696b748e" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;&quot;#{node['supermarket']['var_directory']}/postgresql/9.3/data&quot;&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;&quot;#{node['supermarket']['var_directory']}/postgresql/9.3/data&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74cdb656eef6c15d5e336b8de88d3742046cf4d1" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/opt/delivery/rabbitmq/db'&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;'/var/opt/delivery/rabbitmq/db'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1069ac546479d51dd07a42e9e47d439c7cafb700" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/opt/opscode/rabbitmq/db'&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/opt/opscode/rabbitmq/db'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9c686534437a81518f113f582fadf163fab30e7" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;'/var/opt/opscode/redis_lb/data'&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값은 &lt;code&gt;'/var/opt/opscode/redis_lb/data'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b3916044e30132dff010f1b5b0d8cb430aca2517" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/opt/opscode/bookshelf/data&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;/var/opt/opscode/bookshelf/data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f87b0a4bfb54c8fc6f77e15a826fc5103cd0f9b" translate="yes" xml:space="preserve">
          <source>The directory in which on-disk data is stored. The default value is the recommended value. Default value: &lt;code&gt;/var/opt/opscode/postgresql/#{node['private_chef']['postgresql']['version']}/data&lt;/code&gt;.</source>
          <target state="translated">온 디스크 데이터가 저장되는 디렉토리입니다. 기본값은 권장 값입니다. 기본값 : &lt;code&gt;/var/opt/opscode/postgresql/#{node['private_chef']['postgresql']['version']}/data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dba6c0d994c6a6c73374e49f375aafbcea00038" translate="yes" xml:space="preserve">
          <source>The directory in which the Chef Infra Server is installed. Default value: &lt;code&gt;'/opt/opscode'&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server가 설치된 디렉토리입니다. 기본값 : &lt;code&gt;'/opt/opscode'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aae007ccf4d8719e566a9e1c153a4793eba3d7ed" translate="yes" xml:space="preserve">
          <source>The directory in which the Chef server is installed. Default value: &lt;code&gt;'/opt/opscode'&lt;/code&gt;.</source>
          <target state="translated">Chef 서버가 설치된 디렉토리입니다. 기본 값 : &lt;code&gt;'/opt/opscode'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80b059f3093a39d650df399c74e89dfa5cfb7767" translate="yes" xml:space="preserve">
          <source>The directory into which a package is downloaded. When a package already exists in this directory and the checksum matches, the package is not re-downloaded. When &lt;code&gt;-d&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; are not specified, a package is downloaded to a temporary directory.</source>
          <target state="translated">패키지가 다운로드되는 디렉토리입니다. 패키지가 이미이 디렉토리에 있고 체크섬이 일치하면 패키지가 다시 다운로드되지 않습니다. 때 &lt;code&gt;-d&lt;/code&gt; 및 &lt;code&gt;-f&lt;/code&gt; 가 지정되지 않은, 패키지가 임시 디렉토리에 다운로드됩니다.</target>
        </trans-unit>
        <trans-unit id="4cecb6aa684f7b50df067cd086aa51fc3bde7e94" translate="yes" xml:space="preserve">
          <source>The directory structure within the chef-repo varies. Some organizations prefer to keep all of their cookbooks in a single chef-repo, while other organizations prefer to use a chef-repo for every cookbook.</source>
          <target state="translated">chef-repo 내의 디렉토리 구조는 다양합니다. 일부 조직은 모든 ​​요리 책을 하나의 요리사 레포에 보관하고 다른 조직은 모든 ​​요리 책에 요리사 레포를 사용하는 것을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="d9b62d50162a80ef2ffe9a7af14f0cd3f1a5bb00" translate="yes" xml:space="preserve">
          <source>The directory that Supermarket will use to store logs. Default value: &lt;code&gt;'/var/log/supermarket'&lt;/code&gt;.</source>
          <target state="translated">Supermarket이 로그를 저장하는 데 사용할 디렉터리입니다. 기본값 : &lt;code&gt;'/var/log/supermarket'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2754fbe0e2d11abb4090b5751e45aff60cfc6234" translate="yes" xml:space="preserve">
          <source>The directory that contains the sudoers configuration file.</source>
          <target state="translated">sudoers 구성 파일이 포함 된 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="74763283707b57bffee3bdaa32b6ddb7dff4b2b7" translate="yes" xml:space="preserve">
          <source>The directory that is used to store Supermarket configuration files. Default value: &lt;code&gt;'/etc/supermarket'&lt;/code&gt;.</source>
          <target state="translated">슈퍼마켓 구성 파일을 저장하는 데 사용되는 디렉토리입니다. 기본값 : &lt;code&gt;'/etc/supermarket'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cec06ec70711a3b5bf43fb9181a7a9907fdcac67" translate="yes" xml:space="preserve">
          <source>The directory the task will be run from.</source>
          <target state="translated">작업이 실행될 디렉터리입니다.</target>
        </trans-unit>
        <trans-unit id="4a2cded530d475695cd40df54f44d328bceb201c" translate="yes" xml:space="preserve">
          <source>The directory to copy the &lt;code&gt;.app&lt;/code&gt; into.</source>
          <target state="translated">&lt;code&gt;.app&lt;/code&gt; 을 복사 할 디렉토리 입니다.</target>
        </trans-unit>
        <trans-unit id="ac6325acbfcdc727d511a64eec9f0472023267be" translate="yes" xml:space="preserve">
          <source>The directory to load modules from.</source>
          <target state="translated">모듈을로드 할 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="dc728bf0c41a61d541ec45feb82b103040a1ee6b" translate="yes" xml:space="preserve">
          <source>The directory to store the client.rb in.</source>
          <target state="translated">client.rb를 저장할 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="6d2d467e30306879f26c0a80529305174668c75e" translate="yes" xml:space="preserve">
          <source>The directory to which Keepalived is to send &lt;code&gt;POST&lt;/code&gt; hooks. Default value:</source>
          <target state="translated">Keepalived가있는 디렉토리는 &lt;code&gt;POST&lt;/code&gt; 후크 를 전송하는 것 입니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="40cbdba8ca99d345ee1a077a70d43b5771408047" translate="yes" xml:space="preserve">
          <source>The directory under &lt;code&gt;/Volumes&lt;/code&gt; where the &lt;code&gt;dmg&lt;/code&gt; is mounted if it differs from the name of the &lt;code&gt;.dmg&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;.dmg&lt;/code&gt; 파일 의 이름과 다른 경우 &lt;code&gt;dmg&lt;/code&gt; 가 마운트 되는 &lt;code&gt;/Volumes&lt;/code&gt; 아래의 디렉토리 입니다.</target>
        </trans-unit>
        <trans-unit id="822af7e66903c4f4ba6bf504a5445ef1e153b6c7" translate="yes" xml:space="preserve">
          <source>The directory used by nginx for caching. Default value: &lt;code&gt;&quot;#{node['supermarket']['var_directory']}/nginx//cache&quot;&lt;/code&gt;.</source>
          <target state="translated">nginx에서 캐싱에 사용하는 디렉토리입니다. 기본값 : &lt;code&gt;&quot;#{node['supermarket']['var_directory']}/nginx//cache&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc2ba8896943f76f12c0dc76b265fc52c8da6a71" translate="yes" xml:space="preserve">
          <source>The directory where Supermarket is installed. Default value: &lt;code&gt;'/opt/supermarket'&lt;/code&gt;.</source>
          <target state="translated">Supermarket이 설치된 디렉토리입니다. 기본값 : &lt;code&gt;'/opt/supermarket'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfc0a1e50a6a5522bf8e48e4b51ed466fda04f70" translate="yes" xml:space="preserve">
          <source>The directory where data and cookbooks are installed. Default value: &lt;code&gt;'/var/opt/supermarket'&lt;/code&gt;.</source>
          <target state="translated">데이터 및 쿡북이 설치된 디렉토리입니다. 기본값 : &lt;code&gt;'/var/opt/supermarket'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6aedff8867216bf4da661f15a4e0e078ef48791" translate="yes" xml:space="preserve">
          <source>The directory where the &lt;code&gt;svlogd&lt;/code&gt; log service will run.</source>
          <target state="translated">&lt;code&gt;svlogd&lt;/code&gt; 로그 서비스가 실행될 디렉토리 입니다.</target>
        </trans-unit>
        <trans-unit id="e2fa0629b29c151ed3a12a1c998bf3e82185e976" translate="yes" xml:space="preserve">
          <source>The directory where the &lt;code&gt;svlogd&lt;/code&gt; log service will run. Also affects &lt;code&gt;path.logs&lt;/code&gt; in the Elasticsearch configuration YAML.</source>
          <target state="translated">&lt;code&gt;svlogd&lt;/code&gt; 로그 서비스가 실행될 디렉토리 입니다. Elasticsearch 구성 YAML의 &lt;code&gt;path.logs&lt;/code&gt; 에도 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="5fd13676252814e8c6a19152f1764b2c541cc630" translate="yes" xml:space="preserve">
          <source>The directory where your plan is located is known as the plan context.</source>
          <target state="translated">계획이있는 디렉토리를 계획 컨텍스트라고합니다.</target>
        </trans-unit>
        <trans-unit id="20bde33e93bdb164126c13d3a7fe5b7c10b121dc" translate="yes" xml:space="preserve">
          <source>The directory you were in is now mounted as &lt;code&gt;/src&lt;/code&gt; inside the Studio. By default, a Supervisor runs in the background for iterative testing. You can see the streaming output by running &lt;code&gt;sup-log&lt;/code&gt;. Type &lt;code&gt;Ctrl-C&lt;/code&gt; to exit the streaming output and &lt;code&gt;sup-term&lt;/code&gt; to terminate the background Supervisor. If you terminate the background Supervisor, then running &lt;code&gt;sup-run&lt;/code&gt; will restart it along with every service that was previously loaded. You have to explicitly run &lt;code&gt;hab svc unload origin/package&lt;/code&gt; to remove a package from the &amp;ldquo;loaded&amp;rdquo; list.</source>
          <target state="translated">당신이 있던 디렉토리는 이제 Studio에서 &lt;code&gt;/src&lt;/code&gt; 로 마운트됩니다 . 기본적으로 Supervisor는 반복 테스트를 위해 백그라운드에서 실행됩니다. &lt;code&gt;sup-log&lt;/code&gt; 를 실행하여 스트리밍 출력을 볼 수 있습니다 . &lt;code&gt;Ctrl-C&lt;/code&gt; 를 입력 하여 스트리밍 출력을 종료하고 &lt;code&gt;sup-term&lt;/code&gt; 을 입력하여 백그라운드 감독자를 종료합니다. 백그라운드 Supervisor를 종료하면 &lt;code&gt;sup-run&lt;/code&gt; 을 실행 하면 이전에로드 된 모든 서비스와 함께 다시 시작됩니다. &quot;loaded&quot;목록에서 &lt;code&gt;hab svc unload origin/package&lt;/code&gt; 를 제거 하려면 hab svc unload origin / package 를 명시 적으로 실행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="452b34e8ac8b2d8e1a92efa8f676fd8aa3294e4a" translate="yes" xml:space="preserve">
          <source>The disk number as reported by Azure. Has a zero-based index value.</source>
          <target state="translated">Azure에서보고 한 디스크 번호입니다. 0부터 시작하는 인덱스 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="267741971d9d45e758c25b2b4bf4f6b2be67a4cc" translate="yes" xml:space="preserve">
          <source>The disk partition is still mounted into the file system and can be used as normal.</source>
          <target state="translated">디스크 파티션은 여전히 ​​파일 시스템에 마운트되어 있으며 정상적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b9d816aa13e3e2678b4ee207b9dfce8eb5d200c" translate="yes" xml:space="preserve">
          <source>The disk requirement for the front-end server is negligible</source>
          <target state="translated">프런트 엔드 서버의 디스크 요구 사항은 무시할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="8e709a86997fccd7b2c2da367b355b302808f4fe" translate="yes" xml:space="preserve">
          <source>The disk space presents as a single device, &lt;code&gt;/dev/sdb&lt;/code&gt;</source>
          <target state="translated">디스크 공간은 단일 장치 인 &lt;code&gt;/dev/sdb&lt;/code&gt; 로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="53e9609d5c5459ad33872ad286fd5bbd5c2e1970" translate="yes" xml:space="preserve">
          <source>The disk space presents as a single device. For example: &lt;code&gt;/dev/sdb&lt;/code&gt;.</source>
          <target state="translated">디스크 공간은 단일 장치로 나타납니다. 예를 들면 : &lt;code&gt;/dev/sdb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4550f5a0a4d958a6f63451b4ef5e43389036aa66" translate="yes" xml:space="preserve">
          <source>The disk usage of the repo, in bytes.</source>
          <target state="translated">저장소의 디스크 사용량 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="53af803eb90dc5917f707c0966b3ec964f03e4fd" translate="yes" xml:space="preserve">
          <source>The disk&amp;rsquo;s location. Will be the region where the disk resides.</source>
          <target state="translated">디스크의 위치. 디스크가 상주하는 지역이됩니다.</target>
        </trans-unit>
        <trans-unit id="ed126a20f359691ca674a448593e91113eb9281f" translate="yes" xml:space="preserve">
          <source>The disk&amp;rsquo;s name.</source>
          <target state="translated">디스크의 이름.</target>
        </trans-unit>
        <trans-unit id="79729eff1b6120480d8c624f76acdd5b1d2c2368" translate="yes" xml:space="preserve">
          <source>The disk&amp;rsquo;s properties. This is a hash of key/value pairs.</source>
          <target state="translated">디스크의 속성. 이것은 키 / 값 쌍의 해시입니다.</target>
        </trans-unit>
        <trans-unit id="ba75a0acd898b6405a306f220773c6d24ada2fca" translate="yes" xml:space="preserve">
          <source>The disk&amp;rsquo;s sku name (&lt;code&gt;Standard_LRS&lt;/code&gt;|&lt;code&gt;StandardSSD_LRS&lt;/code&gt;|&lt;code&gt;Premium_LRS&lt;/code&gt;).</source>
          <target state="translated">디스크의 sku 이름 ( &lt;code&gt;Standard_LRS&lt;/code&gt; | &lt;code&gt;StandardSSD_LRS&lt;/code&gt; | &lt;code&gt;Premium_LRS&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="619e8241e5199b6541b93275b741f2f4281afe8e" translate="yes" xml:space="preserve">
          <source>The disk&amp;rsquo;s tags. Will be a hash of key/value pairs.</source>
          <target state="translated">디스크의 태그. 키 / 값 쌍의 해시가됩니다.</target>
        </trans-unit>
        <trans-unit id="ed79ef6a712b163150d71d60ddc9f06aa789ae0a" translate="yes" xml:space="preserve">
          <source>The disk&amp;rsquo;s type. Will always be &lt;code&gt;Microsoft.Compute/disks&lt;/code&gt;.</source>
          <target state="translated">디스크의 유형. 항상 &lt;code&gt;Microsoft.Compute/disks&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c071af518f3d1383d6c1b532c1f9366795586e34" translate="yes" xml:space="preserve">
          <source>The disk&amp;rsquo;s unique identifier.</source>
          <target state="translated">디스크의 고유 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="0533c1497e29144df752b22cab6a7a5122d55553" translate="yes" xml:space="preserve">
          <source>The display name of the user.</source>
          <target state="translated">사용자의 표시 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e125b5f331c27c8b7af61d35902f5f881c10edca" translate="yes" xml:space="preserve">
          <source>The display name to be used by user interface programs to identify the service. This string has a maximum length of 256 characters.</source>
          <target state="translated">서비스를 식별하기 위해 사용자 인터페이스 프로그램에서 사용할 표시 이름입니다. 이 문자열의 최대 길이는 256 자입니다.</target>
        </trans-unit>
        <trans-unit id="56658082889c29abc45b1b6d752e916811c986fa" translate="yes" xml:space="preserve">
          <source>The displayNames property provides a list of all the User display names.</source>
          <target state="translated">displayNames 속성은 모든 사용자 표시 이름 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ee2809a96eedb784d9054d3b6801c6d851eac561" translate="yes" xml:space="preserve">
          <source>The displayname to assign to the firewall rule.</source>
          <target state="translated">방화벽 규칙에 할당 할 표시 이름입니다.</target>
        </trans-unit>
        <trans-unit id="375695498ddf80b4cc9fd18de8d5bba70ce0e99a" translate="yes" xml:space="preserve">
          <source>The distinguished name for a group. When set to the distinguished name of a group, only members of that group can log in. This feature filters based on the &lt;code&gt;memberOf&lt;/code&gt; attribute and only works with LDAP servers that provide such an attribute. In OpenLDAP, the &lt;code&gt;memberOf&lt;/code&gt; overlay provides this attribute. For example, if the value of the &lt;code&gt;memberOf&lt;/code&gt; attribute is &lt;code&gt;CN=abcxyz,OU=users,DC=company,DC=com&lt;/code&gt;, then use:</source>
          <target state="translated">그룹의 고유 이름입니다. 그룹의 고유 이름으로 설정하면 해당 그룹의 구성원 만 로그인 할 수 있습니다.이 기능은 &lt;code&gt;memberOf&lt;/code&gt; 속성을 기준으로 필터링 하며 해당 속성을 제공하는 LDAP 서버에서만 작동합니다. OpenLDAP에서 &lt;code&gt;memberOf&lt;/code&gt; 오버레이는이 속성을 제공합니다. 예를 들어 &lt;code&gt;memberOf&lt;/code&gt; 속성 의 값 이 &lt;code&gt;CN=abcxyz,OU=users,DC=company,DC=com&lt;/code&gt; 인 경우 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="50205c98ff0fcbd24eda693929bc763a9e1fc939" translate="yes" xml:space="preserve">
          <source>The distinguished name used to bind to the LDAP server. Default value: &lt;code&gt;&quot;ldapbind&quot;&lt;/code&gt;.</source>
          <target state="translated">LDAP 서버에 바인딩하는 데 사용되는 고유 이름입니다. 기본값 : &lt;code&gt;&quot;ldapbind&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="730df099800ba2fc11c78b2e5ec181f728f7a7d6" translate="yes" xml:space="preserve">
          <source>The distinguished name used to bind to the LDAP server. The user the Chef Infra Server will use to perform LDAP searches. This is often the administrator or manager user. This user needs to have read access to all LDAP users that require authentication. The Chef Infra Server must do an LDAP search before any user can log in. Many Active Directory and LDAP systems do not allow an anonymous bind. If anonymous bind is allowed, leave the &lt;code&gt;bind_dn&lt;/code&gt; and &lt;code&gt;bind_password&lt;/code&gt; settings blank. If anonymous bind is not allowed, a user with &lt;code&gt;READ&lt;/code&gt; access to the directory is required. This user must be specified as an LDAP distinguished name similar to:</source>
          <target state="translated">LDAP 서버에 바인딩하는 데 사용되는 고유 이름입니다. Chef Infra Server가 LDAP 검색을 수행하는 데 사용할 사용자입니다. 이것은 종종 관리자 또는 관리자 사용자입니다. 이 사용자는 인증이 필요한 모든 LDAP 사용자에 대한 읽기 액세스 권한이 있어야합니다. Chef Infra Server는 사용자가 로그인하기 전에 LDAP 검색을 수행해야합니다. 많은 Active Directory 및 LDAP 시스템은 익명 바인딩을 허용하지 않습니다. 익명 바인드가 허용되는 경우 &lt;code&gt;bind_dn&lt;/code&gt; 및 &lt;code&gt;bind_password&lt;/code&gt; 설정을 공백으로 두십시오. 익명 바인드가 허용되지 않는 경우 디렉토리에 대한 &lt;code&gt;READ&lt;/code&gt; 액세스 권한이 있는 사용자 가 필요합니다. 이 사용자는 다음과 유사한 LDAP 식별 이름으로 지정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="170548b553171e210f51898b4f8298f9195aa679" translate="yes" xml:space="preserve">
          <source>The distinguished name used to bind to the LDAP server. The user the Chef server will use to perform LDAP searches. This is often the administrator or manager user. This user needs to have read access to all LDAP users that require authentication. The Chef server must do an LDAP search before any user can log in. Many Active Directory and LDAP systems do not allow an anonymous bind. If anonymous bind is allowed, leave the &lt;code&gt;bind_dn&lt;/code&gt; and &lt;code&gt;bind_password&lt;/code&gt; settings blank. If anonymous bind is not allowed, a user with &lt;code&gt;READ&lt;/code&gt; access to the directory is required. This user must be specified as an LDAP distinguished name similar to:</source>
          <target state="translated">LDAP 서버에 바인드하는 데 사용되는 식별 이름입니다. Chef 서버가 LDAP 검색을 수행하는 데 사용할 사용자입니다. 이것은 종종 관리자 또는 관리자 사용자입니다. 이 사용자는 인증이 필요한 모든 LDAP 사용자에게 읽기 권한이 있어야합니다. Chef 서버는 사용자가 로그인하기 전에 LDAP 검색을 수행해야합니다. 많은 Active Directory 및 LDAP 시스템은 익명 바인드를 허용하지 않습니다. 익명 바인드가 허용되면 &lt;code&gt;bind_dn&lt;/code&gt; 및 &lt;code&gt;bind_password&lt;/code&gt; 설정을 비워 두십시오. 익명 바인드가 허용되지 않으면 디렉토리에 대한 &lt;code&gt;READ&lt;/code&gt; 권한이 있는 사용자 가 필요합니다. 이 사용자는 다음과 유사한 LDAP 식별 이름으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1daa0dbebb03c277e6e5e782ce06f55e93ae7533" translate="yes" xml:space="preserve">
          <source>The document format of the readme file: &lt;code&gt;md&lt;/code&gt; (markdown) and &lt;code&gt;rdoc&lt;/code&gt; (Ruby docs).</source>
          <target state="translated">readme 파일의 문서 형식은 &lt;code&gt;md&lt;/code&gt; (markdown) 및 &lt;code&gt;rdoc&lt;/code&gt; (Ruby docs)입니다.</target>
        </trans-unit>
        <trans-unit id="ef79a8b62f3790a1affe55fc0e4265ebebd50f7f" translate="yes" xml:space="preserve">
          <source>The domain associated with the entity.</source>
          <target state="translated">엔티티와 연관된 도메인입니다.</target>
        </trans-unit>
        <trans-unit id="0e48de6283e66ac5488813ce8a746a01d236e006" translate="yes" xml:space="preserve">
          <source>The domain for the node.</source>
          <target state="translated">노드의 도메인</target>
        </trans-unit>
        <trans-unit id="9a13613c2eab4d00eef0baf5535ff456a6383081" translate="yes" xml:space="preserve">
          <source>The domain name of your directory server, for example &lt;code&gt;&quot;ldap.corp.com&quot;&lt;/code&gt;. Default port: &lt;code&gt;636&lt;/code&gt;. Override the port by appending it to the host setting, &lt;code&gt;&quot;ldap.corp.com:10636&quot;&lt;/code&gt;</source>
          <target state="translated">디렉토리 서버의 도메인 이름 (예 : &lt;code&gt;&quot;ldap.corp.com&quot;&lt;/code&gt; ) . 기본 포트 : &lt;code&gt;636&lt;/code&gt; . 호스트 설정 &lt;code&gt;&quot;ldap.corp.com:10636&quot;&lt;/code&gt; 에 추가하여 포트를 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="7c6834f39f5b96e3e3ed04a204c62b7333f6e82d" translate="yes" xml:space="preserve">
          <source>The domain of the username specified by the user property. If not specified, the username and password specified by the &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties will be used to resolve that user against the domain in which the system running Chef Infra Client is joined, or if that system is not joined to a domain it will resolve the user as a local account on that system. An alternative way to specify the domain is to leave this property unspecified and specify the domain as part of the user property.</source>
          <target state="translated">사용자 속성에 지정된 사용자 이름의 도메인입니다. 지정하지 않으면 &lt;code&gt;user&lt;/code&gt; 및 &lt;code&gt;password&lt;/code&gt; 속성 에서 지정한 사용자 이름과 암호를 사용하여 Chef Infra Client를 실행하는 시스템이 가입 된 도메인에 대해 해당 사용자를 확인하거나 해당 시스템이 도메인에 가입되지 않은 경우 해당 사용자를 확인합니다. 해당 시스템의 로컬 계정으로 사용자. 도메인을 지정하는 또 다른 방법은이 속성을 지정하지 않고 도메인을 사용자 속성의 일부로 지정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7413c96ba215bf818c30f637a40bf85a38287518" translate="yes" xml:space="preserve">
          <source>The domain that the user defaults belong to.</source>
          <target state="translated">사용자 기본값이 속한 도메인입니다.</target>
        </trans-unit>
        <trans-unit id="b2dd26d95dd4c9398ebc7179a63a73cefd0e21c0" translate="yes" xml:space="preserve">
          <source>The domain user that will be used to join the domain.</source>
          <target state="translated">도메인에 가입하는 데 사용할 도메인 사용자입니다.</target>
        </trans-unit>
        <trans-unit id="99390557f8716e9b7f01768d002fbce239f4f778" translate="yes" xml:space="preserve">
          <source>The download button located to the right of the search bar allows users to download a JSON or CSV format of the reports. The downloaded contents are the result of all of the applied filters&amp;ndash;including end time selected in calendar.</source>
          <target state="translated">검색 창 오른쪽에있는 다운로드 버튼을 통해 사용자는 보고서의 JSON 또는 CSV 형식을 다운로드 할 수 있습니다. 다운로드 된 콘텐츠는 달력에서 선택한 종료 시간을 포함하여 적용된 모든 필터의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="27ced8d27bf1d6852ed54855b0b622e51cd045f3" translate="yes" xml:space="preserve">
          <source>The downloaded cookbook is untarred and its contents are committed to git and a tag is created.</source>
          <target state="translated">다운로드 한 요리 책은 압축이 풀리고 내용은 커밋되어 태그가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ecb15db13e634f778dbc9f26adbe5f29e79f075c" translate="yes" xml:space="preserve">
          <source>The due time for this IP to be retired in RFC 3339 format, for example 2012-11-15T16:19:00.094Z. This field is only available when the IP is scheduled to be retired.</source>
          <target state="translated">이 IP가 RFC 3339 형식 (예 : 2012-11-15T16 : 19 : 00.094Z)으로 만료되는 기한입니다. 이 필드는 IP가 만료되도록 예약 된 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff3f3e1a0f79c2b1c72302b158d1782f51700e16" translate="yes" xml:space="preserve">
          <source>The dump frequency (in days) used while creating a file systems table (fstab) entry.</source>
          <target state="translated">파일 시스템 테이블 (fstab) 항목을 만드는 동안 사용 된 덤프 빈도 (일)입니다.</target>
        </trans-unit>
        <trans-unit id="cb8d74ce14bb7ee1d32e781413276d86c24a04db" translate="yes" xml:space="preserve">
          <source>The dump frequency (in days) used while creating a file systems table (fstab) entry. Default value: &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">파일 시스템 테이블 (fstab) 항목을 작성하는 동안 사용 된 덤프 빈도 (일)입니다. 초기 값 : &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c94b2ba089b39c925ce652c7504477489810da0" translate="yes" xml:space="preserve">
          <source>The duration after which nodes marked for deletion are removed.</source>
          <target state="translated">삭제 표시된 노드가 제거되는 기간입니다.</target>
        </trans-unit>
        <trans-unit id="b42d7a3bfc097736834a647dba497e90210f6112" translate="yes" xml:space="preserve">
          <source>The duration after which unreported nodes are marked as missing.</source>
          <target state="translated">보고되지 않은 노드가 누락 된 것으로 표시되는 기간입니다.</target>
        </trans-unit>
        <trans-unit id="e8ac0da6371ea4c423aac54ee54e726f19e85ed7" translate="yes" xml:space="preserve">
          <source>The duration of the certificate in days.</source>
          <target state="translated">인증서 기간 (일)입니다.</target>
        </trans-unit>
        <trans-unit id="a5131168d6d62c2fdbc8c8231df951684ab61661" translate="yes" xml:space="preserve">
          <source>The e-mail address to e-mail any cron task failures to.</source>
          <target state="translated">cron 태스크 실패를 이메일로 보낼 이메일 주소입니다.</target>
        </trans-unit>
        <trans-unit id="a73adb26b58a23388dca8e42051cef40e8aab743" translate="yes" xml:space="preserve">
          <source>The easiest way to create a plan is to use the &lt;code&gt;hab plan init&lt;/code&gt; subcommand. This subcommand will create a directory, known as the plan context, that contains your plan file and any runtime hooks and/or templated configuration data.</source>
          <target state="translated">계획을 만드는 가장 쉬운 방법은 &lt;code&gt;hab plan init&lt;/code&gt; 하위 명령 을 사용하는 것 입니다. 이 하위 명령은 계획 파일과 런타임 후크 및 / 또는 템플릿 구성 데이터를 포함하는 계획 컨텍스트라고하는 디렉토리를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fa1361ac763b4f362836eac70ad41a1a26429a65" translate="yes" xml:space="preserve">
          <source>The easiest way to create this is to download and install the &lt;a href=&quot;https://cloud.google.com/sdk/&quot;&gt;Google Cloud SDK&lt;/a&gt; and run the &lt;code&gt;gcloud auth application-default login&lt;/code&gt; command, which will create the credentials file for you.</source>
          <target state="translated">이를 만드는 가장 쉬운 방법은 &lt;a href=&quot;https://cloud.google.com/sdk/&quot;&gt;Google Cloud SDK&lt;/a&gt; 를 다운로드 및 설치 하고 &lt;code&gt;gcloud auth application-default login&lt;/code&gt; 명령어를 실행하는 것입니다. 그러면 사용자 인증 정보 파일이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6c86d4f63bd7e65c77ccadc7fc7c127761bb0907" translate="yes" xml:space="preserve">
          <source>The easiest way to send commands to the Chef Infra Server from your workstation is to use the &lt;code&gt;knife exec&lt;/code&gt; subcommand. Here is an example of making a basic &lt;code&gt;knife exec&lt;/code&gt; command against a RESTful JSON API.</source>
          <target state="translated">워크 스테이션에서 Chef Infra Server로 명령을 보내는 가장 쉬운 방법은 &lt;code&gt;knife exec&lt;/code&gt; 하위 명령 을 사용하는 것 입니다. 다음은 RESTful JSON API에 대해 기본적인 &lt;code&gt;knife exec&lt;/code&gt; 명령 을 만드는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="9b6da3a589c9811ad636fe425dfce2d5dad68803" translate="yes" xml:space="preserve">
          <source>The easiest way to start exploring Chef Automate is to install it on a local virtual machine (VM). We created this &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; file for you to use in creating your own test environment.</source>
          <target state="translated">Chef Automate 탐색을 시작하는 가장 쉬운 방법은 로컬 VM (가상 머신)에 설치하는 것입니다. 자체 테스트 환경을 만드는 데 사용할 수 있도록 이 &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; 파일을 만들었습니다 .</target>
        </trans-unit>
        <trans-unit id="e5fba19fca014db39fbb1ce19c289327e21bb9c3" translate="yes" xml:space="preserve">
          <source>The email address associated with the entity.</source>
          <target state="translated">엔티티와 연관된 이메일 주소입니다.</target>
        </trans-unit>
        <trans-unit id="5870bf0879d5d00f257ec9fc6cedbcdfbac48d73" translate="yes" xml:space="preserve">
          <source>The email address for the individual who maintains the cookbook. This option places an email address in each of the pre-created files. If not specified, an email name of &amp;ldquo;YOUR_EMAIL&amp;rdquo; is used instead; this can easily be modified later.</source>
          <target state="translated">요리 책을 관리하는 개인의 이메일 주소입니다. 이 옵션은 사전 작성된 각 파일에 이메일 주소를 배치합니다. 지정하지 않으면&amp;ldquo;YOUR_EMAIL&amp;rdquo;이라는 전자 메일 이름이 대신 사용됩니다. 나중에 쉽게 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="034804ebdf96730eb9ef3363de76ce8f54a43361" translate="yes" xml:space="preserve">
          <source>The email address for the person responsible for maintaining a cookbook. Only one email can be listed here, so if this needs to be forwarded to multiple people consider using an email address that is already setup for mail forwarding.</source>
          <target state="translated">요리 책을 관리하는 담당자의 이메일 주소입니다. 여기에는 하나의 이메일 만 나열 될 수 있으므로 여러 사람에게 전달해야하는 경우 이미 메일 전달을 위해 설정된 이메일 주소를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="57f3c10c5582d0648bca8c9cb56d61722474beb7" translate="yes" xml:space="preserve">
          <source>The email address for the user.</source>
          <target state="translated">사용자의 이메일 주소입니다.</target>
        </trans-unit>
        <trans-unit id="6161529b34225d03511da1a8c55edfdd080d98aa" translate="yes" xml:space="preserve">
          <source>The email address from which Chef Infra Server notifications are sent. Default value: &lt;code&gt;'Chef Notifications &amp;lt;notifications@chef.io&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server 알림이 전송되는 이메일 주소입니다. 기본값 : &lt;code&gt;'Chef Notifications &amp;lt;notifications@chef.io&amp;gt;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b7af2952b2406966d273bd981c46855f002e96c" translate="yes" xml:space="preserve">
          <source>The email address from which Chef server notifications are sent. Default value: &lt;code&gt;'Chef Notifications &amp;lt;notifications@chef.io&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 알림이 전송되는 이메일 주소입니다. 기본값 : &lt;code&gt;'Chef Notifications &amp;lt;notifications@chef.io&amp;gt;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80a5f70dd74ea3a9d64b85e5823a28d4e8f2125e" translate="yes" xml:space="preserve">
          <source>The email address from which invitations to the Chef management console are sent. Default value: &lt;code&gt;'&quot;Opscode&quot; &amp;lt;donotreply@chef.io&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">Chef 관리 콘솔에 대한 초대를 보내는 이메일 주소입니다. 기본값 : &lt;code&gt;'&quot;Opscode&quot; &amp;lt;donotreply@chef.io&amp;gt;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="307358d5b7b08e90f259d3d70292d364891c4a4a" translate="yes" xml:space="preserve">
          <source>The email address from which invitations to the Chef management console are sent. Default value: &lt;code&gt;'&quot;Opscode&quot; &amp;lt;donotreply@opscode.com&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">Chef 관리 콘솔 초대장이 발송되는 이메일 주소입니다. 기본값 : &lt;code&gt;'&quot;Opscode&quot; &amp;lt;donotreply@opscode.com&amp;gt;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="780e5dda75093ad37ec831403aca838e4c55899a" translate="yes" xml:space="preserve">
          <source>The email address of the user making the change.</source>
          <target state="translated">변경하는 사용자의 이메일 주소입니다.</target>
        </trans-unit>
        <trans-unit id="4dfb6c7334b6a5ee60dae6ea20ede0581b0bcab1" translate="yes" xml:space="preserve">
          <source>The email address used to send feedback. Default value: &lt;code&gt;support@chef.io&lt;/code&gt;.</source>
          <target state="translated">의견을 보내는 데 사용되는 이메일 주소입니다. 기본값은 &lt;code&gt;support@chef.io&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f0accc4c14332baf393d6734c2768e16cccc0049" translate="yes" xml:space="preserve">
          <source>The email addressed to which email notifications are sent. Default value: &lt;code&gt;'pc-default@opscode.com'&lt;/code&gt;.</source>
          <target state="translated">이메일 알림이 발송 된 이메일입니다. 기본값은 &lt;code&gt;'pc-default@opscode.com'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="862fdd6814c6c02369b77ecc37708386591c32b5" translate="yes" xml:space="preserve">
          <source>The email for an LDAP user. Default value: &lt;code&gt;mail&lt;/code&gt;.</source>
          <target state="translated">LDAP 사용자의 이메일입니다. 기본값 : &lt;code&gt;mail&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4cb0a10534e2ec2ddc5a395893c0150efb54fc4" translate="yes" xml:space="preserve">
          <source>The email of the service account for this function.</source>
          <target state="translated">이 기능에 대한 서비스 계정의 이메일입니다.</target>
        </trans-unit>
        <trans-unit id="04cac803a76df3bfebb3ebf418e0dab8897df841" translate="yes" xml:space="preserve">
          <source>The embedded Chef Infra Server cookbooks can handle two cases:</source>
          <target state="translated">내장 된 Chef Infra Server 쿡북은 두 가지 경우를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="6f12cd30c758bc35b90e861d20f0cb401a7d863e" translate="yes" xml:space="preserve">
          <source>The embedded Chef server cookbooks can handle two cases:</source>
          <target state="translated">내장 된 Chef 서버 쿡북은 두 가지 경우를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="4c588c6396ee75383eb3010115e3a0ec5b2ac1e8" translate="yes" xml:space="preserve">
          <source>The encoding of the values when the type is not STRING</source>
          <target state="translated">유형이 STRING이 아닐 때 값의 인코딩</target>
        </trans-unit>
        <trans-unit id="a13df433d87e77a729ebb97a3cd9f30bac243aac" translate="yes" xml:space="preserve">
          <source>The encrypted data bag item should use the same encrypted data bag private key that is distributed with the build nodes.</source>
          <target state="translated">암호화 된 데이터 백 항목은 빌드 노드와 함께 배포되는 동일한 암호화 된 데이터 백 개인 키를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="19591127734bbac846ec7865dc9cb43d39473a51" translate="yes" xml:space="preserve">
          <source>The encrypted data bag item should use the same encrypted data bag secret key that is distributed with the build nodes.</source>
          <target state="translated">암호화 된 데이터 백 항목은 빌드 노드와 함께 배포되는 동일한 암호화 된 데이터 백 비밀 키를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="23367ccd45cc20492ae8d6fcf46f7119edc048a7" translate="yes" xml:space="preserve">
          <source>The encrypted password strings, or an account status string. Each string may not be an encrypted password, but rather a &lt;code&gt;*&lt;/code&gt; or similar which indicates that direct logins are not allowed. Different operating systems use other flags here (such as &lt;code&gt;*LK*&lt;/code&gt; to indicate the account is locked).</source>
          <target state="translated">암호화 된 암호 문자열 또는 계정 상태 문자열입니다. 각 문자열은 암호화 된 암호가 아니라 직접 로그인이 허용되지 않음을 나타내는 &lt;code&gt;*&lt;/code&gt; 또는 유사합니다. 다른 운영 체제는 여기에서 다른 플래그를 사용합니다 (예 : 계정이 잠겨 있음을 나타내는 &lt;code&gt;*LK*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef532921224aeab3639f0e65518653eab1d07ef8" translate="yes" xml:space="preserve">
          <source>The encryption key that is used for values contained within a data bag item.</source>
          <target state="translated">데이터 백 항목에 포함 된 값에 사용되는 암호화 키입니다.</target>
        </trans-unit>
        <trans-unit id="ae691532911c883cff010bb9eace4db1768b8745" translate="yes" xml:space="preserve">
          <source>The encryption key that is used for values contained within a data bag item. If &lt;code&gt;secret&lt;/code&gt; is not specified, Chef Infra Client looks for a secret at the path specified by the &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; setting in the client.rb file.</source>
          <target state="translated">데이터 백 항목에 포함 된 값에 사용되는 암호화 키입니다. 경우 &lt;code&gt;secret&lt;/code&gt; 지정되지 않은, 요리사 인프라 클라이언트에 의해 지정된 경로에서 비밀을 찾습니다 &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; 의 client.rb 파일에 설정.</target>
        </trans-unit>
        <trans-unit id="a4852b06793079a5e559dec64636f0e2cc647251" translate="yes" xml:space="preserve">
          <source>The encryption key that is used for values contained within a data bag item. If &lt;code&gt;secret&lt;/code&gt; is not specified, Chef Infra Client looks for a secret at the path specified by the &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; setting in the client.rb file. For encrypted data bag items, use &lt;strong&gt;either&lt;/strong&gt;&lt;code&gt;--secret&lt;/code&gt; or &lt;code&gt;--secret-file&lt;/code&gt;, not both.</source>
          <target state="translated">데이터 백 항목에 포함 된 값에 사용되는 암호화 키입니다. 경우 &lt;code&gt;secret&lt;/code&gt; 지정되지 않은, 요리사 인프라 클라이언트에 의해 지정된 경로에서 비밀을 찾습니다 &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; 의 client.rb 파일에 설정. 암호화 된 데이터 백 항목의 &lt;strong&gt;경우 &lt;/strong&gt; &lt;code&gt;--secret&lt;/code&gt; 또는 &lt;code&gt;--secret-file&lt;/code&gt; &lt;strong&gt;중 &lt;/strong&gt;하나만 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f196a70225d49a8de774c0e88ea42802fb47d8d" translate="yes" xml:space="preserve">
          <source>The encryption key that is used for values contained within a data bag item. If &lt;code&gt;secret&lt;/code&gt; is not specified, the chef-client looks for a secret at the path specified by the &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; setting in the client.rb file.</source>
          <target state="translated">데이터 백 항목에 포함 된 값에 사용되는 암호화 키입니다. 경우 &lt;code&gt;secret&lt;/code&gt; 지정되지 않은 경로에서 비밀의 요리사 클라이언트 외모에 의해 지정된 &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; 의 client.rb 파일에 설정.</target>
        </trans-unit>
        <trans-unit id="e5ab07e1c0e93290e69653d1c7ac5ddf77a300b0" translate="yes" xml:space="preserve">
          <source>The end result is all projects are kept from promotion until project D is fixed, at which point everything can ship.</source>
          <target state="translated">최종 결과는 프로젝트 D가 수정 될 때까지 모든 프로젝트가 프로모션에서 유지되며,이 시점에서 모든 것이 배송 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac51f809601d642715d741defab819d0bdffc9cc" translate="yes" xml:space="preserve">
          <source>The endpoint for your Kubernetes API server.</source>
          <target state="translated">Kubernetes API 서버의 엔드 포인트입니다.</target>
        </trans-unit>
        <trans-unit id="3292dc238c8fbf701cd4de8bd5dfe1ca97836271" translate="yes" xml:space="preserve">
          <source>The endpoint the service is listening on</source>
          <target state="translated">서비스가 수신하는 엔드 포인트</target>
        </trans-unit>
        <trans-unit id="db8f3a5a87ec6f822bae5417bda9611e9f7e191b" translate="yes" xml:space="preserve">
          <source>The enterprise name that is used by the &lt;a href=&quot;https://github.com/chef-cookbooks/enterprise-chef-common&quot;&gt;enterprise-chef-common&lt;/a&gt; cookbook. Default value: &lt;code&gt;'supermarket'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef-cookbooks/enterprise-chef-common&quot;&gt;enterprise-chef-common&lt;/a&gt; 쿡북 에서 사용하는 엔터프라이즈 이름입니다 . 기본값 : &lt;code&gt;'supermarket'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b21af9d448c97b4fae40d62a55a63138236d2908" translate="yes" xml:space="preserve">
          <source>The entire Chef Workstation ecosystem.</source>
          <target state="translated">전체 Chef Workstation 에코 시스템.</target>
        </trans-unit>
        <trans-unit id="44a527071bf8c16f5387455b5fec037f1fd39620" translate="yes" xml:space="preserve">
          <source>The entire tarball of bootstrap &amp;ldquo;tools&amp;rdquo; lives inside the &lt;a href=&quot;http://s3-us-west-2.amazonaws.com/habitat-studio-stage1/habitat-studio-stage1-20180312233639.tar.xz&quot;&gt;stage1 studio&lt;/a&gt; tarball. This should be unpacked into &lt;code&gt;/tools&lt;/code&gt; on a Linux host that will serve as the build environment until the system is self-sustaining through the rest of this procedure.</source>
          <target state="translated">부트 스트랩 &quot;도구&quot;의 전체 tarball은 &lt;a href=&quot;http://s3-us-west-2.amazonaws.com/habitat-studio-stage1/habitat-studio-stage1-20180312233639.tar.xz&quot;&gt;stage1 스튜디오&lt;/a&gt; tarball 안에 있습니다. 이 절차의 나머지 부분을 통해 시스템이 자체적으로 유지 될 때까지 빌드 환경으로 사용할 Linux 호스트의 &lt;code&gt;/tools&lt;/code&gt; 에 압축을 풀어야 합니다.</target>
        </trans-unit>
        <trans-unit id="8620660fb4a0c81ae46797dc42dd6059833f06f7" translate="yes" xml:space="preserve">
          <source>The entire tarball of bootstrap &amp;ldquo;tools&amp;rdquo; lives inside the &lt;a href=&quot;https://s3-us-west-2.amazonaws.com/habitat-studio-stage1/habitat-studio-stage1-20180312233639.tar.xz&quot;&gt;stage1 studio&lt;/a&gt; tarball. This should be unpacked into &lt;code&gt;/tools&lt;/code&gt; on a Linux host that will serve as the build environment until the system is self-sustaining through the rest of this procedure.</source>
          <target state="translated">부트 스트랩 &quot;도구&quot;의 전체 tarball은 &lt;a href=&quot;https://s3-us-west-2.amazonaws.com/habitat-studio-stage1/habitat-studio-stage1-20180312233639.tar.xz&quot;&gt;stage1 스튜디오&lt;/a&gt; tarball 안에 있습니다. 이 절차의 나머지 부분을 통해 시스템이 자체적으로 유지 될 때까지 빌드 환경으로 사용할 Linux 호스트의 &lt;code&gt;/tools&lt;/code&gt; 에 압축을 풀어야 합니다.</target>
        </trans-unit>
        <trans-unit id="aad981204aa3008d6046f7458e1b131f7eae4925" translate="yes" xml:space="preserve">
          <source>The entity holding the permission, in one of the following forms: * user-{{userId}} * user-{{email}} (such as &amp;ldquo;&lt;a href=&quot;mailto:user-liz@example.com&quot;&gt;user-liz@example.com&lt;/a&gt;&amp;rdquo;) * group-{{groupId}} * group-{{email}} (such as &amp;ldquo;&lt;a href=&quot;mailto:group-example@googlegroups.com&quot;&gt;group-example@googlegroups.com&lt;/a&gt;&amp;rdquo;) * domain-{{domain}} (such as &amp;ldquo;domain-example.com&amp;rdquo;) * project-team-{{projectId}} * allUsers * allAuthenticatedUsers</source>
          <target state="translated">다음 형식 중 하나로 권한을 보유한 엔티티 : * user-{{userId}} * user-{{email}} (예 : &quot; &lt;a href=&quot;mailto:user-liz@example.com&quot;&gt;user-liz@example.com&lt;/a&gt; &quot;) * group-{{groupId}} * group-{{email}} (예 : ' &lt;a href=&quot;mailto:group-example@googlegroups.com&quot;&gt;group-example@googlegroups.com&lt;/a&gt; ') * domain-{{domain}} (예 : 'domain-example.com') * project-team-{{projectId}} * allUsers * allAuthenticatedUsers</target>
        </trans-unit>
        <trans-unit id="d7e08284c9711f02355373eeb0051dd5901d7e58" translate="yes" xml:space="preserve">
          <source>The entity holding the permission, in one of the following forms: _ user-{{userId}} _ user-{{email}} (such as &amp;ldquo;&lt;a href=&quot;mailto:user-liz@example.com&quot;&gt;user-liz@example.com&lt;/a&gt;&amp;rdquo;) _ group-{{groupId}} _ group-{{email}} (such as &amp;ldquo;&lt;a href=&quot;mailto:group-example@googlegroups.com&quot;&gt;group-example@googlegroups.com&lt;/a&gt;&amp;rdquo;) _ domain-{{domain}} (such as &amp;ldquo;domain-example.com&amp;rdquo;) _ project-team-{{projectId}} _ allUsers _ allAuthenticatedUsers</source>
          <target state="translated">다음 형식 중 하나로 권한을 보유한 엔티티 : _ user-{{userId}} _ user-{{email}} (예 : ' &lt;a href=&quot;mailto:user-liz@example.com&quot;&gt;user-liz@example.com&lt;/a&gt; ') _ group-{{groupId}} _ group-{{email}} (예 : ' &lt;a href=&quot;mailto:group-example@googlegroups.com&quot;&gt;group-example@googlegroups.com&lt;/a&gt; ') _ domain-{{domain}} (예 : 'domain-example.com') _ project-team-{{projectId}} _ allUsers _ allAuthenticatedUsers</target>
        </trans-unit>
        <trans-unit id="cefa141e52d31093b377438746c31806c6fcbde5" translate="yes" xml:space="preserve">
          <source>The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user &lt;a href=&quot;mailto:liz@example.com&quot;&gt;liz@example.com&lt;/a&gt; would be &lt;a href=&quot;mailto:user-liz@example.com&quot;&gt;user-liz@example.com&lt;/a&gt;. The group &lt;a href=&quot;mailto:example@googlegroups.com&quot;&gt;example@googlegroups.com&lt;/a&gt; would be &lt;a href=&quot;mailto:group-example@googlegroups.com&quot;&gt;group-example@googlegroups.com&lt;/a&gt;. To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.</source>
          <target state="translated">권한을 보유하는 엔티티는 다음 형식 중 하나입니다. user-userId 사용자 이메일 그룹 그룹 ID 그룹 이메일 도메인 도메인 프로젝트 팀 프로젝트 ID allUsers allAuthenticatedUsers 예 : 사용자 &lt;a href=&quot;mailto:liz@example.com&quot;&gt;liz@example.com&lt;/a&gt; 은 &lt;a href=&quot;mailto:user-liz@example.com&quot;&gt;user-liz @입니다. example.com&lt;/a&gt; . &lt;a href=&quot;mailto:example@googlegroups.com&quot;&gt;example@googlegroups.com&lt;/a&gt; 그룹 은 &lt;a href=&quot;mailto:group-example@googlegroups.com&quot;&gt;group-example@googlegroups.com이&lt;/a&gt; 됩니다. Google Apps for Business 도메인 example.com의 모든 구성원을 참조하기위한 엔티티는 domain-example.com이됩니다.</target>
        </trans-unit>
        <trans-unit id="15cd61a6dcc11e49fac34ec05f41bd8e217d2a55" translate="yes" xml:space="preserve">
          <source>The entity identification, or the issuer. If you have not overridden this setting in your delivery.rb (see below), enter:</source>
          <target state="translated">엔티티 식별 또는 발행자. delivery.rb (아래 참조)에서이 설정을 재정의하지 않은 경우 다음을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="7ae33c10e1796bf7af9a341b5b4f682d2669c046" translate="yes" xml:space="preserve">
          <source>The entity that owns the Organization</source>
          <target state="translated">조직을 소유 한 법인</target>
        </trans-unit>
        <trans-unit id="36d6cf121ac843fff162e5a4109524a325b024ba" translate="yes" xml:space="preserve">
          <source>The entity, in the form project-owner-projectId.</source>
          <target state="translated">project-owner-projectId 형식의 엔티티입니다.</target>
        </trans-unit>
        <trans-unit id="bb28bfc37f34ce4d9ea0f38bb84159062990afa7" translate="yes" xml:space="preserve">
          <source>The environment as JSON data. For example:</source>
          <target state="translated">JSON 데이터로서의 환경. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="5a9eca982f825cb962d47d68eed2a0f9fb4e2ed3" translate="yes" xml:space="preserve">
          <source>The environment is a Ruby on Rails application that needs render a file named &lt;code&gt;database.yml&lt;/code&gt;</source>
          <target state="translated">환경은 &lt;code&gt;database.yml&lt;/code&gt; 이라는 파일을 렌더링해야하는 Ruby on Rails 애플리케이션입니다.</target>
        </trans-unit>
        <trans-unit id="3c800a878710bde6e278968919e29f5833cf4d78" translate="yes" xml:space="preserve">
          <source>The environment this machine will be placed in on your Chef Infra Server.</source>
          <target state="translated">이 머신이 Chef Infra 서버에 배치 될 환경입니다.</target>
        </trans-unit>
        <trans-unit id="4a9d1c56e4dc0e5547b626cd2b22b20a9ba309eb" translate="yes" xml:space="preserve">
          <source>The environment to use when registering; required when using the username and password properties.</source>
          <target state="translated">등록 할 때 사용할 환경 사용자 이름 및 암호 속성을 사용할 때 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c822254cf342516f28c22782224d2dc1ea576378" translate="yes" xml:space="preserve">
          <source>The environment variables &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, and &lt;code&gt;ftp_proxy&lt;/code&gt; are honored by Test Kitchen for proxies. The client.rb file is read to look for proxy configuration settings. If &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, and &lt;code&gt;ftp_proxy&lt;/code&gt; are specified in the client.rb file, Chef Infra Client will configure the &lt;code&gt;ENV&lt;/code&gt; variable based on these (and related) settings. For example:</source>
          <target state="translated">환경 변수 &lt;code&gt;http_proxy&lt;/code&gt; , &lt;code&gt;https_proxy&lt;/code&gt; 및 &lt;code&gt;ftp_proxy&lt;/code&gt; 는 Test Kitchen에서 프록시에 대해 적용됩니다. client.rb 파일을 읽어 프록시 구성 설정을 찾습니다. 경우 &lt;code&gt;http_proxy&lt;/code&gt; , &lt;code&gt;https_proxy&lt;/code&gt; 를 , 그리고 &lt;code&gt;ftp_proxy&lt;/code&gt; 이 client.rb 파일에 지정된, 요리사 인프라 클라이언트는 구성합니다 &lt;code&gt;ENV&lt;/code&gt; 의 이러한 (및 관련) 설정에 따라 변수를. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="64164673fca517c459e2d472fb7ede612c420355" translate="yes" xml:space="preserve">
          <source>The environment, which may restrict the set of valid cookbook versions for a node based on a variety of constraint operators</source>
          <target state="translated">다양한 제약 연산자를 기반으로 노드에 대한 유효한 쿡북 버전 세트를 제한 할 수있는 환경</target>
        </trans-unit>
        <trans-unit id="68b741c423bd3a34e2b44096e3fa86c8858a5479" translate="yes" xml:space="preserve">
          <source>The environment-specific run-list for a role. Default value: &lt;code&gt;[]&lt;/code&gt;. For example: &lt;code&gt;[&quot;env_run_lists[webserver]&quot;]&lt;/code&gt;</source>
          <target state="translated">역할에 대한 환경 별 실행 목록입니다. 기본값 : &lt;code&gt;[]&lt;/code&gt; . 예 : &lt;code&gt;[&quot;env_run_lists[webserver]&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a4b51f0bacb1f05cdfb6efe22dc3d2ea15d2c66" translate="yes" xml:space="preserve">
          <source>The erl_call resource was deprecated in Chef Client 13.7 and removed from Chef Client 14.0 (April 2018).</source>
          <target state="translated">erl_call 리소스는 Chef Client 13.7에서 더 이상 사용되지 않으며 Chef Client 14.0 (2018 년 4 월)에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="fa9f274e970c3100e59b29007ad821afdd98a491" translate="yes" xml:space="preserve">
          <source>The error will likely found in a stacktrace from the application error. In some cases the error message will clearly indicate a problem with another service which can be investigated further. For non-obvious errors, please contact Chef and attach the log files.</source>
          <target state="translated">오류는 애플리케이션 오류의 스택 추적에서 발견 될 수 있습니다. 경우에 따라 오류 메시지는 추가 조사가 가능한 다른 서비스의 문제를 명확하게 나타냅니다. 명확하지 않은 오류의 경우 Chef에 문의하고 로그 파일을 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="a2e50cec7d0cc1440f8d7befaab94b977e8aa846" translate="yes" xml:space="preserve">
          <source>The essential flow is:</source>
          <target state="translated">필수 흐름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="593c38ee3a7029bae3b6051bdd952a4ffd9dff53" translate="yes" xml:space="preserve">
          <source>The etag applied to the IoT Hub Consumer Group.</source>
          <target state="translated">IoT Hub 소비자 그룹에 적용된 etag입니다.</target>
        </trans-unit>
        <trans-unit id="414a2f24919829e8e2091351126dd11d9f600df4" translate="yes" xml:space="preserve">
          <source>The etag applied to the IoT Hub.</source>
          <target state="translated">IoT Hub에 적용된 etag입니다.</target>
        </trans-unit>
        <trans-unit id="78d3b464bc65a87340b3c7d240703c53ac264ded" translate="yes" xml:space="preserve">
          <source>The etag of the Resource, e.g. &lt;code&gt;\&quot;0x8D592D74CC20EBA\&quot;&lt;/code&gt;.</source>
          <target state="translated">리소스의 etag (예 : &lt;code&gt;\&quot;0x8D592D74CC20EBA\&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63df9d0045ffe24f528e81587ad4e9a87b0660a2" translate="yes" xml:space="preserve">
          <source>The exact Chef Automate version to install</source>
          <target state="translated">설치할 정확한 Chef Automate 버전</target>
        </trans-unit>
        <trans-unit id="423b512aad03e61595b6dc587a43b493df856339" translate="yes" xml:space="preserve">
          <source>The exact name of printer driver installed on the system.</source>
          <target state="translated">시스템에 설치된 프린터 드라이버의 정확한 이름.</target>
        </trans-unit>
        <trans-unit id="22f837828922c46b9db2143c2a1ece2e4efe29a0" translate="yes" xml:space="preserve">
          <source>The example Vagrantfile sets the VM hostname to &lt;code&gt;chef-automate.test&lt;/code&gt;. The installer uses this hostname as the FQDN that Chef Automate listens on. For security reasons, you must access Chef Automate&amp;rsquo;s web UI using the configured FQDN. To avoid configuring DNS for your test instance, we recommend adding an entry to your workstation&amp;rsquo;s &lt;code&gt;/etc/hosts&lt;/code&gt; file. Use the following command to append the required entry:</source>
          <target state="translated">예제 Vagrantfile은 VM 호스트 이름을 &lt;code&gt;chef-automate.test&lt;/code&gt; 로 설정합니다 . 설치 관리자는이 호스트 이름을 Chef Automate가 수신하는 FQDN으로 사용합니다. 보안상의 이유로 구성된 FQDN을 사용하여 Chef Automate의 웹 UI에 액세스해야합니다. 테스트 인스턴스에 대한 DNS 구성을 방지하려면 워크 스테이션의 &lt;code&gt;/etc/hosts&lt;/code&gt; 파일에 항목을 추가하는 것이 좋습니다 . 다음 명령을 사용하여 필수 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0a1904a6814b0991a2545fe17130e85c194e0e71" translate="yes" xml:space="preserve">
          <source>The exception are matchers that require additional arguments or named arguments.</source>
          <target state="translated">예외는 추가 인수 또는 명명 된 인수가 필요한 매처입니다.</target>
        </trans-unit>
        <trans-unit id="995a007ab2a31d231e195c645ee077308e44ef18" translate="yes" xml:space="preserve">
          <source>The exit code returned from an &lt;code&gt;install&lt;/code&gt; hook will be &amp;ldquo;remembered&amp;rdquo;. If a previously installed package is either installed again via &lt;code&gt;hab pkg install&lt;/code&gt; or loaded into a Supervisor, its &lt;code&gt;install&lt;/code&gt; hook will be rerun if it previously failed (exited with a non &lt;code&gt;0&lt;/code&gt; result) or has not been previously run (perhaps because &lt;code&gt;--ignore-install-hook&lt;/code&gt; was passed to &lt;code&gt;hab pkg install&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;install&lt;/code&gt; 후크 에서 반환 된 종료 코드는 &quot;기억&quot;됩니다. 이전에 설치 한 패키지가 &lt;code&gt;hab pkg install&lt;/code&gt; 을 통해 다시 설치 되거나 Supervisor에로드 된 경우 이전에 실패 했거나 ( &lt;code&gt;0&lt;/code&gt; 이 아닌 결과로 종료 ) 이전에 실행되지 않은 경우 ( &lt;code&gt;--ignore-install-hook&lt;/code&gt; 때문일 수 있음) &lt;code&gt;install&lt;/code&gt; 후크가 다시 실행됩니다. install-hook 이 &lt;code&gt;hab pkg install&lt;/code&gt; 로 전달되었습니다 ).</target>
        </trans-unit>
        <trans-unit id="029f536a25511c1be0f9348c3feace7a385def15" translate="yes" xml:space="preserve">
          <source>The exit code(s) returned a chocolatey package that indicate success.</source>
          <target state="translated">종료 코드가 성공을 나타내는 초콜릿 패키지를 반환했습니다.</target>
        </trans-unit>
        <trans-unit id="78f7c6d64707a913b3e87d354fc6486eb44c807c" translate="yes" xml:space="preserve">
          <source>The expiration date and time for the SAML provider.</source>
          <target state="translated">SAML 공급자의 만료 날짜 및 시간입니다.</target>
        </trans-unit>
        <trans-unit id="c89e6d07154ee674ecff33ff3c7d93bccca8cb56" translate="yes" xml:space="preserve">
          <source>The expiration date for the public key, specified as an ISO 8601 formatted string: &lt;code&gt;YYYY-MM-DDTHH:MM:SSZ&lt;/code&gt;. If this option is not specified, the public key will not have an expiration date. For example: &lt;code&gt;2013-12-24T21:00:00Z&lt;/code&gt;.</source>
          <target state="translated">공개 키의 만료 날짜로, ISO 8601 형식 문자열로 지정됩니다 ( &lt;code&gt;YYYY-MM-DDTHH:MM:SSZ&lt;/code&gt; ) . 이 옵션을 지정하지 않으면 공개 키에 만료 날짜가 없습니다. 예를 들어 &lt;code&gt;2013-12-24T21:00:00Z&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4395bf804501b6b4497fccdae67b72ae58399eb9" translate="yes" xml:space="preserve">
          <source>The export destination.</source>
          <target state="translated">수출 목적지.</target>
        </trans-unit>
        <trans-unit id="023befdcb123fd183e5c58962a08f141158c1ddf" translate="yes" xml:space="preserve">
          <source>The extension has the following options that can be provided in the settings hash.</source>
          <target state="translated">확장에는 설정 해시에서 제공 할 수있는 다음 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b960bcdb262706f18468f431d1b1c06dc9d4072" translate="yes" xml:space="preserve">
          <source>The external IP address of this cluster&amp;rsquo;s master endpoint.</source>
          <target state="translated">이 클러스터 마스터 엔드 포인트의 외부 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="f25a3c7f8b365eab78c45116551a26a617e45c38" translate="yes" xml:space="preserve">
          <source>The extra arguments that are passed to the Subversion command.</source>
          <target state="translated">Subversion 명령으로 전달되는 추가 인수</target>
        </trans-unit>
        <trans-unit id="08540367adc1045233ef0fb2e02975c5b3891a75" translate="yes" xml:space="preserve">
          <source>The fact that this is confusing behavior to explain is why it is being removed.</source>
          <target state="translated">이것이 설명하기에는 혼란스러운 행동이라는 사실이 제거되는 이유입니다.</target>
        </trans-unit>
        <trans-unit id="daa22751002c78731f8bb30f87d4559857671dd5" translate="yes" xml:space="preserve">
          <source>The failover virtual IP address is correctly attached to only the &lt;code&gt;master&lt;/code&gt; node</source>
          <target state="translated">장애 조치 가상 IP 주소가 &lt;code&gt;master&lt;/code&gt; 노드 에만 올바르게 연결되었습니다</target>
        </trans-unit>
        <trans-unit id="c00c399d57eb0c78967e9110c77dce2951f97b49" translate="yes" xml:space="preserve">
          <source>The fastest and best way to set up a macOS device is by never physically touching it.</source>
          <target state="translated">macOS 장치를 설정하는 가장 빠르고 가장 좋은 방법은 물리적으로 만지지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6ab441c05fa2460e45ca342b31963d2642c8196d" translate="yes" xml:space="preserve">
          <source>The field data type</source>
          <target state="translated">필드 데이터 유형</target>
        </trans-unit>
        <trans-unit id="e1494aa3342c72265bcdce629cae4ccff2df86cf" translate="yes" xml:space="preserve">
          <source>The field description</source>
          <target state="translated">필드 설명</target>
        </trans-unit>
        <trans-unit id="c739bd3081a2fd15900ca0b4d62526a85d708e07" translate="yes" xml:space="preserve">
          <source>The field description. The maximum length is 1,024 characters.</source>
          <target state="translated">필드 설명입니다. 최대 길이는 1,024 자입니다.</target>
        </trans-unit>
        <trans-unit id="cff3f5b5d0fb0bfc39f4ca9b2f2d0415d41b3c0f" translate="yes" xml:space="preserve">
          <source>The field mode</source>
          <target state="translated">필드 모드</target>
        </trans-unit>
        <trans-unit id="ec2973baecba84a63c51c253c497b4531e7ac1f6" translate="yes" xml:space="preserve">
          <source>The field name</source>
          <target state="translated">필드 이름</target>
        </trans-unit>
        <trans-unit id="b14c794ffacecc36d78d7289b70139f95cfdc8c8" translate="yes" xml:space="preserve">
          <source>The file contains a fatal error.</source>
          <target state="translated">파일에 치명적인 오류가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c65bc97bd69b1fee4069092494d6a594435cda2" translate="yes" xml:space="preserve">
          <source>The file contains a warning.</source>
          <target state="translated">파일에 경고가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8112e553d47a3c5a7dd55f0dd9ec0ed85d92ebbb" translate="yes" xml:space="preserve">
          <source>The file contains an error.</source>
          <target state="translated">파일에 오류가 있습니다.</target>
        </trans-unit>
        <trans-unit id="442205d6c234bca7feadfdab3a5351fcca26a62b" translate="yes" xml:space="preserve">
          <source>The file contains code that should be refactored.</source>
          <target state="translated">파일에는 리팩토링해야하는 코드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c305ca27864b79b8c941ca672f5fbf177a36220" translate="yes" xml:space="preserve">
          <source>The file does not have any issues.</source>
          <target state="translated">파일에 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bd46304daa7c8e7796b7d1aade2a4ca51a0bdeaf" translate="yes" xml:space="preserve">
          <source>The file group for the ssh_known_hosts file.</source>
          <target state="translated">ssh_known_hosts 파일의 파일 그룹입니다.</target>
        </trans-unit>
        <trans-unit id="072e39b512a38c6d706bff2f0275258ee315e20c" translate="yes" xml:space="preserve">
          <source>The file has an issue with convention.</source>
          <target state="translated">파일에 규칙에 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="97955053909ee96c6616b81b063b0313684a7ce4" translate="yes" xml:space="preserve">
          <source>The file in which the OpenSSL key is saved. Chef Infra Client generates this setting automatically and most users do not need to modify it.</source>
          <target state="translated">OpenSSL 키가 저장된 파일입니다. Chef Infra Client는이 설정을 자동으로 생성하며 대부분의 사용자는이를 수정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="deae68df68a07159db8becff80037ad5fbb0cdb6" translate="yes" xml:space="preserve">
          <source>The file in which the OpenSSL key is saved. This setting is generated automatically by the chef-client and most users do not need to modify it.</source>
          <target state="translated">OpenSSL 키가 저장된 파일입니다. 이 설정은 chef-client가 자동으로 생성하며 대부분의 사용자는 수정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="377517f34c27471db243af71d665834710b233a2" translate="yes" xml:space="preserve">
          <source>The file mode creation mask, or umask.</source>
          <target state="translated">파일 모드 작성 마스크 또는 umask</target>
        </trans-unit>
        <trans-unit id="21e537ff1f2ca92d2cd22d0cf7fbb319c626037f" translate="yes" xml:space="preserve">
          <source>The file mode creation mask, or umask. Default value: &lt;code&gt;0022&lt;/code&gt;.</source>
          <target state="translated">파일 모드 작성 마스크 또는 umask 기본값은 &lt;code&gt;0022&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ad635a6a7b81baf168c956c82c68f66283a4b9da" translate="yes" xml:space="preserve">
          <source>The file mode for the ssh_known_hosts file.</source>
          <target state="translated">ssh_known_hosts 파일의 파일 모드입니다.</target>
        </trans-unit>
        <trans-unit id="b984c048c4eee82c675b03894e51254e219c3968" translate="yes" xml:space="preserve">
          <source>The file mode of the plist file. Ex: &amp;lsquo;644&amp;rsquo;</source>
          <target state="translated">plist 파일의 파일 모드입니다. 예 : '644'</target>
        </trans-unit>
        <trans-unit id="f1c93fa3ba447a82e26064baac8dce9c8ae866cd" translate="yes" xml:space="preserve">
          <source>The file mode of the repository file.</source>
          <target state="translated">저장소 파일의 파일 모드입니다.</target>
        </trans-unit>
        <trans-unit id="bea683ccf2e0d950d79bed6ae0f4bb84ee51dcb6" translate="yes" xml:space="preserve">
          <source>The file owner for the ssh_known_hosts file.</source>
          <target state="translated">ssh_known_hosts 파일의 파일 소유자입니다.</target>
        </trans-unit>
        <trans-unit id="7db949f6d41ca856e793bd23756cbc01d08fa899" translate="yes" xml:space="preserve">
          <source>The file path to extract the archive file to.</source>
          <target state="translated">아카이브 파일을 추출 할 파일 경로입니다.</target>
        </trans-unit>
        <trans-unit id="7b0826f83104fbfc7e61c0043f3a259cca446be7" translate="yes" xml:space="preserve">
          <source>The file system type (fstype) of the device.</source>
          <target state="translated">장치의 파일 시스템 유형 (fstype).</target>
        </trans-unit>
        <trans-unit id="7d9d8a37d554ec618aa8bc3e47fac36eaa70aab8" translate="yes" xml:space="preserve">
          <source>The file to which a cookbook download is written.</source>
          <target state="translated">요리 책 다운로드가 작성된 파일입니다.</target>
        </trans-unit>
        <trans-unit id="7bc19ca3d2a46a46d1979114199639d2fb4765d6" translate="yes" xml:space="preserve">
          <source>The file to which standard error (&lt;code&gt;stderr&lt;/code&gt;) is sent.</source>
          <target state="translated">표준 오류 ( &lt;code&gt;stderr&lt;/code&gt; )가 전송 되는 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="b1a98b7e371b15c67fc93eb4bb58a7c5f67e5fe8" translate="yes" xml:space="preserve">
          <source>The file to which standard input (&lt;code&gt;stdin&lt;/code&gt;) is sent.</source>
          <target state="translated">표준 입력 ( &lt;code&gt;stdin&lt;/code&gt; )이 전송 되는 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="df43e51cd64e6d25b5f46beab3381d0be514c2a1" translate="yes" xml:space="preserve">
          <source>The file to which standard output (&lt;code&gt;stdout&lt;/code&gt;) is sent.</source>
          <target state="translated">표준 출력 ( &lt;code&gt;stdout&lt;/code&gt; )이 전송 되는 파일 입니다.</target>
        </trans-unit>
        <trans-unit id="fd43b3cd909c741d3c7b819cd7693b7c13f23fb0" translate="yes" xml:space="preserve">
          <source>The file-based resources have attributes that support unique requirements within the Microsoft Windows platform, including &lt;code&gt;inherits&lt;/code&gt; (for file inheritance), &lt;code&gt;mode&lt;/code&gt; (for octal modes), and &lt;code&gt;rights&lt;/code&gt; (for access control lists, or ACLs).</source>
          <target state="translated">파일 기반 리소스에는 &lt;code&gt;inherits&lt;/code&gt; (파일 상속 용), &lt;code&gt;mode&lt;/code&gt; (8 진수 모드 용) 및 &lt;code&gt;rights&lt;/code&gt; (액세스 제어 목록 또는 ACL 용)을 포함하여 Microsoft Windows 플랫폼 내에서 고유 한 요구 사항을 지원하는 속성이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5adcf4fbca9aa735ff08376d94f72c8ea0f9910d" translate="yes" xml:space="preserve">
          <source>The filename for the finished artifact. By default, Chef Habitat ] constructs this from &lt;code&gt;pkg_name&lt;/code&gt; and &lt;code&gt;pkg_version&lt;/code&gt;. Type: string. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="translated">완성 된 아티팩트의 파일 이름입니다. 기본적으로 Chef Habitat]은 &lt;code&gt;pkg_name&lt;/code&gt; 및 &lt;code&gt;pkg_version&lt;/code&gt; 에서이를 구성합니다 . 유형 : 문자열. &lt;em&gt;선택 사항&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="987261b73160951eea87bf69d8b7ea62d2b1351f" translate="yes" xml:space="preserve">
          <source>The fingerprint of the set of labels for this cluster.</source>
          <target state="translated">이 클러스터에 대한 라벨 집합의 지문입니다.</target>
        </trans-unit>
        <trans-unit id="997afb5f8bc198772a756a42b23ea1b2f5b83907" translate="yes" xml:space="preserve">
          <source>The fingerprint used for optimistic locking of this resource. Used internally during updates.</source>
          <target state="translated">이 리소스의 낙관적 잠금에 사용되는 지문입니다. 업데이트 중에 내부적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="64a71ac0520cff4df7c293653b0e87813b50c32c" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;let&lt;/code&gt; statement creates the &lt;code&gt;:sum&lt;/code&gt; symbol, and then assigns it the value of one plus one. The &lt;code&gt;expect&lt;/code&gt; statement later in the test uses &lt;code&gt;sum&lt;/code&gt; to test that one plus one equals two</source>
          <target state="translated">첫 번째 &lt;code&gt;let&lt;/code&gt; 문은 &lt;code&gt;:sum&lt;/code&gt; 기호를 만든 다음 1 + 1의 값을 할당합니다. 테스트 뒷부분 의 &lt;code&gt;expect&lt;/code&gt; 문은 &lt;code&gt;sum&lt;/code&gt; 을 사용 하여 1 더하기 1이 2와 같은지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="0167460699bb1410e098904b81c64e9ed21113b2" translate="yes" xml:space="preserve">
          <source>The first Chef Infra Client run, by default, contains an empty run-list. A &lt;a href=&quot;../workstation/knife_bootstrap/index&quot;&gt;run-list can be specified&lt;/a&gt; as part of the initial bootstrap operation using the &lt;code&gt;--run-list&lt;/code&gt; option as part of the &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">기본적으로 첫 번째 Chef Infra Client 실행에는 빈 실행 목록이 포함됩니다. &lt;a href=&quot;../workstation/knife_bootstrap/index&quot;&gt;실행 목록을 지정할 수 있습니다&lt;/a&gt; 사용하여 초기 부트 스트랩 작업의 일부로 &lt;code&gt;--run-list&lt;/code&gt; 의 일부로서 옵션 &lt;code&gt;knife bootstrap&lt;/code&gt; 부속 명령을.</target>
        </trans-unit>
        <trans-unit id="982c6d06f90b4ab953e6f0b80b1a81b7f2d471f2" translate="yes" xml:space="preserve">
          <source>The first Supervisor will block until it has quorum. You would start additional members by pointing them at the ring, using the &lt;code&gt;--peer&lt;/code&gt; argument:</source>
          <target state="translated">첫 번째 감독자는 정족수가 될 때까지 차단됩니다. &lt;code&gt;--peer&lt;/code&gt; 인수를 사용하여 링에서 추가 멤버를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="3466a4838f267d4706eaf771c0d0fb6be0972745" translate="yes" xml:space="preserve">
          <source>The first argument of &lt;code&gt;execvp&lt;/code&gt;, typically the file name associated with the file to be executed. This value must be specified if &lt;code&gt;program_arguments&lt;/code&gt; is not specified, and vice-versa.</source>
          <target state="translated">&lt;code&gt;execvp&lt;/code&gt; 의 첫 번째 인수 , 일반적으로 실행할 파일과 연관된 파일 이름입니다. &lt;code&gt;program_arguments&lt;/code&gt; 가 지정되지 않은 경우이 값을 지정해야하며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="0f852a995ce4bde868ed8771e5e0ca566aaa5f5d" translate="yes" xml:space="preserve">
          <source>The first chef-client run, by default, contains an empty run-list. A &lt;a href=&quot;knife_bootstrap&quot;&gt;run-list can be specified&lt;/a&gt; as part of the initial bootstrap operation using the &lt;code&gt;--run-list&lt;/code&gt; option as part of the &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">첫 번째 요리사 클라이언트 실행에는 기본적으로 빈 실행 목록이 포함됩니다. &lt;a href=&quot;knife_bootstrap&quot;&gt;실행 목록을 지정할 수 있습니다&lt;/a&gt; 사용하여 초기 부트 스트랩 작업의 일부로 &lt;code&gt;--run-list&lt;/code&gt; 의 일부로서 옵션 &lt;code&gt;knife bootstrap&lt;/code&gt; 부속 명령을.</target>
        </trans-unit>
        <trans-unit id="9ec40eb463559daa4f7dc229f3be295bb1ec0395" translate="yes" xml:space="preserve">
          <source>The first is to set the &lt;code&gt;compile_time&lt;/code&gt; property on the resource. To maintain the same behavior as before, the property should be set to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">첫 번째는 리소스에 &lt;code&gt;compile_time&lt;/code&gt; 속성 을 설정하는 것 입니다. 이전과 동일한 동작을 유지하려면 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="80c145045eebfb39ed24ac7c19068c5925224afa" translate="yes" xml:space="preserve">
          <source>The first member of this service group, or the leader, if running in a leader topology</source>
          <target state="translated">이 서비스 그룹의 첫 번째 구성원 또는 리더 (리더 토폴로지에서 실행중인 경우)</target>
        </trans-unit>
        <trans-unit id="749d5907e7206c59d62a79cfa92d171cc52d6dcc" translate="yes" xml:space="preserve">
          <source>The first member of this service group. If the group is running in a leader topology, this will also be the leader.</source>
          <target state="translated">이 서비스 그룹의 첫 번째 구성원입니다. 그룹이 리더 토폴로지에서 실행중인 경우이 그룹도 리더가됩니다.</target>
        </trans-unit>
        <trans-unit id="e2f5c7008cd0771f841965a3a4fc652566b6d490" translate="yes" xml:space="preserve">
          <source>The first node must be bootstrapped to initialize the cluster. The node used to bootstrap the cluster will be the cluster leader when the cluster comes online. After bootstrap completes this node is no different from any other back-end node.</source>
          <target state="translated">클러스터를 초기화하려면 첫 번째 노드를 부트 스트랩해야합니다. 클러스터를 부트 스트랩하는 데 사용되는 노드는 클러스터가 온라인 상태가 될 때 클러스터 리더가됩니다. 부트 스트랩이 완료된 후이 노드는 다른 백엔드 노드와 다르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="895d621fb97752717ef520519b97e2bd4e86d9d9" translate="yes" xml:space="preserve">
          <source>The first reason is that they are fully automated. Once you ship a change into Union, it will automatically move through the Rehearsal and Delivered stages if all of the automated checks are successful.</source>
          <target state="translated">첫 번째 이유는 완전히 자동화되어 있기 때문입니다. 변경 사항을 Union으로 배송하면 모든 자동 확인이 성공하면 자동으로 리허설 및 배달 단계를 거치게됩니다.</target>
        </trans-unit>
        <trans-unit id="ff21ea8ba2ea5a828e7deba235cf4c08fa9d3bf4" translate="yes" xml:space="preserve">
          <source>The first rule should contain two conditions. Fill in the first condition with attribute &lt;code&gt;Environment&lt;/code&gt;, operator &lt;code&gt;equals&lt;/code&gt;, and value &lt;code&gt;dev&lt;/code&gt;, or any value matching your data set. Select &lt;code&gt;Add Condition&lt;/code&gt; to add another condition with attribute &lt;code&gt;Chef Tag&lt;/code&gt;, operator &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;devops-123&lt;/code&gt;. Save the rule.</source>
          <target state="translated">첫 번째 규칙에는 두 가지 조건이 포함되어야합니다. 첫 번째 조건을 &lt;code&gt;Environment&lt;/code&gt; 속성 , operator &lt;code&gt;equals&lt;/code&gt; 및 값 &lt;code&gt;dev&lt;/code&gt; 또는 데이터 세트와 일치하는 값으로 채우 십시오. &lt;code&gt;Add Condition&lt;/code&gt; 선택 하여 &lt;code&gt;Chef Tag&lt;/code&gt; , operator &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;devops-123&lt;/code&gt; 속성이있는 다른 조건을 추가 합니다. 규칙을 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="e89e2dbc47acf093efc1c1d9e0ce581a4b6b74a1" translate="yes" xml:space="preserve">
          <source>The first thing it will do is attempt to promote itself to DRBD primary, which will fail if the disk has been written to at all while this host was down, and Keepalived will be unable to transition back to the original master. This leaves the pair of servers in a good state, with the second back-end box as the DRBD primary Chef server master.</source>
          <target state="translated">첫 번째로 DRBD 기본으로 승격하려고 시도합니다.이 호스트가 다운 된 상태에서 디스크가 전혀 기록되지 않으면 Keepalived가 원래 마스터로 다시 전환 할 수 없게됩니다. DRBD 기본 Chef 서버 마스터로 두 번째 백엔드 상자를 사용하여 서버 쌍을 양호한 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="06e1028c78562a4325f79ff042915d32595e8bc0" translate="yes" xml:space="preserve">
          <source>The fixed config file location &lt;code&gt;/hab/sup/default/config/sup.toml&lt;/code&gt; on the Supervisor</source>
          <target state="translated">Supervisor 의 고정 구성 파일 위치 &lt;code&gt;/hab/sup/default/config/sup.toml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="baca375bc7ecc41e66025395aa983a836bbbd1ea" translate="yes" xml:space="preserve">
          <source>The folder&amp;rsquo;s display name. A folder&amp;rsquo;s display name must be unique amongst its siblings, e.g. no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: &lt;code&gt;[\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?&lt;/code&gt;.</source>
          <target state="translated">폴더의 표시 이름입니다. 폴더의 표시 이름은 형제간에 고유해야합니다. 예를 들어 상위가 동일한 두 폴더가 동일한 표시 이름을 공유 할 수 없습니다. 표시 이름은 문자 또는 숫자로 시작하고 끝나야하며 문자, 숫자, 공백, 하이픈 및 밑줄을 포함 할 수 있으며 30자를 넘을 수 없습니다. 다음 정규식으로 캡처됩니다. &lt;code&gt;[\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72b717222ceb8972ae0e75ae48cd727e32f2b6eb" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;control_group&lt;/code&gt; ensures that MySQL is installed, that PostgreSQL is not installed, and that the services and configuration files associated with MySQL are configured correctly:</source>
          <target state="translated">다음 &lt;code&gt;control_group&lt;/code&gt; 은 MySQL이 설치되고 PostgreSQL이 설치되지 않으며 MySQL과 관련된 서비스 및 구성 파일이 올바르게 구성되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="98bd545c7888c699017db63b6628a0425fa8f8f1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;control_group&lt;/code&gt; verifies that the &lt;code&gt;git&lt;/code&gt; package has been installed:</source>
          <target state="translated">다음 &lt;code&gt;control_group&lt;/code&gt; 은 &lt;code&gt;git&lt;/code&gt; 패키지가 설치 되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="2aa400d054349b07a528c6a6076fabed79a43e83" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife bootstrap&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife bootstrap&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a85aa37dd80f50b6d2fbcf584d40ab6d9a43d00d" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife bootstrap&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife bootstrap&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5708344404817475c35d52b1b1c8ab8c6ca1802c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife client create&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife client create&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98f3edd42c9295ca26649f439866a28529ea8d71" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife client create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife client create&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c93d545409516700235be150f7882e3101c4304" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife client reregister&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife client reregister&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4aa8a24ad4e0c6f132c2fe9dc67719ae136bfd9c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife client reregister&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife client reregister&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b350df992c706ab5049f9a611b174caeefa1ec3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife configure&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife configure&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="546a58b2d3833239fbfe616a18e76392a9e06da3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife configure&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife configure&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="458e48a2184e1cd84d29439bb846f0de64064d02" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook bulk delete&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook bulk delete&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c12fb2c1101d6d8811e9213ddc902f1df1292d1e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook bulk delete&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook bulk delete&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6692a91abe731c1404e5ceb67d64fbe9630ddb49" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook create&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook create&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd79a4eb474cbd67985c0892892ce389be97a7f1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46f8d5dc2a009ea61a21988d53daa2a2c7b01570" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook delete&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook delete&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbd4e5965bfc1fb773cfdf552c3c6599a024ab62" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook delete&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook delete&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03cf621fcef766028b042ab5e208b2e897ccb559" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook download&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook download&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2710e43f12e075f1c879551c926fc08c8c33b168" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook download&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook download&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="947ef1142a237e265fb4ad4467d68739763e958e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook list&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook list&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e46e769e6c5ef1529302fe3cb389e9a958652ebf" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook list&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook list&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db4e5e7c7d1d6d217106f841b204d3ed8641ac3d" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook metadata&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook metadata&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5455d808bdefce62e611999d199dacf675458212" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook metadata&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife cookbook metadata&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53874c75b928c689854aa4d6ee0578e68fafcfaa" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook show&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook show&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28ada1d09c1eafaae5ed9c9823d9703c3fce94c7" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook show&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook show&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="651a8e5a16dfdd38b874a2504878926ae364094e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook site download&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook site download&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee44ee892eda39b593f5c32b92c938446b7f1f5f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook site install&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook site install&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad9a413917ed38ad19eccf90a27cb2974b17086e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook site share&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife cookbook site share&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="749491475550772ef3b1128280c023fc4e155092" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook test&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook test&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90ea929b93a90dc79a955e3375b6f5f234860db2" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook upload&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife cookbook upload&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30ef9784cfc4578e3b632e9aa9c7c9f127d90f98" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife cookbook upload&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife cookbook upload&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="474a434c9f14598de6c23a5eacfa8b9a7178804e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag create&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife data bag create&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5d7ddd685c9bf24060e07268f5790391ab33229" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife data bag create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b6fcaa0a38bd0833f6a829692079529b01a9f7e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag edit&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife data bag edit&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="713249e929196a20d9768d396b61f7ba83e04e92" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag edit&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife data bag edit&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7654fd05f8a2f46b36d2b9994270381bfcb3be10" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag from file&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">&lt;code&gt;knife data bag from file&lt;/code&gt; 설정 의 다음 나이프 데이터 백을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1dfbfbd6fa02a68f7f006092123da7b5ead5dca" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife data bag from file&lt;/code&gt; 설정 의 다음 나이프 데이터 백을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c747eaac35e319efbea9fc76f90afcd5cca720a1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag show&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife data bag show&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7873712b4fe5c695f5e70ddf6605c38ca515b04f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife data bag show&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife data bag show&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33879eb1027732b3d2c90e1c298afd1094385ef6" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife delete&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife delete&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="145ad039a4eac508d91fbde1039c3bdfb9c28aef" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife delete&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife delete&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3f615557fabb62e93ac07f829324978de4287c2" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife deps&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife deps&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="677479f7802d037d0f026fafa571ff7463dee06d" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife deps&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife deps&lt;/code&gt; 깊이 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dff82fe9f428bc4c7160bbf00f1feb428fb484e5" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife diff&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife diff&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52188117d45e76872a3844974cbbb12f2a58052a" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife diff&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife diff&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ec01e1e90f0ae2c15de8244084fe400f3da9fd1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife download&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife download&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0474cbd6fd4d1b7e86b13bb6688a4b216b9c56f1" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife download&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife download&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aba26cf5af7e6765f85e7ece4eb61b00ae62dcfc" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife edit&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife edit&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91355f35f5f9fadb4b4521db948e5937004a5ace" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife edit&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife edit&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4a2f68f9fb8476edaaf6230b578c5186237efc3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife environment create&lt;/code&gt; settings can be added to the &lt;code&gt;config.rb&lt;/code&gt; file:</source>
          <target state="translated">다음 &lt;code&gt;knife environment create&lt;/code&gt; 설정을 &lt;code&gt;config.rb&lt;/code&gt; 파일에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a2c8cac3f843c6e673d601711606d57f3b14330" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife environment create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife environment create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33c0edc011707437800bf64bd0b2911e571aad0c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife environment from file&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">&lt;code&gt;knife environment from file&lt;/code&gt; 설정 에서 다음과 같은 나이프 환경을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bbee768d70a402db45b3158713b3fe221287f47" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife environment from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife environment from file&lt;/code&gt; 설정 에서 다음과 같은 나이프 환경을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e8d0fb3d07449d783b9bb93a702178de1a8040a" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife exec&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife exec&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b19c275ae23740a7a2b058a17addb3b99f4a0454" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife exec&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife exec&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2767381ed11fd83bd86ac5b5f32677033797efa0" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife list&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife list&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91bbdb2a6f65f6e751ad858e6b3e8c4502147002" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife list&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife list&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01b4d4c6c87c3b73b2d585c3a96945cd2a4d8b5b" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node from file&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">&lt;code&gt;knife node from file&lt;/code&gt; 설정 의 다음 나이프 노드를 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a612f9fb0a94a4e4631a02296d7e73f9f56ff09" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife node from file&lt;/code&gt; 설정 에서 다음과 같은 나이프 노드를 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d56f96d0043385dde6f500a9354cf849eb960d19" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node list&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife node list&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d480dfebc925c5919aae2bccb8a330921207f61c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node list&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife node list&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="030da0ef811e9fe1e26d2c145e9ae8a88262b3f3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node run list add&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife node run list add&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ab6a4eacb20cdeaf4fea2eb930e9937f424b8fb" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node run list add&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife node run list add&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b44ffcc5bfe727a2422c37cf79f795d37c6a5eef" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node run list remove&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife node run list remove&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="447868b32f6ba03d049db20c1836e96d47c4b4c2" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife node run list remove&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife node run list remove&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0660610fe6dd35fda65fe329ae36778061f544c5" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife raw&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife raw&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d0d1f91360bb582ea43937dd7d0e9023039622e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife raw&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife raw&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c284e54d6925314cdfc520a15b0b89290c02dd75" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role create&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife role create&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="050d7aa6e75cd5f2966afd5925c4af1122b7b909" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife role create&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe4ce190ec239bbd825717246cfd2ec2628d5b94" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role from file&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">&lt;code&gt;knife role from file&lt;/code&gt; 설정 에서 다음 칼 역할을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1053f95a7980a0fe124cb8d08d39a3507e7fa164" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role from file&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">&lt;code&gt;knife role from file&lt;/code&gt; 설정 에서 다음과 같은 나이프 역할을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f6055c9135706f6693ba651b2907524e2f28de6" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role show&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife role show&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24c3608942633b6896dafe66be3cd8221dcdf2e4" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife role show&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife role show&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be31b562f2a3d4a454aa854bbea4f84326ae2982" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife ssh&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife ssh&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2c84011513eb451a54a2309b30bf195f7397e3c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife ssh&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife ssh&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83fba17adfffc57b46b4f43c9dc4501540bf0e97" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife status&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife status&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9eeff03403853f8a5fd04918ef6997b8f3fb6f4" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife status&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife status&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d0d21b1364113bc8496f38e0ad7c4b367f848fc" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife supermarket download&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife supermarket download&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e919493432865e1f315f0bb6e8785d1bffb18942" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife supermarket install&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife supermarket install&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="549c19f7a376b45a1496625b36ad8ae5d038bc3f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife supermarket share&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife supermarket share&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cdb8eefb7157c812b3aa382abc4ddfec4698f3f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife upload&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife upload&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24ade3602832182b5833648b02bf2cc719c069d9" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife upload&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음과 같은 &lt;code&gt;knife upload&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc674bf2e7bc76c7bb17b1daaed4454baa67c497" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife user create&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife user create&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6adf282fb52edbfe348bf389529d7b310083aab" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife user create&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife user create&lt;/code&gt; 설정을 knife.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c04b3175fb3d9662dad94011035993aeeef67d3f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife user reregister&lt;/code&gt; settings can be added to the config.rb file:</source>
          <target state="translated">다음 &lt;code&gt;knife user reregister&lt;/code&gt; 설정을 config.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e74833a0fc69a59df563993be56b92fcee2e263d" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;knife user reregister&lt;/code&gt; settings can be added to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 다음 &lt;code&gt;knife user reregister&lt;/code&gt; 설정을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8849cbc39607f6e35699bd740e74b592fed056b0" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;rakefile&lt;/code&gt; can be used to update Chef, Ohai, and cookbooks. Edit as necessary:</source>
          <target state="translated">Chef, Ohai 및 요리 책을 업데이트하는 데 다음 &lt;code&gt;rakefile&lt;/code&gt; 사용할 수 있습니다. 필요에 따라 편집하십시오.</target>
        </trans-unit>
        <trans-unit id="59895eb4cf70284209a8a7e1608d4214221b37f7" translate="yes" xml:space="preserve">
          <source>The following Chef Automate-specific helpers can be used in recipes:</source>
          <target state="translated">다음과 같은 Chef Automate 관련 도우미를 레시피에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5998e4e5753d2463b305538a9022084364edf0e" translate="yes" xml:space="preserve">
          <source>The following Gems must be accessible via your Gem mirror:</source>
          <target state="translated">다음 보석은 보석 미러를 통해 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8279a4fa0e745332a9e32e6a380c77232f11982b" translate="yes" xml:space="preserve">
          <source>The following IAM policy describes the basic permissions Chef Automate requires to run backup and restore operations.</source>
          <target state="translated">다음 IAM 정책은 Chef Automate가 백업 및 복원 작업을 실행하는 데 필요한 기본 권한을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="fbf9842a8e40b810726934847e7b2eeef57a7f4f" translate="yes" xml:space="preserve">
          <source>The following InSpec-supported universal matchers are available:</source>
          <target state="translated">다음 InSpec 지원 범용 매처를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c68af72198d6df6aad8dc73a90cd370b07467c1b" translate="yes" xml:space="preserve">
          <source>The following Microsoft Windows platform-specific helpers can be used in recipes:</source>
          <target state="translated">레시피에 다음 Microsoft Windows 플랫폼 별 헬퍼를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="698a3d732d0d5c0164d7aa5cee08f7cf8bd12982" translate="yes" xml:space="preserve">
          <source>The following Name Id policies are not supported by Chef Automate: Transient, X509Subject.</source>
          <target state="translated">다음 이름 ID 정책은 Chef Automate에서 지원되지 않습니다. Transient, X509Subject.</target>
        </trans-unit>
        <trans-unit id="616a6601b44562159756d721506f26c303d02f9a" translate="yes" xml:space="preserve">
          <source>The following Ohai example shows a plugin can use a &lt;code&gt;mixin&lt;/code&gt; library and also depend on another plugin:</source>
          <target state="translated">다음 Ohai 예제는 플러그인이 &lt;code&gt;mixin&lt;/code&gt; 라이브러리를 사용할 수 있고 다른 플러그인에도 의존 할 수 있음을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="aa06ea55b77d5fb4cd9ac44c2c058797e63e5509" translate="yes" xml:space="preserve">
          <source>The following Ohai example shows part of a file that gets initial kernel attribute values:</source>
          <target state="translated">다음 Ohai 예제는 초기 커널 속성 값을 가져 오는 파일의 일부를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="74871bee9fad9b053dca01a779bbf9f43513ff7b" translate="yes" xml:space="preserve">
          <source>The following Ohai plugin uses multiple &lt;code&gt;collect_data&lt;/code&gt; blocks and shared methods to define platforms:</source>
          <target state="translated">다음 Ohai 플러그인은 여러 &lt;code&gt;collect_data&lt;/code&gt; 블록과 공유 메소드를 사용하여 플랫폼을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="3fe3c86513b4b718928e6d56cc729d7c4793c9a9" translate="yes" xml:space="preserve">
          <source>The following Ohai plugins are available from the open source community:</source>
          <target state="translated">오픈 소스 커뮤니티에서 다음 Ohai 플러그인을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3023b0908b15c11994af91131e5af921230ab357" translate="yes" xml:space="preserve">
          <source>The following Powershell script:</source>
          <target state="translated">다음 Powershell 스크립트 :</target>
        </trans-unit>
        <trans-unit id="1c750d2c646f1493fd8adfbfe64aa80f36795db9" translate="yes" xml:space="preserve">
          <source>The following Ruby gems are required to install private Supermarket via the supermarket-omnibus-cookbook:</source>
          <target state="translated">Supermarket-omnibus-cookbook을 통해 개인 슈퍼마켓을 설치하려면 다음 Ruby gem이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="006f5d7d335ca5490a618cc6d09bd6a8452c0d86" translate="yes" xml:space="preserve">
          <source>The following RubyGems options are available for inclusion within a hash and are passed to the RubyGems DependencyInstaller:</source>
          <target state="translated">다음 RubyGems 옵션은 해시에 포함 할 수 있으며 RubyGems DependencyInstaller로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3e24707b3429cf59b379a9bfd5c68dc9030234ac" translate="yes" xml:space="preserve">
          <source>The following actions may be used with any resource:</source>
          <target state="translated">모든 자원에 다음 조치를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbed97956a7f089ace51f8955aaab2c592f6f648" translate="yes" xml:space="preserve">
          <source>The following are a list of general hardware requirements for both frontend and backend servers. The important guideline you should follow are that frontend servers tend to be more CPU bound and backend servers are more disk and memory bound. Also, disk space for backend servers should scale up with the number of nodes that the servers are managing. A good rule to follow is to allocate 2 MB per node. The disk values listed below should be a good default value that you will want to modify later if/when your node count grows.</source>
          <target state="translated">다음은 프런트 엔드 및 백엔드 서버 모두에 대한 일반적인 하드웨어 요구 사항 목록입니다. 따라야 할 중요한 지침은 프런트 엔드 서버는 CPU에 더 많이 의존하고 백엔드 서버는 디스크와 메모리에 더 많이 의존한다는 것입니다. 또한 백엔드 서버의 디스크 공간은 서버가 관리하는 노드 수에 따라 확장되어야합니다. 따라야 할 좋은 규칙은 노드 당 2MB를 할당하는 것입니다. 아래 나열된 디스크 값은 노드 수가 증가 할 때 / 나중에 수정할 수있는 좋은 기본값이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b5d8e73396073b5bea1c099faca61fc1aba3d058" translate="yes" xml:space="preserve">
          <source>The following are recommended security group rules for Chef Automate from the AWS Marketplace:</source>
          <target state="translated">다음은 AWS Marketplace에서 Chef Automate에 권장되는 보안 그룹 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="ab69fe6aa2a94cb73c9ee61899eaa5ce0fb129a2" translate="yes" xml:space="preserve">
          <source>The following are the configuration parameters available:</source>
          <target state="translated">다음은 사용 가능한 구성 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="f4615c6ca9650008706ba185ffa91c7ee18b8ecd" translate="yes" xml:space="preserve">
          <source>The following are the current supported reporters:</source>
          <target state="translated">다음은 현재 지원되는 리포터입니다.</target>
        </trans-unit>
        <trans-unit id="573aa56f33ef492f72714593d8c4ecca694049cf" translate="yes" xml:space="preserve">
          <source>The following are the various roles of our &lt;strong&gt;Community Organizers&lt;/strong&gt; and the person(s) assigned to each role:</source>
          <target state="translated">다음은 &lt;strong&gt;커뮤니티 조직자&lt;/strong&gt; 의 다양한 역할 과 각 역할에 할당 된 사람입니다.</target>
        </trans-unit>
        <trans-unit id="e7edd7f0522cfcf4b5d9deb237a79a9e0d0587a3" translate="yes" xml:space="preserve">
          <source>The following arguments can be used with the &lt;code&gt;not_if&lt;/code&gt; or &lt;code&gt;only_if&lt;/code&gt; guard properties:</source>
          <target state="translated">&lt;code&gt;not_if&lt;/code&gt; 또는 &lt;code&gt;only_if&lt;/code&gt; guard 특성 과 함께 다음 인수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf1a49fe7d15e53207382866e6d4d16a2fdcdee9" translate="yes" xml:space="preserve">
          <source>The following assumptions exist when the Chef server is deployed in a high availability topology:</source>
          <target state="translated">Chef 서버가 고 가용성 토폴로지에 배치 된 경우 다음 가정이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="dca4c3e9abb9e3952c868a50d8328c216752620d" translate="yes" xml:space="preserve">
          <source>The following attribute values must be defined:</source>
          <target state="translated">다음 속성 값을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="bdc8b2b604271bf635f95f3b3708ce367f24122b" translate="yes" xml:space="preserve">
          <source>The following attributes &lt;strong&gt;MUST&lt;/strong&gt; be in the user LDAP record:</source>
          <target state="translated">다음 속성 &lt;strong&gt;은 반드시&lt;/strong&gt; 사용자 LDAP 레코드에 &lt;strong&gt;있어야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ec653cbb51121ee6c6b1defe64d869e6f52f9520" translate="yes" xml:space="preserve">
          <source>The following attributes &lt;strong&gt;SHOULD&lt;/strong&gt; be in the user LDAP record:</source>
          <target state="translated">다음 속성은 &lt;strong&gt;안된다&lt;/strong&gt; 사용자의 LDAP 레코드 수 :</target>
        </trans-unit>
        <trans-unit id="dd2f88a59dbfe5d292b7313244992e761c619ad9" translate="yes" xml:space="preserve">
          <source>The following attributes are used to configure &lt;code&gt;kitchen-vagrant&lt;/code&gt; for Chef:</source>
          <target state="translated">다음 속성은 Chef 용 &lt;code&gt;kitchen-vagrant&lt;/code&gt; 를 구성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d54a02a4c2ae9afb89e27f47c8720e839368c199" translate="yes" xml:space="preserve">
          <source>The following attributes can be configured:</source>
          <target state="translated">다음 속성을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b44bb82d1a0a45e9aa6fa018980370c12575986b" translate="yes" xml:space="preserve">
          <source>The following authentication headers are required:</source>
          <target state="translated">다음과 같은 인증 헤더가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="69cc9adc27b8d0d0299283ba062c263c890bec78" translate="yes" xml:space="preserve">
          <source>The following callback types are available:</source>
          <target state="translated">다음과 같은 콜백 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48ba6bfd45680229d02aaedf82f613b7889b2d1f" translate="yes" xml:space="preserve">
          <source>The following changes were made during certain chef-client release prior to the chef-client 12 release:</source>
          <target state="translated">chef-client 12 릴리스 이전의 특정 chef-client 릴리스 동안 다음과 같은 변경이있었습니다.</target>
        </trans-unit>
        <trans-unit id="09a2c080c000a952f81d13a37d891f209497f336" translate="yes" xml:space="preserve">
          <source>The following code shows the start handler used by the Reporting add-in for the Chef Infra Server:</source>
          <target state="translated">다음 코드는 Chef Infra Server 용보고 추가 기능에서 사용하는 시작 핸들러를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0b01cf94c0d423914096c9304656c1eec92bde12" translate="yes" xml:space="preserve">
          <source>The following code shows the start handler used by the Reporting add-in for the Chef server:</source>
          <target state="translated">다음 코드는 Chef 서버의보고 추가 기능에서 사용되는 시작 처리기를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="273d3a033d4dd6f6843436142a66fc84b2d540b0" translate="yes" xml:space="preserve">
          <source>The following commands are built into the &lt;code&gt;chef&lt;/code&gt; executable and support the use of Policyfile files.</source>
          <target state="translated">다음 명령은 &lt;code&gt;chef&lt;/code&gt; 실행 파일에 내장되어 있으며 Policyfile 파일 사용을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="fc6ed0eefc2da0f6b325309479d2ef3b7d33cd9c" translate="yes" xml:space="preserve">
          <source>The following commands are disabled when an external PostgreSQL database is configured for the Chef Infra Server: &lt;code&gt;hup&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, &lt;code&gt;service-list&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, and &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server에 대해 외부 PostgreSQL 데이터베이스가 구성된 경우 다음 명령이 비활성화됩니다 : &lt;code&gt;hup&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;kill&lt;/code&gt; , &lt;code&gt;once&lt;/code&gt; , &lt;code&gt;restart&lt;/code&gt; , &lt;code&gt;service-list&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;stop&lt;/code&gt; , &lt;code&gt;tail&lt;/code&gt; 및 &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ee3561af913e39eef7ea5a5fbd38846285abf6b" translate="yes" xml:space="preserve">
          <source>The following commands are disabled when an external PostgreSQL database is configured for the Chef Infra Server: &lt;code&gt;hup&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, and &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server에 대해 외부 PostgreSQL 데이터베이스가 구성된 경우 다음 명령이 비활성화됩니다 : &lt;code&gt;hup&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;kill&lt;/code&gt; , &lt;code&gt;once&lt;/code&gt; , &lt;code&gt;restart&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;stop&lt;/code&gt; , &lt;code&gt;tail&lt;/code&gt; 및 &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55864d8f80dc912b3b4edd1a9ffc0c5c53711480" translate="yes" xml:space="preserve">
          <source>The following commands are disabled when an external PostgreSQL database is configured for the Chef server: &lt;code&gt;hup&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt;, &lt;code&gt;restart&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;, and &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">Chef 서버에 대해 외부 PostgreSQL 데이터베이스가 구성된 경우 &lt;code&gt;hup&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;kill&lt;/code&gt; , &lt;code&gt;once&lt;/code&gt; , &lt;code&gt;restart&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;stop&lt;/code&gt; , &lt;code&gt;tail&lt;/code&gt; 및 &lt;code&gt;term&lt;/code&gt; 명령이 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="017b817904990e7ecf0f010085dc2dcdd3adf733" translate="yes" xml:space="preserve">
          <source>The following commands properly set up disk configuration on the backend server:</source>
          <target state="translated">다음 명령은 백엔드 서버에서 디스크 구성을 올바르게 설정합니다.</target>
        </trans-unit>
        <trans-unit id="82395bd65aadafc94dc44a3922f383f8bbc156ef" translate="yes" xml:space="preserve">
          <source>The following commands would properly set up the backend disk configuration for DRBD:</source>
          <target state="translated">다음 명령은 DRBD에 대한 백엔드 디스크 구성을 올바르게 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e9353e7ac13a8846618d4ebcbd7f9e05d30a484e" translate="yes" xml:space="preserve">
          <source>The following complete example tests the &lt;code&gt;pg_hba.conf&lt;/code&gt; file in PostgreSQL for MD5 requirements. The tests look at all &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt; settings in that file, and then compare the MD5 checksums against the values in the test:</source>
          <target state="translated">다음 전체 예제 는 MD5 요구 사항에 대해 PostgreSQL 의 &lt;code&gt;pg_hba.conf&lt;/code&gt; 파일을 테스트합니다 . 테스트 는 해당 파일의 모든 &lt;code&gt;host&lt;/code&gt; 및 &lt;code&gt;local&lt;/code&gt; 설정을 확인한 다음 MD5 체크섬을 테스트의 값과 비교합니다.</target>
        </trans-unit>
        <trans-unit id="a33a807f265f2330fc0860b070d7eadb62356014" translate="yes" xml:space="preserve">
          <source>The following components should be monitored for signs that disks may be rapidly filling up:</source>
          <target state="translated">디스크가 빠르게 채워지는 징후가 있는지 다음 구성 요소를 모니터링해야합니다.</target>
        </trans-unit>
        <trans-unit id="e87ac676412a27822377c1e23b590f8b213602e3" translate="yes" xml:space="preserve">
          <source>The following cookbooks can be used to load handlers during a Chef Infra Client run.</source>
          <target state="translated">다음 쿡북은 Chef Infra Client 실행 중에 핸들러를로드하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e106e846a88dee9632c70ff94abb3a16ac826c0" translate="yes" xml:space="preserve">
          <source>The following cookbooks can be used to load handlers during the chef-client run.</source>
          <target state="translated">chef-client 실행 중에 다음 쿡북을 사용하여 핸들러를로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e653953c3b69f6e5f0c59d8682b70cf8e40dfd2" translate="yes" xml:space="preserve">
          <source>The following curl script will install Chef InSpec for Ubuntu and Red Hat Enterprise Linux:</source>
          <target state="translated">다음 curl 스크립트는 Ubuntu 및 Red Hat Enterprise Linux 용 Chef InSpec을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="a391f8f5d605928a2a79f45ed77d1abed2a4f92f" translate="yes" xml:space="preserve">
          <source>The following custom handler defines how cookbooks and cookbook versions that are used during a Chef Infra Client run will be compiled into a report using the &lt;code&gt;Chef::Log&lt;/code&gt; class in Chef Infra Client:</source>
          <target state="translated">다음 사용자 지정 처리기는 Chef Infra Client 실행 중에 사용되는 쿡북 및 쿡북 버전이 Chef Infra Client의 &lt;code&gt;Chef::Log&lt;/code&gt; 클래스를 사용하여 보고서로 컴파일되는 방법을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="6e4fd7974c4bd5c3ee5ad0bb73607555c173b034" translate="yes" xml:space="preserve">
          <source>The following custom handler defines how cookbooks and cookbook versions that are used during the chef-client run will be compiled into a report using the &lt;code&gt;Chef::Log&lt;/code&gt; class in the chef-client:</source>
          <target state="translated">다음 사용자 정의 핸들러는 chef-client 실행 중에 사용되는 요리 책 및 요리 책 버전이 chef-client의 &lt;code&gt;Chef::Log&lt;/code&gt; 클래스를 사용하여 보고서로 컴파일되는 방법을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="9cac224f3e85270f946d3f1faba26d1c59778903" translate="yes" xml:space="preserve">
          <source>The following database options are available:</source>
          <target state="translated">다음 데이터베이스 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df4ad63cc882ca52f319232bf7cec77faa284780" translate="yes" xml:space="preserve">
          <source>The following definition processes unique hostnames and ports, passed on as parameters:</source>
          <target state="translated">다음 정의는 고유 호스트 이름 및 포트를 처리하고 매개 변수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="6c303a8bcb39d79aee6ea11edca0fb08582287e6" translate="yes" xml:space="preserve">
          <source>The following definition uses the &lt;strong&gt;template&lt;/strong&gt; resource for Debian-specific cases, but then the &lt;strong&gt;link&lt;/strong&gt; resource for everything else:</source>
          <target state="translated">다음 정의는 데비안 고유의 경우 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스를 사용 하지만 그 밖의 모든 경우에는 &lt;strong&gt;링크&lt;/strong&gt; 리소스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="91283ea474207fec9a78340d98ff06ea733f2b8c" translate="yes" xml:space="preserve">
          <source>The following diagram highlights the specific changes that occur when PostgreSQL is configured and managed independently of the Chef Infra Server configuration.</source>
          <target state="translated">다음 다이어그램은 PostgreSQL이 Chef Infra Server 구성과 독립적으로 구성 및 관리 될 때 발생하는 특정 변경 사항을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="b1442a2e59f0d07ca37636115c81bc73211294a5" translate="yes" xml:space="preserve">
          <source>The following diagram highlights the specific changes that occur when PostgreSQL is configured and managed independently of the Chef server configuration.</source>
          <target state="translated">다음 다이어그램은 PostgreSQL이 Chef 서버 구성과 독립적으로 구성 및 관리 될 때 발생하는 특정 변경 사항을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="14862b4b15870f66560f654fe215e0f66ed0073f" translate="yes" xml:space="preserve">
          <source>The following diagram highlights the specific changes that occur when cookbooks are stored at an external location, such as Amazon Simple Storage Service (S3).</source>
          <target state="translated">다음 다이어그램은 요리 책이 Amazon Simple Storage Service (S3)와 같은 외부 위치에 저장 될 때 발생하는 특정 변경 사항을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="e328da13f79ec2480860e9bf108081049d450276" translate="yes" xml:space="preserve">
          <source>The following diagram shows the new policy structure. We detail the specifics in the next sections.</source>
          <target state="translated">다음 다이어그램은 새로운 정책 구조를 보여줍니다. 세부 사항은 다음 섹션에서 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e27e38b5a21c552e3f8c67f63ccafcd49700af0f" translate="yes" xml:space="preserve">
          <source>The following diagram shows the relationships between the various elements of Chef Infra, including the nodes, the server, and the workstation. These elements work together to provide the Chef Infra Client the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image.</source>
          <target state="translated">다음 다이어그램은 노드, 서버 및 워크 스테이션을 포함하여 Chef Infra의 다양한 요소 간의 관계를 보여줍니다. 이러한 요소는 함께 작동하여 Chef Infra Client가 작업을 수행하는 데 필요한 정보와 지침을 제공합니다. 이 항목의 나머지 부분을 검토 할 때 표의 아이콘을 사용하여이 이미지를 다시 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4ffcb79daf39b7e294ec1e98d93c2ec24474babc" translate="yes" xml:space="preserve">
          <source>The following diagram shows the relationships between the various elements of Chef, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the chef-client the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image.</source>
          <target state="translated">다음 다이어그램은 노드, 서버, 서버의 프리미엄 기능 및 워크 스테이션을 포함하여 Chef의 다양한 요소 간의 관계를 보여줍니다. 이 요소들은 함께 작동하여 요리사 클라이언트에게 작업을 수행하는 데 필요한 정보와 지침을 제공합니다. 이 주제의 나머지 부분을 검토 할 때 표의 아이콘을 사용하여이 이미지를 다시 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7fd347afbc3a5e00c1a0ec2b27493abc7c40a1d2" translate="yes" xml:space="preserve">
          <source>The following diagram shows the servers that are involved in a Chef Automate installation.</source>
          <target state="translated">다음 다이어그램은 Chef Automate 설치와 관련된 서버를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1f36b17a1514d86e91917c615b9b4120962cf729" translate="yes" xml:space="preserve">
          <source>The following diagram shows the stages of the bootstrap operation, and the list below the diagram describes each of those stages in greater detail.</source>
          <target state="translated">다음 다이어그램은 부트 스트랩 작업의 단계를 보여 주며 다이어그램 아래의 목록은 각 단계를 더 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d9ab816b5772920ca65b47c3bad4e5613a233cf7" translate="yes" xml:space="preserve">
          <source>The following diagram shows the stages of the bootstrap operation, and then the list below the diagram describes in greater detail each of those stages.</source>
          <target state="translated">다음 다이어그램은 부트 스트랩 작업의 단계를 보여주고 다이어그램 아래의 목록은 각 단계를보다 자세하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="4dfd9ada7cab0ea35484fc1cd7a03f28a6c71e2e" translate="yes" xml:space="preserve">
          <source>The following diagram shows the various components of Chef Push Jobs:</source>
          <target state="translated">다음 다이어그램은 Chef 푸시 작업의 다양한 구성 요소를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3ab3ddee4fb2be0b2321dd35eb90f02611a70a7c" translate="yes" xml:space="preserve">
          <source>The following diagram shows the various components that are part of a Chef Infra Server deployment and how they relate to one another.</source>
          <target state="translated">다음 다이어그램은 Chef Infra Server 배포의 일부인 다양한 구성 요소와 이러한 구성 요소가 서로 관련되는 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a8d0db860c1b4755ad489062b6b905a7c8b0e51c" translate="yes" xml:space="preserve">
          <source>The following diagram shows the various components that are part of a Chef server deployment and how they relate to one another.</source>
          <target state="translated">다음 다이어그램은 Chef 서버 배포의 일부인 다양한 구성 요소와 서로 관련되는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6d4c25828177c3c70193a74103e5cc26517a9e01" translate="yes" xml:space="preserve">
          <source>The following error messages may be present when configuring the Chef Infra Server to use a remote PostgreSQL server.</source>
          <target state="translated">원격 PostgreSQL 서버를 사용하도록 Chef Infra Server를 구성 할 때 다음 오류 메시지가 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cfe33d27e6d1b7f259b8a9549a8a60edba9cc7c" translate="yes" xml:space="preserve">
          <source>The following example creates a file on a node (based on one that is located in a cookbook), unpacks the &lt;code&gt;MessageQueue.zip&lt;/code&gt; Windows PowerShell module, and then uses the &lt;strong&gt;dsc_resource&lt;/strong&gt; to ensure that Message Queuing (MSMQ) sub-features are installed, a test queue is created, and that permissions are set on the test queue:</source>
          <target state="translated">다음 예제는 요리 책에있는 파일을 기반으로 노드에 파일을 만들고 &lt;code&gt;MessageQueue.zip&lt;/code&gt; Windows PowerShell 모듈의 압축을 &lt;strong&gt;푼&lt;/strong&gt; 다음 &lt;strong&gt;dsc_resource&lt;/strong&gt; 를 사용하여 메시지 큐 (MSMQ) 하위 기능이 설치되었는지 확인합니다. 테스트 큐가 작성되고 해당 권한이 테스트 큐에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2e696c8bd8b6bca7ce5b0be1fe4f0ab3919de1ba" translate="yes" xml:space="preserve">
          <source>The following example creates a windows service, defines it&amp;rsquo;s execution path, and prevents windows from starting the service in case the executable is not at the defined location:</source>
          <target state="translated">다음 예제에서는 Windows 서비스를 만들고 실행 경로를 정의하며 실행 파일이 정의 된 위치에없는 경우 Windows가 서비스를 시작하지 못하도록합니다.</target>
        </trans-unit>
        <trans-unit id="4fff374bad34a301d487347c7baeb4394c0d1f25" translate="yes" xml:space="preserve">
          <source>The following example creates symbolic links from two files in the &lt;code&gt;/vol/webserver/cert/&lt;/code&gt; directory to files located in the &lt;code&gt;/etc/ssl/certs/&lt;/code&gt; directory:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/vol/webserver/cert/&lt;/code&gt; 디렉토리의 두 파일에서 &lt;code&gt;/etc/ssl/certs/&lt;/code&gt; 디렉토리 에있는 파일로 심볼릭 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ba1c3eb964b2d4cd5969444d465f632bbceabd6b" translate="yes" xml:space="preserve">
          <source>The following example emulates the entire file specificity pattern by defining it as an explicit path:</source>
          <target state="translated">다음 예제는 전체 파일 특정 패턴을 명시 적 경로로 정의하여 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="64eab4a2a4da2766c6057b4f55213aa29189993d" translate="yes" xml:space="preserve">
          <source>The following example illustrates various ways to add tags and references to &lt;code&gt;control&lt;/code&gt;</source>
          <target state="translated">다음 예제는 &lt;code&gt;control&lt;/code&gt; 할 태그 및 참조를 추가하는 다양한 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c70d08fb3ca0309c5c09e0bf1911271b63ce4e5c" translate="yes" xml:space="preserve">
          <source>The following example installs Windows PowerShell 2.0 on systems that do not already have it installed. Microsoft Windows platform helper methods are used to define specific behaviors for specific platform versions:</source>
          <target state="translated">다음 예제는 Windows PowerShell 2.0을 아직 설치하지 않은 시스템에 설치합니다. Microsoft Windows 플랫폼 헬퍼 메소드는 특정 플랫폼 버전에 대한 특정 동작을 정의하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2ac6a852bbc69dbfc6df54c39f7241e9d7fcf4b" translate="yes" xml:space="preserve">
          <source>The following example is based on a few assumptions:</source>
          <target state="translated">다음 예제는 몇 가지 가정을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="302c95c58f21624d85add03984cfad185dafeeaa" translate="yes" xml:space="preserve">
          <source>The following example sets the &lt;code&gt;fqdn&lt;/code&gt; field to &lt;code&gt;&quot;my-chef-server.mycompany.com&quot;&lt;/code&gt; in two front-end servers.</source>
          <target state="translated">다음 예제 에서는 두 개의 프런트 엔드 서버에서 &lt;code&gt;fqdn&lt;/code&gt; 필드를 &lt;code&gt;&quot;my-chef-server.mycompany.com&quot;&lt;/code&gt; 으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fbe5805e5d09ea881325069b1cb9e8486c77eb91" translate="yes" xml:space="preserve">
          <source>The following example shows Identity and Access Management (IAM) access management settings that are required for Chef high availability:</source>
          <target state="translated">다음 예는 Chef 고 가용성에 필요한 IAM (Identity and Access Management) 액세스 관리 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2e409e6ff7e5939f90d9a32505ba931208a3a01d" translate="yes" xml:space="preserve">
          <source>The following example shows a chef-server.rb file:</source>
          <target state="translated">다음 예제는 chef-server.rb 파일을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="844d1d1e9082a7fe9fa1b0b0a97992db00c5a9af" translate="yes" xml:space="preserve">
          <source>The following example shows a full resource using attributes and methods to provide simple access to a configuration file:</source>
          <target state="translated">다음 예제는 구성 파일에 대한 간단한 액세스를 제공하기 위해 속성 및 메소드를 사용하는 전체 리소스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b237d54f28a3b18fe115f6cdd8931d83c1651e96" translate="yes" xml:space="preserve">
          <source>The following example shows a run-time dependency against the master branch of a project named &lt;code&gt;BackendAPI&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;BackendAPI&lt;/code&gt; 라는 프로젝트의 마스터 분기에 대한 런타임 종속성을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b076f5a1167f4b2fbec41ce578c1af92d08abf26" translate="yes" xml:space="preserve">
          <source>The following example shows a schedule that will run at 8:00 PM, every weekday (Monday through Friday), but only in November:</source>
          <target state="translated">다음 예는 매주 (월요일에서 금요일까지) 오후 8시에 실행되지만 11 월에만 실행되는 스케줄을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1db1ade951c067c3cb0a281ff7014357482fabe2" translate="yes" xml:space="preserve">
          <source>The following example shows a schedule that will run every hour at 8:00 each Saturday morning, and will then send an email to &amp;ldquo;&lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com&lt;/a&gt;&amp;rdquo; after each run.</source>
          <target state="translated">다음 예는 매주 토요일 오전 8시에 실행되는 일정을 보여 주며, 각 실행 후 &amp;ldquo; &lt;a href=&quot;mailto:admin%40example.com&quot;&gt;admin@example.com&lt;/a&gt; &amp;rdquo;으로 전자 메일을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="909277ca6e3d9f694a544527bc403f40b2ef4151" translate="yes" xml:space="preserve">
          <source>The following example shows a schedule that will run every hour at 8:00 each Saturday morning, and will then send an email to &amp;ldquo;&lt;a href=&quot;mailto:admin@example.com&quot;&gt;admin@example.com&lt;/a&gt;&amp;rdquo; after each run.</source>
          <target state="translated">다음 예는 매주 토요일 오전 8시에 매시간 실행 된 다음 각 실행 후 &quot; &lt;a href=&quot;mailto:admin@example.com&quot;&gt;admin@example.com&lt;/a&gt; &quot;으로 이메일을 보내는 일정을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9f528db5eb148ed5c8b25f521de26c05c1ed0e8b" translate="yes" xml:space="preserve">
          <source>The following example shows a series of fatal &lt;code&gt;Chef::Log&lt;/code&gt; entries:</source>
          <target state="translated">다음 예제는 일련의 치명적인 &lt;code&gt;Chef::Log&lt;/code&gt; 항목을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e85c0043ad5423658f92522c8e267b4d63156368" translate="yes" xml:space="preserve">
          <source>The following example shows a way create a file in the &lt;code&gt;/baz&lt;/code&gt; directory:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/baz&lt;/code&gt; 디렉토리에 파일을 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0f0e75e04c0a8e15e5e08bd8c3134b973e0c866c" translate="yes" xml:space="preserve">
          <source>The following example shows an authentication request:</source>
          <target state="translated">다음 예는 인증 요청을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d045257b2825fedc56427cc0c413bda6a2f0ceab" translate="yes" xml:space="preserve">
          <source>The following example shows how Bash can be used to install a plug-in for rbenv named &lt;code&gt;ruby-build&lt;/code&gt;, which is located in git version source control. First, the application is synchronized, and then Bash changes its working directory to the location in which &lt;code&gt;ruby-build&lt;/code&gt; is located, and then runs a command.</source>
          <target state="translated">다음 예제는 Bash를 사용하여 git 버전 소스 제어에있는 &lt;code&gt;ruby-build&lt;/code&gt; 라는 rbenv 용 플러그인을 설치하는 방법을 보여줍니다 . 먼저 응용 프로그램이 동기화 된 다음 Bash가 작업 디렉토리를 &lt;code&gt;ruby-build&lt;/code&gt; 가 있는 위치로 변경 한 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c17cd92d6002d87ac8d4c0cdf3fd6b7d14096f07" translate="yes" xml:space="preserve">
          <source>The following example shows how Bash can be used to install a plug-in for rbenv named ruby-build, which is located in git version source control. First, the application is synchronized, and then Bash changes its working directory to the location in which ruby-build is located, and then runs a command.</source>
          <target state="translated">다음 예제는 Bash를 사용하여 git 버전 소스 제어에있는 ruby-build라는 rbenv 용 플러그인을 설치하는 방법을 보여줍니다. 먼저 응용 프로그램이 동기화되고 Bash는 작업 디렉토리를 ruby-build가있는 위치로 변경 한 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="df04cc65d8bd370f599347368ab2fd3d9808ef7b" translate="yes" xml:space="preserve">
          <source>The following example shows how a case statement can be used to handle a situation where an application needs to be installed on multiple platforms, but where the install directories are different paths, depending on the platform:</source>
          <target state="translated">다음 예제는 애플리케이션을 여러 플랫폼에 설치해야하지만 상황에 따라 설치 디렉토리가 다른 경로를 처리하기 위해 case 문을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="09a7b39a454e2bffef4a706c18e7159bdc60714c" translate="yes" xml:space="preserve">
          <source>The following example shows how a template can be used to apply consistent proxy settings for all nodes of the same type:</source>
          <target state="translated">다음 예제는 템플리트를 사용하여 동일한 유형의 모든 노드에 일관된 프록시 설정을 적용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3873a8dbb6d367d58ca9c428ecf3f0a493ac45ef" translate="yes" xml:space="preserve">
          <source>The following example shows how an if statement can be used with the &lt;code&gt;platform?&lt;/code&gt; method in the Recipe DSL to run code specific to Microsoft Windows. The code is defined using the &lt;strong&gt;ruby_block&lt;/strong&gt; resource:</source>
          <target state="translated">다음 예제는 &lt;code&gt;platform?&lt;/code&gt; 에서 if 문을 사용하는 방법을 보여줍니다 . 레시피 DSL의 메소드를 사용하여 Microsoft Windows에 특정한 코드를 실행하십시오. 코드는 &lt;strong&gt;ruby_block&lt;/strong&gt; 자원을 사용하여 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="e774acec6530fd3662c7a1d71ac730b81a491b4d" translate="yes" xml:space="preserve">
          <source>The following example shows how find a property that may exist against multiple registry keys, and then test that property for every registry key in which that property is located:</source>
          <target state="translated">다음 예제에서는 여러 레지스트리 키에 대해 존재할 수있는 속성을 찾은 다음 해당 속성이있는 모든 레지스트리 키에 대해 해당 속성을 테스트하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d7672020d5a4a1e26a945f8953cc0ea10c6ff4fa" translate="yes" xml:space="preserve">
          <source>The following example shows how pass a value to a template using the &lt;code&gt;variables&lt;/code&gt; property in the &lt;strong&gt;template&lt;/strong&gt; resource. The template file is similar to:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;템플리트&lt;/strong&gt; 자원 의 &lt;code&gt;variables&lt;/code&gt; 속성을 사용하여 값을 템플리트에 전달하는 방법을 보여줍니다 . 템플릿 파일은 다음과 유사합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="493801ff623bec3f944e2c2101f84101d72cd5f9" translate="yes" xml:space="preserve">
          <source>The following example shows how permissions can be set for the &lt;code&gt;/certificates&lt;/code&gt; directory on any node that is running Nginx. In this example, permissions are being set for the &lt;code&gt;owner&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt; properties as &lt;code&gt;root&lt;/code&gt;, and then read/write permissions are granted to the root.</source>
          <target state="translated">다음 예제는 Nginx를 실행하는 모든 노드 에서 &lt;code&gt;/certificates&lt;/code&gt; 디렉토리에 권한을 설정하는 방법을 보여줍니다 . 이 예에서 &lt;code&gt;owner&lt;/code&gt; 및 &lt;code&gt;group&lt;/code&gt; 특성에 대한 권한이 &lt;code&gt;root&lt;/code&gt; 로 설정되고 읽기 / 쓰기 권한이 루트에 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="68d9269c7670976564ffa6c6f4df4ca4fe8b9274" translate="yes" xml:space="preserve">
          <source>The following example shows how read/write/execute permissions can be set using a variable named &lt;code&gt;user_home&lt;/code&gt;, and then for owners and groups on any matching node:</source>
          <target state="translated">다음 예제는 &lt;code&gt;user_home&lt;/code&gt; 이라는 변수를 사용하여 일치하는 노드의 소유자 및 그룹에 대해 읽기 / 쓰기 / 실행 권한을 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e7d1ff019fe5624cc7de27421fa2e56e5fa7332c" translate="yes" xml:space="preserve">
          <source>The following example shows how start a service named &lt;code&gt;example_service&lt;/code&gt; and immediately notify the Nginx service to restart.</source>
          <target state="translated">다음 예제는 &lt;code&gt;example_service&lt;/code&gt; 라는 서비스를 시작하고 즉시 Nginx 서비스에 다시 시작하도록 알리는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b6b90e50963f88eba0b6605032fa8d8dfda0ecbb" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;data_bag&lt;/code&gt; method can be used in a recipe.</source>
          <target state="translated">다음 예는 &lt;code&gt;data_bag&lt;/code&gt; 메소드를 레시피에서 사용 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="adf7e0bb68a532762e1006b0242383ef3ce9b2fa" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand checks for a value in the config.rb file by using the &lt;code&gt;:proc&lt;/code&gt; attribute:</source>
          <target state="translated">다음 예제는 &lt;code&gt;knife bootstrap&lt;/code&gt; 하위 명령이 &lt;code&gt;:proc&lt;/code&gt; 속성 을 사용하여 config.rb 파일의 값을 확인 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fbe5bab7ef62c6bd671f6e4a7dfee1a5f9bd563d" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;platform?&lt;/code&gt; method and an if statement can be used in a recipe along with the &lt;code&gt;ruby_block&lt;/code&gt; resource to run certain blocks of Ruby code on certain platforms:</source>
          <target state="translated">다음 예제는 어떻게 &lt;code&gt;platform?&lt;/code&gt; 특정 플랫폼에서 특정 Ruby 코드 블록을 실행하기 위해 &lt;code&gt;ruby_block&lt;/code&gt; 리소스 와 함께 레시피에서 method 및 if 문을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4f052afb5d9eef322ccb8d7ff9a15069eccbb3b" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;platform?&lt;/code&gt; method can be used in a recipe.</source>
          <target state="translated">다음 예제는 &lt;code&gt;platform?&lt;/code&gt; 방법은 레시피에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39274df486b5b88666bf0214e50b21da50ce6667" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;strong&gt;ruby_block&lt;/strong&gt; resource can be used to update the &lt;code&gt;/etc/hosts&lt;/code&gt; file:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;ruby_block&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;/etc/hosts&lt;/code&gt; 파일 을 업데이트하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6fc4ddfa5dd130913d077a473bd8973c9e79b41f" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;strong&gt;template&lt;/strong&gt; resource can be used in a recipe to combine settings stored in an attributes file, variables within a recipe, and a template to set the IP addresses that are used by the Nginx service. The attributes file contains the following:</source>
          <target state="translated">다음 예는 래서 피에서 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스를 사용하여 속성 파일에 저장된 설정, 래서 피 내의 변수 및 Nginx 서비스가 사용하는 IP 주소를 설정하는 템플릿을 결합하는 방법을 보여줍니다 . 속성 파일에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fbb6c6f9e3aca764e6c250aea67af542ab92762c" translate="yes" xml:space="preserve">
          <source>The following example shows how the Chef Infra Server sets up and configures SSL certificates for Nginx. The cipher suite used by Nginx &lt;a href=&quot;../../server/config_rb_server/index#ssl-protocols&quot;&gt;is configurable&lt;/a&gt; using the &lt;code&gt;ssl_protocols&lt;/code&gt; and &lt;code&gt;ssl_ciphers&lt;/code&gt; settings.</source>
          <target state="translated">다음 예제는 Chef Infra Server가 Nginx에 대한 SSL 인증서를 설정하고 구성하는 방법을 보여줍니다. Nginx에서 사용하는 암호 제품군 은 &lt;code&gt;ssl_protocols&lt;/code&gt; 및 &lt;code&gt;ssl_ciphers&lt;/code&gt; 설정을 사용하여 &lt;a href=&quot;../../server/config_rb_server/index#ssl-protocols&quot;&gt;구성 할&lt;/a&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3a3d940e6e7050a9f0b8dd0410f6ad7afa41fc7" translate="yes" xml:space="preserve">
          <source>The following example shows how the Chef Infra Server sets up and configures SSL certificates for Nginx. The cipher suite used by Nginx &lt;a href=&quot;../server/config_rb_server/index#ssl-protocols&quot;&gt;is configurable&lt;/a&gt; using the &lt;code&gt;ssl_protocols&lt;/code&gt; and &lt;code&gt;ssl_ciphers&lt;/code&gt; settings.</source>
          <target state="translated">다음 예제는 Chef Infra Server가 Nginx에 대한 SSL 인증서를 설정하고 구성하는 방법을 보여줍니다. Nginx에서 사용하는 암호 제품군 은 &lt;code&gt;ssl_protocols&lt;/code&gt; 및 &lt;code&gt;ssl_ciphers&lt;/code&gt; 설정을 사용하여 &lt;a href=&quot;../server/config_rb_server/index#ssl-protocols&quot;&gt;구성 할&lt;/a&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5aa1cc68818f48b01fc96ea54efe4174c0ed262e" translate="yes" xml:space="preserve">
          <source>The following example shows how the Chef server sets up and configures SSL certificates for Nginx. The cipher suite used by Nginx &lt;a href=&quot;config_rb_server#config-rb-server-ssl-protocols&quot;&gt;is configurable&lt;/a&gt; using the &lt;code&gt;ssl_protocols&lt;/code&gt; and &lt;code&gt;ssl_ciphers&lt;/code&gt; settings.</source>
          <target state="translated">다음 예제는 Chef 서버가 Nginx에 대한 SSL 인증서를 설정하고 구성하는 방법을 보여줍니다. Nginx에서 사용하는 암호 제품군 은 &lt;code&gt;ssl_protocols&lt;/code&gt; 및 &lt;code&gt;ssl_ciphers&lt;/code&gt; 설정을 사용하여 &lt;a href=&quot;config_rb_server#config-rb-server-ssl-protocols&quot;&gt;구성 할&lt;/a&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3100226ae1352267565493b190ee4496c9c25dd1" translate="yes" xml:space="preserve">
          <source>The following example shows how the settings look when added to the configuration file:</source>
          <target state="translated">다음 예제는 구성 파일에 추가 될 때 설정이 표시되는 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9d02574d65cb948f6d77729bf04ffce51e975405" translate="yes" xml:space="preserve">
          <source>The following example shows how to add a build cookbook after the initialization process</source>
          <target state="translated">다음 예제는 초기화 프로세스 후 빌드 쿡북을 추가하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a9b656627922cc5741267bbab8a6a11655575b25" translate="yes" xml:space="preserve">
          <source>The following example shows how to add a client named &amp;ldquo;IBM305RAMAC&amp;rdquo; and the &lt;code&gt;/clients&lt;/code&gt; endpoint, and then return the private key for that user in the console:</source>
          <target state="translated">다음 예제는 이름이&amp;ldquo;IBM305RAMAC&amp;rdquo;인 &lt;code&gt;/clients&lt;/code&gt; 와 / clients 엔드 포인트 를 추가 한 후 콘솔에서 해당 사용자의 개인 키를 리턴하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ad89b801504650c5c2c107e682abd9c9cf83c55a" translate="yes" xml:space="preserve">
          <source>The following example shows how to add a rule named &lt;code&gt;test_rule&lt;/code&gt; to an IP table using the &lt;strong&gt;execute&lt;/strong&gt; resource to run a command using a template that is defined by the &lt;strong&gt;template&lt;/strong&gt; resource:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;실행&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;test_rule&lt;/code&gt; 이라는 규칙 을 IP 테이블에 추가하여 &lt;strong&gt;템플리트&lt;/strong&gt; 자원으로 정의 된 템플리트를 사용하여 명령을 실행하는 방법을 보여줍니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70d477a26f674236603a697f5929a150c76b721c" translate="yes" xml:space="preserve">
          <source>The following example shows how to configure Chef Automate to ignore and/or run certain Foodcritic rules, and to exclude running tests that are located in the specified cookbook directories:</source>
          <target state="translated">다음 예제는 특정 Foodcritic 규칙을 무시 및 / 또는 실행하고 지정된 쿡북 디렉토리에있는 실행중인 테스트를 제외하도록 Chef Automate를 구성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c9288b2ab9ad5f07c7d28e129c0be17e62dd778c" translate="yes" xml:space="preserve">
          <source>The following example shows how to copy a file from one directory to another, locally on a node:</source>
          <target state="translated">다음 예제는 파일을 한 디렉토리에서 다른 디렉토리로 노드의 로컬로 복사하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3838cfd2ec6fa14f609765fffcc10b6819b5277c" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a cookbook, with a project and a pipeline, configure it to be built with Chef Automate, and then import it into Chef Automate itself. From your workstation as user with admin privileges on the Chef Automate server, do the following:</source>
          <target state="translated">다음 예제는 프로젝트와 파이프 라인이있는 쿡북을 만들고 Chef Automate로 빌드되도록 구성한 다음 Chef Automate 자체로 가져 오는 방법을 보여줍니다. Chef Automate 서버에 대한 관리자 권한이있는 사용자로서 워크 스테이션에서 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="107e869c3be07c1a4bbc478abd57368fa179411b" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a cookbook, with project and pipeline, configure it to be built with Chef Automate, and then imported it into Chef Automate itself. From your workstation as user with admin privileges on the Chef Automate server, do the following:</source>
          <target state="translated">다음 예제는 프로젝트 및 파이프 라인이있는 쿡북을 만들고 Chef Automate로 빌드하도록 구성한 다음 Chef Automate 자체로 가져 오는 방법을 보여줍니다. Chef Automate 서버에 대한 관리자 권한이있는 사용자로서 워크 스테이션에서 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7c6e3b4f54ff95bfad1bd4395fc1e07af2224c57" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a system user. In this instance, the &lt;code&gt;home&lt;/code&gt; value is calculated and stored in a variable called &lt;code&gt;user_home&lt;/code&gt; which sets the user&amp;rsquo;s &lt;code&gt;home&lt;/code&gt; attribute.</source>
          <target state="translated">다음 예제는 시스템 사용자를 작성하는 방법을 보여줍니다. 이 경우, &lt;code&gt;home&lt;/code&gt; 값은 계산되어 사용자의 &lt;code&gt;home&lt;/code&gt; 속성 을 설정하는 &lt;code&gt;user_home&lt;/code&gt; 이라는 변수에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="f851c464fb9fca42f5df4f8395560dbc6c850794" translate="yes" xml:space="preserve">
          <source>The following example shows how to display the content of all groups on the server:</source>
          <target state="translated">다음 예제는 서버에서 모든 그룹의 컨텐츠를 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="289203a109714bc0c56d841e599b533d209a16fe" translate="yes" xml:space="preserve">
          <source>The following example shows how to enable a fictional &amp;lsquo;MyHandler&amp;rsquo; handler which is located on disk at &lt;code&gt;/etc/chef/my_handler.rb&lt;/code&gt;. The handler will be configured to run with Chef Infra Client and will be passed values to the handler&amp;rsquo;s initializer method:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/etc/chef/my_handler.rb&lt;/code&gt; 의 디스크에있는 가상의 'MyHandler'핸들러를 활성화하는 방법을 보여줍니다 . 핸들러는 Chef Infra Client와 함께 실행되도록 구성되며 핸들러의 이니셜 라이저 메서드에 값이 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="7c4983e2e914e429fa1f2889b70d496bc95ef537" translate="yes" xml:space="preserve">
          <source>The following example shows how to enable the &lt;code&gt;CloudkickHandler&lt;/code&gt; handler, which adds it to the default handler path and passes the &lt;code&gt;oauth&lt;/code&gt; key/secret to the handler&amp;rsquo;s initializer:</source>
          <target state="translated">다음 예제는 &lt;code&gt;CloudkickHandler&lt;/code&gt; 핸들러 를 활성화하는 방법을 보여줍니다.이 핸들러는 기본 핸들러 경로에 추가하고 &lt;code&gt;oauth&lt;/code&gt; 키 / 비밀을 핸들러의 이니셜 라이저로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9209243bc3cd26199b8655a6f24191f2fe7ea191" translate="yes" xml:space="preserve">
          <source>The following example shows how to get the contents of a data bag item named &lt;code&gt;impossible_things&lt;/code&gt;, create a .pem file located at &lt;code&gt;some/directory/path/&lt;/code&gt;, and then use the &lt;code&gt;content&lt;/code&gt; attribute to update the contents of that file with the value of the &lt;code&gt;impossible_things&lt;/code&gt; data bag item:</source>
          <target state="translated">다음 예제는 &lt;code&gt;impossible_things&lt;/code&gt; 라는 데이터 백 항목의 컨텐츠를 가져 오고 &lt;code&gt;some/directory/path/&lt;/code&gt; 에있는 .pem 파일을 작성한 후 &lt;code&gt;content&lt;/code&gt; 속성을 사용 하여 &lt;code&gt;impossible_things&lt;/code&gt; 값으로 해당 파일의 컨텐츠를 업데이트하는 방법을 보여줍니다. 데이터 백 항목 :</target>
        </trans-unit>
        <trans-unit id="ccafcd01e82d80bfc63efbc1e329707c9bb28557" translate="yes" xml:space="preserve">
          <source>The following example shows how to install a lightweight JavaScript framework into Vagrant:</source>
          <target state="translated">다음 예제는 경량 JavaScript 프레임 워크를 Vagrant에 설치하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f17042444c6ce2670eba7161874d422ba58ce680" translate="yes" xml:space="preserve">
          <source>The following example shows how to install a service:</source>
          <target state="translated">다음 예제는 서비스를 설치하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cf179ed9213a1dda42d93abf828438db5e388ad4" translate="yes" xml:space="preserve">
          <source>The following example shows how to install new Yum repositories from a file, where the installation of the repository triggers a creation of the Yum cache that forces the internal cache for Chef Infra Client to reload:</source>
          <target state="translated">다음 예는 파일에서 새 Yum 리포지토리를 설치하는 방법을 보여줍니다. 리포지토리를 설치하면 Chef Infra Client에 대한 내부 캐시를 강제로 다시로드하는 Yum 캐시가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="bed6cc2ef44ab522c5dca2338cb1061d8f35796e" translate="yes" xml:space="preserve">
          <source>The following example shows how to install new Yum repositories from a file, where the installation of the repository triggers a creation of the Yum cache that forces the internal cache for the chef-client to reload:</source>
          <target state="translated">다음 예는 파일에서 새 Yum 리포지토리를 설치하는 방법을 보여줍니다. 여기서 리포지토리를 설치하면 chef-client의 내부 캐시를 강제로 다시로드하는 Yum 캐시가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="03d0c3fafb0af7ed8565c89d9d22f3f3f647ecb0" translate="yes" xml:space="preserve">
          <source>The following example shows how to install sudo and then configure the &lt;code&gt;/etc/sudoers&lt;/code&gt; file:</source>
          <target state="translated">다음 예제는 sudo를 설치 한 후 &lt;code&gt;/etc/sudoers&lt;/code&gt; 파일 을 구성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5f51d5d429a6758e6292656625785f4de1310772" translate="yes" xml:space="preserve">
          <source>The following example shows how to install the crond application using two resources and a variable:</source>
          <target state="translated">다음 예제는 두 가지 자원과 변수를 사용하여 crond 응용 프로그램을 설치하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="632835599e751deb680725c209cf99e62c8dd7bb" translate="yes" xml:space="preserve">
          <source>The following example shows how to modify the default script for Microsoft Windows and Windows PowerShell:</source>
          <target state="translated">다음 예제는 Microsoft Windows 및 Windows PowerShell의 기본 스크립트를 수정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="886601b0d5a0c4f91601b9489aebeb2d01a2cd77" translate="yes" xml:space="preserve">
          <source>The following example shows how to modify the default script for Ubuntu 14.04. First, copy the bootstrap template from the default location. If the chef-client is installed from a RubyGems, the full path can be found in the gem contents. For example:</source>
          <target state="translated">다음 예제는 Ubuntu 14.04의 기본 스크립트를 수정하는 방법을 보여줍니다. 먼저 기본 위치에서 부트 스트랩 템플릿을 복사하십시오. chef-client가 RubyGems에서 설치되는 경우 전체 컨텐츠는 gem 컨텐츠에서 찾을 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="462732922869ad299fd598b2a741b0326663b7e7" translate="yes" xml:space="preserve">
          <source>The following example shows how to prevent concurrent Chef Infra Client runs from both holding a lock on etcd:</source>
          <target state="translated">다음 예제는 동시 Chef Infra Client 실행이 etcd에 대한 잠금을 유지하는 것을 방지하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9c13a7d68a053523dedfe9eb6173400b179ec281" translate="yes" xml:space="preserve">
          <source>The following example shows how to prevent concurrent chef-client runs from both holding a lock on etcd:</source>
          <target state="translated">다음 예제는 동시 요리사 클라이언트 실행이 etcd에 대한 잠금을 유지하지 못하게하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9b00c7e5f3e8167270c2d974b505beef4a554325" translate="yes" xml:space="preserve">
          <source>The following example shows how to query the Chef Infra Server API for a listing of organizations and users. The &lt;code&gt;/organizations&lt;/code&gt; and &lt;code&gt;/users&lt;/code&gt; endpoints may only be accessed by the &lt;code&gt;pivotal&lt;/code&gt; user, which is a user account that is created by Chef during the installation of the Chef Infra Server.</source>
          <target state="translated">다음 예제는 Chef Infra Server API에 조직 및 사용자 목록을 쿼리하는 방법을 보여줍니다. &lt;code&gt;/organizations&lt;/code&gt; 및 &lt;code&gt;/users&lt;/code&gt; 엔드 포인트에만 액세스 할 수 있습니다 &lt;code&gt;pivotal&lt;/code&gt; 요리사 인프라 서버를 설치하는 동안 요리사에 의해 생성되는 사용자 계정 사용자.</target>
        </trans-unit>
        <trans-unit id="39da3d0c6bccc555552395d749d1e28201e0262c" translate="yes" xml:space="preserve">
          <source>The following example shows how to query the Chef server API for a listing of organizations and users. The &lt;code&gt;/organizations&lt;/code&gt; and &lt;code&gt;/users&lt;/code&gt; endpoints may only be accessed by the &lt;code&gt;pivotal&lt;/code&gt; user, which is a user account that is created by Chef during the installation of the Chef server.</source>
          <target state="translated">다음 예제는 조직 및 사용자 목록에 대해 Chef 서버 API를 조회하는 방법을 보여줍니다. &lt;code&gt;/organizations&lt;/code&gt; 및 &lt;code&gt;/users&lt;/code&gt; 엔드 포인트에만 액세스 할 수 있습니다 &lt;code&gt;pivotal&lt;/code&gt; 요리사 서버를 설치하는 동안 요리사에 의해 생성되는 사용자 계정 사용자.</target>
        </trans-unit>
        <trans-unit id="f60c57a53a80504f015d3b3eb95d0afd44ed8f88" translate="yes" xml:space="preserve">
          <source>The following example shows how to recreate a data bag item:</source>
          <target state="translated">다음 예제는 데이터 백 항목을 다시 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b363bad33a0c473cb2fe7f3277410ae76f22976f" translate="yes" xml:space="preserve">
          <source>The following example shows how to reload the configuration of a chef-client using the &lt;strong&gt;remote_file&lt;/strong&gt; resource to:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;remote_file&lt;/strong&gt; 자원을 사용하여 chef-client 구성을 다시로드하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="19af7dfc2f1576a6f460e0a382e12b762d18a4cf" translate="yes" xml:space="preserve">
          <source>The following example shows how to rename a computer, join a domain, and then reboot the computer:</source>
          <target state="translated">다음 예는 컴퓨터 이름을 바꾸고 도메인에 가입 한 다음 컴퓨터를 재부팅하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="de7ec4943af796a86813d1cc95e7e7eaa557e8f0" translate="yes" xml:space="preserve">
          <source>The following example shows how to run &lt;code&gt;bundle install&lt;/code&gt; from a Chef Infra Client run as a specific user. This will put the gem into the path of the user (&lt;code&gt;vagrant&lt;/code&gt;) instead of the root user (under which the Chef Infra Client runs):</source>
          <target state="translated">다음 예제는 특정 사용자로 실행되는 Chef Infra Client에서 &lt;code&gt;bundle install&lt;/code&gt; 를 실행하는 방법을 보여줍니다 . 이렇게하면 루트 사용자 (Chef Infra Client가 실행되는) 대신 사용자 ( &lt;code&gt;vagrant&lt;/code&gt; ) 의 경로에 gem이 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="982cb4b526daa9e7c3be660ed06d36ba57072020" translate="yes" xml:space="preserve">
          <source>The following example shows how to run &lt;code&gt;bundle install&lt;/code&gt; from a chef-client run as a specific user. This will put the gem into the path of the user (&lt;code&gt;vagrant&lt;/code&gt;) instead of the root user (under which the chef-client runs):</source>
          <target state="translated">다음 예제는 특정 사용자로 chef-client 실행에서 &lt;code&gt;bundle install&lt;/code&gt; 를 실행하는 방법을 보여줍니다 . 이것은 gem을 ( &lt;code&gt;vagrant&lt;/code&gt; 사용자가 실행 하는 ) 루트 사용자 대신 사용자 경로 ( vagrant )에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="76e4842045d05d2915a124bc2474d13978416de1" translate="yes" xml:space="preserve">
          <source>The following example shows how to run &lt;code&gt;mkdir test_dir&lt;/code&gt; from a Chef Infra Client run as an alternate user.</source>
          <target state="translated">다음 예제는 대체 사용자로 실행되는 Chef Infra Client에서 &lt;code&gt;mkdir test_dir&lt;/code&gt; 을 실행하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ac4ce91a42e8e43094376791dcda6bafbf5c9b1f" translate="yes" xml:space="preserve">
          <source>The following example shows how to set the administrator for Nagios on multiple nodes, except when the package already exists on a node:</source>
          <target state="translated">다음 예제는 패키지가 이미 노드에 존재하는 경우를 제외하고 여러 노드에서 Nagios의 관리자를 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7e19fa8822fcaa48d9887c174a172781225dd369" translate="yes" xml:space="preserve">
          <source>The following example shows how to set up IPv4 packet forwarding using the &lt;strong&gt;execute&lt;/strong&gt; resource to run a command named &lt;code&gt;forward_ipv4&lt;/code&gt; that uses a template defined by the &lt;strong&gt;template&lt;/strong&gt; resource.</source>
          <target state="translated">다음 예는 &lt;strong&gt;템플릿&lt;/strong&gt; 리소스에서 정의한 템플릿을 사용하는 &lt;code&gt;forward_ipv4&lt;/code&gt; 라는 명령을 실행하기 &lt;strong&gt;위해 실행&lt;/strong&gt; 리소스를 사용하여 IPv4 패킷 전달을 설정하는 방법을 보여줍니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="131a4f1c783c026e7b220cef62dfb1e12754046d" translate="yes" xml:space="preserve">
          <source>The following example shows how to set up IPv4 packet forwarding using the &lt;strong&gt;execute&lt;/strong&gt; resource to run a command named &lt;code&gt;forward_ipv4&lt;/code&gt; that uses a template defined by the &lt;strong&gt;template&lt;/strong&gt; resource:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;실행&lt;/strong&gt; 자원을 사용하여 IPv4 패킷 전달을 설정 하여 &lt;strong&gt;템플리트&lt;/strong&gt; 자원으로 정의 된 템플리트를 사용하는 &lt;code&gt;forward_ipv4&lt;/code&gt; 라는 명령을 실행하는 방법을 보여줍니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94d104f000d75b02ac4fd8cbd649d7bee92d66e1" translate="yes" xml:space="preserve">
          <source>The following example shows how to specify build nodes to be used for specific phases.</source>
          <target state="translated">다음 예제는 특정 단계에 사용할 빌드 노드를 지정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3f875a5fe12d3b2e010d6f6568c5824f6da1f781" translate="yes" xml:space="preserve">
          <source>The following example shows how to specify custom configuration data using the &lt;code&gt;configuration_data&lt;/code&gt; property:</source>
          <target state="translated">다음 예제는 &lt;code&gt;configuration_data&lt;/code&gt; 특성을 사용하여 사용자 정의 구성 데이터를 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="76fac1ff306fa1c4e1224a840df5a7fd67f018ee" translate="yes" xml:space="preserve">
          <source>The following example shows how to specify custom configuration data using the &lt;code&gt;configuration_name&lt;/code&gt; property. For example, the following Windows PowerShell script defines the &lt;code&gt;vi&lt;/code&gt; configuration:</source>
          <target state="translated">다음 예제는 &lt;code&gt;configuration_name&lt;/code&gt; 특성을 사용하여 사용자 정의 구성 데이터를 지정하는 방법을 보여줍니다 . 예를 들어 다음 Windows PowerShell 스크립트는 &lt;code&gt;vi&lt;/code&gt; 구성을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="07a4d92a9a71c8378e400b9dd83e6bb1fbc18b1e" translate="yes" xml:space="preserve">
          <source>The following example shows how to upload a file to the ring:</source>
          <target state="translated">다음 예제는 링에 파일을 업로드하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b873fb926fae7f83b89f0e8e6eb04cc631eba528" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;not_if&lt;/code&gt; to guard against running the &lt;code&gt;apt-get-update&lt;/code&gt; command when a file already exists that is the same as the updated file:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 를 사용 하여 업데이트 된 파일과 동일한 파일이 이미 존재하는 경우 &lt;code&gt;apt-get-update&lt;/code&gt; 명령 실행을 방지 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7767a15c1ad77a4a25c11ea3d09fbe1abc3a609c" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;not_if&lt;/code&gt; to prevent ZeroMQ from being installed when the node on which the install is to occur has a version of Red Hat Enterprise Linux that is older than version 6.0:</source>
          <target state="translated">다음 예는 &lt;code&gt;not_if&lt;/code&gt; 를 사용 하여 설치가 발생할 노드에 버전 6.0 이전의 Red Hat Enterprise Linux 버전이있는 경우 ZeroMQ가 설치되지 않도록 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f11fb0c49c98996259099df22df13b7b2db86bbc" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; to ensure that Chef Infra Client will attempt to register ASP.NET only if the executable is installed on the system, on both 32- and 64-bit systems:</source>
          <target state="translated">다음 예제는 32 비트 및 64 비트 시스템 모두에서 실행 파일이 시스템에 설치된 경우에만 Chef Infra Client가 ASP.NET 등록을 시도 하도록 &lt;code&gt;only_if&lt;/code&gt; 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f6cdcdcb4e130051f2a4685191da4215597f5fee" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; to ensure that the chef-client will attempt to register ASP.NET only if the executable is installed on the system, on both 32- and 64-bit systems:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 를 사용 하여 실행 파일이 32 비트 및 64 비트 시스템 모두에 시스템에 설치된 경우에만 chef-client가 ASP.NET을 등록하려고 시도 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1b5b7016f950bd959c989b136c99cf46bddaf70e" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; to only remove a recipe named &lt;code&gt;recipe[ntp::undo]&lt;/code&gt;, but only when that recipe is part of the &lt;code&gt;recipe[ntp::default]&lt;/code&gt; run-list:</source>
          <target state="translated">다음 예는 &lt;code&gt;only_if&lt;/code&gt; 를 사용 하여 &lt;code&gt;recipe[ntp::undo]&lt;/code&gt; 라는 레시피 만 제거하고 레시피 가 &lt;code&gt;recipe[ntp::default]&lt;/code&gt; 실행 목록의 일부인 경우 에만 제거하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fc4c8f9d4647d6949364b139c82ee3803c7460ea" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the &lt;code&gt;/attributes/default.rb&lt;/code&gt; file: &lt;code&gt;use_openssl&lt;/code&gt;, &lt;code&gt;use_pcre&lt;/code&gt;, and &lt;code&gt;use_zlib&lt;/code&gt;. Each of these attributes are defined as &lt;code&gt;false&lt;/code&gt; by default. The &lt;code&gt;only_if&lt;/code&gt; attributes are used to test for the presence of these packages on the target node before then asking Chef Infra Client to complete the process of installing these packages. If the packages are already present, Chef Infra Client will do nothing.</source>
          <target state="translated">다음 예제는 필요한 경우에만 패키지가 설치되도록하기 위해 하나 이상의 쿡북 속성과 함께 &lt;code&gt;only_if&lt;/code&gt; 를 사용하는 방법을 보여줍니다 . 이 경우 &lt;code&gt;/attributes/default.rb&lt;/code&gt; 파일에는 &lt;code&gt;use_openssl&lt;/code&gt; , &lt;code&gt;use_pcre&lt;/code&gt; 및 &lt;code&gt;use_zlib&lt;/code&gt; 의 세 가지 속성이 있습니다 . 이러한 각 속성은 기본적 으로 &lt;code&gt;false&lt;/code&gt; 로 정의됩니다 . &lt;code&gt;only_if&lt;/code&gt; 속성은이 패키지를 설치하는 과정을 완료하는 요리사 인프라 클라이언트를 요청하기 전에 대상 노드에이 패키지의 존재를 테스트하는 데 사용됩니다. 패키지가 이미있는 경우 Chef Infra Client는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="25bff19070bb6aa2e0db524be3ddd9d02e108ad6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use &lt;code&gt;only_if&lt;/code&gt; with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the &lt;code&gt;/attributes/default.rb&lt;/code&gt; file: &lt;code&gt;use_openssl&lt;/code&gt;, &lt;code&gt;use_pcre&lt;/code&gt;, and &lt;code&gt;use_zlib&lt;/code&gt;. Each of these attributes are defined as &lt;code&gt;false&lt;/code&gt; by default. The &lt;code&gt;only_if&lt;/code&gt; attributes are used to test for the presence of these packages on the target node before then asking the chef-client to complete the process of installing these packages. If the packages are already present, the chef-client will do nothing.</source>
          <target state="translated">다음 예제는 하나 이상의 요리 책 속성과 함께 &lt;code&gt;only_if&lt;/code&gt; 를 사용 하여 필요할 때만 패키지가 설치되도록하는 방법을 보여줍니다 . 이 경우, &lt;code&gt;/attributes/default.rb&lt;/code&gt; 파일 에는 세 가지 속성 인 &lt;code&gt;use_openssl&lt;/code&gt; , &lt;code&gt;use_pcre&lt;/code&gt; 및 &lt;code&gt;use_zlib&lt;/code&gt; 가 있습니다. 이러한 각 속성은 기본적 으로 &lt;code&gt;false&lt;/code&gt; 로 정의됩니다 . &lt;code&gt;only_if&lt;/code&gt; 속성은이 패키지를 설치하는 과정을 완료 요리사 클라이언트를 요청하기 전에 대상 노드에이 패키지의 존재를 테스트하는 데 사용됩니다. 패키지가 이미 존재하면 요리사 클라이언트는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11bde4d4a738e7787c490566de57caebf1b67944" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a Ruby whitespace array to define a list of configuration tools, and then use that list of tools within the &lt;strong&gt;template&lt;/strong&gt; resource to ensure that all of these configuration tools are using the same RSA key:</source>
          <target state="translated">다음 예제는 Ruby 공백 배열을 사용하여 구성 도구 목록을 정의한 후 &lt;strong&gt;템플리트&lt;/strong&gt; 자원 내에서 해당 도구 목록을 사용하여 모든 구성 도구가 동일한 RSA 키를 사용하는지 확인하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="01858402fc7d79d752ccdd8244009cbe826a2604" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a case statement to tell Chef Infra Client which platforms and packages to install using cURL.</source>
          <target state="translated">다음 예제는 cURL을 사용하여 설치할 플랫폼과 패키지를 Chef Infra Client에 알리기 위해 case 문을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="04b34cc6964716d592c4d646b9bd1408ab2d1cc9" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a case statement to tell the chef-client which platforms and packages to install using cURL.</source>
          <target state="translated">다음 예제는 case 문을 사용하여 cURL을 사용하여 설치할 플랫폼 및 패키지를 chef-client에게 알려주는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ae2a63e43d51c8087f6db942d7b8b1e6895a7f60" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a custom block of Ruby code to ensure that a node can resolve the host. If the node can resolve the host, Chef Infra Client will do nothing. If the node cannot resolve the host, Chef Infra Client will configure the host:</source>
          <target state="translated">다음 예제는 Ruby 코드의 사용자 지정 블록을 사용하여 노드가 호스트를 확인할 수 있는지 확인하는 방법을 보여줍니다. 노드가 호스트를 확인할 수있는 경우 Chef Infra Client는 아무 작업도 수행하지 않습니다. 노드가 호스트를 확인할 수없는 경우 Chef Infra Client는 호스트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="93e87d44a0b5b5d76b4fb65b6074bf4474067759" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a custom block of Ruby code to ensure that a node can resolve the host. If the node can resolve the host, the chef-client will do nothing. If the node cannot resolve the host, the chef-client will configure the host:</source>
          <target state="translated">다음 예제는 사용자 정의 Ruby 코드 블록을 사용하여 노드가 호스트를 확인할 수 있도록하는 방법을 보여줍니다. 노드가 호스트를 해결할 수 있으면 chef-client는 아무것도하지 않습니다. 노드가 호스트를 해결할 수없는 경우 chef-client는 호스트를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="80da79f35944d7a06af29973fd5900dac75616d6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a variable within a Ruby block to set the &lt;code&gt;java_home&lt;/code&gt; environment variable:</source>
          <target state="translated">다음 예제는 Ruby 블록 내에서 변수를 사용하여 &lt;code&gt;java_home&lt;/code&gt; 환경 변수 를 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="401a4e0d725bc26092411ac4b23ee36023cc768c" translate="yes" xml:space="preserve">
          <source>The following example shows how to use lazy evaluation with template variables:</source>
          <target state="translated">다음 예제는 템플릿 변수와 함께 지연 평가를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="588999c3a55cf418aa2148582a669c52b00ea3bf" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;content&lt;/code&gt; property to write a YAML file:</source>
          <target state="translated">다음 예제는 &lt;code&gt;content&lt;/code&gt; 속성을 사용하여 YAML 파일을 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="81b1b523b80158cf31cd324a03d5a14c1ccc9a27" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;data_bag&lt;/code&gt; and &lt;code&gt;data_bag_item&lt;/code&gt; methods in a recipe, also using a data bag named &lt;code&gt;sea-power&lt;/code&gt;):</source>
          <target state="translated">다음 예제는 &lt;code&gt;sea-power&lt;/code&gt; 라는 데이터 백을 사용하여 레시피에서 &lt;code&gt;data_bag&lt;/code&gt; 및 &lt;code&gt;data_bag_item&lt;/code&gt; 메소드 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="68b95f1718c48e961b5fd7283f5c3c697d6fc400" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;file&lt;/code&gt; audit resource to verify if the &lt;code&gt;ntp.conf&lt;/code&gt; and &lt;code&gt;leap-seconds&lt;/code&gt; files are present, and then the &lt;code&gt;command&lt;/code&gt; resource to verify if NTP is installed and running:</source>
          <target state="translated">다음 예는 &lt;code&gt;file&lt;/code&gt; 감사 리소스를 사용하여 &lt;code&gt;ntp.conf&lt;/code&gt; 및 &lt;code&gt;leap-seconds&lt;/code&gt; 파일이 있는지 확인한 다음 &lt;code&gt;command&lt;/code&gt; 리소스를 사용하여 NTP가 설치되어 실행 중인지 확인 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4f37d24983971530c4c735b9da81dba3e33fd750" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand to create a client configuration file (/etc/chef/client.rb) that uses Hosted Chef as the Chef server. The configuration file will look something like:</source>
          <target state="translated">다음 예제는 &lt;code&gt;knife bootstrap&lt;/code&gt; 부속 명령을 사용하여 Hosted Chef를 Chef 서버로 사용하는 클라이언트 구성 파일 (/etc/chef/client.rb)을 작성하는 방법을 보여줍니다 . 구성 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc687bc0de59d09d5e7ae80340eb8012bdac23bf" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and then Ruby code to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플릿을 기반으로 파일을 만든 다음 Ruby 코드를 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4d7852a1fbb74f1144a409ce4736683090409123" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and using a Ruby block (with curly braces) to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 Ruby 블록 (중괄호 포함)을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e8c34d64f319bd1647682057e678905815a673a9" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and using a string to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 문자열을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="825558fe9e0daa2dae36f92aaa750337acfbce7a" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;not_if&lt;/code&gt; condition to create a file based on a template and using the presence of an attribute value on the node to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;not_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 노드에 속성 값을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="08f674c64f9229f17a4a600e70d68401d25d4e0b" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;only_if&lt;/code&gt; condition to create a file based on a template and using a string to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 문자열을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0e0f6548a15ea4b1b4c44428c7083ace88db8ce9" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;only_if&lt;/code&gt; condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 조건을 사용하여 템플리트를 기반으로 파일을 작성하고 노드에서 속성을 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="70e35611b03fff5c574df521230d7a43a7922a24" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;only_if&lt;/code&gt; condition to create a file based on a template, and then use Ruby to specify a condition:</source>
          <target state="translated">다음 예제는 &lt;code&gt;only_if&lt;/code&gt; 조건을 사용하여 템플릿을 기반으로 파일을 만든 다음 Ruby를 사용하여 조건을 지정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="beed31aa9006a0731b59e24020837843bf962b4c" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;search&lt;/code&gt; method in the Recipe DSL to search for users:</source>
          <target state="translated">다음 예제는 레시피 DSL에서 &lt;code&gt;search&lt;/code&gt; 방법 을 사용하여 사용자를 검색 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="38013437b252ae9c4c5c0cbf4ae5503a0fc02139" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;execute&lt;/strong&gt;, &lt;strong&gt;service&lt;/strong&gt;, and &lt;strong&gt;mount&lt;/strong&gt; resources together to ensure that a node running on Amazon EC2 is running MySQL. This example does the following:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;execute&lt;/strong&gt; , &lt;strong&gt;service&lt;/strong&gt; 및 &lt;strong&gt;mount&lt;/strong&gt; 리소스를 함께 사용하여 Amazon EC2에서 실행중인 노드가 MySQL을 실행하는지 확인하는 방법을 보여줍니다 . 이 예제는 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0e207123d769765b442d371f58a1a9c8ac25c1aa" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;package&lt;/strong&gt; resource to install an application named &lt;code&gt;app&lt;/code&gt; and ensure that the correct packages are installed for the correct platform:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;package&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;app&lt;/code&gt; 이라는 애플리케이션 을 설치하고 올바른 플랫폼에 올바른 패키지가 설치되어 있는지 확인하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="47db8298d232e07734f1c252a241ce41d973d56e" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;remote_directory&lt;/strong&gt; resource and the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to reboot a handler named &lt;code&gt;WindowsRebootHandler&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;remote_directory&lt;/strong&gt; 자원 및 &lt;strong&gt;chef_handler&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;WindowsRebootHandler&lt;/code&gt; 라는 핸들러를 재부팅하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="83501f297344636b9a9bd779ab33c969db2f0ad6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;strong&gt;ruby_block&lt;/strong&gt; resource to stash a BitTorrent file in a data bag so that it can be distributed to nodes in the organization.</source>
          <target state="translated">다음 예제는 &lt;strong&gt;ruby_block&lt;/strong&gt; 자원 을 사용하여 데이터 백에 BitTorrent 파일을 숨겨 조직의 노드에 분배 할 수있는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="db83a5ab0d4e1f7221a003f025fc87a39831e05b" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this Chef InSpec audit resource.</source>
          <target state="translated">다음 예제는이 Chef InSpec 감사 리소스를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ee717a0dfb1a8c7bcc0e7087931f4396e68b04f5" translate="yes" xml:space="preserve">
          <source>The following example shows how to use variables within a Ruby block to set environment variables using rbenv.</source>
          <target state="translated">다음 예는 Ruby 블록 내에서 변수를 사용하여 rbenv를 사용하여 환경 변수를 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b4b7a1e8f857f0066cf2468f8e06789993742841" translate="yes" xml:space="preserve">
          <source>The following example shows how to verify &lt;code&gt;sshd&lt;/code&gt; configration, including whether it&amp;rsquo;s installed, what the permissions are, and how it can be accessed:</source>
          <target state="translated">다음 예는 설치 여부, 권한 및 액세스 방법을 포함하여 &lt;code&gt;sshd&lt;/code&gt; 구성 을 확인하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="cbff8930f6611ffdeaadb894ab5edf7bad9cca6c" translate="yes" xml:space="preserve">
          <source>The following example shows how to verify that a file has the desired permissions and contents:</source>
          <target state="translated">다음 예제는 파일에 원하는 권한과 내용이 있는지 확인하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c998766e6554b4c531014aba04cdfa7c488c13e8" translate="yes" xml:space="preserve">
          <source>The following example shows installing a filter module on Apache. The package name is different for different platforms, and for the Red Hat Enterprise Linux family, a symbolic link is required:</source>
          <target state="translated">다음 예제는 Apache에 필터 모듈을 설치하는 것을 보여줍니다. 패키지 이름은 플랫폼마다 다르며 Red Hat Enterprise Linux 제품군의 경우 심볼릭 링크가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="25c5ecd82c05a8446698619a1995f9e72b3cf6b8" translate="yes" xml:space="preserve">
          <source>The following example shows part of a knife plugin named &lt;code&gt;knife windows&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;knife windows&lt;/code&gt; 라는 칼 플러그인의 일부를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="29afa65a02d05d8f648bd432622ce50c3c75c7dd" translate="yes" xml:space="preserve">
          <source>The following example shows platform settings for the Microsoft Windows platform:</source>
          <target state="translated">다음 예는 Microsoft Windows 플랫폼에 대한 플랫폼 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3dca2551875a486aa45f50d826424d6e09b6afe9" translate="yes" xml:space="preserve">
          <source>The following example shows the provisioner settings needed to install Chef Workstation, and then use the version of Chef that is embedded in Chef Workstation to converge the node.</source>
          <target state="translated">다음 예제에서는 Chef Workstation을 설치 한 다음 Chef Workstation에 포함 된 Chef 버전을 사용하여 노드를 수렴하는 데 필요한 프로비저닝 도구 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1edb25dc0513a1610d9990ec954bb5cd6bed60bc" translate="yes" xml:space="preserve">
          <source>The following example shows the results of running the &lt;code&gt;chef-backend-ctl gen-sample-backend-config&lt;/code&gt; subcommand. The settings and output will vary, depending on the configuration. The &lt;code&gt;elasticsearch&lt;/code&gt;, &lt;code&gt;etcd&lt;/code&gt;, &lt;code&gt;leaderl&lt;/code&gt;, and &lt;code&gt;postgresql&lt;/code&gt; settings are generated automatically and should not be modified:</source>
          <target state="translated">다음 예는 &lt;code&gt;chef-backend-ctl gen-sample-backend-config&lt;/code&gt; 하위 명령 을 실행 한 결과를 보여줍니다 . 설정 및 출력은 구성에 따라 다릅니다. &lt;code&gt;elasticsearch&lt;/code&gt; , &lt;code&gt;etcd&lt;/code&gt; , &lt;code&gt;leaderl&lt;/code&gt; 및 &lt;code&gt;postgresql&lt;/code&gt; 설정이 자동으로 생성되며 수정할 수 없습니다 :</target>
        </trans-unit>
        <trans-unit id="20dffdb13285028b08a67af4bc4fe1eea7aa2581" translate="yes" xml:space="preserve">
          <source>The following example shows the results of running the &lt;code&gt;chef-backend-ctl gen-server-config&lt;/code&gt; subcommand. The settings and output will vary, depending on the configuration. These settings should be modified carefully:</source>
          <target state="translated">다음 예는 &lt;code&gt;chef-backend-ctl gen-server-config&lt;/code&gt; 하위 명령 을 실행 한 결과를 보여줍니다 . 설정 및 출력은 구성에 따라 다릅니다. 이러한 설정은 신중하게 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5633e1133c08d1b9bff10f3cbc287441a3b02c7f" translate="yes" xml:space="preserve">
          <source>The following example shows using multiple &lt;code&gt;Chef::Log&lt;/code&gt; entry types:</source>
          <target state="translated">다음은 여러 &lt;code&gt;Chef::Log&lt;/code&gt; 항목 유형을 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="d5e410cb969e9a68100ee45a48228b15f37a3260" translate="yes" xml:space="preserve">
          <source>The following example shows using the &lt;strong&gt;directory&lt;/strong&gt; and &lt;strong&gt;cookbook_file&lt;/strong&gt; resources to manage dotfiles. The dotfiles are defined by a JSON data structure similar to:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;디렉토리&lt;/strong&gt; 및 &lt;strong&gt;cookbook_file&lt;/strong&gt; 자원을 사용하여 도트 파일을 관리 하는 방법을 보여줍니다 . 도트 파일은 다음과 유사한 JSON 데이터 구조로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8fecf425117e25586de2efe9cf15a9c9bd42f99a" translate="yes" xml:space="preserve">
          <source>The following example shows using version constraints to specify a value based on the version:</source>
          <target state="translated">다음 예제는 버전 제한 조건을 사용하여 버전을 기반으로 값을 지정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c5db1e0ba10d6a2bec6859c97c1e18715bbafad1" translate="yes" xml:space="preserve">
          <source>The following example shows where callbacks fit in relation to the steps taken by the &lt;code&gt;deploy&lt;/code&gt; process in Capistrano:</source>
          <target state="translated">다음 예는 Capistrano 의 &lt;code&gt;deploy&lt;/code&gt; 프로세스에서 취한 단계와 관련하여 콜백이 적합한 위치를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9ec9bd13090b80e1dc339441e9a11632ef6571be" translate="yes" xml:space="preserve">
          <source>The following example specifies a directory, and then uses the &lt;code&gt;content&lt;/code&gt; property to add a string to the file created in that directory:</source>
          <target state="translated">다음 예제는 디렉토리를 지정한 다음 &lt;code&gt;content&lt;/code&gt; 속성을 사용하여 해당 디렉토리에서 작성된 파일에 문자열을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="975158120a2dfb37af5577138066b782df4a5261" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;strong&gt;git&lt;/strong&gt; resource to upgrade packages:</source>
          <target state="translated">다음 예제는 &lt;strong&gt;git&lt;/strong&gt; 리소스를 사용하여 패키지를 업그레이드합니다.</target>
        </trans-unit>
        <trans-unit id="9ad0f55258a6f889d46bae2d9e2f6d5117f93efc" translate="yes" xml:space="preserve">
          <source>The following example will create a hard link from &lt;code&gt;/tmp/file&lt;/code&gt; to &lt;code&gt;/etc/file&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/tmp/file&lt;/code&gt; 에서 &lt;code&gt;/etc/file&lt;/code&gt; 로의 하드 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8487a980c64755553b9cc787cc1839cf15c3b138" translate="yes" xml:space="preserve">
          <source>The following example will create a symbolic link from &lt;code&gt;/tmp/file&lt;/code&gt; to &lt;code&gt;/etc/file&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/tmp/file&lt;/code&gt; 에서 &lt;code&gt;/etc/file&lt;/code&gt; 로의 심볼릭 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5a3dff9038ad73f2d52785cd0f9fb32de447817c" translate="yes" xml:space="preserve">
          <source>The following example will delete the &lt;code&gt;/tmp/file&lt;/code&gt; symbolic link and uses the &lt;code&gt;only_if&lt;/code&gt; guard to run the &lt;code&gt;test -L&lt;/code&gt; command, which verifies that &lt;code&gt;/tmp/file&lt;/code&gt; is a symbolic link, and then only deletes &lt;code&gt;/tmp/file&lt;/code&gt; if the test passes:</source>
          <target state="translated">다음 예제는 &lt;code&gt;/tmp/file&lt;/code&gt; 심볼릭 링크 를 삭제하고 &lt;code&gt;only_if&lt;/code&gt; 가드를 사용하여 &lt;code&gt;test -L&lt;/code&gt; 명령 을 실행하여 &lt;code&gt;/tmp/file&lt;/code&gt; 이 심볼릭 링크인지 확인한 다음 테스트가 통과되면 &lt;code&gt;/tmp/file&lt;/code&gt; 만 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="4c457b47e82282a8ad324f136531f864c6725045" translate="yes" xml:space="preserve">
          <source>The following example will go through all nodes on the server, and then replace the word &lt;code&gt;foobar&lt;/code&gt; with &lt;code&gt;baz&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 서버의 모든 노드를 통과 한 다음 &lt;code&gt;foobar&lt;/code&gt; 라는 단어 를 &lt;code&gt;baz&lt;/code&gt; 로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="20b3641dfcdcc1b9fe910d62e751bf4d546e8e55" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;package&lt;/code&gt; to &lt;code&gt;apache-couchdb&lt;/code&gt; for OpenBSD platforms, &lt;code&gt;dev-db/couchdb&lt;/code&gt; for Gentoo platforms, and &lt;code&gt;couchdb&lt;/code&gt; for all other platforms:</source>
          <target state="translated">다음 예제는 OpenBSD 플랫폼의 경우 &lt;code&gt;package&lt;/code&gt; 를 &lt;code&gt;apache-couchdb&lt;/code&gt; , Gentoo 플랫폼의 경우 &lt;code&gt;dev-db/couchdb&lt;/code&gt; , 기타 모든 플랫폼의 경우 &lt;code&gt;couchdb&lt;/code&gt; 로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="501dfd02ea7806124df9210676d94e0f89495376" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;package&lt;/code&gt; to &lt;code&gt;httpd-devel&lt;/code&gt; for the Red Hat Enterprise Linux, Fedora, and openSUSE platforms and to &lt;code&gt;apache2-dev&lt;/code&gt; for the Debian platform:</source>
          <target state="translated">다음 예는 설정합니다 &lt;code&gt;package&lt;/code&gt; 에 &lt;code&gt;httpd-devel&lt;/code&gt; 는 Red Hat Enterprise Linux, 페도라와 오픈 수세 플랫폼과에 &lt;code&gt;apache2-dev&lt;/code&gt; 데비안 플랫폼을 :</target>
        </trans-unit>
        <trans-unit id="07903740165b20880a7b26d372545caaa35ea555" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;package_name&lt;/code&gt; to &lt;code&gt;httpd&lt;/code&gt; for the Red Hat platform and to &lt;code&gt;apache2&lt;/code&gt; for the Debian platform:</source>
          <target state="translated">다음 예제는 Red Hat 플랫폼의 경우 &lt;code&gt;package_name&lt;/code&gt; 을 &lt;code&gt;httpd&lt;/code&gt; 로, Debian 플랫폼의 경우 &lt;code&gt;apache2&lt;/code&gt; 로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="86f36aa93e05a57d45d6a0c4db8f568aed2b48a1" translate="yes" xml:space="preserve">
          <source>The following examples are listed from low to high precedence.</source>
          <target state="translated">다음 예는 낮은 우선 순위에서 높은 우선 순위로 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="43d783ef0e98fd5277f23525268f5ca2868d82ca" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using resources in recipes. If you want to see examples of how Chef uses resources in recipes, take a closer look at the cookbooks that Chef authors and maintains: &lt;a href=&quot;https://github.com/chef-cookbooks&quot;&gt;https://github.com/chef-cookbooks&lt;/a&gt;.</source>
          <target state="translated">다음 예는 레시피에서 자원을 사용하기위한 다양한 접근 방법을 보여줍니다. Chef가 레시피에서 자원을 사용하는 방법에 대한 예를 보려면 Chef가 작성하고 유지 보수하는 요리 책 ( &lt;a href=&quot;https://github.com/chef-cookbooks&quot;&gt;https://github.com/chef-cookbooks)을&lt;/a&gt; 자세히 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="09e6241d15656a7c2982655ab78908e402d8c19b" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using resources in recipes:</source>
          <target state="translated">다음 예는 레시피에서 리소스를 사용하기위한 다양한 접근 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5ebcc252998e35d7c1ac7f27fdf970d3271ac356" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;alternatives&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;대체&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6f5fa76c2aa8ff533e0449cfb70e4ab1a71a4934" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;apt_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예제 는 레시피 에서 &lt;strong&gt;apt_package&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="65caa65dddb021ec5f61f1eab1a930073ce2502f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;apt_preference&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;apt_preference&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="70064933964075fb7e484705d089b82c25899e81" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;apt_repository&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;apt_repository&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bb827542e54dcb77fd8c0faad7aae20f88af770c" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;apt_update&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;apt_update&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="80975d1d3f4fcf4e7d06afa9ce0ba28fa482c05e" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;archive_file&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;archive_file&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c8194fe8ef19477e544d39081fe865900510da1a" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;bash&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;bash&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="462bb5a2797fa24dd7f7ce6500334f937f7a6f84" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;batch&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;배치&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c90f9a7e7db225ee8054e9c42f6283e5695282d7" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;bff_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;bff_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4c3f5350e4e9da2dbdd9b4f831ab6252c0a2ee63" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;breakpoint&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;중단 점&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7a64dd327bc44a7ad2140da0aee98fcbb08a1014" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;build_essential&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;build_essential&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="755c431d565add462cbde4295c6b15a123d78e3c" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;cab_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;cab_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fe9ed591520756f30e489e4d111a719e4b7ba1b8" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_client_config&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_client_config&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="409064e6f6024945aa10cd672b1926e649eddd15" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_client_cron&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_client_cron&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a823e1c2da5797303df2ba76d8a1bf03df0c4309" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_client_launchd&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_client_launchd&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0614a02ca141a829db75d821648cb33bbb95cfd7" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_client_scheduled_task&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_client_scheduled_task&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="844fa592151955717e7a4ced62c771cf1bd6d33d" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_client_systemd_timer&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_client_systemd_timer&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f54a9460d5eebea8d2d68aa1e058e801091b94ea" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_client_trusted_certificate&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_client_trusted_certificate&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0b0669b02764ff64f5b85203a03109f60c20e7d1" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_gem&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_gem&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0d5803b9ca60413b01039e5afedd0731a79f7979" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_handler&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_handler&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="df003e3b58ddb995f4e713480b3380ff8eaca9cf" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_sleep&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_sleep&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="510f5778ab8060c20ac45827d3cdeb3213e716ed" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chef_vault_secret&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chef_vault_secret&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5ccc2168ba7d89fd1b5063a6ab34faee286be1df" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chocolatey_config&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chocolatey_config&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5e8e8cfc2136697468a0dc45478b3686fa7aa1cc" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chocolatey_feature&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chocolatey_feature&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="050fe7564171c3b4998138db1ffc083339a6a370" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chocolatey_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chocolatey_package&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0311506619670d1d2ae73d440e32e3e97744505e" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;chocolatey_source&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;chocolatey_source&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d49d6212299f7234c52b793697f56589b4ea1ffa" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;cookbook_file&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;cookbook_file&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="79258aaa3aa9483fdd81e36659ffeb3e965c2e1f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;cron&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;cron&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="762abfee7ffa638eb4c63cff2a1b42c6fdd1e8e7" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;cron_access&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;cron_access&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="136c956e058861d44b34c9e60b36ad7d8ccbeeca" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;cron_d&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;cron_d&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bcc5f7814b551ef48de32a346a3453bd79fe3d67" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;directory&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;디렉토리&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="687ec5b8d16c897d574c67305beebd48811b6e56" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;dmg_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;dmg_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6d1d06846a7028e57a2563257290af3682041dcf" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;dnf_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;dnf_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c34b4742f9b64d2ced03facef46c950e4838886a" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;dpkg_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;dpkg_package&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4d1f22f0afbf43d42adad0c560545accd0a37b48" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;dsc_resource&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;dsc_resource&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ed4e7344c3f5f4e7b1bfd96bfeaab9b89452e35b" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;dsc_script&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;dsc_script&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="398034cd7e9a62c9804d7cc72cd3978e5b4c6068" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;execute&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;실행&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3795cfba74a31b54c122c80208d96a8c96969aef" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;file&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;파일&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="909fe0872ef64886d6b68d4836e086fd640e4cf7" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;freebsd_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;freebsd_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="dd82b95cf0e254eb2a668a8bae17fa921a05ff86" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;gem_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;gem_package&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0333802a69fab58a3d3b2a0acc2fb59bcd945267" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;git&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;git&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f8df5231a161055b369bd6826a138311a5137530" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;group&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;그룹&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4544667fc1c968b88b64c27214f4a2e05d01280c" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;homebrew_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;homebrew_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="700ece3979aadfbc77929594810976f207223615" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;homebrew_update&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;homebrew_update&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="55199462739a2630722e74cecb7ab0c90854f105" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;hostname&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;호스트 이름&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="25f62e1ceae4014fb3355cef7ef53c320baf979f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;http_request&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;http_request&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1fdcb56040dcc633dcae52aeb4138bf078d9c030" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;ifconfig&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;ifconfig&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2b2a081c7c7b904cc016bff6c2e2cfe793c94742" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;ips_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;ips_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="995d1739d1964059656167f1a0b31b29abc8e84d" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;kernel_module&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;kernel_module&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="912819c14b894ab101340767bf59927d430539e6" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;launchd&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;launchd&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7b5c8972fdf46f71e6bb05e4b14249b5d8b0ce8d" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;link&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;링크&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="37fc4d9f7d60e66b0815ab95999381c2d518db34" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;locale&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;로케일&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8fa6a5cb438f3f8a0810675d03cb604179bb72d6" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;log&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;로그&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="36c0848d0c42959cfdc2e12db9d937f5a98a5267" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;macos_userdefaults&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예제 는 레시피 에서 &lt;strong&gt;macos_userdefaults&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b1da6f3a987e51a1672c51aba4cec399347b9d73" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;macports_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예제 는 레시피 에서 &lt;strong&gt;macports_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="35740f3cdf4f1aec4ff2f937e1ddb92bd02b81e5" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;mdadm&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;mdadm&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="31e58aade09b940dc24463639407cc84c0214c0e" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;mount&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;마운트&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2798474abf97b52722341c13590fe4e09908726f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;msu_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;msu_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c9dd8df3fe7776cae06d171b489b5c2b62815477" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;notify_group&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;notify_group&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="81320c825ef04751a0e9f79c1b6ca5b0fe42df93" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;ohai&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;ohai&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9d831429a0edc6cf01b3e6235e0a25cd05b91b97" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;ohai_hint&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;ohai_hint&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="676c437a4e2bb9b70d7784cb5e1a7c897baa2961" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openbsd_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openbsd_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1167a68f57fdf2a9fddb9faeef035bd60cf7b84f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_dhparam&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_dhparam&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="810829deabd5bc2b3a2a4719f47be48ed3432f7d" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_ec_private_key&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_ec_private_key&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3914e99300ffda99c848a4609dedededdcac0f94" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_ec_public_key&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_ec_public_key&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4448b20e31235da1e8c880459d20fb6b1c0411ce" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_rsa_private_key&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_rsa_private_key&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bb11ada61528673a27f9ad4735fd58178473a60b" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_rsa_public_key&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_rsa_public_key&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="55d8e3dbffc399029192be75f8e3cd690723e72f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_x509_certificate&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_x509_certificate&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6929f90ff3d478e4d72740fa4438da2556f80600" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_x509_crl&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_x509_crl&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ecd2ee357606210c256d8555a59a011bf1c4fe6f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;openssl_x509_request&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;openssl_x509_request&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c54934b0b0571ec549d989ad75f9fc2c46bd65e2" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;osx_profile&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;osx_profile&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c5474ba7cfb36be1531124a10968717c35322db7" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;패키지&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7466792cbb1fcdb530fdf10355289991e69feb6c" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;pacman_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예제 는 레시피 에서 &lt;strong&gt;pacman_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a4b4fc504a009415737e1c8687889e2915c28347" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;paludis_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;paludis_package&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e841ce68901ace9f93ea87a013752ad4e17f67c2" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;plist&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;plist&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="98aa8d3fdecb88539fe6698e1643868ef3001b02" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;portage_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예제 는 레시피 에서 &lt;strong&gt;portage_package&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="14b6e00ca87604badcb9d247d75fc16e091af0b7" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;powershell_package&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;powershell_package&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="23b50e41051c8579f8d7e10ff6944a12a2051da6" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;powershell_script&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;powershell_script&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f4f1944ea6ad63d91db2605ad919c5ba3e4474d1" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;reboot&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;재부팅&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2ea096e896a37d848e4c88653fc36bb43dcadc53" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;registry_key&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;registry_key&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8308cbbdf5f267ab4da87f3158b629645c29d473" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;remote_directory&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;remote_directory&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9a6aaae552c11dc823a80729088d7f68c257bf4a" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;remote_file&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예 는 레시피 에서 &lt;strong&gt;remote_file&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b14ac0b22d18a3a7b888b425a0499059ea3f5f00" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;rhsm_errata&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예제 는 레시피 에서 &lt;strong&gt;rhsm_errata&lt;/strong&gt; 리소스 를 사용하는 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bc92fbbf1576f08aa9d80542ac5ea08eaa0497c5" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate various approaches for using the &lt;strong&gt;rhsm_errata_level&lt;/strong&gt; resource in recipes:</source>
          <target state="translated">다음 예제 는 레시피 에서 &lt;strong&gt;rhsm_errata_level&lt;/strong&gt; 리소스 를 사용하기위한 다양한 접근 방식을 보여줍니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
