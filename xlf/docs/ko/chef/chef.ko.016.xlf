<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="73fb18d6a572ad4c2f14579eb4a815af1128c376" translate="yes" xml:space="preserve">
          <source>Modifications to environments</source>
          <target state="translated">환경 수정</target>
        </trans-unit>
        <trans-unit id="e517cc4269eda94e38efc0431c8be0b79c84d45d" translate="yes" xml:space="preserve">
          <source>Modify an existing environment variable. This prepends the new value to the existing value, using the delimiter specified by the &lt;code&gt;delim&lt;/code&gt; property.</source>
          <target state="translated">기존 환경 변수를 수정하십시오. 이는 &lt;code&gt;delim&lt;/code&gt; 속성으로 지정된 구분자를 사용하여 새 값을 기존 값 앞에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="d676f74af2ef66f1b5a24ac9a52a83b2af178c3e" translate="yes" xml:space="preserve">
          <source>Modify an existing group. This action raises an exception if the group does not exist.</source>
          <target state="translated">기존 그룹을 수정하십시오. 그룹이 존재하지 않으면이 조치로 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a36702e81305afd4aa980a952229056a883ef769" translate="yes" xml:space="preserve">
          <source>Modify an existing user. This action raises an exception if the user does not exist.</source>
          <target state="translated">기존 사용자를 수정하십시오. 사용자가 존재하지 않으면이 조치로 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="353c461e76f1d3ffa81a60e96d94c8f11aaffea7" translate="yes" xml:space="preserve">
          <source>Modify the LaunchDaemon plist to look like the &lt;a href=&quot;#example-munki-catalog&quot;&gt;first example&lt;/a&gt; below. Notice that we updated the JSONUrl and a couple of the identity sections. Also notice that we enabled some of the commands needed to properly populate DepNotify so it displays useful information to the user.</source>
          <target state="translated">LaunchDaemon plist를 아래 의 &lt;a href=&quot;#example-munki-catalog&quot;&gt;첫 번째 예제&lt;/a&gt; 와 같이 수정하십시오 . JSONUrl과 몇 가지 ID 섹션을 업데이트했습니다. 또한 DepNotify를 적절하게 채우는 데 필요한 일부 명령을 활성화하여 유용한 정보를 사용자에게 표시합니다.</target>
        </trans-unit>
        <trans-unit id="97eae73c568558bf1a6175699c70738a4cd9ad58" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s Berksfile to reference &lt;code&gt;delivery-truck&lt;/code&gt; and &lt;code&gt;delivery-sugar&lt;/code&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/Berksfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delivery-truck&lt;/code&gt; 및 &lt;code&gt;delivery-sugar&lt;/code&gt; 를 참조하도록 빌드 쿡북의 Berksfile을 수정합니다 . 기본적으로이 파일은 &lt;code&gt;.delivery/build-cookbook/Berksfile&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5e5124c070905e49b117ba39fabc0b500b6923d" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s Berksfile to reference &lt;strong&gt;delivery-truck&lt;/strong&gt; and &lt;strong&gt;delivery-sugar&lt;/strong&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/Berksfile&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;delivery-truck&lt;/strong&gt; 및 &lt;strong&gt;delivery-sugar&lt;/strong&gt; 를 참조하도록 빌드 쿡북의 Berksfile을 수정합니다 . 기본적으로이 파일은 &lt;code&gt;.delivery/build-cookbook/Berksfile&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2a2724c4025467c77fe233b80abc4668678e8ec" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s metadata to include &lt;code&gt;delivery-truck&lt;/code&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/metadata.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delivery-truck&lt;/code&gt; 을 포함하도록 빌드 쿡북의 메타 데이터를 수정합니다 . 기본적으로이 파일은 &lt;code&gt;.delivery/build-cookbook/metadata.rb&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="d383a6733a64f3b30c701028a7f977cfdbe58627" translate="yes" xml:space="preserve">
          <source>Modify the build cookbook&amp;rsquo;s metadata to include &lt;strong&gt;delivery-truck&lt;/strong&gt;. By default, this file is located at &lt;code&gt;.delivery/build-cookbook/metadata.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;delivery-truck&lt;/strong&gt; 을 포함하도록 빌드 쿡북의 메타 데이터를 수정합니다 . 기본적으로이 파일은 &lt;code&gt;.delivery/build-cookbook/metadata.rb&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef94bbc5572e08fb081964dea9d9ea979b5de04b" translate="yes" xml:space="preserve">
          <source>Modify the build-info.json file on the identity line to correctly reference your developer certificate. Read the &lt;a href=&quot;https://github.com/erikng/installapplications/wiki/Packaging&quot;&gt;InstallApplications documentation&lt;/a&gt; for information about the type of accounts that Apple requires to install packages.</source>
          <target state="translated">개발자 인증서를 올바르게 참조하도록 ID 줄의 build-info.json 파일을 수정합니다. Apple이 패키지를 설치하는 데 필요한 계정 유형에 대한 정보 는 &lt;a href=&quot;https://github.com/erikng/installapplications/wiki/Packaging&quot;&gt;InstallApplications 문서&lt;/a&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="9d9661457223c46f328b428bcba8585747a64f40" translate="yes" xml:space="preserve">
          <source>Modify the resource and choose a different name for the property that does not conflict with an already-existing method name.</source>
          <target state="translated">리소스를 수정하고 기존 메서드 이름과 충돌하지 않는 속성에 대해 다른 이름을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f294ea43da80e7f81175475b53b7eb53de3bb52f" translate="yes" xml:space="preserve">
          <source>Modify the template with any editor, then specify it using the &lt;code&gt;--bootstrap-template&lt;/code&gt; option as part of the the &lt;code&gt;knife bootstrap&lt;/code&gt; operation, or with any of the knife plug-ins that support cloud computing.</source>
          <target state="translated">편집기를 사용하여 템플릿을 수정 한 다음 &lt;code&gt;--bootstrap-template&lt;/code&gt; 옵션을 &lt;code&gt;knife bootstrap&lt;/code&gt; 작업 의 일부로 또는 클라우드 컴퓨팅을 지원하는 나이프 플러그인을 사용하여 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b7c2087e09272053e3805cbb48eff93005bf2f8" translate="yes" xml:space="preserve">
          <source>Modifying a Control</source>
          <target state="translated">컨트롤 수정</target>
        </trans-unit>
        <trans-unit id="ec0f10698082c93db66cc3bacc7c4262043d5c37" translate="yes" xml:space="preserve">
          <source>Monitor</source>
          <target state="translated">Monitor</target>
        </trans-unit>
        <trans-unit id="0279446c78656746891c1d7098920cb6b206262b" translate="yes" xml:space="preserve">
          <source>Monitor Supermarket</source>
          <target state="translated">모니터 슈퍼마켓</target>
        </trans-unit>
        <trans-unit id="c6351b6eecc387f076054a20a754b7a458447f34" translate="yes" xml:space="preserve">
          <source>Monitoring Chef Automate</source>
          <target state="translated">Chef Automate 모니터링</target>
        </trans-unit>
        <trans-unit id="3ccf5501d59f5370096a5fb37f6bd964f69e3367" translate="yes" xml:space="preserve">
          <source>Monitoring Priorities</source>
          <target state="translated">모니터링 우선 순위</target>
        </trans-unit>
        <trans-unit id="9a40578175ea5ac562b4a41d620d16fa80c7f382" translate="yes" xml:space="preserve">
          <source>Monitoring Services</source>
          <target state="translated">모니터링 서비스</target>
        </trans-unit>
        <trans-unit id="a62801503510aa94c3c8daf4bfedbabdb5b803b9" translate="yes" xml:space="preserve">
          <source>Monitoring the Chef Infra Server involves two types of checks: application and system. In addition monitoring the HTTP requests that workstations and nodes are making to the Chef Infra Server and per-disk data storage volumes is recommended.</source>
          <target state="translated">Chef Infra Server 모니터링에는 애플리케이션과 시스템의 두 가지 유형의 검사가 포함됩니다. 또한 워크 스테이션과 노드가 Chef Infra Server 및 디스크 당 데이터 스토리지 볼륨에 대해 만드는 HTTP 요청을 모니터링하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="32a3a0712932c5530d77b0078a465dca203f84cd" translate="yes" xml:space="preserve">
          <source>Monitoring the Chef server involves two types of checks: application and system. In addition monitoring the HTTP requests that workstations and nodes are making to the Chef server and per-disk data storage volumes is recommended.</source>
          <target state="translated">Chef 서버 모니터링에는 응용 프로그램과 시스템의 두 가지 유형의 검사가 포함됩니다. 또한 워크 스테이션 및 노드가 Chef 서버 및 디스크 별 데이터 스토리지 볼륨에 수행하는 HTTP 요청을 모니터링하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="22ffffbccfcf501db363d7084eeed3e3deb28b71" translate="yes" xml:space="preserve">
          <source>More Information</source>
          <target state="translated">추가 정보</target>
        </trans-unit>
        <trans-unit id="85f846f2b121707b5598ab8bcc31b360a58589f3" translate="yes" xml:space="preserve">
          <source>More Information on SCP</source>
          <target state="translated">SCP에 대한 추가 정보</target>
        </trans-unit>
        <trans-unit id="e36f592d2a5a38a65bc429f1d8e599c32bb307f8" translate="yes" xml:space="preserve">
          <source>More Options</source>
          <target state="translated">더 많은 옵션</target>
        </trans-unit>
        <trans-unit id="f1a06512ea673cc152b8420b5fe23bd0c2690ea2" translate="yes" xml:space="preserve">
          <source>More about Ruby</source>
          <target state="translated">루비에 대한 추가 정보</target>
        </trans-unit>
        <trans-unit id="e2619263e1e43b188992cfc559e5f986f2005fda" translate="yes" xml:space="preserve">
          <source>More commonly, the usage incorporated arguments to the definition:</source>
          <target state="translated">더 일반적으로 사용은 정의에 인수를 통합했습니다.</target>
        </trans-unit>
        <trans-unit id="c33b6e1a217cc16b5a138e541bc581b0f7473351" translate="yes" xml:space="preserve">
          <source>More commonly, the usage incorporates arguments to the definition:</source>
          <target state="translated">보다 일반적으로 사용법은 인수를 정의에 통합합니다.</target>
        </trans-unit>
        <trans-unit id="09e05b1e3ac4cade63e07bc240a5c31c685e6e4f" translate="yes" xml:space="preserve">
          <source>More details of this summary report can be viewed in the text file, the location for which is given at the end of the summary.</source>
          <target state="translated">이 요약 보고서에 대한 자세한 내용은 요약 끝에 제공되는 텍스트 파일에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f67898507cf3b5c2deea5417321987b11749d6ef" translate="yes" xml:space="preserve">
          <source>More information about each service can be found in the individual service logs in &lt;code&gt;/var/opt/chef-backend/&lt;/code&gt;.</source>
          <target state="translated">각 서비스에 대한 자세한 정보는 &lt;code&gt;/var/opt/chef-backend/&lt;/code&gt; 의 개별 서비스 로그에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7f81f3effc633fd7f673ff233e18ab89490cd7a" translate="yes" xml:space="preserve">
          <source>More resources on schedulers:</source>
          <target state="translated">스케줄러에 대한 추가 리소스 :</target>
        </trans-unit>
        <trans-unit id="18716c3d2fd924ff74aa42cf6cd8d3e5d27a5849" translate="yes" xml:space="preserve">
          <source>More than one cookbook version can be specified:</source>
          <target state="translated">둘 이상의 요리 책 버전을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44e6d1e6a443021eca110b2c3fd574ce354485c2" translate="yes" xml:space="preserve">
          <source>More than one recipe can be added:</source>
          <target state="translated">하나 이상의 레시피를 추가 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ba51b80a94b1e778579e0f052c4d1847c8928c0f" translate="yes" xml:space="preserve">
          <source>More verbose output. Use twice for max verbosity</source>
          <target state="translated">더 자세한 출력. 최대 상세도를 위해 두 번 사용</target>
        </trans-unit>
        <trans-unit id="e16feb61a5d52924490eb702beb3eada6dcd07c1" translate="yes" xml:space="preserve">
          <source>More verbose output. Use twice for max verbosity.</source>
          <target state="translated">더 자세한 출력. 최대 상세도를 위해 두 번 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6e03c6f029b8cc4c1f9972e8bb591aeb75f3f749" translate="yes" xml:space="preserve">
          <source>More verbose output. Use twice for maximum verbosity.</source>
          <target state="translated">더 자세한 출력. 최대한 자세한 정보를 얻으려면 두 번 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1d5bb0017c52f35baee990cba25de56ec73c1f5d" translate="yes" xml:space="preserve">
          <source>Most SSH public keys have a signature at the end of them that can be tested. For example:</source>
          <target state="translated">대부분의 SSH 공개 키에는 테스트 할 수있는 서명이 끝에 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3f6c2cdb1f3e3ad4306e3de0128eecb91ad926be" translate="yes" xml:space="preserve">
          <source>Most VMware compute use cases are covered</source>
          <target state="translated">대부분의 VMware 컴퓨팅 사용 사례를 다룹니다.</target>
        </trans-unit>
        <trans-unit id="fcea96735e34b26f14f496427870882ed4b5cccb" translate="yes" xml:space="preserve">
          <source>Most authentication requests made to the Chef Infra Server are abstracted from the user. Such as when using knife or the Chef Infra Server user interface. In some cases, such as when using the &lt;code&gt;knife exec&lt;/code&gt; subcommand, the authentication requests need to be made more explicitly, but still in a way that does not require authentication headers. In a few cases, such as when using arbitrary Ruby code, a Chef Infra Server API client, or cURL, it may be necessary to include the full authentication header as part of the request to the Chef Infra Server.</source>
          <target state="translated">Chef Infra Server에 대한 대부분의 인증 요청은 사용자로부터 추상화됩니다. 예를 들어 knife 또는 Chef Infra Server 사용자 인터페이스를 사용할 때. &lt;code&gt;knife exec&lt;/code&gt; 하위 명령을 사용할 때와 같은 일부 경우 에는 인증 요청을보다 명시 적으로 수행해야하지만 여전히 인증 헤더가 필요하지 않은 방식으로 이루어져야합니다. 임의의 Ruby 코드, Chef Infra Server API 클라이언트 또는 cURL을 사용할 때와 같은 몇 가지 경우에는 Chef Infra Server에 대한 요청의 일부로 전체 인증 헤더를 포함해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ded416c5044d2b375069f6f1edded5b0be4bcfe1" translate="yes" xml:space="preserve">
          <source>Most authentication requests made to the Chef server are abstracted from the user. Such as when using knife or the Chef server user interface. In some cases, such as when using the &lt;code&gt;knife exec&lt;/code&gt; subcommand, the authentication requests need to be made more explicitly, but still in a way that does not require authentication headers. In a few cases, such as when using arbitrary Ruby code or cURL, it may be necessary to include the full authentication header as part of the request to the Chef server.</source>
          <target state="translated">Chef 서버에 대한 대부분의 인증 요청은 사용자로부터 추상화됩니다. 예를 들어 knife 또는 Chef 서버 사용자 인터페이스를 사용하는 경우 &lt;code&gt;knife exec&lt;/code&gt; 부속 명령을 사용할 때와 같은 일부 경우 에는 인증 요청을보다 명시 적으로 작성해야하지만 여전히 인증 헤더가 필요하지 않은 방식으로 인증 요청을 작성해야합니다. 임의의 Ruby 코드 또는 cURL을 사용하는 경우와 같은 일부 경우 Chef 서버에 대한 요청의 일부로 전체 인증 헤더를 포함해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="35c513b9445acca8cf58d11969e3829de2d41fbc" translate="yes" xml:space="preserve">
          <source>Most binaries compiled in a full Linux environment have a hard dependency on &lt;code&gt;/lib/ld-linux.so&lt;/code&gt; or &lt;code&gt;/lib/ld-linux-x86_64.so&lt;/code&gt;. In order to relocate this dependency to the Chef Habitat-provided variant, which is provided by &lt;code&gt;core/glibc&lt;/code&gt;, use the &lt;code&gt;patchelf(1)&lt;/code&gt; utility within your plan:</source>
          <target state="translated">전체 Linux 환경에서 컴파일 된 대부분의 바이너리는 &lt;code&gt;/lib/ld-linux.so&lt;/code&gt; 또는 &lt;code&gt;/lib/ld-linux-x86_64.so&lt;/code&gt; 에 대한 의존성이 높습니다 . 이 종속성을 &lt;code&gt;core/glibc&lt;/code&gt; 에서 제공하는 Chef Habitat 제공 변형으로 재배치 하려면 계획 내 에서 &lt;code&gt;patchelf(1)&lt;/code&gt; 유틸리티를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="672fd307cfa170104cb818cdebcdb18a42190323" translate="yes" xml:space="preserve">
          <source>Most data is entered using a text editor in JSON format, unless the &lt;code&gt;--disable-editing&lt;/code&gt; option is entered as part of a command. (Encrypted data bags use YAML, which is a superset of JSON.) JSON is a common, language-independent data format that provides a simple text representation of arbitrary data structures. For more information about JSON, see &lt;a href=&quot;http://www.json.org/&quot;&gt;http://www.json.org/&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/JSON&quot;&gt;http://en.wikipedia.org/wiki/JSON&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--disable-editing&lt;/code&gt; 옵션을 명령의 일부로 입력 하지 않으면 대부분의 데이터는 JSON 형식의 텍스트 편집기를 사용하여 입력됩니다. 암호화 된 데이터 백은 JSON의 상위 세트 인 YAML을 사용합니다. JSON은 임의의 데이터 구조의 간단한 텍스트 표현을 제공하는 공통된 언어 독립적 데이터 형식입니다. JSON에 대한 자세한 정보는 &lt;a href=&quot;http://www.json.org/&quot;&gt;http://www.json.org/&lt;/a&gt; 또는 &lt;a href=&quot;http://en.wikipedia.org/wiki/JSON&quot;&gt;http://en.wikipedia.org/wiki/JSON을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a4a2164f8392bac6829a3a7c49b0c1a2828a4c7" translate="yes" xml:space="preserve">
          <source>Most drivers have driver-specific configuration settings that must be added to the kitchen.yml file before Test Kitchen will be able to use that platform during cookbook testing. For information about these driver-specific settings, please refer to the driver-specific documentation.</source>
          <target state="translated">대부분의 드라이버에는 Test Kitchen이 요리 책 테스트 중에 해당 플랫폼을 사용하기 전에 kitchen.yml 파일에 추가해야하는 드라이버 별 구성 설정이 있습니다. 이러한 드라이버 별 설정에 대한 정보는 드라이버 별 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9745e5913cd76f62be5d57740c886b23dd1e2a07" translate="yes" xml:space="preserve">
          <source>Most importantly, you should update the &lt;code&gt;pkg_license&lt;/code&gt; value to indicate the type of license (or licenses) that your source files are licensed under. Valid license types can be found at &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;https://spdx.org/licenses/&lt;/a&gt;. You can include multiple licenses as an array.</source>
          <target state="translated">가장 중요한 것은 &lt;code&gt;pkg_license&lt;/code&gt; 값을 업데이트 하여 소스 파일의 라이센스가 부여 된 라이센스 유형을 나타내야합니다. 유효한 라이센스 유형은 &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;https://spdx.org/licenses/&lt;/a&gt; 에서 찾을 수 있습니다 . 여러 라이센스를 어레이로 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb184c91791ce1071941d8b14b85c40f74cef2e0" translate="yes" xml:space="preserve">
          <source>Most of the HTTP API endpoint return these errors:</source>
          <target state="translated">대부분의 HTTP API 엔드 포인트는 다음 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2f221c463b75c956eeab2a9d9e04d4f2fa0290b2" translate="yes" xml:space="preserve">
          <source>Most of the following helper functions are not available in Powershell plans (&lt;code&gt;plan.ps1&lt;/code&gt;). However in most cases, the standard Powershell cmdlets provide the same functionality. For example: use &lt;code&gt;Resolve-Path&lt;/code&gt; instead of &lt;code&gt;abspath&lt;/code&gt; or &lt;code&gt;Get-Command&lt;/code&gt; instead of &lt;code&gt;exists&lt;/code&gt;.</source>
          <target state="translated">다음 도우미 기능의 대부분은 Powershell 플랜 ( &lt;code&gt;plan.ps1&lt;/code&gt; ) 에서 사용할 수 없습니다 . 그러나 대부분의 경우 표준 Powershell cmdlet은 동일한 기능을 제공합니다. 예를 들어 &lt;code&gt;abspath&lt;/code&gt; 대신 &lt;code&gt;Resolve-Path&lt;/code&gt; 를 사용 하거나 &lt;code&gt;exists&lt;/code&gt; 대신 &lt;code&gt;Get-Command&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="73e1b143dbba888c50f8c4cf03c8cff7a30650f0" translate="yes" xml:space="preserve">
          <source>Most syntax highlighters will render Chef InSpec files correctly across a wide list of tools.</source>
          <target state="translated">대부분의 구문 하이 라이터는 다양한 도구 목록에서 Chef InSpec 파일을 올바르게 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="9777b959dd643a1098efcf8a81fae4a4642c7f79" translate="yes" xml:space="preserve">
          <source>Most time to wait to connect to service (default: 0s)</source>
          <target state="translated">서비스 연결 대기 시간 (기본값 : 0 초)</target>
        </trans-unit>
        <trans-unit id="a3353eaedd716dcf00a8eb537b2bf88cc7369d5c" translate="yes" xml:space="preserve">
          <source>Motivating Example</source>
          <target state="translated">동기를 부여하는 예</target>
        </trans-unit>
        <trans-unit id="1b26ca218476cae3af1e176d40d0fe07aa3436c1" translate="yes" xml:space="preserve">
          <source>Mount Storage Device</source>
          <target state="translated">마운트 저장 장치</target>
        </trans-unit>
        <trans-unit id="29610d885c43e5f7af0c4aac9b7ee7e4a2c95137" translate="yes" xml:space="preserve">
          <source>Mount a labeled file system</source>
          <target state="translated">레이블이있는 파일 시스템 마운트</target>
        </trans-unit>
        <trans-unit id="8cd18eb066f127637edc91606311a2b1bbb6d03d" translate="yes" xml:space="preserve">
          <source>Mount a local block drive</source>
          <target state="translated">로컬 블록 드라이브 마운트</target>
        </trans-unit>
        <trans-unit id="e0c86828ee6188592ad23d8a5cc82f52764cc201" translate="yes" xml:space="preserve">
          <source>Mount a non-block file system</source>
          <target state="translated">비 블록 파일 시스템 마운트</target>
        </trans-unit>
        <trans-unit id="3ebfe8326d1aabf5b2fba9ce24c58aca337a4fa2" translate="yes" xml:space="preserve">
          <source>Mount a remote file system</source>
          <target state="translated">원격 파일 시스템 마운트</target>
        </trans-unit>
        <trans-unit id="a7256fe65c3dd2d6ccdd928f567ab5656100a52e" translate="yes" xml:space="preserve">
          <source>Mount a remote folder in Microsoft Windows</source>
          <target state="translated">Microsoft Windows에서 원격 폴더 마운트</target>
        </trans-unit>
        <trans-unit id="9927c4685d078c0c5ecaf208c6428f5c4648c8ae" translate="yes" xml:space="preserve">
          <source>Mount and add to the file systems table</source>
          <target state="translated">파일 시스템 테이블에 마운트 및 추가</target>
        </trans-unit>
        <trans-unit id="899904267e277c9d5b2b94d2e8baaef39eb84b6f" translate="yes" xml:space="preserve">
          <source>Mount the Elasticsearch shared filesystem to the same mount point.</source>
          <target state="translated">Elasticsearch 공유 파일 시스템을 동일한 마운트 지점에 마운트합니다.</target>
        </trans-unit>
        <trans-unit id="182bddb9219e7c581571a8d642e077b1012533ff" translate="yes" xml:space="preserve">
          <source>Mounts the node</source>
          <target state="translated">노드를 마운트</target>
        </trans-unit>
        <trans-unit id="ac80072d0aa3468b75c1244987f5c300f28a1c4a" translate="yes" xml:space="preserve">
          <source>Move .pem Files</source>
          <target state="translated">.pem 파일 이동</target>
        </trans-unit>
        <trans-unit id="0adf417c257a2dbbfe7121e49efad8ede4be1d87" translate="yes" xml:space="preserve">
          <source>Move Config Files</source>
          <target state="translated">구성 파일 이동</target>
        </trans-unit>
        <trans-unit id="19736c30ca23a14ec3278a9fe37da60afbc9ed0c" translate="yes" xml:space="preserve">
          <source>Move Nodes</source>
          <target state="translated">노드 이동</target>
        </trans-unit>
        <trans-unit id="a17c1d9ace65a2af0854b7dd0162a36eb96f46aa" translate="yes" xml:space="preserve">
          <source>Move files to the .chef directory</source>
          <target state="translated">파일을 .chef 디렉토리로 이동</target>
        </trans-unit>
        <trans-unit id="ea432db471e62ff9e195d1b6cc1b9a72bca47c49" translate="yes" xml:space="preserve">
          <source>Move into the directory:</source>
          <target state="translated">디렉토리로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="c34a232aa56f5dff5fd5d41ffbec11ed0a91d151" translate="yes" xml:space="preserve">
          <source>Move on to the next member, until the list is exhausted; start the process again.</source>
          <target state="translated">목록이 소진 될 때까지 다음 구성원으로 이동하십시오. 프로세스를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="8e08afc234e90b7411689075d8d04f0d64f62085" translate="yes" xml:space="preserve">
          <source>Move the tar archives created in steps (1) and (2) to a long-term storage location.</source>
          <target state="translated">(1) 및 (2) 단계에서 만든 tar 아카이브를 장기 저장 위치로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="c8fbeacd9bc71b4e05a5d5ba2d57d6f0a2facab2" translate="yes" xml:space="preserve">
          <source>Move the unzipped &lt;code&gt;chef-automate&lt;/code&gt; binary to &lt;code&gt;/usr/local/bin&lt;/code&gt;:</source>
          <target state="translated">압축을 푼 &lt;code&gt;chef-automate&lt;/code&gt; 바이너리를 &lt;code&gt;/usr/local/bin&lt;/code&gt; 으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="d346408dcda669c19f09a8b7d094398602e1dbe9" translate="yes" xml:space="preserve">
          <source>Move this data to a location that is not on the standby Chef Automate server.</source>
          <target state="translated">이 데이터를 대기 Chef Automate 서버에없는 위치로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="4d82827f34718b13c975e3ee9e4447dbaacaacb4" translate="yes" xml:space="preserve">
          <source>Move to the &lt;code&gt;bootstrap&lt;/code&gt; directory and create a blank template file; this example will use &lt;code&gt;airgap.erb&lt;/code&gt; for the template name:</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; 디렉토리로 이동하여 빈 템플릿 파일을 만듭니다. 이 예 에서는 템플릿 이름으로 &lt;code&gt;airgap.erb&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="5fc424f83dee7c35bd2003f09e526193fa383ddb" translate="yes" xml:space="preserve">
          <source>Move to the &lt;code&gt;bootstrap&lt;/code&gt; directory and create a blank template file; this example will use &lt;code&gt;template.erb&lt;/code&gt; for the template name:</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; 디렉토리로 이동하여 빈 템플릿 파일을 만듭니다. 이 예 에서는 템플릿 이름으로 &lt;code&gt;template.erb&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="846ce32a20580ec6ae9d2a615b0954f4381212fb" translate="yes" xml:space="preserve">
          <source>Moving a tested cookbook to production.</source>
          <target state="translated">테스트 된 요리 책을 프로덕션으로 옮기기.</target>
        </trans-unit>
        <trans-unit id="54dc5e38246724469ab0d7905fde4cd5b823f611" translate="yes" xml:space="preserve">
          <source>Moving source files from one directory or package to another</source>
          <target state="translated">한 디렉토리 또는 패키지에서 다른 디렉토리 또는 패키지로 소스 파일 이동</target>
        </trans-unit>
        <trans-unit id="acb59cec70559dc6ca140930f1ce0f7aed29dab7" translate="yes" xml:space="preserve">
          <source>Moving source files from one directory or package to another, with no changes in code;</source>
          <target state="translated">코드 변경없이 한 디렉터리 또는 패키지에서 다른 디렉터리 또는 패키지로 소스 파일 이동</target>
        </trans-unit>
        <trans-unit id="ef01688888f1492498da537490cefebdbe1e5934" translate="yes" xml:space="preserve">
          <source>Msiexec.exe</source>
          <target state="translated">Msiexec.exe</target>
        </trans-unit>
        <trans-unit id="520f9ad72ae9bddf29d65f541596be01134e5dba" translate="yes" xml:space="preserve">
          <source>Msiexec.exe is used to install Chef Infra Client on a node as part of a bootstrap operation. The actual command that is run by the default bootstrap script is:</source>
          <target state="translated">Msiexec.exe는 부트 스트랩 작업의 일부로 노드에 Chef Infra Client를 설치하는 데 사용됩니다. 기본 부트 스트랩 스크립트에서 실행되는 실제 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e333b3a98cd7a8afcbf4376443eb9cff4437f0ea" translate="yes" xml:space="preserve">
          <source>Msiexec.exe is used to install the chef-client on a node as part of a bootstrap operation. The actual command that is run by the default bootstrap script is:</source>
          <target state="translated">Msiexec.exe는 부트 스트랩 작업의 일부로 요리사 클라이언트를 노드에 설치하는 데 사용됩니다. 기본 부트 스트랩 스크립트가 실행하는 실제 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0880d4fade65f5492250a1fdb71a3a198f78e4f" translate="yes" xml:space="preserve">
          <source>Multiple Actions</source>
          <target state="translated">여러 작업</target>
        </trans-unit>
        <trans-unit id="f1ac3371e765d93a38694fe7c6912758e8ffd92d" translate="yes" xml:space="preserve">
          <source>Multiple Chef Infra Servers can send data to a single Chef Automate server.</source>
          <target state="translated">여러 Chef Infra Server는 단일 Chef Automate 서버로 데이터를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec5f8bf3ebcaa8ce7542dce4bcbce09596ce8496" translate="yes" xml:space="preserve">
          <source>Multiple Chef Servers can send data to a single Chef Automate server.</source>
          <target state="translated">여러 Chef 서버는 단일 Chef Automate 서버로 데이터를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7eb37887764c029b5d073f46febb4c2e8cc1462" translate="yes" xml:space="preserve">
          <source>Multiple Cookbooks</source>
          <target state="translated">여러 요리 책</target>
        </trans-unit>
        <trans-unit id="5a56075b5d765cfd0c544c28c8d61b015a942996" translate="yes" xml:space="preserve">
          <source>Multiple Organizations</source>
          <target state="translated">여러 조직</target>
        </trans-unit>
        <trans-unit id="0b7ab852e90b6861be58002a02f47252a47e101e" translate="yes" xml:space="preserve">
          <source>Multiple Packages</source>
          <target state="translated">여러 패키지</target>
        </trans-unit>
        <trans-unit id="a2540db4376e272c8b27ebbd39e0bc2aa60220f9" translate="yes" xml:space="preserve">
          <source>Multiple Pipelines</source>
          <target state="translated">여러 파이프 라인</target>
        </trans-unit>
        <trans-unit id="6644754a7e831be42b3ed01ff7a740bd5df44064" translate="yes" xml:space="preserve">
          <source>Multiple Properties</source>
          <target state="translated">여러 속성</target>
        </trans-unit>
        <trans-unit id="3ddd599a799b9f39a227d0f463269142a499d9fc" translate="yes" xml:space="preserve">
          <source>Multiple cookbook sources may be specified. For example from the public Chef Supermarket and a monolithic repository:</source>
          <target state="translated">여러 요리 책 소스를 지정할 수 있습니다. 예를 들어 공용 Chef Supermarket 및 모 놀리 식 저장소에서 :</target>
        </trans-unit>
        <trans-unit id="e15865795f6ca2825474fe830a8f72289fafb072" translate="yes" xml:space="preserve">
          <source>Multiple days should be comma separated. e.g &lt;code&gt;&quot;1, 2, 3&quot;&lt;/code&gt; or &lt;code&gt;&quot;MON, WEN, FRI&quot;&lt;/code&gt;.</source>
          <target state="translated">여러 날은 쉼표로 구분해야합니다. 예 : &lt;code&gt;&quot;1, 2, 3&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;MON, WEN, FRI&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df97344cea3b5ed408cc102f2789d48479757667" translate="yes" xml:space="preserve">
          <source>Multiple logging specifiers can be submitted, separated by commas. A simple logging level will act as the default, with additional module-targeted levels serving to refine the logging for the target code. If you supply multiple simple logging levels, only the last one will count. Any number of targeted logging levels are allowed, however.</source>
          <target state="translated">여러 로깅 지정자를 쉼표로 구분하여 제출할 수 있습니다. 단순 로깅 수준이 기본값으로 작동하며 추가 모듈 대상 수준이 대상 코드에 대한 로깅을 구체화합니다. 여러 단순 로깅 수준을 제공하면 마지막 수준 만 계산됩니다. 그러나 대상 로깅 수준은 얼마든지 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c0326bf3c9fb156a02a5afdd217f17b3f62f4f82" translate="yes" xml:space="preserve">
          <source>Multiple parameters can be provided for better granularity.</source>
          <target state="translated">더 나은 세분성을 위해 여러 매개 변수를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb2bdfd29f763648b9c1406b49e9febea2408b59" translate="yes" xml:space="preserve">
          <source>Multiple pipelines</source>
          <target state="translated">여러 파이프 라인</target>
        </trans-unit>
        <trans-unit id="17c89221919156f46b3884bf5595246fa407ad1b" translate="yes" xml:space="preserve">
          <source>Multiple product groups must be supported&amp;mdash;each product group can have its own security requirements, schedule, and goals</source>
          <target state="translated">여러 제품 그룹을 지원해야합니다. 각 제품 그룹은 자체 보안 요구 사항, 일정 및 목표를 가질 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6c52e800705560eebcb349539536a326bcaf280a" translate="yes" xml:space="preserve">
          <source>Multiple recipes can be included within a recipe. For example:</source>
          <target state="translated">한 레시피에 여러 레시피를 포함 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="5d0157d99aa7feaf938e066314c7dfddcd74a892" translate="yes" xml:space="preserve">
          <source>Munki</source>
          <target state="translated">Munki</target>
        </trans-unit>
        <trans-unit id="f7c4e9d723e4e24f2f3f9663e09c5497b534a32e" translate="yes" xml:space="preserve">
          <source>Munki Setup</source>
          <target state="translated">Munki 설정</target>
        </trans-unit>
        <trans-unit id="a43fed198c6bad9209064c17d095770b948e57e7" translate="yes" xml:space="preserve">
          <source>Munki is an &lt;a href=&quot;https://github.com/munki/munki&quot;&gt;open source project&lt;/a&gt; from Walt Disney Animation Studios. It is a set of tools for managing applications on macOS computers.</source>
          <target state="translated">Munki는 Walt Disney Animation Studios 의 &lt;a href=&quot;https://github.com/munki/munki&quot;&gt;오픈 소스 프로젝트&lt;/a&gt; 입니다. macOS 컴퓨터에서 애플리케이션을 관리하기위한 도구 세트입니다.</target>
        </trans-unit>
        <trans-unit id="744feba2baca7b8ad9d40731f17d4d5d5caf13c3" translate="yes" xml:space="preserve">
          <source>Munki will handle managed installations and uninstallations. Munki also provides a ready-made application that offers users unmanaged applications that they can download if they choose.</source>
          <target state="translated">Munki는 관리되는 설치 및 제거를 처리합니다. Munki는 사용자가 선택한 경우 다운로드 할 수있는 관리되지 않는 응용 프로그램을 사용자에게 제공하는 기성 응용 프로그램도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8122174669a3105ba0f65edd6eacb6433b62d4f8" translate="yes" xml:space="preserve">
          <source>MunkiAdmin</source>
          <target state="translated">MunkiAdmin</target>
        </trans-unit>
        <trans-unit id="37f664272f80a2658f74801637f8791142167d06" translate="yes" xml:space="preserve">
          <source>MunkiAdmin is a graphical user interface (GUI) for managing munki repositories</source>
          <target state="translated">MunkiAdmin은 munki 저장소를 관리하기위한 그래픽 사용자 인터페이스 (GUI)입니다.</target>
        </trans-unit>
        <trans-unit id="9a2198baa6ee6f625c5715662ceb06a51dfb9ab0" translate="yes" xml:space="preserve">
          <source>Must be able to access the chef-validator.pem so that it may create a new identity on the Chef Infra Server</source>
          <target state="translated">Chef Infra Server에서 새 ID를 만들 수 있도록 chef-validator.pem에 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="84e6d9849b8e294b9b9818c866ca613731f91359" translate="yes" xml:space="preserve">
          <source>Must be able to access the chef-validator.pem so that it may create a new identity on the Chef server</source>
          <target state="translated">Chef 서버에서 새 ID를 만들 수 있도록 chef-validator.pem에 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cd84b39dcbafffff6bae5bdfae63da20ed52b3b6" translate="yes" xml:space="preserve">
          <source>Must be able to authenticate to the Chef Infra Server</source>
          <target state="translated">Chef Infra Server에 인증 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c78f5e1193ec048cf2713c85fa357d64437b453d" translate="yes" xml:space="preserve">
          <source>Must be able to authenticate to the Chef server</source>
          <target state="translated">Chef 서버를 인증 할 수 있어야합니다</target>
        </trans-unit>
        <trans-unit id="7718bc4e23c8104ff6b316cec8d666f2a4ac32c6" translate="yes" xml:space="preserve">
          <source>Must be able to configure a run-list</source>
          <target state="translated">실행 목록을 구성 할 수 있어야합니다</target>
        </trans-unit>
        <trans-unit id="df2e0b97ece43ff47a391f370d850eb69af10ede" translate="yes" xml:space="preserve">
          <source>Must be added to a run-list before it can be used by Chef Infra Client</source>
          <target state="translated">Chef Infra Client에서 사용하기 전에 실행 목록에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="5cf87d05d21023d4eab3b9166941dee18989dbcf" translate="yes" xml:space="preserve">
          <source>Must be added to a run-list before it can be used by the chef-client</source>
          <target state="translated">요리사 클라이언트가 사용하기 전에 실행 목록에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e66c30df2c7a344ba8a46df45a53cc18d793601" translate="yes" xml:space="preserve">
          <source>Must be changed to explicitly declare the resource it provides:</source>
          <target state="translated">제공하는 리소스를 명시 적으로 선언하려면 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="82ccc5d5ac4a78976214d4a8af2e69e8b08a2ea0" translate="yes" xml:space="preserve">
          <source>Must be greater than 0.</source>
          <target state="translated">0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="8396c8c05d419e3dda5aacfde1561de97e7b887b" translate="yes" xml:space="preserve">
          <source>Must be greater than 1.</source>
          <target state="translated">1보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="43e70580ac3b6acc288367c726341c2051dee54d" translate="yes" xml:space="preserve">
          <source>Must be organization.</source>
          <target state="translated">조직이어야합니다.</target>
        </trans-unit>
        <trans-unit id="21c82e28bd135972fa8c7c5fcd091fc54bef82f1" translate="yes" xml:space="preserve">
          <source>Must be set to &lt;code&gt;false&lt;/code&gt; up to Chef Client 13.11.3 to gather the standard return code offered by &lt;code&gt;exit_status true&lt;/code&gt;. Later versions run as expected without changes to the configuration file.</source>
          <target state="translated">&lt;code&gt;exit_status true&lt;/code&gt; 에서 제공하는 표준 반환 코드를 수집하려면 Chef Client 13.11.3까지 &lt;code&gt;false&lt;/code&gt; 로 설정해야 합니다 . 이후 버전은 구성 파일을 변경하지 않고 예상대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="3812362d5fe3a2e39783ba2d46e1ba3f591c342b" translate="yes" xml:space="preserve">
          <source>Must be stored in a cookbook</source>
          <target state="translated">요리 책에 보관해야합니다</target>
        </trans-unit>
        <trans-unit id="c20070a381bf211b18cb6d98ba382da922ab6bc3" translate="yes" xml:space="preserve">
          <source>Must declare one (or more) settings to be tested</source>
          <target state="translated">테스트 할 하나 이상의 설정을 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="0ab48dd1bf1e062a0001456bd89d1b27d5377d44" translate="yes" xml:space="preserve">
          <source>Must declare the location of the configuration file to be tested</source>
          <target state="translated">테스트 할 구성 파일의 위치를 ​​선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="9aea41576cdcd99011bed7474dae31f818fe95dd" translate="yes" xml:space="preserve">
          <source>Must define everything that is required to configure part of a system</source>
          <target state="translated">시스템의 일부를 구성하는 데 필요한 모든 것을 정의해야합니다</target>
        </trans-unit>
        <trans-unit id="14e22b7104c71aaebb13580f17c18fb09d9eea1b" translate="yes" xml:space="preserve">
          <source>Must have a unique node name; Chef Infra Client will use the FQDN for the host system by default</source>
          <target state="translated">고유 한 노드 이름이 있어야합니다. Chef Infra Client는 기본적으로 호스트 시스템에 FQDN을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4f4f7a83b36a7d9538d4d09bb35693d52ad9a493" translate="yes" xml:space="preserve">
          <source>Must have a unique node name; the chef-client will use the FQDN for the host system by default</source>
          <target state="translated">고유 한 노드 이름이 있어야합니다. chef-client는 기본적으로 호스트 시스템에 FQDN을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="db1a11cac2413b30196c9bad60b8ada621d40225" translate="yes" xml:space="preserve">
          <source>MustBeRootError</source>
          <target state="translated">MustBeRootError</target>
        </trans-unit>
        <trans-unit id="587116bfc7fc4b9feae0b98cd9f61d8eb0abec7c" translate="yes" xml:space="preserve">
          <source>MySQL Server name, e.g. &lt;code&gt;my-sql-server&lt;/code&gt;.</source>
          <target state="translated">MySQL 서버 이름, 예 : &lt;code&gt;my-sql-server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e544eda097d63a50d7279987706ae4b4927ca89" translate="yes" xml:space="preserve">
          <source>MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named master.info in the data directory.</source>
          <target state="translated">MySQL 온 프레미스 마스터에서 복제 할 때 MySQL 특정 구성. 사용자 이름, 비밀번호, 인증서, 키와 같은 복제 구성 정보는 인스턴스 메타 데이터에 저장되지 않습니다. 구성 정보는 복제 연결을 설정하는 데만 사용되며 MySQL은 데이터 디렉토리의 master.info라는 파일에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="b78c72469682cedf3c195f033cf81391ad8147f6" translate="yes" xml:space="preserve">
          <source>NAPTR</source>
          <target state="translated">NAPTR</target>
        </trans-unit>
        <trans-unit id="d3108b7ca6fe05950a9192c2ed3eab2242ee22e8" translate="yes" xml:space="preserve">
          <source>NEARLINE</source>
          <target state="translated">NEARLINE</target>
        </trans-unit>
        <trans-unit id="aa7d8ccedb1e1939b9c4cbb6c659076c50bffca0" translate="yes" xml:space="preserve">
          <source>NEWLINE_DELIMITED_JSON</source>
          <target state="translated">NEWLINE_DELIMITED_JSON</target>
        </trans-unit>
        <trans-unit id="b9977f78b265c37e59b874eba4410524132922f8" translate="yes" xml:space="preserve">
          <source>NGINX SSL Protocols</source>
          <target state="translated">NGINX SSL 프로토콜</target>
        </trans-unit>
        <trans-unit id="d95d81bd3d908bacad9edd224459c581ee690850" translate="yes" xml:space="preserve">
          <source>NGINX forwards requests to this port on the push-jobs server as part of the push-jobs communication channel. Default value: &lt;code&gt;10003&lt;/code&gt;.</source>
          <target state="translated">NGINX는 푸시 작업 통신 채널의 일부로 푸시 작업 서버의이 포트로 요청을 전달합니다. 기본값 : &lt;code&gt;10003&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0654a028e5aea48c8fbb09871b8f397a186c883b" translate="yes" xml:space="preserve">
          <source>NONE</source>
          <target state="translated">NONE</target>
        </trans-unit>
        <trans-unit id="969e7d8dee132181523a501a068fec75bded3005" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>
        </trans-unit>
        <trans-unit id="480be67c09b9afe7a1c4f9f3520b8240ba64d988" translate="yes" xml:space="preserve">
          <source>NOTE: Azure does not allow the use of &lt;code&gt;Administrator&lt;/code&gt; as the admin username on a Windows machine</source>
          <target state="translated">참고 : 푸른이의 사용을 허용하지 않는 &lt;code&gt;Administrator&lt;/code&gt; Windows 시스템의 관리자 이름 등을</target>
        </trans-unit>
        <trans-unit id="6de42883e19adffad9d96c1a7626ec8ea32add30" translate="yes" xml:space="preserve">
          <source>NOTE: Starting in v0.10.12, if you have the feature &amp;lsquo;useEnhancedExitCodes&amp;rsquo; turned on, then choco will provide enhanced exit codes that allow better integration and scripting.</source>
          <target state="translated">참고 : v0.10.12부터 'useEnhancedExitCodes'기능이 켜져있는 경우 choco는 더 나은 통합 및 스크립팅을 허용하는 향상된 종료 코드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="005b9ac01e3cc60f667215a5ef9525efafcf54d8" translate="yes" xml:space="preserve">
          <source>NO_EXECUTE</source>
          <target state="translated">NO_EXECUTE</target>
        </trans-unit>
        <trans-unit id="52e8c8485df9cd02b0c2089a83b06b06c2d9ae8b" translate="yes" xml:space="preserve">
          <source>NO_SCHEDULE</source>
          <target state="translated">NO_SCHEDULE</target>
        </trans-unit>
        <trans-unit id="7d94ebbf07f5417771d7c7fd06f208703494bf50" translate="yes" xml:space="preserve">
          <source>NPM</source>
          <target state="translated">NPM</target>
        </trans-unit>
        <trans-unit id="d3fffd89aedf778abd6abee96a82691a465c97af" translate="yes" xml:space="preserve">
          <source>NS</source>
          <target state="translated">NS</target>
        </trans-unit>
        <trans-unit id="78a61edc526d45fb768660995e2f6179b5b3cb7b" translate="yes" xml:space="preserve">
          <source>NTP</source>
          <target state="translated">NTP</target>
        </trans-unit>
        <trans-unit id="6590624f1c1cb5fb123b9a660073c8ea49f31ce9" translate="yes" xml:space="preserve">
          <source>NULLABLE</source>
          <target state="translated">NULLABLE</target>
        </trans-unit>
        <trans-unit id="e19ac77aba28248a3f4e37170531e0c69b4cf98e" translate="yes" xml:space="preserve">
          <source>NVME</source>
          <target state="translated">NVME</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="4ccef8dddde7c311f40a07e2fdf5e1fabde8d04c" translate="yes" xml:space="preserve">
          <source>Name attributes after the recipe in which they are primarily used. e.g. &lt;code&gt;node['postgresql']['server']&lt;/code&gt;.</source>
          <target state="translated">주로 사용되는 레시피 뒤에 이름 속성이 있습니다. 예를 들어 &lt;code&gt;node['postgresql']['server']&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ff2c1fec4ddb07e950088ecb2da87c02517d06b1" translate="yes" xml:space="preserve">
          <source>Name of availability set to add virtual machine into.</source>
          <target state="translated">가상 머신을 추가 할 가용성 세트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b1d9b4a093dc516bca6abae848fbdc9f7793aefe" translate="yes" xml:space="preserve">
          <source>Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL.</source>
          <target state="translated">백엔드 포트의 이름입니다. 이 서비스에서 참조하는 인스턴스 그룹에 동일한 이름이 표시되어야합니다. 부하 분산 체계가 EXTERNAL 인 경우 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2a84982bab096ca2c46a5f0978497dd83a9fb8da" translate="yes" xml:space="preserve">
          <source>Name of the API</source>
          <target state="translated">API의 이름</target>
        </trans-unit>
        <trans-unit id="e166392583af2c797b4d4fa09d1f8c39a55be4d2" translate="yes" xml:space="preserve">
          <source>Name of the Amazon S3 bucket into which CloudTrail delivers your trail files.</source>
          <target state="translated">CloudTrail이 추적 파일을 전송하는 Amazon S3 버킷의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c2a638f8fc319852daf66cf8b7556d6ae1e33549" translate="yes" xml:space="preserve">
          <source>Name of the Cloud SQL instance. This does not include the project ID.</source>
          <target state="translated">Cloud SQL 인스턴스의 이름입니다. 여기에는 프로젝트 ID가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8cd39a671e58f2bd01eda47299e4feb8f29f8cdf" translate="yes" xml:space="preserve">
          <source>Name of the Cloud Source Repository. If omitted, the name &amp;ldquo;default&amp;rdquo; is assumed.</source>
          <target state="translated">Cloud Source Repository의 이름입니다. 생략하면 &quot;default&quot;라는 이름이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a25e7fccc090db6ebed4b84a03ce24f7a08b6ee0" translate="yes" xml:space="preserve">
          <source>Name of the NAT service. The name must be 1-63 characters long and comply with RFC1035.</source>
          <target state="translated">NAT 서비스의 이름입니다. 이름은 1-63 자 여야하며 RFC1035를 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="127a5a9ec554abf03f853f3b0be59e3d260da7be" translate="yes" xml:space="preserve">
          <source>Name of the Virtual Machine in Azure. Be aware that this is not the computer name or hostname, rather the name of the machine when seen in the Azure Portal.</source>
          <target state="translated">Azure의 가상 머신 이름입니다. 이것은 컴퓨터 이름이나 호스트 이름이 아니라 Azure 포털에 표시 될 때 머신의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="adf7bf3d5ae5f90b59c0615c06826876ed5680ba" translate="yes" xml:space="preserve">
          <source>Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided. This field is a regular expression.</source>
          <target state="translated">빌드 할 브랜치의 이름입니다. 브랜치 이름, 태그 또는 커밋 SHA 중 정확히 하나를 제공해야합니다. 이 필드는 정규식입니다.</target>
        </trans-unit>
        <trans-unit id="69bab31b129030e512ff3ab2da99b0af5a18584b" translate="yes" xml:space="preserve">
          <source>Name of the cookie.</source>
          <target state="translated">쿠키의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e1f9eb31ab456e71c42cfd888ad4fd5cb4c020b1" translate="yes" xml:space="preserve">
          <source>Name of the dataset</source>
          <target state="translated">데이터 세트 이름</target>
        </trans-unit>
        <trans-unit id="635e32b8939cf5409e99376596b1fe8d16805890" translate="yes" xml:space="preserve">
          <source>Name of the exclusion, specified by the server during create.</source>
          <target state="translated">생성하는 동안 서버에서 지정한 제외 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f9568106484b676decbfc59908c141330f634d74" translate="yes" xml:space="preserve">
          <source>Name of the log sink.</source>
          <target state="translated">로그 싱크의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8938fa048c59cc77cbab3cfd4a7bc6f572869d15" translate="yes" xml:space="preserve">
          <source>Name of the metadata label. The length must be between 1 and 1024 characters, inclusive.</source>
          <target state="translated">메타 데이터 레이블의 이름입니다. 길이는 1 자에서 1024 자 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="199cac02002c2ac400a11e4d50dff4b090848794" translate="yes" xml:space="preserve">
          <source>Name of the node in Chef Infra Server.</source>
          <target state="translated">Chef Infra Server의 노드 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1694131c7081e7ad7ca80aeaf88672c5905c5981" translate="yes" xml:space="preserve">
          <source>Name of the node pool</source>
          <target state="translated">노드 풀의 이름</target>
        </trans-unit>
        <trans-unit id="c8e0367b17e353e71fa6c3ba5a5d5abfd08f3a0a" translate="yes" xml:space="preserve">
          <source>Name of the node.</source>
          <target state="translated">노드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="84cf08d05fea2a05b60d50d9d6045d6a6f96c1ae" translate="yes" xml:space="preserve">
          <source>Name of the policy as set in policyfile.rb, only nodes using policyfiles will appear.</source>
          <target state="translated">policyfile.rb에 설정된 정책 이름, policyfile을 사용하는 노드 만 나타납니다.</target>
        </trans-unit>
        <trans-unit id="8736d1b2f80339f20397bf299b3cdac5307eb8de" translate="yes" xml:space="preserve">
          <source>Name of the quota metric</source>
          <target state="translated">할당량 측정 항목의 이름</target>
        </trans-unit>
        <trans-unit id="e3e667e463f3f0e37cab95f9460e1c051913bcf0" translate="yes" xml:space="preserve">
          <source>Name of the quota metric.</source>
          <target state="translated">할당량 측정 항목의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2a68cf9eeadae8b85e300bf8385f86dcf7dfcc44" translate="yes" xml:space="preserve">
          <source>Name of the repository. For example: The name for &lt;a href=&quot;https://github.com/googlecloudplatform/cloud-builders&quot;&gt;https://github.com/googlecloudplatform/cloud-builders&lt;/a&gt; is &amp;ldquo;cloud-builders&amp;rdquo;.</source>
          <target state="translated">저장소의 이름입니다. 예 : &lt;a href=&quot;https://github.com/googlecloudplatform/cloud-builders&quot;&gt;https://github.com/googlecloudplatform/cloud-builders&lt;/a&gt; 의 이름 은 'cloud-builders'입니다.</target>
        </trans-unit>
        <trans-unit id="0a0e86784b40519a1fa2d584936dd3c16e9b23f8" translate="yes" xml:space="preserve">
          <source>Name of the resource.</source>
          <target state="translated">자원의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6a43ed8bf48ebb1208561cdafbf5397f6395d9cc" translate="yes" xml:space="preserve">
          <source>Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="translated">자원의 이름입니다. 리소스가 생성 될 때 클라이언트에서 제공합니다. 이름은 1-63 자 여야하며 RFC1035를 준수해야합니다. 특히 이름은 1-63 자 여야하며 정규식 &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; 즉, 첫 번째 문자는 소문자 여야하며, 그 뒤에 나오는 모든 문자는 대시가 될 수없는 마지막 문자를 제외하고 대시, 소문자 또는 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="9f1274afae48d525cd22d44ae7a37d13675ee59a" translate="yes" xml:space="preserve">
          <source>Name of the resource. The name is 1-63 characters long and complies with RFC1035.</source>
          <target state="translated">자원의 이름입니다. 이름은 1-63 자이며 RFC1035를 준수합니다.</target>
        </trans-unit>
        <trans-unit id="ee95354015d42df61605edab3de178975fecdd7a" translate="yes" xml:space="preserve">
          <source>Name of the resource. The name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="translated">자원의 이름입니다. 이름은 1-63 자 여야하며 정규식 &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; 즉, 첫 번째 문자는 소문자 여야하며, 그 뒤에 나오는 모든 문자는 대시가 될 수없는 마지막 문자를 제외하고 대시, 소문자 또는 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="feb69766fcdcfdff71a59850524e354ddc8a85b2" translate="yes" xml:space="preserve">
          <source>Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="translated">자원의 이름입니다. 이름은 1-63 자 여야하며 RFC1035를 준수해야합니다. 특히 이름은 1-63 자 여야하며 정규식 &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; 즉, 첫 번째 문자는 소문자 여야하며, 그 뒤에 나오는 모든 문자는 대시가 될 수없는 마지막 문자를 제외하고 대시, 소문자 또는 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c16896093d27b632ed829750d41dccf20be919af" translate="yes" xml:space="preserve">
          <source>Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.</source>
          <target state="translated">자원의 이름 리소스가 생성 될 때 클라이언트가 제공합니다. 이름은 1-63 자 여야하며 RFC1035를 준수해야합니다. 특히 이름은 1-63 자 여야하며 정규식 &lt;code&gt;[a-z]([-a-z0-9]*[a-z0-9])?&lt;/code&gt; 즉, 첫 번째 문자는 소문자 여야하며, 그 뒤에 나오는 모든 문자는 대시가 될 수없는 마지막 문자를 제외하고 대시, 소문자 또는 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="2fd63bd2bf4fe829e0955c079ce8b0014c639308" translate="yes" xml:space="preserve">
          <source>Name of the security policy.</source>
          <target state="translated">보안 정책의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e9c21b5851f1fb2efbbbe5fb845ec9d550177ade" translate="yes" xml:space="preserve">
          <source>Name of the subscription.</source>
          <target state="translated">구독 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6e6c0d89fb2b8ca8cd64685932449a001a9da4f4" translate="yes" xml:space="preserve">
          <source>Name of the table</source>
          <target state="translated">테이블 이름</target>
        </trans-unit>
        <trans-unit id="946f47e5326ed72caa72bc1e09cfbf8af1e1f4af" translate="yes" xml:space="preserve">
          <source>Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided. This field is a regular expression.</source>
          <target state="translated">빌드 할 태그의 이름입니다. 분기 이름, 태그 또는 커밋 SHA 중 정확히 하나를 제공해야합니다. 이 필드는 정규식입니다.</target>
        </trans-unit>
        <trans-unit id="046d564d5a24c461a69872120d2adfea0c415ec8" translate="yes" xml:space="preserve">
          <source>Name of the topic.</source>
          <target state="translated">주제의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="38c678e9b02ecd82acb213241359c0cf0b5e1f05" translate="yes" xml:space="preserve">
          <source>Name of the trail.</source>
          <target state="translated">트레일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="758dc1caeaac00c419828a1d3d060c082ca8e80d" translate="yes" xml:space="preserve">
          <source>Name of the trigger. Must be unique within the project.</source>
          <target state="translated">트리거의 이름입니다. 프로젝트 내에서 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="b92a4cc1948533c97442399260b586c1edaf36b9" translate="yes" xml:space="preserve">
          <source>Name of the user to be created as a rescue account</source>
          <target state="translated">복구 계정으로 생성 할 사용자의 이름</target>
        </trans-unit>
        <trans-unit id="301f6a5938abe908f7020b63096829a2dd0b9cdd" translate="yes" xml:space="preserve">
          <source>Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.</source>
          <target state="translated">마운트 할 볼륨의 이름입니다. 볼륨 이름은 빌드 단계마다 고유해야하며 Docker 볼륨에 유효한 이름이어야합니다. 명명 된 각 볼륨은 최소 두 개의 빌드 단계에서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="65bd7b45f5231650d26b67a679127ab7cc13d33c" translate="yes" xml:space="preserve">
          <source>Name the package</source>
          <target state="translated">패키지 이름 지정</target>
        </trans-unit>
        <trans-unit id="c4f283a52d0d79e42fd9a247c0ec96904e3dddd3" translate="yes" xml:space="preserve">
          <source>Name the package after the CIS benchmark that it contains is the best practice, for example, &lt;code&gt;company-cis-linux-policy&lt;/code&gt;. You can also name the package for the application stack that the exceptions and remediation changes apply, for example, &lt;code&gt;redis-company-cis-linux-policy&lt;/code&gt;.</source>
          <target state="translated">패키지에 포함 된 CIS 벤치 마크를 따라 패키지 이름을 지정하십시오 (예 : &lt;code&gt;company-cis-linux-policy&lt;/code&gt; ) . 예외 및 수정 변경 사항이 적용되는 애플리케이션 스택의 패키지 이름을 지정할 수도 있습니다 (예 : &lt;code&gt;redis-company-cis-linux-policy&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="07c86fef27a8ab3c593e020c662ba162dd1eca9b" translate="yes" xml:space="preserve">
          <source>Name things uniformly for their system and component. For example:</source>
          <target state="translated">시스템과 구성 요소에 대해 일관된 이름을 지정하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="600afbdb6f7a49b70e50e9c340a30f1b86fe2e6b" translate="yes" xml:space="preserve">
          <source>Name to use for Chef Automate backup archives and snapshots. When omitted a default will used automatically. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Chef Automate 백업 아카이브 및 스냅 샷에 사용할 이름입니다. 생략하면 기본값이 자동으로 사용됩니다. 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3730a08a2dc6d5e27dc5120effaf694a10477d63" translate="yes" xml:space="preserve">
          <source>Named ports configured for the Instance Groups complementary to this Instance Group Manager.</source>
          <target state="translated">이 인스턴스 그룹 관리자를 보완하는 인스턴스 그룹에 대해 구성된 명명 된 포트입니다.</target>
        </trans-unit>
        <trans-unit id="1a71fc0ca6fcd060f7cf4143cc5869c901f79a4c" translate="yes" xml:space="preserve">
          <source>Nameless</source>
          <target state="translated">Nameless</target>
        </trans-unit>
        <trans-unit id="706a0b19bfbf28ebbbc07431d28617d92391ec7c" translate="yes" xml:space="preserve">
          <source>Names of permissions this role grants when bound in an IAM policy.</source>
          <target state="translated">이 역할이 IAM 정책에 바인딩 될 때 부여하는 권한의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fc1451380af754dbecc8502c63b92c02af3d391e" translate="yes" xml:space="preserve">
          <source>Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. &amp;lsquo;&amp;amp;&amp;rsquo; and &amp;lsquo;=&amp;rsquo; will be percent encoded and not treated as delimiters.</source>
          <target state="translated">캐시 키에서 제외 할 쿼리 문자열 매개 변수의 이름입니다. 다른 모든 매개 변수가 포함됩니다. query_string_whitelist 또는 query_string_blacklist 중 하나만 지정하십시오. '&amp;amp;'및 '='는 백분율로 인코딩되며 구분 기호로 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="adf2c5390b1e46892b520bd3e621d9b6f5305376" translate="yes" xml:space="preserve">
          <source>Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. &amp;lsquo;&amp;amp;&amp;rsquo; and &amp;lsquo;=&amp;rsquo; will be percent encoded and not treated as delimiters.</source>
          <target state="translated">캐시 키에 포함 할 쿼리 문자열 매개 변수의 이름입니다. 다른 모든 매개 변수는 제외됩니다. query_string_whitelist 또는 query_string_blacklist 중 하나만 지정하십시오. '&amp;amp;'및 '='는 백분율로 인코딩되며 구분 기호로 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="translated">Namespace</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="0082d8f8e53e323a051ca6e1f62a98de5e9ee544" translate="yes" xml:space="preserve">
          <source>Naming Resources</source>
          <target state="translated">명명 리소스</target>
        </trans-unit>
        <trans-unit id="b6ad8c6edd0d60c33915e773a1bcc7aeb135cd0f" translate="yes" xml:space="preserve">
          <source>Navigate back to the Chef Automate &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B01AMIH01Q&quot;&gt;product page&lt;/a&gt; and continue to the launch wizard.</source>
          <target state="translated">Chef Automate &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B01AMIH01Q&quot;&gt;제품 페이지로&lt;/a&gt; 돌아가서 시작 마법사를 계속합니다.</target>
        </trans-unit>
        <trans-unit id="8cf1e8eaa59df2c96a1779b92b0f5f363970753e" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate-test&lt;/code&gt; on your workstation</source>
          <target state="translated">워크 스테이션 에서 &lt;code&gt;https://automate-test&lt;/code&gt; 로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="802bd273d3c0b991a413782009b9c906d35571a7" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate.example.com&lt;/code&gt; in a browser and log in to Chef Automate with the credentials provided in &lt;code&gt;automate-credentials.toml&lt;/code&gt;.</source>
          <target state="translated">브라우저에서 &lt;code&gt;https://automate.example.com&lt;/code&gt; 으로 이동하고 &lt;code&gt;automate-credentials.toml&lt;/code&gt; 에 제공된 자격 증명을 사용하여 Chef Automate에 로그인 합니다.</target>
        </trans-unit>
        <trans-unit id="dc262fb64c6a0eb82e8bfb5be7cb86d48884bccc" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate.example.com&lt;/code&gt; in a browser and log in to Chef Automate with the credentials provided in &lt;code&gt;automate-credentials.toml&lt;/code&gt;. Once you log in, Chef Automate prompts you for a license.</source>
          <target state="translated">브라우저에서 &lt;code&gt;https://automate.example.com&lt;/code&gt; 으로 이동하고 &lt;code&gt;automate-credentials.toml&lt;/code&gt; 에 제공된 자격 증명을 사용하여 Chef Automate에 로그인 합니다. 로그인하면 Chef Automate에서 라이선스를 요청합니다.</target>
        </trans-unit>
        <trans-unit id="946bc656b7fe1cb5837d6a2072994902d7ba60d0" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;https://automate.example.com&lt;/code&gt; in your browser. If you cannot access the site in Google Chrome, try Mozilla Firefox or Microsoft Edge.</source>
          <target state="translated">브라우저에서 &lt;code&gt;https://automate.example.com&lt;/code&gt; 으로 이동 합니다. Google Chrome에서 사이트에 액세스 할 수없는 경우 Mozilla Firefox 또는 Microsoft Edge를 사용해보세요.</target>
        </trans-unit>
        <trans-unit id="4be6df316593e53800f0657eef84fd3d4cf297a2" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;API Tokens&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Token&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;API 토큰&lt;/em&gt; 으로 이동합니다 . 그런 다음 테이블 행 끝에있는 메뉴를 열고 &lt;strong&gt;토큰 삭제를&lt;/strong&gt; 선택 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6565afe8c23c61e2c3683a603b9fc0ac61e39d54" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;API Tokens&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then, use the &lt;strong&gt;Create Token&lt;/strong&gt; button, which opens a dialog box for entering the API token&amp;rsquo;s &lt;em&gt;name&lt;/em&gt; and optionally assigning the API token to one or more &lt;em&gt;Policies&lt;/em&gt; and to one or more &lt;em&gt;Projects&lt;/em&gt;. A token ID automatically generates upon creation. If you would like to change the token ID, select the &lt;strong&gt;Edit ID&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;API 토큰&lt;/em&gt; 으로 이동합니다 . 그런 다음 &lt;strong&gt;토큰 생성&lt;/strong&gt; 버튼을 사용하여 API 토큰의 &lt;em&gt;이름&lt;/em&gt; 을 입력 하고 선택적으로 API 토큰을 하나 이상의 &lt;em&gt;정책&lt;/em&gt; 및 하나 이상의 &lt;em&gt;프로젝트에&lt;/em&gt; 할당 할 수 있는 대화 상자를 엽니 다 . 토큰 ID는 생성시 자동으로 생성됩니다. 토큰 ID를 변경하려면 ID &lt;strong&gt;편집&lt;/strong&gt; 버튼을 선택하십시오 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5a7c44393fdf6ee304c62766ea893e9d08d8a17" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Policies&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Policy&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;정책&lt;/em&gt; 으로 이동합니다 . 그런 다음 테이블 행 끝에있는 메뉴를 열고 &lt;strong&gt;정책 삭제를&lt;/strong&gt; 선택 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a39e0c762f02e2633917d7813195ddb7528dcc6f" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Projects&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then use the &lt;strong&gt;Create Project&lt;/strong&gt; button, which opens a dialog box for entering the project&amp;rsquo;s &lt;em&gt;Name&lt;/em&gt;. A project ID automatically generates upon creation. If you would like to change the project ID, use the &lt;strong&gt;Edit ID&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;프로젝트&lt;/em&gt; 로 이동합니다 . 그런 다음 &lt;strong&gt;프로젝트 생성&lt;/strong&gt; 버튼을 사용하여 프로젝트의 &lt;em&gt;이름&lt;/em&gt; 을 입력 할 수있는 대화 상자를 엽니 다 . 프로젝트 ID는 생성시 자동으로 생성됩니다. 프로젝트 ID를 변경하려면 ID &lt;strong&gt;수정&lt;/strong&gt; 버튼을 사용 하세요.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e43a0ff21189fd6011bb397f93a96043b69f31e" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Roles&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Role&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;역할&lt;/em&gt; 로 이동합니다 . 그런 다음 표 행 끝에있는 메뉴를 열고 &lt;strong&gt;역할 삭제를&lt;/strong&gt; 선택 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="307e1da6fd980ed3ccee4a14e115e1aac207c622" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Data Lifecycle&lt;/em&gt; and adjust any settings you would like to change. After making changes, use the &lt;strong&gt;Save Changes&lt;/strong&gt; button to apply your changes.</source>
          <target state="translated">&lt;em&gt;설정&lt;/em&gt; &amp;gt; &lt;em&gt;데이터 수명 주기로&lt;/em&gt; 이동하여 변경하려는 설정을 조정합니다. 변경 한 후 변경 사항 &lt;strong&gt;저장&lt;/strong&gt; 버튼을 사용하여 &lt;strong&gt;변경 사항&lt;/strong&gt; 을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="224f3833236bfcbbcc3e445ebaf9f55e4209e963" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Teams&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Select the &lt;strong&gt;Create Team&lt;/strong&gt; button, which opens a dialog box to enter the team&amp;rsquo;s &lt;em&gt;Name&lt;/em&gt; and optionally assign the team to one or more &lt;em&gt;Projects&lt;/em&gt;. A team ID automatically generates upon creation. If you would like to change the team ID, use the &lt;strong&gt;Edit ID&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;Teams&lt;/em&gt; 로 이동합니다 . &lt;strong&gt;팀 생성&lt;/strong&gt; 버튼을 선택하면 팀의 &lt;em&gt;이름&lt;/em&gt; 을 입력 하고 선택적으로 하나 이상의 &lt;em&gt;프로젝트에&lt;/em&gt; 팀을 할당 할 수 있는 대화 상자가 열립니다 . 팀 ID는 생성시 자동으로 생성됩니다. 팀 ID를 변경하려면 ID &lt;strong&gt;편집&lt;/strong&gt; 버튼을 사용하십시오 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef90343bd4ee4347ef97a658201c6bb4816f8068" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Teams&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Team&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;Teams&lt;/em&gt; 로 이동합니다 . 그런 다음 테이블 행 끝에있는 메뉴를 열고 &lt;strong&gt;팀 삭제를&lt;/strong&gt; 선택 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b760a3e1c82e9a59e3f14ea14e50d1e5904dc38" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab and locate the user who needs a password reset. Navigate to their user page, and then the &lt;strong&gt;Reset Password&lt;/strong&gt; tab. Provide a new password, confirm the new password, and then select the &lt;strong&gt;Reset Password&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;사용자&lt;/em&gt; 로 이동하여 암호 재설정이 필요한 사용자를 찾습니다. 사용자 페이지로 이동 한 다음 &lt;strong&gt;비밀번호 재설정&lt;/strong&gt; 탭으로 이동합니다. 새 비밀번호를 입력하고 새 비밀번호를 확인한 다음 &lt;strong&gt;비밀번호 재설정&lt;/strong&gt; 버튼 을 선택 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3092dcf989aa29d675112d42e8bce849ecf31d77" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab and locate the user who needs their display name changed. Navigate to their user page, provide a new display name, and select the &lt;strong&gt;Save&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;사용자&lt;/em&gt; 로 이동하여 표시 이름을 변경해야하는 사용자를 찾습니다. 사용자 페이지로 이동하여 새 표시 이름을 제공하고 &lt;strong&gt;저장&lt;/strong&gt; 버튼을 선택 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0d7e4f7808b9cf9c50a2b25504cd06ed6f5573d" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Select the &lt;strong&gt;Create User&lt;/strong&gt; button, which opens a dialog box for entering the user&amp;rsquo;s &lt;em&gt;display name&lt;/em&gt;, and &lt;em&gt;password&lt;/em&gt;. A username automatically generates upon creation. If you would like to change the username, use the &lt;strong&gt;Edit Username&lt;/strong&gt; button.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;사용자&lt;/em&gt; 로 이동합니다 . &lt;strong&gt;사용자 생성&lt;/strong&gt; 버튼을 선택하면 사용자의 &lt;em&gt;표시 이름&lt;/em&gt; 및 &lt;em&gt;암호&lt;/em&gt; 를 입력 할 수있는 대화 상자가 열립니다 . 사용자 이름은 생성시 자동으로 생성됩니다. 사용자 이름을 변경하려면 사용자 이름 &lt;strong&gt;편집&lt;/strong&gt; 버튼을 사용하십시오 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9fd8c759931ce6464adaf2cd23865c1695e3800" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;em&gt;Users&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete User&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;em&gt;사용자&lt;/em&gt; 로 이동합니다 . 그런 다음 테이블 행 끝에있는 메뉴를 열고 &lt;strong&gt;사용자 삭제를&lt;/strong&gt; 선택 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85a266eaeafe77934b8ec219cfd99c34293e5710" translate="yes" xml:space="preserve">
          <source>Navigate to Blob Storage &amp;gt; Containers</source>
          <target state="translated">Blob Storage&amp;gt; 컨테이너로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="e05d69a2f598ae226d0fafd756af9bb296878684" translate="yes" xml:space="preserve">
          <source>Navigate to Blob Storage -&amp;gt; Containers.</source>
          <target state="translated">Blob Storage-&amp;gt; 컨테이너로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="88c4edec1f4d60fdd591b26488f2f69618f4d3e4" translate="yes" xml:space="preserve">
          <source>Navigate to a project in Workflow.</source>
          <target state="translated">워크 플로에서 프로젝트로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="d88a85d0adf1a4aea72c2786f0aa5330d227793a" translate="yes" xml:space="preserve">
          <source>Navigate to compliance profiles by selecting the &lt;strong&gt;Compliance&lt;/strong&gt; tab and then selecting the &lt;em&gt;Profiles&lt;/em&gt; page, or by heading to &lt;code&gt;https://automate.example.com/compliance/compliance-profiles&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;준수&lt;/strong&gt; 탭을 선택한 다음 &lt;em&gt;프로필&lt;/em&gt; 페이지 를 선택 하거나 &lt;code&gt;https://automate.example.com/compliance/compliance-profiles&lt;/code&gt; 로 이동하여 준수 프로필로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="752da36f37e310e53abe996b8bd589f5a7598457" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;a href=&quot;https://console.aws.amazon.com/iam/home#roles&quot;&gt;IAM Role section in the AWS console&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://console.aws.amazon.com/iam/home#roles&quot;&gt;AWS 콘솔&lt;/a&gt; 의 IAM 역할 섹션으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="f387a2122203b5b92e9a70a814412d1077f71a85" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;a href=&quot;https://s3.console.aws.amazon.com/s3/home&quot;&gt;S3 Console&lt;/a&gt; and create an S3 bucket in the region where you intend to launch the Chef Automate AMI.</source>
          <target state="translated">&lt;a href=&quot;https://s3.console.aws.amazon.com/s3/home&quot;&gt;S3 콘솔로&lt;/a&gt; 이동 하여 Chef Automate AMI를 시작할 리전에서 S3 버킷을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="553482a27acab66a1fa26f7c2c13099104f41bf9" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;.chef&lt;/code&gt; directory, and create a &lt;code&gt;bootstrap&lt;/code&gt; directory within it:</source>
          <target state="translated">&lt;code&gt;.chef&lt;/code&gt; 디렉토리로 이동하여 그 안에 &lt;code&gt;bootstrap&lt;/code&gt; 디렉토리를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ccd94d01e2566e5df17759aba135427aff1b4525" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;first_cookbook&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;first_cookbook&lt;/code&gt; 디렉토리로 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="dea60bf3f21ff92775f1164683aa142e4e4ab9a1" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;code&gt;~/chef-repo/.chef&lt;/code&gt; directory and create the &lt;code&gt;config.rb&lt;/code&gt; using the &lt;code&gt;knife configure&lt;/code&gt; tool. The file must be created in the &lt;code&gt;.chef&lt;/code&gt; folder. It should look similar to:</source>
          <target state="translated">받는 이동 &lt;code&gt;~/chef-repo/.chef&lt;/code&gt; 디렉토리는 생성 &lt;code&gt;config.rb&lt;/code&gt; 은 Using &lt;code&gt;knife configure&lt;/code&gt; 도구를. &lt;code&gt;.chef&lt;/code&gt; 폴더 에 파일을 생성해야 합니다. 다음과 유사해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1109288dbe28b858229173b7515b6c89011d06b" translate="yes" xml:space="preserve">
          <source>Navigate to the Amazon Web Services (AWS) instance in the AWS Management Console.</source>
          <target state="translated">AWS Management Console에서 Amazon Web Services (AWS) 인스턴스로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="3efeb3298632dbef8f8a436aa032c6679f170a0f" translate="yes" xml:space="preserve">
          <source>Navigate to the Chef Automate &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B01N813OWL&quot;&gt;product page&lt;/a&gt; and accept the software terms.</source>
          <target state="translated">Chef Automate &lt;a href=&quot;https://aws.amazon.com/marketplace/pp/B01N813OWL&quot;&gt;제품 페이지로&lt;/a&gt; 이동 하여 소프트웨어 약관에 동의하십시오.</target>
        </trans-unit>
        <trans-unit id="758691eaa9933dc8e6d527e1bc45041b7357956a" translate="yes" xml:space="preserve">
          <source>Navigate to the notification settings page in the Chef Automate UI</source>
          <target state="translated">Chef Automate UI의 알림 설정 페이지로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="91912d4a56bf4f998f53dd60e99345c775d3d870" translate="yes" xml:space="preserve">
          <source>Navigate to the project details page of &lt;code&gt;project-devops&lt;/code&gt;, by selecting the project name on the project list page.</source>
          <target state="translated">프로젝트 목록 페이지에서 프로젝트 이름을 선택하여 &lt;code&gt;project-devops&lt;/code&gt; 의 프로젝트 세부 정보 페이지로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="f8a7afa7c754bad982eb88ef25c856a6356df197" translate="yes" xml:space="preserve">
          <source>Navigate to the project&amp;rsquo;s page (&lt;code&gt;/$ENT_NAME/organizations/$ORG_NAME/projects/$PROJECT_NAME&lt;/code&gt;) in the Workflow web UI and click the &lt;code&gt;Pipelines&lt;/code&gt; tab.</source>
          <target state="translated">워크 플로 웹 UI에서 &lt;code&gt;/$ENT_NAME/organizations/$ORG_NAME/projects/$PROJECT_NAME&lt;/code&gt; 페이지 ( / $ ENT_NAME / organizations / $ ORG_NAME / projects / $ PROJECT_NAME )로 이동하고 &lt;code&gt;Pipelines&lt;/code&gt; 탭을 클릭합니다 .</target>
        </trans-unit>
        <trans-unit id="602ba93eaef23b93630207166ecbf1f3004bef36" translate="yes" xml:space="preserve">
          <source>Navigate to the project&amp;rsquo;s page (&lt;code&gt;e/$ENT_NAME/#/organizations/$ORG_NAME/projects/$PROJECT_NAME&lt;/code&gt;) in the Chef Automate web UI and click on the &lt;code&gt;Pipelines&lt;/code&gt; tab.</source>
          <target state="translated">Chef Automate 웹 UI 에서 프로젝트 페이지 ( &lt;code&gt;e/$ENT_NAME/#/organizations/$ORG_NAME/projects/$PROJECT_NAME&lt;/code&gt; )로 이동하고 &lt;code&gt;Pipelines&lt;/code&gt; 탭을 클릭합니다 .</target>
        </trans-unit>
        <trans-unit id="16778a312f501ca7b6f29631bdc578b334409e14" translate="yes" xml:space="preserve">
          <source>Navigate to the root of the cookbook that you want to upload, then initialize Stove:</source>
          <target state="translated">업로드하려는 요리 책의 루트로 이동 한 다음 Stove를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="d56b5d7a8daff5b2d277780014be87e3a167c025" translate="yes" xml:space="preserve">
          <source>Necessary Ports</source>
          <target state="translated">필요한 포트</target>
        </trans-unit>
        <trans-unit id="c40b6ed63321ac9b18d9edc4345a84c83c400d2d" translate="yes" xml:space="preserve">
          <source>Negotiate, NTLM</source>
          <target state="translated">협상, NTLM</target>
        </trans-unit>
        <trans-unit id="b29f904a01e80b3d206c946ed776c5035750f89f" translate="yes" xml:space="preserve">
          <source>Nell Shamrell-Harringon&amp;rsquo;s blog post</source>
          <target state="translated">Nell Shamrell-Harringon의 블로그 게시물</target>
        </trans-unit>
        <trans-unit id="71af4b3dab30f2abf84de7f8e5216405d6d9cf25" translate="yes" xml:space="preserve">
          <source>Nested Fields</source>
          <target state="translated">중첩 된 필드</target>
        </trans-unit>
        <trans-unit id="1c2d0f38d6862e1ceda5f7b596dd3455affea97a" translate="yes" xml:space="preserve">
          <source>Nested describe blocks</source>
          <target state="translated">중첩 설명 블록</target>
        </trans-unit>
        <trans-unit id="56d6a0ee257e4d378c2cc1874fcf6832feb64786" translate="yes" xml:space="preserve">
          <source>Nesting a &lt;code&gt;describe.one&lt;/code&gt; block inside another &lt;code&gt;describe.one&lt;/code&gt; block is not supported.</source>
          <target state="translated">중첩 &lt;code&gt;describe.one&lt;/code&gt; 의 다른 내부 블록 &lt;code&gt;describe.one&lt;/code&gt; 의 블록은 지원되지 않는다.</target>
        </trans-unit>
        <trans-unit id="18aa902ea0669a0c8c8db808fe69bc76dab09400" translate="yes" xml:space="preserve">
          <source>Net Effect Examples</source>
          <target state="translated">순 효과 예</target>
        </trans-unit>
        <trans-unit id="a64d9cd121c344a2ba9288a016802f5fdbb53578" translate="yes" xml:space="preserve">
          <source>NetBSD. All platform variants of NetBSD return &lt;code&gt;netbsd&lt;/code&gt;.</source>
          <target state="translated">NetBSD. 모든 플랫폼은 NetBSD의 반환 변종 &lt;code&gt;netbsd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53ebc572b4a44802ba114729f07bdaaf5409a9d7" translate="yes" xml:space="preserve">
          <source>Network</source>
          <target state="translated">Network</target>
        </trans-unit>
        <trans-unit id="a6ccd7f346fb359e779068333df6449fe3d15831" translate="yes" xml:space="preserve">
          <source>Network IP address of an instance that should handle matching packets.</source>
          <target state="translated">일치하는 패킷을 처리해야하는 인스턴스의 네트워크 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="a87a499496a16c922c86ddb772aa037a5ea60e97" translate="yes" xml:space="preserve">
          <source>Network Port Requirements</source>
          <target state="translated">네트워크 포트 요구 사항</target>
        </trans-unit>
        <trans-unit id="ea9e6663a54f88d4a3cd080622cff5630d90afe2" translate="yes" xml:space="preserve">
          <source>Network Services</source>
          <target state="translated">네트워크 서비스</target>
        </trans-unit>
        <trans-unit id="ad15b3016396eb830f3942429704f8f90cc2a840" translate="yes" xml:space="preserve">
          <source>Network interface name, e.g. &lt;code&gt;nic-name&lt;/code&gt;.</source>
          <target state="translated">네트워크 인터페이스 이름, 예 : &lt;code&gt;nic-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b8870df906f13a1d372e026ab863eec103e224f" translate="yes" xml:space="preserve">
          <source>Network interface name, e.g. &lt;code&gt;vm-nic&lt;/code&gt;.</source>
          <target state="translated">네트워크 인터페이스 이름 (예 : &lt;code&gt;vm-nic&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="094dd81ca6e35161c564f51aececf96f7d456f9a" translate="yes" xml:space="preserve">
          <source>Network routing configuration is preventing access to the host</source>
          <target state="translated">네트워크 라우팅 구성으로 인해 호스트에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c7a39d625d875e0d4075bc8c35a54494d2cfffc4" translate="yes" xml:space="preserve">
          <source>Network security groups indicates if recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">네트워크 보안 그룹은 가상 머신에 대한 권장 사항이 활성화되었는지 여부를 나타냅니다 ( &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a4d7a11dd6e9031feb83d3e202c16372867c5cc2" translate="yes" xml:space="preserve">
          <source>Network usage</source>
          <target state="translated">네트워크 사용량</target>
        </trans-unit>
        <trans-unit id="195e7ca7bc97970069b4cb9c66ba98fe7d86e053" translate="yes" xml:space="preserve">
          <source>Networking family option for Debian-based systems; for example: &lt;code&gt;inet&lt;/code&gt; or &lt;code&gt;inet6&lt;/code&gt;.</source>
          <target state="translated">데비안 기반 시스템을위한 네트워킹 제품군 옵션; 예 : &lt;code&gt;inet&lt;/code&gt; 또는 &lt;code&gt;inet6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcbe5f1cb24ee8424b6cd99f9a11500d5a05478b" translate="yes" xml:space="preserve">
          <source>Networking ports exposed by Chef Habitat need to be added to the JSON.</source>
          <target state="translated">Chef Habitat에서 제공하는 네트워킹 포트를 JSON에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9a7ebaeaa9232966fd9e2775433928d14a66c54" translate="yes" xml:space="preserve">
          <source>Never run services on those Supervisors</source>
          <target state="translated">해당 감독자에서 서비스를 실행하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="41ed81968fc7826f1ed5fafee626f6885adb6786" translate="yes" xml:space="preserve">
          <source>New Data Paths</source>
          <target state="translated">새로운 데이터 경로</target>
        </trans-unit>
        <trans-unit id="035f2afd0a3f97a54c00c8e3899f54acb71b6482" translate="yes" xml:space="preserve">
          <source>New Provisioner Settings</source>
          <target state="translated">새 제공자 설정</target>
        </trans-unit>
        <trans-unit id="ff3436427337238b332c9a8f185813f051d61173" translate="yes" xml:space="preserve">
          <source>New Relic</source>
          <target state="translated">새로운 유물</target>
        </trans-unit>
        <trans-unit id="ef8c27a1af0d9e8cce74223bd455210a4b504a5c" translate="yes" xml:space="preserve">
          <source>New Setting</source>
          <target state="translated">새로운 설정</target>
        </trans-unit>
        <trans-unit id="11652493f963810875e553ea044167f4a7ce49e9" translate="yes" xml:space="preserve">
          <source>New cops</source>
          <target state="translated">새로운 경찰</target>
        </trans-unit>
        <trans-unit id="c26a6255bcc9153023a41cfcfef3124b7d6e9824" translate="yes" xml:space="preserve">
          <source>New cops are continuously added to Rubocop. New cops can make existing codebases fail CI tests and force authors to constantly update their code.</source>
          <target state="translated">새로운 경찰이 Rubocop에 지속적으로 추가됩니다. 새로운 경찰은 기존 코드베이스가 CI 테스트에 실패하고 작성자가 지속적으로 코드를 업데이트하도록 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5869421ad9337c9a5572c6459a41b322cc90c9c5" translate="yes" xml:space="preserve">
          <source>New default, &lt;em&gt;Chef-managed&lt;/em&gt; policies: Administrator, Ingest, Editors, and Viewers.</source>
          <target state="translated">새로운 기본, &lt;em&gt;Chef 관리&lt;/em&gt; 정책 : 관리자, 수집, 편집자 및 뷰어.</target>
        </trans-unit>
        <trans-unit id="7496d77b9ba10fb6ba1a75cd4ebd3b4d4618369e" translate="yes" xml:space="preserve">
          <source>New in 12.0, &lt;code&gt;-o RUN_LIST_ITEM&lt;/code&gt;. Changed in 12.0 &lt;code&gt;-f&lt;/code&gt; no longer allows unforked intervals, &lt;code&gt;-i SECONDS&lt;/code&gt; is applied before a Chef Infra Client run.</source>
          <target state="translated">12.0의 새로운 기능, &lt;code&gt;-o RUN_LIST_ITEM&lt;/code&gt; . 12.0에서 변경 &lt;code&gt;-f&lt;/code&gt; 는 더 이상 포크되지 않은 간격을 허용하지 않으며 &lt;code&gt;-i SECONDS&lt;/code&gt; 는 Chef Infra Client 실행 전에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fcf4325295430fe009ee9cbb13bc0a9c721726bb" translate="yes" xml:space="preserve">
          <source>New in Automate 1.7.114</source>
          <target state="translated">Automate 1.7.114의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="662423ea821d5d1c6eec295aa912f15da7e372db" translate="yes" xml:space="preserve">
          <source>New in Automate version 1.7</source>
          <target state="translated">Automate 버전 1.7의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="8be9590d6d500cec4d533be7f7e5555eda76ee53" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 0.5.328.</source>
          <target state="translated">Chef Automate 0.5.328의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="69393c0bf1dfcdaadcc1d0c11da98a64a433b501" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 0.6.64.</source>
          <target state="translated">Chef Automate 0.6.64의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="170ee9c0f420b8ade8d7443e2dd3ae06806b58f3" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 1.6.192.</source>
          <target state="translated">Chef Automate 1.6.192의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="2e33e25f42725240a4803af876257b85fe3d0be9" translate="yes" xml:space="preserve">
          <source>New in Chef Automate 1.6.87.</source>
          <target state="translated">Chef Automate 1.6.87의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="308965a1abb1be5c619295360b0cfd42883d5f7d" translate="yes" xml:space="preserve">
          <source>New in Chef Backend 1.4.</source>
          <target state="translated">Chef Backend 1.4의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="7f4d61132e7c375fad76d9b024a60ceda064a549" translate="yes" xml:space="preserve">
          <source>New in Chef Backend 2.2.</source>
          <target state="translated">Chef Backend 2.2의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="2be629f46ca83812d2972051abebf0cd98b330f0" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.11.</source>
          <target state="translated">Chef Client의 새로운 기능 12.11.</target>
        </trans-unit>
        <trans-unit id="ad0a49267a574954d6c2c793c6d0455fb6df147e" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.14</source>
          <target state="translated">Chef Client 12.14의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="d31baeb158ca6f6425f06974bec8bc171adecdb3" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.18</source>
          <target state="translated">Chef Client 12.18의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="913d37c67468a62745a274049b754ebc31e0e38a" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.21</source>
          <target state="translated">Chef Client 12.21의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="c3eb4ea304f1fa97cf43f2ba158543a612efc360" translate="yes" xml:space="preserve">
          <source>New in Chef Client 12.6</source>
          <target state="translated">Chef Client 12.6의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="7d8f4a788bfa2732151b0de97d9acbc8dc1b06da" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.0</source>
          <target state="translated">Chef Client 13.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="0184bf4677ca0d21c79b9b54520eae6ab27391ad" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.3</source>
          <target state="translated">Chef Client 13.3의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="603b6cf539e3e04a75d2bf6b1e2fc871bb629ec4" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.4</source>
          <target state="translated">Chef Client 13.4의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="59064a1225d4d9df943e8682b19c881b34d05bdd" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.6</source>
          <target state="translated">Chef Client 13.6의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="5e02191a27915d286675402c88bd46e0b613c0a8" translate="yes" xml:space="preserve">
          <source>New in Chef Client 13.7</source>
          <target state="translated">Chef Client 13.7의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="1fa416ee53e6da5798b63db5d8e94045c39d9302" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.0</source>
          <target state="translated">Chef Client 14.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="b7db29263bc96b4cda88e1a304628b3aefec9290" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.1</source>
          <target state="translated">Chef Client 14.1의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="992e855901ceea5b570546bf77ee558a452010b9" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.15</source>
          <target state="translated">Chef Client 14.15의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="97d2c226716481578e9db39d0b8590f6b1e92504" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.2</source>
          <target state="translated">Chef Client 14.2의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="3ce99f5011f7392080f3c0d4f4388bfd1ac02e01" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.3</source>
          <target state="translated">Chef Client 14.3의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="d652b32303981c8f1027668dcada60e14dc9ff03" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.4</source>
          <target state="translated">Chef Client 14.4의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="55161bffca532b8cbeb4f6d8835f8c92ecd36514" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.5</source>
          <target state="translated">Chef Client 14.5의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="beab58f3cf5c1634ef8c3982dd1a3013de2faf82" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.6</source>
          <target state="translated">Chef Client 14.6의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="281c191f416954d87fe822017169037f70cd8f8f" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.7</source>
          <target state="translated">Chef Client 14.7의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="22644374dd532de2675a287f04aec07099f8b5aa" translate="yes" xml:space="preserve">
          <source>New in Chef Client 14.9</source>
          <target state="translated">Chef Client 14.9의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="a884b8fcc33cb143209a9e20b5b920a6e8488980" translate="yes" xml:space="preserve">
          <source>New in Chef Desktop 1.1</source>
          <target state="translated">Chef Desktop 1.1의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="edad45a4fb2d871bc9e16ff13bfa9f328c014e1c" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.1</source>
          <target state="translated">Chef Infra Client 15.1의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="98da23e3ea9136afe2aacb0a5b1b96e4236f9743" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.3</source>
          <target state="translated">Chef Infra Client 15.3의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="a2dcb47d17c5d151be4e2612ec89ac3aad5356ab" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.4</source>
          <target state="translated">Chef Infra Client 15.4의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="55ed130a1a8b72676150caee585cb18a9f893864" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.5</source>
          <target state="translated">Chef Infra Client 15.5의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="78dd1ee5bb2941997d09eb935b7a4d41e8b8be43" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.7</source>
          <target state="translated">Chef Infra Client 15.7의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="0c09f73eb14e5315fd83ddd056b932f058aec59f" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.8</source>
          <target state="translated">Chef Infra Client 15.8의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="3938687b84029051e6b7c4a8c9f13f6a1909e91c" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 15.9</source>
          <target state="translated">Chef Infra Client 15.9의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="956577690a726c0af4b3b35ed4c7ff6d6baa8450" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.0</source>
          <target state="translated">Chef Infra Client 16.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="7c2ecfb1513aee2cca3cc396dc8407cbfb24ce20" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.2</source>
          <target state="translated">Chef Infra Client 16.2의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="8b69bc08a1f13abd7fb442b207b1c02a0c0ffdc2" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.3</source>
          <target state="translated">Chef Infra Client 16.3의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="d81a3a951875539614cb6c190e3e148be4a8929f" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.5</source>
          <target state="translated">Chef Infra Client 16.5의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="02f374216a053eaff5759a5fa6d622731e21b685" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.7</source>
          <target state="translated">Chef Infra Client 16.7의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="c58bf1126ffaeec81b452f0ffacecf84d74fff48" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Client 16.8</source>
          <target state="translated">Chef Infra Client 16.8의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="a72cd6091c0978b64a8f45fde4153a530b4a2bdb" translate="yes" xml:space="preserve">
          <source>New in Chef Infra Server 12.12.</source>
          <target state="translated">Chef Infra Server 12.12의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="adf7653b656dac77cc9b44b72d9d817105830c34" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.12.</source>
          <target state="translated">Chef Server 12.12의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="80b3022c1f5a961a7fc929fdc0a2a6b1886d8651" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.16.9</source>
          <target state="translated">Chef Server 12.16.9의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="73fbb6472d18e709e4ae559e9c8cf6c6d20ff9e2" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.17</source>
          <target state="translated">Chef Server 12.17의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="8a0712a47529f9b657c4bc39a16fc7cb7bb9b559" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.17.15.</source>
          <target state="translated">Chef Server 12.17.15의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="997ec258773196527b11144c20c53300b5da6e9e" translate="yes" xml:space="preserve">
          <source>New in Chef Server 12.9.</source>
          <target state="translated">Chef Server 12.9의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="f295544147a99b3b735c28bc1d1fa3b944edbb69" translate="yes" xml:space="preserve">
          <source>New in Chef server 12.7</source>
          <target state="translated">Chef 서버 12.7의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="e5e33149566f195e56bc500c0788d7bc1879dfdb" translate="yes" xml:space="preserve">
          <source>New in Chef server 12.7.</source>
          <target state="translated">Chef 서버 12.7의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="bb225f7cd2586b9a30ec832f994d71f4f40b7eb9" translate="yes" xml:space="preserve">
          <source>New in Chef server 12.9.</source>
          <target state="translated">Chef 서버 12.9의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="e91e87b2a3e44fed65f515bc057cffdce78c69d5" translate="yes" xml:space="preserve">
          <source>New in: 1.6.140</source>
          <target state="translated">새로운 기능 : 1.6.140</target>
        </trans-unit>
        <trans-unit id="68247db9f45adb275ed985d2b71a80a016c20587" translate="yes" xml:space="preserve">
          <source>New job status.</source>
          <target state="translated">새 작업 상태.</target>
        </trans-unit>
        <trans-unit id="58564bc38ec98a6fd5c5fdac30ef0b33a96ecb8e" translate="yes" xml:space="preserve">
          <source>New releases of profiles are shipped with the product when available. Chef ships only the latest versions of profiles. When Chef publishes a newer profile version that a user has installed to their namespace, a small notification appears, prompting the user to download the newest version. Installing the newest version adds the updated profile to the user namespace, but it does not overwrite an existing profile. You can keep multiple versions of a profile and it is up to you to curate your installed profiles.</source>
          <target state="translated">새 프로필 릴리스는 사용 가능한 경우 제품과 함께 제공됩니다. Chef는 최신 버전의 프로필 만 제공합니다. Chef가 사용자가 네임 스페이스에 설치 한 최신 프로필 버전을 게시하면 사용자에게 최신 버전을 다운로드하라는 작은 알림이 표시됩니다. 최신 버전을 설치하면 업데이트 된 프로필이 사용자 네임 스페이스에 추가되지만 기존 프로필을 덮어 쓰지는 않습니다. 프로필의 여러 버전을 유지할 수 있으며 설치된 프로필을 큐레이팅하는 것은 귀하에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f170caead65df254d786032a409a6f6d204bca6" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">다음 단계</target>
        </trans-unit>
        <trans-unit id="c753ae3658034f4e1dea0c9d858cd6b1e5755adf" translate="yes" xml:space="preserve">
          <source>Next generation firewall indicates if recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">차세대 방화벽은 가상 머신에 대한 권장 사항이 활성화되었는지 여부를 나타냅니다 ( &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0b292e26b3ed2fb9ec8ad34ddbaad9c082f7b9a9" translate="yes" xml:space="preserve">
          <source>Next, &lt;a href=&quot;https://github.com/munki/munki/releases&quot;&gt;download Munki&lt;/a&gt; to your macOS and install it.</source>
          <target state="translated">다음으로 &lt;a href=&quot;https://github.com/munki/munki/releases&quot;&gt;Munki&lt;/a&gt; 를 macOS에 다운로드 하고 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="f33f5c37b1210d5bbbceaca41d133fabf3bc8bc6" translate="yes" xml:space="preserve">
          <source>Next, Chef Infra Client configures the system based on the order of the resources in the resource collection. Each resource then examines the node and performs the necessary steps to complete the action. This is also referred to as the &amp;ldquo;execution phase&amp;rdquo;.</source>
          <target state="translated">다음으로 Chef Infra Client는 리소스 컬렉션의 리소스 순서에 따라 시스템을 구성합니다. 그런 다음 각 리소스는 노드를 검사하고 작업을 완료하는 데 필요한 단계를 수행합니다. 이를 &quot;실행 단계&quot;라고도합니다.</target>
        </trans-unit>
        <trans-unit id="a26b21e1b95cc7bd089b5a7b582723233c31e746" translate="yes" xml:space="preserve">
          <source>Next, add the token to &lt;a href=&quot;../config/index#data_collector&quot;&gt;config.toml&lt;/a&gt;, specifying the appropriate &lt;a href=&quot;../../automate/data_collection/index&quot;&gt;url&lt;/a&gt; and &lt;a href=&quot;../../automate/api_tokens/index#creating-api-tokens&quot;&gt;token&lt;/a&gt; for the automate server:</source>
          <target state="translated">다음으로 토큰을 &lt;a href=&quot;../config/index#data_collector&quot;&gt;config.toml에&lt;/a&gt; 추가 하고 자동화 서버에 적절한 &lt;a href=&quot;../../automate/data_collection/index&quot;&gt;URL&lt;/a&gt; 과 &lt;a href=&quot;../../automate/api_tokens/index#creating-api-tokens&quot;&gt;토큰&lt;/a&gt; 을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="b18b570922c088321c27b6a42339fa5fa9ce765d" translate="yes" xml:space="preserve">
          <source>Next, choose a privacy setting to set as the default for new packages. You can override this setting when uploading individual packages from the CLI or by connecting a plan file that declares a package as private. The difference between public and private packages is:</source>
          <target state="translated">다음으로, 새 패키지의 기본값으로 설정할 개인 정보 설정을 선택합니다. CLI에서 개별 패키지를 업로드하거나 패키지를 개인용으로 선언하는 계획 파일을 연결하여이 설정을 재정의 할 수 있습니다. 공개 패키지와 비공개 패키지의 차이점은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="18747f3641870fcccf1d833fbaa9ae65e1cb4c72" translate="yes" xml:space="preserve">
          <source>Next, configure Chef Automate to use S3 for both the backups and snapshots. For example:</source>
          <target state="translated">다음으로, 백업과 스냅 샷 모두에 S3를 사용하도록 Chef Automate를 구성하십시오. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="98bbf34e0ba71861f11aa53c9712a92ee0347688" translate="yes" xml:space="preserve">
          <source>Next, configure the Chef Infra Server for data collection forwarding by adding the following setting to &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; 에 다음 설정을 추가하여 데이터 수집 전달을 위해 Chef Infra Server를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="5ccbdde2a3e692db1e3da4dcf245ac26a1ecb1cf" translate="yes" xml:space="preserve">
          <source>Next, create the SSL listener:</source>
          <target state="translated">다음으로 SSL 리스너를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="98670a65496003baa051f25d994a5d4f8dc04e02" translate="yes" xml:space="preserve">
          <source>Next, create the basic directory structure in each container that the app clients expect to see. In the Gorilla container, create folders to match this structure. We&amp;rsquo;re going to build the files that go in the folders just below. Build the top level folders for both clients, the child folders are indicated to give you a reference of how the whole thing looks over time as applications are added.</source>
          <target state="translated">다음으로, 앱 클라이언트가 볼 것으로 예상하는 각 컨테이너에 기본 디렉터리 구조를 만듭니다. Gorilla 컨테이너에서이 구조와 일치하는 폴더를 만듭니다. 바로 아래 폴더에있는 파일을 빌드 할 것입니다. 두 클라이언트 모두에 대한 최상위 폴더를 빌드하면 하위 폴더가 표시되어 응용 프로그램이 추가 될 때 시간이 지남에 따라 전체가 어떻게 보이는지 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db5466299b13e08b11242d2d8a126330930c396a" translate="yes" xml:space="preserve">
          <source>Next, for the required plugin, create an object of that plugin, like this:</source>
          <target state="translated">다음으로 필요한 플러그인에 대해 다음과 같이 해당 플러그인의 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0fecd39d0eedba95afaa8a4579a9638f4f3f8238" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s get our minimum Chef Habitat software to start us off:</source>
          <target state="translated">다음으로 최소한의 Chef Habitat 소프트웨어를 시작해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b58dc73bb605ced3fbba721c655783c6f3df339c" translate="yes" xml:space="preserve">
          <source>Next, run the following &lt;code&gt;autopkg&lt;/code&gt; commands to get all the Munki tools pulled in for the nodes (laptops) to use.`</source>
          <target state="translated">다음으로 다음 &lt;code&gt;autopkg&lt;/code&gt; 명령을 실행하여 노드 (노트북)에서 사용할 모든 Munki 도구를 가져옵니다 .`</target>
        </trans-unit>
        <trans-unit id="830a661138c86413bc7f19278b0d1963f2f651e8" translate="yes" xml:space="preserve">
          <source>Next, run the following Autopkg commands to get all the Munki tools pulled in for the nodes (laptops) to use</source>
          <target state="translated">다음으로 다음 Autopkg 명령을 실행하여 노드 (노트북)에서 사용할 모든 Munki 도구를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5742dc49e41b25854ffaed409a2a3e4ec950294a" translate="yes" xml:space="preserve">
          <source>Next, run the following command to &amp;lsquo;converge&amp;rsquo; the cookbooks with the base OS testing image:</source>
          <target state="translated">다음으로 다음 명령을 실행하여 쿡북을 기본 OS 테스트 이미지와 '수렴'합니다.</target>
        </trans-unit>
        <trans-unit id="1ad0d3d944be819129986b94d2a8663f78ab3eb7" translate="yes" xml:space="preserve">
          <source>Next, the chef-client configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and performs the necessary steps to complete the action. This is also referred to as the &amp;ldquo;execution phase&amp;rdquo;.</source>
          <target state="translated">다음으로 chef-client는 자원 콜렉션의 자원 순서에 따라 시스템을 구성합니다. 각 리소스는 공급자에 매핑 된 다음 노드를 검사하고 필요한 단계를 수행하여 작업을 완료합니다. 이것을 &quot;실행 단계&quot;라고도합니다.</target>
        </trans-unit>
        <trans-unit id="9f552c6f4741f33e2ebff3c24b6b5ec5895d80f5" translate="yes" xml:space="preserve">
          <source>Next, unpack the tar file:</source>
          <target state="translated">다음으로 tar 파일의 압축을 풉니 다.</target>
        </trans-unit>
        <trans-unit id="27b3aa978eb6efb417afef962539a0502a7f84f1" translate="yes" xml:space="preserve">
          <source>Next, upload the remaining data to the new server. Note that &lt;code&gt;knife upload&lt;/code&gt; command does not support embedded keys in credentials files, so you must place the key in a key file.</source>
          <target state="translated">다음으로 나머지 데이터를 새 서버에 업로드합니다. 주의 &lt;code&gt;knife upload&lt;/code&gt; 하면 키 파일에서 키를 배치해야하므로, 자격 증명 파일에 포함 된 키를 지원하지 않는 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c65819603670513c263c08986b7ad5d6bcfd200e" translate="yes" xml:space="preserve">
          <source>Next, you will specify the permissions themselves&amp;ndash;which in IAM v2 are the &lt;code&gt;statements&lt;/code&gt;&amp;ndash; declared as an array. The statement allows us to specify the &lt;code&gt;actions&lt;/code&gt; a user is permitted to take upon resources that have been assigned to a &lt;code&gt;project&lt;/code&gt;. The &lt;code&gt;projects&lt;/code&gt; field on a statement is an array that may contain more than one existing project, a wildcard &lt;code&gt;*&lt;/code&gt; to indicate permission to resources in &lt;em&gt;any project&lt;/em&gt;, or &lt;code&gt;(unassigned)&lt;/code&gt; to indicate permission to resources that have not been assigned to a project.</source>
          <target state="translated">다음으로, IAM v2에서 &lt;code&gt;statements&lt;/code&gt; 권한 자체를 배열로 선언합니다. 이 명령문을 사용 하면 &lt;code&gt;project&lt;/code&gt; 에 할당 된 리소스에 대해 사용자가 &lt;code&gt;actions&lt;/code&gt; 할 수있는 작업 을 지정할 수 있습니다 . 명령문 의 &lt;code&gt;projects&lt;/code&gt; 필드는 둘 이상의 기존 프로젝트를 포함 할 수있는 배열입니다. 프로젝트의 리소스에 &lt;em&gt;대한&lt;/em&gt; 권한을 나타내는 와일드 카드 &lt;code&gt;*&lt;/code&gt; 또는 &lt;em&gt;프로젝트&lt;/em&gt; 에 &lt;code&gt;(unassigned)&lt;/code&gt; 리소스에 &lt;em&gt;대한&lt;/em&gt; 권한을 나타내는 (할당되지 않음) .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82bf344d8bd911944c02ba499af4e2d245ec55af" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_azure/index&quot;&gt;Zero-touch Deployment with Azure&lt;/a&gt;</source>
          <target state="translated">다음 : &lt;a href=&quot;../desktop_azure/index&quot;&gt;Azure를 사용한 제로 터치 배포&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14fe0690fb4fea2dbdc58f3db2419e77a1ec0a1a" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_micromdm/index&quot;&gt;Zero Touch Deployment with MicroMDM for macOS&lt;/a&gt;</source>
          <target state="translated">다음 : &lt;a href=&quot;../desktop_micromdm/index&quot;&gt;macOS 용 MicroMDM을 사용한 제로 터치 배포&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="311ca84aeed8b1f84f22e3006c4f2c44509b31da" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_pattern/index&quot;&gt;Chef Desktop Cookbook Development Environment&lt;/a&gt;</source>
          <target state="translated">Next : &lt;a href=&quot;../desktop_pattern/index&quot;&gt;Chef 데스크탑 쿡북 개발 환경&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b93abc5b444383bc50a856446eb2af7a11616c5" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_setup_chef/index&quot;&gt;Install Chef Components&lt;/a&gt; Last: &lt;a href=&quot;../index&quot;&gt;About Chef Desktop&lt;/a&gt;</source>
          <target state="translated">Next : &lt;a href=&quot;../desktop_setup_chef/index&quot;&gt;Chef 구성 요소&lt;/a&gt; 마지막 설치 : &lt;a href=&quot;../index&quot;&gt;Chef 데스크탑 정보&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8eda8272e2972c0555136474245c849cba20d694" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;../desktop_setup_cookbook/index&quot;&gt;Chef Desktop Cookbook Development Environment&lt;/a&gt;</source>
          <target state="translated">Next : &lt;a href=&quot;../desktop_setup_cookbook/index&quot;&gt;Chef 데스크탑 쿡북 개발 환경&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b7b5f086189d848e4fe6be2124a7cbb1bba7cae" translate="yes" xml:space="preserve">
          <source>Next: &lt;a href=&quot;desktop_requirements/index&quot;&gt;Chef Desktop Requirements&lt;/a&gt;</source>
          <target state="translated">Next : &lt;a href=&quot;desktop_requirements/index&quot;&gt;Chef 데스크탑 요구 사항&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="92976db2f0210bf8871c6154dd07a170cc84cc4a" translate="yes" xml:space="preserve">
          <source>Nginx is an important entry point for data on the Chef Infra Server, which means that debugging efforts frequently start with analyzing the &lt;strong&gt;nginx&lt;/strong&gt; service&amp;rsquo;s &lt;code&gt;access.log&lt;/code&gt; file. This log contains every HTTP request made to the front-end machine and can be very useful when investigating request rates and usage patterns. The following is an example log entry:</source>
          <target state="translated">Nginx는 Chef Infra Server의 데이터에 대한 중요한 진입 점입니다. 즉, 디버깅 작업은 자주 &lt;strong&gt;nginx&lt;/strong&gt; 서비스의 &lt;code&gt;access.log&lt;/code&gt; 파일 을 분석하는 것으로 시작 됩니다. 이 로그에는 프런트 엔드 컴퓨터에 대한 모든 HTTP 요청이 포함되어 있으며 요청 비율 및 사용 패턴을 조사 할 때 매우 유용 할 수 있습니다. 다음은 예제 로그 항목입니다.</target>
        </trans-unit>
        <trans-unit id="18c16701a0285972cc005d424398d437d65af30a" translate="yes" xml:space="preserve">
          <source>Nginx is an important entry point for data on the Chef server, which means that debugging efforts frequently start with analyzing the &lt;strong&gt;nginx&lt;/strong&gt; service&amp;rsquo;s &lt;code&gt;access.log&lt;/code&gt; file. This log contains every HTTP request made to the front-end machine and can be very useful when investigating request rates and usage patterns. The following is an example log entry:</source>
          <target state="translated">Nginx는 Chef 서버의 데이터에 대한 중요한 진입 점이므로 디버깅 노력은 종종 &lt;strong&gt;nginx&lt;/strong&gt; 서비스의 &lt;code&gt;access.log&lt;/code&gt; 파일 을 분석하는 것으로 시작 됩니다. 이 로그에는 프런트 엔드 시스템에 대한 모든 HTTP 요청이 포함되어 있으며 요청 속도 및 사용 패턴을 조사 할 때 매우 유용 할 수 있습니다. 다음은 로그 항목의 예입니다.</target>
        </trans-unit>
        <trans-unit id="aba6be8d171626e392dda6ff2aa440a063e93f5f" translate="yes" xml:space="preserve">
          <source>Nginx is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the Chef Infra Server. All requests to the Chef Infra Server API are routed through Nginx.</source>
          <target state="translated">Nginx는 Chef Infra Server의 프런트 엔드로드 밸런서로 사용되는 오픈 소스 HTTP 및 역방향 프록시 서버입니다. Chef Infra Server API에 대한 모든 요청은 Nginx를 통해 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="84fd472d8fd6e8b00b589006d0c9ce0a83755525" translate="yes" xml:space="preserve">
          <source>Nginx is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the Chef server. All requests to the Chef server API are routed through Nginx.</source>
          <target state="translated">Nginx는 Chef 서버의 프론트 엔드로드 밸런서로 사용되는 오픈 소스 HTTP 및 리버스 프록시 서버입니다. Chef 서버 API에 대한 모든 요청은 Nginx를 통해 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="775557c9b062749b74ff519f5debf07990d62b0e" translate="yes" xml:space="preserve">
          <source>Nginx resource extracts and exposes data reported by the command &amp;lsquo;nginx -V&amp;rsquo;</source>
          <target state="translated">Nginx 리소스는 'nginx -V'명령으로보고 된 데이터를 추출하고 노출합니다.</target>
        </trans-unit>
        <trans-unit id="35f1a00097a1d020f508370e1f76c201659a6f42" translate="yes" xml:space="preserve">
          <source>Nil Properties</source>
          <target state="translated">무기 호 속성</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="35a9c0ad517bb6f9caa5d4aeb70fa32c3c0cd78a" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;#input-options-reference&quot;&gt;input options&lt;/a&gt; may be set - only the name and value.</source>
          <target state="translated">없음 &lt;a href=&quot;#input-options-reference&quot;&gt;입력 옵션이&lt;/a&gt; 설정 될 수 없다 - 단지 이름과 값을.</target>
        </trans-unit>
        <trans-unit id="de4cf24a57b34c1dac8240af277840254a3c3316" translate="yes" xml:space="preserve">
          <source>No Content. Do not reconnect.</source>
          <target state="translated">콘텐츠 없음. 다시 연결하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9587d6bf1fdf8c0d4524f7be1ad2b1d03e066d6f" translate="yes" xml:space="preserve">
          <source>No Loss of Quorum</source>
          <target state="translated">쿼럼 손실 없음</target>
        </trans-unit>
        <trans-unit id="e6579aaa87f11bff3f0119c3b0380ceab73389da" translate="yes" xml:space="preserve">
          <source>No Proxy</source>
          <target state="translated">프록시 없음</target>
        </trans-unit>
        <trans-unit id="7545a69f97b9fa5bc859fbfe59dba8007fcf6da0" translate="yes" xml:space="preserve">
          <source>No clients, because the &lt;code&gt;-S&lt;/code&gt; option was not specified while creating the vault.</source>
          <target state="translated">볼트를 작성하는 동안 &lt;code&gt;-S&lt;/code&gt; 옵션이 지정되지 않았기 때문에 클라이언트 가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a9688f035c639d51273dd222127736f405502f22" translate="yes" xml:space="preserve">
          <source>No direct host access is necessary, and multiple Supervisors can be controlled from one central location.</source>
          <target state="translated">호스트에 직접 액세스 할 필요가 없으며 하나의 중앙 위치에서 여러 Supervisor를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2498d96936e84587b168400d9d22a65bf6338a6d" translate="yes" xml:space="preserve">
          <source>No newline:</source>
          <target state="translated">개행 없음 :</target>
        </trans-unit>
        <trans-unit id="d14b1ac5bb35e26b9fdda11be5d2c4e48c29e55d" translate="yes" xml:space="preserve">
          <source>No parameters required.</source>
          <target state="translated">매개 변수가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="401b7c97e1aa639245463d87c721e6c2d8a1a813" translate="yes" xml:space="preserve">
          <source>No response block is returned.</source>
          <target state="translated">응답 블록이 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="translated">그러한 파일 또는 디렉토리 없음</target>
        </trans-unit>
        <trans-unit id="0fda432dfbd42c1b886fb724d1ffc714723cc98c" translate="yes" xml:space="preserve">
          <source>No, Chef InSpec can be used on any machine. It doesn&amp;rsquo;t matter if that machine was configured by Chef or configured lovingly by the hands of your local System Administrator.</source>
          <target state="translated">아니요, Chef InSpec은 모든 컴퓨터에서 사용할 수 있습니다. 해당 머신이 Chef에 의해 구성되었는지 또는 로컬 시스템 관리자가 정성스럽게 구성했는지는 중요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="1fef06c17ad3b8fe4be35f98544e80254d52a6f1" translate="yes" xml:space="preserve">
          <source>Node Attribute</source>
          <target state="translated">노드 속성</target>
        </trans-unit>
        <trans-unit id="2ad97ef8acd87094a75ee5814f60f41fc3889757" translate="yes" xml:space="preserve">
          <source>Node Attributes</source>
          <target state="translated">노드 속성</target>
        </trans-unit>
        <trans-unit id="6a1cae656d4186ea950c4fc2c10951d229524a17" translate="yes" xml:space="preserve">
          <source>Node Credentials</source>
          <target state="translated">노드 자격 증명</target>
        </trans-unit>
        <trans-unit id="b312196561f09889613d46be739ab10e46bab4e0" translate="yes" xml:space="preserve">
          <source>Node Data</source>
          <target state="translated">노드 데이터</target>
        </trans-unit>
        <trans-unit id="e9e6ca57c9a4bd28d7a2121520eb43071b771388" translate="yes" xml:space="preserve">
          <source>Node Details</source>
          <target state="translated">노드 세부 정보</target>
        </trans-unit>
        <trans-unit id="79085091fd26f7d55fd2be77e2dcc70877e66d3e" translate="yes" xml:space="preserve">
          <source>Node Failures</source>
          <target state="translated">노드 장애</target>
        </trans-unit>
        <trans-unit id="c653efba4903e78a0533091eb01d83912a780be4" translate="yes" xml:space="preserve">
          <source>Node Filters</source>
          <target state="translated">노드 필터</target>
        </trans-unit>
        <trans-unit id="928f8e48f3322b147bb88c044e40f11771fd0eb9" translate="yes" xml:space="preserve">
          <source>Node Integrations</source>
          <target state="translated">노드 통합</target>
        </trans-unit>
        <trans-unit id="628364bb75994dfd1dd98b08ce1ff71fb74ab74d" translate="yes" xml:space="preserve">
          <source>Node List Table</source>
          <target state="translated">노드 목록 테이블</target>
        </trans-unit>
        <trans-unit id="c4ad72dc0d6c6290835c1aaa4673c7cf5f90d6bd" translate="yes" xml:space="preserve">
          <source>Node Location</source>
          <target state="translated">노드 위치</target>
        </trans-unit>
        <trans-unit id="d82c1f3ff40b052c62a8b1921d18621b3675832d" translate="yes" xml:space="preserve">
          <source>Node Managers (also called Node Integrations)</source>
          <target state="translated">노드 관리자 (노드 통합이라고도 함)</target>
        </trans-unit>
        <trans-unit id="81448db2ef1f2434d5f23d093d016b13665c5012" translate="yes" xml:space="preserve">
          <source>Node Name</source>
          <target state="translated">노드 이름</target>
        </trans-unit>
        <trans-unit id="4a30aeda152a059e4e4d39a2f85747c9c294bffd" translate="yes" xml:space="preserve">
          <source>Node Names</source>
          <target state="translated">노드 이름</target>
        </trans-unit>
        <trans-unit id="b17a6c458741a86bf04ade61ad9a14f7ac61215b" translate="yes" xml:space="preserve">
          <source>Node Objects</source>
          <target state="translated">노드 객체</target>
        </trans-unit>
        <trans-unit id="acc260ea60ec063fc6e36922b1922725decd3f2e" translate="yes" xml:space="preserve">
          <source>Node Options</source>
          <target state="translated">노드 옵션</target>
        </trans-unit>
        <trans-unit id="14add6143389453330f40fa1ed07300b0b8b40b3" translate="yes" xml:space="preserve">
          <source>Node Run and Audit Data Collection</source>
          <target state="translated">노드 실행 및 감사 데이터 수집</target>
        </trans-unit>
        <trans-unit id="e21923cc0fe5b2742e78fecd434889e398a416a1" translate="yes" xml:space="preserve">
          <source>Node State</source>
          <target state="translated">노드 상태</target>
        </trans-unit>
        <trans-unit id="e03c3e9e7a2a1426b7dc6d0ad5e4c3ef9db9a3dc" translate="yes" xml:space="preserve">
          <source>Node Status</source>
          <target state="translated">노드 상태</target>
        </trans-unit>
        <trans-unit id="8492ca66cc53b6221bcb61c3d2be513e23125538" translate="yes" xml:space="preserve">
          <source>Node Status Over Time</source>
          <target state="translated">시간 경과에 따른 노드 상태</target>
        </trans-unit>
        <trans-unit id="33d6848a140f44110c77c4ebaec0484d26d02ccc" translate="yes" xml:space="preserve">
          <source>Node Type</source>
          <target state="translated">노드 유형</target>
        </trans-unit>
        <trans-unit id="279b71d33490152fe195c1958224bda7b9cc4031" translate="yes" xml:space="preserve">
          <source>Node Types</source>
          <target state="translated">노드 유형</target>
        </trans-unit>
        <trans-unit id="f9b49d00fda30adb8400f6bb5072c235243ab209" translate="yes" xml:space="preserve">
          <source>Node attributes specific to the workspace, project changes, and project configuration are available for use in &lt;code&gt;build-cookbook&lt;/code&gt; recipes.</source>
          <target state="translated">작업 공간, 프로젝트 변경 사항 및 프로젝트 구성과 관련된 노드 속성은 &lt;code&gt;build-cookbook&lt;/code&gt; 레시피 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a88a1f0596e274578645daf1321f1d298bdcb44" translate="yes" xml:space="preserve">
          <source>Node data in Chef Automate is stored in &lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt; and viewable in the Chef Automate UI as well as &lt;a href=&quot;https://www.elastic.co/products/kibana&quot;&gt;Kibana&lt;/a&gt;. Access to Chef Automate&amp;rsquo;s Elasticsearch and Kibana is protected by the same authentication used by the Chef Automate user interface. Elasticsearch authentication is enabled by default.</source>
          <target state="translated">요리사 자동화에서 노드 데이터를 저장한다 &lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt; 뿐만 아니라 요리사 UI 자동화 및 조회 &lt;a href=&quot;https://www.elastic.co/products/kibana&quot;&gt;키바&lt;/a&gt; . Chef Automate의 Elasticsearch 및 Kibana에 대한 액세스는 Chef Automate 사용자 인터페이스에서 사용하는 것과 동일한 인증으로 보호됩니다. Elasticsearch 인증은 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="689592ee50da7e83f0bf82f37df2d9ab7b2976f1" translate="yes" xml:space="preserve">
          <source>Node failed to run the command (an exit code of non-zero was returned).</source>
          <target state="translated">노드가 명령을 실행하지 못했습니다 (0이 아닌 종료 코드가 리턴 됨).</target>
        </trans-unit>
        <trans-unit id="421106b0f6f886164e420daae5728d544226376d" translate="yes" xml:space="preserve">
          <source>Node has committed to run the command but has not yet run it.</source>
          <target state="translated">노드가 명령을 실행하기로 약속했지만 아직 실행하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a1ae6fc10eca5ee0630f3a46b3d8fddfae66b72c" translate="yes" xml:space="preserve">
          <source>Node has neither committed nor refused to run the command.</source>
          <target state="translated">노드가 명령 실행을 커밋하거나 거부하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="2c77d3fdbfaa855668f953236068b584308d77f5" translate="yes" xml:space="preserve">
          <source>Node history data supports up to three months of Chef Infra Client run information. Scroll through the node history using the pagination buttons at the bottom of the side panel. Use the &lt;strong&gt;X&lt;/strong&gt; button at the top of the panel to close the side panel.</source>
          <target state="translated">노드 기록 데이터는 최대 3 개월의 Chef Infra Client 실행 정보를 지원합니다. 측면 패널 하단에있는 페이지 매김 버튼을 사용하여 노드 기록을 스크롤합니다. 패널 상단의 &lt;strong&gt;X&lt;/strong&gt; 버튼을 사용하여 측면 패널을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="e290ed0af7f23119d17be28cf4621d0e43521581" translate="yes" xml:space="preserve">
          <source>Node is presently running the command.</source>
          <target state="translated">노드가 현재 명령을 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="547c5bc8c2b28d895f20a053fb1dc8458de69a72" translate="yes" xml:space="preserve">
          <source>Node pools belonging to this cluster</source>
          <target state="translated">이 클러스터에 속한 노드 풀</target>
        </trans-unit>
        <trans-unit id="9ae54a9b218536e54778120cf61ec71065469331" translate="yes" xml:space="preserve">
          <source>Node ran the command but stopped before completion.</source>
          <target state="translated">노드가 명령을 실행했지만 완료되기 전에 중지되었습니다.</target>
        </trans-unit>
        <trans-unit id="f32fc6c2887db3382e0fb3c061266b08d57e4c3a" translate="yes" xml:space="preserve">
          <source>Node state is updated to &amp;lsquo;running&amp;rsquo; on report ingestion if the end time recorded by the inspec report is less than ten minutes from the ingestion time.</source>
          <target state="translated">Inspec 보고서에 기록 된 종료 시간이 수집 시간에서 10 분 미만인 경우 보고서 수집시 노드 상태가 '실행 중'으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="575ba14fe307fa5b6a836bd37d189f7e7d3693f6" translate="yes" xml:space="preserve">
          <source>Node successfully ran the command (an exit code of 0 was returned).</source>
          <target state="translated">노드가 명령을 성공적으로 실행했습니다 (종료 코드 0이 리턴 됨).</target>
        </trans-unit>
        <trans-unit id="c00aa26643c2e41f049ca9aa5eb7d1ef56762e9f" translate="yes" xml:space="preserve">
          <source>Node timed out.</source>
          <target state="translated">노드 시간이 초과되었습니다.</target>
        </trans-unit>
        <trans-unit id="d9856658880db19f864d295afa8fdbd5eb89e56f" translate="yes" xml:space="preserve">
          <source>Node type to use for nodes group that are created from this template. Only one of nodeTypeFlexibility and nodeType can be specified.</source>
          <target state="translated">이 템플릿에서 생성 된 노드 그룹에 사용할 노드 유형입니다. nodeTypeFlexibility 및 nodeType 중 하나만 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a375e9cba9b7f81f1b5fe1dee987d4cb077bc91b" translate="yes" xml:space="preserve">
          <source>Node was busy when asked to be part of the job.</source>
          <target state="translated">작업에 참여하도록 요청했을 때 노드가 사용 중이었습니다.</target>
        </trans-unit>
        <trans-unit id="a5f1a1fc38b29c8882a2579b6b849413c5d03597" translate="yes" xml:space="preserve">
          <source>Node was ready but quorum failed.</source>
          <target state="translated">노드가 준비되었지만 쿼럼이 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="1ebdb35b65b4296a45d74889fe30ec3fa37ad255" translate="yes" xml:space="preserve">
          <source>Node went down after it started running the job.</source>
          <target state="translated">작업 실행을 시작한 후 노드가 다운되었습니다.</target>
        </trans-unit>
        <trans-unit id="fd6bbbf67630eb613ff7a2951f421e54da06c115" translate="yes" xml:space="preserve">
          <source>Node went down before it started running.</source>
          <target state="translated">노드가 실행되기 전에 다운되었습니다.</target>
        </trans-unit>
        <trans-unit id="9e325452c6548fc2449564842660d75ef3b1eb73" translate="yes" xml:space="preserve">
          <source>Nodes</source>
          <target state="translated">Nodes</target>
        </trans-unit>
        <trans-unit id="d15701f176665e7be2bc301e1f4ff933a52ca02a" translate="yes" xml:space="preserve">
          <source>Nodes (collected by Ohai at the start of each Chef Infra Client run)</source>
          <target state="translated">노드 (각 Chef Infra Client 실행 시작시 Ohai에서 수집)</target>
        </trans-unit>
        <trans-unit id="294472e1aa62d2671351b5a11222ad839b268d44" translate="yes" xml:space="preserve">
          <source>Nodes (collected by Ohai at the start of each chef-client run)</source>
          <target state="translated">노드 (각 쉐프-클라이언트 실행 시작시 Ohai가 수집)</target>
        </trans-unit>
        <trans-unit id="e5dfade9caf583c330750f669808367e2fe5dbe6" translate="yes" xml:space="preserve">
          <source>Nodes API</source>
          <target state="translated">Nodes API</target>
        </trans-unit>
        <trans-unit id="5e361daf789f6025e91033d8f081a1d83bd3cfe4" translate="yes" xml:space="preserve">
          <source>Nodes can be managed from the Chef management console web user interface.</source>
          <target state="translated">Chef 관리 콘솔 웹 사용자 인터페이스에서 노드를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="81c9cae6b756d648f85415530206763dac0273e4" translate="yes" xml:space="preserve">
          <source>Nodes can have one environment.</source>
          <target state="translated">노드는 하나의 환경을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcbb6285501e178b1926c18dc40c41b702af3c85" translate="yes" xml:space="preserve">
          <source>Nodes can send their run data to Chef Automate through the Chef Infra Server automatically. To enable this functionality, you must perform the following steps:</source>
          <target state="translated">노드는 Chef Infra Server를 통해 실행 데이터를 Chef Automate에 자동으로 보낼 수 있습니다. 이 기능을 사용하려면 다음 단계를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="533e1a7967fb53c45ac4f72d057637d5152ed6aa" translate="yes" xml:space="preserve">
          <source>Nodes can send their run data to Chef Automate. There are two steps to getting data collection running in Chef Automate:</source>
          <target state="translated">노드는 실행 데이터를 Chef Automate로 보낼 수 있습니다. Chef Automate에서 데이터 수집을 실행하는 데는 두 단계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f060846e4946d0ab7007a8f52758757725cc7e4d" translate="yes" xml:space="preserve">
          <source>Nodes in the backend HA cluster may not be visible to each other when they are located in network partitions. This may prevent a cluster status check from discovering that a leader exists. If nodes exist on network partitions, to prevent this scenario, first run &lt;code&gt;chef-backend-ctl cluster-status&lt;/code&gt;, and then verify the expected number of nodes in the backend HA cluster as healthy and &lt;code&gt;waiting_for_leader&lt;/code&gt; before running this command.</source>
          <target state="translated">백엔드 HA 클러스터의 노드는 네트워크 파티션에있을 때 서로 보이지 않을 수 있습니다. 이로 인해 클러스터 상태 확인에서 리더가 있는지 발견하지 못할 수 있습니다. 네트워크 파티션에 노드가있는 경우이 시나리오를 방지하려면 먼저 &lt;code&gt;chef-backend-ctl cluster-status&lt;/code&gt; 를 실행 한 다음이 명령을 실행하기 전에 백엔드 HA 클러스터의 예상 노드 수가 &lt;code&gt;waiting_for_leader&lt;/code&gt; 이고 waiting_for_leader인지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="69ba94fb7c4605a2777ecfbc62893592285f48e6" translate="yes" xml:space="preserve">
          <source>Nodes, Workstations</source>
          <target state="translated">노드, 워크 스테이션</target>
        </trans-unit>
        <trans-unit id="7c409e9d88929cd76349a417933a173cdbd5b2d4" translate="yes" xml:space="preserve">
          <source>Non-interactive Build</source>
          <target state="translated">비대화 형 빌드</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="d21dc95de28ee4191ff203e4303c8f0172875c12" translate="yes" xml:space="preserve">
          <source>None Strategy</source>
          <target state="translated">없음 전략</target>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="25717b76d1762287d98c1e90c520031cd9358343" translate="yes" xml:space="preserve">
          <source>Normal and override attributes are cleared at the start of the chef-client run, and are then rebuilt as part of the run based on the code in the cookbooks and recipes at that time.</source>
          <target state="translated">일반 및 재정의 속성은 chef-client 실행이 시작될 때 지워진 다음 해당 요리 책 및 레시피의 코드를 기반으로 실행의 일부로 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="e213904cc3085c591de98cf477f8419ee712ed4b" translate="yes" xml:space="preserve">
          <source>Normally, the value of &lt;code&gt;Chef::Config[:node_name]&lt;/code&gt; is used to find the per-node encrypted secret in the keys data bag item, and the value of Chef::Config[:client_key] is used to locate the private key to decrypt this secret.</source>
          <target state="translated">일반적으로 &lt;code&gt;Chef::Config[:node_name]&lt;/code&gt; 값은 키 데이터 백 항목에서 노드 별 암호화 된 비밀을 찾는 데 사용되며 Chef :: Config [: client_key] 값은 개인 키를 찾는 데 사용됩니다. 이 비밀을 해독하십시오.</target>
        </trans-unit>
        <trans-unit id="67663f5cfff0d2b6b5634790eaf67f0ca7c6a284" translate="yes" xml:space="preserve">
          <source>Not Acceptable. An invalid format was requested.</source>
          <target state="translated">허용하지 않는다. 잘못된 형식이 요청되었습니다.</target>
        </trans-unit>
        <trans-unit id="aedf487badbfadd9c91b14b6765f11ec78d8bf65" translate="yes" xml:space="preserve">
          <source>Not Found. The required recipe function is not enabled.</source>
          <target state="translated">찾을 수 없습니다. 필요한 레시피 기능이 활성화되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="08b813d5e3a862153979b4bc3ed606ff77ecf2fe" translate="yes" xml:space="preserve">
          <source>Not allowed. A set of cookbooks and/or cookbook versions could not be found that met all of the requirements of the run-list. A cookbook in the run-list may not exist. A dependency may be present for a cookbook that does not exist. A constraint on a cookbook made by a run-list, environment, or cookbook version, may not match an available cookbook version.</source>
          <target state="translated">허용되지 않습니다. 실행 목록의 모든 요구 사항을 충족하는 요리 책 및 / 또는 요리 책 버전을 찾을 수 없습니다. 실행 목록에 요리 책이 없을 수 있습니다. 존재하지 않는 요리 책에 대한 종속성이있을 수 있습니다. 실행 목록, 환경 또는 요리 책 버전으로 만든 요리 책에 대한 제약 조건이 사용 가능한 요리 책 버전과 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f87c054479326a9af75db1c74d3c335e53e3c7fe" translate="yes" xml:space="preserve">
          <source>Not every contribution comes in the form of code. Submitting, confirming, and triaging issues is an important task for any project. At Chef we use GitHub to track all project issues.</source>
          <target state="translated">모든 기여가 코드 형태로 제공되는 것은 아닙니다. 문제 제출, 확인 및 분류는 모든 프로젝트에서 중요한 작업입니다. Chef에서는 GitHub를 사용하여 모든 프로젝트 문제를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="a0ab9e04b36bd85bc4907d342f929f66142df20f" translate="yes" xml:space="preserve">
          <source>Not found. The invited user does not exist.</source>
          <target state="translated">찾을 수 없습니다. 초대 된 사용자가 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b02cade6bb74c3ece167c2ee95d1ef17a7cf5d5f" translate="yes" xml:space="preserve">
          <source>Not found. The requested object does not exist or the function is not implemented.</source>
          <target state="translated">찾을 수 없습니다. 요청한 개체가 없거나 기능이 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="8ae49e9a61373946f78d134ed1f677b64096c4ee" translate="yes" xml:space="preserve">
          <source>Not found. The requested object does not exist.</source>
          <target state="translated">찾을 수 없습니다. 요청한 개체가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="3ee89a74f12f6e440c2fc9b68307d3187e4e61ef" translate="yes" xml:space="preserve">
          <source>Note Linux-based packages can run on Linux distributions running kernel 2.6.32 or later. Windows-based packages can run on Windows Server 2012 or later and Windows 8 64-bit or later.</source>
          <target state="translated">참고 Linux 기반 패키지는 커널 2.6.32 이상을 실행하는 Linux 배포에서 실행할 수 있습니다. Windows 기반 패키지는 Windows Server 2012 이상 및 Windows 8 64 비트 이상에서 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="254d1269818e00a04fe2793625ef70040d818c9d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;result: 32 No such object&lt;/code&gt; is the successful response here, a failed sign in bind using &lt;code&gt;ldapsearch&lt;/code&gt; returns:</source>
          <target state="translated">참고 &lt;code&gt;result: 32 No such object&lt;/code&gt; 여기에 성공적인 응답, 바인드 사용에 실패 징조 &lt;code&gt;ldapsearch&lt;/code&gt; 반환 :</target>
        </trans-unit>
        <trans-unit id="6a5a7ae628377173fe212a3c221bbb7a50329a95" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;subscribes&lt;/code&gt; does not apply the specified action to the resource that it listens to - for example:</source>
          <target state="translated">참고 &lt;code&gt;subscribes&lt;/code&gt; 가 수신하는 자원에 지정된 작업을 적용하지 않습니다 - 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3c8a837a27637da591de5dd4293348bdb871577e" translate="yes" xml:space="preserve">
          <source>Note that Powershell plans use hashtables where Bash plans use associative arrays. A &lt;code&gt;plan.ps1&lt;/code&gt; would declare its exports as:</source>
          <target state="translated">Powershell 계획은 Bash 계획이 연관 배열을 사용하는 해시 테이블을 사용합니다. &lt;code&gt;plan.ps1&lt;/code&gt; 는 수출을 같이 선언합니다 :</target>
        </trans-unit>
        <trans-unit id="b3a20fa875b3e18f2e7a2dcdd5831491c9721a71" translate="yes" xml:space="preserve">
          <source>Note that Rust modules are identified first by the crate (or library) they come from, followed by a &lt;code&gt;::&lt;/code&gt;-delimited path of module names.</source>
          <target state="translated">Rust 모듈은 먼저 그들이 가져온 크레이트 (또는 라이브러리)로 식별되고 다음에 &lt;code&gt;::&lt;/code&gt; 로 구분 된 모듈 이름 경로가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2efc545bd2f5748499b6cd477eade4dabcf1d4c1" translate="yes" xml:space="preserve">
          <source>Note that Windows filesystems (drives) are referred to without any slashes:</source>
          <target state="translated">Windows 파일 시스템 (드라이브)은 슬래시없이 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="1835f4029b7b6767d0b20150fe8dda4d53e6b6c4" translate="yes" xml:space="preserve">
          <source>Note that all of the client-related values need to match the configuration in the Chef Infra Server management console. See &lt;a href=&quot;../server_configure_saml/index&quot;&gt;Configuring for SAML Authentication&lt;/a&gt; for more details.</source>
          <target state="translated">모든 클라이언트 관련 값은 Chef Infra Server 관리 콘솔의 구성과 일치해야합니다. 자세한 내용 &lt;a href=&quot;../server_configure_saml/index&quot;&gt;은 SAML 인증 구성을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="49b5c9bb36a41ba9425a6fe0f78aba7ab36f44aa" translate="yes" xml:space="preserve">
          <source>Note that authentication protocol 1.3 is only supported on Chef Server versions 12.4.0 and above.</source>
          <target state="translated">인증 프로토콜 1.3은 Chef Server 버전 12.4.0 이상에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0756321fe5a9bd74a8f82607b52bd3c42877fc5d" translate="yes" xml:space="preserve">
          <source>Note that in this case, the gem needs to be installed at compile time because the require statement is at the top-level of the recipe. If you move the require of &lt;code&gt;chef-vault&lt;/code&gt; and the call to &lt;code&gt;::load&lt;/code&gt; to library or provider code, you can install the gem in the converge phase instead.</source>
          <target state="translated">이 경우에는 require 문이 레시피의 최상위 수준에 있기 때문에 컴파일 타임에 gem을 설치해야합니다. &lt;code&gt;chef-vault&lt;/code&gt; 의 요구 사항 과 &lt;code&gt;::load&lt;/code&gt; 에 대한 호출 을 라이브러리 또는 공급자 코드 로 이동하는 경우 대신 수렴 단계에서 gem을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="883bbb84146e19fe7cc79e17262e2021a5dd0df0" translate="yes" xml:space="preserve">
          <source>Note that invalid entries for &lt;code&gt;user_query_filter&lt;/code&gt; will lead to queries that return no entries, too. Setting</source>
          <target state="translated">&lt;code&gt;user_query_filter&lt;/code&gt; 에 대한 잘못된 항목은 항목도 반환하지 않는 쿼리로 이어집니다. 환경</target>
        </trans-unit>
        <trans-unit id="d9a2fdc58ece10076a12fc28637af0d4ea3c9959" translate="yes" xml:space="preserve">
          <source>Note that it returns an array of arrays. You may flatten them for testing:</source>
          <target state="translated">배열의 배열을 반환합니다. 테스트를 위해 평면화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cffa7d1c57e650dd1bd4fcc8549ad16dcb2607ff" translate="yes" xml:space="preserve">
          <source>Note that only the path or the user (and not both) should be supplied as arguments to the resource.</source>
          <target state="translated">경로 또는 사용자 (둘다는 아님) 만 리소스에 대한 인수로 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="ceb52623f7d6f5f0ef45adf848bce5d5be3d04fb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;['package_url']&lt;/code&gt; setting points to the location of the Supermarket package on your artifact store. When finished, the &lt;code&gt;/recipes/default.rb&lt;/code&gt; file should have code similar to:</source>
          <target state="translated">있습니다 &lt;code&gt;['package_url']&lt;/code&gt; 당신의 유물 저장소에 슈퍼마켓 패키지의 위치로 포인트를 설정. 완료되면 &lt;code&gt;/recipes/default.rb&lt;/code&gt; 파일에 다음과 유사한 코드가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc47da5ba259f066f1501a4ef339e805a23c3d84" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects&lt;/code&gt; property in statements designates permission for the resources within the statement (here, that is &lt;code&gt;iam:users&lt;/code&gt; and &lt;code&gt;iam:teams&lt;/code&gt;), &lt;em&gt;not&lt;/em&gt; for the policy itself, and &lt;em&gt;cannot&lt;/em&gt; be left empty. For more about projects, see &lt;a href=&quot;index#projects&quot;&gt;Projects in the IAM Guide&lt;/a&gt; documentation.</source>
          <target state="translated">있습니다 &lt;code&gt;projects&lt;/code&gt; (여기, 문에서 속성이 문 내에서 자원에 대한 권한을 지정 &lt;code&gt;iam:users&lt;/code&gt; 및 &lt;code&gt;iam:teams&lt;/code&gt; ) &lt;em&gt;하지&lt;/em&gt; 정책 자체에 대한, 그리고 &lt;em&gt;수없는&lt;/em&gt; 비어한다. 프로젝트에 대한 자세한 내용 &lt;a href=&quot;index#projects&quot;&gt;은 IAM 가이드&lt;/a&gt; 문서 의 프로젝트를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="062249f13c4e3f28a267db96e32450e32015957b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;yum-config-manager&lt;/code&gt; command requires the &lt;code&gt;yum-utils&lt;/code&gt; package, which is not installed on CentOS by default. You can install the package by running &lt;code&gt;sudo yum install yum-utils&lt;/code&gt;, or you can use the &lt;code&gt;mv&lt;/code&gt; command to add the repository to the &lt;code&gt;/etc/yum.repos.d/&lt;/code&gt; directory:</source>
          <target state="translated">참고 것을 &lt;code&gt;yum-config-manager&lt;/code&gt; 명령은 필요 &lt;code&gt;yum-utils&lt;/code&gt; 기본적으로 CentOS는 설치되지 않은 패키지를. &lt;code&gt;sudo yum install yum-utils&lt;/code&gt; 를 실행하여 패키지를 설치 하거나 &lt;code&gt;mv&lt;/code&gt; 명령을 사용 하여 리포지토리를 &lt;code&gt;/etc/yum.repos.d/&lt;/code&gt; 디렉토리 에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="20540ba3d4e1cbcdf44c8bc0bd6d08db6e5328b8" translate="yes" xml:space="preserve">
          <source>Note that the default resource allocation for the application is very small: 0.5 units of CPU, no disk, one instance, and 256MB of memory. To change these resource allocations, pass different values to the Mesos exporter as command line options (defaults are documented with &lt;code&gt;--help&lt;/code&gt;).</source>
          <target state="translated">애플리케이션에 대한 기본 리소스 할당은 CPU 0.5 단위, 디스크 없음, 인스턴스 1 개, 메모리 256MB 등 매우 작습니다. 이러한 리소스 할당을 변경하려면 명령 줄 옵션으로 다른 값을 Mesos 내보내기에 전달합니다 (기본값은 &lt;code&gt;--help&lt;/code&gt; 로 문서화 됨 ).</target>
        </trans-unit>
        <trans-unit id="4022465ca6ae8c759fbe9cf3edbdcd73e53aee25" translate="yes" xml:space="preserve">
          <source>Note that the filter won&amp;rsquo;t return the EC2 instances with multiple tags. In this case use regex: &lt;code&gt;/{&quot;Environment&quot;=&amp;gt;&quot;Dev&quot;}/&lt;/code&gt;</source>
          <target state="translated">필터는 여러 태그가있는 EC2 인스턴스를 반환하지 않습니다. 이 경우 정규식을 사용하십시오. &lt;code&gt;/{&quot;Environment&quot;=&amp;gt;&quot;Dev&quot;}/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29167e10ea88d49828db12fe0b4f421b99ed4c49" translate="yes" xml:space="preserve">
          <source>Note that the log contains the &lt;em&gt;IP address&lt;/em&gt; even when the LDAP server was configured via hostname. Double-checking that can be helpful to exclude issues in domain-name resolution.</source>
          <target state="translated">LDAP 서버가 호스트 이름을 통해 구성된 경우에도 로그에는 &lt;em&gt;IP 주소&lt;/em&gt; 가 포함 됩니다. 도메인 이름 확인에서 문제를 제외하는 데 도움이 될 수있는 재확인.</target>
        </trans-unit>
        <trans-unit id="791546ad4e654a1da430b30787391bd187aecf01" translate="yes" xml:space="preserve">
          <source>Note that the number of service-level failures that a service can sustain depends upon whether or not the failure is happening in isolation. In general an operator should assume that the cluster can sustain a failure on a single node, but a second failure is likely to cause a loss of availability if the first failure is not resolved.</source>
          <target state="translated">서비스가 유지할 수있는 서비스 수준 오류의 수는 오류가 격리 된 상태에서 발생하는지 여부에 따라 다릅니다. 일반적으로 운영자는 클러스터가 단일 노드에서 오류를 유지할 수 있다고 가정해야하지만 첫 번째 오류가 해결되지 않으면 두 번째 오류로 인해 가용성이 손실 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f13d9445dc591adbb85d9bfd8c7ca8d68edefec" translate="yes" xml:space="preserve">
          <source>Note that the rule specification must exactly match what&amp;rsquo;s in the output of &lt;code&gt;ip6tables -S INPUT&lt;/code&gt;, which will depend on how you&amp;rsquo;ve built your rules.</source>
          <target state="translated">규칙 사양은 &lt;code&gt;ip6tables -S INPUT&lt;/code&gt; 의 출력 내용과 정확히 일치해야 하며 이는 규칙을 구축 한 방법에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="935a579a64912d75adc6a12e638b3bc24d590ec8" translate="yes" xml:space="preserve">
          <source>Note that the rule specification must exactly match what&amp;rsquo;s in the output of &lt;code&gt;iptables -S INPUT&lt;/code&gt;, which will depend on how you&amp;rsquo;ve built your rules.</source>
          <target state="translated">규칙 사양은 &lt;code&gt;iptables -S INPUT&lt;/code&gt; 의 출력 내용과 정확히 일치해야 하며 이는 규칙을 구축 한 방법에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="9b4168a6604c98365aea58981d64e4c6610f7ba9" translate="yes" xml:space="preserve">
          <source>Note that they are both listening on the same port.</source>
          <target state="translated">둘 다 동일한 포트에서 수신하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ce6dd60f133429fac3b961beec73f892212ea89" translate="yes" xml:space="preserve">
          <source>Note that they have both restarted (as evidenced by the new PID values), and that both are now running on port 2112, as we instructed.</source>
          <target state="translated">둘 다 다시 시작되었으며 (새 PID 값에서 알 수 있듯이) 우리가 지시 한대로 둘 다 포트 2112에서 실행되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="c814d48ed78f8b99b3799d6fd48eed9c061aaf47" translate="yes" xml:space="preserve">
          <source>Note that this approach does not rely on execution order, nor does it rely on multiple named precedence levels. Each setting operation is preserved and this allows the user to &lt;a href=&quot;#debugging-inputs-with-the-event-log&quot;&gt;debug&lt;/a&gt; the history of the input values.</source>
          <target state="translated">이 접근 방식은 실행 순서에 의존하지 않으며 여러 명명 된 우선 순위 수준에 의존하지 않습니다. 각 설정 작업이 유지되며 사용자가 입력 값의 이력 을 &lt;a href=&quot;#debugging-inputs-with-the-event-log&quot;&gt;디버깅&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="967d648eaa2f4fd689959fea5283416de31092d8" translate="yes" xml:space="preserve">
          <source>Note that this namespace collision between custom resources and subresources occurs with properties that are not also being immediately used, and so this fails as well:</source>
          <target state="translated">사용자 지정 리소스와 하위 리소스 간의 네임 스페이스 충돌은 즉시 사용되지 않는 속성에서도 발생하므로 실패합니다.</target>
        </trans-unit>
        <trans-unit id="7c315d67833c02c56fbcd20db7a4c61ca80fe2b0" translate="yes" xml:space="preserve">
          <source>Note that this resource lists all AWS regions that are currently available to the caller.</source>
          <target state="translated">이 리소스에는 현재 호출자가 사용할 수있는 모든 AWS 리전이 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="f837b5290611b71d320957e2343753c1d7c34a92" translate="yes" xml:space="preserve">
          <source>Note that while the above set of rules bears a remarkable resemblance to regular expressions, we do not support full regular expression syntax. Only what&amp;rsquo;s shown here is supported. Here is an example.</source>
          <target state="translated">위의 규칙 세트는 정규 표현식과 매우 유사하지만 전체 정규 표현식 구문을 지원하지는 않습니다. 여기에 표시된 것만 지원됩니다. 여기에 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="642b6f0e7cd475433fbc975dbda28925fa81b131" translate="yes" xml:space="preserve">
          <source>Note that you will need to make use of a tool such as &lt;a href=&quot;https://packages.ubuntu.com/xenial/admin/iptables-persistent&quot;&gt;iptables-persistent&lt;/a&gt; to restore your iptables rules upon reboot.</source>
          <target state="translated">재부팅시 iptables 규칙을 복원하려면 &lt;a href=&quot;https://packages.ubuntu.com/xenial/admin/iptables-persistent&quot;&gt;iptables-persistent&lt;/a&gt; 와 같은 도구를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d4799513f6d0118bb21280d7a1b702cdd32054c9" translate="yes" xml:space="preserve">
          <source>Note that you&amp;rsquo;ll need to replace &lt;code&gt;chef-repo&lt;/code&gt; with the name of the repository you created previously.</source>
          <target state="translated">&lt;code&gt;chef-repo&lt;/code&gt; 를 이전에 생성 한 저장소의 이름 으로 바꿔야 합니다.</target>
        </trans-unit>
        <trans-unit id="289fb65f4c83df4df17773974e75373663c560a8" translate="yes" xml:space="preserve">
          <source>Note that your &lt;code&gt;hab&lt;/code&gt; configuration file only keeps a single &amp;ldquo;secret&amp;rdquo; entry, and exporting a single secret into your environment does effectively the same thing. An assumption of this arrangement is that all Supervisors you wish to interact with have the same shared secret; if you wish to control a set of Supervisors that do not all use the same shared secret, you will need to manage the mapping of secret-to-supervisor yourself, which might look something like this:</source>
          <target state="translated">당신의 것을 참고 &lt;code&gt;hab&lt;/code&gt; 구성 파일이 단 하나의 &quot;비밀&quot;항목을 유지하고, 사용자 환경에 하나의 비밀을 수출하는 것은 효과적으로 같은 일을한다. 이 배열의 가정은 상호 작용하려는 모든 감독자가 동일한 공유 비밀을 가지고 있다는 것입니다. 모두 동일한 공유 비밀을 사용하지 않는 감독자 집합을 제어하려면 다음과 같이 보일 수있는 감독자에 대한 비밀의 매핑을 직접 관리해야합니다.</target>
        </trans-unit>
        <trans-unit id="12366ca5092c823663dddc4439a91221640c5733" translate="yes" xml:space="preserve">
          <source>Note the following constraints:</source>
          <target state="translated">다음 제약에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="a3c8dde57ff53453e3b1ce0d4ea9401d14e16e2b" translate="yes" xml:space="preserve">
          <source>Note the use of the regular expression here. This is because the NIC id is a long string that contains the subscription id, resource group, machine id as well as other things. By using the regular expression the NIC can be checked without breaking this string up. It also means that other tests can be performed.</source>
          <target state="translated">여기서 정규식 사용에 유의하십시오. 이는 NIC ID가 구독 ID, 리소스 그룹, 컴퓨터 ID 및 기타 항목을 포함하는 긴 문자열이기 때문입니다. 정규식을 사용하면이 문자열을 분리하지 않고 NIC를 확인할 수 있습니다. 또한 다른 테스트를 수행 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f896d1b1920ddcea5aaee5ec02c2e0b494794b9b" translate="yes" xml:space="preserve">
          <source>Note: An Azure Admin must grant your application these permissions.</source>
          <target state="translated">참고 : Azure 관리자는 애플리케이션에 이러한 권한을 부여해야합니다.</target>
        </trans-unit>
        <trans-unit id="087804a9ee713995964b72c533732869717724b5" translate="yes" xml:space="preserve">
          <source>Note: As a consequence of increasing the project limit, you may see slower loading times in the UI.</source>
          <target state="translated">참고 : 프로젝트 제한을 늘리면 UI에서로드 시간이 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b16eb9626cf415fbb8bd8a242789481467ea9802" translate="yes" xml:space="preserve">
          <source>Note: Because all arrays in the pkg_* settings are shell arrays, they are whitespace delimited.</source>
          <target state="translated">참고 : pkg_ * 설정의 모든 배열은 셸 배열이므로 공백으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="b1e1f3dd544151ee19b64f3e3c1c40de122e5438" translate="yes" xml:space="preserve">
          <source>Note: Chef Automate data retention processes changed in 20191129172405. The &lt;a href=&quot;../install/index#upgrades&quot;&gt;upgrade documentation&lt;/a&gt; covers configuring your system to install new Chef Automate versions. For guidance, contact your customer support agent. You can also use the &lt;a href=&quot;https://github.com/chef/automate/blob/20191104205453/components/automate-chef-io/content/docs/configuration.md#data-retention&quot;&gt;previous data retention documentation&lt;/a&gt; for help with configuring data retention on older Chef Automate installations.</source>
          <target state="translated">참고 : Chef Automate 데이터 보존 프로세스는 20191129172405에서 변경되었습니다. &lt;a href=&quot;../install/index#upgrades&quot;&gt;업그레이드 설명서&lt;/a&gt; 에서는 새 Chef Automate 버전을 설치하도록 시스템을 구성하는 방법을 다룹니다. 지침은 고객 지원 담당자에게 문의하십시오. 이전 Chef Automate 설치에서 데이터 보존을 구성하는 데 도움이 되는 &lt;a href=&quot;https://github.com/chef/automate/blob/20191104205453/components/automate-chef-io/content/docs/configuration.md#data-retention&quot;&gt;이전 데이터 보존 설명서&lt;/a&gt; 를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ea3022b98c7e2035abe967c59a431df46f925a2" translate="yes" xml:space="preserve">
          <source>Note: Chef Habitat Builder can only build Linux based plans (&lt;code&gt;plan.sh&lt;/code&gt;) at this time.</source>
          <target state="translated">참고 : Chef Habitat Builder는 현재 Linux 기반 플랜 ( &lt;code&gt;plan.sh&lt;/code&gt; ) 만 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5e5e7c74fb5583791e0bb02ea603409d9eb1ef6" translate="yes" xml:space="preserve">
          <source>Note: For more details related to Windows containers see &lt;a href=&quot;../running_habitat_windows_containers/index&quot;&gt;Running Chef Habitat Windows Containers&lt;/a&gt;.</source>
          <target state="translated">참고 : Windows 컨테이너와 관련된 자세한 내용은 &lt;a href=&quot;../running_habitat_windows_containers/index&quot;&gt;Chef Habitat Windows 컨테이너 실행을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c50997c4199bb1b3245e849911f84858bfa2f27" translate="yes" xml:space="preserve">
          <source>Note: If your computed value does not match the value calculated by the &lt;code&gt;hab-plan-build&lt;/code&gt; script, an error with the expected value will be returned when you execute your plan.</source>
          <target state="translated">참고 : 계산 된 값이 &lt;code&gt;hab-plan-build&lt;/code&gt; 스크립트에서 계산 된 값과 일치하지 않는 경우 계획 을 실행할 때 예상 값이 포함 된 오류가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7137a4818ca1bbfb80d8b6839830f94f0b525df3" translate="yes" xml:space="preserve">
          <source>Note: In order to build large amounts of software in the fastest way possible, we recommend you use a powerful machine, such as a &lt;code&gt;c4.4xlarge&lt;/code&gt; on Amazon Web Services (AWS). While it may be possible to run these builds in Docker containers, in workstation virtual machines, or on older hosts, it&amp;rsquo;s well worth it to spend a few dollars to save potentially dozens of hours of wait time.</source>
          <target state="translated">참고 : 가능한 가장 빠른 방법으로 대량의 소프트웨어를 빌드하려면 AWS (Amazon Web Services) 의 &lt;code&gt;c4.4xlarge&lt;/code&gt; 와 같은 강력한 머신을 사용하는 것이 좋습니다 . Docker 컨테이너, 워크 스테이션 가상 머신 또는 이전 호스트에서 이러한 빌드를 실행할 수 있지만 잠재적으로 수십 시간의 대기 시간을 절약하기 위해 몇 달러를 지출하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5b1a37b9719132b432bc3ba6ae340b7e3cb6f009" translate="yes" xml:space="preserve">
          <source>Note: It is recommended to place all plan files inside of a &lt;code&gt;habitat&lt;/code&gt; parent folder in order to allow for clean separation between your application source code and habitat specific files. However, if you maintain a separate repository solely for the purpose of storing habitat plans, then the use of a &lt;code&gt;habitat&lt;/code&gt; folder may not be necessary.</source>
          <target state="translated">참고 : 애플리케이션 소스 코드와 서식지 특정 파일을 깔끔하게 구분하려면 모든 계획 파일을 &lt;code&gt;habitat&lt;/code&gt; 상위 폴더 안에 배치하는 것이 좋습니다 . 그러나 서식지 계획을 저장하기위한 목적으로 만 별도의 저장소를 유지하는 경우에는 &lt;code&gt;habitat&lt;/code&gt; 폴더를 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7a508de876dba1feb7cdc8b8c5d107000710e4fe" translate="yes" xml:space="preserve">
          <source>Note: On Windows we would create a plan.ps1 file instead. All the variable names are the same but we use Powershell syntax so, for example, &lt;code&gt;pkg_deps=(core/glibc core/readline)&lt;/code&gt; becomes &lt;code&gt;$pkg_deps=@(&quot;core/glibc&quot;, &quot;core/readline&quot;)&lt;/code&gt;.</source>
          <target state="translated">참고 : Windows에서는 대신 plan.ps1 파일을 생성합니다. 모든 변수 이름은 동일하지만 Powershell 구문을 사용하므로 예를 들어 &lt;code&gt;pkg_deps=(core/glibc core/readline)&lt;/code&gt; 은 &lt;code&gt;$pkg_deps=@(&quot;core/glibc&quot;, &quot;core/readline&quot;)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="dd43aa4c1455ac805b62a594427dd7a7920d7b8f" translate="yes" xml:space="preserve">
          <source>Note: On Windows, library dependency locations are not maintained in a binary file&amp;rsquo;s headers. See &lt;a href=&quot;https://msdn.microsoft.com/library/windows/desktop/ms682586(v=vs.85).aspx&quot;&gt;this MSDN article&lt;/a&gt; for a complete explanation of how Windows binaries are located. However, it&amp;rsquo;s typically sufficient to ensure that the dependent binaries are on the &lt;code&gt;PATH&lt;/code&gt;. You should make sure to include all dependencies in the &lt;code&gt;pkg_deps&lt;/code&gt; of a &lt;code&gt;plan.ps1&lt;/code&gt; to ensure all of their respective &lt;code&gt;DLL&lt;/code&gt;s are accessible by your application.</source>
          <target state="translated">참고 : Windows에서 라이브러리 종속성 위치는 이진 파일의 헤더에 유지되지 않습니다. Windows 바이너리의 위치에 대한 자세한 설명은 &lt;a href=&quot;https://msdn.microsoft.com/library/windows/desktop/ms682586(v=vs.85).aspx&quot;&gt;이 MSDN 문서&lt;/a&gt; 를 참조하십시오 . 그러나 일반적으로 종속 바이너리가 &lt;code&gt;PATH&lt;/code&gt; 에 있는지 확인하는 것으로 충분합니다 . 당신은 모든 종속성을 포함해야한다 &lt;code&gt;pkg_deps&lt;/code&gt; 의 &lt;code&gt;plan.ps1&lt;/code&gt; 각각의 모든 보장하기 위해 &lt;code&gt;DLL&lt;/code&gt; 의 응용 프로그램에 액세스들입니다.</target>
        </trans-unit>
        <trans-unit id="c2e6b68aacdf2b1a3515e5da796cd76e57d05c42" translate="yes" xml:space="preserve">
          <source>Note: On a clean server, this will download additional packages to satisfy the Supervisor dependencies. You will also require a &lt;code&gt;hab&lt;/code&gt; group and &lt;code&gt;hab&lt;/code&gt; user on the system for most services.</source>
          <target state="translated">참고 : 깨끗한 서버에서는 Supervisor 종속성을 충족하기 위해 추가 패키지를 다운로드합니다. 또한 대부분의 서비스에 대해 시스템에 &lt;code&gt;hab&lt;/code&gt; 그룹 및 &lt;code&gt;hab&lt;/code&gt; 사용자가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="03fc47f72718c773341f94052498cb3d1a9cb600" translate="yes" xml:space="preserve">
          <source>Note: Powershell plan function names differ from their Bash counterparts in that they use the &lt;code&gt;Invoke&lt;/code&gt;&lt;code&gt;verb&lt;/code&gt; instead of the &lt;code&gt;do_&lt;/code&gt; prefix.</source>
          <target state="translated">참고 : Powershell 계획 함수 이름 은 &lt;code&gt;do_&lt;/code&gt; 접두사 대신 &lt;code&gt;Invoke&lt;/code&gt; &lt;code&gt;verb&lt;/code&gt; 를 사용한다는 점에서 Bash와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="0cbf9f4de554df48b5e1f8141bbed58f0a01fa1f" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;/containers&lt;/code&gt; endpoint is not useful outside of the Chef Infra Server code.</source>
          <target state="translated">참고 : &lt;code&gt;/containers&lt;/code&gt; 엔드 포인트는 Chef Infra Server 코드 외부에서 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6205bf473c5ee4d0818efb2c07c64b8c12be9b3f" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;cert.pem&lt;/code&gt; file name is reserved for Habitat. Do not use &lt;code&gt;cert.pem&lt;/code&gt; as a file name when copying certs into the cache directory.</source>
          <target state="translated">참고 : &lt;code&gt;cert.pem&lt;/code&gt; 파일 이름은 Habitat 용으로 예약되어 있습니다. 인증서를 캐시 디렉토리에 복사 할 때 &lt;code&gt;cert.pem&lt;/code&gt; 을 파일 이름으로 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="4c3ff1ac6242946bc2257b8cc54c858e73276fef" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;core&lt;/code&gt; prefix is the origin of those dependencies. For more information, see &lt;a href=&quot;../builder_origins/index&quot;&gt;Create an Origin&lt;/a&gt;</source>
          <target state="translated">참고 : &lt;code&gt;core&lt;/code&gt; 접두사는 이러한 종속성의 기원입니다. 자세한 내용 &lt;a href=&quot;../builder_origins/index&quot;&gt;은 오리진 생성을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="9ba69e29451e7b0eeee0bd97ff0cb49d5ca2e25a" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;pin_priority&lt;/code&gt; of &lt;code&gt;700&lt;/code&gt; ensures that this version will be preferred over any other available versions.</source>
          <target state="translated">참고 : &lt;code&gt;700&lt;/code&gt; 의 &lt;code&gt;pin_priority&lt;/code&gt; 는 이 버전이 사용 가능한 다른 버전보다 선호되도록합니다.</target>
        </trans-unit>
        <trans-unit id="2d75fe3bb1763c19631b10952200d29c4e85d150" translate="yes" xml:space="preserve">
          <source>Note: The plan.sh or plan.ps1 file is the only required file to create a package. Configuration files, runtime hooks, and other source files are optional.</source>
          <target state="translated">참고 : plan.sh 또는 plan.ps1 파일은 패키지를 만드는 데 필요한 유일한 파일입니다. 구성 파일, 런타임 후크 및 기타 소스 파일은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="e52dfc253a1527e01f5d21449471813dac06a5a5" translate="yes" xml:space="preserve">
          <source>Note: The service account json credential requires the following fields: &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;project_id&lt;/code&gt;, &lt;code&gt;client_id&lt;/code&gt;, &lt;code&gt;private_key_id&lt;/code&gt;, &lt;code&gt;private_key&lt;/code&gt;, &lt;code&gt;client_email&lt;/code&gt;, &lt;code&gt;auth_uri&lt;/code&gt;, &lt;code&gt;token_uri&lt;/code&gt;, &lt;code&gt;auth_provider_x509_cert_url&lt;/code&gt;, &lt;code&gt;client_x509_cert_url&lt;/code&gt;</source>
          <target state="translated">참고 : 서비스 계정 json 사용자 인증 정보에는 &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;project_id&lt;/code&gt; , &lt;code&gt;client_id&lt;/code&gt; , &lt;code&gt;private_key_id&lt;/code&gt; , &lt;code&gt;private_key&lt;/code&gt; , &lt;code&gt;client_email&lt;/code&gt; , &lt;code&gt;auth_uri&lt;/code&gt; , &lt;code&gt;token_uri&lt;/code&gt; , &lt;code&gt;auth_provider_x509_cert_url&lt;/code&gt; , &lt;code&gt;client_x509_cert_url&lt;/code&gt; 필드가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="248e18d1a291150399ff62d1ffc433823bbd723e" translate="yes" xml:space="preserve">
          <source>Note: The tag name is case sensitive which makes the test case sensitive. E.g. &lt;code&gt;owner_tag&lt;/code&gt; does not equal &lt;code&gt;Owner_tag&lt;/code&gt;.</source>
          <target state="translated">참고 : 태그 이름은 대소 문자를 구분하므로 테스트 대소 문자를 구분합니다. 예 &lt;code&gt;owner_tag&lt;/code&gt; 동일하지 않습니다 &lt;code&gt;Owner_tag&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="32c9bcba06771e897338b595020aa0105738bef5" translate="yes" xml:space="preserve">
          <source>Note: The unique Service Principal Name (the UUID) should be provided in the Chef Habitat Builder configuration.</source>
          <target state="translated">참고 : 고유 한 서비스 사용자 이름 (UUID)은 Chef Habitat Builder 구성에 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d49d4de86c40b8207727c09c9e108a985796b5ae" translate="yes" xml:space="preserve">
          <source>Note: This feature was introduced in Chef Client 12.14.</source>
          <target state="translated">참고 :이 기능은 Chef Client 12.14에서 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="681a5b70306a71a0e4668f114fdfbadab2bd2d4c" translate="yes" xml:space="preserve">
          <source>Note: This resource does not detect insecure object ACLs.</source>
          <target state="translated">참고 :이 리소스는 안전하지 않은 개체 ACL을 감지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="689233078f4c2c022bfd48c55fa0d9cfaa8f6f11" translate="yes" xml:space="preserve">
          <source>Note: Using the &lt;code&gt;DELETE&lt;/code&gt; method of the &lt;code&gt;/containers/NAME&lt;/code&gt; endpoint may have unexpected effects and is likely to break your system. Use of this method is not supported.</source>
          <target state="translated">참고 : &lt;code&gt;/containers/NAME&lt;/code&gt; 엔드 포인트 의 &lt;code&gt;DELETE&lt;/code&gt; 메소드를 사용하면 예상치 못한 결과가 발생할 수 있으며 시스템이 손상 될 수 있습니다. 이 방법의 사용은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73f753a0d8dd0f4e60559113a44a06830696d42b" translate="yes" xml:space="preserve">
          <source>Note: Using the &lt;code&gt;POST&lt;/code&gt; method of the &lt;code&gt;/containers&lt;/code&gt; endpoint may have unexpected effects and is likely to break your system. Use of this method is not supported.</source>
          <target state="translated">참고 : &lt;code&gt;/containers&lt;/code&gt; 엔드 포인트 의 &lt;code&gt;POST&lt;/code&gt; 방법을 사용하면 예상치 못한 결과가 발생할 수 있으며 시스템이 손상 될 수 있습니다. 이 방법의 사용은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="300ca722232ad78d527dc1e6de37f7dcd6cdf318" translate="yes" xml:space="preserve">
          <source>Note: if the user entry contains more than one &lt;code&gt;filter_groups_by_user_attr&lt;/code&gt; attribute, multiple queries will be executed, and their results combined.</source>
          <target state="translated">참고 : 사용자 항목에 둘 이상의 &lt;code&gt;filter_groups_by_user_attr&lt;/code&gt; 속성이 포함 된 경우 여러 쿼리가 실행되고 결과가 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="4bd27622c93e2db70dfa88da9b6691cd285a366b" translate="yes" xml:space="preserve">
          <source>Note: in Chef Habitat versions prior to 0.56.0, &lt;code&gt;hab svc start&lt;/code&gt; could also be used to load up a service if it wasn&amp;rsquo;t already loaded. In 0.56.0 and later, however, this has changed; &lt;code&gt;hab svc start&lt;/code&gt; can only operate on services that have previously been loaded.</source>
          <target state="translated">참고 : 0.56.0 이전의 Chef Habitat 버전 에서는 아직로드되지 않은 경우 &lt;code&gt;hab svc start&lt;/code&gt; 를 사용하여 서비스를로드 할 수도 있습니다. 그러나 0.56.0 이상에서는 변경되었습니다. &lt;code&gt;hab svc start&lt;/code&gt; 는 이전에로드 된 서비스에서만 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35a9aadc7540e5ad045c411dcd2007304bff3863" translate="yes" xml:space="preserve">
          <source>Note: see the &lt;a href=&quot;#be_more_permissive_than?(mode)&quot;&gt;&lt;code&gt;be_more_permissive_than(mode)&lt;/code&gt;&lt;/a&gt; matcher for upper and lower bounds on file mode.</source>
          <target state="translated">참고 : 파일 모드의 상한 및 하한 은 &lt;a href=&quot;#be_more_permissive_than?(mode)&quot;&gt; &lt;code&gt;be_more_permissive_than(mode)&lt;/code&gt; &lt;/a&gt; 매처를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50bb10a1e1708ef8acfb5296cccda34fd1157417" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;split&lt;/code&gt; matcher returns an array including &lt;code&gt;&quot;&quot;&lt;/code&gt; for cases where there is a trailing colon (&lt;code&gt;:&lt;/code&gt;), such as &lt;code&gt;dir1::dir2:&lt;/code&gt;</source>
          <target state="translated">참고 : &lt;code&gt;split&lt;/code&gt; 정규 포함한 배열 반환 &lt;code&gt;&quot;&quot;&lt;/code&gt; (뒤에 콜론이 경우에 &lt;code&gt;:&lt;/code&gt; ) 같은 &lt;code&gt;dir1::dir2:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="393af34e9138c57bb9de2425014f59279072fb4e" translate="yes" xml:space="preserve">
          <source>Note: this doesn&amp;rsquo;t delete the associated printer port. See windows_printer_port above for how to delete the port.</source>
          <target state="translated">참고 : 연결된 프린터 포트는 삭제되지 않습니다. 포트를 삭제하는 방법은 위의 windows_printer_port를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="9a27b95bfd6c490ae082ebdb758a4244ade0b2d7" translate="yes" xml:space="preserve">
          <source>Notes about FIPS:</source>
          <target state="translated">FIPS에 대한 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="45d3c300eb251b334bf777ddd0c341b1756a0b5e" translate="yes" xml:space="preserve">
          <source>Notes and Warnings</source>
          <target state="translated">참고 및 경고</target>
        </trans-unit>
        <trans-unit id="223c59172282840b7e68fd6774a244dc1b52bd0f" translate="yes" xml:space="preserve">
          <source>Notes and warnings are generated by bracketing the text of the note or warning in &lt;strong&gt;info&lt;/strong&gt;, &lt;strong&gt;warning&lt;/strong&gt; or &lt;strong&gt;danger&lt;/strong&gt; shortcodes.</source>
          <target state="translated">메모 및 경고는 &lt;strong&gt;정보&lt;/strong&gt; , &lt;strong&gt;경고&lt;/strong&gt; 또는 &lt;strong&gt;위험&lt;/strong&gt; 단축 코드 에서 메모 또는 경고의 텍스트를 괄호로 묶어 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="89e83924b22847b2cf5f38476ab905f0af710c2b" translate="yes" xml:space="preserve">
          <source>Notes for auditing Windows systems</source>
          <target state="translated">Windows 시스템 감사에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="419eeacf0224edd7c9ef7beecd97c8901c669b58" translate="yes" xml:space="preserve">
          <source>Notes on EntityId</source>
          <target state="translated">EntityId에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="08dd7145ec61d9265e62b7424fb1637246652d81" translate="yes" xml:space="preserve">
          <source>Notes on NameId Policy</source>
          <target state="translated">NameId 정책에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="5e349a795ee5c99a4344728f4e916286a97adb47" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;ro&lt;/code&gt; is now &lt;code&gt;ro:Primary/Unknown&lt;/code&gt;. The Chef server can now be recovered by entering the following command:</source>
          <target state="translated">것을 알 수 &lt;code&gt;ro&lt;/code&gt; 지금 &lt;code&gt;ro:Primary/Unknown&lt;/code&gt; . 이제 다음 명령을 입력하여 Chef 서버를 복구 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ea9311cb74fd93a2092964a5a946add9f3bb46a" translate="yes" xml:space="preserve">
          <source>Notice that in order to specify that we&amp;rsquo;re interested in all files inside of the directories in our &lt;code&gt;paths&lt;/code&gt; entries, we had to add the &lt;code&gt;/*&lt;/code&gt; glob to the end manually.</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; 항목 의 디렉토리 내부에있는 모든 파일에 관심이 있음을 지정하기 위해 수동으로 끝에 &lt;code&gt;/*&lt;/code&gt; glob을 추가 해야합니다.</target>
        </trans-unit>
        <trans-unit id="b67a3f784c4081829175c52b0e81ef86e42381f1" translate="yes" xml:space="preserve">
          <source>Notice that the format for the Munki manifest is similar to what Gorilla uses:</source>
          <target state="translated">Munki 매니페스트의 형식은 Gorilla가 사용하는 형식과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="ee1f7151750f73ad169c215271082d5821672c73" translate="yes" xml:space="preserve">
          <source>Notice that the format for the manifest is similar to what Gorilla uses:</source>
          <target state="translated">매니페스트의 형식은 Gorilla가 사용하는 형식과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="4f768cf6edea4db1b168b85e885eaf2ac00c946c" translate="yes" xml:space="preserve">
          <source>Notification Service</source>
          <target state="translated">알림 서비스</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="69a2d032693f0d0a7232cda36bda2836ba34d717" translate="yes" xml:space="preserve">
          <source>Notifications and subscriptions do not need to be updated when packages and versions are added or removed from the &lt;code&gt;package_name&lt;/code&gt; or &lt;code&gt;version&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;package_name&lt;/code&gt; 또는 &lt;code&gt;version&lt;/code&gt; 속성 에서 패키지 및 버전을 추가하거나 제거 할 때 알림 및 구독을 업데이트 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="00763a1b7002cbbf0eb1474f4e4270470c24867c" translate="yes" xml:space="preserve">
          <source>Notifications enabled indicates if security alerts are emailed to the security contact (&lt;code&gt;true&lt;/code&gt;|&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">활성화 된 알림은 보안 경고가 보안 담당자에게 이메일로 전송되는지 여부를 나타냅니다 ( &lt;code&gt;true&lt;/code&gt; | &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4932183097e1e42a7111966582784611fa2c2b2b" translate="yes" xml:space="preserve">
          <source>Notifications may be sent to any email address, a chat service like HipChat or Slack, or to a webhook-based service for generic intergrations.</source>
          <target state="translated">알림은 모든 이메일 주소, HipChat 또는 Slack과 같은 채팅 서비스 또는 일반 통합을위한 웹 후크 기반 서비스로 전송 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f3aad5ec07b825227f4629fe005dc5ba0983ba0" translate="yes" xml:space="preserve">
          <source>Notifications sent by Chef Automate do not support retries; therefore, notifications sent while Slack or the external service receiving the notification is experiencing API issues, outages, or some other unplanned downtime may never be received. Undelivered notifications are not re-sent. Attempts to send notifications do generate log messages in your Chef Automate server.</source>
          <target state="translated">Chef Automate에서 보낸 알림은 재 시도를 지원하지 않습니다. 따라서 Slack 또는 알림을 수신하는 외부 서비스에 API 문제, 중단 또는 기타 계획되지 않은 다운 타임이 발생하는 동안 전송 된 알림은 수신되지 않을 수 있습니다. 배달되지 않은 알림은 다시 보내지지 않습니다. 알림을 보내려고하면 Chef Automate 서버에서 로그 메시지가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="792184af8548fa84dbaff242f0be3e07c71c4d8a" translate="yes" xml:space="preserve">
          <source>Notifications sent to Slack by Workflow do not support retries. Therefore, notifications sent while Slack is experiencing API issues, outages, or some other unplanned downtime may never be received by the channel. Undelivered notifications are not re-sent.</source>
          <target state="translated">Workflow에서 Slack으로 보낸 알림은 재 시도를 지원하지 않습니다. 따라서 Slack에 API 문제, 중단 또는 기타 계획되지 않은 다운 타임이 발생하는 동안 전송 된 알림은 채널에서 수신되지 않을 수 있습니다. 배달되지 않은 알림은 다시 보내지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2bc18750afb43afb858ec4f947d58af408716da5" translate="yes" xml:space="preserve">
          <source>Notifications, via an implicit name:</source>
          <target state="translated">암시 적 이름을 통한 알림 :</target>
        </trans-unit>
        <trans-unit id="3dad339fc0bb5d2e0f8c80d4c81ab2f16e3796ba" translate="yes" xml:space="preserve">
          <source>Notifies</source>
          <target state="translated">Notifies</target>
        </trans-unit>
        <trans-unit id="887d8691caef6c4f9138990d8ca730f0d9f957f7" translate="yes" xml:space="preserve">
          <source>Notify immediately</source>
          <target state="translated">즉시 알림</target>
        </trans-unit>
        <trans-unit id="aca2a47d81115c6690058c8330ec33f6061ca35b" translate="yes" xml:space="preserve">
          <source>Notify multiple resources</source>
          <target state="translated">여러 리소스에 알림</target>
        </trans-unit>
        <trans-unit id="4451a7a81bee9724c7690c95dba24cd86838e494" translate="yes" xml:space="preserve">
          <source>Nov 13th, 2020</source>
          <target state="translated">2020 년 11 월 13 일</target>
        </trans-unit>
        <trans-unit id="ee48c20a870509c0e940e626bdc979ba0dbb6e14" translate="yes" xml:space="preserve">
          <source>November 11, 2027</source>
          <target state="translated">2027 년 11 월 11 일</target>
        </trans-unit>
        <trans-unit id="52d35b2721ca6c9c9b9633a40c6079021a172ba0" translate="yes" xml:space="preserve">
          <source>November 30, 2020</source>
          <target state="translated">2020 년 11 월 30 일</target>
        </trans-unit>
        <trans-unit id="aac43926fc9e3747cc27ba6c5cc38c8f18b4bd15" translate="yes" xml:space="preserve">
          <source>Now apply that configuration to your Chef Automate 2 deployment:</source>
          <target state="translated">이제 해당 구성을 Chef Automate 2 배포에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="63d002d5303595e1cff325741fffd134b3e53946" translate="yes" xml:space="preserve">
          <source>Now for your Munki container, build out a folder structure that looks like this:</source>
          <target state="translated">이제 Munki 컨테이너에 대해 다음과 같은 폴더 구조를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="44b65d1ec2a99140ffd3756a035dd3e056e83a7a" translate="yes" xml:space="preserve">
          <source>Now import the pkg files. When you import the first package the catalog will build automatically.</source>
          <target state="translated">이제 pkg 파일을 가져옵니다. 첫 번째 패키지를 가져 오면 카탈로그가 자동으로 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="e6a1273737f96f71fdec71859d637ff11417db51" translate="yes" xml:space="preserve">
          <source>Now in the stage1 Studio:</source>
          <target state="translated">이제 stage1 Studio에서 :</target>
        </trans-unit>
        <trans-unit id="a8e2c16f228a60e86746e6247aebee4522acca21" translate="yes" xml:space="preserve">
          <source>Now that &lt;code&gt;knife&lt;/code&gt; is configured, copy the SSL certificates from your Chef Infra Server to your trusted certificates:</source>
          <target state="translated">이제 &lt;code&gt;knife&lt;/code&gt; 가 구성되었으므로 Chef Infra Server에서 신뢰할 수있는 인증서로 SSL 인증서를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="f8f497c453dcefb73b3e6125c676a3553b526aec" translate="yes" xml:space="preserve">
          <source>Now that FIPS mode is enabled in your &lt;code&gt;.delivery/cli.toml&lt;/code&gt;, running any project-specific Delivery CLI command will automatically use FIPS-compliant encrypted git traffic between your workstation and the Chef Automate server. As long as the Chef Automate server is in FIPS mode, no other action is needed on your part to operate Delivery CLI in FIPS mode. If you ever stop using FIPS mode on the Chef Automate server, simply delete the above two lines from your &lt;code&gt;.delivery/cli.toml&lt;/code&gt; file and Delivery CLI will stop running in FIPS mode.</source>
          <target state="translated">이제 &lt;code&gt;.delivery/cli.toml&lt;/code&gt; 에서 FIPS 모드가 활성화 되었으므로 프로젝트 별 Delivery CLI 명령을 실행하면 워크 스테이션과 Chef Automate 서버간에 FIPS 호환 암호화 된 git 트래픽이 자동으로 사용됩니다. Chef Automate 서버가 FIPS 모드에있는 한 FIPS 모드에서 Delivery CLI를 작동하기 위해 다른 조치가 필요하지 않습니다. Chef Automate 서버에서 FIPS 모드 사용을 중지 한 경우 &lt;code&gt;.delivery/cli.toml&lt;/code&gt; 파일 에서 위의 두 줄을 삭제하면 Delivery CLI가 FIPS 모드에서 실행을 중지합니다.</target>
        </trans-unit>
        <trans-unit id="83fe94b131e778e49763d10818058f0e001a6b2b" translate="yes" xml:space="preserve">
          <source>Now that the Chef Infra Client is configured for data collection, you can also enable Compliance Scanning on via the &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;Audit Cookbook&lt;/a&gt;.</source>
          <target state="translated">Chef Infra Client가 데이터 수집을 위해 구성 &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;되었으므로 감사 설명서&lt;/a&gt; 를 통해 준수 검사를 활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52e9959b1cc62f01b5638cc703b0cd8593654022" translate="yes" xml:space="preserve">
          <source>Now that the Chef Infra Server is configured for data collection, you can also enable Compliance Scanning</source>
          <target state="translated">Chef Infra Server가 데이터 수집을 위해 구성되었으므로 준수 검색을 활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a29f73f58eb63531845b8d1c3abb6587032ec9b6" translate="yes" xml:space="preserve">
          <source>Now that the catalog and manifest are ready, test this out from a macOS node by running the following commands from a terminal window.</source>
          <target state="translated">이제 카탈로그와 매니페스트가 준비되었으므로 터미널 창에서 다음 명령을 실행하여 macOS 노드에서이를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="1c378cec2938a467ab94aa754631b707dc655466" translate="yes" xml:space="preserve">
          <source>Now that we have the first set of our ingested data associated with our new project, let us add another condition and a new rule to add more data to &lt;code&gt;project-devops&lt;/code&gt;.</source>
          <target state="translated">이제 새 프로젝트와 관련된 첫 번째 수집 된 데이터 집합이 있으므로 다른 조건과 새 규칙을 추가하여 더 많은 데이터를 &lt;code&gt;project-devops&lt;/code&gt; 에 추가 하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="62912297db4c39b2483b7ca2a59c786212d59e50" translate="yes" xml:space="preserve">
          <source>Now that we have the package running, it is time to make customizations. When making a customization, consider if you want to customize the scan or the remediation? Here are a list of available options for scanning and remediation:</source>
          <target state="translated">이제 패키지를 실행 했으므로 사용자 지정을 수행 할 차례입니다. 사용자 정의 할 때 스캔 또는 수정을 사용자 정의 할 것인지 고려 하시겠습니까? 다음은 검색 및 수정에 사용할 수있는 옵션 목록입니다.</target>
        </trans-unit>
        <trans-unit id="35b074e4cbfd73fa0474c0acf95eaf3e1c52b7f9" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;re in a Studio, it&amp;rsquo;s been set up with an empty artifact cache. We&amp;rsquo;re going to set things up so that our install logic won&amp;rsquo;t need to call out to a Builder API:</source>
          <target state="translated">이제 Studio에 있으므로 빈 아티팩트 캐시로 설정되었습니다. 설치 로직이 Builder API를 호출 할 필요가 없도록 설정하겠습니다.</target>
        </trans-unit>
        <trans-unit id="971f66f3c89082b6da8e0c8b90ff13a13e40c180" translate="yes" xml:space="preserve">
          <source>Now that you have a valid API token, you&amp;rsquo;ll need to &lt;a href=&quot;#configure-your-chef-infra-server-to-send-data-to-chef-automate&quot;&gt;update your Chef Infra Server data collector configuration&lt;/a&gt; if you are using a Chef Infra Server. Otherwise, you must &lt;a href=&quot;#configure-your-chef-client-to-send-data-to-chef-automate-without-chef-server&quot;&gt;configure your Chef Infra Clients to send data directly to Chef Automate&lt;/a&gt;.</source>
          <target state="translated">이제 유효한 API 토큰이 있으므로 &lt;a href=&quot;#configure-your-chef-infra-server-to-send-data-to-chef-automate&quot;&gt;Chef Infra Server&lt;/a&gt; 를 사용하는 경우 Chef Infra Server 데이터 수집기 ​​구성 을 업데이트 해야합니다 . 그렇지 않으면 &lt;a href=&quot;#configure-your-chef-client-to-send-data-to-chef-automate-without-chef-server&quot;&gt;Chef Automate로 직접 데이터를 보내도록 Chef Infra 클라이언트를 구성&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="dac20383c20602173108d10e0a0f80784912f677" translate="yes" xml:space="preserve">
          <source>Now that you have confirmed that the Chef Automate server is in FIPS mode, you must enable FIPS mode locally on your workstation for Delivery CLI. This can be done by adding the following to your &lt;code&gt;.delivery/cli.toml&lt;/code&gt;:</source>
          <target state="translated">Chef Automate 서버가 FIPS 모드에 있음을 확인 했으므로 이제 워크 스테이션에서 로컬로 Delivery CLI를 위해 FIPS 모드를 활성화해야합니다. &lt;code&gt;.delivery/cli.toml&lt;/code&gt; 에 다음을 추가하면 됩니다 .</target>
        </trans-unit>
        <trans-unit id="29ee483b31cfb94ea3c8f660f92a0c7fd69e74d6" translate="yes" xml:space="preserve">
          <source>Now that you have initialized your project, it is recommended that you integrate the &lt;strong&gt;delivery-truck&lt;/strong&gt; cookbook with your project. Delivery Truck can ensure good build cookbook behavior as well as provide you with recipes already set up to test your project cookbooks and applications.</source>
          <target state="translated">이제 프로젝트를 초기화 했으므로 &lt;strong&gt;배달 트럭&lt;/strong&gt; 요리 책을 프로젝트와 통합하는 것이 좋습니다 . Delivery Truck은 좋은 빌드 쿡북 동작을 보장 할뿐만 아니라 프로젝트 쿡북 및 애플리케이션을 테스트하기 위해 이미 설정된 레시피를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8f30e14dcce416f689b5f611281e6a733613694" translate="yes" xml:space="preserve">
          <source>Now that you have initialized your project, it is recommended that you integrate the delivery-truck cookbook with your project. Delivery Truck can ensure good build cookbook behavior as well as provide you with recipes already set up to test your project cookbooks and applications.</source>
          <target state="translated">이제 프로젝트를 초기화 했으므로 배달 트럭 요리 책을 프로젝트와 통합하는 것이 좋습니다. Delivery Truck은 좋은 빌드 쿡북 동작을 보장 할뿐만 아니라 프로젝트 쿡북 및 애플리케이션을 테스트하기 위해 이미 설정된 레시피를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84cc30aa3c35b004b33c85f1b8a8cef3c175eac7" translate="yes" xml:space="preserve">
          <source>Now that you have stubbed out your plan file in your plan context, open it and begin modifying it to suit your needs.</source>
          <target state="translated">이제 계획 컨텍스트에서 계획 파일을 스텁 처리 했으므로 파일을 열고 필요에 맞게 수정하기 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="674da73f9e43251b3c17cef76aab6251527c5603" translate="yes" xml:space="preserve">
          <source>Now that you have the &lt;code&gt;Vagrantfile&lt;/code&gt; in your current directory, provision a new VM by running:</source>
          <target state="translated">현재 디렉터리에 &lt;code&gt;Vagrantfile&lt;/code&gt; 이 있으므로 다음 을 실행하여 새 VM을 프로비저닝합니다.</target>
        </trans-unit>
        <trans-unit id="8ffa151fc88d8e0437bb474ef5bfb72282840bb2" translate="yes" xml:space="preserve">
          <source>Now that you have your systems listed in Azure, we need to get them under an enrollment or deployment profile. This initial configuration of the device will bring it under management.</source>
          <target state="translated">이제 시스템이 Azure에 나열되었으므로 등록 또는 배포 프로필에서 시스템을 가져와야합니다. 이 장치의 초기 구성은 장치를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="3b42848749b7073f1e0cc7181037687df2164c06" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve installed Chef Workstation, proceed to the &lt;a href=&quot;../getting_started/index&quot;&gt;Getting Started&lt;/a&gt; guide to configure your Chef Workstation installation.</source>
          <target state="translated">Chef Workstation을 설치 했으므로 이제 &lt;a href=&quot;../getting_started/index&quot;&gt;시작&lt;/a&gt; 안내서로 이동하여 Chef Workstation 설치를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="b185494e9a7e06fa400a7f17d09182cf9433f8c5" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve installed Chef Workstation, proceed to the &lt;a href=&quot;workstation/getting_started/index&quot;&gt;Getting Started&lt;/a&gt; guide to configure your Chef Workstation installation.</source>
          <target state="translated">Chef Workstation을 설치 했으므로 이제 &lt;a href=&quot;workstation/getting_started/index&quot;&gt;시작&lt;/a&gt; 안내서로 이동하여 Chef Workstation 설치를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="7087fac6701e6345319e19cc8082268d5dd93f91" translate="yes" xml:space="preserve">
          <source>Now upon running &lt;code&gt;build&lt;/code&gt; you should enter an interactive prompt inside the context of the Invoke-Build function:</source>
          <target state="translated">이제 &lt;code&gt;build&lt;/code&gt; 를 실행할 때 Invoke-Build 함수의 컨텍스트 내에 대화 형 프롬프트를 입력해야합니다.</target>
        </trans-unit>
        <trans-unit id="c98b5ee180777fe2783068089fbd4f5daca75d6e" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;re ready to use the stage1 packages to make a set of packages that are completely decoupled from the stage1 &lt;code&gt;tools/&lt;/code&gt; infrastructure, which we&amp;rsquo;ll call a &amp;ldquo;stage2&amp;rdquo; build.</source>
          <target state="translated">이제 stage1 패키지를 사용 하여 &quot;stage2&quot;빌드라고 부르는 stage1 &lt;code&gt;tools/&lt;/code&gt; 인프라 에서 완전히 분리 된 패키지 세트를 만들 준비가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3956dbcbb40c5445e669334d54eb3a29e58aa2ea" translate="yes" xml:space="preserve">
          <source>Now whenever you run the base profile you can just &lt;code&gt;include_controls 'centos-profile'&lt;/code&gt;. It will only run the included profiles is the platform matches the supported platform.</source>
          <target state="translated">이제 기본 프로필을 실행할 때마다 &lt;code&gt;include_controls 'centos-profile'&lt;/code&gt; 만 할 수 있습니다 . 플랫폼이 지원되는 플랫폼과 일치하는 경우 포함 된 프로필 만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="8e377b6d620190604c9c9e27f3cb5114048ceff7" translate="yes" xml:space="preserve">
          <source>Now you are ready to try out your Chef Desktop cookbook on your first test node. Before you begin, you need to:</source>
          <target state="translated">이제 첫 번째 테스트 노드에서 Chef Desktop 쿡북을 사용해 볼 준비가되었습니다. 시작하기 전에 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c18b87d486c8695b230dae732eef571b9177e71d" translate="yes" xml:space="preserve">
          <source>Now you can import pkg files. When you import the first package, the catalog gets built for you automatically.</source>
          <target state="translated">이제 pkg 파일을 가져올 수 있습니다. 첫 번째 패키지를 가져 오면 카탈로그가 자동으로 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="10e28d02af215d238373c3e3bc7b9c1fd51d567d" translate="yes" xml:space="preserve">
          <source>Now you can use Storage Explorer to move the entire thing into your Azure Blob Storage</source>
          <target state="translated">이제 Storage Explorer를 사용하여 전체 항목을 Azure Blob Storage로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e60db3ac8286d434364394d30e86336fa512465c" translate="yes" xml:space="preserve">
          <source>Now you can use Storage Explorer to move the entire thing into your Azure Blob Storage.</source>
          <target state="translated">이제 Storage Explorer를 사용하여 전체 항목을 Azure Blob Storage로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fd3561e4dab46f454a5e9271421b7cdba158f6a" translate="yes" xml:space="preserve">
          <source>Now your Chef Infra Server has the cookbook and settings it needs to apply to the nodes.</source>
          <target state="translated">이제 Chef Infra Server에 노드에 적용해야하는 요리 책과 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a39843f8240620501fa746ad832541e6623a0dcc" translate="yes" xml:space="preserve">
          <source>Now, any node with &lt;code&gt;audit::default&lt;/code&gt; its runlist will fetch and report data directly to and from Chef Automate. Please see the audit cookbook for an &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;exhaustive list of configuration options&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;code&gt;audit::default&lt;/code&gt; 가 있는 모든 노드 의 실행 목록은 Chef Automate에서 직접 데이터를 가져오고보고합니다. &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;구성 옵션&lt;/a&gt; 의 전체 목록은 감사 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcf80af91cfcbc1615cbb42f99644823651806be" translate="yes" xml:space="preserve">
          <source>Now, any node with &lt;code&gt;audit::default&lt;/code&gt; its runlist will fetch and report data to and from Chef Automate via the Chef Infra Server. Please see the audit cookbook for an &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;exhaustive list of configuration options&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;code&gt;audit::default&lt;/code&gt; 하는 모든 노드 의 실행 목록은 Chef Infra Server를 통해 Chef Automate에서 데이터를 가져오고보고합니다. &lt;a href=&quot;https://github.com/chef-cookbooks/audit&quot;&gt;구성 옵션&lt;/a&gt; 의 전체 목록은 감사 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="faa9ba794f41f277ac9660b3a7f7faad243a5a76" translate="yes" xml:space="preserve">
          <source>Now, create two containers in your storage account to hold the content for our users. For macOS devices, all content we want them to have - either &amp;lsquo;managed&amp;rsquo; (we push it to them) or &amp;lsquo;unmanaged&amp;rsquo; (users can download if they wish) goes here. For Windows users, only the managed content goes in the corresponding bucket and we will use the App Store to make things we license available to them.</source>
          <target state="translated">이제 스토리지 계정에 두 개의 컨테이너를 만들어 사용자를위한 콘텐츠를 보관합니다. macOS 장치의 경우, 우리가 원하는 모든 콘텐츠- '관리 됨'(우리가 푸시) 또는 '관리되지 않음'(사용자가 원하는 경우 다운로드 가능)이 여기에 표시됩니다. Windows 사용자의 경우 관리되는 콘텐츠 만 해당 버킷에 저장되며 App Store를 사용하여 라이선스 항목을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a2e056225d4580c66f78248fb84d41809fb56e8" translate="yes" xml:space="preserve">
          <source>Now, perform a &lt;a href=&quot;index&quot;&gt;build&lt;/a&gt; &amp;ndash; we recommend using an interactive studio so you do not need to set up the environment from scratch for every build.</source>
          <target state="translated">이제 &lt;a href=&quot;index&quot;&gt;빌드를&lt;/a&gt; 수행하십시오 . 모든 빌드에 대해 처음부터 환경을 설정할 필요가 없도록 대화 형 스튜디오를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0fadc4e9cd7f0d881d8fe645c2f1d6b692e25b86" translate="yes" xml:space="preserve">
          <source>Now, run Chef Infra Client again:</source>
          <target state="translated">이제 Chef Infra Client를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="b73365ef962b8eb9e6abc7a9ca6fc94fcc25b781" translate="yes" xml:space="preserve">
          <source>Now, run the chef-client again:</source>
          <target state="translated">이제 요리사 클라이언트를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="e94b32af3907a0794f61f72370f11a7532cff341" translate="yes" xml:space="preserve">
          <source>Now, run the following on each Supervisor to load &lt;code&gt;core/redis&lt;/code&gt; in the &amp;ldquo;prod&amp;rdquo; group:</source>
          <target state="translated">이제 각 Supervisor에서 다음을 실행하여 &quot;prod&quot;그룹의 &lt;code&gt;core/redis&lt;/code&gt; 를로드합니다 .</target>
        </trans-unit>
        <trans-unit id="29872f43ed4534ec5e7e247953885ad326aac784" translate="yes" xml:space="preserve">
          <source>Now, start the Supervisor and load your service package using the &lt;code&gt;hab&lt;/code&gt; binary, which is included in the tar archive:</source>
          <target state="translated">이제 Supervisor를 시작 하고 tar 아카이브에 포함 된 &lt;code&gt;hab&lt;/code&gt; 바이너리를 사용하여 서비스 패키지를로드합니다 .</target>
        </trans-unit>
        <trans-unit id="8252089f8552dde7e1bd7f589ac6782fbab523ce" translate="yes" xml:space="preserve">
          <source>Now, using the remote control capabilities of the Supervisor, this could be accomplished from a workstation or bastion host with an invocation that could be as simple as this:</source>
          <target state="translated">이제 Supervisor의 원격 제어 기능을 사용하여 다음과 같이 간단한 호출을 통해 워크 스테이션 또는 배스 천 호스트에서이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f03c4c21137d00da6618b04ead03a0c6dfce2358" translate="yes" xml:space="preserve">
          <source>Now, when you run &lt;code&gt;berks install&lt;/code&gt;, the apt cookbook will be downloaded from Supermarket into the cache:</source>
          <target state="translated">이제 &lt;code&gt;berks install&lt;/code&gt; 을 실행 하면 apt 쿡북이 Supermarket에서 캐시로 다운로드됩니다.</target>
        </trans-unit>
        <trans-unit id="9209191b1039a5abad1c2212edca4fab71816bfe" translate="yes" xml:space="preserve">
          <source>Nullsoft Scriptable Install System (NSIS)</source>
          <target state="translated">Nullsoft Scriptable Install System (NSIS)</target>
        </trans-unit>
        <trans-unit id="650fd49efe516b45db45774c56f5e9215b7cc8bc" translate="yes" xml:space="preserve">
          <source>Number of Chef Automate HTTP workers Chef Infra Server should start.</source>
          <target state="translated">Chef Automate HTTP 작업자 수 Chef Infra Server를 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="30b3baef8af57790c0b8037e59be07372437bd96" translate="yes" xml:space="preserve">
          <source>Number of Elasticsearch API failures allowed before health check fails.</source>
          <target state="translated">상태 확인이 실패하기 전에 허용 된 Elasticsearch API 실패 수입니다.</target>
        </trans-unit>
        <trans-unit id="652cc2447fa7526798a498b0e9d5fab270b937e7" translate="yes" xml:space="preserve">
          <source>Number of PostgreSQL connection failures allowed before health check fails.</source>
          <target state="translated">상태 확인이 실패하기 전에 허용 된 PostgreSQL 연결 실패 수입니다.</target>
        </trans-unit>
        <trans-unit id="7e58e066f1024981a0e40923a3f98f4e9e9e1479" translate="yes" xml:space="preserve">
          <source>Number of associated records</source>
          <target state="translated">관련 레코드 수</target>
        </trans-unit>
        <trans-unit id="5b57826231facf03575f97dbeebcda3b58b1d53d" translate="yes" xml:space="preserve">
          <source>Number of attached SSDs, from 0 to 4.</source>
          <target state="translated">연결된 SSD 수 (0 ~ 4)</target>
        </trans-unit>
        <trans-unit id="a835b3441e91fec4c54f0d454be613949bfe388a" translate="yes" xml:space="preserve">
          <source>Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance. Defaults to a runtime-specific value.</source>
          <target state="translated">스케줄러가 새 인스턴스를 생성하기 전에 자동 확장 인스턴스가 수락 할 수있는 동시 요청 수입니다. 기본값은 런타임 별 값입니다.</target>
        </trans-unit>
        <trans-unit id="152e60b90d06e4df6f15f1714893538f7bd4e424" translate="yes" xml:space="preserve">
          <source>Number of days before the expiration. It this threshold is reached, the CRL will be renewed.</source>
          <target state="translated">만료 전 일 수입니다. 이 임계 값에 도달하면 CRL이 갱신됩니다.</target>
        </trans-unit>
        <trans-unit id="a7ea834244f6b36ced643eddef2871accbef9246" translate="yes" xml:space="preserve">
          <source>Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error. Defaults to 5.</source>
          <target state="translated">호스트가 연결 풀에서 제거되기 전 오류 수입니다. HTTP를 통해 백엔드 호스트에 액세스하면 5xx 반환 코드가 오류로 간주됩니다. 기본값은 5입니다.</target>
        </trans-unit>
        <trans-unit id="658669cc01ae14e653824aa1426a6f0f65d98d29" translate="yes" xml:space="preserve">
          <source>Number of etcd failures allowed before health check fails.</source>
          <target state="translated">상태 확인이 실패하기 전에 허용되는 etcd 실패 수입니다.</target>
        </trans-unit>
        <trans-unit id="ad0527b375fb49c5ed1caa6bfc2869a76144d57a" translate="yes" xml:space="preserve">
          <source>Number of instances to assign to the service at the start. &lt;strong&gt;Note:&lt;/strong&gt; When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2 Modules API set_num_instances() you must use &lt;code&gt;lifecycle.ignore_changes = [&quot;manual_scaling&quot;[0].instances]&lt;/code&gt; to prevent drift detection.</source>
          <target state="translated">시작시 서비스에 할당 할 인스턴스 수입니다. &lt;strong&gt;참고 :&lt;/strong&gt; App Engine Admin API 또는 (현재 지원 중단됨) Python 2 Modules API set_num_instances ()를 통해 런타임시 인스턴스 수를 관리하는 경우 드리프트 감지를 방지 하려면 &lt;code&gt;lifecycle.ignore_changes = [&quot;manual_scaling&quot;[0].instances]&lt;/code&gt; 를 사용해야합니다. .</target>
        </trans-unit>
        <trans-unit id="55880eed0b25b2b897298e446121f613e292be0d" translate="yes" xml:space="preserve">
          <source>Number of milliseconds for which to keep the storage for a partition.</source>
          <target state="translated">파티션의 스토리지를 유지할 시간 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="ca7e4b1f5c5cc5097352a1894df643737c4d3788" translate="yes" xml:space="preserve">
          <source>Number of network endpoints in the network endpoint group.</source>
          <target state="translated">네트워크 엔드 포인트 그룹의 네트워크 엔드 포인트 수.</target>
        </trans-unit>
        <trans-unit id="2fcbee90ea4360a92770e1498173acf0572ebaf5" translate="yes" xml:space="preserve">
          <source>Number of previous passwords to remember.</source>
          <target state="translated">기억할 이전 비밀번호의 수입니다.</target>
        </trans-unit>
        <trans-unit id="1e042cdf13a1f15928bd56b5e47185aeb9e0426b" translate="yes" xml:space="preserve">
          <source>Number of seconds that this ResourceRecordSet can be cached by resolvers.</source>
          <target state="translated">이 ResourceRecordSet이 확인자에 의해 캐시 될 수있는 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="3dc113ada60193b8f8a112f394a2c3a21e04065f" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait between converge attempts. Default value: 30.</source>
          <target state="translated">수렴 시도 사이에 대기하는 시간 (초)입니다. 기본값 : 30.</target>
        </trans-unit>
        <trans-unit id="c7bde28dec70a4908f9c304a47c49ec9936ef0fc" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait between retries (exponential backoff is used if not provided) (default: -1)</source>
          <target state="translated">재시도 사이에 대기하는 시간 (초) (제공되지 않은 경우 지수 백 오프가 사용됨) (기본값 : -1)</target>
        </trans-unit>
        <trans-unit id="edd1be8522eaf08799089b1a865c35e9731a6bc5" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait for a connection before timing out. Defaults to 30 seconds. This may be too short of a time for extremely overloaded sites.</source>
          <target state="translated">시간이 초과되기 전에 연결을 기다리는 시간 (초)입니다. 기본값은 30 초입니다. 과부하가 심한 사이트에는 시간이 너무 짧을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8b4e1e3c3fad7c43ec1ddc92beaac175568c69a" translate="yes" xml:space="preserve">
          <source>Number of seconds to wait until attempting to make another connection after a failure.</source>
          <target state="translated">실패 후 다른 연결을 시도 할 때까지 대기하는 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="af2d791e60c79448dc8b2d6fbd4dc71a9b93abf8" translate="yes" xml:space="preserve">
          <source>Number of servers to create with same configuration. Maximum: 5. Default: 1.</source>
          <target state="translated">동일한 구성으로 생성 할 서버 수입니다. 최대 : 5. 기본값 : 1.</target>
        </trans-unit>
        <trans-unit id="6048e0d17c6c79fca851c23444ff5a211412e983" translate="yes" xml:space="preserve">
          <source>Number of system log lines (journald logs) to collect (0 for all logs) (default: 500000)</source>
          <target state="translated">수집 할 시스템 로그 행 (저널 로그) 수 (모든 로그의 경우 0) (기본값 : 500000)</target>
        </trans-unit>
        <trans-unit id="ed24ea6dfbe7b07396edd4809a547ac9c1e3ac44" translate="yes" xml:space="preserve">
          <source>Number of tests within an individual control</source>
          <target state="translated">개별 컨트롤 내의 테스트 수</target>
        </trans-unit>
        <trans-unit id="f71e08f7610eb6ffa0166cbdb38d65b464b429da" translate="yes" xml:space="preserve">
          <source>Number of times any attempt to retrieve a file should retry before returning an error. Setting this to &lt;code&gt;0&lt;/code&gt; makes Yum try forever.</source>
          <target state="translated">오류를 리턴하기 전에 파일 검색 시도가 재 시도해야하는 횟수입니다. 이것을 &lt;code&gt;0&lt;/code&gt; 으로 설정 하면 Yum은 영원히 시도합니다.</target>
        </trans-unit>
        <trans-unit id="5ebae2e5f053e5c03bb328d0eee764445e4aa286" translate="yes" xml:space="preserve">
          <source>Number of times to converge the node. Defaults to 1.</source>
          <target state="translated">노드를 수렴하는 횟수입니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="3d0931fede243da5cc217acf8bf247491435caa3" translate="yes" xml:space="preserve">
          <source>Number of times to retry failed hab package downloads (default: 2)</source>
          <target state="translated">실패한 hab 패키지 다운로드를 재 시도하는 횟수 (기본값 : 2)</target>
        </trans-unit>
        <trans-unit id="d6edcd320e1af4e7f256bf18485aa19382d56510" translate="yes" xml:space="preserve">
          <source>Number of times to retry the converge before passing along the failed status. Defaults value: 1.</source>
          <target state="translated">실패 상태를 전달하기 전에 수렴을 재 시도하는 횟수입니다. 기본값 : 1.</target>
        </trans-unit>
        <trans-unit id="ae4d87630c3be58eae3339f17eab46652f293fb9" translate="yes" xml:space="preserve">
          <source>Number of virtual CPUs to use.</source>
          <target state="translated">사용할 가상 CPU 수입니다.</target>
        </trans-unit>
        <trans-unit id="ac1addbfa05a5d7967b66aea1f56c4284b3db595" translate="yes" xml:space="preserve">
          <source>Number uniquely identifying the project.</source>
          <target state="translated">프로젝트를 고유하게 식별하는 번호입니다.</target>
        </trans-unit>
        <trans-unit id="3a4de771946856ec891507e0c82ee59aada21203" translate="yes" xml:space="preserve">
          <source>Number. The count of packages that matched the filter criteria.</source>
          <target state="translated">번호. 필터 기준과 일치하는 패키지 수입니다.</target>
        </trans-unit>
        <trans-unit id="6cd9d756b4abc49f2fa04e6afd780b4982709240" translate="yes" xml:space="preserve">
          <source>Number. The count of services that matched the filter criteria.</source>
          <target state="translated">번호. 필터 기준과 일치하는 서비스 수입니다.</target>
        </trans-unit>
        <trans-unit id="61ab31b0fd02c04fd15d995d651f5234adc7acf8" translate="yes" xml:space="preserve">
          <source>Numbered Lists</source>
          <target state="translated">번호가 매겨진 목록</target>
        </trans-unit>
        <trans-unit id="19b76f3a62d5c144f81ee97d99b05a368ec24cc3" translate="yes" xml:space="preserve">
          <source>Numbered lists are created like this:</source>
          <target state="translated">번호 매기기 목록은 다음과 같이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="f24b967dc18de8c7388cf99f2cd87fb5e0d08b4c" translate="yes" xml:space="preserve">
          <source>Numeric value to go with the scheduled task frequency</source>
          <target state="translated">예약 된 작업 빈도와 함께 사용할 숫자 값</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="d2c2ddf4985b0b7206de4309903c07a8b18f6c4a" translate="yes" xml:space="preserve">
          <source>OAuth scope to be used for generating OAuth access token. If not specified, &amp;ldquo;&lt;a href=&quot;https://www.googleapis.com/auth/cloud-platform%22&quot;&gt;https://www.googleapis.com/auth/cloud-platform&quot;&lt;/a&gt; will be used.</source>
          <target state="translated">OAuth 액세스 토큰 생성에 사용할 OAuth 범위입니다. 지정하지 않으면 ' &lt;a href=&quot;https://www.googleapis.com/auth/cloud-platform%22&quot;&gt;https://www.googleapis.com/auth/cloud-platform'&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1e72fe3e21144c39ec693c780199cbfee9490c6c" translate="yes" xml:space="preserve">
          <source>OAuth2 Client ID for IAP</source>
          <target state="translated">IAP 용 OAuth2 클라이언트 ID</target>
        </trans-unit>
        <trans-unit id="43724404c6c1712a118ee99d3c978e5db22083a1" translate="yes" xml:space="preserve">
          <source>OAuth2 Client Secret SHA-256 for IAP</source>
          <target state="translated">IAP 용 OAuth2 클라이언트 비밀번호 SHA-256</target>
        </trans-unit>
        <trans-unit id="f5efdaf0fb203e2183fb6623eb8d1a568c02c6d2" translate="yes" xml:space="preserve">
          <source>OAuth2 Client Secret for IAP</source>
          <target state="translated">IAP 용 OAuth2 클라이언트 비밀번호</target>
        </trans-unit>
        <trans-unit id="580b309ff8e639fdf1f325ea68246683848c6c9d" translate="yes" xml:space="preserve">
          <source>OAuth2 client id for the service account.</source>
          <target state="translated">서비스 계정의 OAuth2 클라이언트 ID입니다.</target>
        </trans-unit>
        <trans-unit id="95364ee868b5c77831e60a7e80a1fc93e22e951f" translate="yes" xml:space="preserve">
          <source>OBSOLETE</source>
          <target state="translated">OBSOLETE</target>
        </trans-unit>
        <trans-unit id="ad50489054ddaae044be8b3054bf4d67480648d6" translate="yes" xml:space="preserve">
          <source>OFF</source>
          <target state="translated">OFF</target>
        </trans-unit>
        <trans-unit id="c689932b7dbe30581b030db3ed10f089524606f4" translate="yes" xml:space="preserve">
          <source>OFFLINE</source>
          <target state="translated">OFFLINE</target>
        </trans-unit>
        <trans-unit id="8db5be7333feb5a9830ee383381dc99928e26bb1" translate="yes" xml:space="preserve">
          <source>OHAI-1</source>
          <target state="translated">OHAI-1</target>
        </trans-unit>
        <trans-unit id="eb05309687b136abfd5c327efd53aca0f6645410" translate="yes" xml:space="preserve">
          <source>OHAI-10</source>
          <target state="translated">OHAI-10</target>
        </trans-unit>
        <trans-unit id="e7a0549bdaab4347afc5f6f9a8dc8bcc2af2cb98" translate="yes" xml:space="preserve">
          <source>OHAI-11</source>
          <target state="translated">OHAI-11</target>
        </trans-unit>
        <trans-unit id="71fe599ae2c319b9944d82cd32d1434ad3869463" translate="yes" xml:space="preserve">
          <source>OHAI-12</source>
          <target state="translated">OHAI-12</target>
        </trans-unit>
        <trans-unit id="e818b9ea024da11c5dab5c84f66a69bb9dc47f40" translate="yes" xml:space="preserve">
          <source>OHAI-13</source>
          <target state="translated">OHAI-13</target>
        </trans-unit>
        <trans-unit id="cd9ae089dea038c3a0aca4f7dfde6266be14e063" translate="yes" xml:space="preserve">
          <source>OHAI-14</source>
          <target state="translated">OHAI-14</target>
        </trans-unit>
        <trans-unit id="4e6a5d89857ff2852cbda8976c5c44d6db966985" translate="yes" xml:space="preserve">
          <source>OHAI-2</source>
          <target state="translated">OHAI-2</target>
        </trans-unit>
        <trans-unit id="6bf27fdbebe5c384e20a4faf6e064ac77dabf72d" translate="yes" xml:space="preserve">
          <source>OHAI-3</source>
          <target state="translated">OHAI-3</target>
        </trans-unit>
        <trans-unit id="0ff735b1040fcae6dcd42c00d58cfa4c18b085d8" translate="yes" xml:space="preserve">
          <source>OHAI-4</source>
          <target state="translated">OHAI-4</target>
        </trans-unit>
        <trans-unit id="2d7c61a8849bbfb21f50f136e73685759993587e" translate="yes" xml:space="preserve">
          <source>OHAI-5</source>
          <target state="translated">OHAI-5</target>
        </trans-unit>
        <trans-unit id="e373f7e4c2fb5a016e36188b86089e5f5b9c31eb" translate="yes" xml:space="preserve">
          <source>OHAI-6</source>
          <target state="translated">OHAI-6</target>
        </trans-unit>
        <trans-unit id="a9cdc5134173056a795a4d27e588041275e39fce" translate="yes" xml:space="preserve">
          <source>OHAI-7</source>
          <target state="translated">OHAI-7</target>
        </trans-unit>
        <trans-unit id="69537acf2ea56ba68322087061b532e71362a63a" translate="yes" xml:space="preserve">
          <source>OHAI-8</source>
          <target state="translated">OHAI-8</target>
        </trans-unit>
        <trans-unit id="147413f84ed1ff07e0c92e920fd601650ed0d458" translate="yes" xml:space="preserve">
          <source>OHAI-9</source>
          <target state="translated">OHAI-9</target>
        </trans-unit>
        <trans-unit id="e3f88602d26b6fa8f0b5bf18209890cfbed3fdef" translate="yes" xml:space="preserve">
          <source>OK.</source>
          <target state="translated">OK.</target>
        </trans-unit>
        <trans-unit id="195f6ec90c80ec82b6321facfa33a703eabcfdda" translate="yes" xml:space="preserve">
          <source>OK. An invitation was created.</source>
          <target state="translated">확인. 초대장이 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="1b061df0c4989ae655f301f174a69d6feef254fc" translate="yes" xml:space="preserve">
          <source>OK. The group was created.</source>
          <target state="translated">확인. 그룹이 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="bd2954081684c682839a14185f603234d5c2e7c9" translate="yes" xml:space="preserve">
          <source>OK. The group was deleted.</source>
          <target state="translated">확인. 그룹이 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="57450f8909c3d2f74403cbfdb46ff43e6e6f56dd" translate="yes" xml:space="preserve">
          <source>OK. The group was updated.</source>
          <target state="translated">확인. 그룹이 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="71a96083e517b979ab8a1b6c83b55901e29d31fc" translate="yes" xml:space="preserve">
          <source>OK. The item was created.</source>
          <target state="translated">확인. 항목이 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="07339924c5b66a3f787f5f870d7f6e87a60207f6" translate="yes" xml:space="preserve">
          <source>OK. The request was successful.</source>
          <target state="translated">확인. 요청이 성공했습니다.</target>
        </trans-unit>
        <trans-unit id="34ae39ab54b243fd1fadb9d9af43debe51a1e159" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. A hash that maps each checksum to a hash that contains a boolean &lt;code&gt;needs_upload&lt;/code&gt; field and a URL if &lt;code&gt;needs_upload&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">확인. 요청이 성공했습니다. &lt;code&gt;needs_upload&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 각 체크섬을 부울 &lt;code&gt;needs_upload&lt;/code&gt; 필드와 URL 을 포함하는 해시에 매핑하는 해시입니다 .</target>
        </trans-unit>
        <trans-unit id="74f522ba2cb84d8aee5d60f11b771dc9fef5945b" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One (or more) cookbooks and associated cookbook version information was returned.</source>
          <target state="translated">확인. 요청이 성공했습니다. 하나 이상의 요리 책과 관련 요리 책 버전 정보가 반환되었습니다.</target>
        </trans-unit>
        <trans-unit id="ee4cc7192e25afcb1db81503fcd0902af43f0744" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One or more cookbooks were returned as a result of the search query.</source>
          <target state="translated">확인. 요청이 성공했습니다. 검색 쿼리의 결과로 하나 이상의 요리 책이 반환되었습니다.</target>
        </trans-unit>
        <trans-unit id="ed49654b4651a31090ef8ccb7b28c51b1c89961a" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One or more tools were returned as a result of the search query.</source>
          <target state="translated">확인. 요청이 성공했습니다. 검색 쿼리의 결과로 하나 이상의 도구가 반환되었습니다.</target>
        </trans-unit>
        <trans-unit id="725f8fa4d1e13aef011e2c7db35819c27d1763ce" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. One or more tools were returned.</source>
          <target state="translated">확인. 요청이 성공했습니다. 하나 이상의 도구가 반환되었습니다.</target>
        </trans-unit>
        <trans-unit id="9e6c6d27771f2935367af9fcd45581b384e1e570" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. Required recipe is enabled, a path to a recipe is defined, and a recipe exists at the path location.</source>
          <target state="translated">확인. 요청이 성공했습니다. 필수 레시피가 활성화되고 레시피에 대한 경로가 정의되며 레시피가 경로 위치에 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7de83cdba2bf0cef2fb961e9adea8d19091bea3" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The cookbook version was deleted.</source>
          <target state="translated">확인. 요청이 성공했습니다. 요리 책 버전이 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="7566cb1f6cfafc8423c6485a5b5f8dbf579b568f" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The cookbook was deleted.</source>
          <target state="translated">확인. 요청이 성공했습니다. 요리 책이 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="eab946b1b420009ca7bfa1516b08d5b26bc7ff32" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The cookbook was posted to the Supermarket API.</source>
          <target state="translated">확인. 요청이 성공했습니다. 요리 책이 Supermarket API에 게시되었습니다.</target>
        </trans-unit>
        <trans-unit id="36a4a691ece73d581cedf824d6f165a9967c7749" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The requested cookbook exists.</source>
          <target state="translated">확인. 요청이 성공했습니다. 요청한 요리 책이 있습니다.</target>
        </trans-unit>
        <trans-unit id="060adc45222520c8a47676d8e71683c1abb703f8" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The requested tool exists.</source>
          <target state="translated">확인. 요청이 성공했습니다. 요청한 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e05fc71fd10c6b10b810c11aaeaa09c269cbcdb9" translate="yes" xml:space="preserve">
          <source>OK. The request was successful. The user association was removed.</source>
          <target state="translated">확인. 요청이 성공했습니다. 사용자 연결이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="76b05436534f5b8b066dfb4580d126b89d8a05f0" translate="yes" xml:space="preserve">
          <source>OK. The user was created.</source>
          <target state="translated">확인. 사용자가 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="b87152febadaaaaf61d4fb89f0952b684d1763b3" translate="yes" xml:space="preserve">
          <source>OKTA</source>
          <target state="translated">OKTA</target>
        </trans-unit>
        <trans-unit id="387d7a59dbaaef002e0f9ac69ecd4443b9c5cef2" translate="yes" xml:space="preserve">
          <source>ON</source>
          <target state="translated">ON</target>
        </trans-unit>
        <trans-unit id="1267d26e27af9aea5911ab1567a9de4ee126a55f" translate="yes" xml:space="preserve">
          <source>ONE_TO_ONE_NAT</source>
          <target state="translated">ONE_TO_ONE_NAT</target>
        </trans-unit>
        <trans-unit id="4e93b6bcf5e4fe1788f6c1b2031bd62a5e14744d" translate="yes" xml:space="preserve">
          <source>ONLY_SCALE_OUT</source>
          <target state="translated">ONLY_SCALE_OUT</target>
        </trans-unit>
        <trans-unit id="b6504ccb22c194d3ecc6f6cec44469657fa30e27" translate="yes" xml:space="preserve">
          <source>ON_PREMISES_INSTANCE</source>
          <target state="translated">ON_PREMISES_INSTANCE</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="3a1c9bbdf81e96f88b56cf60bddfa9c4429607ea" translate="yes" xml:space="preserve">
          <source>ORGANIZATION-validator.pem</source>
          <target state="translated">ORGANIZATION-validator.pem</target>
        </trans-unit>
        <trans-unit id="f37987e722f2d33712c8025e160ad666f3096158" translate="yes" xml:space="preserve">
          <source>ORGANIZATION-validator.pem. This private key can be downloaded from the &lt;strong&gt;Organizations&lt;/strong&gt; page.</source>
          <target state="translated">조직 유효성 검사기 .pem. 이 개인 키는 &lt;strong&gt;조직&lt;/strong&gt; 페이지 에서 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="870d66b4538bd01b8bdb0530421f1ec894ddbbbf" translate="yes" xml:space="preserve">
          <source>ORIGINAL_DESTINATION</source>
          <target state="translated">ORIGINAL_DESTINATION</target>
        </trans-unit>
        <trans-unit id="de8aa86286dbb8eb74d2748c7b6d4486d0458203" translate="yes" xml:space="preserve">
          <source>OS</source>
          <target state="translated">OS</target>
        </trans-unit>
        <trans-unit id="9917fb3ec5df1aab02dbc4773d08f98d2c8e2393" translate="yes" xml:space="preserve">
          <source>OS Platform of a node.</source>
          <target state="translated">노드의 OS 플랫폼.</target>
        </trans-unit>
        <trans-unit id="a3166884c7aaa0302a419ff559f8010d556eadbd" translate="yes" xml:space="preserve">
          <source>OS X Options</source>
          <target state="translated">OS X 옵션</target>
        </trans-unit>
        <trans-unit id="d265b639a528380a69b6c9b254c40a432374ac48" translate="yes" xml:space="preserve">
          <source>OSX Auto Enrollment</source>
          <target state="translated">OSX 자동 등록</target>
        </trans-unit>
        <trans-unit id="f6ebd925ed20dc0bde4780417df86ad1dfd0bf63" translate="yes" xml:space="preserve">
          <source>OUTGOING</source>
          <target state="translated">OUTGOING</target>
        </trans-unit>
        <trans-unit id="501e48905555a0669b1e278477ac775a27d4f4a4" translate="yes" xml:space="preserve">
          <source>OWNER</source>
          <target state="translated">OWNER</target>
        </trans-unit>
        <trans-unit id="10065994e6f1ad8cb94be7cfcfebaa6ac91dcc90" translate="yes" xml:space="preserve">
          <source>Oauth2</source>
          <target state="translated">Oauth2</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="3fce51d9d47cd7dd773864983455ba782d5a8ff1" translate="yes" xml:space="preserve">
          <source>Object Permissions</source>
          <target state="translated">객체 권한</target>
        </trans-unit>
        <trans-unit id="24d50592b70a997e82a3839de9c69ef0c75660a9" translate="yes" xml:space="preserve">
          <source>Objectives</source>
          <target state="translated">Objectives</target>
        </trans-unit>
        <trans-unit id="0e8113208c656d7df96554b2106d3df12879b518" translate="yes" xml:space="preserve">
          <source>Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.</source>
          <target state="translated">이 조건에 의해 지정된 스토리지 클래스가있는 개체가 일치됩니다. 값에는 MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD 및 DURABLE_REDUCED_AVAILABILITY가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e3cb7edffed6bb392af60be81d7272df592e3373" translate="yes" xml:space="preserve">
          <source>Obvious Fix</source>
          <target state="translated">명백한 수정</target>
        </trans-unit>
        <trans-unit id="cf3a5341fee9f65ebbbced141b0b3a7e184e0347" translate="yes" xml:space="preserve">
          <source>Occasionally, a GRE tunnel will be required to handle the VRRP traffic. To accomplish this, set the following in &lt;code&gt;/var/opt/opscode/keepalived/bin/tunnel.sh&lt;/code&gt; on the back-end server that will be used for bootstrapping:</source>
          <target state="translated">때때로 VRRP 트래픽을 처리하기 위해 GRE 터널이 필요할 것입니다. 이를 위해 부트 스트랩에 사용될 백엔드 서버의 &lt;code&gt;/var/opt/opscode/keepalived/bin/tunnel.sh&lt;/code&gt; 에서 다음을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="381ce8af81a6415bfb3849396710b2188bc960a8" translate="yes" xml:space="preserve">
          <source>October 10, 2023</source>
          <target state="translated">2023 년 10 월 10 일</target>
        </trans-unit>
        <trans-unit id="972622128fe57d5c55044a793b95ef621a01103b" translate="yes" xml:space="preserve">
          <source>October 10, 2028</source>
          <target state="translated">2028 년 10 월 10 일</target>
        </trans-unit>
        <trans-unit id="a630c5194094abe984a8ec55aac65cab85c585f0" translate="yes" xml:space="preserve">
          <source>October 31, 2018</source>
          <target state="translated">2018 년 10 월 31 일</target>
        </trans-unit>
        <trans-unit id="700fbd330895b49dc388fcc641ef4870908af916" translate="yes" xml:space="preserve">
          <source>October 31, 2024</source>
          <target state="translated">2024 년 10 월 31 일</target>
        </trans-unit>
        <trans-unit id="6ae24a66f1ba4825bd676ac68b94065c02cf6624" translate="yes" xml:space="preserve">
          <source>Of course if your plan does not include hooks or configuration templates and just requires a plan file, you may choose this simpler structure:</source>
          <target state="translated">물론 계획에 후크 또는 구성 템플릿이 포함되어 있지 않고 계획 파일 만 필요한 경우 다음과 같은 더 간단한 구조를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cd841fbdc64a3a5fe8c7d8b027e90841dc46e77" translate="yes" xml:space="preserve">
          <source>Of course it is vastly simpler to just use Chef Infra Client resources when you can. Compare the equivalent implementations:</source>
          <target state="translated">물론 가능하면 Chef Infra Client 리소스를 사용하는 것이 훨씬 더 간단합니다. 동등한 구현을 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="8f33e29fb7228ed438a26553db9107a98bd1fae2" translate="yes" xml:space="preserve">
          <source>Of course. We still prefer the &lt;code&gt;should&lt;/code&gt; syntax for UX reasons. We did surveys with various types of customers like devops engineers, auditors, managers. All participants who preferred the &lt;code&gt;expect&lt;/code&gt; syntax have been Ruby experts. All non-Ruby developers found it easier to understand the &lt;code&gt;should&lt;/code&gt; syntax.</source>
          <target state="translated">물론이야. 우리는 여전히 UX 이유로 &lt;code&gt;should&lt;/code&gt; 구문을 선호합니다 . 우리는 devops 엔지니어, 감사 자, 관리자와 같은 다양한 유형의 고객을 대상으로 설문 조사를 수행했습니다. &lt;code&gt;expect&lt;/code&gt; 구문 을 선호하는 모든 참가자 는 Ruby 전문가였습니다. Ruby가 아닌 모든 개발자는 &lt;code&gt;should&lt;/code&gt; 구문 을 이해하는 것이 더 쉽다는 것을 알았습니다 .</target>
        </trans-unit>
        <trans-unit id="3be5c840a4828df5f6eb79d51a1c670242de66cc" translate="yes" xml:space="preserve">
          <source>Offensive comments related to gender, sexual orientation, age, disability, physical appearance, body size, race, veteran status, or religion.</source>
          <target state="translated">성별, 성적 취향, 연령, 장애, 신체적 외모, 신체 크기, 인종, 군필 여부 또는 종교와 관련된 불쾌한 댓글</target>
        </trans-unit>
        <trans-unit id="ec67bb6d3f31635640942ac59b8a7dc579685f28" translate="yes" xml:space="preserve">
          <source>Office365</source>
          <target state="translated">Office365</target>
        </trans-unit>
        <trans-unit id="c9cf3059d1db74d8be4f8d1ed56cf7b9ec6090d5" translate="yes" xml:space="preserve">
          <source>Official Names</source>
          <target state="translated">공식 이름</target>
        </trans-unit>
        <trans-unit id="72ba1760564e8e5b53ad42cd5a52b4ebf1b00bb4" translate="yes" xml:space="preserve">
          <source>Often commands can take longer than the default &lt;code&gt;MaxTimeoutms&lt;/code&gt; WinRM configuration setting. Increase this value to &lt;code&gt;1800000&lt;/code&gt; (30 minutes).</source>
          <target state="translated">종종 명령은 기본 &lt;code&gt;MaxTimeoutms&lt;/code&gt; WinRM 구성 설정 보다 오래 걸릴 수 있습니다 . 이 값을 &lt;code&gt;1800000&lt;/code&gt; (30 분)으로 늘리십시오 .</target>
        </trans-unit>
        <trans-unit id="d782fec8f815f0a5ddbe7475fbfbd74162d63a39" translate="yes" xml:space="preserve">
          <source>Often, a workstation is configured to use the Chef development kit as the development toolkit. The Chef development kit is a package from Chef that provides an optional (but recommended) set of tooling, including Chef itself, the chef command line tool, Kitchen, ChefSpec, Berkshelf, and more.</source>
          <target state="translated">종종 워크 스테이션은 Chef 개발 키트를 개발 툴킷으로 사용하도록 구성됩니다. Chef 개발 키트는 Chef 자체, 요리사 명령 줄 도구, Kitchen, ChefSpec, Berkshelf 등을 포함하여 선택적이지만 권장되는 도구 세트를 제공하는 Chef 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="703678013186879e27914d489f38c9314d73afe7" translate="yes" xml:space="preserve">
          <source>Ohai</source>
          <target state="translated">Ohai</target>
        </trans-unit>
        <trans-unit id="a4847b4c500e45a751e2f60c109e4a425aa9ba17" translate="yes" xml:space="preserve">
          <source>Ohai 7.0 released with Chef Client 11.12 introduced an improved plugin DSL model. At the time we introduced deprecations for the existing plugin DSL, which we referred to as V6 plugins. In Ohai/Chef Client 14 we will remove the support for Ohai V6 plugins, causing a runtime error if they are used.</source>
          <target state="translated">Chef Client 11.12와 함께 출시 된 Ohai 7.0은 개선 된 플러그인 DSL 모델을 도입했습니다. 당시 우리는 V6 플러그인이라고하는 기존 플러그인 DSL에 대한 지원 중단을 도입했습니다. Ohai / Chef Client 14에서는 Ohai V6 플러그인에 대한 지원이 제거되어 사용시 런타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="19cf819b5adeb5d82ddc2ea242914ddf7570f1b9" translate="yes" xml:space="preserve">
          <source>Ohai 8.8.0 (Chef Client 12.6.0) introduced a new Ohai configuration system as defined in &lt;a href=&quot;https://github.com/chef/chef-rfc/blob/master/rfc053-ohai-config.md&quot;&gt;RFC-053&lt;/a&gt;. This system replaced the existing usage of &lt;code&gt;Ohai::Config&lt;/code&gt; config system, which will be removed in Chef Client 13.</source>
          <target state="translated">Ohai 8.8.0 (Chef Client 12.6.0)은 &lt;a href=&quot;https://github.com/chef/chef-rfc/blob/master/rfc053-ohai-config.md&quot;&gt;RFC-053에&lt;/a&gt; 정의 된 새로운 Ohai 구성 시스템을 도입했습니다 . 이 시스템 은 Chef Client 13에서 제거 될 &lt;code&gt;Ohai::Config&lt;/code&gt; 구성 시스템 의 기존 사용법을 대체했습니다 .</target>
        </trans-unit>
        <trans-unit id="f1653e27db910c463cdecb46e336974518583f35" translate="yes" xml:space="preserve">
          <source>Ohai DSL Methods</source>
          <target state="translated">Ohai DSL 방법</target>
        </trans-unit>
        <trans-unit id="aed29453ecdad33f996bcfe3e82c741eca9ec4e5" translate="yes" xml:space="preserve">
          <source>Ohai Plugin Detail</source>
          <target state="translated">Ohai 플러그인 세부 사항</target>
        </trans-unit>
        <trans-unit id="79694708ebd0b4c0c3e952e72e99c4b479691aaa" translate="yes" xml:space="preserve">
          <source>Ohai Plugins</source>
          <target state="translated">Ohai 플러그인</target>
        </trans-unit>
        <trans-unit id="bba4ae127f188c29f3f598630ab3f0a9ffc8280c" translate="yes" xml:space="preserve">
          <source>Ohai Settings</source>
          <target state="translated">오 하이 설정</target>
        </trans-unit>
        <trans-unit id="09c830435727e2d8fc0a6bcffbd4c263df2feb26" translate="yes" xml:space="preserve">
          <source>Ohai Settings in client.rb</source>
          <target state="translated">client.rb의 Ohai 설정</target>
        </trans-unit>
        <trans-unit id="1331a626a62dcb6f456a7257676ac204068c9945" translate="yes" xml:space="preserve">
          <source>Ohai can be run on the command line outside of the Chef Infra Client run. See &lt;a href=&quot;../ctl_ohai&quot;&gt;Ohai (executable)&lt;/a&gt; for more information.</source>
          <target state="translated">Ohai는 Chef Infra Client 실행 외부의 명령 줄에서 실행할 수 있습니다. 자세한 내용은 &lt;a href=&quot;../ctl_ohai&quot;&gt;Ohai (실행 가능)&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d6da10e49410cd06f85dec37d5afdfc8fdc10dfc" translate="yes" xml:space="preserve">
          <source>Ohai can be run on the command line outside of the Chef Infra Client run. See &lt;a href=&quot;ctl_ohai&quot;&gt;Ohai (executable)&lt;/a&gt; for more information.</source>
          <target state="translated">Ohai는 Chef Infra Client 실행 외부의 명령 줄에서 실행할 수 있습니다. 자세한 내용은 &lt;a href=&quot;ctl_ohai&quot;&gt;Ohai (실행 가능)&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0b26b9cf7129c8ec265e63471c27f58a4baa7498" translate="yes" xml:space="preserve">
          <source>Ohai collects a list of automatic attributes at the start of each Chef Infra Client run. This list will vary from organization to organization, by server type, and by the platform that runs those servers. All the attributes collected by Ohai are unmodifiable by Chef Infra Client. Run the &lt;code&gt;ohai&lt;/code&gt; command on a system to see which automatic attributes Ohai has collected for a particular node.</source>
          <target state="translated">Ohai는 각 Chef Infra Client 실행을 시작할 때 자동 속성 목록을 수집합니다. 이 목록은 조직마다, 서버 유형 및 해당 서버를 실행하는 플랫폼에 따라 다릅니다. Ohai에서 수집 한 모든 속성은 Chef Infra Client에서 수정할 수 없습니다. 시스템 에서 &lt;code&gt;ohai&lt;/code&gt; 명령을 실행하여 Ohai가 특정 노드에 대해 수집 한 자동 속성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4dea91146f7dbc43df03cf298439dca93e1dbfbb" translate="yes" xml:space="preserve">
          <source>Ohai collects data for many platforms, including AIX, Darwin, Linux, FreeBSD, OpenBSD, NetBSD, Solaris, and any Microsoft Windows operating systems.</source>
          <target state="translated">Ohai는 AIX, Darwin, Linux, FreeBSD, OpenBSD, NetBSD, Solaris 및 모든 Microsoft Windows 운영 체제를 포함한 많은 플랫폼에 대한 데이터를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="10d6c289ab017dfa69c636b546ebb7085a445d63" translate="yes" xml:space="preserve">
          <source>Ohai collects platform information at the start of a Chef Infra Client run and stores that information in the &lt;code&gt;node['platform']&lt;/code&gt; attribute.</source>
          <target state="translated">Ohai는 Chef Infra Client 실행 시작시 플랫폼 정보를 수집하고 해당 정보를 &lt;code&gt;node['platform']&lt;/code&gt; 속성에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="311bd54c29bcd3f4e4a89912b6edbe43caf8bd0d" translate="yes" xml:space="preserve">
          <source>Ohai collects platform information at the start of the chef-client run and stores that information in the &lt;code&gt;node['platform']&lt;/code&gt; attribute.</source>
          <target state="translated">Ohai는 chef-client 실행 시작시 플랫폼 정보를 수집하고 해당 정보를 &lt;code&gt;node['platform']&lt;/code&gt; 속성에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="0bfa440e604499516f791756000f486ea3e6c92b" translate="yes" xml:space="preserve">
          <source>Ohai configuration settings can be added to the client.rb file.</source>
          <target state="translated">Ohai 구성 설정은 client.rb 파일에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e96b016424c6fd3cd9ac79bb9b2b09f72dc6f332" translate="yes" xml:space="preserve">
          <source>Ohai data gathered from each managed node - This data includes hardware, operating system, and installed program information. Some variation depends on the managed operating system</source>
          <target state="translated">각 관리 노드에서 수집 된 Ohai 데이터-이 데이터에는 하드웨어, 운영 체제 및 설치된 프로그램 정보가 포함됩니다. 관리되는 운영 체제에 따라 약간의 차이가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0e4fa07cc69e60fe45d42ca4c9439860a18fb5c" translate="yes" xml:space="preserve">
          <source>Ohai hints are used to tell Ohai something about the system that it is running on that it would not be able to discover itself. An Ohai hint exists if a JSON file exists in the hint directory with the same name as the hint. For example, calling &lt;code&gt;hint?('antarctica')&lt;/code&gt; in an Ohai plugin would return an empty hash if the file &lt;code&gt;antarctica.json&lt;/code&gt; existed in the hints directory, and return nil if the file does not exist.</source>
          <target state="translated">Ohai 힌트는 자신이 발견 할 수없는 시스템에 대해 Ohai에게 알려주는 데 사용됩니다. 힌트와 이름이 같은 힌트 디렉토리에 JSON 파일이있는 경우 Ohai 힌트가 존재합니다. 예를 들어, Ohai 플러그인에서 &lt;code&gt;hint?('antarctica')&lt;/code&gt; 를 호출 하면 &lt;code&gt;antarctica.json&lt;/code&gt; 파일 이 hints 디렉토리에 존재 하면 빈 해시를 리턴하고 파일이 존재하지 않으면 nil을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f05f60f7276d2afe20ed914ce8ce64127c4b07f3" translate="yes" xml:space="preserve">
          <source>Ohai is a tool that is used to collect system configuration data, which is provided to Chef Infra Client for use within cookbooks. Ohai is run by Chef Infra Client at the beginning of every Chef run to determine system state. Ohai includes many built-in plugins to detect common configuration details as well as a plugin model for writing custom plugins.</source>
          <target state="translated">Ohai는 쿡북 내에서 사용하기 위해 Chef Infra Client에 제공되는 시스템 구성 데이터를 수집하는 데 사용되는 도구입니다. Ohai는 시스템 상태를 확인하기 위해 Chef 실행이 시작될 때마다 Chef Infra Client에 의해 실행됩니다. Ohai에는 일반적인 구성 세부 정보를 감지하는 많은 내장 플러그인과 사용자 정의 플러그인 작성을위한 플러그인 모델이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e7f1cca93353cb909ac0a09a6bf8c8c6c50b1d1" translate="yes" xml:space="preserve">
          <source>Ohai is a tool that is used to detect attributes on a node, and then provide these attributes to Chef Infra Client at the start of every run.</source>
          <target state="translated">Ohai는 노드에서 속성을 감지 한 다음 매 실행 시작시 이러한 속성을 Chef Infra Client에 제공하는 데 사용되는 도구입니다.</target>
        </trans-unit>
        <trans-unit id="63c8a3895dc43d5a0f930848810f4d04bf7c81e3" translate="yes" xml:space="preserve">
          <source>Ohai is a tool that is used to detect attributes on a node, and then provide these attributes to the chef-client at the start of every chef-client run. Ohai is required by the chef-client and must be present on a node. (Ohai is installed on a node as part of the chef-client install process.)</source>
          <target state="translated">Ohai는 노드에서 속성을 감지하고 모든 요리사-클라이언트 실행이 시작될 때 요리사-클라이언트에게 이러한 속성을 제공하는 데 사용되는 도구입니다. Ohai는 chef-client가 필요하며 노드에 있어야합니다. (Ohai는 chef-client 설치 프로세스의 일부로 노드에 설치됩니다.)</target>
        </trans-unit>
        <trans-unit id="cf6adb705b664eeda44c8278607c9c7746071e4b" translate="yes" xml:space="preserve">
          <source>Ohai plugins are written in Ruby with a plugin DSL documented below. Being written in Ruby provides access to all of Ruby&amp;rsquo;s built-in functionality, as well as 3rd party gem functionality. Plugins can parse the output of any local command on the node, or they can fetch data from external APIs. Examples of plugins that users have written: - A plugin to gather node information including datacenter, rack, and rack position from an inventory server - A plugin to gather additional RAID array information from a controller utility - A plugin to gather hardware warranty information from a vendor API</source>
          <target state="translated">Ohai 플러그인은 아래 문서화 된 플러그인 DSL과 함께 Ruby로 작성되었습니다. Ruby로 작성하면 Ruby의 모든 내장 기능과 타사 gem 기능에 액세스 할 수 있습니다. 플러그인은 노드에서 모든 로컬 명령의 출력을 구문 분석하거나 외부 API에서 데이터를 가져올 수 있습니다. 사용자가 작성한 플러그인의 예 :-인벤토리 서버에서 데이터 센터, 랙 및 랙 위치를 포함한 노드 정보를 수집하는 플러그인-컨트롤러 유틸리티에서 추가 RAID 어레이 정보를 수집하는 플러그인-하드웨어 보증 정보를 수집하는 플러그인 공급 업체 API</target>
        </trans-unit>
        <trans-unit id="42a93c79e152112b07567ef176765ef305a54843" translate="yes" xml:space="preserve">
          <source>Ohai plugins that should be disabled in order to speed up the Chef Infra Client run and reduce the size of node data sent to Chef Infra Client</source>
          <target state="translated">Chef Infra Client 실행 속도를 높이고 Chef Infra Client로 전송되는 노드 데이터의 크기를 줄이기 위해 비활성화해야하는 Ohai 플러그인</target>
        </trans-unit>
        <trans-unit id="59c087f2cd047cef3ef6cb589973531d3d80e08c" translate="yes" xml:space="preserve">
          <source>Ohai ships a command mixin for use by plugin authors in shelling out to external commands. This mixin originally included &lt;code&gt;run_command&lt;/code&gt; and &lt;code&gt;popen4&lt;/code&gt; methods, which were deprecated in Ohai 8.11.1 (Chef Client 12.8.1) in favor of the more robust &lt;code&gt;mixlib-shellout&lt;/code&gt; gem functionality. In Chef Client 13 these deprecated methods will be removed, breaking any Ohai plugins authored using the deprecated methods.</source>
          <target state="translated">Ohai는 플러그인 작성자가 외부 명령을 셸링 할 때 사용할 명령 믹스 인을 제공합니다. 이 믹스 인에는 원래 &lt;code&gt;run_command&lt;/code&gt; 및 &lt;code&gt;popen4&lt;/code&gt; 메서드가 포함되어 있었는데, 이는보다 강력한 &lt;code&gt;mixlib-shellout&lt;/code&gt; gem 기능 을 위해 Ohai 8.11.1 (Chef Client 12.8.1)에서 더 이상 사용되지 않습니다 . Chef Client 13에서는 이러한 폐기 된 메소드가 제거되어 폐기 된 메소드를 사용하여 작성된 모든 Ohai 플러그인이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="f05ae06afefa9679cedfd3d779dd00aea3ecd6a5" translate="yes" xml:space="preserve">
          <source>Ohai ships several plugins that are considered optional and can be enabled in the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;.</source>
          <target state="translated">Ohai는 선택 사항으로 간주되고 &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb 구성 파일&lt;/a&gt; 에서 활성화 할 수있는 여러 플러그인을 제공 합니다 .</target>
        </trans-unit>
        <trans-unit id="3bff13a824cf53472deb1772d5d047d315fc3a8a" translate="yes" xml:space="preserve">
          <source>Ohai ships several plugins that are considered optional and can be enabled in the &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;.</source>
          <target state="translated">Ohai는 선택 사항으로 간주되고 &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb 구성 파일&lt;/a&gt; 에서 활성화 할 수있는 여러 플러그인을 제공 합니다 .</target>
        </trans-unit>
        <trans-unit id="06755a446a964ca0d2cad9483e02de977fc64b94" translate="yes" xml:space="preserve">
          <source>Ohai will attempt to fully qualify the name of any class by prepending &lt;code&gt;Ohai::&lt;/code&gt; to the loaded class. For example both:</source>
          <target state="translated">Ohai는 로드 된 클래스에 &lt;code&gt;Ohai::&lt;/code&gt; 를 추가하여 모든 클래스의 이름을 정규화하려고합니다 . 예를 들어 둘 다 :</target>
        </trans-unit>
        <trans-unit id="ef3e1dd68988d3dd7df9f82f02af9961a4ec89b1" translate="yes" xml:space="preserve">
          <source>Ohai&amp;rsquo;s previous Digital Ocean plugin relied on hint data passed to Ohai as well and the drop&amp;rsquo;s internal network interface configuration. The Digital Ocean plugin has been rewritten to poll information from the Digital Ocean Metadata endpoint instead. This provides additional Digital Ocean specific droplet configuration information as well as external IP address information that was previously not available. With the addition of new network configuration data, the format has changed and users relying on the previous format will need to update their cookbooks.</source>
          <target state="translated">Ohai의 이전 Digital Ocean 플러그인은 Ohai로 전달 된 힌트 데이터와 드롭의 내부 네트워크 인터페이스 구성에 의존했습니다. 대신 Digital Ocean 메타 데이터 엔드 포인트에서 정보를 폴링하도록 Digital Ocean 플러그인이 다시 작성되었습니다. 이것은 이전에 사용할 수 없었던 외부 IP 주소 정보뿐만 아니라 추가적인 Digital Ocean 특정 물방울 구성 정보를 제공합니다. 새로운 네트워크 구성 데이터가 추가됨에 따라 형식이 변경되었으며 이전 형식을 사용하는 사용자는 요리 책을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe0252d57702da7f2cd09577883e09537d6dbb39" translate="yes" xml:space="preserve">
          <source>Ohai::Config removal.</source>
          <target state="translated">Ohai :: Config 제거.</target>
        </trans-unit>
        <trans-unit id="ba2136e0c9605d9167d8dbb8d4bea09c867d718a" translate="yes" xml:space="preserve">
          <source>Okay, time to build all the base plans. As before, there is a wrapper to help here:</source>
          <target state="translated">좋아요, 모든 기본 계획을 세울 시간입니다. 이전과 마찬가지로 여기에 도움이되는 래퍼가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dd7167d435884770759e61a086cf58c288a6069" translate="yes" xml:space="preserve">
          <source>Okay, time to build all the remaining plans. As before, there is a wrapper to help here:</source>
          <target state="translated">좋아요, 나머지 모든 계획을 세울 시간입니다. 이전과 마찬가지로 여기에 도움이되는 래퍼가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bafd0e90a2cbb37957b5f75a20726846c613f6c" translate="yes" xml:space="preserve">
          <source>Omit for Authentication Version 1. Specify for Authentication Version 1.3</source>
          <target state="translated">인증 버전 1은 생략하십시오. 인증 버전 1.3을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="227f759da69a1bec264f808e55a8702b0f083c03" translate="yes" xml:space="preserve">
          <source>Omnitruck API</source>
          <target state="translated">Omnitruck API</target>
        </trans-unit>
        <trans-unit id="74c076a85b9ab967130e6bb61fbe2a24fe7bab5b" translate="yes" xml:space="preserve">
          <source>Omnitruck accepts the following platforms:</source>
          <target state="translated">Omnitruck은 다음 플랫폼을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="aeff07552dd438f27d3997d2612efcce06ae03fa" translate="yes" xml:space="preserve">
          <source>On BSD and MacOS platforms, the &lt;code&gt;ifconfig&lt;/code&gt; command is used as source. Link speed may not be available.</source>
          <target state="translated">BSD 및 MacOS 플랫폼에서는 &lt;code&gt;ifconfig&lt;/code&gt; 명령이 소스로 사용됩니다. 링크 속도를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="452a2c1dd8bd7ecd66650ebd85246a4608662788" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, SELinux is enabled in enforcing mode by default. The Chef Infra Server does not have a profile available to run under SELinux. In order for the Chef Infra Server to run, SELinux must be disabled or set to &lt;code&gt;Permissive&lt;/code&gt; mode.</source>
          <target state="translated">CentOS 및 Red Hat Enterprise Linux 시스템에서 SELinux는 기본적으로 강제 모드로 활성화됩니다. Chef Infra Server에는 SELinux에서 실행할 수있는 프로필이 없습니다. Chef Infra Server를 실행하려면 SELinux를 비활성화하거나 &lt;code&gt;Permissive&lt;/code&gt; 모드로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="e5ff7b850bb263cad5d50766c96115f7c4570834" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, SELinux is enabled in enforcing mode by default. The Chef server does not have a profile available to run under SELinux. In order for the Chef server to run, SELinux must be disabled or set to &lt;code&gt;Permissive&lt;/code&gt; mode.</source>
          <target state="translated">CentOS 및 Red Hat Enterprise Linux 시스템에서 SELinux는 기본적으로 적용 모드로 활성화됩니다. Chef 서버에는 SELinux에서 실행할 수있는 프로파일이 없습니다. Chef 서버를 실행하려면 SELinux를 비활성화하거나 &lt;code&gt;Permissive&lt;/code&gt; 모드로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="79a7f3c2559a9486c2e7ecb9d1b7811803fde269" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, the Apache Qpid daemon is installed by default.</source>
          <target state="translated">CentOS 및 Red Hat Enterprise Linux 시스템에서는 Apache Qpid 데몬이 기본적으로 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="02bea76d3640756e462fcc36251e2ff7dad8b866" translate="yes" xml:space="preserve">
          <source>On CentOS and Red Hat Enterprise Linux systems, the Apache Qpid daemon is installed by default. The Chef server uses RabbitMQ for messaging. Because both Apache Qpid and RabbitMQ share the same protocol, Apache Qpid must be disabled.</source>
          <target state="translated">CentOS 및 Red Hat Enterprise Linux 시스템에서 Apache Qpid 데몬이 기본적으로 설치됩니다. Chef 서버는 RabbitMQ를 사용하여 메시징합니다. Apache Qpid와 RabbitMQ는 모두 동일한 프로토콜을 공유하므로 Apache Qpid를 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="182759349952b40da41f7b9285452e9bc9dd820a" translate="yes" xml:space="preserve">
          <source>On Chef Server 12, the majority of the commands provided by this plugin can be accessed via &lt;code&gt;chef-server-ctl&lt;/code&gt; wrapper commands. &lt;a href=&quot;../../ctl_chef_server/index&quot;&gt;See chef-server-ctl for details&lt;/a&gt;.</source>
          <target state="translated">Chef Server 12에서이 플러그인이 제공하는 대부분의 명령은 &lt;code&gt;chef-server-ctl&lt;/code&gt; 래퍼 명령을 통해 액세스 할 수 있습니다 . &lt;a href=&quot;../../ctl_chef_server/index&quot;&gt;자세한 내용은 chef-server-ctl을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b22789178ca5c0ba9dadc44ce87a10fff52c14c" translate="yes" xml:space="preserve">
          <source>On Linux machines:</source>
          <target state="translated">Linux 시스템 :</target>
        </trans-unit>
        <trans-unit id="a7a1bdf28bfea5c7fc58ba82125fda6b4633d047" translate="yes" xml:space="preserve">
          <source>On Linux or macOS:</source>
          <target state="translated">Linux 또는 macOS :</target>
        </trans-unit>
        <trans-unit id="8e2d925e393dd85dfce7ff9aa2a9ed50da42aeb5" translate="yes" xml:space="preserve">
          <source>On Linux platforms, &lt;code&gt;/sys/class/net/#{iface}&lt;/code&gt; is used as source</source>
          <target state="translated">Linux 플랫폼에서는 &lt;code&gt;/sys/class/net/#{iface}&lt;/code&gt; 가 소스로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4a4fb724138f144dc72718d4966e9a21004c2c38" translate="yes" xml:space="preserve">
          <source>On Linux platforms, any value in the &lt;code&gt;/sys/class/net/{interface}/bridge&lt;/code&gt; directory may be tested</source>
          <target state="translated">Linux 플랫폼에서 &lt;code&gt;/sys/class/net/{interface}/bridge&lt;/code&gt; 디렉토리의 모든 값을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc1c89265e647c8232291318b42025ddf5302db6" translate="yes" xml:space="preserve">
          <source>On Linux, many binaries hardcode library dependencies to &lt;code&gt;/lib&lt;/code&gt; or &lt;code&gt;/lib64&lt;/code&gt; inside their ELF symbol table. Unfortunately, this means that Chef Habitat is unable to provide dependency isolation guarantees if packages are dependent on any operating system&amp;rsquo;s libraries in those directories. These Chef Habitat packages will also fail to run in minimal environments like containers built using &lt;code&gt;hab-pkg-export-docker&lt;/code&gt;, because there will not be a &lt;code&gt;glibc&lt;/code&gt; inside &lt;code&gt;/lib&lt;/code&gt; or &lt;code&gt;/lib64&lt;/code&gt;.</source>
          <target state="translated">Linux에서 많은 바이너리 는 ELF 기호 테이블 내 에서 &lt;code&gt;/lib&lt;/code&gt; 또는 &lt;code&gt;/lib64&lt;/code&gt; 에 라이브러리 종속성을 하드 코딩 합니다. 불행히도 이것은 Chef Habitat이 패키지가 해당 디렉토리의 운영 체제 라이브러리에 종속 된 경우 종속성 격리 보장을 제공 할 수 없음을 의미합니다. 이러한 Chef Habitat 패키지는 &lt;code&gt;/lib&lt;/code&gt; 또는 &lt;code&gt;/lib64&lt;/code&gt; 내부 에 &lt;code&gt;glibc&lt;/code&gt; 가 없기 때문에 &lt;code&gt;hab-pkg-export-docker&lt;/code&gt; 를 사용하여 빌드 된 컨테이너와 같은 최소 환경에서도 실행 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="76ffc362b5493abd5f87fa94180742e4c1155828" translate="yes" xml:space="preserve">
          <source>On Linux, the Chef Habitat Supervisor will normally run as the &lt;code&gt;root&lt;/code&gt; user, and will start Chef Habitat services as the &lt;code&gt;pkg_svc_user&lt;/code&gt; specified by that service. However, in some deployment scenarios, it undesirable&amp;ndash;or even impossible&amp;ndash;to run the Supervisor as &lt;code&gt;root&lt;/code&gt;. The &lt;a href=&quot;https://www.openshift.com/&quot;&gt;OpenShift&lt;/a&gt; container platform, for instance, does not run containers as &lt;code&gt;root&lt;/code&gt; by default, but as randomly-chosen anonymous user IDs. From version 0.53.0 onward, the Chef Habitat Supervisor can now run as an arbitrary user, providing users with more flexibility in how and where the use Chef Habitat.</source>
          <target state="translated">Linux에서 Chef Habitat Supervisor는 일반적으로 &lt;code&gt;root&lt;/code&gt; 사용자 로 실행 되며 해당 서비스에서 지정한 &lt;code&gt;pkg_svc_user&lt;/code&gt; 로 Chef Habitat 서비스를 시작 합니다. 그러나 일부 배포 시나리오에서는 Supervisor를 &lt;code&gt;root&lt;/code&gt; 로 실행하는 것이 바람직하지 않거나 불가능 합니다 . &lt;a href=&quot;https://www.openshift.com/&quot;&gt;OpenShift의&lt;/a&gt; 컨테이너 플랫폼은, 예를 들어, 같은 용기 실행되지 않습니다 &lt;code&gt;root&lt;/code&gt; 기본으로하지만, 익명 사용자 ID를 무작위로 선택. 버전 0.53.0부터 Chef Habitat Supervisor는 이제 임의의 사용자로 실행할 수 있으므로 사용자가 Chef Habitat을 사용하는 방법과 위치에 더 많은 유연성을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="773465aed48179973c832b9aaf16d32acfd0867f" translate="yes" xml:space="preserve">
          <source>On Linux, the following error sometimes occurs when the permissions used to run the Chef Infra Client are incorrect:</source>
          <target state="translated">Linux에서 Chef Infra Client를 실행하는 데 사용 된 권한이 잘못된 경우 다음 오류가 가끔 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f4a3646286676a8ff8e5c7e508fcb4e611863a27" translate="yes" xml:space="preserve">
          <source>On Linux, the following error sometimes occurs when the permissions used to run the chef-client are incorrect:</source>
          <target state="translated">Linux에서 chef-client를 실행하는 데 사용 된 권한이 올바르지 않은 경우 다음 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="70b706d85478f000d316df6c835e2713423acb41" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines, the default location for this file is &lt;code&gt;C:\chef\client.rb&lt;/code&gt;. On all other systems the default location for this file is &lt;code&gt;/etc/chef/client.rb&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows 시스템에서이 파일의 기본 위치는 &lt;code&gt;C:\chef\client.rb&lt;/code&gt; 입니다. 다른 모든 시스템에서이 파일의 기본 위치는 &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d65398bfbc4692e87326bfd3c85ab1b4077f43c3" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines: The &lt;code&gt;knife bootstrap windows winrm&lt;/code&gt; subcommand is issued from a workstation. (This command is part of the knife windows plugin .) The hostname, IP address, or FQDN of the target node is issued as part of this command. A connection is established with the target node using WinRM over port 5985. (WinRM must be enabled with the corresponding firewall rules in place.)</source>
          <target state="translated">Microsoft Windows 시스템의 경우 : &lt;code&gt;knife bootstrap windows winrm&lt;/code&gt; 부속 명령은 워크 스테이션에서 발행됩니다. (이 명령은 knife windows plugin의 일부입니다.) 대상 노드의 호스트 이름, IP 주소 또는 FQDN이이 명령의 일부로 발행됩니다. 포트 5985를 통한 WinRM을 사용하여 대상 노드와 연결됩니다. 해당 방화벽 규칙을 사용하여 WinRM을 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="16496f6d1a25b570630eb4915a64618762d54d15" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines: The batch file that is derived from the windows-chef-client-msi.erb bootstrap template executes the &lt;code&gt;chef-client&lt;/code&gt; binary with a set of initial settings stored within &lt;code&gt;first-boot.json&lt;/code&gt; on the node. &lt;code&gt;first-boot.json&lt;/code&gt; is generated from the workstation as part of the initial &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">Microsoft Windows 시스템 : windows-chef-client-msi.erb 부트 스트랩 템플리트에서 파생 된 배치 파일 은 노드의 &lt;code&gt;first-boot.json&lt;/code&gt; 에 저장된 초기 설정 세트로 &lt;code&gt;chef-client&lt;/code&gt; 2 진을 실행 합니다. &lt;code&gt;first-boot.json&lt;/code&gt; 은 초기 &lt;code&gt;knife bootstrap&lt;/code&gt; 하위 명령의 일부로 워크 스테이션에서 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="343dbbcdc7110e60aa308aefb775c23d9ff02ba1" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows machines: The batch file that is derived from the windows-chef-client-msi.erb bootstrap template will make a request to the Chef website to get the .msi installer.</source>
          <target state="translated">Microsoft Windows 시스템 : windows-chef-client-msi.erb 부트 스트랩 템플리트에서 파생 된 배치 파일은 Chef 웹 사이트에 .msi 설치 프로그램을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="670318e512345aec1b300f16a9280309101754a5" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows systems, invoke the Chef Software Install script using Windows PowerShell:</source>
          <target state="translated">Microsoft Windows 시스템에서 Windows PowerShell을 사용하여 Chef 소프트웨어 설치 스크립트를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="40dea33acca04ed0dc928e594cbd5619c29769bf" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, &lt;code&gt;C:/opscode/Chef Workstation/bin&lt;/code&gt; must be before &lt;code&gt;C:/opscode/Chef Workstation/embedded/bin&lt;/code&gt; in the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">마이크로 소프트 윈도우,에 &lt;code&gt;C:/opscode/Chef Workstation/bin&lt;/code&gt; 이전이어야합니다 &lt;code&gt;C:/opscode/Chef Workstation/embedded/bin&lt;/code&gt; 에서 &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88de2422cde6186076d61303f8ae6ed79478e99e" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, &lt;code&gt;C:/opscode/chefdk/bin&lt;/code&gt; must be before &lt;code&gt;C:/opscode/chefdk/embedded/bin&lt;/code&gt; in the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows에서 &lt;code&gt;C:/opscode/chefdk/bin&lt;/code&gt; 은 &lt;code&gt;PATH&lt;/code&gt; 에서 &lt;code&gt;C:/opscode/chefdk/embedded/bin&lt;/code&gt; 앞에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="bad52851e5648ea36b242593d9528cdee457fc99" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, Chef Infra Client must have two entries added to the &lt;code&gt;PATH&lt;/code&gt; environment variable:</source>
          <target state="translated">Microsoft Windows에서 Chef Infra Client에는 &lt;code&gt;PATH&lt;/code&gt; 환경 변수에 추가 된 두 개의 항목이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="368246ead035c4618565da9f8f51906ea1eecaca" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, both the &lt;code&gt;HUP&lt;/code&gt; and &lt;code&gt;QUIT&lt;/code&gt; signals are not supported.</source>
          <target state="translated">Microsoft Windows에서는 &lt;code&gt;HUP&lt;/code&gt; 및 &lt;code&gt;QUIT&lt;/code&gt; 신호가 모두 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8699dc42bdbf417f9c54a0873ac5bc6477a0f7b3" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, run Chef Infra Client periodically as a scheduled task. Scheduled tasks provides visibility, configurability, and reliability around log rotation and permissions. You can configure the Chef Infra Client to run as a scheduled task using the &lt;a href=&quot;../resources/chef_client_scheduled_task/index&quot;&gt;chef_client_scheduled_task&lt;/a&gt; resource.</source>
          <target state="translated">Microsoft Windows에서 Chef Infra Client를 예약 된 작업으로 주기적으로 실행합니다. 예약 된 작업은 로그 회전 및 권한에 대한 가시성, 구성 가능성 및 안정성을 제공합니다. &lt;a href=&quot;../resources/chef_client_scheduled_task/index&quot;&gt;chef_client_scheduled_task&lt;/a&gt; 리소스를 사용하여 예약 된 작업으로 실행되도록 Chef Infra Client를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3e5cb745762346338702046286d86f019bd21a29" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, running without elevated privileges (when they are necessary) is an issue that fails silently. It will appear that Chef Infra Client completed its run successfully, but the changes will not have been made. When this occurs, do one of the following to run Chef Infra Client as the administrator:</source>
          <target state="translated">Microsoft Windows에서 상승 된 권한없이 (필요한 경우) 실행하는 것은 자동으로 실패하는 문제입니다. Chef Infra Client가 성공적으로 실행을 완료 한 것으로 나타나지만 변경 사항은 적용되지 않습니다. 이 경우 다음 중 하나를 수행하여 Chef Infra Client를 관리자로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6e9caecdb53b9bcd54c10d8cb0cb846896b0b562" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, running without elevated privileges (when they are necessary) is an issue that fails silently. It will appear that the chef-client completed its run successfully, but the changes will not have been made. When this occurs, do one of the following to run the chef-client as the administrator:</source>
          <target state="translated">Microsoft Windows에서 상승 된 권한없이 (필요한 경우) 실행하는 것은 자동으로 실패하는 문제입니다. 요리사 클라이언트가 성공적으로 실행을 완료 한 것으로 보이지만 변경되지 않았습니다. 이 경우 다음 중 하나를 수행하여 chef-client를 관리자로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ba1cbe6472c844031b05008cff4d4d55fb3b8302" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, the chef-client must have two entries added to the &lt;code&gt;PATH&lt;/code&gt; environment variable:</source>
          <target state="translated">Microsoft Windows에서 chef-client는 &lt;code&gt;PATH&lt;/code&gt; 환경 변수에 두 개의 항목을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9796fd727d4772ea7c94baac4a97fd6100fc63d9" translate="yes" xml:space="preserve">
          <source>On RHEL and CentOS versions 7 and above, the FirewallD firewall is enabled by default. Issue the following command with root privileges to open ports 80 and 443:</source>
          <target state="translated">RHEL 및 CentOS 버전 7 이상에서는 FirewallD 방화벽이 기본적으로 활성화됩니다. 루트 권한으로 다음 명령을 실행하여 포트 80 및 443을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="33929f2fe4fa2f64b90825e51c3211492e728354" translate="yes" xml:space="preserve">
          <source>On UNIX and Linux-based machines: The second shell script executes the &lt;code&gt;chef-client&lt;/code&gt; binary with a set of initial settings stored within &lt;code&gt;first-boot.json&lt;/code&gt; on the node. &lt;code&gt;first-boot.json&lt;/code&gt; is generated from the workstation as part of the initial &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">UNIX 및 Linux 기반 컴퓨터 : 두 번째 셸 스크립트 는 노드의 &lt;code&gt;first-boot.json&lt;/code&gt; 에 저장된 초기 설정 집합을 사용 하여 &lt;code&gt;chef-client&lt;/code&gt; 바이너리를 실행 합니다. &lt;code&gt;first-boot.json&lt;/code&gt; 은 초기 &lt;code&gt;knife bootstrap&lt;/code&gt; 하위 명령의 일부로 워크 스테이션에서 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e4561268a52644ba58958ad7f7f749665c3a9ae3" translate="yes" xml:space="preserve">
          <source>On UNIX, Linux, and macOS systems, invoke the Chef Software Install script with:</source>
          <target state="translated">UNIX, Linux 및 macOS 시스템에서 다음을 사용하여 Chef 소프트웨어 설치 스크립트를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b1624e2497e194b004aeda82e1d91108dad27a89" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines, the default location for this file is &lt;code&gt;/etc/chef/client.rb&lt;/code&gt;; on Microsoft Windows machines, the default location for this file is &lt;code&gt;C:\chef\client.rb&lt;/code&gt;; use the &lt;code&gt;--config&lt;/code&gt; option from the command line to change this location</source>
          <target state="translated">UNIX 및 Linux 기반 시스템에서이 파일의 기본 위치는 &lt;code&gt;/etc/chef/client.rb&lt;/code&gt; 입니다 . Microsoft Windows 시스템에서이 파일의 기본 위치는 &lt;code&gt;C:\chef\client.rb&lt;/code&gt; . 사용 &lt;code&gt;--config&lt;/code&gt; 이 위치를 변경하려면 명령 줄에서 옵션을</target>
        </trans-unit>
        <trans-unit id="eb6a0417265c19a5d2c1acee0a15dd9cb31f22c0" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines: The &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand is issued from a workstation. The hostname, IP address, or FQDN of the target node is issued as part of this command. An SSH connection is established with the target node using port 22. A shell script is assembled using the chef-full.erb (the default bootstrap template), and is then executed on the target node.</source>
          <target state="translated">UNIX 및 Linux 기반 시스템에서 : &lt;code&gt;knife bootstrap&lt;/code&gt; 부속 명령은 워크 스테이션에서 발행됩니다. 대상 노드의 호스트 이름, IP 주소 또는 FQDN이이 명령의 일부로 발행됩니다. 포트 22를 사용하여 대상 노드와 SSH 연결이 설정됩니다. 쉘 스크립트는 chef-full.erb (기본 부트 스트랩 템플리트)를 사용하여 어셈블 된 후 대상 노드에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6a2383b62c6af52e0ad0e0ef081a386560b10341" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines: The second shell script executes the &lt;code&gt;chef-client&lt;/code&gt; binary with a set of initial settings stored within &lt;code&gt;first-boot.json&lt;/code&gt; on the node. &lt;code&gt;first-boot.json&lt;/code&gt; is generated from the workstation as part of the initial &lt;code&gt;knife bootstrap&lt;/code&gt; subcommand.</source>
          <target state="translated">UNIX 및 Linux 기반 시스템의 경우 : 두 번째 쉘 스크립트 는 노드의 &lt;code&gt;first-boot.json&lt;/code&gt; 에 저장된 초기 설정 세트로 &lt;code&gt;chef-client&lt;/code&gt; 바이너리를 실행 합니다. &lt;code&gt;first-boot.json&lt;/code&gt; 은 초기 &lt;code&gt;knife bootstrap&lt;/code&gt; 하위 명령의 일부로 워크 스테이션에서 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="17bfb76a09e1abe0b70bc0feb7ee29cddee8c0b6" translate="yes" xml:space="preserve">
          <source>On UNIX- and Linux-based machines: The shell script that is derived from the chef-full.erb bootstrap template will make a request to the Chef website to get the most recent version of a second shell script (&lt;code&gt;install.sh&lt;/code&gt;).</source>
          <target state="translated">UNIX 및 Linux 기반 시스템의 경우 : chef-full.erb 부트 스트랩 템플리트에서 파생 된 쉘 스크립트는 Chef 웹 사이트에 최신 버전의 두 번째 쉘 스크립트 ( &lt;code&gt;install.sh&lt;/code&gt; )를 요청합니다.</target>
        </trans-unit>
        <trans-unit id="313a881ed5c9336816a694719f12472724fc8ca5" translate="yes" xml:space="preserve">
          <source>On UNIX-based systems, the best way to manipulate environment keys is with the &lt;code&gt;ENV&lt;/code&gt; variable in Ruby; however, this approach does not have the same permanent effect as using the &lt;strong&gt;env&lt;/strong&gt; resource.</source>
          <target state="translated">UNIX 기반 시스템에서 환경 키를 조작하는 가장 좋은 방법 은 Ruby 의 &lt;code&gt;ENV&lt;/code&gt; 변수를 사용하는 것입니다. 그러나이 방법은 &lt;strong&gt;env&lt;/strong&gt; 리소스 를 사용하는 것과 같은 영구적 효과가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a423d7796b908d334076f96ee98b57c5f6c9b31a" translate="yes" xml:space="preserve">
          <source>On UNIX-based systems, the best way to manipulate environment keys is with the &lt;code&gt;ENV&lt;/code&gt; variable in Ruby; however, this approach does not have the same permanent effect as using the &lt;strong&gt;windows_env&lt;/strong&gt; resource.</source>
          <target state="translated">UNIX 기반 시스템에서 환경 키를 조작하는 가장 좋은 방법 은 Ruby 의 &lt;code&gt;ENV&lt;/code&gt; 변수를 사용하는 것입니다. 그러나이 접근 방식은 &lt;strong&gt;windows_env&lt;/strong&gt; 리소스 를 사용하는 것과 동일한 영구적 인 효과를 갖지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="80b5782beb3afc99aaf03fbe383eaec2e2a8f545" translate="yes" xml:space="preserve">
          <source>On Ubuntu systems, AppArmor is enabled in enforcing mode by default. Chef products do not have a profile available to run under AppArmor. In order for the Chef products to run, AppArmor must set to &lt;code&gt;Complaining&lt;/code&gt; mode or disabled.</source>
          <target state="translated">Ubuntu 시스템에서 AppArmor는 기본적으로 시행 모드에서 활성화됩니다. Chef 제품에는 AppArmor에서 실행할 수있는 프로파일이 없습니다. Chef 제품을 실행하려면 AppArmor가 &lt;code&gt;Complaining&lt;/code&gt; 모드로 설정하거나 비활성화 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="08103bc8083664f610de1cd76da40c7342e367bf" translate="yes" xml:space="preserve">
          <source>On Windows</source>
          <target state="translated">Windows에서</target>
        </trans-unit>
        <trans-unit id="37d286384ea06b3aaaa403407478d0d17af49890" translate="yes" xml:space="preserve">
          <source>On Windows machines (&lt;code&gt;guest&lt;/code&gt; role only)</source>
          <target state="translated">Windows 시스템에서 ( &lt;code&gt;guest&lt;/code&gt; 역할 만 해당)</target>
        </trans-unit>
        <trans-unit id="1d8b228e93cc81666483c059942bcbfc39957250" translate="yes" xml:space="preserve">
          <source>On Windows, only a &lt;code&gt;plan.ps1&lt;/code&gt; will be used and a &lt;code&gt;plan.sh&lt;/code&gt; will only be used on Linux or Linux kernel 2. So if your application requires different plans for Linux and Linux Kernel 2, even without hooks and configuration templates, you will need to use target folders for each platform.</source>
          <target state="translated">Windows에서는 &lt;code&gt;plan.ps1&lt;/code&gt; 만 사용되고 &lt;code&gt;plan.sh&lt;/code&gt; 는 Linux 또는 Linux 커널 2에서만 사용됩니다. 따라서 애플리케이션에 Linux 및 Linux Kernel 2에 대한 다른 계획이 필요한 경우 후크 및 구성 템플릿이 없어도 각 플랫폼에 대한 대상 폴더를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3bed653db44c32e14209c39a98129c8859615297" translate="yes" xml:space="preserve">
          <source>On Windows, you can run the Supervisor as a Windows Service. You can use the &lt;code&gt;windows-service&lt;/code&gt; Chef Habitat package to host the Supervisor inside the Windows Service Control Manager:</source>
          <target state="translated">Windows에서는 Supervisor를 Windows 서비스로 실행할 수 있습니다. &lt;code&gt;windows-service&lt;/code&gt; Chef Habitat 패키지를 사용하여 Windows Service Control Manager 내에서 Supervisor를 호스팅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="55b56364276b5f7e47e7f031287b139fc5b947d5" translate="yes" xml:space="preserve">
          <source>On Windows:</source>
          <target state="translated">Windows의 경우 :</target>
        </trans-unit>
        <trans-unit id="1deddebe1e4dcd7e9c3a1ac4afe641e901d81547" translate="yes" xml:space="preserve">
          <source>On a Chef Infra Server node run: &lt;code&gt;chef-server-ctl backup --config-only&lt;/code&gt;</source>
          <target state="translated">Chef Infra Server 노드에서 다음을 실행하십시오. &lt;code&gt;chef-server-ctl backup --config-only&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d948d467d022a43665282aa38ba3d5de33fa9aa" translate="yes" xml:space="preserve">
          <source>On a Windows 10 host, Windows containers will always run inside of Hyper-V isolation. Kernel sharing Windows Server containers are only available on Windows Server 2016 hosts. On Windows Server 2016, Windows Server containers are the default container type but you can force &lt;code&gt;docker run&lt;/code&gt; to use Hyper-V containers by setting the &lt;code&gt;--isolation&lt;/code&gt; argument to &lt;code&gt;hyperv&lt;/code&gt;.</source>
          <target state="translated">Windows 10 호스트에서 Windows 컨테이너는 항상 Hyper-V 격리 내에서 실행됩니다. 커널 공유 Windows Server 컨테이너는 Windows Server 2016 호스트에서만 사용할 수 있습니다. Windows Server 2016에서 Windows Server 컨테이너는 기본 컨테이너 유형이지만 &lt;code&gt;--isolation&lt;/code&gt; 인수를 &lt;code&gt;hyperv&lt;/code&gt; 로 설정하여 Docker 가 Hyper-V 컨테이너를 사용 하도록 강제 &lt;code&gt;docker run&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="849faa6623660e69ccbb69d2c7c6e6dfb3c6088f" translate="yes" xml:space="preserve">
          <source>On a follower chef-backend node, run &lt;code&gt;chef-backend-ctl backup&lt;/code&gt;</source>
          <target state="translated">팔로어 chef-backend 노드에서 &lt;code&gt;chef-backend-ctl backup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25ad4b38997d278134f70e33cebad00a1d4b8aa4" translate="yes" xml:space="preserve">
          <source>On a macOS, you may encounter an upload failure. To remediate this failure:</source>
          <target state="translated">macOS에서는 업로드 실패가 발생할 수 있습니다. 이 실패를 수정하려면 :</target>
        </trans-unit>
        <trans-unit id="1fe80ffc4b522274e0a2a7567acff1630c3db45e" translate="yes" xml:space="preserve">
          <source>On a management station:</source>
          <target state="translated">관리 스테이션에서 :</target>
        </trans-unit>
        <trans-unit id="e5d2ef1804f3c1de15580c04fd06e0405cd8eb4f" translate="yes" xml:space="preserve">
          <source>On a private Supermarket installation</source>
          <target state="translated">개인 슈퍼마켓 설치</target>
        </trans-unit>
        <trans-unit id="aac47195d356aebbe10115cb37011b85648b0bf9" translate="yes" xml:space="preserve">
          <source>On a single frontend server, create an administrator and an organization:</source>
          <target state="translated">단일 프런트 엔드 서버에서 관리자와 조직을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fa9462f9c31f5e28fd41415ae6c4ab08169bf736" translate="yes" xml:space="preserve">
          <source>On a system with Chef Infra Client installed, use Ruby to make an authenticated request to the Chef Infra Server:</source>
          <target state="translated">Chef Infra Client가 설치된 시스템에서 Ruby를 사용하여 Chef Infra Server에 인증 된 요청을합니다.</target>
        </trans-unit>
        <trans-unit id="3e1f150520161db2774bc1f4202cd6b8e9f83a63" translate="yes" xml:space="preserve">
          <source>On a system with the chef-client installed, use Ruby to make an authenticated request to the Chef server:</source>
          <target state="translated">chef-client가 설치된 시스템에서 Ruby를 사용하여 Chef 서버에 인증 된 요청을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="569740701eb08d7abffe2e0867a87c8080793946" translate="yes" xml:space="preserve">
          <source>On an affected node (as root):</source>
          <target state="translated">영향을받는 노드에서 (루트) :</target>
        </trans-unit>
        <trans-unit id="4481cab2b52de148719c9c15805d0da411f4976c" translate="yes" xml:space="preserve">
          <source>On an internet-connected host, download the Chef Automate command-line tool and use it to prepare an Airgap Installation Bundle.</source>
          <target state="translated">인터넷에 연결된 호스트에서 Chef Automate 명령 줄 도구를 다운로드하고이를 사용하여 Airgap 설치 번들을 준비합니다.</target>
        </trans-unit>
        <trans-unit id="fa34984dbaf59c2166c92c4c65dca53aa3939d8a" translate="yes" xml:space="preserve">
          <source>On an internet-connected host, follow the steps in &lt;a href=&quot;#create-an-airgap-installation-bundle&quot;&gt;Create an Airgap Installation Bundle&lt;/a&gt; to upgrade your Chef Automate command-line tool and prepare an Airgap Installation Bundle. Transfer the bundle and Chef Automate command-line tool to the airgapped host and run:</source>
          <target state="translated">인터넷에 연결된 호스트에서 &lt;a href=&quot;#create-an-airgap-installation-bundle&quot;&gt;Airgap 설치 번들 생성&lt;/a&gt; 의 단계에 따라 Chef Automate 명령 줄 도구를 업그레이드 하고 Airgap 설치 번들 을 준비합니다. 번들 및 Chef Automate 명령 줄 도구를 airgapped 호스트로 전송하고 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ec8cc465946ad1264a8a82bd3170f1fabd33303a" translate="yes" xml:space="preserve">
          <source>On any Chef Infra Server frontend nodes using the Chef Backend cluster upgraded in the previous steps, run:</source>
          <target state="translated">이전 단계에서 업그레이드 한 Chef 백엔드 클러스터를 사용하는 Chef Infra Server 프런트 엔드 노드에서 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ba5376db2de350388bae78372be473e55ed23343" translate="yes" xml:space="preserve">
          <source>On any node in the backend HA cluster, run the following command for each node in the frontend group:</source>
          <target state="translated">백엔드 HA 클러스터의 노드에서 프런트 엔드 그룹의 각 노드에 대해 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="9fdbe8608718cde868058787153b3387b70c1818" translate="yes" xml:space="preserve">
          <source>On back-end servers in a high availability topology, Keepalived is used by the clustering service to determine whether a service should be running. If the &lt;code&gt;status&lt;/code&gt; subcommand is run against any of these nodes, a few things change:</source>
          <target state="translated">고 가용성 토폴로지의 백엔드 서버에서 Keepalived는 클러스터링 서비스에서 서비스 실행 여부를 결정하는 데 사용됩니다. 는 IF &lt;code&gt;status&lt;/code&gt; 하위 명령이 노드의에 대해 실행, 몇 가지 변경 :</target>
        </trans-unit>
        <trans-unit id="cdea80b030a49c5b7b4e286c7c07762cb1523ac7" translate="yes" xml:space="preserve">
          <source>On certain platforms, and after a file has been moved into place, Chef Infra Client may modify file permissions to support features specific to those platforms. On platforms with SELinux enabled, Chef Infra Client will fix up the security contexts after a file has been moved into the correct location by running the &lt;code&gt;restorecon&lt;/code&gt; command. On the Microsoft Windows platform, Chef Infra Client will create files so that ACL inheritance works as expected.</source>
          <target state="translated">특정 플랫폼에서 그리고 파일이 제자리로 이동 된 후 Chef Infra Client는 해당 플랫폼에 특정한 기능을 지원하도록 파일 권한을 수정할 수 있습니다. SELinux가 활성화 된 플랫폼에서 Chef Infra Client는 &lt;code&gt;restorecon&lt;/code&gt; 명령 을 실행하여 파일이 올바른 위치로 이동 된 후 보안 컨텍스트를 수정합니다 . Microsoft Windows 플랫폼에서 Chef Infra Client는 ACL 상속이 예상대로 작동하도록 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="91c28b91c1eb2b868ebec6ab1f3d73fb9c6870b1" translate="yes" xml:space="preserve">
          <source>On certain platforms, and after a file has been moved into place, the chef-client may modify file permissions to support features specific to those platforms. On platforms with SELinux enabled, the chef-client will fix up the security contexts after a file has been moved into the correct location by running the &lt;code&gt;restorecon&lt;/code&gt; command. On the Microsoft Windows platform, the chef-client will create files so that ACL inheritance works as expected.</source>
          <target state="translated">특정 플랫폼에서 파일을 제자리로 이동 한 후 요리사 클라이언트는 해당 플랫폼에 특정한 기능을 지원하도록 파일 권한을 수정할 수 있습니다. SELinux가 활성화 된 플랫폼에서 chef-client는 &lt;code&gt;restorecon&lt;/code&gt; 명령 을 실행하여 파일이 올바른 위치로 이동 한 후 보안 컨텍스트를 수정합니다 . Microsoft Windows 플랫폼에서 chef-client는 ACL 상속이 예상대로 작동하도록 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="397b1d87a68ee499eb8d20604fd518f5065f9631" translate="yes" xml:space="preserve">
          <source>On each front end server in the Chef Infra Server configuration, run:</source>
          <target state="translated">Chef Infra Server 구성의 각 프런트 엔드 서버에서 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="da00d86a94d199982306c9dca6ede0247c835d7b" translate="yes" xml:space="preserve">
          <source>On each front end server in the Chef server configuration, run:</source>
          <target state="translated">Chef 서버 구성의 각 프런트 엔드 서버에서 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6a92e53cd0fa6d09afd995fe3de9d20d88ce5150" translate="yes" xml:space="preserve">
          <source>On each frontend machine, copy the generated &lt;code&gt;chef-server.rb&lt;/code&gt;.fqdn to &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;.</source>
          <target state="translated">각 프런트 엔드 머신에서 생성 된 &lt;code&gt;chef-server.rb&lt;/code&gt; .fqdn을 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; 에 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="a315c91c485a1c9c5da4799a92fc059add95a459" translate="yes" xml:space="preserve">
          <source>On each frontend machine, install the &lt;code&gt;chef-server-core&lt;/code&gt; package (version 12.4.0 or higher).</source>
          <target state="translated">각 프런트 엔드 컴퓨터에서 &lt;code&gt;chef-server-core&lt;/code&gt; 패키지 (버전 12.4.0 이상)를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="05b38ca8b622c1dcf6b0519b134c3fb1512e5e9b" translate="yes" xml:space="preserve">
          <source>On each frontend machine, with root permission, run the following command:</source>
          <target state="translated">각 프런트 엔드 컴퓨터에서 루트 권한으로 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f6f23a8e82ff5b901bd486744ba5aecb39b6a484" translate="yes" xml:space="preserve">
          <source>On each host, its own status is reported first, and then the status of its remote partner.</source>
          <target state="translated">각 호스트에서 자체 상태가 먼저보고 된 다음 원격 파트너의 상태가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6f607a238869efe39e4d13a27d7661059f0888" translate="yes" xml:space="preserve">
          <source>On each of the two new nodes, install &lt;code&gt;chef-backend-ctl&lt;/code&gt; and join to the cluster using:</source>
          <target state="translated">두 개의 새 노드 각각에 &lt;code&gt;chef-backend-ctl&lt;/code&gt; 을 설치 하고 다음을 사용하여 클러스터에 가입합니다.</target>
        </trans-unit>
        <trans-unit id="2c383f927bee884233d1cab2f6d2be11c1e4bc4c" translate="yes" xml:space="preserve">
          <source>On each workstation, this directory is the location into which SSL certificates are placed after they are downloaded from the Chef Infra Server using the &lt;code&gt;knife ssl fetch&lt;/code&gt; subcommand</source>
          <target state="translated">각 워크 스테이션에서이 디렉토리는 &lt;code&gt;knife ssl fetch&lt;/code&gt; 하위 명령을 사용하여 Chef Infra Server에서 다운로드 한 후 SSL 인증서가 배치되는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="a55e6f199c58d8301a6279e3c9a337d9f59d0f5d" translate="yes" xml:space="preserve">
          <source>On each workstation, this directory is the location into which SSL certificates are placed after they are downloaded from the Chef server using the &lt;code&gt;knife ssl fetch&lt;/code&gt; subcommand</source>
          <target state="translated">각 워크 스테이션에서이 디렉토리는 &lt;code&gt;knife ssl fetch&lt;/code&gt; 부속 명령을 사용하여 Chef 서버에서 SSL 인증서를 다운로드 한 후 SSL 인증서가있는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="20576a255bf401b4d71b701d4a198dc60a173a8a" translate="yes" xml:space="preserve">
          <source>On every node, this directory is the location into which SSL certificates are placed when a node has been bootstrapped with Chef Infra Client from a workstation</source>
          <target state="translated">모든 노드에서이 디렉토리는 노드가 워크 스테이션에서 Chef Infra Client로 부트 스트랩 될 때 SSL 인증서가 배치되는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="d6d942741d704a7c8e2208e372fd1156d9ed3167" translate="yes" xml:space="preserve">
          <source>On every node, this directory is the location into which SSL certificates are placed when a node has been bootstrapped with the chef-client from a workstation</source>
          <target state="translated">모든 노드에서이 디렉토리는 워크 스테이션에서 요리사 클라이언트로 노드를 부트 스트랩 할 때 SSL 인증서가 배치되는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="09ea2a45aa1b2d2c8f7529c5bb80efa5192d1ac5" translate="yes" xml:space="preserve">
          <source>On failover or failback, this field indicates whether connection drain will be honored. Setting this to true has the following effect: connections to the old active pool are not drained. Connections to the new active pool use the timeout of 10 min (currently fixed). Setting to false has the following effect: both old and new connections will have a drain timeout of 10 min. This can be set to true only if the protocol is TCP. The default is false.</source>
          <target state="translated">장애 조치 또는 장애 복구시이 필드는 연결 드레 이닝이 적용되는지 여부를 나타냅니다. 이를 true로 설정하면 다음과 같은 효과가 있습니다. 이전 활성 풀에 대한 연결이 드레 이닝되지 않습니다. 새 활성 풀에 대한 연결은 제한 시간 10 분을 사용합니다 (현재 고정). false로 설정하면 다음과 같은 효과가 있습니다. 이전 연결과 새 연결 모두 드레 이닝 제한 시간이 10 분입니다. 프로토콜이 TCP 인 경우에만 true로 설정할 수 있습니다. 기본값은 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="109975755c541ae687ae2fc1ac562b748c3edd2e" translate="yes" xml:space="preserve">
          <source>On macOS</source>
          <target state="translated">macOS에서</target>
        </trans-unit>
        <trans-unit id="d844bad2c4b7dd8decaca41491d3402a1a4db06f" translate="yes" xml:space="preserve">
          <source>On new Windows machines, PowerShell scripts will not work until an administrator runs the following command:</source>
          <target state="translated">새 Windows 컴퓨터에서 PowerShell 스크립트는 관리자가 다음 명령을 실행할 때까지 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="574c7dd5f67688d57fc8f150c35699097fc0ac34" translate="yes" xml:space="preserve">
          <source>On new Windows machines, commands cannot be appended to &lt;code&gt;$PROFILE&lt;/code&gt; if the folder does not exist, or if there is a new user profile. This will result in an error similar to the following:</source>
          <target state="translated">새 Windows 컴퓨터 에서 폴더가 없거나 새 사용자 프로필이있는 경우 &lt;code&gt;$PROFILE&lt;/code&gt; 명령을 추가 할 수 없습니다 . 이로 인해 다음과 유사한 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d155891143b7ee8fe710f79274cc3cf70b1f8002" translate="yes" xml:space="preserve">
          <source>On one frontend server, follow the &lt;a href=&quot;../upgrade_server/index#standalone&quot;&gt;standalone upgrade process&lt;/a&gt;.</source>
          <target state="translated">한 프런트 엔드 서버에서 &lt;a href=&quot;../upgrade_server/index#standalone&quot;&gt;독립 실행 형 업그레이드 프로세스를&lt;/a&gt; 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="94de556a0cff5b272dc7897bb35db07000e997a4" translate="yes" xml:space="preserve">
          <source>On some distributions you may need to install additional libraries. After you install the Chef Workstation package from the terminal, the post-install message will tell you which, if any, additional libraries are required to run the Chef Workstation App.</source>
          <target state="translated">일부 배포에서는 추가 라이브러리를 설치해야 할 수 있습니다. 터미널에서 Chef Workstation 패키지를 설치 한 후 설치 후 메시지는 Chef Workstation 앱을 실행하는 데 필요한 추가 라이브러리 (있는 경우)를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="c1e2d59aa18e6b5de9f099fd3974fb8890699eba" translate="yes" xml:space="preserve">
          <source>On some distributions you may need to install additional libraries. The post-install message shown when you install the Chef Workstation package from the terminal will tell you which &amp;ndash; if any &amp;ndash; additional libraries are required to run Chef Workstation App.</source>
          <target state="translated">일부 배포에서는 추가 라이브러리를 설치해야 할 수 있습니다. 터미널에서 Chef Workstation 패키지를 설치할 때 표시되는 설치 후 메시지는 Chef Workstation 앱을 실행하는 데 필요한 추가 라이브러리 (있는 경우)를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="875763cd2911268cacc6e247c29943f578ef925f" translate="yes" xml:space="preserve">
          <source>On targets that are using SystemV services, the existing run levels can also be checked:</source>
          <target state="translated">SystemV 서비스를 사용하는 대상에서 기존 실행 수준도 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="970b62aed96e7fcbd70747f466af5cb23755f5c1" translate="yes" xml:space="preserve">
          <source>On the &lt;strong&gt;Users&lt;/strong&gt; list page, select the user name; use the search filter in the upper right if needed.</source>
          <target state="translated">온 &lt;strong&gt;사용자&lt;/strong&gt; 목록 페이지에서 사용자 이름을 선택; 필요한 경우 오른쪽 상단의 검색 필터를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="732580d4246f832a47a64fd871c12d920fc846d8" translate="yes" xml:space="preserve">
          <source>On the Automate 2 server</source>
          <target state="translated">Automate 2 서버에서</target>
        </trans-unit>
        <trans-unit id="1beb460ccddbd23da25b5a3d58403da66be898b7" translate="yes" xml:space="preserve">
          <source>On the Chef Infra Server host:</source>
          <target state="translated">Chef Infra Server 호스트에서 :</target>
        </trans-unit>
        <trans-unit id="c0f7c8df0a8fb765a26629455ee267b7590d5c25" translate="yes" xml:space="preserve">
          <source>On the Chef Infra Server machine create the &lt;code&gt;ORGANIZATION-validator.pem&lt;/code&gt; from the command line using &lt;code&gt;chef-server-ctl&lt;/code&gt;. Run the following command:</source>
          <target state="translated">Chef Infra Server 컴퓨터 에서 &lt;code&gt;chef-server-ctl&lt;/code&gt; 을 사용하여 명령 줄에서 &lt;code&gt;ORGANIZATION-validator.pem&lt;/code&gt; 을 만듭니다 . 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="2c611ac4b08592923a77cbf1f11c82729cbc27ae" translate="yes" xml:space="preserve">
          <source>On the Chef Infra Server machine create the &lt;code&gt;USER.pem&lt;/code&gt; from the command line using &lt;code&gt;chef-server-ctl&lt;/code&gt;. Run the following command:</source>
          <target state="translated">Chef Infra Server 컴퓨터 에서 &lt;code&gt;chef-server-ctl&lt;/code&gt; 을 사용하여 명령 줄에서 &lt;code&gt;USER.pem&lt;/code&gt; 을 만듭니다 . 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="7501282f4a40c26c40638b1772a6d3980fca4002" translate="yes" xml:space="preserve">
          <source>On the Chef server machine create the ORGANIZATION-validator.pem from the command line using chef-server-ctl. Run the following command:</source>
          <target state="translated">Chef 서버 시스템에서 chef-server-ctl을 사용하여 명령 행에서 ORGANIZATION-validator.pem을 작성하십시오. 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="b1d1a7ae2081d556a1f21c006a85a4b3096c9241" translate="yes" xml:space="preserve">
          <source>On the Chef server machine create the USER.pem from the command line using chef-server-ctl. Run the following command:</source>
          <target state="translated">Chef 서버 시스템에서 chef-server-ctl을 사용하여 명령 행에서 USER.pem을 작성하십시오. 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6b23803eb76f39c0291569832f4d9123c381878b" translate="yes" xml:space="preserve">
          <source>On the Chef server, run:</source>
          <target state="translated">Chef 서버에서 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="047471c3ee14aef4c152333cb9da1e88dcc8058c" translate="yes" xml:space="preserve">
          <source>On the Permissions screen, choose Direct Attach. Select the AWS-managed IAM Profile named &amp;ldquo;ReadOnlyAccess.&amp;rdquo; If you wish to restrict the user further, you may do so; see individual Chef InSpec resources to identify which permissions are required.</source>
          <target state="translated">권한 화면에서 직접 연결을 선택합니다. &quot;ReadOnlyAccess&quot;라는 AWS 관리 형 IAM 프로필을 선택합니다. 사용자를 더 제한하려면 그렇게 할 수 있습니다. 필요한 권한을 식별하려면 개별 Chef InSpec 리소스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d51f54f44aafe928977a460c0e47264577d428c" translate="yes" xml:space="preserve">
          <source>On the Runner</source>
          <target state="translated">러너에서</target>
        </trans-unit>
        <trans-unit id="6135e64d97b823b56a7244f3a04f3be704d7cb6f" translate="yes" xml:space="preserve">
          <source>On the Slack page, select a channel or user for the notification. Slack will create the new webhook and then provide a webhook URL for you to copy. After entering a recipient, use the &lt;strong&gt;Add Incoming WebHooks Integration&lt;/strong&gt; button.</source>
          <target state="translated">Slack 페이지에서 알림을받을 채널 또는 사용자를 선택합니다. Slack은 새 웹훅을 생성 한 다음 복사 할 웹훅 URL을 제공합니다. 수신자를 입력 한 후 &lt;strong&gt;수신 WebHooks 통합 추가&lt;/strong&gt; 버튼을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e71352cffb0ae476e0543cb15b1904f7ebc5d70f" translate="yes" xml:space="preserve">
          <source>On the Windows platform, the &lt;code&gt;Get-NetAdapter&lt;/code&gt; cmdlet is associated with the &lt;code&gt;Get-NetAdapterBinding&lt;/code&gt; cmdlet and returns the &lt;code&gt;ComponentID ms_bridge&lt;/code&gt; value as a JSON object</source>
          <target state="translated">Windows 플랫폼에서 &lt;code&gt;Get-NetAdapter&lt;/code&gt; cmdlet은 &lt;code&gt;Get-NetAdapterBinding&lt;/code&gt; cmdlet과 연결되어 있고 &lt;code&gt;ComponentID ms_bridge&lt;/code&gt; 값을 JSON 개체로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6c00f082e8767d5911d986c2d39057f994921102" translate="yes" xml:space="preserve">
          <source>On the Windows platform, the &lt;code&gt;Get-NetAdapter&lt;/code&gt; cmdlet is used as source</source>
          <target state="translated">Windows 플랫폼에서 &lt;code&gt;Get-NetAdapter&lt;/code&gt; cmdlet은 원본으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0c6e4655cc83002cb5be70231ad4ea82c50f8d20" translate="yes" xml:space="preserve">
          <source>On the Workflow server, select &lt;strong&gt;Organizations&lt;/strong&gt;.</source>
          <target state="translated">워크 플로 서버에서 &lt;strong&gt;조직을&lt;/strong&gt; 선택 합니다.</target>
        </trans-unit>
        <trans-unit id="9b73c79ee302f34188368c4c562d2546bc2786ef" translate="yes" xml:space="preserve">
          <source>On the back-end node that is currently the backup server, it is normal to see only one running process: Keepalived</source>
          <target state="translated">현재 백업 서버 인 백엔드 노드에서 실행중인 프로세스가 하나만 표시되는 것이 일반적입니다. Keepalived</target>
        </trans-unit>
        <trans-unit id="5cf476b701a4fcc383b14881b2d4c613693ebf4a" translate="yes" xml:space="preserve">
          <source>On the back-end node that is currently the master server, it is normal to see all services running. It is also normal to see some services in a down state if the server, on reboot, did not attempt to start the services because Keepalived determines which services are restarted based on the state of the cluster</source>
          <target state="translated">현재 마스터 서버 인 백엔드 노드에서는 모든 서비스가 실행되는 것이 일반적입니다. Keepalived가 클러스터 상태에 따라 재시작 할 서비스를 판별하기 때문에 서버가 재부팅 할 때 서버가 서비스를 시작하지 않은 경우 일부 서비스가 작동 중지 된 상태로 표시되는 것도 정상입니다.</target>
        </trans-unit>
        <trans-unit id="055a58db2d221da1a4cda27382b28bf8c7bc5ada" translate="yes" xml:space="preserve">
          <source>On the command line, run &lt;code&gt;chef-automate external-cert show&lt;/code&gt;</source>
          <target state="translated">명령 줄에서 &lt;code&gt;chef-automate external-cert show&lt;/code&gt; 를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="92d67cd02ae7382189d9a5b01a22caa2eac612f1" translate="yes" xml:space="preserve">
          <source>On the first frontend node, assuming that the generated configuration was copied as detailed in Step 4:</source>
          <target state="translated">첫 번째 프런트 엔드 노드에서 생성 된 구성이 4 단계에 설명 된대로 복사되었다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="8a2ded272514681d0bb980b65946e71627f249e9" translate="yes" xml:space="preserve">
          <source>On the leader, run the following command to take the node down for the upgrade:</source>
          <target state="translated">리더에서 다음 명령을 실행하여 업그레이드를 위해 노드를 다운하십시오.</target>
        </trans-unit>
        <trans-unit id="8096151afc36ee2e91794eba1d1801cdb54ccba5" translate="yes" xml:space="preserve">
          <source>On the new frontend node run:</source>
          <target state="translated">새 프런트 엔드 노드에서 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="47464c9859b237aa4a5dbd23676fb6705fcb2d35" translate="yes" xml:space="preserve">
          <source>On the new frontend run:</source>
          <target state="translated">새 프런트 엔드에서 실행 :</target>
        </trans-unit>
        <trans-unit id="868f3ea02244507dbe6f964d8bb5a49de7776532" translate="yes" xml:space="preserve">
          <source>On the new frontend, &lt;strong&gt;as root&lt;/strong&gt; run:</source>
          <target state="translated">새 프런트 엔드에서 &lt;strong&gt;루트로&lt;/strong&gt; 실행합니다.</target>
        </trans-unit>
        <trans-unit id="36b278784d189f1994c9b6af7ff2d7b647cba715" translate="yes" xml:space="preserve">
          <source>On the primary Chef Automate server edit the &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; file to add the following:</source>
          <target state="translated">기본 Chef Automate 서버에서 &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; 파일을 편집 하여 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a7365ee45e89e70361122a9d67bad6f002d22c24" translate="yes" xml:space="preserve">
          <source>On the primary back end server, stop all services except Keepalived. With Chef server 12, the Keepalived service will not be stopped with the following command:</source>
          <target state="translated">기본 백엔드 서버에서 Keepalived를 제외한 모든 서비스를 중지하십시오. Chef 서버 12에서는 Keepalived 서비스가 다음 명령으로 중지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7d12ace2b8b23642af0f57de5701d8917d3ba456" translate="yes" xml:space="preserve">
          <source>On the primary backend server, define it as the primary shared device. For Red Hat and CentOS 6:</source>
          <target state="translated">기본 백엔드 서버에서 기본 공유 장치로 정의하십시오. Red Hat 및 CentOS 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="1891fe4f103048fbf7f2a583f13f651454df0b7d" translate="yes" xml:space="preserve">
          <source>On the primary backend server, mount the file system. For example, a file system named &lt;code&gt;ext4&lt;/code&gt;:</source>
          <target state="translated">기본 백엔드 서버에서 파일 시스템을 마운트하십시오. 예를 들어, 이름이 &lt;code&gt;ext4&lt;/code&gt; 인 파일 시스템 :</target>
        </trans-unit>
        <trans-unit id="77580bf1b306b71080ca688d566fb791807b4dda" translate="yes" xml:space="preserve">
          <source>On the restore host, download and unzip the Chef Automate command-line tool:</source>
          <target state="translated">복원 호스트에서 Chef Automate 명령 줄 도구를 다운로드하고 압축을 풉니 다.</target>
        </trans-unit>
        <trans-unit id="8621fee9d6e0a4fda48a49988b2f4ee3b66db994" translate="yes" xml:space="preserve">
          <source>On the secondary node, the status will look similar to the following:</source>
          <target state="translated">보조 노드에서 상태는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="98389e4cf5bc57c2296544f515c52337cf587947" translate="yes" xml:space="preserve">
          <source>On the standby server, create the &lt;code&gt;/etc/chef/trusted_certs&lt;/code&gt; directory:</source>
          <target state="translated">대기 서버에서 &lt;code&gt;/etc/chef/trusted_certs&lt;/code&gt; 디렉토리를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="826c582432b182fb30c0bccdba3ec9cf835e8dcc" translate="yes" xml:space="preserve">
          <source>On the standby server, create the directory &lt;code&gt;/opt/delivery/embedded/.ssh/authorized_keys&lt;/code&gt;:</source>
          <target state="translated">대기 서버에서 &lt;code&gt;/opt/delivery/embedded/.ssh/authorized_keys&lt;/code&gt; 디렉토리를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ee4e09eeb930c683ce202a1c7a0afdcd44953415" translate="yes" xml:space="preserve">
          <source>On the standby server, run the following command as the root user:</source>
          <target state="translated">대기 서버에서 루트 사용자로 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="95b656b0d78be7e37ccfb709738d5a720d1b2539" translate="yes" xml:space="preserve">
          <source>On the surviving node, run the following command:</source>
          <target state="translated">남아있는 노드에서 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="4ed297e2dfa29afe293227d12cd27edc457be4f5" translate="yes" xml:space="preserve">
          <source>On the workstation:</source>
          <target state="translated">워크 스테이션에서 :</target>
        </trans-unit>
        <trans-unit id="0b0729479b3001f4ae9dd73c24561d084d32b741" translate="yes" xml:space="preserve">
          <source>On versions 12.13 and prior, simply add the &lt;code&gt;'root_url'&lt;/code&gt; and &lt;code&gt;token&lt;/code&gt; values in &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;:</source>
          <target state="translated">12.13 이전 버전에서는 &lt;code&gt;'root_url'&lt;/code&gt; 에 'root_url' 및 &lt;code&gt;token&lt;/code&gt; 값을 추가하기 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a16b15e139aeebbe89784536e02a821d6de4a2a0" translate="yes" xml:space="preserve">
          <source>On windows a User&amp;rsquo;s environment variable may obscure the local machine (system) environment variable. The correct environment variable may be tested as follows:</source>
          <target state="translated">Windows에서 사용자의 환경 변수는 로컬 시스템 (시스템) 환경 변수를 가릴 수 있습니다. 올바른 환경 변수는 다음과 같이 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="622aa75c8189f16e3292fd27dde23db469c057eb" translate="yes" xml:space="preserve">
          <source>On your Chef Infra Server, if the &lt;code&gt;chef-server.rb&lt;/code&gt; file does not exist, create it.</source>
          <target state="translated">Chef Infra Server에서 &lt;code&gt;chef-server.rb&lt;/code&gt; 파일이 존재하지 않으면 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="1b2a935ca8eeb832f05fd7da89d68697136594f2" translate="yes" xml:space="preserve">
          <source>On your Chef server, if the &lt;code&gt;chef-server.rb&lt;/code&gt; file does not exist, create it.</source>
          <target state="translated">Chef 서버에 &lt;code&gt;chef-server.rb&lt;/code&gt; 파일이 없으면 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="dc88a5417aa52fa635ec3f0a0d01675d90d034d0" translate="yes" xml:space="preserve">
          <source>On your workstation, generate a new cookbook using the &lt;code&gt;chef&lt;/code&gt; command line interface:</source>
          <target state="translated">워크 스테이션에서 &lt;code&gt;chef&lt;/code&gt; 명령 줄 인터페이스를 사용하여 새 요리 책을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="317bc2b67c6e502682df4197ff58f92a9c884d33" translate="yes" xml:space="preserve">
          <source>Onboard Users</source>
          <target state="translated">온보드 사용자</target>
        </trans-unit>
        <trans-unit id="67751fe01dbf4d949e5469ad166c8c38844bf7b7" translate="yes" xml:space="preserve">
          <source>Onboarding users to a project is different depending on whether you have integrated with GitHub or not.</source>
          <target state="translated">사용자를 프로젝트에 온 보딩하는 것은 GitHub와 통합했는지 여부에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9fcd3d4a5d3fc9abacab751f3a01ded43fbfd07a" translate="yes" xml:space="preserve">
          <source>Once Chef Habitat has been installed, the &lt;code&gt;hab&lt;/code&gt; CLI makes it easy to get your workstation configured by guiding through the setup process. To set up your workstation, run &lt;code&gt;hab cli setup&lt;/code&gt; and follow the instructions.</source>
          <target state="translated">Chef Habitat이 설치되면 &lt;code&gt;hab&lt;/code&gt; CLI를 사용하면 설정 프로세스를 안내하여 워크 스테이션을 쉽게 구성 할 수 있습니다. 워크 스테이션을 설정하려면 &lt;code&gt;hab cli setup&lt;/code&gt; 을 실행 하고 지침을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="4425f2a669fee0404b6ad650f8d136c6c81e3a58" translate="yes" xml:space="preserve">
          <source>Once Chef InSpec is installed, run &lt;code&gt;inspec version&lt;/code&gt; to verify that the installation was successful.</source>
          <target state="translated">Chef InSpec이 설치되면 &lt;code&gt;inspec version&lt;/code&gt; 을 실행 하여 설치가 성공했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="78f2878db2976e4e178bf1a4211510d4594f60aa" translate="yes" xml:space="preserve">
          <source>Once Docker images are pushed to ECR, they may be run on Amazon&amp;rsquo;s ECS within a &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html&quot;&gt;Task Definition&lt;/a&gt; which may be expressed as a &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cmd-ecs-cli-compose.html&quot;&gt;Docker Compose file&lt;/a&gt;. Here is an example of a Tomcat application using a Mongo database demonstrating using Chef Habitat-managed containers:</source>
          <target state="translated">Docker 이미지가 ECR로 푸시되면 Docker &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cmd-ecs-cli-compose.html&quot;&gt;Compose 파일&lt;/a&gt; 로 표현 될 수 있는 &lt;a href=&quot;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html&quot;&gt;작업 정의&lt;/a&gt; 내 Amazon의 ECS에서 실행될 수 있습니다 . 다음은 Chef Habitat 관리 컨테이너 사용을 보여주는 Mongo 데이터베이스를 사용하는 Tomcat 애플리케이션의 예입니다.</target>
        </trans-unit>
        <trans-unit id="c83a40406b7b80d85530501e173461862426314a" translate="yes" xml:space="preserve">
          <source>Once Workflow is set up, you will have a usable &lt;strong&gt;LDAP&lt;/strong&gt; option in the Workflow &lt;strong&gt;Users&lt;/strong&gt; page that allows you to find users through your LDAP database.</source>
          <target state="translated">워크 플로가 설정되면 워크 플로 &lt;strong&gt;사용자&lt;/strong&gt; 페이지에 LDAP 데이터베이스를 통해 사용자를 찾을 수 있는 사용 가능한 &lt;strong&gt;LDAP&lt;/strong&gt; 옵션이 있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e71f809ac2af23b5542584fef416ffd3f656e6dd" translate="yes" xml:space="preserve">
          <source>Once a cookbook version is frozen, only by using the &lt;code&gt;--force&lt;/code&gt; option can an update be made. For example:</source>
          <target state="translated">요리 책 버전이 고정되면 &lt;code&gt;--force&lt;/code&gt; 옵션을 사용해야 만 업데이트 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c53e951342a4c42ee41298a40e9d964982a557d5" translate="yes" xml:space="preserve">
          <source>Once a project is created, you will want to add users to that project so that they can submit changes and collaborate via the Chef Automate shared workflow using GitHub.</source>
          <target state="translated">프로젝트가 생성되면 GitHub를 사용하여 Chef Automate 공유 워크 플로를 통해 변경 사항을 제출하고 협업 할 수 있도록 해당 프로젝트에 사용자를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b5880abb042777415264de426871a3ea0b3c80c" translate="yes" xml:space="preserve">
          <source>Once a project is created, you will want to add users to that project so that they can submit changes and collaborate via the Chef Automate shared workflow. These procedures apply to Chef Automate deployments that are using the internal Chef Automate git capabilities and are not integrated to GitHub Enterprise or &lt;a href=&quot;https://github.com/&quot;&gt;GitHub.com&lt;/a&gt;.</source>
          <target state="translated">프로젝트가 생성되면 해당 프로젝트에 사용자를 추가하여 Chef Automate 공유 워크 플로를 통해 변경 사항을 제출하고 공동 작업 할 수 있습니다. 이러한 절차는 내부 Chef Automate git 기능을 사용하고 GitHub Enterprise 또는 &lt;a href=&quot;https://github.com/&quot;&gt;GitHub.com에&lt;/a&gt; 통합되지 않은 Chef Automate 배포에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b1cbe26cffc78310e1e08135adc1f95239292968" translate="yes" xml:space="preserve">
          <source>Once a user directory entry has been retrieved, the password can be verified, and the group query can be constructed from it:</source>
          <target state="translated">사용자 디렉터리 항목이 검색되면 암호를 확인할 수 있으며 여기에서 그룹 쿼리를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38a58c10e7c743b48e41286ffafee1df7f1b86ba" translate="yes" xml:space="preserve">
          <source>Once an SMTP server is configured for Workflow, users that belong to that enterprise may subscribe to notifications that are sent from any project that exists in the same enterprise.</source>
          <target state="translated">워크 플로에 대해 SMTP 서버가 구성되면 해당 엔터프라이즈에 속한 사용자는 동일한 엔터프라이즈에있는 모든 프로젝트에서 보내는 알림을 구독 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d325d2ec5c2400c3fe6d5dedaf7ded3e7f65c27c" translate="yes" xml:space="preserve">
          <source>Once an environment exists on the Chef Infra Server, a node can be associated with that environment using the &lt;code&gt;chef_environment&lt;/code&gt; method.</source>
          <target state="translated">Chef Infra Server에 환경이 존재하면 &lt;code&gt;chef_environment&lt;/code&gt; 메소드를 사용하여 노드를 해당 환경과 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5cd6e5d05f9032315771b40d7081e31104c17c29" translate="yes" xml:space="preserve">
          <source>Once built, the custom resource may be used in a recipe just like the any of the resources that are built into Chef. The resource gets its name from the cookbook and from the file name in the &lt;code&gt;/resources&lt;/code&gt; directory, with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;exampleco&lt;/code&gt; with a custom resource named &lt;code&gt;site.rb&lt;/code&gt; is used in a recipe like this:</source>
          <target state="translated">일단 구축되면, 커스텀 리소스는 Chef에 내장 된 모든 리소스와 마찬가지로 레시피에 사용될 수 있습니다. 리소스는 요리 책과 &lt;code&gt;/resources&lt;/code&gt; 디렉토리 의 파일 이름에서 밑줄 ( &lt;code&gt;_&lt;/code&gt; )로 구분하여 이름을 가져옵니다 . 예를 들어, &lt;code&gt;site.rb&lt;/code&gt; 라는 사용자 정의 자원이있는 &lt;code&gt;exampleco&lt;/code&gt; 라는 요리 책 은 다음과 같은 레시피에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7fa1afcefc50b066dd36fca5bc02ff218f3d4280" translate="yes" xml:space="preserve">
          <source>Once built, the custom resource may be used in a recipe just like the any of the resources that are built into Chef. The resource gets its name from the cookbook and from the file name in the &lt;code&gt;/resources&lt;/code&gt; directory, with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;host&lt;/code&gt; with a custom resource in the &lt;code&gt;/resources&lt;/code&gt; directory named &lt;code&gt;porter.rb&lt;/code&gt;. Use it in a recipe like this:</source>
          <target state="translated">일단 구축되면, 커스텀 리소스는 Chef에 내장 된 모든 리소스와 마찬가지로 레시피에 사용될 수 있습니다. 리소스는 요리 책과 &lt;code&gt;/resources&lt;/code&gt; 디렉토리 의 파일 이름에서 밑줄 ( &lt;code&gt;_&lt;/code&gt; )로 구분하여 이름을 가져옵니다 . 예를 들어, &lt;code&gt;/resources&lt;/code&gt; 디렉토리에 &lt;code&gt;porter.rb&lt;/code&gt; 라는 사용자 정의 자원이있는 이름이 &lt;code&gt;host&lt;/code&gt; 인 요리 책 . 다음과 같은 레시피에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="71b07f9f3aa3c33d8845bd0aa1b56e87097c2f0e" translate="yes" xml:space="preserve">
          <source>Once configured, you can get the &lt;code&gt;chef_oauth2_app_id&lt;/code&gt; and &lt;code&gt;chef_oauth2_secret&lt;/code&gt; values from your Chef Infra Server within &lt;code&gt;/etc/opscode/oc-id-applications/supermarket.json&lt;/code&gt;:</source>
          <target state="translated">일단 구성되면, 당신은 얻을 수 &lt;code&gt;chef_oauth2_app_id&lt;/code&gt; 및 &lt;code&gt;chef_oauth2_secret&lt;/code&gt; 내에 요리사 인프라 서버의 값 &lt;code&gt;/etc/opscode/oc-id-applications/supermarket.json&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="0b2bc041430300e402b91be0e36b32f16ccdd5a4" translate="yes" xml:space="preserve">
          <source>Once created, an environment can be managed in several ways:</source>
          <target state="translated">생성 된 환경은 여러 가지 방법으로 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="a084482aaa019738418297824ee1599fafdff0ab" translate="yes" xml:space="preserve">
          <source>Once declared, a template can then use the helper methods to build a file. For example:</source>
          <target state="translated">선언 된 템플릿은 도우미 메소드를 사용하여 파일을 빌드 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd341456c0b5d409866a5fbb5ecfa9a68436d52a" translate="yes" xml:space="preserve">
          <source>Once defined in the &lt;code&gt;inspec.yml&lt;/code&gt;, controls from the included profiles can be used! Let&amp;rsquo;s look at some examples.</source>
          <target state="translated">&lt;code&gt;inspec.yml&lt;/code&gt; 에 정의되면 포함 된 프로필의 컨트롤을 사용할 수 있습니다! 몇 가지 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="81dc498d34423b2c8d673876d9bcd83b480d09c5" translate="yes" xml:space="preserve">
          <source>Once in chef-shell, commands can be run against objects as follows:</source>
          <target state="translated">chef-shell에서 명령은 다음과 같이 개체에 대해 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="531bce270c782df6636dab4fb0f8c9af22eb6a6f" translate="yes" xml:space="preserve">
          <source>Once inside the shell your resource will be available:</source>
          <target state="translated">셸 내부에서 리소스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d5736e70259cbbc001d84e697170cd8c0f5d30a" translate="yes" xml:space="preserve">
          <source>Once rules have been successfully applied, the banner will be dismissed until the next time there are &lt;em&gt;pending edits&lt;/em&gt; to any project.</source>
          <target state="translated">규칙이 성공적으로 적용되면 다음에 프로젝트에 &lt;em&gt;보류중인 편집&lt;/em&gt; 이있을 때까지 배너가 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="3179c63adb89a23df240dd53ad4406ab91693023" translate="yes" xml:space="preserve">
          <source>Once the backup has completed, initiate the migration process. If your host is internet-connected, run the command:</source>
          <target state="translated">백업이 완료되면 마이그레이션 프로세스를 시작합니다. 호스트가 인터넷에 연결되어 있으면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="aa1c002654d608703e5346f1a81cdec3e9463a68" translate="yes" xml:space="preserve">
          <source>Once the cookbook is available in Chef Infra Server, you will need to add the &lt;code&gt;audit::default&lt;/code&gt; recipe to the run-list of each node. Compliance profiles are added using the &lt;code&gt;node['audit']['profiles']&lt;/code&gt; attribute. A complete list of the configurations is documented on GitHub in the &lt;a href=&quot;https://github.com/chef-cookbooks/audit/blob/master/README.md&quot;&gt;Audit Cookbook Repository&lt;/a&gt;.</source>
          <target state="translated">Chef Infra Server에서 쿡북을 사용할 수있게되면 &lt;code&gt;audit::default&lt;/code&gt; 레시피를 각 노드의 실행 목록에 추가해야 합니다. 준수 프로필은 &lt;code&gt;node['audit']['profiles']&lt;/code&gt; 속성을 사용하여 추가됩니다 . 전체 구성 목록은 &lt;a href=&quot;https://github.com/chef-cookbooks/audit/blob/master/README.md&quot;&gt;Audit Cookbook Repository의&lt;/a&gt; GitHub에 문서화되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6524390af8b9ec8935716a1811c03f18d8e4b6e4" translate="yes" xml:space="preserve">
          <source>Once the instance is running, upgrade the installed packages:</source>
          <target state="translated">인스턴스가 실행되면 설치된 패키지를 업그레이드합니다.</target>
        </trans-unit>
        <trans-unit id="f1cf3799a7044d1c930fd1c3d98537f9c70388c7" translate="yes" xml:space="preserve">
          <source>Once the new host is identified and the DRBD devices on that host are ready, bring up DRBD and get it talking to the secondary back-end server. This secondary server should not want to be the primary server; it should be waiting for the old primary server to return. Start up DRBD on the new host and verify that it is listening on the correct port and that the status in &lt;code&gt;/proc/drbd&lt;/code&gt; is reporting that the host is up, but in the &lt;code&gt;WFConnect: waiting for connection&lt;/code&gt; state.</source>
          <target state="translated">새 호스트가 식별되고 해당 호스트의 DRBD 장치가 준비되면 DRBD를 불러 와서 보조 백엔드 서버와 통신하십시오. 이 보조 서버는 기본 서버가되고 싶지 않아야합니다. 이전 기본 서버가 반환 될 때까지 기다려야합니다. 새 호스트에서 DRBD를 시작하고 올바른 포트에서 수신 대기 &lt;code&gt;/proc/drbd&lt;/code&gt; 의 상태가 호스트가 작동 중이지만 &lt;code&gt;WFConnect: waiting for connection&lt;/code&gt; 상태 임을보고하고 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="46554affc8defb28dd62a8db92aba1950246c5dd" translate="yes" xml:space="preserve">
          <source>Once the repository is successfully cloned, move into the &lt;code&gt;on-prem-builder&lt;/code&gt; repository:</source>
          <target state="translated">저장소가 성공적으로 복제되면 &lt;code&gt;on-prem-builder&lt;/code&gt; 저장소 로 이동 합니다.</target>
        </trans-unit>
        <trans-unit id="97da81331eeed4075c83fe3a8e68845e81ba0e2f" translate="yes" xml:space="preserve">
          <source>Once the root cause of the service-level problems has been identified and solved, the failed node should be able to rejoin the cluster.</source>
          <target state="translated">서비스 수준 문제의 근본 원인을 확인하고 해결하면 실패한 노드가 클러스터에 다시 참가할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8f397ea01a8fa94d7334aaa141e1b6ef305e2c12" translate="yes" xml:space="preserve">
          <source>Once the set has finished building, we are going to use the newly built Studio immediately and move the artifacts to the side for more use:</source>
          <target state="translated">세트 빌드가 완료되면 새로 빌드 된 Studio를 즉시 사용하고 더 많은 사용을 위해 아티팩트를 측면으로 옮길 것입니다.</target>
        </trans-unit>
        <trans-unit id="fe1364a39f5f010fbbe58a20ff0a87a77b4493ad" translate="yes" xml:space="preserve">
          <source>Once the test is successful, select &lt;strong&gt;Create Data Feed&lt;/strong&gt; to save your Data Feed configuration</source>
          <target state="translated">테스트가 성공하면 &lt;strong&gt;데이터 피드 만들기를&lt;/strong&gt; 선택 하여 데이터 피드 구성을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="4aaa8bb8bcc2fc0c321cf0017686cc8e7e10b315" translate="yes" xml:space="preserve">
          <source>Once the update leader finds a new version, it will update and wait until all other alive members in the service group have also been updated before once again attempting to find a newer version of software to update to. Updates will happen more or less one at a time until completion with the exception of a new node being introduced into the service group during the middle of an update.</source>
          <target state="translated">업데이트 리더가 새 버전을 찾으면 업데이트 할 소프트웨어의 새 버전을 다시 찾기 전에 서비스 그룹의 다른 모든 활성 구성원도 업데이트 될 때까지 업데이트하고 기다립니다. 업데이트 중간에 서비스 그룹에 새 노드가 도입되는 경우를 제외하고는 완료 될 때까지 한 번에 하나씩 업데이트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="af2ce60843940d27d9163942fada7d389fdc2cd5" translate="yes" xml:space="preserve">
          <source>Once the updated file has been copied to each of the remaining frontends, perform the &lt;a href=&quot;../upgrade_server/index#standalone&quot;&gt;standalone upgrade process&lt;/a&gt; on each of the frontend servers.</source>
          <target state="translated">업데이트 된 파일이 나머지 각 프런트 엔드에 복사되면 각 프런트 엔드 서버 에서 &lt;a href=&quot;../upgrade_server/index#standalone&quot;&gt;독립 실행 형 업그레이드 프로세스&lt;/a&gt; 를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="2a84ac08096a622de66d7d36542a6dd320edf7b9" translate="yes" xml:space="preserve">
          <source>Once the user has provided a username and password at the sign in screen, Chef Automate goes through a sequence of operations to complete the sign in:</source>
          <target state="translated">사용자가 로그인 화면에서 사용자 이름과 비밀번호를 제공하면 Chef Automate는 일련의 작업을 거쳐 로그인을 완료합니다.</target>
        </trans-unit>
        <trans-unit id="64fc9dc2513d0e9f1dcaeac56754ad5d3c67a14c" translate="yes" xml:space="preserve">
          <source>Once the workstation machine is configured, it can be used to install Chef Infra Client on one (or more) nodes across the organization using a knife bootstrap operation. The &lt;code&gt;knife bootstrap&lt;/code&gt; command is used to SSH into the target machine, and then do what is needed to allow Chef Infra Client to run on the node. It will install the Chef Infra Client executable (if necessary), generate keys, and register the node with the Chef Infra Server. The bootstrap operation requires the IP address or FQDN of the target system, the SSH credentials (username, password or identity file) for an account that has root access to the node, and (if the operating system is not Ubuntu, which is the default distribution used by &lt;code&gt;knife bootstrap&lt;/code&gt;) the operating system running on the target system.</source>
          <target state="translated">워크 스테이션 시스템이 구성되면 나이프 부트 스트랩 작업을 사용하여 조직 전체의 하나 이상의 노드에 Chef Infra Client를 설치하는 데 사용할 수 있습니다. &lt;code&gt;knife bootstrap&lt;/code&gt; 명령은 대상 컴퓨터에 SSH를 사용하고 요리사 인프라 클라이언트는 노드에서 실행할 수 있도록 필요한 일을한다. Chef Infra Client 실행 파일 (필요한 경우)을 설치하고 키를 생성하며 Chef Infra Server에 노드를 등록합니다. 부트 스트랩 작업에는 대상 시스템의 IP 주소 또는 FQDN, 노드에 대한 루트 액세스 권한이있는 계정의 SSH 자격 증명 (사용자 이름, 암호 또는 ID 파일) 및 (운영 체제가 Ubuntu가 아닌 경우 (기본값) &lt;code&gt;knife bootstrap&lt;/code&gt; 사용하는 배포 ) 대상 시스템에서 실행되는 운영 체제.</target>
        </trans-unit>
        <trans-unit id="9def529eff21beaa53f0aa595e1a8757e22767a5" translate="yes" xml:space="preserve">
          <source>Once the workstation machine is configured, it can be used to install the chef-client on one (or more) nodes across the organization using a knife bootstrap operation. The &lt;code&gt;knife bootstrap&lt;/code&gt; command is used to SSH into the target machine, and then do what is needed to allow the chef-client to run on the node. It will install the chef-client executable (if necessary), generate keys, and register the node with the Chef server. The bootstrap operation requires the IP address or FQDN of the target system, the SSH credentials (username, password or identity file) for an account that has root access to the node, and (if the operating system is not Ubuntu, which is the default distribution used by &lt;code&gt;knife bootstrap&lt;/code&gt;) the operating system running on the target system.</source>
          <target state="translated">워크 스테이션 머신이 구성되면 나이프 부트 스트랩 조작을 사용하여 조직의 하나 이상의 노드에 chef-client를 설치하는 데 사용할 수 있습니다. &lt;code&gt;knife bootstrap&lt;/code&gt; 명령은 대상 컴퓨터에 SSH를 사용하고 요리사 - 클라이언트가 노드에서 실행할 수 있도록 필요한 일을한다. chef-client 실행 파일을 설치하고 (필요한 경우) 키를 생성하고 Chef 서버에 노드를 등록합니다. 부트 스트랩 조작에는 대상 시스템의 IP 주소 또는 FQDN, 노드에 대한 루트 액세스 권한이있는 계정의 SSH 신임 정보 (사용자 이름, 비밀번호 또는 ID 파일) 및 운영 체제가 Ubuntu가 아닌 경우 (기본값) &lt;code&gt;knife bootstrap&lt;/code&gt; 의해 사용되는 배포 ) 대상 시스템에서 실행중인 운영 체제.</target>
        </trans-unit>
        <trans-unit id="00fc186d2f7544e60fcf8412021cffa8938c5cb2" translate="yes" xml:space="preserve">
          <source>Once written, a custom resource may be used in a recipe just like any resource that is built into Chef Infra. A custom resource gets its name from the cookbook and the name of its file in the &lt;code&gt;/resources&lt;/code&gt; directory with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;host&lt;/code&gt; with a custom resource file named &lt;code&gt;porter.rb&lt;/code&gt; in the &lt;code&gt;/resources&lt;/code&gt; directory would be called &lt;code&gt;host_porter&lt;/code&gt;. Use it in a recipe like this:</source>
          <target state="translated">작성된 후에는 Chef Infra에 내장 된 모든 리소스와 마찬가지로 레시피에서 사용자 지정 리소스를 사용할 수 있습니다. 사용자 지정 리소스는 쿡북에서 이름을 가져오고 &lt;code&gt;/resources&lt;/code&gt; 디렉터리 에있는 파일 이름을 밑줄 ( &lt;code&gt;_&lt;/code&gt; )로 구분하여 가져 옵니다 . 예를 들어 &lt;code&gt;/resources&lt;/code&gt; 디렉토리 에있는 &lt;code&gt;porter.rb&lt;/code&gt; 라는 사용자 지정 리소스 파일이있는 &lt;code&gt;host&lt;/code&gt; 라는 요리 책 은 &lt;code&gt;host_porter&lt;/code&gt; 라고 합니다 . 다음과 같은 레시피에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d86e46ecc3070c7099f6c646bdc481609a70c230" translate="yes" xml:space="preserve">
          <source>Once written, the custom resource may be used in a recipe just like any of the resources that are built into Chef Infra Client. The resource gets its name from the cookbook and from the file name in the &lt;code&gt;/resources&lt;/code&gt; directory, with an underscore (&lt;code&gt;_&lt;/code&gt;) separating them. For example, a cookbook named &lt;code&gt;exampleco&lt;/code&gt; with a custom resource named &lt;code&gt;site.rb&lt;/code&gt; is used in a recipe like this:</source>
          <target state="translated">작성된 후에는 Chef Infra Client에 내장 된 모든 리소스와 마찬가지로 사용자 지정 리소스를 레시피에서 사용할 수 있습니다. 리소스는 요리 책과 &lt;code&gt;/resources&lt;/code&gt; 디렉토리 의 파일 이름에서 이름을 가져 오며 밑줄 ( &lt;code&gt;_&lt;/code&gt; )로 구분합니다. 예를 들어, &lt;code&gt;site.rb&lt;/code&gt; 라는 사용자 지정 리소스가있는 &lt;code&gt;exampleco&lt;/code&gt; 라는 요리 책 은 다음과 같은 레시피에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dec25149de2bcb9314f1409e852310e887e9948b" translate="yes" xml:space="preserve">
          <source>Once you are done writing your plan, use the studio to &lt;a href=&quot;../pkg_build/index&quot;&gt;build your package&lt;/a&gt;.</source>
          <target state="translated">계획 작성을 마치면 스튜디오를 &lt;a href=&quot;../pkg_build/index&quot;&gt;사용하여 패키지&lt;/a&gt; 를 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="85aa97cc8ca7c6aebabf39bda163310eb4089931" translate="yes" xml:space="preserve">
          <source>Once you are familiar with Test Kitchen, you can perform all of the steps at once, including cleanup, with:</source>
          <target state="translated">Test Kitchen에 익숙해지면 정리를 포함한 모든 단계를 한 번에 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b7cd121b7bc3a7fd1a47b3a0bd52a929111a2ba" translate="yes" xml:space="preserve">
          <source>Once you are signed in to the Chef Habitat Builder UI, select the &lt;strong&gt;New Origin&lt;/strong&gt; button and enter &lt;code&gt;core&lt;/code&gt; as the name for the origin.</source>
          <target state="translated">Chef Habitat Builder UI에 로그인 한 후 &lt;strong&gt;새 오리진&lt;/strong&gt; 버튼을 선택하고 &lt;strong&gt;오리진&lt;/strong&gt; 이름으로 &lt;code&gt;core&lt;/code&gt; 를 입력 합니다.</target>
        </trans-unit>
        <trans-unit id="4be436de018b2ed2454627920dc39505d1c549ac" translate="yes" xml:space="preserve">
          <source>Once you correct and save the FQDN, run</source>
          <target state="translated">FQDN을 수정하고 저장했으면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="51873aef602253604235e1430043251a469dfefa" translate="yes" xml:space="preserve">
          <source>Once you define your set of projects with their contained ingest rules and conditions, use the &lt;strong&gt;Update Projects&lt;/strong&gt; button on the bottom of any page to apply those definitions.</source>
          <target state="translated">포함 된 수집 규칙 및 조건으로 프로젝트 세트를 정의한 후 페이지 하단의 &lt;strong&gt;프로젝트 업데이트&lt;/strong&gt; 버튼을 사용하여 해당 정의를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="5fc7af366e35436ebcdc2b0a753ff2d34b5fd00f" translate="yes" xml:space="preserve">
          <source>Once you downloaded the latest &lt;a href=&quot;https://downloads.chef.io/inspec&quot;&gt;Chef InSpec package&lt;/a&gt; relevant to your Microsoft version, double-click the &lt;code&gt;.msi&lt;/code&gt; file to launch the installer and follow the prompts.</source>
          <target state="translated">Microsoft 버전과 관련된 최신 &lt;a href=&quot;https://downloads.chef.io/inspec&quot;&gt;Chef InSpec 패키지&lt;/a&gt; 를 다운로드 한 후 &lt;code&gt;.msi&lt;/code&gt; 파일을 두 번 클릭 하여 설치 프로그램을 시작하고 프롬프트를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="44149ba2845ad83fb5d3a54aa1aab25c675e90b3" translate="yes" xml:space="preserve">
          <source>Once you have a secret, you can add it to your local &lt;code&gt;hab&lt;/code&gt; configuration file, preferably by running &lt;code&gt;hab cli setup&lt;/code&gt; and following the interactive prompts. Alternatively, you can export it into your environment:</source>
          <target state="translated">비밀이 있으면 &lt;code&gt;hab cli setup&lt;/code&gt; 을 실행 하고 대화 형 프롬프트 에 따라 로컬 &lt;code&gt;hab&lt;/code&gt; 구성 파일에 추가 할 수 있습니다 . 또는 환경으로 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8735c82ed441812595af04d7792446032a5f8e70" translate="yes" xml:space="preserve">
          <source>Once you have an API token, you can either:</source>
          <target state="translated">API 토큰이 있으면 다음 중 하나를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2e948c3a23e65eac3b4906aecb78e04f8f49a88" translate="yes" xml:space="preserve">
          <source>Once you have an Admin API token, you can use it to make requests by passing it in the &lt;code&gt;api-token&lt;/code&gt; header:</source>
          <target state="translated">Admin API 토큰이 있으면이를 사용하여 &lt;code&gt;api-token&lt;/code&gt; 헤더 에 전달하여 요청할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="688684d148493e3a72ac008eea187edc52d0859a" translate="yes" xml:space="preserve">
          <source>Once you have downloaded the &lt;code&gt;hab&lt;/code&gt; CLI, unzip it onto your machine. Unzipping to &lt;code&gt;/usr/local/bin&lt;/code&gt; should place it on your &lt;code&gt;PATH&lt;/code&gt;. In order to use the Chef Habitat Studio, you&amp;rsquo;ll also need to install Docker for Mac.</source>
          <target state="translated">&lt;code&gt;hab&lt;/code&gt; CLI를 다운로드했으면 컴퓨터에 압축을 풉니 다. &lt;code&gt;/usr/local/bin&lt;/code&gt; 압축을 풀면 &lt;code&gt;PATH&lt;/code&gt; 에 배치해야합니다 . Chef Habitat Studio를 사용하려면 Mac 용 Docker도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="95465c589f0a30d47c203e07fefa5d26cdcc6911" translate="yes" xml:space="preserve">
          <source>Once you have downloaded the package, extract the hab binary with tar to &lt;code&gt;/usr/local/bin&lt;/code&gt; or add its location to your &lt;code&gt;PATH&lt;/code&gt; (e.g. &lt;code&gt;tar -xvzf hab.tgz -C /usr/local/bin --strip-components 1&lt;/code&gt;).</source>
          <target state="translated">패키지를 다운로드했으면 tar를 사용하여 hab 바이너리를 &lt;code&gt;/usr/local/bin&lt;/code&gt; 에 추출 하거나 해당 위치를 &lt;code&gt;PATH&lt;/code&gt; 에 추가합니다 (예 : &lt;code&gt;tar -xvzf hab.tgz -C /usr/local/bin --strip-components 1&lt;/code&gt; ). .</target>
        </trans-unit>
        <trans-unit id="a1ed694c01086244d76691d12450f09390060a86" translate="yes" xml:space="preserve">
          <source>Once you have local access to the profile, you can use the &lt;code&gt;example_config&lt;/code&gt; custom resource provided in the &lt;code&gt;examples/profile&lt;/code&gt; GitHub repo in your local environment :</source>
          <target state="translated">프로필에 대한 로컬 액세스 권한이 있으면 로컬 환경 의 &lt;code&gt;examples/profile&lt;/code&gt; GitHub 저장소에 제공된 &lt;code&gt;example_config&lt;/code&gt; 사용자 지정 리소스를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95559d31e17ffccab1484a008c5ca876b47a2513" translate="yes" xml:space="preserve">
          <source>Once you have quorum, one member is elected a leader, the Supervisors in the service group update the service&amp;rsquo;s configuration in concordance with the policy defined at package build time, and the service group starts up.</source>
          <target state="translated">쿼럼이 있으면 한 구성원이 리더로 선택되고 서비스 그룹의 감독자가 패키지 빌드시 정의 된 정책에 따라 서비스 구성을 업데이트하고 서비스 그룹이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="22ecc4942fb0840517fcba4d5f70af39e2217c91" translate="yes" xml:space="preserve">
          <source>Once you have tested the changes and you are ready to remediate the entire profile for CIS, you can set the hab configuration to &lt;code&gt;all&lt;/code&gt; and it will run all the remediation steps in the &lt;code&gt;scaffold_remediate_package&lt;/code&gt;.</source>
          <target state="translated">변경 사항을 테스트하고 CIS에 대한 전체 프로필을 수정할 준비가되면 hab 구성을 &lt;code&gt;all&lt;/code&gt; 로 설정할 수 있으며 &lt;code&gt;scaffold_remediate_package&lt;/code&gt; 의 모든 수정 단계를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="ae6c4e62dc1d60318213291314869ef521bbbe54" translate="yes" xml:space="preserve">
          <source>Once you have this token, you can set the &lt;code&gt;HAB_AUTH_TOKEN&lt;/code&gt;&lt;a href=&quot;../environment_variables/index&quot;&gt;environment variable&lt;/a&gt; to this value, so that any commands requiring authentication will use it.</source>
          <target state="translated">이 토큰이 있으면 &lt;code&gt;HAB_AUTH_TOKEN&lt;/code&gt; &lt;a href=&quot;../environment_variables/index&quot;&gt;환경 변수&lt;/a&gt; 를이 값으로 설정하여 인증이 필요한 모든 명령 이이 토큰 을 사용하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f68e55bacea058ffba38e9b4b986b1169527e0d" translate="yes" xml:space="preserve">
          <source>Once you have your catalog and manifest ready, you can test this out from a macOS node by running the following commands from a terminal window. Run the first command from your macOS client to verify that the correct configuration got to that node and then run the second command to actually install the managed applications</source>
          <target state="translated">카탈로그와 매니페스트가 준비되면 터미널 창에서 다음 명령을 실행하여 macOS 노드에서이를 테스트 할 수 있습니다. macOS 클라이언트에서 첫 번째 명령을 실행하여 해당 노드에 올바른 구성이 있는지 확인한 다음 두 번째 명령을 실행하여 실제로 관리되는 응용 프로그램을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="efe7799c1044b64ed99582ae37e34e5064b5bc80" translate="yes" xml:space="preserve">
          <source>Once you have your environment variables set, you can verify your credentials by running:</source>
          <target state="translated">환경 변수를 설정했으면 다음을 실행하여 자격 증명을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9aca189b2332ad0288ef352b8e52f7e0e6d13157" translate="yes" xml:space="preserve">
          <source>Once you log in, Chef Automate prompts you for a license.</source>
          <target state="translated">로그인하면 Chef Automate에서 라이선스를 요청합니다.</target>
        </trans-unit>
        <trans-unit id="1bb6842d63e9b4db21a169a0b5752783affffccb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re done developing and testing code on your local workstation, you can upload it to the Chef Infra Server. The Chef Infra Server acts as a hub for configuration data. It stores cookbooks, the policies that are applied to the systems in your infrastructure and metadata that describes each system. The knife command lets you communicate with the Chef Infra Server from your workstation. For example, you use it to upload your cookbooks.</source>
          <target state="translated">로컬 워크 스테이션에서 코드 개발 및 테스트를 완료하면 Chef Infra Server에 업로드 할 수 있습니다. Chef Infra Server는 구성 데이터의 허브 역할을합니다. 쿡북, 인프라의 시스템에 적용되는 정책 및 각 시스템을 설명하는 메타 데이터를 저장합니다. knife 명령을 사용하면 워크 스테이션에서 Chef Infra Server와 통신 할 수 있습니다. 예를 들어, 요리 책을 업로드하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="79bf7e1da24cebc33231b008dc682431ac00c59b" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve defined both ends of the contract, you can leverage the bind in any of your package&amp;rsquo;s hooks or configuration files. Given the two example services above, a section of a configuration file for &lt;code&gt;session-server&lt;/code&gt; might look like this:</source>
          <target state="translated">계약의 양쪽 끝을 정의한 후에는 패키지의 후크 또는 구성 파일에서 바인딩을 활용할 수 있습니다. 위의 두 가지 예제 서비스가 주어지면 &lt;code&gt;session-server&lt;/code&gt; 에 대한 구성 파일의 섹션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="31e87805f996a99630e31d742830b86466334e9a" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve resolved the issue and can run the &lt;code&gt;pgsql-follow&lt;/code&gt; command successfully, you can manually remove the sentinel file and restart Leaderl:</source>
          <target state="translated">문제를 해결하고 &lt;code&gt;pgsql-follow&lt;/code&gt; 명령을 성공적으로 실행할 수 있으면 수동으로 센티넬 파일을 제거하고 Leaderl을 다시 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56e4514ac38ca8cbf32a46d81fb69bcd8083a0e4" translate="yes" xml:space="preserve">
          <source>One (or more) 60 character segments that comprise the canonical header. A canonical header is signed with the private key used by the client machine from which the request is sent, and is also encoded using Base64. If more than one segment is required, each should be named sequentially, e.g. &lt;code&gt;X-Ops-Authorization-1&lt;/code&gt;, &lt;code&gt;X-Ops-Authorization-2&lt;/code&gt;, &lt;code&gt;X-Ops-Authorization-N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the integer used by the last header that is part of the request.</source>
          <target state="translated">표준 헤더를 구성하는 하나 이상의 60 문자 세그먼트. 표준 헤더는 요청이 전송되는 클라이언트 시스템에서 사용하는 개인 키로 서명되며 Base64를 사용하여 인코딩됩니다. 둘 이상의 세그먼트가 필요한 경우 각 세그먼트의 이름을 순차적으로 지정해야합니다 (예 : &lt;code&gt;X-Ops-Authorization-1&lt;/code&gt; , &lt;code&gt;X-Ops-Authorization-2&lt;/code&gt; , &lt;code&gt;X-Ops-Authorization-N&lt;/code&gt; ). 여기서 &lt;code&gt;N&lt;/code&gt; 은 마지막 헤더에서 사용한 정수를 나타냅니다. 요청의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="b4de794fb3d0b29a71c07e9826aba791a336a3b0" translate="yes" xml:space="preserve">
          <source>One (or more) additional command options that are passed to the command.</source>
          <target state="translated">명령에 전달되는 하나 이상의 추가 명령 옵션.</target>
        </trans-unit>
        <trans-unit id="cff9198e2d54582ab1da460235aa3588edea9ac1" translate="yes" xml:space="preserve">
          <source>One (or more) additional command options that are passed to the command. For example, common zypper directives, such as &lt;code&gt;--no-recommends&lt;/code&gt;. See the &lt;a href=&quot;https://en.opensuse.org/SDB:Zypper_manual_(plain)&quot;&gt;zypper man page&lt;/a&gt; for the full list.</source>
          <target state="translated">명령에 전달되는 하나 이상의 추가 명령 옵션. 예를 들어 &lt;code&gt;--no-recommends&lt;/code&gt; 와 같은 일반적인 zypper 지시문이 있습니다. 전체 목록 은 &lt;a href=&quot;https://en.opensuse.org/SDB:Zypper_manual_(plain)&quot;&gt;zypper man 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eab1c5633479a59e754fccbfcf1aca70e83fddf9" translate="yes" xml:space="preserve">
          <source>One (or more) additional list options that are passed to the command.</source>
          <target state="translated">명령에 전달되는 하나 이상의 추가 목록 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="60548431e04f6e75c7c8017728ad75b97681548f" translate="yes" xml:space="preserve">
          <source>One (or more) additional options that are passed to the command.</source>
          <target state="translated">명령에 전달되는 하나 이상의 추가 옵션.</target>
        </trans-unit>
        <trans-unit id="6f85aeb5a937f4d7805c5aea4c88300b4123d76d" translate="yes" xml:space="preserve">
          <source>One (or more) additional options that are passed to the command. For example, common apt-get directives, such as &lt;code&gt;--no-install-recommends&lt;/code&gt;. See the &lt;a href=&quot;http://manpages.debian.net/cgi-bin/man.cgi?query=apt-get&quot;&gt;apt-get man page&lt;/a&gt; for the full list.</source>
          <target state="translated">명령에 전달되는 하나 이상의 추가 옵션. 예를 들어, 일반적인 apt-get을 지시, &lt;code&gt;--no-install-recommends&lt;/code&gt; . 전체 목록 은 &lt;a href=&quot;http://manpages.debian.net/cgi-bin/man.cgi?query=apt-get&quot;&gt;apt-get 매뉴얼 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7cdb6369a5941aee135a8d09842f50304ce2b3eb" translate="yes" xml:space="preserve">
          <source>One (or more) additional options that are passed to the command. For example, common apt-get directives, such as &lt;code&gt;--no-install-recommends&lt;/code&gt;. See the &lt;a href=&quot;http://manpages.ubuntu.com/manpages/zesty/man8/apt-get.8.html&quot;&gt;apt-get man page&lt;/a&gt; for the full list.</source>
          <target state="translated">명령에 전달되는 하나 이상의 추가 옵션입니다. 예를 들어 &lt;code&gt;--no-install-recommends&lt;/code&gt; 와 같은 일반적인 apt-get 지시문이 있습니다. 전체 목록 은 &lt;a href=&quot;http://manpages.ubuntu.com/manpages/zesty/man8/apt-get.8.html&quot;&gt;apt-get man 페이지&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bc8be619ef011799f9c2088ff26e0e7413ffa80" translate="yes" xml:space="preserve">
          <source>One (or more) comments about the user.</source>
          <target state="translated">사용자에 대한 하나 이상의 의견.</target>
        </trans-unit>
        <trans-unit id="ae61e7bbf91bc6f37e0da95b9d63f07409b76baa" translate="yes" xml:space="preserve">
          <source>One (or more) nodes on which Chef Infra Client (Chef Client version 12 or higher) is installed</source>
          <target state="translated">Chef Infra Client (Chef Client 버전 12 이상)가 설치된 하나 이상의 노드</target>
        </trans-unit>
        <trans-unit id="175a379a01ba976e7f5e35ac7ae16a9dcdf956d3" translate="yes" xml:space="preserve">
          <source>One (or more) of the PostgreSQL databases already exists.</source>
          <target state="translated">PostgreSQL 데이터베이스 중 하나 이상이 이미 존재합니다.</target>
        </trans-unit>
        <trans-unit id="8db2f1785511d4ef39bb1e5f2f0da822156b26cd" translate="yes" xml:space="preserve">
          <source>One (or more) of the PostgreSQL predefined users already exists.</source>
          <target state="translated">하나 이상의 PostgreSQL 사전 정의 사용자가 이미 존재합니다.</target>
        </trans-unit>
        <trans-unit id="870dce14363a143a1447e956923b174e44a4ce27" translate="yes" xml:space="preserve">
          <source>One (or more) patterns for a command line. If this option is not specified, a list of patterns may be expected on standard input. Default: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">명령 행에 대한 하나 이상의 패턴. 이 옵션을 지정하지 않으면 표준 입력에 패턴 목록이있을 수 있습니다. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2415eb15931d92465ed4e2623fd58a30e75c472a" translate="yes" xml:space="preserve">
          <source>One (or more) services are down. For example:</source>
          <target state="translated">하나 이상의 서비스가 다운되었습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="27f8a181de55eaa1882d4ff0a6de25a32f4ae5f9" translate="yes" xml:space="preserve">
          <source>One (or more) workstations are configured to allow users to author, test, and maintain cookbooks.</source>
          <target state="translated">사용자가 요리 책을 작성, 테스트 및 유지 관리 할 수 ​​있도록 하나 이상의 워크 스테이션이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="73038a078eea1234b2f8123a2e35dea57f292bfd" translate="yes" xml:space="preserve">
          <source>One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the Chef server from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the Chef Supermarket.</source>
          <target state="translated">사용자가 요리 책을 작성, 테스트 및 유지 관리 할 수 ​​있도록 하나 이상의 워크 스테이션이 구성되어 있습니다. 쿡북은 워크 스테이션에서 Chef 서버로 업로드됩니다. 일부 요리 책은 조직에 따라 사용자 정의되며 다른 요리 책은 Chef Supermarket에서 제공하는 커뮤니티 요리 책을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="5aa3056c60aa3b67d08c9c802c642679e1b9ff17" translate="yes" xml:space="preserve">
          <source>One approach for enabling or disabling services that are managed by System Resource Controller (SRC) is to use the &lt;strong&gt;execute&lt;/strong&gt; resource to invoke &lt;code&gt;mkitab&lt;/code&gt;, and then use that command to enable or disable the service.</source>
          <target state="translated">SRC (System Resource Controller)에서 관리하는 서비스를 사용 가능 또는 사용 불가능하게하는 한 가지 방법은 &lt;strong&gt;실행&lt;/strong&gt; 자원을 사용하여 &lt;code&gt;mkitab&lt;/code&gt; 을 호출 한 다음 해당 명령을 사용하여 서비스를 사용 가능 또는 사용 불가능하게하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9d2456e4989d515bd36b8c12fedad07bc835f7af" translate="yes" xml:space="preserve">
          <source>One approach is to set attributes at the same precedence level by setting attributes in a cookbook&amp;rsquo;s attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook&amp;rsquo;s attribute files.</source>
          <target state="translated">한 가지 방법은 요리 책의 속성 파일에서 속성을 설정 한 다음 역할을 사용하여 동일한 기본 속성 (값은 다름)을 설정하여 동일한 우선 순위 수준으로 속성을 설정하는 것입니다. 역할에 설정된 속성은 속성 파일의 속성 위에 깊게 병합되며 역할에 의해 설정된 속성은 요리 책의 속성 파일에 지정된 속성보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="51c71c1fca8357641e7d35726245fd7e37d23596" translate="yes" xml:space="preserve">
          <source>One approach to working around the double- vs. single-quote issue is to put the single-quotes outside of the double-quotes. For example, for Notepad++:</source>
          <target state="translated">큰 따옴표와 작은 따옴표 문제를 해결하는 한 가지 방법은 작은 따옴표를 큰 따옴표 밖에 두는 것입니다. 예를 들어 메모장 ++의 경우 :</target>
        </trans-unit>
        <trans-unit id="04c0d736d0bdb79e84bb761398614ddc5bcfe3c9" translate="yes" xml:space="preserve">
          <source>One delivery channel is allowed per region per AWS account, and the delivery channel is required to use AWS Config.</source>
          <target state="translated">AWS 계정 당 리 전당 하나의 전송 채널이 허용되며 AWS Config를 사용하려면 전송 채널이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a8065bfe5eb29b8e36ffacff21d3480e4f5ca394" translate="yes" xml:space="preserve">
          <source>One of either the EC2 instance&amp;rsquo;s ID or name must be be provided.</source>
          <target state="translated">EC2 인스턴스의 ID 또는 이름 중 하나를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4b1bb69b4e6f097780358f44bdbf3fd2cd8b36c" translate="yes" xml:space="preserve">
          <source>One of the best way to develop and explore tests is the interactive debugging shell &lt;code&gt;pry&lt;/code&gt; (see [Interactive Debugging with Pry] (/inspec/dsl_inspec/#interactive-debugging-with-pry) at the end of this page). However, after you finish your profile make sure you have no interactive statements included anymore. Sometimes interactive calls are hidden behind conditionals (&lt;code&gt;if&lt;/code&gt; statements) that are harder to reach. These calls can easily cause trouble when an automated profiles runs into an interactive &lt;code&gt;pry&lt;/code&gt; call that stops the execution and waits for user input.</source>
          <target state="translated">테스트를 개발하고 탐색하는 가장 좋은 방법 중 하나는 대화 형 디버깅 셸 &lt;code&gt;pry&lt;/code&gt; 입니다 (이 페이지 끝에있는 [Interactive Debugging with Pry] (/ inspec / dsl_inspec / # interactive-debugging-with-pry) 참조). 그러나 프로필을 마친 후에는 더 이상 대화 형 설명이 포함되어 있지 않은지 확인하십시오. 때때로 대화 형 호출은 도달하기 어려운 조건문 ( &lt;code&gt;if&lt;/code&gt; 문) 뒤에 숨겨져 있습니다. 이러한 호출은 자동화 된 프로필이 실행 을 중지하고 사용자 입력을 기다리는 대화 형 &lt;code&gt;pry&lt;/code&gt; 호출 로 실행될 때 쉽게 문제를 일으킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45d9df7454b5e81abe48261f948c17fa508e791a" translate="yes" xml:space="preserve">
          <source>One of the following account types (case-sensitive): &lt;code&gt;Standard_LRS&lt;/code&gt; (Standard Locally-redundant storage); &lt;code&gt;Standard_ZRS&lt;/code&gt; (Standard Zone-redundant storage); &lt;code&gt;Standard_GRS&lt;/code&gt; (Standard Geo-redundant storage); &lt;code&gt;Standard_RAGRS&lt;/code&gt; (Standard Read access geo-redundant storage); &lt;code&gt;Premium_LRS&lt;/code&gt; (Premium Locally-redundant storage).</source>
          <target state="translated">다음 계정 유형 중 하나 (대소 문자 구분) : &lt;code&gt;Standard_LRS&lt;/code&gt; (Standard Locally-redundant storage); &lt;code&gt;Standard_ZRS&lt;/code&gt; (Standard Zone-redundant storage); &lt;code&gt;Standard_GRS&lt;/code&gt; (표준 지역 중복 스토리지); &lt;code&gt;Standard_RAGRS&lt;/code&gt; (표준 읽기 액세스 지역 중복 스토리지); &lt;code&gt;Premium_LRS&lt;/code&gt; (프리미엄 로컬 중복 스토리지).</target>
        </trans-unit>
        <trans-unit id="4f536a53de31e6856f575d8d4b5e432c91edcfe5" translate="yes" xml:space="preserve">
          <source>One of the following: the name of a package, the name of a package and its architecture, the name of a dependency. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">패키지 이름, 패키지 이름 및 아키텍처, 종속성 이름 중 하나입니다. 기본값 : 리소스 블록 &lt;code&gt;name&lt;/code&gt; 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3152b06cfcf6e81a149e47aea78fc50d403d465b" translate="yes" xml:space="preserve">
          <source>One of the following: the name of a package, the name of a package and its architecture, the name of a dependency. Default value: the &lt;code&gt;name&lt;/code&gt; of the resource block. See &amp;ldquo;Syntax&amp;rdquo; section above for more information.</source>
          <target state="translated">다음 중 하나 : 패키지 이름, 패키지 이름 및 아키텍처, 종속성 이름. 기본값 : 리소스 블록 의 &lt;code&gt;name&lt;/code&gt; 입니다. 자세한 내용은 위의 &quot;구문&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="daa9a305c85b68747c931a57c204d65990220e19" translate="yes" xml:space="preserve">
          <source>One of the great things about an automated management setup like this is being able to actively manage the applications that show up on user&amp;rsquo;s desktops. To handle that on macOS we use Munki. Our initial goal is to push a couple of required applications out to our users.</source>
          <target state="translated">이와 같은 자동화 된 관리 설정의 가장 큰 장점 중 하나는 사용자의 데스크톱에 표시되는 응용 프로그램을 적극적으로 관리 할 수 ​​있다는 것입니다. macOS에서이를 처리하기 위해 Munki를 사용합니다. 초기 목표는 몇 가지 필수 애플리케이션을 사용자에게 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ffabf2cf91e79da760005caf9b86807126f10830" translate="yes" xml:space="preserve">
          <source>One of the great things about an automated management setup like this is the ability to actively manage the applications that show up on users' desktops. To handle applications on macOS, we use Munki. To handle applications for Windows, we use Gorilla. Our initial goal is to push a couple of required Apps out to our users.</source>
          <target state="translated">이와 같은 자동화 된 관리 설정의 가장 큰 장점 중 하나는 사용자의 데스크톱에 표시되는 응용 프로그램을 적극적으로 관리 할 수 ​​있다는 것입니다. macOS에서 응용 프로그램을 처리하기 위해 Munki를 사용합니다. Windows 용 애플리케이션을 처리하기 위해 Gorilla를 사용합니다. 우리의 초기 목표는 몇 가지 필수 앱을 사용자에게 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b685bf7cb0324a79237a45c2552835b37f501ec3" translate="yes" xml:space="preserve">
          <source>One of the key differences is that Chef InSpec targets more user groups. It is optimized for DevOps, Security, and Compliance professionals. Additional metadata, such as impact, title, and description, make it easier to fully describe the controls which makes it easier to share the controls with other departments. This enables Security departments to prioritize rules. DevOps teams use this information to focus on the most critical issues to remediate.</source>
          <target state="translated">주요 차이점 중 하나는 Chef InSpec이 더 많은 사용자 그룹을 대상으로한다는 것입니다. DevOps, 보안 및 규정 준수 전문가를 위해 최적화되었습니다. 영향, 제목 및 설명과 같은 추가 메타 데이터를 사용하면 컨트롤을 완전히 설명하기가 쉬워 져 다른 부서와 컨트롤을 더 쉽게 공유 할 수 있습니다. 이를 통해 보안 부서에서 규칙의 우선 순위를 지정할 수 있습니다. DevOps 팀은이 정보를 사용하여 해결해야 할 가장 중요한 문제에 집중합니다.</target>
        </trans-unit>
        <trans-unit id="e74336ebf7690a2a6f0823b675e708c87a06ce40" translate="yes" xml:space="preserve">
          <source>One of the key features of Chef Habitat is the ability to define an immutable package with a default configuration which can then be updated dynamically at runtime. You can update service configuration on two levels: individual services (for testing purposes), or a service group.</source>
          <target state="translated">Chef Habitat의 주요 기능 중 하나는 런타임에 동적으로 업데이트 할 수있는 기본 구성으로 변경 불가능한 패키지를 정의하는 기능입니다. 개별 서비스 (테스트 용) 또는 서비스 그룹의 두 가지 수준에서 서비스 구성을 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c122b053e5b93644cc9b2f35fc7d288163aa1573" translate="yes" xml:space="preserve">
          <source>One of valid DNS resource types.</source>
          <target state="translated">유효한 DNS 리소스 유형 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="e6940dc8222beb5531b08740b8174419b877bbc2" translate="yes" xml:space="preserve">
          <source>One option to remediate this error is to define a &lt;code&gt;SSL_CERT_FILE&lt;/code&gt; environment variable pointing to the custom certificate path before performing the client operation.</source>
          <target state="translated">이 오류를 수정하는 한 가지 옵션 은 클라이언트 작업을 수행하기 전에 사용자 지정 인증서 경로를 가리키는 &lt;code&gt;SSL_CERT_FILE&lt;/code&gt; 환경 변수 를 정의하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="aa35135887b5184f097e22cb74e421e3af6c7de9" translate="yes" xml:space="preserve">
          <source>One or more &amp;ldquo;nodes&amp;rdquo;, which are the Windows or macOS computers that you will manage.</source>
          <target state="translated">관리 할 Windows 또는 macOS 컴퓨터 인 하나 이상의 &quot;노드&quot;.</target>
        </trans-unit>
        <trans-unit id="f8efbbc96a55559c2e6effd67be7f493f1fd9ee1" translate="yes" xml:space="preserve">
          <source>One or more &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;valid software licenses&lt;/a&gt; that relate to this package. Type: array. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="translated">이 패키지와 관련된 하나 이상의 &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;유효한 소프트웨어 라이센스&lt;/a&gt; . 유형 : 배열. &lt;em&gt;선택 사항&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8a694b3c52ecd30b83f28de960557f1cfbdda3a4" translate="yes" xml:space="preserve">
          <source>One or more command line flags that are passed to the interpreter when a command is invoked.</source>
          <target state="translated">명령이 호출 될 때 인터프리터에 전달되는 하나 이상의 명령 행 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="02daf4f16c89a3503e94fa46b64526e316b0892c" translate="yes" xml:space="preserve">
          <source>One or more data bags and data bag items can be created manually under the &lt;code&gt;data_bags&lt;/code&gt; directory in the chef-repo. Any method can be used to create the data bag folders and data bag item JSON files. For example:</source>
          <target state="translated">하나 이상의 데이터 백 및 데이터 백 항목은 chef-repo 의 &lt;code&gt;data_bags&lt;/code&gt; 디렉토리 아래에 수동으로 생성 될 수 있습니다 . 모든 방법을 사용하여 데이터 백 폴더 및 데이터 백 항목 JSON 파일을 만들 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="e961a8d35f3d17e61c76ffec029c5500957e6077" translate="yes" xml:space="preserve">
          <source>One or more diagnostics checks failed</source>
          <target state="translated">하나 이상의 진단 검사가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="5d646b870dd7f2f3ac1787fecaf561c7e607f6c0" translate="yes" xml:space="preserve">
          <source>One or more fields on which data should be clustered. Only top-level, non-repeated, simple-type fields are supported. When you cluster a table using multiple columns, the order of columns you specify is important. The order of the specified columns determines the sort order of the data.</source>
          <target state="translated">데이터를 클러스터링해야하는 하나 이상의 필드입니다. 반복되지 않는 최상위 수준의 단순 유형 필드 만 지원됩니다. 여러 열을 사용하여 테이블을 클러스터링 할 때 지정하는 열 순서가 중요합니다. 지정된 열의 순서에 따라 데이터 정렬 순서가 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="b2cd4f0cf512f076b79d4fe30aec37be0f9d41bd" translate="yes" xml:space="preserve">
          <source>One or more frontend group nodes</source>
          <target state="translated">하나 이상의 프런트 엔드 그룹 노드</target>
        </trans-unit>
        <trans-unit id="0c23f64eaffb2d770941ed387a857e1793c2c873" translate="yes" xml:space="preserve">
          <source>One or more labels that you can add, to organize your models.</source>
          <target state="translated">모델을 구성하기 위해 추가 할 수있는 하나 이상의 레이블입니다.</target>
        </trans-unit>
        <trans-unit id="e94fbffc37e6a843163554e4e6db3db111c577ad" translate="yes" xml:space="preserve">
          <source>One or more nodes</source>
          <target state="translated">하나 이상의 노드</target>
        </trans-unit>
        <trans-unit id="77faeaae3571e95d4982eaecc5fee38e6ef94744" translate="yes" xml:space="preserve">
          <source>One or more preflight checks failed</source>
          <target state="translated">하나 이상의 프리 플라이트 검사에 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="7f186106fa536f796e1bca4e3847e0ceacc5f159" translate="yes" xml:space="preserve">
          <source>One or more privileges to set for users.</source>
          <target state="translated">사용자에 대해 설정할 하나 이상의 권한입니다.</target>
        </trans-unit>
        <trans-unit id="5872374cc52312cd7429656b2de587d32a9a8404" translate="yes" xml:space="preserve">
          <source>One or more subnetwork NAT configurations. Only used if &lt;code&gt;source_subnetwork_ip_ranges_to_nat&lt;/code&gt; is set to &lt;code&gt;LIST_OF_SUBNETWORKS&lt;/code&gt;</source>
          <target state="translated">하나 이상의 서브 네트워크 NAT 구성. &lt;code&gt;source_subnetwork_ip_ranges_to_nat&lt;/code&gt; 가 &lt;code&gt;LIST_OF_SUBNETWORKS&lt;/code&gt; 로 설정된 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dc4ea332359ebc839c17d7afafdfe1994d2dfdf4" translate="yes" xml:space="preserve">
          <source>One possible cause (whose logs you see here) is a misconfigured &lt;code&gt;base_user_search_dn&lt;/code&gt;.</source>
          <target state="translated">한 가지 가능한 원인 (여기에 표시되는 로그)은 잘못 구성된 &lt;code&gt;base_user_search_dn&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="910ab2d51a493757df2666f3522af2f2b637aebb" translate="yes" xml:space="preserve">
          <source>One way to manage secrets used by Chef is with data bags.</source>
          <target state="translated">Chef에서 사용하는 비밀을 관리하는 한 가지 방법은 데이터 백을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ceeadee3103f92ee76622af6f05805ef0de1595d" translate="yes" xml:space="preserve">
          <source>One way to think about the stages is whether the set of potentially releasable artifacts has been produced or not. The pipeline creates these artifacts at the end of the Build stage. The remaining stages of the pipeline focus on gaining confidence in those artifacts. Another way to understand the stages is by whether they are isolated at the project level or shared across the system. This diagram shows the relationships among the different stages.</source>
          <target state="translated">스테이지에 대해 생각하는 한 가지 방법은 잠재적으로 해제 가능한 아티팩트 세트가 생성되었는지 여부입니다. 파이프 라인은 빌드 단계가 끝날 때 이러한 아티팩트를 생성합니다. 파이프 라인의 나머지 단계는 이러한 아티팩트에 대한 신뢰를 얻는 데 중점을 둡니다. 단계를 이해하는 또 다른 방법은 프로젝트 수준에서 격리되었는지 시스템 전체에서 공유되는지 여부입니다. 이 다이어그램은 여러 단계 간의 관계를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="95eb4c282153e73004abcffa2380a98d06c5955c" translate="yes" xml:space="preserve">
          <source>OneLogin</source>
          <target state="translated">OneLogin</target>
        </trans-unit>
        <trans-unit id="28445087de506d62c5463d0d457faba7313b7ea2" translate="yes" xml:space="preserve">
          <source>Only &amp;ldquo;administrators&amp;rdquo; and &amp;ldquo;owners&amp;rdquo; can upload new keys to an origin.</source>
          <target state="translated">&quot;관리자&quot;및 &quot;소유자&quot;만 오리진에 새 키를 업로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6b43c627e5ccfeca2157df8ea8bc9723b8fad16" translate="yes" xml:space="preserve">
          <source>Only Chef Habitat Builder can read encrypted origin secrets. The origin secrets in your local environment are encrypted with an origin encryption key. Origin secrets are retained by the origin and are available for any of its packages.</source>
          <target state="translated">Chef Habitat Builder 만 암호화 된 원본 비밀을 읽을 수 있습니다. 로컬 환경의 원본 비밀은 원본 암호화 키로 암호화됩니다. Origin 비밀은 오리진에 의해 유지되며 모든 패키지에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14cccf4247dcf686ca4e3c010d34d8d600f50f69" translate="yes" xml:space="preserve">
          <source>Only Chef Software, Inc employees have access to your data. We will never sell, re-sell, or use your data in a malicious manner.</source>
          <target state="translated">Chef Software, Inc 직원 만 귀하의 데이터에 액세스 할 수 있습니다. 우리는 절대로 악의적 인 방식으로 귀하의 데이터를 판매, 재판매 또는 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b98b40c00aa600fe1e6c9afb6edad8b46d6cf0b" translate="yes" xml:space="preserve">
          <source>Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two zones. If provided, it must be a different zone from the one provided in [locationId].</source>
          <target state="translated">두 영역에 걸쳐 프로비저닝하여 영역 장애로부터 인스턴스를 보호하는 STANDARD_HA 계층에만 적용됩니다. 제공되는 경우 [locationId]에 제공된 영역과 다른 영역이어야합니다.</target>
        </trans-unit>
        <trans-unit id="15a64a5a9ce22f50f872f7714281e946e52b0b2c" translate="yes" xml:space="preserve">
          <source>Only available for constraints that are boolean policies.</source>
          <target state="translated">부울 정책 인 제약 조건에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd8abfd943fb52bf4f7f5e6b22832a6cf35b2d04" translate="yes" xml:space="preserve">
          <source>Only elevate executables that are signed and validated. Sets HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA\ValidateAdminCodeSignatures.</source>
          <target state="translated">서명되고 검증 된 실행 파일 만 상승시킵니다. HKEY_LOCAL_MACHINE \ SOFTWARE \ Microsoft \ Windows \ CurrentVersion \ Policies \ System \ EnableLUA \ ValidateAdminCodeSignatures를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0d30882898734abc7211a0aaebaa097dd2061e3e" translate="yes" xml:space="preserve">
          <source>Only inherited rights remain. All existing explicit rights on the object are removed and replaced.</source>
          <target state="translated">상속 된 권리 만 남아 있습니다. 개체에 대한 기존의 모든 명시 적 권한이 제거되고 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="4cd066ed22b640a6454afb7b588f4cd5033dcfc4" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;only_if&lt;/code&gt; is permitted per &lt;code&gt;control&lt;/code&gt; block. If multiple &lt;code&gt;only_if&lt;/code&gt; blocks are present, only the last &lt;code&gt;only_if&lt;/code&gt; block will be honored</source>
          <target state="translated">&lt;code&gt;control&lt;/code&gt; 블록 당 하나의 &lt;code&gt;only_if&lt;/code&gt; 만 허용됩니다 . &lt;code&gt;only_if&lt;/code&gt; 블록이 여러 개있는 경우 마지막 &lt;code&gt;only_if&lt;/code&gt; 블록 만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b8062bf6c5d750012fda39913510aa7b1ff91323" translate="yes" xml:space="preserve">
          <source>Only one of the keys, &lt;code&gt;create_key&lt;/code&gt; or &lt;code&gt;public_key&lt;/code&gt;, may be specified. If &lt;code&gt;create_key&lt;/code&gt; is specified, a default private key is generated and returned.</source>
          <target state="translated">&lt;code&gt;create_key&lt;/code&gt; 또는 &lt;code&gt;public_key&lt;/code&gt; 키 중 하나만 지정할 수 있습니다. 경우 &lt;code&gt;create_key&lt;/code&gt; 가 지정, 기본 개인 키가 생성되어 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8bfdc369eef7aed3de4ede754985a8d2730c26c6" translate="yes" xml:space="preserve">
          <source>Only projects with zero ingest rules and no pending edits can be deleted. To delete a project, navigate to &lt;em&gt;Projects&lt;/em&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab. Then open the menu at the end of the table row and select &lt;strong&gt;Delete Role&lt;/strong&gt;.</source>
          <target state="translated">수집 규칙이없고 보류중인 편집이없는 프로젝트 만 삭제할 수 있습니다. 에 프로젝트 탐색 삭제하려면 &lt;em&gt;프로젝트&lt;/em&gt; 에서 &lt;strong&gt;설정&lt;/strong&gt; 탭을 선택합니다. 그런 다음 표 행 끝에있는 메뉴를 열고 &lt;strong&gt;역할 삭제를&lt;/strong&gt; 선택 합니다.</target>
        </trans-unit>
        <trans-unit id="7e8ea3cdc183f314c05e768ca075617657a76356" translate="yes" xml:space="preserve">
          <source>Only the runtime portion of this combined buildtime environment is made available to your package when it is running in a Supervisor (or when it is being used as a dependency of another Chef Habitat package).</source>
          <target state="translated">이 결합 된 빌드 타임 환경의 런타임 부분 만 Supervisor에서 실행 중일 때 (또는 다른 Chef Habitat 패키지의 종속성으로 사용되는 경우) 패키지에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33137f01ece039f247e79da6595fda2bcdb01304" translate="yes" xml:space="preserve">
          <source>Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the &lt;code&gt;id&lt;/code&gt; key of a data bag item are not encrypted (because they are needed by Chef Infra Client when tracking the data bag item)</source>
          <target state="translated">데이터 백 항목의 값만 해독됩니다. 키는 여전히 검색 가능합니다. 데이터 백 항목 의 &lt;code&gt;id&lt;/code&gt; 키 와 관련된 값 은 암호화되지 않습니다 (데이터 백 항목을 추적 할 때 Chef Infra Client에서 필요하기 때문).</target>
        </trans-unit>
        <trans-unit id="1ace3879b63ca59783c380b357201b40a96af6ea" translate="yes" xml:space="preserve">
          <source>Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the &lt;code&gt;id&lt;/code&gt; key of a data bag item are not encrypted (because they are needed when tracking the data bag item)</source>
          <target state="translated">데이터 백 항목의 값만 해독됩니다. 키는 여전히 검색 가능합니다. 데이터 백 항목 의 &lt;code&gt;id&lt;/code&gt; 키 와 관련된 값 은 암호화되지 않습니다 (데이터 백 항목을 추적 할 때 필요하기 때문).</target>
        </trans-unit>
        <trans-unit id="069ff1a92d67fd47f73a96aaa2ce009a716b9161" translate="yes" xml:space="preserve">
          <source>Only upload stable cookbooks from master.</source>
          <target state="translated">마스터의 안정적인 요리 책 만 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="7d26ae1cc4c79fdc0d153a3a4c3684ba3330e1a3" translate="yes" xml:space="preserve">
          <source>Only upload unstable cookbooks from the dev branch. Merge to master and bump the version when stable.</source>
          <target state="translated">개발자 브랜치에서 불안정한 요리 책 만 업로드하십시오. 안정적인 경우 버전을 마스터하고 충돌시킵니다.</target>
        </trans-unit>
        <trans-unit id="70825d9502b745df204a93e07195ebb29ed23118" translate="yes" xml:space="preserve">
          <source>Only users whose public keys that the Supervisor already has in its cache will be allowed to reconfigure this service group. If you need to generate a user key pair, see the next section.</source>
          <target state="translated">Supervisor가 이미 캐시에있는 공개 키를 가진 사용자 만이 서비스 그룹을 재구성 할 수 있습니다. 사용자 키 쌍을 생성해야하는 경우 다음 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a7b9884367edf8fea0fa1185aa2a1668bc2fb9fb" translate="yes" xml:space="preserve">
          <source>Only users with origin membership can find and use private packages</source>
          <target state="translated">오리진 멤버십을 가진 사용자 만 개인 패키지를 찾고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e0f052984bdf5d7a2e1d0c98ac2b2291050af80" translate="yes" xml:space="preserve">
          <source>Opaque IDs</source>
          <target state="translated">불투명 한 ID</target>
        </trans-unit>
        <trans-unit id="50d99aca6e80e8942c4fefaad4889a138868c67f" translate="yes" xml:space="preserve">
          <source>Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata. metadataFilters specified here can be overridden by those specified in the UrlMap that this ForwardingRule references. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.</source>
          <target state="translated">라우팅 구성을 제한된 xDS 호환 클라이언트로 제한하기 위해 Loadbalancer에서 사용하는 불투명 필터 기준입니다. Loadbalancer에 대한 xDS 요청에서 xDS 클라이언트는 노드 메타 데이터를 제공합니다. 일치가 발생하면 해당 프록시에서 관련 라우팅 구성을 사용할 수 있습니다. 이 목록의 각 metadataFilter에 대해 filterMatchCriteria가 MATCH_ANY로 설정된 경우 하나 이상의 filterLabels가 메타 데이터에 제공된 해당 레이블과 일치해야합니다. filterMatchCriteria가 MATCH_ALL로 설정되면 모든 filterLabels가 제공된 메타 데이터의 해당 레이블과 일치해야합니다. 여기에 지정된 metadataFilters는이 ForwardingRule이 참조하는 UrlMap에 지정된 필터로 대체 될 수 있습니다. metadataFilters는 loadBalancingScheme이 INTERNAL_SELF_MANAGED로 설정된로드 밸런서에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="84f259e73bd7e8eb21905ec50d1e05161794e189" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;.chef/config.rb&lt;/code&gt; in a text editor and modify the &lt;code&gt;chef_server_url&lt;/code&gt; with your new public DNS. For example:</source>
          <target state="translated">텍스트 편집기에서 &lt;code&gt;.chef/config.rb&lt;/code&gt; 를 열고 새 공용 DNS로 &lt;code&gt;chef_server_url&lt;/code&gt; 을 수정하십시오 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="aae9504bc52a3b15cf2a60112cb3fa028e967d58" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;.chef/pivotal.rb&lt;/code&gt; in a text editor and modify the &lt;code&gt;chef_server_url&lt;/code&gt; and &lt;code&gt;chef_server_root&lt;/code&gt; with your new public DNS. For example:</source>
          <target state="translated">텍스트 편집기에서 &lt;code&gt;.chef/pivotal.rb&lt;/code&gt; 를 열고 새 공용 DNS로 &lt;code&gt;chef_server_url&lt;/code&gt; 및 &lt;code&gt;chef_server_root&lt;/code&gt; 를 수정하십시오 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="7fd529dcda36d4bf0ac8ab093c7562883fe90570" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; and enter the LDAP attributes you want Workflow to use. If you do not specify an LDAP port, the default port of &lt;code&gt;3269&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;/etc/delivery/delivery.rb&lt;/code&gt; 를 열고 Workflow에서 사용할 LDAP 속성을 입력하십시오. LDAP 포트를 지정하지 않으면 기본 포트 인 &lt;code&gt;3269&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="da6e912bf472a5cb6594a795b8ce44ec3421e4c6" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;my_repo\cookbook\my_cookbook\recipes\default.rb&lt;/code&gt; in Visual Studio and add:</source>
          <target state="translated">Visual Studio에서 &lt;code&gt;my_repo\cookbook\my_cookbook\recipes\default.rb&lt;/code&gt; 를 열고 다음을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="621bfb064faf2768bc60ba5c1f15325f263f02de" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;Connections&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;연결을&lt;/strong&gt; 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="651f5a0fd17bef78a2d3b21163db0ea8e53339cd" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;Environment Variables&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;환경 변수를&lt;/strong&gt; 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="5761090ce0bcc09745539408c328af54a7c7a23b" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;Internet Properties&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;인터넷 속성을&lt;/strong&gt; 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="7829876d8e855fa41bcf6d9e5270f6532b4f3535" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;LAN settings&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;LAN 설정을&lt;/strong&gt; 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="4ab3e624bd85df6913f10d35d0026bd0ee56a7c5" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;System Properties&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;시스템 속성을&lt;/strong&gt; 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="d009cb58e46ce6a64264277400f06720a94a2013" translate="yes" xml:space="preserve">
          <source>Open &lt;strong&gt;System variables&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;시스템 변수를&lt;/strong&gt; 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="757c6f3db1547d65787b14af3431cb7082a6fb48" translate="yes" xml:space="preserve">
          <source>Open Automate in a web browser, then select the &lt;em&gt;Client Runs&lt;/em&gt; tab, and finally, select Workflow on the menu on the left.</source>
          <target state="translated">웹 브라우저에서 Automate를 연 다음 &lt;em&gt;클라이언트 실행&lt;/em&gt; 탭 을 선택한 다음 마지막으로 왼쪽 메뉴에서 워크 플로를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c7b915e3281f5c2ed81ad7b48d11ba81b07b344c" translate="yes" xml:space="preserve">
          <source>Open Chef Automate</source>
          <target state="translated">Open Chef Automate</target>
        </trans-unit>
        <trans-unit id="a5cf902f1e8d1057f61c0c5bf2fd5e5de803afa4" translate="yes" xml:space="preserve">
          <source>Open a Zip file</source>
          <target state="translated">Zip 파일 열기</target>
        </trans-unit>
        <trans-unit id="32652f9f6de511520045b0c559567fafd7760398" translate="yes" xml:space="preserve">
          <source>Open a command prompt and change into your &lt;code&gt;chef-repo&lt;/code&gt; directory.</source>
          <target state="translated">명령 프롬프트를 열고 &lt;code&gt;chef-repo&lt;/code&gt; 디렉토리 로 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="d2703e85fee5869d1093bfe0b09cf875fa37169a" translate="yes" xml:space="preserve">
          <source>Open a command prompt by right-clicking on the command prompt application, and then selecting &lt;strong&gt;Run as administrator&lt;/strong&gt;. After the command window opens, Chef Infra Client can be run as the administrator</source>
          <target state="translated">명령 프롬프트 애플리케이션을 마우스 오른쪽 버튼으로 클릭 한 다음 &lt;strong&gt;관리자&lt;/strong&gt; 권한으로 &lt;strong&gt;실행&lt;/strong&gt; 을 선택하여 명령 프롬프트를 엽니 다 . 명령 창이 열리면 Chef Infra Client를 관리자로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2b605ae50c0ed49bf230af407dfdb9715f983a2" translate="yes" xml:space="preserve">
          <source>Open a command prompt by right-clicking on the command prompt application, and then selecting &lt;strong&gt;Run as administrator&lt;/strong&gt;. After the command window opens, the chef-client can be run as the administrator</source>
          <target state="translated">명령 프롬프트 응용 프로그램을 마우스 오른쪽 단추로 클릭 한 후 &lt;strong&gt;관리자로 실행&lt;/strong&gt; 을 선택하여 명령 프롬프트를여십시오 . 명령 창이 열리면 chef-client를 관리자로 실행할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="465e675da4be1f10e2aa556e3d86ad677f7bc992" translate="yes" xml:space="preserve">
          <source>Open a command window and enter the following:</source>
          <target state="translated">명령 창을 열고 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="fd97c490d9b5d910f868108f4599daa14a5df5a4" translate="yes" xml:space="preserve">
          <source>Open a terminal and enter the following:</source>
          <target state="translated">터미널을 열고 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="aa4998ddd9b9a3b6be0bf38228157b691ba465a7" translate="yes" xml:space="preserve">
          <source>Open a terminal window on the Linux box.</source>
          <target state="translated">Linux 상자에서 터미널 창을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="868e41b64901b9fecc7d8cafb74718531e921626" translate="yes" xml:space="preserve">
          <source>Open an Erlang command shell to begin diagnosing service issues on the Chef Infra Server:</source>
          <target state="translated">Erlang 명령 셸을 열어 Chef Infra Server에서 서비스 문제 진단을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="b9526fb1beb08d769202d8a660894f743621e56a" translate="yes" xml:space="preserve">
          <source>Open an Erlang command shell to begin diagnosing service issues on the Chef server:</source>
          <target state="translated">Erlang 명령 쉘을 열어 Chef 서버에서 서비스 문제 진단을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="c2e4a57758b31b5eabaa25c77f2784a7b685dce1" translate="yes" xml:space="preserve">
          <source>Open an interactive debugging shell</source>
          <target state="translated">대화 형 디버깅 셸 열기</target>
        </trans-unit>
        <trans-unit id="29ce92e72a4518c88d4af82bf16532c71e1da7dd" translate="yes" xml:space="preserve">
          <source>Open it and add an entry for each component package that you want to build.</source>
          <target state="translated">그것을 열고 빌드하려는 각 구성 요소 패키지에 대한 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="bb2c5e594d3abe86029f019219c270bf67eddb0c" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;/recipes/default.rb&lt;/code&gt; file and add the following, BEFORE the &lt;code&gt;include_recipe&lt;/code&gt; line that was added in the previous step. This example uses a data bag named &lt;code&gt;apps&lt;/code&gt; and a data bag item named &lt;code&gt;supermarket&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;/recipes/default.rb&lt;/code&gt; 파일을 열고 이전 단계에서 추가 한 &lt;code&gt;include_recipe&lt;/code&gt; 줄 앞에 다음을 추가합니다 . 이 예에서는 &lt;code&gt;apps&lt;/code&gt; 라는 데이터 백과 &lt;code&gt;supermarket&lt;/code&gt; 이라는 데이터 백 항목을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ecd66e72ed044eaf8bda09dc32d04e5546c543b9" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;/recipes/default.rb&lt;/code&gt; recipe located within the newly-generated cookbook and add the following content:</source>
          <target state="translated">새로 생성 된 쿡북에 있는 &lt;code&gt;/recipes/default.rb&lt;/code&gt; 레시피를 열고 다음 콘텐츠를 추가하세요.</target>
        </trans-unit>
        <trans-unit id="7070d74f5f726e771daa41a88a09b117c58f92db" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;config.toml&lt;/code&gt; file and include the external automate configuration settings:</source>
          <target state="translated">&lt;code&gt;config.toml&lt;/code&gt; 파일을 열고 외부 자동화 구성 설정을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4c15d9eab5ac1e5c5909ce5109daf3d8015f0f2e" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;default.rb&lt;/code&gt; recipe in the &lt;code&gt;build-cookbook&lt;/code&gt; and edit it to contain:</source>
          <target state="translated">&lt;code&gt;build-cookbook&lt;/code&gt; 에서 &lt;code&gt;default.rb&lt;/code&gt; 레시피를 열고 다음 을 포함하도록 편집하십시오.</target>
        </trans-unit>
        <trans-unit id="35d10accf5f8b3d3a362fa27aa06762c47f60c19" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;publish.rb&lt;/code&gt; recipe in the &lt;code&gt;build-cookbook&lt;/code&gt; and edit it to contain:</source>
          <target state="translated">&lt;code&gt;build-cookbook&lt;/code&gt; 에서 &lt;code&gt;publish.rb&lt;/code&gt; 레시피를 열고 다음 을 포함하도록 편집하십시오.</target>
        </trans-unit>
        <trans-unit id="65ff387135046137d34df2daff8606d595c8fe66" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;publish.rb&lt;/code&gt; recipe in the &lt;code&gt;build-cookbook&lt;/code&gt; and edit to look like the following:</source>
          <target state="translated">&lt;code&gt;build-cookbook&lt;/code&gt; 에서 &lt;code&gt;publish.rb&lt;/code&gt; 레시피를 열고 다음과 같이 편집합니다.</target>
        </trans-unit>
        <trans-unit id="4e12e721bfecd3d412faa4b4fbd2040b771f6e8e" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;recipes/default.rb&lt;/code&gt; file and add the following, &lt;strong&gt;before&lt;/strong&gt; the &lt;code&gt;include_recipe&lt;/code&gt; line that was added in the previous step. This example uses a data bag named &lt;code&gt;apps&lt;/code&gt; and a data bag item named &lt;code&gt;supermarket&lt;/code&gt;:</source>
          <target state="translated">열기 &lt;code&gt;recipes/default.rb&lt;/code&gt; 파일을하고, 다음을 추가 &lt;strong&gt;하기 전에 &lt;/strong&gt; &lt;code&gt;include_recipe&lt;/code&gt; 의 이전 단계에서 추가 된 라인. 이 예에서는 &lt;code&gt;apps&lt;/code&gt; 라는 데이터 백과 &lt;code&gt;supermarket&lt;/code&gt; 이라는 데이터 백 항목을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="a40cf454e36fce9c8192521b26fb906173aa606c" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;Organizations&lt;/strong&gt; page and select your organization.</source>
          <target state="translated">&lt;strong&gt;조직&lt;/strong&gt; 페이지를 열고 &lt;strong&gt;조직&lt;/strong&gt; 을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="c8b40f931e76bc1cea33cfd43ab92160bca247b2" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;default.rb&lt;/strong&gt; recipe in the &lt;strong&gt;build-cookbook&lt;/strong&gt; and edit it to contain:</source>
          <target state="translated">&lt;strong&gt;build-cookbook&lt;/strong&gt; 에서 &lt;strong&gt;default.rb&lt;/strong&gt; 레시피를 열고 다음 을 포함하도록 편집하십시오.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ee2d3b35d708e3985b4dacd67188b63e5b79e29" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;publish.rb&lt;/strong&gt; recipe in the &lt;strong&gt;build-cookbook&lt;/strong&gt; and edit it to contain:</source>
          <target state="translated">&lt;strong&gt;build-cookbook&lt;/strong&gt; 에서 &lt;strong&gt;publish.rb&lt;/strong&gt; 레시피를 열고 다음 을 포함하도록 편집하십시오.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="246243931831b7924d9ec76a93ca52879f16d136" translate="yes" xml:space="preserve">
          <source>Open the &lt;strong&gt;publish.rb&lt;/strong&gt; recipe in the &lt;strong&gt;build-cookbook&lt;/strong&gt; and edit to look like the following:</source>
          <target state="translated">&lt;strong&gt;build-cookbook&lt;/strong&gt; 에서 &lt;strong&gt;publish.rb&lt;/strong&gt; 레시피를 열고 다음과 같이 편집합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92317df05a65b5e8a8d6da3f9f5cef657ab7b7c9" translate="yes" xml:space="preserve">
          <source>Open the Chef management console.</source>
          <target state="translated">Chef 관리 콘솔을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="ec2eddd63716192890b4ec1a24ebc8609d085578" translate="yes" xml:space="preserve">
          <source>Open the config.rb file in an editor.</source>
          <target state="translated">편집기에서 config.rb 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="240e41732196ca5bb5981d17b717faee98ffae53" translate="yes" xml:space="preserve">
          <source>Open the page for the organization in the Workflow webui, and then click &lt;strong&gt;Add a New Project&lt;/strong&gt;.</source>
          <target state="translated">워크 플로 웹 UI에서 조직의 페이지를 연 다음 &lt;strong&gt;새 프로젝트 추가&lt;/strong&gt; 를 클릭 합니다.</target>
        </trans-unit>
        <trans-unit id="72af3bd670a9886a7a4681c8db38781f29821d62" translate="yes" xml:space="preserve">
          <source>Open the program using the icon on your workstation desktop.</source>
          <target state="translated">워크 스테이션 바탕 화면의 아이콘을 사용하여 프로그램을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="6ded1112f4377196a0e7752a2c7f4f268c7f4eef" translate="yes" xml:space="preserve">
          <source>Open up the newly created &lt;code&gt;chef-server.rb&lt;/code&gt; file in your favorite text editor, for example:</source>
          <target state="translated">좋아하는 텍스트 편집기에서 새로 생성 된 &lt;code&gt;chef-server.rb&lt;/code&gt; 파일을 엽니 다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6781c38861693735ebed16e82a2498ff0cd2df9d" translate="yes" xml:space="preserve">
          <source>Open up the newly created &lt;code&gt;chef-server.rb&lt;/code&gt; file in your favorite text editor.</source>
          <target state="translated">좋아하는 텍스트 편집기에서 새로 만든 &lt;code&gt;chef-server.rb&lt;/code&gt; 파일을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="d345622f25759b22efa3028ba91de801c785ffbe" translate="yes" xml:space="preserve">
          <source>Open your repo in Visual Studio Code. The one key file you will want to manage is the &lt;code&gt;metadata.rb&lt;/code&gt; file. Please take a moment now to add your contact information and enter a starting version number for your cookbook.</source>
          <target state="translated">Visual Studio Code에서 리포지토리를 엽니 다. 관리하려는 핵심 파일은 &lt;code&gt;metadata.rb&lt;/code&gt; 파일입니다. 지금 잠시 시간을내어 연락처 정보를 추가하고 요리 책의 시작 버전 번호를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="9aeb98c5ee3d7158dd0013a1a3d6bcab5a8edbae" translate="yes" xml:space="preserve">
          <source>OpenBSD. All platform variants of OpenBSD return &lt;code&gt;openbsd&lt;/code&gt;.</source>
          <target state="translated">OpenBSD. OpenBSD의 모든 플랫폼 변형은 openbsd를 반환 &lt;code&gt;openbsd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb5daec2d184607d5b6b073b2401fb9b2e3a2ce7" translate="yes" xml:space="preserve">
          <source>OpenID Connect Signing Key</source>
          <target state="translated">OpenID Connect 서명 키</target>
        </trans-unit>
        <trans-unit id="e36643555f5e1dba3357a540e28d6fc80b60da13" translate="yes" xml:space="preserve">
          <source>Operating Chef Habitat Builder</source>
          <target state="translated">Chef Habitat Builder 운영</target>
        </trans-unit>
        <trans-unit id="4951613253401ec9adef9d30a19ce64dbd778dd0" translate="yes" xml:space="preserve">
          <source>Operating Chef Habitat Supervisors remotely is purely optional; you must take positive action to enable this behavior. If you prefer, you can continue to manage Supervisors through on-the-box direct action, as before, and likely without any changes to your current procedures. Read on for further details about how to enable this ability, and how local interaction continues to operate through a new implementation.</source>
          <target state="translated">Chef Habitat Supervisor를 원격으로 운영하는 것은 순전히 선택 사항입니다. 이 동작을 활성화하려면 긍정적 인 조치를 취해야합니다. 원하는 경우 이전과 같이 즉시 사용 가능한 직접 조치를 통해 현재 절차를 변경하지 않고도 감독자를 계속 관리 할 수 ​​있습니다. 이 기능을 활성화하는 방법과 새로운 구현을 통해 로컬 상호 작용이 계속 작동하는 방법에 대한 자세한 내용을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="e5ba86326755952233b0543acced2995e5faf457" translate="yes" xml:space="preserve">
          <source>Operating System</source>
          <target state="translated">운영 체제</target>
        </trans-unit>
        <trans-unit id="5a35209b60ae46982b61db75f9984bec839cc172" translate="yes" xml:space="preserve">
          <source>Operating system</source>
          <target state="translated">운영 체제</target>
        </trans-unit>
        <trans-unit id="b5c85b6d40ff0683b760e041ea3c2df887734e40" translate="yes" xml:space="preserve">
          <source>Operating system reported CPU usage in percent.</source>
          <target state="translated">운영 체제에서 CPU 사용량을 백분율로보고했습니다.</target>
        </trans-unit>
        <trans-unit id="b22d5c83a2a5e7f83e4804698d285232ca0a13b6" translate="yes" xml:space="preserve">
          <source>Operating system requirements:</source>
          <target state="translated">운영 체제 요구 사항 :</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="06e7835c13272e352c85af7b08c6dacc7b10a131" translate="yes" xml:space="preserve">
          <source>Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries.</source>
          <target state="translated">운영자는 모든 CAPS에 있어야합니다. 괄호는 절을 그룹화하고 하위 쿼리를 형성하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f477fb7c6e597e4357aeb6f4ddf179608eadf8f" translate="yes" xml:space="preserve">
          <source>Opting Out of Telemetry</source>
          <target state="translated">원격 분석 옵트 아웃</target>
        </trans-unit>
        <trans-unit id="d3aad595c8a0d752825a0dd3a392108155638636" translate="yes" xml:space="preserve">
          <source>Opting out</source>
          <target state="translated">옵트 아웃</target>
        </trans-unit>
        <trans-unit id="f85852ea2834597290ce3c0d6a48a0b91a7efe93" translate="yes" xml:space="preserve">
          <source>Opting to run a private Supermarket with off-host PostgreSQL, Redis, and cookbook store is less a decision about storage sizing; it is about data service uptime, backup, and restore procedure for your organization</source>
          <target state="translated">오프 호스트 PostgreSQL, Redis 및 요리 책 저장소가있는 개인 슈퍼마켓을 운영하기로 선택하는 것은 스토리지 크기 조정에 대한 결정이 아닙니다. 조직의 데이터 서비스 가동 시간, 백업 및 복원 절차에 관한 것입니다.</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="aab5ebf8cf05eeaa7cf8e2ec8481aaaa322fc156" translate="yes" xml:space="preserve">
          <source>Option Type</source>
          <target state="translated">옵션 종류</target>
        </trans-unit>
        <trans-unit id="74c374a322a7c19cd8aaa4647abb6eb330b891a7" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;String&lt;/code&gt;. Human-meaningful explanation of the input.</source>
          <target state="translated">선택적 &lt;code&gt;String&lt;/code&gt; . 입력에 대한 인간의 의미있는 설명.</target>
        </trans-unit>
        <trans-unit id="660fb2435ec574695f7d93cb93685e393eb52f7f" translate="yes" xml:space="preserve">
          <source>Optional Interfaces</source>
          <target state="translated">선택적 인터페이스</target>
        </trans-unit>
        <trans-unit id="9a602bc47f9ebecbd0bf105812c6248180c7df27" translate="yes" xml:space="preserve">
          <source>Optional Ohai plugins that should be enabled to provide additional Ohai data for use in cookbooks.</source>
          <target state="translated">요리 책에서 사용할 추가 Ohai 데이터를 제공하기 위해 활성화해야하는 선택적 Ohai 플러그인입니다.</target>
        </trans-unit>
        <trans-unit id="ec41caca02a384d940928e524ea1ff1215c94bfa" translate="yes" xml:space="preserve">
          <source>Optional Plugins</source>
          <target state="translated">선택적 플러그인</target>
        </trans-unit>
        <trans-unit id="32e584ba04f2e20fef469c54b6487581e423010b" translate="yes" xml:space="preserve">
          <source>Optional S3 base path prefix. This is used if you wish to store Chef Automate Elasticsearch snapshots in a nested path in the S3 bucket. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">선택적 S3 기본 경로 접두사. S3 버킷의 중첩 경로에 Chef Automate Elasticsearch 스냅 샷을 저장하려는 경우 사용됩니다. 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bc5d1bad123e965b5d98d4cfa50e2679be15fe1" translate="yes" xml:space="preserve">
          <source>Optional S3 base path prefix. This is used if you wish to store Chef Automate backup archives in a nested path in the S3 bucket. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">선택적 S3 기본 경로 접두사. S3 버킷의 중첩 경로에 Chef Automate 백업 아카이브를 저장하려는 경우 사용됩니다. 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="111160aa0d3d16636bd28cf90b8f53772181bd6e" translate="yes" xml:space="preserve">
          <source>Optional Services Tuning</source>
          <target state="translated">선택적 서비스 튜닝</target>
        </trans-unit>
        <trans-unit id="39fb394c58f8666025a8b1ff70de7e4a8e65e1e6" translate="yes" xml:space="preserve">
          <source>Optional Settings</source>
          <target state="translated">선택적 설정</target>
        </trans-unit>
        <trans-unit id="71d7fcf8b7d2ec437f0b0166a2211349dc030c8b" translate="yes" xml:space="preserve">
          <source>Optional authentication password when contacting the proxy server.</source>
          <target state="translated">프록시 서버에 연결할 때 선택적 인증 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="f6667fb810ddee6f49af78c91b00a3d05499b86a" translate="yes" xml:space="preserve">
          <source>Optional authentication user name when contacting the proxy server.</source>
          <target state="translated">프록시 서버에 연결할 때 선택적 인증 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8356d1e42ff0cb21dd795a0b71952fbd57969751" translate="yes" xml:space="preserve">
          <source>Optional channel to use when installing packages from the depot</source>
          <target state="translated">저장소에서 패키지를 설치할 때 사용할 선택적 채널</target>
        </trans-unit>
        <trans-unit id="393bb94cb06c0a743cb02d1133b873bffc771b41" translate="yes" xml:space="preserve">
          <source>Optional config file to use</source>
          <target state="translated">사용할 선택적 구성 파일</target>
        </trans-unit>
        <trans-unit id="a4d11f12cca38816bbdbc7a1dc39258d2056f968" translate="yes" xml:space="preserve">
          <source>Optional descriptor for the printer queue.</source>
          <target state="translated">프린터 대기열에 대한 선택적 설명자입니다.</target>
        </trans-unit>
        <trans-unit id="69b9f72c953b31db112de67761c18eaac2a6676a" translate="yes" xml:space="preserve">
          <source>Optional field used to identify cidr blocks</source>
          <target state="translated">cidr 블록을 식별하는 데 사용되는 선택적 필드</target>
        </trans-unit>
        <trans-unit id="08d691aa2446c1c4d41d5eb8505a8bade71f653b" translate="yes" xml:space="preserve">
          <source>Optional fields</source>
          <target state="translated">선택 필드</target>
        </trans-unit>
        <trans-unit id="b7a28a52488f521cdc272b0f5ba782a81f0ae8b5" translate="yes" xml:space="preserve">
          <source>Optional plugins can be enabled in the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb 구성 파일&lt;/a&gt; 에서 선택적 플러그인을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db0c2d0fd430d5df4590292d7126828dd41925cd" translate="yes" xml:space="preserve">
          <source>Optional plugins can be enabled in the &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb 구성 파일&lt;/a&gt; 에서 선택적 플러그인을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8bbf0c7e1ac9e7fd5b0360e0ff4e8ab1e2ba6be5" translate="yes" xml:space="preserve">
          <source>Optional setting when using &lt;code&gt;download_url&lt;/code&gt;. Validates SHA256 checksum after download.</source>
          <target state="translated">&lt;code&gt;download_url&lt;/code&gt; 을 사용하는 경우 선택적 설정 입니다. 다운로드 후 SHA256 체크섬을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="559d19314a01d152d5ffc5f178fb79b71e2e948f" translate="yes" xml:space="preserve">
          <source>Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.</source>
          <target state="translated">이 별칭 IP 범위에 IP CIDR 범위를 할당 할 보조 범위를 지정하는 선택적 서브 네트워크 보조 범위 이름입니다. 지정하지 않으면 서브 네트워크의 기본 범위가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8eda8dd7fc61271d8b289575c669233ae87d21c3" translate="yes" xml:space="preserve">
          <source>Optional subnetwork to which all network endpoints in the NEG belong.</source>
          <target state="translated">NEG의 모든 네트워크 엔드 포인트가 속하는 선택적 서브 네트워크입니다.</target>
        </trans-unit>
        <trans-unit id="35d12eac607c46226c2a0d801491c633870c4038" translate="yes" xml:space="preserve">
          <source>Optional timeout for Chef Automate v1 PostgreSQL dump (0 to disable timeout) (default: 0)</source>
          <target state="translated">Chef Automate v1 PostgreSQL 덤프에 대한 선택적 시간 제한 (시간 제한을 비활성화하려면 0) (기본값 : 0)</target>
        </trans-unit>
        <trans-unit id="c51b9fcb9ad844f167d007ca8b5e0494d4a24532" translate="yes" xml:space="preserve">
          <source>Optional timeout for Chef Automate v1 PostgreSQL restore (0 to disable timeout) (default: 0)</source>
          <target state="translated">Chef Automate v1 PostgreSQL 복원에 대한 선택적 제한 시간 (시간 제한을 비활성화하려면 0) (기본값 : 0)</target>
        </trans-unit>
        <trans-unit id="308fc55ccb0ab2cfd5c089671661f79657eaf1cb" translate="yes" xml:space="preserve">
          <source>Optional timeout for moving elasticsearch, compliance, and notifications files during Chef Automate v1 migration (0 to disable timeout) (default: 0)</source>
          <target state="translated">Chef Automate v1 마이그레이션 중 elasticsearch, 규정 준수 및 알림 파일 이동을위한 선택적 제한 시간 (시간 제한을 비활성화하려면 0) (기본값 : 0)</target>
        </trans-unit>
        <trans-unit id="7509db34de90e3d0fd3b51cf299abe0c9ffac18e" translate="yes" xml:space="preserve">
          <source>Optional upgrade strategy to use when configuring the deployment service</source>
          <target state="translated">배치 서비스를 구성 할 때 사용할 선택적 업그레이드 전략</target>
        </trans-unit>
        <trans-unit id="93cf6a183b3fc31fb03c22e6141db3a50fd230fb" translate="yes" xml:space="preserve">
          <source>Optional when &lt;code&gt;postgresql['external']&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. The port on which the service is to listen. The port used by PostgreSQL if that port is &lt;strong&gt;not&lt;/strong&gt; 5432. Default value: &lt;code&gt;5432&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;postgresql['external']&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 선택 사항 입니다 . 서비스가 수신 할 포트입니다. 해당 포트가 &lt;code&gt;5432&lt;/code&gt; 가 &lt;strong&gt;아닌&lt;/strong&gt; 경우 PostgreSQL에서 사용하는 포트입니다 . 기본값 : 5432 .</target>
        </trans-unit>
        <trans-unit id="12c2e9210b8afec83037f0222caeda4142c53a09" translate="yes" xml:space="preserve">
          <source>Optional, &lt;code&gt;Integer&lt;/code&gt;, 0-100. Higher values make this assignment have higher precedence. This is an advanced feature.</source>
          <target state="translated">선택 사항, &lt;code&gt;Integer&lt;/code&gt; , 0-100. 값이 높을수록이 할당의 우선 순위가 높아집니다. 이것은 고급 기능입니다.</target>
        </trans-unit>
        <trans-unit id="50169cc0366dbc3be2570615a42b46f0edac9020" translate="yes" xml:space="preserve">
          <source>Optional, &lt;code&gt;String&lt;/code&gt;. Allows you to set an input in another profile from your profile.</source>
          <target state="translated">선택 사항, &lt;code&gt;String&lt;/code&gt; . 프로필의 다른 프로필에 입력을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c8ff9569ee910c483c39ca99f307fd3e31fbf26" translate="yes" xml:space="preserve">
          <source>Optional, &lt;code&gt;String&lt;/code&gt;. This value must be one of &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Numeric&lt;/code&gt;, &lt;code&gt;Regexp&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, or &lt;code&gt;Any&lt;/code&gt;. If provided, the value of the input will be checked to see if it is of the corresponding type. Note that &lt;code&gt;Regexp&lt;/code&gt; indicates that the input value itself should be a regular expression, not that it should match any particular regular expression.</source>
          <target state="translated">선택 사항, &lt;code&gt;String&lt;/code&gt; . 이 값은 &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Numeric&lt;/code&gt; , &lt;code&gt;Regexp&lt;/code&gt; , &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Hash&lt;/code&gt; , &lt;code&gt;Boolean&lt;/code&gt; 또는 &lt;code&gt;Any&lt;/code&gt; 중 하나 여야합니다 . 제공된 경우 입력 값이 해당 유형인지 확인하기 위해 확인됩니다. 참고 &lt;code&gt;Regexp&lt;/code&gt; 입력 값 자체가 특정 정규 표현식과 일치해야하지 않는 것이, 정규 표현식해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8112e326c540efe46b543cc984cfa6d0374ca875" translate="yes" xml:space="preserve">
          <source>Optional, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, a control using the input will be failed if it &lt;a href=&quot;#reading-inputs-in-control-dsl&quot;&gt;reads&lt;/a&gt; the value when none has been set.</source>
          <target state="translated">선택 사항, &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; . 경우 &lt;code&gt;true&lt;/code&gt; 이있는 경우, 입력을 사용하여 제어 실패한다 &lt;a href=&quot;#reading-inputs-in-control-dsl&quot;&gt;읽고&lt;/a&gt; 아무것도 설정되어 있지 않은 값을.</target>
        </trans-unit>
        <trans-unit id="abe4f8238d8ba9bc6843165fe599e90d46840caa" translate="yes" xml:space="preserve">
          <source>Optional, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, the value of the input will be used normally during the &lt;code&gt;exec&lt;/code&gt; run, but the value will be obscured as &amp;ldquo;***&amp;rdquo; in the &amp;ldquo;inputs&amp;rdquo; or &amp;ldquo;attributes&amp;rdquo; section of any &lt;a href=&quot;../reporters/index&quot;&gt;Reporter&lt;/a&gt; that explicitly lists inputs (the &lt;code&gt;json&lt;/code&gt; reporter is one such reporter). Note that this will not obscure input values that are used as test results.</source>
          <target state="translated">선택 사항, &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; . 경우 &lt;code&gt;true&lt;/code&gt; , 입력의 값은시 일반적으로 사용됩니다 &lt;code&gt;exec&lt;/code&gt; 실행하지만, 값이 &quot;입력&quot;의 &quot;***&quot;로 가려 또는의 &quot;속성&quot;섹션됩니다 &lt;a href=&quot;../reporters/index&quot;&gt;리포터&lt;/a&gt; 가 명시 적으로 목록을 입력합니다 ( &lt;code&gt;json&lt;/code&gt; 기자 기자). 이것은 테스트 결과로 사용되는 입력 값을 모호하게하지 않습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
