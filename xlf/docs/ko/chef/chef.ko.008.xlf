<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="5a8a41031cd6e880ddcfb0d9ea4c8826ff073d7e" translate="yes" xml:space="preserve">
          <source>Any other attribute type that is contained in this JSON file will be treated as a &lt;code&gt;normal&lt;/code&gt; attribute. Setting attributes at other precedence levels is not possible. For example, attempting to update &lt;code&gt;override&lt;/code&gt; attributes using the &lt;code&gt;-j&lt;/code&gt; option:</source>
          <target state="translated">이 JSON 파일에 포함 된 다른 속성 유형은 &lt;code&gt;normal&lt;/code&gt; 속성 으로 처리됩니다 . 다른 우선 순위 수준에서 속성을 설정할 수 없습니다. 예를 들어, &lt;code&gt;-j&lt;/code&gt; 옵션을 사용하여 &lt;code&gt;override&lt;/code&gt; 속성 을 업데이트하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="46e237dba5cade2d95af3ff178bd70afcb11ac79" translate="yes" xml:space="preserve">
          <source>Any other git options are valid for a GitHub location.</source>
          <target state="translated">다른 모든 git 옵션은 GitHub 위치에 유효합니다.</target>
        </trans-unit>
        <trans-unit id="bacf4f6d54719c827f4e035bda38a4f04e8b5a37" translate="yes" xml:space="preserve">
          <source>Any physical violence &lt;em&gt;or&lt;/em&gt; intimidation, threatened or acted on, is a serious offense and will result in immediate exclusion from the community and appropriate follow up with law enforcement. No, we are not kidding.</source>
          <target state="translated">모든 신체적 폭력 &lt;em&gt;이나&lt;/em&gt; 협박은 위협을 받거나 그에 따라 행동하는 심각한 범죄이며 커뮤니티에서 즉시 배제되고 법 집행 기관에 적절한 후속 조치를 취하게됩니다. 아니요, 농담이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e3b76cfb89df218c0ce752c76bcf9c0d1a99d829" translate="yes" xml:space="preserve">
          <source>Any platforms or versions not explicitly listed here are unsupported, both commercially and by the community.</source>
          <target state="translated">여기에 명시 적으로 나열되지 않은 플랫폼이나 버전은 상업적으로나 커뮤니티에서 모두 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d743f05ef4e34f0264cab6fb0884e07852dd2280" translate="yes" xml:space="preserve">
          <source>Any project configured to use runners will not use Push Jobs as the transport mechanism for managing the phase builds (unit, lint, provision, etc.). Push Jobs is still required to execute the delivery_push_job resource that the delivery-sugar cookbook exposes. This means that if you use the default &lt;a href=&quot;https://github.com/chef-cookbooks/delivery-truck/blob/b9e386e720376f7f3173ca03311cba667eb7ef4b/recipes/deploy.rb&quot;&gt;deploy.rb&lt;/a&gt; recipe from delivery-truck, then Push Jobs is still used within the deploy phase.</source>
          <target state="translated">실행기를 사용하도록 구성된 모든 프로젝트는 단계 빌드 (단위, Lint, 프로비저닝 등)를 관리하기위한 전송 메커니즘으로 푸시 작업을 사용하지 않습니다. delivery-sugar 요리 책이 노출하는 delivery_push_job 리소스를 실행하려면 푸시 작업이 여전히 필요합니다. 즉 , delivery-truck 의 기본 &lt;a href=&quot;https://github.com/chef-cookbooks/delivery-truck/blob/b9e386e720376f7f3173ca03311cba667eb7ef4b/recipes/deploy.rb&quot;&gt;deploy.rb&lt;/a&gt; 레시피 를 사용하는 경우 배포 단계 내에서 푸시 작업이 계속 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1a6e49dce63d1120044a72a91d072b2c9219be57" translate="yes" xml:space="preserve">
          <source>Any properties that are marked &lt;code&gt;identity: true&lt;/code&gt; or &lt;code&gt;desired_state: false&lt;/code&gt; will be available from &lt;code&gt;load_current_value&lt;/code&gt;. If access to other properties of a resource is needed, use a block argument that contains all of the properties of the requested resource. For example:</source>
          <target state="translated">&lt;code&gt;identity: true&lt;/code&gt; 로 표시되는 모든 속성 ( true 또는 &lt;code&gt;desired_state: false&lt;/code&gt; 은 &lt;code&gt;load_current_value&lt;/code&gt; 에서 사용할 수 있습니다 . 자원의 다른 특성에 액세스해야하는 경우 요청 된 자원의 모든 특성을 포함하는 블록 인수를 사용하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e375ddb3d0caecdb64b173f3a18214abbe27595f" translate="yes" xml:space="preserve">
          <source>Any properties that are marked &lt;code&gt;identity: true&lt;/code&gt;, &lt;code&gt;desired_state: false&lt;/code&gt;, or &lt;code&gt;name_property: true&lt;/code&gt; will be directly available from &lt;code&gt;load_current_value&lt;/code&gt;. If access to other properties of a resource is needed, use a block argument with load_current_value. The block argument will have the values of the requested resource. For example:</source>
          <target state="translated">&lt;code&gt;identity: true&lt;/code&gt; , &lt;code&gt;desired_state: false&lt;/code&gt; 또는 &lt;code&gt;name_property: true&lt;/code&gt; 로 표시된 모든 속성 은 &lt;code&gt;load_current_value&lt;/code&gt; 에서 직접 사용할 수 있습니다 . 리소스의 다른 속성에 액세스해야하는 경우 load_current_value와 함께 블록 인수를 사용합니다. block 인수는 요청 된 리소스의 값을 갖습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="7b922fed9c894f1c640057d0f0b4093d66a4f035" translate="yes" xml:space="preserve">
          <source>Any recipes using the &lt;code&gt;git-deploy&lt;/code&gt; gem can continue using the same API. To include this behavior in a recipe, do something like the following:</source>
          <target state="translated">&lt;code&gt;git-deploy&lt;/code&gt; gem을 사용하는 모든 레시피 는 동일한 API를 계속 사용할 수 있습니다. 레시피에이 동작을 포함 시키려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="37a21bccbc92efa566429468a2c33b20e8bc9172" translate="yes" xml:space="preserve">
          <source>Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the &lt;code&gt;guard_interpreter&lt;/code&gt; property to specify a &lt;strong&gt;script&lt;/strong&gt;-based resource.</source>
          <target state="translated">문자열 명령을 전달하는 모든 리소스는 해당 문자열 명령을 평가하는 데 사용될 해석기를 지정할 수도 있습니다. 이것은 사용하여 수행됩니다 &lt;code&gt;guard_interpreter&lt;/code&gt; 의 지정 속성을 &lt;strong&gt;스크립트&lt;/strong&gt; 기반 자원을.</target>
        </trans-unit>
        <trans-unit id="a810b7a972980f54dbe8011f9f8cc32da5278bad" translate="yes" xml:space="preserve">
          <source>Any roles that are present in the node&amp;rsquo;s run-list or recursively included by those roles</source>
          <target state="translated">노드의 실행 목록에 있거나 해당 역할에 반복적으로 포함 된 모든 역할</target>
        </trans-unit>
        <trans-unit id="e9a208bd86dee2a16c158fbe3c611526d475420e" translate="yes" xml:space="preserve">
          <source>Any run of &lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; will ensure the key exists and is stored without any additional steps.</source>
          <target state="translated">&lt;code&gt;chef-server-ctl reconfigure&lt;/code&gt; 를 실행 하면 키가 존재하고 추가 단계없이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="657852794d1af86c6c92c73f3b44d2a018e5b475" translate="yes" xml:space="preserve">
          <source>Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use knife to search within a data bag named &amp;ldquo;admin_data&amp;rdquo; across all items, except for the &amp;ldquo;admin_users&amp;rdquo; item, enter the following:</source>
          <target state="translated">데이터 백 (또는 데이터 백 항목)을 검색 할 때는 데이터 백의 이름을 지정한 다음 검색 중에 사용될 검색어 문자열을 제공해야합니다. 예를 들어, 나이프를 사용하여&amp;ldquo;admin_users&amp;rdquo;항목을 제외한 모든 항목에서&amp;ldquo;admin_data&amp;rdquo;라는 데이터 백 내에서 검색하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="925373bd428ea2369b32954d6eb99acc1d7259b3" translate="yes" xml:space="preserve">
          <source>Any tags assigned to the route table.</source>
          <target state="translated">라우팅 테이블에 할당 된 모든 태그.</target>
        </trans-unit>
        <trans-unit id="c99beb4ffb35194a8fca62377ccbf19b348f2098" translate="yes" xml:space="preserve">
          <source>Any valid &lt;code&gt;wget&lt;/code&gt; URL will work.</source>
          <target state="translated">모든 유효한 &lt;code&gt;wget&lt;/code&gt; URL이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c39a68b07bd4be237a1f3124f490ace970077e64" translate="yes" xml:space="preserve">
          <source>Any virtual private gateway (VGW) propagating routes.</source>
          <target state="translated">가상 프라이빗 게이트웨이 (VGW) 전파 경로.</target>
        </trans-unit>
        <trans-unit id="24e0483517ac44396ece43fe809bc1c9cee64498" translate="yes" xml:space="preserve">
          <source>Anyone can find and use public packages</source>
          <target state="translated">누구나 공개 패키지를 찾고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff6fa097c038f5ab29c8c1a23a621018b38db45b" translate="yes" xml:space="preserve">
          <source>Anyone who is asked to stop unacceptable behavior is expected to comply immediately.</source>
          <target state="translated">용납 할 수없는 행동을 중단하라는 요청을받은 사람은 즉시이를 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="5269a468e70bc4d1896a8572169eb130c72e2ca4" translate="yes" xml:space="preserve">
          <source>Anything that can be done with Ruby can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In Ruby, the conditionals &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are false; every other conditional is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Ruby로 수행 할 수있는 모든 것은 표현식 (if, if 등), case 문, loop 문, 배열, 해시 및 변수와 같은 레시피 내에서 사용될 수 있습니다. Ruby에서 조건부 &lt;code&gt;nil&lt;/code&gt; 과 &lt;code&gt;false&lt;/code&gt; 는 false입니다. 다른 모든 조건은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6b5eb5323ebdf9967a47d00f6cd95e50c095cb54" translate="yes" xml:space="preserve">
          <source>Apache 2.0</source>
          <target state="translated">Apache 2.0</target>
        </trans-unit>
        <trans-unit id="f64224c20bb2a6d06fed4766f55344f934934dbd" translate="yes" xml:space="preserve">
          <source>Apache Mesos and DC/OS</source>
          <target state="translated">Apache Mesos 및 DC / OS</target>
        </trans-unit>
        <trans-unit id="327347ee8d3a0f9bb3a74835ec6a91f7a545513b" translate="yes" xml:space="preserve">
          <source>Apache Qpid</source>
          <target state="translated">아파치 Qpid</target>
        </trans-unit>
        <trans-unit id="b6be50237f89783f0620e526091e23959d03f3a9" translate="yes" xml:space="preserve">
          <source>Apache Solr</source>
          <target state="translated">아파치 솔러</target>
        </trans-unit>
        <trans-unit id="12a17ac8ef7d7f0a155b4e32aff84a8259a6063e" translate="yes" xml:space="preserve">
          <source>App Engine HTTP target. If the job providers a App Engine HTTP target the cron will send a request to the service instance</source>
          <target state="translated">App Engine HTTP 대상. 작업 공급자가 App Engine HTTP를 대상으로하는 경우 크론은 서비스 인스턴스에 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="ba5ab6fdfd42f7df14b8868bb8cf4a1e672f99c0" translate="yes" xml:space="preserve">
          <source>App Engine Routing setting for the job.</source>
          <target state="translated">작업에 대한 App Engine 라우팅 설정입니다.</target>
        </trans-unit>
        <trans-unit id="a38a75e2384ffe73d95f351f5bb12326e8d90722" translate="yes" xml:space="preserve">
          <source>App instance. By default, the job is sent to an instance which is available when the job is attempted.</source>
          <target state="translated">앱 인스턴스. 기본적으로 작업은 작업을 시도 할 때 사용할 수있는 인스턴스로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="336ae345f0b54116cd7c0a8f6c6dacb9c8b16db8" translate="yes" xml:space="preserve">
          <source>App service. By default, the job is sent to the service which is the default service when the job is attempted.</source>
          <target state="translated">앱 서비스. 기본적으로 작업이 시도 될 때 기본 서비스 인 서비스로 작업이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="8ffc989d5d5428448c94dc085ebd76d684df88d0" translate="yes" xml:space="preserve">
          <source>App version. By default, the job is sent to the version which is the default version when the job is attempted.</source>
          <target state="translated">앱 버전. 기본적으로 작업은 작업을 시도 할 때 기본 버전 인 버전으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="da0d2a08b8d6882ddbddbaa18b1a2b8662628ed6" translate="yes" xml:space="preserve">
          <source>App whitelisting indicates if adaptive application controls are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">앱 화이트리스트는 적응 형 애플리케이션 제어가 활성화되었는지 여부를 나타냅니다 ( &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d04af15aa636a70a5023c30a71d4c7f5c9238e3b" translate="yes" xml:space="preserve">
          <source>AppArmor</source>
          <target state="translated">AppArmor</target>
        </trans-unit>
        <trans-unit id="76ba367a2d37e08c7a76a64a713d5341157c3543" translate="yes" xml:space="preserve">
          <source>Append cookbook versions to cookbooks. Set to &lt;code&gt;false&lt;/code&gt; to hide cookbook versions: &lt;code&gt;cookbooks/apache&lt;/code&gt;. Set to &lt;code&gt;true&lt;/code&gt; to show cookbook versions: &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; and/or &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt;. When this setting is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;knife download&lt;/code&gt; downloads ALL cookbook versions, which can be useful if a full-fidelity backup of data on the Chef Infra Server is required. For example:</source>
          <target state="translated">요리 책 버전을 요리 책에 추가합니다. 쿡북 버전을 숨기려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 : &lt;code&gt;cookbooks/apache&lt;/code&gt; . 쿡북 버전을 표시 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 : &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; 및 / 또는 &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt; . 이 설정이 &lt;code&gt;true&lt;/code&gt; 이면 &lt;code&gt;knife download&lt;/code&gt; 모든 요리 책 버전을 다운로드하므로 Chef Infra Server에서 데이터의 완전 충실도 백업이 필요한 경우 유용 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="ea938c5647f2489ca5e54a6d6b5fe26f12baae6d" translate="yes" xml:space="preserve">
          <source>Append cookbook versions to cookbooks. Set to &lt;code&gt;false&lt;/code&gt; to hide cookbook versions: &lt;code&gt;cookbooks/apache&lt;/code&gt;. Set to &lt;code&gt;true&lt;/code&gt; to show cookbook versions: &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; and/or &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt;. When this setting is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;knife download&lt;/code&gt; downloads ALL cookbook versions, which can be useful if a full-fidelity backup of data on the Chef server is required. For example:</source>
          <target state="translated">요리 책 버전을 요리 책에 추가하십시오. 요리 책 버전을 숨기려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 : &lt;code&gt;cookbooks/apache&lt;/code&gt; . &lt;code&gt;cookbooks/apache-1.0.0&lt;/code&gt; 및 / 또는 &lt;code&gt;cookbooks/apache-1.0.1&lt;/code&gt; 요리법 버전을 표시 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 이 설정이 &lt;code&gt;true&lt;/code&gt; 이면 , &lt;code&gt;knife download&lt;/code&gt; 모든 요리 책 버전을 다운로드하며, Chef 서버에서 데이터의 전체 충실도 백업이 필요한 경우 유용 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a3a930ee9fa443f44bf0b63d2fd2b2b229fc4b41" translate="yes" xml:space="preserve">
          <source>Append to the log file instead of overwriting the log file on each run.</source>
          <target state="translated">실행할 때마다 로그 파일을 덮어 쓰는 대신 로그 파일에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="002d1acd04eb03151ec0da84016d3b7f00295bbc" translate="yes" xml:space="preserve">
          <source>Append users to groups</source>
          <target state="translated">그룹에 사용자 추가</target>
        </trans-unit>
        <trans-unit id="3f629807aac35bae09fba9db8b521354344f18e7" translate="yes" xml:space="preserve">
          <source>Appending Test Kitchen to the RubyGems file, .gitignore, and .thor</source>
          <target state="translated">RubyGems 파일, .gitignore 및 .thor에 Test Kitchen 추가</target>
        </trans-unit>
        <trans-unit id="13a3b31c4b05dead96f8104cca3f4e7206e10b86" translate="yes" xml:space="preserve">
          <source>Apple Enterprise Developer Account</source>
          <target state="translated">Apple Enterprise 개발자 계정</target>
        </trans-unit>
        <trans-unit id="7136e3fbdb8393932c4285ff6980427720d76f69" translate="yes" xml:space="preserve">
          <source>Apple XCode is installed on machines running Mac OS X; this application can be downloaded from Apple for free</source>
          <target state="translated">Apple XCode는 Mac OS X을 실행하는 컴퓨터에 설치됩니다. 이 응용 프로그램은 Apple에서 무료로 다운로드 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2e3e2dc172b2e4a5456b7652f108e1dcb1b26adb" translate="yes" xml:space="preserve">
          <source>Apple generally supports the last three macOS releases, for example: 10.14, 10.15, and 11.0. Apple does not officially publish EOL dates.</source>
          <target state="translated">Apple은 일반적으로 마지막 세 가지 macOS 릴리스 (예 : 10.14, 10.15 및 11.0)를 지원합니다. Apple은 공식적으로 EOL 날짜를 게시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dab2aff3745bc607a93adda2d0bf2c8d0c29fb2d" translate="yes" xml:space="preserve">
          <source>Apple macOS</source>
          <target state="translated">애플 macOS</target>
        </trans-unit>
        <trans-unit id="a1b0679ee59fc8ebc116caa5ae5fa2ad491cd8b2" translate="yes" xml:space="preserve">
          <source>Apple macOS 10.13</source>
          <target state="translated">Apple macOS 10.13</target>
        </trans-unit>
        <trans-unit id="e3cbc636ca9cdcf4d142d0be15090b9e7d14ab8a" translate="yes" xml:space="preserve">
          <source>Apple macOS SLA</source>
          <target state="translated">Apple macOS SLA</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="524dbe4bae007b1b968c60cbd91a98094a28e18b" translate="yes" xml:space="preserve">
          <source>Application Checks</source>
          <target state="translated">응용 프로그램 확인</target>
        </trans-unit>
        <trans-unit id="1e5923dbf7ac1700cd14a544ce596f34bb876f0b" translate="yes" xml:space="preserve">
          <source>Application Lifecycle Hooks</source>
          <target state="translated">애플리케이션 라이프 사이클 후크</target>
        </trans-unit>
        <trans-unit id="3252c8dd86809c12991ca3ce9c641976809cb4ca" translate="yes" xml:space="preserve">
          <source>Application Properties</source>
          <target state="translated">응용 프로그램 속성</target>
        </trans-unit>
        <trans-unit id="e0f3bc4d7f54ea60e87752a3830746c1cd457816" translate="yes" xml:space="preserve">
          <source>Application Rebuild Flow</source>
          <target state="translated">애플리케이션 재 구축 흐름</target>
        </trans-unit>
        <trans-unit id="7f97e4616b36343fb454813ae885c0cb61aa730a" translate="yes" xml:space="preserve">
          <source>Application logs are created by the services directly, and may require log rotation policies to be applied based on organizational goals and the platform(s) on which the services are running.</source>
          <target state="translated">응용 프로그램 로그는 서비스에서 직접 생성되며 조직 목표와 서비스가 실행되는 플랫폼을 기반으로 로그 순환 정책을 적용해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aba8ab4d648e4bcbf488363787b80204ea1f64df" translate="yes" xml:space="preserve">
          <source>Application management to deploy and manage apps that you care about</source>
          <target state="translated">관심있는 앱을 배포하고 관리하기위한 애플리케이션 관리</target>
        </trans-unit>
        <trans-unit id="0b54a95ce06000d3a3d1e0eae4f70eb9fd2f6909" translate="yes" xml:space="preserve">
          <source>Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating.</source>
          <target state="translated">충분한 디스크 공간, 충분한 메모리 및 프론트 엔드 및 백엔드 서비스가 통신 중인지 확인하기 위해 애플리케이션 레벨 점검을 주기적으로 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="76c74bd071dd73f01696fddbbffc77712a479faf" translate="yes" xml:space="preserve">
          <source>Applications</source>
          <target state="translated">Applications</target>
        </trans-unit>
        <trans-unit id="59a6b4469e2ac1b54e66557342a8e61c4fc588fd" translate="yes" xml:space="preserve">
          <source>Applications Dashboard</source>
          <target state="translated">애플리케이션 대시 보드</target>
        </trans-unit>
        <trans-unit id="84d9e3da1063e538e3e3210801c3d5b5c11d341e" translate="yes" xml:space="preserve">
          <source>Applications have two types of dependencies: buildtime and runtime.</source>
          <target state="translated">애플리케이션에는 빌드 시간과 런타임의 두 가지 종속성 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ea69eaf79f52cfb0431900b82334d1da43d4912" translate="yes" xml:space="preserve">
          <source>Applies to Version</source>
          <target state="translated">버전에 적용</target>
        </trans-unit>
        <trans-unit id="66f47502aaf6f028ce030611298b01162b5fc43b" translate="yes" xml:space="preserve">
          <source>Applies to parameters that reference information in other AWS services.</source>
          <target state="translated">다른 AWS 서비스의 정보를 참조하는 파라미터에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="f5157f6e3179761d7037aa0bae91c433a85cd999" translate="yes" xml:space="preserve">
          <source>Apply Chef Automate license</source>
          <target state="translated">Chef Automate 라이선스 적용</target>
        </trans-unit>
        <trans-unit id="4fd8eb69a45c82d422f775dc3fbe628d15fc9491" translate="yes" xml:space="preserve">
          <source>Apply Chef Automate license token. - &amp;lt;LICENSE&amp;gt; must be valid encoded license string</source>
          <target state="translated">Chef Automate 라이선스 토큰을 적용합니다. -&amp;lt;LICENSE&amp;gt;는 유효한 인코딩 라이선스 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="1d98ef7b1d21f6d3173da77516bfc24efea19095" translate="yes" xml:space="preserve">
          <source>Apply Configuration Changes</source>
          <target state="translated">구성 변경 사항 적용</target>
        </trans-unit>
        <trans-unit id="8adb161be26b1291d6882f30b7718853e5787d03" translate="yes" xml:space="preserve">
          <source>Apply Configuration Updates to all Services in a Service Group</source>
          <target state="translated">서비스 그룹의 모든 서비스에 구성 업데이트 적용</target>
        </trans-unit>
        <trans-unit id="6ede39585ba3d3eec47c9580c9e29686cad08c88" translate="yes" xml:space="preserve">
          <source>Apply Configuration Updates to an Individual Service</source>
          <target state="translated">개별 서비스에 구성 업데이트 적용</target>
        </trans-unit>
        <trans-unit id="9a4b1c00a35ecaba39032e651d7077abcc7d193e" translate="yes" xml:space="preserve">
          <source>Apply a Resource to a Single Node over SSH</source>
          <target state="translated">SSH를 통해 단일 노드에 리소스 적용</target>
        </trans-unit>
        <trans-unit id="d74ac94e890fa23d21840d2fe95a771e36005bca" translate="yes" xml:space="preserve">
          <source>Apply a partial Chef Automate configuration to the deployment. It will take the partial configuration, merge it with the existing configuration, and apply and required changes.</source>
          <target state="translated">부분 Chef Automate 구성을 배포에 적용합니다. 부분 구성을 가져 와서 기존 구성과 병합하고 필요한 변경 사항을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="30cf06a6812e8f7c38b58a548b73ec7a613b2003" translate="yes" xml:space="preserve">
          <source>Apply a predefined set of default object access controls to this bucket. Acceptable values are: - &amp;ldquo;authenticatedRead&amp;rdquo;: Object owner gets OWNER access, and allAuthenticatedUsers get READER access. - &amp;ldquo;bucketOwnerFullControl&amp;rdquo;: Object owner gets OWNER access, and project team owners get OWNER access. - &amp;ldquo;bucketOwnerRead&amp;rdquo;: Object owner gets OWNER access, and project team owners get READER access. - &amp;ldquo;private&amp;rdquo;: Object owner gets OWNER access. - &amp;ldquo;projectPrivate&amp;rdquo;: Object owner gets OWNER access, and project team members get access according to their roles. - &amp;ldquo;publicRead&amp;rdquo;: Object owner gets OWNER access, and allUsers get READER access.</source>
          <target state="translated">이 버킷에 사전 정의 된 기본 객체 액세스 제어 세트를 적용합니다. 허용되는 값은 다음과 같습니다.- &quot;authenticatedRead&quot;: 개체 소유자가 OWNER 액세스 권한을 가지며 모든 AuthenticatedUsers가 READER 액세스 권한을 얻습니다. - &quot;bucketOwnerFullControl&quot;: 객체 소유자는 OWNER 액세스 권한을, 프로젝트 팀 소유자는 OWNER 액세스 권한을 얻습니다. - &quot;bucketOwnerRead&quot;: 객체 소유자는 OWNER 액세스 권한을, 프로젝트 팀 소유자는 READER 액세스 권한을 얻습니다. -&amp;ldquo;private&amp;rdquo;: 개체 소유자가 OWNER 액세스 권한을 얻습니다. -&amp;ldquo;projectPrivate&amp;rdquo;: 객체 소유자는 OWNER 액세스 권한을 가지며 프로젝트 팀 구성원은 역할에 따라 액세스 권한을 얻습니다. -&amp;ldquo;publicRead&amp;rdquo;: 객체 소유자는 OWNER 액세스 권한을 가지며 모든 사용자는 READER 액세스 권한을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="905ac905aa96c9d999fec86db42f9d47b856e803" translate="yes" xml:space="preserve">
          <source>Apply atomic file updates to all resources. Set to &lt;code&gt;true&lt;/code&gt; for global atomic file updates. Set to &lt;code&gt;false&lt;/code&gt; for global non-atomic file updates. (Use the &lt;code&gt;atomic_update&lt;/code&gt; setting on a per-resource basis to override this setting.) Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">모든 자원에 원자 파일 업데이트를 적용하십시오. 글로벌 원자 파일 업데이트의 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 글로벌 비 원자 파일 업데이트의 경우 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 이 설정을 재정의하려면 자원별로 &lt;code&gt;atomic_update&lt;/code&gt; 설정을 사용하십시오 . 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ed75b4414eab655f17a6401089b6c1b28e0168" translate="yes" xml:space="preserve">
          <source>Apply more filters to this initial list if desired. Specific filter values populate according to available desktop information and include the categories of &amp;ldquo;platform,&amp;rdquo; &amp;ldquo;environment,&amp;rdquo; &amp;ldquo;domain,&amp;rdquo; and &amp;ldquo;last run status.&amp;rdquo;</source>
          <target state="translated">원하는 경우이 초기 목록에 더 많은 필터를 적용합니다. 특정 필터 값은 사용 가능한 데스크톱 정보에 따라 채워지며 &quot;플랫폼&quot;, &quot;환경&quot;, &quot;도메인&quot;및 &quot;마지막 실행 상태&quot;범주를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="95acfe68e4da5365368d8c25e2eaf96c49a76edb" translate="yes" xml:space="preserve">
          <source>Apply proxy settings consistently across a Chef organization</source>
          <target state="translated">Chef 조직 전체에 일관되게 프록시 설정 적용</target>
        </trans-unit>
        <trans-unit id="d78cd2d87d88217c9464c4d449209509de07587a" translate="yes" xml:space="preserve">
          <source>Apply the Chef Desktop Policy</source>
          <target state="translated">Chef 데스크톱 정책 적용</target>
        </trans-unit>
        <trans-unit id="67d7add3e4f5cdd1a938b1aaf4cd4332013bdb47" translate="yes" xml:space="preserve">
          <source>Apply the Cookbooks to the Images</source>
          <target state="translated">이미지에 요리 책 적용</target>
        </trans-unit>
        <trans-unit id="1325dcf55a42098d2b9976de3e41a257f9425644" translate="yes" xml:space="preserve">
          <source>Apply the Desktop Cookbook to VMs</source>
          <target state="translated">VM에 데스크톱 쿡북 적용</target>
        </trans-unit>
        <trans-unit id="afe02812e49c471dd67ec39c245915319f61e987" translate="yes" xml:space="preserve">
          <source>Apply the configuration change with &lt;code&gt;chef-automate config patch FILENAME.TOML&lt;/code&gt;. You should see output similar to:</source>
          <target state="translated">&lt;code&gt;chef-automate config patch FILENAME.TOML&lt;/code&gt; 사용하여 구성 변경 사항을 적용합니다 . 다음과 유사한 출력이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ceb3ac3e917b40ebd85698369989e3d053ec2bf3" translate="yes" xml:space="preserve">
          <source>Apply the configuration:</source>
          <target state="translated">구성 적용 :</target>
        </trans-unit>
        <trans-unit id="1fed5e68d9a76f9d4a0071a7c7bcab57f224d52c" translate="yes" xml:space="preserve">
          <source>Apply the corrective action.</source>
          <target state="translated">수정 조치를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="bf2af64c1e90bd83ae262f9ce974960d256856c9" translate="yes" xml:space="preserve">
          <source>Apply the new change to your Chef Habitat config:</source>
          <target state="translated">Chef Habitat 구성에 새 변경 사항을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="53aaf4d13065a58208ca8fba48214d6f67fb9bde" translate="yes" xml:space="preserve">
          <source>Apply the patch to the Chef Automate installation:</source>
          <target state="translated">Chef Automate 설치에 패치를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="54ec507c0ec8ec62e977d81f32b10dcb2b6884f9" translate="yes" xml:space="preserve">
          <source>Apply to Run-lists</source>
          <target state="translated">런리스트에 적용</target>
        </trans-unit>
        <trans-unit id="097d5324e7ff1f9771b5876e3064ebf68dcc7f0e" translate="yes" xml:space="preserve">
          <source>Apply your configuration changes with the Chef Automate command-line tool:</source>
          <target state="translated">Chef Automate 명령 줄 도구로 구성 변경 사항을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="711940865c5d501c8dfcff2f7caa34d68ea61319" translate="yes" xml:space="preserve">
          <source>Applying a Resource to a Single Node over WinRM</source>
          <target state="translated">WinRM을 통해 단일 노드에 리소스 적용</target>
        </trans-unit>
        <trans-unit id="8cc047ac17d3d845efb05b9097f3496c8768b444" translate="yes" xml:space="preserve">
          <source>Approval</source>
          <target state="translated">Approval</target>
        </trans-unit>
        <trans-unit id="87913004ecb5df4f9eb23e9e41c192053a4a81c0" translate="yes" xml:space="preserve">
          <source>Approve a Change</source>
          <target state="translated">변경 승인</target>
        </trans-unit>
        <trans-unit id="2f73aad640af5b964b0af02b72773d86d0d0cff1" translate="yes" xml:space="preserve">
          <source>Approving a Change (Merging a Pull Request)</source>
          <target state="translated">변경 승인 (풀 요청 병합)</target>
        </trans-unit>
        <trans-unit id="d3c57ba8e27b0f6ac56b6bdeae5d37c8f0ccfe60" translate="yes" xml:space="preserve">
          <source>April 30, 2017</source>
          <target state="translated">2017 년 4 월 30 일</target>
        </trans-unit>
        <trans-unit id="fc7a403bd8425d54852e6827ba37327336fd54e2" translate="yes" xml:space="preserve">
          <source>April 30, 2019</source>
          <target state="translated">2019 년 4 월 30 일</target>
        </trans-unit>
        <trans-unit id="50a5f15a41e45b95d89bf6ba53811d0f7bc097c4" translate="yes" xml:space="preserve">
          <source>April 30, 2020</source>
          <target state="translated">2020 년 4 월 30 일</target>
        </trans-unit>
        <trans-unit id="0b7a008e8921917dcd6969b063165e335277d2b0" translate="yes" xml:space="preserve">
          <source>April 30, 2021</source>
          <target state="translated">2021 년 4 월 30 일</target>
        </trans-unit>
        <trans-unit id="e585e33590758bde030c11ec26a7c7c2c8074924" translate="yes" xml:space="preserve">
          <source>April 30, 2022</source>
          <target state="translated">2022 년 4 월 30 일</target>
        </trans-unit>
        <trans-unit id="6df5bdeb9cc3d8365df07cf5d91c69226a66e079" translate="yes" xml:space="preserve">
          <source>Apt (Debian and Ubuntu platforms)</source>
          <target state="translated">Apt (Debian 및 Ubuntu 플랫폼)</target>
        </trans-unit>
        <trans-unit id="82f296cf2e676313e5f813af0b25ff521611d80a" translate="yes" xml:space="preserve">
          <source>Arbitrary options to be added to the bootstrap command when using GNU Wget. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="translated">GNU Wget을 사용할 때 bootstrap 명령에 임의의 옵션이 추가됩니다. 이 옵션은 &lt;code&gt;--bootstrap-install-command&lt;/code&gt; 와 동일한 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="29618365e98e41a272e8073b1da7d4d84c52e0f1" translate="yes" xml:space="preserve">
          <source>Arbitrary options to be added to the bootstrap command when using cURL. This option may not be used in the same command with &lt;code&gt;--bootstrap-install-command&lt;/code&gt;.</source>
          <target state="translated">cURL을 사용할 때 부트 스트랩 명령에 추가 할 임의 옵션. 이 옵션은 &lt;code&gt;--bootstrap-install-command&lt;/code&gt; 와 동일한 명령에서 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0a89342e9fcb31a038f4068e38847b411ea691af" translate="yes" xml:space="preserve">
          <source>Arch Linux</source>
          <target state="translated">아치 리눅스</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="fe3a04b5646a3d7a4330fa27e5e6e2460ddd621d" translate="yes" xml:space="preserve">
          <source>Archive a profile to tar.gz (default) or zip</source>
          <target state="translated">프로필을 tar.gz (기본값) 또는 zip으로 보관</target>
        </trans-unit>
        <trans-unit id="2b5ce22f387dc478c587bf1eb5b82d00f6953ed5" translate="yes" xml:space="preserve">
          <source>Are all nodes and/or clients in use? Clean up any extra nodes and clients. Use the &lt;code&gt;knife node list&lt;/code&gt;, &lt;code&gt;knife client list&lt;/code&gt;, and &lt;a href=&quot;../workstation/knife_status/index&quot;&gt;knife status&lt;/a&gt; commands to verify nodes and clients in use.</source>
          <target state="translated">모든 노드 및 / 또는 클라이언트가 사용 중입니까? 추가 노드 및 클라이언트를 정리하십시오. 사용 &lt;code&gt;knife node list&lt;/code&gt; , &lt;code&gt;knife client list&lt;/code&gt; 및 &lt;a href=&quot;../workstation/knife_status/index&quot;&gt;칼 상태&lt;/a&gt; 사용 노드와 클라이언트를 확인하는 명령을.</target>
        </trans-unit>
        <trans-unit id="53b82aa6782d38757a638452293db06fae00a47e" translate="yes" xml:space="preserve">
          <source>Are grouped into recipes, which describe working configurations</source>
          <target state="translated">작업 구성을 설명하는 레시피로 그룹화됩니다.</target>
        </trans-unit>
        <trans-unit id="b4dd967074f59c2eeec23bca3a31e924281cc066" translate="yes" xml:space="preserve">
          <source>Are not true resources</source>
          <target state="translated">진정한 자원이 아닙니다</target>
        </trans-unit>
        <trans-unit id="042b3e5bd6972c644359040a1ccf4b6236c1a1d4" translate="yes" xml:space="preserve">
          <source>Are processed when resource collection is compiled, not when a node is converged</source>
          <target state="translated">노드가 수렴 될 때가 아니라 리소스 수집이 컴파일 될 때 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="7a7bcd8aef474878dcea1ffb778e537151e0ec2a" translate="yes" xml:space="preserve">
          <source>Are you supporting the &lt;code&gt;expect&lt;/code&gt; syntax?</source>
          <target state="translated">&lt;code&gt;expect&lt;/code&gt; 구문 을 지원하고 있습니까?</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="78cf54ad1abbe99ef5c6d865462564b4f0196d93" translate="yes" xml:space="preserve">
          <source>Arguments to pass to the target when the shortcut is executed.</source>
          <target state="translated">바로 가기가 실행될 때 대상에 전달할 인수입니다.</target>
        </trans-unit>
        <trans-unit id="3f2f90b5ef730527132a6b958e629066ae2382f1" translate="yes" xml:space="preserve">
          <source>Array Syntax Shortcut</source>
          <target state="translated">배열 구문 바로 가기</target>
        </trans-unit>
        <trans-unit id="f3cdf5a69ee40aa43effff8ec07da6ff7623711a" translate="yes" xml:space="preserve">
          <source>Array of Access Keys belonging to each User.</source>
          <target state="translated">각 사용자에게 속한 액세스 키 배열.</target>
        </trans-unit>
        <trans-unit id="2f0bbe5f7c406882854d59a0ed3eb8a3031a7f24" translate="yes" xml:space="preserve">
          <source>Array of Subject Alternative Name entries, in format &lt;code&gt;DNS:example.com&lt;/code&gt; or &lt;code&gt;IP:1.2.3.4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DNS:example.com&lt;/code&gt; 또는 &lt;code&gt;IP:1.2.3.4&lt;/code&gt; 형식의 주체 대체 이름 항목 배열 .</target>
        </trans-unit>
        <trans-unit id="a9164eb67287d4dedeefb75a833008476d2bf57c" translate="yes" xml:space="preserve">
          <source>Array of key/values</source>
          <target state="translated">키 / 값 배열</target>
        </trans-unit>
        <trans-unit id="f3430a2b73192f477788a02bedd25813c0852c47" translate="yes" xml:space="preserve">
          <source>Array of strings in the form &lt;code&gt;origin/name&lt;/code&gt;. Each string is the qualified name of a dependency of a service that was selected by the filter criteria. This list is de-duplicated.</source>
          <target state="translated">&lt;code&gt;origin/name&lt;/code&gt; 형식의 문자열 배열 . 각 문자열은 필터 기준에 의해 선택된 서비스 종속성의 규정 된 이름입니다. 이 목록은 중복 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="2feedf3b4e70ed652c404d25fc618bcb61858daf" translate="yes" xml:space="preserve">
          <source>Array of strings reflecting how the software package backing the services that matched the filter should be updated. Values include &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;rolling&lt;/code&gt;, and &lt;code&gt;at-once&lt;/code&gt;. See &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#using-updates&quot;&gt;the Habitat docs&lt;/a&gt; for implications of these values. This list is de-duplicated.</source>
          <target state="translated">필터와 일치하는 서비스를 지원하는 소프트웨어 패키지가 업데이트되어야하는 방법을 반영하는 문자열 배열입니다. 값에는 &lt;code&gt;none&lt;/code&gt; , &lt;code&gt;rolling&lt;/code&gt; , &lt;code&gt;at-once&lt;/code&gt; 가 있습니다. 이러한 값의 의미 &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#using-updates&quot;&gt;는 Habitat 문서&lt;/a&gt; 를 참조하십시오 . 이 목록은 중복 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="5dd44fba131f665223e14015664c3a1dcde4aa20" translate="yes" xml:space="preserve">
          <source>Array of strings reflecting the topology of the matched services. Values include &lt;code&gt;standalone&lt;/code&gt; and &lt;code&gt;leader&lt;/code&gt; (for leader-follower). See &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#topologies&quot;&gt;the Habitat docs&lt;/a&gt; for implications of these values. This list is de-duplicated.</source>
          <target state="translated">일치하는 서비스의 토폴로지를 반영하는 문자열 배열입니다. 값에는 &lt;code&gt;standalone&lt;/code&gt; 및 &lt;code&gt;leader&lt;/code&gt; (리더-팔로 어용)가 포함됩니다. 이러한 값의 의미 &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#topologies&quot;&gt;는 Habitat 문서&lt;/a&gt; 를 참조하십시오 . 이 목록은 중복 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="d8af9d945bcada19c6bd9778ff360ef8bb909522" translate="yes" xml:space="preserve">
          <source>Array of strings. A list of the packages that this service depends on, in the form of &lt;code&gt;dep_origin/dep_name/1.2.3/20190325123456&lt;/code&gt;. This value may be difficult to compare, because the version identifier (&lt;code&gt;1.2.3&lt;/code&gt;, the third component) may be formatted in any way the maintainer of the project chooses; they need not be of the form &lt;code&gt;1.2.3&lt;/code&gt;.</source>
          <target state="translated">문자열 배열. &lt;code&gt;dep_origin/dep_name/1.2.3/20190325123456&lt;/code&gt; 형식으로이 서비스가 의존하는 패키지 목록입니다 . 이 값은 비교하기 어려울 수 있습니다. 버전 식별자 ( &lt;code&gt;1.2.3&lt;/code&gt; , 세 번째 구성 요소)는 프로젝트 관리자가 선택한 방식으로 형식이 지정 될 수 있기 때문입니다 . &lt;code&gt;1.2.3&lt;/code&gt; 형식 일 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e01c7d90bdfc6304425e164e40004724e873173d" translate="yes" xml:space="preserve">
          <source>Array of strings. A list of the packages that this service depends on, in the form of &lt;code&gt;dep_origin/dep_name&lt;/code&gt;. This property does not contain version information; see &lt;code&gt;dependency_ids&lt;/code&gt; for that.</source>
          <target state="translated">문자열 배열. &lt;code&gt;dep_origin/dep_name&lt;/code&gt; 형식으로이 서비스가 의존하는 패키지 목록입니다 . 이 속성에는 버전 정보가 포함되어 있지 않습니다. 이에 대해서는 &lt;code&gt;dependency_ids&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7aaadd6e2aa490959a025393e5a8bdc62304bb3f" translate="yes" xml:space="preserve">
          <source>Array of strings. Each string is a 14-digit timestamp, in the format &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt;. The timestamp reflects the time at which the package backing the package was released. These strings are sortable and comparable. This list is de-duplicated.</source>
          <target state="translated">문자열 배열. 각 문자열은 &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt; 형식의 14 자리 타임 스탬프 입니다. 타임 스탬프는 패키지를 지원하는 패키지가 릴리스 된 시간을 반영합니다. 이러한 문자열은 정렬 가능하고 비교할 수 있습니다. 이 목록은 중복 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="fd4276147b5021c5e9c065a0d8c2be5ef4f6d832" translate="yes" xml:space="preserve">
          <source>Array of strings. Each string is a 14-digit timestamp, in the format &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt;. The timestamp reflects the time at which the package backing the service was released. These strings are sortable and comparable. This list is de-duplicated.</source>
          <target state="translated">문자열 배열. 각 문자열은 &lt;code&gt;YYYYMMDDHHMmmSS&lt;/code&gt; 형식의 14 자리 타임 스탬프 입니다. 타임 스탬프는 서비스를 지원하는 패키지가 출시 된 시간을 반영합니다. 이러한 문자열은 정렬 가능하고 비교할 수 있습니다. 이 목록은 중복 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="49d6ff7f2809fccdf2944c4f4e1152edc0d85a74" translate="yes" xml:space="preserve">
          <source>Array of strings. The names of the origins that created the matched packages. This list is de-duplicated.</source>
          <target state="translated">문자열 배열. 일치하는 패키지를 만든 오리진의 이름입니다. 이 목록은 중복 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="8bd78ca0162453e6f508523a0892d56b20d85924" translate="yes" xml:space="preserve">
          <source>Array of strings. The names of the origins that created the packages that backs the services that were matched. This list is de-duplicated.</source>
          <target state="translated">문자열 배열. 일치 된 서비스를 지원하는 패키지를 생성 한 오리진의 이름입니다. 이 목록은 중복 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="bf0bda43c87d476d73bf4518472d420a96ec4818" translate="yes" xml:space="preserve">
          <source>Array of strings. The unqualified name of the package, such as &amp;lsquo;httpd&amp;rsquo;. This list is de-duplicated, though a name is almost always unique anyway.</source>
          <target state="translated">문자열 배열. 패키지의 규정되지 않은 이름 (예 : 'httpd'). 이 목록은 중복 제거되었지만 이름은 거의 항상 고유합니다.</target>
        </trans-unit>
        <trans-unit id="51d397e18bb5b6677af3054fbfa88fa30db23227" translate="yes" xml:space="preserve">
          <source>Array of strings. The unqualified name of the service, such as &amp;lsquo;httpd&amp;rsquo;. This list is de-duplicated, though a name is almost always unique anyway.</source>
          <target state="translated">문자열 배열. 서비스의 정규화되지 않은 이름 (예 : 'httpd'). 이 목록은 중복 제거되었지만 이름은 거의 항상 고유합니다.</target>
        </trans-unit>
        <trans-unit id="27924726f5af77d727578664bc1ddaa9af0701ce" translate="yes" xml:space="preserve">
          <source>Array of users associated with the group.</source>
          <target state="translated">그룹과 관련된 사용자 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="c3992cc80d638f9072ed1c7dfb86d0a915246508" translate="yes" xml:space="preserve">
          <source>Arrays: Use square brackets with comma-separated entries of the same type.</source>
          <target state="translated">배열 : 동일한 유형의 쉼표로 구분 된 항목에는 대괄호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b04686fd32ab7ba63c1696966929efa4c0059b34" translate="yes" xml:space="preserve">
          <source>Artifact repository name. &lt;code&gt;stable&lt;/code&gt;, &lt;code&gt;current&lt;/code&gt; or &lt;code&gt;unstable&lt;/code&gt;.</source>
          <target state="translated">아티팩트 저장소 이름입니다. &lt;code&gt;stable&lt;/code&gt; , &lt;code&gt;current&lt;/code&gt; 또는 &lt;code&gt;unstable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91ab328c6f2d8c37e9f358e14dacb5389b2b1517" translate="yes" xml:space="preserve">
          <source>Artifacts are the cryptographically-signed tarballs that are uploaded, downloaded, unpacked, and installed in Chef Habitat. They are built from shell scripts known as plans, but may also include application lifecycle hooks and service configuration files that describe the behavior and configuration of a running service.</source>
          <target state="translated">아티팩트는 Chef Habitat에 업로드, 다운로드, 압축 해제 및 설치되는 암호화 서명 된 tarball입니다. 계획이라고하는 셸 스크립트에서 빌드되지만 실행중인 서비스의 동작과 구성을 설명하는 애플리케이션 수명주기 후크 및 서비스 구성 파일도 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e022a55ef92d318132767c186b37f2df0275c53" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;chef_zero&lt;/code&gt; explicitly tests outside the context of a Chef Infra Server, the &lt;code&gt;policy_groups&lt;/code&gt; concept is not applicable. The value of &lt;code&gt;policy_group&lt;/code&gt; during a converge will be set to &lt;code&gt;local&lt;/code&gt;.</source>
          <target state="translated">으로 &lt;code&gt;chef_zero&lt;/code&gt; 가 명시 적으로 요리사 인프라 서버의 컨텍스트 외부 테스트는 &lt;code&gt;policy_groups&lt;/code&gt; 의 개념은 적용되지 않습니다. 의 값 &lt;code&gt;policy_group&lt;/code&gt; 수렴하는 동안이 설정됩니다 &lt;code&gt;local&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c1402e6730864716225ca2784c01886c7aa9151" translate="yes" xml:space="preserve">
          <source>As JSON (i.e. a file that ends with &lt;code&gt;.json&lt;/code&gt;)</source>
          <target state="translated">JSON 형식 (예 : &lt;code&gt;.json&lt;/code&gt; 으로 끝나는 파일 )</target>
        </trans-unit>
        <trans-unit id="41dfb1eb40124283bba2d6e3ef98ffce50c1cf34" translate="yes" xml:space="preserve">
          <source>As Ruby (i.e. a file that ends with &lt;code&gt;.rb&lt;/code&gt;); this format is not available when running Chef Infra Client in local mode</source>
          <target state="translated">Ruby로 (즉, &lt;code&gt;.rb&lt;/code&gt; 로 끝나는 파일 ); 이 형식은 로컬 모드에서 Chef Infra Client를 실행할 때 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a09f1dbbefc728fae4525ca35dcc3f1bf2c58ed" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;../../glossary/index#plural_resource&quot;&gt;plural resource&lt;/a&gt;, all of &lt;code&gt;shadow&lt;/code&gt;&amp;rsquo;s properties return lists (that is, Ruby Arrays). &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;be_empty&lt;/code&gt; are two useful matchers when working with lists. You can also perform manipulation of the lists, such as calling &lt;code&gt;uniq&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, and &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">A와 &lt;a href=&quot;../../glossary/index#plural_resource&quot;&gt;복수의 자원&lt;/a&gt; 의 모든 &lt;code&gt;shadow&lt;/code&gt; 의 특성 (루비 배열이라고) 목록을 반환합니다. &lt;code&gt;include&lt;/code&gt; 및 &lt;code&gt;be_empty&lt;/code&gt; 는 목록 작업시 유용한 두 가지 매처입니다. &lt;code&gt;uniq&lt;/code&gt; , &lt;code&gt;sort&lt;/code&gt; , &lt;code&gt;count&lt;/code&gt; , &lt;code&gt;first&lt;/code&gt; , &lt;code&gt;last&lt;/code&gt; , &lt;code&gt;min&lt;/code&gt; 및 &lt;code&gt;max&lt;/code&gt; 호출과 같은 목록 조작을 수행 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb57eb70fd0214151fa6fd571b44b9fd6c3a34eb" translate="yes" xml:space="preserve">
          <source>As a Definition</source>
          <target state="translated">정의로</target>
        </trans-unit>
        <trans-unit id="1937aa03d59efa11b8c33c539dafa16cad84b164" translate="yes" xml:space="preserve">
          <source>As a Resource</source>
          <target state="translated">자원으로서</target>
        </trans-unit>
        <trans-unit id="9a5f981af73c4e1a06349b1fb25d805fb7ee7294" translate="yes" xml:space="preserve">
          <source>As a Supermarket feature, Fieri must be enabled via the &lt;code&gt;default['supermarket']['features']&lt;/code&gt; option.</source>
          <target state="translated">슈퍼마켓 기능으로서 Fieri는 &lt;code&gt;default['supermarket']['features']&lt;/code&gt; 옵션을 통해 활성화되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4719295f9c3ce7cdb29bdf303bbda91dd9b01f34" translate="yes" xml:space="preserve">
          <source>As a Supermarket feature, GitHub must be enabled via the &lt;code&gt;default['supermarket']['features']&lt;/code&gt; option.</source>
          <target state="translated">슈퍼마켓 기능인 GitHub는 &lt;code&gt;default['supermarket']['features']&lt;/code&gt; 옵션을 통해 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4439f7ca605c1bbf2934c7bd4484b0df398443aa" translate="yes" xml:space="preserve">
          <source>As a community that meets in physical public spaces, harassment also includes:</source>
          <target state="translated">물리적 인 공공 장소에서 만나는 커뮤니티로서 괴롭힘에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="51eb914152e8b02bf3646602e294cbe3d552f695" translate="yes" xml:space="preserve">
          <source>As a general rule, limit the number of heading levels to no more than two within a topic. There can be exceptions, especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what&amp;rsquo;s in it.</source>
          <target state="translated">일반적으로 주제 내에서 제목 수준 수를 2 개 이하로 제한합니다. 특히 문서가 매우 큰 경우 예외가있을 수 있지만 HTML TOC 구조에는 일반적으로 너비 제한 (디스플레이 쪽)이 있고 TOC 내에 구조가 많을수록 사용자가 그 안에있는 내용을 파악하기가 더 어려워 질 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="188d36388d4541a2b90f875e5e2275e869a12568" translate="yes" xml:space="preserve">
          <source>As a general standard, Chef requires every contribution to by signed for the Developer Certificate of Origin (DCO).</source>
          <target state="translated">일반적인 표준으로 Chef는 개발자 원산지 인증서 (DCO)에 서명 한 모든 기여를 요구합니다.</target>
        </trans-unit>
        <trans-unit id="ba110bf9761ce57095d29b358efff015231406ac" translate="yes" xml:space="preserve">
          <source>As a point of reference: as of September 2017 after three years of operation, the public Supermarket has approx 70,000 users, 3,300 cookbooks with a total of 20,000 versions published. The PostgreSQL database weighs in at 310 MB (50 MB when exported with &lt;code&gt;pg_dump&lt;/code&gt;), and the S3 bucket containing all of the published community cookbooks weighs in at 2.7 GB</source>
          <target state="translated">참고로 2017 년 9 월 현재 3 년 동안 운영 된 공공 슈퍼마켓은 약 70,000 명의 사용자와 3,300 개의 요리 책을 보유하고 있으며 총 20,000 개의 버전이 출판되었습니다. PostgreSQL 데이터베이스의 무게는 310MB ( &lt;code&gt;pg_dump&lt;/code&gt; 로 내보낼 때 50MB )이고 게시 된 모든 커뮤니티 쿡북이 포함 된 S3 버킷의 무게는 2.7GB입니다.</target>
        </trans-unit>
        <trans-unit id="d58414cdf1abbf4e545f7919a22267ef9bccf319" translate="yes" xml:space="preserve">
          <source>As a root user, install the Chef Automate package on the server, using the name of the package provided by Chef.</source>
          <target state="translated">루트 사용자로 Chef에서 제공 한 패키지 이름을 사용하여 서버에 Chef Automate 패키지를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="ff73e7e9684079264f8fb0e508574e39934bf52b" translate="yes" xml:space="preserve">
          <source>As a root user, install the Chef Infra Server package on the server, using the name of the package provided by Chef. For Red Hat Enterprise Linux and CentOS:</source>
          <target state="translated">루트 사용자로 Chef에서 제공 한 패키지 이름을 사용하여 서버에 Chef Infra Server 패키지를 설치합니다. Red Hat Enterprise Linux 및 CentOS의 경우 :</target>
        </trans-unit>
        <trans-unit id="5b8b4f2c6672b008f7fc20ac6996ac59cdb452f5" translate="yes" xml:space="preserve">
          <source>As a root user, install the Chef server package on the server, using the name of the package provided by Chef. For Red Hat and CentOS 6:</source>
          <target state="translated">루트 사용자로서 Chef가 제공 한 패키지 이름을 사용하여 Chef 서버 패키지를 서버에 설치하십시오. Red Hat 및 CentOS 6의 경우 :</target>
        </trans-unit>
        <trans-unit id="6b002378d5afd108565ac8ca42d52d113993b8b3" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, changes are obvious fixes if they do not introduce any new functionality or creative thinking. As long as the change does not affect functionality, some likely examples include the following:</source>
          <target state="translated">경험상 변경 사항은 새로운 기능이나 창의적 사고를 도입하지 않는 경우 명백한 수정입니다. 변경 사항이 기능에 영향을 미치지 않는 한 다음과 같은 몇 가지 가능한 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="99c7419a9519cbcab8661b23a48370dc9eedeb2d" translate="yes" xml:space="preserve">
          <source>As a single &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">단일 &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77dba9ad5f389c46c4a221b9a9948a53e6c42d22" translate="yes" xml:space="preserve">
          <source>As a single package:</source>
          <target state="translated">단일 패키지 :</target>
        </trans-unit>
        <trans-unit id="ccea1d4fcbb4df07e323cd17558c335f0db3840b" translate="yes" xml:space="preserve">
          <source>As a user that is a member of the &lt;code&gt;admins&lt;/code&gt; group, replace &lt;code&gt;ORGNAME&lt;/code&gt; with your own &lt;code&gt;ORGNAME&lt;/code&gt; and run:</source>
          <target state="translated">&lt;code&gt;admins&lt;/code&gt; 그룹 의 구성원 인 사용자로서 &lt;code&gt;ORGNAME&lt;/code&gt; 을 자신의 &lt;code&gt;ORGNAME&lt;/code&gt; 으로 바꾸고 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f33767a4f515517fa57646bd8b3174c7b5fcd350" translate="yes" xml:space="preserve">
          <source>As a way to start to understand plans, let&amp;rsquo;s look at an example &lt;code&gt;plan.sh&lt;/code&gt; for &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;sqlite&lt;/a&gt;:</source>
          <target state="translated">계획을 이해하는 방법으로 &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;sqlite에&lt;/a&gt; 대한 &lt;code&gt;plan.sh&lt;/code&gt; 예제를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="5f664b51f16c34e3865417a7e61a195bc818957d" translate="yes" xml:space="preserve">
          <source>As an array of packages:</source>
          <target state="translated">패키지 배열 :</target>
        </trans-unit>
        <trans-unit id="b36234f36f3836f47cb6970bbf6bd451d60da7b3" translate="yes" xml:space="preserve">
          <source>As an array:</source>
          <target state="translated">배열로 :</target>
        </trans-unit>
        <trans-unit id="bb465dbc82be8c1e30a4a1ba66c0e8c53f892421" translate="yes" xml:space="preserve">
          <source>As an enterprise admin, you can configure a SAML Service to enable single sign on. To do this from the Chef Automate UI, click on the &lt;code&gt;Admin&lt;/code&gt; menu item. From the &lt;code&gt;Admin&lt;/code&gt; screen, navigate to the SAML Setup tab. Once you are on the SAML Setup tab, you can configure the details necessary to integrate Chef Automate and SAML.</source>
          <target state="translated">엔터프라이즈 관리자는 싱글 사인온을 사용하도록 SAML 서비스를 구성 할 수 있습니다. Chef Automate UI에서이를 수행하려면 &lt;code&gt;Admin&lt;/code&gt; 메뉴 항목을 클릭하십시오 . 로부터 &lt;code&gt;Admin&lt;/code&gt; 화면에서 SAML 설정 탭으로 이동합니다. SAML 설정 탭에 있으면 Chef Automate와 SAML을 통합하는 데 필요한 세부 정보를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d24c1c1580fccd4a61c028c335aba51d60e58221" translate="yes" xml:space="preserve">
          <source>As an enterprise administrator on the Workflow server, select &lt;strong&gt;Admin&lt;/strong&gt;.</source>
          <target state="translated">Workflow 서버의 엔터프라이즈 관리자로 &lt;strong&gt;Admin을&lt;/strong&gt; 선택 합니다.</target>
        </trans-unit>
        <trans-unit id="1b8e0836d1d6fc947c9594527c79e4ae2daec2f1" translate="yes" xml:space="preserve">
          <source>As an example where you would previously use the attribute &lt;code&gt;node['digital_ocean']['networks']['v4'][0]['ipaddress']&lt;/code&gt; you would now use &lt;code&gt;node['digital_ocean']['interfaces']['public'][0]['ipv4']['ip_address']&lt;/code&gt;.</source>
          <target state="translated">이전에 &lt;code&gt;node['digital_ocean']['networks']['v4'][0]['ipaddress']&lt;/code&gt; 속성을 사용한 예로서 이제 &lt;code&gt;node['digital_ocean']['interfaces']['public'][0]['ipv4']['ip_address']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca1dc76309de21daeb0be1ad833e5ba63ba463b7" translate="yes" xml:space="preserve">
          <source>As an example, let us say that you, the admin, want to delegate a portion of your tasks to a colleague, but without granting them full admin access. In this case, you could create a policy called &lt;code&gt;Team Devops Managers&lt;/code&gt;, which grants its members some&amp;ndash;but not all&amp;ndash;administrative privileges. Create a JSON file in the editor of your choice. Following JSON syntax, begin with the name property.</source>
          <target state="translated">예를 들어, 관리자 인 귀하가 동료에게 전체 관리자 액세스 권한을 부여하지 않고 작업의 일부를 위임하려고한다고 가정 해 보겠습니다. 이 경우 &lt;code&gt;Team Devops Managers&lt;/code&gt; 라는 정책을 생성하여 구성원에게 관리 권한을 부여 할 수 있습니다. 원하는 편집기에서 JSON 파일을 만듭니다. JSON 구문에 따라 name 속성으로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="824961084c41d1d0e06c586375889ab570d2f736" translate="yes" xml:space="preserve">
          <source>As an example, let&amp;rsquo;s say we have an application server, called &lt;code&gt;session-server&lt;/code&gt;, that needs to connect to a database service, and needs both a &amp;ldquo;port&amp;rdquo; and an &amp;ldquo;ssl-port&amp;rdquo; in order to make that connection. We can describe this relationship in our &lt;code&gt;plan.sh&lt;/code&gt; file like so:</source>
          <target state="translated">예를 들어, 데이터베이스 서비스에 연결해야하며 연결을 위해 &quot;포트&quot;와 &quot;ssl-port&quot;가 모두 필요한 &lt;code&gt;session-server&lt;/code&gt; 라는 애플리케이션 서버가 있다고 가정 해 보겠습니다 . &lt;code&gt;plan.sh&lt;/code&gt; 파일 에서이 관계를 다음과 같이 설명 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd467d5eb9ddf9df5ee2053def7d685b7329b720" translate="yes" xml:space="preserve">
          <source>As an example, to retrieve users whos &lt;code&gt;external_authentication_uid&lt;/code&gt; is &lt;code&gt;jane@doe.com&lt;/code&gt;, you would do the following:</source>
          <target state="translated">예를 들어 &lt;code&gt;external_authentication_uid&lt;/code&gt; 가 &lt;code&gt;jane@doe.com&lt;/code&gt; 인 사용자를 검색 하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="80208fc9f498b6c05c623b5a77bf8e8d3cdd1818" translate="yes" xml:space="preserve">
          <source>As before, to help set up environment variables for the Studio, we&amp;rsquo;re going to use a &lt;a href=&quot;https://github.com/habitat-sh/core-plans/blob/master/bin/bootstrap/stage3-studio.sh&quot;&gt;stage3 Studio&lt;/a&gt; wrapper:</source>
          <target state="translated">이전과 마찬가지로 Studio의 환경 변수 설정을 돕기 위해 &lt;a href=&quot;https://github.com/habitat-sh/core-plans/blob/master/bin/bootstrap/stage3-studio.sh&quot;&gt;stage3 Studio&lt;/a&gt; 래퍼 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c7b7fa5430a565dd38aeb417486e739f20800f27" translate="yes" xml:space="preserve">
          <source>As changes flow through the Chef Automate pipeline, they are tested in a series of runtime environments that are increasingly similar to the final runtime target environment.</source>
          <target state="translated">Chef Automate 파이프 라인을 통해 변경 사항이 흐르면 ​​최종 런타임 대상 환경과 점점 더 유사한 일련의 런타임 환경에서 테스트됩니다.</target>
        </trans-unit>
        <trans-unit id="30743a2583386e77ca704830eb7fc2ae8063a39d" translate="yes" xml:space="preserve">
          <source>As changes flow through the Workflow pipeline, they are tested in a series of runtime environments that are increasingly similar to the final runtime target environment.</source>
          <target state="translated">변경 사항이 워크 플로 파이프 라인을 통해 흐르면 최종 런타임 대상 환경과 점점 더 유사한 일련의 런타임 환경에서 테스트됩니다.</target>
        </trans-unit>
        <trans-unit id="39ccec775994414d321cdec9a81f87a0b9b25c36" translate="yes" xml:space="preserve">
          <source>As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)</source>
          <target state="translated">RFC 1035 (섹션 5) 및 RFC 1034 (섹션 3.6.1)에 정의 된대로</target>
        </trans-unit>
        <trans-unit id="6ece35d76eec96f8b1ccadce0b8fa2fda977ce93" translate="yes" xml:space="preserve">
          <source>As described above, dependency failures are breakages in your dependency graph, which keep the current project&amp;rsquo;s pipeline from being able to ship safely. You can see such failures as warnings on the change view in the Chef Automate server web UI. These failures are tracked because they allow Chef Automate to know which changes are safe to promote.</source>
          <target state="translated">위에서 설명한 것처럼 종속성 실패는 종속성 그래프의 파손으로 현재 프로젝트의 파이프 라인이 안전하게 배송되지 못하도록합니다. Chef Automate 서버 웹 UI의 변경보기에서 경고와 같은 실패를 볼 수 있습니다. 이러한 실패는 Chef Automate가 승격하기에 안전한 변경 사항을 알 수 있도록하므로 추적됩니다.</target>
        </trans-unit>
        <trans-unit id="612314ecf225893447a973aa64272337138e3097" translate="yes" xml:space="preserve">
          <source>As explained in the &lt;a href=&quot;../sup_crypto/index&quot;&gt;security overview&lt;/a&gt;, this process also requires the generation of a user key for every user making configuration updates to the Supervisor network.</source>
          <target state="translated">&lt;a href=&quot;../sup_crypto/index&quot;&gt;보안 개요에&lt;/a&gt; 설명 된 대로이 프로세스에는 Supervisor 네트워크에 대한 구성 업데이트를 수행하는 모든 사용자에 대한 사용자 키 생성도 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b87d8fbdf78eb0dd70e9176ee46e307e7469ad4c" translate="yes" xml:space="preserve">
          <source>As illustrated, updates of this kind are completely optional; you may prefer to move update responsibility to your container scheduler and treat your containers as immutable in this regard.</source>
          <target state="translated">그림과 같이 이러한 종류의 업데이트는 완전히 선택 사항입니다. 업데이트 책임을 컨테이너 스케줄러로 옮기고 이와 관련하여 컨테이너를 변경 불가능한 것으로 취급하는 것을 선호 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed8e13a2d2f91111f4bc5e3d2c4ccde30a897ecc" translate="yes" xml:space="preserve">
          <source>As in the past, the origin &amp;lsquo;Owner&amp;rsquo; has full read and write access to the origin. Only Owners can delete the origin or transfer ownership to another member.</source>
          <target state="translated">과거와 마찬가지로 오리진 'Owner'는 오리진에 대한 전체 읽기 및 쓰기 액세스 권한을 갖습니다. 소유자 만 원본을 삭제하거나 소유권을 다른 구성원에게 양도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="694301e4aac123807ec2e77e95b83c0a769f6dbc" translate="yes" xml:space="preserve">
          <source>As in the stage2 build, we need to get the fully-qualified package identifier of the &lt;code&gt;core/hab-backline&lt;/code&gt; package we just built in stage2. You can use &lt;code&gt;ls -1 ./results-stage2/core-hab-backline-*.hart&lt;/code&gt; to list the artifact. The naming of this file will help you to figure out the package identifier. For now, let&amp;rsquo;s assume that the identifier corresponding to the artifact was &lt;code&gt;core/hab-backline/0.56.0/20180322181801&lt;/code&gt;.</source>
          <target state="translated">stage2 빌드에서와 같이 방금 stage2에서 빌드 한 &lt;code&gt;core/hab-backline&lt;/code&gt; 패키지 의 정규화 된 패키지 식별자 를 가져와야합니다. &lt;code&gt;ls -1 ./results-stage2/core-hab-backline-*.hart&lt;/code&gt; 를 사용 하여 아티팩트를 나열 할 수 있습니다 . 이 파일의 이름은 패키지 식별자를 파악하는 데 도움이됩니다. 지금은 아티팩트에 해당하는 식별자가 &lt;code&gt;core/hab-backline/0.56.0/20180322181801&lt;/code&gt; 이라고 가정하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="6a197692ef3f159bd24f40d6e4461a9b71a868fd" translate="yes" xml:space="preserve">
          <source>As installed (without specialized plugins), Chef InSpec supports several ways of setting inputs:</source>
          <target state="translated">설치시 (특수 플러그인없이) Chef InSpec은 여러 가지 입력 설정 방법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="36b3fe842fdb3c2c5cdbe60610f94e4ae216ec25" translate="yes" xml:space="preserve">
          <source>As long as a USER.pem is also present on the workstation from which the validatorless bootstrap operation will be initiated, the bootstrap operation will run and will use the USER.pem file instead of the ORGANIZATION-validator.pem file.</source>
          <target state="translated">유효성 검증기없는 부트 스트랩 조작이 시작될 워크 스테이션에 USER.pem이있는 경우 부트 스트랩 조작이 실행되고 ORGANIZATION-validator.pem 파일 대신 USER.pem 파일이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="eeec5b7abab54b7eff6260b4fd1604cd75de2e3f" translate="yes" xml:space="preserve">
          <source>As long as a file is in the correct directory structure, knife will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:</source>
          <target state="translated">파일이 올바른 디렉토리 구조에있는 한 knife는 데이터 백과 데이터 백 항목의 이름만으로 데이터 백과 데이터 백 항목을 찾을 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="5e3b209d83616410c5c6a42dfaefc0555bec65b8" translate="yes" xml:space="preserve">
          <source>As long as good source code management is practiced with cookbooks and other files in the chef-repo, any missing bits can be re-uploaded after there is a working cluster. In some cases, newly-created users or organizations will need to be re-created. Other actions, such as chef-client runs and uploads may fail while the cluster is in an &lt;code&gt;Inconsistent&lt;/code&gt; state, but will be fine after there is a working cluster.</source>
          <target state="translated">chef-repo에서 요리 책 및 기타 파일을 사용하여 소스 코드 관리를 제대로 수행하는 한 클러스터가 작동하면 누락 된 비트를 다시 업로드 할 수 있습니다. 경우에 따라 새로 만든 사용자 또는 조직을 다시 만들어야 할 수도 있습니다. 클러스터가 &lt;code&gt;Inconsistent&lt;/code&gt; 상태 인 동안 chef-client 실행 및 업로드와 같은 다른 조치가 실패 할 수 있지만 작동중인 클러스터가 있으면 정상입니다.</target>
        </trans-unit>
        <trans-unit id="e70a6f522e3d147275506b32d993ec8274a8be1a" translate="yes" xml:space="preserve">
          <source>As long as you are already a member of the Habitat origin, once Builder possesses at least the public origin key, then you may upload one or more artifacts to that origin with the &lt;code&gt;hab pkg upload&lt;/code&gt; command. After Habitat validates the cryptographic integrity of the artifact, it is then uploaded and stored on Builder. Uploading artifacts is a privileged operation for which you must have the access token.</source>
          <target state="translated">이미 Habitat 오리진의 구성원 인 경우 Builder가 최소한 공개 오리진 키를 소유하면 &lt;code&gt;hab pkg upload&lt;/code&gt; 명령을 사용하여 해당 오리진에 하나 이상의 아티팩트를 업로드 할 수 있습니다 . Habitat이 아티팩트의 암호화 무결성을 검증 한 후 빌더에 업로드 및 저장됩니다. 아티팩트 업로드는 액세스 토큰이 있어야하는 권한있는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="f898882f6f3abfc8dd92fb6d46c42cb921d79f2d" translate="yes" xml:space="preserve">
          <source>As mandated by the SSE protocol, each event has:</source>
          <target state="translated">SSE 프로토콜에서 요구하는대로 각 이벤트에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0683cdd5efcc541699d8571893de01d20f0704f7" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, including &lt;code&gt;&quot;public_key&quot;&lt;/code&gt;, &lt;code&gt;&quot;private_key&quot;&lt;/code&gt;, or &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; in PUT requests to clients/users will cause a 400 response.</source>
          <target state="translated">12.1.0 부터 클라이언트 / 사용자에 대한 PUT 요청에 &lt;code&gt;&quot;public_key&quot;&lt;/code&gt; , &lt;code&gt;&quot;private_key&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; 를 포함하면 400 응답이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1c5d40edcea8ee6836d9abe8da1e04b6a0dac888" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, the &lt;code&gt;&quot;admin&quot;&lt;/code&gt; parameter is no longer supported in client/user creation and support. If used in the &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; of a client or user, the &lt;code&gt;&quot;admin&quot;&lt;/code&gt; parameter is ignored.</source>
          <target state="translated">12.1.0부터 &lt;code&gt;&quot;admin&quot;&lt;/code&gt; 매개 변수는 클라이언트 / 사용자 생성 및 지원에서 더 이상 지원되지 않습니다. 클라이언트 또는 사용자 의 &lt;code&gt;POST&lt;/code&gt; 또는 &lt;code&gt;PUT&lt;/code&gt; 에서 사용되는 경우 &lt;code&gt;&quot;admin&quot;&lt;/code&gt; 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="235bb6ef5dcfac1f3e3b11360f6e47334c7f27d3" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, the &lt;code&gt;&quot;admin&quot;&lt;/code&gt; parameter is no longer supported in client/user creation and support. If used in the &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; of a client or user, then it is ignored.</source>
          <target state="translated">12.1.0부터 &lt;code&gt;&quot;admin&quot;&lt;/code&gt; 매개 변수는 클라이언트 / 사용자 생성 및 지원에서 더 이상 지원되지 않습니다. 클라이언트 또는 사용자 의 &lt;code&gt;POST&lt;/code&gt; 또는 &lt;code&gt;PUT&lt;/code&gt; 에서 사용되는 경우 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="49ed1afebda1e7ebd86489bcfc8f4e859aab6f9b" translate="yes" xml:space="preserve">
          <source>As of 12.1.0, the &lt;code&gt;&quot;public_key&quot;&lt;/code&gt;, &lt;code&gt;&quot;private_key&quot;&lt;/code&gt;, and &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; parameters in PUT requests to clients/users will cause a 400 response.</source>
          <target state="translated">12.1.0 부터 클라이언트 / 사용자에 대한 PUT 요청 의 &lt;code&gt;&quot;public_key&quot;&lt;/code&gt; , &lt;code&gt;&quot;private_key&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;create_key&quot;&lt;/code&gt; 매개 변수는 400 응답을 유발합니다.</target>
        </trans-unit>
        <trans-unit id="fd6ea5321314fd4a9fd8b832eaed02c3f4852a3d" translate="yes" xml:space="preserve">
          <source>As of April 2018, you are only permitted one configuration recorder per region.</source>
          <target state="translated">2018 년 4 월부터 리 전당 하나의 구성 레코더 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="3331c19388db35ba575154f95f76cc5e5288170f" translate="yes" xml:space="preserve">
          <source>As of Automate 1.7.114, the compliance service uses a &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearch index to improves the performance of the reporting APIs at scale. Automate creates this index automatically as part of the upgrade to Automate 1.7.114. The index is updated with each new compliance report. If the &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearch index becomes out of sync with the time-series data, it can be regenerated using the &lt;code&gt;automate-ctl migrate-compliance&lt;/code&gt; subcommand. For more information, see &lt;a href=&quot;../ctl_automate_server/index#migrate-compliance&quot;&gt;migrate-compliance&lt;/a&gt;.</source>
          <target state="translated">Automate 1.7.114부터 규정 준수 서비스는 &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearch 인덱스를 사용하여 대규모보고 API의 성능을 개선합니다. Automate는 Automate 1.7.114 로의 업그레이드의 일부로이 인덱스를 자동으로 생성합니다. 색인은 각각의 새로운 준수 보고서로 업데이트됩니다. 는 IF &lt;code&gt;compliance-latest&lt;/code&gt; Elasticsearch 지수는 시계열 데이터와 동기화되고, 그것은 사용하여 재생 될 수 &lt;code&gt;automate-ctl migrate-compliance&lt;/code&gt; 하위 명령을. 자세한 내용은 &lt;a href=&quot;../ctl_automate_server/index#migrate-compliance&quot;&gt;migrate-compliance를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2b14b2b9ab67923a70b09fad0d1060314a8d091" translate="yes" xml:space="preserve">
          <source>As of Chef Automate 1.6.87, Kibana is no longer enabled by default. To enable it, see the &lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/setup.html&quot;&gt;Kibana setup documentation&lt;/a&gt;. In prior versions of Chef Automate, Kibana and its authentication are enabled by default.</source>
          <target state="translated">Chef Automate 1.6.87부터 Kibana는 더 이상 기본적으로 활성화되지 않습니다. 활성화하려면 &lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/setup.html&quot;&gt;Kibana 설정 문서를&lt;/a&gt; 참조하십시오 . 이전 버전의 Chef Automate에서는 Kibana 및 해당 인증이 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="837adb12d2f2e0fbe4e49f1391534a7f65d0830b" translate="yes" xml:space="preserve">
          <source>As of Chef InSpec 2.0, we have expanded our platform support beyond individual machines and now include support for select AWS and Azure resources.</source>
          <target state="translated">Chef InSpec 2.0부터는 개별 머신을 넘어 플랫폼 지원을 확장했으며 이제 일부 AWS 및 Azure 리소스에 대한 지원을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c3ef777cd09016b95a5129a792958ed2e005e2ad" translate="yes" xml:space="preserve">
          <source>As of Chef InSpec 4.12, this mechanism has the following limitations:</source>
          <target state="translated">Chef InSpec 4.12부터이 메커니즘에는 다음과 같은 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ab541aee459e188bf042e284708a0a626cafad5" translate="yes" xml:space="preserve">
          <source>As of Chef InSpec 4.3.2, this mechanism has the following limitations:</source>
          <target state="translated">Chef InSpec 4.3.2부터이 메커니즘에는 다음과 같은 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="198937498cd76e1fc906253495726f44ae907499" translate="yes" xml:space="preserve">
          <source>As of Chef Infra Client 15.x, Chef Infra Client ships with Ruby 2.6.</source>
          <target state="translated">Chef Infra Client 15.x부터 Chef Infra Client는 Ruby 2.6과 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5286be69f633ce14be4492c967cf5c43edf71409" translate="yes" xml:space="preserve">
          <source>As of InSpec v4.16, resources are lazily loaded into the &lt;code&gt;inspec&lt;/code&gt; process upon use. This greatly speeds up the initial startup costs of the &lt;code&gt;inspec&lt;/code&gt; process and only loads what you need to use. For example, &lt;code&gt;inspec --version&lt;/code&gt; no longer runs for 10 seconds!.</source>
          <target state="translated">InSpec v4.16부터 리소스는 사용시 &lt;code&gt;inspec&lt;/code&gt; 프로세스에 느리게로드됩니다 . 이것은 크게 초기 시작의 비용 속도 &lt;code&gt;inspec&lt;/code&gt; 사용할 필요한 과정 만 부하를. 예를 들어 &lt;code&gt;inspec --version&lt;/code&gt; 은 더 이상 10 초 동안 실행되지 않습니다!.</target>
        </trans-unit>
        <trans-unit id="1256bd8c8ca83c691714f3e34c0842b0b8b7aaeb" translate="yes" xml:space="preserve">
          <source>As of the end of life date, the application will no longer be supported by Chef and will no longer be available for download</source>
          <target state="translated">수명 종료일부터 응용 프로그램은 Chef에서 더 이상 지원되지 않으며 더 이상 다운로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7779862e93d57c2b5cbd17b9ecbab2535b3a94d9" translate="yes" xml:space="preserve">
          <source>As of version 12.14, Chef Infra Server renders passwords inside of the &lt;code&gt;/etc/opscode&lt;/code&gt; directory by default. If you are using Chef Infra Server without add-ons, or if you are using the latest add-ons versions, you can set &lt;code&gt;insecure_addon_compat&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in `/etc/opscode/chef-server.rb. and Chef Infra Server will write all credentials to a single location.</source>
          <target state="translated">버전 12.14부터 Chef Infra Server 는 기본적으로 &lt;code&gt;/etc/opscode&lt;/code&gt; 디렉토리 내에서 비밀번호를 렌더링합니다 . 추가 기능없이 Chef Infra Server를 사용하거나 최신 추가 기능 버전을 사용중인 경우 `/etc/opscode/chef-server.rb에서 &lt;code&gt;insecure_addon_compat&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 . Chef Infra Server는 모든 자격 증명을 단일 위치에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="dbb89833bd41a876348c81c6f927a384cbaa6612" translate="yes" xml:space="preserve">
          <source>As packaged, Chef InSpec uses the following priority values:</source>
          <target state="translated">포장 된대로 Chef InSpec은 다음 우선 순위 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7f0f6eb43a2a02eade40d1faee96ba15cb7af150" translate="yes" xml:space="preserve">
          <source>As part of &lt;a href=&quot;#chef-client-the-chef-client-run&quot;&gt;every chef-client run&lt;/a&gt;, the chef-client authenticates to the Chef server using an RSA private key and the Chef server API.</source>
          <target state="translated">&lt;a href=&quot;#chef-client-the-chef-client-run&quot;&gt;모든 chef-client run의&lt;/a&gt; 일부로 chef-client 는 RSA 개인 키와 Chef 서버 API를 사용하여 Chef 서버에 인증합니다.</target>
        </trans-unit>
        <trans-unit id="7c1f9099fa86077a0d4c01bfa85536c28d3fb1a8" translate="yes" xml:space="preserve">
          <source>As part of &lt;a href=&quot;../chef_client/index#the-chef-client-run&quot;&gt;every Chef Infra Client run&lt;/a&gt;, Chef Infra Client authenticates to the Chef Infra Server using an RSA private key and the Chef Infra Server API.</source>
          <target state="translated">의 일환으로 &lt;a href=&quot;../chef_client/index#the-chef-client-run&quot;&gt;모든 요리사 인프라 클라이언트 실행&lt;/a&gt; , RSA 비공개 키와 요리사 인프라 서버 API를 사용하여 요리사 인프라 서버에 요리사 인프라 클라이언트 인증합니다.</target>
        </trans-unit>
        <trans-unit id="78a809875fd598f4ebb24027a649537aa079d58d" translate="yes" xml:space="preserve">
          <source>As part of the chef-client run, where audit-mode runs after all resources have been converged on the node</source>
          <target state="translated">모든 리소스가 노드에 수렴 된 후 감사 모드가 실행되는 chef-client 실행의 일부</target>
        </trans-unit>
        <trans-unit id="0ac44ce6a6033a358551bf709f190a3d06e962cf" translate="yes" xml:space="preserve">
          <source>As root on the Chef Infra Server, point to the bundled &lt;code&gt;eper&lt;/code&gt; package of debugging tools. Replace the 2nd and 5th path entries and the &lt;code&gt;X.XX.X&lt;/code&gt; value in the following path with the items that occur on the system.</source>
          <target state="translated">번들로 요리사 인프라 서버의 루트 지점으로 &lt;code&gt;eper&lt;/code&gt; 디버깅 툴의 패키지로 제공된다. 다음 경로에서 두 번째 및 다섯 번째 경로 항목과 &lt;code&gt;X.XX.X&lt;/code&gt; 값을 시스템에서 발생하는 항목으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="d7eb5ec947e5501e4246a28063a6471908e5ea2e" translate="yes" xml:space="preserve">
          <source>As root on the Chef server, point to the bundled &lt;code&gt;eper&lt;/code&gt; package of debugging tools. Replace the 2nd and 5th path entries and the &lt;code&gt;X.XX.X&lt;/code&gt; value in the following path with the items that occur on the system.</source>
          <target state="translated">Chef 서버의 루트로서 번들로 제공되는 &lt;code&gt;eper&lt;/code&gt; 패키지의 디버깅 도구를 가리 킵니다 . 다음 경로 의 두 번째 및 다섯 번째 경로 항목과 &lt;code&gt;X.XX.X&lt;/code&gt; 값을 시스템에서 발생하는 항목으로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="1138858bbb9fddfc57f6ec382a070f4071ad01e4" translate="yes" xml:space="preserve">
          <source>As shown in an example above, there are occasions when you want to override the default behavior of the hab-plan-build script. The Plan syntax guide lists the default implementations for &lt;a href=&quot;../build_phase_callbacks/index&quot;&gt;build phase callbacks&lt;/a&gt;, but if you need to reference specific packages in the process of building your applications or services, then you need to override the default implementations as in the example below.</source>
          <target state="translated">위의 예에서 볼 수 있듯이 hab-plan-build 스크립트의 기본 동작을 재정의하려는 경우가 있습니다. 계획 구문 가이드에는 &lt;a href=&quot;../build_phase_callbacks/index&quot;&gt;빌드 단계 콜백에&lt;/a&gt; 대한 기본 구현이 나열되어 있지만 애플리케이션 또는 서비스를 빌드하는 과정에서 특정 패키지를 참조해야하는 경우 아래 예와 같이 기본 구현을 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="6a8128533337906a86d2398d86c81126064f45e7" translate="yes" xml:space="preserve">
          <source>As specified in the SSE protocol, you may request all events since a particular ID by including the optional &lt;code&gt;Last-Event-ID&lt;/code&gt; Header. If the ID is omitted, or not recognized, the stream will start from the beginning of the job.</source>
          <target state="translated">SSE 프로토콜에 지정된대로 선택적 &lt;code&gt;Last-Event-ID&lt;/code&gt; 헤더 를 포함하여 특정 ID 이후의 모든 이벤트를 요청할 수 있습니다 . ID가 생략되거나 인식되지 않으면 작업 시작 부분부터 스트림이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="370ace03cae80d85f2cbfea8e9f79bfcdb74956c" translate="yes" xml:space="preserve">
          <source>As specified in the SSE protocol, you may request all events since a particular ID by including the optional &lt;code&gt;Last-Event-ID&lt;/code&gt; Header. If this header is not included, no events will be produced until the next activity in the organization produces an event. If the &lt;code&gt;Last-Event-ID&lt;/code&gt; header is passed but not recognized, it is assumed that the ID has already expired, and the feed will produce the events as far back as are recorded, proceeded by a synthetic &lt;code&gt;start_of_history&lt;/code&gt;. The expiration time of organization events is 60 seconds (configurable).</source>
          <target state="translated">SSE 프로토콜에 지정된대로 선택적 &lt;code&gt;Last-Event-ID&lt;/code&gt; 헤더 를 포함하여 특정 ID 이후의 모든 이벤트를 요청할 수 있습니다 . 이 헤더가 포함되지 않은 경우 조직의 다음 활동이 이벤트를 생성 할 때까지 이벤트가 생성되지 않습니다. 는 IF &lt;code&gt;Last-Event-ID&lt;/code&gt; 헤더는 통과하지만, 인식되지 않는, ID가 이미 만료 된 것으로 가정하고, 피드는 합성에 의해 진행까지 거슬러 기록과 이벤트를 생성합니다 &lt;code&gt;start_of_history&lt;/code&gt; 을 . 조직 이벤트의 만료 시간은 60 초입니다 (구성 가능).</target>
        </trans-unit>
        <trans-unit id="3669b7c2b0f82b6918bb5aae5524d96bc90f2f98" translate="yes" xml:space="preserve">
          <source>As stated earlier, the Supervisor reads its secret from its &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt; file, the contents of which you can control using &lt;code&gt;hab sup secret generate&lt;/code&gt; and your chosen provisioner / deployment tooling. This ensures that the shared secret is in place, but one more step must be taken to fully enable the feature.</source>
          <target state="translated">앞에서 언급했듯이 Supervisor는 &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt; 파일 에서 비밀을 읽습니다.이 파일의 내용은 &lt;code&gt;hab sup secret generate&lt;/code&gt; 및 선택한 프로비저닝 도구 / 배포 도구를 사용하여 제어 할 수 있습니다 . 이렇게하면 공유 암호가 제자리에 있는지 확인할 수 있지만 기능을 완전히 활성화하려면 한 단계 더 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="431d486c4c75309d92317b5ab549c41d60e32d78" translate="yes" xml:space="preserve">
          <source>As such, overriding core resources is not recommended best practice.</source>
          <target state="translated">따라서 핵심 리소스를 재정의하는 것은 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f3830668b5522ba475ae1d1c1948dd05ef15ecea" translate="yes" xml:space="preserve">
          <source>As the internal resources and providers in core chef have been ported over to use the &lt;code&gt;Chef::ProviderResolver&lt;/code&gt; dynamic resolution the use of the old Chef::Platform class methods have actually been broken. Tools like &lt;code&gt;chefspec&lt;/code&gt; and &lt;code&gt;chef-minitest-handler&lt;/code&gt; were ported over to the new APIs in Chef Client 12.0. The &lt;code&gt;Chef::Resource#provider_for_action&lt;/code&gt; API dates back to before Chef Client 11.0.0 and is fully backwards compatible, any remaining code using the old APIs should be exceedingly buggy at this point.</source>
          <target state="translated">핵심 chef의 내부 리소스와 공급자가 &lt;code&gt;Chef::ProviderResolver&lt;/code&gt; 동적 확인 을 사용하도록 포팅되었으므로 이전 Chef :: Platform 클래스 메서드의 사용이 실제로 중단되었습니다. &lt;code&gt;chefspec&lt;/code&gt; 및 &lt;code&gt;chef-minitest-handler&lt;/code&gt; 와 같은 도구 는 Chef Client 12.0의 새로운 API로 포팅되었습니다. &lt;code&gt;Chef::Resource#provider_for_action&lt;/code&gt; API 날짜는 요리사 클라이언트 11.0.0 이전에 백업하고 완벽하게 호환, 기존의 API를 사용하여 남아있는 코드는이 시점에서 상당히 버그가 있어야한다.</target>
        </trans-unit>
        <trans-unit id="3cd2efc2e68fcb076cea000b241c808d43890cdd" translate="yes" xml:space="preserve">
          <source>As the queue depth increases it may take longer for updates posted to the Chef server by each chef-client to be added to the search indexes on the Chef server. The depth of this queue should be monitored using the following command:</source>
          <target state="translated">큐 깊이가 증가함에 따라 각 Chef-Client가 Chef 서버에 게시 한 업데이트가 Chef 서버의 검색 색인에 추가되는 데 시간이 더 걸릴 수 있습니다. 이 큐의 깊이는 다음 명령을 사용하여 모니터링해야합니다.</target>
        </trans-unit>
        <trans-unit id="745243210a1c51c8c060c829fe571c74d0e38a7c" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;configure&lt;/code&gt;, you can run data lifecycle jobs globally across all data or by using the data type sub-resource.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; 및 &lt;code&gt;configure&lt;/code&gt; 와 마찬가지로 모든 데이터에서 또는 데이터 유형 하위 리소스를 사용하여 전역 적으로 데이터 수명주기 작업을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb90965cc602725ae38d343632b7b63687a8e00e" translate="yes" xml:space="preserve">
          <source>As with Linux, you must first &lt;a href=&quot;../install_habitat/index&quot;&gt;install Chef Habitat&lt;/a&gt; on the machine. Unlike Linux, however, the Windows Supervisor has no requirements for any &lt;code&gt;hab&lt;/code&gt; user.</source>
          <target state="translated">Linux와 마찬가지로 먼저 컴퓨터에 &lt;a href=&quot;../install_habitat/index&quot;&gt;Chef Habitat&lt;/a&gt; 을 설치 해야합니다 . 그러나 Linux와 달리 Windows Supervisor에는 &lt;code&gt;hab&lt;/code&gt; 사용자에 대한 요구 사항이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="583239085c0a379329c5d381b9b60296c0475cab" translate="yes" xml:space="preserve">
          <source>As with all Supervisor interaction commands, if you do not specify &lt;code&gt;--remote-sup&lt;/code&gt;, &lt;code&gt;hab config apply&lt;/code&gt; will attempt to connect to a Supervisor running on the same host.</source>
          <target state="translated">모든 감독자 상호 작용 명령과 마찬가지로, 당신은 지정하지 않는 경우 &lt;code&gt;--remote-sup&lt;/code&gt; , &lt;code&gt;hab config apply&lt;/code&gt; 감독자가 동일한 호스트에서 실행에 연결을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="c832bcca5c47ffc8b036653d9eebc60dfc3dbbf9" translate="yes" xml:space="preserve">
          <source>As with any topology using leader election, you must start at least three peers using the &lt;code&gt;--topology leader&lt;/code&gt; flag to the Supervisor.</source>
          <target state="translated">리더 선택을 사용하는 모든 토폴로지와 마찬가지로 Supervisor에 대해 &lt;code&gt;--topology leader&lt;/code&gt; 플래그를 사용하여 최소 3 개의 피어를 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="31e3fe8fcd612517267a2ee34fbd651419e56d07" translate="yes" xml:space="preserve">
          <source>As with the prior example, only &lt;code&gt;baseline-2&lt;/code&gt; and &lt;code&gt;baseline-4&lt;/code&gt; are executed, but if &lt;code&gt;baseline-2&lt;/code&gt; fails, it will report with an impact of &lt;code&gt;0.5&lt;/code&gt; instead of the originally-intended &lt;code&gt;1.0&lt;/code&gt; impact.</source>
          <target state="translated">이전 예와 마찬가지로 &lt;code&gt;baseline-2&lt;/code&gt; 와 &lt;code&gt;baseline-4&lt;/code&gt; 만 실행되지만 &lt;code&gt;baseline-2&lt;/code&gt; 가 실패 하면 원래 의도 한 &lt;code&gt;1.0&lt;/code&gt; 영향 대신 &lt;code&gt;0.5&lt;/code&gt; 의 영향으로보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="e017ff25831f62fc424092e4da9b8916855665df" translate="yes" xml:space="preserve">
          <source>As you are working with other members of the community, please keep in mind that the following guidelines apply equally to founders, mentors, those who submit new features/pull requests, and anyone who is seeking help and guidance.</source>
          <target state="translated">커뮤니티의 다른 구성원과 함께 작업 할 때 다음 지침은 설립자, 멘토, 새로운 기능 / 풀 요청을 제출하는 사람 및 도움과 안내를 찾는 모든 사람에게 동일하게 적용된다는 점을 명심하십시오.</target>
        </trans-unit>
        <trans-unit id="1d88aa192f5edde498ebe7abf47f3417d6591450" translate="yes" xml:space="preserve">
          <source>As you can see, the Chef InSpec test files just focuses on tests and tries to avoid all clutter.</source>
          <target state="translated">보시다시피 Chef InSpec 테스트 파일은 테스트에 초점을 맞추고 모든 혼란을 피하려고합니다.</target>
        </trans-unit>
        <trans-unit id="7644623021703cf2b42f7d053019a0140d501d77" translate="yes" xml:space="preserve">
          <source>As you make changes to the cookbooks, follow your organization&amp;rsquo;s existing software development practices. Commit your changes to your cookbooks and submit your changes to your cookbook pipeline to be tested by your automated testing system. Once the changes have passed testing, the cookbooks should receive new version numbers and be published to the new Chef Infra Server by the continuous deployment system.</source>
          <target state="translated">요리 책을 변경할 때 조직의 기존 소프트웨어 개발 관행을 따르십시오. 쿡북에 대한 변경 사항을 커밋하고 변경 사항을 쿡북 파이프 라인에 제출하여 자동화 된 테스트 시스템에서 테스트합니다. 변경 사항이 테스트를 통과하면 쿡북은 새 버전 번호를 받고 지속적 배포 시스템에 의해 새 Chef Infra Server에 게시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="94f4b9e6233d642dc61cb62091c84bf1402975e4" translate="yes" xml:space="preserve">
          <source>Aside from controls, profiles can also contain &lt;a href=&quot;#custom-resource&quot;&gt;custom resources&lt;/a&gt;. If the profile contains only custom resources and no controls, we call it a &lt;a href=&quot;#resource-pack&quot;&gt;resource pack&lt;/a&gt;.</source>
          <target state="translated">컨트롤 외에도 프로필에는 &lt;a href=&quot;#custom-resource&quot;&gt;사용자 지정 리소스가&lt;/a&gt; 포함될 수 있습니다 . 프로필에 사용자 지정 리소스 만 포함되고 컨트롤이없는 경우이를 &lt;a href=&quot;#resource-pack&quot;&gt;리소스 팩&lt;/a&gt; 이라고합니다 .</target>
        </trans-unit>
        <trans-unit id="35332641e67d9d64731b1d8ee12d48ebe669da15" translate="yes" xml:space="preserve">
          <source>Ask the violator to stop the unacceptable behavior.</source>
          <target state="translated">위반자에게 용납 할 수없는 행동을 중지하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="57f17574efd73916f01b13e96de2424f3a96a8fc" translate="yes" xml:space="preserve">
          <source>Assemble a previously created array into an active array.</source>
          <target state="translated">이전에 생성 한 어레이를 활성 어레이로 조립합니다.</target>
        </trans-unit>
        <trans-unit id="ea303605e12d9c4454e41424fec7fd4b33a167cc" translate="yes" xml:space="preserve">
          <source>Assert default Security Center Policy exists</source>
          <target state="translated">기본 보안 센터 정책이 있음을 확인</target>
        </trans-unit>
        <trans-unit id="9eaeedf98c2b460cb592ceac57b1fd252caab120" translate="yes" xml:space="preserve">
          <source>Assert that the default Security Center Policy exists</source>
          <target state="translated">기본 보안 센터 정책이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="6e35d34fe04e7d19cd9a0112320af7b195a4630b" translate="yes" xml:space="preserve">
          <source>Assert that the default Security Center Policy has log collection enabled</source>
          <target state="translated">기본 보안 센터 정책에 로그 수집이 활성화되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="14e86b8d9364759ffb6a25690cfa7ea02e463cf7" translate="yes" xml:space="preserve">
          <source>Assertion Consumer Service / Reply URL. This is where Chef Automate receives SAML assertions from the Identity Provider:</source>
          <target state="translated">어설 션 소비자 서비스 / 회신 URL. 여기에서 Chef Automate가 아이덴티티 공급자로부터 SAML 어설 션을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="19cf97be5a2ef4233a45ee5565668941d5d73c53" translate="yes" xml:space="preserve">
          <source>Asserts whether the deployed Azure WebApp is using the latest supported version of the given language/stack. Supported stacks (i.e. python, java, php, node) can be found in the &lt;code&gt;properties&lt;/code&gt; section of WebApp Configuration &lt;a href=&quot;https://docs.microsoft.com/en-us/rest/api/appservice/webapps/getconfiguration#siteconfigresource&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">배포 된 Azure WebApp이 지정된 언어 / 스택의 최신 지원 버전을 사용하는지 여부를 지정합니다. 지원되는 스택 (예 : python, java, php, node) 은 WebApp 구성 &lt;a href=&quot;https://docs.microsoft.com/en-us/rest/api/appservice/webapps/getconfiguration#siteconfigresource&quot;&gt;문서&lt;/a&gt; 의 &lt;code&gt;properties&lt;/code&gt; 섹션 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="858729fff0a41cec1905d6b83452556d173b4dc1" translate="yes" xml:space="preserve">
          <source>Assign Dependencies</source>
          <target state="translated">종속성 할당</target>
        </trans-unit>
        <trans-unit id="06fb46b73786d060a421debe477236595eb5e067" translate="yes" xml:space="preserve">
          <source>Assign a local variable:</source>
          <target state="translated">지역 변수를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="144c5d881ab63189ad201cda14ca6bd7ce4e6522" translate="yes" xml:space="preserve">
          <source>Assign a unique name for the notification</source>
          <target state="translated">알림에 고유 한 이름 지정</target>
        </trans-unit>
        <trans-unit id="7f980e41d2e4d29db8fa522911b6603f59fb2a85" translate="yes" xml:space="preserve">
          <source>Assign a value</source>
          <target state="translated">값을 할당</target>
        </trans-unit>
        <trans-unit id="214703c8c0787858e3dd7ee8ec9429f3281633e7" translate="yes" xml:space="preserve">
          <source>Assign your set of ingested Client Run and Compliance Nodes to projects via the project ingest rules that you create for the project. An ingest rule specifies one or more conditions, and each condition specifies a set of attribute values that a node must include for assignment to the given project.</source>
          <target state="translated">프로젝트에 대해 생성 한 프로젝트 수집 규칙을 통해 수집 된 클라이언트 실행 및 준수 노드 집합을 프로젝트에 할당합니다. 수집 규칙은 하나 이상의 조건을 지정하고 각 조건은 주어진 프로젝트에 할당하기 위해 노드가 포함해야하는 속성 값 세트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="22b01c5fcee3d160ddad19768c49338f39a00525" translate="yes" xml:space="preserve">
          <source>Assigned service group for the package. &lt;strong&gt;Not used in a &lt;code&gt;plan.ps1&lt;/code&gt;.&lt;/strong&gt; Type: string. Default: &lt;code&gt;hab&lt;/code&gt;. &lt;em&gt;Optional&lt;/em&gt;.</source>
          <target state="translated">패키지에 할당 된 서비스 그룹입니다. &lt;strong&gt; &lt;code&gt;plan.ps1&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; 에서는 사용되지 않습니다 . &lt;/strong&gt;유형 : 문자열. 기본값 : &lt;code&gt;hab&lt;/code&gt; . &lt;em&gt;선택 사항&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6bf790107c0257e0330e9bd5c7ad1347af550d94" translate="yes" xml:space="preserve">
          <source>Assigning Ingested Resources to Projects</source>
          <target state="translated">수집 된 리소스를 프로젝트에 할당</target>
        </trans-unit>
        <trans-unit id="6d3b27f523c514efd07c299a608112fb94fd1ac5" translate="yes" xml:space="preserve">
          <source>Assigning Resources to Projects</source>
          <target state="translated">프로젝트에 자원 할당</target>
        </trans-unit>
        <trans-unit id="f357edf9d370cf07a3d3a40f1a4ea2cc6ef5062c" translate="yes" xml:space="preserve">
          <source>Assigning Teams and Tokens to Projects</source>
          <target state="translated">프로젝트에 팀 및 토큰 할당</target>
        </trans-unit>
        <trans-unit id="bd5586d4e25740342c74394366abcc20ea1a18c7" translate="yes" xml:space="preserve">
          <source>Assigning the virtual IP address and sending a &lt;code&gt;proxy-arp&lt;/code&gt;; this step transitions the virtual IP address, which means traffic will flow to the back-end Chef server while it makes the transition to becoming the primary Chef server.</source>
          <target state="translated">가상 IP 주소 할당 및 &lt;code&gt;proxy-arp&lt;/code&gt; 전송 ; 이 단계는 가상 IP 주소를 전환합니다. 즉, 트래픽이 백엔드 Chef 서버로 흐르고 기본 Chef 서버로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="9c1fa11ff3555c5d0f6c027a7002383c63f12ef9" translate="yes" xml:space="preserve">
          <source>Assigns a name to a port number. For example: {name: &amp;ldquo;http&amp;rdquo;, port: 80}. This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: &amp;ldquo;http&amp;rdquo;, port: 80},{name: &amp;ldquo;http&amp;rdquo;, port: 8080}] Named ports apply to all instances in this instance group.</source>
          <target state="translated">포트 번호에 이름을 지정합니다. 예 : {name : &quot;http&quot;, port : 80}. 이를 통해 시스템은 포트 번호 대신 할당 된 이름으로 포트를 참조 할 수 있습니다. 명명 된 포트는 여러 포트를 포함 할 수도 있습니다. 예 : [{name : &quot;http&quot;, port : 80}, {name : &quot;http&quot;, port : 8080}] 이름이 지정된 포트는이 인스턴스 그룹의 모든 인스턴스에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="89edb1060ccaf249e829dd4cab5fc55658796148" translate="yes" xml:space="preserve">
          <source>Assigns a priority to a repository where the priority value is between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;99&lt;/code&gt; inclusive. Priorities are used to enforce ordered protection of repositories. Packages from repositories with a lower priority (higher numerical value) will never be used to upgrade packages that were installed from a repository with a higher priority (lower numerical value). The repositories with the lowest numerical priority number have the highest priority.</source>
          <target state="translated">우선 순위 값이 &lt;code&gt;1&lt;/code&gt; 에서 &lt;code&gt;99&lt;/code&gt; ( 포함 ) 사이 인 저장소에 우선 순위를 지정 합니다. 우선 순위는 리포지토리의 순서가 지정된 보호를 적용하는 데 사용됩니다. 더 낮은 우선 순위 (더 높은 숫자 값)를 가진 저장소의 패키지는 더 높은 우선 순위 (더 낮은 숫자 값)를 가진 저장소에서 설치된 패키지를 업그레이드하는 데 사용되지 않습니다. 숫자 우선 순위 번호가 가장 낮은 저장소가 가장 높은 우선 순위를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="c7ed432e125e6772920b262ec8535da9101e55d4" translate="yes" xml:space="preserve">
          <source>Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.</source>
          <target state="translated">0부터 시작하는 인덱스를이 디스크에 할당합니다. 여기서 0은 부팅 디스크 용으로 예약되어 있습니다. 예를 들어 인스턴스에 연결된 디스크가 많은 경우 각 디스크에는 고유 한 색인 번호가 있습니다. 지정하지 않으면 서버가 적절한 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="e83dfb0a5299bee79cf1797002a855998dbb8e83" translate="yes" xml:space="preserve">
          <source>Assigns an instance name of &lt;code&gt;httpd_site&lt;/code&gt; that uses port 81</source>
          <target state="translated">포트 81을 사용 하는 &lt;code&gt;httpd_site&lt;/code&gt; 의 인스턴스 이름을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="21d6c2c5bc38e5402b183be100dbdbc1ea70b6bf" translate="yes" xml:space="preserve">
          <source>Associate &lt;code&gt;USER_NAME&lt;/code&gt; with the organization after creation.</source>
          <target state="translated">만든 후 &lt;code&gt;USER_NAME&lt;/code&gt; 을 조직에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="818176fa77e247cc3a5e7d7d3b8cf37b726dae38" translate="yes" xml:space="preserve">
          <source>Associate a user with an organization and add them to the &lt;code&gt;admins&lt;/code&gt; and &lt;code&gt;billing_admins&lt;/code&gt; security groups.</source>
          <target state="translated">사용자를 조직과 연관시키고 &lt;code&gt;admins&lt;/code&gt; 및 &lt;code&gt;billing_admins&lt;/code&gt; 보안 그룹에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6bdc08a87a26480a9e316f0c159e5818b2d0fb59" translate="yes" xml:space="preserve">
          <source>Associate the IAM role for backup access.</source>
          <target state="translated">백업 액세스를 위해 IAM 역할을 연결합니다.</target>
        </trans-unit>
        <trans-unit id="22c8e67b52c434a1f5f88193b01ee3967e767167" translate="yes" xml:space="preserve">
          <source>Associated Role</source>
          <target state="translated">관련 역할</target>
        </trans-unit>
        <trans-unit id="fa774e31718ce44a7ec8cf58f0c5e2d906425f44" translate="yes" xml:space="preserve">
          <source>Associates a list of members to a role.</source>
          <target state="translated">구성원 목록을 역할에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="d7a76eff1c8e7b20ce80d3e42034e8ebaa2d6bc3" translate="yes" xml:space="preserve">
          <source>Associating Workflow with your GitHub instance</source>
          <target state="translated">워크 플로를 GitHub 인스턴스와 연결</target>
        </trans-unit>
        <trans-unit id="fd30594aa84f1cce9f1c36cc9c454d06a15a44f9" translate="yes" xml:space="preserve">
          <source>Assume a helper module has been created in the cookbook &lt;code&gt;libraries/helper.rb&lt;/code&gt; file.</source>
          <target state="translated">쿡북 &lt;code&gt;libraries/helper.rb&lt;/code&gt; 파일 에 도우미 모듈이 생성되었다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="ba29720d4c4218d210fb5adce1497597e63dfebb" translate="yes" xml:space="preserve">
          <source>Assume we have some projects with the following dependencies:</source>
          <target state="translated">다음과 같은 종속성을 가진 프로젝트가 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="2e127ba7a8c4ef833d5db1368f5b8a062c3900b5" translate="yes" xml:space="preserve">
          <source>Assume you named your project &lt;code&gt;Devops&lt;/code&gt;, and have two users: Terry and Kelly. If Terry needs to &lt;em&gt;view&lt;/em&gt;&lt;code&gt;Devops&lt;/code&gt;-scoped resources, then add Terry as a member to the &lt;code&gt;Devops&lt;/code&gt; Project Viewers policy. If Kelly needs the ability to &lt;em&gt;edit&lt;/em&gt;&lt;code&gt;Devops&lt;/code&gt;-scoped resources, then add Kelly to the &lt;code&gt;Devops&lt;/code&gt; Project Editor policy.</source>
          <target state="translated">프로젝트 이름을 &lt;code&gt;Devops&lt;/code&gt; 로 지정하고 Terry와 Kelly 라는 두 명의 사용자가 있다고 가정합니다 . Terry가 &lt;code&gt;Devops&lt;/code&gt; 범위 리소스 를 &lt;em&gt;확인 &lt;/em&gt;해야하는 경우 &lt;code&gt;Devops&lt;/code&gt; 프로젝트 뷰어 정책 에 Terry를 구성원으로 추가 합니다. Kelly가 &lt;code&gt;Devops&lt;/code&gt; 범위 리소스 를 &lt;em&gt;편집&lt;/em&gt; 할 수있는 기능이 필요한 경우 Kelly를 &lt;code&gt;Devops&lt;/code&gt; 프로젝트 편집기 정책에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ad3b82f4b2150476bee6c3bc6e557e4a020baf15" translate="yes" xml:space="preserve">
          <source>Assuming that &lt;code&gt;etcd&lt;/code&gt; and &lt;code&gt;leaderl&lt;/code&gt; are running properly, two of the three nodes can have service-level PostgreSQL failures. Once the service-level problems have been resolved, the two failed nodes can be resynced from the leader node.</source>
          <target state="translated">&lt;code&gt;etcd&lt;/code&gt; 및 &lt;code&gt;leaderl&lt;/code&gt; 이 제대로 실행되고 있다고 가정하면 3 개 노드 중 2 개에 서비스 수준 PostgreSQL 오류가 발생할 수 있습니다. 서비스 수준 문제가 해결되면 실패한 두 노드를 리더 노드에서 다시 동기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df0e90a9f475eed0e2622fbc5c8991cc3b7023db" translate="yes" xml:space="preserve">
          <source>Assuming the attributes yml file contains your GCP project ID, this sample profile can then be executed using the following command:</source>
          <target state="translated">속성 yml 파일에 GCP 프로젝트 ID가 포함되어 있다고 가정하면이 샘플 프로필은 다음 명령어를 사용하여 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f1d1e0068b2a7eddc490bf93dad0946efa1df74" translate="yes" xml:space="preserve">
          <source>Assuming you&amp;rsquo;re using the Docker image pulled from &lt;code&gt;myorigin/mytutorial&lt;/code&gt;, port 8080 on the container should be accessible. Pass networking ports exposed by Chef Habitat with &lt;code&gt;kubectl run&lt;/code&gt; as &lt;code&gt;--port&lt;/code&gt; options. In this example, the &lt;code&gt;kubectl get&lt;/code&gt; command is:</source>
          <target state="translated">&lt;code&gt;myorigin/mytutorial&lt;/code&gt; 에서 가져온 Docker 이미지를 사용한다고 가정하면 컨테이너의 포트 8080에 액세스 할 수 있어야합니다. &lt;code&gt;--port&lt;/code&gt; 옵션으로 &lt;code&gt;kubectl run&lt;/code&gt; 되는 kubectl을 사용 하여 Chef Habitat에 의해 노출 된 네트워킹 포트를 전달합니다 . 이 예에서 &lt;code&gt;kubectl get&lt;/code&gt; 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b593995c88f61a609044a01e37e8e4ccc22e065" translate="yes" xml:space="preserve">
          <source>Assumptions</source>
          <target state="translated">Assumptions</target>
        </trans-unit>
        <trans-unit id="06ab452e5e4de71a3cb78a52303bb0b02b82c3e6" translate="yes" xml:space="preserve">
          <source>Asynchronous Resources</source>
          <target state="translated">비동기 리소스</target>
        </trans-unit>
        <trans-unit id="b3104570f2c7cab4118f3d3535b642513f011bad" translate="yes" xml:space="preserve">
          <source>Asynchronous block level replication of logical volume managers, positioned between the two back-end machines</source>
          <target state="translated">두 백엔드 시스템 사이에 위치한 논리 볼륨 관리자의 비동기 블록 레벨 복제</target>
        </trans-unit>
        <trans-unit id="c1d53d3d0bc0f3756b0bce7a8e6c60a850201986" translate="yes" xml:space="preserve">
          <source>At Chef&amp;rsquo;s option, additional support may be provided to customers beyond the vendor end-of-life in the above table. As such, the following table indicates upcoming product end-of-life dates for particular platforms. On the Chef end-of-life date, Chef discontinues building software for that platform and version.</source>
          <target state="translated">Chef의 선택에 따라 위 표의 공급 업체 수명 종료 이후에 고객에게 추가 지원이 제공 될 수 있습니다. 따라서 다음 표는 특정 플랫폼의 향후 제품 수명 종료 날짜를 나타냅니다. Chef 수명 종료 날짜에 Chef는 해당 플랫폼 및 버전에 대한 소프트웨어 빌드를 중단합니다.</target>
        </trans-unit>
        <trans-unit id="378d48697571df1b6b68a5846bbc129bab876bae" translate="yes" xml:space="preserve">
          <source>At a minimum, you must update the following settings with the appropriate values:</source>
          <target state="translated">최소한 다음 설정을 적절한 값으로 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b7c543c3f646745346e5051aff83c778080c638" translate="yes" xml:space="preserve">
          <source>At any given time, only one DRBD host has &lt;code&gt;userland&lt;/code&gt; access to data, This host is referred to as the primary node. The other host runs the DRBD daemon, but cannot mount the storage into the file system. The secondary node receives information from the primary node, and then replicates disk actions on its local storage copy (even if the partition looks like it doesn&amp;rsquo;t have a file system to which a &lt;code&gt;mount&lt;/code&gt; command can be sent).</source>
          <target state="translated">주어진 시간에 단 하나의 DRBD 호스트 만 데이터에 대한 &lt;code&gt;userland&lt;/code&gt; 액세스 권한을 갖습니다 .이 호스트를 기본 노드라고합니다. 다른 호스트는 DRBD 데몬을 실행하지만 스토리지를 파일 시스템에 마운트 할 수 없습니다. 보조 노드는 기본 노드에서 정보를 수신 한 후 로컬 스토리지 사본에서 디스크 조치를 복제합니다 (파티션에 &lt;code&gt;mount&lt;/code&gt; 명령을 보낼 수 있는 파일 시스템이없는 것처럼 보이더라도 ).</target>
        </trans-unit>
        <trans-unit id="49e6ada2e250c2cba7f881788f931cc5f54066b1" translate="yes" xml:space="preserve">
          <source>At least one action (actions tell Chef Infra Client what to do)</source>
          <target state="translated">하나 이상의 작업 (작업은 Chef Infra Client에 수행 할 작업을 알려줌)</target>
        </trans-unit>
        <trans-unit id="9d71cbf1915844bcd437759638f196186484ad88" translate="yes" xml:space="preserve">
          <source>At least one action (actions tell the chef-client what to do)</source>
          <target state="translated">하나 이상의 작업 (작업이 요리사 클라이언트에게 수행 할 작업을 알려줍니다)</target>
        </trans-unit>
        <trans-unit id="dba8392fff1c8815bdd9dff7b78f30b5cf6bea49" translate="yes" xml:space="preserve">
          <source>At least one management workstation</source>
          <target state="translated">하나 이상의 관리 워크 스테이션</target>
        </trans-unit>
        <trans-unit id="fb6383920765beac0727f6e9a9eb7b57787f8159" translate="yes" xml:space="preserve">
          <source>At least one of &lt;code&gt;--password [PASSWORD]&lt;/code&gt; or &lt;code&gt;--ssh-identity-file FILE&lt;/code&gt; are necessary for ssh access.</source>
          <target state="translated">ssh 액세스 에는 &lt;code&gt;--password [PASSWORD]&lt;/code&gt; 또는 &lt;code&gt;--ssh-identity-file FILE&lt;/code&gt; 중 하나 이상 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="de393c8d3646ac0e156cf77b4f4f74b3d5013f3a" translate="yes" xml:space="preserve">
          <source>At least one of the following parameters must be provided.</source>
          <target state="translated">다음 매개 변수 중 하나 이상을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="87cdee25a7b81d1f6c91e6376083edbaa4a53c08" translate="yes" xml:space="preserve">
          <source>At runtime - Users can alter config at runtime using &lt;code&gt;hab config apply&lt;/code&gt;. The input for this command also uses the TOML format.</source>
          <target state="translated">런타임시-사용자는 &lt;code&gt;hab config apply&lt;/code&gt; 를 사용하여 런타임시 구성을 변경할 수 있습니다 . 이 명령에 대한 입력은 TOML 형식도 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ca5320409e5caaa061fe199efecf48932d0a3d00" translate="yes" xml:space="preserve">
          <source>At the bare minimum, you must set the version to v2:</source>
          <target state="translated">최소한 버전을 v2로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="f95cedf3c66158b0b35f13f6c0c2243a53fdc480" translate="yes" xml:space="preserve">
          <source>At the beginning of a chef-client run, all attributes are reset. The chef-client rebuilds them using automatic attributes collected by Ohai at the beginning of the chef-client run and then using default and override attributes that are specified in cookbooks or by roles and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the chef-client run, the attributes that were applied to the node are saved to the Chef server as part of the node object.</source>
          <target state="translated">chef-client 실행이 시작되면 모든 속성이 재설정됩니다. 요리사-클라이언트는 요리사-클라이언트 실행을 시작할 때 Ohai가 수집 한 자동 속성을 사용하여 요리 책을 만들거나 요리 책이나 역할 및 환경에 지정된 기본 및 재정의 속성을 사용하여이를 재구성합니다. 일반 속성은 재설정되지 않습니다. 그런 다음 모든 속성이 속성 우선 순위에 따라 병합되어 노드에 적용됩니다. chef-client 실행이 끝나면 노드에 적용된 속성이 노드 오브젝트의 일부로 Chef 서버에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="41ad996be01b1a1ea0143cbd315c3fcbc3058bb3" translate="yes" xml:space="preserve">
          <source>At the center of Chef Habitat packaging is the plan. This is a directory comprised of shell scripts and optional configuration files that define how you download, configure, make, install, and manage the lifecycle of the software in the artifact. More conceptual information on artifacts can be found in the &lt;a href=&quot;../pkg_ids/index&quot;&gt;Package Identifiers&lt;/a&gt; page.</source>
          <target state="translated">Chef Habitat 포장의 중심에는 계획이 있습니다. 이는 아티팩트에서 소프트웨어의 라이프 사이클을 다운로드, 구성, 작성, 설치 및 관리하는 방법을 정의하는 셸 스크립트 및 선택적 구성 파일로 구성된 디렉토리입니다. 아티팩트에 대한 더 많은 개념 정보는 &lt;a href=&quot;../pkg_ids/index&quot;&gt;패키지 식별자&lt;/a&gt; 페이지 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="768175ee2b45ba5965087228eb3f082530025f4f" translate="yes" xml:space="preserve">
          <source>At the end of every Chef Infra Client run, the node object is saved to the Chef Infra Server. From the Chef Infra Server, each node object is then added to the &lt;code&gt;SOLR&lt;/code&gt; search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">Chef Infra Client 실행이 끝날 때마다 노드 개체가 Chef Infra 서버에 저장됩니다. Chef Infra Server에서 각 노드 개체가 &lt;code&gt;SOLR&lt;/code&gt; 검색 인덱스에 추가됩니다 . 이 프로세스는 비동기 적입니다. 기본적으로 노드 개체는 60 초마다 또는 1000 개의 노드 개체 중 먼저 발생하는 시점에 검색 인덱스에 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="55d2227ef33e2a61e15b4e070d83b938b3b26f3a" translate="yes" xml:space="preserve">
          <source>At the end of every Chef Infra Client run, the node object is saved to the Chef Infra Server. From the Chef Infra Server, each node object is then added to the Apache Solr search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">Chef Infra Client 실행이 끝날 때마다 노드 개체가 Chef Infra 서버에 저장됩니다. Chef Infra Server에서 각 노드 개체가 Apache Solr 검색 색인에 추가됩니다. 이 프로세스는 비동기식입니다. 기본적으로 노드 개체는 60 초마다 또는 1000 개의 노드 개체 중 먼저 발생하는 시점에 검색 인덱스에 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="184942f4aa8da74441a65d20bc162311e7bec185" translate="yes" xml:space="preserve">
          <source>At the end of every chef-client run, the node object is saved to the Chef server. From the Chef server, each node object is then added to the &lt;code&gt;SOLR&lt;/code&gt; search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">모든 chef-client 실행이 끝나면 노드 오브젝트가 Chef 서버에 저장됩니다. Chef 서버에서 각 노드 오브젝트가 &lt;code&gt;SOLR&lt;/code&gt; 검색 색인에 추가됩니다 . 이 프로세스는 비동기 적입니다. 기본적으로 노드 개체는 60 초마다 또는 1000 개 노드 개체 중 빠른 시간에 검색 인덱스에 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="617126bfcd6bd80167d43a4e1f5212a1e5bfbe92" translate="yes" xml:space="preserve">
          <source>At the end of every chef-client run, the node object is saved to the Chef server. From the Chef server, each node object is then added to the Apache Solr search index. This process is asynchronous. By default, node objects are committed to the search index every 60 seconds or per 1000 node objects, whichever occurs first.</source>
          <target state="translated">모든 chef-client 실행이 끝나면 노드 오브젝트가 Chef 서버에 저장됩니다. Chef 서버에서 각 노드 오브젝트가 Apache Solr 검색 색인에 추가됩니다. 이 프로세스는 비동기 적입니다. 기본적으로 노드 개체는 60 초마다 또는 1000 개 노드 개체 중 빠른 시간에 검색 인덱스에 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="025f6c74028d99947ed8cd58130b5778eea47b67" translate="yes" xml:space="preserve">
          <source>At the end of the deployment process you will see:</source>
          <target state="translated">배포 프로세스가 끝나면 다음이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5284052651bf51e5d94fad49a974a1f7daa7d475" translate="yes" xml:space="preserve">
          <source>At the end, the recipe is using the &lt;code&gt;notifies&lt;/code&gt; property&amp;mdash;a common attribute available to all resources&amp;mdash;to alert two services (named &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo;) that they should restart.</source>
          <target state="translated">끝에서, 조리법은 사용 &lt;code&gt;notifies&lt;/code&gt; 경고에 리소스를 두 서비스가 다시 시작해야 (이름이 &quot;foo는&quot;과 &quot;바&quot;) 모든 가능한 부동산 - 공통 속성을.</target>
        </trans-unit>
        <trans-unit id="88f69dd38efbd0cf3b73e2e28229af058eee6928" translate="yes" xml:space="preserve">
          <source>At the moment, there doesn&amp;rsquo;t appear to be a way to select the version of the Azure API docs. If you notice a newer version being referenced in the official documentation please open an issue or submit a pull request using the updated version.</source>
          <target state="translated">현재로서는 Azure API 문서의 버전을 선택하는 방법이없는 것 같습니다. 공식 문서에서 최신 버전이 참조되는 것을 발견하면 문제를 열거 나 업데이트 된 버전을 사용하여 풀 요청을 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="ba1a38e35a57ecdab65a85211c2cd9ad97dfaa7a" translate="yes" xml:space="preserve">
          <source>At this phase of the build, the origin key has been checked for, all package dependencies have been resolved and downloaded, and the &lt;code&gt;$PATH&lt;/code&gt; and environment are set, but this is just before any source downloading would occur (if &lt;code&gt;$pkg_source&lt;/code&gt; is set). This could be a suitable phase in which to compute a dynamic version of a package given the state of a Git repository, fire an API call, start timing something, etc.</source>
          <target state="translated">이 빌드 단계에서 오리진 키가 확인되고 모든 패키지 종속성이 확인되고 다운로드되었으며 &lt;code&gt;$PATH&lt;/code&gt; 및 환경이 설정되었지만 이는 소스 다운로드가 발생하기 직전입니다 ( &lt;code&gt;$pkg_source&lt;/code&gt; 가 설정된 경우). . 이것은 Git 리포지토리의 상태를 고려하여 패키지의 동적 버전을 계산하고, API 호출을 시작하고, 타이밍을 시작하는 등의 적절한 단계가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74fe9413ace358d2f70d1ccfa954e0b8d962d26a" translate="yes" xml:space="preserve">
          <source>At this phase, the package has been built, installed, stripped, but before the package metadata is written and the artifact is created and signed.</source>
          <target state="translated">이 단계에서 패키지는 빌드, 설치, 제거되었지만 패키지 메타 데이터가 작성되고 아티팩트가 생성되고 서명되기 전에 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d91d73cd73de5a45c13a4aebf677f30c635a262" translate="yes" xml:space="preserve">
          <source>At this point we have a solid set of base packages which can be used to built anything and everything else. As such, it makes sense to at least attempt to rebuild all the other core packages that haven&amp;rsquo;t been touched to this point. The first task here is to generate the build list order of all remaining packages in our &amp;ldquo;world&amp;rdquo; and exclude all the base packages so that we can avoid building them yet another time (for no additional benefit). Luckily, there is a &lt;code&gt;build-order.rb&lt;/code&gt; program in the &lt;code&gt;core-plans&lt;/code&gt; repository that will generate such a list. The reason that this program is in Ruby is to take advantage of the topological sorting library in Ruby&amp;rsquo;s stdlib (called &lt;code&gt;tsort&lt;/code&gt;). If you&amp;rsquo;ve ever used &lt;code&gt;rake&lt;/code&gt; before with tasks and dependencies, &lt;code&gt;tsort&lt;/code&gt; is the magic which powers it.</source>
          <target state="translated">이 시점에서 우리는 모든 것을 구축하는 데 사용할 수있는 견고한 기본 패키지 세트를 가지고 있습니다. 따라서 최소한 지금까지 다루지 않은 다른 모든 핵심 패키지를 다시 빌드하는 것이 좋습니다. 여기서 첫 번째 작업은 &quot;월드&quot;에 남아있는 모든 패키지의 빌드 목록 순서를 생성하고 모든 기본 패키지를 제외하여 다시 빌드하는 것을 방지 할 수 있도록하는 것입니다 (추가 혜택 없음). 다행히도 이러한 목록을 생성 하는 &lt;code&gt;core-plans&lt;/code&gt; 저장소 에 &lt;code&gt;build-order.rb&lt;/code&gt; 프로그램이 있습니다. 이 프로그램이 Ruby에있는 이유는 Ruby의 stdlib ( &lt;code&gt;tsort&lt;/code&gt; 라고 함 ) 에있는 토폴로지 정렬 라이브러리를 활용하기 위해서 입니다. 이전에 작업 및 종속성과 함께 &lt;code&gt;rake&lt;/code&gt; 를 사용한 적이 있다면 &lt;code&gt;tsort&lt;/code&gt; 는 그것을 강화하는 마법입니다.</target>
        </trans-unit>
        <trans-unit id="89f4e6e3cf74941feac9ee38399030ce5715957c" translate="yes" xml:space="preserve">
          <source>At this point, all users should be able to use their Active Directory or LDAP usernames and passwords to log in to the Chef Infra Server.</source>
          <target state="translated">이 시점에서 모든 사용자는 자신의 Active Directory 또는 LDAP 사용자 이름과 비밀번호를 사용하여 Chef Infra Server에 로그인 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a19f796e764224d98868ca2b6cc9e7643dec4e07" translate="yes" xml:space="preserve">
          <source>At this point, all users should be able to use their Active Directory or LDAP usernames and passwords to log in to the Chef server.</source>
          <target state="translated">이 시점에서 모든 사용자는 Active Directory 또는 LDAP 사용자 이름과 비밀번호를 사용하여 Chef 서버에 로그인 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="675e0fcbf0b1da0782277a490d1f57d1482a1d56" translate="yes" xml:space="preserve">
          <source>At this point, enter the path to your cookbook development directory, for example, &lt;code&gt;/Users/user_name/my_cookbooks&lt;/code&gt; at the prompt.</source>
          <target state="translated">이 시점에서 쿡북 개발 디렉토리의 경로를 입력합니다 (예 : 프롬프트에서 &lt;code&gt;/Users/user_name/my_cookbooks&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="6067a41244fa02806d0f404a6a500cd9a6cdd535" translate="yes" xml:space="preserve">
          <source>At this point, the new host should be synchronizing with the secondary back-end server. The secondary back-end server will forget all about the data it was missing from the now-gone primary back-end server, and the process of bringing the Chef server back online can begin.</source>
          <target state="translated">이때 새 호스트는 보조 백엔드 서버와 동기화되어야합니다. 보조 백엔드 서버는 이제 사라진 기본 백엔드 서버에서 누락 된 데이터를 모두 잊어 버리고 Chef 서버를 다시 온라인으로 전환하는 프로세스를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a9dea0f581e3f897f78bd094f9fecfa99652eb8" translate="yes" xml:space="preserve">
          <source>At this time, backend clusters can only have three nodes.</source>
          <target state="translated">현재 백엔드 클러스터에는 3 개의 노드 만있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e59dfe7f072e09c06cb61f4008964a9e6a9385d9" translate="yes" xml:space="preserve">
          <source>At this time, only the users &lt;code&gt;sean_horn&lt;/code&gt; and &lt;code&gt;angle&lt;/code&gt; are authorized to read and manage the vault.</source>
          <target state="translated">현재 &lt;code&gt;sean_horn&lt;/code&gt; 및 &lt;code&gt;angle&lt;/code&gt; 사용자 만 볼트를 읽고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="1d9f045c48f8060de2ab08482d0cf49cf2eef12f" translate="yes" xml:space="preserve">
          <source>At-Once Strategy</source>
          <target state="translated">At-Once 전략</target>
        </trans-unit>
        <trans-unit id="49ab9163a8ceb29e3695cb884b95663dbb239b88" translate="yes" xml:space="preserve">
          <source>Atomic File Updates</source>
          <target state="translated">원자 파일 업데이트</target>
        </trans-unit>
        <trans-unit id="c8e899a441fa17a106696c125382340da1f953bd" translate="yes" xml:space="preserve">
          <source>Atomic updates are enabled by default. They can be managed globally using the &lt;code&gt;file_atomic_update&lt;/code&gt; setting in the client.rb file. They can be managed on a per-resource basis using the &lt;code&gt;atomic_update&lt;/code&gt; property that is available with the &lt;strong&gt;cookbook_file&lt;/strong&gt;, &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;remote_file&lt;/strong&gt;, and &lt;strong&gt;template&lt;/strong&gt; resources.</source>
          <target state="translated">원자 업데이트는 기본적으로 활성화되어 있습니다. client.rb 파일 의 &lt;code&gt;file_atomic_update&lt;/code&gt; 설정을 사용하여 전역 적으로 관리 할 수 ​​있습니다 . &lt;strong&gt;cookbook_file&lt;/strong&gt; , &lt;strong&gt;file&lt;/strong&gt; , &lt;strong&gt;remote_file&lt;/strong&gt; 및 &lt;strong&gt;template&lt;/strong&gt; 자원 과 함께 사용할 수 있는 &lt;code&gt;atomic_update&lt;/code&gt; 특성을 사용하여 자원별로 관리 할 수 ​​있습니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7fc053c82238599e8067922471eb420fbbf6026" translate="yes" xml:space="preserve">
          <source>Atomic updates are used with &lt;strong&gt;file&lt;/strong&gt;-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out.</source>
          <target state="translated">이진 파일을 업데이트하거나 디스크 공간이 부족한 경우 파일 업데이트를 수행 할 수 있도록 &lt;strong&gt;파일&lt;/strong&gt; 기반 리소스 와 함께 원자 업데이트가 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="52d8612c8d00091a78b6a1bf5b4350cb38441188" translate="yes" xml:space="preserve">
          <source>Atomically demotes selected packages in a target channel</source>
          <target state="translated">대상 채널에서 선택한 패키지를 원자 적으로 강등합니다.</target>
        </trans-unit>
        <trans-unit id="82e41f0872324c464253151fd85b3b6d5fd0e163" translate="yes" xml:space="preserve">
          <source>Atomically promotes all packages in channel</source>
          <target state="translated">채널의 모든 패키지를 원자 적으로 홍보</target>
        </trans-unit>
        <trans-unit id="7a24bea786bddf12cd27152c3d2d1b970e938635" translate="yes" xml:space="preserve">
          <source>Attach the S3 bucket access policy to the role.</source>
          <target state="translated">역할에 S3 버킷 액세스 정책을 연결합니다.</target>
        </trans-unit>
        <trans-unit id="07a73ca2fc303af30888e1d85873ef4f02a0df32" translate="yes" xml:space="preserve">
          <source>Attach the Upgraded Node to the New Server</source>
          <target state="translated">업그레이드 된 노드를 새 서버에 연결</target>
        </trans-unit>
        <trans-unit id="47287a10a10a4739025f8695f012c087842058b8" translate="yes" xml:space="preserve">
          <source>Attempt a Converge and Check for Errors</source>
          <target state="translated">수렴 시도 및 오류 확인</target>
        </trans-unit>
        <trans-unit id="a95f896f330aab5ff1839f5ab8e1b45eade25950" translate="yes" xml:space="preserve">
          <source>Attempting to perform an operation using the Habitat client to communicate with a service that has a custom certificate can produce an error, such as:</source>
          <target state="translated">사용자 지정 인증서가있는 서비스와 통신하기 위해 Habitat 클라이언트를 사용하여 작업을 수행하려고하면 다음과 같은 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47c9b01cbc44619c374487e28eb3c03839f456eb" translate="yes" xml:space="preserve">
          <source>Attempting to take over as the primary Chef server for the DRBD device.</source>
          <target state="translated">DRBD 디바이스의 기본 Chef 서버로 인계하려고합니다.</target>
        </trans-unit>
        <trans-unit id="6317b6708c851cf1dfb0a725d207b704428a3b59" translate="yes" xml:space="preserve">
          <source>Attempts to guess the &amp;ldquo;first&amp;rdquo; &amp;ldquo;real&amp;rdquo; IPv4 address on any interface. Looks for interfaces that are up and have IPv4 addresses assigned, then tries to filter out loopback, management (10/8) and local (192.168/16) IP addresses, returning the best of of those that it can; you may still get nil, or a loopback address. Note that if the machine is behind NAT this will not be the external IP address; use the &lt;code&gt;http&lt;/code&gt; resource to query an IP lookup service for that.</source>
          <target state="translated">모든 인터페이스에서 &quot;첫 번째&quot; &quot;실제&quot;IPv4 주소를 추측합니다. 작동 중이고 IPv4 주소가 할당 된 인터페이스를 찾은 다음 루프백, 관리 (10/8) 및 로컬 (192.168 / 16) IP 주소를 필터링하여 가능한 최선의 결과를 반환합니다. 여전히 nil 또는 루프백 주소를 얻을 수 있습니다. 시스템이 NAT 뒤에 있으면 외부 IP 주소가 아닙니다. 사용 &lt;code&gt;http&lt;/code&gt; 이의 IP 조회 서비스를 쿼리하는 리소스를.</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="7314850fdc2868f9c47326e647c4d832d84e8d05" translate="yes" xml:space="preserve">
          <source>Attribute Allowlist</source>
          <target state="translated">속성 허용 목록</target>
        </trans-unit>
        <trans-unit id="5809fc789931a8b3a07d65dd0f9460793372546a" translate="yes" xml:space="preserve">
          <source>Attribute Evaluation Order</source>
          <target state="translated">속성 평가 순서</target>
        </trans-unit>
        <trans-unit id="77af70551e42ecdfacd2bd179132c7e56fc1b08c" translate="yes" xml:space="preserve">
          <source>Attribute Files</source>
          <target state="translated">속성 파일</target>
        </trans-unit>
        <trans-unit id="e99fc97a1f7c210260680a5b60a282a0c7d9d2de" translate="yes" xml:space="preserve">
          <source>Attribute Persistence</source>
          <target state="translated">속성 지속성</target>
        </trans-unit>
        <trans-unit id="f439ff4e18ae922bccee721044529af94b8f4f3b" translate="yes" xml:space="preserve">
          <source>Attribute Precedence</source>
          <target state="translated">속성 우선 순위</target>
        </trans-unit>
        <trans-unit id="8b7b1b0061d717ceef36eaead8161e0baf0ff1be" translate="yes" xml:space="preserve">
          <source>Attribute Sources</source>
          <target state="translated">속성 소스</target>
        </trans-unit>
        <trans-unit id="7200477de9f90bdbdcfe2706e7c5cb9ade5e08da" translate="yes" xml:space="preserve">
          <source>Attribute Type</source>
          <target state="translated">속성 유형</target>
        </trans-unit>
        <trans-unit id="9f4f7e4e3b34c76cbba2b04d073edb6d2fe857a8" translate="yes" xml:space="preserve">
          <source>Attribute Types</source>
          <target state="translated">속성 유형</target>
        </trans-unit>
        <trans-unit id="f7dc845d8d36204a8be50543b3dac6d531fc0aa0" translate="yes" xml:space="preserve">
          <source>Attribute files (in cookbooks)</source>
          <target state="translated">속성 파일 (요리 책)</target>
        </trans-unit>
        <trans-unit id="9c8ca62271ff23ba849b4f717b8b4500da8c2359" translate="yes" xml:space="preserve">
          <source>Attribute precedence levels may be:</source>
          <target state="translated">속성 우선 순위 수준은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="609a08d35568d128cff8d518c3d1fa0a0310b59d" translate="yes" xml:space="preserve">
          <source>Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:</source>
          <target state="translated">다이어그램의 숫자가 속성 우선 순위와 일치하는 개요 다이어그램과 동일한 관점에서 본 속성 우선 순위 :</target>
        </trans-unit>
        <trans-unit id="8c9a40eab9da175a6d3d23dc3899f181cd09a4f8" translate="yes" xml:space="preserve">
          <source>Attribute precedence, when viewed as a table:</source>
          <target state="translated">테이블로 볼 때 속성 우선 순위 :</target>
        </trans-unit>
        <trans-unit id="3fe5f18712254009ad829e3487d7a7aa92224178" translate="yes" xml:space="preserve">
          <source>Attribute values</source>
          <target state="translated">속성 값</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="ad1863b2e3b81a7cb1b70873ba959aafc643654e" translate="yes" xml:space="preserve">
          <source>Attributes Blocklist</source>
          <target state="translated">속성 차단 목록</target>
        </trans-unit>
        <trans-unit id="c751423a032976446883438c3a6aac8fe4e74da0" translate="yes" xml:space="preserve">
          <source>Attributes are allowlisted by attribute type, with each attribute type being allowlisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define allowlists by using the following settings in the client.rb file:</source>
          <target state="translated">속성은 속성 유형별로 허용되며 각 속성 유형은 독립적으로 허용됩니다. 각 속성 유형 ( &lt;code&gt;automatic&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; 및 &lt;code&gt;override&lt;/code&gt; ) 은 client.rb 파일에서 다음 설정을 사용하여 허용 목록을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f29de19b39a8cb331d8c32a4c9b0c683c019532e" translate="yes" xml:space="preserve">
          <source>Attributes are always applied by Chef Infra Client in the following order:</source>
          <target state="translated">특성은 항상 다음 순서로 Chef Infra Client에 의해 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="21fa130a26fa5adcc94b8ddeb1e5b42dc30557c8" translate="yes" xml:space="preserve">
          <source>Attributes are always applied by the chef-client in the following order:</source>
          <target state="translated">Chef-Client는 항상 다음 순서로 속성을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="6205fc4ad970a41be2c6ff813ccf48dbd0102134" translate="yes" xml:space="preserve">
          <source>Attributes are blocklisted by attribute type, with each attribute type being blocklisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define blocklists by using the following settings in the client.rb file:</source>
          <target state="translated">속성은 속성 유형별로 차단되며 각 속성 유형은 독립적으로 차단됩니다. 각 속성 유형 ( &lt;code&gt;automatic&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; 및 &lt;code&gt;override&lt;/code&gt; ) 은 client.rb 파일에서 다음 설정을 사용하여 차단 목록을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5134bd448c6e81f4bd98af95eeda28ac49f7b4c2" translate="yes" xml:space="preserve">
          <source>Attributes are defined by:</source>
          <target state="translated">속성은 다음에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="8c5977710f9e1dc10240329e3c083bc50a5ad449" translate="yes" xml:space="preserve">
          <source>Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:</source>
          <target state="translated">속성은 선택 사항이며 기본값 및 재정의 수준에서 설정할 수 있습니다. 속성 우선 순위에 따라 처리됩니다. 환경 속성은 우선 순위가 더 높은 속성에 의해 재정의되는 위치를 제외하고 환경 내의 모든 노드에 적용됩니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="ba67b728f55372374a718f911c328adba9a3240c" translate="yes" xml:space="preserve">
          <source>Attributes are provided to Chef Infra Client from the following locations:</source>
          <target state="translated">다음 위치에서 Chef Infra Client에 속성이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="16ee0be748cbf871a8fa4ca3eb2ec5f5324388c4" translate="yes" xml:space="preserve">
          <source>Attributes are provided to the chef-client from the following locations:</source>
          <target state="translated">다음 위치에서 요리사 클라이언트에게 속성이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="120c47677bf111c795cd932b67cc36ace4899ef2" translate="yes" xml:space="preserve">
          <source>Attributes are typically defined in cookbooks, recipes, roles, and environments. These attributes are rolled-up to the node level during a Chef Infra Client run. A recipe can store attribute values using a multi-level hash or array.</source>
          <target state="translated">속성은 일반적으로 요리 책, 레시피, 역할 및 환경에서 정의됩니다. 이러한 속성은 Chef Infra Client 실행 중에 노드 수준으로 롤업됩니다. 레시피는 다단계 해시 또는 배열을 사용하여 속성 값을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dd5bb0914abbfdc64b5eac84eb9921f6928083a" translate="yes" xml:space="preserve">
          <source>Attributes are typically defined in cookbooks, recipes, roles, and environments. These attributes are rolled-up to the node level during a chef-client run. A recipe can store attribute values using a multi-level Hash or array.</source>
          <target state="translated">속성은 일반적으로 요리 책, 레시피, 역할 및 환경에서 정의됩니다. 이러한 속성은 chef-client 실행 중에 노드 레벨로 롤업됩니다. 레시피는 다중 레벨 해시 또는 배열을 사용하여 속성 값을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdaeb6eda2cbbd47ab00e089f60a4539a6377cf7" translate="yes" xml:space="preserve">
          <source>Attributes are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type&amp;mdash;&lt;code&gt;automatic&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, and &lt;code&gt;override&lt;/code&gt;&amp;mdash;may define whitelists by using the following settings in the client.rb file:</source>
          <target state="translated">속성은 속성 유형별로 허용되며 각 속성 유형은 독립적으로 허용됩니다. 각 속성 유형 ( &lt;code&gt;automatic&lt;/code&gt; , &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; 및 &lt;code&gt;override&lt;/code&gt; ) 은 client.rb 파일에서 다음 설정을 사용하여 화이트리스트를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ce9f36d6200c2dfd20b02fed9b74a4f7314ffec" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of a Chef Infra Client run. See &lt;a href=&quot;../attributes/index&quot;&gt;Attributes&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="translated">속성은 요리 책 (속성 파일 및 레시피), 역할 및 환경에서 구성 할 수 있습니다. 또한 Ohai는 Chef Infra Client 실행을 시작할 때 각 노드에 대한 속성 데이터를 수집합니다. 이러한 모든 속성이 어떻게 결합되는지에 대한 자세한 정보는 &lt;a href=&quot;../attributes/index&quot;&gt;속성&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d052fd272c1bc16d2cd16a5cc8486465402c27da" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of a Chef Infra Client run. See &lt;a href=&quot;attributes/index&quot;&gt;Attributes&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="translated">속성은 요리 책 (속성 파일 및 레시피), 역할 및 환경에서 구성 할 수 있습니다. 또한 Ohai는 Chef Infra Client 실행을 시작할 때 각 노드에 대한 속성 데이터를 수집합니다. 이러한 모든 속성이 어떻게 결합되는지에 대한 자세한 정보는 &lt;a href=&quot;attributes/index&quot;&gt;속성&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="577c3be005618e163a94cffa1a6608265d49e096" translate="yes" xml:space="preserve">
          <source>Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, Ohai collects attribute data about each node at the start of the chef-client run. See &lt;a href=&quot;https://docs.chef.io/attributes.html&quot;&gt;https://docs.chef.io/attributes.html&lt;/a&gt; for more information about how all of these attributes fit together.</source>
          <target state="translated">요리 책 (속성 파일 및 레시피), 역할 및 환경에서 속성을 구성 할 수 있습니다. 또한 Ohai는 chef-client run 시작시 각 노드에 대한 속성 데이터를 수집합니다. 이러한 모든 속성이 어떻게 결합되는지에 대한 자세한 내용은 &lt;a href=&quot;https://docs.chef.io/attributes.html&quot;&gt;https://docs.chef.io/attributes.html&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="63c9b441f6085a9be14f56ec9cb93a480bf44cd4" translate="yes" xml:space="preserve">
          <source>Attributes can be defined in an environment and then used to override the default attributes in a cookbook. When an environment is applied during a Chef Infra Client run, environment attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, Chef Infra Client applies those new settings and values during a Chef Infra Client run.</source>
          <target state="translated">속성은 환경에서 정의한 다음 요리 책의 기본 속성을 재정의하는 데 사용할 수 있습니다. Chef Infra Client 실행 중에 환경이 적용되면 환경 속성이 노드에 이미있는 속성과 비교됩니다. 환경 속성이 기본 속성보다 우선하는 경우 Chef Infra Client는 Chef Infra Client 실행 중에 새 설정 및 값을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="9417cac9eb45c67633887d7b0390cc7b4ebc3c86" translate="yes" xml:space="preserve">
          <source>Attributes for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.</source>
          <target state="translated">PubsubMessage의 속성. Pubsub 메시지에는 비어 있지 않은 데이터 또는 하나 이상의 속성이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b2341b03f2a8f6e9f8a1ef0841c4c676e26d02e3" translate="yes" xml:space="preserve">
          <source>Attributes passed via JSON on the CLI</source>
          <target state="translated">CLI에서 JSON을 통해 전달 된 속성</target>
        </trans-unit>
        <trans-unit id="156a413c6e8bb3ccdd706df06d8eacc012cff96c" translate="yes" xml:space="preserve">
          <source>Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:</source>
          <target state="translated">속성은 때때로 레시피 내에서 취한 조치에 따라 달라 지므로, 레시피 내에서 지정된 속성을 다시로드해야 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="31458a40e8d1b0dabc0e735cebc8396eb0d6a191" translate="yes" xml:space="preserve">
          <source>Attributes that are collected by Ohai are automatic attributes, in that these attributes are used by the chef-client to ensure that these attributes remain unchanged after the chef-client is done configuring the node.</source>
          <target state="translated">Ohai가 수집 한 속성은 자동 속성입니다. 이러한 속성은 chef-client가 노드 구성을 완료 한 후에도 이러한 속성이 변경되지 않도록하기 위해 chef-client에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad31c6765b629dc6ba0414e5a81274dcb8ff6f09" translate="yes" xml:space="preserve">
          <source>Attributes that are collected by Ohai are automatic level attributes, in that these attributes are used by Chef Infra Client to ensure that these attributes remain unchanged after Chef Infra Client is done configuring the node.</source>
          <target state="translated">Ohai에서 수집하는 속성은 Chef Infra Client에서 이러한 속성을 사용하여 Chef Infra Client가 노드 구성을 완료 한 후에도 이러한 속성이 변경되지 않도록 유지한다는 점에서 자동 레벨 속성입니다.</target>
        </trans-unit>
        <trans-unit id="310fe5e73a128a3c5a4a4547ab5f0b29e9c579f3" translate="yes" xml:space="preserve">
          <source>Attributes that have been configured, but are not found in the results, lead to user search failures, too. Note that this also affects default values.</source>
          <target state="translated">구성되었지만 결과에없는 속성도 사용자 검색 실패로 이어집니다. 이것은 기본값에도 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="ec8ee66d5ebcca4201088fd093ebb1889a66c232" translate="yes" xml:space="preserve">
          <source>Attributes that should be saved by a node may be allowlisted in the client.rb file. The allowlist is a hash of keys that specifies each attribute to be saved.</source>
          <target state="translated">노드가 저장해야하는 속성은 client.rb 파일에 허용 목록에 포함될 수 있습니다. 허용 목록은 저장할 각 속성을 지정하는 키 해시입니다.</target>
        </trans-unit>
        <trans-unit id="be82aec0f2a97d56f68b7e603805db1a8754af10" translate="yes" xml:space="preserve">
          <source>Attributes that should be saved by a node may be whitelisted in the client.rb file. The whitelist is a Hash of keys that specify each attribute to be saved.</source>
          <target state="translated">노드가 저장해야하는 속성은 client.rb 파일에 화이트리스트에있을 수 있습니다. 화이트리스트는 저장할 각 속성을 지정하는 키 해시입니다.</target>
        </trans-unit>
        <trans-unit id="7fa9c04c56d002e4611e4afd197fba66e1a8935a" translate="yes" xml:space="preserve">
          <source>Attributes that should not be saved by a node may be blocklisted in the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; file. The blocklist is a Hash of keys that specify each attribute to be filtered out.</source>
          <target state="translated">노드에 의해 저장되지 않아야하는 속성은 &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; 파일 에서 차단 될 수 있습니다 . 차단 목록은 필터링 할 각 속성을 지정하는 키 해시입니다.</target>
        </trans-unit>
        <trans-unit id="a9e2ab705bfe9cd136e905d14b99d2cf93f3bab0" translate="yes" xml:space="preserve">
          <source>Attributes that should not be saved by a node may be blocklisted in the &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; file. The blocklist is a Hash of keys that specify each attribute to be filtered out.</source>
          <target state="translated">노드에 의해 저장되지 않아야하는 속성은 &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb&lt;/a&gt; 파일 에서 차단 될 수 있습니다 . 차단 목록은 필터링 할 각 속성을 지정하는 키 해시입니다.</target>
        </trans-unit>
        <trans-unit id="a4d81396d4ea19197dfceaa774ef776332674285" translate="yes" xml:space="preserve">
          <source>Attribution</source>
          <target state="translated">Attribution</target>
        </trans-unit>
        <trans-unit id="d1404fc0e354ef71aa4f69f98ab0c95d3f22b388" translate="yes" xml:space="preserve">
          <source>Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.</source>
          <target state="translated">OIDC 토큰을 생성 할 때 사용할 대상입니다. 지정하지 않으면 target에 지정된 URI가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7591f7e536f39f498c621ec7183627cd8b5d8138" translate="yes" xml:space="preserve">
          <source>Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for. The audience value is a single case-sensitive string. Having multiple values (array) for the audience field is not supported. More info about the OIDC JWT token audience here: &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1.3&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1.3&lt;/a&gt; Note: if not specified, the Push endpoint URL will be used.</source>
          <target state="translated">OIDC 토큰을 생성 할 때 사용할 대상입니다. 대상 클레임은 JWT가 대상으로하는 수신자를 식별합니다. 대상 값은 대소 문자를 구분하는 단일 문자열입니다. 대상 필드에 여러 값 (배열)을 갖는 것은 지원되지 않습니다. OIDC JWT 토큰 대상에 대한 자세한 정보는 &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1.3&quot;&gt;https://tools.ietf.org/html/rfc7519#section-4.1.3&lt;/a&gt; 참고 : 지정하지 않으면 푸시 엔드 포인트 URL이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b73b8202df0bb2a8615c0090b55c64d5376dbf18" translate="yes" xml:space="preserve">
          <source>Audience. This will be the metadata URL for Chef Automate:</source>
          <target state="translated">청중. 다음은 Chef Automate의 메타 데이터 URL입니다.</target>
        </trans-unit>
        <trans-unit id="fe3117efd4208998b85ec07b8e95334e99e0ce4e" translate="yes" xml:space="preserve">
          <source>Audit Cookbook</source>
          <target state="translated">감사 요리 책</target>
        </trans-unit>
        <trans-unit id="52e886f141a11d93af4208abc9159c4ade45e3b0" translate="yes" xml:space="preserve">
          <source>Audit Cookbook + Inspec + Automate 2 Versions Support Matrix</source>
          <target state="translated">Audit Cookbook + Inspec + Automate 2 버전 지원 매트릭스</target>
        </trans-unit>
        <trans-unit id="e3bf6ec38dd730ea46936e195d6e024865c572a8" translate="yes" xml:space="preserve">
          <source>Audit Cookbook version 4.2.0 or later requires Chef InSpec 1.25.1 or later. You can upgrade your Chef InSpec package in several different ways: by upgrading Automate, by upgrading the Chef Workstation, by upgrading Chef Infra Client, or by setting the &lt;code&gt;node['audit']['inspec_version']&lt;/code&gt; attribute in your cookbook.</source>
          <target state="translated">Audit Cookbook 버전 4.2.0 이상에는 Chef InSpec 1.25.1 이상이 필요합니다. Automate를 업그레이드하거나 Chef Workstation을 업그레이드하거나 Chef Infra Client를 업그레이드하거나 &lt;code&gt;node['audit']['inspec_version']&lt;/code&gt; 에서 node [ 'audit'] [ 'inspec_version'] 속성을 설정하는 등 여러 가지 방법으로 Chef InSpec 패키지를 업그레이드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3c3e838c5df34c8029af1d6d14e6a67d4aa580b" translate="yes" xml:space="preserve">
          <source>August 31, 2019</source>
          <target state="translated">2019 년 8 월 31 일</target>
        </trans-unit>
        <trans-unit id="9917748cf5f95df44776a66177e1405cb79fe63f" translate="yes" xml:space="preserve">
          <source>AuthN Service</source>
          <target state="translated">AuthN 서비스</target>
        </trans-unit>
        <trans-unit id="7dfb258c4eb86e35cd60b3324b884a2297536f01" translate="yes" xml:space="preserve">
          <source>AuthZ Service</source>
          <target state="translated">AuthZ 서비스</target>
        </trans-unit>
        <trans-unit id="4ddcf30135bcf4e1b9cdd96686d4f3eeaa61250f" translate="yes" xml:space="preserve">
          <source>Authenticate to the target host with this password.&quot;</source>
          <target state="translated">이 암호를 사용하여 대상 호스트에 인증하십시오. &quot;</target>
        </trans-unit>
        <trans-unit id="4aefbe7bff51abd1c8c39b88b719c698d63d82b2" translate="yes" xml:space="preserve">
          <source>Authenticate to the target host with this user account.</source>
          <target state="translated">이 사용자 계정으로 대상 호스트에 인증하십시오.</target>
        </trans-unit>
        <trans-unit id="400a61c4a582ab9261105e82c9439010017e56ae" translate="yes" xml:space="preserve">
          <source>Authenticate with Azure Container Registry from Azure Container Service</source>
          <target state="translated">Azure Container Service에서 Azure Container Registry로 인증</target>
        </trans-unit>
        <trans-unit id="5991165ff7e4c219905623028b74233b72e1cfff" translate="yes" xml:space="preserve">
          <source>Authenticated API Requests</source>
          <target state="translated">인증 된 API 요청</target>
        </trans-unit>
        <trans-unit id="2e0e8dcb3140334eb403633555f6fc4cd63ae5c7" translate="yes" xml:space="preserve">
          <source>Authenticating Existing Chef Automate and Builder Installations</source>
          <target state="translated">기존 Chef Automate 및 Builder 설치 인증</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="e9a482c3e6fdbaf6f0ce7ac1850719d22739b824" translate="yes" xml:space="preserve">
          <source>Authentication Headers</source>
          <target state="translated">인증 헤더</target>
        </trans-unit>
        <trans-unit id="259182d2b39530cc1d61fa0f36b918da2852b48e" translate="yes" xml:space="preserve">
          <source>Authentication and Authorization</source>
          <target state="translated">인증 및 승인</target>
        </trans-unit>
        <trans-unit id="baccae5739be67739ebc84c2c75a4c31e94de18e" translate="yes" xml:space="preserve">
          <source>Authentication between client (&lt;code&gt;hab&lt;/code&gt; CLI) and server (Supervisor) is achieved using a shared secret. The &lt;code&gt;hab&lt;/code&gt; CLI receives its secret from a configuration file (&lt;code&gt;~/.hab/config/cli.toml&lt;/code&gt;) or from an environment variable (&lt;code&gt;HAB_CTL_SECRET&lt;/code&gt;). The Supervisor reads its secret from its &lt;code&gt;CTL_SECRET&lt;/code&gt; file, located at &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt;. When the value used by &lt;code&gt;hab&lt;/code&gt; matches the one used by the Supervisor, the requested command is carried out.</source>
          <target state="translated">클라이언트 ( &lt;code&gt;hab&lt;/code&gt; CLI)와 서버 (Supervisor) 간의 인증은 공유 암호를 사용하여 이루어집니다. &lt;code&gt;hab&lt;/code&gt; CLI 구성 파일로부터 비밀을 수신한다 ( &lt;code&gt;~/.hab/config/cli.toml&lt;/code&gt; ) 또는 환경 변수에서 ( &lt;code&gt;HAB_CTL_SECRET&lt;/code&gt; ). Supervisor 는 &lt;code&gt;/hab/sup/default/CTL_SECRET&lt;/code&gt; 에있는 &lt;code&gt;CTL_SECRET&lt;/code&gt; 파일 에서 비밀을 읽습니다 . &lt;code&gt;hab&lt;/code&gt; 가 사용하는 값 이 Supervisor가 사용 하는 값 과 일치하면 요청 된 명령이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8f68c8c0ffcedeca396a5ef07931d1fc4747a54c" translate="yes" xml:space="preserve">
          <source>Authentication for Elasticsearch and Kibana</source>
          <target state="translated">Elasticsearch 및 Kibana에 대한 인증</target>
        </trans-unit>
        <trans-unit id="4208b7d5916b6e981c4115bba82715936a4a135a" translate="yes" xml:space="preserve">
          <source>Authentication or authorization</source>
          <target state="translated">인증 또는 권한</target>
        </trans-unit>
        <trans-unit id="a5227efabe1df4b20e56993a3d8bf32ce8448161" translate="yes" xml:space="preserve">
          <source>Authentication protocol 1.3 is only supported on Chef Server versions 12.4.0 and above.</source>
          <target state="translated">인증 프로토콜 1.3은 Chef Server 버전 12.4.0 이상에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e96741fbfe7eba4dce656c0c623e8fa11df63b44" translate="yes" xml:space="preserve">
          <source>Authentication times out after three minutes if you don&amp;rsquo;t keep a browser window open on Chef Automate.</source>
          <target state="translated">Chef Automate에서 브라우저 창을 열어 두지 않으면 3 분 후에 인증 시간이 초과됩니다.</target>
        </trans-unit>
        <trans-unit id="dbaa06aa0d5da513d4dd826d37407f2e1afa28c7" translate="yes" xml:space="preserve">
          <source>Authentication to the Chef Infra Server requires a specific set of HTTP headers signed using a private key that is associated with the client making the request. The request is authorized if the Chef Infra Server can verify the signature using the public key. Only authorized actions are allowed.</source>
          <target state="translated">Chef Infra Server에 대한 인증에는 요청하는 클라이언트와 연결된 개인 키를 사용하여 서명 된 특정 HTTP 헤더 세트가 필요합니다. Chef Infra Server가 공개 키를 사용하여 서명을 확인할 수 있으면 요청이 승인됩니다. 승인 된 작업 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="12624bb509e41c5e9e239fc581c27ccd77c4112f" translate="yes" xml:space="preserve">
          <source>Authentication to the Chef server occurs when a specific set of HTTP headers are signed using a private key that is associated with the machine from which the request is made. The request is authorized if the Chef server can verify the signature using the public key. Only authorized actions are allowed.</source>
          <target state="translated">Chef 서버에 대한 인증은 특정 HTTP 헤더 세트가 요청이 발행 된 기계와 연관된 개인 키를 사용하여 서명 될 때 발생합니다. Chef 서버가 공개 키를 사용하여 서명을 확인할 수있는 경우 요청이 승인됩니다. 승인 된 작업 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="64057bbe88a62dc3a2956ba3ba7a20c18b605e01" translate="yes" xml:space="preserve">
          <source>Authentication via Existing Identity Management Systems</source>
          <target state="translated">기존 ID 관리 시스템을 통한 인증</target>
        </trans-unit>
        <trans-unit id="e919dd3548ee21af2b234bad6ddb01192e169d38" translate="yes" xml:space="preserve">
          <source>Authentication, Authorization</source>
          <target state="translated">인증, 인증</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Author</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="7c85fac7d86d4befec37244402d39495c8016172" translate="yes" xml:space="preserve">
          <source>Authorization token used to perform privileged operations against the depot, e.g. uploading packages or keys.</source>
          <target state="translated">저장소에 대해 권한있는 작업을 수행하는 데 사용되는 인증 토큰 (예 : 패키지 또는 키 업로드).</target>
        </trans-unit>
        <trans-unit id="483e873ae5c828dba0da59bc66fb3e7542016d59" translate="yes" xml:space="preserve">
          <source>Authorization with LDAP</source>
          <target state="translated">LDAP를 통한 인증</target>
        </trans-unit>
        <trans-unit id="8735c6161f11028aec516dce441a18614796ffbf" translate="yes" xml:space="preserve">
          <source>Authorize Communication from Chef Habitat to Chef Automate</source>
          <target state="translated">Chef Habitat에서 Chef Automate 로의 통신 승인</target>
        </trans-unit>
        <trans-unit id="3b3bbe7d3dea0ebbf820c35f45b2d76ea99923d4" translate="yes" xml:space="preserve">
          <source>Auto-build Option</source>
          <target state="translated">자동 빌드 옵션</target>
        </trans-unit>
        <trans-unit id="9855d05ce888d558e06af24a463927eebdfac110" translate="yes" xml:space="preserve">
          <source>Auto-provisioned users</source>
          <target state="translated">자동 프로비저닝 된 사용자</target>
        </trans-unit>
        <trans-unit id="cad33846801c94ea43e07ae3a46d0486a8ba13fd" translate="yes" xml:space="preserve">
          <source>Auto-update . Set to &lt;code&gt;true&lt;/code&gt; to auto update the version of the Azure Chef Extension when the virtual machine is restarted. For example, if this option is enabled, a virtual machine that has version &lt;code&gt;1205.12.2.0&lt;/code&gt; will be updated automatically to &lt;code&gt;1205.12.2.1&lt;/code&gt; when it is published.</source>
          <target state="translated">자동 업데이트 . 가상 머신이 다시 시작될 때 Azure Chef 확장의 버전을 자동 업데이트하려면 &lt;code&gt;true&lt;/code&gt; 로 설정합니다 . 예를 &lt;code&gt;1205.12.2.0&lt;/code&gt; 옵션을 사용하면 버전이 1205.12.2.0 인 가상 머신 이 게시 될 때 자동으로 &lt;code&gt;1205.12.2.1&lt;/code&gt; 로 업데이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="30ecfb1257b197a0bd403e16d0c752a5a266a5bf" translate="yes" xml:space="preserve">
          <source>Auto-update Chef Infra Client. Set to &lt;code&gt;true&lt;/code&gt; to auto update the version of the Azure Chef Extension when the virtual machine is restarted. For example, if this option is enabled, a virtual machine that has version &lt;code&gt;1205.12.2.0&lt;/code&gt; will be updated automatically to &lt;code&gt;1205.12.2.1&lt;/code&gt; when it is published. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Client를 자동 업데이트합니다. 가상 머신이 다시 시작될 때 Azure Chef 확장의 버전을 자동 업데이트하려면 &lt;code&gt;true&lt;/code&gt; 로 설정합니다 . 예를 &lt;code&gt;1205.12.2.0&lt;/code&gt; 옵션을 사용하면 버전이 1205.12.2.0 인 가상 머신 이 게시 될 때 자동으로 &lt;code&gt;1205.12.2.1&lt;/code&gt; 로 업데이트됩니다 . 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28c4ff9fb601f2e4e7d12e06fe10089d9099b59d" translate="yes" xml:space="preserve">
          <source>AutoPkg</source>
          <target state="translated">AutoPkg</target>
        </trans-unit>
        <trans-unit id="0a29368a2b01ba5d821e0944c40ec916e012a001" translate="yes" xml:space="preserve">
          <source>AutoPkg is an automation framework for macOS software packaging and distribution, oriented towards the tasks one would normally perform manually to prepare third-party software for mass deployment to managed clients.</source>
          <target state="translated">AutoPkg는 관리되는 클라이언트에 대량 배포하기 위해 타사 소프트웨어를 준비하기 위해 일반적으로 수동으로 수행하는 작업을 지향하는 macOS 소프트웨어 패키징 및 배포를위한 자동화 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="2bf71cedf2ba9e7e348e603ad9d98149bb844d6a" translate="yes" xml:space="preserve">
          <source>AutoPkg is an automation framework for macOS software packaging and distribution, oriented towards the tasks one would perform manually to prepare third-party software for mass deployment to managed clients.</source>
          <target state="translated">AutoPkg는 관리되는 클라이언트에 대량 배포하기 위해 타사 소프트웨어를 준비하기 위해 수동으로 수행하는 작업을 지향하는 macOS 소프트웨어 패키징 및 배포를위한 자동화 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="f92a8b9db8dc1c3f56db4d524341cd9e5a3925ba" translate="yes" xml:space="preserve">
          <source>Autocorrecting Cookstyle Warnings</source>
          <target state="translated">요리 스타일 경고 자동 수정</target>
        </trans-unit>
        <trans-unit id="dc12f66a0409c8bb7e20b1acb07135cd18559a22" translate="yes" xml:space="preserve">
          <source>Automate</source>
          <target state="translated">Automate</target>
        </trans-unit>
        <trans-unit id="23b42631da911fb111b86cfbf48c128611d894a8" translate="yes" xml:space="preserve">
          <source>Automate 2 Architecture</source>
          <target state="translated">2 아키텍처 자동화</target>
        </trans-unit>
        <trans-unit id="50caabc63e4dd1ab511e8b3730188bbc05783db6" translate="yes" xml:space="preserve">
          <source>Automate CLI Commands</source>
          <target state="translated">CLI 명령 자동화</target>
        </trans-unit>
        <trans-unit id="8b2776958414b357ca31a0c50a38ee0dc511cba0" translate="yes" xml:space="preserve">
          <source>Automate Docker Container Publishing Flow</source>
          <target state="translated">Docker 컨테이너 게시 흐름 자동화</target>
        </trans-unit>
        <trans-unit id="055136d4fd930590bdd77217628edac04b1ac6dc" translate="yes" xml:space="preserve">
          <source>Automate Gateway</source>
          <target state="translated">게이트웨이 자동화</target>
        </trans-unit>
        <trans-unit id="72e012cc536aac2a0d81e1531559f3e6255c25c6" translate="yes" xml:space="preserve">
          <source>Automate Reporter</source>
          <target state="translated">리포터 자동화</target>
        </trans-unit>
        <trans-unit id="e50956f6cb1b6aeb7101a266669cfe86e968bf06" translate="yes" xml:space="preserve">
          <source>Automate With Workflow - 8GB RAM recommended</source>
          <target state="translated">워크 플로우로 자동화-8GB RAM 권장</target>
        </trans-unit>
        <trans-unit id="83c3f746a2209847c900df05cf33e8231006be7f" translate="yes" xml:space="preserve">
          <source>Automate archive only</source>
          <target state="translated">아카이브 만 자동화</target>
        </trans-unit>
        <trans-unit id="669739c91233d5370f2f7e8767e2b93a9ce9590f" translate="yes" xml:space="preserve">
          <source>Automate has its own reconfigure tool, &lt;code&gt;automate-ctl&lt;/code&gt;. This tool walks users through the install and setup of Automate. The Chef license is accepted after that in the browser. Please follow the in-product prompts.</source>
          <target state="translated">Automate에는 자체 재구성 도구 인 &lt;code&gt;automate-ctl&lt;/code&gt; 이 있습니다. 이 도구는 사용자에게 Automate의 설치 및 설정 과정을 안내합니다. Chef 라이센스는 그 후에 브라우저에서 승인됩니다. 제품 내 프롬프트를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="79c3c54c90828e9d3cdfe52d1fbb9e75e8e66fbd" translate="yes" xml:space="preserve">
          <source>Automate uses port &lt;code&gt;636&lt;/code&gt; by default. To override the port, append it to the host setting, e.g.</source>
          <target state="translated">Automate는 기본적으로 포트 &lt;code&gt;636&lt;/code&gt; 을 사용합니다 . 포트를 무시하려면 호스트 설정에 추가합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="57264f0966c41c3055ac915924633f5e99d930aa" translate="yes" xml:space="preserve">
          <source>Automated Builds</source>
          <target state="translated">자동화 된 빌드</target>
        </trans-unit>
        <trans-unit id="30c1aa8f6412cb4840906939dd7af01e38cdc5f3" translate="yes" xml:space="preserve">
          <source>Automated Scaffolding</source>
          <target state="translated">자동화 된 비계</target>
        </trans-unit>
        <trans-unit id="6665e344ddd5f4f3c3b0845e8f46eb325337d350" translate="yes" xml:space="preserve">
          <source>Automatic (Ohai)</source>
          <target state="translated">자동 (오 하이)</target>
        </trans-unit>
        <trans-unit id="353f5177a1bfcbce4a2c25a083394f58ee0735ce" translate="yes" xml:space="preserve">
          <source>Automatic Attributes</source>
          <target state="translated">자동 속성</target>
        </trans-unit>
        <trans-unit id="ec083f42d3cc45eaa7947db6925856ed10d2672a" translate="yes" xml:space="preserve">
          <source>Automatic Installation (recommended)</source>
          <target state="translated">자동 설치 (권장)</target>
        </trans-unit>
        <trans-unit id="4eb15eab064afa0af10b36b4e8e41c769f07de8b" translate="yes" xml:space="preserve">
          <source>Automatic Node Run Data Collection with Chef Infra Server</source>
          <target state="translated">Chef Infra Server를 사용한 자동 노드 실행 데이터 수집</target>
        </trans-unit>
        <trans-unit id="ad323278039669f3f916bc62c7c7fc17b075537d" translate="yes" xml:space="preserve">
          <source>Automatic Proxy Config</source>
          <target state="translated">자동 프록시 구성</target>
        </trans-unit>
        <trans-unit id="e058d8490e0e3376f4c3339040d8813299af411b" translate="yes" xml:space="preserve">
          <source>Automatic SAML configuration through Identity Provider metadata</source>
          <target state="translated">ID 공급자 메타 데이터를 통한 자동 SAML 구성</target>
        </trans-unit>
        <trans-unit id="b4e9aea5df7d91f728780cd6b4ae6fcd85db7991" translate="yes" xml:space="preserve">
          <source>Automatic scaling is based on request rate, response latencies, and other application metrics.</source>
          <target state="translated">자동 확장은 요청 속도, 응답 지연 시간 및 기타 애플리케이션 메트릭을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="7c70f368f277153573a8d9c0046807779d8d3b93" translate="yes" xml:space="preserve">
          <source>Automatically add localhost and any local IP addresses to the configured FQDNs. Useful in combination with &lt;code&gt;nginx['strict_host_header']&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">구성된 FQDN에 localhost 및 모든 로컬 IP 주소를 자동으로 추가합니다. &lt;code&gt;nginx['strict_host_header']&lt;/code&gt; 와 함께 사용하면 유용 합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8db00ae2a71b02b76785f78f77615b51e66d0d7" translate="yes" xml:space="preserve">
          <source>Automatically calculated based on available memory.</source>
          <target state="translated">사용 가능한 메모리에 따라 자동으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="0b7f2ea0e9239465d6e4f8c6ab08b1096dc7ff82" translate="yes" xml:space="preserve">
          <source>Automatically computed by Elasticsearch based on available memory. Specify in MB if you wish to override.</source>
          <target state="translated">사용 가능한 메모리를 기반으로 Elasticsearch에서 자동으로 계산합니다. 재정의하려면 MB 단위로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="1ccc740c95deecb7012696544174ab11024ce93a" translate="yes" xml:space="preserve">
          <source>Automatically handles authentication</source>
          <target state="translated">인증 자동 처리</target>
        </trans-unit>
        <trans-unit id="7802f42821505282942409a14b4622cc513dabef" translate="yes" xml:space="preserve">
          <source>Automatically import the specified key when setting up the repository.</source>
          <target state="translated">저장소를 설정할 때 지정된 키를 자동으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6ec8a853090aa7d9892125f1b8bf297db60a2986" translate="yes" xml:space="preserve">
          <source>Automatically install minor updates. Default is False</source>
          <target state="translated">부 업데이트를 자동으로 설치합니다. 기본값은 False입니다.</target>
        </trans-unit>
        <trans-unit id="99c8ebab682d5d752ee2f4bc6db5b6734d69e7c5" translate="yes" xml:space="preserve">
          <source>Automatically install the Homebrew cask tap, if necessary.</source>
          <target state="translated">필요한 경우 Homebrew 캐스 크 탭을 자동으로 설치합니다.</target>
        </trans-unit>
        <trans-unit id="a129f1f55f313122fe7dafb7ef1113a6642b3d70" translate="yes" xml:space="preserve">
          <source>Automatically supports why-run mode, unlike custom resources</source>
          <target state="translated">사용자 지정 리소스와 달리 이유 실행 모드를 자동으로 지원</target>
        </trans-unit>
        <trans-unit id="431fb25dad0ca30d5b49d817704da1be7ad0a1f3" translate="yes" xml:space="preserve">
          <source>Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.</source>
          <target state="translated">이 NodePool의 자동 확장 처리 구성입니다. 자동 확장 처리는 유효한 구성이있는 경우에만 사용 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="0ba300730fa9fb6b6229a4d5ed08ab0455ad4a3d" translate="yes" xml:space="preserve">
          <source>Available Memory</source>
          <target state="translated">사용 가능한 메모리</target>
        </trans-unit>
        <trans-unit id="021ed450ffbbe161fae9f276ff0c6495b3cbf04e" translate="yes" xml:space="preserve">
          <source>Available Supermarket profiles can be listed with &lt;code&gt;inspec supermarket profiles&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 슈퍼마켓 프로파일은 &lt;code&gt;inspec supermarket profiles&lt;/code&gt; 과 함께 나열 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9777a9fbca64743822c6d76bcf154110e850dbab" translate="yes" xml:space="preserve">
          <source>Available data cleanup configuration parameters:</source>
          <target state="translated">사용 가능한 데이터 정리 구성 매개 변수 :</target>
        </trans-unit>
        <trans-unit id="d216de02f4e665618a338eb0613c526f39a02ed9" translate="yes" xml:space="preserve">
          <source>Available for list policies.</source>
          <target state="translated">목록 정책에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f679e9071f542206074e85ca590b69d0ad1e3ffa" translate="yes" xml:space="preserve">
          <source>Avoid &lt;code&gt;controls&lt;/code&gt;/&lt;code&gt;control&lt;/code&gt; in your control filenames</source>
          <target state="translated">제어 파일 이름에서 &lt;code&gt;controls&lt;/code&gt; / &lt;code&gt;control&lt;/code&gt; 를 피하십시오.</target>
        </trans-unit>
        <trans-unit id="2206ec47052ac7440d20a158eed8cd13b0603310" translate="yes" xml:space="preserve">
          <source>Avoid Ruby IO on files</source>
          <target state="translated">파일에서 Ruby IO 방지</target>
        </trans-unit>
        <trans-unit id="1e9d42d49747b2b1e71c32aac874caa16a3d7e9a" translate="yes" xml:space="preserve">
          <source>Avoid Ruby gem dependencies in controls</source>
          <target state="translated">컨트롤에서 Ruby gem 종속성 방지</target>
        </trans-unit>
        <trans-unit id="6e1cff543c08d17f75245cb0e42262323c4f5ed9" translate="yes" xml:space="preserve">
          <source>Avoid Ruby system calls</source>
          <target state="translated">Ruby 시스템 호출 방지</target>
        </trans-unit>
        <trans-unit id="b1e4a917b995e4dc68c0c1bec0454e1a9024b7ee" translate="yes" xml:space="preserve">
          <source>Avoid debugging calls (in production)</source>
          <target state="translated">디버깅 호출 피하기 (프로덕션)</target>
        </trans-unit>
        <trans-unit id="03450daebbfaf7035ffbff1d3cb218ef35604c12" translate="yes" xml:space="preserve">
          <source>Avoid dynamic elements in the control IDs</source>
          <target state="translated">컨트롤 ID에서 동적 요소를 피하십시오.</target>
        </trans-unit>
        <trans-unit id="3131b4211160ef3cd8af2c0869782d54b2e6d9a9" translate="yes" xml:space="preserve">
          <source>Avoid shelling out</source>
          <target state="translated">포격을 피하십시오</target>
        </trans-unit>
        <trans-unit id="cf0fb6092e89498e9760c81c658da13b844c1177" translate="yes" xml:space="preserve">
          <source>Avoid stopping an update unless absolutely necessary. It will leave your system in an unknown state where only some resources have been moved into their projects while others still remain in old projects. Only another successful update will restore the system to an up-to-date state.</source>
          <target state="translated">꼭 필요한 경우가 아니면 업데이트를 중지하지 마십시오. 일부 리소스 만 프로젝트로 이동되고 다른 리소스는 이전 프로젝트에 남아있는 알 수없는 상태로 시스템이 유지됩니다. 또 다른 성공적인 업데이트 만 시스템을 최신 상태로 복원합니다.</target>
        </trans-unit>
        <trans-unit id="dc2371fe4ccb3f3ccf8c4302e9f03e65d17c5466" translate="yes" xml:space="preserve">
          <source>Avoid the following patterns:</source>
          <target state="translated">다음 패턴을 피하십시오.</target>
        </trans-unit>
        <trans-unit id="ab8f8f1ba8f6f2ea41210bdf72313a5586c20cb0" translate="yes" xml:space="preserve">
          <source>Avoid unnecessary parentheses in matchers</source>
          <target state="translated">매처에 불필요한 괄호를 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3867da054847d8ec495df49fa3552266dfbffa69" translate="yes" xml:space="preserve">
          <source>Avoid unnecessary string interpolation</source>
          <target state="translated">불필요한 문자열 보간 방지</target>
        </trans-unit>
        <trans-unit id="5fa434dda6ad970ae52c99a9e77d98683eacdfcf" translate="yes" xml:space="preserve">
          <source>Avoid wrapping controls in conditional statements</source>
          <target state="translated">조건문에서 컨트롤 래핑 방지</target>
        </trans-unit>
        <trans-unit id="bc5522b2f46bb076d554e1f0ecba681c398838f9" translate="yes" xml:space="preserve">
          <source>Avoid:</source>
          <target state="translated">Avoid:</target>
        </trans-unit>
        <trans-unit id="6f85b2bfcbb0fa2f75065b9806f3edc8026fee56" translate="yes" xml:space="preserve">
          <source>Azure</source>
          <target state="translated">Azure</target>
        </trans-unit>
        <trans-unit id="8944a54f830d190ae0eb91450405ce1bd4e2ec83" translate="yes" xml:space="preserve">
          <source>Azure AD</source>
          <target state="translated">Azure AD</target>
        </trans-unit>
        <trans-unit id="17920eb014ee02bf8bb29097b823e0276bdba5e5" translate="yes" xml:space="preserve">
          <source>Azure AD lets you choose the &lt;em&gt;NameID&lt;/em&gt; field, and optionally apply &lt;em&gt;transformations&lt;/em&gt; to it. The SAML configuration setting is only respected if the selected value in &amp;ldquo;Choose name identifier format&amp;rdquo; in Azure AD matches the &lt;code&gt;name_id_policy_format&lt;/code&gt; configuration in Chef Automate.</source>
          <target state="translated">Azure AD를 사용하면 &lt;em&gt;NameID&lt;/em&gt; 필드 를 선택 하고 선택적으로 &lt;em&gt;변환&lt;/em&gt; 을 적용 할 수 있습니다. SAML 구성 설정은 Azure AD의 &quot;이름 식별자 형식 선택&quot;에서 선택한 값 이 Chef Automate 의 &lt;code&gt;name_id_policy_format&lt;/code&gt; 구성 과 일치하는 경우 에만 적용 됩니다.</target>
        </trans-unit>
        <trans-unit id="8fb70089d1cdc864802dcef8ec01ab1ec6c5c9c9" translate="yes" xml:space="preserve">
          <source>Azure Active Directory</source>
          <target state="translated">Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="b07300d971a11e626c5352c9313d82f17529ed55" translate="yes" xml:space="preserve">
          <source>Azure CLI</source>
          <target state="translated">Azure CLI</target>
        </trans-unit>
        <trans-unit id="a4096a6c8905abd853de2888fb62fbffe749dbe9" translate="yes" xml:space="preserve">
          <source>Azure Cloud Shell Installation</source>
          <target state="translated">Azure Cloud Shell 설치</target>
        </trans-unit>
        <trans-unit id="8d68af50f8b5b4736cddfe7540fe684904f91136" translate="yes" xml:space="preserve">
          <source>Azure Container Registry (ACR)</source>
          <target state="translated">ACR (Azure Container Registry)</target>
        </trans-unit>
        <trans-unit id="f949d20f3e34eb6f1d52f3a6310ce61bfd4e85a5" translate="yes" xml:space="preserve">
          <source>Azure Container Registry is a managed Docker container registry service used for storing private Docker container images. It&amp;rsquo;s a fully managed Azure resource and gives you local, network-close storage of your container images when deploying to AKS. Chef Habitat Builder has native integration with this service so you can publish your packages directly to Azure Container Registry.</source>
          <target state="translated">Azure Container Registry는 개인 Docker 컨테이너 이미지를 저장하는 데 사용되는 관리되는 Docker 컨테이너 레지스트리 서비스입니다. 완전 관리 형 Azure 리소스이며 AKS에 배포 할 때 컨테이너 이미지의 로컬 네트워크 닫기 저장소를 제공합니다. Chef Habitat Builder는이 서비스와 기본적으로 통합되어 있으므로 패키지를 Azure Container Registry에 직접 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dda6ef333d7f414a267c927b9dac79a1805dba17" translate="yes" xml:space="preserve">
          <source>Azure Container Services (AKS)</source>
          <target state="translated">Azure 컨테이너 서비스 (AKS)</target>
        </trans-unit>
        <trans-unit id="7a13e08b6adc01a2ed587fada5fec9e6ef9bbcdc" translate="yes" xml:space="preserve">
          <source>Azure Permissions</source>
          <target state="translated">Azure 권한</target>
        </trans-unit>
        <trans-unit id="e0b91dafc5d1222517a5ef2ddb893793de719f49" translate="yes" xml:space="preserve">
          <source>Azure Platform Support in InSpec</source>
          <target state="translated">InSpec의 Azure 플랫폼 지원</target>
        </trans-unit>
        <trans-unit id="d634bcc20aca3c1ea4a1f9e73927d90825b914f1" translate="yes" xml:space="preserve">
          <source>Azure Portal</source>
          <target state="translated">Azure 포털</target>
        </trans-unit>
        <trans-unit id="06e691ba0afa4ef8d2510104fa81efd7408078a3" translate="yes" xml:space="preserve">
          <source>Azure Powershell cmdlets</source>
          <target state="translated">Azure Powershell cmdlet</target>
        </trans-unit>
        <trans-unit id="343b94719cf48c1d6d8d5a764b7bceb060abb9a4" translate="yes" xml:space="preserve">
          <source>Azure REST API Version</source>
          <target state="translated">Azure REST API 버전</target>
        </trans-unit>
        <trans-unit id="b08836143f67f455f7737d9233cb228c455a35b6" translate="yes" xml:space="preserve">
          <source>Azure REST API version</source>
          <target state="translated">Azure REST API 버전</target>
        </trans-unit>
        <trans-unit id="7f31d0becd6fb010582a1ee920fcf7a18b562e10" translate="yes" xml:space="preserve">
          <source>Azure Ruby SDK - Compute</source>
          <target state="translated">Azure Ruby SDK-컴퓨팅</target>
        </trans-unit>
        <trans-unit id="5566d237e23309a007062978b47f1c3ca4ec8694" translate="yes" xml:space="preserve">
          <source>Azure Ruby SDK - Resources</source>
          <target state="translated">Azure Ruby SDK-리소스</target>
        </trans-unit>
        <trans-unit id="babbca19233565212cf5d652cfaa6046cee66609" translate="yes" xml:space="preserve">
          <source>Azure VM Scanning with Chef Automate</source>
          <target state="translated">Chef Automate를 사용한 Azure VM 스캔</target>
        </trans-unit>
        <trans-unit id="1e338db6bd6eaa31100ce7edaaa9d2da5fadf1e5" translate="yes" xml:space="preserve">
          <source>Azure extensions have network access limitations. See the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/features-linux#network-access&quot;&gt;Azure documentation&lt;/a&gt; for more information.</source>
          <target state="translated">Azure 확장에는 네트워크 액세스 제한이 있습니다. 자세한 내용은 &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/features-linux#network-access&quot;&gt;Azure 설명서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="8949d23eb1e62bc0539a98ee7234659c954bbd9a" translate="yes" xml:space="preserve">
          <source>Azure resource ID.</source>
          <target state="translated">Azure 리소스 ID.</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="9ad2cc2e5ccad5692284cedc56d7fe64b75f9c05" translate="yes" xml:space="preserve">
          <source>BACKUP</source>
          <target state="translated">BACKUP</target>
        </trans-unit>
        <trans-unit id="0893567fc1d8f46c69a1bd9bf54d359d02b5dad7" translate="yes" xml:space="preserve">
          <source>BASIC</source>
          <target state="translated">BASIC</target>
        </trans-unit>
        <trans-unit id="28d6304dd6d05d172bd2c2ad4fe98d0bebabf4de" translate="yes" xml:space="preserve">
          <source>BETA</source>
          <target state="translated">BETA</target>
        </trans-unit>
        <trans-unit id="1631c15ec77ccd780f975c79628d2f1a3bb51534" translate="yes" xml:space="preserve">
          <source>BGP information specific to this router.</source>
          <target state="translated">이 라우터와 관련된 BGP 정보입니다.</target>
        </trans-unit>
        <trans-unit id="d9eeb2cb8428f7f7837b638c0525440c6fa21b5a" translate="yes" xml:space="preserve">
          <source>BIGTABLE</source>
          <target state="translated">BIGTABLE</target>
        </trans-unit>
        <trans-unit id="d05fb01e0b399387c3a28586f5fd296e2670d6a3" translate="yes" xml:space="preserve">
          <source>BINARY</source>
          <target state="translated">BINARY</target>
        </trans-unit>
        <trans-unit id="292c7af4fff95bcd09dba6dcdd4b5f6d636b95c8" translate="yes" xml:space="preserve">
          <source>BOOL</source>
          <target state="translated">BOOL</target>
        </trans-unit>
        <trans-unit id="ab68d8e893a82cff70979ba20bec0023dbfe4be3" translate="yes" xml:space="preserve">
          <source>BOOLEAN</source>
          <target state="translated">BOOLEAN</target>
        </trans-unit>
        <trans-unit id="03056823a83cba373e3d93c8632458fb85f57534" translate="yes" xml:space="preserve">
          <source>BOX-PUB-1</source>
          <target state="translated">BOX-PUB-1</target>
        </trans-unit>
        <trans-unit id="ffea48cf058e7ecf9357793a761137b930492ebd" translate="yes" xml:space="preserve">
          <source>BOX-SEC-1</source>
          <target state="translated">BOX-SEC-1</target>
        </trans-unit>
        <trans-unit id="71bd7104729f6b2cf10c957e8e8ff50f600a70fe" translate="yes" xml:space="preserve">
          <source>BUILDTIME_ENVIRONMENT</source>
          <target state="translated">BUILDTIME_ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="eebf79ff26b2603cf7c40d9cc247d0e0996333bb" translate="yes" xml:space="preserve">
          <source>BUILDTIME_ENVIRONMENT_PROVENANCE</source>
          <target state="translated">BUILDTIME_ENVIRONMENT_PROVENANCE</target>
        </trans-unit>
        <trans-unit id="ed61a8f823d2a35f5d413b1ecb91ee74f1b4969c" translate="yes" xml:space="preserve">
          <source>BUILD_DEPS</source>
          <target state="translated">BUILD_DEPS</target>
        </trans-unit>
        <trans-unit id="bd1c85b1054fa89c32caff63b2a439429d3a9e3e" translate="yes" xml:space="preserve">
          <source>BUILD_TDEPS</source>
          <target state="translated">BUILD_TDEPS</target>
        </trans-unit>
        <trans-unit id="7d70f6a49c217b2daa206e8811d0f77109ad0a96" translate="yes" xml:space="preserve">
          <source>BYTES</source>
          <target state="translated">BYTES</target>
        </trans-unit>
        <trans-unit id="3b6488e9f997b0ee6944f5c9326c56f3a166328c" translate="yes" xml:space="preserve">
          <source>Back End</source>
          <target state="translated">백엔드</target>
        </trans-unit>
        <trans-unit id="2373918c983d9edeb430ef70f78590917fa7f1e5" translate="yes" xml:space="preserve">
          <source>Back up Chef Automate Census data. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automate Census 데이터를 백업합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a8585bbd225fa9171fc8a940cf4fa8451ee4541" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate PostgreSQL database. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automate PostgreSQL 데이터베이스를 백업합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2235a522d45e4d212a97df6e355bcdfdc9dc0614" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate RabbitMQ queues. It is disabled by default because it&amp;rsquo;s rare to have a lengthy RabbitMQ queue and the backup procedure requires temporarily shutting down Chef Automate services when backing up the queues. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef Automate RabbitMQ 대기열을 백업합니다. RabbitMQ 대기열이 긴 경우는 드물고 백업 절차에서는 대기열을 백업 할 때 Chef Automate 서비스를 일시적으로 종료해야하므로 기본적으로 비활성화되어 있습니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e4787e4cc20d054c7001a69441fcdc065fa0cbb" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate compliance profiles. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automate 준수 프로파일을 백업하십시오. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd84408ca23e4257a44e03ba0d9ce0b10269c23b" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate configuration directory. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automate 구성 디렉토리를 백업하십시오. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="182642f36e76aa68a54291d4ead8aeb2b2c301d5" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate git repositories. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automate git 리포지토리를 백업합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4ee0d2dd2653ea4efb39c0fb9e310f9bc34e041" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate license file. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automate 라이선스 파일을 백업합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0ef1872ec8dcec203d4256c5c07c45bc9d0ece2" translate="yes" xml:space="preserve">
          <source>Back up the Chef Automate notification rules. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Automate 알림 규칙을 백업하십시오. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e503fbe5ed1aead56a07e44345239f73ef4d462" translate="yes" xml:space="preserve">
          <source>Back up the Chef Infra Server configuration directory. Useful for instances when Chef Automate and Chef Infra Server are installed on a single node. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server 구성 디렉토리를 백업하십시오. Chef Automate 및 Chef Infra Server가 단일 노드에 설치된 경우에 유용합니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="829616fe746d0afe2568fbc3339e20a446baaddc" translate="yes" xml:space="preserve">
          <source>Back up the Chef Infra Server data before starting the upgrade process using &lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup을&lt;/a&gt; 사용하여 업그레이드 프로세스를 시작하기 전에 Chef Infra Server 데이터를 백업하십시오 .</target>
        </trans-unit>
        <trans-unit id="5afb437332e4028b066472996dacedbb4af4df62" translate="yes" xml:space="preserve">
          <source>Back up the PostgreSQL data, remove the existing databases, and reconfigure the Chef server</source>
          <target state="translated">PostgreSQL 데이터를 백업하고, 기존 데이터베이스를 제거하고, Chef 서버를 재구성합니다.</target>
        </trans-unit>
        <trans-unit id="d930a58505937e97cd278eb095dba97689ee19af" translate="yes" xml:space="preserve">
          <source>Back up the data using &lt;code&gt;knife ec backup&lt;/code&gt;, create a new backend instance, and then restore the data</source>
          <target state="translated">&lt;code&gt;knife ec backup&lt;/code&gt; 을 사용하여 데이터를 백업 하고 새 백엔드 인스턴스를 만든 다음 데이터를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="a12931b9045ac61d214bc5ba3d3ee4a8501ec425" translate="yes" xml:space="preserve">
          <source>Back up your Chef Infra Server data before starting the upgrade process using &lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/knife-ec-backup&quot;&gt;knife-ec-backup을&lt;/a&gt; 사용하여 업그레이드 프로세스를 시작하기 전에 Chef Infra Server 데이터를 백업하십시오 .</target>
        </trans-unit>
        <trans-unit id="fdfea2af9997ba09a816ece6501fca7c023e89e8" translate="yes" xml:space="preserve">
          <source>Back-end machines are scaled vertically by adding memory, processing power, and faster disks to increase throughput, by adding faster disks and dedicated network interface cards to increase the reliability of DRBD and the responsiveness of the Chef server. Failover is achieved using:</source>
          <target state="translated">DRBD의 안정성과 Chef 서버의 응답 성을 높이기 위해 더 빠른 디스크와 전용 네트워크 인터페이스 카드를 추가하여 처리량을 늘리기 위해 메모리, 처리 능력 및 더 빠른 디스크를 추가하여 백엔드 시스템을 수직으로 확장합니다. 장애 조치는 다음을 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="940abf9ad3d7c633569d3f3529df53dfdb5b4837" translate="yes" xml:space="preserve">
          <source>Back-end machines handle data storage and retrieval, messaging and routing, analytics processing, and search. Back-end machines should be configured for failover using block level replication.</source>
          <target state="translated">백엔드 시스템은 데이터 스토리지 및 검색, 메시징 및 라우팅, 분석 처리 및 검색을 처리합니다. 백엔드 시스템은 블록 레벨 복제를 사용하여 장애 조치를 수행하도록 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="2759124b25ea67d5a5f358b1fadabe1f30b249b5" translate="yes" xml:space="preserve">
          <source>Back-end server #1 fails gracefully (all data is synced)</source>
          <target state="translated">백엔드 서버 # 1이 정상적으로 실패합니다 (모든 데이터가 동기화 됨)</target>
        </trans-unit>
        <trans-unit id="dc330d5d3fdb66614bfc685e03599af7e41c6930" translate="yes" xml:space="preserve">
          <source>Back-end server #1 hard fails badly (unsynced data)</source>
          <target state="translated">백엔드 서버 # 1 하드 실패 (동기화되지 않은 데이터)</target>
        </trans-unit>
        <trans-unit id="5f315bfee58c6e531615c7454b4c241a8007f343" translate="yes" xml:space="preserve">
          <source>Back-end server #2 fails gracefully (all data is synced)</source>
          <target state="translated">백엔드 서버 # 2가 정상적으로 실패합니다 (모든 데이터가 동기화 됨)</target>
        </trans-unit>
        <trans-unit id="89a1f6fa4123e416399e2abbe6bed6ee5b34a574" translate="yes" xml:space="preserve">
          <source>Back-end server #2 hard fails badly (unsynced data)</source>
          <target state="translated">백엔드 서버 # 2 하드 실패 (동기화되지 않은 데이터)</target>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="f811d26984a703bdad0c17b84c07f7e2a330bc41" translate="yes" xml:space="preserve">
          <source>Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.</source>
          <target state="translated">백엔드 호스트는 클라이언트 연결 메타 데이터를 기반으로 선택됩니다. 즉, 연결이로드 밸런서로 리디렉션되기 전에 들어오는 연결의 대상 주소와 동일한 주소로 연결이 열립니다.</target>
        </trans-unit>
        <trans-unit id="2ebda77533302b4c6618b180e6d9de88e4d4cae3" translate="yes" xml:space="preserve">
          <source>Backend servers &lt;a href=&quot;http://www.drbd.org/users-guide/s-prepare-network.html&quot;&gt;should have a dedicated connection&lt;/a&gt;. This is required for replication between the two servers.</source>
          <target state="translated">백엔드 서버 &lt;a href=&quot;http://www.drbd.org/users-guide/s-prepare-network.html&quot;&gt;에는 전용 연결이 있어야합니다&lt;/a&gt; . 두 서버 간의 복제에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8c7d9d2c30522cdf997cdc45141c1917c87b4597" translate="yes" xml:space="preserve">
          <source>Backend servers make use of a single Amazon Elastic Block Store (EBS) volume.</source>
          <target state="translated">백엔드 서버는 단일 Amazon Elastic Block Store (EBS) 볼륨을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e382920577fc766a77124fe6edd508d0fe43ef89" translate="yes" xml:space="preserve">
          <source>Backend servers will share a virtual IP address that must also be accessible from each frontend server. This virtual IP address is created and managed by the Chef server, but will also need to be added to the DNS so that all servers in the high availability configuration may access it.</source>
          <target state="translated">백엔드 서버는 각 프런트 엔드 서버에서 액세스 할 수있는 가상 IP 주소를 공유합니다. 이 가상 IP 주소는 Chef 서버에서 작성 및 관리하지만 고 가용성 구성의 모든 서버가 액세스 할 수 있도록 DNS에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="dd96994d01e723dd6f9b0bdb6119722dbeb9faf0" translate="yes" xml:space="preserve">
          <source>Backup</source>
          <target state="translated">Backup</target>
        </trans-unit>
        <trans-unit id="e29ccd471022564865582470f68008a844ad7749" translate="yes" xml:space="preserve">
          <source>Backup / Restore</source>
          <target state="translated">백업 / 복원</target>
        </trans-unit>
        <trans-unit id="df26fed865ff98adb2dd1b6d984abb1433821224" translate="yes" xml:space="preserve">
          <source>Backup Commands</source>
          <target state="translated">백업 명령</target>
        </trans-unit>
        <trans-unit id="c490d4a850779e46be31b4f0eb4f39b01cafd156" translate="yes" xml:space="preserve">
          <source>Backup Cron</source>
          <target state="translated">백업 크론</target>
        </trans-unit>
        <trans-unit id="8b104bcc7e3c03437f66cfcd065c9ef890f409a8" translate="yes" xml:space="preserve">
          <source>Backup Externally-Deployed Elasticsearch to AWS S3</source>
          <target state="translated">외부에 배포 된 Elasticsearch를 AWS S3에 백업</target>
        </trans-unit>
        <trans-unit id="a49fa92c18495a6580595a9c72205c45cff118e1" translate="yes" xml:space="preserve">
          <source>Backup Externally-Deployed Elasticsearch to GCS</source>
          <target state="translated">외부에 배포 된 Elasticsearch를 GCS에 백업</target>
        </trans-unit>
        <trans-unit id="b4013ba28066bec71890b2c1714328d1a8315e8a" translate="yes" xml:space="preserve">
          <source>Backup Externally-Deployed Elasticsearch to Local Filesystem</source>
          <target state="translated">외부에 배포 된 Elasticsearch를 로컬 파일 시스템에 백업</target>
        </trans-unit>
        <trans-unit id="4fabe62f83a5e2f86805ae2e5298b19c81d4ae3f" translate="yes" xml:space="preserve">
          <source>Backup Space Requirements</source>
          <target state="translated">백업 공간 요구 사항</target>
        </trans-unit>
        <trans-unit id="a5932464fe7ee7685cdde1f28a54e89455da1784" translate="yes" xml:space="preserve">
          <source>Backup and Restore</source>
          <target state="translated">백업 및 복원</target>
        </trans-unit>
        <trans-unit id="83e59757e302f157142ccb2f1a669bc95fc1675a" translate="yes" xml:space="preserve">
          <source>Backup and Restore a Standalone or Frontend install</source>
          <target state="translated">독립 실행 형 또는 프런트 엔드 설치 백업 및 복원</target>
        </trans-unit>
        <trans-unit id="bdf010c46a5cb3155ef00232bc37fa37bb0069da" translate="yes" xml:space="preserve">
          <source>Backup and restore a Chef Backend install</source>
          <target state="translated">Chef 백엔드 설치 백업 및 복원</target>
        </trans-unit>
        <trans-unit id="90802fdf2f907c32a8bb0c3766a12243d8ce33b7" translate="yes" xml:space="preserve">
          <source>Backup the /etc/opscode and /var/opt/opscode directories and include the postgres export file as root</source>
          <target state="translated">/ etc / opscode 및 / var / opt / opscode 디렉토리를 백업하고 postgres 내보내기 파일을 루트로 포함하십시오</target>
        </trans-unit>
        <trans-unit id="74146146cb3407fb001e6d06663416f14801beb7" translate="yes" xml:space="preserve">
          <source>Backup the &lt;code&gt;/var/opt/supermarket&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;/var/opt/supermarket&lt;/code&gt; 디렉터리를 백업합니다 .</target>
        </trans-unit>
        <trans-unit id="ec4f74964956211fd3a2737819b0d5cec4146a0a" translate="yes" xml:space="preserve">
          <source>Backup the data on the Chef Infra Server using &lt;code&gt;knife ec backup&lt;/code&gt;. This backup method will export all Chef Infra Server data into nested JSON files that can be used to import into the Chef Automate Azure VM. We must use the JSON-based backup and restore procedure because the Chef Infra Server data on the Chef Automate VM image is stored in a combined configuration with Chef Automate, therefore, using file based backups from your existing Chef Infra Server is not supported.</source>
          <target state="translated">&lt;code&gt;knife ec backup&lt;/code&gt; 을 사용하여 Chef Infra Server의 데이터를 백업 합니다. 이 백업 방법은 모든 Chef Infra Server 데이터를 Chef Automate Azure VM으로 가져 오는 데 사용할 수있는 중첩 된 JSON 파일로 내 보냅니다. Chef Automate VM 이미지의 Chef Infra Server 데이터는 Chef Automate와 결합 된 구성으로 저장되므로 JSON 기반 백업 및 복원 절차를 사용해야합니다. 따라서 기존 Chef Infra Server의 파일 기반 백업을 사용하는 것은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b040f072580ea4cefa275ae09679d4eb450b6813" translate="yes" xml:space="preserve">
          <source>Backup the data on the Chef Infra Server using &lt;code&gt;knife ec backup&lt;/code&gt;. This method will export all of your existing Chef Infra Server data as JSON. We&amp;rsquo;ll then re-import the same data into a new Chef Automate cluster. We use the JSON based backup and restore procedure because the Chef Infra Server data on the Chef Automate Marketplace AMI is stored in shared databases so copying of binary files won&amp;rsquo;t work.</source>
          <target state="translated">&lt;code&gt;knife ec backup&lt;/code&gt; 을 사용하여 Chef Infra Server의 데이터를 백업 합니다. 이 방법은 기존 Chef Infra Server 데이터를 모두 JSON으로 내 보냅니다. 그런 다음 동일한 데이터를 새 Chef Automate 클러스터로 다시 가져옵니다. Chef Automate Marketplace AMI의 Chef Infra Server 데이터가 공유 데이터베이스에 저장되어 바이너리 파일 복사가 작동하지 않기 때문에 JSON 기반 백업 및 복원 절차를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="283b35f8cf945c381341167c62415e5b1ac073a8" translate="yes" xml:space="preserve">
          <source>Backup to AWS S3</source>
          <target state="translated">AWS S3에 백업</target>
        </trans-unit>
        <trans-unit id="1e0ae5cfbb5337915bbc347ae8837aef9684dad6" translate="yes" xml:space="preserve">
          <source>Backup to GCS</source>
          <target state="translated">GCS로 백업</target>
        </trans-unit>
        <trans-unit id="5138c3f6616f0eb2dc24daea005b2c0eb3dfe8d9" translate="yes" xml:space="preserve">
          <source>Backup to a Filesystem</source>
          <target state="translated">파일 시스템에 백업</target>
        </trans-unit>
        <trans-unit id="d6a6fdd7a784a8d8ee406d61cdf5240be5131d4f" translate="yes" xml:space="preserve">
          <source>Backup your Chef Automate 1 install, to minimize the amount of data that will need to be backed up while the system is down:</source>
          <target state="translated">Chef Automate 1 설치를 백업하여 시스템이 다운 된 동안 백업해야하는 데이터 양을 최소화합니다.</target>
        </trans-unit>
        <trans-unit id="289d311c4797db9e15fed97bb2061a5000fc9eeb" translate="yes" xml:space="preserve">
          <source>BackupError</source>
          <target state="translated">BackupError</target>
        </trans-unit>
        <trans-unit id="3bb33cca64ac2a450a14e366471bbbbe9c843f3f" translate="yes" xml:space="preserve">
          <source>BackupRestoreError</source>
          <target state="translated">BackupRestoreError</target>
        </trans-unit>
        <trans-unit id="3247d77f0d3261e859d8f62d19b14e64353f4759" translate="yes" xml:space="preserve">
          <source>Backups are crucial for protecting your data from catastrophic loss and preparing a recovery procedure. The &lt;code&gt;chef-automate backup create&lt;/code&gt; command creates a single backup that contains data for all products deployed with Chef Automate, including &lt;a href=&quot;../infra_server/index&quot;&gt;Chef Infra Server&lt;/a&gt; and &lt;a href=&quot;../on_prem_builder/index&quot;&gt;Chef Habitat Builder on-prem&lt;/a&gt;. By default, Chef Automate stores backups to the filesystem in the directory &lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt;. You can also configure Chef Automate to store backups in AWS S3 buckets or in Google Cloud Storage (GCS) buckets.</source>
          <target state="translated">백업은 치명적인 손실로부터 데이터를 보호하고 복구 절차를 준비하는 데 중요합니다. &lt;code&gt;chef-automate backup create&lt;/code&gt; 명령이 포함 요리사 자동화와 함께 배포 된 모든 제품에 대한 데이터가 포함 된 단일 백업 생성 &lt;a href=&quot;../infra_server/index&quot;&gt;요리사 인프라 서버&lt;/a&gt; 와 &lt;a href=&quot;../on_prem_builder/index&quot;&gt;요리사 서식지 빌더에-프렘을&lt;/a&gt; . 기본적으로 Chef Automate는 &lt;code&gt;/var/opt/chef-automate/backups&lt;/code&gt; 디렉토리의 파일 시스템에 백업을 저장 합니다. AWS S3 버킷 또는 Google Cloud Storage (GCS) 버킷에 백업을 저장하도록 Chef Automate를 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ebaa2c54352b1304ea222685255527449723573" translate="yes" xml:space="preserve">
          <source>Backups created with the older &lt;code&gt;automate-ctl backup-data&lt;/code&gt; command are not supported with this command. If you wish to restore an older backup please install the version of Chef Automate that took the backup and use &lt;code&gt;automate-ctl restore-data&lt;/code&gt;</source>
          <target state="translated">이전 &lt;code&gt;automate-ctl backup-data&lt;/code&gt; 명령으로 생성 된 백업 은이 명령으로 지원되지 않습니다. 이전 백업을 복원하려면 백업을 수행 한 Chef Automate 버전을 설치하고 &lt;code&gt;automate-ctl restore-data&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="faeadc1ed0e5db8d070a56c237b12a320ad81f27" translate="yes" xml:space="preserve">
          <source>Bad request. The contents of the request are not formatted correctly.</source>
          <target state="translated">요청이 잘못되었습니다. 요청 내용이 올바르게 형식화되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e60b68a177e02f02c7f8645c1f5f6ef138e2f089" translate="yes" xml:space="preserve">
          <source>Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded. The payload does not contain a well-formed &lt;code&gt;checksums&lt;/code&gt; parameter that is a hash containing a key for each checksum.</source>
          <target state="translated">요청이 잘못되었습니다. 객체가 이미 커밋되었거나 하나 이상의 객체가 제대로 업로드되지 않았습니다. 페이로드에는 각 체크섬의 키가 포함 된 해시 인 올바른 형식의 &lt;code&gt;checksums&lt;/code&gt; 매개 변수 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="794b03ca458ee717c8a7fd69f8c9e36f9dfa7ce8" translate="yes" xml:space="preserve">
          <source>Bad version of PostgreSQL.</source>
          <target state="translated">PostgreSQL의 잘못된 버전입니다.</target>
        </trans-unit>
        <trans-unit id="c8af83fb4c1ea103238bcdedb758767604d9423c" translate="yes" xml:space="preserve">
          <source>Banner</source>
          <target state="translated">Banner</target>
        </trans-unit>
        <trans-unit id="3b91f32ec5f1fad1e569d0afd3521bc99f32f7b7" translate="yes" xml:space="preserve">
          <source>Bare Chef InSpec resources are instantiated and their help text is presented. You may also access the resource contents or other matchers that they define. Run &lt;code&gt;help &amp;lt;resource&amp;gt;&lt;/code&gt; to get more help on using a particular resource or see the Chef InSpec resources documentation online.</source>
          <target state="translated">Bare Chef InSpec 리소스가 인스턴스화되고 도움말 텍스트가 표시됩니다. 또한 리소스 콘텐츠 또는 그들이 정의하는 다른 매처에 액세스 할 수 있습니다. 특정 리소스 사용에 대한 자세한 도움말을 보려면 &lt;code&gt;help &amp;lt;resource&amp;gt;&lt;/code&gt; 를 실행 하거나 온라인에서 Chef InSpec 리소스 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e2261a3f746931a0157736557a885eae56834946" translate="yes" xml:space="preserve">
          <source>Bare Kubernetes</source>
          <target state="translated">베어 Kubernetes</target>
        </trans-unit>
        <trans-unit id="eaf48039ab23b8dbd57742cdc925807cc079aa73" translate="yes" xml:space="preserve">
          <source>Base dn to use when searching for users in LDAP, typically &lt;code&gt;OU=Users&lt;/code&gt; and then the domain. Default value: &lt;code&gt;OU=Employees,OU=Domain users,DC=examplecorp,DC=com&lt;/code&gt;.</source>
          <target state="translated">LDAP에서 사용자를 검색 할 때 사용할 기본 dn (일반적으로 &lt;code&gt;OU=Users&lt;/code&gt; 다음에 도메인). 기본값 : &lt;code&gt;OU=Employees,OU=Domain users,DC=examplecorp,DC=com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a5536dc4dc9a4d720044454a9d7073b121db06b" translate="yes" xml:space="preserve">
          <source>Base64 encoding is used to preserve special characters in encrypted contents</source>
          <target state="translated">Base64 인코딩은 암호화 된 콘텐츠에서 특수 문자를 보존하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="022d0c770bc5baad433e124ff811629bba4291c4" translate="yes" xml:space="preserve">
          <source>Base64-encoded private key used by clients to authenticate to the cluster endpoint.</source>
          <target state="translated">클라이언트가 클러스터 엔드 포인트를 인증하는 데 사용하는 Base64로 인코딩 된 개인 키입니다.</target>
        </trans-unit>
        <trans-unit id="c50d6d93c6699e77ca88d1dff9692a7922f4f612" translate="yes" xml:space="preserve">
          <source>Base64-encoded public certificate that is the root of trust for the cluster.</source>
          <target state="translated">클러스터에 대한 신뢰의 루트 인 Base64로 인코딩 된 공용 인증서입니다.</target>
        </trans-unit>
        <trans-unit id="c6061d6ea1dd4688d2f64185d2499f4529266df6" translate="yes" xml:space="preserve">
          <source>Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.</source>
          <target state="translated">클라이언트가 클러스터 끝점을 인증하는 데 사용하는 Base64로 인코딩 된 공용 인증서입니다.</target>
        </trans-unit>
        <trans-unit id="f5ebd1d35be376e0365da49252bbb2bfc146765f" translate="yes" xml:space="preserve">
          <source>Based on these concerns, InSpec attributes have been renamed to InSpec inputs in Chef InSpec v4.</source>
          <target state="translated">이러한 우려에 따라 InSpec 속성은 Chef InSpec v4에서 InSpec 입력으로 이름이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="7a5251afedb4edf5cfa9e36246fa04941542bd1a" translate="yes" xml:space="preserve">
          <source>Baseline indicates if OS vulnerabilities recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">기준선은 가상 머신에 대한 OS 취약성 권장 사항이 활성화되었는지 여부를 나타냅니다 ( &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f620cacbc465c805c4e1c25e20fa57e55c09e33e" translate="yes" xml:space="preserve">
          <source>Bash</source>
          <target state="translated">Bash</target>
        </trans-unit>
        <trans-unit id="fd2137cc1f30dc8ef486e1d17244e9b4127bbd3f" translate="yes" xml:space="preserve">
          <source>Bash Plans: &lt;code&gt;attach&lt;/code&gt;</source>
          <target state="translated">Bash 플랜 : &lt;code&gt;attach&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b6dac7ece96a0defa85e862f31df7c8d8851f33" translate="yes" xml:space="preserve">
          <source>Bash User Data</source>
          <target state="translated">Bash 사용자 데이터</target>
        </trans-unit>
        <trans-unit id="8d02d0ad3adb6565b45b0245e401f38ad6d9b710" translate="yes" xml:space="preserve">
          <source>Bash callbacks are prefixed with &lt;code&gt;do_&lt;/code&gt; and use an underscore convention. Powershell plans prefix callbacks with &lt;code&gt;Invoke-&lt;/code&gt; and use a PascalCase convention.</source>
          <target state="translated">Bash 콜백은 &lt;code&gt;do_&lt;/code&gt; 로 시작 하고 밑줄 규칙을 사용합니다. Powershell은 &lt;code&gt;Invoke-&lt;/code&gt; 로 접두사 콜백을 계획 하고 PascalCase 규칙을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="95d4fff06b6fc78119db569b6adaa1e52f3714c7" translate="yes" xml:space="preserve">
          <source>Basic Hardware Requirements</source>
          <target state="translated">기본 하드웨어 요구 사항</target>
        </trans-unit>
        <trans-unit id="15e10e999d9f45564ef18325b8fb75ba7dfdf012" translate="yes" xml:space="preserve">
          <source>Basic Syntax</source>
          <target state="translated">기본 구문</target>
        </trans-unit>
        <trans-unit id="eeb4d13b0f4c31cf80b070f53d2a11e2790348aa" translate="yes" xml:space="preserve">
          <source>Basic scaling creates instances when your application receives requests. Each instance will be shut down when the application becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.</source>
          <target state="translated">기본 확장은 애플리케이션이 요청을 수신 할 때 인스턴스를 생성합니다. 애플리케이션이 유휴 상태가되면 각 인스턴스가 종료됩니다. 기본 확장은 간헐적이거나 사용자 활동에 의해 주도되는 작업에 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="ab749ba7f3b4f97110082efd73d5220bec97fb03" translate="yes" xml:space="preserve">
          <source>Basic tests for inetd_conf services:</source>
          <target state="translated">inetd_conf 서비스에 대한 기본 테스트 :</target>
        </trans-unit>
        <trans-unit id="c2224f8a107d36c0de776aadc7b40c433729805c" translate="yes" xml:space="preserve">
          <source>Basically, what this means is that when the primary becomes unavailable to the secondary without an explicit takeover being initiated, the secondary will assume that it itself is the wrong, &lt;code&gt;split-brained&lt;/code&gt; host, and is the one unconnected and incorrect. It will take no automatic action.</source>
          <target state="translated">기본적으로 이것이 의미하는 것은 명시 적 인계가 시작되지 않고 기본 서버가 보조 서버에서 사용할 수 없게되면 보조 서버 자체가 잘못 &lt;code&gt;split-brained&lt;/code&gt; 호스트이고 연결되지 않고 잘못된 호스트 라고 가정합니다 . 자동 조치는 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da6bfbeb74345cd58e2418d477a881477c20d8e3" translate="yes" xml:space="preserve">
          <source>Bastion Ring / Permanent Peers</source>
          <target state="translated">Bastion Ring / 영구 피어</target>
        </trans-unit>
        <trans-unit id="aa3fb9470b4909c3c471b4c48b9042ff6b36bb5e" translate="yes" xml:space="preserve">
          <source>Be aware that the referenced commands and files need to already exist before verification.</source>
          <target state="translated">참조 된 명령 및 파일은 확인 전에 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="95e2396f5ac767886330e28094936a53a31f496c" translate="yes" xml:space="preserve">
          <source>Be careful in the words that you choose. Be kind to others. Practice empathy. Don&amp;rsquo;t insult or put down others. Remember that sexist, racist, ableist, ageist, and other exclusionary jokes can be offensive to those around you. If you think your conversation is making another community member uncomfortable &lt;em&gt;or&lt;/em&gt; if they tell you so, stop immediately, make amends, and move forward.</source>
          <target state="translated">선택하는 단어에주의하십시오. 다른 사람들에게 친절하십시오. 공감 연습하기. 다른 사람을 모욕하거나 폄하하지 마십시오. 성 차별 주의자, 인종 차별 주의자, 능력 주의자, 연령 주의자 및 기타 배타적 인 농담은 주변 사람들에게 불쾌감을 줄 수 있음을 기억하십시오. 대화가 다른 커뮤니티 구성원을 불편하게한다고 생각 &lt;em&gt;하거나&lt;/em&gt; 그들이 그렇게 말하는 경우 즉시 중단하고 수정 한 다음 앞으로 나아가십시오.</target>
        </trans-unit>
        <trans-unit id="e7f1873c0b469c34f9c30ce8def623803fce53ab" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;:delete_key&lt;/code&gt; action with the &lt;code&gt;recursive&lt;/code&gt; attribute. This will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by Chef Infra Client.</source>
          <target state="translated">&lt;code&gt;recursive&lt;/code&gt; 속성 과 함께 &lt;code&gt;:delete_key&lt;/code&gt; 작업을 사용할 때주의하십시오 . 이렇게하면 레지스트리 키, 모든 값 및 이와 관련된 모든 이름, 유형 및 데이터가 삭제됩니다. Chef Infra Client에서는 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cee0bed171e9a04da4d52b6adfbe2ba4971aacd4" translate="yes" xml:space="preserve">
          <source>Be careful when using the &lt;code&gt;:delete_key&lt;/code&gt; action with the &lt;code&gt;recursive&lt;/code&gt; attribute. This will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by the chef-client.</source>
          <target state="translated">&lt;code&gt;recursive&lt;/code&gt; 속성 과 함께 &lt;code&gt;:delete_key&lt;/code&gt; 작업을 사용할 때주의하십시오 . 레지스트리 키, 모든 값 및 이와 관련된 모든 이름, 유형 및 데이터가 삭제됩니다. 요리사 클라이언트는이를 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="63fd8241acebcbd84b57624daa6309cbead93414" translate="yes" xml:space="preserve">
          <source>Be cautious about making assumptions about what someone does or does not know about something - assuming that someone does not understand an issue and over explaining can be condescending (even when not intended to be so).</source>
          <target state="translated">누군가가 어떤 일에 대해 무엇을하고 있는지 또는 모르는지에 대한 가정을 할 때주의하십시오. 누군가가 문제를 이해하지 못하고 과도하게 설명하는 것은 (그렇게 의도하지 않은 경우에도) 굴욕적 일 수 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="bf153ad12230a809978053c2e29b4ff6ac732c36" translate="yes" xml:space="preserve">
          <source>Be cautious when running your cookbooks locally. It is possible to accidentally impact production infrastructure based on settings in your cookbooks and attributes. Read over your cookbooks and attributes, especially attributes set in roles and environments. If needed, override attributes so they can be tested locally in your &lt;code&gt;kitchen.yml&lt;/code&gt;.</source>
          <target state="translated">요리 책을 로컬에서 실행할 때주의하십시오. 쿡북 및 속성의 설정에 따라 실수로 프로덕션 인프라에 영향을 미칠 수 있습니다. 요리 책과 속성, 특히 역할과 환경에 설정된 속성을 읽어보십시오. 필요한 경우 특성을 재정 의하여 &lt;code&gt;kitchen.yml&lt;/code&gt; 에서 로컬로 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2114cc22852e2d98c4fd075e4574afadac5fd71" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1</source>
          <target state="translated">RAID1에서 구성</target>
        </trans-unit>
        <trans-unit id="e497a8ccc57ee52a23183391423a8920102f2464" translate="yes" xml:space="preserve">
          <source>Be configured in either RAID1 or RAID5</source>
          <target state="translated">RAID1 또는 RAID5로 구성</target>
        </trans-unit>
        <trans-unit id="1eefee9f6ccf1c5a7d16c6e5f644985ff6b0510c" translate="yes" xml:space="preserve">
          <source>Be identical across both of your backend servers</source>
          <target state="translated">두 백엔드 서버에서 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="5bf1e45c3bad60afcca8d9b5c6d98bb05e3bdae8" translate="yes" xml:space="preserve">
          <source>Be inspected for instances of a) the &lt;code&gt;Chef::Provider&lt;/code&gt; base class, and then b) for the presence of any core resources from the chef-client</source>
          <target state="translated">a) &lt;code&gt;Chef::Provider&lt;/code&gt; 기본 클래스 의 인스턴스를 검사 한 다음 b) chef-client의 핵심 리소스가 있는지 검사합니다.</target>
        </trans-unit>
        <trans-unit id="0f854bc4053de45fb266e1b83077fc91bc85d1e3" translate="yes" xml:space="preserve">
          <source>Be respectful of differing viewpoints and experiences</source>
          <target state="translated">다른 관점과 경험을 존중하십시오</target>
        </trans-unit>
        <trans-unit id="13d246fbf9613b687cb0533026edb0d5e000495b" translate="yes" xml:space="preserve">
          <source>Be sure to back up the Chef server data before starting the upgrade process.</source>
          <target state="translated">업그레이드 프로세스를 시작하기 전에 Chef 서버 데이터를 백업하십시오.</target>
        </trans-unit>
        <trans-unit id="c6e3e9bc52383cadfb6bc8116ba73f88a8af551c" translate="yes" xml:space="preserve">
          <source>Be sure to update the various local values in the &lt;code&gt;pg_dump&lt;/code&gt; command as necessary to match your infrastructure. For documentation about the pg_dump utility, see: &lt;a href=&quot;https://www.postgresql.org/docs/9.3/app-pgdump.html&quot;&gt;https://www.postgresql.org/docs/9.3/app-pgdump.html&lt;/a&gt;</source>
          <target state="translated">인프라와 일치하도록 필요 에 따라 &lt;code&gt;pg_dump&lt;/code&gt; 명령 의 다양한 로컬 값을 업데이트해야합니다 . pg_dump 유틸리티에 대한 문서는 &lt;a href=&quot;https://www.postgresql.org/docs/9.3/app-pgdump.html&quot;&gt;https://www.postgresql.org/docs/9.3/app-pgdump.html을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2521f2374fb6c929af4a4da62adddb515b9f49fa" translate="yes" xml:space="preserve">
          <source>Be updated to use the &lt;code&gt;LWRPBase&lt;/code&gt; base class</source>
          <target state="translated">&lt;code&gt;LWRPBase&lt;/code&gt; 기본 클래스 를 사용하도록 업데이트</target>
        </trans-unit>
        <trans-unit id="acf8472649b885a5ad27d65f25155edc45c3b9e5" translate="yes" xml:space="preserve">
          <source>Because Chef Habitat is an eventually-consistent distributed system, the role of the leader is different than in strongly-consistent systems. It only serves as the leader for &lt;em&gt;application level semantics&lt;/em&gt;, e.g. a database write leader. The fact that a Supervisor is a leader has no bearing upon other operations in the Chef Habitat system, including rumor dissemination for configuration updates. It is &lt;em&gt;not&lt;/em&gt; akin to a &lt;a href=&quot;https://raft.github.io/&quot;&gt;Raft&lt;/a&gt; leader, through which writes must all be funneled. This allows for very high scalability of the Chef Habitat Supervisor ring.</source>
          <target state="translated">Chef Habitat은 최종적으로 일관된 분산 시스템이기 때문에 리더의 역할은 강력하게 일관된 시스템에서와 다릅니다. 그것은 단지의 리더 역할을 &lt;em&gt;응용 프로그램 수준의 의미&lt;/em&gt; 데이터베이스 쓰기 지도자를 예. 감독자가 리더라는 사실은 구성 업데이트에 대한 소문 유포를 포함하여 Chef Habitat 시스템의 다른 운영에 영향을 미치지 않습니다. 그것은 것입니다 &lt;em&gt;하지&lt;/em&gt; A와 유사 &lt;a href=&quot;https://raft.github.io/&quot;&gt;뗏목&lt;/a&gt; 쓰기가 모두 깔때기해야되는 지도자. 이것은 Chef Habitat Supervisor 링의 매우 높은 확장 성을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a5456045131d85e39ab0e516777afc514fc121c2" translate="yes" xml:space="preserve">
          <source>Because an action is not explicitly specified, the chef-client will use the default action: &lt;code&gt;:deploy&lt;/code&gt;</source>
          <target state="translated">조치가 명시 적으로 지정되지 않았기 때문에 chef-client는 기본 조치를 사용합니다. &lt;code&gt;:deploy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92230d6ba2e936e32c99884e09c69fb6e69e31e7" translate="yes" xml:space="preserve">
          <source>Because both the &lt;code&gt;ftp&lt;/code&gt; and &lt;code&gt;telnet&lt;/code&gt; Internet services are commented out (&lt;code&gt;#&lt;/code&gt;), both services are disabled. Consequently, both tests will return &lt;code&gt;true&lt;/code&gt;. However, if the &lt;code&gt;inetd.conf&lt;/code&gt; file is set as follows:</source>
          <target state="translated">양쪽 때문에 &lt;code&gt;ftp&lt;/code&gt; 및 &lt;code&gt;telnet&lt;/code&gt; 인터넷 서비스 (주석 처리 &lt;code&gt;#&lt;/code&gt; ), 두 서비스는 사용할 수 없습니다. 결과적으로 두 테스트 모두 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그러나 &lt;code&gt;inetd.conf&lt;/code&gt; 파일이 다음과 같이 설정된 경우 :</target>
        </trans-unit>
        <trans-unit id="dc1b637499247a8b3d5ac599d82818abdf925dfd" translate="yes" xml:space="preserve">
          <source>Because build cookbooks read the configuration file, use the configuration file to customize the build cookbook to suit the needs of a particular project. In this way, you can share some &amp;ldquo;standard&amp;rdquo; version of a build cookbook with others and then use extra data in the config file to tailor the cookbook as needed.</source>
          <target state="translated">빌드 쿡북은 구성 파일을 읽기 때문에 구성 파일을 사용하여 특정 프로젝트의 요구에 맞게 빌드 쿡북을 사용자 지정합니다. 이러한 방식으로 빌드 쿡북의 일부 &quot;표준&quot;버전을 다른 사용자와 공유 한 다음 구성 파일의 추가 데이터를 사용하여 필요에 따라 쿡북을 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e1428ac4351296b1461a20deb2d92a0dfa81da1" translate="yes" xml:space="preserve">
          <source>Because compliance remediation changes your system, its defaults are different than compliance scanning:</source>
          <target state="translated">규정 준수 수정은 시스템을 변경하기 때문에 기본값은 규정 준수 검사와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="fa48d983b5b637f947eda6ff81eea6e8e7033db1" translate="yes" xml:space="preserve">
          <source>Because externally-deployed Elasticsearch nodes will not have access to Chef Automate&amp;rsquo;s built-in backup storage services, you must configure Elasticsearch backup settings separately from Chef Automate&amp;rsquo;s primary backup settings. You can configure backups to use either the local filesystem or S3.</source>
          <target state="translated">외부에 배포 된 Elasticsearch 노드는 Chef Automate의 내장 백업 스토리지 서비스에 액세스 할 수 없기 때문에 Chef Automate의 기본 백업 설정과 별도로 Elasticsearch 백업 설정을 구성해야합니다. 로컬 파일 시스템 또는 S3를 사용하도록 백업을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67c6162ba37d1cbf334eadff44d65f8d75f3752b" translate="yes" xml:space="preserve">
          <source>Because most of the peer communication between nodes in the backend cluster happens in the clear, the backend cluster is vulnerable to passive monitoring of network traffic between nodes. To help prevent an active attacker from intercepting or changing cluster data, Chef recommends using iptables or an equivalent network ACL tool to restrict access to PostgreSQL, Elasticsearch and etcd to only hosts that need access.</source>
          <target state="translated">백엔드 클러스터의 노드 간 대부분의 피어 통신은 일반 상태에서 발생하므로 백엔드 클러스터는 노드 간 네트워크 트래픽의 수동 모니터링에 취약합니다. 활성 공격자가 클러스터 데이터를 가로 채거나 변경하는 것을 방지하기 위해 Chef는 iptables 또는 이와 동등한 네트워크 ACL 도구를 사용하여 PostgreSQL, Elasticsearch 및 etcd에 대한 액세스를 액세스가 필요한 호스트로만 제한 할 것을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="b4ffed6fc8eb8738f02187fd11889228862cec57" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;inherits&lt;/code&gt; property is not specified, Chef Infra Client will default it to &lt;code&gt;true&lt;/code&gt;, which will ensure that security settings for existing files remain unchanged.</source>
          <target state="translated">&lt;code&gt;inherits&lt;/code&gt; 속성이 지정되지 않았기 때문에 Chef Infra Client는 기본값을 &lt;code&gt;true&lt;/code&gt; 로 설정하여 기존 파일에 대한 보안 설정이 변경되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="677e84929e7f7e325068ef76544bb0aed72d2938" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;inherits&lt;/code&gt; property is not specified, the chef-client will default it to &lt;code&gt;true&lt;/code&gt;, which will ensure that security settings for existing files remain unchanged.</source>
          <target state="translated">&lt;code&gt;inherits&lt;/code&gt; 속성이 지정되지 않았기 때문에 chef-client는 기본값을 &lt;code&gt;true&lt;/code&gt; 로 설정하여 기존 파일의 보안 설정이 변경되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="e5f7aaae6389c4c0472dce93b931023f6de56f21" translate="yes" xml:space="preserve">
          <source>Because the CLI is outside the scope of any individual profile and the inputs don&amp;rsquo;t take options, the inputs are clumsily copied into every profile, effectively making the CLI mechanism global.</source>
          <target state="translated">CLI는 개별 프로필의 범위를 벗어나고 입력에 옵션이 없기 때문에 입력이 모든 프로필에 서투르게 복사되어 CLI 메커니즘을 효과적으로 전역으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3c35246c25804ecb5729df93d69912abbe14c7b4" translate="yes" xml:space="preserve">
          <source>Because the Chef Infra Server is composed of many different services that work together to create a functioning system, this step may take a few minutes to complete.</source>
          <target state="translated">Chef Infra Server는 작동하는 시스템을 만들기 위해 함께 작동하는 다양한 서비스로 구성되기 때문에이 단계를 완료하는 데 몇 분 정도 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68377b428dda6afda1febc21acab204801dff74c" translate="yes" xml:space="preserve">
          <source>Because the Chef server is composed of many different services that work together to create a functioning system, this step may take a few minutes to complete.</source>
          <target state="translated">Chef 서버는 함께 작동하여 작동 시스템을 작성하는 여러 가지 서비스로 구성되므로이 단계를 완료하는 데 몇 분이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e976475cded20fd575a0ed7d11a5f74185e1e6" translate="yes" xml:space="preserve">
          <source>Because the FQDN has already been configured, do the following:</source>
          <target state="translated">FQDN이 이미 구성되었으므로 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="2294f8d8742fb4b7618479e3e73040a9b02eba2f" translate="yes" xml:space="preserve">
          <source>Because the Recipe DSL is a Ruby DSL, anything that can be done using Ruby can also be done in a recipe or custom resource, including &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, using the &lt;code&gt;include?&lt;/code&gt; Ruby method, including recipes in recipes, and checking for dependencies. See the &lt;a href=&quot;../ruby/index&quot;&gt;Ruby Guide&lt;/a&gt; for further information on built-in Ruby functionality.</source>
          <target state="translated">레시피 DSL이기 때문에 루비 DSL, 루비를 사용하여 수행 할 수있는 일이도를 포함하여, 조리법 또는 사용자 정의 자원에서 수행 할 수 &lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;case&lt;/code&gt; (가) 사용, 문장 &lt;code&gt;include?&lt;/code&gt; 레시피에 레시피를 포함하고 종속성을 확인하는 Ruby 메소드. 기본 제공 Ruby 기능에 대한 자세한 내용은 &lt;a href=&quot;../ruby/index&quot;&gt;Ruby 가이드&lt;/a&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="2e85f8849005356d69d8f39e0572f4ebb0901e04" translate="yes" xml:space="preserve">
          <source>Because the Recipe DSL is a Ruby DSL, then anything that can be done using Ruby can also be done in a recipe, including &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;case&lt;/code&gt; statements, using the &lt;code&gt;include?&lt;/code&gt; Ruby method, including recipes in recipes, and checking for dependencies.</source>
          <target state="translated">레시피 DSL은 루비 DSL 때문에, 루비를 사용하여 수행 할 수 있습니다 후 아무것도도 포함 조리법으로 수행 할 수 &lt;code&gt;if&lt;/code&gt; 와 &lt;code&gt;case&lt;/code&gt; (가) 사용, 문장 &lt;code&gt;include?&lt;/code&gt; 레시피에 레시피를 포함하고 종속성을 확인하는 Ruby 메소드.</target>
        </trans-unit>
        <trans-unit id="23d4eea6b6df4739d4ea98a02ed1a7858290851f" translate="yes" xml:space="preserve">
          <source>Because the Supervisor is running in the background, you will not see the Supervisor output as you start your service. However you can use the &lt;code&gt;sup-log&lt;/code&gt; (or &lt;code&gt;Get-SupervisorLog&lt;/code&gt; on Windows) command that will stream the tail of the Supervisor output (you can also look at the contents of &lt;code&gt;/hab/sup/default/sup.log&lt;/code&gt;, which is where the Studio directs its Supervisor output).</source>
          <target state="translated">Supervisor가 백그라운드에서 실행 중이므로 서비스를 시작할 때 Supervisor 출력이 표시되지 않습니다. 그러나 Supervisor 출력의 꼬리를 스트리밍 하는 &lt;code&gt;sup-log&lt;/code&gt; (또는 Windows의 &lt;code&gt;Get-SupervisorLog&lt;/code&gt; ) 명령을 사용할 수 있습니다 (또한 &lt;code&gt;/hab/sup/default/sup.log&lt;/code&gt; 의 내용을 볼 수 있습니다 . Studio는 감독자 출력을 지시합니다.)</target>
        </trans-unit>
        <trans-unit id="7261cfd728a0d0ac78492c02f3762e536360514c" translate="yes" xml:space="preserve">
          <source>Because the basic functionality of process supervision is well-known, this document does not discuss those details. Instead, this document focuses strictly on the internals of the feature that makes the Chef Habitat Supervisor special: the fact that each Supervisor is connected to others in a peer-to-peer, masterless network which we refer to as a &lt;em&gt;ring&lt;/em&gt;. This allows Supervisors to share configuration data with one another and adapt to changing conditions in the ring by modifying their own configuration.</source>
          <target state="translated">프로세스 감독의 기본 기능은 잘 알려져 있으므로이 문서에서는 이러한 세부 사항에 대해 설명하지 않습니다. 대신,이 문서는 Chef Habitat Supervisor를 특별하게 만드는 기능의 내부에 엄격하게 초점을 맞추고 있습니다. 즉, 각 수퍼바이저가 &lt;em&gt;링&lt;/em&gt; 이라고 부르는 P2P, 마스터리스 네트워크에서 다른 수퍼바이저와 연결되어 있다는 사실입니다 . 이를 통해 감독자는 구성 데이터를 서로 공유하고 자신의 구성을 수정하여 링의 변화하는 조건에 적응할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cb8fc629e6cbab2a15acaddefba3e810fa8da33" translate="yes" xml:space="preserve">
          <source>Because the contents of encrypted data bag items are not visible to the Chef Infra Server, search queries against data bags with encrypted items will not return any results.</source>
          <target state="translated">암호화 된 데이터 백 항목의 내용은 Chef Infra Server에 표시되지 않기 때문에 암호화 된 항목이있는 데이터 백에 대한 검색 쿼리는 결과를 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b11f9d78f71498a16039269ca563e32fad544d7" translate="yes" xml:space="preserve">
          <source>Because the default value for &lt;code&gt;link_type&lt;/code&gt; is symbolic, and because properties that are not specified in the resource block will be assigned their default values, the following example creates a symbolic link:</source>
          <target state="translated">&lt;code&gt;link_type&lt;/code&gt; 의 기본값 은 symbolic이고 자원 블록에 지정되지 않은 속성에는 기본값이 할당되므로 다음 예제는 symbolic link를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fdeb6333e5dff4eb1e2aa9ae89b431d2914c5625" translate="yes" xml:space="preserve">
          <source>Because the first resource (&lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt;) is still in the run-list, it gets executed again. And because that file already exists, Chef Infra Client doesn&amp;rsquo;t attempt to re-create it. Finally, the files were created using the &lt;code&gt;ls&lt;/code&gt; method:</source>
          <target state="translated">첫 번째 리소스 ( &lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt; )가 여전히 실행 목록에 있기 때문에 다시 실행됩니다. 해당 파일이 이미 존재하기 때문에 Chef Infra Client는 파일을 다시 생성하지 않습니다. 마지막으로 &lt;code&gt;ls&lt;/code&gt; 메서드를 사용하여 파일을 생성했습니다 .</target>
        </trans-unit>
        <trans-unit id="192f0563907f2e6ff425c0188abbe8de39316a7d" translate="yes" xml:space="preserve">
          <source>Because the first resource (&lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt;) is still in the run-list, it gets executed again. And because that file already exists, the chef-client doesn&amp;rsquo;t attempt to re-create it. Finally, the files were created using the &lt;code&gt;ls&lt;/code&gt; method:</source>
          <target state="translated">첫 번째 자원 ( &lt;code&gt;file[/tmp/ohai2u_shef]&lt;/code&gt; )이 여전히 실행 목록에 있으므로 다시 실행됩니다. 해당 파일이 이미 존재하므로 요리사 클라이언트는 파일을 다시 만들려고 시도하지 않습니다. 마지막으로 파일은 &lt;code&gt;ls&lt;/code&gt; 메소드를 사용하여 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3a2879c038c0fdc73ba71a2f95042392bdd4c527" translate="yes" xml:space="preserve">
          <source>Because the private key is used to sign your artifact, it should not be shared freely; however, if anyone wants to download and use your artifact, then they must have your public key (.pub) installed in their local &lt;code&gt;$HOME/.hab/cache/keys&lt;/code&gt; or &lt;code&gt;/hab/cache/keys&lt;/code&gt; directory. If the origin&amp;rsquo;s public key is not present, Chef Habitat attempts to download it from the Builder endpoint specified by the &lt;code&gt;--url&lt;/code&gt; argument (&lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;https://bldr.habitat.sh&lt;/a&gt; by default) to &lt;code&gt;hab pkg install&lt;/code&gt;.</source>
          <target state="translated">개인 키는 아티팩트에 서명하는 데 사용되므로 자유롭게 공유해서는 안됩니다. 그러나 누군가가 여러분의 아티팩트를 다운로드하고 사용하려면 로컬 &lt;code&gt;$HOME/.hab/cache/keys&lt;/code&gt; 또는 &lt;code&gt;/hab/cache/keys&lt;/code&gt; 디렉토리에 공개 키 (.pub)가 설치되어 있어야 합니다 . 오리진의 공개 키가없는 경우 Chef Habitat는 &lt;code&gt;--url&lt;/code&gt; 인수 ( 기본적으로 &lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;https://bldr.habitat.sh&lt;/a&gt; )로 지정된 Builder 엔드 포인트 에서 &lt;code&gt;hab pkg install&lt;/code&gt; 로 다운로드를 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="cb3d429b1e5952fb4cf78d13559ab5529e871cd9" translate="yes" xml:space="preserve">
          <source>Because the two &lt;code&gt;control_group&lt;/code&gt; block names are identical, the chef-client will return an exception similar to:</source>
          <target state="translated">두 &lt;code&gt;control_group&lt;/code&gt; 블록 이름이 동일 하기 때문에 chef-client는 다음과 유사한 예외를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2c852677b8aab01a0c9fd6e4420a3c59f5391b6b" translate="yes" xml:space="preserve">
          <source>Because they test source code, the Verify and Build stages ordinarily run exclusively on the runners and don&amp;rsquo;t involve other infrastructure. The necessary runtime environments are created and destroyed during the execution of the stage. For example, they can be established using virtual machines created by testing frameworks such as Kitchen.</source>
          <target state="translated">소스 코드를 테스트하기 때문에 확인 및 빌드 단계는 일반적으로 실행기에서만 실행되며 다른 인프라를 포함하지 않습니다. 필요한 런타임 환경은 스테이지 실행 중에 생성 및 삭제됩니다. 예를 들어 Kitchen과 같은 테스트 프레임 워크로 만든 가상 머신을 사용하여 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34ea2b2f3037b117a061017e2eda33692439488f" translate="yes" xml:space="preserve">
          <source>Because you are using an on-prem installation of Chef Habitat Builder, you must specify the &lt;a href=&quot;index#access-chef-habitat-builder-on-prem-with-habitat-command-line-tools&quot;&gt;Builder API endpoint of your installation&lt;/a&gt; when following the &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/&quot;&gt;Habitat Builder documentation&lt;/a&gt;. This documentation covers &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;using origin keys&lt;/a&gt;, &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;using origin secrets&lt;/a&gt;, and &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#upload-and-promote-packages&quot;&gt;uploading and promoting packages&lt;/a&gt;.</source>
          <target state="translated">Chef Habitat Builder의 온 프레미스 설치를 사용하고 있으므로 &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/&quot;&gt;Habitat Builder 설명서를 따를&lt;/a&gt; 때 &lt;a href=&quot;index#access-chef-habitat-builder-on-prem-with-habitat-command-line-tools&quot;&gt;설치&lt;/a&gt; 의 Builder API 끝점을 지정해야합니다 . 이 문서는 커버 &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;기원 키를 사용하여&lt;/a&gt; , &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#using-origin-secrets&quot;&gt;기원의 비밀을 사용&lt;/a&gt; 하고, &lt;a href=&quot;https://www.habitat.sh/docs/using-builder/#upload-and-promote-packages&quot;&gt;업로드 및 패키지를 홍보&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="13acfbaab69531aa08b21c108fcf48c5a2048f66" translate="yes" xml:space="preserve">
          <source>Before a profile can use controls from another profile, the to-be-included profile needs to be specified in the including profile&amp;rsquo;s &lt;code&gt;inspec.yml&lt;/code&gt; file in the &lt;code&gt;depends&lt;/code&gt; section. For each profile to be included, a location for the profile from where to be fetched and a name for the profile should be included. For example:</source>
          <target state="translated">프로필은 다른 프로필에서 컨트롤을 사용하기 전에,에-포함 할 프로파일이 포함 프로필의 지정 될 필요가 &lt;code&gt;inspec.yml&lt;/code&gt; 의 (가)에서 파일을 &lt;code&gt;depends&lt;/code&gt; 절을 참조하십시오. 포함 할 각 프로필에 대해 가져올 프로필의 위치와 프로필 이름이 포함되어야합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3d1cdedaff0a7f637c251c3330ed591f24d4e860" translate="yes" xml:space="preserve">
          <source>Before adding any settings to the knife.rb file:</source>
          <target state="translated">knife.rb 파일에 설정을 추가하기 전에 :</target>
        </trans-unit>
        <trans-unit id="fb6d78fd6c8a4f5e21c45a059da7084883a227d7" translate="yes" xml:space="preserve">
          <source>Before beginning your installation, check the &lt;a href=&quot;../system_requirements/index&quot;&gt;System Requirements&lt;/a&gt; for Chef Automate, and ensure that the &lt;code&gt;chef-automate&lt;/code&gt; command line tool installed.</source>
          <target state="translated">설치를 시작하기 전에 Chef Automate 의 &lt;a href=&quot;../system_requirements/index&quot;&gt;시스템 요구 사항&lt;/a&gt; 을 확인하고 &lt;code&gt;chef-automate&lt;/code&gt; 명령 줄 도구가 설치되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b1b0a05f3da943923fdbb3caa0cb21c27f8ed789" translate="yes" xml:space="preserve">
          <source>Before beginning your installation, check the &lt;a href=&quot;../system_requirements/index&quot;&gt;System Requirements&lt;/a&gt; for Chef Automate.</source>
          <target state="translated">설치를 시작하기 전에 Chef Automate 의 &lt;a href=&quot;../system_requirements/index&quot;&gt;시스템 요구 사항&lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca42b7eea9900da4b8e5d90985410305fe4d5042" translate="yes" xml:space="preserve">
          <source>Before creating the backend HA cluster and building at least one Chef Infra Server to be part of the frontend group, verify:</source>
          <target state="translated">백엔드 HA 클러스터를 만들고 프런트 엔드 그룹의 일부가 될 하나 이상의 Chef Infra 서버를 구축하기 전에 다음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f223474c0a576f16b0e0dea39f8fbdd70856cbde" translate="yes" xml:space="preserve">
          <source>Before data can be uploaded, an organization must be created. When prompted, enter the organization name, and then a full organization name.</source>
          <target state="translated">데이터를 업로드하기 전에 조직을 만들어야합니다. 메시지가 표시되면 조직 이름을 입력 한 다음 전체 조직 이름을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="28dd3e9a86bf71d92109b67b67cc3c3cb4a1f511" translate="yes" xml:space="preserve">
          <source>Before following these steps, be sure to complete the OAuth setup process detailed in the &lt;a href=&quot;index#chef-identity&quot;&gt;Chef Identity&lt;/a&gt; section of this guide.</source>
          <target state="translated">이 단계를 따르기 전에이 가이드 의 &lt;a href=&quot;index#chef-identity&quot;&gt;Chef ID&lt;/a&gt; 섹션에 자세히 설명 된 OAuth 설정 프로세스를 완료해야합니다 .</target>
        </trans-unit>
        <trans-unit id="976bd038eaf7e14458ac8d8991b69e32e4116038" translate="yes" xml:space="preserve">
          <source>Before following these steps, be sure to complete the OAuth setup process detailed in the &lt;a href=&quot;install_supermarket/index#chef-identity&quot;&gt;Chef Identity&lt;/a&gt; section of this guide.</source>
          <target state="translated">이 단계를 따르기 전에이 가이드 의 &lt;a href=&quot;install_supermarket/index#chef-identity&quot;&gt;Chef ID&lt;/a&gt; 섹션에 자세히 설명 된 OAuth 설정 프로세스를 완료해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2fe68664e034492c38b730fb9c4a8884be6531da" translate="yes" xml:space="preserve">
          <source>Before installing Chef Infra:</source>
          <target state="translated">Chef Infra를 설치하기 전에 :</target>
        </trans-unit>
        <trans-unit id="4b4078433b5eb13331b948c644f4b0c4cf60badd" translate="yes" xml:space="preserve">
          <source>Before installing the Chef Infra Server software, perform the following steps:</source>
          <target state="translated">Chef Infra Server 소프트웨어를 설치하기 전에 다음 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="366fea70c07c2f67adf0c0671eaf4b3eaf473140" translate="yes" xml:space="preserve">
          <source>Before installing the Chef Infra Server, ensure that each machine has the following installed and configured properly:</source>
          <target state="translated">Chef Infra Server를 설치하기 전에 각 시스템에 다음이 올바르게 설치 및 구성되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fb4c3950b338d955bc3a80ebed3b9eeb44d13376" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server software, perform the following steps:</source>
          <target state="translated">Chef 서버 소프트웨어를 설치하기 전에 다음 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="dcde53847d94d5aa88fdcaca03435562f9b18a73" translate="yes" xml:space="preserve">
          <source>Before installing the Chef server, ensure that each machine has the following installed and configured properly:</source>
          <target state="translated">Chef 서버를 설치하기 전에 각 머신에 다음이 올바르게 설치 및 구성되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="716f5d091424f2f9287af76645f9a1e3cff5073d" translate="yes" xml:space="preserve">
          <source>Before restoring a Chef Automate installation, see how to &lt;a href=&quot;../backup/index&quot;&gt;configure your backups&lt;/a&gt;.</source>
          <target state="translated">Chef Automate 설치를 복원하기 전에 &lt;a href=&quot;../backup/index&quot;&gt;백업 구성&lt;/a&gt; 방법을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="33f2eb64ffb4e8b53a890fa3476ef71905a9ca43" translate="yes" xml:space="preserve">
          <source>Before the 0.56.0 release of Chef Habitat, the interaction between &lt;code&gt;hab&lt;/code&gt; and the Supervisor was not formally defined, and relied on making changes to files on disk. As a result, it was often possible to continue interacting with a newer Supervisor using an older version of the &lt;code&gt;hab&lt;/code&gt; CLI. This was particularly noticeable when the Supervisor was configured to automatically update itself; the Supervisor would continue upgrading over time, while the &lt;code&gt;hab&lt;/code&gt; CLI binary remained at whatever version it was when it was originally installed, because each of the two executable were distributed in separate packages.</source>
          <target state="translated">Chef Habitat 0.56.0 릴리스 이전에는 &lt;code&gt;hab&lt;/code&gt; 와 Supervisor 간의 상호 작용이 공식적으로 정의되지 않았으며 디스크의 파일을 변경하는 데 의존했습니다. 그 결과 이전 버전의 &lt;code&gt;hab&lt;/code&gt; CLI를 사용하여 최신 Supervisor와 계속 상호 작용할 수있었습니다 . 이것은 Supervisor가 자동으로 업데이트되도록 구성되었을 때 특히 두드러졌습니다. 감독자는 시간이 지남에 따라 계속 업그레이드하는 반면, &lt;code&gt;hab&lt;/code&gt; CLI 바이너리는 원래 설치되었을 때의 버전을 그대로 유지했습니다. 두 실행 파일이 각각 별도의 패키지로 배포 되었기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="8fa7a961870cb606d20a6e46b5976f0e74f9d8ec" translate="yes" xml:space="preserve">
          <source>Before this data is indexed on the Chef Infra Server, the nested fields are extracted into the top level, similar to:</source>
          <target state="translated">이 데이터가 Chef Infra Server에서 인덱싱되기 전에 중첩 된 필드는 다음과 같이 최상위 레벨로 추출됩니다.</target>
        </trans-unit>
        <trans-unit id="ceee650cd2d37cf247f9b9f709bb8a21065e9922" translate="yes" xml:space="preserve">
          <source>Before this data is indexed on the Chef server, the nested fields are extracted into the top level, similar to:</source>
          <target state="translated">Chef 서버에서이 데이터를 색인화하기 전에 중첩 된 필드가 다음과 같이 최상위 레벨로 추출됩니다.</target>
        </trans-unit>
        <trans-unit id="acf261e6bedfe18c4f784c91861e48206adfdd1e" translate="yes" xml:space="preserve">
          <source>Before upgrading, please view the notes for more background on the upgrade process from Enterprise Chef 11 to Chef server 12.</source>
          <target state="translated">업그레이드하기 전에 Enterprise Chef 11에서 Chef 서버 12 로의 업그레이드 프로세스에 대한 자세한 배경 정보를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0336893163301f22213cad2263272a55e2acf2e2" translate="yes" xml:space="preserve">
          <source>Before you begin, you must copy the &lt;code&gt;config.rb&lt;/code&gt; file and the client key .pem file (referenced as &lt;code&gt;client_key&lt;/code&gt; in &lt;code&gt;config.rb&lt;/code&gt;) to the build nodes/runners that you will use in the build-cookbook. This can be done manually by logging in to the build nodes/runners and copying the files or automated through the use of a secure copy tool like &lt;code&gt;scp&lt;/code&gt;.</source>
          <target state="translated">시작하기 전에 &lt;code&gt;config.rb&lt;/code&gt; 파일과 클라이언트 키 .pem 파일 ( &lt;code&gt;config.rb&lt;/code&gt; 에서 &lt;code&gt;client_key&lt;/code&gt; 로 참조 됨 )을 build-cookbook에서 사용할 빌드 노드 / 러너에 복사해야합니다 . 빌드 노드 / 러너에 로그인하고 파일을 복사하여 수동으로 수행하거나 &lt;code&gt;scp&lt;/code&gt; 와 같은 보안 복사 도구를 사용하여 자동화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f4c88883da618fb65df756a7f7ea1ee80a92eac" translate="yes" xml:space="preserve">
          <source>Before you can follow this procedure, you must have integrated Chef Automate and GitHub Enterprise or &lt;a href=&quot;https://github.com/&quot;&gt;GitHub.com&lt;/a&gt;. This is the same procedure whether you have Amazon Web Services (AWS) provisioning or SSH provisioning.</source>
          <target state="translated">이 절차를 따르려면 먼저 Chef Automate 및 GitHub Enterprise 또는 &lt;a href=&quot;https://github.com/&quot;&gt;GitHub.com을&lt;/a&gt; 통합해야합니다 . 이는 Amazon Web Services (AWS) 프로비저닝이 있든 SSH 프로비저닝이 있든 동일한 절차입니다.</target>
        </trans-unit>
        <trans-unit id="191ced9c30df0642b41adb5c0e0be04e385ac75e" translate="yes" xml:space="preserve">
          <source>Before you can push or pull images, you must configure Docker to use the gcloud command-line tool to authenticate requests to Container Registry. To do so, run the following command (you are only required to do this once):</source>
          <target state="translated">이미지를 푸시하거나 가져 오기 전에 gcloud 명령 줄 도구를 사용하여 Container Registry에 대한 요청을 인증하도록 Docker를 구성해야합니다. 이렇게하려면 다음 명령을 실행합니다 (한 번만 수행하면 됨).</target>
        </trans-unit>
        <trans-unit id="1618ebb917a65859d85ab013df751a2f13eef4c1" translate="yes" xml:space="preserve">
          <source>Before you start the migration process, fulfill the requirements detailed in this section.</source>
          <target state="translated">마이그레이션 프로세스를 시작하기 전에이 섹션에 설명 된 요구 사항을 충족하십시오.</target>
        </trans-unit>
        <trans-unit id="d643e79de9964cc24bb1e7e08077f8b9594daf3a" translate="yes" xml:space="preserve">
          <source>Before you use the Delivery CLI from a workstation, you need to provide it with details such as the URL of the Chef Automate server, and the names of the relevant enterprise, organization, and user. The &lt;code&gt;delivery setup&lt;/code&gt; subcommand creates a configuration file named &lt;code&gt;.delivery/cli.toml&lt;/code&gt; with the required information.</source>
          <target state="translated">워크 스테이션에서 Delivery CLI를 사용하기 전에 Chef Automate 서버의 URL, 관련 엔터프라이즈, 조직 및 사용자의 이름과 같은 세부 사항을 제공해야합니다. &lt;code&gt;delivery setup&lt;/code&gt; 하위 명령라는 이름의 구성 파일 생성 &lt;code&gt;.delivery/cli.toml&lt;/code&gt; 필요한 정보를.</target>
        </trans-unit>
        <trans-unit id="4cc2a25a8f44d5900ed5c62f7c81d0cbe4bd1219" translate="yes" xml:space="preserve">
          <source>Beginning with Chef InSpec 1.41, you can enable the ability to have the HTTP test execute on the remote target:</source>
          <target state="translated">Chef InSpec 1.41부터 원격 대상에서 HTTP 테스트를 실행하는 기능을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee450a51f7196d477f565d7d8caf07ef417b86a0" translate="yes" xml:space="preserve">
          <source>Beginning with the Acceptance stage, the pipeline switches from analyzing the project&amp;rsquo;s source code to verifying the set of artifacts that were produced in the Build stage. The goal of the Acceptance stage is for the team to make a decision about whether the change should go all the way out to production or not. There are four phases in Acceptance:</source>
          <target state="translated">수락 단계부터 파이프 라인은 프로젝트의 소스 코드 분석에서 빌드 단계에서 생성 된 아티팩트 세트 확인으로 전환됩니다. 수락 단계의 목표는 팀이 변경 사항이 프로덕션 단계까지 진행되어야하는지 여부를 결정하는 것입니다. 수락에는 네 단계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a4c8813c4550f17751776db0a7e6c6ff11849c2" translate="yes" xml:space="preserve">
          <source>Behavior of the elevation prompt for administrators in Admin Approval Mode. Sets HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA\ConsentPromptBehaviorAdmin.</source>
          <target state="translated">관리자 승인 모드에서 관리자를위한 권한 상승 프롬프트의 동작입니다. HKEY_LOCAL_MACHINE \ SOFTWARE \ Microsoft \ Windows \ CurrentVersion \ Policies \ System \ EnableLUA \ ConsentPromptBehaviorAdmin을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="41e0a75c78ceba73aaebe2b86cce122107528ef9" translate="yes" xml:space="preserve">
          <source>Behavior of the elevation prompt for standard users. Sets HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA\ConsentPromptBehaviorUser.</source>
          <target state="translated">표준 사용자를위한 권한 상승 프롬프트의 동작. HKEY_LOCAL_MACHINE \ SOFTWARE \ Microsoft \ Windows \ CurrentVersion \ Policies \ System \ EnableLUA \ ConsentPromptBehaviorUser를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="49435fd4ace7be6756f904e1e79eefa497b8274e" translate="yes" xml:space="preserve">
          <source>Behavior when multiple packages match</source>
          <target state="translated">여러 패키지가 일치 할 때의 동작</target>
        </trans-unit>
        <trans-unit id="a7602e4697612fbda2f719b3b1e65112fecc0d7e" translate="yes" xml:space="preserve">
          <source>Behavior when not found</source>
          <target state="translated">찾을 수 없을 때의 동작</target>
        </trans-unit>
        <trans-unit id="641f1a75e7768ff2f26380e579a06234d9e25c8e" translate="yes" xml:space="preserve">
          <source>Below are some of the core concepts that make up Chef InSpec.</source>
          <target state="translated">다음은 Chef InSpec을 구성하는 몇 가지 핵심 개념입니다.</target>
        </trans-unit>
        <trans-unit id="49c22e62f20332407336d72809b0fa33acb6c108" translate="yes" xml:space="preserve">
          <source>Below is a mapping table to help you understand what property the unix field maps to the windows &lt;code&gt;Get-Process&lt;/code&gt; Property</source>
          <target state="translated">다음은 unix 필드가 Windows &lt;code&gt;Get-Process&lt;/code&gt; 속성에 매핑하는 속성을 이해하는 데 도움이되는 매핑 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="7423ca4aabb659589557c649c95781fc7a4c9ae3" translate="yes" xml:space="preserve">
          <source>Below is a section of a Munki catalog. You CAN edit the details if needed, but using the tools above is strongly encouraged to reduce the probability of introducing an error.</source>
          <target state="translated">아래는 Munki 카탈로그 섹션입니다. 필요한 경우 세부 정보를 편집 할 수 있지만 오류 발생 가능성을 줄이려면 위의 도구를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5d33a0be9f6bbb8f8ff72b5777445b1ebc174cf3" translate="yes" xml:space="preserve">
          <source>Below is a section of a Munki catalog. You can manually edit the details if you need to, but we strongly encourage you to use the tools above to reduce the chances of introducing an error.</source>
          <target state="translated">아래는 Munki 카탈로그 섹션입니다. 필요한 경우 세부 정보를 수동으로 편집 할 수 있지만 오류가 발생할 가능성을 줄이려면 위의 도구를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b626aecb1d4d9a6d0b700ef6c213531cb239d026" translate="yes" xml:space="preserve">
          <source>Below is an example Amazon Web Services (AWS) instance profile policy with the required permissions to create an S3 bucket called &lt;code&gt;example-backups&lt;/code&gt;. A policy with these permissions is sufficient for the backup commands to function as expected.</source>
          <target state="translated">다음은 &lt;code&gt;example-backups&lt;/code&gt; 라는 S3 버킷을 생성하는 데 필요한 권한이있는 Amazon Web Services (AWS) 인스턴스 프로필 정책의 예 입니다. 이러한 권한이있는 정책은 백업 명령이 예상대로 작동하는 데 충분합니다.</target>
        </trans-unit>
        <trans-unit id="49300d4db151510f5d450a3f19ba4f5be4f5ff41" translate="yes" xml:space="preserve">
          <source>Below is an example curl command with the recommended data cleanup settings:</source>
          <target state="translated">다음은 권장 데이터 정리 설정이 포함 된 curl 명령의 예입니다.</target>
        </trans-unit>
        <trans-unit id="76e4b87178b1140559969558bb5840eb528265ec" translate="yes" xml:space="preserve">
          <source>Below is an example curl command:</source>
          <target state="translated">다음은 curl 명령의 예입니다.</target>
        </trans-unit>
        <trans-unit id="c58045d28c00c460cf0aea392953232930f35d31" translate="yes" xml:space="preserve">
          <source>Below is an example of a container that shows three code blocks in three languages. You can copy and paste the code below into a page to get started. Note that the &lt;code&gt;tabs-id&lt;/code&gt; and &lt;code&gt;panel-id&lt;/code&gt;/&lt;code&gt;panel-link&lt;/code&gt; values must be unique on the page.</source>
          <target state="translated">다음은 세 가지 언어로 된 세 개의 코드 블록을 보여주는 컨테이너의 예입니다. 아래 코드를 복사하여 페이지에 붙여 넣어 시작할 수 있습니다. 점을 유의 &lt;code&gt;tabs-id&lt;/code&gt; 및 &lt;code&gt;panel-id&lt;/code&gt; / &lt;code&gt;panel-link&lt;/code&gt; 값은 페이지에서 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="0ace2ce6e813205c2d9042e716e236b9b0226302" translate="yes" xml:space="preserve">
          <source>Below you&amp;rsquo;ll find installation instructions for each platform and their requirements. The Chef Habitat CLI is currently supported on Linux, Mac, and Windows.</source>
          <target state="translated">아래에서 각 플랫폼 및 요구 사항에 대한 설치 지침을 찾을 수 있습니다. Chef Habitat CLI는 현재 Linux, Mac 및 Windows에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b2fb59beef82d9ff6361369b85b83c7108f2d49a" translate="yes" xml:space="preserve">
          <source>Beneath it, add the following, replacing &lt;code&gt;gems.example.com&lt;/code&gt; with the URL of your gem mirror:</source>
          <target state="translated">그 아래에 다음을 추가하여 &lt;code&gt;gems.example.com&lt;/code&gt; 을 gem 미러의 URL로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="6e51197e8eacbc96e9ff4e7e699163d6c8eba5a2" translate="yes" xml:space="preserve">
          <source>Benny Vasquez</source>
          <target state="translated">베니 바스케즈</target>
        </trans-unit>
        <trans-unit id="12e6aa139bb4e06700f49df991e0fc9804c17587" translate="yes" xml:space="preserve">
          <source>Bento</source>
          <target state="translated">Bento</target>
        </trans-unit>
        <trans-unit id="6b2a7c54e36825894f264a14c49279b8a4a198ac" translate="yes" xml:space="preserve">
          <source>Berkshelf</source>
          <target state="translated">Berkshelf</target>
        </trans-unit>
        <trans-unit id="56c4b83a7ed68883a61e88cb4e2115d7fb69ca7a" translate="yes" xml:space="preserve">
          <source>Berkshelf CLI</source>
          <target state="translated">Berkshelf CLI</target>
        </trans-unit>
        <trans-unit id="b36ccf42bb25ec4a7478adf99dc7a444062bc98b" translate="yes" xml:space="preserve">
          <source>Berkshelf can include multiple Chef Supermarket instances for dependency resolution. Cookbook dependency resolution is performed from the top down. The first source defined in the Berksfile will be searched for the cookbook before the second source.</source>
          <target state="translated">Berkshelf는 종속성 해결을 위해 여러 Chef Supermarket 인스턴스를 포함 할 수 있습니다. 요리 책 종속성 해결은 위에서 아래로 수행됩니다. Berksfile에 정의 된 첫 번째 소스는 두 번째 소스보다 먼저 요리 책을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="6a876c0e899dd4e3c29afe99600c9c9adf131bfa" translate="yes" xml:space="preserve">
          <source>Berkshelf is a dependency manager for Chef cookbooks. With it, you can easily depend on community cookbooks and have them safely included in your workflow. You can also ensure that your CI systems reproducibly select the same cookbook versions, and can upload and bundle cookbook dependencies without needing a locally maintained copy. Berkshelf is included in Chef Workstation.</source>
          <target state="translated">Berkshelf는 Chef 쿡북의 종속성 관리자입니다. 이를 통해 커뮤니티 요리 책에 쉽게 의존하고 워크 플로에 안전하게 포함 할 수 있습니다. 또한 CI 시스템이 동일한 쿡북 버전을 재현 가능하게 선택하고 로컬로 유지 관리 할 필요없이 쿡북 종속성을 업로드하고 번들로 묶을 수 있는지 확인할 수 있습니다. Berkshelf는 Chef Workstation에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">모범 사례</target>
        </trans-unit>
        <trans-unit id="3dc57c4709a31164ae54a4e1e3045305a42f3f22" translate="yes" xml:space="preserve">
          <source>Beta Resource</source>
          <target state="translated">베타 리소스</target>
        </trans-unit>
        <trans-unit id="1e297b6e70493ca02c1d640234836cb0be944bd3" translate="yes" xml:space="preserve">
          <source>Binary Wrapper Packages</source>
          <target state="translated">바이너리 래퍼 패키지</target>
        </trans-unit>
        <trans-unit id="6ad58f28dea91bf2d4da144c3a827f0e97140156" translate="yes" xml:space="preserve">
          <source>Binary packages often come with other utility scripts that have their interpreter, or &amp;ldquo;shebang&amp;rdquo;, line (first line of a script) hardcoded to a path that will not exist under Chef Habitat. Examples are: &lt;code&gt;#!/bin/sh&lt;/code&gt;, &lt;code&gt;#!/bin/bash&lt;/code&gt;, &lt;code&gt;#!/bin/env&lt;/code&gt; or &lt;code&gt;#!/usr/bin/perl&lt;/code&gt;. It is necessary to modify these to point to the Chef Habitat-provided versions, and also declare a runtime dependency in your plan on the corresponding Chef Habitat package (for example, &lt;code&gt;core/perl&lt;/code&gt;).</source>
          <target state="translated">바이너리 패키지는 종종 Chef Habitat에 존재하지 않을 경로로 하드 코딩 된 인터프리터 또는&amp;ldquo;shebang&amp;rdquo;라인 (스크립트의 첫 번째 라인)이있는 다른 유틸리티 스크립트와 함께 제공됩니다. 예 : &lt;code&gt;#!/bin/sh&lt;/code&gt; , &lt;code&gt;#!/bin/bash&lt;/code&gt; , &lt;code&gt;#!/bin/env&lt;/code&gt; 또는 &lt;code&gt;#!/usr/bin/perl&lt;/code&gt; . Chef Habitat에서 제공하는 버전을 가리 키도록 수정해야하며 해당 Chef Habitat 패키지 (예 : &lt;code&gt;core/perl&lt;/code&gt; ) 의 계획에서 런타임 종속성을 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="83a9e49fc4cb9ac64b7028f07d9d3339609981c4" translate="yes" xml:space="preserve">
          <source>Bind</source>
          <target state="translated">Bind</target>
        </trans-unit>
        <trans-unit id="47e04cc658b4e6b588ca22184fe128c12ba8d1fe" translate="yes" xml:space="preserve">
          <source>Bind Redis to the specified IP address. Default value: &lt;code&gt;'127.0.0.1'&lt;/code&gt;.</source>
          <target state="translated">Redis를 지정된 IP 주소에 바인딩합니다. 기본 값 : &lt;code&gt;'127.0.0.1'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3660fd88efe564321855f8c0dd10adac04ca6bfd" translate="yes" xml:space="preserve">
          <source>Binding Attributes</source>
          <target state="translated">바인딩 속성</target>
        </trans-unit>
        <trans-unit id="5ab3d2342d1042d2292f3463da30850ee8b90155" translate="yes" xml:space="preserve">
          <source>Binds defined in &lt;code&gt;pkg_binds_optional&lt;/code&gt;, on the other hand, &lt;em&gt;may&lt;/em&gt; be mapped when loading a service. If a service group mapping is not defined at load time, the Supervisor will load the service without question. As an extreme example, a service could have no &lt;code&gt;pkg_binds&lt;/code&gt; entries, and five &lt;code&gt;pkg_binds_optional&lt;/code&gt; entries; such a service could be loaded with no binds mapped, one bind mapped, all the way to mapping all five binds.</source>
          <target state="translated">반면 에 &lt;code&gt;pkg_binds_optional&lt;/code&gt; 에 정의 된 바인드 는 서비스를로드 할 때 매핑 될 &lt;em&gt;수&lt;/em&gt; 있습니다. 로드 시간에 서비스 그룹 매핑이 정의되지 않은 경우 Supervisor는 질문없이 서비스를로드합니다. 극단적 인 예로, 서비스에는 &lt;code&gt;pkg_binds&lt;/code&gt; 항목 이없고 5 개의 &lt;code&gt;pkg_binds_optional&lt;/code&gt; 항목 이있을 수 있습니다 . 이러한 서비스는 매핑 된 바인드없이, 하나의 바인드가 매핑 된 상태로로드되어 5 개의 모든 바인드를 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9daa59ce846ab844e0e568cec7e9aed4b6115847" translate="yes" xml:space="preserve">
          <source>Bitbucket integration is designed for use with Bitbucket 3.x or 4.x and supports connecting a Workflow enterprise with a single Bitbucket server URL. Workflow does not support Bitbucket project repositories that are hosted at &lt;a href=&quot;https://bitbucket.org&quot;&gt;https://bitbucket.org&lt;/a&gt; at this time. Workflow communicates with Bitbucket using the Bitbucket REST API and HTTP-based git protocol. Workflow authenticates with Bitbucket with a user account over HTTP basic authentication. It is recommended that the connection be protected using SSL.</source>
          <target state="translated">Bitbucket 통합은 Bitbucket 3.x 또는 4.x와 함께 사용하도록 설계되었으며 단일 Bitbucket 서버 URL과 Workflow 엔터프라이즈 연결을 지원합니다. 워크 플로는 현재 &lt;a href=&quot;https://bitbucket.org&quot;&gt;https://bitbucket.org&lt;/a&gt; 에서 호스팅되는 Bitbucket 프로젝트 저장소를 지원하지 않습니다 . 워크 플로는 Bitbucket REST API 및 HTTP 기반 git 프로토콜을 사용하여 Bitbucket과 통신합니다. 워크 플로는 HTTP 기본 인증을 통해 사용자 계정으로 Bitbucket으로 인증합니다. SSL을 사용하여 연결을 보호하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2a3efc7a3320f33e72e2b5a460b1bc85f3d2b4e2" translate="yes" xml:space="preserve">
          <source>Bitbucket integration with Workflow allows Bitbucket to be used as the canonical git repository for projects while at the same time benefiting from Workflow workflow and pipeline automation. When Bitbucket integration is enabled for a project in Bitbucket, you will be able to:</source>
          <target state="translated">Workflow와 Bitbucket의 통합을 통해 Bitbucket을 프로젝트의 표준 git 저장소로 사용하는 동시에 Workflow 워크 플로 및 파이프 라인 자동화의 이점을 누릴 수 있습니다. Bitbucket의 프로젝트에 대해 Bitbucket 통합이 활성화되면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22c5ae7c9428ccb037b9af57e8e6863d6d72e100" translate="yes" xml:space="preserve">
          <source>Bitbucket integration with Workflow has the following requirements:</source>
          <target state="translated">Workflow와 Bitbucket 통합에는 다음 요구 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="90183b7433926b51074b48a7ada431b3f2fc0c81" translate="yes" xml:space="preserve">
          <source>Blacklist a kernel module.</source>
          <target state="translated">커널 모듈을 블랙리스트에 올립니다.</target>
        </trans-unit>
        <trans-unit id="44d0080a6ce481f7885f4e5563a4a0f58607fa3d" translate="yes" xml:space="preserve">
          <source>Blacklist a module from loading.</source>
          <target state="translated">로드에서 모듈을 블랙리스트에 올립니다.</target>
        </trans-unit>
        <trans-unit id="09e05f1acf76ca75b111826bc3d6dc06a9cf93ad" translate="yes" xml:space="preserve">
          <source>Blob Container name, e.g. &lt;code&gt;my-blob-container&lt;/code&gt;.</source>
          <target state="translated">Blob 컨테이너 이름 (예 : &lt;code&gt;my-blob-container&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="40cbafebf909ffac8e3da68ec0917a85cb11960d" translate="yes" xml:space="preserve">
          <source>Block Arguments</source>
          <target state="translated">블록 인수</target>
        </trans-unit>
        <trans-unit id="d4790ea34607c20a125ff04fb48ba642201830a0" translate="yes" xml:space="preserve">
          <source>Block expressions use a helper function to perform the logic. The syntax is the same for all block expressions and looks like this:</source>
          <target state="translated">블록 식은 도우미 함수를 사용하여 논리를 수행합니다. 구문은 모든 블록 표현식에서 동일하며 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a01bbec444c2f8bd86a5624ffb4e13672279c3f3" translate="yes" xml:space="preserve">
          <source>Block specified in CIDR notation</source>
          <target state="translated">CIDR 표기법으로 지정된 블록</target>
        </trans-unit>
        <trans-unit id="8baef1b5bc39d642fc9856846bd0817492274400" translate="yes" xml:space="preserve">
          <source>Blocked Projects</source>
          <target state="translated">차단 된 프로젝트</target>
        </trans-unit>
        <trans-unit id="441a353bf672ed6748ab1b5ff4d1506a72efcc7c" translate="yes" xml:space="preserve">
          <source>Blocklist Attributes</source>
          <target state="translated">차단 목록 속성</target>
        </trans-unit>
        <trans-unit id="73b3a5bc3727153def2a9c1e7eab41c3f71e0030" translate="yes" xml:space="preserve">
          <source>Blocklisting Ohai (automatic) Attributes</source>
          <target state="translated">오 하이 (자동) 속성 차단 목록</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="750f627abe221b6f5bdcbf7f8f8a8f51e39e2241" translate="yes" xml:space="preserve">
          <source>Bob is a member of team alpha and team omega. Team alpha contains a broad range of permissions, while team omega experiences severe restrictions in what its members may access. The &amp;ldquo;major teams&amp;rdquo; policy has a statement that allows team alpha to access the resource &lt;code&gt;compliance:reporting:nodes&lt;/code&gt;, while it has another statement that denies Team Omega access to the same resource. &lt;em&gt;Net effect&lt;/em&gt;: The policy denies Bob access because at least one statement denies access.</source>
          <target state="translated">Bob은 팀 알파 및 팀 오메가의 멤버입니다. 팀 알파에는 광범위한 권한이 포함되어 있지만 팀 오메가는 구성원이 액세스 할 수있는 항목에 심각한 제한이 있습니다. &quot;메이저 팀&quot;정책에는 팀 알파가 리소스 &lt;code&gt;compliance:reporting:nodes&lt;/code&gt; 에 액세스 할 수 있도록 허용하는 설명이있는 반면, 동일한 리소스에 대한 Team Omega 액세스를 거부하는 또 다른 설명이 있습니다. &lt;em&gt;순 효과&lt;/em&gt; : 정책은 적어도 하나의 문이 액세스를 거부하므로 Bob 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="19e07430eed6d97d6d73cb4a2967b1f316520f54" translate="yes" xml:space="preserve">
          <source>Bold</source>
          <target state="translated">Bold</target>
        </trans-unit>
        <trans-unit id="701b95d15786128eff05d70cdb0efb05cbd7a74b" translate="yes" xml:space="preserve">
          <source>Bonding options to pass via &lt;code&gt;BONDING_OPTS&lt;/code&gt; on RHEL and CentOS. For example: &lt;code&gt;mode=active-backup miimon=100&lt;/code&gt;.</source>
          <target state="translated">RHEL 및 CentOS에서 &lt;code&gt;BONDING_OPTS&lt;/code&gt; 를 통해 전달할 결합 옵션 입니다. 예 : &lt;code&gt;mode=active-backup miimon=100&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d88689cdf329b1eacc73297a0d6a810dd4c7635" translate="yes" xml:space="preserve">
          <source>Bookshelf</source>
          <target state="translated">Bookshelf</target>
        </trans-unit>
        <trans-unit id="d43d49be167481b0718243e7f86b1e750d56285a" translate="yes" xml:space="preserve">
          <source>Bookshelf Settings</source>
          <target state="translated">책장 설정</target>
        </trans-unit>
        <trans-unit id="24266c1df82a205f7d78565dae57626587b71319" translate="yes" xml:space="preserve">
          <source>Bookshelf is used to store cookbook content&amp;mdash;files, templates, and so on&amp;mdash;that have been uploaded to the Chef Infra Server as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, Bookshelf will store that file only once. The cookbook content managed by Bookshelf is stored in flat files and is separated from the Chef Infra Server and search index repositories.</source>
          <target state="translated">Bookshelf는 요리 책 버전의 일부로 Chef Infra Server에 업로드 된 요리 책 콘텐츠 (파일, 템플릿 등)를 저장하는 데 사용됩니다. 요리 책 콘텐츠는 콘텐츠 체크섬에 의해 저장됩니다. 두 개의 다른 쿡북 또는 동일한 쿡북의 다른 버전에 동일한 파일 또는 템플릿이 포함 된 경우 Bookshelf는 해당 파일을 한 번만 저장합니다. Bookshelf에서 관리하는 요리 책 콘텐츠는 플랫 파일에 저장되며 Chef Infra Server 및 검색 인덱스 저장소와 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="70d1c8e72de85027bd5f9ea73cc646df45e10526" translate="yes" xml:space="preserve">
          <source>Bookshelf is used to store cookbook content&amp;mdash;files, templates, and so on&amp;mdash;that have been uploaded to the Chef server as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, Bookshelf will store that file only once. The cookbook content managed by Bookshelf is stored in flat files and is separated from the Chef server and search index repositories.</source>
          <target state="translated">책장은 요리 책 버전의 일부로 Chef 서버에 업로드 된 요리 책 내용 (파일, 템플릿 등)을 저장하는 데 사용됩니다. 요리 책 내용은 내용 체크섬으로 저장됩니다. 두 개의 다른 요리 책 또는 동일한 요리 책의 다른 버전에 동일한 파일 또는 템플릿이 포함 된 경우 Bookshelf는 해당 파일을 한 번만 저장합니다. Bookshelf가 관리하는 요리 책 내용은 플랫 파일로 저장되며 Chef 서버 및 검색 색인 저장소와 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="4a45dedaf2d6840f480cacda8906f1b768277c05" translate="yes" xml:space="preserve">
          <source>Boolean for if this policy is enforced.</source>
          <target state="translated">이 정책이 시행되는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="14511462330a1a6979ed5abec7f00a4158584d37" translate="yes" xml:space="preserve">
          <source>Boolean indicating if the Access Key was created with a User.</source>
          <target state="translated">액세스 키가 사용자와 함께 생성되었는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="7e15327fef3ecac7ab2b4140bfc59a817753cd72" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the User has policies set directly on them.</source>
          <target state="translated">사용자가 정책을 직접 설정했는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="826c4f7d173374297441a6ec70ae2cf5e56df69d" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is ACTIVE.</source>
          <target state="translated">클러스터 상태가 ACTIVE인지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="80f7fb69484189bf9ea6fa7fec9647ae8fd58a23" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is CREATING.</source>
          <target state="translated">클러스터 상태가 CREATING인지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="aaf125635a98061b436c866c2c3b117ebff03112" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is DELETING.</source>
          <target state="translated">클러스터 상태가 DELETING인지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="90ada74c0f1a9ef5283009bc3fe5f219b77cb732" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether or not the state of the cluster is FAILED.</source>
          <target state="translated">클러스터 상태가 FAILED인지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="bf21f9a89fdbfff682be9283716406e76065bb5c" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether the User has MFA enabled or not.</source>
          <target state="translated">사용자가 MFA를 활성화했는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="6651dabe1f469a29d259e5043be6ec24e662f134" translate="yes" xml:space="preserve">
          <source>Boolean option to determine if the API certification should be verified. Default is &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">API 인증을 확인해야하는지 여부를 결정하는 부울 옵션입니다. 기본값은 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbd1ba24c427688297e51999b3fde7a2c1c2ca78" translate="yes" xml:space="preserve">
          <source>Boolean stating if the disk is a managed disk or not. If it is not a managed disk then it is one that is stored in a Storage Account.</source>
          <target state="translated">디스크가 관리 디스크인지 여부를 나타내는 부울입니다. 관리 디스크가 아닌 경우 스토리지 계정에 저장된 디스크입니다.</target>
        </trans-unit>
        <trans-unit id="2a4a79c080a81e78b3c28a08318cd95138f1a6c8" translate="yes" xml:space="preserve">
          <source>Boolean test to see if boot diagnostics have been enabled on the machine</source>
          <target state="translated">시스템에서 부팅 진단이 활성화되었는지 확인하기위한 부울 테스트</target>
        </trans-unit>
        <trans-unit id="237c18f546f2ec9fe0a59ac2f9b5097b8b89f060" translate="yes" xml:space="preserve">
          <source>Boolean to enable or disable rollback on stack creation failures:</source>
          <target state="translated">스택 생성 실패시 롤백을 활성화 또는 비활성화하는 부울 :</target>
        </trans-unit>
        <trans-unit id="78ef361d0c74947c9eb40035ba2057c05d4085aa" translate="yes" xml:space="preserve">
          <source>Boolean to state if the machine has SSH keys assigned to it</source>
          <target state="translated">머신에 SSH 키가 할당되어 있는지 여부를 나타내는 부울</target>
        </trans-unit>
        <trans-unit id="252e004b6d943f37b9dfe6601185012986b260ab" translate="yes" xml:space="preserve">
          <source>Boolean to state if the machine has custom data or not</source>
          <target state="translated">머신에 커스텀 데이터가 있는지 여부를 나타내는 부울</target>
        </trans-unit>
        <trans-unit id="aa9778f508de1ff2549f932bd00c58b9994cdc51" translate="yes" xml:space="preserve">
          <source>Boolean to state of password authentication is enabled or not for the admin user.</source>
          <target state="translated">암호 인증 상태에 대한 부울이 admin 사용자에 대해 활성화되었는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="2ebd2fe70115f884cb9bf397e10c35bb5e373fda" translate="yes" xml:space="preserve">
          <source>Boolean to state of the machine is accessible using SSH keys</source>
          <target state="translated">SSH 키를 사용하여 시스템 상태에 대한 부울에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ff58ff2627736e2a6f20db54b6b012bb28b2c7a" translate="yes" xml:space="preserve">
          <source>Boolean value showing if Azure DDoS standard protection is enabled on the virtual network.</source>
          <target state="translated">가상 네트워크에서 Azure DDoS 표준 보호가 사용되는지 여부를 나타내는 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="04b9981976d9e892541d85194279a9176e98482c" translate="yes" xml:space="preserve">
          <source>Boolean value showing if the virtual network has VM protection enabled.</source>
          <target state="translated">가상 네트워크에 VM 보호가 활성화되었는지 여부를 나타내는 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="e434184e4d929aa570d2d4cd6b658111d9eb1b70" translate="yes" xml:space="preserve">
          <source>Bootstrap Chef Habitat Builder with Core Packages (Optional)</source>
          <target state="translated">핵심 패키지가 포함 된 Bootstrap Chef Habitat Builder (선택 사항)</target>
        </trans-unit>
        <trans-unit id="30eb1e85c74c3432cd590abcd393a5b159028885" translate="yes" xml:space="preserve">
          <source>Bootstrap Nodes</source>
          <target state="translated">부트 스트랩 노드</target>
        </trans-unit>
        <trans-unit id="9839b1ebfb397e3fee90226677a441224551a23a" translate="yes" xml:space="preserve">
          <source>Bootstrap Operations</source>
          <target state="translated">부트 스트랩 작업</target>
        </trans-unit>
        <trans-unit id="62b6c6d937591fcfd24eb5634b59167d614888ad" translate="yes" xml:space="preserve">
          <source>Bootstrap Supermarket</source>
          <target state="translated">Bootstrap 수퍼 마켓</target>
        </trans-unit>
        <trans-unit id="bfc982321c3ba1a302574d537d3434b11ab6e800" translate="yes" xml:space="preserve">
          <source>Bootstrap a Custom Template</source>
          <target state="translated">사용자 지정 템플릿 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="a7d748ae838f614a39e813a5861c654dbb040d67" translate="yes" xml:space="preserve">
          <source>Bootstrap a Node</source>
          <target state="translated">노드 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="d165fcc0d46fb21a7ac5eea92e2e2d6a99892d76" translate="yes" xml:space="preserve">
          <source>Bootstrap the First Test Node</source>
          <target state="translated">첫 번째 테스트 노드 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="dc9b2a89fa3f85d7790bd056921d73b57cda8a9c" translate="yes" xml:space="preserve">
          <source>Bootstrap the node on which Chef Supermarket is to be installed. For example, to bootstrap a node running Ubuntu on Amazon Web Services (AWS), the command is similar to:</source>
          <target state="translated">Chef Supermarket이 설치 될 노드를 부트 스트랩하십시오. 예를 들어 Amazon Web Services (AWS)에서 Ubuntu를 실행하는 노드를 부트 스트랩하려면 명령은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="3027180ebacc65b8df588b769ddb899c7d729ff8" translate="yes" xml:space="preserve">
          <source>Bootstrapped to the older Chef Infra Server</source>
          <target state="translated">이전 Chef Infra 서버로 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="e4229c1ced9a825b2e7b3fe208f68700c815f98a" translate="yes" xml:space="preserve">
          <source>Bootstrapping nodes in this way upgrades the installed Chef Infra Client to version 16. Congratulations!</source>
          <target state="translated">이러한 방식으로 노드를 부트 스트랩하면 설치된 Chef Infra Client가 버전 16으로 업그레이드됩니다. 축하합니다!</target>
        </trans-unit>
        <trans-unit id="6de9d7102ed758b9bde8fab40d633be1c12faf7e" translate="yes" xml:space="preserve">
          <source>Bootstrapping the first Node</source>
          <target state="translated">첫 번째 노드 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="62a4d2496f61a854436f90d7ccf6857e7c8cfcda" translate="yes" xml:space="preserve">
          <source>Bootstrapping with User Data</source>
          <target state="translated">사용자 데이터로 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="ec95820cb8dbca3d52c9d541f821e2a7c1238b0a" translate="yes" xml:space="preserve">
          <source>Bootstrapping with chef-vault</source>
          <target state="translated">Chef-Vault를 사용한 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="857758c7b3f00221dfbcbb0c2997ccc285c57c68" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group found on the new server</source>
          <target state="translated">두 &lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 사용자 및 그룹은 새 서버에서 발견</target>
        </trans-unit>
        <trans-unit id="b03abe434834e4030c337bf94d82adb24e50eb6b" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;opscode&lt;/code&gt; and &lt;code&gt;opscode-pgsql&lt;/code&gt; user and group not found on the new server</source>
          <target state="translated">두 &lt;code&gt;opscode&lt;/code&gt; 및 &lt;code&gt;opscode-pgsql&lt;/code&gt; 사용자 및 그룹은 새 서버를 찾을 수 없습니다</target>
        </trans-unit>
        <trans-unit id="2b09c065a3af7dcaec254afc2a6393188a41205f" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;raise&lt;/code&gt; and &lt;code&gt;fail&lt;/code&gt; behave the same way when triggering unhandled exceptions and may be used interchangeably.</source>
          <target state="translated">모두 &lt;code&gt;raise&lt;/code&gt; 및 &lt;code&gt;fail&lt;/code&gt; 처리되지 않은 예외를 트리거링 및 상호 교환 사용할 수 있습니다 때 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="11243ad075dcf95f636fb2c4dc11e4358c3986be" translate="yes" xml:space="preserve">
          <source>Both Chef Infra Client and knife use the Chef Infra Server API when communicating with the Chef Infra Server. The chef-validator uses the Chef Infra Server API, but only during the first Chef Infra Client run on a node.</source>
          <target state="translated">Chef Infra Client와 knife 모두 Chef Infra Server와 통신 할 때 Chef Infra Server API를 사용합니다. chef-validator는 Chef Infra Server API를 사용하지만 첫 번째 Chef Infra 클라이언트가 노드에서 실행되는 동안에 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5e88ce305063bc9cacc133c34ff14dc8d9b93824" translate="yes" xml:space="preserve">
          <source>Both hosts are up as secondary, and the Chef server is unhappy</source>
          <target state="translated">두 호스트 모두 보조 서버로 작동하며 Chef 서버는 불행합니다</target>
        </trans-unit>
        <trans-unit id="16569245f612b05a8016cf8e858b5eba728c5c02" translate="yes" xml:space="preserve">
          <source>Both lines in the example will cause separate deprecation warnings.</source>
          <target state="translated">예제의 두 줄은 별도의 지원 중단 경고를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f81755b8656c9ed78aa50cc38f132d72d8250bad" translate="yes" xml:space="preserve">
          <source>Both of these files are similar because they share the same structure. When an attribute value is a hash, that data is merged. When an attribute value is an array, if the attribute precedence levels are the same, then that data is merged. If the attribute value precedence levels in an array are different, then that data is replaced. For all other value types (such as strings, integers, etc.), that data is replaced.</source>
          <target state="translated">이 두 파일은 동일한 구조를 공유하기 때문에 유사합니다. 속성 값이 해시이면 해당 데이터가 병합됩니다. 속성 값이 배열 인 경우 속성 우선 순위 수준이 같으면 해당 데이터가 병합됩니다. 배열의 속성 값 우선 순위 레벨이 다른 경우 해당 데이터가 대체됩니다. 다른 모든 값 유형 (예 : 문자열, 정수 등)의 경우 해당 데이터가 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="8e9d90dc82793410350d5e4af3482a6177f71713" translate="yes" xml:space="preserve">
          <source>Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as a hash or an array, that data is merged when the attribute precedence levels are the same and is replaced when the attribute precedence levels are different.</source>
          <target state="translated">이 두 파일은 비슷합니다. 그들은 같은 구조를 공유합니다. 속성이 해시 또는 배열과 같은 동일한 유형의 데이터 인 경우 속성 우선 순위 수준이 동일하면 해당 데이터가 병합되고 속성 우선 순위 수준이 다른 경우 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="6068af78fcbf298f0c59a2d87ea52b879db5c847" translate="yes" xml:space="preserve">
          <source>Both of these options must be available at the top-level within the callback, along with any assigned values that will be used later in the callback.</source>
          <target state="translated">이 두 옵션 모두 콜백에서 최상위 레벨에서 사용 가능해야하며 콜백에서 나중에 사용될 할당 된 값과 함께 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7d7e9758da2a170c7a0421db4ce9eb38a4b435d6" translate="yes" xml:space="preserve">
          <source>Both service instances restart with the new configuration. Supervisor A&amp;rsquo;s output is:</source>
          <target state="translated">두 서비스 인스턴스 모두 새 구성으로 다시 시작됩니다. 감독자 A의 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8e2035cd9475ef398d5225b2fb1870182599af18" translate="yes" xml:space="preserve">
          <source>Both the chef-client and knife use the Chef server API when communicating with the Chef server. The chef-validator uses the Chef server API, but only during the first chef-client run on a node.</source>
          <target state="translated">chef-client와 knife는 Chef 서버와 통신 할 때 Chef 서버 API를 사용합니다. chef-validator는 Chef 서버 API를 사용하지만 첫 번째 chef-client가 노드에서 실행될 때만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="647daf0403dd1360a230c74c616724d0f94d0d7b" translate="yes" xml:space="preserve">
          <source>Both types of handlers can be used to gather data about a Chef Infra Client run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization.</source>
          <target state="translated">두 유형의 핸들러 모두 Chef Infra Client 실행에 대한 데이터를 수집하는 데 사용할 수 있으며 모든 유형의 사용에 대한 풍부한 수준의 데이터를 제공 할 수 있으며 나중에 전체 조직의 추세 및 분석에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b87666b54b22b2b5afcdac2d68a8a6c7870a81f" translate="yes" xml:space="preserve">
          <source>Both types of handlers can be used to gather data about a chef-client run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization.</source>
          <target state="translated">두 유형의 핸들러 모두 Chef-Client 실행에 대한 데이터를 수집하는 데 사용될 수 있으며 모든 유형의 사용에 대한 풍부한 수준의 데이터를 제공 할 수 있으며, 이는 나중에 전체 조직의 추세 및 분석에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d239a700ff2ba267329636bf4c693aec7e686c57" translate="yes" xml:space="preserve">
          <source>Both types of policies allow for membership modification.</source>
          <target state="translated">두 유형의 정책 모두 멤버십 수정을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="cf7c39f3cd6a2d3a1a613e2fb0c7d67a7ea79430" translate="yes" xml:space="preserve">
          <source>Branch Tracking</source>
          <target state="translated">지점 추적</target>
        </trans-unit>
        <trans-unit id="0e8be1ec417780a7956a38c993de93147d7c4cef" translate="yes" xml:space="preserve">
          <source>Breaking a source file into multiple source files, or consolidating multiple source files into one source file, with no change in code behavior;</source>
          <target state="translated">코드 동작을 변경하지 않고 소스 파일을 여러 소스 파일로 분리하거나 여러 소스 파일을 하나의 소스 파일로 통합합니다.</target>
        </trans-unit>
        <trans-unit id="4ed76fb2bc4e489d439d38f36b9b3ad0c35ef316" translate="yes" xml:space="preserve">
          <source>Briefly:</source>
          <target state="translated">Briefly:</target>
        </trans-unit>
        <trans-unit id="df8e1d340420bdfdd1748be1db456f9bfaa0c4e0" translate="yes" xml:space="preserve">
          <source>Bring Your Own License (BYOL) AMI</source>
          <target state="translated">BYOL (Bring Your Own License) AMI</target>
        </trans-unit>
        <trans-unit id="c18cc47359291f3abb476de2bd03934c481c47ec" translate="yes" xml:space="preserve">
          <source>Bring up the network interface on boot.</source>
          <target state="translated">부팅시 네트워크 인터페이스를 불러옵니다.</target>
        </trans-unit>
        <trans-unit id="778a6c613c015f4adafa9c80b73833cafd60643c" translate="yes" xml:space="preserve">
          <source>Bring up the network interface when its parent interface is brought up.</source>
          <target state="translated">부모 인터페이스가 나타나면 네트워크 인터페이스를 불러옵니다.</target>
        </trans-unit>
        <trans-unit id="5942be8e7eab47c9a72668f9e83d02b0709510d1" translate="yes" xml:space="preserve">
          <source>Browse code (including in-flight changes in the Workflow pipeline) using Bitbucket</source>
          <target state="translated">Bitbucket을 사용하여 코드 찾아보기 (워크 플로 파이프 라인의 진행중인 변경 포함)</target>
        </trans-unit>
        <trans-unit id="e04a084a21e5b72eb24535a98ae5dc760382c7e4" translate="yes" xml:space="preserve">
          <source>Browse code (including in-flight changes in the Workflow pipeline) using GitHub.</source>
          <target state="translated">GitHub를 사용하여 코드 (워크 플로 파이프 라인의 진행중인 변경 포함)를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f6322c100a250778f22c150d900225604e81382c" translate="yes" xml:space="preserve">
          <source>Browse the changes and make comments.</source>
          <target state="translated">변경 사항을 찾아보고 의견을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7343059558ded0b0239600725d2ea2afb9113671" translate="yes" xml:space="preserve">
          <source>Browse to the top level of the chef-repo and enter:</source>
          <target state="translated">chef-repo의 최상위 레벨을 찾아서 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="6aeac1bc3a5063f0c472eb50f35a4abdbdd0bc0c" translate="yes" xml:space="preserve">
          <source>Browser Tab</source>
          <target state="translated">브라우저 탭</target>
        </trans-unit>
        <trans-unit id="43083b63f945bc27dd77373aeb43a0b8aa02f2ee" translate="yes" xml:space="preserve">
          <source>Buffer Size</source>
          <target state="translated">버퍼 크기</target>
        </trans-unit>
        <trans-unit id="06ae4fe0aeb024acad7edd04979f8259e96fc632" translate="yes" xml:space="preserve">
          <source>Bug fixes that change default return values or error codes stored in constants</source>
          <target state="translated">상수에 저장된 기본 반환 값 또는 오류 코드를 변경하는 버그 수정</target>
        </trans-unit>
        <trans-unit id="2386e2b1f69beaa0c7aecc0bab39d2bb6e3ff369" translate="yes" xml:space="preserve">
          <source>Bug fixes that change default return values or error codes stored in constants, literals, or simple variable types;</source>
          <target state="translated">상수, 리터럴 또는 단순 변수 유형에 저장된 기본 반환 값 또는 오류 코드를 변경하는 버그 수정</target>
        </trans-unit>
        <trans-unit id="b6d03a45cce6c181208cc49f145d6e3f331dce42" translate="yes" xml:space="preserve">
          <source>Build Cookbook</source>
          <target state="translated">요리 책 만들기</target>
        </trans-unit>
        <trans-unit id="a047e6f86bd41a9d1e5791443e9b78a972176875" translate="yes" xml:space="preserve">
          <source>Build Cookbook Structure</source>
          <target state="translated">요리 책 구조 구축</target>
        </trans-unit>
        <trans-unit id="64b1f256250f91394df9c8daaddfc803b08066ee" translate="yes" xml:space="preserve">
          <source>Build Helpers</source>
          <target state="translated">도우미 빌드</target>
        </trans-unit>
        <trans-unit id="9d47fb898fc01d743d33b737101f00d157182578" translate="yes" xml:space="preserve">
          <source>Build Nodes and Phases</source>
          <target state="translated">노드 및 단계 구축</target>
        </trans-unit>
        <trans-unit id="4b63aed85fe9b68a218ad74ce2028c7fdc819182" translate="yes" xml:space="preserve">
          <source>Build Phase Callbacks</source>
          <target state="translated">단계 콜백 구축</target>
        </trans-unit>
        <trans-unit id="c6fcfef56a89d0004a9b1e9f049feff9fbed488f" translate="yes" xml:space="preserve">
          <source>Build Stage</source>
          <target state="translated">빌드 단계</target>
        </trans-unit>
        <trans-unit id="edea1615aed311a4ca9896093f4e51ba187f1100" translate="yes" xml:space="preserve">
          <source>Build a InstallApplications package to bootstrap macOS</source>
          <target state="translated">macOS 부트 스트랩을위한 InstallApplications 패키지 빌드</target>
        </trans-unit>
        <trans-unit id="786c5eda88f0c24440a32dbf7ea51200957cde4a" translate="yes" xml:space="preserve">
          <source>Build a Standalone Chef Infra Server</source>
          <target state="translated">독립형 Chef Infra 서버 구축</target>
        </trans-unit>
        <trans-unit id="aedec35172edfd2476051f7631fcbe7121c77cdd" translate="yes" xml:space="preserve">
          <source>Build an Effortless Audit profile and load it on your systems.</source>
          <target state="translated">간편한 감사 프로필을 작성하고 시스템에로드합니다.</target>
        </trans-unit>
        <trans-unit id="7fcccdc6a24e25bb77d75fe5de28e666654231d6" translate="yes" xml:space="preserve">
          <source>Build and Run Your Package</source>
          <target state="translated">패키지 빌드 및 실행</target>
        </trans-unit>
        <trans-unit id="b7b60f770a96f9335e492eaea824f79e3aa35a71" translate="yes" xml:space="preserve">
          <source>Build and deploy Gorilla to deploy apps to Windows devices</source>
          <target state="translated">Gorilla를 빌드 및 배포하여 Windows 장치에 앱 배포</target>
        </trans-unit>
        <trans-unit id="615c311bf629a78c4ede653f9886e94871124403" translate="yes" xml:space="preserve">
          <source>Build and deploy Munki to deploy apps to the laptops</source>
          <target state="translated">Munki를 빌드하고 배포하여 랩톱에 앱을 배포합니다.</target>
        </trans-unit>
        <trans-unit id="b4e90363c8fce3b112e5b4bea33f6f2e8f376824" translate="yes" xml:space="preserve">
          <source>Build and deploy Munki to deploy apps to the macOS devices</source>
          <target state="translated">Munki를 빌드 및 배포하여 macOS 장치에 앱 배포</target>
        </trans-unit>
        <trans-unit id="5180b6571067eda4cc41345d87804ff8c3ab85e7" translate="yes" xml:space="preserve">
          <source>Build and test the changes locally.</source>
          <target state="translated">로컬에서 변경 사항을 빌드하고 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="6becbc85d949fef6ed475e593c70120afe2cb5a9" translate="yes" xml:space="preserve">
          <source>Build or execute a command line against a local file. Set to &lt;code&gt;false&lt;/code&gt; to build or execute against a remote file. Default: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">로컬 파일에 대해 명령 행을 빌드하거나 실행하십시오. 원격 파일을 빌드하거나 실행 하려면 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f344f1cc3a3a36142a88ca54099248deef14cace" translate="yes" xml:space="preserve">
          <source>Build out a folder structure that looks like this:</source>
          <target state="translated">다음과 같은 폴더 구조를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="dc4709e362ef4028cb25a2c00e5cd2eb1bd689a2" translate="yes" xml:space="preserve">
          <source>Build out your Azure Instance</source>
          <target state="translated">Azure 인스턴스 빌드</target>
        </trans-unit>
        <trans-unit id="02fa78f47dd3c1fdc6888c21a6ca5983aa479e4e" translate="yes" xml:space="preserve">
          <source>Build the InstallApplications package.</source>
          <target state="translated">InstallApplications 패키지를 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="6e7dc350c9fa390cc4701c4246abc0f7d9e0c9f4" translate="yes" xml:space="preserve">
          <source>Build the MDM server</source>
          <target state="translated">MDM 서버 구축</target>
        </trans-unit>
        <trans-unit id="86e321e108683cbd18944a717555c44d665c84c8" translate="yes" xml:space="preserve">
          <source>Build the artifact in an unattended fashion, passing the name of the origin key to the command.</source>
          <target state="translated">오리진 키의 이름을 명령에 전달하여 무인 방식으로 아티팩트를 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="b17f8a9529d8cb82e41dd2c6e336c156366fa16b" translate="yes" xml:space="preserve">
          <source>Build the package</source>
          <target state="translated">패키지 빌드</target>
        </trans-unit>
        <trans-unit id="9d0c312c6090ed878495b2536b1a8c35f88f4217" translate="yes" xml:space="preserve">
          <source>Build the package with the command: &lt;code&gt;hab pkg build .&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hab pkg build .&lt;/code&gt; 명령을 사용하여 패키지를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="fcf827ac8e62fdf04d4dca479f1455fe07c93597" translate="yes" xml:space="preserve">
          <source>Build the package:</source>
          <target state="translated">패키지 빌드 :</target>
        </trans-unit>
        <trans-unit id="555689b0683c2923720a412396a3ac7f7aac0610" translate="yes" xml:space="preserve">
          <source>Build the plan as you normally would. When you start the Supervisor, pass the name of the directory with your plan inside it:</source>
          <target state="translated">평소처럼 계획을 세우십시오. 감독자를 시작할 때 계획이있는 디렉토리 이름을 그 안에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="dc5a66e469942eaa6a9ef7e3824790768965300d" translate="yes" xml:space="preserve">
          <source>Build using a Studio</source>
          <target state="translated">Studio를 사용하여 빌드</target>
        </trans-unit>
        <trans-unit id="4b4cd2835efda51ace2805d92775191af20498df" translate="yes" xml:space="preserve">
          <source>Build your local repo and test Chef Desktop</source>
          <target state="translated">로컬 리포지토리를 빌드하고 Chef 데스크톱을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="6b06cb37d86edf02261f16c5281975f1b47677ef" translate="yes" xml:space="preserve">
          <source>Builder Profile</source>
          <target state="translated">빌더 프로필</target>
        </trans-unit>
        <trans-unit id="fca7d9c3fcdf3fd8029126987b8e0222ecf0ab03" translate="yes" xml:space="preserve">
          <source>Builder requires the private origin key to enable new artifact builds from packages with plans linked to that origin.</source>
          <target state="translated">빌더는 해당 오리진에 연결된 계획이있는 패키지에서 새 아티팩트 빌드를 활성화하려면 개인 오리진 키가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8a390a6ee39a60a5720caa99618d84f659f8d10c" translate="yes" xml:space="preserve">
          <source>Builder requires the public origin key to upload artifacts for that origin, so you&amp;rsquo;ll need to upload it.</source>
          <target state="translated">빌더는 해당 오리진에 대한 아티팩트를 업로드하려면 공개 오리진 키가 필요하므로 업로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="0d5188266ad849d94fa2778f305ded4913047a2c" translate="yes" xml:space="preserve">
          <source>Building Dependent Plans in the Studio</source>
          <target state="translated">Studio에서 종속 계획 작성</target>
        </trans-unit>
        <trans-unit id="3086dd4287db2e9945b4e209d99b9b53091cd31e" translate="yes" xml:space="preserve">
          <source>Building Packages</source>
          <target state="translated">패키지 빌드</target>
        </trans-unit>
        <trans-unit id="14d083989b54ad48644d1d444fe93596a5813da2" translate="yes" xml:space="preserve">
          <source>Building Packages with Multiple Plans</source>
          <target state="translated">여러 계획으로 패키지 빌드</target>
        </trans-unit>
        <trans-unit id="0d5d6cb79dff33d19cf255052a7c6a526d9ae401" translate="yes" xml:space="preserve">
          <source>Building the node object</source>
          <target state="translated">노드 객체 만들기</target>
        </trans-unit>
        <trans-unit id="1a0f6aee772fa59b7339f89ff144fd7e441ba40e" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;.gemrc&lt;/code&gt; file based on a &lt;code&gt;gemrc.erb&lt;/code&gt; template</source>
          <target state="translated">&lt;code&gt;gemrc.erb&lt;/code&gt; 템플릿을 기반으로 &lt;code&gt;.gemrc&lt;/code&gt; 파일을 빌드합니다</target>
        </trans-unit>
        <trans-unit id="b219cb82075f34eab38bfb177966fde2bab70bf9" translate="yes" xml:space="preserve">
          <source>Builds a Plan using a Studio</source>
          <target state="translated">Studio를 사용하여 계획 수립</target>
        </trans-unit>
        <trans-unit id="094ba01cf1e5387974023d255d23e94135fccce0" translate="yes" xml:space="preserve">
          <source>Builds and installs the binary or library using &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;make install&lt;/code&gt; for Linux based builds, and TODO: WHAT DOES WINDOWS USE? Invoke-Unpack function with Start-Process? Invoke-Install &amp;amp; Copy-Item? unless the callback methods are overridden in the plan.</source>
          <target state="translated">Linux 기반 빌드 용 &lt;code&gt;make&lt;/code&gt; 및 &lt;code&gt;make install&lt;/code&gt; 을 사용하여 바이너리 또는 라이브러리를 빌드하고 설치합니다. TODO : WINDOWS는 무엇을 사용합니까? Start-Process를 사용하여 호출-압축 해제 기능? Invoke-Install &amp;amp; Copy-Item? 계획에서 콜백 메소드가 대체되지 않는 한.</target>
        </trans-unit>
        <trans-unit id="178de3356bd95bf631178e6868f057029b83f848" translate="yes" xml:space="preserve">
          <source>Buildtime Workflow</source>
          <target state="translated">빌드 타임 워크 플로우</target>
        </trans-unit>
        <trans-unit id="1e48312d227f788cce9d4d224a4c3ff84086daba" translate="yes" xml:space="preserve">
          <source>Built into the chef-provisioning-vsphere driver</source>
          <target state="translated">chef-provisioning-vsphere 드라이버에 내장</target>
        </trans-unit>
        <trans-unit id="7998e59d701a8696fc25146f2f6266408261fbbd" translate="yes" xml:space="preserve">
          <source>Built-in Helpers</source>
          <target state="translated">내장 도우미</target>
        </trans-unit>
        <trans-unit id="ad28684e79d5f99d6d3ff51f9c95e38a0dda71a0" translate="yes" xml:space="preserve">
          <source>Built-in Subcommands</source>
          <target state="translated">내장 부속 명령</target>
        </trans-unit>
        <trans-unit id="3d7efc70b9bf3d81820ca4e5189bad97d36012eb" translate="yes" xml:space="preserve">
          <source>Bulk Node Add</source>
          <target state="translated">벌크 노드 추가</target>
        </trans-unit>
        <trans-unit id="ca029509502ce74d12c3502a3202897f3eda5520" translate="yes" xml:space="preserve">
          <source>Bulk Node Delete</source>
          <target state="translated">대량 노드 삭제</target>
        </trans-unit>
        <trans-unit id="f95331a8f029b17a350268b06fe1b96e4762454c" translate="yes" xml:space="preserve">
          <source>Bulk Uploads Habitat Artifacts to a Depot from a local directory</source>
          <target state="translated">서식지 아티팩트를 로컬 디렉토리에서 저장소로 대량 업로드</target>
        </trans-unit>
        <trans-unit id="66d0a9231703d2e4bb6654e40bcb88be102e51e3" translate="yes" xml:space="preserve">
          <source>Bulk-Upload Seed List Packages to Chef Habitat Builder on-prem</source>
          <target state="translated">시드 목록 패키지를 온 프레미스 Chef Habitat Builder에 대량 업로드</target>
        </trans-unit>
        <trans-unit id="d705258c54e6079321beb65fed2aa198e0303783" translate="yes" xml:space="preserve">
          <source>Bulleted Lists</source>
          <target state="translated">글 머리 기호 목록</target>
        </trans-unit>
        <trans-unit id="7c4d4d2c08fa038a9daadf2a2507c392dab677c9" translate="yes" xml:space="preserve">
          <source>Bulleted lists break up text blocks and draw attention to a group of items:</source>
          <target state="translated">글 머리 기호 목록은 텍스트 블록을 분할하고 항목 그룹에주의를 집중시킵니다.</target>
        </trans-unit>
        <trans-unit id="6bcfe872db7486935e1ec6cc537ec1e6a48045b2" translate="yes" xml:space="preserve">
          <source>Bumping the version number as appropriate.</source>
          <target state="translated">버전 번호를 적절히 부딪 히십시오.</target>
        </trans-unit>
        <trans-unit id="0f94adbcac1ee47c2daf825cae5516e6e522c12f" translate="yes" xml:space="preserve">
          <source>Bumps the cookbook metadata version number automatically when &lt;code&gt;delivery review&lt;/code&gt; is run.</source>
          <target state="translated">&lt;code&gt;delivery review&lt;/code&gt; 가 실행될 때 쿡북 메타 데이터 버전 번호를 자동으로 올립니다 .</target>
        </trans-unit>
        <trans-unit id="f839b560c992fbd3146343eae4d2b92a214791b5" translate="yes" xml:space="preserve">
          <source>Bumps the cookbook metadata version number automatically when &lt;code&gt;delivery review&lt;/code&gt; is run. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delivery review&lt;/code&gt; 가 실행될 때 쿡북 메타 데이터 버전 번호를 자동으로 올립니다 . 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30929f843c57d54e410d8a1630a8a98113dcf0df" translate="yes" xml:space="preserve">
          <source>But that is not very efficient, especially because most of them are identical. The deep merge capabilities of Chef Infra Client allows attributes to be layered across cookbooks, recipes, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be.</source>
          <target state="translated">그러나 이는 매우 효율적이지 않습니다. 특히 대부분이 동일하기 때문입니다. Chef Infra Client의 딥 병합 기능을 사용하면 요리 책, 레시피, 역할 및 환경에 속성을 계층화 할 수 있습니다. 이를 통해 노드간에 속성을 재사용 할 수있어 요리 책 수준에서 설정된 기본 속성을 사용할 수있을뿐만 아니라 특정 속성 (속성 우선 순위가 더 높은)이 예상되는 경우에만 적용되는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4b4d2ccd13ffe2b3ffda5f6be46d01a658768ff8" translate="yes" xml:space="preserve">
          <source>But that is not very efficient, especially because most of them are identical. The deep merge capabilities of the chef-client allows attributes to be layered across cookbooks, recipes, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be.</source>
          <target state="translated">그러나 특히 효율적이지 않기 때문에 효율성이 떨어집니다. chef-client의 깊은 병합 기능을 통해 요리 책, 레시피, 역할 및 환경에 걸쳐 속성을 계층화 할 수 있습니다. 이렇게하면 요리 책 수준에서 설정된 기본 속성을 사용하면서 노드 전체에서 속성을 재사용 할 수있을뿐만 아니라 특정 속성 (높은 속성 우선 순위)을 적용해야하는 경우에만 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb9a81dbae55c1deaafa73ce57144aa8efbd370a" translate="yes" xml:space="preserve">
          <source>But what happens if you want more flexibility to manage the users instead of devices? This approach creates a user group that applies the same policies to individuals. That way, if a user logs onto a different system their account is still managed correctly.</source>
          <target state="translated">하지만 장치 대신 사용자를 더 유연하게 관리하려면 어떻게해야할까요? 이 접근 방식은 개인에게 동일한 정책을 적용하는 사용자 그룹을 만듭니다. 이렇게하면 사용자가 다른 시스템에 로그온해도 해당 계정은 여전히 ​​올바르게 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="a2705406de2f662b10cbd3f03b2189fcafcdb645" translate="yes" xml:space="preserve">
          <source>But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:</source>
          <target state="translated">그러나 모든 웹 서버가 동일하지 않은 경우 어떻게해야합니까? 일부 웹 서버에서 다른 값을 가지기 위해 단일 속성이 필요한 경우 어떻게해야합니까? 이러한 설정은 위의 예와 같이 한 번과 다음과 같이 두 위치에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bdcc5556978f1b366f450955e7b98990429e145" translate="yes" xml:space="preserve">
          <source>But with this example, the &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, and &lt;code&gt;owner&lt;/code&gt; attribute values will only be applied to &lt;code&gt;/baz&lt;/code&gt;. Which is fine, if that&amp;rsquo;s what you want. But most of the time, when the entire &lt;code&gt;/foo/bar/baz&lt;/code&gt; directory structure is not there, you must be explicit about each directory. For example:</source>
          <target state="translated">그러나이 예제에서 &lt;code&gt;group&lt;/code&gt; , &lt;code&gt;mode&lt;/code&gt; 및 &lt;code&gt;owner&lt;/code&gt; 속성 값은 &lt;code&gt;/baz&lt;/code&gt; 에만 적용됩니다 . 그것이 당신이 원하는 것이라면 어느 것이 좋습니다. 그러나 대부분의 경우 전체 &lt;code&gt;/foo/bar/baz&lt;/code&gt; 디렉토리 구조가 없으면 각 디렉토리에 대해 명시 적이어야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5512a52c12c22842da0eeb1a761b4a1e9ff20987" translate="yes" xml:space="preserve">
          <source>But, the following:</source>
          <target state="translated">그러나 다음은</target>
        </trans-unit>
        <trans-unit id="41a76f2148dc8625f9a6189e7676a6ab555b5ed3" translate="yes" xml:space="preserve">
          <source>Butterfly</source>
          <target state="translated">Butterfly</target>
        </trans-unit>
        <trans-unit id="5258eb53fc31c16aee5a8de6393914551de396c1" translate="yes" xml:space="preserve">
          <source>Butterfly differs from SWIM in the following ways:</source>
          <target state="translated">Butterfly는 다음과 같은 점에서 수영과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8bc37109c8f88fd27fa8b1afc135c7d961d5fa95" translate="yes" xml:space="preserve">
          <source>Butterfly encrypts traffic on the wire using Curve25519 and a symmetric key. If a ring is configured to use transport level encryption, only members with a matching key are allowed to communicate.</source>
          <target state="translated">Butterfly는 Curve25519와 대칭 키를 사용하여 유선 트래픽을 암호화합니다. 전송 수준 암호화를 사용하도록 링이 구성된 경우 일치하는 키를 가진 구성원 만 통신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d98bbf9c5c60f98235a761382dd9d8895bfaa57" translate="yes" xml:space="preserve">
          <source>Butterfly is an eventually consistent system - it says, with a very high degree of probability, that a given piece of information will be received by every member of the network. It makes no guarantees as to when that state will arrive; in practice, the answer is usually &amp;ldquo;quite quickly&amp;rdquo;.</source>
          <target state="translated">Butterfly는 궁극적으로 일관된 시스템입니다. 매우 높은 확률로 주어진 정보가 네트워크의 모든 구성원에 의해 수신 될 것이라고 말합니다. 그 주가 언제 도착할지 보장하지 않습니다. 실제로 대답은 일반적으로 &quot;매우 빨리&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="a08863fbbb96a0512519f576c41b546ca7cb1df9" translate="yes" xml:space="preserve">
          <source>Butterfly servers keep track of what members are present in a ring, and are constantly checking each other for failure. Any given member is in one of four health states:</source>
          <target state="translated">버터 플라이 서버는 링에 어떤 구성원이 있는지 추적하고 서로의 오류를 지속적으로 확인합니다. 주어진 회원은 다음 네 가지 건강 상태 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="0cf6006633ce60be35578bb59d10f480ec24a0fa" translate="yes" xml:space="preserve">
          <source>Butterfly uses ZeroMQ to disseminate rumors throughout the network. Its flow:</source>
          <target state="translated">Butterfly는 ZeroMQ를 사용하여 네트워크 전체에 루머를 전파합니다. 흐름 :</target>
        </trans-unit>
        <trans-unit id="96136ddf45172c48f4a591ef408f71a825d2ab6d" translate="yes" xml:space="preserve">
          <source>By Subcommand</source>
          <target state="translated">하위 명령 별</target>
        </trans-unit>
        <trans-unit id="2c5246b99be91d3cd60d41e1b9d43202602ef14e" translate="yes" xml:space="preserve">
          <source>By adding a start handler to the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook, which installs the handler on the node so that it is available to Chef Infra Client at the start of a Chef Infra Client run</source>
          <target state="translated">Chef Infra Client 실행 시작시 Chef Infra Client에서 사용할 수 있도록 노드에 핸들러를 설치 하는 &lt;strong&gt;chef-client&lt;/strong&gt; 쿡북에 시작 핸들러를 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="8c134f1d4bc6ab786d72f4b398a6d87c30ab5569" translate="yes" xml:space="preserve">
          <source>By adding a start handler to the &lt;strong&gt;chef-client&lt;/strong&gt; cookbook, which installs the handler on the node so that it is available to the chef-client at the start of the chef-client run</source>
          <target state="translated">&lt;strong&gt;chef-client&lt;/strong&gt; 쿡북에 start handler를 추가 하여 Chef-client 실행이 시작될 때 chef-client가 사용할 수 있도록 핸들러를 노드에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="974cc898b3b8be7ed9691860804ee8514243fee1" translate="yes" xml:space="preserve">
          <source>By adding the &lt;strong&gt;chef_handler&lt;/strong&gt; resource to a recipe, and then adding that recipe to the run-list for a node. (The &lt;strong&gt;chef_handler&lt;/strong&gt; resource is available from the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook.)</source>
          <target state="translated">첨가 용으로 &lt;strong&gt;chef_handler의&lt;/strong&gt; 노드의 실행 목록에 그 요리법을 추가 한 후 조리법에 자원을합니다. 합니다 ( &lt;strong&gt;chef_handler의&lt;/strong&gt; 리소스로부터 사용할 &lt;strong&gt;chef_handler의&lt;/strong&gt; 요리 책).</target>
        </trans-unit>
        <trans-unit id="5845bc358184518c07bd3ef6cc57143c929f50b8" translate="yes" xml:space="preserve">
          <source>By adding the following lines of Ruby code to either the client.rb file or the solo.rb file, depending on how Chef Infra Client is being run:</source>
          <target state="translated">Chef Infra Client가 실행되는 방식에 따라 client.rb 파일 또는 solo.rb 파일에 다음과 같은 Ruby 코드 줄을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a558e0981c24356985f21cb25bc197711d72c158" translate="yes" xml:space="preserve">
          <source>By adding the following lines of Ruby code to either the client.rb file or the solo.rb file, depending on how the chef-client is being run:</source>
          <target state="translated">chef-client 실행 방법에 따라 다음 라인의 Ruby 코드를 client.rb 파일 또는 solo.rb 파일에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d90ced6e70b965534c561bea92689ff8f37e3503" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;exception_handlers&lt;/code&gt; and/or &lt;code&gt;report_handlers&lt;/code&gt;</source>
          <target state="translated">노드의 client.rb 파일에서 다음 설정 중 하나에 핸들러를 추가하여 &lt;code&gt;exception_handlers&lt;/code&gt; 및 / 또는 &lt;code&gt;report_handlers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9655186f940d77bf0f58c90cb3ab2e7fb1cb06b9" translate="yes" xml:space="preserve">
          <source>By adding the handler to one of the following settings in the node&amp;rsquo;s client.rb file: &lt;code&gt;start_handlers&lt;/code&gt;</source>
          <target state="translated">노드의 client.rb 파일에서 다음 설정 중 하나에 핸들러를 추가하여 &lt;code&gt;start_handlers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14553a114a6e4bab2587ef28af72f75b01fdf4dc" translate="yes" xml:space="preserve">
          <source>By bootstraping Chef Infra Client using &lt;a href=&quot;../workstation/knife_bootstrap/index&quot;&gt;knife bootstrap&lt;/a&gt; from a local workstation using WinRM</source>
          <target state="translated">WinRM을 사용하여 로컬 워크 스테이션에서 &lt;a href=&quot;../workstation/knife_bootstrap/index&quot;&gt;나이프 부트 스트랩&lt;/a&gt; 을 사용하여 Chef Infra Client를 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="eee4357f4459067fae66aaebf094ac76b1753912" translate="yes" xml:space="preserve">
          <source>By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor.</source>
          <target state="translated">와일드 카드를 범위 일치 패턴 및 와일드 카드 쿼리와 결합하면 MAC 주소의 공급 업체 부분을 사용하여 지정된 공급 업체가 만든 네트워크 카드가있는 모든 노드를 찾는 등의 강력한 검색을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4e3ebc3ed141f01182b781f9dfce7b6788d9f60" translate="yes" xml:space="preserve">
          <source>By connecting a plan file in &lt;a href=&quot;https://bldr.habitat.sh/#/sign-in&quot;&gt;Chef Habitat Builder&lt;/a&gt;, you can trigger both manual (via the web UI, or via the &lt;code&gt;hab&lt;/code&gt; command line) as well as automated package rebuilds whenever a change is merged into the &lt;code&gt;master&lt;/code&gt; branch of the repository containing your Chef Habitat plan, or when a dependent package updates (rebuilds).</source>
          <target state="translated">&lt;a href=&quot;https://bldr.habitat.sh/#/sign-in&quot;&gt;Chef Habitat Builder&lt;/a&gt; 에서 계획 파일을 연결하면 변경 사항이 Chef Habitat이 포함 된 저장소 의 &lt;code&gt;master&lt;/code&gt; 브랜치에 병합 될 때마다 수동 (웹 UI 또는 &lt;code&gt;hab&lt;/code&gt; 명령 줄을 통해 )과 자동화 된 패키지 재 빌드 를 모두 트리거 할 수 있습니다. 계획 또는 종속 패키지가 업데이트 (재 구축) 될 때.</target>
        </trans-unit>
        <trans-unit id="8d5159ff85fa0f3f305cfc7542ce39f4954ca747" translate="yes" xml:space="preserve">
          <source>By creating and editing files using the Ruby DSL or JSON, role data can be dynamically generated with the Ruby DSL. Roles created and edited using files are compatible with all versions of Chef, including chef-solo. Roles created and edited using files can be kept in version source control, which also keeps a history of what changed when. When roles are created and edited using files, they should not be managed using knife or the Chef management console, as changes will be overwritten.</source>
          <target state="translated">Ruby DSL 또는 JSON을 사용하여 파일을 만들고 편집하면 Ruby DSL을 사용하여 역할 데이터를 동적으로 생성 할 수 있습니다. 파일을 사용하여 만들고 편집 한 역할은 chef-solo를 포함한 모든 버전의 Chef와 호환됩니다. 파일을 사용하여 만들고 편집 한 역할은 버전 소스 제어에 보관할 수 있으며 변경된시기에 대한 기록도 보관합니다. 파일을 사용하여 역할을 만들고 편집 할 때 Knife 또는 Chef 관리 콘솔을 사용하여 관리해서는 안됩니다. 변경 사항을 덮어 쓰게됩니다.</target>
        </trans-unit>
        <trans-unit id="7d0bd7ceb9908127f8ef3e6f67b0c773fe884e07" translate="yes" xml:space="preserve">
          <source>By default only Admins of Chef Automate may create and manage notifications.</source>
          <target state="translated">기본적으로 Chef Automate의 관리자 만 알림을 만들고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="46aad7e6a001f5863791bc1519da5e1350e2eea2" translate="yes" xml:space="preserve">
          <source>By default the Chef Automate cluster is configured to store near-complete backup archives and snapshots on the local filesystem. When you create backups they will include all Chef Automate data and configuration except for the RabbitMQ queues. This was determined to be a safe choice as the RabbitMQ queues are commonly quite small and require taking the Chef Automate cluster offline in order to back them up. As they are not required to restore a functional Chef Automate cluster the services disruption is rarely worth the value of the RabbitMQ queues.</source>
          <target state="translated">기본적으로 Chef Automate 클러스터는 거의 완성 된 백업 아카이브와 스냅 샷을 로컬 파일 시스템에 저장하도록 구성됩니다. 백업을 생성하면 RabbitMQ 대기열을 제외한 모든 Chef Automate 데이터 및 구성이 포함됩니다. RabbitMQ 대기열은 일반적으로 매우 작고 백업을 위해 Chef Automate 클러스터를 오프라인으로 전환해야하므로 안전한 선택으로 결정되었습니다. 기능적인 Chef Automate 클러스터를 복원 할 필요가 없기 때문에 서비스 중단은 RabbitMQ 대기열의 가치가 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="bfefa1b48328280be946f040df25ee33e5671d66" translate="yes" xml:space="preserve">
          <source>By default the chef generate repo command generates a base chef-repo configured for Policyfiles. To create a repository setup for Roles and Environments instead use the &lt;code&gt;--roles&lt;/code&gt; flag when running the command.</source>
          <target state="translated">기본적으로 chef generate repo 명령은 정책 파일에 대해 구성된 기본 chef-repo를 생성합니다. 역할 및 환경에 대한 리포지토리 설정을 만들려면 명령을 실행할 때 대신 &lt;code&gt;--roles&lt;/code&gt; 플래그 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="4d44d4f86b500815df8cd42a1f6140b0f0b71232" translate="yes" xml:space="preserve">
          <source>By default the command that is ran is shown in the Chef InSpec output. This can be problematic if the command contains sensitive arguments such as a password. These sensitive parts can be redacted by passing in &lt;code&gt;redact_regex&lt;/code&gt; and a regular expression to redact. Optionally, you can use 2 capture groups to fine tune what is redacted.</source>
          <target state="translated">기본적으로 실행되는 명령은 Chef InSpec 출력에 표시됩니다. 명령에 암호와 같은 민감한 인수가 포함 된 경우 문제가 될 수 있습니다. 이러한 민감한 부분은 &lt;code&gt;redact_regex&lt;/code&gt; 및 정규식 을 전달하여 수정하여 수정할 수 있습니다 . 선택적으로 2 개의 캡처 그룹을 사용하여 수정 된 내용을 미세 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="242d4a2f19a8716d717d57b4a429555eeeeb9d33" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;knife bootstrap&lt;/code&gt; uses the &lt;code&gt;chef-full&lt;/code&gt; template to bootstrap a node. This template contains a number of useful features, but it also attempts to pull an installation script from &lt;code&gt;downloads.chef.io&lt;/code&gt;. In this section, you&amp;rsquo;ll copy the contents of the &lt;code&gt;chef-full&lt;/code&gt; template to a custom template, and then modify the package and Ruby gem sources.</source>
          <target state="translated">기본적으로 &lt;code&gt;knife bootstrap&lt;/code&gt; 은 &lt;code&gt;chef-full&lt;/code&gt; 템플릿을 사용하여 노드를 부트 스트랩합니다. 이 템플릿에는 여러 유용한 기능이 포함되어 있지만 &lt;code&gt;downloads.chef.io&lt;/code&gt; 에서 설치 스크립트를 가져 오려고합니다 . 이 섹션에서는 &lt;code&gt;chef-full&lt;/code&gt; 템플릿 의 콘텐츠를 사용자 지정 템플릿에 복사 한 다음 패키지 및 Ruby gem 소스를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="85b19cf7fa9746e6001c6b342ae00b878a96655d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;knife bootstrap&lt;/code&gt; will attempt to use &lt;code&gt;ssh&lt;/code&gt; to connect to the target node. Use the &lt;code&gt;-o&lt;/code&gt; to specify a different protocol, such as &lt;code&gt;winrm&lt;/code&gt; for windows nodes.</source>
          <target state="translated">기본적으로 &lt;code&gt;knife bootstrap&lt;/code&gt; 은 &lt;code&gt;ssh&lt;/code&gt; 를 사용하여 대상 노드에 연결을 시도 합니다. 사용 &lt;code&gt;-o&lt;/code&gt; 를 같은 다른 프로토콜을 지정하는 &lt;code&gt;winrm&lt;/code&gt; 창 노드.</target>
        </trans-unit>
        <trans-unit id="eb3b1efc29a95a82121eb2d57a511067e2319237" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate includes a &lt;em&gt;project-owner&lt;/em&gt; role, so the global admin may delegate much of these responsibilities for project management to others and share some of the global admin&amp;rsquo;s burden.</source>
          <target state="translated">기본적으로 Chef Automate에는 &lt;em&gt;프로젝트 소유자&lt;/em&gt; 역할이 포함되어 있으므로 글로벌 관리자는 프로젝트 관리에 대한 이러한 책임의 대부분을 다른 사람에게 위임하고 글로벌 관리자의 일부 부담을 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86c176cb9451de82019a153b0693c6cf6de120af" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate limits you to 300 projects. You can increase the project limit using the command line.</source>
          <target state="translated">기본적으로 Chef Automate는 프로젝트를 300 개로 제한합니다. 명령 줄을 사용하여 프로젝트 제한을 늘릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1249c0c1921e42912d441d763dd46e8ba8e9314d" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate prevents irreversible destructive operations by keeping deleted node history in Elasticsearch, unless users configure this functionality. Chef Software recommends setting the &lt;code&gt;threshold&lt;/code&gt; for destroying deleted node history to 1 day and running data cleanup every 15 minutes.</source>
          <target state="translated">기본적으로 Chef Automate는 사용자가이 기능을 구성하지 않는 한 Elasticsearch에서 삭제 된 노드 기록을 유지하여 되돌릴 수없는 파괴적인 작업을 방지합니다. Chef Software는 삭제 된 노드 기록을 폐기 하는 &lt;code&gt;threshold&lt;/code&gt; 을 1 일로 설정하고 15 분마다 데이터 정리를 실행할 것을 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="abfb23bd553323ba8e3780f257842bbe580cfbb4" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate will automatically upgrade to the latest version available. These updates can be taken safely, as we&amp;rsquo;ve committed to ensuring the stability of the upgrade process - automatic updates will never introduce breaking changes.</source>
          <target state="translated">기본적으로 Chef Automate는 사용 가능한 최신 버전으로 자동 업그레이드됩니다. 업그레이드 프로세스의 안정성을 보장하기 위해 최선을 다했기 때문에 이러한 업데이트는 안전하게 수행 할 수 있습니다. 자동 업데이트는 절대 변경 사항을 도입하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b37a23e0ff11ba5e6ac4bac6bde8df24220c2d8" translate="yes" xml:space="preserve">
          <source>By default, Chef Automate&amp;rsquo;s SAML integration will use EntityId &lt;code&gt;https://&amp;lt;yourChef AutomateDomain&amp;gt;/api/v0/e/&amp;lt;yourEnterprise&amp;gt;/saml/metadata&lt;/code&gt;. This can be overridden in &lt;code&gt;delivery.rb&lt;/code&gt; as follows:</source>
          <target state="translated">기본적으로 Chef Automate의 SAML 통합은 EntityId &lt;code&gt;https://&amp;lt;yourChef AutomateDomain&amp;gt;/api/v0/e/&amp;lt;yourEnterprise&amp;gt;/saml/metadata&lt;/code&gt; 를 사용 합니다. 다음과 같이 &lt;code&gt;delivery.rb&lt;/code&gt; 에서 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1eeecddc63997c9a3d8c4044040faec3b0771d78" translate="yes" xml:space="preserve">
          <source>By default, Chef Habitat treats all variables as &amp;ldquo;primitive&amp;rdquo; variables. If you are working with a value that is actually an &amp;ldquo;aggregate&amp;rdquo; type, you must set the following special environment variable somewhere in the top level of your plan.</source>
          <target state="translated">기본적으로 Chef Habitat은 모든 변수를 &quot;기본&quot;변수로 취급합니다. 실제로 &quot;집계&quot;유형 인 값으로 작업하는 경우 계획의 최상위 레벨 어딘가에 다음 특수 환경 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c6d1e8f439d9baca3bb42f9ea13eccd2f05be24e" translate="yes" xml:space="preserve">
          <source>By default, Chef InSpec is configured to look at &lt;code&gt;~/.azure/credentials&lt;/code&gt;, and it should contain:</source>
          <target state="translated">기본적으로 Chef InSpec은 &lt;code&gt;~/.azure/credentials&lt;/code&gt; 를 보도록 구성되며 다음을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9a4b29a5dcdae4cab77b0295cdfd747c269d8cf" translate="yes" xml:space="preserve">
          <source>By default, Chef InSpec looks for a config file in &lt;code&gt;~/.inspec/config.json&lt;/code&gt;. Chef InSpec does not need a configuration file to run.</source>
          <target state="translated">기본적으로 Chef InSpec은 &lt;code&gt;~/.inspec/config.json&lt;/code&gt; 에서 구성 파일을 찾습니다 . Chef InSpec은 실행하는 데 구성 파일이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d583ad52dff5f88d5df7e24104c256a7edade508" translate="yes" xml:space="preserve">
          <source>By default, Chef Infra Server still writes service credentials to multiple locations inside &lt;code&gt;/etc/opscode&lt;/code&gt;. This is designed to maintain compatibility with add-ons. Chef Server 12.14 introduces the &lt;code&gt;insecure_addon_compat&lt;/code&gt; configuration option in &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt;, which allows you to further restrict where credentials are written. &lt;code&gt;insecure_addon_compat&lt;/code&gt; can be used if you are not using add-ons, or if you are using the latest add-on versions. Setting &lt;code&gt;insecure_addon_compat&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; writes credentials to only one location: &lt;code&gt;/etc/opscode/private-chef-secrets.json&lt;/code&gt;.</source>
          <target state="translated">기본적으로 Chef Infra Server는 여전히 &lt;code&gt;/etc/opscode&lt;/code&gt; 내의 여러 위치에 서비스 자격 증명을 작성합니다 . 이것은 애드온과의 호환성을 유지하도록 설계되었습니다. Chef Server 12.14는 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; 에 &lt;code&gt;insecure_addon_compat&lt;/code&gt; 구성 옵션을 도입하여 자격 증명이 작성되는 위치를 추가로 제한 할 수 있습니다. 애드온을 사용하지 않거나 최신 애드온 버전을 사용하는 경우 &lt;code&gt;insecure_addon_compat&lt;/code&gt; 를 사용할 수 있습니다. &lt;code&gt;insecure_addon_compat&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하면 자격 증명이 &lt;code&gt;/etc/opscode/private-chef-secrets.json&lt;/code&gt; 한 위치에만 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="621730e427a7e11696b4396849f8db206b22d0ee" translate="yes" xml:space="preserve">
          <source>By default, Elasticsearch uses a private temporary directory that the startup script creates immediately below the system temporary directory. Default value: &lt;code&gt;/var/opt/opscode/elasticsearch/tmp&lt;/code&gt;</source>
          <target state="translated">기본적으로 Elasticsearch는 시작 스크립트가 시스템 임시 디렉터리 바로 아래에 생성하는 개인 임시 디렉터리를 사용합니다. 기본값 : &lt;code&gt;/var/opt/opscode/elasticsearch/tmp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1470d6eb7ff0c065c4d3a6b42d7cf62123d782fd" translate="yes" xml:space="preserve">
          <source>By default, PostgreSQL only allows systems on its local network to connect to the database server that runs it and the &lt;code&gt;pg_hba.conf&lt;/code&gt; used by PostgreSQL controls network access to the server. The default &lt;code&gt;pg_hba.conf&lt;/code&gt; has the following four entries:</source>
          <target state="translated">기본적으로 PostgreSQL은 로컬 네트워크의 시스템 만이를 실행하는 데이터베이스 서버에 연결할 수 있도록 허용 하고 PostgreSQL에서 사용 하는 &lt;code&gt;pg_hba.conf&lt;/code&gt; 는 서버에 대한 네트워크 액세스를 제어합니다. 기본 &lt;code&gt;pg_hba.conf&lt;/code&gt; 에는 다음 4 개의 항목이 있습니다.</target>
        </trans-unit>
        <trans-unit id="07061e5e295f9b09f78fe89a2d15f3e6863c8664" translate="yes" xml:space="preserve">
          <source>By default, Windows systems will run the chef-client cookbook as a scheduled task if your run-list looks like this: &lt;code&gt;recipe[chef-client::default]&lt;/code&gt;.</source>
          <target state="translated">기본적으로 Windows 시스템은 실행 목록이 &lt;code&gt;recipe[chef-client::default]&lt;/code&gt; 와 같은 경우 예약 된 작업으로 chef-client 쿡북을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="149524de8d755c68a5e2f773f73fb2c025897a7d" translate="yes" xml:space="preserve">
          <source>By default, Workflow will use the current directory name as project name. If you want to name the project something else, you may specify the project name as an argument (&lt;code&gt;--project=$AUTOMATE_PROJECT_NAME&lt;/code&gt;).</source>
          <target state="translated">기본적으로 Workflow는 현재 디렉터리 이름을 프로젝트 이름으로 사용합니다. 프로젝트 이름을 다른 이름으로 지정하려면 프로젝트 이름을 인수로 지정할 수 있습니다 ( &lt;code&gt;--project=$AUTOMATE_PROJECT_NAME&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cec99e320ec90350e28b8fed45528174d948f18a" translate="yes" xml:space="preserve">
          <source>By default, a Berksfile has a source for Chef&amp;rsquo;s public Supermarket:</source>
          <target state="translated">기본적으로 Berksfile에는 Chef의 공용 슈퍼마켓에 대한 소스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5152ca88eaab741ef432fed71b2cb587f61e8b39" translate="yes" xml:space="preserve">
          <source>By default, a Supervisor runs unsecured. It communicates with other Supervisors in cleartext, and it allows any user to apply new configuration without authentication. While this is beneficial for demonstrating the concepts of Chef Habitat, users will want to provide external security on production deployments of Chef Habitat Supervisor networks.</source>
          <target state="translated">기본적으로 Supervisor는 보안되지 않은 상태로 실행됩니다. 일반 텍스트로 다른 감독자와 통신하며 모든 사용자가 인증없이 새 구성을 적용 할 수 있습니다. 이것은 Chef Habitat의 개념을 시연하는 데 유용하지만 사용자는 Chef Habitat Supervisor 네트워크의 프로덕션 배포에 외부 보안을 제공하기를 원할 것입니다.</target>
        </trans-unit>
        <trans-unit id="3cd3f138a1575a88634ad0fdb31ec46c2e14db79" translate="yes" xml:space="preserve">
          <source>By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The &lt;code&gt;inherits&lt;/code&gt; property can be used to specifically tell Chef Infra Client to apply (or not apply) inherited rights from its parent directory.</source>
          <target state="translated">기본적으로 파일 또는 디렉토리는 상위 디렉토리에서 권한을 상속합니다. 대부분의 경우 이것이 선호되는 동작이지만 때로는보다 구체적으로 권한을 제어하기위한 조치를 취해야 할 수도 있습니다. &lt;code&gt;inherits&lt;/code&gt; 속성은 구체적으로 (해당 사항 없음) 적용 상위 디렉토리에서 상속 된 권한을 요리사 인프라 클라이언트를 얘기하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a5e71ebfa3aeb72ae98f51660e74a37975b03f2" translate="yes" xml:space="preserve">
          <source>By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The &lt;code&gt;inherits&lt;/code&gt; property can be used to specifically tell the chef-client to apply (or not apply) inherited rights from its parent directory.</source>
          <target state="translated">기본적으로 파일 또는 디렉토리는 상위 디렉토리에서 권한을 상속받습니다. 대부분의 경우 이것이 선호되는 동작이지만 때로는 권한을보다 구체적으로 제어하기위한 단계를 수행해야 할 수도 있습니다. &lt;code&gt;inherits&lt;/code&gt; 속성은 구체적으로 (해당 사항 없음) 부모 디렉토리에서 상속 된 권한을 적용 할 수있는 요리사 클라이언트를 얘기하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9afd4fcbe5ab7cddf395784c81b360459c3ec67c" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is assumed to be located in the cookbook that contains the top-level template. Use this option to specify the path to a different cookbook</source>
          <target state="translated">기본적으로 부분 템플릿 파일은 최상위 템플릿이 포함 된 요리 책에있는 것으로 가정합니다. 다른 요리 책에 대한 경로를 지정하려면이 옵션을 사용하십시오</target>
        </trans-unit>
        <trans-unit id="95fa357bbb924ddee6d97d5db6b4d0a81db973f0" translate="yes" xml:space="preserve">
          <source>By default, a partial template file is identified by its file name. Use this option to specify a different name or a local path to use (instead of the name of the partial template file)</source>
          <target state="translated">기본적으로 부분 템플릿 파일은 파일 이름으로 식별됩니다. 이 옵션을 사용하여 부분 템플리트 파일 이름 대신 사용할 다른 이름 또는 로컬 경로를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="6ce19a97bcdcfb562252deb688d41c07b675fb2d" translate="yes" xml:space="preserve">
          <source>By default, accounts required by the Chef Infra Server are created during setup. If your environment has restrictions on the creation of local user and group accounts that will prevent these accounts from being created automatically during setup, you will need to create these accounts.</source>
          <target state="translated">기본적으로 Chef Infra Server에 필요한 계정은 설정 중에 생성됩니다. 환경에 설치 중에 이러한 계정이 자동으로 생성되지 않도록하는 로컬 사용자 및 그룹 계정 생성에 대한 제한이있는 경우 이러한 계정을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="65122aaf9200a934cc31a6c9e618db8d549e30a6" translate="yes" xml:space="preserve">
          <source>By default, accounts required by the Chef server are created during setup. If your environment has restrictions on the creation of local user and group accounts that will prevent these accounts from being created automatically during setup, you will need to create these accounts.</source>
          <target state="translated">기본적으로 Chef 서버에 필요한 계정은 설정 중에 작성됩니다. 환경에 로컬 사용자 및 그룹 계정 작성에 대한 제한 사항이있어 설정 중에 이러한 계정이 자동으로 작성되지 못하게하는 경우 해당 계정을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="1d2835e65a1a62ffa0b00bfde520c461893cf850" translate="yes" xml:space="preserve">
          <source>By default, all of the custom resources from a listed dependency are available for use in your profile. If two of your dependencies provide a resource with the same name, you can use the &lt;code&gt;require_resource&lt;/code&gt; DSL function to disambiguate the two:</source>
          <target state="translated">기본적으로 나열된 종속성의 모든 사용자 지정 리소스를 프로필에서 사용할 수 있습니다. 종속성 중 두 개가 동일한 이름의 리소스를 제공하는 경우 &lt;code&gt;require_resource&lt;/code&gt; DSL 함수를 사용 하여 두 가지를 명확하게 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4cfe074578ccf3b6758f0ed6a24dacdb7a323da8" translate="yes" xml:space="preserve">
          <source>By default, all requests are denied.</source>
          <target state="translated">기본적으로 모든 요청이 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="7d37ef7ea1d082df747d656c9abd5a5bbf4ddad7" translate="yes" xml:space="preserve">
          <source>By default, any attempt to run a Chef Push Jobs command other than &lt;code&gt;chef-client&lt;/code&gt; will be rejected with &lt;code&gt;nack&lt;/code&gt;. For example:</source>
          <target state="translated">기본적으로 &lt;code&gt;chef-client&lt;/code&gt; 이외의 Chef Push Jobs 명령을 실행하려는 시도 는 &lt;code&gt;nack&lt;/code&gt; 로 거부됩니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="d18a0605a0f46903e7fb0748fcbe69e0f04228b3" translate="yes" xml:space="preserve">
          <source>By default, any users that authenticate successfully with the configured Identity Provider will be logged in: both users with existing user accounts in Chef Automate that are set up for SAML authentication, and users hitherto unknown to Chef Automate, which then get a user account created in Chef Automate automatically. It is also possible to migrate existing users, or to create SAML users manually.</source>
          <target state="translated">기본적으로 구성된 ID 공급자로 성공적으로 인증 된 모든 사용자는 로그인됩니다. SAML 인증을 위해 설정된 Chef Automate의 기존 사용자 계정을 가진 사용자와 지금까지 Chef Automate에 알려지지 않은 사용자는 생성 된 사용자 계정을 얻습니다. Chef Automate에서 자동으로. 기존 사용자를 마이그레이션하거나 SAML 사용자를 수동으로 생성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6442e11780e11f880c632deaea5e718f8490fe58" translate="yes" xml:space="preserve">
          <source>By default, chef-shell loads in standalone mode and does not connect to the Chef Infra Server. The chef-shell can be run as a Chef Infra Client to verify functionality that is only available when Chef Infra Client connects to the Chef Infra Server, such as search functionality or accessing data stored in data bags.</source>
          <target state="translated">기본적으로 chef-shell은 독립 실행 형 모드로로드되며 Chef Infra Server에 연결되지 않습니다. Chef-shell은 Chef Infra Client로 실행되어 Chef Infra Client가 Chef Infra Server에 연결될 때만 사용할 수있는 기능 (예 : 검색 기능 또는 데이터 백에 저장된 데이터 액세스)을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="531033f1d5c8c124b92373d2ce5162f1505a5ed1" translate="yes" xml:space="preserve">
          <source>By default, chef-shell loads in standalone mode and does not connect to the Chef server. The chef-shell can be run as a chef-client to verify functionality that is only available when the chef-client connects to the Chef server, such as search functionality or accessing data stored in data bags.</source>
          <target state="translated">기본적으로 chef-shell은 독립형 모드로로드되며 Chef 서버에 연결되지 않습니다. 셰프 쉘은 셰프 클라이언트가 셰프 클라이언트가 셰프 서버에 연결되어 검색 기능 또는 데이터 백에 저장된 데이터에 액세스하는 경우에만 사용 가능한 기능을 검증하기 위해 셰프 클라이언트로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b69e6ba9c388d59271822bec0e6580c23a7235af" translate="yes" xml:space="preserve">
          <source>By default, each build cookbook recipe &lt;code&gt;$RECIPE&lt;/code&gt; is located at &lt;code&gt;.delivery/build-cookbook/recipes/$RECIPE.rb&lt;/code&gt;.</source>
          <target state="translated">기본적으로 각 빌드 쿡북 레시피 &lt;code&gt;$RECIPE&lt;/code&gt; 는 &lt;code&gt;.delivery/build-cookbook/recipes/$RECIPE.rb&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd656f79a82d9dcddd3bd1d43bbb822639cb8ac3" translate="yes" xml:space="preserve">
          <source>By default, every log resource that executes will count as an updated resource in the updated resource count at the end of a Chef run. You can disable this behavior by adding &lt;code&gt;count_log_resource_updates false&lt;/code&gt; to your Chef &lt;code&gt;client.rb&lt;/code&gt; configuration file.</source>
          <target state="translated">기본적으로 실행되는 모든 로그 리소스는 Chef 실행이 끝날 때 업데이트 된 리소스 수에서 업데이트 된 리소스로 계산됩니다. Chef &lt;code&gt;client.rb&lt;/code&gt; 구성 파일에 &lt;code&gt;count_log_resource_updates false&lt;/code&gt; 를 추가 하여이 동작을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a9ab5a26a4475a8770eb38f662408bb7167b0ec" translate="yes" xml:space="preserve">
          <source>By default, every new package is placed in the &lt;code&gt;unstable&lt;/code&gt; channel by Builder. Packages in the &lt;code&gt;unstable&lt;/code&gt; channel cannot be started or installed unless you specify the &lt;code&gt;--channel&lt;/code&gt; flag in the &lt;code&gt;hab&lt;/code&gt; CLI, or set the &lt;code&gt;HAB_BLDR_CHANNEL&lt;/code&gt; environment variable to a non-stable channel. This is because the default channel used by the &lt;code&gt;hab&lt;/code&gt; CLI when starting, installing, or loading packages is the &lt;code&gt;stable&lt;/code&gt; channel. The &lt;code&gt;stable&lt;/code&gt; channel indicates a level of stability and functionality suitable for use in multi-service applications or as a dependency for your service.</source>
          <target state="translated">기본적으로 모든 새 패키지는 Builder에 의해 &lt;code&gt;unstable&lt;/code&gt; 채널에 배치됩니다 . &lt;code&gt;unstable&lt;/code&gt; 채널의 패키지 는 &lt;code&gt;hab&lt;/code&gt; CLI 에서 &lt;code&gt;--channel&lt;/code&gt; 플래그 를 지정 하거나 &lt;code&gt;HAB_BLDR_CHANNEL&lt;/code&gt; 환경 변수를 불안정한 채널로 설정하지 않는 한 시작하거나 설치할 수 없습니다 . 이는 패키지를 시작, 설치 또는로드 할 때 &lt;code&gt;hab&lt;/code&gt; CLI에서 사용하는 기본 채널 이 &lt;code&gt;stable&lt;/code&gt; 채널 이기 때문 입니다. &lt;code&gt;stable&lt;/code&gt; 채널은 안정성 및 다중 서비스 응용 프로그램이나 서비스에 대한 종속성으로 사용하기에 적합한 기능의 수준을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b0fc2c706a5ded2740ed732f71a552f70bd9fc0d" translate="yes" xml:space="preserve">
          <source>By default, every service joins the &lt;code&gt;service-name.default&lt;/code&gt; service group unless otherwise specified at runtime.</source>
          <target state="translated">기본적으로 모든 서비스는 런타임에 별도로 지정하지 않는 한 &lt;code&gt;service-name.default&lt;/code&gt; 서비스 그룹에 가입합니다 .</target>
        </trans-unit>
        <trans-unit id="dfe252e51e46f6b0f850113bc8c4bfa37a9cd771" translate="yes" xml:space="preserve">
          <source>By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler, then it will be retried with exponential backoff according to the settings</source>
          <target state="translated">기본적으로 작업이 성공적으로 완료되지 않으면 처리기에서 승인이 수신되지 않은 경우 설정에 따라 지수 백오 프로 다시 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="22b2e532feed76b316a23022db2b33a554db75e0" translate="yes" xml:space="preserve">
          <source>By default, it collects the most current log file as well as any others that have been modified in the last 180 minutes. If the &lt;code&gt;--all-logs&lt;/code&gt; option is given, all log files are collected.</source>
          <target state="translated">기본적으로 가장 최근의 로그 파일과 최근 180 분 동안 수정 된 다른 모든 파일을 수집합니다. 는 IF &lt;code&gt;--all-logs&lt;/code&gt; 옵션이 주어 모든 로그 파일이 수집됩니다.</target>
        </trans-unit>
        <trans-unit id="87f5a920758e81f7c92d247c4eaf27fda8361627" translate="yes" xml:space="preserve">
          <source>By default, new plan connections will have auto-build turned off.</source>
          <target state="translated">기본적으로 새 계획 연결은 자동 빌드가 꺼져 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d78770db1347fcf70e806632a9d60abe96f57f4" translate="yes" xml:space="preserve">
          <source>By default, newly uploaded packages are placed in the &lt;code&gt;unstable&lt;/code&gt; channel. However, the default package that is downloaded is the latest &lt;code&gt;stable&lt;/code&gt; version of a package, unless overridden in commands such as &lt;code&gt;hab sup run&lt;/code&gt;, &lt;code&gt;hab svc load&lt;/code&gt;, and &lt;code&gt;hab pkg install&lt;/code&gt;. If you want to promote your package to the &lt;code&gt;stable&lt;/code&gt; channel, run the &lt;code&gt;hab pkg promote&lt;/code&gt; command as follows:</source>
          <target state="translated">기본적으로 새로 업로드 된 패키지는 &lt;code&gt;unstable&lt;/code&gt; 채널에 배치됩니다 . 그러나 다운로드되는 기본 패키지는 &lt;code&gt;hab sup run&lt;/code&gt; , &lt;code&gt;hab svc load&lt;/code&gt; 및 &lt;code&gt;hab pkg install&lt;/code&gt; 과 같은 명령에서 재정의되지 않는 한 &lt;code&gt;stable&lt;/code&gt; 최신 버전의 패키지 입니다. 패키지를 &lt;code&gt;stable&lt;/code&gt; 채널 로 &lt;code&gt;hab pkg promote&lt;/code&gt; 하려면 다음과 같이 hab pkg promote 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="07dcf7be7da4fe72df29d3c4d5b60afd3caf93fa" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a Chef Infra Client run. To run an action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="translated">기본적으로 알림은 &lt;code&gt;:delayed&lt;/code&gt; 입니다 . 즉, 트리거 될 때 대기열에 추가 된 다음 Chef Infra Client 실행이 끝날 때 실행됩니다. 즉시 조치를 실행하려면 &lt;code&gt;:immediately&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="da8483a98e5e5057c87a30ab2a2ca13e8b18f177" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a Chef Infra Client run. To run kan action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="translated">기본적으로 알림은 &lt;code&gt;:delayed&lt;/code&gt; 입니다 . 즉, 트리거 될 때 대기열에 추가 된 다음 Chef Infra Client 실행이 끝날 때 실행됩니다. kan 조치를 즉시 실행하려면 &lt;code&gt;:immediately&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef35f941166c67f18f63df8baa46957dd47f251c" translate="yes" xml:space="preserve">
          <source>By default, notifications are &lt;code&gt;:delayed&lt;/code&gt;, that is they are queued up as they are triggered, and then executed at the very end of a chef-client run. To run an action immediately, use &lt;code&gt;:immediately&lt;/code&gt;:</source>
          <target state="translated">기본적으로 알림은 &lt;code&gt;:delayed&lt;/code&gt; 입니다 . 즉 , 알림이 트리거 될 때 큐에 대기 한 다음 chef-client 실행이 끝날 때 실행됩니다. 조치를 즉시 실행하려면 &lt;code&gt;:immediately&lt;/code&gt; :를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa71c7c3d57a70a6fabbc7d95fa6be595649c616" translate="yes" xml:space="preserve">
          <source>By default, only Admin users of Chef Automate may create and manage Data Feeds.</source>
          <target state="translated">기본적으로 Chef Automate의 관리자 만 데이터 피드를 만들고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="3a6aa43ce47af1ebaf735cf66d7a538c93bcfd75" translate="yes" xml:space="preserve">
          <source>By default, runit will restart services automatically when the services fail. Therefore, runit may report the status of a service as &lt;code&gt;run:&lt;/code&gt; even when there is an issue with that service. When investigating why a particular service is not running as it should be, look for the services with the shortest uptimes. For example, the list below indicates that the &lt;strong&gt;actions&lt;/strong&gt; should be investigated further:</source>
          <target state="translated">기본적으로 runit은 서비스가 실패하면 서비스를 자동으로 다시 시작합니다. 따라서 runit은 해당 서비스에 문제가있는 경우에도 서비스 상태를 &lt;code&gt;run:&lt;/code&gt; 으로보고 할 수 있습니다 . 특정 서비스가 제대로 실행되지 않는 이유를 조사 할 때 가동 시간이 가장 짧은 서비스를 찾으십시오. 예를 들어, 아래 목록은 &lt;strong&gt;조치&lt;/strong&gt; 를 추가로 조사해야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="71133340820cb57c31c7d7ea0d547077b21284bd" translate="yes" xml:space="preserve">
          <source>By default, runit will restart services automatically when the services fail. Therefore, runit may report the status of a service as &lt;code&gt;run:&lt;/code&gt; even when there is an issue with that service. When investigating why a particular service is not running as it should be, look for the services with the shortest uptimes. For example, the list below indicates that the &lt;strong&gt;opscode-erchef&lt;/strong&gt; should be investigated further:</source>
          <target state="translated">기본적으로 runit은 서비스가 실패하면 서비스를 자동으로 다시 시작합니다. 따라서 runit은 해당 서비스에 문제가있는 경우에도 서비스 상태를 &lt;code&gt;run:&lt;/code&gt; 것으로보고 할 수 있습니다 . 특정 서비스가 정상적으로 실행되지 않는 이유를 조사 할 때는 가동 시간이 가장 짧은 서비스를 찾으십시오. 예를 들어 아래 목록은 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 를 추가로 조사해야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5195b2fc741347a5be096f4d45b760e3c4b92a96" translate="yes" xml:space="preserve">
          <source>By default, service groups will trust &lt;em&gt;any&lt;/em&gt; communication, so for a production deployment of Chef Habitat, setting up these relationships is essential.</source>
          <target state="translated">기본적으로 서비스 그룹은 &lt;em&gt;모든&lt;/em&gt; 통신 을 신뢰 하므로 Chef Habitat의 프로덕션 배포를 위해서는 이러한 관계를 설정하는 것이 필수적입니다.</target>
        </trans-unit>
        <trans-unit id="d245f87d35d89131b4577983776e035c3ab8d2cf" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;public_key_read_access&lt;/code&gt; assigns all members of the &lt;code&gt;users&lt;/code&gt; and &lt;code&gt;clients&lt;/code&gt; group permission to these endpoints:</source>
          <target state="translated">기본적으로 &lt;code&gt;public_key_read_access&lt;/code&gt; 는 &lt;code&gt;users&lt;/code&gt; 및 &lt;code&gt;clients&lt;/code&gt; 그룹 의 모든 구성원 에게 다음 엔드 포인트에 대한 권한을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="00e39efed1bb385d469131e33ba2a27c59b95219" translate="yes" xml:space="preserve">
          <source>By default, the &lt;strong&gt;delivery-truck&lt;/strong&gt; cookbook is configured for use with Chef Automate-backed cookbook projects.</source>
          <target state="translated">기본적으로 &lt;strong&gt;배달 트럭&lt;/strong&gt; 쿡북은 Chef Automate 지원 쿡북 프로젝트와 함께 사용하도록 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="fcbd8c180fdf44c1f4b3b9ea7ab6966d109be385" translate="yes" xml:space="preserve">
          <source>By default, the Chef Automate 2 upgrade process will not proceed if your Chef Automate 1 installation does not have backups configured. Invoke the migration using the &lt;code&gt;--skip-backup-check&lt;/code&gt; flag to avoid this check.</source>
          <target state="translated">기본적으로 Chef Automate 1 설치에 백업이 구성되어 있지 않으면 Chef Automate 2 업그레이드 프로세스가 진행되지 않습니다. 이 검사를 방지 &lt;code&gt;--skip-backup-check&lt;/code&gt; 플래그를 사용하여 마이그레이션을 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="589c9cb21f16f8bc8a8ab99cd5d984da113ce0a2" translate="yes" xml:space="preserve">
          <source>By default, the Chef server uses the FQDN to determine the common name (&lt;code&gt;CN&lt;/code&gt;). If the FQDN of the Chef server is longer than 64 characters, the &lt;code&gt;reconfigure&lt;/code&gt; command will not fail, but an empty certificate file will be created. Nginx will not start if a certificate file is empty.</source>
          <target state="translated">기본적으로 Chef 서버는 FQDN을 사용하여 공통 이름 ( &lt;code&gt;CN&lt;/code&gt; ) 을 결정합니다 . Chef 서버의 FQDN이 64자를 초과하면 &lt;code&gt;reconfigure&lt;/code&gt; 명령이 실패하지 않지만 빈 인증서 파일이 작성됩니다. 인증서 파일이 비어 있으면 Nginx가 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6cad4c5aa880998056843b216cd90c7598b924f6" translate="yes" xml:space="preserve">
          <source>By default, the Studio is reset to a clean state after the package is built; however, &lt;em&gt;if you are using the Linux version of &lt;code&gt;hab&lt;/code&gt;&lt;/em&gt;, you can reuse a previous Studio when building your package by specifying the &lt;code&gt;-R&lt;/code&gt; option when calling the &lt;code&gt;hab pkg build&lt;/code&gt; subcommand.</source>
          <target state="translated">기본적으로 Studio는 패키지가 빌드 된 후 깨끗한 상태로 재설정됩니다. 그러나 &lt;em&gt;Linux 버전의 &lt;code&gt;hab&lt;/code&gt; 를&lt;/em&gt;&lt;em&gt; 사용&lt;/em&gt; 하는 경우 &lt;code&gt;hab pkg build&lt;/code&gt; 하위 명령을 호출 할 때 &lt;code&gt;-R&lt;/code&gt; 옵션 을 지정하여 패키지를 빌드 할 때 이전 Studio를 재사용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2855d3be06ffec12ea8b8589c1045171ba706d4a" translate="yes" xml:space="preserve">
          <source>By default, the Supervisor&amp;rsquo;s &amp;ldquo;control gateway&amp;rdquo; listens on the &lt;code&gt;127.0.0.1&lt;/code&gt; interface for incoming commands. This means that it can only receive commands from the same machine, and not from remote clients. If you wish to control a Supervisor remotely, you&amp;rsquo;ll have to start the Supervisor setting its &lt;code&gt;--listen-ctl&lt;/code&gt; option to an appropriate interface and port (9632 is the default control gateway port):</source>
          <target state="translated">기본적으로 수퍼바이저의 &quot;제어 게이트웨이&quot; 는 수신 명령을 &lt;code&gt;127.0.0.1&lt;/code&gt; 인터페이스에서 수신합니다. 즉, 원격 클라이언트가 아닌 동일한 시스템에서만 명령을 수신 할 수 있습니다. Supervisor를 원격으로 제어하려면 &lt;code&gt;--listen-ctl&lt;/code&gt; 옵션을 적절한 인터페이스 및 포트로 설정하여 Supervisor를 시작해야합니다 (9632가 기본 제어 게이트웨이 포트 임).</target>
        </trans-unit>
        <trans-unit id="7dee108fcba5e05c3066f09a2959fa986ac5ee48" translate="yes" xml:space="preserve">
          <source>By default, the delivery-truck cookbook is configured for use with Chef Automate-backed cookbook projects.</source>
          <target state="translated">기본적으로 배달 트럭 쿡북은 Chef Automate 지원 쿡북 프로젝트와 함께 사용하도록 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="766761c3060b16984b288b0d0a5b0d539b15b784" translate="yes" xml:space="preserve">
          <source>By default, the solver selection depends on your environment. When the &lt;code&gt;dep_selector&lt;/code&gt; gem is installed, as in the case of Chef Workstation, the &lt;code&gt;gecode&lt;/code&gt; solver is used. Otherwise, the &lt;code&gt;ruby&lt;/code&gt; solver is utilized by default.</source>
          <target state="translated">기본적으로 솔버 선택은 환경에 따라 다릅니다. 때 &lt;code&gt;dep_selector&lt;/code&gt; 의 보석이 설치되어 요리사 워크 스테이션의 경우와 같이, &lt;code&gt;gecode&lt;/code&gt; 의 해석이 사용됩니다. 그렇지 않으면 기본적으로 &lt;code&gt;ruby&lt;/code&gt; 솔버가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d97a177f245efffc199d16fdbd57a8cc5afea2ec" translate="yes" xml:space="preserve">
          <source>By default, the table rows sort from the smallest to the largest percentage of &amp;ldquo;OK&amp;rdquo; services. Selecting the &lt;em&gt;Health&lt;/em&gt; column reverses the order, and displays the percentage of &amp;ldquo;OK&amp;rdquo; services from largest to smallest.</source>
          <target state="translated">기본적으로 테이블 행은 &quot;OK&quot;서비스의 최소 비율에서 최대 비율로 정렬됩니다. &lt;em&gt;Health&lt;/em&gt; 열을 선택하면 순서가 바뀌고 &quot;OK&quot;서비스의 백분율이 가장 큰 것에서 가장 작은 것까지 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ad6b1930c186bf3f39a72d7902f8670aef48798e" translate="yes" xml:space="preserve">
          <source>By default, this command communicates with your running Chef Automate installation to list the backups. If the Chef Automate installation is down, you can still list the backups.</source>
          <target state="translated">기본적으로이 명령은 실행중인 Chef Automate 설치와 통신하여 백업을 나열합니다. Chef Automate 설치가 중단 된 경우에도 백업을 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48abd51959093623111d5a222cc28b5ea1050ca4" translate="yes" xml:space="preserve">
          <source>By defining multiple paths for multiple locations:</source>
          <target state="translated">여러 위치에 대한 여러 경로를 정의하여 :</target>
        </trans-unit>
        <trans-unit id="67ebd7e78051f9281ced1a6cbe0afd0e4a0060a6" translate="yes" xml:space="preserve">
          <source>By defining those same multiple paths as an array:</source>
          <target state="translated">배열과 동일한 여러 경로를 정의하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="df6a87a67cffa70410559f677f9deb9355017b83" translate="yes" xml:space="preserve">
          <source>By downloading Chef Infra Client to the target node, and then running the Microsoft Installer Package (MSI) locally</source>
          <target state="translated">Chef Infra Client를 대상 노드에 다운로드 한 다음 MSI (Microsoft Installer Package)를 로컬로 실행</target>
        </trans-unit>
        <trans-unit id="54cfca649e0c8ba9b58e8082aab63c23e4f20683" translate="yes" xml:space="preserve">
          <source>By downloading the chef-client to the target node, and then running the Microsoft Installer Package (MSI) locally</source>
          <target state="translated">chef-client를 대상 노드로 다운로드 한 다음 로컬로 MSI (Microsoft Installer Package)를 실행</target>
        </trans-unit>
        <trans-unit id="10e8f4f7b75d0467b9c8fd1afa8782e175b5b65c" translate="yes" xml:space="preserve">
          <source>By editing the &lt;code&gt;chef_environment&lt;/code&gt; directly using knife or the Chef management console</source>
          <target state="translated">knife 또는 Chef 관리 콘솔을 사용하여 직접 &lt;code&gt;chef_environment&lt;/code&gt; 편집</target>
        </trans-unit>
        <trans-unit id="630d2f93884bd545008634772ca1cbc8954959af" translate="yes" xml:space="preserve">
          <source>By editing the &lt;code&gt;environment&lt;/code&gt; configuration details in the client.rb file, and then using &lt;code&gt;knife bootstrap -e environment_name&lt;/code&gt; to bootstrap the changes to the specified environment</source>
          <target state="translated">client.rb 파일에서 &lt;code&gt;environment&lt;/code&gt; 구성 세부 정보 를 편집 한 다음 &lt;code&gt;knife bootstrap -e environment_name&lt;/code&gt; 을 사용 하여 지정된 환경에 대한 변경 사항을 부트 스트랩합니다.</target>
        </trans-unit>
        <trans-unit id="f9b9ab365481633d69526f5c027b2a66d544d2d1" translate="yes" xml:space="preserve">
          <source>By itself (i.e. a chef-client run that does not build the resource collection or converge the node)</source>
          <target state="translated">자체적으로 (예 : 자원 수집을 구축하거나 노드를 수렴하지 않는 요리사 클라이언트 실행)</target>
        </trans-unit>
        <trans-unit id="765d055727735c29d2cea8848cc5579e3f878993" translate="yes" xml:space="preserve">
          <source>By now we should have a full set of base packages that have been built using Chef Habitat packages. These should be suitable for use when building other packages. As a final cleanup:</source>
          <target state="translated">이제 Chef Habitat 패키지를 사용하여 빌드 된 전체 기본 패키지 세트가 있어야합니다. 다른 패키지를 빌드 할 때 사용하기에 적합해야합니다. 최종 정리 :</target>
        </trans-unit>
        <trans-unit id="ea4100669136136721164d360b9686d3e0f0e325" translate="yes" xml:space="preserve">
          <source>By organization. A webhook that is specified at the organization level enables Slack notifications for all projects that belong to that organization.</source>
          <target state="translated">조직 별. 조직 수준에서 지정된 웹훅은 해당 조직에 속한 모든 프로젝트에 대해 Slack 알림을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="aa6dcf759db2708a5cd0a0b7b24159679de7a345" translate="yes" xml:space="preserve">
          <source>By project. A webhook that is specified at the project level enables Slack notifications only for that project.</source>
          <target state="translated">프로젝트 별. 프로젝트 수준에서 지정된 웹훅은 해당 프로젝트에 대해서만 Slack 알림을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="66ecd12fb29d25bc1c1ea3b2acc69b33655387ae" translate="yes" xml:space="preserve">
          <source>By service role, access requirements are as follows:</source>
          <target state="translated">서비스 역할 별 액세스 요구 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0a20345f58c49e3d4e7adc58d63cb40a9e7cbbf1" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;environment&lt;/code&gt; configuration entry in the client.rb file ; when Chef Infra Client runs, it will pick up the value and then set the &lt;code&gt;chef_environment&lt;/code&gt; attribute of the node</source>
          <target state="translated">client.rb 파일에서 &lt;code&gt;environment&lt;/code&gt; 구성 항목 을 설정 합니다. Chef Infra Client가 실행되면 값을 선택한 다음 노드 의 &lt;code&gt;chef_environment&lt;/code&gt; 속성 을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="7837e72973ea6d1778e65e90a327e758c6ec5a40" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;pkg_scaffolding&lt;/code&gt; variable in your plan, Chef Habitat will pull in the necessary package dependencies, run the build steps for Chef Infra and/or Chef InSpec, and provide you with a Chef Habitat artifact that contains your cookbooks or profiles and a way to run them on your systems.</source>
          <target state="translated">계획에서 &lt;code&gt;pkg_scaffolding&lt;/code&gt; 변수 를 지정하면 Chef Habitat은 필요한 패키지 종속성을 가져오고 Chef Infra 및 / 또는 Chef InSpec에 대한 빌드 단계를 실행하며 쿡북 또는 프로필이 포함 된 Chef Habitat 아티팩트를 제공합니다. 시스템에서 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="e3dffbdfb7383eedc12ebf14765c34e19c81bd8d" translate="yes" xml:space="preserve">
          <source>By specifying the configuration setting directly within the &lt;code&gt;def&lt;/code&gt; Ruby blocks using either &lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt; or &lt;code&gt;config[:setting_name]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt; 또는 &lt;code&gt;config[:setting_name]&lt;/code&gt; 사용하여 &lt;code&gt;def&lt;/code&gt; Ruby 블록 내에서 직접 구성 설정을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="0698f5f15d41ca0e9e48bc71228d09cd085acc4f" translate="yes" xml:space="preserve">
          <source>By specifying the path to a valid Windows PowerShell data file</source>
          <target state="translated">유효한 Windows PowerShell 데이터 파일의 경로를 지정하여</target>
        </trans-unit>
        <trans-unit id="75dbe76292db6dc593b3edf58eae16fbfc4d3115" translate="yes" xml:space="preserve">
          <source>By starting a few Supervisors in the network using the &lt;code&gt;--permanent-peer&lt;/code&gt; option, an additional bit of information is gossipped about these Supervisors. In effect, it tells all other Supervisors it communicates with to &lt;em&gt;always&lt;/em&gt; try to reestablish contact with it, even if that Supervisor considers the &amp;ldquo;permanent&amp;rdquo; Supervisor to be dead. This provides a mechanism by which split networks can stitch themselves together again after the split has been resolved.</source>
          <target state="translated">&lt;code&gt;--permanent-peer&lt;/code&gt; 옵션을 사용하여 네트워크에서 몇 명의 수퍼바이저를 시작하면 이러한 수퍼바이저에 대한 추가 정보가 수집됩니다. 사실상, 이는 해당 감독자가 &quot;영구&quot;감독자가 사망 한 것으로 간주하더라도 &lt;em&gt;항상&lt;/em&gt; 연락을 다시 시도하도록 통신하는 다른 모든 감독자에게 알립니다 . 이는 분할이 해결 된 후 분할 된 네트워크가 다시 함께 연결될 수있는 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c1b93d519bf2f31ed0c552cbc2d796513f5ed6fc" translate="yes" xml:space="preserve">
          <source>By the time you get the new node is up, the secondary back-end server may have taken itself into &lt;code&gt;standalone&lt;/code&gt; mode, which means that it is no longer listening on the network port. In this situation, run the following commands to get the secondary back-end server to talk to the new node:</source>
          <target state="translated">새 노드가 가동 될 때 보조 백엔드 서버가 &lt;code&gt;standalone&lt;/code&gt; 모드 로 전환 되어 더 이상 네트워크 포트에서 수신 대기하지 않을 수 있습니다. 이 상황에서 다음 명령을 실행하여 보조 백엔드 서버가 새 노드와 통신하게하십시오.</target>
        </trans-unit>
        <trans-unit id="e0f546d831a7122f39b5e308d26dfcf03fe0c39b" translate="yes" xml:space="preserve">
          <source>By using FTP:</source>
          <target state="translated">FTP를 사용하여 :</target>
        </trans-unit>
        <trans-unit id="34a18faf5ac33deb27029ea8be53a044a861d735" translate="yes" xml:space="preserve">
          <source>By using Ruby or JSON files that are stored in a version source control system. These files are pushed to the Chef Infra Server using the &lt;code&gt;knife environment&lt;/code&gt; subcommand and the &lt;code&gt;from file&lt;/code&gt; argument. This approach allows environment data to be dynamically generated. This approach will not work unless these files are defined in the proper format&amp;mdash;Ruby file end with &lt;code&gt;.rb&lt;/code&gt;; JSON files end with &lt;code&gt;.json&lt;/code&gt;.</source>
          <target state="translated">버전 소스 제어 시스템에 저장된 Ruby 또는 JSON 파일을 사용합니다. 이러한 파일은 &lt;code&gt;knife environment&lt;/code&gt; 하위 명령과 &lt;code&gt;from file&lt;/code&gt; 인수를 사용하여 Chef Infra Server로 푸시됩니다 . 이 접근 방식을 통해 환경 데이터를 동적으로 생성 할 수 있습니다. 이 방법은 이러한 파일이 올바른 형식 (Ruby 파일이 &lt;code&gt;.rb&lt;/code&gt; 로 끝남)으로 정의되어 있지 않으면 작동하지 않습니다 . JSON 파일은 &lt;code&gt;.json&lt;/code&gt; 으로 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="329102ec802b05b7c1888b42b42515c1dff62f9b" translate="yes" xml:space="preserve">
          <source>By using SFTP:</source>
          <target state="translated">SFTP 사용 :</target>
        </trans-unit>
        <trans-unit id="39bd9acbfc114872b50d83381ea2b800f8294aa6" translate="yes" xml:space="preserve">
          <source>By using a Microsoft Windows UNC:</source>
          <target state="translated">Microsoft Windows UNC를 사용하여 :</target>
        </trans-unit>
        <trans-unit id="f9e9b3165d3a4be4136e2d1a23f57926f630bb14" translate="yes" xml:space="preserve">
          <source>By using a local path:</source>
          <target state="translated">로컬 경로를 사용하여 :</target>
        </trans-unit>
        <trans-unit id="0ef630d370e814978b923822cd9fb13a3c896328" translate="yes" xml:space="preserve">
          <source>By using a node attribute:</source>
          <target state="translated">노드 속성을 사용하여 :</target>
        </trans-unit>
        <trans-unit id="932fec424a7307d12dad0333a80c03453bcd6ec9" translate="yes" xml:space="preserve">
          <source>By using an existing process already in place for managing Microsoft Windows machines, such as System Center</source>
          <target state="translated">System Center와 같은 Microsoft Windows 시스템을 관리하기 위해 기존 프로세스를 이미 사용함으로써</target>
        </trans-unit>
        <trans-unit id="b4e0de7c041ecee0deabf84042982a2abf9202d9" translate="yes" xml:space="preserve">
          <source>By using attributes to define paths:</source>
          <target state="translated">속성을 사용하여 경로를 정의하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7b68b5388a07324fe03c3bc88b715bbd79cdcb1f" translate="yes" xml:space="preserve">
          <source>By using both channels and either the &lt;code&gt;at-once&lt;/code&gt; or &lt;code&gt;rolling&lt;/code&gt;&lt;a href=&quot;#using-updates&quot;&gt;update strategies&lt;/a&gt;, you can automatically update packages in a given channel as shown below:</source>
          <target state="translated">두 채널과 &lt;code&gt;at-once&lt;/code&gt; 또는 &lt;code&gt;rolling&lt;/code&gt; &lt;a href=&quot;#using-updates&quot;&gt;업데이트 전략&lt;/a&gt; 을 사용하면 아래와 같이 지정된 채널의 패키지를 자동으로 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="917c22860abe3528157f50af186c4c4c2da2c883" translate="yes" xml:space="preserve">
          <source>By using knife and passing the &lt;code&gt;-E ENVIRONMENT_NAME&lt;/code&gt; option with &lt;code&gt;knife cookbook upload&lt;/code&gt;</source>
          <target state="translated">knife를 사용 하고 &lt;code&gt;knife cookbook upload&lt;/code&gt; 와 함께 &lt;code&gt;-E ENVIRONMENT_NAME&lt;/code&gt; 옵션을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="4aeccb08175d2214f545f84dcc2aa22b9e51da21" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;../resources/chef_handler/index&quot;&gt;chef_handler&lt;/a&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">다음과 유사한 레시피에서 &lt;a href=&quot;../resources/chef_handler/index&quot;&gt;chef_handler&lt;/a&gt; 리소스 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="81216f09c01384a7f53937edba6154a5cd115829" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler&lt;/a&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">사용하여 &lt;a href=&quot;resource_chef_handler&quot;&gt;chef_handler에&lt;/a&gt; 다음과 유사한 조리법에 자원을 :</target>
        </trans-unit>
        <trans-unit id="3bab289fa38efb5ab8a78a233bd266e5d001f3ab" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;:proc&lt;/code&gt; attribute of the &lt;code&gt;option&lt;/code&gt; method and code that references &lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;option&lt;/code&gt; 메서드 의 &lt;code&gt;:proc&lt;/code&gt; 속성 및 &lt;code&gt;Chef::Config[:knife][:setting_name]&lt;/code&gt; 을 참조하는 코드 사용</target>
        </trans-unit>
        <trans-unit id="8b0c7213b5b8e6677784b23e773856dd6243bae3" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;chef_handler&lt;/code&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">다음과 유사한 레시피에서 &lt;code&gt;chef_handler&lt;/code&gt; 리소스 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="573999d93c72797e6db40a1e2dfa25478dd37344" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data&lt;/code&gt; attribute</source>
          <target state="translated">&lt;code&gt;configuration_data&lt;/code&gt; 속성 을 사용하여</target>
        </trans-unit>
        <trans-unit id="27f2798d154d06e1e10a1c3fed3759c63f53d663" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;configuration_data_script&lt;/code&gt; attribute</source>
          <target state="translated">&lt;code&gt;configuration_data_script&lt;/code&gt; 속성 을 사용하여</target>
        </trans-unit>
        <trans-unit id="3f847c3cd7c2fa4f211c2ed8648f8ee9ad0f24a9" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;knife edit&lt;/code&gt; and &lt;code&gt;knife exec&lt;/code&gt; subcommands</source>
          <target state="translated">사용하여 &lt;code&gt;knife edit&lt;/code&gt; 및 &lt;code&gt;knife exec&lt;/code&gt; 하위 명령을</target>
        </trans-unit>
        <trans-unit id="9b99b0cb8fc12026c9984c49701d01eb96667178" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;render&lt;/code&gt; method in the template file</source>
          <target state="translated">템플릿 파일에서 &lt;code&gt;render&lt;/code&gt; 메소드 를 사용하여</target>
        </trans-unit>
        <trans-unit id="1de8e85d6a034daf568f9525632a018f4cdd6a96" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;chef_handler&lt;/strong&gt; resource in a recipe, similar to the following:</source>
          <target state="translated">사용하여 &lt;strong&gt;chef_handler에&lt;/strong&gt; 다음과 유사한 조리법에 자원을 :</target>
        </trans-unit>
        <trans-unit id="8c043fa42df9d01a7ed495ec7adc3e44e71355a6" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;template&lt;/strong&gt; resource and the &lt;code&gt;variables&lt;/code&gt; property.</source>
          <target state="translated">사용하여 &lt;strong&gt;템플릿&lt;/strong&gt; 자원과 &lt;code&gt;variables&lt;/code&gt; 속성을.</target>
        </trans-unit>
        <trans-unit id="33ecd3843b844d7c6c4b8eabf432c192a1af7d7c" translate="yes" xml:space="preserve">
          <source>By using the knife windows plugin to bootstrap the chef-client; this process requires the target node be available via SSH (port 22) or by using the HTTP or HTTPS ports that are required by WinRM</source>
          <target state="translated">knife windows 플러그인을 사용하여 요리사 클라이언트를 부트 스트랩합니다. 이 프로세스에서는 SSH (포트 22)를 통해 또는 WinRM에 필요한 HTTP 또는 HTTPS 포트를 사용하여 대상 노드를 사용할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="45ff9d4fbf725749ddde320b5e3cbb4d5df5af28" translate="yes" xml:space="preserve">
          <source>Bypass a prompt in the terminal and agree that you want to disable the Chef Infra Server, and require credential rotation.</source>
          <target state="translated">터미널에서 프롬프트를 무시하고 Chef Infra Server를 비활성화하고 자격 증명 교체가 필요하다는 데 동의합니다.</target>
        </trans-unit>
        <trans-unit id="979b5fd223f38d19edf509197e67fb7103245c3e" translate="yes" xml:space="preserve">
          <source>Bypass a prompt in the terminal and agree that you want to disable the Chef server, and require credential rotation.</source>
          <target state="translated">터미널에서 프롬프트를 무시하고 Chef 서버를 비활성화하고 자격 증명 교체가 필요하다는 데 동의합니다.</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b0ce13d52036e2a17b9d3f7ce2f71421509410c8" translate="yes" xml:space="preserve">
          <source>C compiler options.</source>
          <target state="translated">C 컴파일러 옵션.</target>
        </trans-unit>
        <trans-unit id="0b107c0b8e762b7b67494ef342f89466d2bd1563" translate="yes" xml:space="preserve">
          <source>C linker options.</source>
          <target state="translated">C 링커 옵션.</target>
        </trans-unit>
        <trans-unit id="a508f3e058a535c5ceccec3db5300e2eb059584d" translate="yes" xml:space="preserve">
          <source>CAA</source>
          <target state="translated">CAA</target>
        </trans-unit>
        <trans-unit id="d166f3f49c385e768dcb613c72ca776ca60de885" translate="yes" xml:space="preserve">
          <source>CACHE_PATH</source>
          <target state="translated">CACHE_PATH</target>
        </trans-unit>
        <trans-unit id="f6bf0dd46d24d7a5a24454aac6c60a28344f72b9" translate="yes" xml:space="preserve">
          <source>CALICO</source>
          <target state="translated">CALICO</target>
        </trans-unit>
        <trans-unit id="c80211fd3da3c28a41840f34df3169e707409790" translate="yes" xml:space="preserve">
          <source>CCRs/min</source>
          <target state="translated">CCRs/min</target>
        </trans-unit>
        <trans-unit id="b77da9422330fead9ab9ec32fbbd59bb9d5fc19a" translate="yes" xml:space="preserve">
          <source>CE</source>
          <target state="translated">CE</target>
        </trans-unit>
        <trans-unit id="e51495f07605bb64c53a74856ae29c9caa38ea53" translate="yes" xml:space="preserve">
          <source>CFG</source>
          <target state="translated">CFG</target>
        </trans-unit>
        <trans-unit id="aabe04d0ee1e6511da67c8f24ba2db3493a705bc" translate="yes" xml:space="preserve">
          <source>CFLAGS</source>
          <target state="translated">CFLAGS</target>
        </trans-unit>
        <trans-unit id="2c5d206fbf972f35e3c68d2a5190e7dd0f68abce" translate="yes" xml:space="preserve">
          <source>CHEF-0</source>
          <target state="translated">CHEF-0</target>
        </trans-unit>
        <trans-unit id="dd482942d45ba3ae3a4def50e4340cc1a8f9a48c" translate="yes" xml:space="preserve">
          <source>CHEF-1</source>
          <target state="translated">CHEF-1</target>
        </trans-unit>
        <trans-unit id="4b840201a1063f4bbcde0e56b2be374ccbba3061" translate="yes" xml:space="preserve">
          <source>CHEF-10</source>
          <target state="translated">CHEF-10</target>
        </trans-unit>
        <trans-unit id="f8d23210f0041b2636091f10b1233588b32dbca5" translate="yes" xml:space="preserve">
          <source>CHEF-11</source>
          <target state="translated">CHEF-11</target>
        </trans-unit>
        <trans-unit id="ef1383244e5edf15055ef4d5282df7ce3eef511e" translate="yes" xml:space="preserve">
          <source>CHEF-12</source>
          <target state="translated">CHEF-12</target>
        </trans-unit>
        <trans-unit id="fd5d34c196e5e93e5b79b1d20d285a142c51cf9c" translate="yes" xml:space="preserve">
          <source>CHEF-13</source>
          <target state="translated">CHEF-13</target>
        </trans-unit>
        <trans-unit id="9801b328e969240ba83960ec6eeafcdd1700159b" translate="yes" xml:space="preserve">
          <source>CHEF-14</source>
          <target state="translated">CHEF-14</target>
        </trans-unit>
        <trans-unit id="23f6b7d933cf4293987ab4f393a6454793c7d015" translate="yes" xml:space="preserve">
          <source>CHEF-18</source>
          <target state="translated">CHEF-18</target>
        </trans-unit>
        <trans-unit id="369b1248df7cc75fa08cf75311340cf501f86e9c" translate="yes" xml:space="preserve">
          <source>CHEF-19</source>
          <target state="translated">CHEF-19</target>
        </trans-unit>
        <trans-unit id="53162e0123c797231fe84cdd523ec6c80db323e7" translate="yes" xml:space="preserve">
          <source>CHEF-2</source>
          <target state="translated">CHEF-2</target>
        </trans-unit>
        <trans-unit id="c1bd7296a0a72d48d993e7bf0c6ef656269adba0" translate="yes" xml:space="preserve">
          <source>CHEF-20</source>
          <target state="translated">CHEF-20</target>
        </trans-unit>
        <trans-unit id="f3c47839cece7183c262845b503cc0799efdd680" translate="yes" xml:space="preserve">
          <source>CHEF-21</source>
          <target state="translated">CHEF-21</target>
        </trans-unit>
        <trans-unit id="d035b267b8753c219b3de133c28ee65493a059e7" translate="yes" xml:space="preserve">
          <source>CHEF-22</source>
          <target state="translated">CHEF-22</target>
        </trans-unit>
        <trans-unit id="9d2bc3a8322234c91f913b8964f5cfe0f2e2574c" translate="yes" xml:space="preserve">
          <source>CHEF-23</source>
          <target state="translated">CHEF-23</target>
        </trans-unit>
        <trans-unit id="87d878efca44eda4ec8ed7ff80329d0ba760cd55" translate="yes" xml:space="preserve">
          <source>CHEF-24</source>
          <target state="translated">CHEF-24</target>
        </trans-unit>
        <trans-unit id="f6e9100dd691f75c37fb2912097cf0aaf66c0710" translate="yes" xml:space="preserve">
          <source>CHEF-25</source>
          <target state="translated">CHEF-25</target>
        </trans-unit>
        <trans-unit id="66bb42e338ee66ae6271b6e47a5152c05ae48e51" translate="yes" xml:space="preserve">
          <source>CHEF-27</source>
          <target state="translated">CHEF-27</target>
        </trans-unit>
        <trans-unit id="ce6d3eb798a486cdac676511b401bc166fe70fe8" translate="yes" xml:space="preserve">
          <source>CHEF-3</source>
          <target state="translated">CHEF-3</target>
        </trans-unit>
        <trans-unit id="a5672de776c2ce56409b1f632cfef055ffd1d0a8" translate="yes" xml:space="preserve">
          <source>CHEF-31</source>
          <target state="translated">CHEF-31</target>
        </trans-unit>
        <trans-unit id="4fc7629f1470fea7930846a434d85ce5addc523c" translate="yes" xml:space="preserve">
          <source>CHEF-3694</source>
          <target state="translated">CHEF-3694</target>
        </trans-unit>
        <trans-unit id="aaa08af2461a1f34c16372483db78acdca6c3798" translate="yes" xml:space="preserve">
          <source>CHEF-4</source>
          <target state="translated">CHEF-4</target>
        </trans-unit>
        <trans-unit id="1e07930fc6fd96792d2f8c518b9ebe200dc7eef0" translate="yes" xml:space="preserve">
          <source>CHEF-5</source>
          <target state="translated">CHEF-5</target>
        </trans-unit>
        <trans-unit id="d2c9f40be8a8561298ea5dd621782e51a4c77c18" translate="yes" xml:space="preserve">
          <source>CHEF-6</source>
          <target state="translated">CHEF-6</target>
        </trans-unit>
        <trans-unit id="d1e87a7e9a2718740c854d2d4aedfbb684c72ea8" translate="yes" xml:space="preserve">
          <source>CHEF-7</source>
          <target state="translated">CHEF-7</target>
        </trans-unit>
        <trans-unit id="f921de7ea361c928e75aa9a5926b5b07bb8545b0" translate="yes" xml:space="preserve">
          <source>CHEF-8</source>
          <target state="translated">CHEF-8</target>
        </trans-unit>
        <trans-unit id="dd1628ac3648a0bfe14323a2b48a5110348c930a" translate="yes" xml:space="preserve">
          <source>CHEF-9</source>
          <target state="translated">CHEF-9</target>
        </trans-unit>
        <trans-unit id="b66e7f4c814ecc489a14a223784920bddd8bac26" translate="yes" xml:space="preserve">
          <source>CHEFINT001</source>
          <target state="translated">CHEFINT001</target>
        </trans-unit>
        <trans-unit id="32884eac9170df6cd8d6eafb221541410e3a32c6" translate="yes" xml:space="preserve">
          <source>CHEFTRN007</source>
          <target state="translated">CHEFTRN007</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="96636ec44fcb4fae1a227c6dfd7095c095fd4810" translate="yes" xml:space="preserve">
          <source>CLI &lt;code&gt;--input-file&lt;/code&gt; option</source>
          <target state="translated">CLI &lt;code&gt;--input-file&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="de9704e9a3138d55d4803b008f48e57a92514b12" translate="yes" xml:space="preserve">
          <source>CLI &lt;code&gt;--input&lt;/code&gt; option</source>
          <target state="translated">CLI &lt;code&gt;--input&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="26f58ae8e7df3630f48327b4d920811cdb236252" translate="yes" xml:space="preserve">
          <source>CLI flag</source>
          <target state="translated">CLI 플래그</target>
        </trans-unit>
        <trans-unit id="6aa149d2af33a27f542e8e0ee0925ff1ef571a9b" translate="yes" xml:space="preserve">
          <source>CLI-input-file-set inputs have a priority of 40.</source>
          <target state="translated">CLI 입력 파일 세트 입력의 우선 순위는 40입니다.</target>
        </trans-unit>
        <trans-unit id="6a96ca016ff87da4896eb5893807f498f6ef0740" translate="yes" xml:space="preserve">
          <source>CLI-set inputs have a priority of 50.</source>
          <target state="translated">CLI 세트 입력의 우선 순위는 50입니다.</target>
        </trans-unit>
        <trans-unit id="289fd6dd86c78fc18484670bd5337ffc1457b23f" translate="yes" xml:space="preserve">
          <source>CLIENT</source>
          <target state="translated">CLIENT</target>
        </trans-unit>
        <trans-unit id="4895924a2f45b1656d7a65b3bcd5638d1d737a40" translate="yes" xml:space="preserve">
          <source>CLIENT*IP_PORT_PROTO</source>
          <target state="translated">CLIENT*IP_PORT_PROTO</target>
        </trans-unit>
        <trans-unit id="fd175b3eb019d7a002c4874d6f9e2fdfcd322428" translate="yes" xml:space="preserve">
          <source>CLIENT*IP_PROTO</source>
          <target state="translated">CLIENT*IP_PROTO</target>
        </trans-unit>
        <trans-unit id="3606e6da0a34ea998e376bd42c1883d9d234df74" translate="yes" xml:space="preserve">
          <source>CLIENT_IP</source>
          <target state="translated">CLIENT_IP</target>
        </trans-unit>
        <trans-unit id="bdce8de2a77f502564fe40f4fb8398ddf26e65be" translate="yes" xml:space="preserve">
          <source>CLIENT_IP_PORT_PROTO</source>
          <target state="translated">CLIENT_IP_PORT_PROTO</target>
        </trans-unit>
        <trans-unit id="a9a6936e211afc54f3f31780c8c1cad39f14202c" translate="yes" xml:space="preserve">
          <source>CLIENT_IP_PROTO</source>
          <target state="translated">CLIENT_IP_PROTO</target>
        </trans-unit>
        <trans-unit id="f3ee8d637030418766d6b09f471754cb1dca5875" translate="yes" xml:space="preserve">
          <source>CLOUD_FUNCTION_STATUS_UNSPECIFIED</source>
          <target state="translated">CLOUD_FUNCTION_STATUS_UNSPECIFIED</target>
        </trans-unit>
        <trans-unit id="3d8899b30b6e106d7569d720518fe8abe7b499e8" translate="yes" xml:space="preserve">
          <source>CLOUD_SQL_INSTANCE</source>
          <target state="translated">CLOUD_SQL_INSTANCE</target>
        </trans-unit>
        <trans-unit id="b9c1aaaf65573c7e15b93b6d826729e7711cf242" translate="yes" xml:space="preserve">
          <source>CNAME</source>
          <target state="translated">CNAME</target>
        </trans-unit>
        <trans-unit id="d57ab216d6da031d6c757645b6b95721d49f0416" translate="yes" xml:space="preserve">
          <source>COLDLINE</source>
          <target state="translated">COLDLINE</target>
        </trans-unit>
        <trans-unit id="402978c149e8044dec8af025fe93b360bc5163b5" translate="yes" xml:space="preserve">
          <source>COMMENTS_DISABLED</source>
          <target state="translated">COMMENTS_DISABLED</target>
        </trans-unit>
        <trans-unit id="2a6e8038d867cbb3adf991f420eedcf7d0fbb6bc" translate="yes" xml:space="preserve">
          <source>COMMENTS_ENABLED</source>
          <target state="translated">COMMENTS_ENABLED</target>
        </trans-unit>
        <trans-unit id="169c22cf3e89b382b7f7b4db658675a8e71ff2e4" translate="yes" xml:space="preserve">
          <source>COMPARISON_EQ</source>
          <target state="translated">COMPARISON_EQ</target>
        </trans-unit>
        <trans-unit id="a9ee1b84638fc6dff0e93345adcf6b82c4679e4d" translate="yes" xml:space="preserve">
          <source>COMPARISON_GE</source>
          <target state="translated">COMPARISON_GE</target>
        </trans-unit>
        <trans-unit id="ae3350e10bd0b58f3de44535c426c03a35f3b0e6" translate="yes" xml:space="preserve">
          <source>COMPARISON_GT</source>
          <target state="translated">COMPARISON_GT</target>
        </trans-unit>
        <trans-unit id="d590895c68cb17da4cd5d8dc096f329b28947f66" translate="yes" xml:space="preserve">
          <source>COMPARISON_LE</source>
          <target state="translated">COMPARISON_LE</target>
        </trans-unit>
        <trans-unit id="fcaa1fca9d0dc0293973c9d547569151e9ef8361" translate="yes" xml:space="preserve">
          <source>COMPARISON_LT</source>
          <target state="translated">COMPARISON_LT</target>
        </trans-unit>
        <trans-unit id="f4c1e49fd8a929896755a74a55057c4d137ca08f" translate="yes" xml:space="preserve">
          <source>COMPARISON_NE</source>
          <target state="translated">COMPARISON_NE</target>
        </trans-unit>
        <trans-unit id="e2dfd7127d921c8f5981d3f2fa051788321b0ef1" translate="yes" xml:space="preserve">
          <source>COMPATIBLE</source>
          <target state="translated">COMPATIBLE</target>
        </trans-unit>
        <trans-unit id="b4c069e0954c23bf9b630a463f1347b16745bbd2" translate="yes" xml:space="preserve">
          <source>COMPONENT_UNSPECIFIED</source>
          <target state="translated">COMPONENT_UNSPECIFIED</target>
        </trans-unit>
        <trans-unit id="adecadb5b80d5b6a9956deb015022038a15d7c21" translate="yes" xml:space="preserve">
          <source>CONNECTION</source>
          <target state="translated">CONNECTION</target>
        </trans-unit>
        <trans-unit id="ff221d4752ce05f5a91bbf1d28b78a7bf7e2ddaa" translate="yes" xml:space="preserve">
          <source>CPU</source>
          <target state="translated">CPU</target>
        </trans-unit>
        <trans-unit id="71f0f4da2e0f035e4478025bcf5334667baeb4b0" translate="yes" xml:space="preserve">
          <source>CPU data</source>
          <target state="translated">CPU 데이터</target>
        </trans-unit>
        <trans-unit id="35703b6f920b2aecfcc3558041495c53e0afccab" translate="yes" xml:space="preserve">
          <source>CRC32c checksum.</source>
          <target state="translated">CRC32c 체크섬.</target>
        </trans-unit>
        <trans-unit id="0e0bd9224cae3992bdb822021f1daed06a2e0a72" translate="yes" xml:space="preserve">
          <source>CS</source>
          <target state="translated">CS</target>
        </trans-unit>
        <trans-unit id="6f50813d048f9e43197a62d22e7bad1c5c5ebdf3" translate="yes" xml:space="preserve">
          <source>CSPG001 (changed setting)</source>
          <target state="translated">CSPG001 (설정 변경)</target>
        </trans-unit>
        <trans-unit id="7beb5aa34f7f93eab94b5d3a43c1b99e15fc0b96" translate="yes" xml:space="preserve">
          <source>CSPG010 (cannot connect)</source>
          <target state="translated">CSPG010 (연결할 수 없음)</target>
        </trans-unit>
        <trans-unit id="0fa9dbfcc565e3b662161c09e293417ef531e231" translate="yes" xml:space="preserve">
          <source>CSPG011 (cannot authenticate)</source>
          <target state="translated">CSPG011 (인증 할 수 없음)</target>
        </trans-unit>
        <trans-unit id="cb44ff8616d38e97d17523404142780c99bd9b8a" translate="yes" xml:space="preserve">
          <source>CSPG012 (incorrect rules)</source>
          <target state="translated">CSPG012 (잘못된 규칙)</target>
        </trans-unit>
        <trans-unit id="f20aa27cfb590f2255562317516e78fac7806bb9" translate="yes" xml:space="preserve">
          <source>CSPG013 (incorrect permissions)</source>
          <target state="translated">CSPG013 (잘못된 권한)</target>
        </trans-unit>
        <trans-unit id="e4f5f93d05d040badc3c0453809068c4496581e7" translate="yes" xml:space="preserve">
          <source>CSPG014 (incorrect version)</source>
          <target state="translated">CSPG014 (잘못된 버전)</target>
        </trans-unit>
        <trans-unit id="e0c8c77d894bb70e857c6b04cdeff1465e5a7eda" translate="yes" xml:space="preserve">
          <source>CSPG015 (missing database)</source>
          <target state="translated">CSPG015 (데이터베이스 누락)</target>
        </trans-unit>
        <trans-unit id="f472e81cb18701f5faa745d8d127123a42b706e2" translate="yes" xml:space="preserve">
          <source>CSPG016 (database exists)</source>
          <target state="translated">CSPG016 (데이터베이스 존재)</target>
        </trans-unit>
        <trans-unit id="7c3a74799c51b3d9982939976edd12ea57116114" translate="yes" xml:space="preserve">
          <source>CSPG017 (user exists)</source>
          <target state="translated">CSPG017 (사용자 존재)</target>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="a0c4ce6370160e380bfa3c6d9851821705722d37" translate="yes" xml:space="preserve">
          <source>CUMULATIVE</source>
          <target state="translated">CUMULATIVE</target>
        </trans-unit>
        <trans-unit id="63d55e50dde7ba12ca28578468e41d18d788a893" translate="yes" xml:space="preserve">
          <source>CUSTOM</source>
          <target state="translated">CUSTOM</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="22a4f18c23f94e75b78e44f34cc94a4d50573916" translate="yes" xml:space="preserve">
          <source>Cache directory for origin signing keys</source>
          <target state="translated">원본 서명 키에 대한 캐시 디렉터리</target>
        </trans-unit>
        <trans-unit id="4805c3bca9af848d49d25d7dafce4073e656a0dd" translate="yes" xml:space="preserve">
          <source>Caffeinate</source>
          <target state="translated">Caffeinate</target>
        </trans-unit>
        <trans-unit id="34cdfac62150e2fe20a5b3313a6b5e4a2f4e289e" translate="yes" xml:space="preserve">
          <source>Call a Method</source>
          <target state="translated">메소드 호출</target>
        </trans-unit>
        <trans-unit id="9ffaea2b17925a076b1e481ccfb5042e49a8fa70" translate="yes" xml:space="preserve">
          <source>Call a method on something with &lt;code&gt;.method_name()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.method_name()&lt;/code&gt; 사용하여 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="30dbe44657a52ceb039c224bda7d5bbbdaddcc2a" translate="yes" xml:space="preserve">
          <source>Call the command to execute with &lt;code&gt;exec &amp;lt;command&amp;gt; &amp;lt;options&amp;gt;&lt;/code&gt; rather than running the command directly. This ensures the command is executed in the same process and that the service will restart correctly on configuration changes.</source>
          <target state="translated">명령을 직접 실행하는 대신 &lt;code&gt;exec &amp;lt;command&amp;gt; &amp;lt;options&amp;gt;&lt;/code&gt; 로 실행할 명령을 호출하십시오 . 이렇게하면 명령이 동일한 프로세스에서 실행되고 구성 변경시 서비스가 올바르게 다시 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="6589b6033e06cd46b644b323248a6630a56bc1b6" translate="yes" xml:space="preserve">
          <source>Callback Do&amp;rsquo;s</source>
          <target state="translated">콜백 할 일</target>
        </trans-unit>
        <trans-unit id="55aedc34e7498806b42221c3662fb0b1af1a6b16" translate="yes" xml:space="preserve">
          <source>Callback Don&amp;rsquo;t&amp;rsquo;s</source>
          <target state="translated">콜백 금지 사항</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="f80ba508d3cbb63a4b6411f9e0152418fc3ef30a" translate="yes" xml:space="preserve">
          <source>Campfire</source>
          <target state="translated">Campfire</target>
        </trans-unit>
        <trans-unit id="e6963ae545bac15aed38efb443d3d82358c30715" translate="yes" xml:space="preserve">
          <source>Can approve the successful completion of the &lt;strong&gt;Verify&lt;/strong&gt; stage. Once approved, the change automatically moves to the &lt;strong&gt;Build&lt;/strong&gt; stage. Also, can read and write comments.</source>
          <target state="translated">&lt;strong&gt;확인&lt;/strong&gt; 단계 의 성공적인 완료를 승인 할 수 있습니다. 승인되면 변경 사항이 자동으로 &lt;strong&gt;빌드&lt;/strong&gt; 단계로 이동합니다 . 또한 댓글을 읽고 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2fad09023d359be7723ea1059ae6184554af314" translate="yes" xml:space="preserve">
          <source>Can be either</source>
          <target state="translated">다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f93695562d9938e07d645d8f9f71d0c89ec7ccf" translate="yes" xml:space="preserve">
          <source>Can be used with the &lt;code&gt;options&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 속성 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12e83d2f2ad4fc35ec5483a52291c71f4a4b407f" translate="yes" xml:space="preserve">
          <source>Can commit a change to Chef Automate. Also, can modify, delete, or add recipes in a phase (at the source code level); and can read and write comments.</source>
          <target state="translated">Chef Automate에 변경 사항을 커밋 할 수 있습니다. 또한 한 단계 (소스 코드 수준에서)에서 레시피를 수정, 삭제 또는 추가 할 수 있습니다. 댓글을 읽고 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b40f61b26a725280e89a71299a414822d7177a3" translate="yes" xml:space="preserve">
          <source>Can disable version 0 and version 1 data bag item encryption formats</source>
          <target state="translated">버전 0 및 버전 1 데이터 백 항목 암호화 형식을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1962810a5cbc82e06161b6228266432deb280ccb" translate="yes" xml:space="preserve">
          <source>Can integrate directly with vRO to call out predetermined workflows</source>
          <target state="translated">vRO와 직접 통합하여 미리 결정된 워크 플로우를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0d39a8242a6fb3820fe78189398022901d86104" translate="yes" xml:space="preserve">
          <source>Can observe the actions and results of the pipeline as the change progresses through the stages. Cannot take any action.</source>
          <target state="translated">단계를 통해 변경이 진행됨에 따라 파이프 라인의 작업과 결과를 관찰 할 수 있습니다. 어떤 조치도 취할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a98e6323d176f918ee6cd03caf997b5c255e325f" translate="yes" xml:space="preserve">
          <source>Can only be specified if VPC flow logging for this subnetwork is enabled. Configures whether metadata fields should be added to the reported VPC flow logs.</source>
          <target state="translated">이 서브 네트워크에 대한 VPC 흐름 로깅이 활성화 된 경우에만 지정할 수 있습니다. 보고 된 VPC 흐름 로그에 메타 데이터 필드를 추가해야하는지 여부를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="ab516d608331192be3ea7c441f5d4df2f0004ce0" translate="yes" xml:space="preserve">
          <source>Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 which means half of all collected logs are reported.</source>
          <target state="translated">이 서브 네트워크에 대한 VPC 흐름 로깅이 활성화 된 경우에만 지정할 수 있습니다. 필드 값은 [0, 1이어야합니다. 1.0은 수집 된 모든 로그가보고됨을 의미하고 0.0은보고 된 로그가 없음을 의미하는 서브 네트워크 내 VPC 흐름 로그의 샘플링 속도를 설정합니다. 기본값은 0.5이며 수집 된 모든 로그의 절반이보고됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f36fed6e2a8726059fb080e281d76b9fdee00de8" translate="yes" xml:space="preserve">
          <source>Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.</source>
          <target state="translated">이 서브 네트워크에 대한 VPC 흐름 로깅이 활성화 된 경우에만 지정할 수 있습니다. 흐름 로그 수집을위한 집계 간격을 전환합니다. 간격 시간을 늘리면 오래 지속되는 연결에 대해 생성되는 흐름 로그의 양이 줄어 듭니다. 기본값은 연결 당 5 초의 간격입니다.</target>
        </trans-unit>
        <trans-unit id="050244212958e77971e6d20e85b0c1a858a94bb7" translate="yes" xml:space="preserve">
          <source>Can ship a change from the &lt;strong&gt;Acceptance&lt;/strong&gt; stage into the shared pipeline stages, &lt;strong&gt;Union&lt;/strong&gt;&lt;strong&gt;Rehearsal&lt;/strong&gt; and &lt;strong&gt;Delivered&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;수락&lt;/strong&gt; 단계에서 공유 파이프 라인 단계 인 &lt;strong&gt;Union &lt;/strong&gt;&lt;strong&gt;Rehearsal&lt;/strong&gt; 및 &lt;strong&gt;Delivered&lt;/strong&gt; 로 변경 사항을 배송 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="901c1a24ba8a5414a7d5e52240821136a22eac80" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t report to Chef Automate</source>
          <target state="translated">Chef Automate에보고 할 수 없음</target>
        </trans-unit>
        <trans-unit id="5b4efe95e921a9d6889b8d66c5b975155ca49d59" translate="yes" xml:space="preserve">
          <source>Cancel a build job group and any in-progress builds</source>
          <target state="translated">빌드 작업 그룹 및 진행중인 모든 빌드 취소</target>
        </trans-unit>
        <trans-unit id="4fe065168e0cc9592e59c11e72e3018d484013c3" translate="yes" xml:space="preserve">
          <source>Cancel a reboot</source>
          <target state="translated">재부팅 취소</target>
        </trans-unit>
        <trans-unit id="c4c509c65f991420a5aa7ab0e7df72cf2edd66fc" translate="yes" xml:space="preserve">
          <source>Cancel a reboot request.</source>
          <target state="translated">재부팅 요청을 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="2f369afab5001840710e7fe04d7f7347fb439420" translate="yes" xml:space="preserve">
          <source>Cancel invite for User</source>
          <target state="translated">사용자 초대 취소</target>
        </trans-unit>
        <trans-unit id="f39e9e16c0d51423c03735e2785e49d3bce00aac" translate="yes" xml:space="preserve">
          <source>Cancel the currently running backup create, delete, or restore operation</source>
          <target state="translated">현재 실행중인 백업 생성, 삭제 또는 복원 작업 취소</target>
        </trans-unit>
        <trans-unit id="3ea6b14ab1b1d8b2d791ea4baebe2208c461a03f" translate="yes" xml:space="preserve">
          <source>Canceling a pending invite for a user can currently be completed using knife:</source>
          <target state="translated">현재 나이프를 사용하여 사용자의 보류중인 초대 취소를 완료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55b44d893e2216a7cf5f05f1a21f29451fa3f101" translate="yes" xml:space="preserve">
          <source>Cancelling Jobs</source>
          <target state="translated">작업 취소</target>
        </trans-unit>
        <trans-unit id="24c6f14cb0a6304cc386a6075b790a8451bc4474" translate="yes" xml:space="preserve">
          <source>Cannot authenticate to PostgreSQL on the remote server.</source>
          <target state="translated">원격 서버에서 PostgreSQL에 인증 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="89b2f31925b0eaa3fc02f2b36f820366dd6d6251" translate="yes" xml:space="preserve">
          <source>Cannot be tested with ChefSpec</source>
          <target state="translated">ChefSpec으로 테스트 할 수 없음</target>
        </trans-unit>
        <trans-unit id="dbbf566ee551f811fd9041c62d3fa4073b535433" translate="yes" xml:space="preserve">
          <source>Cannot connect to PostgreSQL on the remote server because rules in &lt;code&gt;pg_hba&lt;/code&gt; are incorrect.</source>
          <target state="translated">&lt;code&gt;pg_hba&lt;/code&gt; 의 규칙 이 올바르지 않아 원격 서버의 PostgreSQL에 연결할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b095fada0124206ed795b83e48f0eb140a949e5f" translate="yes" xml:space="preserve">
          <source>Cannot connect to PostgreSQL on the remote server.</source>
          <target state="translated">원격 서버에서 PostgreSQL에 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a6899b1d92f3d6f558c5627c86dc9b97a718cb03" translate="yes" xml:space="preserve">
          <source>Cannot find config file</source>
          <target state="translated">구성 파일을 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5e418d8d3e575ade5d6b25b74d6864330a6006da" translate="yes" xml:space="preserve">
          <source>Canonical Header Format 1.0 using SHA-1</source>
          <target state="translated">SHA-1을 사용하는 표준 헤더 형식 1.0</target>
        </trans-unit>
        <trans-unit id="a2c0c2f60b52edd028b696e107becbe81589cee6" translate="yes" xml:space="preserve">
          <source>Canonical Header Format 1.3 using SHA-256</source>
          <target state="translated">SHA-256을 사용하는 표준 헤더 형식 1.3</target>
        </trans-unit>
        <trans-unit id="53304cda0905a08e57c700ce0ecf625f7f784051" translate="yes" xml:space="preserve">
          <source>Capacity Planning</source>
          <target state="translated">용량 계획</target>
        </trans-unit>
        <trans-unit id="0741c184d87e541a8a9b559598221ff634366eab" translate="yes" xml:space="preserve">
          <source>Capture and visualize what happens during the execution of Chef Infra Client runs across all of your Chef-managed infrastructure.</source>
          <target state="translated">모든 Chef 관리 인프라에서 Chef Infra Client가 실행되는 동안 발생하는 상황을 캡처하고 시각화합니다.</target>
        </trans-unit>
        <trans-unit id="1d8cbd0421b54da8e31fe6689a47e6e36ba0de5a" translate="yes" xml:space="preserve">
          <source>Capture stdin and stdout for this job.</source>
          <target state="translated">이 작업에 대한 stdin 및 stdout을 캡처하십시오.</target>
        </trans-unit>
        <trans-unit id="1f08183d67e37b25ac9fde4d650e9dd36fc5a563" translate="yes" xml:space="preserve">
          <source>Cause Chef Infra Client to create a diff when changes are made to a file. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">파일이 변경 될 때 Chef Infra Client가 diff를 생성하도록합니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3534806b71d86387b3feb50af88c1cca817f16d1" translate="yes" xml:space="preserve">
          <source>Cause Chef Infra Client to send run data to the Automate server.</source>
          <target state="translated">Chef Infra Client가 실행 데이터를 Automate 서버로 보내도록합니다.</target>
        </trans-unit>
        <trans-unit id="66756e46ff7ba3dfc2cea923fb6dc6e5c09eab08" translate="yes" xml:space="preserve">
          <source>Cause Chef Infra Client to use the original chef-solo mode instead of chef local mode. This is not recommended.</source>
          <target state="translated">Chef Infra Client가 Chef 로컬 모드 대신 원래 Chef-Solo 모드를 사용하도록합니다. 이것은 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e735d1bead39f0c8d84edf40e24423f6416cd84" translate="yes" xml:space="preserve">
          <source>Cause a Chef Infra Client run to fail when Chef Infra Client does not have administrator privileges in Microsoft Windows.</source>
          <target state="translated">Chef Infra Client에 Microsoft Windows에서 관리자 권한이없는 경우 Chef Infra Client 실행이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f87e7f8bcc485048a4f9ae2ce0975d91c0c7d21c" translate="yes" xml:space="preserve">
          <source>Cause a Chef Infra Client run to fail when run data cannot be sent to the Automate server (for any reason).</source>
          <target state="translated">어떤 이유로 든 실행 데이터를 Automate 서버로 보낼 수없는 경우 Chef Infra Client 실행이 실패하도록합니다.</target>
        </trans-unit>
        <trans-unit id="be589e8a36a35e58c837ececbeb8f22e6de4bf51" translate="yes" xml:space="preserve">
          <source>Cause a Chef Infra Client run to fail when the Chef Infra Client does not have administrator privileges in Microsoft Windows.</source>
          <target state="translated">Chef Infra Client에 Microsoft Windows에서 관리자 권한이없는 경우 Chef Infra Client 실행이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="d2c0c91d82388e7c626f9682d635f4067250f436" translate="yes" xml:space="preserve">
          <source>Cause a chef-client run to fail when the chef-client does not have administrator privileges in Microsoft Windows.</source>
          <target state="translated">chef-client에 Microsoft Windows에서 관리자 권한이없는 경우 chef-client 실행이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="c56cdd3fd53bdbb76fdb7bfb85fb2e87cd5fd96e" translate="yes" xml:space="preserve">
          <source>Cause knife to use the default value instead of asking a user to provide one.</source>
          <target state="translated">나이프가 사용자에게 값을 제공하도록 요청하는 대신 기본값을 사용하도록합니다.</target>
        </trans-unit>
        <trans-unit id="45c839323a2760d0efbfbf7b6977364d957107e5" translate="yes" xml:space="preserve">
          <source>Cause the Chef Infra Server to connect to the LDAP server using SSL. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server가 SSL을 사용하여 LDAP 서버에 연결하도록합니다. 기본값 : &lt;code&gt;false&lt;/code&gt; . 여야 &lt;code&gt;false&lt;/code&gt; 때 &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; 입니다 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5f4e761d441db8b903bbd1a3f97573f9db1270" translate="yes" xml:space="preserve">
          <source>Cause the Chef server to connect to the LDAP server using SSL. Default value: &lt;code&gt;false&lt;/code&gt;. Must be &lt;code&gt;false&lt;/code&gt; when &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef 서버가 SSL을 사용하여 LDAP 서버에 연결되게하십시오. 기본 값 : &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;ldap['tls_enabled']&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;false&lt;/code&gt; 여야 합니다 .</target>
        </trans-unit>
        <trans-unit id="52eff7b22fe11f86eadebb4a4a10df91257e6cfa" translate="yes" xml:space="preserve">
          <source>Cause the chef-client run to fail when Reporting data cannot be sent to the Chef server (for any reason).</source>
          <target state="translated">어떤 이유로 든보고 데이터를 Chef 서버로 보낼 수없는 경우 Chef-Client 실행이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="e895acc53b1d0a0af6c525021f60e76cdad52f48" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to create a diff when changes are made to a file. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">파일을 변경할 때 chef-client가 diff를 작성하게합니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a3bb85a309bf35ab8e50ebf3d3ce7b4d8964a3c" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to detect and manage the source file for a symlink. Possible values: &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;. When this value is set to &lt;code&gt;nil&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and emit a warning. When this value is set to &lt;code&gt;true&lt;/code&gt;, the chef-client will manage a symlink&amp;rsquo;s source file and not emit a warning. Default value: &lt;code&gt;nil&lt;/code&gt;. The default value will be changed to &lt;code&gt;false&lt;/code&gt; in a future version.</source>
          <target state="translated">chef-client가 symlink의 소스 파일을 감지하고 관리하게하십시오. 가능한 값은 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 입니다. 이 값이 &lt;code&gt;nil&lt;/code&gt; 로 설정 되면 chef-client는 symlink의 소스 파일을 관리하고 경고를 발행합니다. 이 값이 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 chef-client는 symlink의 소스 파일을 관리하고 경고를 발생시키지 않습니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; . 이후 버전에서는 기본값이 &lt;code&gt;false&lt;/code&gt; 로 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="df769fc492b2d987e58f57acdcc3e78c88786e00" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to not use chef local mode, but rather the original chef-solo mode. This is not recommended unless really required.</source>
          <target state="translated">요리사-클라이언트가 요리사 로컬 모드를 사용하지 않고 원래 요리사-솔로 모드를 사용하십시오. 실제로 필요한 경우가 아니면 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f12e66194782f565420f48723fc1320cc2f36816" translate="yes" xml:space="preserve">
          <source>Cause the chef-client to send data to the Chef server for use with Reporting.</source>
          <target state="translated">chef-client가보고에 사용하기 위해 Chef 서버로 데이터를 보내 게합니다.</target>
        </trans-unit>
        <trans-unit id="680b07bdbfe07cc96301e3af5aac7ab769ac3957" translate="yes" xml:space="preserve">
          <source>Caveats to Running as a Non-root User</source>
          <target state="translated">루트가 아닌 사용자로 실행시주의 사항</target>
        </trans-unit>
        <trans-unit id="d338d3edac3d8bc55f158201b757155d68d5bdbc" translate="yes" xml:space="preserve">
          <source>Census</source>
          <target state="translated">Census</target>
        </trans-unit>
        <trans-unit id="51ad199d6352d3bb64db022bd0fbb0fcdea024f8" translate="yes" xml:space="preserve">
          <source>CentOS</source>
          <target state="translated">CentOS</target>
        </trans-unit>
        <trans-unit id="3b0e6b751d6be08094954628e4320e832dec0102" translate="yes" xml:space="preserve">
          <source>CentOS is downloaded the first time this command is run, after which Vagrant is started. (This may take a few minutes.)</source>
          <target state="translated">CentOS는이 명령이 처음 실행될 때 다운로드되고 그 후 Vagrant가 시작됩니다. (이 작업은 몇 분 정도 걸릴 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="b46006710c2bc818e78bdb61b38fbd63d658b6ba" translate="yes" xml:space="preserve">
          <source>Centralized distribution of cookbooks</source>
          <target state="translated">요리 책의 중앙 집중식 배포</target>
        </trans-unit>
        <trans-unit id="e1de6a20b799f00564c176d01a2864b4e8ebf146" translate="yes" xml:space="preserve">
          <source>Certain settings defined by a knife plugin can be configured so that they can be set using the config.rb file. This can be done in two ways:</source>
          <target state="translated">knife 플러그인으로 정의 된 특정 설정은 config.rb 파일을 사용하여 설정할 수 있도록 구성 할 수 있습니다. 이는 두 가지 방법으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98245677ba8bd69f82ab45b240169dd291583da8" translate="yes" xml:space="preserve">
          <source>Certain types of data&amp;mdash;passwords, user account data, and other sensitive items&amp;mdash;can be placed in data bags, which are located in a secure sub-area on the Chef Infra Server that can only be accessed by nodes that authenticate to the Chef Infra Server with the correct SSL certificates</source>
          <target state="translated">특정 유형의 데이터 (암호, 사용자 계정 데이터 및 기타 민감한 항목)는 Chef Infra에 인증 된 노드에서만 액세스 할 수있는 Chef Infra 서버의 보안 하위 영역에있는 데이터 백에 배치 할 수 있습니다. 올바른 SSL 인증서가있는 서버</target>
        </trans-unit>
        <trans-unit id="c4b22d7e953f32628611912cfd9ba3ed0d4dbce3" translate="yes" xml:space="preserve">
          <source>Certain types of data&amp;mdash;passwords, user account data, and other sensitive items&amp;mdash;can be placed in data bags, which are located in a secure sub-area on the Chef server that can only be accessed by nodes that authenticate to the Chef server with the correct SSL certificates</source>
          <target state="translated">특정 유형의 데이터 (암호, 사용자 계정 데이터 및 기타 민감한 항목)는 Chef 서버의 보안 하위 영역에있는 Chef Bag의 보안 하위 영역에있는 데이터 백에 배치 할 수 있습니다. 올바른 SSL 인증서</target>
        </trans-unit>
        <trans-unit id="e921239584eda1bcba00e1006f0e656b17e9f49a" translate="yes" xml:space="preserve">
          <source>Change Attributes</source>
          <target state="translated">속성 변경</target>
        </trans-unit>
        <trans-unit id="2f961cf917c966831b112d6cb21b6cbee6c01be5" translate="yes" xml:space="preserve">
          <source>Change Directory into &lt;code&gt;examples/effortless_config/chef_repo_pattern&lt;/code&gt;</source>
          <target state="translated">디렉토리를 &lt;code&gt;examples/effortless_config/chef_repo_pattern&lt;/code&gt; 으로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="49289db43e663a3df5e2c70714722ecc54895565" translate="yes" xml:space="preserve">
          <source>Change Password</source>
          <target state="translated">비밀번호 변경</target>
        </trans-unit>
        <trans-unit id="3d0d31929a4d384a805be01847b197f2bf6c7a85" translate="yes" xml:space="preserve">
          <source>Change an existing service from automatic to manual startup:</source>
          <target state="translated">기존 서비스를 자동에서 수동 시작으로 변경 :</target>
        </trans-unit>
        <trans-unit id="2902e0403027fc220789721469435c870aa5f524" translate="yes" xml:space="preserve">
          <source>Change an origin member&amp;rsquo;s role</source>
          <target state="translated">원본 구성원의 역할 변경</target>
        </trans-unit>
        <trans-unit id="549795d06a6e0bdb5e4b5e59ab8dbeb5fadfa9cc" translate="yes" xml:space="preserve">
          <source>Change directories into &lt;code&gt;~/.berkshelf/cookbooks&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;~/.berkshelf/cookbooks&lt;/code&gt; 로 디렉토리를 변경합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
