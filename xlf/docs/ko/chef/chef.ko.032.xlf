<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="c689f9edb9d0ab4469674f191e32e8e094849bcb" translate="yes" xml:space="preserve">
          <source>Username to use for basic authentication to a repository.</source>
          <target state="translated">저장소에 대한 기본 인증에 사용할 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9c5da855b68eb258ee9da5ff593ef9bda2ce6d15" translate="yes" xml:space="preserve">
          <source>Username to use for proxy.</source>
          <target state="translated">프록시에 사용할 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8af7eb3a6258cfb4e4aa96cbfe4948c9ef47d8a6" translate="yes" xml:space="preserve">
          <source>Username used by postgres streaming replicator when accessing this node.</source>
          <target state="translated">이 노드에 액세스 할 때 postgres 스트리밍 복제자가 사용하는 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="57f2b181d0a5e79a147ea1cdf41457f58dbbb3c9" translate="yes" xml:space="preserve">
          <source>Users</source>
          <target state="translated">Users</target>
        </trans-unit>
        <trans-unit id="095056f99bc7442e4a5bac7a7ba8e076d24956ab" translate="yes" xml:space="preserve">
          <source>Users Service</source>
          <target state="translated">사용자 서비스</target>
        </trans-unit>
        <trans-unit id="259b0fdd42ea41decedaef68d488c1358655ed28" translate="yes" xml:space="preserve">
          <source>Users are encouraged to read the &lt;a href=&quot;https://docs.rs/log4rs/0.8.3/log4rs/#configuration&quot;&gt;log4rs configuration documentation&lt;/a&gt; for further details.</source>
          <target state="translated">사용자는 자세한 내용을 &lt;a href=&quot;https://docs.rs/log4rs/0.8.3/log4rs/#configuration&quot;&gt;보려면 log4rs 구성 문서&lt;/a&gt; 를 읽는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="3cc47f955c60011a163ef7051929d9e90e11296b" translate="yes" xml:space="preserve">
          <source>Users can choose between operating systems of MacOS, Windows, and Linux for Chef InSpec.</source>
          <target state="translated">사용자는 Chef InSpec 용 MacOS, Windows 및 Linux 운영 체제 중에서 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3619937004e470da086554812b672273197a8735" translate="yes" xml:space="preserve">
          <source>Users can execute &lt;code&gt;hab license accept&lt;/code&gt; on the command line.</source>
          <target state="translated">사용자는 명령 줄에서 &lt;code&gt;hab license accept&lt;/code&gt; 를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="551ee12452b963f599130642f80d47cc43bc99cf" translate="yes" xml:space="preserve">
          <source>Users familiar with the RSpec testing framework may know that there are two ways to write test statements: &lt;code&gt;should&lt;/code&gt; and &lt;code&gt;expect&lt;/code&gt;. The RSpec community decided that &lt;code&gt;expect&lt;/code&gt; is the preferred syntax. However, Chef InSpec recommends the &lt;code&gt;should&lt;/code&gt; syntax as it tends to read more easily to those users who are not as technical.</source>
          <target state="translated">RSpec 테스트 프레임 워크에 익숙한 사용자는 테스트 문을 작성하는 데 &lt;code&gt;should&lt;/code&gt; 및 &lt;code&gt;expect&lt;/code&gt; 두 가지 방법이 있음을 알 수 있습니다. RSpec 커뮤니티는 &lt;code&gt;expect&lt;/code&gt; 이 선호되는 구문 이라고 결정했습니다 . 그러나 Chef InSpec 은 기술적 인 수준이 아닌 사용자에게 더 쉽게 읽을 수 있는 &lt;code&gt;should&lt;/code&gt; 구문을 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="5c813ac97d7033145cb9f93f623233fc6709f8bf" translate="yes" xml:space="preserve">
          <source>Users may be invited to join organizations via the web user interface in the Chef management console or via the &lt;code&gt;POST&lt;/code&gt; endpoint in the Chef Infra Server API.</source>
          <target state="translated">사용자는 Chef 관리 콘솔의 웹 사용자 인터페이스 또는 Chef Infra Server API 의 &lt;code&gt;POST&lt;/code&gt; 끝점을 통해 조직에 가입하도록 초대 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="afbac1d7f8993f570ce7caa30693a9bd125775ba" translate="yes" xml:space="preserve">
          <source>Users may be invited to join organizations via the web user interface in the Chef management console or via the &lt;code&gt;POST&lt;/code&gt; endpoint in the Chef server API.</source>
          <target state="translated">Chef 관리 콘솔의 웹 사용자 인터페이스 또는 Chef 서버 API 의 &lt;code&gt;POST&lt;/code&gt; 엔드 포인트를 통해 사용자를 조직에 초대 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1994b2fb34380536fd39a49f3005b38d275cdf5" translate="yes" xml:space="preserve">
          <source>Users may subscribe to notifications per project by using the &lt;strong&gt;Watch Project&lt;/strong&gt; button located on each project&amp;rsquo;s home page in the Workflow web UI.</source>
          <target state="translated">사용자는 Workflow 웹 UI에서 각 프로젝트의 홈 페이지에있는 &lt;strong&gt;Watch Project&lt;/strong&gt; 버튼 을 사용하여 프로젝트 별 알림을 구독 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c79844244b0ff3c65d7a9cbfdf88b20403f860ad" translate="yes" xml:space="preserve">
          <source>Users of this Chef Automate server may elect to share anonymized usage data with Chef Software, Inc. Chef uses this shared data to improve Chef Automate. Please see the &lt;a href=&quot;https://chef.io/privacy-policy&quot;&gt;Chef Privacy Policy&lt;/a&gt; for more information about the information Chef collects, and how that information is used.</source>
          <target state="translated">이 Chef Automate 서버의 사용자는 익명화 된 사용 데이터를 Chef Software, Inc.와 공유하도록 선택할 수 있습니다. Chef는이 공유 데이터를 사용하여 Chef Automate를 개선합니다. 참조하십시오 &lt;a href=&quot;https://chef.io/privacy-policy&quot;&gt;요리사 개인 정보 보호 정책&lt;/a&gt; 정보 요리사를 수집에 대한 자세한 내용은, 그 정보가 어떻게 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9601ba784dc75d16b0ec18862081607082e9c1e5" translate="yes" xml:space="preserve">
          <source>Users require permission for the &lt;code&gt;event:*&lt;/code&gt; action to view and interact with &lt;em&gt;Event Feed&lt;/em&gt;. Filter and search ability in &lt;em&gt;Event Feed&lt;/em&gt; requires user permission for the &lt;code&gt;infra:nodes:list&lt;/code&gt; action.</source>
          <target state="translated">사용자가 &lt;em&gt;이벤트 피드&lt;/em&gt; 를보고 상호 작용 하려면 &lt;code&gt;event:*&lt;/code&gt; 작업에 대한 권한이 필요합니다 . &lt;em&gt;이벤트 피드의&lt;/em&gt; 필터 및 검색 기능을 사용하려면 &lt;code&gt;infra:nodes:list&lt;/code&gt; 작업에 대한 사용자 권한이 필요합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cddc30969a747fb05c6f72785ab02d12abbf4f94" translate="yes" xml:space="preserve">
          <source>Users require permission for the &lt;code&gt;iam:roles&lt;/code&gt; action to interact with roles. Any user that is part of the &lt;code&gt;admins&lt;/code&gt; team or the &lt;code&gt;Administrator&lt;/code&gt; policy will have this permission. Otherwise, &lt;a href=&quot;../iam_v2_guide/index#creating-custom-policies&quot;&gt;IAM custom policies&lt;/a&gt; can be created to assign this permission.</source>
          <target state="translated">사용자가 &lt;code&gt;iam:roles&lt;/code&gt; 과 상호 작용 하려면 iam : roles 작업에 대한 권한이 필요 합니다. &lt;code&gt;admins&lt;/code&gt; 팀 또는 &lt;code&gt;Administrator&lt;/code&gt; 정책의 일부인 모든 사용자 는이 권한을 갖게됩니다. 그렇지 않으면 &lt;a href=&quot;../iam_v2_guide/index#creating-custom-policies&quot;&gt;IAM 사용자 지정 정책&lt;/a&gt; 을 생성하여이 권한을 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03b763bde4c4ecfcf394b1230f36d0b17120919f" translate="yes" xml:space="preserve">
          <source>Users utility</source>
          <target state="translated">사용자 유틸리티</target>
        </trans-unit>
        <trans-unit id="ebd31ed91ec011e44cb9f04d34c352df2a8c8af8" translate="yes" xml:space="preserve">
          <source>Users who sign in via SAML will have a session time of 24 hours before needing to sign in again.</source>
          <target state="translated">SAML을 통해 로그인하는 사용자는 다시 로그인해야하기 전에 24 시간의 세션 시간을 갖게됩니다.</target>
        </trans-unit>
        <trans-unit id="a1553a67a33004f54474f286b3d1d9478d4e3d57" translate="yes" xml:space="preserve">
          <source>Users with &lt;code&gt;dataLifecycle:*&lt;/code&gt; IAM access are able to see the data lifecycle job statuses, configure jobs, or run jobs.</source>
          <target state="translated">&lt;code&gt;dataLifecycle:*&lt;/code&gt; IAM 액세스 권한이있는 사용자 는 데이터 수명주기 작업 상태를 확인하고 작업을 구성하거나 작업을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de0f877eb4cb82c5b654db44b937c51e2b616510" translate="yes" xml:space="preserve">
          <source>Users, teams, and API tokens can all be policy members. Both users and teams can be either locally or externally managed with LDAP or SAML.</source>
          <target state="translated">사용자, 팀 및 API 토큰은 모두 정책 구성원이 될 수 있습니다. 사용자와 팀 모두 LDAP 또는 SAML을 사용하여 로컬 또는 외부에서 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="0be059acda0366aa63455c4d53ce07521e230886" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;psql&lt;/code&gt; (the interactive terminal for PostgreSQL)</source>
          <target state="translated">용도의 &lt;code&gt;psql&lt;/code&gt; 의 (PostgreSQL을위한 대화 형 터미널)</target>
        </trans-unit>
        <trans-unit id="4275c65a0ef1a30c1778340c03fd81c5581c4b59" translate="yes" xml:space="preserve">
          <source>Uses a comprehensive set of base images provided by &lt;a href=&quot;https://github.com/chef/bento&quot;&gt;Bento&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/bento&quot;&gt;Bento가&lt;/a&gt; 제공 한 포괄적 인 기본 이미지 세트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b81ae9e14dd362c392299b34b7b6a1c4f81cf990" translate="yes" xml:space="preserve">
          <source>Uses a comprehensive set of operating system base images from Chef&amp;rsquo;s &lt;a href=&quot;https://github.com/chef/bento&quot;&gt;Bento&lt;/a&gt; project.</source>
          <target state="translated">Chef의 &lt;a href=&quot;https://github.com/chef/bento&quot;&gt;Bento&lt;/a&gt; 프로젝트 에서 포괄적 인 운영 체제 기본 이미지 세트를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="89ff1ad079708bfb1a100cd66baca323177cf002" translate="yes" xml:space="preserve">
          <source>Uses a driver plugin architecture</source>
          <target state="translated">드라이버 플러그인 아키텍처를 사용합니다</target>
        </trans-unit>
        <trans-unit id="cd59b39343db8678cc7286021f9551d70ebd440c" translate="yes" xml:space="preserve">
          <source>Uses chef-zero or chef-solo</source>
          <target state="translated">chef-zero 또는 chef-solo를 사용합니다</target>
        </trans-unit>
        <trans-unit id="f65e40a6859fb7d403fcc9f66f432e95e9d55cfb" translate="yes" xml:space="preserve">
          <source>Uses the Chef Infra Server as if it were a file system, allowing the chef-repo on the Chef Infra Server to behave like a mirror of the chef-repo on the workstation. The Chef Infra Server will have the same objects as the local chef-repo. To make changes to the files on the Chef Infra Server, just download files from the Chef Infra Server or upload files from the chef-repo</source>
          <target state="translated">Chef Infra Server를 파일 시스템 인 것처럼 사용하여 Chef Infra Server의 chef-repo가 ​​워크 스테이션의 chef-repo의 미러처럼 작동 할 수 있도록합니다. Chef Infra Server는 로컬 chef-repo와 동일한 객체를 갖습니다. Chef Infra Server의 파일을 변경하려면 Chef Infra Server에서 파일을 다운로드하거나 chef-repo에서 파일을 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="2f2475f1072a78d337728daeaa083bc82dea28ad" translate="yes" xml:space="preserve">
          <source>Uses the Chef server as if it were a file system, allowing the chef-repo on the Chef server to behave like a mirror of the chef-repo on the workstation. The Chef server will have the same objects as the local chef-repo. To make changes to the files on the Chef server, just download files from the Chef server or upload files from the chef-repo</source>
          <target state="translated">Chef 서버를 마치 파일 시스템 인 것처럼 사용하여 Chef 서버의 chef-repo가 ​​워크 스테이션의 chef-repo 미러처럼 작동 할 수 있습니다. Chef 서버는 로컬 chef-repo와 동일한 오브젝트를 갖습니다. Chef 서버의 파일을 변경하려면 Chef 서버에서 파일을 다운로드하거나 chef-repo에서 파일을 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="e45d4a6e38e2987e8681bd3951384c2ae0208a62" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;AND NOT&lt;/code&gt; together may trigger an error. For example:</source>
          <target state="translated">&lt;code&gt;AND NOT&lt;/code&gt; 을 함께 사용 하면 오류가 발생할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="df7e0cee9e47f4217109b6d9b560a0d1ac29e5a0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;attribute?()&lt;/code&gt; in a recipe:</source>
          <target state="translated">레시피에서 &lt;code&gt;attribute?()&lt;/code&gt; 사용하기 :</target>
        </trans-unit>
        <trans-unit id="71c1d1857df029152e339a8ba4709056b557cbb0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;attribute?()&lt;/code&gt; in an attributes file:</source>
          <target state="translated">속성 파일에서 &lt;code&gt;attribute?()&lt;/code&gt; 사용 :</target>
        </trans-unit>
        <trans-unit id="3bab2a12a877e9ca067ac8c068690bea0a51acbe" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;bsd_service&lt;/code&gt; resource parameters</source>
          <target state="translated">사용 &lt;code&gt;bsd_service&lt;/code&gt; 의 자원 매개 변수를</target>
        </trans-unit>
        <trans-unit id="558daf367fd3554063095ccc2c54e357047aaed1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;controls&lt;/code&gt; in the filename creates unnecessary clutter when reading it. Keep the names short and concise.</source>
          <target state="translated">파일 이름에 &lt;code&gt;controls&lt;/code&gt; 을 사용 하면 읽을 때 불필요한 혼란이 생깁니다. 이름은 짧고 간결하게 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="67acb2a65fcb560c2e1d4e87caa430117ca9cf24" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;delivery-truck&lt;/code&gt; in air-gapped environment</source>
          <target state="translated">에어 갭 환경에서 &lt;code&gt;delivery-truck&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="f3a8e179b5dd3b6cb1a66f17065f7e4922d02f6b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;env_run_lists&lt;/code&gt; with roles is discouraged as it can be difficult to maintain over time. Instead, consider using multiple roles to define the required behavior.</source>
          <target state="translated">&lt;code&gt;env_run_lists&lt;/code&gt; 를 역할과 함께 사용하는 것은 시간이 지남에 따라 유지 관리가 어려울 수 있으므로 권장되지 않습니다. 대신 여러 역할을 사용하여 필요한 동작을 정의하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="65e9b581d334787dadeffd912dfa2d5af6126aa1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;node['foo'].delete('bar')&lt;/code&gt; will throw an exception that points to the new API.</source>
          <target state="translated">사용 &lt;code&gt;node['foo'].delete('bar')&lt;/code&gt; 예외가 발생합니다 새로운 API를 가리키는.</target>
        </trans-unit>
        <trans-unit id="182d4b5c6a618803eeae1b63e32c500a69b4cc5d" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;delivery-truck&lt;/strong&gt; in air-gapped environment</source>
          <target state="translated">에어 갭 환경에서 &lt;strong&gt;배달 트럭&lt;/strong&gt; 사용</target>
        </trans-unit>
        <trans-unit id="0e5ec5ecf9fa30d9138abaad8bc0bed254225ddb" translate="yes" xml:space="preserve">
          <source>Using Amazon Web Services (AWS) S3 as a storage location for both Chef Automate backup archives and the Elasticsearch snapshot repository is natively supported. In this mode the backup archives and snapshots will be uploaded to the bucket of your choice.</source>
          <target state="translated">Amazon Web Services (AWS) S3를 Chef Automate 백업 아카이브와 Elasticsearch 스냅 샷 리포지토리의 스토리지 위치로 사용하는 것은 기본적으로 지원됩니다. 이 모드에서는 백업 아카이브와 스냅 샷이 선택한 버킷에 업로드됩니다.</target>
        </trans-unit>
        <trans-unit id="bbaeb298bfe777850e6717ed129da7ed9013ca01" translate="yes" xml:space="preserve">
          <source>Using Azure AD as an SAML IdP requires specific configuration for both Azure AD and Chef Automate.</source>
          <target state="translated">Azure AD를 SAML IdP로 사용하려면 Azure AD 및 Chef Automate에 대한 특정 구성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f88854d80bb79426553ea0d9cef4c00507288b36" translate="yes" xml:space="preserve">
          <source>Using Chef Habitat Builder</source>
          <target state="translated">Chef Habitat Builder 사용</target>
        </trans-unit>
        <trans-unit id="8f536510b99f9bc9741092f28b02c086eb75b961" translate="yes" xml:space="preserve">
          <source>Using Chef InSpec DSL in Chef InSpec shell</source>
          <target state="translated">Chef InSpec 셸에서 Chef InSpec DSL 사용</target>
        </trans-unit>
        <trans-unit id="800c770cc3cb41319496fb7ebe3a0fa5441f0a0d" translate="yes" xml:space="preserve">
          <source>Using Chef InSpec on Cloud Platforms</source>
          <target state="translated">Cloud Platform에서 Chef InSpec 사용</target>
        </trans-unit>
        <trans-unit id="9d08f72a7cb9f63f643c25f23e23333ca20b1e48" translate="yes" xml:space="preserve">
          <source>Using Chef Manage</source>
          <target state="translated">Chef Manage 사용</target>
        </trans-unit>
        <trans-unit id="2d0b7491767117f0fd50e5e80d7d6745b7083e66" translate="yes" xml:space="preserve">
          <source>Using Chef Vault in recipes</source>
          <target state="translated">레시피에서 Chef Vault 사용</target>
        </trans-unit>
        <trans-unit id="6d152d19ef1d3515323dda4c7d799962d4c52434" translate="yes" xml:space="preserve">
          <source>Using Chef Workstation</source>
          <target state="translated">Chef Workstation 사용</target>
        </trans-unit>
        <trans-unit id="e433b66ac4fe6d955c7e5ac915db445593defd8f" translate="yes" xml:space="preserve">
          <source>Using Chef Workstation-provided Ruby as your system Ruby is optional. For many users, Ruby is primarily used for authoring Chef cookbooks. If that&amp;rsquo;s true for you, then using the Chef Workstation-provided Ruby is recommended.</source>
          <target state="translated">Chef Workstation에서 제공하는 Ruby를 시스템으로 사용 Ruby는 선택 사항입니다. 많은 사용자에게 Ruby는 주로 Chef 쿡북을 작성하는 데 사용됩니다. 그게 사실이라면 Chef Workstation에서 제공하는 Ruby를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="31a0565776d81857ebcb336365038858232ff0ff" translate="yes" xml:space="preserve">
          <source>Using Chef-Managed Policies</source>
          <target state="translated">Chef 관리 정책 사용</target>
        </trans-unit>
        <trans-unit id="f3cdaf3621b01cd8553b0470fa4b53210458a60e" translate="yes" xml:space="preserve">
          <source>Using Controls from an Included Profile</source>
          <target state="translated">포함 된 프로필의 컨트롤 사용</target>
        </trans-unit>
        <trans-unit id="a7b900d1452799c3e6bbe7b03dc06ba2c72b6d11" translate="yes" xml:space="preserve">
          <source>Using Cookstyle Auto-correct</source>
          <target state="translated">Cookstyle 자동 수정 사용</target>
        </trans-unit>
        <trans-unit id="d954f0b2edb1147e9288d2d092acae3b6b710520" translate="yes" xml:space="preserve">
          <source>Using DSC with other Chef resources</source>
          <target state="translated">다른 Chef 리소스와 함께 DSC 사용</target>
        </trans-unit>
        <trans-unit id="4c3f0bc326925803a7ba1a4e9a4936e76c667e42" translate="yes" xml:space="preserve">
          <source>Using Encrypted Data Bags</source>
          <target state="translated">암호화 된 데이터 백 사용</target>
        </trans-unit>
        <trans-unit id="6f208384ce715a1b17ec449bb76e099bf4f2b027" translate="yes" xml:space="preserve">
          <source>Using Environment Variables to provide credentials</source>
          <target state="translated">환경 변수를 사용하여 자격 증명 제공</target>
        </trans-unit>
        <trans-unit id="db1085218605733bfc20e49b6515c994ae0273db" translate="yes" xml:space="preserve">
          <source>Using Environment variables to provide credentials</source>
          <target state="translated">환경 변수를 사용하여 자격 증명 제공</target>
        </trans-unit>
        <trans-unit id="9402c1659d16377856726ed24341daaf15cfed10" translate="yes" xml:space="preserve">
          <source>Using InSpec, you can use several Chef InSpec resources to audit properties of your cloud infrastructure - for example, an Amazon Web Services S3 bucket.</source>
          <target state="translated">InSpec을 사용하면 여러 Chef InSpec 리소스를 사용하여 클라우드 인프라 (예 : Amazon Web Services S3 버킷)의 속성을 감사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="290e67dc99059977275221704e9326513d50804e" translate="yes" xml:space="preserve">
          <source>Using Knife</source>
          <target state="translated">칼 사용</target>
        </trans-unit>
        <trans-unit id="16bc5a6d5225200f35ba76359503d2b8d50bdf62" translate="yes" xml:space="preserve">
          <source>Using Profiles</source>
          <target state="translated">프로필 사용</target>
        </trans-unit>
        <trans-unit id="6181d27ee0988ca463f9715d6396c8ffb0f17e05" translate="yes" xml:space="preserve">
          <source>Using Quotes</source>
          <target state="translated">따옴표 사용</target>
        </trans-unit>
        <trans-unit id="e49ba2938c5f232d7272ad8088b757259838a69a" translate="yes" xml:space="preserve">
          <source>Using Resources from an Included Profile</source>
          <target state="translated">포함 된 프로필의 리소스 사용</target>
        </trans-unit>
        <trans-unit id="b45f00245d0d859a3fc4b46c3ec850002a7be5c5" translate="yes" xml:space="preserve">
          <source>Using Ruby in Chef InSpec shell</source>
          <target state="translated">Chef InSpec 셸에서 Ruby 사용</target>
        </trans-unit>
        <trans-unit id="c0b4f4f58554a9cc0a642b8859111c5a8f1181c0" translate="yes" xml:space="preserve">
          <source>Using Ruby in InSpec</source>
          <target state="translated">InSpec에서 Ruby 사용</target>
        </trans-unit>
        <trans-unit id="7152da1256c62e6e859d7bd3f997ddde527f5775" translate="yes" xml:space="preserve">
          <source>Using Runtime Binds with Consumer Services</source>
          <target state="translated">소비자 서비스와 함께 런타임 바인드 사용</target>
        </trans-unit>
        <trans-unit id="b9c3f89772b924f6802c615e643e9cd0038ebddc" translate="yes" xml:space="preserve">
          <source>Using Secrets in a Chef Vault</source>
          <target state="translated">Chef Vault에서 비밀 사용</target>
        </trans-unit>
        <trans-unit id="2bdcb486fee8f928e6c7e37223e07b0f33283cc7" translate="yes" xml:space="preserve">
          <source>Using Templates</source>
          <target state="translated">템플릿 사용</target>
        </trans-unit>
        <trans-unit id="9e872a16217a54475c9602a042c91ce389dccc51" translate="yes" xml:space="preserve">
          <source>Using URL in source</source>
          <target state="translated">소스에서 URL 사용</target>
        </trans-unit>
        <trans-unit id="cd34471693e50b7f1448002b0a00f47855a61060" translate="yes" xml:space="preserve">
          <source>Using a &lt;em&gt;user.toml&lt;/em&gt; File</source>
          <target state="translated">사용 &lt;em&gt;user.toml의&lt;/em&gt; 파일</target>
        </trans-unit>
        <trans-unit id="f5481f8b4635324a5ba376df0aa08a49a628b88d" translate="yes" xml:space="preserve">
          <source>Using a Chef Vault</source>
          <target state="translated">Chef Vault 사용</target>
        </trans-unit>
        <trans-unit id="6bdd55389d9b8fd9882d510e9535fbc406d4f413" translate="yes" xml:space="preserve">
          <source>Using a Ruby expression is the most common approach for defining template variables because this is how all variables that are sent to a template are referenced. Whenever a template needs to use an &lt;code&gt;each&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, or &lt;code&gt;end&lt;/code&gt;, use a Ruby statement.</source>
          <target state="translated">템플릿으로 전송되는 모든 변수가 참조되는 방식이므로 Ruby 변수를 사용하는 것이 템플릿 변수를 정의하는 가장 일반적인 방법입니다. 템플릿이 &lt;code&gt;each&lt;/code&gt; , &lt;code&gt;if&lt;/code&gt; 또는 &lt;code&gt;end&lt;/code&gt; 를 사용해야 할 때마다 Ruby 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fc111d3bd7be056b61c9b4bf9e00c7ede528514f" translate="yes" xml:space="preserve">
          <source>Using a Scheduler</source>
          <target state="translated">스케줄러 사용</target>
        </trans-unit>
        <trans-unit id="4a972bbf85ccca976e361294cfc080b82df2c503" translate="yes" xml:space="preserve">
          <source>Using a branch tracking strategy requires that a branch for each environment exists in the source control and that each cookbook&amp;rsquo;s versioning policy is tracked at the branch level. This approach is relatively simple and lightweight: for development environments that track the latest cookbooks, just bump the version before a cookbook is uploaded for testing. For any cookbooks that require higher levels of version control, knife allows cookbooks to be uploaded to specific environments and for cookbooks to be frozen (which prevents others from being able to make changes to that cookbook).</source>
          <target state="translated">지점 추적 전략을 사용하려면 각 환경에 대한 지점이 소스 제어에 존재하고 각 요리 책의 버전 관리 정책이 지점 레벨에서 추적되어야합니다. 이 방법은 비교적 간단하고 가벼우므로 최신 요리 책을 추적하는 개발 환경의 경우 테스트를 위해 요리 책을 업로드하기 전에 버전을 업그레이드하십시오. 높은 수준의 버전 제어가 필요한 요리 책의 경우 나이프를 사용하면 요리 책을 특정 환경에 업로드하고 요리 책을 고정 할 수 있습니다 (다른 사람이 해당 요리 책을 변경할 수 없도록 함).</target>
        </trans-unit>
        <trans-unit id="1891857d92e126efdd6e0e0563547f1cdcd73734" translate="yes" xml:space="preserve">
          <source>Using a maximum version control strategy is required when everything needs to be tracked in source control. This approach is very similar to a branch tracking strategy while the cookbook is in development and being tested, but is more complicated and time-consuming (and requires file-level editing for environment data) in order to get the cookbook deployed to a production environment.</source>
          <target state="translated">소스 제어에서 모든 사항을 추적해야하는 경우 최대 버전 제어 전략을 사용해야합니다. 이 방법은 쿡북이 개발 및 테스트되는 동안 지점 추적 전략과 매우 유사하지만 쿡북을 프로덕션 환경에 배포하려면 더 복잡하고 시간이 많이 걸리며 (환경 데이터에 대한 파일 수준 편집이 필요함) .</target>
        </trans-unit>
        <trans-unit id="61af566c3f90792a553ee5a06894179949b865f4" translate="yes" xml:space="preserve">
          <source>Using a tar.gz archive is the more common approach, but requires that cookbooks be added to an archive. For example:</source>
          <target state="translated">tar.gz 아카이브를 사용하는 것이 더 일반적인 방법이지만 요리 책을 아카이브에 추가해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3402d6dbcf07ce33470a9c6697de65ffa4f32bc6" translate="yes" xml:space="preserve">
          <source>Using an Environment Variable</source>
          <target state="translated">환경 변수 사용</target>
        </trans-unit>
        <trans-unit id="1f6a1e9e87c455e11b78815fcb664cfb67877df4" translate="yes" xml:space="preserve">
          <source>Using an empty run-list</source>
          <target state="translated">빈 런리스트 사용</target>
        </trans-unit>
        <trans-unit id="e2b638349958afb0ca0f4c0595ff7d462d2820b2" translate="yes" xml:space="preserve">
          <source>Using an encrypted data bag</source>
          <target state="translated">암호화 된 데이터 백 사용</target>
        </trans-unit>
        <trans-unit id="875f67c3376903c487ea727a19665efe0152b689" translate="yes" xml:space="preserve">
          <source>Using an encrypted data bag.</source>
          <target state="translated">암호화 된 데이터 백 사용.</target>
        </trans-unit>
        <trans-unit id="1287533e973dc93d6e3f8c03de6ddb9c56284204" translate="yes" xml:space="preserve">
          <source>Using chef vaults</source>
          <target state="translated">Chef Vault 사용</target>
        </trans-unit>
        <trans-unit id="406c0a3e0156b6930bf4931c6f74bfdcfe114eb8" translate="yes" xml:space="preserve">
          <source>Using chef vaults.</source>
          <target state="translated">요리사 금고 사용.</target>
        </trans-unit>
        <trans-unit id="dc1d836aaa3fd4b3f4d2c096004c215d5889a4a6" translate="yes" xml:space="preserve">
          <source>Using chef-solo to run targeted Chef Infra Client runs for specific scenarios</source>
          <target state="translated">특정 시나리오에 대해 Chef-solo를 사용하여 대상 Chef Infra Client 실행 실행</target>
        </trans-unit>
        <trans-unit id="ed86de8e24ce2d9f2cefebfaa6dd3124dd75a45c" translate="yes" xml:space="preserve">
          <source>Using chef-solo to run targeted chef-client runs for specific scenarios</source>
          <target state="translated">Chef-Solo를 사용하여 특정 시나리오에 대해 대상 Chef-Client 실행을 실행</target>
        </trans-unit>
        <trans-unit id="5f76649cf48c7410a246ea1bee11b9f8338e23a5" translate="yes" xml:space="preserve">
          <source>Using command-line tools</source>
          <target state="translated">명령 줄 도구 사용</target>
        </trans-unit>
        <trans-unit id="7a7cedb4af4d8c7460cc923f0eac732e09af8a32" translate="yes" xml:space="preserve">
          <source>Using community-authored lightweight resources before creating custom ones</source>
          <target state="translated">사용자 정의 자원을 작성하기 전에 커뮤니티 작성 경량 자원 사용</target>
        </trans-unit>
        <trans-unit id="fd62e28ba49c99a41fb7d90704bb9b67a9531f1b" translate="yes" xml:space="preserve">
          <source>Using cron and the &lt;code&gt;/etc/cron.d&lt;/code&gt; directory for periodic maintenance tasks</source>
          <target state="translated">주기적 유지 보수 작업에 cron 및 &lt;code&gt;/etc/cron.d&lt;/code&gt; 디렉토리 사용</target>
        </trans-unit>
        <trans-unit id="aef70c3e6cb60c0dd90680f27dd7adf84182cf0b" translate="yes" xml:space="preserve">
          <source>Using force_formatter causes chef to default to formatter output when STDOUT is not a tty</source>
          <target state="translated">force_formatter를 사용하면 STDOUT이 tty가 아닐 때 chef가 포맷터 출력을 기본값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="591271a5614cd4b2161fd58d8ba00f2ac149fff3" translate="yes" xml:space="preserve">
          <source>Using force_logger causes chef to default to logger output when STDOUT is a tty</source>
          <target state="translated">force_logger를 사용하면 STDOUT이 tty 일 때 Chef가 기본적으로 로거 출력으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="6a50690e4d0a03d17198d2a15f52debd54715b7d" translate="yes" xml:space="preserve">
          <source>Using individual identifier components as a &lt;code&gt;Hash&lt;/code&gt;</source>
          <target state="translated">개별 식별자 구성 요소를 &lt;code&gt;Hash&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e963ca507c8e77309f13372aa6ffefcefaa5d973" translate="yes" xml:space="preserve">
          <source>Using inputs with Profile inheritance</source>
          <target state="translated">프로필 상속과 함께 입력 사용</target>
        </trans-unit>
        <trans-unit id="09cdf9ee75d16c5d97619dbd7eaeb8e3266ab1f2" translate="yes" xml:space="preserve">
          <source>Using knife</source>
          <target state="translated">칼 사용</target>
        </trans-unit>
        <trans-unit id="c2f514983ce4f1bb2b9b9b4cb6bb57951fcba77c" translate="yes" xml:space="preserve">
          <source>Using local path in source</source>
          <target state="translated">소스에서 로컬 경로 사용</target>
        </trans-unit>
        <trans-unit id="1638d510e5a786b5b2e1344d61783ba57e41c20f" translate="yes" xml:space="preserve">
          <source>Using logging with Chef Infra Client</source>
          <target state="translated">Chef Infra Client에서 로깅 사용</target>
        </trans-unit>
        <trans-unit id="e5f4cf591e49d887ecc4f74b05fc5b92a6ea44e9" translate="yes" xml:space="preserve">
          <source>Using logging with the chef-client</source>
          <target state="translated">chef-client와 함께 로깅 사용</target>
        </trans-unit>
        <trans-unit id="afc35064d62314528d82fc0e54d5ec54897c5cac" translate="yes" xml:space="preserve">
          <source>Using multiple organizations within the Chef Infra Server ensures that the same toolset, coding patterns and practices, physical hardware, and product support effort is being applied across the entire company, even when:</source>
          <target state="translated">Chef Infra Server 내에서 여러 조직을 사용하면 다음과 같은 경우에도 동일한 도구 세트, 코딩 패턴 및 관행, 물리적 하드웨어 및 제품 지원 노력이 회사 전체에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="0b59ca1091d3668988072c959fb2dd77ffda11dd" translate="yes" xml:space="preserve">
          <source>Using multiple organizations within the Chef server ensures that the same toolset, coding patterns and practices, physical hardware, and product support effort is being applied across the entire company, even when:</source>
          <target state="translated">Chef 서버 내에서 여러 조직을 사용하면 다음과 같은 경우에도 동일한 툴셋, 코딩 패턴 및 실습, 물리적 하드웨어 및 제품 지원 노력이 회사 전체에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="730d7f709959b695391d09cace2d1b116b078f6e" translate="yes" xml:space="preserve">
          <source>Using platform resources before creating custom ones</source>
          <target state="translated">사용자 정의 자원을 작성하기 전에 플랫폼 자원 사용</target>
        </trans-unit>
        <trans-unit id="b34c0c2e1fe9ff3e3dca66165919549e5930d7a8" translate="yes" xml:space="preserve">
          <source>Using resources from within your callbacks as blocks or within callback files distributed with your application&amp;rsquo;s source code. To use embedded recipes for callbacks:</source>
          <target state="translated">콜백 내 리소스를 애플리케이션 소스 코드와 함께 배포 된 블록 또는 콜백 파일 내에서 사용합니다. 콜백에 내장 레시피를 사용하려면 :</target>
        </trans-unit>
        <trans-unit id="b243512fd952c901d94edfc32cec956454dc1eb9" translate="yes" xml:space="preserve">
          <source>Using resources included in Chef Infra Client or community cookbooks before creating custom ones</source>
          <target state="translated">사용자 지정 항목을 만들기 전에 Chef Infra Client 또는 커뮤니티 쿡북에 포함 된 리소스 사용</target>
        </trans-unit>
        <trans-unit id="7fed4e9556d3e09b29bc4fd11c79fe17714abcd3" translate="yes" xml:space="preserve">
          <source>Using show_download_progress will display the overall progress of a &lt;code&gt;remote_file&lt;/code&gt; download. Default value: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">show_download_progress를 사용하면 &lt;code&gt;remote_file&lt;/code&gt; 다운로드 의 전체 진행률이 표시됩니다 . 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04dd160adb5e1549ec6e930c0eef5aa73cc570f4" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;debug_value&lt;/code&gt; method from chef-shell to identify the location(s) from which attribute values are being set</source>
          <target state="translated">chef-shell 의 &lt;code&gt;debug_value&lt;/code&gt; 메소드를 사용하여 속성 값이 설정되는 위치 식별</target>
        </trans-unit>
        <trans-unit id="c62ac5ca27d8f51d2c90ca63fcc9a474f209bafe" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;debug_value&lt;/code&gt; method from chef-shell to indentify the location(s) from which attribute values are being set</source>
          <target state="translated">chef-shell 의 &lt;code&gt;debug_value&lt;/code&gt; 메소드를 사용하여 속성 값이 설정되는 위치를 식별</target>
        </trans-unit>
        <trans-unit id="4ae7ca9045e1815d0ab8d8cb7690474a7562bbad" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;deps&lt;/code&gt; method instead of &lt;code&gt;require&lt;/code&gt; is recommended, especially if the environment in which knife is being run contains a lot of plugins and/or any of those plugins have a lot of dependencies and/or requirements on other plugins and search functionality.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 대신 &lt;code&gt;deps&lt;/code&gt; 메서드를 사용하는 것이 좋습니다. 특히 knife가 실행되는 환경에 많은 플러그인이 포함되어 있고 / 또는 이러한 플러그인이 다른 플러그인 및 검색 기능에 대한 종속성 및 / 또는 요구 사항이 많은 경우에 특히 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b65ec38e878a1ad4dbce1a7a3ba5c1dff09f57ce" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;deps&lt;/code&gt; method instead of &lt;code&gt;require&lt;/code&gt; is recommended, especially when the environment in which knife is being run contains a lot of plugins and/or any of those plugins have a lot of dependencies and/or requirements on other plugins and search functionality.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 대신 &lt;code&gt;deps&lt;/code&gt; 메소드를 사용하는 것이 좋습니다. 특히 knife가 실행되는 환경에 많은 플러그인이 포함되어 있고 / 또는 이러한 플러그인이 다른 플러그인 및 검색 기능에 대한 종속성 및 / 또는 요구 사항이 많은 경우에 특히 좋습니다.</target>
        </trans-unit>
        <trans-unit id="813d993005479a8a35b12e0015d5304b04f5c45d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;ignore_failure&lt;/code&gt; method in a recipe to force Chef Infra Client to move past an error to see what else is going on in the recipe, outside of a known failure</source>
          <target state="translated">레시피에서 &lt;code&gt;ignore_failure&lt;/code&gt; 메소드를 사용하여 Chef Infra Client가 오류를 지나서 알려진 오류를 제외하고 레시피에서 다른 일이 진행되고 있는지 확인하도록 강제합니다.</target>
        </trans-unit>
        <trans-unit id="48a306a5bc6a42bc4398a62854dffaed901f1696" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;ignore_failure&lt;/code&gt; method in a recipe to force the chef-client to move past an error to see what else is going on in the recipe, outside of a known failure</source>
          <target state="translated">레시피에서 &lt;code&gt;ignore_failure&lt;/code&gt; 메소드를 사용하여 요리사 클라이언트가 오류를 지나서 알려진 실패 이외의 레시피에서 진행중인 작업을 확인하도록 강요</target>
        </trans-unit>
        <trans-unit id="142c881072e85080112813426addec7fd52430a6" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;knife ssh&lt;/code&gt; subcommand is one way to do this.</source>
          <target state="translated">&lt;code&gt;knife ssh&lt;/code&gt; 하위 명령을 사용하는 것이이를 수행하는 한 가지 방법입니다.</target>
        </trans-unit>
        <trans-unit id="966c9e89cf37c88f59b6989157beee60837f92d7" translate="yes" xml:space="preserve">
          <source>Using the &lt;strong&gt;bff_package&lt;/strong&gt; resource:</source>
          <target state="translated">&lt;strong&gt;bff_package&lt;/strong&gt; 리소스 사용</target>
        </trans-unit>
        <trans-unit id="af127a37183ec235fc0b16a11733e9a24cd81711" translate="yes" xml:space="preserve">
          <source>Using the &lt;strong&gt;chef_handler&lt;/strong&gt; cookbook</source>
          <target state="translated">&lt;strong&gt;chef_handler&lt;/strong&gt; 요리 책 사용하기</target>
        </trans-unit>
        <trans-unit id="dda344e66237b8f7c8ee6a9eab470c78e93ec40a" translate="yes" xml:space="preserve">
          <source>Using the &lt;strong&gt;dsc_resource&lt;/strong&gt; has the following requirements:</source>
          <target state="translated">&lt;strong&gt;dsc_resource&lt;/strong&gt; 를 사용하려면 다음 요구 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7cfb6d5769a5bc4a37663b3eb3ab4f4eb5baf46" translate="yes" xml:space="preserve">
          <source>Using the &lt;strong&gt;file&lt;/strong&gt; Resource or other manual management method of LC configuration may overwrite settings from this resource and break your system.</source>
          <target state="translated">&lt;strong&gt;파일&lt;/strong&gt; 리소스 또는 기타 LC 구성의 수동 관리 방법을 사용하면 이 리소스의 설정을 덮어 쓰고 시스템을 손상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5eba8bb5d4c2fd647daeaad086716e440f063164" translate="yes" xml:space="preserve">
          <source>Using the &lt;strong&gt;log&lt;/strong&gt; resource in a recipe to define custom logging</source>
          <target state="translated">레시피에서 &lt;strong&gt;로그&lt;/strong&gt; 자원을 사용하여 사용자 정의 로깅 정의</target>
        </trans-unit>
        <trans-unit id="8ecfe2cf81d5eda2df2fe14513eddf623e6e32e5" translate="yes" xml:space="preserve">
          <source>Using the Admin Username and FQDN that you choose when provisioning the Chef Automate Azure VM from the Azure portal, copy the resulting tarball to your Azure VM:</source>
          <target state="translated">Azure Portal에서 Chef Automate Azure VM을 프로 비전 할 때 선택한 관리자 사용자 이름 및 FQDN을 사용하여 결과 tarball을 Azure VM에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="487cf60a371c7ed70741795172747b9dacc1e27e" translate="yes" xml:space="preserve">
          <source>Using the CLI option &lt;code&gt;--input name1=value1 name2=value2...&lt;/code&gt; to read directly from the command line</source>
          <target state="translated">CLI 옵션 &lt;code&gt;--input name1=value1 name2=value2...&lt;/code&gt; 를 사용하여 명령 줄에서 직접 읽기</target>
        </trans-unit>
        <trans-unit id="110b3796d34021b5f0ff9209b839df592d8b7689" translate="yes" xml:space="preserve">
          <source>Using the CLI option &lt;code&gt;--input-file somefile.yaml&lt;/code&gt; to read inputs from files</source>
          <target state="translated">CLI 옵션 &lt;code&gt;--input-file somefile.yaml&lt;/code&gt; 을 사용하여 파일 에서 입력 읽기</target>
        </trans-unit>
        <trans-unit id="bb0f1b8b1c39605001afaf70b929cf55803d7eb0" translate="yes" xml:space="preserve">
          <source>Using the Chef Habitat Integration</source>
          <target state="translated">Chef Habitat 통합 사용</target>
        </trans-unit>
        <trans-unit id="66e88822f9abcef1f23da2279f8045a4d8ab7fb6" translate="yes" xml:space="preserve">
          <source>Using the Chef InSpec target option to provide credentials on AWS</source>
          <target state="translated">Chef InSpec 대상 옵션을 사용하여 AWS에서 자격 증명 제공</target>
        </trans-unit>
        <trans-unit id="f3e227b8057640e745a82ad4d474587d4fafcf24" translate="yes" xml:space="preserve">
          <source>Using the Chef InSpec target option to provide credentials on Azure</source>
          <target state="translated">Chef InSpec 대상 옵션을 사용하여 Azure에서 자격 증명 제공</target>
        </trans-unit>
        <trans-unit id="50164aaef42f51a8d23479cb6ca9336567a31ed9" translate="yes" xml:space="preserve">
          <source>Using the Chef Infra Server REST API</source>
          <target state="translated">Chef Infra Server REST API 사용</target>
        </trans-unit>
        <trans-unit id="e0d431ab6dbd881bf58d039d5d5f48c662c31f41" translate="yes" xml:space="preserve">
          <source>Using the Chef development kit-provided Ruby as your system Ruby is optional. This just depends on how you are using Ruby on your system. For many users, Ruby is primarily used for authoring Chef cookbooks and recipes. If that&amp;rsquo;s true for you, then using the Chef development kit-provided Ruby as your system Ruby is recommended. But for other users who are already using tools like rbenv to manage Ruby versions, then that&amp;rsquo;s OK too.</source>
          <target state="translated">Chef 개발 키트 제공 Ruby를 시스템 Ruby로 사용하는 것은 선택 사항입니다. 이것은 시스템에서 Ruby를 사용하는 방법에 따라 다릅니다. 많은 사용자들에게 Ruby는 Chef 요리 책과 레시피를 작성하는 데 주로 사용됩니다. 이것이 맞다면 Chef 개발 키트 제공 Ruby를 시스템 Ruby로 사용하는 것이 좋습니다. 그러나 이미 rbenv와 같은 도구를 사용하여 Ruby 버전을 관리하는 다른 사용자의 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="e34947ba46c5f58919fcc64167c22dd5351fc761" translate="yes" xml:space="preserve">
          <source>Using the Chef management console web user interface</source>
          <target state="translated">Chef 관리 콘솔 웹 사용자 인터페이스 사용</target>
        </trans-unit>
        <trans-unit id="05a8c122efc8f9442cd885d7c76f7790d33161f4" translate="yes" xml:space="preserve">
          <source>Using the FQDN as the node name, and then allowing Ohai to collect this information during each Chef Infra Client run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique.</source>
          <target state="translated">FQDN을 노드 이름으로 사용한 다음 Ohai가 각 Chef Infra Client 실행 중에이 정보를 수집하도록 허용하는 것이 권장되는 접근 방식이며 조직 전체의 모든 노드 이름이 고유한지 확인하는 가장 쉬운 방법입니다.</target>
        </trans-unit>
        <trans-unit id="80a1d7f530b8e4a849d3fadf3595baad7577a98b" translate="yes" xml:space="preserve">
          <source>Using the FQDN as the node name, and then allowing Ohai to collect this information during each chef-client run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique.</source>
          <target state="translated">FQDN을 노드 이름으로 사용하고 Ohai가 각 요리사-클라이언트 실행 중에이 정보를 수집 할 수 있도록하는 것이 조직 전체의 모든 노드 이름이 고유하도록하는 가장 좋은 방법이며 권장되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="dbea11d1d8889d1bd6b6546ac2363707adc053f1" translate="yes" xml:space="preserve">
          <source>Using the base &lt;strong&gt;package&lt;/strong&gt; resource:</source>
          <target state="translated">기본 &lt;strong&gt;패키지&lt;/strong&gt; 리소스 사용</target>
        </trans-unit>
        <trans-unit id="04b451edcb65739494d0b9f24b4705e06c42ed06" translate="yes" xml:space="preserve">
          <source>Using the chef-shell and the &lt;strong&gt;breakpoint&lt;/strong&gt; resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints</source>
          <target state="translated">Chef-shell 및 &lt;strong&gt;중단 점&lt;/strong&gt; 리소스를 사용하여 레시피에 중단 점을 추가 한 다음 중단 점을 사용하여 레시피를 단계별로 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9638f8b65757520c74c3c0f4a57413f18a0330eb" translate="yes" xml:space="preserve">
          <source>Using the compile_time property</source>
          <target state="translated">compile_time 속성 사용</target>
        </trans-unit>
        <trans-unit id="aa3493904a3071bf8b6db8d2233289fb3284eff4" translate="yes" xml:space="preserve">
          <source>Using the default property values for the various resources is the recommended starting point when working with recipes. Then, depending on what each node requires, these default values can be overridden with node-, role-, environment-, and cookbook-specific values. The &lt;strong&gt;deploy&lt;/strong&gt; resource has four layout modifiers: &lt;code&gt;create_dirs_before_symlink&lt;/code&gt;, &lt;code&gt;purge_before_symlink&lt;/code&gt;, &lt;code&gt;symlink_before_migrate&lt;/code&gt;, and &lt;code&gt;symlinks&lt;/code&gt;. Each of these is a Hash that behaves as a property of the &lt;strong&gt;deploy&lt;/strong&gt; resource. When these layout modifiers are used in a recipe, they appear similar to the following:</source>
          <target state="translated">레시피 작업시 다양한 자원에 기본 특성 값을 사용하는 것이 좋습니다. 그런 다음 각 노드에 필요한 사항에 따라 이러한 기본값을 노드, 역할, 환경 및 요리 책별 값으로 재정의 할 수 있습니다. &lt;strong&gt;배포&lt;/strong&gt; : 자원은 네 개의 레이아웃 수정이 &lt;code&gt;create_dirs_before_symlink&lt;/code&gt; , &lt;code&gt;purge_before_symlink&lt;/code&gt; , &lt;code&gt;symlink_before_migrate&lt;/code&gt; 및 &lt;code&gt;symlinks&lt;/code&gt; . 이들 각각은 &lt;strong&gt;배치&lt;/strong&gt; 자원 의 특성으로 작동하는 해시입니다 . 이러한 레이아웃 수정자가 래서 피에 사용될 때 다음과 유사하게 나타납니다.</target>
        </trans-unit>
        <trans-unit id="b3a5375138bf5d465535be6b7918513c3a189171" translate="yes" xml:space="preserve">
          <source>Using the infographic as a guide, a typical continuous deployment scenario would be as follows:</source>
          <target state="translated">인포 그래픽을 가이드로 사용하면 일반적인 연속 배포 시나리오는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d6e83d7889a247d5d8b37030a2b43525e55391f9" translate="yes" xml:space="preserve">
          <source>Using the same bucket for backup archives and snapshots is supported but both must be configured independently.</source>
          <target state="translated">백업 아카이브 및 스냅 샷에 동일한 버킷 사용이 지원되지만 둘 다 독립적으로 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a97469d22d63c7d3e47351d56871019c80c30887" translate="yes" xml:space="preserve">
          <source>Using the same patterns in Ruby</source>
          <target state="translated">Ruby에서 동일한 패턴 사용</target>
        </trans-unit>
        <trans-unit id="956bbac8d7284f6fc40ba19f6af1719378b12995" translate="yes" xml:space="preserve">
          <source>Using this approach, you pass the package identifier as a single &lt;code&gt;String&lt;/code&gt;. It should consist of &lt;code&gt;&amp;lt;origin&amp;gt;/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt;/&amp;lt;release&amp;gt;&lt;/code&gt;, though &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; are optional.</source>
          <target state="translated">이 접근 방식을 사용하면 패키지 식별자를 단일 &lt;code&gt;String&lt;/code&gt; 으로 전달합니다 . &lt;code&gt;version&lt;/code&gt; 및 &lt;code&gt;release&lt;/code&gt; 는 선택 사항 이지만 &lt;code&gt;&amp;lt;origin&amp;gt;/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt;/&amp;lt;release&amp;gt;&lt;/code&gt; 로 구성되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="36ba6c63345692d37b65641453903aaacadaf762" translate="yes" xml:space="preserve">
          <source>Using this file, Builder only builds packages when source files or directories are updated in paths specified in &lt;code&gt;.bldr.toml&lt;/code&gt;. This allows you to configure the building, publishing, and post-processing phases of a plan build in Builder.</source>
          <target state="translated">이 파일을 사용하여 Builder는 &lt;code&gt;.bldr.toml&lt;/code&gt; 에 지정된 경로에서 소스 파일 또는 디렉토리가 업데이트 될 때만 패키지를 빌드합니다 . 이를 통해 Builder에서 계획 빌드의 빌드, 게시 및 사후 처리 단계를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdbda7dc622620b491df3241093d7de7f59a028e" translate="yes" xml:space="preserve">
          <source>Using this property may leave the system in an inconsistent state. For example, a user account will be removed even if the user is logged in. A user&amp;rsquo;s home directory will be removed, even if that directory is shared by multiple users.</source>
          <target state="translated">이 속성을 사용하면 시스템이 일관성이없는 상태가 될 수 있습니다. 예를 들어, 사용자가 로그인 한 경우에도 사용자 계정이 제거됩니다. 여러 사용자가 해당 디렉토리를 공유하더라도 사용자의 홈 디렉토리는 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="6ce711fa93715372421d777f5542631cf179f0a2" translate="yes" xml:space="preserve">
          <source>Using verbose logging with knife</source>
          <target state="translated">칼로 자세한 로깅 사용</target>
        </trans-unit>
        <trans-unit id="8c89d562e72d6a83f9b0b4e485c2879c56ff179f" translate="yes" xml:space="preserve">
          <source>Usually a distribution&amp;rsquo;s codename, such as &lt;code&gt;xenial&lt;/code&gt;, &lt;code&gt;bionic&lt;/code&gt;, or &lt;code&gt;focal&lt;/code&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;xenial&lt;/code&gt; , &lt;code&gt;bionic&lt;/code&gt; 또는 &lt;code&gt;focal&lt;/code&gt; 과 같은 배포의 코드 명 입니다.</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="f26ec68ac052fa84dd0deb8752a95a9bcbdec541" translate="yes" xml:space="preserve">
          <source>Utilize hardware RAID</source>
          <target state="translated">하드웨어 RAID 활용</target>
        </trans-unit>
        <trans-unit id="0fa2ff5785952199b4086a34e015d691fb6f638e" translate="yes" xml:space="preserve">
          <source>VIEW</source>
          <target state="translated">VIEW</target>
        </trans-unit>
        <trans-unit id="4832db0c2a675f1f970ffaddcd5f795dc2c0036a" translate="yes" xml:space="preserve">
          <source>VIRTIO_SCSI_MULTIQUEUE</source>
          <target state="translated">VIRTIO_SCSI_MULTIQUEUE</target>
        </trans-unit>
        <trans-unit id="aa75ca80739c490c6a03beef238530742fcc0aa9" translate="yes" xml:space="preserve">
          <source>VMware, Inc. is a subsidiary of Dell Technologies that provides cloud computing and platform virtualization software and services. This page outlines the different tools that can be used to integrate Chef with the VMware platform.</source>
          <target state="translated">VMware, Inc.는 클라우드 컴퓨팅 및 플랫폼 가상화 소프트웨어 및 서비스를 제공하는 Dell Technologies의 자회사입니다. 이 페이지에서는 Chef를 VMware 플랫폼과 통합하는 데 사용할 수있는 다양한 도구에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="270cde6f51228bdcdd1b20f2cc52e0d6c94fddd7" translate="yes" xml:space="preserve">
          <source>VPC networks to which the instance is connected. For this version, only a single network is supported.</source>
          <target state="translated">인스턴스가 연결된 VPC 네트워크입니다. 이 버전의 경우 단일 네트워크 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="96a908847b298223562c90f3e307afa430f99ae4" translate="yes" xml:space="preserve">
          <source>VPC_PEERING</source>
          <target state="translated">VPC_PEERING</target>
        </trans-unit>
        <trans-unit id="26c2d1962eed98dcd202bd42f35e36763c21a119" translate="yes" xml:space="preserve">
          <source>VSCode Chef Infra Extension</source>
          <target state="translated">VSCode Chef Infra 확장</target>
        </trans-unit>
        <trans-unit id="bc56f974b576f93f84de328c288398929828bec8" translate="yes" xml:space="preserve">
          <source>Vagrant</source>
          <target state="translated">Vagrant</target>
        </trans-unit>
        <trans-unit id="3d6a3a1192f5d0aab1a90c5e88fb35baa36411f6" translate="yes" xml:space="preserve">
          <source>Vagrant is governed by a &lt;a href=&quot;https://www.vagrantup.com/vmware/eula.html&quot;&gt;EULA&lt;/a&gt;</source>
          <target state="translated">Vagrant는 &lt;a href=&quot;https://www.vagrantup.com/vmware/eula.html&quot;&gt;EULA의&lt;/a&gt; 적용을받습니다.</target>
        </trans-unit>
        <trans-unit id="fdad100c38ba5daeb71ecf6ba2ebbf3e5d1ba989" translate="yes" xml:space="preserve">
          <source>Valid Values</source>
          <target state="translated">유효한 값</target>
        </trans-unit>
        <trans-unit id="0fdbbc9b0c528e947d993d43781b91bfba8efb61" translate="yes" xml:space="preserve">
          <source>Valid values that can be used to set &lt;em&gt;LC_ENV_VARIABLE&lt;/em&gt; are: LC_ADDRESS, LC_COLLATE, LC_CTYPE, LC_IDENTIFICATION, LC_MEASUREMENT, LC_MESSAGES, LC_MONETARY, LC_NAME, LC_NUMERIC, LC_PAPER, LC_TELEPHONE and LC_TIME.</source>
          <target state="translated">&lt;em&gt;LC_ENV_VARIABLE&lt;/em&gt; 을 설정하는 데 사용할 수있는 유효한 값 은 LC_ADDRESS, LC_COLLATE, LC_CTYPE, LC_IDENTIFICATION, LC_MEASUREMENT, LC_MESSAGES, LC_MONETARY, LC_NAME, LC_NUMERIC, LC_PAPER, LC_TELEPHONE 및 LC_TIME입니다.</target>
        </trans-unit>
        <trans-unit id="53ec127ca9c6b9065d3010ed010cd3618dd580bb" translate="yes" xml:space="preserve">
          <source>Valid values with frequency &lt;code&gt;:monthly&lt;/code&gt; are &lt;code&gt;1-31&lt;/code&gt; or &lt;code&gt;MON&lt;/code&gt; to &lt;code&gt;SUN&lt;/code&gt; and &lt;code&gt;LASTDAY&lt;/code&gt;.</source>
          <target state="translated">빈도가 &lt;code&gt;:monthly&lt;/code&gt; 인 유효한 값 은 &lt;code&gt;1-31&lt;/code&gt; 또는 &lt;code&gt;MON&lt;/code&gt; ~ &lt;code&gt;SUN&lt;/code&gt; 및 &lt;code&gt;LASTDAY&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b0529de09f26849e3f2e65d971fcacf2baf3fc5b" translate="yes" xml:space="preserve">
          <source>Valid values with frequency &lt;code&gt;:weekly&lt;/code&gt; are &lt;code&gt;MON-SUN&lt;/code&gt; or &lt;code&gt;\*&lt;/code&gt;.</source>
          <target state="translated">빈도가 &lt;code&gt;:weekly&lt;/code&gt; 인 유효한 값 은 &lt;code&gt;MON-SUN&lt;/code&gt; 또는 &lt;code&gt;\*&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="662badf3d57c9b2329a7305d1ce3bd38e35790cd" translate="yes" xml:space="preserve">
          <source>Valid values: &lt;code&gt;:minute&lt;/code&gt;, &lt;code&gt;:hourly&lt;/code&gt;, &lt;code&gt;:daily&lt;/code&gt;, &lt;code&gt;:weekly&lt;/code&gt;, &lt;code&gt;:monthly&lt;/code&gt;, &lt;code&gt;:none&lt;/code&gt;, &lt;code&gt;:once&lt;/code&gt;, &lt;code&gt;:on_logon&lt;/code&gt;, &lt;code&gt;:onstart&lt;/code&gt;, &lt;code&gt;:on_idle&lt;/code&gt;.</source>
          <target state="translated">유효한 값 : &lt;code&gt;:minute&lt;/code&gt; , &lt;code&gt;:hourly&lt;/code&gt; , &lt;code&gt;:daily&lt;/code&gt; , &lt;code&gt;:weekly&lt;/code&gt; , &lt;code&gt;:monthly&lt;/code&gt; , &lt;code&gt;:none&lt;/code&gt; , &lt;code&gt;:once&lt;/code&gt; , &lt;code&gt;:on_logon&lt;/code&gt; , &lt;code&gt;:onstart&lt;/code&gt; , &lt;code&gt;:on_idle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91ca2fd2f76d5639501b4319273f02604c2a130b" translate="yes" xml:space="preserve">
          <source>Validate that a GCP project has some arbitrary label with expected content (for example defined by regexp )</source>
          <target state="translated">GCP 프로젝트에 예상 콘텐츠가 포함 된 임의의 라벨이 있는지 확인합니다 (예 : regexp로 정의 됨).</target>
        </trans-unit>
        <trans-unit id="b54677adae1a1bfcb5b28081976e35691eaecb99" translate="yes" xml:space="preserve">
          <source>Validate that the system process limits have not already been increased.</source>
          <target state="translated">시스템 프로세스 한계가 아직 증가되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="38f65eec0ec0bc4d69178c0b9e886826d0972475" translate="yes" xml:space="preserve">
          <source>Validate the Installation</source>
          <target state="translated">설치 확인</target>
        </trans-unit>
        <trans-unit id="7dceb7ea993843f27068670ae597dbd5ed2d0be9" translate="yes" xml:space="preserve">
          <source>Validate the shared object integrity. If one or more snapshot IDs is not given all snapshots will be validated</source>
          <target state="translated">공유 객체 무결성을 확인합니다. 하나 이상의 스냅 샷 ID가 제공되지 않으면 모든 스냅 샷이 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="16e96d32adf559c4a53fda5cd5f2e9c9bf1ba639" translate="yes" xml:space="preserve">
          <source>Validates checksum of the downloaded file using the &lt;code&gt;pkg_shasum&lt;/code&gt; value, if it is specified.</source>
          <target state="translated">지정된 경우 &lt;code&gt;pkg_shasum&lt;/code&gt; 값을 사용하여 다운로드 된 파일의 체크섬을 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="b867e8ba621dd33174d7aaf636148f367d19443e" translate="yes" xml:space="preserve">
          <source>Validates the package content by comparing SHA-256 checksums</source>
          <target state="translated">SHA-256 체크섬을 비교하여 패키지 내용을 검증합니다.</target>
        </trans-unit>
        <trans-unit id="4ea7b4cbfb663909411576a9db8c7f3709cbd5d6" translate="yes" xml:space="preserve">
          <source>Validation with InSpec</source>
          <target state="translated">InSpec으로 검증</target>
        </trans-unit>
        <trans-unit id="99ebdcc7d044fb6c6d186b99925dd79f5a105264" translate="yes" xml:space="preserve">
          <source>Validatorless Bootstrap</source>
          <target state="translated">검증가없는 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="c43f22ae1dbfa450ac154a8ec784044fbce25bb3" translate="yes" xml:space="preserve">
          <source>Validatorless and Legacy Validator Bootstraps</source>
          <target state="translated">유효성 검사기 및 레거시 유효성 검사기 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="7c58d573dfe7019c55982c0890c19190b1b849d6" translate="yes" xml:space="preserve">
          <source>Value for taint</source>
          <target state="translated">오염 값</target>
        </trans-unit>
        <trans-unit id="eb68e34615bcbaf6aa783224739264a4e8b52153" translate="yes" xml:space="preserve">
          <source>Value for the &lt;code&gt;C&lt;/code&gt; certificate field.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 인증서 필드의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="8c22ccb2db2c4d1e4fa105af4388fcf51ab98a4b" translate="yes" xml:space="preserve">
          <source>Value for the &lt;code&gt;CN&lt;/code&gt; certificate field.</source>
          <target state="translated">&lt;code&gt;CN&lt;/code&gt; 인증서 필드의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="d1e8fd9b53d8a89266a599914e8fbc069728c476" translate="yes" xml:space="preserve">
          <source>Value for the &lt;code&gt;L&lt;/code&gt; certificate field.</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; 인증서 필드의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="6777dc5738e579688710bfc6428683fe3e5155d9" translate="yes" xml:space="preserve">
          <source>Value for the &lt;code&gt;O&lt;/code&gt; certificate field.</source>
          <target state="translated">&lt;code&gt;O&lt;/code&gt; 인증서 필드의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="1eed5a0eebaaecfd40943edae2507e1bab2abf07" translate="yes" xml:space="preserve">
          <source>Value for the &lt;code&gt;OU&lt;/code&gt; certificate field.</source>
          <target state="translated">&lt;code&gt;OU&lt;/code&gt; 인증서 필드의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="028416a2d4196bcbf490b0f876ed4ad81d1e776d" translate="yes" xml:space="preserve">
          <source>Value for the &lt;code&gt;ST&lt;/code&gt; certificate field.</source>
          <target state="translated">&lt;code&gt;ST&lt;/code&gt; 인증서 필드의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="205d9cd8144f0a8a485abade8ce0c89f344ad899" translate="yes" xml:space="preserve">
          <source>Value for the &lt;code&gt;email&lt;/code&gt; certificate field.</source>
          <target state="translated">&lt;code&gt;email&lt;/code&gt; 인증서 필드의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="18b1d757bfcbf12ba43603da4b1392f9c8497d1f" translate="yes" xml:space="preserve">
          <source>Value must be a valid, writable file path.</source>
          <target state="translated">값은 유효한 쓰기 가능한 파일 경로 여야합니다.</target>
        </trans-unit>
        <trans-unit id="995ae44dbd86ab924b52cbe019a0f6c762f132b3" translate="yes" xml:space="preserve">
          <source>Value of the metadata key/value pair</source>
          <target state="translated">메타 데이터 키 / 값 쌍의 값</target>
        </trans-unit>
        <trans-unit id="b50c5d567661e84b2d863d2af9694b2a66088ea6" translate="yes" xml:space="preserve">
          <source>Value representing the number of days from now through which the issued CRL will remain valid. The CRL will expire after this period.</source>
          <target state="translated">지금부터 발행 된 CRL이 유효한 기간을 나타내는 값입니다. CRL은이 기간이 지나면 만료됩니다.</target>
        </trans-unit>
        <trans-unit id="90e0e73175e15691a4852c16eec865d3f26f8b1f" translate="yes" xml:space="preserve">
          <source>Value representing the number of days from now through which the issued certificate cert will remain valid. The certificate will expire after this period.</source>
          <target state="translated">지금부터 발급 된 인증서 인증서의 유효 기간을 나타내는 값입니다. 이 기간이 지나면 인증서가 만료됩니다.</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="9178214f41f09a6bf0837f53cdca224986f13e25" translate="yes" xml:space="preserve">
          <source>Values can be entered with double quotes (&amp;rdquo; &amp;rdquo;) or single quotes (&amp;lsquo; &amp;lsquo;), but this should be done consistently.</source>
          <target state="translated">큰 따옴표 ( &quot;&quot;) 또는 작은 따옴표 ( '')로 값을 입력 할 수 있지만 일관되게 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="e42cd5e4694698f81fcc751d456af12120fbef02" translate="yes" xml:space="preserve">
          <source>Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment.</source>
          <target state="translated">데이터 백에 저장된 값은 조직 전체에 적용되며 모든 환경에서 사용할 수 있습니다. 데이터 백 내에 환경 별 데이터를 저장하는 데 사용할 수있는 두 가지 주요 전략이 있습니다. 환경에 해당하는 최상위 키를 사용하거나 각 환경에 대해 별도의 항목을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="65a5757f7f4afaac74acb1ad2c1381758a0ab7d9" translate="yes" xml:space="preserve">
          <source>Values to include in the hint file.</source>
          <target state="translated">힌트 파일에 포함 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="6d4e2a57bcaea541a22d886895ed9c5ced162b6e" translate="yes" xml:space="preserve">
          <source>Variables must be set when the Supervisor process starts, not when the service is loaded, which may require a bit of planning on the part of the Chef Habitat user.</source>
          <target state="translated">서비스가로드 될 때가 아니라 Supervisor 프로세스가 시작될 때 변수를 설정해야합니다.이 경우 Chef Habitat 사용자 측에서 약간의 계획이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fba657a2566a29bb2eae7ad600ea97c18865719" translate="yes" xml:space="preserve">
          <source>Variations</source>
          <target state="translated">Variations</target>
        </trans-unit>
        <trans-unit id="8bf2fb2aaaf04cdf3243c913c8efd7f9bc682c62" translate="yes" xml:space="preserve">
          <source>Various improvements have been made to attribute syntax.</source>
          <target state="translated">속성 구문이 다양하게 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="3260b86e05421de736081f07aa9e0f040e352217" translate="yes" xml:space="preserve">
          <source>Various improvements have been made to custom resource syntax.</source>
          <target state="translated">사용자 지정 리소스 구문이 다양하게 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="b7141bca53df0c5cba6c76bd1f3910d0bdf0e19d" translate="yes" xml:space="preserve">
          <source>Various job messages sent from a workstation to the Chef Push Jobs server</source>
          <target state="translated">워크 스테이션에서 Chef Push Jobs 서버로 전송되는 다양한 작업 메시지</target>
        </trans-unit>
        <trans-unit id="7db6a118cb2e00752fb6c3778dabd8bc8c9d2851" translate="yes" xml:space="preserve">
          <source>Vault Commands</source>
          <target state="translated">Vault 명령</target>
        </trans-unit>
        <trans-unit id="c94133a70f17adc22485cb5699266c305f8f285f" translate="yes" xml:space="preserve">
          <source>Vault Common Options</source>
          <target state="translated">Vault 공통 옵션</target>
        </trans-unit>
        <trans-unit id="ac88f3bae14bf61d38a5d58dc8d76cdc91d1b276" translate="yes" xml:space="preserve">
          <source>Vendor End-of-Life</source>
          <target state="translated">공급 업체 수명 종료</target>
        </trans-unit>
        <trans-unit id="fae04bbfacfc8ba513d9c6e29ceb354e5473f46f" translate="yes" xml:space="preserve">
          <source>Vendor End-of-Life Date</source>
          <target state="translated">공급 업체 수명 종료 날짜</target>
        </trans-unit>
        <trans-unit id="22c221be09a73bc93149facd05b0170650f67d5b" translate="yes" xml:space="preserve">
          <source>Vendoring Dependencies</source>
          <target state="translated">공급 업체 종속성</target>
        </trans-unit>
        <trans-unit id="4734cbabb290e7813d46f701d8efaaf8e0e9678a" translate="yes" xml:space="preserve">
          <source>Verb Subcommands</source>
          <target state="translated">동사 부속 명령</target>
        </trans-unit>
        <trans-unit id="03128bed906297aaae20f8f5b84b2c5ec6e0f459" translate="yes" xml:space="preserve">
          <source>Verification</source>
          <target state="translated">Verification</target>
        </trans-unit>
        <trans-unit id="6375d5344fc25c84f85c9a1e4bb57870a987f77f" translate="yes" xml:space="preserve">
          <source>Verification of changes will begin automatically and a corresponding pull request will be opened in Bitbucket.</source>
          <target state="translated">변경 사항 확인이 자동으로 시작되고 해당 풀 요청이 Bitbucket에서 열립니다.</target>
        </trans-unit>
        <trans-unit id="f3a016b0c5dfc85443162ed7a257c22ed342406f" translate="yes" xml:space="preserve">
          <source>Verifies a Habitat Artifact with an origin key</source>
          <target state="translated">오리진 키를 사용하여 서식지 아티팩트를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f5ccf410d768dfc4a59bd0d2e9001568c8e9ce95" translate="yes" xml:space="preserve">
          <source>Verifies a certificate.</source>
          <target state="translated">인증서를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5466c7ace85c5cd6baca1204e4b87020aae9fdf6" translate="yes" xml:space="preserve">
          <source>Verifies if a value is included in a list.</source>
          <target state="translated">값이 목록에 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fe6dc49396cea6a8a13a561b566d240d700db1b9" translate="yes" xml:space="preserve">
          <source>Verifies that an item is included in a list.</source>
          <target state="translated">항목이 목록에 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="dda6ac27b9d3b234a68e8b2c412e90ab5a03a4e1" translate="yes" xml:space="preserve">
          <source>Verify</source>
          <target state="translated">Verify</target>
        </trans-unit>
        <trans-unit id="70230660dd9b88ce89bb2c55e8d82c1461d1062d" translate="yes" xml:space="preserve">
          <source>Verify &lt;code&gt;pem&lt;/code&gt; output of DH parameters:</source>
          <target state="translated">DH 매개 변수의 &lt;code&gt;pem&lt;/code&gt; 출력을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="d43840537c3b2d4a9a9444504f4e4c4a0c549386" translate="yes" xml:space="preserve">
          <source>Verify Certificate Was Signed by Proper Key</source>
          <target state="translated">인증서가 올바른 키로 서명되었는지 확인</target>
        </trans-unit>
        <trans-unit id="a8dbecf88cbffebdb4e027b5a080d14868d452c0" translate="yes" xml:space="preserve">
          <source>Verify Encryption</source>
          <target state="translated">암호화 확인</target>
        </trans-unit>
        <trans-unit id="4fe74f3b79d3d216c1e128ae1b7dd493a738d116" translate="yes" xml:space="preserve">
          <source>Verify Failover</source>
          <target state="translated">장애 조치 확인</target>
        </trans-unit>
        <trans-unit id="b33cd0458fc840dc8000beb9127465810a9e4a2a" translate="yes" xml:space="preserve">
          <source>Verify Install</source>
          <target state="translated">설치 확인</target>
        </trans-unit>
        <trans-unit id="253ae30d3341716addb83129cd557b45ff999aaa" translate="yes" xml:space="preserve">
          <source>Verify NTP</source>
          <target state="translated">NTP 확인</target>
        </trans-unit>
        <trans-unit id="87cd8b4250a6bd8c20237206ec35ba54b6ebf0d6" translate="yes" xml:space="preserve">
          <source>Verify Profiles</source>
          <target state="translated">프로필 확인</target>
        </trans-unit>
        <trans-unit id="b2434e171041d33376689e566533aef55b6d5bc3" translate="yes" xml:space="preserve">
          <source>Verify Resize</source>
          <target state="translated">크기 조정 확인</target>
        </trans-unit>
        <trans-unit id="ba8078c593dbe5d776c70dba578867a5d964c6ab" translate="yes" xml:space="preserve">
          <source>Verify SSL Certificates for communication over HTTPS.</source>
          <target state="translated">HTTPS를 통한 통신을위한 SSL 인증서를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6319fa1978c15e3d2749bda779b36affc900912f" translate="yes" xml:space="preserve">
          <source>Verify Server Communication</source>
          <target state="translated">서버 통신 확인</target>
        </trans-unit>
        <trans-unit id="67156221874da696b6ccca0c33b9b4a7a31daf2d" translate="yes" xml:space="preserve">
          <source>Verify Stage</source>
          <target state="translated">단계 확인</target>
        </trans-unit>
        <trans-unit id="eceedb4efa2bc7884cd229413744d3a30309226e" translate="yes" xml:space="preserve">
          <source>Verify Syntax</source>
          <target state="translated">구문 확인</target>
        </trans-unit>
        <trans-unit id="d87b7c2a566c73cdfd9d6319a1b1ff3f49200c3f" translate="yes" xml:space="preserve">
          <source>Verify WiX</source>
          <target state="translated">WiX 확인</target>
        </trans-unit>
        <trans-unit id="616ccf680502cb5aa08224544a4b6b916feb8dc5" translate="yes" xml:space="preserve">
          <source>Verify a Docker Server and Client version</source>
          <target state="translated">Docker 서버 및 클라이언트 버전 확인</target>
        </trans-unit>
        <trans-unit id="61d5b6da653d72113745d10942028958a459c687" translate="yes" xml:space="preserve">
          <source>Verify a running container:</source>
          <target state="translated">실행중인 컨테이너를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="de706e7dd39b88529548dec487fb40cace2a293f" translate="yes" xml:space="preserve">
          <source>Verify all &lt;code&gt;openssl&lt;/code&gt; packages match a certain version</source>
          <target state="translated">모든 &lt;code&gt;openssl&lt;/code&gt; 패키지가 특정 버전과 일치 하는지 확인</target>
        </trans-unit>
        <trans-unit id="02e8a7c781e18afb447c3a1742582c1129e3fb30" translate="yes" xml:space="preserve">
          <source>Verify all tests at the specified path</source>
          <target state="translated">지정된 경로에서 모든 테스트 확인</target>
        </trans-unit>
        <trans-unit id="3ee19316cacfe8c4282e1ee26131ca51587c7ac9" translate="yes" xml:space="preserve">
          <source>Verify available users for the MySQL server</source>
          <target state="translated">MySQL 서버에 사용 가능한 사용자 확인</target>
        </trans-unit>
        <trans-unit id="8611994533fdee0c06a3615903060ba90e0bf968" translate="yes" xml:space="preserve">
          <source>Verify connectivity by running a &lt;code&gt;knife&lt;/code&gt; command and receiving a reasonable response from each server:</source>
          <target state="translated">&lt;code&gt;knife&lt;/code&gt; 명령 을 실행하고 각 서버에서 적절한 응답을 받아 연결을 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="88405ea67974eb9036a7335e43dfd6afc8f02ecd" translate="yes" xml:space="preserve">
          <source>Verify cookbook size and mitigate the size of large cookbooks where possible. Most cookbooks are quite small, under ~200 KB. For any cookbook over 200 KB, consider why they are that large. Are there binary files?</source>
          <target state="translated">요리 책 크기를 확인하고 가능한 경우 큰 요리 책의 크기를 줄입니다. 대부분의 요리 책은 200KB 미만으로 매우 작습니다. 200KB가 넘는 요리 책의 경우 왜 그렇게 큰지 고려하십시오. 바이너리 파일이 있습니까?</target>
        </trans-unit>
        <trans-unit id="b57c1e818e781530a902b40f22075186f92667bc" translate="yes" xml:space="preserve">
          <source>Verify generator used for the Diffie-Hellman operation:</source>
          <target state="translated">Diffie-Hellman 작업에 사용되는 생성기를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="73567fc23396c7de33c22a8e5df24efedd0ef5ea" translate="yes" xml:space="preserve">
          <source>Verify host key. Default is &amp;lsquo;always&amp;rsquo;</source>
          <target state="translated">호스트 키를 확인하십시오. 기본값은 '항상'입니다.</target>
        </trans-unit>
        <trans-unit id="e472e4cd3a208186264d3ffd630a5c9f0e729283" translate="yes" xml:space="preserve">
          <source>Verify host name is reachable over a specific protocol and port number</source>
          <target state="translated">특정 프로토콜 및 포트 번호를 통해 호스트 이름에 연결할 수 있는지 확인</target>
        </trans-unit>
        <trans-unit id="84f1d8cc0ff929c89e5b8141aca611f7c29dc1d6" translate="yes" xml:space="preserve">
          <source>Verify human-readable text output of DH parameters:</source>
          <target state="translated">사람이 읽을 수있는 DH 매개 변수의 텍스트 출력을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1ad39bb7faa469cf3fb911fdff8f860243a8b260" translate="yes" xml:space="preserve">
          <source>Verify if Memcached is installed, enabled, and running</source>
          <target state="translated">Memcached가 설치, 활성화 및 실행 중인지 확인</target>
        </trans-unit>
        <trans-unit id="7fe4309a2b01b62a3623194bc9203b5200becd0f" translate="yes" xml:space="preserve">
          <source>Verify if a package is installed according to my rpm database</source>
          <target state="translated">내 rpm 데이터베이스에 따라 패키지가 설치되었는지 확인</target>
        </trans-unit>
        <trans-unit id="b9197649244ee81f01d1145d401facaefec7990b" translate="yes" xml:space="preserve">
          <source>Verify if a token is a valid token.</source>
          <target state="translated">토큰이 유효한 토큰인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e6a773896db22fb66ce00809cec5b2add64b5ab3" translate="yes" xml:space="preserve">
          <source>Verify length of prime modulus used for the Diffie-Hellman operation:</source>
          <target state="translated">Diffie-Hellman 작업에 사용되는 프라임 모듈러스의 길이를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="61d75c33b74d657c14f18ce59a2fa8f75d09594e" translate="yes" xml:space="preserve">
          <source>Verify nodes and clients that are in use:</source>
          <target state="translated">사용중인 노드 및 클라이언트를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a701dcd8d75b467bd5367e420e2c9575a37abe24" translate="yes" xml:space="preserve">
          <source>Verify port 65432 is not listening</source>
          <target state="translated">포트 65432가 수신하지 않는지 확인</target>
        </trans-unit>
        <trans-unit id="795f1d3a877b570230f3d93ec6d6d5183b99134a" translate="yes" xml:space="preserve">
          <source>Verify prime modulus used for the Diffie-Hellman operation:</source>
          <target state="translated">Diffie-Hellman 작업에 사용되는 프라임 모듈러스를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2f52b6d4ec2e8eff6b64e34dc894ef12291af8ac" translate="yes" xml:space="preserve">
          <source>Verify that DRBD is in good shape on both backend machines. Both the primary and secondary machines should show states similar to &lt;code&gt;Primary/Secondary UpToDate/UpToDate&lt;/code&gt;.</source>
          <target state="translated">두 백엔드 시스템 모두에서 DRBD의 상태가 양호한 지 확인하십시오. 기본 및 보조 시스템 모두 &lt;code&gt;Primary/Secondary UpToDate/UpToDate&lt;/code&gt; 와 유사한 상태를 표시해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ada35f5f42e7c7635a984992bb8c11cfb881ec6a" translate="yes" xml:space="preserve">
          <source>Verify that FTP is disabled</source>
          <target state="translated">FTP가 비활성화되었는지 확인</target>
        </trans-unit>
        <trans-unit id="d6f8183270c3f6c6918454970b6d050130d486bc" translate="yes" xml:space="preserve">
          <source>Verify that IIS is running</source>
          <target state="translated">IIS가 실행 중인지 확인</target>
        </trans-unit>
        <trans-unit id="9885e5f46bca8e9e5737d03294d9dbdfd3849118" translate="yes" xml:space="preserve">
          <source>Verify that Redis is re-populated, as indicated by the key &lt;code&gt;dl_default&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;dl_default&lt;/code&gt; 키로 표시된대로 Redis가 다시 채워 졌는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a27e6d4aa73f817a85387f0e5b8227929cec2d4b" translate="yes" xml:space="preserve">
          <source>Verify that SSL is enabled and that SSL connections are up between Chef Infra Server and your running PostgreSQL instance. One way to do this is to log into the PostgreSQL database from the Chef Infra Server by running &lt;code&gt;chef-server-ctl psql&lt;/code&gt; and then examine the SSL state using SQL queries.</source>
          <target state="translated">SSL이 활성화되어 있고 Chef Infra Server와 실행중인 PostgreSQL 인스턴스간에 SSL 연결이 설정되어 있는지 확인합니다. 이를 수행하는 한 가지 방법은 &lt;code&gt;chef-server-ctl psql&lt;/code&gt; 을 실행하여 Chef Infra Server에서 PostgreSQL 데이터베이스에 로그인 한 다음 SQL 쿼리를 사용하여 SSL 상태를 검사하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3ad798bd3fcdbd039356747bb67fc196596de925" translate="yes" xml:space="preserve">
          <source>Verify that a PPA repository exists and is enabled</source>
          <target state="translated">PPA 저장소가 존재하고 활성화되었는지 확인</target>
        </trans-unit>
        <trans-unit id="88ef904a7a88fbd7b079646e67d016c964926c75" translate="yes" xml:space="preserve">
          <source>Verify that a SID is the expected value</source>
          <target state="translated">SID가 예상 값인지 확인</target>
        </trans-unit>
        <trans-unit id="5978db43adb22838b6d67af8766c5935804a63d4" translate="yes" xml:space="preserve">
          <source>Verify that a gem package is installed in a chef omnibus environment</source>
          <target state="translated">gem 패키지가 Chef 옴니버스 환경에 설치되었는지 확인</target>
        </trans-unit>
        <trans-unit id="060dfb488b4e8e79ef04fc1069b731d7991a0980" translate="yes" xml:space="preserve">
          <source>Verify that a gem package is installed in a chef-server omnibus environment</source>
          <target state="translated">gem 패키지가 chef-server 옴니버스 환경에 설치되었는지 확인</target>
        </trans-unit>
        <trans-unit id="e1d229c774b57a6a4242c4af7145bb97ad0cadd2" translate="yes" xml:space="preserve">
          <source>Verify that a gem package is installed in an omnibus environment</source>
          <target state="translated">옴니버스 환경에 gem 패키지가 설치되었는지 확인</target>
        </trans-unit>
        <trans-unit id="51b862f359b4237648195c40530f91b8fca62906" translate="yes" xml:space="preserve">
          <source>Verify that a gem package is installed, with a specific version</source>
          <target state="translated">특정 버전으로 gem 패키지가 설치되었는지 확인</target>
        </trans-unit>
        <trans-unit id="ae7eead1dda693962ae3dd85d3596ee9be7e733c" translate="yes" xml:space="preserve">
          <source>Verify that a gem package is not installed</source>
          <target state="translated">gem 패키지가 설치되지 않았는지 확인</target>
        </trans-unit>
        <trans-unit id="2f6c7d393d818378b97393c3598f37a4ac363c06" translate="yes" xml:space="preserve">
          <source>Verify that a particular version is installed when there are multiple versions installed</source>
          <target state="translated">여러 버전이 설치된 경우 특정 버전이 설치되었는지 확인</target>
        </trans-unit>
        <trans-unit id="765d39623860f6f039615f22fe5fd0a740c7e949" translate="yes" xml:space="preserve">
          <source>Verify that a repository is not present</source>
          <target state="translated">저장소가 없는지 확인</target>
        </trans-unit>
        <trans-unit id="a78ca82a36e99e0aae03e5383a31bfc6697a177e" translate="yes" xml:space="preserve">
          <source>Verify that a specific IP address can be resolved</source>
          <target state="translated">특정 IP 주소를 확인할 수 있는지 확인</target>
        </trans-unit>
        <trans-unit id="1f210c18c406878edaaf820b721d33cd09536231" translate="yes" xml:space="preserve">
          <source>Verify that both the &lt;code&gt;i686&lt;/code&gt; and &lt;code&gt;x86_64&lt;/code&gt; versions of &lt;code&gt;libgcc&lt;/code&gt; are installed</source>
          <target state="translated">&lt;code&gt;i686&lt;/code&gt; 및 &lt;code&gt;x86_64&lt;/code&gt; 버전의 &lt;code&gt;libgcc&lt;/code&gt; 가 모두 설치되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f8627eae5029e5933c89f0dfc4fa66763cf67bd3" translate="yes" xml:space="preserve">
          <source>Verify that bower is installed, with a specific version</source>
          <target state="translated">특정 버전으로 bower가 설치되었는지 확인</target>
        </trans-unit>
        <trans-unit id="aa08f74740c9c501d9a5471029473dd3ffa25cdf" translate="yes" xml:space="preserve">
          <source>Verify that health-checks are enabled for a container</source>
          <target state="translated">컨테이너에 대해 상태 확인이 활성화되었는지 확인</target>
        </trans-unit>
        <trans-unit id="7b9ed2948545146820b955554d9ac3e5550f2a4c" translate="yes" xml:space="preserve">
          <source>Verify that no &lt;code&gt;xserver&lt;/code&gt; packages are installed</source>
          <target state="translated">&lt;code&gt;xserver&lt;/code&gt; 패키지가 설치 되지 않았는지 확인</target>
        </trans-unit>
        <trans-unit id="e1f1841e529a5bdf5ac26a3c43f023357720a850" translate="yes" xml:space="preserve">
          <source>Verify that only the Administrators group has remote access</source>
          <target state="translated">Administrators 그룹 만 원격 액세스 권한이 있는지 확인</target>
        </trans-unit>
        <trans-unit id="e112eebe5711fd445a3e3103c37d7ccdbd6fe404" translate="yes" xml:space="preserve">
          <source>Verify that statsd is not installed</source>
          <target state="translated">statsd가 설치되지 않았는지 확인</target>
        </trans-unit>
        <trans-unit id="c0645a55e529475caca1c73f6b9a28bed8a944b1" translate="yes" xml:space="preserve">
          <source>Verify that the &lt;code&gt;make&lt;/code&gt; command is available on the Chef server server. If it is not available, install the &lt;code&gt;make&lt;/code&gt; command.</source>
          <target state="translated">Chef 서버 서버 에서 &lt;code&gt;make&lt;/code&gt; 명령을 사용할 수 있는지 확인하십시오 . 사용할 수 없으면 &lt;code&gt;make&lt;/code&gt; 명령을 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee6cef85ac87699cf69bdb1340e10fab4cc8b486" translate="yes" xml:space="preserve">
          <source>Verify that the &lt;code&gt;make&lt;/code&gt; command is available on the Enterprise Chef server. If it is not available, install the &lt;code&gt;make&lt;/code&gt; command.</source>
          <target state="translated">Enterprise Chef 서버 에서 &lt;code&gt;make&lt;/code&gt; 명령을 사용할 수 있는지 확인하십시오 . 사용할 수 없으면 &lt;code&gt;make&lt;/code&gt; 명령을 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="25afd040b9a08f4b73977e4711bee25f81bf3b72" translate="yes" xml:space="preserve">
          <source>Verify that the &lt;code&gt;make&lt;/code&gt; command is available on the primary backend Chef server server. If it is not available, install the &lt;code&gt;make&lt;/code&gt; command.</source>
          <target state="translated">기본 백엔드 Chef 서버 서버 에서 &lt;code&gt;make&lt;/code&gt; 명령을 사용할 수 있는지 확인하십시오 . 사용할 수 없으면 &lt;code&gt;make&lt;/code&gt; 명령을 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd7613a64ae8a38df1a3ce4c57b40898acae8923" translate="yes" xml:space="preserve">
          <source>Verify that the &lt;code&gt;make&lt;/code&gt; command is available on the primary backend Enterprise Chef server. If it is not available, install the &lt;code&gt;make&lt;/code&gt; command.</source>
          <target state="translated">기본 백엔드 Enterprise Chef 서버 에서 &lt;code&gt;make&lt;/code&gt; 명령을 사용할 수 있는지 확인하십시오 . 사용할 수 없으면 &lt;code&gt;make&lt;/code&gt; 명령을 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f4827dcd2fbc4493c3398e643c634c9b08453ad" translate="yes" xml:space="preserve">
          <source>Verify that the &lt;code&gt;opscode_chef&lt;/code&gt;, &lt;code&gt;oc_id&lt;/code&gt;, and/or &lt;code&gt;bifrost&lt;/code&gt; databases exist, and then verify that they are not being used by another internal application</source>
          <target state="translated">있는지 확인 &lt;code&gt;opscode_chef&lt;/code&gt; 가 , &lt;code&gt;oc_id&lt;/code&gt; 및 / 또는 &lt;code&gt;bifrost&lt;/code&gt; 데이터베이스가 존재하고 그들은 다른 내부 응용 프로그램에서 사용하고 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="4804f1f5b4a0666891783451511aebe0d66c4032" translate="yes" xml:space="preserve">
          <source>Verify that the Admnistrator user has a SID</source>
          <target state="translated">Admnistrator 사용자에게 SID가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="57591ddb9a2a065e8e636f23eb270631519c5874" translate="yes" xml:space="preserve">
          <source>Verify that the Chef Push Jobs client is running as a daemon or as a service:</source>
          <target state="translated">Chef Push Jobs 클라이언트가 데몬 또는 서비스로 실행 중인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f73b09688901d80ad1d8fce64862a8ecd348bb83" translate="yes" xml:space="preserve">
          <source>Verify that the checksum values are identical.</source>
          <target state="translated">체크섬 값이 동일한 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7f7facc80bf9dca1a5714b52352a71fc94e317ce" translate="yes" xml:space="preserve">
          <source>Verify that the files are in the .chef folder.</source>
          <target state="translated">파일이 .chef 폴더에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5a49f13e212e3e69e18e25303189be8272bc7452" translate="yes" xml:space="preserve">
          <source>Verify that the files are in the &lt;code&gt;.chef&lt;/code&gt; folder.</source>
          <target state="translated">파일이 &lt;code&gt;.chef&lt;/code&gt; 폴더 에 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="6632cbfd63113fdc3d038d81f7b135a66b6d2bf4" translate="yes" xml:space="preserve">
          <source>Verify that the latest version of the Chef Infra Server is installed by using the platform package manager. For example, in a terminal run &lt;code&gt;rpm -qa | grep chef-server-core&lt;/code&gt; on CentOS/RHEL or &lt;code&gt;dpkg -l | grep chef-server-core&lt;/code&gt; on Ubuntu/Debian. Compare the result to the latest version available on the &lt;a href=&quot;https://downloads.chef.io/&quot;&gt;downloads site&lt;/a&gt;. If you are not using the latest version, download the package and then &lt;a href=&quot;../upgrade_server/index#from-chef-server-12&quot;&gt;upgrade&lt;/a&gt; to the latest version.</source>
          <target state="translated">플랫폼 패키지 관리자를 사용하여 최신 버전의 Chef Infra Server가 설치되어 있는지 확인하십시오. 예를 들어, 터미널에서 &lt;code&gt;rpm -qa | grep chef-server-core&lt;/code&gt; CentOS / RHEL 또는 &lt;code&gt;dpkg -l | grep chef-server-core&lt;/code&gt; grep chef-server-core | Ubuntu / Debian의 grep chef-server-core . 결과를 &lt;a href=&quot;https://downloads.chef.io/&quot;&gt;다운로드 사이트&lt;/a&gt; 에서 사용 가능한 최신 버전과 비교 하십시오 . 최신 버전을 사용하지 않는 경우 패키지를 다운로드 한 다음 최신 버전으로 &lt;a href=&quot;../upgrade_server/index#from-chef-server-12&quot;&gt;업그레이드&lt;/a&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="848f8d8749603e78dd60c012ae17321b7cf4a0ae" translate="yes" xml:space="preserve">
          <source>Verify that the latest version of the Chef Infra Server is installed by using the platform package manager: &lt;code&gt;rpm -qa | grep chef-server-core&lt;/code&gt; and compare the result to the latest version available on the &lt;a href=&quot;https://downloads.chef.io/&quot;&gt;downloads site&lt;/a&gt;. If this is not the latest version, download the package, and then &lt;a href=&quot;../upgrade_server/index#from-chef-server-12&quot;&gt;upgrade&lt;/a&gt; to the latest version.</source>
          <target state="translated">플랫폼 패키지 관리자를 사용하여 최신 버전의 Chef Infra Server가 설치되어 있는지 확인하십시오. &lt;code&gt;rpm -qa | grep chef-server-core&lt;/code&gt; 및 &lt;a href=&quot;https://downloads.chef.io/&quot;&gt;다운로드 사이트&lt;/a&gt; 에서 제공되는 최신 버전과 결과를 비교합니다 . 최신 버전이 아닌 경우 패키지를 다운로드 한 다음 최신 버전으로 &lt;a href=&quot;../upgrade_server/index#from-chef-server-12&quot;&gt;업그레이드&lt;/a&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="6baded75e64e37e1a40b4a126c00f178ca2ddaf6" translate="yes" xml:space="preserve">
          <source>Verify that the nodes are healthy by running:</source>
          <target state="translated">다음을 실행하여 노드가 정상인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8c2a82da5a4bc76650c85f7b57751cf9023a3b62" translate="yes" xml:space="preserve">
          <source>Verify that the output does not contain &lt;code&gt;&quot;blocks&quot;:{&quot;read_only_allow_delete&quot;:&quot;true&quot;}&lt;/code&gt;.</source>
          <target state="translated">출력에 &lt;code&gt;&quot;blocks&quot;:{&quot;read_only_allow_delete&quot;:&quot;true&quot;}&lt;/code&gt; 가 포함되어 있지 않은지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="97519b089aea2cbf99dcea294048aa4dca8630f3" translate="yes" xml:space="preserve">
          <source>Verify that you can login to Chef Automate webui by navigating to &lt;code&gt;https://&amp;lt;YOUR NEW PUBLIC DNS&amp;gt;/e/default&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;https://&amp;lt;YOUR NEW PUBLIC DNS&amp;gt;/e/default&lt;/code&gt; 로 이동하여 Chef Automate webui에 로그인 할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="71e7759c3441fa822a1124b0827e8291a0de1347" translate="yes" xml:space="preserve">
          <source>Verify the Installation</source>
          <target state="translated">설치 확인</target>
        </trans-unit>
        <trans-unit id="d5df8dd41c9e868520583e6ddfc3ff4127cd0732" translate="yes" xml:space="preserve">
          <source>Verify the SSL cert for HTTPS requests to the Chef Infra Server API.</source>
          <target state="translated">Chef Infra Server API에 대한 HTTPS 요청에 대한 SSL 인증서를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b368f7455eeb96b33fa4dfd98ab605b79d42d374" translate="yes" xml:space="preserve">
          <source>Verify the SSL certificate on the Chef Infra Server. When &lt;code&gt;true&lt;/code&gt;, Chef Infra Client always verifies the SSL certificate. When &lt;code&gt;false&lt;/code&gt;, Chef Infra Client uses the value of &lt;code&gt;ssl_verify_mode&lt;/code&gt; to determine if the SSL certificate requires verification.</source>
          <target state="translated">Chef Infra Server에서 SSL 인증서를 확인합니다. 때 &lt;code&gt;true&lt;/code&gt; 요리사 인프라 클라이언트는 항상 SSL 인증서를 확인합니다. 때 &lt;code&gt;false&lt;/code&gt; , 요리사 인프라 클라이언트의 값 사용 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 을 SSL 인증서가 검증을 요구하는 경우 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7327e3c8b40773e73e63c905a799a9105e4fb86c" translate="yes" xml:space="preserve">
          <source>Verify the SSL certificate on the Chef Infra Server. When &lt;code&gt;true&lt;/code&gt;, Chef Infra Client always verifies the SSL certificate. When &lt;code&gt;false&lt;/code&gt;, Chef Infra Client uses the value of &lt;code&gt;ssl_verify_mode&lt;/code&gt; to determine if the SSL certificate requires verification. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server에서 SSL 인증서를 확인합니다. 때 &lt;code&gt;true&lt;/code&gt; 요리사 인프라 클라이언트는 항상 SSL 인증서를 확인합니다. 때 &lt;code&gt;false&lt;/code&gt; , 요리사 인프라 클라이언트의 값 사용 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 을 SSL 인증서가 검증을 요구하는 경우 확인합니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e437ca1c2ca3ebae6b3dac8519eb44f4a78d3002" translate="yes" xml:space="preserve">
          <source>Verify the SSL certificate on the Chef Infra Server. When &lt;code&gt;true&lt;/code&gt;, Chef Infra Client always verifies the SSL certificate. When &lt;code&gt;false&lt;/code&gt;, Chef Infra Client uses the value of &lt;code&gt;ssl_verify_mode&lt;/code&gt; to determine if the SSL certificate requires verification. If this option is not specified, the setting for &lt;code&gt;verify_api_cert&lt;/code&gt; in the configuration file is applied.</source>
          <target state="translated">Chef Infra Server에서 SSL 인증서를 확인합니다. 때 &lt;code&gt;true&lt;/code&gt; 요리사 인프라 클라이언트는 항상 SSL 인증서를 확인합니다. 때 &lt;code&gt;false&lt;/code&gt; , 요리사 인프라 클라이언트의 값 사용 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 을 SSL 인증서가 검증을 요구하는 경우 확인합니다. 이 옵션을 지정하지 않으면 구성 파일의 &lt;code&gt;verify_api_cert&lt;/code&gt; 설정 이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fbd07d867893353922f526ef8d41dde4d90199f4" translate="yes" xml:space="preserve">
          <source>Verify the SSL certificate on the Chef server. When &lt;code&gt;true&lt;/code&gt;, the chef-client always verifies the SSL certificate. When &lt;code&gt;false&lt;/code&gt;, the chef-client uses the value of &lt;code&gt;ssl_verify_mode&lt;/code&gt; to determine if the SSL certificate requires verification. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Chef 서버에서 SSL 인증서를 확인하십시오. 때 &lt;code&gt;true&lt;/code&gt; , 요리사 - 클라이언트는 항상 SSL 인증서를 확인합니다. 때 &lt;code&gt;false&lt;/code&gt; , 요리사 클라이언트가 사용하는 값 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 은 SSL 인증서가 검증을 요구하는 경우 확인합니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6961be1cb7aaff20c8fead6464421c2f39f75ac" translate="yes" xml:space="preserve">
          <source>Verify the SSL certificate on the Chef server. When &lt;code&gt;true&lt;/code&gt;, the chef-client always verifies the SSL certificate. When &lt;code&gt;false&lt;/code&gt;, the chef-client uses the value of &lt;code&gt;ssl_verify_mode&lt;/code&gt; to determine if the SSL certificate requires verification. If this option is not specified, the setting for &lt;code&gt;verify_api_cert&lt;/code&gt; in the configuration file is applied.</source>
          <target state="translated">Chef 서버에서 SSL 인증서를 확인하십시오. 때 &lt;code&gt;true&lt;/code&gt; , 요리사 - 클라이언트는 항상 SSL 인증서를 확인합니다. 때 &lt;code&gt;false&lt;/code&gt; , 요리사 클라이언트가 사용하는 값 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 은 SSL 인증서가 검증을 요구하는 경우 확인합니다. 이 옵션을 지정하지 않으면 구성 파일의 &lt;code&gt;verify_api_cert&lt;/code&gt; 설정 이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="65decf83cc6dc55a7a49e442eb166061b311acc3" translate="yes" xml:space="preserve">
          <source>Verify the chef-client install</source>
          <target state="translated">요리사 클라이언트 설치 확인</target>
        </trans-unit>
        <trans-unit id="b80c1107a12eef276e708e26d3b550bd28906784" translate="yes" xml:space="preserve">
          <source>Verify the installation:</source>
          <target state="translated">설치를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b0521df51ab588f5e1215c1f57dec7b14487ce4b" translate="yes" xml:space="preserve">
          <source>Verify the machine is the primary backend server:</source>
          <target state="translated">머신이 기본 백엔드 서버인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6dc8e363ca182484becb33631950d15c59f114f6" translate="yes" xml:space="preserve">
          <source>Verify the package&amp;rsquo;s GPG signature. Can also be controlled site-wide using the &lt;code&gt;zypper_check_gpg&lt;/code&gt; config option.</source>
          <target state="translated">패키지의 GPG 서명을 확인합니다. &lt;code&gt;zypper_check_gpg&lt;/code&gt; 구성 옵션을 사용하여 사이트 전체에서 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54335ace58fb12abcbe613963c09d3c41484d5f1" translate="yes" xml:space="preserve">
          <source>Verify the secondary backend server:</source>
          <target state="translated">보조 백엔드 서버를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="372a513ddc12c9763caedc1c9eeae488b46430fc" translate="yes" xml:space="preserve">
          <source>Verify the settings</source>
          <target state="translated">설정 확인</target>
        </trans-unit>
        <trans-unit id="05cf110c5cc2be95359a61a05e13b3f0b1fd5805" translate="yes" xml:space="preserve">
          <source>Verify the settings by reviewing the documentation for the knife subcommands and/or knife plugins</source>
          <target state="translated">knife 부속 명령 및 / 또는 knife 플러그인에 대한 문서를 검토하여 설정을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="727c05130917dcd6a8cc0476aea1b9a0a68f7b73" translate="yes" xml:space="preserve">
          <source>Verify the upgrade compatibility of every cookbook.</source>
          <target state="translated">모든 요리 책의 업그레이드 호환성을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c1717f89bb92b9fc43de679909ca9dcc7a1b15b1" translate="yes" xml:space="preserve">
          <source>Verify the use case(s) your organization has for adding them</source>
          <target state="translated">조직에서 유스 케이스를 추가하는 데 사용하는지 확인</target>
        </trans-unit>
        <trans-unit id="48a5110249071b00c9ad3523734325394439773e" translate="yes" xml:space="preserve">
          <source>Verify via &lt;code&gt;openssl dhparam&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;openssl dhparam&lt;/code&gt; 명령을 통해 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1abdd20d9ee5a54e64ddf45407603d0857441280" translate="yes" xml:space="preserve">
          <source>Verify whether DH parameters are valid:</source>
          <target state="translated">DH 매개 변수가 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6250ea3a9a2d0453b326c8aa9524f21e9a695455" translate="yes" xml:space="preserve">
          <source>Verify you have the correct values in your config.rb file, especially for the &lt;code&gt;node_name&lt;/code&gt; and &lt;code&gt;client_key&lt;/code&gt; settings.</source>
          <target state="translated">특히 &lt;code&gt;node_name&lt;/code&gt; 및 &lt;code&gt;client_key&lt;/code&gt; 설정에 대해 config.rb 파일에 올바른 값이 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c3bf845528d140e5eaf1f1d8c07f00411c59308" translate="yes" xml:space="preserve">
          <source>Verify-URL of reCAPTCHA service to be used. Default value: &lt;code&gt;https://www.google.com/recaptcha/api/siteverify&lt;/code&gt;.</source>
          <target state="translated">사용할 reCAPTCHA 서비스의 URL을 확인합니다. 기본값 : &lt;code&gt;https://www.google.com/recaptcha/api/siteverify&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53ada8b8131d0fd0553ae2d8248832c943484ba2" translate="yes" xml:space="preserve">
          <source>Verify:</source>
          <target state="translated">Verify:</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="aebe0ed007174f53947b5cc077294c6b536f56d0" translate="yes" xml:space="preserve">
          <source>Version 1.1</source>
          <target state="translated">버전 1.1</target>
        </trans-unit>
        <trans-unit id="b7238b18233914a27637a58322ad1e229a7760ee" translate="yes" xml:space="preserve">
          <source>Version 1.2</source>
          <target state="translated">버전 1.2</target>
        </trans-unit>
        <trans-unit id="ba85979af3fd20af74503aa281046ff71c9859a6" translate="yes" xml:space="preserve">
          <source>Version 1.2 adds a top-level field, &amp;ldquo;plugins&amp;rdquo;.</source>
          <target state="translated">버전 1.2는 최상위 필드 인 &quot;플러그인&quot;을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="224b3e69d2026b5a0057503a55e63ded7bb0836c" translate="yes" xml:space="preserve">
          <source>Version Constraints</source>
          <target state="translated">버전 제약</target>
        </trans-unit>
        <trans-unit id="307ab25c08a0161bb61e4b199670193ee0fcf33e" translate="yes" xml:space="preserve">
          <source>Version Source Control</source>
          <target state="translated">버전 소스 제어</target>
        </trans-unit>
        <trans-unit id="35261c3d633794e723445694f933f09111f1cbfb" translate="yes" xml:space="preserve">
          <source>Version Support</source>
          <target state="translated">버전 지원</target>
        </trans-unit>
        <trans-unit id="9029c8cc47e0e3b0872099f17a5d3663278473b4" translate="yes" xml:space="preserve">
          <source>Version constraints are the second parameter:</source>
          <target state="translated">버전 제약은 두 번째 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="c3167f0e5b6720e28d04bd643a0f9eaf3f860e0d" translate="yes" xml:space="preserve">
          <source>Version constraints&amp;mdash;&lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;~&amp;gt;&lt;/code&gt;&amp;mdash;may be used with &lt;code&gt;version&lt;/code&gt;; an exception is raised if two version constraints match; an exact match will always take precedence over a match made from a version constraint</source>
          <target state="translated">버전 제약 조건 &amp;ndash; &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;~&amp;gt;&lt;/code&gt; &amp;mdash; &lt;code&gt;version&lt;/code&gt; 과 함께 사용할 수 있습니다 . 두 버전 제약 조건이 일치하면 예외가 발생합니다. 정확한 일치는 항상 버전 제약 조건에서 만든 일치보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="412651d6f9cb9f9fe9afb996e9566e87d58e0497" translate="yes" xml:space="preserve">
          <source>Version of the Habitat Supervisor, e.g., &lt;code&gt;0.54.0/20180221023448&lt;/code&gt;</source>
          <target state="translated">Habitat Supervisor 버전, 예 : &lt;code&gt;0.54.0/20180221023448&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f49127025fb5873ad1bd738867c76e3725ffeaa" translate="yes" xml:space="preserve">
          <source>Version:</source>
          <target state="translated">Version:</target>
        </trans-unit>
        <trans-unit id="37ea4202a18b20e001fbf9197baf0bb7d7ce16ca" translate="yes" xml:space="preserve">
          <source>Versions and Status</source>
          <target state="translated">버전 및 상태</target>
        </trans-unit>
        <trans-unit id="0d3cc462836f0f2e2501b7b1d9d1f61ad039d37e" translate="yes" xml:space="preserve">
          <source>Versions and version constraints can be specified in a cookbook&amp;rsquo;s metadata.rb file by using the following functions. Each function accepts a name and an optional version constraint; if a version constraint is not provided, &lt;code&gt;&amp;gt;= 0.0.0&lt;/code&gt; is used as the default.</source>
          <target state="translated">다음 기능을 사용하여 요리 책의 metadata.rb 파일에 버전 및 버전 제약 조건을 지정할 수 있습니다. 각 함수는 이름과 선택적 버전 제한을 허용합니다. 버전 제약 조건이 제공되지 않으면 &lt;code&gt;&amp;gt;= 0.0.0&lt;/code&gt; 이 기본값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5ca763f6a45e974814de8b09745129bf745908f8" translate="yes" xml:space="preserve">
          <source>Versions of Chef InSpec 4.0 and later require accepting the EULA. Please visit the &lt;a href=&quot;../chef_license_accept/index&quot;&gt;license acceptance page&lt;/a&gt; for more information.</source>
          <target state="translated">Chef InSpec 4.0 이상 버전은 EULA에 동의해야합니다. 자세한 내용은 &lt;a href=&quot;../chef_license_accept/index&quot;&gt;라이센스 승인 페이지&lt;/a&gt; 를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="0d91fa9764246742f1688a6feff7166ac95ec732" translate="yes" xml:space="preserve">
          <source>Versions of this resource in Chef InSpec prior to 3.5.x offered a property &lt;code&gt;size&lt;/code&gt;, which returned a value in GB when on Windows and a value in KB on Linux, though it was documented to always return KB. All new code should use &lt;code&gt;size_kb&lt;/code&gt; which is unit-stable. The property &lt;code&gt;size&lt;/code&gt; will remain available in Chef InSpec v3 and 4, but will be deprecated in the future.</source>
          <target state="translated">3.5.x 이전의 Chef InSpec에서이 리소스의 버전은 항상 KB를 반환하도록 문서화되어 있지만 Windows에서는 GB 값을, Linux에서는 KB 값을 반환 하는 속성 &lt;code&gt;size&lt;/code&gt; 를 제공했습니다 . 모든 새 코드 는 단위 안정 인 &lt;code&gt;size_kb&lt;/code&gt; 를 사용해야합니다 . 속성 &lt;code&gt;size&lt;/code&gt; 는 Chef InSpec v3 및 4에서 계속 사용할 수 있지만 향후 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="56b71e89fb1079caaadefd0889e9a22e8b0560e3" translate="yes" xml:space="preserve">
          <source>Videos</source>
          <target state="translated">Videos</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="57596940b42227fdfe2c333826fe4e5b2f99ffa2" translate="yes" xml:space="preserve">
          <source>View All Roles</source>
          <target state="translated">모든 역할보기</target>
        </trans-unit>
        <trans-unit id="0abfb1b86703c1689a4759b544f6112ee9621bef" translate="yes" xml:space="preserve">
          <source>View Attributes</source>
          <target state="translated">속성보기</target>
        </trans-unit>
        <trans-unit id="01aaf59fee61b4a59314af48a2f268acd4735b88" translate="yes" xml:space="preserve">
          <source>View Chef Servers</source>
          <target state="translated">Chef 서버보기</target>
        </trans-unit>
        <trans-unit id="aa1196812990e1651fef33e7edfe392b53da0164" translate="yes" xml:space="preserve">
          <source>View Client Runs</source>
          <target state="translated">View Client 실행</target>
        </trans-unit>
        <trans-unit id="d4b6a0f121769834180b680b0006f673bf9f750c" translate="yes" xml:space="preserve">
          <source>View Cookbook Details</source>
          <target state="translated">요리 책 세부 사항보기</target>
        </trans-unit>
        <trans-unit id="13be36f28de3f337acf8ae0e46990160c7b2590c" translate="yes" xml:space="preserve">
          <source>View Current</source>
          <target state="translated">현재보기</target>
        </trans-unit>
        <trans-unit id="2f914d1a881875249baaddfc0a892908d14ecc91" translate="yes" xml:space="preserve">
          <source>View Default Attributes</source>
          <target state="translated">기본 속성보기</target>
        </trans-unit>
        <trans-unit id="907b3bee27789aea8e5741129a807a24712d027c" translate="yes" xml:space="preserve">
          <source>View Details</source>
          <target state="translated">세부 정보보기</target>
        </trans-unit>
        <trans-unit id="a77e6decaadbd6c9dba17ef5c3aebc35f9567bb7" translate="yes" xml:space="preserve">
          <source>View Events</source>
          <target state="translated">이벤트보기</target>
        </trans-unit>
        <trans-unit id="eb9345f08dcb1aed6e9e4b0a64328686751ad653" translate="yes" xml:space="preserve">
          <source>View Item</source>
          <target state="translated">아이템보기</target>
        </trans-unit>
        <trans-unit id="9f6b5b7bff7a2acfa99c0f12b322c59f442119e9" translate="yes" xml:space="preserve">
          <source>View Log Files</source>
          <target state="translated">로그 파일보기</target>
        </trans-unit>
        <trans-unit id="4aaca082da8e252d9c3a0b66796c100f13f17b01" translate="yes" xml:space="preserve">
          <source>View Node</source>
          <target state="translated">노드보기</target>
        </trans-unit>
        <trans-unit id="127aa733f3f5cc9bb5f984a7efec5c6dc3e2ac38" translate="yes" xml:space="preserve">
          <source>View Override Attributes</source>
          <target state="translated">재정의 속성보기</target>
        </trans-unit>
        <trans-unit id="e5c06dc091cbf6544a1582bcc396e63996709e5e" translate="yes" xml:space="preserve">
          <source>View Policies</source>
          <target state="translated">정책보기</target>
        </trans-unit>
        <trans-unit id="5d009d7f4b132ccd492e1960facff2e4a4714dd7" translate="yes" xml:space="preserve">
          <source>View Service Group Data</source>
          <target state="translated">서비스 그룹 데이터보기</target>
        </trans-unit>
        <trans-unit id="64bc083d0f0faa76fea2a6bc71635fcb307ca28b" translate="yes" xml:space="preserve">
          <source>View User Account Details</source>
          <target state="translated">사용자 계정 세부 사항보기</target>
        </trans-unit>
        <trans-unit id="a9acafdb56566e6e5a5e0063d9cf290df870f5d0" translate="yes" xml:space="preserve">
          <source>View a File</source>
          <target state="translated">파일보기</target>
        </trans-unit>
        <trans-unit id="385d1c8813b1349dfbd13b128fe69e9e39eddae3" translate="yes" xml:space="preserve">
          <source>View and Search Events</source>
          <target state="translated">이벤트보기 및 검색</target>
        </trans-unit>
        <trans-unit id="ddf6746d70b3a301a520400d1df65a1daaf33c1c" translate="yes" xml:space="preserve">
          <source>View build jobs</source>
          <target state="translated">빌드 작업보기</target>
        </trans-unit>
        <trans-unit id="84a24f7ada0c07514381f2c311d9e985639ab979" translate="yes" xml:space="preserve">
          <source>View channels</source>
          <target state="translated">채널보기</target>
        </trans-unit>
        <trans-unit id="ec6a0983535ff3a21d08fdc7a2a4fb3259a4dfb1" translate="yes" xml:space="preserve">
          <source>View colored output.</source>
          <target state="translated">컬러 출력을 봅니다.</target>
        </trans-unit>
        <trans-unit id="78ff0a2cdc02796dcea69ad4f5f90c4cef07e952" translate="yes" xml:space="preserve">
          <source>View colored output. Default setting: &lt;code&gt;--color&lt;/code&gt;.</source>
          <target state="translated">컬러 출력을 봅니다. 기본 설정 : &lt;code&gt;--color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f46262e147b7d89d2c0fcf9ff06b92fd83d5bb70" translate="yes" xml:space="preserve">
          <source>View integrations</source>
          <target state="translated">통합보기</target>
        </trans-unit>
        <trans-unit id="9749155c743939d11a67724934286932094998d7" translate="yes" xml:space="preserve">
          <source>View invitations</source>
          <target state="translated">초대장보기</target>
        </trans-unit>
        <trans-unit id="53f1b1550f9706a1c993cbd093031ac258225d9e" translate="yes" xml:space="preserve">
          <source>View keys</source>
          <target state="translated">키보기</target>
        </trans-unit>
        <trans-unit id="9b6dcc8b0aac0e8968fc00f36104e51daae97e5c" translate="yes" xml:space="preserve">
          <source>View member roles</source>
          <target state="translated">회원 역할보기</target>
        </trans-unit>
        <trans-unit id="5fda6648a5bf3a177a8bbebb6ac7467ef4102f45" translate="yes" xml:space="preserve">
          <source>View origin invitations:</source>
          <target state="translated">원본 초대장보기 :</target>
        </trans-unit>
        <trans-unit id="4359dbef4b971f3aac0f7491a690c25f30dca96c" translate="yes" xml:space="preserve">
          <source>View origin membership</source>
          <target state="translated">오리진 멤버십보기</target>
        </trans-unit>
        <trans-unit id="deefc558e0480ab44cd3311ba7c742fa1508a179" translate="yes" xml:space="preserve">
          <source>View packages</source>
          <target state="translated">패키지보기</target>
        </trans-unit>
        <trans-unit id="32f8b5ac6a7a8ab985b0f4834a2a5bd3fb8b7378" translate="yes" xml:space="preserve">
          <source>View secrets</source>
          <target state="translated">비밀보기</target>
        </trans-unit>
        <trans-unit id="9e261078b228723e854d03aab07a351e750cdb7d" translate="yes" xml:space="preserve">
          <source>View settings</source>
          <target state="translated">설정보기</target>
        </trans-unit>
        <trans-unit id="714930af397f125eeda0a57030dce7c5db5e1ea4" translate="yes" xml:space="preserve">
          <source>View the &lt;strong&gt;Proxy server&lt;/strong&gt; setting. If this setting is blank, then a proxy server may not be available.</source>
          <target state="translated">보기 &lt;strong&gt;프록시 서버&lt;/strong&gt; 설정을. 이 설정이 비어 있으면 프록시 서버를 사용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18b35685ca8ebab689e2ec0433d456f800678b14" translate="yes" xml:space="preserve">
          <source>View the checksum on the Chef Infra Server:</source>
          <target state="translated">Chef Infra Server에서 체크섬보기 :</target>
        </trans-unit>
        <trans-unit id="1f7a3f521d40c7e46fb380f925a447a487f5e706" translate="yes" xml:space="preserve">
          <source>View the checksum on the Chef server:</source>
          <target state="translated">Chef 서버에서 체크섬을보십시오.</target>
        </trans-unit>
        <trans-unit id="c2b31f5123be3235bc905c5417ffd38109c7c079" translate="yes" xml:space="preserve">
          <source>View the checksum on the workstation:</source>
          <target state="translated">워크 스테이션에서 체크섬을보십시오.</target>
        </trans-unit>
        <trans-unit id="d3e5c23ee46040d53981407218a8ed6495f248ec" translate="yes" xml:space="preserve">
          <source>View the topic &lt;a href=&quot;install_server_ha_aws&quot;&gt;High Availability: AWS&lt;/a&gt; for more information about how to set up the Chef server for high availability in Amazon Web Services (AWS).</source>
          <target state="translated">&lt;a href=&quot;install_server_ha_aws&quot;&gt;AWS&lt;/a&gt; (Amazon Web Services)에서 고 가용성을 위해 Chef 서버를 설정하는 방법에 대한 자세한 정보는 고 가용성 : AWS 주제 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6cc3e4d4996ee11b74579792c0e13a9f6ec0dc15" translate="yes" xml:space="preserve">
          <source>View your login credentials in the terminal with:</source>
          <target state="translated">다음을 사용하여 터미널에서 로그인 자격 증명을 봅니다.</target>
        </trans-unit>
        <trans-unit id="dbad9f126b33570e09839a2d60720898de1a512d" translate="yes" xml:space="preserve">
          <source>Viewer</source>
          <target state="translated">Viewer</target>
        </trans-unit>
        <trans-unit id="7bf4f00276c316a6f43ba450cad6fcdf73d2698b" translate="yes" xml:space="preserve">
          <source>Viewer for compliance resources</source>
          <target state="translated">규정 준수 리소스 뷰어</target>
        </trans-unit>
        <trans-unit id="28bcf6a9bafced447dda5054a61e02fd95ba1e64" translate="yes" xml:space="preserve">
          <source>Viewing Logs</source>
          <target state="translated">로그보기</target>
        </trans-unit>
        <trans-unit id="dfdd83a2717e74fd174cd5cac41e2316e828f915" translate="yes" xml:space="preserve">
          <source>Viewing a user&amp;rsquo;s profile</source>
          <target state="translated">사용자 프로필보기</target>
        </trans-unit>
        <trans-unit id="2ff619855b9eaba074ee0bad4fe7e5b547c30272" translate="yes" xml:space="preserve">
          <source>Virtual Machine External VM</source>
          <target state="translated">가상 머신 외부 VM</target>
        </trans-unit>
        <trans-unit id="9972eac9de8ad221934fe270efda309cf99dd95a" translate="yes" xml:space="preserve">
          <source>Virtual Machine Internal VM</source>
          <target state="translated">가상 머신 내부 VM</target>
        </trans-unit>
        <trans-unit id="cb837c2918c14957ebf249f5eb0de4adb9ee6f1c" translate="yes" xml:space="preserve">
          <source>VirtualBox</source>
          <target state="translated">VirtualBox</target>
        </trans-unit>
        <trans-unit id="18ddaacb37a8f63f95013ae97db4a60634a23394" translate="yes" xml:space="preserve">
          <source>VirtualBox Extensions</source>
          <target state="translated">VirtualBox 확장</target>
        </trans-unit>
        <trans-unit id="c55293c0632535a537cae6c8963598a69543f447" translate="yes" xml:space="preserve">
          <source>VirtualBox Extensions is licensed under the &lt;a href=&quot;https://www.virtualbox.org/wiki/VirtualBox_PUEL&quot;&gt;VirtualBox Extension Pack Personal Use and Evaluation License (PUEL)&lt;/a&gt;</source>
          <target state="translated">VirtualBox Extensions는 &lt;a href=&quot;https://www.virtualbox.org/wiki/VirtualBox_PUEL&quot;&gt;VirtualBox Extension Pack PUEL (Personal Use and Evaluation License)에&lt;/a&gt; 따라 라이센스가 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="e1d9f09b7b0a1c32156d46cc2d8ebfd95cd04bb4" translate="yes" xml:space="preserve">
          <source>VirtualMemorySize</source>
          <target state="translated">VirtualMemorySize</target>
        </trans-unit>
        <trans-unit id="b4104f0c1b3bbdd45208ec50e2112ffdb65367d1" translate="yes" xml:space="preserve">
          <source>Virtualization</source>
          <target state="translated">Virtualization</target>
        </trans-unit>
        <trans-unit id="2ebb012e6c59d7db936a2ba16c07995903d44eb7" translate="yes" xml:space="preserve">
          <source>Visit Supermarket</source>
          <target state="translated">슈퍼마켓 방문</target>
        </trans-unit>
        <trans-unit id="9129df1da7806a8520274b53b031a856080ce80e" translate="yes" xml:space="preserve">
          <source>Visit the &lt;a href=&quot;https://downloads.chef.io/chef-workstation#mac_os_x&quot;&gt;Chef Workstation downloads page&lt;/a&gt; and select the appropriate package for your macOS version. Click on the &lt;strong&gt;Download&lt;/strong&gt; button.</source>
          <target state="translated">&lt;a href=&quot;https://downloads.chef.io/chef-workstation#mac_os_x&quot;&gt;Chef Workstation 다운로드 페이지를&lt;/a&gt; 방문 하여 macOS 버전에 적합한 패키지를 선택하십시오. &lt;strong&gt;다운로드&lt;/strong&gt; 버튼을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca2d3f0b8582e75f2665d7017bd2b999170a2dc8" translate="yes" xml:space="preserve">
          <source>Visit the &lt;a href=&quot;https://downloads.chef.io/chef-workstation#windows&quot;&gt;Chef Workstation downloads page&lt;/a&gt; and select the appropriate package for your Windows version. Click on the &lt;strong&gt;Download&lt;/strong&gt; button.</source>
          <target state="translated">&lt;a href=&quot;https://downloads.chef.io/chef-workstation#windows&quot;&gt;Chef Workstation 다운로드 페이지를&lt;/a&gt; 방문 하여 Windows 버전에 적합한 패키지를 선택하십시오. &lt;strong&gt;다운로드&lt;/strong&gt; 버튼을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="1192c6b4729cafad1fb24c2cc3f8873b2f02f630" translate="yes" xml:space="preserve">
          <source>Visit the &lt;a href=&quot;https://downloads.chef.io/products/workstation&quot;&gt;Chef Workstation downloads page&lt;/a&gt; and download the appropriate package for your distribution:</source>
          <target state="translated">&lt;a href=&quot;https://downloads.chef.io/products/workstation&quot;&gt;Chef Workstation 다운로드 페이지를&lt;/a&gt; 방문 하여 배포에 적합한 패키지를 다운로드하십시오 .</target>
        </trans-unit>
        <trans-unit id="e38c3c319123d179fbfc41471804f5a53fabaab8" translate="yes" xml:space="preserve">
          <source>Visit the Chef Supermarket hostname in the browser. A private Chef Supermarket will generate and use a self-signed certificate, if a certificate is not supplied as part of the installation process (via the wrapper cookbook).</source>
          <target state="translated">브라우저에서 Chef Supermarket 호스트 이름을 방문하십시오. 인증서가 설치 프로세스의 일부로 제공되지 않는 경우 (래퍼 요리 책을 통해) 개인 Chef Supermarket에서 자체 서명 된 인증서를 생성하고 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e2636dbf7e86466308c30f36d31e4f81978014e5" translate="yes" xml:space="preserve">
          <source>Visit the ServiceNow store at &lt;a href=&quot;https://store.servicenow.com&quot;&gt;https://store.servicenow.com&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://store.servicenow.com&quot;&gt;https://store.servicenow.com&lt;/a&gt; 에서 ServiceNow 스토어를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="b7c044397964df7f9ce38005a202a70069a19504" translate="yes" xml:space="preserve">
          <source>Visit this page: &lt;a href=&quot;http://downloads.chef.io/chef-dk/&quot;&gt;http://downloads.chef.io/chef-dk/&lt;/a&gt;. The Chef development kit supports Mac OS X, Red Hat Enterprise Linux, Ubuntu, and Microsoft Windows.</source>
          <target state="translated">이 페이지를 방문하십시오 : &lt;a href=&quot;http://downloads.chef.io/chef-dk/&quot;&gt;http://downloads.chef.io/chef-dk/&lt;/a&gt; . Chef 개발 키트는 Mac OS X, Red Hat Enterprise Linux, Ubuntu 및 Microsoft Windows를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a6b945cdeaecbcf359d920a4804a6bfe15e52050" translate="yes" xml:space="preserve">
          <source>Visual Glossary</source>
          <target state="translated">시각적 용어집</target>
        </trans-unit>
        <trans-unit id="423f1f3d80c4d824ca917e13649a5c584a13ec87" translate="yes" xml:space="preserve">
          <source>Visual Studio Code</source>
          <target state="translated">Visual Studio 코드</target>
        </trans-unit>
        <trans-unit id="7d9d37a8700a8b1fa5f74208b5f3c88f2449361e" translate="yes" xml:space="preserve">
          <source>Visual Studio Code (free/open source)</source>
          <target state="translated">Visual Studio Code (무료 / 오픈 소스)</target>
        </trans-unit>
        <trans-unit id="20e064ecc1df246539820ccbcf3251b6003edc6b" translate="yes" xml:space="preserve">
          <source>Volume Groups</source>
          <target state="translated">볼륨 그룹</target>
        </trans-unit>
        <trans-unit id="24ac7e2d4733c71b926bf41a3d465b41cfd793cd" translate="yes" xml:space="preserve">
          <source>Vulnerability assessment indicates if recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">취약성 평가는 가상 머신에 대한 권장 사항이 활성화되었는지 여부를 나타냅니다 ( &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2e31950e28a56c4fe6e7025b187b2fd4fefe4871" translate="yes" xml:space="preserve">
          <source>WINDOWS</source>
          <target state="translated">WINDOWS</target>
        </trans-unit>
        <trans-unit id="f818188f163068df7506a01599b61d606ec9d09d" translate="yes" xml:space="preserve">
          <source>WRITER</source>
          <target state="translated">WRITER</target>
        </trans-unit>
        <trans-unit id="60c04ae9890fae3f868ff2c7d2d670275f09ce3f" translate="yes" xml:space="preserve">
          <source>Wait for non-blocking steps during the backup procedure. Useful if you&amp;rsquo;d like the backup to to return early without waiting for the Elasticsearch snapshot to complete. Default setting: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">백업 절차 중에 비 차단 단계를 기다립니다. Elasticsearch 스냅 샷이 완료 될 때까지 기다리지 않고 백업을 일찍 반환하려는 경우 유용합니다. 기본 설정 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a9c5eb005c2d2b3cc75b11a3ee1bfc6356a871b" translate="yes" xml:space="preserve">
          <source>Wait until the status response is healthy or the timeout is reached (default: false)</source>
          <target state="translated">상태 응답이 정상이거나 시간 초과에 도달 할 때까지 기다립니다 (기본값 : false).</target>
        </trans-unit>
        <trans-unit id="79fc70c0c94829fce4db2e73e5e675ab5e49f9eb" translate="yes" xml:space="preserve">
          <source>Waiting for nodes to commit or refuse to run the command.</source>
          <target state="translated">노드가 명령 실행을 커밋하거나 거부 할 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="6d8449f5c8ea6e4d1a13eaff1da65d75d60f4f31" translate="yes" xml:space="preserve">
          <source>Waiver files are &lt;a href=&quot;../inputs/index&quot;&gt;input files&lt;/a&gt; with a specific format:</source>
          <target state="translated">면제 파일은 특정 형식의 &lt;a href=&quot;../inputs/index&quot;&gt;입력 파일&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f720d888d646949302e1428c0106281fa63d106d" translate="yes" xml:space="preserve">
          <source>Waivers</source>
          <target state="translated">Waivers</target>
        </trans-unit>
        <trans-unit id="305d9787a9cfb983bc3a0cb1778a299083ff6732" translate="yes" xml:space="preserve">
          <source>Waivers is a mechanism to mark controls as &amp;ldquo;waived&amp;rdquo; for various reasons, and to control the running and/or reporting of those controls. It uses a YAML input file that identifies:</source>
          <target state="translated">면제는 다양한 이유로 통제를 &quot;면제&quot;로 표시하고 해당 통제의 실행 및 / 또는보고를 통제하는 메커니즘입니다. 다음을 식별하는 YAML 입력 파일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3009d557c90c919cd9d0ea8a12b75430344b5929" translate="yes" xml:space="preserve">
          <source>Warn</source>
          <target state="translated">Warn</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="1430f976c596795274458abcfbc4f280cbfcebac" translate="yes" xml:space="preserve">
          <source>Warnings</source>
          <target state="translated">Warnings</target>
        </trans-unit>
        <trans-unit id="148e9ca559abdd40ace17a3cf72c22ba8001e3cd" translate="yes" xml:space="preserve">
          <source>Watch for Chef Infra errors. If any occur, fix them.</source>
          <target state="translated">Chef Infra 오류를 확인하십시오. 발생하는 경우 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="5896a2196197afaffce238483fbdbd728037d407" translate="yes" xml:space="preserve">
          <source>Watch the status of the migration to Chef Automate 2</source>
          <target state="translated">Chef Automate 2 로의 마이그레이션 상태보기</target>
        </trans-unit>
        <trans-unit id="837d571b2021f83ccc2ca1367d9169b294855791" translate="yes" xml:space="preserve">
          <source>We add the following software to augment the Linux From Scratch toolchain:</source>
          <target state="translated">Linux From Scratch 툴체인을 보강하기 위해 다음 소프트웨어를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d04313bb46e4853ce61155cd6683e241ed48cacf" translate="yes" xml:space="preserve">
          <source>We advise caution in the use of this feature, as excessive or prolonged silencing can lead to difficulty upgrading when the next major release of Chef comes out.</source>
          <target state="translated">과도하거나 장기간의 침묵으로 인해 Chef의 다음 주요 릴리스가 나올 때 업그레이드가 어려울 수 있으므로이 기능을 사용할 때는주의 할 것을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="9ec11260544c56724a506a9ade4c05323ec6f4fb" translate="yes" xml:space="preserve">
          <source>We are continuously improving and streamlining the way attributes work in Chef, to make it easier for users to reason about and safely configure their servers.</source>
          <target state="translated">사용자가 쉽게 추론하고 서버를 안전하게 구성 할 수 있도록 Chef에서 속성이 작동하는 방식을 지속적으로 개선하고 간소화하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="7af3e10ad185aef34d728716a84092a30b29d69b" translate="yes" xml:space="preserve">
          <source>We are continuously improving and streamlining the way custom resources work in Chef, to make it easier for cookbook authors and Chef developers to build resources.</source>
          <target state="translated">Cookbook 작성자와 Chef 개발자가 리소스를 쉽게 구축 할 수 있도록 Chef에서 사용자 지정 리소스가 작동하는 방식을 지속적으로 개선하고 간소화하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f355abdc21fae690ced2b553485694471d6afc8e" translate="yes" xml:space="preserve">
          <source>We are going to set up a local file share on your Mac. We will use the tools below to populate it with the settings and configuration we need. Follow this doc to set up a local repo, we will use Server Explorer to sync it to Azure - go to &amp;ldquo;Building a &amp;ldquo;server&amp;rdquo; repository&amp;rdquo;</source>
          <target state="translated">Mac에서 로컬 파일 공유를 설정하겠습니다. 아래 도구를 사용하여 필요한 설정 및 구성으로 채울 것입니다. 이 문서에 따라 로컬 리포지토리를 설정합니다. 서버 탐색기를 사용하여 Azure에 동기화합니다. &quot;&quot;서버 &quot;리포지토리 구축&quot;으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="ec2f8ac6c4e49211341861c06d5063d26dff3759" translate="yes" xml:space="preserve">
          <source>We are going to take a different approach with Munki because the configuration files are in XML and editing them directly can be fraught with peril so we are going to rely on using command line tools for the most part.</source>
          <target state="translated">구성 파일이 XML로되어 있고 직접 편집하는 것이 위험 할 수 있으므로 Munki와 다른 접근 방식을 취할 것이므로 대부분의 경우 명령 줄 도구를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="56c66f447130c877a3b88917de0f3e153832db4c" translate="yes" xml:space="preserve">
          <source>We are not affiliated with, endorsed or sponsored by Chef Inc.</source>
          <target state="translated">우리는 Chef Inc.와 제휴, 보증 또는 후원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="215c0f64471f595dc4a38e79f33e1fb9992b56be" translate="yes" xml:space="preserve">
          <source>We are now enforcing this as the correct way to write resources.</source>
          <target state="translated">우리는 이제 리소스를 작성하는 올바른 방법으로 이것을 시행하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8edf8ff48e7fa3833c7846d02d6c4aa040863dd" translate="yes" xml:space="preserve">
          <source>We ask you not to submit security concerns via GitHub. For details on submitting potential security issues please see &lt;a href=&quot;https://www.chef.io/security/&quot;&gt;https://www.chef.io/security/&lt;/a&gt;.</source>
          <target state="translated">GitHub를 통해 보안 문제를 제출하지 마시기 바랍니다. 잠재적 보안 문제 제출에 대한 자세한 내용은 &lt;a href=&quot;https://www.chef.io/security/&quot;&gt;https://www.chef.io/security/&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="88733bdb5b01f79efbf9a44120c52153c6bbfb69" translate="yes" xml:space="preserve">
          <source>We can make this user tunable like this:</source>
          <target state="translated">이 사용자를 다음과 같이 조정 가능하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47c617d3d994f94a45652e213780eb9908459b46" translate="yes" xml:space="preserve">
          <source>We can now run that profile with &lt;code&gt;inspec exec rock_critic --input amplifier_max_volume=11&lt;/code&gt;:</source>
          <target state="translated">이제 &lt;code&gt;inspec exec rock_critic --input amplifier_max_volume=11&lt;/code&gt; 로 해당 프로필을 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee4cefb70bf17677193dd98c4e1b88ab1aa4ed8a" translate="yes" xml:space="preserve">
          <source>We capture:</source>
          <target state="translated">우리는 다음을 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="00be42b38db209ab64b208d6235a2c989c43d4a2" translate="yes" xml:space="preserve">
          <source>We do not support Azure Government Cloud.</source>
          <target state="translated">Azure Government Cloud는 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8f7df4da3eec95f3533628966433234f5add1239" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t want the cluster to fail over to a follower that is in the process of being updated. So we start by disabling failover:</source>
          <target state="translated">업데이트중인 팔로워로 클러스터가 장애 조치되는 것을 원하지 않습니다. 따라서 장애 조치를 비활성화하는 것으로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="85e737d0a084fd8783c4da04c629fd4a00633988" translate="yes" xml:space="preserve">
          <source>We have a 4 step process for contributions:</source>
          <target state="translated">기여를위한 4 단계 프로세스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1bbcdbb69afbd4bf56ecb4674a623709b2f1f7a" translate="yes" xml:space="preserve">
          <source>We highly recommend migrating existing definitions to custom resources to unlock the full feature set of Chef Infra resources. The following example shows a definition and that same definition rewritten as a custom resource.</source>
          <target state="translated">Chef Infra 리소스의 전체 기능 세트를 잠금 해제하려면 기존 정의를 사용자 지정 리소스로 마이그레이션하는 것이 좋습니다. 다음 예제는 사용자 정의 자원으로 다시 작성된 정의 및 동일한 정의를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="40f1d7ce02a15c3965c9b041210d90c73e91a5ea" translate="yes" xml:space="preserve">
          <source>We may access &lt;code&gt;provisioningStatus&lt;/code&gt; with:</source>
          <target state="translated">다음을 사용하여 &lt;code&gt;provisioningStatus&lt;/code&gt; 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f692c38723a18805c0a1dc99ed7b950973d9395b" translate="yes" xml:space="preserve">
          <source>We need a Mobile Device Management (MDM) service to capture macOS machines as they boot, and to securely connect and push applications and configuration settings to them. In this document we use MicroMDM, but there are others on the market like VMware Airwatch, SimpleMDM, and others.</source>
          <target state="translated">macOS 컴퓨터가 부팅 될 때 캡처하고 애플리케이션과 구성 설정을 안전하게 연결하고 푸시하려면 MDM (모바일 장치 관리) 서비스가 필요합니다. 이 문서에서는 MicroMDM을 사용하지만 VMware Airwatch, SimpleMDM 등과 같은 다른 제품도 시장에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="628eb92a6c8002e916c732b9a807ff27159c5a63" translate="yes" xml:space="preserve">
          <source>We recommend performing a backup before starting any server upgrade process. Follow the &lt;a href=&quot;../../runbook/server_backup_restore/index&quot;&gt;Chef Infra Server Backup&lt;/a&gt; documentation before starting your Upgrade Lab.</source>
          <target state="translated">서버 업그레이드 프로세스를 시작하기 전에 백업을 수행하는 것이 좋습니다. Upgrade Lab을 시작하기 전에 &lt;a href=&quot;../../runbook/server_backup_restore/index&quot;&gt;Chef Infra Server Backup&lt;/a&gt; 설명서를 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="cb68f67fd9eb385e3fcebb5952b29448770ea59b" translate="yes" xml:space="preserve">
          <source>We recommend performing a backup before starting any server upgrade process. Follow the &lt;a href=&quot;../runbook/server_backup_restore/index&quot;&gt;Chef Infra Server Backup&lt;/a&gt; documentation before starting your Upgrade Lab.</source>
          <target state="translated">서버 업그레이드 프로세스를 시작하기 전에 백업을 수행하는 것이 좋습니다. Upgrade Lab을 시작하기 전에 &lt;a href=&quot;../runbook/server_backup_restore/index&quot;&gt;Chef Infra Server Backup&lt;/a&gt; 설명서를 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="3bed04b2b051ae41450c3b16133af29ac0e5caba" translate="yes" xml:space="preserve">
          <source>We recommend periodically verifying your backup by restoring a single Chef Backend node, a single Chef Infra Server node, and ensuring that various knife commands and Chef Infra Client runs can successfully complete against your backup.</source>
          <target state="translated">단일 Chef 백엔드 노드, 단일 Chef Infra Server 노드를 복원하고 다양한 나이프 명령 및 Chef Infra 클라이언트 실행이 백업에 대해 성공적으로 완료 될 수 있는지 확인하여 정기적으로 백업을 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="184b400df42583e14070edcd4cbf52c69ef0d3c2" translate="yes" xml:space="preserve">
          <source>We recommend re-running the &lt;code&gt;install-runner&lt;/code&gt; command rather than manually updating runners, as the installation process manages the Chef Automate server certification change for you when it bootstraps the node.</source>
          <target state="translated">설치 프로세스가 노드를 부트 스트랩 할 때 Chef Automate 서버 인증 변경 사항을 관리하므로 러너를 수동으로 업데이트하는 것보다 &lt;code&gt;install-runner&lt;/code&gt; 명령을 다시 실행하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="83043270a3989237c9209b4394d881f4bd97abcc" translate="yes" xml:space="preserve">
          <source>We recommend starting the upgrade process on a node with a simple setup, such as one with fewer and simpler cookbooks. The &lt;code&gt;chef report&lt;/code&gt; command surveys your nodes and cookbooks. Use the reports to identify a good starting place.</source>
          <target state="translated">더 적은 수의 간단한 쿡북이있는 노드와 같이 간단한 설정으로 노드에서 업그레이드 프로세스를 시작하는 것이 좋습니다. &lt;code&gt;chef report&lt;/code&gt; 명령은 노드와 요리 책을 조사한다. 보고서를 사용하여 좋은 출발점을 식별하십시오.</target>
        </trans-unit>
        <trans-unit id="73fc8906be0f42f757f3b509895d0d0f511e2a06" translate="yes" xml:space="preserve">
          <source>We recommend starting with a clean installation of Chef Automate, Chef Infra Server, and Chef Desktop. Combining existing Chef Automate nodes with new Chef Desktop leads to significant confusion, because the servers do not distinguish between the types of nodes that they mange.</source>
          <target state="translated">Chef Automate, Chef Infra Server 및 Chef Desktop을 새로 설치하는 것이 좋습니다. 기존 Chef Automate 노드를 새로운 Chef Desktop과 결합하면 서버가 관리하는 노드 유형을 구분하지 않기 때문에 상당한 혼란이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f81a03d9fdec40e478e17813d785e7d4e8fadab6" translate="yes" xml:space="preserve">
          <source>We recommend starting with a fresh installation of Chef Automate, Chef Infra Server, and Chef Desktop because the servers do not distinguish between the types of managed nodes when combining existing Chef Automate nodes with a new Chef Desktop installation.</source>
          <target state="translated">기존 Chef Automate 노드를 새 Chef Desktop 설치와 결합 할 때 서버가 관리 노드 유형을 구분하지 않기 때문에 Chef Automate, Chef Infra Server 및 Chef Desktop을 새로 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="91cf50007873a376a25d66d99d93e3deee1cb990" translate="yes" xml:space="preserve">
          <source>We recommend that you use the conventions described in this guide when contributing to the Chef reference documentation.</source>
          <target state="translated">Chef 참조 문서에 기여할 때이 가이드에 설명 된 규칙을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2500f8e4d2aa391d291c18bc101b63840a3c0f99" translate="yes" xml:space="preserve">
          <source>We recommend using a secure copy protocol (SCP) to move the public key and configuration file from the Chef Infra Server to the &lt;code&gt;.chef&lt;/code&gt; directory on your workstation.</source>
          <target state="translated">SCP (Secure Copy Protocol)를 사용하여 공개 키 및 구성 파일을 Chef Infra Server에서 워크 스테이션 의 &lt;code&gt;.chef&lt;/code&gt; 디렉토리 로 이동하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d38d416e95168ae5b560916fa7b33d4c71b513b8" translate="yes" xml:space="preserve">
          <source>We recommended using &amp;ldquo;validatorless bootstrapping&amp;rdquo; to authenticate new nodes with the Chef Infra Server.</source>
          <target state="translated">Chef Infra Server로 새 노드를 인증하기 위해 &quot;검증기없는 부트 스트랩&quot;을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1d706dbd52048ff2baf7a790b63c47ac5686f6e5" translate="yes" xml:space="preserve">
          <source>We shun the 10.0.0.0/8 space</source>
          <target state="translated">10.0.0.0/8 공간을 피합니다.</target>
        </trans-unit>
        <trans-unit id="09678a1fb24a49feadfca2f7780a44b6bc1abd21" translate="yes" xml:space="preserve">
          <source>We support &amp;ldquo;persistent&amp;rdquo; members - these are members who will continue to have the failure detection protocol run against them, even if they are confirmed dead. This enables the system to heal from long-lived total partitions.</source>
          <target state="translated">&quot;영구&quot;멤버를 지원합니다. 이들은 죽은 것으로 확인 된 경우에도 계속해서 실패 감지 프로토콜을 실행할 멤버입니다. 이를 통해 시스템은 수명이 긴 전체 파티션에서 복구 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec0476725ac98200444fbd7a06699bd1e2fd4873" translate="yes" xml:space="preserve">
          <source>We support encryption on the wire.</source>
          <target state="translated">우리는 유선에서 암호화를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="26505d8b3f384ed6afbf188ff921be46ce70152f" translate="yes" xml:space="preserve">
          <source>We talked about a second way to get apps to your users in Windows. That method involves you licensing apps and then letting your users have them through your Private Microsoft Store. Follow the directions here to make that work for you.</source>
          <target state="translated">Windows에서 사용자에게 앱을 제공하는 두 번째 방법에 대해 이야기했습니다. 이 방법은 앱에 라이선스를 부여한 다음 사용자가 개인 Microsoft Store를 통해 앱을 보유하도록하는 것입니다. 이 작업을 수행하려면 여기의 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="89ea1ca370ab7fc317b97e32ecc8252d0145f052" translate="yes" xml:space="preserve">
          <source>We use Chef Habitat scaffolding to provide the Effortless maintainers better management of the build and runtime steps needed to be successful with Chef Infra and Chef InSpec. This means a small plan file is the amount of code that you, the customer, need to maintain in order to build and run Chef Infra and Chef InSpec. Focus on writing Chef Infra cookbooks and Chef InSpec profiles, and not on how to build and run those things.</source>
          <target state="translated">우리는 Chef Habitat 스캐 폴딩을 사용하여 Chef Infra 및 Chef InSpec을 성공적으로 수행하는 데 필요한 빌드 및 런타임 단계를 손쉽게 관리하는 관리자에게 더 나은 관리를 제공합니다. 즉, 작은 계획 파일은 Chef Infra 및 Chef InSpec을 빌드하고 실행하기 위해 고객이 유지 관리해야하는 코드의 양입니다. Chef Infra 쿡북 및 Chef InSpec 프로필 작성에 중점을 두십시오. 이러한 항목을 빌드하고 실행하는 방법에는 중점을 두지 마십시오.</target>
        </trans-unit>
        <trans-unit id="466ba2fed27ad226d9ab0d20d66bd704e4f2ffbd" translate="yes" xml:space="preserve">
          <source>We use this data to track Chef Workstation usage patterns, identify bugs, and iterate development based real aggregated feedback.</source>
          <target state="translated">이 데이터를 사용하여 Chef Workstation 사용 패턴을 추적하고 버그를 식별하며 실제 집계 된 피드백을 기반으로 개발을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="c4211820bb45bf1d115297be61fbc43e285c0467" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re glad you want to contribute to a Chef project! This guide will help answer common questions you may have during your first contribution.</source>
          <target state="translated">Chef 프로젝트에 기여하고 싶어서 기쁩니다! 이 가이드는 첫 번째 기부 과정에서 발생할 수있는 일반적인 질문에 대한 답변을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4ff865be61a3715f69c032d1de3e6a401e3269af" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve committed to ensuring the stability of the upgrade and to supporting Chef Automate&amp;rsquo;s automatic upgrades. To upgrade an airgapped install, you must supply an airgap bundle.</source>
          <target state="translated">우리는 업그레이드의 안정성을 보장하고 Chef Automate의 자동 업그레이드를 지원하기 위해 최선을 다하고 있습니다. airgapped 설치를 업그레이드하려면 airgap 번들을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="48f20e0e76c2de72ce2909e2bb36b9d9388817b9" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve provided you with some essential cURL commands for interacting with Chef Automate Profiles. In these examples, the owner is same value as first part of identifier, as discussed in &lt;a href=&quot;#about-the-profile-identifier&quot;&gt;About the Profile Identifier&lt;/a&gt;.</source>
          <target state="translated">Chef Automate 프로필과 상호 작용하기위한 몇 가지 필수 cURL 명령을 제공했습니다. 이 예에서 소유자는 &lt;a href=&quot;#about-the-profile-identifier&quot;&gt;프로필 식별자 정보에&lt;/a&gt; 설명 된 것처럼 식별자의 첫 번째 부분과 동일한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="0a8f1f48cd10cf3e0e3eca92e31c23ea295e58fa" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve written a complete blog post about that topic: &lt;a href=&quot;https://blog.chef.io/2015/11/04/the-road-to-inspec/&quot;&gt;The Road to InSpec&lt;/a&gt;</source>
          <target state="translated">해당 주제에 대한 전체 블로그 게시물을 작성했습니다. &lt;a href=&quot;https://blog.chef.io/2015/11/04/the-road-to-inspec/&quot;&gt;InSpec으로가는 길&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a174a10d65f0f290eeb1e4e85664db309c3d081" translate="yes" xml:space="preserve">
          <source>Web UI Private Key</source>
          <target state="translated">웹 UI 개인 키</target>
        </trans-unit>
        <trans-unit id="89ee92df88cdff097215f84736aa23a5771c43d1" translate="yes" xml:space="preserve">
          <source>Web application firewall indicates if recommendations for virtual machines are enabled (&lt;code&gt;On&lt;/code&gt;|&lt;code&gt;Off&lt;/code&gt;).</source>
          <target state="translated">웹 애플리케이션 방화벽은 가상 머신에 대한 권장 사항이 활성화되었는지 여부를 나타냅니다 ( &lt;code&gt;On&lt;/code&gt; | &lt;code&gt;Off&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5ed8d765c116fb821ba53b6eca6038e3a55440d4" translate="yes" xml:space="preserve">
          <source>Webhook Notification Payload</source>
          <target state="translated">Webhook 알림 페이로드</target>
        </trans-unit>
        <trans-unit id="0445858927951c48827ce01fb1a1676e97b895ac" translate="yes" xml:space="preserve">
          <source>Webhook Notifications</source>
          <target state="translated">Webhook 알림</target>
        </trans-unit>
        <trans-unit id="da28c0b72383aefde6cae4f4b8b65db95a6a3cc6" translate="yes" xml:space="preserve">
          <source>Webpi Cookbook</source>
          <target state="translated">Webpi 요리 책</target>
        </trans-unit>
        <trans-unit id="012ffa968d4a0eaddd5b5352be97ebf65feb50f5" translate="yes" xml:space="preserve">
          <source>Welcome to Chef!</source>
          <target state="translated">요리사에 오신 것을 환영합니다!</target>
        </trans-unit>
        <trans-unit id="a328801a3b7ba54e2a44adcb31c649934a9e9a30" translate="yes" xml:space="preserve">
          <source>Welcome to the Chef Effortless Patterns</source>
          <target state="translated">Chef Effortless Patterns에 오신 것을 환영합니다</target>
        </trans-unit>
        <trans-unit id="d6cb72214cfd979b3970b09044d5304d95a47031" translate="yes" xml:space="preserve">
          <source>Welcome to the Chef Software Documentation!</source>
          <target state="translated">Chef 소프트웨어 문서에 오신 것을 환영합니다!</target>
        </trans-unit>
        <trans-unit id="827e0b0e661222de2c6ee5de714ba90d35f50682" translate="yes" xml:space="preserve">
          <source>Wether or not to use compression. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">압축을 사용할지 여부. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9d48ce18ee89dd2965e42d8d6312beed2543d8e" translate="yes" xml:space="preserve">
          <source>What Chef Habitat topology it uses (and the plan should have the correct topology for the technology).</source>
          <target state="translated">사용하는 Chef Habitat 토폴로지 (계획에 기술에 대한 올바른 토폴로지가 있어야 함).</target>
        </trans-unit>
        <trans-unit id="25e5fb139dbb2c9c061d169d27582d98e1819b85" translate="yes" xml:space="preserve">
          <source>What We Collect</source>
          <target state="translated">우리가 수집하는 것</target>
        </trans-unit>
        <trans-unit id="f7dda5b9dad1a22530c60262a1a14779218b49a3" translate="yes" xml:space="preserve">
          <source>What a note looks like after it&amp;rsquo;s built:</source>
          <target state="translated">노트가 만들어진 후의 모양 :</target>
        </trans-unit>
        <trans-unit id="3f33b37d279e39d0b249f681ec1d79790a0f5235" translate="yes" xml:space="preserve">
          <source>What a warning looks like after it&amp;rsquo;s built:</source>
          <target state="translated">빌드 후 경고 표시 :</target>
        </trans-unit>
        <trans-unit id="38d4626a935f28fba705e83fff45c01fd05e4d2c" translate="yes" xml:space="preserve">
          <source>What are Chef InSpec Plugins?</source>
          <target state="translated">Chef InSpec 플러그인이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="27b69302d05ee2c1de507802b4672e8ff38c6aec" translate="yes" xml:space="preserve">
          <source>What are Inputs?</source>
          <target state="translated">입력이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="9257a490bd2e5d88fc16170ba90639165114cec3" translate="yes" xml:space="preserve">
          <source>What are Train Plugins?</source>
          <target state="translated">기차 플러그인이 무엇인가요?</target>
        </trans-unit>
        <trans-unit id="fc7c957cae1c67058eab0bed049fecac6b8c8e32" translate="yes" xml:space="preserve">
          <source>What can plugins do?</source>
          <target state="translated">플러그인은 무엇을 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="6c6d687166ed9ec8a9469c405a91bd489b7bd27c" translate="yes" xml:space="preserve">
          <source>What happened to &amp;ldquo;Attributes&amp;rdquo;?</source>
          <target state="translated">&quot;속성&quot;은 어떻게 되었습니까?</target>
        </trans-unit>
        <trans-unit id="e822705c25d5ba423092279092c6b8de56ff39f1" translate="yes" xml:space="preserve">
          <source>What if one of the controls from the included profile does not apply to your environment? Luckily, it is not necessary to maintain a slightly-modified copy of the included profile just to delete a control. The &lt;code&gt;skip_control&lt;/code&gt; command tells Chef InSpec to not run a particular control.</source>
          <target state="translated">포함 된 프로필의 컨트롤 중 하나가 환경에 적용되지 않으면 어떻게됩니까? 다행히도 컨트롤을 삭제하기 위해 포함 된 프로필의 약간 수정 된 복사본을 유지할 필요는 없습니다. &lt;code&gt;skip_control&lt;/code&gt; 의 명령은 특정 컨트롤을 실행하지 요리사 INSPEC을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="0c4caec16881b98ea39c0bfe6a7c8cc7821c8f85" translate="yes" xml:space="preserve">
          <source>What is Chef Habitat</source>
          <target state="translated">Chef Habitat이란?</target>
        </trans-unit>
        <trans-unit id="fbdfaa85a662598fc8ccf28422b9ad119818e933" translate="yes" xml:space="preserve">
          <source>What is FIPS?</source>
          <target state="translated">FIPS 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="a7663c83ff9b46cab45592cf19ac6fe115992eb0" translate="yes" xml:space="preserve">
          <source>What is left under &lt;code&gt;'foo'&lt;/code&gt; is only &lt;code&gt;'bat'&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;'foo'&lt;/code&gt; 아래에 남은 것은 &lt;code&gt;'bat'&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="662279334e3272328122d3f5c655e1f3f81a33f2" translate="yes" xml:space="preserve">
          <source>What is needed?</source>
          <target state="translated">무엇이 필요합니까?</target>
        </trans-unit>
        <trans-unit id="84f965094b42f07ce412e01b11746306a7836e11" translate="yes" xml:space="preserve">
          <source>What qualifies as an Obvious Fix?</source>
          <target state="translated">명백한 수정에 해당하는 것은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="ee54406d6907f4869d3b761c40a52caa98b970fc" translate="yes" xml:space="preserve">
          <source>What the state of the node should be at the end of the current Chef Infra Client run</source>
          <target state="translated">현재 Chef Infra Client 실행 종료시 노드 상태</target>
        </trans-unit>
        <trans-unit id="41485971d2cf90213ea77f9639e3f0927c27fe53" translate="yes" xml:space="preserve">
          <source>What the state of the node should be at the end of the current chef-client run</source>
          <target state="translated">현재 chef-client 실행이 끝날 때 노드의 상태</target>
        </trans-unit>
        <trans-unit id="75b3cf70973ff91f864008c974f27cfe071b5e41" translate="yes" xml:space="preserve">
          <source>What the state of the node was at the end of the previous Chef Infra Client run</source>
          <target state="translated">이전 Chef Infra Client 실행 종료시 노드 상태</target>
        </trans-unit>
        <trans-unit id="111aa1f9659ff42f398553a1ac29d51290f7a755" translate="yes" xml:space="preserve">
          <source>What the state of the node was at the end of the previous chef-client run</source>
          <target state="translated">이전 요리사-클라이언트 실행이 끝났을 때 노드의 상태</target>
        </trans-unit>
        <trans-unit id="e96f5bc26f239b0766accf7dfad51f5393e0cc7a" translate="yes" xml:space="preserve">
          <source>What this means:</source>
          <target state="translated">이게 무슨 뜻이야:</target>
        </trans-unit>
        <trans-unit id="136943da8904da6719b63fd7240fe250a732e9c0" translate="yes" xml:space="preserve">
          <source>What types of delivery environments are available?</source>
          <target state="translated">어떤 유형의 전달 환경을 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="3f0277dc8d575d3585f1131524138b26917062d0" translate="yes" xml:space="preserve">
          <source>Whats good about this system:</source>
          <target state="translated">이 시스템의 장점 :</target>
        </trans-unit>
        <trans-unit id="719f5f16f17a0c97631d4fb9ea5f045681ddc50e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;%w&lt;/code&gt; syntax uses a variable, such as &lt;code&gt;|foo|&lt;/code&gt;, double quoted strings should be used.</source>
          <target state="translated">때 &lt;code&gt;%w&lt;/code&gt; 구문은 변수를 사용하여, 같은 &lt;code&gt;|foo|&lt;/code&gt; , 큰 따옴표로 묶인 문자열을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a896f9f5d92c20936b169c51a3fc808d9ee25f05" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;false&lt;/code&gt;, no data for that property is returned.</source>
          <target state="translated">때 &lt;code&gt;false&lt;/code&gt; , 해당 속성에 대한 데이터가 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="23a7c77d0c25cbbbf2378352a290002a97476f78" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;false&lt;/code&gt;, the value of the property impacts how the resource executes, but it is not determined by the state of the system.</source>
          <target state="translated">경우 &lt;code&gt;false&lt;/code&gt; , 프로퍼티의 값에 영향을 어떻게 리소스가 실행하지만,이 시스템의 상태에 의해 결정되지 않는다.</target>
        </trans-unit>
        <trans-unit id="c957217e6ca925958e09d9214d3c4f4849e40260" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;false&lt;/code&gt;, the values defined by the recipe or custom resource will determine the value, i.e. &amp;ldquo;the desired state of this system includes setting the value defined in this custom resource or recipe&amp;rdquo;</source>
          <target state="translated">경우 &lt;code&gt;false&lt;/code&gt; , 레시피 또는 지정 자원에 의해 정의 된 값의 값을 결정, 즉 &quot;이 시스템의 바람직한 상태는이 정의 자원이나 레시피에 정의 된 설정 값을 포함하는&quot;</target>
        </trans-unit>
        <trans-unit id="af1f3d40b67efe1913a56d72c1f94ea0ce890472" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;node_count&lt;/code&gt; is greater than &lt;code&gt;node_license&lt;/code&gt;, then &lt;code&gt;limit_exceeded&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and the Chef management console will display a notification about this status. The way to resolve this is to visit the upgrade URL, add the appropriate number of licenses, and then update the configuration settings appropriately.</source>
          <target state="translated">때 &lt;code&gt;node_count&lt;/code&gt; 이 보다 큰 &lt;code&gt;node_license&lt;/code&gt; , 다음 &lt;code&gt;limit_exceeded&lt;/code&gt; 는 것입니다 &lt;code&gt;true&lt;/code&gt; 과 요리사 관리 콘솔이 상태에 대한 알림을 표시합니다. 이를 해결하는 방법은 업그레이드 URL을 방문하여 적절한 수의 라이센스를 추가 한 다음 구성 설정을 적절하게 업데이트하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d4120d72a55bdb2d0fc629f667722259ba2a4a7e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;show_download_progress&lt;/code&gt; is set to true this is the interval in seconds to write out download progress. Default value: &lt;code&gt;10&lt;/code&gt;</source>
          <target state="translated">때 &lt;code&gt;show_download_progress&lt;/code&gt; 가 true로 설정되어이 다운로드 진행 상황을 쓸 수 초 간격입니다. 기본값 : &lt;code&gt;10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="312b868323b7d2ed62b92a3704fc67bb3ba1991e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt; this property sets the default values for &lt;code&gt;chunk&lt;/code&gt; and &lt;code&gt;metadata&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; allowing mdadm to use its own default values. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; 이 속성의 기본 값으로 설정 &lt;code&gt;chunk&lt;/code&gt; 와 &lt;code&gt;metadata&lt;/code&gt; 에 &lt;code&gt;nil&lt;/code&gt; 는 mdadm는 자체 기본 값을 사용할 수 있도록. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2f9bc3336e5f1ad7d23834e5c7e91230a5642a6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;opscode_erchef['strict_search_result_acls']&lt;/code&gt; affects all search results and any actor (user, client, etc.) that does not have read access to a search result will not be able to view it. For example, this could affect search results returned during a Chef Infra Client runs if a Chef Infra Client does not have permission to read the information.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;opscode_erchef['strict_search_result_acls']&lt;/code&gt; 검색 결과에 대한 읽기 액세스 권한이없는 모든 검색 결과 및 모든 배우 (사용자, 클라이언트 등)에 영향을 볼 수 없습니다. 예를 들어 Chef Infra Client에 정보를 읽을 수있는 권한이없는 경우 Chef Infra Client 실행 중에 반환되는 검색 결과에 영향을 미칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccfdacacb8774ea0f96d05bfab72bffef1737da9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;opscode_erchef['strict_search_result_acls']&lt;/code&gt; affects all search results and any actor (user, client, etc.) that does not have read access to a search result will not be able to view it. For example, this could affect search results returned during chef-client runs if a chef-client does not have permission to read the information.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;opscode_erchef['strict_search_result_acls']&lt;/code&gt; 검색 결과에 대한 읽기 액세스 권한이없는 모든 검색 결과 및 모든 배우 (사용자, 클라이언트 등)에 영향을 볼 수 없습니다. 예를 들어, 요리사 클라이언트가 정보를 읽을 수있는 권한이없는 경우 요리사 클라이언트 실행 중에 리턴 된 검색 결과에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c10a45092fed9652dd931b5056474a2eb531d39c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, all commands are executed via a scheduled task. This may eliminate access denied errors related to double hop authentication, interacting with windows updates and installing some MSIs such as sql server and .net runtimes. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , 모든 명령은 예약 된 작업을 통해 실행됩니다. 이렇게하면 이중 홉 인증, Windows 업데이트와 상호 작용 및 SQL Server 및 .net 런타임과 같은 일부 MSI 설치와 관련된 액세스 거부 오류가 제거 될 수 있습니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9a868671682cf31bccb0b3f4fb47d8c2a3003d45" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, anonymous usage data and bug reports are sent to Chef. See Chef&amp;rsquo;s &lt;a href=&quot;../privacy/index&quot;&gt;Privacy Statement&lt;/a&gt; for the type and usage of gathered data.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , 익명의 사용 데이터 및 버그 보고서는 요리사로 전송됩니다. 수집 된 데이터의 유형 및 사용법은 Chef의 &lt;a href=&quot;../privacy/index&quot;&gt;개인 정보 보호 정책&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef954e458c9992a20b3e92f4e2bf93d298a78bf3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, data for that property is returned as part of the resource data set and may be available to external applications, such as reporting</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , 그 속성에 대한 데이터는 리소스 데이터 세트의 일부로 반환 및보고와 같은 외부 애플리케이션에 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="9b3a18c35f77fdf1b9e92e07143b9a2338e2146f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, the state of the property is determined by the state of the system</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , 속성의 상태는 시스템의 상태에 의해 결정된다</target>
        </trans-unit>
        <trans-unit id="f5c881c64047a80b39df442ae1bf654f32d9adb0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, the state of the system will determine the value.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; , 시스템의 상태 값을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="640443cc7e0b6c7c7e57adbe314390f60e8c358c" translate="yes" xml:space="preserve">
          <source>When Chef Automate deploys the Chef Infra Server, it automatically configures the Chef Infra Server to collect data to send to Chef Automate. To deploy a standalone Chef Infra Server with Chef Automate, you must turn off data collection in the configuration. Installations require elevated privileges, so run the commands as the superuser or use &lt;code&gt;sudo&lt;/code&gt; at the start of each command.</source>
          <target state="translated">Chef Automate는 Chef Infra Server를 배포 할 때 Chef Automate로 보낼 데이터를 수집하도록 Chef Infra Server를 자동으로 구성합니다. Chef Automate를 사용하여 독립 실행 형 Chef Infra Server를 배포하려면 구성에서 데이터 수집을 꺼야합니다. 설치에는 높은 권한이 필요하므로 수퍼 유저로 명령을 실행하거나 각 명령을 시작할 때 &lt;code&gt;sudo&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="b2fd7063a8231a357ebf5fc7b5c1cf214a0a88b9" translate="yes" xml:space="preserve">
          <source>When Chef Automate executes a phase, it selects a build node or runner to run the job. On the build node/runner, the project&amp;rsquo;s source is fetched and synchronized to the revision matching the head of the feature branch for the change. The build node/runner reads the project&amp;rsquo;s &lt;code&gt;config.json&lt;/code&gt; file and uses this information to fetch the appropriate build cookbook. Finally, the build node/runner runs a local chef-zero run to execute the appropriate phase.</source>
          <target state="translated">Chef Automate는 단계를 실행할 때 작업을 실행할 빌드 노드 또는 실행기를 선택합니다. 빌드 노드 / 러너에서 프로젝트의 소스를 가져 와서 변경을위한 기능 브랜치의 헤드와 일치하는 개정에 동기화합니다. 빌드 노드 / 러너는 프로젝트의 &lt;code&gt;config.json&lt;/code&gt; 파일을 읽고이 정보를 사용하여 적절한 빌드 쿡북을 가져옵니다. 마지막으로 빌드 노드 / 러너는 로컬 요리사 제로 실행을 실행하여 적절한 단계를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="dd59280aa2d696743ea1077d007cd8f07af7b4b1" translate="yes" xml:space="preserve">
          <source>When Chef Automate receives the change, it triggers the Verify stage. The purpose of Verify is to run checks so that the system can decide if it&amp;rsquo;s worth the time of a human to review the change.</source>
          <target state="translated">Chef Automate는 변경 사항을 수신하면 Verify 단계를 트리거합니다. 확인의 목적은 사람이 변경 사항을 검토 할 가치가 있는지 시스템이 결정할 수 있도록 검사를 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ba7be4305ea0b19f73f3b05c107f4b9b30a5d089" translate="yes" xml:space="preserve">
          <source>When Chef Infra Client is installed using RubyGems or a package manager, chef-shell should already be installed. When Chef Infra Client is run from a git clone, it will be located in &lt;code&gt;chef/bin/chef shell&lt;/code&gt;. To start chef-shell, just run it without any options. You&amp;rsquo;ll see the loading message, then the banner, and then the chef-shell prompt:</source>
          <target state="translated">RubyGems 또는 패키지 관리자를 사용하여 Chef Infra Client를 설치하는 경우 chef-shell이 ​​이미 설치되어 있어야합니다. Chef Infra Client가 git 클론에서 실행되면 &lt;code&gt;chef/bin/chef shell&lt;/code&gt; 에 있습니다. Chef-shell을 시작하려면 옵션없이 실행하면됩니다. 로딩 메시지, 배너, 셰프 쉘 프롬프트가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="38cb5e686beff82f80e78e4cd21c1da94d9fe98d" translate="yes" xml:space="preserve">
          <source>When Chef Infra Client is installed using an unattended bootstrap, it may be built into an image that starts Chef Infra Client on boot, or installed using User Data or some other kind of post-deployment script. The type of image or User Data used depends on the platform on which the unattended bootstrap will take place.</source>
          <target state="translated">무인 부트 스트랩을 사용하여 Chef Infra Client를 설치하면 부팅시 Chef Infra Client를 시작하는 이미지에 내장되거나 사용자 데이터 또는 기타 배포 후 스크립트를 사용하여 설치할 수 있습니다. 사용되는 이미지 또는 사용자 데이터의 유형은 무인 부트 스트랩이 발생하는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="14dff8aa5e3b7267a978f74239ebd3619798158a" translate="yes" xml:space="preserve">
          <source>When Chef Infra Client is installed using an unattended bootstrap, remember that Chef Infra Client:</source>
          <target state="translated">무인 부트 스트랩을 사용하여 Chef Infra Client를 설치하는 경우 Chef Infra Client는 다음을 기억하십시오.</target>
        </trans-unit>
        <trans-unit id="dbcfc34b58e1a176c1839d70fd6672a417a914c5" translate="yes" xml:space="preserve">
          <source>When Chef Infra Client is run in why-run mode, certain assumptions are made:</source>
          <target state="translated">Chef Infra Client가 왜 실행 모드로 실행될 때 다음과 같은 특정 가정이 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="4618d74c1f84f4cd7be400de0f72b167804e9936" translate="yes" xml:space="preserve">
          <source>When Chef Infra Client runs, it will register the API client and generate the correct key.</source>
          <target state="translated">Chef Infra Client가 실행되면 API 클라이언트를 등록하고 올바른 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f6b92b78e2818555057c5f9e96a28a4970e28801" translate="yes" xml:space="preserve">
          <source>When Chef Infra Client runs, the &lt;strong&gt;remote_directory&lt;/strong&gt; resource will tell Chef Infra Client to copy the directory tree from the cookbook to the file system using the structure defined in cookbook:</source>
          <target state="translated">Chef Infra Client가 실행되면 &lt;strong&gt;remote_directory&lt;/strong&gt; 리소스는 Chef Infra Client에 쿡북에 정의 된 구조를 사용하여 쿡북에서 파일 시스템으로 디렉토리 트리를 복사하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="9d226218d6642b94b6661ddd2152738a0af00bcf" translate="yes" xml:space="preserve">
          <source>When Foodcritic returns a violation, this does not automatically mean the code needs to be changed. It is important to first understand the intention of the rule before making the changes it suggests. For example, rule &lt;code&gt;FC003&lt;/code&gt; describes a scenario where a recipe uses the &lt;code&gt;search&lt;/code&gt; method in the Recipe DSL to retrieve data from the Chef Infra Server. Rule &lt;code&gt;FC003&lt;/code&gt; may suggest that a cookbook will raise an error if that cookbook is run in a situation where a Chef Infra Server is not present. Adopting this rule is only necessary when chef-solo is part of the team&amp;rsquo;s workflow (because chef-solo does not use a Chef Infra Server).</source>
          <target state="translated">Foodcritic이 위반을 반환한다고해서 코드를 변경해야한다는 것을 자동으로 의미하지는 않습니다. 제안하는 변경 사항을 적용하기 전에 먼저 규칙의 의도를 이해하는 것이 중요합니다. 예를 들어 규칙 &lt;code&gt;FC003&lt;/code&gt; 은 레시피가 레시피 DSL 의 &lt;code&gt;search&lt;/code&gt; 방법을 사용 하여 Chef Infra Server에서 데이터를 검색 하는 시나리오를 설명합니다 . 규칙 &lt;code&gt;FC003&lt;/code&gt; 은 Chef Infra Server가없는 상황에서 해당 요리 책이 실행되는 경우 요리 책이 오류를 발생시킬 것을 제안 할 수 있습니다. 이 규칙을 채택하는 것은 chef-solo가 팀 워크 플로의 일부인 경우에만 필요합니다 (chef-solo는 Chef Infra Server를 사용하지 않기 때문).</target>
        </trans-unit>
        <trans-unit id="b2a9cf1a12c023a4f1ad87208e67b9b2c065700d" translate="yes" xml:space="preserve">
          <source>When Is Using Effortless Not The Best Approach</source>
          <target state="translated">노력하지 않고 최선의 방법이 아닌 경우</target>
        </trans-unit>
        <trans-unit id="2479bf3327f6212b8bd7213837afff62c8dd0b00" translate="yes" xml:space="preserve">
          <source>When Ohai runs, if there isn&amp;rsquo;t a matching &lt;code&gt;collect_data&lt;/code&gt; block for a platform, the &lt;code&gt;collect_data(:default)&lt;/code&gt; block is used. The syntax for the &lt;code&gt;collect_data&lt;/code&gt; method is:</source>
          <target state="translated">Ohai가 실행될 때 플랫폼에 일치하는 &lt;code&gt;collect_data&lt;/code&gt; 블록 이 없으면 &lt;code&gt;collect_data(:default)&lt;/code&gt; 블록이 사용됩니다. &lt;code&gt;collect_data&lt;/code&gt; 메소드 의 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="03f80e9933c36bd69b6b8463ae7c8110dd66dd30" translate="yes" xml:space="preserve">
          <source>When Ohai was first released it depended on the sigar gem for discovering system configuration details. As time went on Ohai was expanded with built-in discovery methods for various platforms. The sigar gem was still required by Ohai and used primarily for the HP-UX platform. The SIGAR project is no longer active, and there is no longer an active port of Ruby to HP-UX. Due to this we&amp;rsquo;ve chosen to remove the sigar dependency and all sigar-based plugins from Ohai 13. There is no anticipated impact for Chef Foundation Platforms or Secondary Platforms. See the &lt;a href=&quot;../platforms/index&quot;&gt;Platforms&lt;/a&gt; page for a complete list of platforms.</source>
          <target state="translated">Ohai가 처음 출시되었을 때 시스템 구성 세부 정보를 검색하기 위해 sigar gem에 의존했습니다. 시간이 지남에 따라 Ohai는 다양한 플랫폼에 대한 기본 제공 검색 방법으로 확장되었습니다. sigar gem은 여전히 ​​Ohai에서 필요하며 주로 HP-UX 플랫폼에 사용되었습니다. SIGAR 프로젝트는 더 이상 활성 상태가 아니며 Ruby에서 HP-UX 로의 활성 포트도 더 이상 없습니다. 이로 인해 우리는 Ohai 13에서 sigar 종속성과 모든 sigar 기반 플러그인을 제거하기로 결정했습니다. Chef Foundation 플랫폼 또는 보조 플랫폼에 대한 예상되는 영향은 없습니다. 참고 항목 &lt;a href=&quot;../platforms/index&quot;&gt;플랫폼&lt;/a&gt; 플랫폼의 전체 목록은 페이지를.</target>
        </trans-unit>
        <trans-unit id="8e7e6832a94a8e19bcadfcee02b9a66cf75e0c6e" translate="yes" xml:space="preserve">
          <source>When SAML is configured, &lt;code&gt;delivery token&lt;/code&gt; defaults to SAML-authenticating the user, and it will prompt the user to use their browser to login to Chef Automate:</source>
          <target state="translated">SAML이 구성되면 &lt;code&gt;delivery token&lt;/code&gt; 기본적으로 사용자를 SAML 인증하고 사용자에게 브라우저를 사용하여 Chef Automate에 로그인하라는 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7c65b0dd05f3b341479b6ef8d7de146b6b87e851" translate="yes" xml:space="preserve">
          <source>When Terry is a member of the &lt;code&gt;Devops Project Viewers&lt;/code&gt; policy and not a member of any other policy, they will only be able to see resources assigned to &lt;code&gt;Devops&lt;/code&gt;. They will not be able to update or delete them. Kelly, however, will be able to update and delete.</source>
          <target state="translated">Terry가 &lt;code&gt;Devops Project Viewers&lt;/code&gt; 정책의 구성원이고 다른 정책의 구성원이 아닌 경우 &lt;code&gt;Devops&lt;/code&gt; 에 할당 된 리소스 만 볼 수 있습니다 . 업데이트하거나 삭제할 수 없습니다. 그러나 Kelly는 업데이트 및 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b5e25c1e1a64db5182a528bc4788e4153a1bebc" translate="yes" xml:space="preserve">
          <source>When Test Kitchen is being used to test cookbooks, Test Kitchen will track state data:</source>
          <target state="translated">Test Kitchen이 요리 책을 테스트하는 데 사용될 때 Test Kitchen은 상태 데이터를 추적합니다.</target>
        </trans-unit>
        <trans-unit id="a4fae7e08bda1fa57fce2d2b46b64bbf4ee41e35" translate="yes" xml:space="preserve">
          <source>When Workflow receives the change, it triggers the Verify stage. The purpose of Verify is to run checks so that the system can decide if it&amp;rsquo;s worth the time of a human to review the change.</source>
          <target state="translated">워크 플로가 변경 사항을 수신하면 확인 단계를 트리거합니다. 확인의 목적은 사람이 변경 사항을 검토 할 가치가 있는지 시스템이 결정할 수 있도록 검사를 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5dd1cfb31f7a3d6a5bf1c41c6d80bb02345beeee" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;gem_binary&lt;/code&gt; property is specified (as a hash, a string, or by a .gemrc file), Chef Infra Client will run that command to examine its environment settings and then again to install the gem.</source>
          <target state="translated">&lt;code&gt;gem_binary&lt;/code&gt; 속성이 지정 되면 (해시, 문자열 또는 .gemrc 파일로) Chef Infra Client는 해당 명령을 실행하여 환경 설정을 검사 한 다음 다시 gem을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="86d5993c53287ab5643507474bcce1111a1139b9" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;gem_binary&lt;/code&gt; property is specified (as a hash, a string, or by a .gemrc file), the chef-client will run that command to examine its environment settings and then again to install the gem.</source>
          <target state="translated">때 &lt;code&gt;gem_binary&lt;/code&gt; 속성 (해시, 문자열로, 또는 .gemrc 파일로) 지정, 요리사 - 클라이언트는 환경 설정을 검사하기 위해 해당 명령을 실행 한 후 다시 보석을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="df48ce35987285d4b00bcc761eae9f2b78059a26" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;push-jobs-client.rb&lt;/code&gt; file is present in the default location, the settings contained within that file will override the default configuration settings</source>
          <target state="translated">때 &lt;code&gt;push-jobs-client.rb&lt;/code&gt; 파일이 기본 위치에 존재하는, 설정이 기본 구성 설정을 재정의합니다 해당 파일에 포함</target>
        </trans-unit>
        <trans-unit id="5cce03894455a1d2d5f2a8d3a516da6db02e2d60" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;solo.rb&lt;/code&gt; file is present in this directory, the settings contained within that file will override the default configuration settings</source>
          <target state="translated">때 &lt;code&gt;solo.rb&lt;/code&gt; 의 파일이이 디렉토리에 존재하는, 설정이 기본 구성 설정을 재정의합니다 해당 파일에 포함</target>
        </trans-unit>
        <trans-unit id="7747c2e488084c9bb821cf18d20a3350f73cb815" translate="yes" xml:space="preserve">
          <source>When a &lt;strong&gt;cookbook_file&lt;/strong&gt; resource and a &lt;strong&gt;dnf_package&lt;/strong&gt; resource are both called from within the same recipe, use the &lt;code&gt;flush_cache&lt;/code&gt; attribute to dump the in-memory DNF cache, and then use the repository immediately to ensure that the correct package is installed:</source>
          <target state="translated">때 &lt;strong&gt;cookbook_file&lt;/strong&gt; 자원과 &lt;strong&gt;dnf_package의&lt;/strong&gt; 자원이 모두 동일한 제조법 내에서 호출되어 사용 &lt;code&gt;flush_cache&lt;/code&gt; 올바른 패키지가 설치되어 있는지 확인하기 위해 메모리 DNF 캐시를 덤프 속성을 한 다음 즉시 저장소를 사용 :</target>
        </trans-unit>
        <trans-unit id="ca1b6345220de317a4ceb944978c64e8ee6d3f8f" translate="yes" xml:space="preserve">
          <source>When a &lt;strong&gt;cookbook_file&lt;/strong&gt; resource and a &lt;strong&gt;package&lt;/strong&gt; resource are both called from within the same recipe, use the &lt;code&gt;flush_cache&lt;/code&gt; attribute to dump the in-memory Yum cache, and then use the repository immediately to ensure that the correct package is installed:</source>
          <target state="translated">때 &lt;strong&gt;cookbook_file&lt;/strong&gt; 자원과 &lt;strong&gt;패키지의&lt;/strong&gt; 자원이 모두 동일한 제조법 내에서 호출되어 사용 &lt;code&gt;flush_cache&lt;/code&gt; 올바른 패키지가 설치되어 있는지 확인하기 위해 메모리 얌 캐시를 덤프 속성을 한 다음 즉시 저장소를 사용 :</target>
        </trans-unit>
        <trans-unit id="eb76d8b83ee8ddfb5219601e5d85d4727cc7ac28" translate="yes" xml:space="preserve">
          <source>When a &lt;strong&gt;cookbook_file&lt;/strong&gt; resource and a &lt;strong&gt;yum_package&lt;/strong&gt; resource are both called from within the same recipe, use the &lt;code&gt;flush_cache&lt;/code&gt; attribute to dump the in-memory Yum cache, and then use the repository immediately to ensure that the correct package is installed:</source>
          <target state="translated">때 &lt;strong&gt;cookbook_file&lt;/strong&gt; 자원과 &lt;strong&gt;yum_package&lt;/strong&gt; 자원이 모두 동일한 제조법 내에서 호출되어 사용 &lt;code&gt;flush_cache&lt;/code&gt; 올바른 패키지가 설치되어 있는지 확인하기 위해 메모리 얌 캐시를 덤프 속성을 한 다음 즉시 저장소를 사용 :</target>
        </trans-unit>
        <trans-unit id="26046a18e263878b761ff33d13474a866ee062fa" translate="yes" xml:space="preserve">
          <source>When a Chef InSpec report or a Chef Infra Client run is ingested, a node is added to the &lt;code&gt;/nodes&lt;/code&gt; endpoint. If the node already exists, its last contact time, run data, and scan data are updated. When run data and scan data are updated, the latest information is stored for the run id or report id, the status, and the penultimate status.</source>
          <target state="translated">Chef InSpec 보고서 또는 Chef Infra Client 실행이 수집되면 노드가 &lt;code&gt;/nodes&lt;/code&gt; 엔드 포인트에 추가됩니다 . 노드가 이미 존재하는 경우 마지막 접속 시간, 실행 데이터 및 스캔 데이터가 업데이트됩니다. 실행 데이터 및 스캔 데이터가 업데이트되면 실행 ID 또는 보고서 ID, 상태 및 두 번째 상태에 대한 최신 정보가 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="89d79fb3600e68f7d9abc48de22b684e0dd65572" translate="yes" xml:space="preserve">
          <source>When a Community Organizer or Project Maintainer notices someone behaving in a way that is outside of our guidelines (a violator), the Community Advocate should make every reasonable attempt to help curtail that behavior. The Community Advocate may:</source>
          <target state="translated">커뮤니티 주최자 또는 프로젝트 유지 관리자가 누군가가 우리의 지침 (위반자)을 벗어난 방식으로 행동하는 것을 발견하면 커뮤니티 옹호자는 그 행동을 줄이는 데 도움이되도록 합당한 모든 노력을 기울여야합니다. 커뮤니티 옹호자는 :</target>
        </trans-unit>
        <trans-unit id="95827eec713838de41f71032c0aca1786e48a45e" translate="yes" xml:space="preserve">
          <source>When a Microsoft Windows file path is enclosed in a double-quoted string (&quot; &amp;ldquo;), the same backslash character (&lt;code&gt;\&lt;/code&gt;) that is used to define the file path separator is also used in Ruby to define an escape character. The config.rb file is a Ruby file; therefore, file path separators must be escaped. In addition, spaces in the file path must be replaced with &lt;code&gt;~1&lt;/code&gt; so that the length of each section within the file path is not more than 8 characters. For example, if EditPad Pro is the text editor of choice and is located at the following path:</source>
          <target state="translated">Microsoft Windows 파일 경로가 큰 따옴표로 묶인 문자열 ( &quot;&quot;)로 묶인 경우 파일 경로 구분 기호를 정의하는 데 사용되는 동일한 백 슬래시 문자 ( &lt;code&gt;\&lt;/code&gt; )가 Ruby에서도 이스케이프 문자를 정의하는 데 사용됩니다. file은 Ruby 파일이므로 파일 경로 구분 기호를 이스케이프해야합니다. 또한 파일 경로 내의 각 섹션 길이가 8자를 넘지 않도록 파일 경로의 공백을 &lt;code&gt;~1&lt;/code&gt; 로 바꿔야 합니다. 예를 들어, EditPad Pro가 선택한 텍스트 편집기이고 다음 경로에있는 경우 :</target>
        </trans-unit>
        <trans-unit id="5b5897ca25677ccb6baffd3b4590086fa3765ea2" translate="yes" xml:space="preserve">
          <source>When a Microsoft Windows file path is enclosed in a double-quoted string (&amp;rdquo; &amp;rdquo;), the same backslash character (&lt;code&gt;\&lt;/code&gt;) that is used to define the file path separator is also used in Ruby to define an escape character. The knife.rb file is a Ruby file; therefore, file path separators must be escaped. In addition, spaces in the file path must be replaced with &lt;code&gt;~1&lt;/code&gt; so that the length of each section within the file path is not more than 8 characters. For example, if EditPad Pro is the text editor of choice and is located at the following path:</source>
          <target state="translated">Microsoft Windows 파일 경로가 큰 따옴표로 묶인 문자열 ( &quot;&quot;)로 묶인 경우 파일 경로 구분 기호를 정의하는 데 사용되는 동일한 백 슬래시 문자 ( &lt;code&gt;\&lt;/code&gt; )가 Ruby에서 이스케이프 문자를 정의하는 데 사용됩니다. knife.rb 파일은 Ruby 파일입니다. 따라서 파일 경로 구분 기호를 이스케이프해야합니다. 또한 파일 경로의 공백은 &lt;code&gt;~1&lt;/code&gt; 로 바꿔 파일 경로 내의 각 섹션 길이가 8자를 넘지 않아야합니다. 예를 들어, EditPad Pro가 선택한 텍스트 편집기이고 다음 경로에있는 경우 :</target>
        </trans-unit>
        <trans-unit id="6e6829dd14066e2ebf4bde8eec4e317d9ff63159" translate="yes" xml:space="preserve">
          <source>When a Supervisor is instructed to act as a permanent peer, the other Supervisors will attempt to connect with the permanent peer and achieve quorum even if the permanent peer is confirmed to be dead.</source>
          <target state="translated">감독자가 영구 피어 역할을하도록 지시를 받으면 다른 감독자는 영구 피어가 죽은 것으로 확인 되더라도 영구 피어와 연결하여 쿼럼을 달성하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="62e5eec281474299c1ed86ce6ec528874741e33f" translate="yes" xml:space="preserve">
          <source>When a Supervisor sends the PING, ACK and PINGREQ messages, it includes information about the 5 most recent members. This enables membership to be gossiped through the failure protocol itself.</source>
          <target state="translated">감독자가 PING, ACK 및 PINGREQ 메시지를 보낼 때 가장 최근 5 명의 구성원에 대한 정보가 포함됩니다. 이를 통해 실패 프로토콜 자체를 통해 멤버십을 험담 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5880a2075706b94d8d3c7cf1b2849ef8362354e" translate="yes" xml:space="preserve">
          <source>When a allowlist is defined, any attribute of that type that is not specified in that attribute allowlist &lt;strong&gt;will not&lt;/strong&gt; be saved. So based on the previous allowlist for automatic attributes, the &lt;code&gt;filesystem&lt;/code&gt; and &lt;code&gt;map - autohome&lt;/code&gt; attributes will not be saved, but the &lt;code&gt;network&lt;/code&gt; attributes will.</source>
          <target state="translated">허용 목록이 정의되면 해당 속성 허용 목록에 지정되지 않은 해당 유형의 속성은 저장 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 따라서 자동 속성에 대한 이전 허용 목록을 기반으로 &lt;code&gt;filesystem&lt;/code&gt; 및 &lt;code&gt;map - autohome&lt;/code&gt; 속성은 저장되지 않지만 &lt;code&gt;network&lt;/code&gt; 속성은 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="87fb88e8c83f727f479e7bb3e1f813239588dc07" translate="yes" xml:space="preserve">
          <source>When a blocklist is defined, any attribute of that type that is not specified in that attribute blocklist &lt;strong&gt;will&lt;/strong&gt; be saved. So based on the previous blocklist for automatic attributes, the &lt;code&gt;filesystem&lt;/code&gt; and &lt;code&gt;map - autohome&lt;/code&gt; attributes will not be saved, but the &lt;code&gt;network&lt;/code&gt; attributes will.</source>
          <target state="translated">차단 목록이 정의되면, 그 속성 차단 목록에 지정되지 않은 해당 유형의 속성이 &lt;strong&gt;됩니다&lt;/strong&gt; 저장. 따라서 자동 속성에 대한 이전 차단 목록을 기반으로 &lt;code&gt;filesystem&lt;/code&gt; 및 &lt;code&gt;map - autohome&lt;/code&gt; 속성은 저장되지 않지만 &lt;code&gt;network&lt;/code&gt; 속성은 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="ebb898754e62ca6734f213f4f2767ac9a6486597" translate="yes" xml:space="preserve">
          <source>When a change is approved, Chef Automate merges the change into the pipeline&amp;rsquo;s target branch and triggers the Build stage. The Build stage repeats the lint, syntax, and unit phases from the Verify stage. This is because the target branch may have moved ahead since the Verify stage ran on this change (this occurs if there are multiple open changes on a project and another change is approved before yours).</source>
          <target state="translated">변경이 승인되면 Chef Automate는 변경 사항을 파이프 라인의 대상 분기에 병합하고 Build 단계를 트리거합니다. Build 단계는 Verify 단계의 Lint, 구문 및 단위 단계를 반복합니다. 이는 검증 단계가이 변경에 대해 실행 되었기 때문에 대상 분기가 앞으로 이동했을 수 있기 때문입니다 (프로젝트에 열린 변경이 여러 개 있고 다른 변경이 사용자보다 먼저 승인 된 경우 발생 함).</target>
        </trans-unit>
        <trans-unit id="a05cb65a602085e13bfdff7e7decc113c2b18e11" translate="yes" xml:space="preserve">
          <source>When a change is approved, Workflow merges the change into the pipeline&amp;rsquo;s target branch and triggers the Build stage. The Build stage repeats the lint, syntax, and unit phases from the Verify stage. This is because the target branch may have moved ahead since the Verify stage ran on this change (this occurs if there are multiple open changes on a project and another change is approved before yours).</source>
          <target state="translated">변경이 승인되면 Workflow는 변경 사항을 파이프 라인의 대상 분기에 병합하고 빌드 단계를 트리거합니다. Build 단계는 Verify 단계의 Lint, 구문 및 단위 단계를 반복합니다. 이는 검증 단계가이 변경에 대해 실행 되었기 때문에 대상 분기가 앞으로 이동했을 수 있기 때문입니다 (프로젝트에 열린 변경이 여러 개 있고 다른 변경이 사용자보다 먼저 승인 된 경우 발생 함).</target>
        </trans-unit>
        <trans-unit id="e6cc0a7ef956083102d2fd4b8b41145ea33b31b0" translate="yes" xml:space="preserve">
          <source>When a change to a project is submitted to Chef Automate, the &lt;code&gt;provision.rb&lt;/code&gt; does the work of promoting the project to the various nodes in the Chef Automate pipeline.</source>
          <target state="translated">프로젝트 변경 사항이 Chef Automate에 제출되면 &lt;code&gt;provision.rb&lt;/code&gt; 는 프로젝트를 Chef Automate 파이프 라인의 다양한 노드로 승격하는 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="8a6a899089bb1c6d063d2252d03b8f8a2353c732" translate="yes" xml:space="preserve">
          <source>When a change to a project is submitted to Chef Automate, the &lt;strong&gt;provision.rb&lt;/strong&gt; does the work of promoting the project to the various nodes in the Chef Automate pipeline.</source>
          <target state="translated">프로젝트 변경 사항이 Chef Automate에 제출되면 &lt;strong&gt;provision.rb&lt;/strong&gt; 는 프로젝트를 Chef Automate 파이프 라인의 다양한 노드로 승격하는 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="41e1bd9bb5d0024df38e7681013cbe4e472da052" translate="yes" xml:space="preserve">
          <source>When a class is an external class (and therefore should not have &lt;code&gt;Ohai::&lt;/code&gt; prepended), use &lt;code&gt;::&lt;/code&gt; to let the Ohai know. For example:</source>
          <target state="translated">클래스가 외부 클래스 (따라서 &lt;code&gt;Ohai::&lt;/code&gt; 추가 되지 않아야 함 ) 인 경우 &lt;code&gt;::&lt;/code&gt; 를 사용 하여 Ohai에게 알립니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="54fc32f23545bb2e882e0655d0cecf10072a2194" translate="yes" xml:space="preserve">
          <source>When a client.rb file is present in the default location, the settings contained within that client.rb file will override the default configuration settings</source>
          <target state="translated">client.rb 파일이 기본 위치에 있으면 해당 client.rb 파일에 포함 된 설정이 기본 구성 설정보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="e0269d022e39e5f9781642bc64f8bb7df523390a" translate="yes" xml:space="preserve">
          <source>When a control is included, it can also be modified!</source>
          <target state="translated">컨트롤이 포함되어 있으면 수정할 수도 있습니다!</target>
        </trans-unit>
        <trans-unit id="ae31edde80ea5783aa58331bc396b764f47028f5" translate="yes" xml:space="preserve">
          <source>When a cookbook is uploaded, only files that are new or updated will be included. This approach minimizes the amount of storage and time that is required during the modify-upload-test cycle. To keep track of which files have already been uploaded, Chef Infra Client uses a checksum and assigns a checksum to each file. These checksums are used in the cookbook version manifest, alongside the same records that store the file description (name, specificity, and so on), as well as the checksum and the URL from which the file&amp;rsquo;s contents can be retrieved.</source>
          <target state="translated">요리 책이 업로드되면 새 파일 또는 업데이트 된 파일 만 포함됩니다. 이 접근 방식은 수정-업로드-테스트주기 동안 필요한 스토리지 양과 시간을 최소화합니다. 이미 업로드 된 파일을 추적하기 위해 Chef Infra Client는 체크섬을 사용하고 각 파일에 체크섬을 할당합니다. 이러한 체크섬은 파일 설명 (이름, 특이성 등)은 물론 파일 콘텐츠를 검색 할 수있는 URL 및 체크섬을 저장하는 동일한 레코드와 함께 요리 책 버전 매니페스트에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e06cf18148170cad9892d48eb9fdac5df4f751c6" translate="yes" xml:space="preserve">
          <source>When a cookbook is uploaded, only files that are new or updated will be included. This approach minimizes the amount of storage and time that is required during the modify-upload-test cycle. To keep track of which files have already been uploaded, the chef-client uses a checksum and assigns a checksum to each file. These checksums are used in the cookbook version manifest, alongside the same records that store the file description (name, specificity, and so on), as well as the checksum and the URL from which the file&amp;rsquo;s contents can be retrieved.</source>
          <target state="translated">요리 책을 업로드하면 새 파일이나 업데이트 된 파일 만 포함됩니다. 이 접근 방식은 수정 업로드 테스트주기 동안 필요한 스토리지 및 시간을 최소화합니다. 어떤 파일이 이미 업로드되었는지 추적하기 위해 요리사 클라이언트는 체크섬을 사용하고 각 파일에 체크섬을 할당합니다. 이 체크섬은 파일 설명 (이름, 특정 등)을 저장하는 동일한 레코드와 함께 파일 내용을 검색 할 수있는 체크섬 및 URL과 함께 요리 책 버전 매니페스트에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9aa7deaed3e90874e193b7aefdb1014380063cb4" translate="yes" xml:space="preserve">
          <source>When a default attribute is set like this:</source>
          <target state="translated">기본 속성이 다음과 같이 설정된 경우 :</target>
        </trans-unit>
        <trans-unit id="9ed9f8609cf5b2aef0fb1c7654ab1cc0cfa56784" translate="yes" xml:space="preserve">
          <source>When a node starts to sync from a leader, Leaderl will write the following file to disk:</source>
          <target state="translated">노드가 리더에서 동기화를 시작하면 Leaderl은 다음 파일을 디스크에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="fc666abdfdad5e7a8d5bd4f9356724646969d407" translate="yes" xml:space="preserve">
          <source>When a package is updated, after the &lt;code&gt;init&lt;/code&gt; hook has been called.</source>
          <target state="translated">패키지가 업데이트 될 때 &lt;code&gt;init&lt;/code&gt; 후크가 호출 된 후.</target>
        </trans-unit>
        <trans-unit id="d33462f7e94d76f3c74e85bd1aa54723df52824b" translate="yes" xml:space="preserve">
          <source>When a plugin is disabled, the Chef Infra Client log file will contain entries similar to:</source>
          <target state="translated">플러그인이 비활성화되면 Chef Infra Client 로그 파일에 다음과 유사한 항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1a5e2a19f2cfb12f3b820078845ad0799d634a8e" translate="yes" xml:space="preserve">
          <source>When a plugin is disabled, the chef-client log file will contain entries similar to:</source>
          <target state="translated">플러그인이 비활성화되면 chef-client 로그 파일에 다음과 유사한 항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="046256bbe2c1d180fc7d118dffaee100435f58e9" translate="yes" xml:space="preserve">
          <source>When a project is created, three policies that control access to that project are also created. Those policies include: &lt;em&gt;Project Owner&lt;/em&gt;, &lt;em&gt;Project Editor&lt;/em&gt;, and &lt;em&gt;Project Viewer&lt;/em&gt;. Adding members to these policies will grant them access to the project.</source>
          <target state="translated">프로젝트가 생성되면 해당 프로젝트에 대한 액세스를 제어하는 ​​세 가지 정책도 생성됩니다. 이러한 정책에는 &lt;em&gt;프로젝트 소유자&lt;/em&gt; , &lt;em&gt;프로젝트 편집자&lt;/em&gt; 및 &lt;em&gt;프로젝트 뷰어가 포함&lt;/em&gt; 됩니다. 이러한 정책에 구성원을 추가하면 프로젝트에 대한 액세스 권한이 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="777782816d9b54a3b9127a8887948ab95ddd0f70" translate="yes" xml:space="preserve">
          <source>When a remediation action takes place, it works by executing a bash script found the remediation for each control. The script resets the failed setting by changing it to the CIS control specification. For example, if CIS requires the &lt;code&gt;AIDE&lt;/code&gt; package, then the remediation step installs the package.</source>
          <target state="translated">교정 조치가 발생하면 bash 스크립트를 실행하여 각 제어에 대한 교정을 찾았습니다. 스크립트는 CIS 제어 사양으로 변경하여 실패한 설정을 재설정합니다. 예를 들어 CIS에 &lt;code&gt;AIDE&lt;/code&gt; 패키지 가 필요한 경우 수정 단계에서 패키지를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="fb22a3c1d26d6c200f70e219efef29b59518aba7" translate="yes" xml:space="preserve">
          <source>When a service group starts in a leader topology, it will wait until there are sufficient members to form a quorum (at least three). At this point, an election cycle can happen. Each Supervisor injects an election rumor into ring, targeted at the service group, with the &lt;em&gt;exact same&lt;/em&gt; rumor, which demands an election and insists that the peer itself is the leader. This algorithm is known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Bully_algorithm&quot;&gt;Bully&lt;/a&gt;.</source>
          <target state="translated">서비스 그룹이 리더 토폴로지에서 시작되면 쿼럼을 형성하기에 충분한 구성원 (최소 3 개)이있을 때까지 대기합니다. 이 시점에서 선거주기가 발생할 수 있습니다. 각 감독자는 서비스 그룹을 겨냥한 선거 루머를 링에 주입합니다.이 루머는 &lt;em&gt;똑같은&lt;/em&gt; 루머로 선거를 요구하고 피어 자체가 리더라고 주장합니다. 이 알고리즘을 &lt;a href=&quot;https://en.wikipedia.org/wiki/Bully_algorithm&quot;&gt;Bully라고&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a095628f7422f1eb0dbd7a2ae3887478f79f7826" translate="yes" xml:space="preserve">
          <source>When a template is rendered, Ruby expressions and statements are evaluated by Chef Infra Client. The variables listed in the &lt;strong&gt;template&lt;/strong&gt; resource&amp;rsquo;s &lt;code&gt;variables&lt;/code&gt; parameter and in the node object are evaluated. Chef Infra Client then passes these variables to the template, where they will be accessible as instance variables within the template. The node object can be accessed just as if it were part of a recipe, using the same syntax.</source>
          <target state="translated">템플릿이 렌더링 될 때 Ruby 표현식과 문은 Chef Infra Client에서 평가됩니다. &lt;strong&gt;템플릿&lt;/strong&gt; 리소스의 &lt;code&gt;variables&lt;/code&gt; 매개 변수 및 노드 개체에 나열된 변수 가 평가됩니다. 그런 다음 Chef Infra Client는 이러한 변수를 템플릿에 전달하여 템플릿 내에서 인스턴스 변수로 액세스 할 수 있습니다. 동일한 구문을 사용하여 마치 레시피의 일부인 것처럼 노드 개체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3e640b2f6e6329a57aa68901cf10040cfeef38d" translate="yes" xml:space="preserve">
          <source>When a template is rendered, Ruby expressions and statements are evaluated by the chef-client. The variables listed in the &lt;strong&gt;template&lt;/strong&gt; resource&amp;rsquo;s &lt;code&gt;variables&lt;/code&gt; parameter and in the node object are evaluated. The chef-client then passes these variables to the template, where they will be accessible as instance variables within the template. The node object can be accessed just as if it were part of a recipe, using the same syntax.</source>
          <target state="translated">템플릿이 렌더링 될 때, 루비 표현과 문장은 chef-client에 의해 평가됩니다. &lt;strong&gt;템플리트&lt;/strong&gt; 자원의 &lt;code&gt;variables&lt;/code&gt; 매개 변수 및 노드 오브젝트에 나열된 변수 가 평가됩니다. 그런 다음 요리사-클라이언트는 이러한 변수를 템플릿에 전달하면 템플릿 내에서 인스턴스 변수로 액세스 할 수 있습니다. 노드 객체는 동일한 구문을 사용하여 레시피의 일부인 것처럼 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49f03aff1ba523022f36edda8d881b34ca0dd41c" translate="yes" xml:space="preserve">
          <source>When a token is consumed (through the web UI), all issued password reset tokens for this user will be revoked.</source>
          <target state="translated">토큰이 사용되면 (웹 UI를 통해)이 사용자에 대해 발급 된 모든 비밀번호 재설정 토큰이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="df1445600c94b3dd06e1fbc74fc151fc54bd9c9f" translate="yes" xml:space="preserve">
          <source>When a user adds a node integration, like aws or azure, nodes are added to the &lt;code&gt;/nodes&lt;/code&gt; endpoint.</source>
          <target state="translated">사용자가 aws 또는 azure와 같은 노드 통합을 추가하면 노드가 &lt;code&gt;/nodes&lt;/code&gt; 엔드 포인트에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="482bbb31c868f528d18cf1d8f6ead99af26cc38e" translate="yes" xml:space="preserve">
          <source>When a user creates a node, that node is added to the &lt;code&gt;/nodes&lt;/code&gt; endpoint.</source>
          <target state="translated">사용자가 노드를 만들면 해당 노드가 &lt;code&gt;/nodes&lt;/code&gt; 엔드 포인트에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="696d8ae6b406694c1cd229e1c5d9b251ce6a6028" translate="yes" xml:space="preserve">
          <source>When a user enters &lt;code&gt;knife --help&lt;/code&gt;, the description attributes are displayed as part of the help. Using the previous examples, something like the following will be displayed:</source>
          <target state="translated">사용자가 &lt;code&gt;knife --help&lt;/code&gt; 를 입력 하면 설명 속성이 도움말의 일부로 표시됩니다. 이전 예제를 사용하면 다음과 같은 내용이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b6836465c577b6b6078e8e5dc19602e71b2c919a" translate="yes" xml:space="preserve">
          <source>When a user makes a request to the Chef Infra Server using the Chef Infra Server API, permission to perform that action is determined by the following process:</source>
          <target state="translated">사용자가 Chef Infra Server API를 사용하여 Chef Infra Server에 요청하면 해당 작업을 수행 할 수있는 권한은 다음 프로세스에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="4f88ee6242a8b3eebcc2d9131256fe1f0da166c2" translate="yes" xml:space="preserve">
          <source>When a user makes a request to the Chef server using the Chef server API, permission to perform that action is determined by the following process:</source>
          <target state="translated">사용자가 Chef 서버 API를 사용하여 Chef 서버에 요청하면 해당 작업을 수행 할 수있는 권한은 다음 프로세스에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="274d8a8e1fdb5c46efb40ec584d9ce2e350b4c65" translate="yes" xml:space="preserve">
          <source>When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist &lt;strong&gt;will not&lt;/strong&gt; be saved. So based on the previous whitelist for normal attributes, the &lt;code&gt;filesystem&lt;/code&gt; and &lt;code&gt;map - autohome&lt;/code&gt; attributes will not be saved, but the &lt;code&gt;network&lt;/code&gt; attributes will.</source>
          <target state="translated">허용 목록이 정의되면 해당 속성 허용 목록에 지정되지 않은 해당 유형의 속성은 저장 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 따라서 일반 속성에 대한 이전 화이트리스트를 기반으로 &lt;code&gt;filesystem&lt;/code&gt; 및 &lt;code&gt;map - autohome&lt;/code&gt; 속성은 저장되지 않지만 &lt;code&gt;network&lt;/code&gt; 속성은 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="626760b88fbb1a26d6bdcfcf7b0c25f8a9c0c4d7" translate="yes" xml:space="preserve">
          <source>When all of the actions identified by resources in the resource collection have been done and Chef Infra Client finishes successfully, then Chef Infra Client updates the node object on the Chef Infra Server with the node object built during a Chef Infra Client run. (This node object will be pulled down by Chef Infra Client during the next Chef Infra Client run.) This makes the node object (and the data in the node object) available for search.</source>
          <target state="translated">리소스 컬렉션의 리소스로 식별 된 모든 작업이 완료되고 Chef Infra Client가 성공적으로 완료되면 Chef Infra Client는 Chef Infra Client 실행 중에 빌드 된 노드 개체로 Chef Infra Server의 노드 개체를 업데이트합니다. (이 노드 개체는 다음 Chef Infra 클라이언트 실행 중에 Chef Infra 클라이언트에 의해 풀다운됩니다.) 이렇게하면 노드 개체 (및 노드 개체의 데이터)를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1dc8206fe79d6aed5d38a31812891fd1100ad28" translate="yes" xml:space="preserve">
          <source>When all of the actions identified by resources in the resource collection have been done, and when the chef-client run finished successfully, the chef-client updates the node object on the Chef server with the node object that was built during this chef-client run. (This node object will be pulled down by the chef-client during the next chef-client run.) This makes the node object (and the data in the node object) available for search.</source>
          <target state="translated">자원 콜렉션에서 자원으로 식별 된 모든 조치가 완료되고 chef-client 실행이 성공적으로 완료되면 chef-client는이 chef-client 동안 빌드 된 노드 오브젝트로 Chef 서버의 노드 오브젝트를 업데이트합니다. 운영. (이 다음 chef-client 실행 중에 chef-client가이 노드 오브젝트를 풀다운합니다.) 그러면 노드 오브젝트 (및 노드 오브젝트의 데이터)를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c4f2684c6939e8cce82014be593fcfd4aab1658" translate="yes" xml:space="preserve">
          <source>When an artifact is in Union, Chef Automate ensures that any projects that depend on it can only pass their own Acceptance stages by proving their compatibility with that artifact. Chef Automate does this by pinning the versions of the dependencies to the version of the artifact in Union. In this way, Chef Automate forces projects to consume updates to their dependencies as early as possible and prevents them from shipping before proving that they are compatible with the latest version.</source>
          <target state="translated">아티팩트가 Union에있을 때 Chef Automate는 이에 의존하는 모든 프로젝트가 해당 아티팩트와의 호환성을 입증하여 자체 승인 단계 만 통과 할 수 있도록합니다. Chef Automate는 종속성 버전을 Union의 아티팩트 버전에 고정하여이를 수행합니다. 이러한 방식으로 Chef Automate는 프로젝트가 가능한 한 빨리 종속성에 대한 업데이트를 사용하도록 강제하고 최신 버전과의 호환성을 입증하기 전에 배송되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="171daae5f33ef36be6e0536f44ab9cb3e201176e" translate="yes" xml:space="preserve">
          <source>When an artifact is in Union, Workflow ensures that any projects that depend on it can only pass their own Acceptance stages by proving their compatibility with that artifact. Workflow does this by pinning the versions of the dependencies to the version of the artifact in Union. In this way, Workflow forces projects to consume updates to their dependencies as early as possible and prevents them from shipping before proving that they are compatible with the latest version.</source>
          <target state="translated">아티팩트가 Union에있는 경우 Workflow는 해당 아티팩트와의 호환성을 입증하여 이에 의존하는 모든 프로젝트가 자체 승인 단계 만 통과 할 수 있도록합니다. 워크 플로는 종속성 버전을 Union의 아티팩트 버전에 고정하여이를 수행합니다. 이러한 방식으로 워크 플로는 프로젝트가 가능한 한 빨리 종속성에 대한 업데이트를 사용하도록 강제하고 최신 버전과의 호환성을 입증하기 전에 배포되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="cdfbb3cc43a927bf9f4ecc93c6c14da2726f8503" translate="yes" xml:space="preserve">
          <source>When an environment is deleted, it will remain within a run-list for a role until it is removed from that run-list. If a new environment is created that has an identical name to an environment that was deleted, a run-list that contains an old environment name will use the new one.</source>
          <target state="translated">환경이 삭제되면 해당 실행 목록에서 제거 될 때까지 역할에 대한 실행 목록 내에 유지됩니다. 삭제 된 환경과 동일한 이름을 가진 새 환경이 생성되면 이전 환경 이름이 포함 된 실행 목록이 새 환경을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b40616c78b8413404a5d0278e33082eccf7e1920" translate="yes" xml:space="preserve">
          <source>When an override attribute is set like this:</source>
          <target state="translated">재정의 속성이 다음과 같이 설정된 경우 :</target>
        </trans-unit>
        <trans-unit id="d057851ad80d85db0517d375cc3b6723e0c443bc" translate="yes" xml:space="preserve">
          <source>When attribute allowlist settings are used, only the attributes defined in a allowlist will be saved and any attribute that is not defined in a allowlist will not be saved. Each attribute type is allowlisted independently of the other attribute types. For example, if &lt;code&gt;automatic_attribute_allowlist&lt;/code&gt; defines attributes to be saved, but &lt;code&gt;normal_attribute_allowlist&lt;/code&gt;, &lt;code&gt;default_attribute_allowlist&lt;/code&gt;, and &lt;code&gt;override_attribute_allowlist&lt;/code&gt; are not defined, then all normal attributes, default attributes, and override attributes are saved, as well as the automatic attributes that were specifically included through allowlisting.</source>
          <target state="translated">속성 허용 목록 설정을 사용하면 허용 목록에 정의 된 속성 만 저장되고 허용 목록에 정의되지 않은 속성은 저장되지 않습니다. 각 속성 유형은 다른 속성 유형과 독립적으로 허용 목록에 포함됩니다. 예를 들어 &lt;code&gt;automatic_attribute_allowlist&lt;/code&gt; 는 저장할 속성을 정의하지만 &lt;code&gt;normal_attribute_allowlist&lt;/code&gt; , &lt;code&gt;default_attribute_allowlist&lt;/code&gt; 및 &lt;code&gt;override_attribute_allowlist&lt;/code&gt; 가 정의되어 있지 않은 경우 모든 일반 속성, 기본 속성 및 재정의 속성은 물론 허용 목록을 통해 특별히 포함 된 자동 속성도 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="a2d89c54a03a252b27421598f26e6a60706995dc" translate="yes" xml:space="preserve">
          <source>When attribute blocklist settings are used, any attribute defined in a blocklist will not be saved to the Chef Infra Server and any attribute that is not defined in a blocklist will be saved. Each attribute type must be blocklisted independently of the other attribute types. For example, if &lt;code&gt;blocked_automatic_attributes&lt;/code&gt; defines attributes that will not be saved, but &lt;code&gt;blocked_normal_attributes&lt;/code&gt;, &lt;code&gt;blocked_default_attributes&lt;/code&gt;, and &lt;code&gt;blocked_override_attributes&lt;/code&gt; are not defined, then all normal attributes, default attributes, and override attributes will be saved, as well as the automatic attributes that were not specifically excluded through blocklisting.</source>
          <target state="translated">속성 차단 목록 설정을 사용하면 차단 목록에 정의 된 모든 속성이 Chef Infra Server에 저장되지 않고 차단 목록에 정의되지 않은 속성이 저장됩니다. 각 속성 유형은 다른 속성 유형과 독립적으로 차단 목록에 있어야합니다. 예를 들어, &lt;code&gt;blocked_automatic_attributes&lt;/code&gt; 가 저장되지 않을 속성을 정의하지만 &lt;code&gt;blocked_normal_attributes&lt;/code&gt; , &lt;code&gt;blocked_default_attributes&lt;/code&gt; 및 &lt;code&gt;blocked_override_attributes&lt;/code&gt; 가 정의되지 않은 경우 모든 일반 속성, 기본 속성 및 재정의 속성은 물론 특별히 제외되지 않은 자동 속성도 저장됩니다. 차단 목록을 통해.</target>
        </trans-unit>
        <trans-unit id="5560ad3ddcc9843cf1a14f18512e2c4effe24a64" translate="yes" xml:space="preserve">
          <source>When backing up Chef server data, be sure that the system is shut down (or otherwise quiet) at the time of the backup. Perform all activities as root unless otherwise directed.</source>
          <target state="translated">Chef 서버 데이터를 백업 할 때 백업시 시스템이 종료되었는지 확인하십시오. 별도의 지시가없는 한 모든 활동을 루트로 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="baae88b56b534f49dd4f69f95973438676fff6d6" translate="yes" xml:space="preserve">
          <source>When block-method syntax is used with the filter statement, you provide a block. The block may contain arbitrary code, and each filter criteria will be available as an accessor. The block will be evaluated once per row, and each block that evaluates to a truthy value will pass the filter.</source>
          <target state="translated">block-method 구문을 filter 문과 함께 사용하면 블록을 제공합니다. 블록은 임의의 코드를 포함 할 수 있으며 각 필터 기준은 접근 자로 사용할 수 있습니다. 블록은 행당 한 번 평가되고 진실 값으로 평가되는 각 블록은 필터를 통과합니다.</target>
        </trans-unit>
        <trans-unit id="7122ad012c71e5f78ae5ae6285b11c6ef9aa8532" translate="yes" xml:space="preserve">
          <source>When both the primary and secondary nodes are running and behaving as expected, the contents of &lt;code&gt;/proc/drbd&lt;/code&gt; on the primary node will look similar to the following:</source>
          <target state="translated">기본 및 보조 노드가 모두 실행 중이고 예상대로 작동하는 경우 기본 노드 의 &lt;code&gt;/proc/drbd&lt;/code&gt; 내용 은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="d40380f7410f50f107827108a6d737f4bfe09da3" translate="yes" xml:space="preserve">
          <source>When building binary packages, you override the behavior of phases that do not apply to you. At the very minimum, you must override the &lt;code&gt;do_build&lt;/code&gt; and &lt;code&gt;do_install&lt;/code&gt; phases, for example:</source>
          <target state="translated">바이너리 패키지를 빌드 할 때 적용되지 않는 단계의 동작을 재정의합니다. 최소한 &lt;code&gt;do_build&lt;/code&gt; 및 &lt;code&gt;do_install&lt;/code&gt; 단계를 재정의해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d98b332dc774f7c0bfe972ddc442cf05b2724008" translate="yes" xml:space="preserve">
          <source>When changes are made to the &lt;code&gt;delivery.rb&lt;/code&gt; file the Chef Automate server must be reconfigured by running the following command:</source>
          <target state="translated">&lt;code&gt;delivery.rb&lt;/code&gt; 파일이 변경되면 다음 명령을 실행하여 Chef Automate 서버를 재구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="136caee20faa13c2ecc10c180d1260cc6602ec39" translate="yes" xml:space="preserve">
          <source>When changes are made to the chef-server.rb file the Chef Infra Server must be reconfigured by running the following command:</source>
          <target state="translated">chef-server.rb 파일이 변경되면 다음 명령을 실행하여 Chef Infra Server를 재구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="455e11e3231043056ca042548a352507ab146542" translate="yes" xml:space="preserve">
          <source>When changes are made to the chef-server.rb file the Chef server must be reconfigured by running the following command:</source>
          <target state="translated">chef-server.rb 파일이 변경되면 다음 명령을 실행하여 Chef 서버를 다시 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="6838f7eaa11197907d81b63027bb6b3cee0871b2" translate="yes" xml:space="preserve">
          <source>When chef-shell is configured to access a Chef Infra Server, chef-shell can list, show, search for and edit cookbooks, clients, nodes, roles, environments, policyfiles, and data bags.</source>
          <target state="translated">Chef Infra Server에 액세스하도록 chef-shell을 구성하면 chef-shell은 쿡북, 클라이언트, 노드, 역할, 환경, 정책 파일 및 데이터 백을 나열, 표시, 검색 및 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb97f8aa25fc7fa40fb8d3d029c5f81a62242f47" translate="yes" xml:space="preserve">
          <source>When chef-shell is configured to access a Chef server, chef-shell can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags.</source>
          <target state="translated">chef-shell이 ​​Chef 서버에 액세스하도록 구성된 경우 chef-shell은 요리 책, 클라이언트, 노드, 역할, 환경 및 데이터 백을 나열, 표시, 검색 및 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f51f7b09a49abb35a4a9bd027a110e0a3fa9f970" translate="yes" xml:space="preserve">
          <source>When chef-shell is started using a named configuration as an argument, chef-shell will search for a chef-shell.rb file in that directory under &lt;code&gt;~/.chef&lt;/code&gt;. For example, if chef-shell is started using &lt;code&gt;production&lt;/code&gt; as the named configuration, the chef-shell will load a configuration file from &lt;code&gt;~/.chef/production/chef_shell.rb&lt;/code&gt;</source>
          <target state="translated">이름이 지정된 구성을 인수로 사용하여 chef-shell을 시작하면 chef-shell은 해당 디렉토리에서 &lt;code&gt;~/.chef&lt;/code&gt; 아래에 chef-shell.rb 파일을 검색합니다 . 예를 들어, 이름 지정된 구성으로 &lt;code&gt;production&lt;/code&gt; 을 사용하여 chef-shell을 시작하면 chef-shell은 &lt;code&gt;~/.chef/production/chef_shell.rb&lt;/code&gt; 에서 구성 파일을로드합니다.</target>
        </trans-unit>
        <trans-unit id="d2530e9fffb3bd69e20baf4fa7b8107a762a7204" translate="yes" xml:space="preserve">
          <source>When converging a target node &lt;code&gt;chef-run&lt;/code&gt; creates a policyfile bundle that includes the cookbook specified. If the cookbook you specified has its own &lt;a href=&quot;../../config_rb_policyfile/index&quot;&gt;&lt;code&gt;Policyfile.rb&lt;/code&gt;&lt;/a&gt; that will be respected.</source>
          <target state="translated">대상 노드를 수렴 할 때 &lt;code&gt;chef-run&lt;/code&gt; 은 지정된 요리 책을 포함하는 정책 파일 번들을 생성합니다. 지정한 &lt;a href=&quot;../../config_rb_policyfile/index&quot;&gt; &lt;code&gt;Policyfile.rb&lt;/code&gt; &lt;/a&gt; 에 존중 될 자체 Policyfile.rb 가있는 경우.</target>
        </trans-unit>
        <trans-unit id="3909e52c3189a207799970fd25951971c4689c57" translate="yes" xml:space="preserve">
          <source>When creating a key, this value specifies that the required keys for the specified path are to be created. When using the &lt;code&gt;:delete_key&lt;/code&gt; action in a recipe, and if the registry key has subkeys, then set the value for this property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">키를 작성할 때이 값은 지정된 경로에 필요한 키를 작성하도록 지정합니다. 레시피에서 &lt;code&gt;:delete_key&lt;/code&gt; 조치를 사용하고 레지스트리 키에 서브 키가있는 경우이 특성의 값을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffeade044c88916dbfd6a756e2d6776165e50cc8" translate="yes" xml:space="preserve">
          <source>When creating a key, this value specifies that the required keys for the specified path are to be created. When using the &lt;code&gt;:delete_key&lt;/code&gt; action in a recipe, and if the registry key has subkeys, then set the value for this property to &lt;code&gt;true&lt;/code&gt;. The &lt;code&gt;:delete_key&lt;/code&gt; action with the &lt;code&gt;recursive&lt;/code&gt; attribute will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by Chef Infra Client.</source>
          <target state="translated">키를 생성 할 때이 값은 지정된 경로에 필요한 키가 생성되도록 지정합니다. 레시피에서 &lt;code&gt;:delete_key&lt;/code&gt; 작업을 사용하고 레지스트리 키에 하위 키가있는 경우이 속성의 값을 &lt;code&gt;true&lt;/code&gt; 로 설정 합니다 . &lt;code&gt;recursive&lt;/code&gt; 속성이 있는 &lt;code&gt;:delete_key&lt;/code&gt; 작업 은 레지스트리 키, 모든 값 및 이와 관련된 모든 이름, 유형 및 데이터를 삭제합니다. Chef Infra Client에서는 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d48a0bac57f448d475c6c5fcf3cf35f3ab442189" translate="yes" xml:space="preserve">
          <source>When creating a manually added node, use the &amp;lsquo;Environment&amp;rsquo; tag to assign an environment to the node. &lt;code&gt;Environment&lt;/code&gt; is the only supported field for project filtering on scan job results.</source>
          <target state="translated">수동으로 추가 된 노드를 만들 때 'Environment'태그를 사용하여 노드에 환경을 할당합니다. &lt;code&gt;Environment&lt;/code&gt; 은 스캔 작업 결과에서 프로젝트 필터링에 지원되는 유일한 필드입니다.</target>
        </trans-unit>
        <trans-unit id="7bd7bce95169b9be5db66cb0aab31bb0b0313255" translate="yes" xml:space="preserve">
          <source>When creating a scan job via ui, the user may select one or many managers. These managers would be the &lt;code&gt;Automate&lt;/code&gt; manager (for nodes added manually in the ui), as well as any other managers added via the integrations (such as &lt;code&gt;aws-ec2&lt;/code&gt;, or &lt;code&gt;aws-api&lt;/code&gt;). The user may then build a query based on the base manager used to limit the set of items being scanned.</source>
          <target state="translated">UI를 통해 스캔 작업을 생성 할 때 사용자는 하나 이상의 관리자를 선택할 수 있습니다. 이러한 관리자는 &lt;code&gt;Automate&lt;/code&gt; 관리자 (ui에서 수동으로 추가 된 노드의 경우)와 통합을 통해 추가 된 다른 관리자 (예 : &lt;code&gt;aws-ec2&lt;/code&gt; 또는 &lt;code&gt;aws-api&lt;/code&gt; )입니다. 그런 다음 사용자는 검색되는 항목 집합을 제한하는 데 사용되는 기본 관리자를 기반으로 쿼리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d42365a4b8c60e02e493264e62d91111db14f4b6" translate="yes" xml:space="preserve">
          <source>When creating an Azure API Node Manager, you will be required to provide:</source>
          <target state="translated">Azure API 노드 관리자를 만들 때 다음을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="534853665f81a24f841d759ead245a007a1b10dc" translate="yes" xml:space="preserve">
          <source>When creating an Azure VM Node Manager, you will be required to provide:</source>
          <target state="translated">Azure VM Node Manager를 만들 때 다음을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="148acd4498ea8d68e78b745a0b561f64e6fe4abc" translate="yes" xml:space="preserve">
          <source>When creating your user following the example in the Microsoft documentation, change -o Reader to -o Contributor, otherwise you will not be able to spin up or delete machines.</source>
          <target state="translated">Microsoft 설명서의 예제에 따라 사용자를 만들 때 -o Reader를 -o Contributor로 변경하십시오. 그렇지 않으면 컴퓨터를 가동하거나 삭제할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea9a5fb985bea71724c63dac6715e3021018f3d7" translate="yes" xml:space="preserve">
          <source>When data is committed to the Apache Solr index, all incoming updates are blocked. If the duration between updates is too short, it is possible for the rate at which updates are asked to occur to be faster than the rate at which objects can be actually committed.</source>
          <target state="translated">데이터가 Apache Solr 인덱스에 커밋되면 들어오는 모든 업데이트가 차단됩니다. 업데이트 간격이 너무 짧으면 업데이트 요청 속도가 개체를 실제로 커밋 할 수있는 속도보다 빠를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="000ef8cb9881f18153f320800a34a97368cd96d0" translate="yes" xml:space="preserve">
          <source>When debug logging is enabled, a log entry will look like the following:</source>
          <target state="translated">디버그 로깅이 활성화되면 로그 항목은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57d55bb19b70f419a82703b478e2fb144e9002c7" translate="yes" xml:space="preserve">
          <source>When defining your plan, you can override the default behavior of Chef Habitat in each build phase through a callback. To define a callback, simply create a shell function of the same name in your plan file and then write your script. If you do not want to use the default callback behavior, you must override the callback and &lt;code&gt;return 0&lt;/code&gt; in the function definition or simply provide no implementation in a &lt;code&gt;plan.ps1&lt;/code&gt;.</source>
          <target state="translated">계획을 정의 할 때 콜백을 통해 각 빌드 단계에서 Chef Habitat의 기본 동작을 재정의 할 수 있습니다. 콜백을 정의하려면 계획 파일에 동일한 이름의 셸 함수를 만든 다음 스크립트를 작성하면됩니다. 기본 콜백 동작을 사용하지 않으려면 콜백을 재정의 하고 함수 정의에서 &lt;code&gt;return 0&lt;/code&gt; 을 반환 하거나 &lt;code&gt;plan.ps1&lt;/code&gt; 에서 구현을 제공하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="284fb295bbd3ca646cc2d559dc31242045d110e7" translate="yes" xml:space="preserve">
          <source>When deploying code that is not Ruby on Rails and symbolic links to a shared folder are not wanted, use parentheses &lt;code&gt;()&lt;/code&gt; or &lt;code&gt;Hash.new&lt;/code&gt; to avoid ambiguity. For example, using parentheses:</source>
          <target state="translated">Ruby on Rails가 아닌 코드를 배포하고 공유 폴더에 대한 심볼릭 링크를 원하지 않는 경우 괄호 &lt;code&gt;()&lt;/code&gt; 또는 &lt;code&gt;Hash.new&lt;/code&gt; 를 사용하여 모호성을 피하십시오. 예를 들어 괄호를 사용하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="60866194feb37f037d32d8011f03626b797811e7" translate="yes" xml:space="preserve">
          <source>When deploying from a private repository using a data bag, use the &lt;code&gt;deploy_key&lt;/code&gt; option to ensure the private key is present:</source>
          <target state="translated">데이터 백을 사용하여 프라이빗 리포지토리에서 배포 할 때 &lt;code&gt;deploy_key&lt;/code&gt; 옵션을 사용하여 프라이빗 키가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="92e7a3c3ebef1a8c6b7faa4d15fda17ac52c21fa" translate="yes" xml:space="preserve">
          <source>When doing cloud deployments, Chef HA clusters are not meant to be geographically dispersed across multiple regions or datacenters; however, in cloud providers such as AWS, you can deploy HA clusters across multiple Availability Zones within the same region.</source>
          <target state="translated">클라우드 배포를 수행 할 때 Chef HA 클러스터는 여러 지역 또는 데이터 센터에 지리적으로 분산되어 있지 않습니다. 그러나 AWS와 같은 클라우드 공급자에서는 동일한 리전 내의 여러 가용 영역에 HA 클러스터를 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94442725cb2e557adb59cd117ce58c4d035bfcaa" translate="yes" xml:space="preserve">
          <source>When each value has more than one platform, the syntax changes to:</source>
          <target state="translated">각 값에 둘 이상의 플랫폼이 있으면 구문이 다음과 같이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="a5deea28ce8b7d54242a26ccba6406d17522a9d1" translate="yes" xml:space="preserve">
          <source>When each value only has a single platform, use the following syntax:</source>
          <target state="translated">각 값에 단일 플랫폼 만있는 경우 다음 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="493140918a80b398b22b9ed6d5762ebd0e6450e4" translate="yes" xml:space="preserve">
          <source>When edits are pending, a banner will be shown at the bottom of every page. Selecting the &lt;code&gt;Update Projects&lt;/code&gt; button on that banner will apply those changes.</source>
          <target state="translated">수정이 보류 중이면 모든 페이지 하단에 배너가 표시됩니다. 해당 배너에서 &lt;code&gt;Update Projects&lt;/code&gt; 버튼을 선택하면 해당 변경 사항이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6b66587e9510443619a11eb7fd9d4e09ec3126b" translate="yes" xml:space="preserve">
          <source>When enabled the chef-client will raise an error if it is unable to successfully POST to the data collector server. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 경우 chef-client가 데이터 콜렉터 서버에 POST 할 수없는 경우 오류를 발생시킵니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c4edbafe3816532431441ee7dfaf0aef5db666" translate="yes" xml:space="preserve">
          <source>When enabled, Chef Infra Client raises an error if it cannot successfully POST to the data collector server. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">활성화 된 경우 Chef Infra Client는 데이터 수집기 ​​서버에 성공적으로 POST 할 수없는 경우 오류를 발생시킵니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5f07bd23cb1c0dc65c981e5a76b07a8815e6078" translate="yes" xml:space="preserve">
          <source>When enabled, VMs in this subnetwork without external IP addresses can access Google APIs and services by using Private Google Access.</source>
          <target state="translated">사용 설정하면 외부 IP 주소가없는이 하위 네트워크의 VM이 비공개 Google 액세스를 사용하여 Google API 및 서비스에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ac6288b569af1b086ac714907845e538186c69e" translate="yes" xml:space="preserve">
          <source>When entering an interactive studio, a Supervisor is started for you in the background by default. To run packages inside of this Supervisor:</source>
          <target state="translated">대화 형 스튜디오에 들어가면 기본적으로 백그라운드에서 감독자가 시작됩니다. 이 Supervisor 내에서 패키지를 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="8c9c5f4b45496fba513503c1ed5c8bd092c6a89d" translate="yes" xml:space="preserve">
          <source>When everything is configured and the Chef Infra Client run is complete, Chef Infra Client stops and waits until the next time it is asked to run.</source>
          <target state="translated">모든 것이 구성되고 Chef Infra Client 실행이 완료되면 Chef Infra Client가 중지되고 다음에 실행이 요청 될 때까지 대기합니다.</target>
        </trans-unit>
        <trans-unit id="d027ca64eda87d1b7a957187a39801fb7265f658" translate="yes" xml:space="preserve">
          <source>When everything is configured and the chef-client run is complete, the chef-client stops and waits until the next time it is asked to run.</source>
          <target state="translated">모든 것이 구성되고 chef-client 실행이 완료되면 chef-client가 중지되고 다음에 실행될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="6fe0693513e4bb540be24ae53a21a478bdd23479" translate="yes" xml:space="preserve">
          <source>When executing &lt;code&gt;hab sup run&lt;/code&gt;, additional options can be passed that allow the Supervisor to communicate with other Supervisors (such as &lt;code&gt;--peer&lt;/code&gt;, &lt;code&gt;--permanent-peer&lt;/code&gt;, etc.), forming a connected network of Supervisors; this is the communication backbone that any services running on the Supervisors use to communicate with each other.</source>
          <target state="translated">&lt;code&gt;hab sup run&lt;/code&gt; 을 실행할 때 Supervisor가 다른 Supervisor (예 : &lt;code&gt;--peer&lt;/code&gt; , &lt;code&gt;--permanent-peer&lt;/code&gt; 등)와 통신하여 연결된 Supervisor 네트워크를 형성 할 수있는 추가 옵션을 전달할 수 있습니다 . 이것은 Supervisor에서 실행되는 모든 서비스가 서로 통신하는 데 사용하는 통신 백본입니다.</target>
        </trans-unit>
        <trans-unit id="cedd691b125cf8fbcfe82175ddf2b1b4805d53b0" translate="yes" xml:space="preserve">
          <source>When files are uploaded to a Chef Infra Server from a file and then edited using the Chef management console, if the file is edited and uploaded again, the changes made using the Chef management console user interface will be lost. The same is true with knife, in that if roles are created and managed using knife and then arbitrarily updated uploaded JSON data, that action will overwrite what has been done previously using knife. It is strongly recommended to keep to one process and not switch back and forth.</source>
          <target state="translated">파일에서 Chef Infra Server로 파일을 업로드 한 다음 Chef 관리 콘솔을 사용하여 편집 할 때 파일을 편집하고 다시 업로드하면 Chef 관리 콘솔 사용자 인터페이스를 사용하여 변경 한 내용이 손실됩니다. knife를 사용하여 역할을 만들고 관리 한 다음 업로드 된 JSON 데이터를 임의로 업데이트하면 해당 작업이 이전에 knife를 사용하여 수행 한 작업을 덮어 쓴다는 점에서 Knife도 마찬가지입니다. 한 프로세스 만 유지하고 앞뒤로 전환하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3591aecf2aeffb9b092f6e3f30c45914d78622a1" translate="yes" xml:space="preserve">
          <source>When finished adding the templates and building the custom resource, the cookbook directory structure should look like this:</source>
          <target state="translated">템플리트 추가 및 사용자 정의 자원 빌드가 완료되면 요리 책 디렉토리 구조는 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="6f2fbc92654bfc5c18f8768d74d1d711a698b71e" translate="yes" xml:space="preserve">
          <source>When finished creating the directory and the Embedded Ruby (ERB) template file, edit the template to run the SSH commands. Then set up the validation certificate and the client configuration file.</source>
          <target state="translated">디렉토리 및 EBB (Embedded Ruby) 템플리트 파일 작성을 완료하면 템플리트를 편집하여 SSH 명령을 실행하십시오. 그런 다음 유효성 검증 인증서 및 클라이언트 구성 파일을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="de67b2cc61bc9b9d578482ce6e9e6cd93f1f5120" translate="yes" xml:space="preserve">
          <source>When finished, click &lt;strong&gt;Change Password&lt;/strong&gt;.</source>
          <target state="translated">완료되면 &lt;strong&gt;비밀번호 변경을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5651870dc29394e230a28ae303c14e514ba31a47" translate="yes" xml:space="preserve">
          <source>When finished, open a command window and enter the following:</source>
          <target state="translated">완료되면 명령 창을 열고 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="00791356f115d3adea1ce348c3988557c7cce41e" translate="yes" xml:space="preserve">
          <source>When finished, save it.</source>
          <target state="translated">완료되면 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="da46578738e039f96830bbfae1bcc56c4a190cfb" translate="yes" xml:space="preserve">
          <source>When finished, the &lt;code&gt;/recipes/default.rb&lt;/code&gt; file should have code similar to:</source>
          <target state="translated">완료되면 &lt;code&gt;/recipes/default.rb&lt;/code&gt; 파일에 다음과 유사한 코드가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="89969cbab16871efae1365a5a2afdfc52b32946d" translate="yes" xml:space="preserve">
          <source>When install options are specified as a string, Chef Infra Client will span a gems command with those options when installing the gem.</source>
          <target state="translated">설치 옵션이 문자열로 지정되면 Chef Infra Client는 gem을 설치할 때 해당 옵션과 함께 gems 명령을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="49db0d867c4aadb181c93ad72233ea71ab98cf24" translate="yes" xml:space="preserve">
          <source>When install options are specified as a string, the chef-client will span a gems command with those options when installing the gem.</source>
          <target state="translated">설치 옵션이 문자열로 지정되면 chef-client는 gem을 설치할 때 해당 옵션과 함께 gems 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="50975b0bda1fde046bdf5e40ae83a8ca20b2a551" translate="yes" xml:space="preserve">
          <source>When installed as a system package, users accept the license with the ctl command. For example, &lt;code&gt;chef-server-ctl reconfigure --chef-license=accept&lt;/code&gt;. Acceptance can also be set in the configuration file &lt;code&gt;chef-server.rb&lt;/code&gt; as &lt;code&gt;chef_license &quot;accept&quot;&lt;/code&gt;.</source>
          <target state="translated">시스템 패키지로 설치하면 사용자는 ctl 명령을 사용하여 라이센스에 동의합니다. 예를 들어 &lt;code&gt;chef-server-ctl reconfigure --chef-license=accept&lt;/code&gt; 입니다. 수락은 구성 파일 &lt;code&gt;chef-server.rb&lt;/code&gt; 에서 &lt;code&gt;chef_license &quot;accept&quot;&lt;/code&gt; 로 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c910652f77c9b4110a7d885a95499bcd417e59a" translate="yes" xml:space="preserve">
          <source>When installing Chef Automate with Chef Desktop, &lt;em&gt;Data Lifecycle&lt;/em&gt; settings will not mark nodes as missing and not delete missing nodes by default. We encourage users to not change these specific settings and not defeat the monitoring purpose of the Desktop dashboard.</source>
          <target state="translated">Chef Desktop과 함께 Chef Automate를 설치할 때 &lt;em&gt;데이터 수명주기&lt;/em&gt; 설정은 노드를 누락 된 것으로 표시하지 않으며 기본적으로 누락 된 노드를 삭제하지 않습니다. 사용자는 이러한 특정 설정을 변경하지 말고 데스크톱 대시 보드의 모니터링 목적을 어 기지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="216a15cfb011b795625615078550c8c5fcc9b17b" translate="yes" xml:space="preserve">
          <source>When items cannot be merged through substitution, the original data is overwritten.</source>
          <target state="translated">대체를 통해 항목을 병합 할 수없는 경우 원래 데이터를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="54530694580120cb4d412611c264243670f6b544" translate="yes" xml:space="preserve">
          <source>When knife is executed from a Microsoft Windows system, it is no longer necessary to make additional configuration of the WinRM listener on the target node to enable successful authentication from the workstation. It is sufficient to have a WinRM listener on the remote node configured to use the default configuration for &lt;code&gt;winrm quickconfig&lt;/code&gt;. This is because &lt;code&gt;knife windows&lt;/code&gt; supports the Microsoft Windows negotiate protocol, including NTLM authentication, which matches the authentication requirements for the default configuration of the WinRM listener.</source>
          <target state="translated">Knife가 Microsoft Windows 시스템에서 실행되는 경우 워크 스테이션에서 성공적인 인증을 활성화하기 위해 더 이상 대상 노드에서 WinRM 리스너를 추가로 구성 할 필요가 없습니다. &lt;code&gt;winrm quickconfig&lt;/code&gt; 의 기본 구성을 사용하도록 구성된 원격 노드에 WinRM 리스너가 있으면 충분합니다 . &lt;code&gt;knife windows&lt;/code&gt; WinRM 수신기의 기본 구성에 대한 인증 요구 사항과 일치하는 NTLM 인증을 포함하여 Microsoft Windows 협상 프로토콜을 지원 하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="8816f28d0f05e9c0a1549de903d783c96b52baa3" translate="yes" xml:space="preserve">
          <source>When knife runs the command, the options are parsed from the command-line and make the settings available as a hash that can be used to access the &lt;code&gt;config&lt;/code&gt; method. For example, the following option:</source>
          <target state="translated">knife가 명령을 실행하면 명령 줄에서 옵션이 구문 분석되고 설정을 &lt;code&gt;config&lt;/code&gt; 방법 에 액세스하는 데 사용할 수있는 해시로 사용할 수 있습니다 . 예를 들어, 다음 옵션 :</target>
        </trans-unit>
        <trans-unit id="c067a3e63043ffcb2f08739c9f29cb06384ed41a" translate="yes" xml:space="preserve">
          <source>When launchd is run as the root user, the group to run the job as. If the &lt;code&gt;username&lt;/code&gt; property is specified and this property is not, this value is set to the default group for the user.</source>
          <target state="translated">launchd가 루트 사용자로 실행되면 작업을 실행할 그룹입니다. 경우 &lt;code&gt;username&lt;/code&gt; 등록 정보가 지정하고이 속성이되지이다,이 값은 사용자의 기본 그룹으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5c07d63a566790570212009218ba5f52ba8070d2" translate="yes" xml:space="preserve">
          <source>When launchd is run as the root user, the user to run the job as.</source>
          <target state="translated">시작이 루트 사용자로 실행되면 사용자는 작업을 다음과 같이 실행합니다.</target>
        </trans-unit>
        <trans-unit id="982b6aeeff72aa6982c72a41b0da9704ec313719" translate="yes" xml:space="preserve">
          <source>When loading an environment from the Chef Infra Server, you might previously have written:</source>
          <target state="translated">Chef Infra Server에서 환경을로드 할 때 이전에 다음과 같이 작성했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9948d6b4949d4fd9744f0fba0de43d68130e18e" translate="yes" xml:space="preserve">
          <source>When looking at a failed Chef Infra Client run, select &lt;strong&gt;View Error Log&lt;/strong&gt; at the top of the page to open a window showing the error message and backtrace. Use the downloaded button to save the error message.</source>
          <target state="translated">실패한 Chef Infra Client 실행 을 볼 때 페이지 상단의 &lt;strong&gt;오류 로그보기를&lt;/strong&gt; 선택 하여 오류 메시지와 역 추적을 표시하는 창을 엽니 다. 다운로드 된 버튼을 사용하여 오류 메시지를 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="023c7646565b892918d9d2b87b9e69fce74ff733" translate="yes" xml:space="preserve">
          <source>When method-call syntax is used with the filter statement, you provide filter criteria as a Hash, with filter criteria names as keys, and conditions as the Hash values. You may provide test, true/false, or numbers, in which case the comparison is equality; or you may provide a regular expression, in which case a match is performed.</source>
          <target state="translated">메서드 호출 구문이 필터 문과 함께 사용되는 경우 필터 조건 이름을 키로, 조건을 해시 값으로 사용하여 필터 조건을 해시로 제공합니다. 테스트, 참 / 거짓 또는 숫자를 제공 할 수 있으며이 경우 비교는 동일합니다. 또는 정규식을 제공 할 수 있습니다.이 경우 일치가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9f873320d98bf14efb34396527e54a8b25e1615d" translate="yes" xml:space="preserve">
          <source>When multiple paths are specified, Chef Infra Client will attempt to download the files in the order listed, stopping after the first successful download.</source>
          <target state="translated">여러 경로가 지정되면 Chef Infra Client는 나열된 순서대로 파일을 다운로드하려고 시도하고 첫 번째 다운로드 성공 후에 중지합니다.</target>
        </trans-unit>
        <trans-unit id="e0b41095689fbcfc54bd20ae6954803dd67ad293" translate="yes" xml:space="preserve">
          <source>When multiple paths are specified, the chef-client will attempt to download the files in the order listed, stopping after the first successful download.</source>
          <target state="translated">여러 경로가 지정되면 chef-client는 나열된 순서대로 파일을 다운로드하려고 시도하며 처음으로 다운로드 한 후에 중지합니다.</target>
        </trans-unit>
        <trans-unit id="cdce1dd3404fc416b66b895a61f79303ca7074f6" translate="yes" xml:space="preserve">
          <source>When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.</source>
          <target state="translated">지정된 hostRules가 일치하지 않는 경우 요청은 defaultUrlRedirect에 지정된 URL로 리디렉션됩니다. defaultUrlRedirect가 지정된 경우 defaultService 또는 defaultRouteAction을 설정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="7e0ba23de0e8109a526f10359ad4bb1f1c0104a4" translate="yes" xml:space="preserve">
          <source>When originally introduced, the Input facility was named &lt;em&gt;Attributes&lt;/em&gt;. This name was problematic, because:</source>
          <target state="translated">처음 도입되었을 때 입력 기능의 이름은 &lt;em&gt;Attributes&lt;/em&gt; 입니다. 이 이름은 다음과 같은 이유로 문제가되었습니다.</target>
        </trans-unit>
        <trans-unit id="c0409512e789c1bdff7d526fe9da5851fbf8c2db" translate="yes" xml:space="preserve">
          <source>When overriding any callbacks, you may use any of the &lt;a href=&quot;../plan_variables/index&quot;&gt;variables&lt;/a&gt;, &lt;a href=&quot;../plan_settings/index&quot;&gt;settings&lt;/a&gt;, or &lt;a href=&quot;../build_helpers/index&quot;&gt;functions&lt;/a&gt;, except for the &lt;a href=&quot;../service_templates/index&quot;&gt;runtime template data&lt;/a&gt;. Those can only be used in Application Lifecycle hooks once a Chef Habitat service is running.</source>
          <target state="translated">콜백을 재정의 할 때 &lt;a href=&quot;../service_templates/index&quot;&gt;런타임 템플릿 데이터를&lt;/a&gt; 제외한 모든 &lt;a href=&quot;../plan_variables/index&quot;&gt;변수&lt;/a&gt; , &lt;a href=&quot;../plan_settings/index&quot;&gt;설정&lt;/a&gt; 또는 &lt;a href=&quot;../build_helpers/index&quot;&gt;함수를&lt;/a&gt; 사용할 수 있습니다 . Chef Habitat 서비스가 실행되면 애플리케이션 수명주기 후크에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7b504e85569411caea1234e36ad0cf99ba2cdaa" translate="yes" xml:space="preserve">
          <source>When ready, delete the VM instance by running:</source>
          <target state="translated">준비가되면 다음을 실행하여 VM 인스턴스를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="4ff8ee6d29e1e16a2ff17cc6442ee5ec4636ae26" translate="yes" xml:space="preserve">
          <source>When referring to Chef Habitat artifacts from either Builder or the Studio, you can refer to them in two ways:</source>
          <target state="translated">Builder 또는 Studio에서 Chef Habitat 아티팩트를 참조 할 때 다음 두 가지 방법으로 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38ed49170c83700fe75b3a0c2564641e56a19e7e" translate="yes" xml:space="preserve">
          <source>When restoring Chef server data, the previously backed-up files will be required, along with the Chef server running only the &lt;strong&gt;postgresql&lt;/strong&gt; service. Perform all activities as root unless otherwise directed.</source>
          <target state="translated">Chef 서버 데이터를 복원 할 때는 &lt;strong&gt;postgresql&lt;/strong&gt; 서비스 만 실행하는 Chef 서버와 함께 이전에 백업 된 파일이 필요 합니다. 별도의 지시가없는 한 모든 활동을 루트로 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="61c76bbb5a0777d877bfd82adf77a71310c8517a" translate="yes" xml:space="preserve">
          <source>When restoring cookbooks, &lt;strong&gt;make sure the cookbook directory is writable by the Supermarket user.&lt;/strong&gt;</source>
          <target state="translated">요리 책을 복원 할 때 &lt;strong&gt;슈퍼마켓 사용자가 요리 책 디렉토리에 쓸 수 있는지 확인하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4996ecbdd9308e16dd1b3a76d73a04a516f631c" translate="yes" xml:space="preserve">
          <source>When run with no arguments, returns a list of available operations.</source>
          <target state="translated">인수없이 실행하면 사용 가능한 작업 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="227a1c67144663efe66f4614fad81ef602765ba1" translate="yes" xml:space="preserve">
          <source>When running &lt;code&gt;chef-&amp;lt;PRODUCT-NAME&amp;gt;-ctl reconfigure&lt;/code&gt; the Chef MLSA is printed. Type &lt;code&gt;yes&lt;/code&gt; to accept it. Anything other than typing &lt;code&gt;yes&lt;/code&gt; rejects the Chef MLSA, and the upgrade process will exit. Typing &lt;code&gt;yes&lt;/code&gt; adds a &lt;code&gt;.license.accepted&lt;/code&gt; file to the &lt;code&gt;/etc/chef/accepted_licenses/&amp;lt;PRODUCT-NAME&amp;gt;&lt;/code&gt; file. As long as this file exists in this directory, the Chef MLSA is accepted and the reconfigure process will not prompt for &lt;code&gt;yes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chef-&amp;lt;PRODUCT-NAME&amp;gt;-ctl reconfigure&lt;/code&gt; 를 실행할 때 Chef MLSA가 인쇄됩니다. 수락하려면 &lt;code&gt;yes&lt;/code&gt; 를 입력 하십시오. &lt;code&gt;yes&lt;/code&gt; 를 입력하지 않으면 Chef MLSA가 거부되고 업그레이드 프로세스가 종료됩니다. &lt;code&gt;yes&lt;/code&gt; 를 입력 하면 &lt;code&gt;.license.accepted&lt;/code&gt; 파일이 &lt;code&gt;/etc/chef/accepted_licenses/&amp;lt;PRODUCT-NAME&amp;gt;&lt;/code&gt; 파일에 추가됩니다. 이 파일이이 디렉토리에있는 한 Chef MLSA가 승인되고 재구성 프로세스에서 &lt;code&gt;yes&lt;/code&gt; 를 프롬프트하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4b7aa6100999589368ec5efb26a66a45439ef3ee" translate="yes" xml:space="preserve">
          <source>When running Chef Infra without Policyfile roles and environments are global objects. Changes to roles and environments are applied immediately to any node that contains that role in its run-list or belong to a particular environment. This can make it hard to update roles and environments and in some use cases discourages using them at all.</source>
          <target state="translated">Policyfile없이 Chef Infra를 실행할 때 역할 및 환경은 전역 개체입니다. 역할 및 환경에 대한 변경 사항은 실행 목록에 해당 역할을 포함하거나 특정 환경에 속하는 모든 노드에 즉시 적용됩니다. 이로 인해 역할과 환경을 업데이트하기가 어려울 수 있으며 일부 사용 사례에서는 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f7d94637d33042e390cfe1d9e72a37fd75c01db0" translate="yes" xml:space="preserve">
          <source>When running Chef Infra without Policyfile, the Chef Infra Server loads dependency data for all known versions of all known cookbooks, and then runs an expensive computation to determine the correct set.</source>
          <target state="translated">Policyfile없이 Chef Infra를 실행하는 경우 Chef Infra 서버는 알려진 모든 쿡북의 모든 알려진 버전에 대한 종속성 데이터를로드 한 다음 값 비싼 계산을 실행하여 올바른 집합을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="e863047d5f89b6338032307cc39f4d5c690f6eec" translate="yes" xml:space="preserve">
          <source>When running Chef Infra without a Policyfile, the exact set of cookbooks that are applied to a node is defined by:</source>
          <target state="translated">Policyfile없이 Chef Infra를 실행할 때 노드에 적용되는 정확한 쿡북 세트는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="7d48ba952bc5852c3c3f6d393716f2972e2a7e10" translate="yes" xml:space="preserve">
          <source>When running Chef without Policyfile, existing versions of cookbooks are mutable. This is convenient for many use cases, especially if users upload in-development cookbook revisions to the Chef Infra Server. But this sometimes creates issues that are similar to role mutability by allowing those cookbook changes to be applied immediately to nodes that use that cookbook. Users account for this by rigorous testing processes to ensure that only fully integrated cookbooks are ever published. This process does enforce good development habits, but at the same time it shouldn&amp;rsquo;t be a required part of a workflow that ends with publishing an in-development cookbook to the Chef Infra Server for testing against real nodes.</source>
          <target state="translated">Policyfile없이 Chef를 실행할 때 기존 버전의 쿡북을 변경할 수 있습니다. 이는 특히 사용자가 개발중인 요리 책 개정판을 Chef Infra Server에 업로드하는 경우 많은 사용 사례에 편리합니다. 그러나 이로 인해 쿡북 변경 사항이 해당 쿡북을 사용하는 노드에 즉시 적용되도록 허용함으로써 역할 변경 성과 유사한 문제가 발생하기도합니다. 사용자는 완전히 통합 된 요리 책 만 게시되도록 엄격한 테스트 프로세스를 통해이를 설명합니다. 이 프로세스는 좋은 개발 습관을 적용하지만, 동시에 실제 노드에 대한 테스트를 위해 Chef Infra Server에 개발중인 요리 책을 게시하는 것으로 끝나는 워크 플로의 필수 부분이되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e7b3c3c1c718808a85a4490b39326015aa141a5b" translate="yes" xml:space="preserve">
          <source>When running Microsoft Windows, the &lt;code&gt;config.rb&lt;/code&gt; file is located at &lt;code&gt;%HOMEDRIVE%:%HOMEPATH%\.chef&lt;/code&gt; (e.g. &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\.chef&lt;/code&gt;). If this path needs to be scripted, use &lt;code&gt;%USERPROFILE%\chef-repo\.chef&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows를 실행할 때 &lt;code&gt;config.rb&lt;/code&gt; 파일은 &lt;code&gt;%HOMEDRIVE%:%HOMEPATH%\.chef&lt;/code&gt; (예 : &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\.chef&lt;/code&gt; )에 있습니다. 이 경로를 스크립팅해야하는 경우 &lt;code&gt;%USERPROFILE%\chef-repo\.chef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ee394223700e49c411fe30caf2df9add1bac0d6" translate="yes" xml:space="preserve">
          <source>When running Microsoft Windows, the config.rb file is located at &lt;code&gt;%HOMEDRIVE%:%HOMEPATH%\.chef&lt;/code&gt; (e.g. &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\.chef&lt;/code&gt;). If this path needs to be scripted, use &lt;code&gt;%USERPROFILE%\chef-repo\.chef&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows를 실행할 때 config.rb 파일은 &lt;code&gt;%HOMEDRIVE%:%HOMEPATH%\.chef&lt;/code&gt; (예 : &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\.chef&lt;/code&gt; )에 있습니다. 이 경로를 스크립팅해야하는 경우 &lt;code&gt;%USERPROFILE%\chef-repo\.chef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16f6bb6fd201d3552ea078d6a297c6d9b74263d0" translate="yes" xml:space="preserve">
          <source>When running Microsoft Windows, the knife.rb file is located at &lt;code&gt;%HOMEDRIVE%:%HOMEPATH%\chef-repo\.chef&lt;/code&gt; (e.g. &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\chef-repo\.chef&lt;/code&gt;). If this path needs to be scripted, use &lt;code&gt;%USERPROFILE%\chef-repo\.chef&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows를 실행할 때 knife.rb 파일은 &lt;code&gt;%HOMEDRIVE%:%HOMEPATH%\chef-repo\.chef&lt;/code&gt; (예 : &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\chef-repo\.chef&lt;/code&gt; ). 이 경로를 스크립팅해야하는 경우 &lt;code&gt;%USERPROFILE%\chef-repo\.chef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cca959a975b325f9db1923c8d060d10bed9d8004" translate="yes" xml:space="preserve">
          <source>When running a 32-bit version of chef-client, the script will write the &lt;code&gt;chef_architecture&lt;/code&gt; file to the &lt;code&gt;C:\Windows\SysWow64&lt;/code&gt; directory. However, when running a native 64-bit version of the chef-client, the script will write a file to the &lt;code&gt;C:\Windows\System32&lt;/code&gt; directory, as expected.</source>
          <target state="translated">32 비트 버전의 chef-client를 실행할 때 스크립트는 &lt;code&gt;chef_architecture&lt;/code&gt; 파일을 &lt;code&gt;C:\Windows\SysWow64&lt;/code&gt; 디렉토리에 작성합니다. 그러나 기본 64 비트 버전의 chef-client를 실행할 때 스크립트는 예상대로 &lt;code&gt;C:\Windows\System32&lt;/code&gt; 디렉토리에 파일을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="c1f9a7b65c47f3b1ea3ef5d8e6e2accee0f2f51a" translate="yes" xml:space="preserve">
          <source>When running a Studio on a platform that uses Docker (macOS), additional command line options to pass to the &lt;code&gt;docker&lt;/code&gt; command.</source>
          <target state="translated">Docker (macOS)를 사용하는 플랫폼에서 Studio를 실행할 때 &lt;code&gt;docker&lt;/code&gt; 명령 에 전달할 추가 명령 줄 옵션 입니다.</target>
        </trans-unit>
        <trans-unit id="a97d0bc891b7f7e21d9a700ff6ab57a06726a6ed" translate="yes" xml:space="preserve">
          <source>When running a validatorless &lt;code&gt;knife bootstrap&lt;/code&gt; operation, the output is similar to:</source>
          <target state="translated">검사기없는 &lt;code&gt;knife bootstrap&lt;/code&gt; 작업을 실행할 때 출력은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="b21ad72dbf52f58dc2205cac188063e36d6f6b0f" translate="yes" xml:space="preserve">
          <source>When running in EC2, AWS has the ability to use the IAM role associated with your instance to create and use temporary credentials for accessing the AWS API. If you enable this feature, then you won&amp;rsquo;t need to provide credentials for your AWS account. You will only be required to provide a name for your node manager. Chef Automate creates a node reference for each EC2 instance in your account, collecting all tags associated with each instance. Chef Automate calls the Amazon System Manager (SSM) to describe instance information and to get ping status for the SSM agent on all instances. A detect job is &lt;em&gt;not&lt;/em&gt; run on the instances; all instances with an SSM ping status of &amp;ldquo;Online&amp;rdquo; will be marked as reachable.</source>
          <target state="translated">EC2에서 실행할 때 AWS는 인스턴스와 연결된 IAM 역할을 사용하여 AWS API에 액세스하기위한 임시 자격 증명을 생성하고 사용할 수 있습니다. 이 기능을 활성화하면 AWS 계정에 대한 자격 증명을 제공 할 필요가 없습니다. 노드 관리자의 이름 만 제공하면됩니다. Chef Automate는 계정의 각 EC2 인스턴스에 대한 노드 참조를 생성하여 각 인스턴스와 관련된 모든 태그를 수집합니다. Chef Automate는 Amazon System Manager (SSM)를 호출하여 인스턴스 정보를 설명하고 모든 인스턴스에서 SSM 에이전트에 대한 ping 상태를 가져옵니다. 감지 작업은 인스턴스에서 실행 &lt;em&gt;되지 않습니다&lt;/em&gt; . SSM ping 상태가 &quot;온라인&quot;인 모든 인스턴스는 연결 가능으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="dcd7562a3ef9bb8edc18e0f0549a56b6df2a0a3c" translate="yes" xml:space="preserve">
          <source>When running knife from Windows PowerShell, a string should be surrounded by triple single quotes (&lt;code&gt;''' '''&lt;/code&gt;). For example:</source>
          <target state="translated">Windows PowerShell에서 나이프를 실행할 때는 문자열을 작은 따옴표 ( &lt;code&gt;''' '''&lt;/code&gt; )로 묶어야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="80713522149ead8b25c4b005b4695056666bf00b" translate="yes" xml:space="preserve">
          <source>When running knife from the command prompt, a string should be surrounded by single quotes (&lt;code&gt;' '&lt;/code&gt;). For example:</source>
          <target state="translated">명령 프롬프트에서 knife를 실행할 때 문자열은 작은 따옴표 ( &lt;code&gt;' '&lt;/code&gt; )로 묶어야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7526fbbb49f4d3a1758dfa90dd6df86decc0f81b" translate="yes" xml:space="preserve">
          <source>When running knife in Microsoft Windows, a string may be interpreted as a wildcard pattern when quotes are not present in the command. The number of quotes to use depends on the shell from which the command is being run.</source>
          <target state="translated">Microsoft Windows에서 knife를 실행할 때 명령에 따옴표가 없으면 문자열이 와일드 카드 패턴으로 해석 될 수 있습니다. 사용할 따옴표 수는 명령이 실행되는 쉘에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="bb9931c09fba3afb0a479c312dfffe65830d5b92" translate="yes" xml:space="preserve">
          <source>When running services with the Chef Habitat Supervisor you&amp;rsquo;ll see log output similar to this:</source>
          <target state="translated">Chef Habitat Supervisor로 서비스를 실행하면 다음과 유사한 로그 출력이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9f1e490ef91a69b0eb9872551293f64706fcb8ec" translate="yes" xml:space="preserve">
          <source>When running the &lt;code&gt;create&lt;/code&gt; argument, be sure to omit the &lt;code&gt;-a&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 인수를 실행할 때 &lt;code&gt;-a&lt;/code&gt; 옵션 을 생략하십시오 .</target>
        </trans-unit>
        <trans-unit id="d318b0566a2541b4ac9c3f8bd152c540c71a4760" translate="yes" xml:space="preserve">
          <source>When running the Chef Infra Client using the &lt;code&gt;--local-mode&lt;/code&gt; option, &lt;code&gt;~/.chef/local-mode-cache&lt;/code&gt; is the default value for &lt;code&gt;file_cache_path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--local-mode&lt;/code&gt; 옵션을 사용하여 Chef Infra Client를 실행할 때 &lt;code&gt;~/.chef/local-mode-cache&lt;/code&gt; 가 &lt;code&gt;file_cache_path&lt;/code&gt; 의 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="df49be69878cf001b37c4e97a733c1463e74dbac" translate="yes" xml:space="preserve">
          <source>When running the Chef Infra Server in a high availability configuration, restarting all services may trigger failover.</source>
          <target state="translated">고 가용성 구성에서 Chef Infra Server를 실행할 때 모든 서비스를 다시 시작하면 장애 조치가 트리거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="437fb7bde6d1141e8fa7b55eef1235fe12f82177" translate="yes" xml:space="preserve">
          <source>When running the Chef server in a high availability configuration, restarting all services may trigger failover.</source>
          <target state="translated">고 가용성 구성에서 Chef 서버를 실행할 때 모든 서비스를 다시 시작하면 장애 조치가 트리거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="290e5b149ded69d2ecd2572471b56037fa19b245" translate="yes" xml:space="preserve">
          <source>When running the chef-client using the &lt;code&gt;--local-mode&lt;/code&gt; option, &lt;code&gt;~/.chef/local-mode-cache&lt;/code&gt; is the default value for &lt;code&gt;cache_path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--local-mode&lt;/code&gt; 옵션을 사용하여 chef-client를 실행할 때 &lt;code&gt;~/.chef/local-mode-cache&lt;/code&gt; 가 &lt;code&gt;cache_path&lt;/code&gt; 의 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="a9857ce1e17f6b8101ae7c73ab44b0927ab20087" translate="yes" xml:space="preserve">
          <source>When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use knife to search for all of the servers running CentOS in an environment named &amp;ldquo;QA&amp;rdquo;, enter the following:</source>
          <target state="translated">검색 할 때 환경은 속성입니다. 이를 통해 부울 연산자 및 추가 검색어를 사용하여 검색 결과를 지정된 환경으로 제한 할 수 있습니다. 예를 들어, 나이프를 사용하여&amp;ldquo;QA&amp;rdquo;라는 환경에서 CentOS를 실행하는 모든 서버를 검색하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="3d660821009d5c9563c41513e78d6f6b0349917c" translate="yes" xml:space="preserve">
          <source>When service status is requested, the output should be similar to:</source>
          <target state="translated">서비스 상태가 요청되면 출력은 다음과 유사해야합니다.</target>
        </trans-unit>
        <trans-unit id="8a64f95d6b2c74c473b9db2c9a2b4cf6a1a1f0f0" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;:enabled&lt;/code&gt;, Chef Infra Client will use &lt;a href=&quot;https://github.com/chef/chef/blob/master/docs/dev/design_documents/client_exit_codes.md#exit-codes-in-use&quot;&gt;standardized exit codes&lt;/a&gt; for the Chef Infra Client run status, and any non-standard exit codes will be converted to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;GENERIC_FAILURE&lt;/code&gt;. This setting can also be set to &lt;code&gt;:disabled&lt;/code&gt; to use the pre-Chef Infra Client 13 exit code behavior. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">세트로 할 때 &lt;code&gt;:enabled&lt;/code&gt; , 요리사 인프라 클라이언트는 사용 &lt;a href=&quot;https://github.com/chef/chef/blob/master/docs/dev/design_documents/client_exit_codes.md#exit-codes-in-use&quot;&gt;종료 코드를 표준화&lt;/a&gt; 요리사 인프라 클라이언트 실행 상태를, 어떤 표준이 아닌 종료 코드로 변환됩니다 &lt;code&gt;1&lt;/code&gt; 또는 &lt;code&gt;GENERIC_FAILURE&lt;/code&gt; . 이 설정을 &lt;code&gt;:disabled&lt;/code&gt; 로 설정하여 Chef Infra Client 13 이전 종료 코드 동작을 사용할 수도 있습니다 . 기본값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f17be5ad1ed414878523442f85607809d27f7d2" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;:enabled&lt;/code&gt;, chef-client will use &lt;a href=&quot;https://github.com/chef/chef-rfc/blob/master/rfc062-exit-status.#exit-codes-in-use&quot;&gt;stardardized exit codes&lt;/a&gt; for Chef client run status, and any non-standard exit codes will be converted to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;GENERIC_FAILURE&lt;/code&gt;. This setting can also be set to &lt;code&gt;:disabled&lt;/code&gt; which preserves the old behavior of using non-standardized exit codes and skips the deprecation warnings. Default value: &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">세트로하는 경우 &lt;code&gt;:enabled&lt;/code&gt; , 사용 요리사 클라이언트 &lt;a href=&quot;https://github.com/chef/chef-rfc/blob/master/rfc062-exit-status.#exit-codes-in-use&quot;&gt;stardardized 종료 코드&lt;/a&gt; 요리사 클라이언트 실행 상태를, 어떤 표준이 아닌 종료 코드로 변환됩니다 &lt;code&gt;1&lt;/code&gt; 또는 &lt;code&gt;GENERIC_FAILURE&lt;/code&gt; . 이 설정은 &lt;code&gt;:disabled&lt;/code&gt; 로 설정하여 표준화되지 않은 종료 코드를 사용하는 이전 동작을 유지하고 더 이상 사용되지 않는 경고를 건너 뜁니다. 기본 값 : &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d047be7256a57dcafead2b29bd6bf2cda2a1a19f" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, locks the memory allocated by Elasticsearch so that it may not be swapped to disk by the OS. Enabling this will cause Elasticsearch to fail on start if there is not enough memory available for the configured heap size. On systems where swap is disabled, this setting has no effect. Default value: &lt;code&gt;false&lt;/code&gt;. This flag was named &lt;code&gt;elasticsearch['config']['bootstrap']['mlockall']&lt;/code&gt; in Chef Automate 1.5.x and below.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정되면 Elasticsearch에서 할당 한 메모리를 잠가 OS에서 디스크로 스왑하지 않도록합니다. 이를 활성화하면 구성된 힙 크기에 사용할 수있는 메모리가 충분하지 않은 경우 Elasticsearch가 시작시 실패합니다. 스왑이 비활성화 된 시스템에서는이 설정이 적용되지 않습니다. 기본값 : &lt;code&gt;false&lt;/code&gt; . 이 플래그는 Chef Automate 1.5.x 이하에서 &lt;code&gt;elasticsearch['config']['bootstrap']['mlockall']&lt;/code&gt; 로 명명되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4290166718559358893f9c2e341dc2c0fcf2fc19" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, the network is created in &amp;ldquo;auto subnet mode&amp;rdquo; and it will create a subnet for each region automatically across the &lt;code&gt;10.128.0.0/9&lt;/code&gt; address range. When set to &lt;code&gt;false&lt;/code&gt;, the network is created in &amp;ldquo;custom subnet mode&amp;rdquo; so the user can explicitly connect subnetwork resources.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정 하면 네트워크가 &quot;자동 서브넷 모드&quot;로 생성되고 &lt;code&gt;10.128.0.0/9&lt;/code&gt; 주소 범위에 걸쳐 각 지역에 대한 서브넷이 자동으로 생성됩니다 . &lt;code&gt;false&lt;/code&gt; 로 설정 하면 사용자가 명시 적으로 서브 네트워크 리소스를 연결할 수 있도록 네트워크가 '커스텀 서브넷 모드'로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0d3d5dc60ca5bd7bdb628cb050f2432aeb4bb935" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;yes&lt;/code&gt;, this device is controlled by the channel bonding interface that is specified via the &lt;code&gt;master&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;yes&lt;/code&gt; 로 설정하면 이 장치는 &lt;code&gt;master&lt;/code&gt; 속성을 통해 지정된 채널 본딩 인터페이스에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="3960c9ffa78e5e8b1939908425bbc5dcadad5558" translate="yes" xml:space="preserve">
          <source>When set to a non-empty value, a &lt;code&gt;.studiorc&lt;/code&gt; will not be sourced when entering an interactive Studio via &lt;code&gt;hab studio enter&lt;/code&gt;.</source>
          <target state="translated">비어 있지 않은 값으로 설정하면 &lt;code&gt;hab studio enter&lt;/code&gt; 를 통해 인터랙티브 스튜디오에 들어갈 때 &lt;code&gt;.studiorc&lt;/code&gt; 가 제공되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="eff1f4943453f473d3be607282ae2891e4a6e3dc" translate="yes" xml:space="preserve">
          <source>When set to any value, &lt;code&gt;chef-run&lt;/code&gt; will not capture or send telemetry data.</source>
          <target state="translated">임의의 값으로 설정하면 &lt;code&gt;chef-run&lt;/code&gt; 은 원격 분석 데이터를 캡처하거나 전송하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="284ddf94491605f8765d690f040354b8cbcf659b" translate="yes" xml:space="preserve">
          <source>When set to any value, &lt;code&gt;chef-run&lt;/code&gt; will not capture or send telemetry data. Only set this if you have access to Chef&amp;rsquo;s internal QA environment - otherwise the telemetry data will not be successfully captured by Chef. If you have access to Chef&amp;rsquo;s internal QA environment, if &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;enable&lt;/code&gt; are both &lt;code&gt;true&lt;/code&gt;, anonymous data is reported to Chef&amp;rsquo;s QA environment.</source>
          <target state="translated">임의의 값으로 설정하면 &lt;code&gt;chef-run&lt;/code&gt; 은 원격 분석 데이터를 캡처하거나 전송하지 않습니다. Chef의 내부 QA 환경에 액세스 할 수있는 경우에만이를 설정하십시오. 그렇지 않으면 Chef에서 원격 분석 데이터를 성공적으로 캡처 할 수 없습니다. Chef의 내부 QA 환경에 대한 액세스 권한이있는 경우 &lt;code&gt;dev&lt;/code&gt; 및 &lt;code&gt;enable&lt;/code&gt; 이 모두 &lt;code&gt;true&lt;/code&gt; 인 경우 익명 데이터가 Chef의 QA 환경에보고됩니다.</target>
        </trans-unit>
        <trans-unit id="4b5dac4b4ebb211072bc55054c42a8611f63b276" translate="yes" xml:space="preserve">
          <source>When someone clicks the Approve button, the feature branch that contains your change is merged into the target branch of the pipeline (usually this is master). At this point, the Build stage begins and the same tests that were run in Verify are run again. This is because the target branch may have moved ahead by other approvals. Assuming these tests pass, the Build stage proceeds with the quality and security phases. The Build stage is also a good place to run additional test suites, as well as security scanning checks, that might be too time consuming to run during Verify.</source>
          <target state="translated">누군가 승인 버튼을 클릭하면 변경 사항이 포함 된 기능 분기가 파이프 라인의 대상 분기 (일반적으로 마스터)에 병합됩니다. 이 시점에서 Build 단계가 시작되고 Verify에서 실행 된 동일한 테스트가 다시 실행됩니다. 이는 대상 지점이 다른 승인에 의해 진행되었을 수 있기 때문입니다. 이러한 테스트가 통과되면 빌드 단계는 품질 및 보안 단계로 진행됩니다. 빌드 단계는 확인 중에 실행하기에는 너무 많은 시간이 소요될 수있는 보안 스캔 검사뿐만 아니라 추가 테스트 스위트를 실행하기에 좋은 장소이기도합니다.</target>
        </trans-unit>
        <trans-unit id="bd94294e3332d473208efc109d6dd9f6de6b3493" translate="yes" xml:space="preserve">
          <source>When someone selects the Approve button, the feature branch that contains your change is merged into the target branch of the pipeline (usually this is master). At this point, the Build stage begins and the same tests that were run in Verify are run again. This is because the target branch may have moved ahead by other approvals. Assuming these tests pass, the Build stage proceeds with the quality and security phases. The Build stage is also a good place to run additional test suites, as well as security scanning checks, that might be too time consuming to run during Verify.</source>
          <target state="translated">누군가가 승인 버튼을 선택하면 변경 사항이 포함 된 기능 분기가 파이프 라인의 대상 분기 (일반적으로 마스터)에 병합됩니다. 이 시점에서 Build 단계가 시작되고 Verify에서 실행 된 동일한 테스트가 다시 실행됩니다. 이는 대상 지점이 다른 승인에 의해 진행되었을 수 있기 때문입니다. 이러한 테스트가 통과되면 빌드 단계는 품질 및 보안 단계로 진행됩니다. 빌드 단계는 확인 중에 실행하기에는 너무 많은 시간이 소요될 수있는 보안 스캔 검사뿐만 아니라 추가 테스트 스위트를 실행하기에 좋은 장소이기도합니다.</target>
        </trans-unit>
        <trans-unit id="cfcd7c338bc0a15d6811f4cdf4d1c9a2269a1044" translate="yes" xml:space="preserve">
          <source>When specifying a local Microsoft Windows file path as a valid file URI, an additional forward slash (&lt;code&gt;/&lt;/code&gt;) is required. For example:</source>
          <target state="translated">로컬 Microsoft Windows 파일 경로를 유효한 파일 URI로 지정하는 경우 추가 슬래시 ( &lt;code&gt;/&lt;/code&gt; )가 필요합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eacb8456adb630e06411c92975fd51d8d0ff4c64" translate="yes" xml:space="preserve">
          <source>When starting a single service, you can provide alternate configuration values to those specified in &lt;code&gt;default.toml&lt;/code&gt;.</source>
          <target state="translated">단일 서비스를 시작할 때 &lt;code&gt;default.toml&lt;/code&gt; 에 지정된 값에 대체 구성 값을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e28049b62e09081f0ac59d5ac685e4098cbef3d" translate="yes" xml:space="preserve">
          <source>When strings have quotes within quotes, use double quotes (&lt;code&gt;&quot; &quot;&lt;/code&gt;) on the outer quotes, and then single quotes (&lt;code&gt;' '&lt;/code&gt;) for the inner quotes. For example:</source>
          <target state="translated">문자열에 따옴표 안에 따옴표가 있으면 외부 따옴표에 큰 따옴표 ( &lt;code&gt;&quot; &quot;&lt;/code&gt; )를 사용하고 내부 따옴표에는 작은 따옴표 ( &lt;code&gt;' '&lt;/code&gt; )를 사용하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="98d6f824d1a3d3af0feb3e47991a4f9276924be4" translate="yes" xml:space="preserve">
          <source>When submitting a configuration update to a service group, you must specify the following:</source>
          <target state="translated">서비스 그룹에 구성 업데이트를 제출할 때 다음을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e2d3d9fef660b6fc8a8ec198dca2860af78e837c" translate="yes" xml:space="preserve">
          <source>When synchronization is complete, run the following command on the primary backend server:</source>
          <target state="translated">동기화가 완료되면 기본 백엔드 서버에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="bf04702bf32218c48a69d02395bae6e60e65adb0" translate="yes" xml:space="preserve">
          <source>When telemetry is disabled, we won&amp;rsquo;t collect your previously stored analytics.</source>
          <target state="translated">원격 분석이 비활성화되면 이전에 저장된 분석을 수집하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7c99aa24c891dd3b09963b03ca1c06e31f139884" translate="yes" xml:space="preserve">
          <source>When the &amp;ldquo;Approval Required&amp;rdquo; message appears, enter &lt;code&gt;@delivery approve&lt;/code&gt; in the comment box.</source>
          <target state="translated">&quot;승인 필요&quot;메시지가 나타나면 댓글 상자에 &lt;code&gt;@delivery approve&lt;/code&gt; 을 입력 합니다.</target>
        </trans-unit>
        <trans-unit id="79fa9e80312c16b42ac8a757c77b92724693fded" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;chef install&lt;/code&gt; command is run, Chef Workstation caches any necessary cookbooks and emits a &lt;code&gt;Policyfile.lock.json&lt;/code&gt; file that describes:</source>
          <target state="translated">때 &lt;code&gt;chef install&lt;/code&gt; 명령이 실행되고, 요리사 워크 스테이션이 필요한 요리 책을 캐시와 방출 &lt;code&gt;Policyfile.lock.json&lt;/code&gt; 의 설명 파일을 :</target>
        </trans-unit>
        <trans-unit id="6f358aa6a6c78d8a61c51820a0badecc3fdfc4ac" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;converge_by&lt;/code&gt; block is run in why-run mode, it will only log &lt;code&gt;touch &quot;/tmp/foo&quot;&lt;/code&gt; and will not run the code inside the block.</source>
          <target state="translated">때 &lt;code&gt;converge_by&lt;/code&gt; 의 블록이 왜 실행 모드에서 실행되고, 그것은 단지 기록합니다 &lt;code&gt;touch &quot;/tmp/foo&quot;&lt;/code&gt; 과 블록 내부의 코드를 실행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a4dc892600a4b7a7256c7fe42927ace0347ba47" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;guard_interpreter&lt;/code&gt; common attribute is set to &lt;code&gt;:powershell_script&lt;/code&gt;, a string command will be evaluated as if this value were set to &lt;code&gt;true&lt;/code&gt;. This is because the behavior of this attribute is similar to the value of the &lt;code&gt;&quot;$?&quot;&lt;/code&gt; expression common in UNIX interpreters. For example, this:</source>
          <target state="translated">때 &lt;code&gt;guard_interpreter&lt;/code&gt; 의 일반적인 속성이 설정되어 &lt;code&gt;:powershell_script&lt;/code&gt; , 문자열 명령은이 값으로 설정 한 경우로 평가됩니다 &lt;code&gt;true&lt;/code&gt; . 이 속성의 동작이 &lt;code&gt;&quot;$?&quot;&lt;/code&gt; 값과 유사하기 때문입니다. UNIX 인터프리터에서 일반적인 표현. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a335a434bfdbfe48e6abdcb2cbc1a97fc770f607" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;guard_intrepreter&lt;/code&gt; common attribute is set to &lt;code&gt;:powershell_script&lt;/code&gt;, a string command will be evaluated as if this value were set to &lt;code&gt;true&lt;/code&gt;. This is because the behavior of this attribute is similar to the value of the &lt;code&gt;&quot;$?&quot;&lt;/code&gt; expression common in UNIX interpreters. For example, this:</source>
          <target state="translated">때 &lt;code&gt;guard_intrepreter&lt;/code&gt; 의 일반적인 속성이 설정되어 &lt;code&gt;:powershell_script&lt;/code&gt; , 문자열 명령은이 값으로 설정 한 경우로 평가됩니다 &lt;code&gt;true&lt;/code&gt; . 이 속성의 동작이 &lt;code&gt;&quot;$?&quot;&lt;/code&gt; 값과 유사하기 때문입니다. UNIX 인터프리터에서 공통적 인 표현. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c4cc72f82e95582cc29af477475377c4d3dd5b36" translate="yes" xml:space="preserve">
          <source>When the &lt;strong&gt;package&lt;/strong&gt; resource has to install the package for the scripting language, it looks up the scripting language and uses the one defined in &lt;code&gt;node.run_state['scripting_language']&lt;/code&gt;</source>
          <target state="translated">때 &lt;strong&gt; 패키지&lt;/strong&gt; 자원이 스크립트 언어에 대한 패키지를 설치해야하고, 그것은 스크립트 언어를 조회하고 정의 된 하나를 사용 &lt;code&gt;node.run_state['scripting_language']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa9ab561b4194d81fbf1cb5acc4a04cf96097df1" translate="yes" xml:space="preserve">
          <source>When the Chef Infra Client is run as a daemon, the following signals may be used:</source>
          <target state="translated">Chef Infra Client가 데몬으로 실행되는 경우 다음 신호를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="527cb542248e07c47e40cc0ac51408548a4a422d" translate="yes" xml:space="preserve">
          <source>When the Chef Infra Client is run as a non-root user the Chef Infra Client can perform any action allowed to that user, as long as that action does not also require elevated privileges (such as sudo or pbrun). Attempts to manage any object that requires elevated privileges will result in an error. For example, when the Chef Infra Client is run as a non-root user that is unable to create or modify users, the &lt;strong&gt;user&lt;/strong&gt; resource will not work.</source>
          <target state="translated">Chef Infra Client가 루트가 아닌 사용자로 실행되는 경우 Chef Infra Client는 해당 작업에 상승 된 권한 (예 : sudo 또는 pbrun)이 필요하지 않는 한 해당 사용자에게 허용 된 모든 작업을 수행 할 수 있습니다. 상승 된 권한이 필요한 개체를 관리하려고하면 오류가 발생합니다. 예를 들어 Chef Infra Client가 사용자를 만들거나 수정할 수없는 루트가 아닌 사용자로 실행되는 경우 &lt;strong&gt;사용자&lt;/strong&gt; 리소스가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="470f6ea364a96f509541424920225f271856f627" translate="yes" xml:space="preserve">
          <source>When the Verify phase has passed in Workflow and the code has been reviewed and is ready to be merged, approve the change in Workflow; the pull request will be merged and closed in GitHub. The feature branch will also be deleted in GitHub.</source>
          <target state="translated">워크 플로에서 확인 단계를 통과하고 코드를 검토하고 병합 할 준비가되면 워크 플로의 변경을 승인합니다. 풀 요청은 GitHub에서 병합되고 닫힙니다. 기능 브랜치는 GitHub에서도 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="e9e5c3d3e4b22d73d56915a66e3c695ed10eb3c4" translate="yes" xml:space="preserve">
          <source>When the Verify phase has passed in Workflow and the code has been reviewed and it is decided the change should never be approved, delete the change in Workflow; the pull request will be declined and closed in GitHub. The feature branch will also be deleted in GitHub.</source>
          <target state="translated">워크 플로에서 확인 단계를 통과하고 코드를 검토 한 후 변경을 승인해서는 안된다고 결정되면 워크 플로에서 변경을 삭제합니다. 풀 요청이 거부되고 GitHub에서 닫힙니다. 기능 브랜치는 GitHub에서도 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="ff2ff6566faf4cad5c8e9534ea7e1210857cb801" translate="yes" xml:space="preserve">
          <source>When the Verify phases have completed successfully, the change is ready for code review. Chef Automate provides integrated code review through its web UI. There is also an integration with GitHub and Bitbucket Server (by Atlassian) for teams with existing code review workflows.</source>
          <target state="translated">확인 단계가 성공적으로 완료되면 코드 검토를 위해 변경 사항이 준비됩니다. Chef Automate는 웹 UI를 통해 통합 코드 검토를 제공합니다. 또한 기존 코드 검토 워크 플로가있는 팀을 위해 GitHub 및 Bitbucket Server (Atlassian 제공)와의 통합이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4d516632f39ea7b5af8253bf54afa478309460f" translate="yes" xml:space="preserve">
          <source>When the Verify phases have completed successfully, the change is ready for code review. Workflow provides integrated code review through its web UI. There is also an integration with GitHub and Bitbucket Server (by Atlassian) for teams with existing code review workflows.</source>
          <target state="translated">확인 단계가 성공적으로 완료되면 코드 검토를 위해 변경 사항이 준비됩니다. Workflow는 웹 UI를 통해 통합 코드 검토를 제공합니다. 또한 기존 코드 검토 워크 플로가있는 팀을 위해 GitHub 및 Bitbucket Server (Atlassian 제공)와의 통합이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2494b7da406959bfbf8024d0427288a86b3bcef2" translate="yes" xml:space="preserve">
          <source>When the above profile is executed by using &lt;code&gt;inspec exec rock_critic&lt;/code&gt;, you would see something like:</source>
          <target state="translated">&lt;code&gt;inspec exec rock_critic&lt;/code&gt; 을 사용하여 위의 프로필을 실행 하면 다음과 같은 내용이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a0f036eed5b120a47413b3fb1a9a6777e1115ba2" translate="yes" xml:space="preserve">
          <source>When the active backup server fails, DRBD on the master will continue to function in primary mode, whether the DRBD on the secondary was shut down gracefully or became unavailable unexpectedly. Verify that DRBD is functioning by running &lt;code&gt;drbdadm role pc0&lt;/code&gt; on the primary:</source>
          <target state="translated">활성 백업 서버에 장애가 발생하면 보조의 DRBD가 정상적으로 종료되었거나 예기치 않게 사용할 수 없게되었는지 여부에 관계없이 마스터의 DRBD는 기본 모드에서 계속 작동합니다. 다음을 실행하여 DRBD가 작동하는지 확인하십시오. &lt;code&gt;drbdadm role pc0&lt;/code&gt; 기본 drbdadm role pc0 을 .</target>
        </trans-unit>
        <trans-unit id="b2d7744f08c567c721d83bfaf28292724e3802df" translate="yes" xml:space="preserve">
          <source>When the bootstrap operation is finished, do the following:</source>
          <target state="translated">부트 스트랩 작업이 완료되면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e43128a9caee4fd85b4c170ecb642ca669c65c50" translate="yes" xml:space="preserve">
          <source>When the change has passed &lt;strong&gt;Verify&lt;/strong&gt;, approve change, or get someone to, by clicking &lt;strong&gt;Approve&lt;/strong&gt; in Chef Automate web UI. Doing this marks you as the &amp;ldquo;Signed-off-by&amp;rdquo; user of the change.</source>
          <target state="translated">변경 사항이 &lt;strong&gt;확인&lt;/strong&gt; 을 통과 하면 Chef Automate 웹 UI에서 &lt;strong&gt;승인&lt;/strong&gt; 을 클릭하여 변경 사항을 &lt;strong&gt;확인&lt;/strong&gt; 하거나 승인하거나 다른 사람을 가져옵니다 . 이렇게하면 변경 사항의 &quot;서명 된&quot;사용자로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="fdadf7b5a8fcadd02c91ba795099f4be3675775f" translate="yes" xml:space="preserve">
          <source>When the change occurred.</source>
          <target state="translated">변경이 발생했을 때.</target>
        </trans-unit>
        <trans-unit id="389c15389fe9e50c6af22b4997696a294b7307e9" translate="yes" xml:space="preserve">
          <source>When the chef-client is installed using RubyGems or a package manager, chef-shell should already be installed. When the chef-client is run from a git clone, it will be located in &lt;code&gt;chef/bin/chef shell&lt;/code&gt;. To start chef-shell, just run it without any options. You&amp;rsquo;ll see the loading message, then the banner, and then the chef-shell prompt:</source>
          <target state="translated">Chef-Client가 RubyGems 또는 패키지 관리자를 사용하여 설치되면 chef-shell이 ​​이미 설치되어 있어야합니다. chef-client가 git clone에서 실행되면 다음 위치에 있습니다. &lt;code&gt;chef/bin/chef shell&lt;/code&gt; 에 위치 합니다. 요리사 껍질을 시작하려면 옵션없이 실행하십시오. 로딩 메시지, 배너 및 셰프 쉘 프롬프트가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4d65c6ecbbc2e3768146274b07f23fb57416c7d6" translate="yes" xml:space="preserve">
          <source>When the chef-client is installed using an unattended bootstrap, it is typically built into an image that starts the chef-client on boot. The type of image used depends on the platform on which the unattended bootstrap will take place.</source>
          <target state="translated">셰프 클라이언트가 무인 부트 스트랩을 사용하여 설치되면 일반적으로 부트시 셰프 클라이언트를 시작하는 이미지에 내장됩니다. 사용되는 이미지 유형은 무인 부트 스트랩이 발생하는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="83bfd6a4bffd06be2ced30d7818003434492fffe" translate="yes" xml:space="preserve">
          <source>When the chef-client is installed using an unattended bootstrap, remember that the chef-client:</source>
          <target state="translated">요리사 클라이언트가 무인 부트 스트랩을 사용하여 설치되는 경우 요리사 클라이언트는 다음을 기억하십시오.</target>
        </trans-unit>
        <trans-unit id="03b5c3de24213db96739960d92a12b9fdb28ee6f" translate="yes" xml:space="preserve">
          <source>When the chef-client is run as a daemon, the following signals may be used:</source>
          <target state="translated">chef-client가 디먼으로 실행될 때 다음 신호가 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="626aaa3ddfb7288466cf6d37bb5b93aece9a7122" translate="yes" xml:space="preserve">
          <source>When the chef-client is run as a non-root user the chef-client can perform any action allowed to that user, as long as that action does not also require elevated privileges (such as sudo or pbrun). Attempts to manage any object that requires elevated privileges will result in an error. For example, when the chef-client is run as a non-root user that is unable to create or modify users, the &lt;strong&gt;user&lt;/strong&gt; resource will not work.</source>
          <target state="translated">chef-client가 루트가 아닌 사용자로 실행되는 경우 chef-client는 조치에 상승 된 특권 (예 : sudo 또는 pbrun)이 필요하지 않은 한 해당 사용자에게 허용 된 모든 조치를 수행 할 수 있습니다. 높은 권한이 필요한 개체를 관리하려고하면 오류가 발생합니다. 예를 들어, chef-client가 사용자를 작성하거나 수정할 수없는 비 루트 사용자로 실행되면 &lt;strong&gt;사용자&lt;/strong&gt; 자원이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="167cfbb3426feecf99d56ab0b37f11ead19c2ae7" translate="yes" xml:space="preserve">
          <source>When the chef-client is run in why-run mode, certain assumptions are made:</source>
          <target state="translated">요리사 클라이언트가 왜 실행 모드에서 실행될 때 다음과 같은 가정이 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="1e7b5fb4e00d5780e07fc3ef8c7b3bbeb752d290" translate="yes" xml:space="preserve">
          <source>When the chef-client runs, the &lt;strong&gt;remote_directory&lt;/strong&gt; resource will tell the chef-client to copy the directory tree from the cookbook to the file system using the structure defined in cookbook:</source>
          <target state="translated">chef-client가 실행될 때, &lt;strong&gt;remote_directory&lt;/strong&gt; 자원은 &lt;strong&gt;cook&lt;/strong&gt; -client가 cookbook에 정의 된 구조를 사용하여 요리 책에서 파일 시스템으로 디렉토리 트리를 복사하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="fb370cd6ef0a9e30b7a6d04d99679cd15d5a6f78" translate="yes" xml:space="preserve">
          <source>When the chef-repo is cloned from GitHub, the following occurs:</source>
          <target state="translated">chef-repo가 ​​GitHub에서 복제되면 다음이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9ed4ec6fc07ba39f07ccf2500790b2f6982ab50a" translate="yes" xml:space="preserve">
          <source>When the chef-shell DSL is available, the Chef Infra Client DSL will not be (unless the management workstation is also a Chef Infra Client). Without the Chef Infra Client DSL, a bash block cannot be used to run bash commands.</source>
          <target state="translated">chef-shell DSL을 사용할 수있는 경우 Chef Infra Client DSL은 사용할 수 없습니다 (관리 워크 스테이션이 Chef Infra Client이기도 한 경우 제외). Chef Infra Client DSL이 없으면 bash 블록을 사용하여 bash 명령을 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7d3b9fe2bc043147aecf9e5b17083a7d629b68f6" translate="yes" xml:space="preserve">
          <source>When the chef-shell DSL is available, the chef-client DSL will not be (unless the management workstation is also a chef-client). Without the chef-client DSL, a bash block cannot be used to run bash commands.</source>
          <target state="translated">쉐프 쉘 DSL을 사용할 수 있으면 쉐프 클라이언트 DSL을 사용할 수 없습니다 (관리 워크 스테이션도 쉐프 클라이언트가 아닌 경우). chef-client DSL이 없으면 bash 블록을 사용하여 bash 명령을 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5d127268ed6a0c3fd54ad6395e66f1078d99e305" translate="yes" xml:space="preserve">
          <source>When the command completes, you can access the web UI by browsing to &lt;code&gt;https://chef-automate.test/&lt;/code&gt;.</source>
          <target state="translated">명령이 완료되면 &lt;code&gt;https://chef-automate.test/&lt;/code&gt; 로 이동하여 웹 UI에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6442b986e0ee6efc0b7c7f967d202b599c52fdbc" translate="yes" xml:space="preserve">
          <source>When the contents of a data bag item are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a knife command similar to:</source>
          <target state="translated">데이터 백 항목의 내용이 암호화되면 해독 될 때까지 읽을 수 없습니다. 다음과 유사한 knife 명령으로 암호화를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de92db0f84488f1505efba7a2d38a42613e82803" translate="yes" xml:space="preserve">
          <source>When the cookbook is finished, move those changes to the production environment and use the &lt;code&gt;--freeze&lt;/code&gt; option to prevent others from making further changes:</source>
          <target state="translated">요리 책이 끝나면 변경 사항을 프로덕션 환경으로 &lt;code&gt;--freeze&lt;/code&gt; 옵션을 사용하여 다른 사람들이 더 이상 변경하지 못하게하십시오.</target>
        </trans-unit>
        <trans-unit id="51d79746086aef87c08c7e2a0e1264d92ec00eab" translate="yes" xml:space="preserve">
          <source>When the cookbooks pass all the acceptance tests and have been verified to work in the desired manner, deploy the cookbooks to the production environment.</source>
          <target state="translated">쿡북이 모든 승인 테스트를 통과하고 원하는 방식으로 작동하는 것으로 확인되면 쿡북을 프로덕션 환경에 배포합니다.</target>
        </trans-unit>
        <trans-unit id="46752f584e4bcc2c0112b46d6709d382b1fe2435" translate="yes" xml:space="preserve">
          <source>When the data collector cannot send the &quot;starting a run&quot; message to the data collector server, the data collector will be disabled for that run. In some situations, such as highly-regulated environments, it may be more reasonable to Prevents data collection when the data collector cannot send the &quot;starting a run&quot; message to the data collector server. In these situations, setting this value to &lt;code&gt;true&lt;/code&gt; will cause the Chef run to raise an exception before starting any converge activities.</source>
          <target state="translated">데이터 수집기가 데이터 수집기 ​​서버에 &quot;실행 시작&quot;메시지를 보낼 수없는 경우 해당 실행에 대해 데이터 수집기가 비활성화됩니다. 고도로 규제 된 환경과 같은 일부 상황에서는 데이터 수집기가 데이터 수집기 ​​서버에 &quot;실행 시작&quot;메시지를 보낼 수없는 경우 데이터 수집을 방지하는 것이 더 합리적 일 수 있습니다. 이러한 상황에서이 값을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 수렴 활동을 시작하기 전에 Chef 실행에서 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7a0e7c39d713ffc84674113f9bbf03869154d17f" translate="yes" xml:space="preserve">
          <source>When the data collector cannot send the &amp;ldquo;starting a run&amp;rdquo; message to the data collector server, the data collector will be disabled for that run. In some situations, such as highly-regulated environments, it may be more reasonable to Prevents data collection when the data collector cannot send the &amp;ldquo;starting a run&amp;rdquo; message to the data collector server. In these situations, setting this value to &lt;code&gt;true&lt;/code&gt; will cause the Chef run to raise an exception before starting any converge activities.</source>
          <target state="translated">데이터 수집기가 데이터 수집기 ​​서버에 &quot;실행 시작&quot;메시지를 보낼 수없는 경우 해당 실행에 대해 데이터 수집기가 비활성화됩니다. 고도로 규제 된 환경과 같은 일부 상황에서는 데이터 수집기가 데이터 수집기 ​​서버에 &quot;실행 시작&quot;메시지를 보낼 수없는 경우 데이터 수집을 방지하는 것이 더 합리적 일 수 있습니다. 이러한 상황에서이 값을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 수렴 활동을 시작하기 전에 Chef 실행에서 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5825e9075f7edfc4d855d37e79e2f344ef81c426" translate="yes" xml:space="preserve">
          <source>When the default attribute precedence &lt;code&gt;node['foo']['bar']&lt;/code&gt; is removed:</source>
          <target state="translated">기본 속성 우선 순위 &lt;code&gt;node['foo']['bar']&lt;/code&gt; 가 제거 된 경우 :</target>
        </trans-unit>
        <trans-unit id="26fbe442b9eddbb8f1ca7e4dcd6eccc2917afb1e" translate="yes" xml:space="preserve">
          <source>When the disks return to a synced state, that field will return to &lt;code&gt;0&lt;/code&gt;. While the secondary is syncing, status about the syncing process will be shown for both hosts. For the secondary, something like the following:</source>
          <target state="translated">디스크가 동기화 된 상태로 돌아 오면 해당 필드는 &lt;code&gt;0&lt;/code&gt; 으로 돌아갑니다. . 보조가 동기화하는 동안 동기화 프로세스에 대한 상태가 두 호스트 모두에 표시됩니다. 보조의 경우 다음과 같은 것이 있습니다.</target>
        </trans-unit>
        <trans-unit id="505e34d15fb0214908b5217d20fb148c57d4d03c" translate="yes" xml:space="preserve">
          <source>When the file does not exist, the &lt;code&gt;IO.write(new_resource.path, new_resource.content)&lt;/code&gt; code is executed and the Chef Infra Client output will print something similar to:</source>
          <target state="translated">파일이 없으면 &lt;code&gt;IO.write(new_resource.path, new_resource.content)&lt;/code&gt; 코드가 실행되고 Chef Infra Client 출력은 다음과 유사한 내용을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="f20a2610ec0a50d232c0acc8dc8b69c8ce1957f1" translate="yes" xml:space="preserve">
          <source>When the file does not exist, the &lt;code&gt;IO.write(path, content)&lt;/code&gt; code is executed and the chef-client output will print something similar to:</source>
          <target state="translated">파일이 존재하지 않으면 &lt;code&gt;IO.write(path, content)&lt;/code&gt; 코드가 실행되고 chef-client 출력은 다음과 유사한 내용을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="10df73961c8509132258437ec5073536a2b6f027" translate="yes" xml:space="preserve">
          <source>When the final &lt;strong&gt;Delivered&lt;/strong&gt; stage is passed, GitHub updates the &lt;strong&gt;Delivery Status&lt;/strong&gt; at the top of the GitHub webui page.</source>
          <target state="translated">최종 &lt;strong&gt;Delivered&lt;/strong&gt; 단계가 통과되면 GitHub 는 GitHub 웹 UI 페이지 상단에서 &lt;strong&gt;Delivery Status&lt;/strong&gt; 를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="ef6642f150e5859264a70cc034044405ee76da71" translate="yes" xml:space="preserve">
          <source>When the last scan occurred</source>
          <target state="translated">마지막 스캔이 발생한시기</target>
        </trans-unit>
        <trans-unit id="7c5bdde3d237d61063aefa4671ab2546c8040d65" translate="yes" xml:space="preserve">
          <source>When the list is exhausted, start the loop again.</source>
          <target state="translated">목록이 소진되면 루프를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="85016d21d76fb0d302fbf2918404991d75975bba" translate="yes" xml:space="preserve">
          <source>When the operating system disk is created, how it was created is set as a property. This property returns how the disk was created.</source>
          <target state="translated">운영 체제 디스크가 생성되면 생성 방법이 속성으로 설정됩니다. 이 속성은 디스크가 생성 된 방법을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="630d6a8d896f597dcc90f1d35102901e40275021" translate="yes" xml:space="preserve">
          <source>When the options have been set as well as the environment variables, the environment variables take priority.</source>
          <target state="translated">옵션과 환경 변수가 설정되면 환경 변수가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="ba39ac27c34315b8340184a668b65ef4370673dd" translate="yes" xml:space="preserve">
          <source>When the package config changes, after the &lt;code&gt;init&lt;/code&gt; hook has been called, but before a &lt;code&gt;reconfigure&lt;/code&gt; hook is called.</source>
          <target state="translated">패키지 구성이 변경되면 &lt;code&gt;init&lt;/code&gt; 후크가 호출 된 후 &lt;code&gt;reconfigure&lt;/code&gt; 후크가 호출 되기 전 입니다.</target>
        </trans-unit>
        <trans-unit id="1cdfaffd2dd0f74d13c911f3ec7f71b291e3e79a" translate="yes" xml:space="preserve">
          <source>When the primary Chef server in the cluster fails, the VRRP heartbeat will stop. At this point, the backup server will begin transitioning to the primary state by:</source>
          <target state="translated">클러스터의 기본 Chef 서버가 실패하면 VRRP 하트 비트가 중지됩니다. 이 시점에서 백업 서버는 다음을 통해 기본 상태로 전환하기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="cef8e27229ef66ef4c1dd8f059d18f17bc750c8a" translate="yes" xml:space="preserve">
          <source>When the primary back-end server has been lost while the secondary back-end server is in an &lt;code&gt;Inconsistent&lt;/code&gt; state and it&amp;rsquo;s not going to be back online quickly, the best thing to do is to provision another host to become the new Chef server cluster partner for the secondary back-end server, and then build it out. If the new host has an IP address that is different from the primary back-end server, change the configuration on the secondary back-end server, and then reconfigure.</source>
          <target state="translated">보조 백엔드 서버가 &lt;code&gt;Inconsistent&lt;/code&gt; 동안 기본 백엔드 서버가 유실 된 경우 상태 온라인으로 빠르게 돌아 오지 않을 경우 다른 호스트를 새로운 Chef 서버 클러스터 파트너로 프로비저닝하는 것이 가장 좋습니다. 보조 백엔드 서버의 경우이를 빌드하십시오. 새 호스트에 기본 백엔드 서버와 다른 IP 주소가있는 경우 보조 백엔드 서버에서 구성을 변경 한 후 다시 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="caa12119d01ae928a37da9a779df65ffdcd35df2" translate="yes" xml:space="preserve">
          <source>When the publish phase is run, an application is created, versioned by timestamp, and including all of the information needed to install that version of the application. The provisioning code in &lt;code&gt;delivery-truck&lt;/code&gt; will automatically pin based on this version.</source>
          <target state="translated">게시 단계가 실행되면 애플리케이션이 생성되고 타임 스탬프에 따라 버전이 지정되며 해당 버전의 애플리케이션을 설치하는 데 필요한 모든 정보가 포함됩니다. &lt;code&gt;delivery-truck&lt;/code&gt; 의 프로비저닝 코드는 이 버전을 기반으로 자동으로 고정됩니다.</target>
        </trans-unit>
        <trans-unit id="e30b0b881c64e84c64dd9a1c06a7b5153507e12d" translate="yes" xml:space="preserve">
          <source>When the pull request has passed the &lt;strong&gt;Acceptance&lt;/strong&gt; stage, GitHub will add another message indicating that that the &lt;code&gt;deliver&lt;/code&gt; command must be issued for the pipeline to proceed. When this message appears, enter &lt;code&gt;@delivery deliver&lt;/code&gt; in the comment box.</source>
          <target state="translated">pull 요청이 &lt;strong&gt;Acceptance&lt;/strong&gt; 단계 를 통과하면 GitHub는 파이프 라인을 진행 하려면 &lt;code&gt;deliver&lt;/code&gt; 명령을 실행해야 함을 나타내는 또 다른 메시지를 추가 합니다. 이 메시지가 나타나면 설명 상자에 &lt;code&gt;@delivery deliver&lt;/code&gt; y를 입력 합니다.</target>
        </trans-unit>
        <trans-unit id="b1ee6a8719f4940fe1c9ac891b52dd19fc0ac65c" translate="yes" xml:space="preserve">
          <source>When the request body size is greater than this value, a 413 Request Entity Too Large error is returned. Default value: &lt;code&gt;2000000&lt;/code&gt;.</source>
          <target state="translated">요청 본문 크기가이 값보다 크면 413 Request Entity Too Large 오류가 반환됩니다. 기본값 : &lt;code&gt;2000000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24fa8c38285384f02a425c63c92293e3971bb026" translate="yes" xml:space="preserve">
          <source>When the request body size is greater than this value, a &lt;code&gt;413 Request Entity Too Large&lt;/code&gt; error is returned. Default value: &lt;code&gt;2000000&lt;/code&gt;.</source>
          <target state="translated">요청 본문 크기가이 값보다 크면 &lt;code&gt;413 Request Entity Too Large&lt;/code&gt; 오류가 반환됩니다. 기본값 : &lt;code&gt;2000000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80bb3b5f648a1b718b8345032324952352525b26" translate="yes" xml:space="preserve">
          <source>When the search for a user directory entry has succeeded, the LDAP connector will attempt to bind as the user entry, using the supplied password.</source>
          <target state="translated">사용자 디렉토리 항목 검색이 성공하면 LDAP 커넥터는 제공된 비밀번호를 사용하여 사용자 항목으로 바인드하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="a947e90d80b660897fbf0e97d52cef9ed9798dd5" translate="yes" xml:space="preserve">
          <source>When the secondary becomes available again, two things may happen:</source>
          <target state="translated">보조가 다시 사용 가능 해지면 두 가지 일이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29538ad0f3537628db0a272f8d13e0202c34b575" translate="yes" xml:space="preserve">
          <source>When the sync completes successfully the file is removed. If the sync fails, the file will remain in place, the node will be placed in a &lt;code&gt;waiting_for_leader&lt;/code&gt; state, and will report as leader ineligible. The cluster will report an unhealthy status until the issue is resolved.</source>
          <target state="translated">동기화가 성공적으로 완료되면 파일이 제거됩니다. 동기화가 실패하면 파일은 그대로 유지되고 노드는 &lt;code&gt;waiting_for_leader&lt;/code&gt; 상태가되며 리더가 부적격 한 것으로보고됩니다. 클러스터는 문제가 해결 될 때까지 비정상 상태를보고합니다.</target>
        </trans-unit>
        <trans-unit id="25a9c7f4bcb5a28a49d89e2bae95b57a324b2aff" translate="yes" xml:space="preserve">
          <source>When the system process limits are too low, an error is returned similar to:</source>
          <target state="translated">시스템 프로세스 한계가 너무 낮 으면 다음과 유사한 오류가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7edd1f86ae5afd6980dbf8067a3e42c324b62ca0" translate="yes" xml:space="preserve">
          <source>When the tar.gz archive contains all of the cookbooks required by chef-solo, upload it to the web server from which chef-solo will access the archive.</source>
          <target state="translated">tar.gz 아카이브에 chef-solo에 필요한 모든 요리 책이 포함되어 있으면 chef-solo가 아카이브에 액세스 할 웹 서버에 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="958dc6ffb0c21aae2686f7cf6683f78526450bc9" translate="yes" xml:space="preserve">
          <source>When the user search is executed successfully, but fails to return a useful user record, the browser will show the sign in prompt with an error banner saying</source>
          <target state="translated">사용자 검색이 성공적으로 실행되었지만 유용한 사용자 레코드를 반환하지 못하면 브라우저에 다음과 같은 오류 배너와 함께 로그인 프롬프트가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3ef121261530b6799fa7ad67f8b3edbb4f36f979" translate="yes" xml:space="preserve">
          <source>When the values for certain settings in the client.rb file&amp;mdash;&lt;code&gt;node_name&lt;/code&gt; and &lt;code&gt;client_key&lt;/code&gt;&amp;mdash;are incorrect, it will not be possible to authenticate to the Chef Infra Server. An error similar to the following is shown:</source>
          <target state="translated">client.rb 파일 ( &lt;code&gt;node_name&lt;/code&gt; 및 &lt;code&gt;client_key&lt;/code&gt; ) 의 특정 설정 값이 올바르지 않으면 Chef Infra Server에 인증 할 수 없습니다. 다음과 유사한 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="77742ba9d4441c9cd6ebfcc2dc3a742b4ac97778" translate="yes" xml:space="preserve">
          <source>When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if &lt;code&gt;automatic_attribute_whitelist&lt;/code&gt; defines attributes to be saved, but &lt;code&gt;normal_attribute_whitelist&lt;/code&gt;, &lt;code&gt;default_attribute_whitelist&lt;/code&gt;, and &lt;code&gt;override_attribute_whitelist&lt;/code&gt; are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes.</source>
          <target state="translated">이러한 설정을 사용하면 화이트리스트에 정의되지 않은 속성은 저장되지 않습니다. 각 속성 유형은 다른 속성 유형과 독립적으로 화이트리스트에 추가됩니다. 예를 들어, &lt;code&gt;automatic_attribute_whitelist&lt;/code&gt; 가 저장할 속성을 정의하지만 &lt;code&gt;normal_attribute_whitelist&lt;/code&gt; , &lt;code&gt;default_attribute_whitelist&lt;/code&gt; 및 &lt;code&gt;override_attribute_whitelist&lt;/code&gt; 가 정의되지 않은 경우 지정된 자동 속성과 함께 모든 normal, default 및 override 속성이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="e5789739ccf2de62068d17f54ec1fa108c85b3bc" translate="yes" xml:space="preserve">
          <source>When this approach is used, the client.rb file must also tell Chef Infra Client how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via RubyGems, though other methods such as GitHub or HTTP will also work. Once the handler is installed on the system, enable it in the client.rb file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named &lt;code&gt;MyOrg::EmailMe&lt;/code&gt; is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run.</source>
          <target state="translated">이 접근 방식을 사용하는 경우 client.rb 파일은 Chef Infra Client에 핸들러 설치 및 실행 방법을 알려야합니다. 핸들러의 기본 설치 위치는 없습니다. 배포하고 설치하는 가장 간단한 방법은 RubyGems를 사용하는 것이지만 GitHub 또는 HTTP와 같은 다른 방법도 작동합니다. 핸들러가 시스템에 설치되면이를 요구하여 client.rb 파일에서 활성화합니다. 핸들러를 설치 한 후 추가 구성이 필요할 수 있습니다. 이는 핸들러마다 다릅니다. 핸들러가 매우 단순한 핸들러 인 경우 새 인스턴스를 생성하기 만하면됩니다. 예를 들어 &lt;code&gt;MyOrg::EmailMe&lt;/code&gt; 라는 핸들러가이메일을 보내는 데 필요한 모든 값에 대해 하드 코딩 된 경우 새 인스턴스가 필요합니다. 그런 다음 사용자 지정 처리기는 실행될 각 처리기 유형과 연결되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e78bc6510ccf8d4739c5137f99df81be935db3dd" translate="yes" xml:space="preserve">
          <source>When this approach is used, the client.rb file must also tell the chef-client how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via RubyGems, though other methods such as GitHub or HTTP will also work. Once the handler is installed on the system, enable it in the client.rb file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named &lt;code&gt;MyOrg::EmailMe&lt;/code&gt; is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run.</source>
          <target state="translated">이 방법을 사용하는 경우 client.rb 파일은 또한 Chef-client에게 핸들러를 설치하고 실행하는 방법을 알려야합니다. 핸들러의 기본 설치 위치는 없습니다. 배포 및 설치하는 가장 간단한 방법은 RubyGems를 사용하는 것이지만 GitHub 또는 HTTP와 같은 다른 방법도 작동합니다. 핸들러가 시스템에 설치되면이를 요청하여 client.rb 파일에서 사용 가능하게하십시오. 핸들러가 설치된 후 추가 구성이 필요할 수 있습니다. 이것은 핸들러마다 다릅니다. 핸들러가 매우 간단한 핸들러 인 경우 새 인스턴스를 작성하기 만하면됩니다. 예를 들어 이름이 &lt;code&gt;MyOrg::EmailMe&lt;/code&gt; 처리기가이메일을 보내는 데 필요한 모든 값에 대해 하드 코딩되며 새 인스턴스가 필요합니다. 그런 다음 사용자 정의 핸들러는 실행될 각 핸들러 유형과 연관되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e182ed75137b0b4f2ccf4d45e03c4fd015a37d39" translate="yes" xml:space="preserve">
          <source>When this attribute &lt;strong&gt;is&lt;/strong&gt; specified, the supplied string will be sent as the &lt;code&gt;Host&lt;/code&gt; header on all requests. This may be required for some third-party Elasticsearch offerings.</source>
          <target state="translated">이 속성 &lt;strong&gt;이&lt;/strong&gt; 지정되면 제공된 문자열이 모든 요청 에서 &lt;code&gt;Host&lt;/code&gt; 헤더 로 전송됩니다 . 이는 일부 타사 Elasticsearch 제품에 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db3b0d487c1d3167554fcaf027b2e3195c6f4531" translate="yes" xml:space="preserve">
          <source>When this command is run, the certificate files (&lt;code&gt;*.crt&lt;/code&gt; and/or &lt;code&gt;*.pem&lt;/code&gt;) that are located in the &lt;code&gt;/.chef/trusted_certs&lt;/code&gt; directory are checked to see if they have valid X.509 certificate properties. A warning is returned when certificates do not have valid X.509 certificate properties or if the &lt;code&gt;/.chef/trusted_certs&lt;/code&gt; directory does not contain any certificates.</source>
          <target state="translated">이 명령이 실행되면 &lt;code&gt;/.chef/trusted_certs&lt;/code&gt; 디렉토리에 있는 인증서 파일 ( &lt;code&gt;*.crt&lt;/code&gt; 및 / 또는 &lt;code&gt;*.pem&lt;/code&gt; ) 이 유효한 X.509 인증서 특성이 있는지 확인합니다. 인증서에 유효한 X.509 인증서 속성이 없거나 &lt;code&gt;/.chef/trusted_certs&lt;/code&gt; 디렉토리에 인증서가없는 경우 경고가 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="2bdc44cbc8a44d20394ad10d22eee3657cdfd3bc" translate="yes" xml:space="preserve">
          <source>When this occurs, after the &lt;strong&gt;redis_lb&lt;/strong&gt; service started, it&amp;rsquo;s logs will show a statement similar to the following:</source>
          <target state="translated">이 경우 &lt;strong&gt;redis_lb&lt;/strong&gt; 서비스가 시작된 후 로그에 다음과 유사한 명령문이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="27d067785d24707738b012060f3b7d4ce5893d3b" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;:batch&lt;/code&gt;, the 64-bit version of the cmd.exe shell will be used to evaluate strings values for the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; properties. Set this value to &lt;code&gt;:default&lt;/code&gt; to use the 32-bit version of the cmd.exe shell.</source>
          <target state="translated">이 속성이 &lt;code&gt;:batch&lt;/code&gt; 로 설정 되면 64 비트 버전의 cmd.exe 셸이 &lt;code&gt;not_if&lt;/code&gt; 및 &lt;code&gt;only_if&lt;/code&gt; 속성에 대한 문자열 값을 평가하는 데 사용됩니다 . cmd.exe 셸의 32 비트 버전을 사용하려면 이 값을 &lt;code&gt;:default&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="5cfbe0dc1a47da02cf3b3df1438f295bfe6760b4" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;:powershell_script&lt;/code&gt;, the 64-bit version of the Windows PowerShell shell will be used to evaluate strings values for the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; properties. Set this value to &lt;code&gt;:default&lt;/code&gt; to use the 32-bit version of the cmd.exe shell.</source>
          <target state="translated">이 속성이 &lt;code&gt;:powershell_script&lt;/code&gt; 로 설정 되면 64 비트 버전의 Windows PowerShell 셸이 &lt;code&gt;not_if&lt;/code&gt; 및 &lt;code&gt;only_if&lt;/code&gt; 속성에 대한 문자열 값을 평가하는 데 사용됩니다 . cmd.exe 셸의 32 비트 버전을 사용하려면 이 값을 &lt;code&gt;:default&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="3c7a1b8354be8640578df1ac54df60841d646c08" translate="yes" xml:space="preserve">
          <source>When this recipe runs, Chef Infra Client will print something like the following:</source>
          <target state="translated">이 레시피가 실행되면 Chef Infra Client는 다음과 같은 내용을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="62873267d203abf8225df3a7a909506141461e71" translate="yes" xml:space="preserve">
          <source>When this recipe runs, the chef-client will print something like the following:</source>
          <target state="translated">이 레시피가 실행되면 요리사 클라이언트는 다음과 같은 것을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="be51d4127907ed93e42148a6a9cc2ebdd2a9f501" translate="yes" xml:space="preserve">
          <source>When this short name is used, the chef-client will attempt to determine the correct provider during the chef-client run.</source>
          <target state="translated">이 짧은 이름을 사용하면 요리사 클라이언트는 요리사 클라이언트 실행 중에 올바른 제공자를 결정하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="4d027b11bbc594358ff66b3b8c2121bd02602ac9" translate="yes" xml:space="preserve">
          <source>When this short name is used, the chef-client will determine the correct provider during the chef-client run.</source>
          <target state="translated">이 짧은 이름을 사용하면 요리사 클라이언트는 요리사 클라이언트 실행 중에 올바른 제공자를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="04fafabbbaa6e595cfbe9706a786d7b2f5686845" translate="yes" xml:space="preserve">
          <source>When to log a slow PostgreSQL query statement. Possible values: &lt;code&gt;-1&lt;/code&gt; (disabled, do not log any statements), &lt;code&gt;0&lt;/code&gt; (log every statement), or an integer greater than zero. When the integer is greater than zero, this value is the amount of time (in milliseconds) that a query statement must have run before it is logged. Default value: &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">느린 PostgreSQL 쿼리 문을 기록 할시기 가능한 값 : &lt;code&gt;-1&lt;/code&gt; (사용 안함, 명령문을 기록하지 않음), &lt;code&gt;0&lt;/code&gt; (모든 명령문을 기록함) 또는 0보다 큰 정수. 정수가 0보다 큰 경우이 값은 쿼리 명령문이 로그되기 전에 실행되어야하는 시간 (밀리 초)입니다. 기본 값 : &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="830f64d364ecaff9b64390b3e7ed2ed3083cb32b" translate="yes" xml:space="preserve">
          <source>When true this enables ENV magic to add path_sanity to the PATH and force the locale to English+UTF-8 for parsing output</source>
          <target state="translated">true이면 ENV 매직이 PATH에 path_sanity를 추가하고 출력을 구문 분석하기 위해 로케일을 English + UTF-8로 강제 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a777cac80f82bfb9713bf48a25b4ba0622068c6e" translate="yes" xml:space="preserve">
          <source>When used with create, will update the task.</source>
          <target state="translated">create와 함께 사용하면 작업이 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="c4dbab6cfd4e009cbd0f7678d4b35b32f342baf1" translate="yes" xml:space="preserve">
          <source>When used with the &lt;code&gt;:create&lt;/code&gt; action, a user&amp;rsquo;s home directory is created based on &lt;code&gt;HOME_DIR&lt;/code&gt;. If the home directory is missing, it is created unless &lt;code&gt;CREATE_HOME&lt;/code&gt; in &lt;code&gt;/etc/login.defs&lt;/code&gt; is set to &lt;code&gt;no&lt;/code&gt;. When created, a skeleton set of files and subdirectories are included within the home directory.</source>
          <target state="translated">&lt;code&gt;:create&lt;/code&gt; 작업 과 함께 사용하면 &lt;code&gt;HOME_DIR&lt;/code&gt; 을 기반으로 사용자의 홈 디렉토리가 생성됩니다 . 홈 디렉토리가없는 경우를 제외 작성됩니다 &lt;code&gt;CREATE_HOME&lt;/code&gt; 에서 &lt;code&gt;/etc/login.defs&lt;/code&gt; 로 설정되어 &lt;code&gt;no&lt;/code&gt; . 생성되면 파일 및 하위 디렉토리의 골격 세트가 홈 디렉토리에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="79995122a5b30c4f1433f5682df285abc1887e37" translate="yes" xml:space="preserve">
          <source>When used with the &lt;code&gt;:modify&lt;/code&gt; action, a user&amp;rsquo;s home directory is moved to &lt;code&gt;HOME_DIR&lt;/code&gt;. If the home directory is missing, it is created unless &lt;code&gt;CREATE_HOME&lt;/code&gt; in &lt;code&gt;/etc/login.defs&lt;/code&gt; is set to &lt;code&gt;no&lt;/code&gt;. The contents of the user&amp;rsquo;s home directory are moved to the new location.</source>
          <target state="translated">&lt;code&gt;:modify&lt;/code&gt; 작업 과 함께 사용 하면 사용자의 홈 디렉토리가 &lt;code&gt;HOME_DIR&lt;/code&gt; 로 이동됩니다 . 홈 디렉토리가없는 경우를 제외 작성됩니다 &lt;code&gt;CREATE_HOME&lt;/code&gt; 에서 &lt;code&gt;/etc/login.defs&lt;/code&gt; 로 설정되어 &lt;code&gt;no&lt;/code&gt; . 사용자의 홈 디렉토리 내용이 새 위치로 이동됩니다.</target>
        </trans-unit>
        <trans-unit id="18bc2797d66f62a3470719935aa7dd21f8724265" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;mkpasswd&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;mkpasswd&lt;/code&gt; 를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="1fe960069d8ea761064487996c543db484aa9e62" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;postfix_conf&lt;/code&gt; with a custom configuration directory, the following syntax can be used:</source>
          <target state="translated">사용자 정의 구성 디렉토리와 함께 &lt;code&gt;postfix_conf&lt;/code&gt; 를 사용할 때 다음 구문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62b2852a3545d5a0e3f8651e0ee34e48bc9ac6a8" translate="yes" xml:space="preserve">
          <source>When using Amazon Web Services (AWS), rules for security groups are preventing the Chef Infra Server from communicating with PostgreSQL</source>
          <target state="translated">Amazon Web Services (AWS)를 사용할 때 보안 그룹에 대한 규칙으로 인해 Chef Infra Server가 PostgreSQL과 통신하지 못함</target>
        </trans-unit>
        <trans-unit id="08f5156e332137e9f057b181adbef0d2fe638e19" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;#matcher&quot;&gt;matcher&lt;/a&gt;, the &lt;em&gt;&lt;code&gt;expected result&lt;/code&gt;&lt;/em&gt; is the value the matcher will compare against the &lt;a href=&quot;#property&quot;&gt;property&lt;/a&gt; being accessed.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;#matcher&quot;&gt;정규를&lt;/a&gt; 의 &lt;em&gt; &lt;code&gt;expected result&lt;/code&gt; &lt;/em&gt; 정규 표현 엔진은 비교할 것이다 값 &lt;a href=&quot;#property&quot;&gt;속성&lt;/a&gt; 에 액세스하고.</target>
        </trans-unit>
        <trans-unit id="0463b9900a807af4cd5e003439448c6f98650018" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;#plural-resource&quot;&gt;plural resource&lt;/a&gt;, a &lt;em&gt;&lt;code&gt;filter criterion&lt;/code&gt;&lt;/em&gt; is used to select individual test subjects within a &lt;a href=&quot;#filter-statement&quot;&gt;filter statement&lt;/a&gt;. You may use multiple &lt;em&gt;&lt;code&gt;filter criteria&lt;/code&gt;&lt;/em&gt; in a single filter statement.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;#plural-resource&quot;&gt;, 복수의 자원을&lt;/a&gt; 하는 &lt;em&gt; &lt;code&gt;filter criterion&lt;/code&gt; &lt;/em&gt; 내의 개별 피험자 선택하는 데 사용되는 &lt;a href=&quot;#filter-statement&quot;&gt;필터 문&lt;/a&gt; . 단일 필터 문에서 여러 &lt;em&gt; &lt;code&gt;filter criteria&lt;/code&gt; &lt;/em&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8ae65d548c85f4609163763209e58cf6d70f94a8" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;#plural-resource&quot;&gt;plural resource&lt;/a&gt;, a &lt;em&gt;&lt;code&gt;filter statement&lt;/code&gt;&lt;/em&gt; is used to select individual test subjects using &lt;a href=&quot;#filter-criteria&quot;&gt;filter criteria&lt;/a&gt;. A filter statement almost always is indicated by the keyword &lt;code&gt;where&lt;/code&gt;, and may be repeated using method chaining.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;#plural-resource&quot;&gt;복수의 자원을&lt;/a&gt; 하는 &lt;em&gt; &lt;code&gt;filter statement&lt;/code&gt; &lt;/em&gt; 사용하여 개별 시험 과목을 선택하는 데 사용되는 &lt;a href=&quot;#filter-criteria&quot;&gt;필터 기준을&lt;/a&gt; . 필터 문은 거의 항상 &lt;code&gt;where&lt;/code&gt; 키워드 로 표시되며 메서드 체인을 사용하여 반복 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e957506134d82db60a6121717c905c147be6f0e" translate="yes" xml:space="preserve">
          <source>When using a metalink file, the metalink must always be newer than the metadata for the repository due to the validation, so this timeout also applies to the metalink file.</source>
          <target state="translated">metalink 파일을 사용하는 경우 유효성 검사로 인해 metalink는 항상 리포지토리의 메타 데이터보다 최신 버전이어야하므로이 시간 초과는 metalink 파일에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="eb68df1c0175ce27e82663ea5daab59da6f043f1" translate="yes" xml:space="preserve">
          <source>When using an explicit &lt;code&gt;gem_binary&lt;/code&gt;, options must be passed as a string. When not using an explicit &lt;code&gt;gem_binary&lt;/code&gt;, Chef Infra Client is forced to spawn a gems process to install the gems (which uses more system resources) when options are passed as a string. String options are passed verbatim to the gems command and should be specified just as if they were passed on a command line. For example, &lt;code&gt;--prerelease&lt;/code&gt; for a pre-release gem. &lt;strong&gt;Example&lt;/strong&gt;</source>
          <target state="translated">명시적인 &lt;code&gt;gem_binary&lt;/code&gt; 를 사용할 때 옵션은 문자열로 전달되어야합니다. 명시적인 &lt;code&gt;gem_binary&lt;/code&gt; 를 사용하지 않는 경우 Chef Infra Client는 옵션이 문자열로 전달 될 때 gem (더 많은 시스템 리소스 사용)을 설치하기 위해 gems 프로세스를 생성해야합니다. 문자열 옵션은 gems 명령에 그대로 전달되며 명령 줄에서 전달 된 것처럼 지정해야합니다. 예를 들어, 출시 전 gem의 경우 &lt;code&gt;--prerelease&lt;/code&gt; 입니다. &lt;strong&gt;예&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="112b3ca0ac91a967ddb00f9b7db21c6dc463f7c3" translate="yes" xml:space="preserve">
          <source>When using an explicit &lt;code&gt;gem_binary&lt;/code&gt;, options must be passed as a string. When not using an explicit &lt;code&gt;gem_binary&lt;/code&gt;, the chef-client is forced to spawn a gems process to install the gems (which uses more system resources) when options are passed as a string. String options are passed verbatim to the gems command and should be specified just as if they were passed on a command line. For example, &lt;code&gt;--prerelease&lt;/code&gt; for a pre-release gem.</source>
          <target state="translated">명시적인 &lt;code&gt;gem_binary&lt;/code&gt; 를 사용할 때 옵션은 문자열로 전달되어야합니다. 명시적인 &lt;code&gt;gem_binary&lt;/code&gt; 를 사용하지 않을 경우, 셰프 클라이언트는 옵션이 문자열로 전달 될 때 gem을 설치하기 위해 gem 프로세스를 생성해야합니다 (시스템 리소스를 더 많이 사용함). 문자열 옵션은 gems 명령에 그대로 전달되며 마치 명령 행에 전달 된 것처럼 지정해야합니다. 예를 들어, 시험판 젬의 경우 &lt;code&gt;--prerelease&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="68444e8675f5462ee4144db8e2c978173561c98f" translate="yes" xml:space="preserve">
          <source>When using anonymous bind:</source>
          <target state="translated">익명 바인딩을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="ff9b98fcb2f58e47bc773b360ea5b8739d6ad6ae" translate="yes" xml:space="preserve">
          <source>When using chef-client Local Mode, there are two ways to launch the internal Chef Zero server. Originally we launched it as a normal network service on localhost and then connected to it as per normal. Unfortunately this meant that any user or process on the machine could also connect to the Zero server during the converge and because Chef Zero has no authentication or authorization systems, they could potentially alter data mid-converge. We later added a &amp;ldquo;socketless&amp;rdquo; mode, which runs the Zero server completely internally and never exposes it on a real socket.</source>
          <target state="translated">chef-client 로컬 모드를 사용할 때 내부 Chef Zero 서버를 시작하는 방법에는 두 가지가 있습니다. 원래 우리는 localhost에서 일반 네트워크 서비스로 시작한 다음 정상적으로 연결되었습니다. 불행히도 이것은 컴퓨터의 모든 사용자 또는 프로세스가 수렴 중에 Zero 서버에 연결할 수 있음을 의미하며 Chef Zero에는 인증 또는 권한 부여 시스템이 없기 때문에 수렴 중에 데이터를 잠재적으로 변경할 수 있습니다. 나중에 Zero 서버를 완전히 내부적으로 실행하고 실제 소켓에 노출하지 않는 &quot;소켓리스&quot;모드를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="0b3c6fec9a7441a79eefca0805f4ebcac68bc564" translate="yes" xml:space="preserve">
          <source>When using local backups it is advised to mount a remote backup storage device to the aforementioned locations.</source>
          <target state="translated">로컬 백업을 사용하는 경우 앞서 언급 한 위치에 원격 백업 저장 장치를 마운트하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="901b83fe68a7c3ddb30041341e9d5f27fd54abbd" translate="yes" xml:space="preserve">
          <source>When using more than 25 nodes, a configuration change to your Chef server needs to be made in order for your Chef server to be properly configured and recognize your purchased licenses. You will need to edit to your &lt;code&gt;chef-server.rb&lt;/code&gt; file by following the process below:</source>
          <target state="translated">25 개 이상의 노드를 사용하는 경우 Chef 서버를 올바르게 구성하고 구매 한 라이센스를 인식하려면 Chef 서버의 구성을 변경해야합니다. 아래 프로세스에 따라 &lt;code&gt;chef-server.rb&lt;/code&gt; 파일 을 편집해야 합니다.</target>
        </trans-unit>
        <trans-unit id="77f35938f9eb460d5cc91795bb44090996536344" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;chef_gem&lt;/code&gt; resource, the phase to install the gem in must be specified.</source>
          <target state="translated">&lt;code&gt;chef_gem&lt;/code&gt; 리소스를 사용할 때 gem을 설치할 단계를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b249f284c80a3b64f8de6c2ce7dc7531ea896dc9" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;deploy_revision&lt;/code&gt; provider, and when the deploy fails for any reason, and when the same code is used to re-deploy, the action should be set manually to &lt;code&gt;:force_deploy&lt;/code&gt;. Forcing the re-deploy will remove the old release directory, after which the deploy can proceed as usual. (Forcing a re-deploy over the current release can cause some downtime.) Deployed revisions are stored in &lt;code&gt;(file_cache_path)/revision-deploys/(deploy_path)&lt;/code&gt;.</source>
          <target state="translated">사용시 &lt;code&gt;deploy_revision&lt;/code&gt; 의 공급자 및 배포시 어떤 이유로 실패와 동일한 코드가 다시 배포하는 데 사용되는 경우, 동작은 수동으로 설정되어야한다 &lt;code&gt;:force_deploy&lt;/code&gt; . 재배치를 강제 실행하면 이전 릴리스 디렉토리가 제거되고 그 후에 배치가 평소대로 진행될 수 있습니다. (현재 릴리스에 대한 재배포를 강제 실행하면 다운 타임이 발생할 수 있습니다.) 배포 된 개정은 &lt;code&gt;(file_cache_path)/revision-deploys/(deploy_path)&lt;/code&gt; 에 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="ca14525c39c2d0efd9bd2cdae1403dd312d854dd" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;launchd&lt;/code&gt; resource and passing a hash for the launchd property list, use the &lt;code&gt;plist_hash&lt;/code&gt; property instead of the &lt;code&gt;hash&lt;/code&gt; property.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;launchd&lt;/code&gt; 에의 자원과 launchd에 속성 목록의 해시를 전달 사용 &lt;code&gt;plist_hash&lt;/code&gt; 재산 대신 &lt;code&gt;hash&lt;/code&gt; 속성을.</target>
        </trans-unit>
        <trans-unit id="9b83abce04cb9c7d14595e1327103e2bc21adfc6" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; guards with the &lt;strong&gt;execute&lt;/strong&gt; resource, the current working directory property (&lt;code&gt;cwd&lt;/code&gt;) is &lt;strong&gt;not&lt;/strong&gt; inherited from the resource. For example:</source>
          <target state="translated">&lt;code&gt;not_if&lt;/code&gt; 및 &lt;code&gt;only_if&lt;/code&gt; 가드를 &lt;strong&gt;실행&lt;/strong&gt; 자원 과 함께 사용하는 경우 현재 작업 디렉토리 특성 ( &lt;code&gt;cwd&lt;/code&gt; )이 자원에서 상속 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="87701853d83048e930cf1473e6b0734e47b9176f" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;not_if&lt;/code&gt; and &lt;code&gt;only_if&lt;/code&gt; guards with the &lt;strong&gt;execute&lt;/strong&gt; resource, the guard&amp;rsquo;s environment is inherited from the resource&amp;rsquo;s environment. For example:</source>
          <target state="translated">&lt;strong&gt;실행&lt;/strong&gt; 리소스 와 함께 &lt;code&gt;not_if&lt;/code&gt; 및 &lt;code&gt;only_if&lt;/code&gt; 가드를 사용할 때 가드의 환경은 리소스의 환경에서 상속됩니다. 예를 들면 :&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a6dd6ef5c22fd72042124fc426295cdd5c0fe75" translate="yes" xml:space="preserve">
          <source>When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:</source>
          <target state="translated">레시피에서 데이터 백을 사용할 때 다음과 유사한 코드를 사용하여 레시피에서 해당 데이터에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e6247549bb04a90036c1b87a627f89530b663b7" translate="yes" xml:space="preserve">
          <source>When verification is finished in Workflow and the code has been reviewed and is ready to be merged, approve the change. The pull request will be merged and closed in Bitbucket. The feature branch will also be deleted in Bitbucket.</source>
          <target state="translated">워크 플로에서 확인이 완료되고 코드가 검토되고 병합 할 준비가되면 변경을 승인합니다. 풀 요청은 Bitbucket에서 병합 및 닫힙니다. 기능 브랜치는 Bitbucket에서도 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="166ee7aafadf3be9d3a89d7ff915a4a8894d4eb4" translate="yes" xml:space="preserve">
          <source>When verification is finished in Workflow, the code has been reviewed, and it is decided the change should never be approved, delete the change in Workflow; the pull request will be declined and closed in Bitbucket. The feature branch will also be deleted in Bitbucket.</source>
          <target state="translated">Workflow에서 확인이 완료되면 코드를 검토 한 후 변경을 승인해서는 안된다고 판단되면 Workflow에서 변경을 삭제합니다. 풀 요청이 거부되고 Bitbucket에서 닫힙니다. 기능 브랜치는 Bitbucket에서도 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="859778a97afd3d8dfd197153bea3a67c42d75942" translate="yes" xml:space="preserve">
          <source>When verification of a remote server&amp;rsquo;s SSL certificate is disabled, Chef Infra Client will issue a warning similar to &amp;ldquo;SSL validation of HTTPS requests is disabled. HTTPS connections are still encrypted, but Chef Infra Client is not able to detect forged replies or man-in-the-middle attacks.&amp;rdquo; To configure SSL for Chef Infra Client, set &lt;code&gt;ssl_verify_mode&lt;/code&gt; to &lt;code&gt;:verify_peer&lt;/code&gt; (recommended) &lt;strong&gt;or&lt;/strong&gt;&lt;code&gt;verify_api_cert&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the client.rb file.</source>
          <target state="translated">원격 서버의 SSL 인증서 확인이 비활성화되면 Chef Infra Client는&amp;ldquo;HTTPS 요청의 SSL 검증이 비활성화되어 있습니다. HTTPS 연결은 여전히 ​​암호화되어 있지만 Chef Infra Client는 위조 된 응답이나 중간자 공격을 감지 할 수 없습니다.&amp;rdquo; Chef Infra Client 용 SSL을 구성하려면 client.rb 파일에서 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 를 &lt;code&gt;:verify_peer&lt;/code&gt; (권장) &lt;strong&gt;또는 &lt;/strong&gt; &lt;code&gt;verify_api_cert&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0040c85f8abe58074c384781c6fd4b3223eb4ff7" translate="yes" xml:space="preserve">
          <source>When verification of a remote server&amp;rsquo;s SSL certificate is disabled, the chef-client will issue a warning similar to &amp;ldquo;SSL validation of HTTPS requests is disabled. HTTPS connections are still encrypted, but the chef-client is not able to detect forged replies or man-in-the-middle attacks.&amp;rdquo; To configure SSL for the chef-client, set &lt;code&gt;ssl_verify_mode&lt;/code&gt; to &lt;code&gt;:verify_peer&lt;/code&gt; (recommended) &lt;strong&gt;or&lt;/strong&gt;&lt;code&gt;verify_api_cert&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the client.rb file.</source>
          <target state="translated">원격 서버의 SSL 인증서 확인이 비활성화되면 chef-client는&amp;ldquo;HTTPS 요청의 SSL 유효성 검사가 비활성화되었습니다.와 유사한 경고를 발행합니다. HTTPS 연결은 여전히 ​​암호화되어 있지만 요리사 클라이언트는 위조 된 회신 또는 MITM (Man-in-the-Middle) 공격을 탐지 할 수 없습니다. &quot; 요리사 클라이언트에 대한 구성 SSL에, 세트 &lt;code&gt;ssl_verify_mode&lt;/code&gt; 에 &lt;code&gt;:verify_peer&lt;/code&gt; (권장) &lt;strong&gt;또는 &lt;/strong&gt; &lt;code&gt;verify_api_cert&lt;/code&gt; 에 &lt;code&gt;true&lt;/code&gt; client.rb 파일에.</target>
        </trans-unit>
        <trans-unit id="d68a93e4b0ec3ee9915d6ffe6494f4233db48d1a" translate="yes" xml:space="preserve">
          <source>When we wish to remove a feature or an API in Chef, we try to first mark it with a deprecation warning that contains a link to a description of the change and how to fix it. For example:</source>
          <target state="translated">Chef에서 기능이나 API를 제거하려는 경우 먼저 변경 설명 및 수정 방법에 대한 링크가 포함 된 사용 중단 경고로 표시하려고합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="27907d47ff9d9679ec1165295d6afb6157bc3118" translate="yes" xml:space="preserve">
          <source>When why-run mode is enabled, a Chef Infra Client run will occur that does everything up to the point at which configuration would normally occur. This includes getting the configuration data, authenticating to the Chef Infra Server, rebuilding the node object, expanding the run-list, getting the necessary cookbook files, resetting node attributes, identifying the resources, and building the resource collection, but does not include mapping each resource to a provider or configuring any part of the system.</source>
          <target state="translated">왜 실행 모드가 활성화되면 구성이 정상적으로 발생하는 지점까지 모든 작업을 수행하는 Chef Infra Client 실행이 발생합니다. 여기에는 구성 데이터 가져 오기, Chef Infra 서버에 대한 인증, 노드 개체 재 구축, 실행 목록 확장, 필요한 쿡북 파일 가져 오기, 노드 속성 재설정, 리소스 식별 및 리소스 컬렉션 빌드가 포함되지만 매핑은 포함되지 않습니다. 공급자에게 각 리소스를 제공하거나 시스템의 일부를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="0227fa6558c9601baadd253c145f6887e51b3837" translate="yes" xml:space="preserve">
          <source>When why-run mode is enabled, a chef-client run will occur that does everything up to the point at which configuration would normally occur. This includes getting the configuration data, authenticating to the Chef server, rebuilding the node object, expanding the run-list, getting the necessary cookbook files, resetting node attributes, identifying the resources, and building the resource collection and does not include mapping each resource to a provider or configuring any part of the system.</source>
          <target state="translated">왜 실행 모드가 활성화되면 구성이 정상적으로 발생하는 시점까지 모든 작업을 수행하는 chef-client 실행이 발생합니다. 여기에는 구성 데이터 가져 오기, Chef 서버에 대한 인증, 노드 오브젝트 재 빌드, 실행 목록 확장, 필요한 요리 책 파일 가져 오기, 노드 속성 재설정, 자원 식별 및 자원 콜렉션 빌드가 포함되며 각 자원 맵핑은 포함되지 않습니다. 공급자에게 또는 시스템의 일부를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="cf41f5464ac513f2f6466c8614e787c8bdfe70cb" translate="yes" xml:space="preserve">
          <source>When working with chef-container, add the following setting:</source>
          <target state="translated">셰프 컨테이너로 작업 할 때 다음 설정을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="60d5a5594838a427389046eb661a7ef1d2edb780" translate="yes" xml:space="preserve">
          <source>When writing a plan, it&amp;rsquo;s important to understand that you are defining both how the package is built and the actions Chef Habitat will take when the Supervisor starts and manages the child processes in the package. The following sections explain what you need to do for each phase.</source>
          <target state="translated">계획을 작성할 때 패키지를 빌드하는 방법과 Supervisor가 패키지의 하위 프로세스를 시작하고 관리 할 때 Chef Habitat에서 수행 할 작업을 모두 정의하고 있음을 이해하는 것이 중요합니다. 다음 섹션에서는 각 단계에서 수행해야하는 작업을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c1d041ab1d3a1cf80c8e3e8a7d9855f8efce14e2" translate="yes" xml:space="preserve">
          <source>When writing a resource in Chef Client 12, calling &lt;code&gt;some_property nil&lt;/code&gt; behaves as a getter, returning the value of &lt;code&gt;some_property&lt;/code&gt;. In Chef Client 13, this will change to set &lt;code&gt;some_property&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Chef Client 12에서 리소스를 작성할 때 &lt;code&gt;some_property nil&lt;/code&gt; 을 호출 하면 getter로 작동하여 &lt;code&gt;some_property&lt;/code&gt; 값을 반환합니다 . Chef Client 13에서는 &lt;code&gt;some_property&lt;/code&gt; 를 &lt;code&gt;nil&lt;/code&gt; 로 설정 하도록 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="c2c304c99af45fcf041853be299a3b8292f4a670" translate="yes" xml:space="preserve">
          <source>When writing a shared custom resource, you may need to use templates that ship with the custom resource. However, you will need to specify the cookbook containing the template by using the cookbook property in the template resource. If this is not set, then Chef Infra Client will look for templates in the location of the cookbook that is using the resource and won&amp;rsquo;t be able to find them. Example: &lt;code&gt;cookbook 'website'&lt;/code&gt;</source>
          <target state="translated">공유 사용자 지정 리소스를 작성할 때 사용자 지정 리소스와 함께 제공되는 템플릿을 사용해야 할 수 있습니다. 그러나 템플릿 리소스의 cookbook 속성을 사용하여 템플릿이 포함 된 요리 책을 지정해야합니다. 이것이 설정되지 않은 경우 Chef Infra Client는 리소스를 사용하는 요리 책의 위치에서 템플릿을 찾을 수 없으며 찾을 수 없습니다. 예 : &lt;code&gt;cookbook 'website'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a1b2ca2d7bb1732d9d30612da504d5adb35d273" translate="yes" xml:space="preserve">
          <source>When writing your template, you can use the &lt;code&gt;with&lt;/code&gt; helper to reduce duplication:</source>
          <target state="translated">템플릿을 작성할 때 &lt;code&gt;with&lt;/code&gt; 도우미를 사용하여 중복을 줄일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b34718a5c2f3005f662e340a3aa9ff2cb466766d" translate="yes" xml:space="preserve">
          <source>When you are ready to roll out a new version of the package, you promote that package to the channel corresponding to the intended environment (e.g. &lt;code&gt;dev&lt;/code&gt;). You can have multiple service groups in the same environment pointing to different channels, or the same channel.</source>
          <target state="translated">패키지의 새 버전을 출시 할 준비가되면 해당 패키지를 의도 한 환경 (예 : &lt;code&gt;dev&lt;/code&gt; )에 해당하는 채널로 승격합니다 . 동일한 환경에서 서로 다른 채널 또는 동일한 채널을 가리키는 여러 서비스 그룹을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02c6ff1f03f10458471d06fa6c91f349747cb856" translate="yes" xml:space="preserve">
          <source>When you are ready, you then promote that version of your package to a new channel (e.g. &lt;code&gt;acceptance&lt;/code&gt;). The running Supervisors in that group see the update and perform the same service update as in step 3. You repeat steps 3 and 4 until your package makes its way through your continuous deployment pipeline.</source>
          <target state="translated">준비가되면 패키지의 해당 버전을 새 채널로 승격합니다 (예 : &lt;code&gt;acceptance&lt;/code&gt; ). 해당 그룹에서 실행중인 Supervisor는 업데이트를보고 3 단계와 동일한 서비스 업데이트를 수행합니다. 패키지가 지속적 배포 파이프 라인을 통과 할 때까지 3 단계와 4 단계를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="562b69320a2b8f91e5bdefdd1d5826f260d90bbd" translate="yes" xml:space="preserve">
          <source>When you build an artifact in your local environment, Chef Habitat signs the artifact with a public key</source>
          <target state="translated">로컬 환경에서 아티팩트를 빌드 할 때 Chef Habitat은 공개 키로 아티팩트에 서명합니다.</target>
        </trans-unit>
        <trans-unit id="ac3bec25aec71d2f6fd9b65eb612f56ecee1536d" translate="yes" xml:space="preserve">
          <source>When you build an artifact in your local environment, Chef Habitat signs the artifact with the private origin key</source>
          <target state="translated">로컬 환경에서 아티팩트를 빌드 할 때 Chef Habitat은 프라이빗 오리진 키로 아티팩트에 서명합니다.</target>
        </trans-unit>
        <trans-unit id="0ee4f020db7db5d943111f3e04305347fa232884" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;input('some_name')&lt;/code&gt;, with or without additional options, the value of the input will be resolved and returned. Note that this process may involve sourcing the value from another provider, using the value set in DSL, or overriding the value provided in the same call.</source>
          <target state="translated">추가 옵션을 사용하거나 사용하지 않고 &lt;code&gt;input('some_name')&lt;/code&gt; 을 호출하면 입력 값이 확인되고 반환됩니다. 이 프로세스에는 다른 공급자로부터 값을 소싱하거나 DSL에 설정된 값을 사용하거나 동일한 호출에서 제공된 값을 재정의하는 작업이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d02139ba4f2ecbcdcc0f99335a9f0b2c4266f1b" translate="yes" xml:space="preserve">
          <source>When you click the Deliver button, the change begins its final journey into production. This journey consists of three stages: Union, Rehearsal, and Delivered. These three stages are special for two reasons.</source>
          <target state="translated">전달 버튼을 클릭하면 변경 사항이 최종 생산 과정을 시작합니다. 이 여정은 Union, Rehearsal, Delivered의 세 단계로 구성됩니다. 이 세 단계는 두 가지 이유로 특별합니다.</target>
        </trans-unit>
        <trans-unit id="bd8f09eb0940172b0afdb8965fd94d72def0b698" translate="yes" xml:space="preserve">
          <source>When you create a project, Chef Automate automatically creates three supplemental policies. This next table further describes the roles associated with these policies.</source>
          <target state="translated">프로젝트를 생성 할 때 Chef Automate는 자동으로 세 가지 추가 정책을 생성합니다. 다음 표에서는 이러한 정책과 관련된 역할에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e63b210dcae3f656d8a8cf23d8439805e55ea9e4" translate="yes" xml:space="preserve">
          <source>When you create an origin through the site, Chef Habitat Builder automatically generates an origin key pair.</source>
          <target state="translated">사이트를 통해 오리진을 생성하면 Chef Habitat Builder가 오리진 키 쌍을 자동으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8bac358e6d7ecaee9a25016111eda7ae227aef01" translate="yes" xml:space="preserve">
          <source>When you create an origin, Chef Habitat Builder automatically generates &lt;em&gt;origin keys&lt;/em&gt;. Origin key cryptography is asymmetric: it has a public origin key that you can distribute freely, and a private origin key (also called a &amp;ldquo;signing key&amp;rdquo;) that you should distribute only to users of the origin. All Chef Habitat Builder users with access to the origin can view the public origin key revisions in the origin key tab (Builder &amp;gt; Origin &amp;gt; Keys) and download the public origin key, but only users with the origin &amp;lsquo;administrator&amp;rsquo; or &amp;lsquo;owner&amp;rsquo; roles can view or download the private origin key, or change the origin key pair.</source>
          <target state="translated">오리진을 생성하면 Chef Habitat Builder가 &lt;em&gt;오리진 키를&lt;/em&gt; 자동으로 생성 &lt;em&gt;합니다&lt;/em&gt; . 원본 키 암호화는 비대칭입니다. 자유롭게 배포 할 수있는 공개 원본 키와 원본 사용자에게만 배포해야하는 개인 원본 키 ( &quot;서명 키&quot;라고도 함)가 있습니다. 오리진에 액세스 할 수있는 모든 Chef Habitat Builder 사용자는 오리진 키 탭 (Builder&amp;gt; Origin&amp;gt; Keys)에서 공개 오리진 키 개정을보고 공개 오리진 키를 다운로드 할 수 있지만 오리진 '관리자'또는 '소유자'역할을 가진 사용자 만 다운로드 할 수 있습니다. 개인 오리진 키를 보거나 다운로드하거나 오리진 키 쌍을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="546fbf1f24585a3ea22e2d393896f3b74726b097" translate="yes" xml:space="preserve">
          <source>When you create an origin, Chef Habitat Builder automatically generates &lt;em&gt;origin keys&lt;/em&gt;. Origin key cryptography is asymmetric: it has a public origin key that you can distribute freely, and a private origin key that you should distribute only to users belonging to the origin. All Chef Habitat Builder users with access to the origin can view the origin public key revisions in the origin key tab (Builder &amp;gt; Origin &amp;gt; Keys) and download the origin public key, but only users with the origin &amp;lsquo;administrator&amp;rsquo; or &amp;lsquo;owner&amp;rsquo; roles can view or download the origin private key, or change the origin key pair.</source>
          <target state="translated">오리진을 생성하면 Chef Habitat Builder가 &lt;em&gt;오리진 키를&lt;/em&gt; 자동으로 생성 &lt;em&gt;합니다&lt;/em&gt; . 오리진 키 암호화는 비대칭입니다. 자유롭게 배포 할 수있는 공개 오리진 키와 오리진에 속한 사용자에게만 배포해야하는 비공개 오리진 키가 있습니다. 오리진에 대한 액세스 권한이있는 모든 Chef Habitat Builder 사용자는 오리진 키 탭 (Builder&amp;gt; Origin&amp;gt; Keys)에서 오리진 공개 키 개정을보고 오리진 공개 키를 다운로드 할 수 있지만 오리진 '관리자'또는 '소유자'역할을 가진 사용자 만 다운로드 할 수 있습니다. 원본 개인 키를 보거나 다운로드하거나 원본 키 쌍을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db296512255daa6be8a26e8199826a1deb78375c" translate="yes" xml:space="preserve">
          <source>When you create an origin, Chef Habitat Builder automatically generates an origin key pair and saves both keys. To view your origin keys on Chef Habitat Builder, navigate to your origin and select the &lt;strong&gt;Keys&lt;/strong&gt; tab. (Builder &amp;gt; Origins &amp;gt; Keys) You will always be able to view and download origin public keys, but you will only see the private keys for origins in which you are an &amp;ldquo;administrator&amp;rdquo; or &amp;ldquo;owner&amp;rdquo;.</source>
          <target state="translated">오리진을 생성하면 Chef Habitat Builder가 자동으로 오리진 키 쌍을 생성하고 두 키를 모두 저장합니다. Chef Habitat Builder에서 오리진 키를 보려면 오리진으로 이동하여 &lt;strong&gt;키&lt;/strong&gt; 탭을 선택 하십시오. (Builder&amp;gt; Origins&amp;gt; Keys) 항상 원본 공개 키를보고 다운로드 할 수 있지만 &quot;관리자&quot;또는 &quot;소유자&quot;인 원본에 대한 개인 키만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39c6993628670f38c5adf0770d383c376599f828" translate="yes" xml:space="preserve">
          <source>When you create an origin, Chef Habitat Builder automatically generates an origin key pair and saves both keys. To view your origin keys on Chef Habitat Builder, navigate to your origin and select the &lt;strong&gt;Keys&lt;/strong&gt; tab. (Builder &amp;gt; Origins &amp;gt; Keys) You will always be able to view and download public origin keys, but you will only see the private keys for origins in which you are an &amp;ldquo;administrator&amp;rdquo; or &amp;ldquo;owner&amp;rdquo;.</source>
          <target state="translated">오리진을 생성하면 Chef Habitat Builder가 자동으로 오리진 키 쌍을 생성하고 두 키를 모두 저장합니다. Chef Habitat Builder에서 오리진 키를 보려면 오리진으로 이동하여 &lt;strong&gt;키&lt;/strong&gt; 탭을 선택 하십시오. (Builder&amp;gt; Origins&amp;gt; Keys) 항상 공개 오리진 키를보고 다운로드 할 수 있지만 &quot;관리자&quot;또는 &quot;소유자&quot;인 오리진의 개인 키만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dfcb5008ec6f1301ce8b707182b47f7bbff5344" translate="yes" xml:space="preserve">
          <source>When you download an artifact to your local Chef Habitat Studio, Chef Habitat uses the public origin key to verify the artifact&amp;rsquo;s integrity before it starts the installation</source>
          <target state="translated">로컬 Chef Habitat Studio에 아티팩트를 다운로드하면 Chef Habitat은 설치를 시작하기 전에 공개 오리진 키를 사용하여 아티팩트의 무결성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4f226b5817c131c7a29a48a419c3c07ac5eb68db" translate="yes" xml:space="preserve">
          <source>When you download an artifact to your local environment, Chef Habitat uses the public origin key to verify the artifact&amp;rsquo;s integrity before it starts the installation</source>
          <target state="translated">로컬 환경에 아티팩트를 다운로드 할 때 Chef Habitat는 설치를 시작하기 전에 공개 오리진 키를 사용하여 아티팩트의 무결성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bdb1f2c2f09810ad0279fb0784d71967988e3f1c" translate="yes" xml:space="preserve">
          <source>When you execute a local profile, the &lt;code&gt;inspec.yml&lt;/code&gt; file will be read in order to source any profile dependencies. It will then cache the dependencies locally and generate an &lt;code&gt;inspec.lock&lt;/code&gt; file.</source>
          <target state="translated">로컬 프로필을 실행할 때 프로필 종속성을 소싱하기 위해 &lt;code&gt;inspec.yml&lt;/code&gt; 파일을 읽습니다. 그런 다음 종속성을 로컬로 캐시하고 &lt;code&gt;inspec.lock&lt;/code&gt; 파일을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="ec37d5832e44ae4816678c7f304b8c8d757e2bac" translate="yes" xml:space="preserve">
          <source>When you finish with your testing, you can run the following command to delete the running test images:</source>
          <target state="translated">테스트가 끝나면 다음 명령을 실행하여 실행중인 테스트 이미지를 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54815a063a2c7da5655059f9e4161afcbdf0bb95" translate="yes" xml:space="preserve">
          <source>When you have a base cookbook and a bunch of Applications cookbooks dependent on that base cookbook, managing the build graph can become difficult because a change to the base cookbook will require a build to all the application cookbooks. Effortless in this situation can quickly become difficult to manage.</source>
          <target state="translated">기본 쿡북과 해당 기본 쿡북에 종속 된 여러 애플리케이션 쿡북이있는 경우 기본 쿡북을 변경하려면 모든 애플리케이션 쿡북을 빌드해야하므로 빌드 그래프 관리가 어려울 수 있습니다. 이러한 상황에서 어려움없이 관리하기가 금방 어려워 질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c0f7be036ba8820665ea0cb305c70283fffea79" translate="yes" xml:space="preserve">
          <source>When you have either wire encryption or service group encryption turned on, the messages use the Curve25519, Salsa20, and Poly1305 ciphers specified in &lt;a href=&quot;https://nacl.cr.yp.to/valid.html&quot;&gt;Cryptography in NaCl&lt;/a&gt;.</source>
          <target state="translated">유선 암호화 또는 서비스 그룹 암호화가 켜져있는 경우 메시지 &lt;a href=&quot;https://nacl.cr.yp.to/valid.html&quot;&gt;는 NaCl의 암호화에&lt;/a&gt; 지정된 Curve25519, Salsa20 및 Poly1305 암호를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b1b46efdb47d4c1196fb89f1d15bb3565db7009d" translate="yes" xml:space="preserve">
          <source>When you have finished creating your plan and call &lt;code&gt;build&lt;/code&gt; in Chef Habitat Studio, the build script does following steps:</source>
          <target state="translated">계획 생성을 완료 하고 Chef Habitat Studio에서 &lt;code&gt;build&lt;/code&gt; 를 호출 하면 빌드 스크립트가 다음 단계를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5209b3d465fc6771f42a2402654b0db06ceae81a" translate="yes" xml:space="preserve">
          <source>When you have finished creating your plan and call &lt;code&gt;build&lt;/code&gt; in Chef Habitat studio, the following occurs:</source>
          <target state="translated">계획 작성을 완료 하고 Chef Habitat 스튜디오에서 &lt;code&gt;build&lt;/code&gt; 를 호출 하면 다음이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="df7f60f7d0a7240812da1333d4606bd4ff87be1e" translate="yes" xml:space="preserve">
          <source>When you initiate the project creation, the system creates the project, but also three supplemental policies for your convenience:</source>
          <target state="translated">프로젝트 생성을 시작하면 시스템이 프로젝트를 생성하지만 편의를 위해 세 가지 추가 정책도 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3a4d7b91d5166c088d007508300bcbf3133ec90f" translate="yes" xml:space="preserve">
          <source>When you install an artifact on a Chef Habitat Supervisor, Chef Habitat uses the public origin key to authorize the artifact&amp;rsquo;s installation; Chef Habitat only installs artifacts for which it has the public origin key</source>
          <target state="translated">Chef Habitat Supervisor에 아티팩트를 설치할 때 Chef Habitat는 공개 오리진 키를 사용하여 아티팩트의 설치를 승인합니다. Chef Habitat는 공개 원본 키가있는 아티팩트 만 설치합니다.</target>
        </trans-unit>
        <trans-unit id="aa87c8bfd141f5434a3805066528fc767369e77d" translate="yes" xml:space="preserve">
          <source>When you install any package onto a Chef Habitat Supervisor, Chef Habitat uses the public origin key to verify the package&amp;rsquo;s integrity before it starts the installation</source>
          <target state="translated">Chef Habitat Supervisor에 패키지를 설치할 때 Chef Habitat은 퍼블릭 오리진 키를 사용하여 설치를 시작하기 전에 패키지의 무결성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="03b3c0102f738fe16a535560f6bf4c49af324325" translate="yes" xml:space="preserve">
          <source>When you join or create an origin, Chef Habitat Builder identifies your personal access token and assigns it a membership role for that origin. Your membership role defines the level of access that you have to the resources in an origin. By default, you&amp;rsquo;re assigned the &amp;ldquo;read-only&amp;rdquo; role when you join an origin, and you&amp;rsquo;re assigned the &amp;lsquo;owner&amp;rsquo; role when you create an origin.</source>
          <target state="translated">오리진에 가입하거나 생성 할 때 Chef Habitat Builder는 개인 액세스 토큰을 식별하고 해당 오리진에 대한 멤버십 역할을 할당합니다. 멤버십 역할은 오리진의 리소스에 대한 액세스 수준을 정의합니다. 기본적으로 오리진에 가입하면 &quot;읽기 전용&quot;역할이 할당되고 오리진을 만들 때 '소유자'역할이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="2985d338efc62c9b59cec1ff0f4d307527f76366" translate="yes" xml:space="preserve">
          <source>When you pass a package identifier (e.g., &lt;code&gt;core/redis&lt;/code&gt;) as an argument to &lt;code&gt;hab sup run&lt;/code&gt;, it will start up a Supervisor process, and then load and start the given package in what is effectively a single operation. This is a convenience that is intended primarily for container entry-point workflows, where a single defined service is the only thing ever intended to run on the Supervisor, but it can also be used for local testing or experimentation.</source>
          <target state="translated">패키지 식별자 (예 : &lt;code&gt;core/redis&lt;/code&gt; )를 &lt;code&gt;hab sup run&lt;/code&gt; 에 대한 인수로 전달 하면 Supervisor 프로세스를 시작한 다음 사실상 단일 작업으로 지정된 패키지를로드하고 시작합니다. 이는 주로 컨테이너 진입 점 워크 플로를위한 편의입니다. 단일 정의 서비스가 Supervisor에서 실행되도록 의도 된 유일한 것이지만 로컬 테스트 또는 실험에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="629161b2af4468fc263f5dc5dc83cc98fc313242" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;hab pkg export docker&lt;/code&gt;, you&amp;rsquo;ll get a Docker container that provides a few things. First, a minimal Linux OS filesystem is provided, with just enough configuration (e.g., &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/etc/resolv.conf&lt;/code&gt;, etc.) to run. Second, the contents of the exported Chef Habitat package, along with its complete dependency tree, as well as a complete Chef Habitat Supervisor installation, are provided, unpacked, in the &lt;code&gt;/hab/pkgs&lt;/code&gt; directory. Finally, an entry-point script that will start the Supervisor, running the exported Chef Habitat package, is provided, allowing the container itself to behave as though it were the Supervisor.</source>
          <target state="translated">&lt;code&gt;hab pkg export docker&lt;/code&gt; 를 실행 하면 몇 가지를 제공하는 Docker 컨테이너가 제공됩니다. 첫째, 최소한의 Linux OS 파일 시스템이 제공되고 실행하기에 충분한 구성 (예 : &lt;code&gt;/etc/passwd&lt;/code&gt; , &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 등)이 제공됩니다. 둘째, 내 보낸 Chef Habitat 패키지의 내용과 전체 종속성 트리 및 전체 Chef Habitat Supervisor 설치가 &lt;code&gt;/hab/pkgs&lt;/code&gt; 디렉토리 에 제공되고 압축 해제 됩니다. 마지막으로 내 보낸 Chef Habitat 패키지를 실행하는 Supervisor를 시작하는 진입 점 스크립트가 제공되어 컨테이너 자체가 마치 Supervisor 인 것처럼 동작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="644f6cf503dcabc8ce6319a3a6c696935c156e31" translate="yes" xml:space="preserve">
          <source>When you select &lt;strong&gt;Save and Continue&lt;/strong&gt;, Chef Habitat Builder:</source>
          <target state="translated">&lt;strong&gt;저장하고 계속하기&lt;/strong&gt; 를 선택하면 Chef Habitat Builder :</target>
        </trans-unit>
        <trans-unit id="a20ee44dcfe2f0e4ba73eac710fb27d7bb3526a2" translate="yes" xml:space="preserve">
          <source>When you select the Deliver button, the change begins its final journey into production. This journey consists of three stages: Union, Rehearsal, and Delivered. These three stages are special for two reasons.</source>
          <target state="translated">전달 버튼을 선택하면 변경 사항이 최종 생산 과정을 시작합니다. 이 여정은 Union, Rehearsal, Delivered의 세 단계로 구성됩니다. 이 세 단계는 두 가지 이유로 특별합니다.</target>
        </trans-unit>
        <trans-unit id="11fecd5771509aa905d5577edef29abbeed90b7f" translate="yes" xml:space="preserve">
          <source>When you upload a package to Builder, you are required to supply an auth token as part of the &lt;code&gt;hab pkg upload&lt;/code&gt; subcommand. You can generate a Chef Habitat personal access token via the Builder site &lt;a href=&quot;https://bldr.habitat.sh/#/profile&quot;&gt;Profile page&lt;/a&gt; for use with the &lt;code&gt;hab&lt;/code&gt; command-line utility.</source>
          <target state="translated">Builder에 패키지를 업로드 할 때 &lt;code&gt;hab pkg upload&lt;/code&gt; 하위 명령의 일부로 인증 토큰을 제공해야합니다 . &lt;code&gt;hab&lt;/code&gt; 명령 줄 유틸리티 와 함께 사용할 수 있도록 Builder 사이트 &lt;a href=&quot;https://bldr.habitat.sh/#/profile&quot;&gt;프로필 페이지&lt;/a&gt; 를 통해 Chef Habitat 개인 액세스 토큰을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b12fb6fc986f829bc7c9beeb7c566f07a894737b" translate="yes" xml:space="preserve">
          <source>When you upload an artifact to Chef Habitat Builder or Builder on-prem, Chef Habitat uses the public origin key to verify that the artifact was signed with the private origin key</source>
          <target state="translated">아티팩트를 Chef Habitat Builder 또는 Builder on-prem에 업로드하면 Chef Habitat는 퍼블릭 오리진 키를 사용하여 아티팩트가 프라이빗 오리진 키로 서명되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d728cf41cd6f378bda411cc965c760ec9d403273" translate="yes" xml:space="preserve">
          <source>When you upload an artifact to Chef Habitat Builder or Builder on-prem, Chef Habitat verifies that the artifact was signed with its public key</source>
          <target state="translated">아티팩트를 Chef Habitat Builder 또는 Builder 온 프레미스에 업로드하면 Chef Habitat에서 아티팩트가 공개 키로 서명되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="91784f804549672ff9287af6b92d3ccdd393a24a" translate="yes" xml:space="preserve">
          <source>When you write &lt;code&gt;input('some_name', value: 'some_value')&lt;/code&gt;, you are &lt;em&gt;setting&lt;/em&gt; an input value in the DSL. Because the &lt;code&gt;value:&lt;/code&gt; option is present, a new value will be set. You may also pass any other option listed in the &lt;a href=&quot;#input-options-reference&quot;&gt;input option reference&lt;/a&gt;.</source>
          <target state="translated">당신이 쓸 때 &lt;code&gt;input('some_name', value: 'some_value')&lt;/code&gt; 사용하면된다 &lt;em&gt;설정&lt;/em&gt; DSL의 입력 값을. 때문에 &lt;code&gt;value:&lt;/code&gt; 옵션이 존재, 새 값이 설정됩니다. &lt;a href=&quot;#input-options-reference&quot;&gt;입력 옵션 참조에&lt;/a&gt; 나열된 다른 옵션을 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adff0e1f48bf2c19b0eead7d748aba41022aa16f" translate="yes" xml:space="preserve">
          <source>When you write your code, you use resources to describe your infrastructure. A resource corresponds to some piece of infrastructure, such as a file, a template, or a package. Each resource declares what state a part of the system should be in, but not how to get there. Chef Infra handles these complexities for you. Chef Infra provides many resources that are ready for you to use. You can also utilize resources shipped in community cookbooks, or write your own resources specific to your infrastructure.</source>
          <target state="translated">코드를 작성할 때 리소스를 사용하여 인프라를 설명합니다. 리소스는 파일, 템플릿 또는 패키지와 같은 일부 인프라에 해당합니다. 각 리소스는 시스템의 일부가 있어야하는 상태를 선언하지만 거기에 도달하는 방법은 선언하지 않습니다. Chef Infra는 이러한 복잡성을 처리합니다. Chef Infra는 바로 사용할 수있는 많은 리소스를 제공합니다. 커뮤니티 요리 책에 제공된 리소스를 활용하거나 인프라에 맞는 고유 한 리소스를 작성할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8122e3c53e551e9e6bd30ee030f5ecf60d090ca8" translate="yes" xml:space="preserve">
          <source>When your Chef Automate instance is equipped with internet connectivity, you can get a 60-day trial license from there. Alternatively, a license obtained by other means can be applied.</source>
          <target state="translated">Chef Automate 인스턴스에 인터넷 연결이 장착 된 경우 여기에서 60 일 평가판 라이선스를 얻을 수 있습니다. 또는 다른 방법으로 얻은 라이센스를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc01d8f1b732f77d0554f5de353153c7b6994eb7" translate="yes" xml:space="preserve">
          <source>When your profile relies on another profile using the &lt;code&gt;depends&lt;/code&gt; key in the metadata file, you can set &amp;mdash; that is, override &amp;mdash; the value of the input in the dependent profile by including the &lt;code&gt;profile&lt;/code&gt; option and naming the dependent profile.</source>
          <target state="translated">프로필이 (가) 사용하여 다른 프로파일에 의존 할 때 &lt;code&gt;depends&lt;/code&gt; 메타 데이터 파일에 키, 당신은 설정할 수 있습니다 - 포함시켜 종속 프로필에 입력 값 - 우선입니다 &lt;code&gt;profile&lt;/code&gt; 옵션 및 종속 프로필의 이름을 지정.</target>
        </trans-unit>
        <trans-unit id="75b75cbaa50cc480d4d75433c7b260e3c669db45" translate="yes" xml:space="preserve">
          <source>Whenever &lt;code&gt;my-app-profile&lt;/code&gt; is executed, in addition to its own controls, it will run only the controls specified in the &lt;code&gt;require_controls&lt;/code&gt; block. In the case, the following controls would be executed:</source>
          <target state="translated">&lt;code&gt;my-app-profile&lt;/code&gt; 이 실행될 때마다 자체 컨트롤 외에도 &lt;code&gt;require_controls&lt;/code&gt; 블록에 지정된 컨트롤 만 실행됩니다 . 이 경우 다음 컨트롤이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="38a8ad9ef72f8d57c36eecf57bf6049d54e3ae6f" translate="yes" xml:space="preserve">
          <source>Whenever a scan job is triggered, the node manager queries the AWS API for all nodes. Any scan reports created for nodes that are not already in the database results in creating a new node in the database.</source>
          <target state="translated">스캔 작업이 트리거 될 때마다 노드 관리자는 모든 노드에 대해 AWS API를 쿼리합니다. 데이터베이스에 아직없는 노드에 대해 생성 된 모든 스캔 보고서는 데이터베이스에 새 노드를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="82490a2126c3b9b8ed8bc529b3ce3f3febb152de" translate="yes" xml:space="preserve">
          <source>Whenever an input provider sets a value on an input, a &lt;em&gt;priority value&lt;/em&gt; is assigned to the operation. Over the life of the input, multiple assignments with varying priority values may occur. When the input is evaluated, the current value is determined by finding the setting event with the highest priority.</source>
          <target state="translated">입력 공급자가 입력 값을 설정할 때마다 &lt;em&gt;우선 순위 값&lt;/em&gt; 이 작업에 할당됩니다. 입력 수명 동안 다양한 우선 순위 값을 가진 여러 할당이 발생할 수 있습니다. 입력을 평가하면 우선 순위가 가장 높은 설정 이벤트를 찾아 현재 값을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="cbab2bd725d09439646a2a73750726e34097a4e3" translate="yes" xml:space="preserve">
          <source>Whenever we are provided with information about a scannable node, we run a detect job (&lt;code&gt;inspec detect&lt;/code&gt;) against that scannable node. If we are able to successfully connect, it is marked as reachable. An unreachable scannable node will have an error message attached to it. A user may edit the credentials associated with the item to resolve the problem, or in some cases a user may just want to rerun a node (as in the case of a network error).</source>
          <target state="translated">스캔 가능한 노드에 대한 정보가 제공 될 때마다 스캔 가능한 노드에 대해 감지 작업 ( &lt;code&gt;inspec detect&lt;/code&gt; )을 실행 합니다. 성공적으로 연결할 수 있으면 연결할 수있는 것으로 표시됩니다. 연결할 수없는 스캔 가능한 노드에는 오류 메시지가 첨부됩니다. 사용자는 문제를 해결하기 위해 항목과 관련된 자격 증명을 편집 할 수 있습니다. 또는 경우에 따라 사용자가 노드를 다시 실행하기를 원할 수도 있습니다 (네트워크 오류의 경우).</target>
        </trans-unit>
        <trans-unit id="bbb3b0afff2064f399acfed0a5474c9600895150" translate="yes" xml:space="preserve">
          <source>Whenever you invoke the &amp;ldquo;obvious fix&amp;rdquo; rule, please say so in your commit message. For example:</source>
          <target state="translated">&quot;명백한 수정&quot;규칙을 호출 할 때마다 커밋 메시지에 그렇게 말하십시오. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="2203122b92fbe282840f379767439bb07437c3e1" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;ORGANIZATION&lt;/code&gt; and &lt;code&gt;USER&lt;/code&gt; represent strings that are unique to each organization. These files must be present in the .chef directory in order for a workstation to be able to connect to a Chef server.</source>
          <target state="translated">여기서 &lt;code&gt;ORGANIZATION&lt;/code&gt; 및 &lt;code&gt;USER&lt;/code&gt; 는 각 조직에 고유 한 문자열을 나타냅니다. 워크 스테이션을 Chef 서버에 연결할 수 있으려면 이러한 파일이 .chef 디렉토리에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c39038c55fad26641304e1a21917adc48a88e55f" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;ORGANIZATION&lt;/code&gt; and &lt;code&gt;USER&lt;/code&gt; represent strings that are unique to each organization. These files must be present in the &lt;code&gt;.chef&lt;/code&gt; directory in order for Chef Workstation to be able to connect to a Chef Infra Server.</source>
          <target state="translated">여기서 &lt;code&gt;ORGANIZATION&lt;/code&gt; 및 &lt;code&gt;USER&lt;/code&gt; 는 각 조직에 고유 한 문자열을 나타냅니다. Chef Workstation이 Chef Infra Server에 연결할 수 있으려면 이러한 파일이 &lt;code&gt;.chef&lt;/code&gt; 디렉토리에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9e69c3cb4f9c3c857a0852bc48d4020f8f150963" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;path_to_file&lt;/code&gt; could be any one of:</source>
          <target state="translated">여기서 &lt;code&gt;path_to_file&lt;/code&gt; 은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab70283287c4438fec6c0cde5b463dd902fec1da" translate="yes" xml:space="preserve">
          <source>Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state.</source>
          <target state="translated">자원이 시스템의 한 부분 (및 원하는 상태)을 나타내는 경우, 제공자는 시스템의 해당 부분을 현재 상태에서 원하는 상태로 가져 오는 데 필요한 단계를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a35a1c016bc2845af8923209980aa7671d412646" translate="yes" xml:space="preserve">
          <source>Where applicable, contextual information/proof (email body, chat log, GitHub Issue, etc.).</source>
          <target state="translated">해당되는 경우 컨텍스트 정보 / 증거 (이메일 본문, 채팅 로그, GitHub 문제 등).</target>
        </trans-unit>
        <trans-unit id="9fab006484c3ada53a3c82aefc022a761f10198f" translate="yes" xml:space="preserve">
          <source>Where certificates will be stored.</source>
          <target state="translated">인증서가 저장 될 위치.</target>
        </trans-unit>
        <trans-unit id="4bce1533d6a57e355526d424a0e6cedf6fa1b33f" translate="yes" xml:space="preserve">
          <source>Where in the examples above, &lt;code&gt;[date]&lt;/code&gt; represents the date and time the long entry was created. For example: &lt;code&gt;[Fri, 04 Mar 2011 22:00:53 +0000]&lt;/code&gt;.</source>
          <target state="translated">위의 예에서 &lt;code&gt;[date]&lt;/code&gt; 는 긴 항목이 생성 된 날짜와 시간을 나타냅니다. 예 : &lt;code&gt;[Fri, 04 Mar 2011 22:00:53 +0000]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f033fc4ccbe1fbd09fb6a6c38f745f5392070b4" translate="yes" xml:space="preserve">
          <source>Where the &lt;code&gt;branch_name&lt;/code&gt; variable is set to staging or master, depending on the environment of the node. Once this is determined, the &lt;code&gt;branch_name&lt;/code&gt; variable is used to set the revision for the repository. If the git status command is used after running the example above, it will return the branch name as &lt;code&gt;deploy&lt;/code&gt;, as this is the default value. Run Chef Infra Client in debug mode to verify that the correct branches are being checked out:</source>
          <target state="translated">를 Where &lt;code&gt;branch_name&lt;/code&gt; 의 변수 노드의 환경에 따라, 스테이징 또는 마스터로 설정된다. 이것이 결정되면 &lt;code&gt;branch_name&lt;/code&gt; 변수를 사용하여 리포지토리에 대한 개정을 설정합니다. 위의 예를 실행 한 후 git status 명령을 사용 하면 기본값 인 &lt;code&gt;deploy&lt;/code&gt; 로 브랜치 이름을 반환합니다 . 디버그 모드에서 Chef Infra Client를 실행하여 올바른 분기가 체크 아웃되고 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="78e79efd9253642f20e355e854b0398e8c123154" translate="yes" xml:space="preserve">
          <source>Where the gossiped configuration files are located. Location: &lt;code&gt;pkg_svc_path/files&lt;/code&gt;</source>
          <target state="translated">험담 한 구성 파일이있는 위치입니다. 위치 : &lt;code&gt;pkg_svc_path/files&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfa1f138a868c08d9f29be030ed67a9a947f5d99" translate="yes" xml:space="preserve">
          <source>Where the machine is located</source>
          <target state="translated">기계가있는 곳</target>
        </trans-unit>
        <trans-unit id="d4422b3e871872ffe6e6c619423e44faad4b28c6" translate="yes" xml:space="preserve">
          <source>Where the running service configuration is located. Location: &lt;code&gt;pkg_svc_path/config&lt;/code&gt;</source>
          <target state="translated">실행중인 서비스 구성이있는 위치입니다. 위치 : &lt;code&gt;pkg_svc_path/config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f07a5bbb0a4f991ac183592ce9caf28595b9867" translate="yes" xml:space="preserve">
          <source>Where the running service data is located. Location: &lt;code&gt;pkg_svc_path/data&lt;/code&gt;</source>
          <target state="translated">실행중인 서비스 데이터가있는 위치입니다. 위치 : &lt;code&gt;pkg_svc_path/data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="633d9786ad622dc5ff223b9fba2b155b52ee3fef" translate="yes" xml:space="preserve">
          <source>Where the running service is located. Location: &lt;code&gt;HAB_ROOT_PATH/svc/pkg_name&lt;/code&gt;</source>
          <target state="translated">실행중인 서비스가있는 위치입니다. 위치 : &lt;code&gt;HAB_ROOT_PATH/svc/pkg_name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65ca77f9ced1863936a2169e97c15e3f54b290c5" translate="yes" xml:space="preserve">
          <source>Where the running service static data is located. Location: &lt;code&gt;pkg_svc_path/static&lt;/code&gt;</source>
          <target state="translated">실행중인 서비스 정적 데이터가있는 위치입니다. 위치 : &lt;code&gt;pkg_svc_path/static&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e058a6dae4aed642c00795b8678758df62db395b" translate="yes" xml:space="preserve">
          <source>Where the running service variable data is located. Location: &lt;code&gt;pkg_svc_path/var&lt;/code&gt;</source>
          <target state="translated">실행중인 서비스 변수 데이터가있는 위치입니다. 위치 : &lt;code&gt;pkg_svc_path/var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81601e10bc6e34474f75e132e665329f39b96073" translate="yes" xml:space="preserve">
          <source>Where to find the binaries at run time.</source>
          <target state="translated">런타임에 바이너리를 찾을 수있는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="5b19b0b30adaeb361af0e37dc4ae03a474ec9f96" translate="yes" xml:space="preserve">
          <source>Where to install the software; same as &lt;code&gt;pkg_prefix&lt;/code&gt;.</source>
          <target state="translated">소프트웨어 설치 위치 &lt;code&gt;pkg_prefix&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ad96e0c0a38be130412dc48ed8358145a9fe7326" translate="yes" xml:space="preserve">
          <source>Where to look for the delivery git repo template must remain consistent with where omnibus-delivery&amp;rsquo;s &amp;lsquo;delivery&amp;rsquo; software definition puts it. Default value:</source>
          <target state="translated">배달 git repo 템플릿을 찾을 위치는 omnibus-delivery의 'delivery'소프트웨어 정의가 배치하는 위치와 일치해야합니다. 기본값:</target>
        </trans-unit>
        <trans-unit id="7e741bc3dcef0123eeda11543758853be2aac149" translate="yes" xml:space="preserve">
          <source>Where:</source>
          <target state="translated">Where:</target>
        </trans-unit>
        <trans-unit id="6018bcffb08936603df92fdca4c08cbe0153e429" translate="yes" xml:space="preserve">
          <source>Whereas, this should return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">반면, 이것은 &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 :</target>
        </trans-unit>
        <trans-unit id="7cb21d36a1dc0bf7fb052a340d037551665a3098" translate="yes" xml:space="preserve">
          <source>Whether Chef Infra Client uses active or passive FTP. Set to &lt;code&gt;true&lt;/code&gt; to use active FTP.</source>
          <target state="translated">Chef Infra Client가 활성 또는 수동 FTP를 사용하는지 여부. 활성 FTP를 사용 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4d731ed5e19b5da80b1a94ba240173085070a7b" translate="yes" xml:space="preserve">
          <source>Whether NetworkPolicy is enabled for this cluster.</source>
          <target state="translated">이 클러스터에 대해 NetworkPolicy를 사용하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="52899964f3f990709a082a2590b553f172c27820" translate="yes" xml:space="preserve">
          <source>Whether Nginx is used to cache cookbooks. When &lt;code&gt;:on&lt;/code&gt;, Nginx serves up the cached content instead of forwarding the request. Default value: &lt;code&gt;:off&lt;/code&gt;.</source>
          <target state="translated">Nginx가 요리 책을 캐시하는 데 사용되는지 여부 &lt;code&gt;:on&lt;/code&gt; 일 때 Nginx는 요청을 전달하는 대신 캐시 된 컨텐츠를 제공합니다. 기본 값 : &lt;code&gt;:off&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6dc5f08e67ae38d0b8cb1b6e6be78b115777403" translate="yes" xml:space="preserve">
          <source>Whether a leader election for this service has finished</source>
          <target state="translated">이 서비스에 대한 리더 선택이 완료되었는지 여부</target>
        </trans-unit>
        <trans-unit id="9992bfa2a23b2317755907ec64feb819cdad182c" translate="yes" xml:space="preserve">
          <source>Whether a leader election is currently running for this service</source>
          <target state="translated">현재이 서비스에 대한 리더 선거가 실행되고 있는지 여부</target>
        </trans-unit>
        <trans-unit id="d65059b9263da874c0c59627f66803f5bc3dfe6e" translate="yes" xml:space="preserve">
          <source>Whether a local mode (-z) server binds to a port</source>
          <target state="translated">로컬 모드 (-z) 서버가 포트에 바인딩되는지 여부</target>
        </trans-unit>
        <trans-unit id="ecd7107ee18fe6ee9aa6d4a73f37b9670d766bb2" translate="yes" xml:space="preserve">
          <source>Whether a local mode (-z) server binds to a port.</source>
          <target state="translated">로컬 모드 (-z) 서버가 포트에 바인딩되는지 여부.</target>
        </trans-unit>
        <trans-unit id="5fde6c7afc8030fded337854761c4da2682d169a" translate="yes" xml:space="preserve">
          <source>Whether a new subnetwork will be created automatically for the cluster</source>
          <target state="translated">클러스터에 대해 새 서브 네트워크가 자동으로 생성되는지 여부</target>
        </trans-unit>
        <trans-unit id="6de3ecd819f47bf98ea5f09ad94d0c7648d66fa8" translate="yes" xml:space="preserve">
          <source>Whether alias IPs will be used for pod IPs in the cluster</source>
          <target state="translated">클러스터의 포드 IP에 별칭 IP를 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="e1d53ee7fe257d81d1e221ff216616e29d2587af" translate="yes" xml:space="preserve">
          <source>Whether an update leader election for this service has finished</source>
          <target state="translated">이 서비스에 대한 업데이트 리더 선택이 완료되었는지 여부</target>
        </trans-unit>
        <trans-unit id="3cf04f6b80d60c3d4509023315f9a46392b62314" translate="yes" xml:space="preserve">
          <source>Whether an update leader election is currently running for this service</source>
          <target state="translated">현재이 서비스에 대해 업데이트 리더 선택이 실행 중인지 여부</target>
        </trans-unit>
        <trans-unit id="037de16e188330b01a7c5fabb4632201f1958314" translate="yes" xml:space="preserve">
          <source>Whether binary log is enabled. If backup configuration is disabled, binary log must be disabled as well. MySQL only.</source>
          <target state="translated">바이너리 로그가 활성화되었는지 여부. 백업 구성이 비활성화 된 경우 바이너리 로그도 비활성화해야합니다. MySQL 전용입니다.</target>
        </trans-unit>
        <trans-unit id="c2f8adbd1d2268a19f1b5f197c8b0822a3892f97" translate="yes" xml:space="preserve">
          <source>Whether cookbooks stored in S3 should be public or private. &lt;code&gt;true/false&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">S3에 저장된 쿡북이 공개인지 비공개인지 여부. &lt;code&gt;true/false&lt;/code&gt; 기본값 : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07b307b82e954acfa27632cb83878cd2da79333f" translate="yes" xml:space="preserve">
          <source>Whether multiple requests can be dispatched to this version at once.</source>
          <target state="translated">여러 요청을 한 번에이 버전으로 전달할 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="b0f47ac37f1fdcbe5533b033f79ccef6a2f27d1e" translate="yes" xml:space="preserve">
          <source>Whether network policy is enabled on the cluster.</source>
          <target state="translated">클러스터에서 네트워크 정책이 사용되는지 여부.</target>
        </trans-unit>
        <trans-unit id="207375d276297d1963ecd90b92cb154314534808" translate="yes" xml:space="preserve">
          <source>Whether nginx should only respond to requests where the Host header matches one of the configured FQDNs. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">nginx가 호스트 헤더가 구성된 FQDN 중 하나와 일치하는 요청에만 응답해야하는지 여부입니다. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23379dfbb9cea1c7cdfb9442f0ba2e8cb0487fb8" translate="yes" xml:space="preserve">
          <source>Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.</source>
          <target state="translated">노드에 내부 IP 주소 만 있는지 여부. 활성화 된 경우 모든 노드에 RFC 1918 개인 주소 만 제공되고 개인 네트워킹을 통해 마스터와 통신합니다.</target>
        </trans-unit>
        <trans-unit id="298a19dbe19b66afb760343eb3c065f697546ea0" translate="yes" xml:space="preserve">
          <source>Whether or not master authorized networks is enabled.</source>
          <target state="translated">마스터 승인 네트워크 사용 여부입니다.</target>
        </trans-unit>
        <trans-unit id="920f2c13057325cae7188ff2144fd5e5c91f9370" translate="yes" xml:space="preserve">
          <source>Whether or not system check failures (such as disk space failures) will result in the node being marked ineligible for leadership.</source>
          <target state="translated">시스템 검사 실패 (예 : 디스크 공간 실패)로 인해 노드가 리더쉽에 적합하지 않은 것으로 표시되는지 여부.</target>
        </trans-unit>
        <trans-unit id="1b609f499a30993d1b940f70797378398c21b23f" translate="yes" xml:space="preserve">
          <source>Whether or not the User has IAM Policies attached.</source>
          <target state="translated">사용자가 IAM 정책을 연결했는지 여부.</target>
        </trans-unit>
        <trans-unit id="64d8069c58f36534720ed40c87d7eaedf9ec08b4" translate="yes" xml:space="preserve">
          <source>Whether or not the User has a console password set.</source>
          <target state="translated">사용자가 콘솔 암호를 설정했는지 여부.</target>
        </trans-unit>
        <trans-unit id="011bc54d3b8ed3adde3a4a7e7c41f918066007c0" translate="yes" xml:space="preserve">
          <source>Whether or not the policy is enabled. The default is true.</source>
          <target state="translated">정책 사용 여부입니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="23e89571fdd6b7f3e57ec0da24f2de3e0bf0bdcb" translate="yes" xml:space="preserve">
          <source>Whether or not the service has been enabled for use by the consumer.</source>
          <target state="translated">소비자가 서비스를 사용할 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="edb87b4e60d4bdaa905e3e11664af6d76d4e2460" translate="yes" xml:space="preserve">
          <source>Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.</source>
          <target state="translated">버킷에 추가 된 새 객체에 eventBasedHold를 자동으로 적용할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="da49a83d06470e5a13b2f015d6d25a67276ee988" translate="yes" xml:space="preserve">
          <source>Whether or not to bypass the system&amp;rsquo;s proxy settings to access the source.</source>
          <target state="translated">소스에 액세스하기 위해 시스템의 프록시 설정을 우회할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="33f282324e1bc5b96fc9acfa095660b2412d717f" translate="yes" xml:space="preserve">
          <source>Whether or not to check the master&amp;rsquo;s Common Name value in the certificate that it sends during the SSL handshake.</source>
          <target state="translated">SSL 핸드 셰이크 중에 보내는 인증서에서 마스터의 일반 이름 값을 확인할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="3989a867989aa95d049b50933fe9f7c1caff3920" translate="yes" xml:space="preserve">
          <source>Whether or not to enable the firewall rule.</source>
          <target state="translated">방화벽 규칙을 사용할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="8bd5975e1bad519fc73026522660747ccc5d5c60" translate="yes" xml:space="preserve">
          <source>Whether or not to enable the ssl service. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">SSL 서비스 사용 여부입니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d38474eb95864eaad62269eefdedf616aab11d8" translate="yes" xml:space="preserve">
          <source>Whether or not to enable the statistics service. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">통계 서비스 사용 여부입니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f713829a6cd5d062453b692110cdcc2cfe39c101" translate="yes" xml:space="preserve">
          <source>Whether or not to set the source to be accessible to only admins.</source>
          <target state="translated">관리자 만 액세스 할 수 있도록 소스를 설정할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="d3dcdaf3994c00266efb46618eeeb38a885f2b0d" translate="yes" xml:space="preserve">
          <source>Whether or not to set the source to be used for self service.</source>
          <target state="translated">셀프 서비스에 사용할 소스를 설정할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="39307b8aa706d2c5e65b73e4655a56e29706227f" translate="yes" xml:space="preserve">
          <source>Whether or not to trust packages from this source.</source>
          <target state="translated">이 소스의 패키지를 신뢰할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="cfd8ac469ce646e0d3df8fb91a05405dab305691" translate="yes" xml:space="preserve">
          <source>Whether or not to verify the SSL cert for all HTTPS requests.</source>
          <target state="translated">모든 HTTPS 요청에 대해 SSL 인증서를 확인할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="7cb4123658a6094a0a1da9b578c1289c74a9862b" translate="yes" xml:space="preserve">
          <source>Whether or not users can create new organizations from Chef management console. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">사용자가 Chef 관리 콘솔에서 새 조직을 만들 수 있는지 여부 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44bd381092b9ccd22e05b6f2021bdf0ffad84956" translate="yes" xml:space="preserve">
          <source>Whether termination protection is enabled for the stack.</source>
          <target state="translated">스택에 대해 종료 보호가 활성화되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="89caaaa062cb4b70b9e2b8a48da03f6b1165a6d8" translate="yes" xml:space="preserve">
          <source>Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM.</source>
          <target state="translated">ABAC 권한 부여자가이 클러스터에 대해 활성화되었는지 여부. 활성화되면 서비스 계정, 노드 및 컨트롤러를 포함한 시스템의 ID에 RBAC 구성 또는 IAM에서 제공하는 권한을 넘어서 정적으로 부여 된 권한이 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="36fd058928161a09b04b3866af9f9f9b63ee0201" translate="yes" xml:space="preserve">
          <source>Whether the Chef Infra Server or Chef Infra Client generates the private/public key pair. When &lt;code&gt;true&lt;/code&gt;, Chef Infra Client generates the key pair, and then sends the public key to the Chef Infra Server. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef Infra Server 또는 Chef Infra Client가 개인 / 공개 키 쌍을 생성하는지 여부. 때 &lt;code&gt;true&lt;/code&gt; 요리사 인프라 클라이언트는 키 쌍을 생성 한 다음, 요리사 인프라 서버에 공개 키를 전송합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aad7a1653a57cc011ce3bce30e974f0dc1bea6b3" translate="yes" xml:space="preserve">
          <source>Whether the Chef server or chef-client generates the private/public key pair. When &lt;code&gt;true&lt;/code&gt;, the chef-client generates the key pair, and then sends the public key to the Chef server. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Chef 서버 또는 chef-client가 개인 / 공개 키 쌍을 생성하는지 여부 때 &lt;code&gt;true&lt;/code&gt; , 요리사 - 클라이언트는 키 쌍을 생성 한 다음, 요리사 서버에 공개 키를 전송합니다. 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f732310e08acfb8d1539f2c04fdd6d5b080c3203" translate="yes" xml:space="preserve">
          <source>Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.</source>
          <target state="translated">HTTP로드 균형 조정 컨트롤러가 클러스터에서 활성화되었는지 여부. 활성화되면로드 밸런서를 관리하는 클러스터에서 작은 포드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="674478d728856e778569633ac723a25647a8680c" translate="yes" xml:space="preserve">
          <source>Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.</source>
          <target state="translated">수 평형 포드 자동 확장 기능이 클러스터에서 활성화되어 있는지 여부입니다. 사용 설정하면 클러스터에서 Heapster 포드가 실행되고 Stackdriver Monitoring 서비스에서도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="add5b0347afffe19f72b6bb1875fd0124858e74f" translate="yes" xml:space="preserve">
          <source>Whether the Kubernetes Dashboard is enabled for this cluster.</source>
          <target state="translated">이 클러스터에 대해 Kubernetes 대시 보드를 사용할 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="4f0f2eadb66a43d9273c086d28596427ab86455b" translate="yes" xml:space="preserve">
          <source>Whether the account is enabled.</source>
          <target state="translated">계정이 활성화되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="15d6d7effb6e653d290a5d0c104cda2f69bd9c3f" translate="yes" xml:space="preserve">
          <source>Whether the chef-client uses active or passive FTP. Set to &lt;code&gt;true&lt;/code&gt; to use active FTP. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">요리사 클라이언트가 능동 또는 수동 FTP를 사용하는지 여부 활성 FTP를 사용 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4172a78227e3bcad757f6fb2c9f9914ba132b0ce" translate="yes" xml:space="preserve">
          <source>Whether the feature is enabled. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기능 활성화 여부. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e09175b27d867549696e996b67de89fc57c35bd" translate="yes" xml:space="preserve">
          <source>Whether the instance should be assigned an IP address or not.</source>
          <target state="translated">인스턴스에 IP 주소를 할당해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="7805cbe3c1fe69125dcf8d54094ea3cf6144d4cc" translate="yes" xml:space="preserve">
          <source>Whether the master&amp;rsquo;s internal IP address is used as the cluster endpoint.</source>
          <target state="translated">마스터의 내부 IP 주소가 클러스터 엔드 포인트로 사용되는지 여부.</target>
        </trans-unit>
        <trans-unit id="dad4cbaefad86d406f3d7d09b27945228ef17619" translate="yes" xml:space="preserve">
          <source>Whether the measurement is an integer, a floating-point number, etc. Some combinations of metricKind and valueType might not be supported. For counter metrics, set this to INT64.</source>
          <target state="translated">측정 값이 정수인지, 부동 소수점 숫자인지 여부. metricKind 및 valueType의 일부 조합은 지원되지 않을 수 있습니다. 카운터 메트릭의 경우이를 INT64로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="96bd49c5d2d33851334cdd1ff8d9ec6086454b4a" translate="yes" xml:space="preserve">
          <source>Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metricKind and valueType might not be supported. For counter metrics, set this to DELTA.</source>
          <target state="translated">메트릭이 즉각적인 값, 값 변경 등을 기록하는지 여부. metricKind 및 valueType의 일부 조합은 지원되지 않을 수 있습니다. 카운터 메트릭의 경우이를 DELTA로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="801ff3f681b537889e39d2306b642c184b4b9dea" translate="yes" xml:space="preserve">
          <source>Whether the mysqld should default to &amp;lsquo;REQUIRE X509&amp;rsquo; for users connecting over IP.</source>
          <target state="translated">IP를 통해 연결하는 사용자의 경우 mysqld가 'REQUIRE X509'로 기본 설정되어야하는지 여부.</target>
        </trans-unit>
        <trans-unit id="e29f27b4296733f235d2d9a662393408651fd31b" translate="yes" xml:space="preserve">
          <source>Whether the nodes are created as preemptible VM instances. See: &lt;a href=&quot;https://cloud.google.com/compute/docs/instances/preemptible&quot;&gt;https://cloud.google.com/compute/docs/instances/preemptible&lt;/a&gt; for more information about preemptible VM instances.</source>
          <target state="translated">노드가 선점 형 VM 인스턴스로 생성되었는지 여부입니다. 선점 형 VM 인스턴스에 대한 자세한 내용은 &lt;a href=&quot;https://cloud.google.com/compute/docs/instances/preemptible&quot;&gt;https://cloud.google.com/compute/docs/instances/preemptible&lt;/a&gt; 을 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="a765125edb29144899da2de89feda24351ec54b0" translate="yes" xml:space="preserve">
          <source>Whether the resource should be protected against deletion.</source>
          <target state="translated">리소스가 삭제되지 않도록 보호해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="33b4d623c27764394d0d17a00edfdce1a8034513" translate="yes" xml:space="preserve">
          <source>Whether the trigger is disabled or not. If true, the trigger will never result in a build.</source>
          <target state="translated">트리거가 비활성화되었는지 여부. 참이면 트리거가 빌드를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de2ce1eba35861bbfa0e8fe4f76162e3e388d36f" translate="yes" xml:space="preserve">
          <source>Whether the user has even used their console password.</source>
          <target state="translated">사용자가 콘솔 암호를 사용했는지 여부.</target>
        </trans-unit>
        <trans-unit id="b0641d4df7c38e29e4fec6647bc4bedb2d59354d" translate="yes" xml:space="preserve">
          <source>Whether the validity of the server&amp;rsquo;s TLS certificate will be enforced depends on the TLS setup: if you provide a certificate authority&amp;rsquo;s (CA) certificate(s), Chef Automate will only communicate with the LDAP service if the certificate provided by the host can be validated using the CA certificate(s).</source>
          <target state="translated">서버의 TLS 인증서의 유효성이 적용되는지 여부는 TLS 설정에 따라 다릅니다. 인증 기관 (CA) 인증서를 제공하는 경우 Chef Automate는 호스트에서 제공 한 인증서를 확인할 수있는 경우에만 LDAP 서비스와 통신합니다. CA 인증서 사용.</target>
        </trans-unit>
        <trans-unit id="e1dc6f2e3fffbb52888c348fdc5c090aea50ab08" translate="yes" xml:space="preserve">
          <source>Whether there is quorum for a leader election for this service</source>
          <target state="translated">이 서비스에 대한 지도자 선출을위한 정족수가 있는지 여부</target>
        </trans-unit>
        <trans-unit id="b2c707105d0c1b40cce6ca7faa2fc474cf343df9" translate="yes" xml:space="preserve">
          <source>Whether there is quorum for an update leader election for this service</source>
          <target state="translated">이 서비스에 대한 업데이트 리더 선택을위한 쿼럼이 있는지 여부</target>
        </trans-unit>
        <trans-unit id="56dc93dce7e6b54c8f92a0e565b6ff689bea1354" translate="yes" xml:space="preserve">
          <source>Whether this cookbook should replace another (and can be used in-place of that cookbook).</source>
          <target state="translated">이 요리 책이 다른 요리 책을 대체해야하는지 여부 (해당 요리 책 대신 사용 가능)</target>
        </trans-unit>
        <trans-unit id="d6ed111f330f836d4ed0e5cec566f1a5a18584ed" translate="yes" xml:space="preserve">
          <source>Whether this member has been departed from the ring (i.e., permanently gone, never to return).</source>
          <target state="translated">이 회원이 링에서 탈퇴했는지 여부 (즉, 영구적으로 사라 졌거나 돌아 오지 않음).</target>
        </trans-unit>
        <trans-unit id="da4e27b6458c7da7d3cd00c9e0428ed806346f4a" translate="yes" xml:space="preserve">
          <source>Whether this member is a follower in the service group (only meaningful in a leader topology)</source>
          <target state="translated">이 구성원이 서비스 그룹의 팔로워인지 여부 (리더 토폴로지에서만 의미 있음)</target>
        </trans-unit>
        <trans-unit id="0143ea941e8a2a3f7103b6fb9eb8cf0b716d9453" translate="yes" xml:space="preserve">
          <source>Whether this member is an update follower in the service group (only meaningful in a leader topology)</source>
          <target state="translated">이 구성원이 서비스 그룹의 업데이트 팔로워인지 여부 (리더 토폴로지에서만 의미 있음)</target>
        </trans-unit>
        <trans-unit id="8b11de6d8c4a25c7e52fa509a9717b4df521ebd7" translate="yes" xml:space="preserve">
          <source>Whether this member is confirmed dead / unreachable, from a network perspective.</source>
          <target state="translated">네트워크 관점에서이 구성원이 사망 / 연결 불가능으로 확인되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="3938d8e71665dca6573b13aee9b0f60b82840509" translate="yes" xml:space="preserve">
          <source>Whether this member is considered &amp;ldquo;suspect&amp;rdquo;, or possibly unreachable, from a network perspective.</source>
          <target state="translated">이 구성원이 네트워크 관점에서 &quot;의심스러운&quot;것으로 간주되는지 또는 도달 할 수 없는지 여부.</target>
        </trans-unit>
        <trans-unit id="566a6dfa0fa1b628cabe67789858c9b9e4623e57" translate="yes" xml:space="preserve">
          <source>Whether this member is considered alive and connected to the ring, from a network perspective.</source>
          <target state="translated">네트워크 관점에서이 구성원이 살아있는 것으로 간주되고 링에 연결되어 있는지 여부.</target>
        </trans-unit>
        <trans-unit id="cbb231c8c357493e36f29756e9a42f60e9188220" translate="yes" xml:space="preserve">
          <source>Whether this member is the leader in the service group (only meaningful in a leader topology)</source>
          <target state="translated">이 구성원이 서비스 그룹의 리더인지 여부 (리더 토폴로지에서만 의미 있음)</target>
        </trans-unit>
        <trans-unit id="6818b4481c2cb7ad325ba36cfae1b68f7d2d75af" translate="yes" xml:space="preserve">
          <source>Whether this member is the update leader in the service group (only meaningful in a leader topology)</source>
          <target state="translated">이 구성원이 서비스 그룹의 업데이트 리더인지 여부 (리더 토폴로지에서만 의미 있음)</target>
        </trans-unit>
        <trans-unit id="4dab7503f22eb428227e18bf2b105d81bf17d674" translate="yes" xml:space="preserve">
          <source>Whether to block builds on a &amp;ldquo;/gcbrun&amp;rdquo; comment from a repository owner or collaborator.</source>
          <target state="translated">저장소 소유자 또는 공동 작업자의 &quot;/ gcbrun&quot;주석에서 빌드를 차단할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="6d19c8c7bc120e4a962c7c15343780ac501f4f72" translate="yes" xml:space="preserve">
          <source>Whether to enable logging for the load balancer traffic served by this backend service.</source>
          <target state="translated">이 백엔드 서비스에서 제공하는 부하 분산기 트래픽에 대한 로깅을 활성화할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="ea257afc86eef8a08b28513a86ccd024db3326fc" translate="yes" xml:space="preserve">
          <source>Whether to restrict API calls within the Service Perimeter to the list of APIs specified in &amp;lsquo;allowedServices&amp;rsquo;.</source>
          <target state="translated">서비스 경계 내의 API 호출을 'allowedServices'에 지정된 API 목록으로 제한할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="accd584b617699fee73a66585f048ec8bf6fa5b5" translate="yes" xml:space="preserve">
          <source>Whether you are looking to leverage the SaaS or on-prem version of Chef Habitat Builder, you will need to create an account on the SaaS version of Chef Habitat Builder. After you have then downloaded the version, you will then sync the two accounts.</source>
          <target state="translated">Chef Habitat Builder의 SaaS 또는 온 프레미스 버전을 활용하려는 경우 Chef Habitat Builder의 SaaS 버전에서 계정을 만들어야합니다. 그런 다음 버전을 다운로드 한 후 두 계정을 동기화합니다.</target>
        </trans-unit>
        <trans-unit id="d0e476660d5a94fc95b9685ed22ac0ae6e2122ea" translate="yes" xml:space="preserve">
          <source>Which HTTP method to use for the request.</source>
          <target state="translated">요청에 사용할 HTTP 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="11855b187be0ba5745e7f9842e8ad01f9bf957c4" translate="yes" xml:space="preserve">
          <source>Which Serverspec resources are available in InSpec?</source>
          <target state="translated">InSpec에서 사용할 수있는 Serverspec 리소스는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="c763d9df370628a16fd6ae503391507687dc9f8c" translate="yes" xml:space="preserve">
          <source>Which backup type to use for Chef Automate Elasticsearch snapshots. Shared filesystem and S3 backups are currently supported by using the &lt;code&gt;fs&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt; types. Default value: &lt;code&gt;fs&lt;/code&gt;.</source>
          <target state="translated">Chef Automate Elasticsearch 스냅 샷에 사용할 백업 유형. 공유 파일 시스템 및 S3 백업은 현재 &lt;code&gt;fs&lt;/code&gt; 및 &lt;code&gt;s3&lt;/code&gt; 유형 을 사용하여 지원됩니다 . 기본값 : &lt;code&gt;fs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="107c95458559a844dfd993a97e5679119d01bff9" translate="yes" xml:space="preserve">
          <source>Which backup type to use for Chef Automate backup archives. Local filesystem and S3 backups are currently supported by using the &lt;code&gt;fs&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt; types. Default value: &lt;code&gt;fs&lt;/code&gt;.</source>
          <target state="translated">Chef Automate 백업 아카이브에 사용할 백업 유형. 로컬 파일 시스템 및 S3 백업은 현재 &lt;code&gt;fs&lt;/code&gt; 및 &lt;code&gt;s3&lt;/code&gt; 유형 을 사용하여 지원됩니다 . 기본값 : &lt;code&gt;fs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34193541e0ede5e3327a73487eaea3f8dada74d4" translate="yes" xml:space="preserve">
          <source>Which conditions caused the current cluster state.</source>
          <target state="translated">현재 클러스터 상태를 유발 한 조건</target>
        </trans-unit>
        <trans-unit id="be5e8bd9d697a72f698f6c74fa7a5ab9d9d278ca" translate="yes" xml:space="preserve">
          <source>Which conditions caused the current node pool state.</source>
          <target state="translated">현재 노드 풀 상태를 유발 한 조건입니다.</target>
        </trans-unit>
        <trans-unit id="6b4e7c27d8755e6050c86de69799fab7243ac01c" translate="yes" xml:space="preserve">
          <source>Which format to use for output</source>
          <target state="translated">출력에 사용할 형식</target>
        </trans-unit>
        <trans-unit id="1d5c8fd337cc1c347bc3a3caf3c16c35498c07e5" translate="yes" xml:space="preserve">
          <source>Which format to use for output.</source>
          <target state="translated">출력에 사용할 형식입니다.</target>
        </trans-unit>
        <trans-unit id="6511063a03ddc32097ca6f751f3d8d2398097ac9" translate="yes" xml:space="preserve">
          <source>Which is the same as entering:</source>
          <target state="translated">다음과 같이 입력하면됩니다 :</target>
        </trans-unit>
        <trans-unit id="33830c5b75e62115a5ebab9158162f1c07697418" translate="yes" xml:space="preserve">
          <source>Which looks like this:</source>
          <target state="translated">다음과 같이 보입니다.</target>
        </trans-unit>
        <trans-unit id="2177f2dadae75ad08c730762598cd306985b6bbb" translate="yes" xml:space="preserve">
          <source>Which outputs a cookbook report:</source>
          <target state="translated">요리 책 보고서를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="ae32e3a3297737218f874694ff9ac9e2758e600c" translate="yes" xml:space="preserve">
          <source>Which outputs a node report:</source>
          <target state="translated">노드 보고서를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="c4db362531c074846b4bfcffdb8559069e569991" translate="yes" xml:space="preserve">
          <source>Which profiles support inputs?</source>
          <target state="translated">입력을 지원하는 프로필은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="a0476cb68e674ccb8a6f35405416cc20f07d8495" translate="yes" xml:space="preserve">
          <source>Which returns the versions of all installed Chef tools:</source>
          <target state="translated">설치된 모든 Chef 도구의 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cbe3af15c6d2638752064bd99ad8abbd3a5a2c64" translate="yes" xml:space="preserve">
          <source>Which saves the database every 15 minutes if at least one key changes, every 5 minutes if at least 10 keys change, and every 60 seconds if 10000 keys change.</source>
          <target state="translated">하나 이상의 키가 변경되면 15 분마다, 10 개 이상의 키가 변경되면 5 분마다, 10000 개의 키가 변경되면 60 초마다 데이터베이스를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="41468c21bf99c308c848bd5fe37f8a4f317815f5" translate="yes" xml:space="preserve">
          <source>Which testing tools&amp;mdash;Foodcritic, Kitchen, ChefSpec, and so on&amp;mdash;are present in a cookbook?</source>
          <target state="translated">Foodcritic, Kitchen, ChefSpec 등 어떤 테스트 도구가 요리 책에 있습니까?</target>
        </trans-unit>
        <trans-unit id="3e33313a455cd07ca964cb62e0d9987c19e03dd7" translate="yes" xml:space="preserve">
          <source>Which users should be set or appended to a group. When more than one group member is identified, the list of members should be an array: &lt;code&gt;members ['user1', 'user2']&lt;/code&gt;.</source>
          <target state="translated">그룹에 설정하거나 추가해야하는 사용자 둘 이상의 그룹 구성원이 식별되면 구성원 목록은 &lt;code&gt;members ['user1', 'user2']&lt;/code&gt; 배열이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="b676126ea5ecda52145d471f6d71b16aedf92783" translate="yes" xml:space="preserve">
          <source>Which will return something similar to:</source>
          <target state="translated">다음과 유사한 결과가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f8ceace88741e3a9023ad5bc5c122036d25606a" translate="yes" xml:space="preserve">
          <source>While Automate&amp;rsquo;s local teams and tokens can be directly assigned to a project, ingested resources must be assigned to projects using ingest rules.</source>
          <target state="translated">Automate의 로컬 팀과 토큰을 프로젝트에 직접 할당 할 수 있지만 수집 된 리소스는 수집 규칙을 사용하여 프로젝트에 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="e27e2e82e5c127d2b77d94deecf28cf54ea718fa" translate="yes" xml:space="preserve">
          <source>While Chef Habitat provides the best behavior for applications that can be compiled from source into the Chef Habitat ecosystem, it can also bring the same management benefits to applications distributed in binary-only form.</source>
          <target state="translated">Chef Habitat은 소스에서 Chef Habitat 에코 시스템으로 컴파일 할 수있는 애플리케이션에 대해 최상의 동작을 제공하지만 바이너리 전용 형식으로 배포 된 애플리케이션에도 동일한 관리 이점을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24f5dba46cab406ae1a775d42ce5c10615ff15c3" translate="yes" xml:space="preserve">
          <source>While Chef InSpec uses parts of the RSpec project and codebase, it is a separate project from InSpec. Rspec&amp;rsquo;s release schedule and feature set are beyond the control of the Chef InSpec team. While it is possible to use many of the RSpec core features within Chef InSpec profiles, Chef InSpec can only guarantee that the features described in the &lt;a href=&quot;../index&quot;&gt;InSpec documentation&lt;/a&gt; will function correctly. Some RSpec core functionality may be removed in future versions of Chef InSpec as needed to ensure stability in the Chef InSpec project.</source>
          <target state="translated">Chef InSpec은 RSpec 프로젝트 및 코드베이스의 일부를 사용하지만 InSpec과는 별개의 프로젝트입니다. Rspec의 출시 일정과 기능 세트는 Chef InSpec 팀이 제어 할 수 없습니다. Chef InSpec 프로필 내에서 많은 RSpec 핵심 기능을 사용할 수 있지만 Chef InSpec은 &lt;a href=&quot;../index&quot;&gt;InSpec 문서에&lt;/a&gt; 설명 된 기능이 올바르게 작동 한다는 것을 보장 할 수만 있습니다 . Chef InSpec 프로젝트의 안정성을 보장하기 위해 필요에 따라 Chef InSpec의 향후 버전에서 일부 RSpec 핵심 기능이 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2137e28a3982a645707427cdd5af998c59076fa4" translate="yes" xml:space="preserve">
          <source>While Chef includes tooling like the Chef development kit, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it&amp;rsquo;s important to note that you know best about how your infrastructure should be put together. Therefore, Chef makes as few decisions on its own as possible. When a decision must be made, the chef-client uses a reasonable default setting that can be easily changed. While Chef encourages the use of the tooling packaged in the Chef development kit, none of these tools should be seen as a requirement or pre-requisite for being successful using Chef.</source>
          <target state="translated">Chef에는 Chef 개발 키트와 같은 도구가 포함되어 있으며 통합 및 단위 테스트를 장려하며 요리 책 제작 및 정책과 관련된 워크 플로를 정의하지만 인프라를 구성하는 방법에 대해 가장 잘 알고 있어야합니다. 따라서 Chef는 가능한 한 적은 결정을 내립니다. 결정을 내려야 할 때 요리사 클라이언트는 쉽게 변경할 수있는 합리적인 기본 설정을 사용합니다. Chef는 Chef 개발 키트에 패키지 된 툴링을 사용하도록 권장하지만 이러한 툴 중 어느 것도 Chef를 성공적으로 사용하기위한 필수 구성 요소 또는 필수 구성 요소로 간주해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c0d157f063f888ef5e66d4dbc3d0ce6c1bd708b4" translate="yes" xml:space="preserve">
          <source>While InSpec can use user accounts for authentication, &lt;a href=&quot;https://cloud.google.com/docs/authentication/&quot;&gt;Google Cloud documentation&lt;/a&gt; recommends using service accounts. Following GCP best practices, first create a service account with the scopes appropriate for your needs. See &lt;a href=&quot;https://cloud.google.com/docs/authentication/getting-started&quot;&gt;these instructions&lt;/a&gt; on creating a service account.</source>
          <target state="translated">InSpec은 인증에 사용자 계정을 사용할 수 있지만 &lt;a href=&quot;https://cloud.google.com/docs/authentication/&quot;&gt;Google Cloud 문서&lt;/a&gt; 에서는 서비스 계정 사용을 권장합니다. GCP 권장 사항에 따라 먼저 필요에 맞는 범위로 서비스 계정을 만듭니다. 서비스 계정 생성에 대한 &lt;a href=&quot;https://cloud.google.com/docs/authentication/getting-started&quot;&gt;안내&lt;/a&gt; 를 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="f851027f7f1f495d4d78a7339c6f3626a77ab39a" translate="yes" xml:space="preserve">
          <source>While UFW is installed on Ubuntu, it is not enabled by default. However, if you wish to use a UFW-based firewall on your Chef Infra Server, issue the following command with root privileges to open ports 80 and 443:</source>
          <target state="translated">UFW가 Ubuntu에 설치되어 있지만 기본적으로 활성화되어 있지 않습니다. 그러나 Chef Infra Server에서 UFW 기반 방화벽을 사용하려면 루트 권한으로 다음 명령을 실행하여 포트 80 및 443을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="da5209ff975f66952e1c7a1c64c1765a0232d6e7" translate="yes" xml:space="preserve">
          <source>While a Chef Habitat Supervisor does not need to connect with any other Supervisors in order to be useful, leveraging a network of Supervisors unlocks the full potential of Chef Habitat as a platform. In order to do this, a Supervisor must be given the address of at least one other Supervisor in this network when it starts up; this is known as the &amp;ldquo;initial peer problem&amp;rdquo;. You might think of a Supervisor network as an exclusive members-only club; you must first know a member in order to become a member yourself.</source>
          <target state="translated">Chef Habitat 수퍼바이저는 유용하기 위해 다른 수퍼바이저와 연결할 필요가 없지만 수퍼바이저 네트워크를 활용하면 플랫폼으로서 Chef Habitat의 잠재력을 최대한 활용할 수 있습니다. 이렇게하려면 시작시 수퍼바이저에게이 네트워크에있는 다른 수퍼바이저 하나 이상의 주소를 제공해야합니다. 이를 &quot;초기 피어 문제&quot;라고합니다. 수퍼바이저 네트워크를 회원 전용 클럽이라고 생각할 수 있습니다. 회원이 되려면 먼저 회원을 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="ff1fab4cddee645c0d5abb7562b7bfc1617ab0bd" translate="yes" xml:space="preserve">
          <source>While set to true, versioning is fully enabled for this bucket.</source>
          <target state="translated">true로 설정하면이 버킷에 대해 버전 관리가 완전히 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="c828bd581dc1077ef9804d6c8c08d8f00f5f8932" translate="yes" xml:space="preserve">
          <source>While synthetic benchmarks should be taken with a grain of salt, as they don&amp;rsquo;t typically represent real-world performance, internal synthetic benchmarks at Chef have seen a standalone Chef Infra Server installed on a &lt;code&gt;c3.2xlarge&lt;/code&gt; Amazon Web Services (AWS) instance handle more than 1,000 CCRs/min (30k nodes).</source>
          <target state="translated">합성 벤치 마크는 일반적으로 실제 성능을 나타내지 않기 때문에 &lt;code&gt;c3.2xlarge&lt;/code&gt; 의 소금으로 취해야하지만 Chef의 내부 합성 벤치 마크에서는 c3.2xlarge Amazon Web Services (AWS) 인스턴스 핸들에 설치된 독립형 Chef Infra Server를 확인했습니다. 1,000 개 이상의 CCR / 분 (30k 노드).</target>
        </trans-unit>
        <trans-unit id="746b2c279e92645e782e0ea37d08555e191cfa2b" translate="yes" xml:space="preserve">
          <source>While synthetic benchmarks should be taken with a grain of salt, as they don&amp;rsquo;t typically represent real-world performance, internal synthetic benchmarks at Chef have seen a standalone Chef server installed on a &lt;code&gt;c3.2xlarge&lt;/code&gt; Amazon Web Services (AWS) instance handle more than 1,000 CCRs/min (30k nodes).</source>
          <target state="translated">합성 벤치 마크는 일반적으로 실제 성능을 나타내지 않기 때문에 소금 한 &lt;code&gt;c3.2xlarge&lt;/code&gt; , Chef의 내부 합성 벤치 마크는 c3.2xlarge Amazon Web Services (AWS) 인스턴스 핸들 에 독립형 Chef 서버가 설치되어 있음을 더 많이 볼 수 있었습니다. 1,000 CCR / 분 (30k 노드) 이상</target>
        </trans-unit>
        <trans-unit id="1f992b4b205cbabc1ee8e7d96de4a8a04f6ba608" translate="yes" xml:space="preserve">
          <source>While that service is running, update your package, rebuild it, and then promote it to the same channel that the previous release of that service is currently running in (e.g. &lt;code&gt;test&lt;/code&gt;). Those running instances should now update according to their update strategy.</source>
          <target state="translated">해당 서비스가 실행되는 동안 패키지를 업데이트하고 다시 빌드 한 다음 해당 서비스의 이전 릴리스가 현재 실행중인 동일한 채널 (예 : &lt;code&gt;test&lt;/code&gt; ) 로 승격합니다 . 실행중인 인스턴스는 이제 업데이트 전략에 따라 업데이트되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a2364a84e4bfcf4f1652319f9ff858cb9465399c" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;delivery['read_ttl']&lt;/code&gt; and &lt;code&gt;delivery['write_ttl']&lt;/code&gt; values may be tuned separately, it is recommended that both values be identical.</source>
          <target state="translated">반면 &lt;code&gt;delivery['read_ttl']&lt;/code&gt; 및 &lt;code&gt;delivery['write_ttl']&lt;/code&gt; 값은 별도로 동조 될 수 있으며, 그 두 값이 동일 할 것을 권장한다.</target>
        </trans-unit>
        <trans-unit id="e0420d5b79bc8afa073ceb6dba7a26314decc290" translate="yes" xml:space="preserve">
          <source>While the Amazon Machine Images (AMI) for Chef Automate is provisioning, download and install Chef Workstation. Chef Workstation is a collection of tools and libraries that are packaged together to make it easy to develop cookbooks and resources for a Chef / Chef Automate environment. You&amp;rsquo;ll need this to interact with Chef Automate and Chef Infra Server from the command line.</source>
          <target state="translated">Chef Automate 용 Amazon 머신 이미지 (AMI)가 프로비저닝되는 동안 Chef Workstation을 다운로드하여 설치합니다. Chef Workstation은 Chef / Chef Automate 환경을위한 쿡북 및 리소스를 쉽게 개발할 수 있도록 함께 패키지 된 도구 및 라이브러리 모음입니다. 명령 줄에서 Chef Automate 및 Chef Infra Server와 상호 작용하려면이 정보가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ec354d38bdd1777543646a67b8192890e5c6f53b" translate="yes" xml:space="preserve">
          <source>While the Chef Automate VM is being provisioned, download and install &lt;a href=&quot;../workstation/install_workstation/index&quot;&gt;Chef Workstation&lt;/a&gt;. Chef Workstation is a collection of tools &amp;mdash;Test Kitchen, ChefSpec, knife, delivery-cli, chef, chef-vault, Cookstyle, and more&amp;mdash; and libraries that are all packaged together to get your started with the Chef Automate workflow. You&amp;rsquo;ll need this to interact with Chef Automate and Chef Infra Server from the command line.</source>
          <target state="translated">Chef Automate VM이 프로비저닝되는 동안 &lt;a href=&quot;../workstation/install_workstation/index&quot;&gt;Chef Workstation을&lt;/a&gt; 다운로드하여 설치 합니다. Chef Workstation은 Test Kitchen, ChefSpec, knife, delivery-cli, chef, chef-vault, Cookstyle 등의 도구 모음이며 Chef Automate 워크 플로우를 시작하기 위해 모두 함께 패키지 된 라이브러리입니다. 명령 줄에서 Chef Automate 및 Chef Infra Server와 상호 작용하려면이 정보가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b5925f843a6ec7addade1a65280e234f1f8c9091" translate="yes" xml:space="preserve">
          <source>While the backup utility currently supports encrypting backups with with SSE-S3, SSE-KMS, and SSE-C, only SSE-S3 is currently supported for restoration.</source>
          <target state="translated">백업 유틸리티는 현재 SSE-S3, SSE-KMS 및 SSE-C를 사용한 백업 암호화를 지원하지만 현재 복원에는 SSE-S3 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0eb8b1e611bb3d44346e423694f04bf61d288405" translate="yes" xml:space="preserve">
          <source>While the file does not contain passwords in plaintext, it is not safe to share with untrusted users. The format of the secrets file allows Chef Infra Server deployments to conform to regulations that forbid the appearance of sensitive data in plain text in configuration files; however, it does not make the file meaningfully more secure.</source>
          <target state="translated">파일에 일반 텍스트로 된 암호가 포함되어 있지 않지만 신뢰할 수없는 사용자와 공유하는 것은 안전하지 않습니다. 비밀 파일의 형식을 사용하면 Chef Infra Server 배포가 구성 파일에서 일반 텍스트로 민감한 데이터가 표시되는 것을 금지하는 규정을 준수 할 수 있습니다. 그러나 파일을 의미있게 더 안전하게 만들지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="969b4c2cdb69c9ac55ae38317c450b1db5b8b591" translate="yes" xml:space="preserve">
          <source>While there are many benefits to using the cookbook method to install Supermarket, there are also cases where it&amp;rsquo;s simpler to set up the Supermarket installation manually. These steps will walk you through the process of manually configuring your private Supermarket server.</source>
          <target state="translated">요리 책 방법을 사용하여 슈퍼마켓을 설치하면 많은 이점이 있지만 슈퍼마켓 설치를 수동으로 설정하는 것이 더 간단한 경우도 있습니다. 이 단계는 개인 슈퍼마켓 서버를 수동으로 구성하는 프로세스를 안내합니다.</target>
        </trans-unit>
        <trans-unit id="215fa19c9d77ff5e3c301487d10f35aafe274e3f" translate="yes" xml:space="preserve">
          <source>While there is a bit of overlap in these concepts, they are distinct. It&amp;rsquo;s best to think of required and optional binds as defining &amp;ldquo;how applications can be wired together&amp;rdquo; (specifically, which &amp;ldquo;wires&amp;rdquo; must be connected in order to provide the minimal amount of information needed to run a service). Binding mode, on the other hand, defines how the application&amp;rsquo;s start-up behavior is affected the presence or absence of its networked dependencies.</source>
          <target state="translated">이러한 개념에는 약간 겹치는 부분이 있지만 서로 다릅니다. 필수 및 선택적 바인딩을 &quot;어플리케이션을 함께 연결하는 방법&quot;(특히 서비스 실행에 필요한 최소한의 정보를 제공하기 위해 연결해야하는 &quot;연결&quot;)을 정의하는 것으로 생각하는 것이 가장 좋습니다. 반면 바인딩 모드는 응용 프로그램의 시작 동작이 네트워크 종속성의 유무에 영향을 미치는 방식을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="383f15ca5bf809a52e9afbd97a2795c6d2171f80" translate="yes" xml:space="preserve">
          <source>While there is no &lt;code&gt;attach&lt;/code&gt; function exposed in a &lt;code&gt;plan.ps1&lt;/code&gt; file, one can use the native Powershell cmdlet &lt;code&gt;Set-PSBreakpoint&lt;/code&gt; to access virtually the same functionality. Instead of adding &lt;code&gt;attach&lt;/code&gt; to your &lt;code&gt;Invoke-Build&lt;/code&gt; function, enter the following from inside your studio shell:</source>
          <target state="translated">&lt;code&gt;plan.ps1&lt;/code&gt; 파일에 노출 된 &lt;code&gt;attach&lt;/code&gt; 기능 이 없지만 기본 Powershell cmdlet &lt;code&gt;Set-PSBreakpoint&lt;/code&gt; 를 사용하여 거의 동일한 기능에 액세스 할 수 있습니다. &lt;code&gt;Invoke-Build&lt;/code&gt; 함수에 &lt;code&gt;attach&lt;/code&gt; 을 추가하는 대신 스튜디오 셸 내부에서 다음을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="f23bc249597ddaf67825ca4ab4e7ce1216f139e4" translate="yes" xml:space="preserve">
          <source>While this command is running, you may be prompted to enter your macOS user account password for installation to complete.</source>
          <target state="translated">이 명령이 실행되는 동안 설치를 완료하려면 macOS 사용자 계정 암호를 입력하라는 메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b5b4bde8a9744cab10d5ed59535cad715a057b7" translate="yes" xml:space="preserve">
          <source>While this is an option, there is no unset on remediation. The only way to unset a remediation is to change it back using a remediate overlay command. To protect against this, we run a scan before we run the remediation, so that you can reference the state to help you go back if needed.</source>
          <target state="translated">이것이 옵션이지만 수정에 대해 설정되지 않은 것은 없습니다. 교정을 설정 해제하는 유일한 방법은 교정 오버레이 명령을 사용하여 다시 변경하는 것입니다. 이를 방지하기 위해 교정을 실행하기 전에 검사를 실행하므로 필요한 경우 다시 돌아가는 데 도움이되도록 상태를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1af4b066fc380d63eeaacb1978f4428f86e80725" translate="yes" xml:space="preserve">
          <source>While this resource provides facilities for searching inbound and outbound rules on a variety of criteria, there is currently no support for performing matches based on:</source>
          <target state="translated">이 리소스는 다양한 기준에 따라 인바운드 및 아웃 바운드 규칙을 검색 할 수있는 기능을 제공하지만 현재 다음을 기준으로 일치를 수행하는 것은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7ceca01940cc92d0fd939cc5b4eb5379e1d224b" translate="yes" xml:space="preserve">
          <source>While we are targeting many platforms for automated scaffolding we currently support Ruby, Node.js and Gradle.</source>
          <target state="translated">자동화 된 스캐 폴딩을 위해 많은 플랫폼을 대상으로하고 있지만 현재 Ruby, Node.js 및 Gradle을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="af7974fb2ac9aa7da6a199b32a8de6d53f94d59e" translate="yes" xml:space="preserve">
          <source>While we do not prescribe a particular choice of technology or the details of processes, the Chef Upgrade Lab expects a continuous integration pipeline and continuous delivery system (CI/CD) for cookbook deployments.</source>
          <target state="translated">특정 기술 선택이나 프로세스 세부 사항을 규정하지는 않지만 Chef Upgrade Lab은 요리 책 배포를위한 지속적인 통합 파이프 라인 및 지속적인 배포 시스템 (CI / CD)을 기대합니다.</target>
        </trans-unit>
        <trans-unit id="745c8822d9c4f845ac08c3ce4384ead1f8fe458b" translate="yes" xml:space="preserve">
          <source>While we have safeguards to prevent it, it is possible to lock yourself out of Chef Automate. If you have root access to the node where Chef Automate is installed, use the following commands to restore admin access:</source>
          <target state="translated">이를 방지하기위한 안전 장치가 있지만 Chef Automate에서 자신을 잠글 수 있습니다. Chef Automate가 설치된 노드에 대한 루트 액세스 권한이있는 경우 다음 명령을 사용하여 관리자 액세스 권한을 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="04309ba388937ee053b7247bf4c453fa8ddea9d1" translate="yes" xml:space="preserve">
          <source>While we&amp;rsquo;ve taken care to make the migration process as smooth as possible, this section outlines some caveats to consider before you proceed.</source>
          <target state="translated">마이그레이션 프로세스가 최대한 원활하게 진행되도록주의를 기울 였지만이 섹션에서는 진행하기 전에 고려해야 할 몇 가지주의 사항에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e7c1959802b356cec3caa840c8f71f0c9c6ca4d9" translate="yes" xml:space="preserve">
          <source>While working on plans, you may wish to stop the build and inspect the environment at any point during a build phase (e.g. download, build, unpack, etc.). In Bash-based plans, Chef Habitat provides an &lt;code&gt;attach&lt;/code&gt; function for use in your plan.sh that functions like a debugging breakpoint and provides an easy</source>
          <target state="translated">계획을 작성하는 동안 빌드 단계 (예 : 다운로드, 빌드, 압축 풀기 등) 중 언제든지 빌드를 중지하고 환경을 검사 할 수 있습니다. Bash 기반 계획에서 Chef Habitat은 디버깅 중단 점과 같은 기능을 수행하고 쉽게 사용할 수있는 plan.sh에서 사용할 수있는 &lt;code&gt;attach&lt;/code&gt; 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="febafdf872d75e61b3805b5bc38555cb3e625b4c" translate="yes" xml:space="preserve">
          <source>While you can build and run Chef Habitat packages without sharing them on &lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;Chef Habitat Builder&lt;/a&gt;, uploading them there enables greater collaboration and automated package rebuilds as underlying dependencies or your connected GitHub repository are updated.</source>
          <target state="translated">&lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;Chef Habitat Builder&lt;/a&gt; 에서 공유하지 않고도 Chef Habitat 패키지를 빌드하고 실행할 수 있지만 여기에 업로드하면 기본 종속성 또는 연결된 GitHub 저장소가 업데이트 될 때 더 큰 협업과 자동화 된 패키지 재 빌드가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="78183efc95101f5ea85f24fa0b188fa212b8e457" translate="yes" xml:space="preserve">
          <source>While you can download packages one-at-a-time, it can be more convenient to use a file to specify your packages. Two formats are recognized: plain text and TOML.</source>
          <target state="translated">패키지를 한 번에 하나씩 다운로드 할 수 있지만 파일을 사용하여 패키지를 지정하는 것이 더 편리 할 수 ​​있습니다. 일반 텍스트와 TOML의 두 가지 형식이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="15075712befd43054451ee303b2fd05fd8fdc306" translate="yes" xml:space="preserve">
          <source>While you don&amp;rsquo;t have to wait for the end to completely clean up, it can be beneficial to be able to enter any of the stage1/stage2/stage3 Studios for reference. However, if and when you feel like you&amp;rsquo;re finished with any of these Studio instances, you can clean them up with the associated Studio wrapper script. For example, to clean up all the staging Studio instances:</source>
          <target state="translated">끝이 완전히 정리 될 때까지 기다릴 필요는 없지만 참조를 위해 stage1 / stage2 / stage3 스튜디오에 입장 할 수 있으면 도움이 될 수 있습니다. 그러나 이러한 Studio 인스턴스 중 하나를 완료했다고 생각되면 연결된 Studio 래퍼 스크립트를 사용하여 정리할 수 있습니다. 예를 들어 모든 스테이징 Studio 인스턴스를 정리하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="53c2ad308e416567345ed5fac7c4f48b8609157c" translate="yes" xml:space="preserve">
          <source>Whitelist</source>
          <target state="translated">Whitelist</target>
        </trans-unit>
        <trans-unit id="dba0f52fcbfb044a1bcd79757615eed5c9eb9731" translate="yes" xml:space="preserve">
          <source>Whitelist Attributes</source>
          <target state="translated">화이트리스트 속성</target>
        </trans-unit>
        <trans-unit id="f9b84190cf878a963c04636c60b2ee29a10d3cf2" translate="yes" xml:space="preserve">
          <source>Whitespace Arrays</source>
          <target state="translated">공백 배열</target>
        </trans-unit>
        <trans-unit id="8ed071330c33655bd5017012379cee9d938c2687" translate="yes" xml:space="preserve">
          <source>Whitespace: Both tabs and spaces are whitespace.</source>
          <target state="translated">공백 : 탭과 공백은 모두 공백입니다.</target>
        </trans-unit>
        <trans-unit id="970c9886b042686b2133e766abd3190562a8b53d" translate="yes" xml:space="preserve">
          <source>Who Should Use Effortless</source>
          <target state="translated">쉽게 사용해야하는 사람</target>
        </trans-unit>
        <trans-unit id="1df0c730a3e35bd8633b22d6fa565f86ef8e19a6" translate="yes" xml:space="preserve">
          <source>Who should enable FIPS?</source>
          <target state="translated">누가 FIPS를 활성화해야합니까?</target>
        </trans-unit>
        <trans-unit id="34b09834d88f364341ed3c38685995866e23c3e3" translate="yes" xml:space="preserve">
          <source>Who shouldn&amp;rsquo;t enable FIPS?</source>
          <target state="translated">FIPS를 활성화하면 안되는 사람은 누구입니까?</target>
        </trans-unit>
        <trans-unit id="62e4c67a13948ff8e4eb4536314634dce0f2c423" translate="yes" xml:space="preserve">
          <source>Why Policyfiles?</source>
          <target state="translated">왜 Policyfile인가?</target>
        </trans-unit>
        <trans-unit id="78e84ab80439fe770a0c5942ac9df04364aa21c2" translate="yes" xml:space="preserve">
          <source>Why The Effortless Pattern Uses Scaffolding</source>
          <target state="translated">쉬운 패턴이 비계를 사용하는 이유</target>
        </trans-unit>
        <trans-unit id="96fd3a3f273f8da3ce33ca25d30f0df34195ed96" translate="yes" xml:space="preserve">
          <source>WiX includes serveral tools &amp;ndash; such as &lt;code&gt;candle&lt;/code&gt; (preprocesses and compiles source files into object files), &lt;code&gt;light&lt;/code&gt; (links and binds object files to an installer database), and &lt;code&gt;heat&lt;/code&gt; (harvests files from various input formats). The following example uses a whitespace array and the InSpec &lt;code&gt;file&lt;/code&gt; audit resource to verify if these three tools are present:</source>
          <target state="translated">WiX에는 &lt;code&gt;candle&lt;/code&gt; (소스 파일을 사전 처리하고 오브젝트 파일로 컴파일), &lt;code&gt;light&lt;/code&gt; (오브젝트 파일을 설치 프로그램 데이터베이스에 링크 및 바인딩), &lt;code&gt;heat&lt;/code&gt; (다양한 입력 형식의 파일을 수집)과 같은 서버 도구가 포함 되어 있습니다 . 다음 예제는 공백 배열과 InSpec &lt;code&gt;file&lt;/code&gt; 감사 리소스를 사용 하여이 세 가지 도구가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="56bd1de0280dea1752b9a2077f8f87699c41e097" translate="yes" xml:space="preserve">
          <source>WiX includes several tools &amp;ndash; such as &lt;code&gt;candle&lt;/code&gt; (preprocesses and compiles source files into object files), &lt;code&gt;light&lt;/code&gt; (links and binds object files to an installer database), and &lt;code&gt;heat&lt;/code&gt; (harvests files from various input formats). The following example uses a whitespace array and the Chef InSpec &lt;code&gt;file&lt;/code&gt; audit resource to verify if these three tools are present:</source>
          <target state="translated">WiX에는 &lt;code&gt;candle&lt;/code&gt; (소스 파일을 객체 파일로 전처리 및 컴파일), &lt;code&gt;light&lt;/code&gt; (객체 파일을 설치 프로그램 데이터베이스에 연결 및 바인딩), &lt;code&gt;heat&lt;/code&gt; (다양한 입력 형식에서 파일 수집) 와 같은 여러 도구가 포함 되어 있습니다 . 다음 예제에서는 공백 배열과 Chef InSpec &lt;code&gt;file&lt;/code&gt; 감사 리소스를 사용하여 이러한 세 가지 도구가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="641be895c08513d3bfd01d7c1a2ff3ca352244e4" translate="yes" xml:space="preserve">
          <source>Wildcard Matching</source>
          <target state="translated">와일드 카드 일치</target>
        </trans-unit>
        <trans-unit id="0774b81b662cb7c3bfab731a7cbb23085a2cb853" translate="yes" xml:space="preserve">
          <source>Wildcard Search</source>
          <target state="translated">와일드 카드 검색</target>
        </trans-unit>
        <trans-unit id="0dbb6054a85d69dee69bd97a36b21d26b10d171a" translate="yes" xml:space="preserve">
          <source>Wildcard matching may be used in the &lt;code&gt;no_proxy&lt;/code&gt; list&amp;mdash;such as &lt;code&gt;no_proxy '*.*.example.*'&lt;/code&gt;&amp;mdash;however, many situations require hostnames to be specified explicitly (i.e. &amp;ldquo;without wildcards&amp;rdquo;).</source>
          <target state="translated">와일드 카드 일치는 &lt;code&gt;no_proxy&lt;/code&gt; 목록 (예 : &lt;code&gt;no_proxy '*.*.example.*'&lt;/code&gt; )에서 사용될 수 있지만, 많은 경우 호스트 이름을 명시 적으로 지정해야합니다 (예 : &quot;와일드 카드 없음&quot;).</target>
        </trans-unit>
        <trans-unit id="ed4fab4e404b1e0db57bd865e1f2c1ece6cb1efa" translate="yes" xml:space="preserve">
          <source>Wildcard patterns must be escaped (using a backslash) so that the wildcard itself can reach the Chef Infra Server. If they are not escaped, the wildcard is expanded into the actual filenames and knife will not know the wildcard was intended to be used. For example, if the Chef Infra Server has data bags named &lt;code&gt;aardvarks&lt;/code&gt;, &lt;code&gt;anagrams&lt;/code&gt;, and &lt;code&gt;arp_tables&lt;/code&gt;, but the local file system only has &lt;code&gt;aardvarks&lt;/code&gt; and &lt;code&gt;anagrams&lt;/code&gt;, escaping vs. not escaping the wildcard pattern will yield different results:</source>
          <target state="translated">와일드 카드 자체가 Chef Infra Server에 도달 할 수 있도록 와일드 카드 패턴을 이스케이프해야합니다 (백 슬래시 사용). 이스케이프되지 않으면 와일드 카드가 실제 파일 이름으로 확장되고 knife는 와일드 카드가 사용되도록 의도 된 것을 알지 못합니다. 예를 들어 Chef Infra Server에 &lt;code&gt;aardvarks&lt;/code&gt; , &lt;code&gt;anagrams&lt;/code&gt; 및 &lt;code&gt;arp_tables&lt;/code&gt; 라는 데이터 백이 있지만 로컬 파일 시스템에 &lt;code&gt;aardvarks&lt;/code&gt; 및 &lt;code&gt;anagrams&lt;/code&gt; 만 있는 경우 와일드 카드 패턴을 이스케이프하거나 이스케이프하지 않으면 다른 결과가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c4ea818f4f60089e09a6ddbcfe1ab466f6e38738" translate="yes" xml:space="preserve">
          <source>Wildcard patterns must be escaped (using a backslash) so that the wildcard itself can reach the Chef server. If they are not escaped, the wildcard is expanded into the actual filenames and knife will not know the wildcard was intended to be used. For example, if the Chef server has data bags named &lt;code&gt;aardvarks&lt;/code&gt;, &lt;code&gt;anagrams&lt;/code&gt;, and &lt;code&gt;arp_tables&lt;/code&gt;, but the local file system only has &lt;code&gt;aardvarks&lt;/code&gt; and &lt;code&gt;anagrams&lt;/code&gt;, escaping vs. not escaping the wildcard pattern will yield different results:</source>
          <target state="translated">와일드 카드 자체가 Chef 서버에 도달 할 수 있도록 와일드 카드 패턴을 백 슬래시를 사용하여 이스케이프해야합니다. 이스케이프되지 않으면 와일드 카드가 실제 파일 이름으로 확장되고 나이프는 와일드 카드가 사용되도록 의도 된 것을 알 수 없습니다. 예를 들어 Chef 서버에 &lt;code&gt;aardvarks&lt;/code&gt; , &lt;code&gt;anagrams&lt;/code&gt; 및 &lt;code&gt;arp_tables&lt;/code&gt; 라는 데이터 백이 있지만 로컬 파일 시스템에 &lt;code&gt;aardvarks&lt;/code&gt; 및 &lt;code&gt;anagrams&lt;/code&gt; 만 있으면 이스케이프 대 와일드 카드 패턴을 이스케이프 처리하지 않으면 다른 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="26bcfc69a78c0421834f66b5e6d56e987ef938ec" translate="yes" xml:space="preserve">
          <source>Will open &lt;code&gt;$EDITOR&lt;/code&gt; to edit a user. When finished editing, knife will update the given Chef Infra Server user.</source>
          <target state="translated">사용자를 편집하려면 &lt;code&gt;$EDITOR&lt;/code&gt; 를 엽니 다 . 편집이 끝나면 knife는 주어진 Chef Infra Server 사용자를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="db82e79e51f7ea68f8bfbe78c824f0dc537a3505" translate="yes" xml:space="preserve">
          <source>Will override the default configuration when a &lt;code&gt;config.rb&lt;/code&gt; file exists at the default path or the path specified by the &lt;code&gt;--config&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;config.rb&lt;/code&gt; 파일이 기본 경로 또는 &lt;code&gt;--config&lt;/code&gt; 옵션으로 지정된 경로에 있을 때 기본 구성을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="4f30b6fed6f7375733b9bc83000abdfd6b22cf6e" translate="yes" xml:space="preserve">
          <source>Will override the default configuration when a knife.rb file exists at the default path or the path specified by the &lt;code&gt;--config&lt;/code&gt; option</source>
          <target state="translated">knife.rb 파일이 기본 경로 또는 &lt;code&gt;--config&lt;/code&gt; 옵션으로 지정된 경로에있을 때 기본 구성을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="5b6f77e9019905b861ce6a4194d42196c9edc432" translate="yes" xml:space="preserve">
          <source>Will return 0 if a file was downloaded or if a valid cached file was found.</source>
          <target state="translated">파일이 다운로드되었거나 유효한 캐시 파일이 발견되면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d51b978f381a8ae38830cc5e304b90d0f5e6764d" translate="yes" xml:space="preserve">
          <source>Will return something like this:</source>
          <target state="translated">다음과 같은 것을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="4b0d5f37ec334fa84b6899e07211a2f8580754ba" translate="yes" xml:space="preserve">
          <source>Will run post-compile tests and checks, provided 2 conditions are true:</source>
          <target state="translated">두 가지 조건이 참인 경우 컴파일 후 테스트 및 검사를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="53a38af89131b9ade3a29af7b915161c6adee7f0" translate="yes" xml:space="preserve">
          <source>WinRM Connection Options</source>
          <target state="translated">WinRM 연결 옵션</target>
        </trans-unit>
        <trans-unit id="e8f1d0beb5faa2dfa2e63f13cb94bd2f238698af" translate="yes" xml:space="preserve">
          <source>WinRM connections only support password authentication. Provide username and password as shown in the example, or via the &lt;code&gt;--user&lt;/code&gt; and &lt;code&gt;--password&lt;/code&gt; flags.</source>
          <target state="translated">WinRM 연결은 암호 인증 만 지원합니다. 예에 표시된대로 또는 &lt;code&gt;--user&lt;/code&gt; 및 &lt;code&gt;--password&lt;/code&gt; 플래그 를 통해 사용자 이름과 비밀번호를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b8718eb7c1c6d5f2192aa1769aa6d7662203c3c8" translate="yes" xml:space="preserve">
          <source>WinRM requires that a target node be accessible via the ports configured to support access via HTTP or HTTPS.</source>
          <target state="translated">WinRM을 사용하려면 HTTP 또는 HTTPS를 통한 액세스를 지원하도록 구성된 포트를 통해 대상 노드에 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b4dc33985d299a6e9f94c5374ff53394b3eaed52" translate="yes" xml:space="preserve">
          <source>WinSCP</source>
          <target state="translated">WinSCP</target>
        </trans-unit>
        <trans-unit id="10b490c087391634b81c1621d1f90332c54253f6" translate="yes" xml:space="preserve">
          <source>WinSCP for Windows</source>
          <target state="translated">Windows 용 WinSCP</target>
        </trans-unit>
        <trans-unit id="3e42997fe6e9074416e3f0d61a8abdfa3328f9d2" translate="yes" xml:space="preserve">
          <source>WinSCP is an open source application for Windows used to move files between your workstation and a remote computer. WinSCP offers scripting and basic file manager functionality. The download page has many junk buttons, make sure you select &lt;strong&gt;Download WinSPC&lt;/strong&gt;.</source>
          <target state="translated">WinSCP는 워크 스테이션과 원격 컴퓨터간에 파일을 이동하는 데 사용되는 Windows 용 오픈 소스 응용 프로그램입니다. WinSCP는 스크립팅 및 기본 파일 관리자 기능을 제공합니다. 다운로드 페이지에는 많은 정크 버튼이 있습니다 . &lt;strong&gt;WinSPC 다운로드&lt;/strong&gt; 를 선택해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d6b96c6a5e292a9fd7c2d8578546836e79ac369" translate="yes" xml:space="preserve">
          <source>WinSCP lets you transfer files to and from the Linux-based Chef Infra Server to your Windows workstation. You will use this for managing your keys and configurations between machines.</source>
          <target state="translated">WinSCP를 사용하면 Linux 기반 Chef Infra Server에서 Windows 워크 스테이션으로 파일을 전송할 수 있습니다. 이를 사용하여 컴퓨터 간의 키 및 구성을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="5cbba02cb8e0d1e83c3c9aa7d5b687afa1affe3e" translate="yes" xml:space="preserve">
          <source>Windows (Gorilla) Catalog and Manifest</source>
          <target state="translated">Windows (Gorilla) 카탈로그 및 매니페스트</target>
        </trans-unit>
        <trans-unit id="deac856d13ec8ff1e5f80ecdded5f631fcef971e" translate="yes" xml:space="preserve">
          <source>Windows Autopilot</source>
          <target state="translated">Windows Autopilot</target>
        </trans-unit>
        <trans-unit id="bbeb2721092f90666bc7f3f5f8b4950c72c1d2d3" translate="yes" xml:space="preserve">
          <source>Windows Autopilot simplifies the IT-side of managing Windows devices.</source>
          <target state="translated">Windows Autopilot은 Windows 장치 관리의 IT 측을 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="39a817173e17045c67869d252155c5014c27ecb8" translate="yes" xml:space="preserve">
          <source>Windows CPU plugin attribute changes.</source>
          <target state="translated">Windows CPU 플러그인 속성이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="a6493813ef997a1788192e56779b1b738798492c" translate="yes" xml:space="preserve">
          <source>Windows Compatible Resources</source>
          <target state="translated">Windows 호환 리소스</target>
        </trans-unit>
        <trans-unit id="12b5d580eb0ced5fd181b96ecbceea019d8e3d87" translate="yes" xml:space="preserve">
          <source>Windows Containers and Host Kernel Isolation</source>
          <target state="translated">Windows 컨테이너 및 호스트 커널 격리</target>
        </trans-unit>
        <trans-unit id="3759d79a88de87bc9b0b1a2fea642b962fded0d6" translate="yes" xml:space="preserve">
          <source>Windows Cookbooks</source>
          <target state="translated">Windows 쿡북</target>
        </trans-unit>
        <trans-unit id="755da668deb7018799fd9c03a6b944c68c8e1026" translate="yes" xml:space="preserve">
          <source>Windows Developer Tools</source>
          <target state="translated">Windows 개발자 도구</target>
        </trans-unit>
        <trans-unit id="6068c58fc1377a294a266598e4a1be86b7b44628" translate="yes" xml:space="preserve">
          <source>Windows File Redirection</source>
          <target state="translated">Windows 파일 리디렉션</target>
        </trans-unit>
        <trans-unit id="1a28c70822bef11a77c25b8363183b0a0f932897" translate="yes" xml:space="preserve">
          <source>Windows File Security</source>
          <target state="translated">Windows 파일 보안</target>
        </trans-unit>
        <trans-unit id="0b0a11d0a81070c3074c7226c4393d26a9fb8eed" translate="yes" xml:space="preserve">
          <source>Windows Hyper-V containers run inside of a very minimal Hyper-V VM. As a result, they do not share the host&amp;rsquo;s kernel and offer a higher level of security and isolation. The cost of this isolation is that it will take longer for the container to start - perhaps a noticeable delay. Also be aware that the VM is provisioned with a default 1 GB limit of memory. If your service requires more than a gigabyte of memory, you can use the &lt;code&gt;--memory&lt;/code&gt; argument with &lt;code&gt;docker run&lt;/code&gt; and pass a larger limit.</source>
          <target state="translated">Windows Hyper-V 컨테이너는 매우 최소한의 Hyper-V VM 내에서 실행됩니다. 결과적으로 호스트의 커널을 공유하지 않고 더 높은 수준의 보안 및 격리를 제공합니다. 이 격리의 비용은 컨테이너가 시작하는 데 더 오래 걸리므로 눈에 띄게 지연 될 수 있습니다. 또한 VM은 기본 1GB 메모리 제한으로 프로비저닝됩니다. 서비스에 1 기가 바이트 이상의 메모리가 필요한 경우 &lt;code&gt;docker run&lt;/code&gt; 과 함께 &lt;code&gt;--memory&lt;/code&gt; 인수를 사용하고 더 큰 제한을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83e168f98ecd0b1f8b5db31a2e563f517bbbff7a" translate="yes" xml:space="preserve">
          <source>Windows Internal Data Disk</source>
          <target state="translated">Windows 내부 데이터 디스크</target>
        </trans-unit>
        <trans-unit id="92bb5444dfa371b380297cfd67bd0080bc8975d7" translate="yes" xml:space="preserve">
          <source>Windows Licenses</source>
          <target state="translated">Windows 라이선스</target>
        </trans-unit>
        <trans-unit id="676b0f917a04d8d824bedf53c450f08eebc710bf" translate="yes" xml:space="preserve">
          <source>Windows Management Framework (WMF) 5.0 (or higher)</source>
          <target state="translated">WMF (Windows Management Framework) 5.0 이상</target>
        </trans-unit>
        <trans-unit id="a695680a169f834cb90980af459fde815c291b7c" translate="yes" xml:space="preserve">
          <source>Windows Management Framework (WMF) 5.0 February Preview (or higher), which includes Windows PowerShell 5.0.10018.0 (or higher).</source>
          <target state="translated">Windows PowerShell 5.0.10018.0 이상이 포함 된 WMF (Windows Management Framework) 5.0 February Preview 이상.</target>
        </trans-unit>
        <trans-unit id="676dc0d3370a0cd57170206b449f370366f8bcdc" translate="yes" xml:space="preserve">
          <source>Windows Options</source>
          <target state="translated">Windows 옵션</target>
        </trans-unit>
        <trans-unit id="733b53500cac45b1ccabfeea23e2dd3682ceafd7" translate="yes" xml:space="preserve">
          <source>Windows Platform</source>
          <target state="translated">윈도우 플랫폼</target>
        </trans-unit>
        <trans-unit id="7aec405442c5cb6c886214b18022f4f9d2af5cbf" translate="yes" xml:space="preserve">
          <source>Windows PowerShell</source>
          <target state="translated">Windows PowerShell</target>
        </trans-unit>
        <trans-unit id="7fedb45dfe6416b639d0fdd7f946623dfe1ff8dc" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 4.0 is required for using the &lt;strong&gt;dsc_script&lt;/strong&gt; resource with Chef Infra.</source>
          <target state="translated">Chef Infra 에서 &lt;strong&gt;dsc_script&lt;/strong&gt; 리소스 를 사용하려면 Windows PowerShell 4.0이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="e91da6c893abd8d5688a76bbb53d053949364907" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 4.0 is required for using the &lt;strong&gt;dsc_script&lt;/strong&gt; resource with Chef.</source>
          <target state="translated">Chef와 함께 &lt;strong&gt;dsc_script&lt;/strong&gt; 리소스 를 사용하려면 Windows PowerShell 4.0이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="bb49bbe222b03cdcf0474de8fae174d5e3bb9354" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is a task-based command-line shell and scripting language developed by Microsoft. Windows PowerShell uses a document-oriented approach for managing Microsoft Windows-based machines, similar to the approach that is used for managing UNIX- and Linux-based machines. Windows PowerShell is &lt;a href=&quot;http://technet.microsoft.com/en-us/library/bb978526.aspx&quot;&gt;a tool-agnostic platform&lt;/a&gt; that supports using Chef for configuration management.</source>
          <target state="translated">Windows PowerShell은 Microsoft에서 개발 한 작업 기반 명령 줄 셸 및 스크립팅 언어입니다. Windows PowerShell은 UNIX 및 Linux 기반 컴퓨터를 관리하는 데 사용되는 접근 방식과 유사한 Microsoft Windows 기반 컴퓨터를 관리하기 위해 문서 지향 접근 방식을 사용합니다. Windows PowerShell은 구성 관리에 Chef 사용을 지원 &lt;a href=&quot;http://technet.microsoft.com/en-us/library/bb978526.aspx&quot;&gt;하는 도구에 구애받지 않는 플랫폼&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="443c96f77e11cc3fcd636aff894d278f23066697" translate="yes" xml:space="preserve">
          <source>Windows PowerShell is a task-based command-line shell and scripting language developed by Microsoft. Windows PowerShell uses a document-oriented approach for managing Microsoft Windows-based machines, similar to the approach that is used for managing Unix and Linux-based machines. Windows PowerShell is &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/powershell-scripting&quot;&gt;a tool-agnostic platform&lt;/a&gt; that supports using Chef for configuration management.</source>
          <target state="translated">Windows PowerShell은 Microsoft에서 개발 한 작업 기반 명령 줄 셸 및 스크립팅 언어입니다. Windows PowerShell은 Unix 및 Linux 기반 컴퓨터를 관리하는 데 사용되는 접근 방식과 유사한 Microsoft Windows 기반 컴퓨터를 관리하기 위해 문서 지향 접근 방식을 사용합니다. Windows PowerShell은 구성 관리를 위해 Chef 사용을 지원 &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/powershell-scripting&quot;&gt;하는 도구에 구애받지 않는 플랫폼&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ee25a728f15b0affb3899ae3bd7ba5f9d689e8a8" translate="yes" xml:space="preserve">
          <source>Windows Properties</source>
          <target state="translated">Windows 속성</target>
        </trans-unit>
        <trans-unit id="149c92604815e19e215aacc8295aa10ea6a4fda0" translate="yes" xml:space="preserve">
          <source>Windows Resources</source>
          <target state="translated">Windows 리소스</target>
        </trans-unit>
        <trans-unit id="155b9e74793183c6570c0dbe2bc5802f8032b740" translate="yes" xml:space="preserve">
          <source>Windows Server Containers</source>
          <target state="translated">Windows Server 컨테이너</target>
        </trans-unit>
        <trans-unit id="c44685b580fd113b170fbbedc36ba6b24c86f7c3" translate="yes" xml:space="preserve">
          <source>Windows and Red Hat Enterprise Linux can both be configured for FIPS mode using a kernel-level setting. After FIPS mode is enabled at the kernel level, the operating system will only use FIPS approved algorithms and keys during operation.</source>
          <target state="translated">Windows 및 Red Hat Enterprise Linux는 모두 커널 수준 설정을 사용하여 FIPS 모드로 구성 할 수 있습니다. 커널 수준에서 FIPS 모드가 활성화되면 운영 체제는 작동 중 FIPS 승인 알고리즘 및 키만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8c7ee7b6535eac5ad2f7e8bfe026c2bb1c225098" translate="yes" xml:space="preserve">
          <source>Windows only: The domain of the user user specified by the user property. If not specified, the user name and password specified by the user and password properties will be used to resolve that user against the domain in which the system running Chef Infra Client is joined, or if that system is not joined to a domain it will resolve the user as a local account on that system. An alternative way to specify the domain is to leave this property unspecified and specify the domain as part of the user property.</source>
          <target state="translated">Windows 전용 : 사용자 속성에 지정된 사용자 사용자의 도메인입니다. 지정하지 않으면 사용자 및 암호 속성에서 지정한 사용자 이름과 암호를 사용하여 Chef Infra Client를 실행하는 시스템이 가입 된 도메인에 대해 해당 사용자를 확인하거나 해당 시스템이 도메인에 가입되지 않은 경우 확인합니다. 해당 시스템의 로컬 계정으로 사용자. 도메인을 지정하는 또 다른 방법은이 속성을 지정하지 않고 도메인을 사용자 속성의 일부로 지정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="04544592acf410443e186b24212305ba87073523" translate="yes" xml:space="preserve">
          <source>Windows only: The password of the user specified by the user property. This property is mandatory if user is specified on Windows and may only be specified if user is specified. The sensitive property for this resource will automatically be set to true if password is specified.</source>
          <target state="translated">Windows 전용 : 사용자 특성에 지정된 사용자의 비밀번호입니다. 이 속성은 사용자가 Windows에 지정된 경우 필수이며 사용자가 지정된 경우에만 지정할 수 있습니다. 이 자원의 민감한 특성은 비밀번호가 지정된 경우 자동으로 true로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="07bb1b76cc59a3c6517426a4a456baca99e74eb6" translate="yes" xml:space="preserve">
          <source>Windows only: Use to specify the domain in which the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; are located.</source>
          <target state="translated">Windows 전용 : &lt;code&gt;username&lt;/code&gt; 과 &lt;code&gt;password&lt;/code&gt; 가 있는 도메인을 지정하는 데 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="d71b2da21593292dc1058d5edb3fa8c398ef65d6" translate="yes" xml:space="preserve">
          <source>Windows only: Use to specify the user name.</source>
          <target state="translated">Windows 전용 : 사용자 이름을 지정하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9a821b4e7b7570bd47677b5e3b00c336bb5ba537" translate="yes" xml:space="preserve">
          <source>Windows only:. Use to specify the password for username.</source>
          <target state="translated">Windows 전용 :. 사용자 이름의 비밀번호를 지정하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="586ee0a8bb18c7b49a142f9c8f6578c6eb1a86a2" translate="yes" xml:space="preserve">
          <source>Windows will throw errors when path name lengths are too long. For this reason, it&amp;rsquo;s often helpful to use a very short top-level directory, much like what is done in UNIX and Linux. For example, Chef uses &lt;code&gt;/opt/&lt;/code&gt; to install Chef Workstation on macOS. A similar approach can be done on Microsoft Windows, by creating a top-level directory with a short name. For example: &lt;code&gt;C:\chef&lt;/code&gt;.</source>
          <target state="translated">경로 이름 길이가 너무 길면 Windows에서 오류가 발생합니다. 이러한 이유로 UNIX 및 Linux에서 수행되는 것과 같이 매우 짧은 최상위 디렉토리를 사용하는 것이 종종 도움이됩니다. 예를 들어 Chef는 &lt;code&gt;/opt/&lt;/code&gt; 를 사용하여 macOS에 Chef Workstation을 설치합니다. Microsoft Windows에서도 짧은 이름으로 최상위 디렉토리를 생성하여 유사한 접근 방식을 수행 할 수 있습니다. 예 : &lt;code&gt;C:\chef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8be42c22f35e817801d9c45cc27bcaed63ed5901" translate="yes" xml:space="preserve">
          <source>Windows workstations will need to install &lt;a href=&quot;https://winscp.net/eng/index.php&quot;&gt;WinSCP&lt;/a&gt; or another similar tool.</source>
          <target state="translated">Windows 워크 스테이션은 &lt;a href=&quot;https://winscp.net/eng/index.php&quot;&gt;WinSCP&lt;/a&gt; 또는 다른 유사한 도구 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a38c3706d2db5942adabd70efd64e885927ee16c" translate="yes" xml:space="preserve">
          <source>Windows: No additional requirements</source>
          <target state="translated">Windows : 추가 요구 사항 없음</target>
        </trans-unit>
        <trans-unit id="f4c9b57a115d4d304754d2f93b3cf8e90bbe15a9" translate="yes" xml:space="preserve">
          <source>Wire Encryption</source>
          <target state="translated">유선 암호화</target>
        </trans-unit>
        <trans-unit id="4d44713adfdc65df2bd2ad1c83cff250e7a016c9" translate="yes" xml:space="preserve">
          <source>Wire encryption of inter-Supervisor traffic</source>
          <target state="translated">수퍼바이저 간 트래픽의 유선 암호화</target>
        </trans-unit>
        <trans-unit id="5388de419227461f4797e3a6c5b6468cd9f82a70" translate="yes" xml:space="preserve">
          <source>Wire up a notification from a service resource to stop and start the service with a 60 second delay.</source>
          <target state="translated">서비스 리소스의 알림을 연결하여 60 초 지연으로 서비스를 중지하고 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a5b171d72e6fc51ad9802674573a895337b82845" translate="yes" xml:space="preserve">
          <source>Wise</source>
          <target state="translated">Wise</target>
        </trans-unit>
        <trans-unit id="d7e9dc1ae98ae0ca9c931063f8a9c5529e3e5e1e" translate="yes" xml:space="preserve">
          <source>With 0.56.0, however, this behavior can be modified using the new runtime service option &lt;code&gt;--binding-mode&lt;/code&gt;. By setting &lt;code&gt;--binding-mode=relaxed&lt;/code&gt; when loading a service, that service can start immediately, whether there are any members of a bound service group present or not. (Setting &lt;code&gt;--binding-mode=strict&lt;/code&gt; will give you the previous, start-only-after-all-bound-groups-are-present behavior. This is also the current default, though &lt;code&gt;relaxed&lt;/code&gt; will be the eventual default for Chef Habitat 1.0.0.). Such a service should have configuration and lifecycle hook templates written in such a way that the service can remain operational (though perhaps with reduced functionality) when there are no live members of a bound service group present in the network census.</source>
          <target state="translated">그러나 0.56.0에서는 새로운 런타임 서비스 옵션 &lt;code&gt;--binding-mode&lt;/code&gt; 를 사용하여이 동작을 수정할 수 있습니다 . 서비스를로드 할 때 &lt;code&gt;--binding-mode=relaxed&lt;/code&gt; 를 설정 하면 바인딩 된 서비스 그룹의 구성원이 있는지 여부에 관계없이 해당 서비스를 즉시 시작할 수 있습니다. ( &lt;code&gt;--binding-mode=strict&lt;/code&gt; 를 설정 하면 이전의 시작 전용 이후 모든 바인딩 된 그룹이 존재하는 동작이 제공됩니다. 이는 &lt;code&gt;relaxed&lt;/code&gt; 되었지만 현재 기본값이기도합니다.Chef Habitat 1.0.0의 최종 기본값이됩니다.) 이러한 서비스에는 네트워크 센서스에 바인딩 된 서비스 그룹의 라이브 구성원이 없을 때 서비스가 작동 상태를 유지할 수 있도록 작성된 구성 및 수명주기 후크 템플릿이 있어야합니다 (아마도 기능이 저하되었을 수 있음).</target>
        </trans-unit>
        <trans-unit id="879e139a38d2e9f2f677ea5143e62eacdf40b485" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://github.com/munki/munki&quot;&gt;Munki&lt;/a&gt;, the configuration files are in XML and editing them directly can produce errors so we recommend using command line tools.</source>
          <target state="translated">로 &lt;a href=&quot;https://github.com/munki/munki&quot;&gt;Munki&lt;/a&gt; , 구성 파일은 XML에 있고 우리는 명령 줄 도구를 사용하는 것이 좋습니다 그래서 직접 편집하면 오류를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5e7e741378eed4caa0a7de0aa52c78f854bd5e4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;chef-run&lt;/code&gt;, you can run the resource directly from the command-line, converging your targets with a single resource, without creating a cookbook or recipe:</source>
          <target state="translated">함께 &lt;code&gt;chef-run&lt;/code&gt; , 당신은 요리 책이나 요리법을 생성하지 않고, 하나의 자원으로 목표를 수렴, 명령 줄에서 직접 자원을 실행할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="258e84f31318a582fd49804f0452b27bc7daf642" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;force_default!&lt;/code&gt; there is no other data under &lt;code&gt;'bar'&lt;/code&gt;:</source>
          <target state="translated">와 &lt;code&gt;force_default!&lt;/code&gt; &lt;code&gt;'bar'&lt;/code&gt; 아래에 다른 데이터가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="46a478666600e9dda07b62458df8069293042574" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;services.yml&lt;/code&gt; containing:</source>
          <target state="translated">다음을 포함하는 &lt;code&gt;services.yml&lt;/code&gt; 사용 :</target>
        </trans-unit>
        <trans-unit id="e2e2ec8e901f95849adc2e6d632a88f9e323dc37" translate="yes" xml:space="preserve">
          <source>With Chef InSpec 2.0, we introduced new families to help distinguish the cloud platforms. The new families can restrict the platform family to &lt;code&gt;os&lt;/code&gt;, &lt;code&gt;aws&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt; or &lt;code&gt;gcp&lt;/code&gt;.</source>
          <target state="translated">Chef InSpec 2.0을 통해 클라우드 플랫폼을 구별하는 데 도움이되는 새로운 제품군을 도입했습니다. 새 제품군은 플랫폼 제품군을 &lt;code&gt;os&lt;/code&gt; , &lt;code&gt;aws&lt;/code&gt; , &lt;code&gt;azure&lt;/code&gt; 또는 &lt;code&gt;gcp&lt;/code&gt; 로 제한 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfc8d59d903b455a3090e735a27bc164b24bbae1" translate="yes" xml:space="preserve">
          <source>With Chef InSpec, you can check if at least one of a collection of checks is true. For example, if you configure a setting in two different locations, then you may want to test if either configuration A or configuration B is set. Do this task with the &lt;code&gt;describe.one&lt;/code&gt; block. &lt;code&gt;describe.one&lt;/code&gt; defines a set of &lt;code&gt;describe&lt;/code&gt; blocks where only one block needs to pass.</source>
          <target state="translated">Chef InSpec을 사용하면 검사 모음 중 하나 이상이 참인지 확인할 수 있습니다. 예를 들어 서로 다른 두 위치에서 설정을 구성하는 경우 구성 A 또는 구성 B가 설정되었는지 테스트 할 수 있습니다. &lt;code&gt;describe.one&lt;/code&gt; 블록 으로이 작업을 수행합니다 . &lt;code&gt;describe.one&lt;/code&gt; 은 하나의 블록 만 통과해야하는 &lt;code&gt;describe&lt;/code&gt; 블록 집합을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="4a7ab76d41f2914b4a4b08ba03c79cca32b30be1" translate="yes" xml:space="preserve">
          <source>With Chef InSpec, you can do more than ensure that your physical servers are in compliance. You can, for example, assess data in a database or inspect the configuration of virtual resources by using their API.</source>
          <target state="translated">Chef InSpec을 사용하면 물리적 서버가 규정을 준수하는지 확인하는 것 이상을 수행 할 수 있습니다. 예를 들어 데이터베이스의 데이터를 평가하거나 해당 API를 사용하여 가상 리소스의 구성을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c68742b5d73cf117e37b1b6d72d50ebea83530c9" translate="yes" xml:space="preserve">
          <source>With Cookstyle, we update the RuboCop engine for bug and performance fixes, but we only change the set of cops that will fail tests once a year during Chef Infra&amp;rsquo;s major release in April. All new cops are introduced at RuboCop&amp;rsquo;s &amp;ldquo;refactor&amp;rdquo; alert level, meaning they will alert to the screen as you run Cookstyle, but they won&amp;rsquo;t fail a build. This stability means you are free to upgrade releases of Cookstyle without being forced to update your infrastructure code.</source>
          <target state="translated">Cookstyle을 통해 버그 및 성능 수정을 위해 RuboCop 엔진을 업데이트하지만, 4 월 Chef Infra의 주요 릴리스 기간 동안 테스트에 실패하는 경찰 세트 만 변경합니다. 모든 새로운 경찰은 RuboCop의 &quot;리팩터링&quot;경고 수준에서 도입됩니다. 즉, Cookstyle을 실행할 때 화면에 경고를 보내지 만 빌드에 실패하지는 않습니다. 이러한 안정성은 인프라 코드를 강제로 업데이트하지 않고도 Cookstyle 릴리스를 자유롭게 업그레이드 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="bceacd37d4488cc9a9381b36888344e817d84d57" translate="yes" xml:space="preserve">
          <source>With WebUI</source>
          <target state="translated">WebUI 사용</target>
        </trans-unit>
        <trans-unit id="6d180225395aa938ca1d96a13a5bf37c6b823a95" translate="yes" xml:space="preserve">
          <source>With a full assignment:</source>
          <target state="translated">전체 과제로 :</target>
        </trans-unit>
        <trans-unit id="646f09d8a75dfb9e7d47dc558d2b192ee7c2d3b0" translate="yes" xml:space="preserve">
          <source>With a version of InSpec above 4.0.0, it is possible to create a profile with the following command:</source>
          <target state="translated">4.0.0 이상의 InSpec 버전에서는 다음 명령을 사용하여 프로필을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a9980596f335f9cf06893c2e88efaa8d6c05a35" translate="yes" xml:space="preserve">
          <source>With all this, we can come up with a robust Chef Habitat network architecture. In fact, this is the same architecture the Chef Habitat team uses to run the public &lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;Builder service&lt;/a&gt;.</source>
          <target state="translated">이 모든 것을 통해 강력한 Chef Habitat 네트워크 아키텍처를 만들 수 있습니다. 사실 이것은 Chef Habitat 팀이 공용 &lt;a href=&quot;https://bldr.habitat.sh&quot;&gt;Builder 서비스&lt;/a&gt; 를 실행하는 데 사용하는 것과 동일한 아키텍처 입니다.</target>
        </trans-unit>
        <trans-unit id="4e2be5f3d6920712ead6cf8d391493bb50cd46f0" translate="yes" xml:space="preserve">
          <source>With an additional &lt;code&gt;group_query_filter&lt;/code&gt;, the final filter is</source>
          <target state="translated">추가 &lt;code&gt;group_query_filter&lt;/code&gt; 를 사용하면 최종 필터는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="71d294cbd746726f768e0115df4546ccbda6f835" translate="yes" xml:space="preserve">
          <source>With override attributes:</source>
          <target state="translated">재정의 속성으로 :</target>
        </trans-unit>
        <trans-unit id="67cbd0eabe29e375bb9ba98a0f2db8035dd34bc1" translate="yes" xml:space="preserve">
          <source>With plural resources, &lt;code&gt;exist&lt;/code&gt; has a special meaning: did the filter match anything?</source>
          <target state="translated">자원이 복수 인 경우 &lt;code&gt;exist&lt;/code&gt; 는 특별한 의미를 갖습니다. 필터가 일치하는 것이 있습니까?</target>
        </trans-unit>
        <trans-unit id="14f0ebeee2d8e5100e6282a701c172c3536df6df" translate="yes" xml:space="preserve">
          <source>With runtime binding, a consumer service can use a &amp;ldquo;binding name&amp;rdquo; of their choosing in their configuration and lifecycle hook templates as a kind of handle to refer to the configuration values they need from the producer service. This name isn&amp;rsquo;t inherently tied to any particular package or service group name. Instead, when the service is run, users associate a service group with that binding name, which gives Chef Habitat all the information it needs to wire the producer and consumer services together.</source>
          <target state="translated">런타임 바인딩을 사용하면 소비자 서비스는 구성 및 수명주기 후크 템플릿에서 선택한 &quot;바인딩 이름&quot;을 일종의 핸들로 사용하여 생산자 서비스에서 필요한 구성 값을 참조 할 수 있습니다. 이 이름은 본질적으로 특정 패키지 또는 서비스 그룹 이름과 관련이 없습니다. 대신 서비스가 실행될 때 사용자는 서비스 그룹을 해당 바인딩 이름과 연결하여 Chef Habitat이 생산자와 소비자 서비스를 함께 연결하는 데 필요한 모든 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="41602f2b5a98fc11739bd2887157b78101b5eb9f" translate="yes" xml:space="preserve">
          <source>With the 0.83.0 release of the Chef Habitat Supervisor, it is possible to have greater control over logging output, including the ability to dynamically adjust the logging configuration of a running Supervisor. There are two main ways of configuring logging, each of which has their own strengths and weaknesses: using environment variables, and using a configuration file.</source>
          <target state="translated">Chef Habitat Supervisor 0.83.0 릴리스를 사용하면 실행중인 Supervisor의 로깅 구성을 동적으로 조정하는 기능을 포함하여 로깅 출력을 더 잘 제어 할 수 있습니다. 로깅을 구성하는 두 가지 주요 방법이 있으며, 각각 고유 한 장단점이 있습니다. 환경 변수 사용과 구성 파일 사용입니다.</target>
        </trans-unit>
        <trans-unit id="e18028a6377904e992d9168509bcabd54ab3014b" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;:before&lt;/code&gt; notification, the action specified for the &lt;code&gt;nginx&lt;/code&gt; resource will not run until action has been taken on the notified resource (&lt;code&gt;php-fpm&lt;/code&gt;).</source>
          <target state="translated">함께 &lt;code&gt;:before&lt;/code&gt; 통지는 지정된 작업 &lt;code&gt;nginx&lt;/code&gt; 조치가 통보 자원 (촬영 때까지 자원이 실행되지 않습니다 &lt;code&gt;php-fpm&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1d9c8864d8a552e3879c77f195628ae597bb271a" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;:create&lt;/code&gt; action, a user&amp;rsquo;s home directory is created based on &lt;code&gt;HOME_DIR&lt;/code&gt;. If the home directory is missing, it is created unless &lt;code&gt;CREATE_HOME&lt;/code&gt; in &lt;code&gt;/etc/login.defs&lt;/code&gt; is set to &lt;code&gt;no&lt;/code&gt;. When created, a skeleton set of files and sub-directories is also created in the home directory.</source>
          <target state="translated">&lt;code&gt;:create&lt;/code&gt; 조치를 사용하면 &lt;code&gt;HOME_DIR&lt;/code&gt; 에 따라 사용자의 홈 디렉토리가 작성됩니다 . 홈 디렉토리가없는 경우를 제외 작성됩니다 &lt;code&gt;CREATE_HOME&lt;/code&gt; 에서 &lt;code&gt;/etc/login.defs&lt;/code&gt; 로 설정되어 &lt;code&gt;no&lt;/code&gt; . 작성되면 파일 및 서브 디렉토리의 스켈레톤 세트도 홈 디렉토리에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="4ff8894b04fbfd4489b0b6bab41c67509b8cafae" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;:modify&lt;/code&gt; action, a user&amp;rsquo;s home directory is moved to &lt;code&gt;HOME_DIR&lt;/code&gt;. If the home directory is missing, it is created unless &lt;code&gt;CREATE_HOME&lt;/code&gt; in &lt;code&gt;/etc/login.defs&lt;/code&gt; is set to &lt;code&gt;no&lt;/code&gt;. The contents of the user&amp;rsquo;s home directory are moved to the new location.</source>
          <target state="translated">으로 &lt;code&gt;:modify&lt;/code&gt; 작업을 사용자의 홈 디렉토리로 이동 &lt;code&gt;HOME_DIR&lt;/code&gt; . 홈 디렉토리가없는 경우를 제외 작성됩니다 &lt;code&gt;CREATE_HOME&lt;/code&gt; 에서 &lt;code&gt;/etc/login.defs&lt;/code&gt; 로 설정되어 &lt;code&gt;no&lt;/code&gt; . 사용자 홈 디렉토리의 내용이 새 위치로 이동됩니다.</target>
        </trans-unit>
        <trans-unit id="67a21192cfd06f6eae0473e44e0b088677ee3480" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;chef-automate&lt;/code&gt; CLI:</source>
          <target state="translated">와 &lt;code&gt;chef-automate&lt;/code&gt; CLI :</target>
        </trans-unit>
        <trans-unit id="4075a8f541dc9b6709c811df4fc8f2917078fc6a" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;include_controls&lt;/code&gt; command in a profile, all controls from the named profile will be executed every time the including profile is executed.</source>
          <target state="translated">프로필에서 &lt;code&gt;include_controls&lt;/code&gt; 명령을 사용하면 포함 프로필이 실행될 때마다 명명 된 프로필의 모든 컨트롤이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="68167be2a17d68ea6bcc400f378088469d8f4519" translate="yes" xml:space="preserve">
          <source>With the cluster down, take a filesystem level backup of all backend nodes.</source>
          <target state="translated">클러스터가 다운 된 상태에서 모든 백엔드 노드의 파일 시스템 수준 백업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0d13bdd4285017b2667a602d554176d569956dd7" translate="yes" xml:space="preserve">
          <source>With the credentials are in place, you may now execute InSpec:</source>
          <target state="translated">자격 증명이 있으면 이제 InSpec을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf2200878084bfab02f9303a1df2f242ce6ccbcc" translate="yes" xml:space="preserve">
          <source>With the improved custom resource pattern available starting with chef-client 12.5, the need to use definitions is greatly minimized. In every case when considering to use a definition, first evaluate whether that defintion is better represented as a custom resource.</source>
          <target state="translated">chef-client 12.5부터 사용 가능한 개선 된 사용자 정의 자원 패턴으로 정의 사용 필요성이 크게 최소화됩니다. 정의 사용을 고려할 때 항상 정의가 사용자 정의 자원으로 더 잘 표현되는지 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="a7e04fd8901522241bf3136eb959ff567627ad7d" translate="yes" xml:space="preserve">
          <source>With the new application operations dashboard in Chef Automate, operations teams gain comprehensive and customizable visibility into the health of the services that make up the application. This makes it easier to understand what is degrading the health of an applications and to keep it running smoothly.</source>
          <target state="translated">Chef Automate의 새로운 애플리케이션 운영 대시 보드를 통해 운영 팀은 애플리케이션을 구성하는 서비스의 상태에 대한 포괄적이고 사용자 정의 가능한 가시성을 확보합니다. 이를 통해 애플리케이션의 상태를 저하시키는 원인을 더 쉽게 이해하고 원활하게 실행되도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de129ba2444c2747aa8ec4e53b9e9746b62df3b7" translate="yes" xml:space="preserve">
          <source>With the release of &lt;code&gt;scaffolding-chef-inspec&lt;/code&gt; version 0.16.0 (Linux) and version 0.18.0 (Windows), we added the Chef InSpec Waivers feature. This feature allows you to specify a control ID in your Chef Habitat config that you would like to skip, or waive.</source>
          <target state="translated">의 출시와 함께 &lt;code&gt;scaffolding-chef-inspec&lt;/code&gt; 버전 0.16.0 (리눅스) 및 버전 0.18.0 (윈도우), 우리는 요리사 INSPEC 면제 기능을 추가했다. 이 기능을 사용하면 Chef Habitat 구성에서 건너 뛰거나 포기하려는 제어 ID를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d35a2eabab2f22719f222005e8255f5fcde936cd" translate="yes" xml:space="preserve">
          <source>With these settings, the Identity Provider&amp;rsquo;s metadata will be refreshed every day (1d), and if this request fails, Chef Automate will wait one minute (1m) before trying again. On failure, a retry will be attempted five times total. If the retries don&amp;rsquo;t succeed, the next attempt to fetch the metadata will be at the next refresh interval.</source>
          <target state="translated">이러한 설정을 사용하면 아이덴티티 공급자의 메타 데이터가 매일 (1d) 새로 고쳐지고이 요청이 실패하면 Chef Automate는 다시 시도하기 전에 1 분 (1 분)을 기다립니다. 실패시 재 시도는 총 5 번 시도됩니다. 재 시도가 성공하지 못하면 메타 데이터를 가져 오려는 다음 시도는 다음 새로 고침 간격에 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ecb7d5623293cccea71b1180430304ab4d03dee" translate="yes" xml:space="preserve">
          <source>Within Chef Automate, the &lt;em&gt;Desktop&lt;/em&gt; dashboard uses four panels to summarize information: &lt;em&gt;Daily Check-in&lt;/em&gt;&lt;em&gt;Check-in History&lt;/em&gt;, &lt;em&gt;Top 10 Errors&lt;/em&gt;, and &lt;em&gt;Time since Last Check-in&lt;/em&gt;. Selecting rows within these displays will list relevant desktops and selecting a singular desktop reveals its detailed information.</source>
          <target state="translated">Chef Automate 내에서 &lt;em&gt;Desktop&lt;/em&gt; 대시 보드는 4 개의 패널을 사용하여 &lt;em&gt;일일 체크인 체크인 &lt;/em&gt;&lt;em&gt;내역&lt;/em&gt; , &lt;em&gt;상위 10 개 오류&lt;/em&gt; 및 &lt;em&gt;마지막 체크인 이후 시간 등&lt;/em&gt; 정보를 요약합니다 . 이러한 디스플레이 내에서 행을 선택하면 관련 데스크톱이 나열되고 단일 데스크톱을 선택하면 자세한 정보가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="242a392f607614213b54e157a13dbe74ed362b12" translate="yes" xml:space="preserve">
          <source>Within a &lt;a href=&quot;#describe&quot;&gt;describe block&lt;/a&gt;, &lt;em&gt;&lt;code&gt;it&lt;/code&gt;&lt;/em&gt; declares an individual &lt;a href=&quot;#test&quot;&gt;test&lt;/a&gt; directly against the &lt;a href=&quot;#resource&quot;&gt;resource&lt;/a&gt; (as opposed to testing against one of the resource&amp;rsquo;s &lt;a href=&quot;#property&quot;&gt;properties&lt;/a&gt;, as &lt;a href=&quot;#its&quot;&gt;its&lt;/a&gt; does). Though it is possible to use &lt;a href=&quot;#universal-matcher&quot;&gt;universal matchers&lt;/a&gt; with &lt;code&gt;it&lt;/code&gt;, it is much more typical to use &lt;a href=&quot;#resource-specific-matchers&quot;&gt;resource-specific matchers&lt;/a&gt;.</source>
          <target state="translated">A는 내 &lt;a href=&quot;#describe&quot;&gt;블록을 설명&lt;/a&gt; , &lt;em&gt; &lt;code&gt;it&lt;/code&gt; &lt;/em&gt; 개인 선언 &lt;a href=&quot;#test&quot;&gt;테스트를&lt;/a&gt; 에 대해 직접 &lt;a href=&quot;#resource&quot;&gt;자원&lt;/a&gt; (자원의 중 하나에 대해 테스트에 반대 &lt;a href=&quot;#property&quot;&gt;속성&lt;/a&gt; 으로, &lt;a href=&quot;#its&quot;&gt;그것&lt;/a&gt; 않습니다). 이 사용할 수 있지만 &lt;a href=&quot;#universal-matcher&quot;&gt;보편적 매처 (matcher)를&lt;/a&gt; 가진 &lt;code&gt;it&lt;/code&gt; , 그것은 훨씬 더 일반적으로 사용하는 &lt;a href=&quot;#resource-specific-matchers&quot;&gt;자원 별 매처 (matcher)를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d65f46d1ae9be3de6aa833a2b71ce7b1725843db" translate="yes" xml:space="preserve">
          <source>Within a &lt;a href=&quot;#describe&quot;&gt;describe block&lt;/a&gt;, &lt;em&gt;&lt;code&gt;its&lt;/code&gt;&lt;/em&gt; declares an individual &lt;a href=&quot;#test&quot;&gt;test&lt;/a&gt; against a property of the &lt;a href=&quot;#resource&quot;&gt;resource&lt;/a&gt; (as opposed to testing directly against the resource itself, as &lt;a href=&quot;#it&quot;&gt;it&lt;/a&gt; does). You must use &lt;a href=&quot;#universal-matcher&quot;&gt;universal matchers&lt;/a&gt; with &lt;code&gt;its&lt;/code&gt;; you cannot use &lt;a href=&quot;#resource-specific-matchers&quot;&gt;resource-specific matchers&lt;/a&gt;.</source>
          <target state="translated">A는 내 &lt;a href=&quot;#describe&quot;&gt;블록을 설명&lt;/a&gt; , &lt;em&gt; &lt;code&gt;its&lt;/code&gt; &lt;/em&gt; 개인 선언 &lt;a href=&quot;#test&quot;&gt;시험&lt;/a&gt; 의 속성에 대한 &lt;a href=&quot;#resource&quot;&gt;리소스&lt;/a&gt; (자원 자체에 대해 직접 테스트에 반대로, &lt;a href=&quot;#it&quot;&gt;그것&lt;/a&gt; 않습니다). &lt;a href=&quot;#universal-matcher&quot;&gt;범용 매처&lt;/a&gt; 를 &lt;code&gt;its&lt;/code&gt; 과 함께 사용해야합니다 . &lt;a href=&quot;#resource-specific-matchers&quot;&gt;리소스 별 매처를&lt;/a&gt; 사용할 수 없습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
