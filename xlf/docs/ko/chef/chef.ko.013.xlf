<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="fbb4feb0708f0b9ea72382995e00972489d29b81" translate="yes" xml:space="preserve">
          <source>For each action, use a collection of resources that are built into Chef to define the steps required to complete the action</source>
          <target state="translated">각 조치에 대해 Chef에 내장 된 자원 콜렉션을 사용하여 조치를 완료하는 데 필요한 단계를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="1fa2b5b888fbf9e1550cfce388c503bd32480879" translate="yes" xml:space="preserve">
          <source>For each additional frontend node you wish to add to your cluster:</source>
          <target state="translated">클러스터에 추가하려는 각 추가 프런트 엔드 노드에 대해 :</target>
        </trans-unit>
        <trans-unit id="77577a761378087cb413addb58466a04f30fa7dd" translate="yes" xml:space="preserve">
          <source>For each additional node do the following in sequence (if you attempt to join nodes in parallel the cluster may fail to become available):</source>
          <target state="translated">각 추가 노드에 대해 다음을 순서대로 수행하십시오 (노드를 병렬로 결합하려고하면 클러스터를 사용하지 못할 수 있음).</target>
        </trans-unit>
        <trans-unit id="13685295d729081e3224b7380fd484ed55ea67f6" translate="yes" xml:space="preserve">
          <source>For each data bag item, a JSON file is created and placed in the appropriate sub-directory.</source>
          <target state="translated">각 데이터 백 항목에 대해 JSON 파일이 생성되어 적절한 하위 디렉터리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="dfbdfcaec5d8f5cc658aa506134ff1c9143f8f4f" translate="yes" xml:space="preserve">
          <source>For each data bag, a sub-directory is created that has the same name as the data bag.</source>
          <target state="translated">각 데이터 백에 대해 데이터 백과 동일한 이름을 가진 하위 디렉토리가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e176b3eaa32d2d985098c196f1ff5a17d1d0b0c4" translate="yes" xml:space="preserve">
          <source>For each frontend server, use the following steps to set up the Chef Infra Server:</source>
          <target state="translated">각 프런트 엔드 서버에 대해 다음 단계를 사용하여 Chef Infra Server를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="35be3f3e8726d22d5c0ad1feb6f37b4501d1ad3d" translate="yes" xml:space="preserve">
          <source>For each frontend server, use the following steps to set up the Chef server:</source>
          <target state="translated">각 프런트 엔드 서버에 대해 다음 단계를 사용하여 Chef 서버를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9832916640b3e56e52431274c3d4fe6b186cd0c8" translate="yes" xml:space="preserve">
          <source>For each group listed under &lt;strong&gt;Name&lt;/strong&gt;, select or de-select the &lt;strong&gt;Read&lt;/strong&gt;, &lt;strong&gt;Update&lt;/strong&gt;, &lt;strong&gt;Delete&lt;/strong&gt;, and &lt;strong&gt;Grant&lt;/strong&gt; permissions.</source>
          <target state="translated">&lt;strong&gt;이름&lt;/strong&gt; 아래에 나열된 각 그룹에 대해 &lt;strong&gt;읽기&lt;/strong&gt; , &lt;strong&gt;업데이트&lt;/strong&gt; , &lt;strong&gt;삭제&lt;/strong&gt; 및 권한 &lt;strong&gt;부여를&lt;/strong&gt; 선택하거나 선택 &lt;strong&gt;취소하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2da6dd2e5277e025d3d8bba44655e56226ccee7f" translate="yes" xml:space="preserve">
          <source>For each of the upstream services, &lt;code&gt;pong&lt;/code&gt; or &lt;code&gt;fail&lt;/code&gt; is returned. The possible upstream names are:</source>
          <target state="translated">각 업스트림 서비스에 대해 &lt;code&gt;pong&lt;/code&gt; 또는 &lt;code&gt;fail&lt;/code&gt; 이 반환됩니다. 가능한 업스트림 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="10272f40211a0925f662fe605bf45eac759d8644" translate="yes" xml:space="preserve">
          <source>For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:</source>
          <target state="translated">위의 각 와일드 카드 예에서 가능한 값은 괄호 안에 포함되어 표시됩니다. 검색 쿼리를 실행할 때 와일드 카드에 대한 쿼리 구문은 다음과 유사하게 노드 이름을 생략하는 것입니다 (밑줄은 유지함).</target>
        </trans-unit>
        <trans-unit id="f0a3aae8cdd2103f6607fa43fb29f9b38a2ecbbb" translate="yes" xml:space="preserve">
          <source>For each symbol, states the file name, line number, character number, type of issue or error, describes the issue or error, and specifies the location in the source code at which the issue or error is located</source>
          <target state="translated">각 기호에 대해 파일 이름, 줄 번호, 문자 번호, 문제 또는 오류 유형을 명시하고 문제 또는 오류를 설명하고 문제 또는 오류가있는 소스 코드의 위치를 ​​지정합니다.</target>
        </trans-unit>
        <trans-unit id="28adc5c9c580f6af2c446d42c5832fbadbec000b" translate="yes" xml:space="preserve">
          <source>For encrypted data bag items, use &lt;em&gt;either&lt;/em&gt;&lt;code&gt;--secret&lt;/code&gt; or &lt;code&gt;--secret-file&lt;/code&gt;, not both.</source>
          <target state="translated">암호화 된 데이터 백 항목의 &lt;em&gt;경우 &lt;/em&gt; &lt;code&gt;--secret&lt;/code&gt; 또는 &lt;code&gt;--secret-file&lt;/code&gt; &lt;em&gt;중 &lt;/em&gt;하나만 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a703cfe1b7d271f0d3f95fcce930c5e2a057f69" translate="yes" xml:space="preserve">
          <source>For encrypted data bag items, use either &lt;code&gt;--secret&lt;/code&gt; or &lt;code&gt;--secret-file&lt;/code&gt;, not both.</source>
          <target state="translated">암호화 된 데이터 백 항목의 경우 &lt;code&gt;--secret&lt;/code&gt; 또는 &lt;code&gt;--secret-file&lt;/code&gt; 중 하나만 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">예를 들면</target>
        </trans-unit>
        <trans-unit id="e09dd7cb2bfc08c736160f9724edc78af9fe5179" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/etc/hosts&lt;/code&gt; would contain a line like:</source>
          <target state="translated">예를 들어, &lt;code&gt;/etc/hosts&lt;/code&gt; 에는 다음과 같은 행이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="663c1338c5c39f1d7c327d63ab06e19ef9432824" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;/etc/hosts&lt;/code&gt; would contain lines like:</source>
          <target state="translated">예를 들어, &lt;code&gt;/etc/hosts&lt;/code&gt; 에는 다음과 같은 행이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="45f4847264b2d08ec999af797a1e5261c6e41ad1" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;RUST_LOG=habitat_sup::manager=info&lt;/code&gt; will cause all log messages at the &lt;code&gt;info&lt;/code&gt; level or more severe (i.e., &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, and &lt;code&gt;info&lt;/code&gt;) originating anywhere in the module hierarchy rooted at &lt;code&gt;habitat_sup::manager&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;RUST_LOG=habitat_sup::manager=info&lt;/code&gt; 는 &lt;code&gt;info&lt;/code&gt; 수준 의 모든 로그 메시지 또는 더 심각한 (예 : &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; 및 &lt;code&gt;info&lt;/code&gt; )이 &lt;code&gt;habitat_sup::manager&lt;/code&gt; 기반으로하는 모듈 계층의 모든 위치에서 시작되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="f7a99b7e9dc39b34167fec3170cbca7af2586f7f" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;RUST_LOG=info,habitat_sup::manager=debug,tokio_reactor=error&lt;/code&gt; will limit logs generally to the &lt;code&gt;info&lt;/code&gt; level, while additionally allowing &lt;code&gt;debug&lt;/code&gt; messages coming from the &lt;code&gt;habitat_sup::manager&lt;/code&gt; module hierarchy, and restricting log messages from the &lt;code&gt;tokio_reactor&lt;/code&gt; library to only &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">예를 들어, &lt;code&gt;RUST_LOG=info,habitat_sup::manager=debug,tokio_reactor=error&lt;/code&gt; 는 일반적으로 로그를 &lt;code&gt;info&lt;/code&gt; 수준 으로 제한 하는 반면 , &lt;code&gt;habitat_sup::manager&lt;/code&gt; 모듈 계층 에서 오는 &lt;code&gt;debug&lt;/code&gt; 메시지 를 추가로 허용 하고 &lt;code&gt;tokio_reactor&lt;/code&gt; 라이브러리의 로그 메시지를 다음으로 제한 합니다. &lt;code&gt;error&lt;/code&gt; 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="156f281f5630a3334724c37e319b252a7074bd07" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;www.example.com&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;www.example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60d2e901642240ca6dca34ee4fac5318b0cf8f92" translate="yes" xml:space="preserve">
          <source>For example, Alice runs the following command:</source>
          <target state="translated">예를 들어 Alice는 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="388bff56c50c81f5b35e32b4ac00c171ecb38055" translate="yes" xml:space="preserve">
          <source>For example, Chef Infra Client includes built-in resources to manage files, packages, templates, and services, but it does not include a resource that manages websites.</source>
          <target state="translated">예를 들어 Chef Infra Client에는 파일, 패키지, 템플릿 및 서비스를 관리하기위한 기본 제공 리소스가 포함되어 있지만 웹 사이트를 관리하는 리소스는 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2557427ca340dadb4f6a6cdb767b2e6b2cbe29f" translate="yes" xml:space="preserve">
          <source>For example, Chef includes built-in resources to manage files, packages, templates, and services, but it does not include a resource that manages websites.</source>
          <target state="translated">예를 들어 Chef에는 파일, 패키지, 템플릿 및 서비스를 관리하기위한 기본 제공 리소스가 포함되어 있지만 웹 사이트를 관리하는 리소스는 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0cbecd21bfb967326e786dae9e430d4ad0609dd2" translate="yes" xml:space="preserve">
          <source>For example, a 2GB search index will require about 2GB of free space available in the &lt;strong&gt;opscode-solr4&lt;/strong&gt; service&amp;rsquo;s storage area. The standard storage area for the &lt;strong&gt;opscode-solr4&lt;/strong&gt; service in a standalone topology Chef server install is &lt;code&gt;/var/opt/opscode/opscode-solr4/data&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 2GB 검색 인덱스는 &lt;strong&gt;opscode-solr4&lt;/strong&gt; 서비스의 저장 영역 에서 사용 가능한 약 2GB의 여유 공간이 필요 합니다. 독립형 토폴로지 Chef 서버 설치에서 &lt;strong&gt;opscode-solr4&lt;/strong&gt; 서비스 의 표준 스토리지 영역 은 &lt;code&gt;/var/opt/opscode/opscode-solr4/data&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0f2c9ac7d0dccddc3bc0d42a41cc8a6fcfb02c57" translate="yes" xml:space="preserve">
          <source>For example, a &lt;code&gt;telnet&lt;/code&gt; file under &lt;code&gt;/etc/xinet.d&lt;/code&gt; contains the following settings:</source>
          <target state="translated">예를 들어, &lt;code&gt;/etc/xinet.d&lt;/code&gt; 아래 의 &lt;code&gt;telnet&lt;/code&gt; 파일 에는 다음 설정이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d81a45d4dc0543f68537d8bc675153171740ac9b" translate="yes" xml:space="preserve">
          <source>For example, a PHP INI file located at contains the following settings:</source>
          <target state="translated">예를 들어에있는 PHP INI 파일에는 다음 설정이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f113ef3822b2bff39e94b83e57c69a6f5e64b9ee" translate="yes" xml:space="preserve">
          <source>For example, a bootstrap template file named &amp;ldquo;sea_power&amp;rdquo;:</source>
          <target state="translated">예를 들어,&amp;ldquo;sea_power&amp;rdquo;라는 부트 스트랩 템플릿 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="431421bb814f4c8198de3a9e8bf9e27717bcce55" translate="yes" xml:space="preserve">
          <source>For example, a cookbook backup command:</source>
          <target state="translated">예를 들어, 요리 책 백업 명령 :</target>
        </trans-unit>
        <trans-unit id="bbd21b89dcf626d564830862025fa4dd504b6db3" translate="yes" xml:space="preserve">
          <source>For example, a custom resource defines two properties (&lt;code&gt;content&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;) and a single action (&lt;code&gt;:create&lt;/code&gt;). Use the &lt;code&gt;load_current_value&lt;/code&gt; method to load the property value to be compared, and then use the &lt;code&gt;converge_if_changed&lt;/code&gt; method to tell Chef Infra Client what to do if that value is not the desired value:</source>
          <target state="translated">예를 들어 사용자 지정 리소스는 두 개의 속성 ( &lt;code&gt;content&lt;/code&gt; 및 &lt;code&gt;path&lt;/code&gt; )과 단일 작업 ( &lt;code&gt;:create&lt;/code&gt; )을 정의합니다. &lt;code&gt;load_current_value&lt;/code&gt; 메서드를 사용하여 비교할 속성 값을로드 한 다음 &lt;code&gt;converge_if_changed&lt;/code&gt; 메서드를 사용하여 해당 값이 원하는 값이 아닌 경우 수행 할 작업을 Chef Infra Client에 알립니다.</target>
        </trans-unit>
        <trans-unit id="f3cabe6721232113fd7e5b83c7c9f1165aee05fa" translate="yes" xml:space="preserve">
          <source>For example, a custom resource defines two properties (&lt;code&gt;content&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;) and a single action (&lt;code&gt;:create&lt;/code&gt;). Use the &lt;code&gt;load_current_value&lt;/code&gt; method to load the property value to be compared, and then use the &lt;code&gt;converge_if_changed&lt;/code&gt; method to tell the chef-client what to do if that value is not the desired value:</source>
          <target state="translated">예를 들어, 사용자 정의 자원은 두 개의 특성 ( &lt;code&gt;content&lt;/code&gt; 및 &lt;code&gt;path&lt;/code&gt; )과 단일 조치 ( &lt;code&gt;:create&lt;/code&gt; )를 정의합니다. &lt;code&gt;load_current_value&lt;/code&gt; 메소드를 사용하여 비교할 특성 값을로드 한 후 &lt;code&gt;converge_if_changed&lt;/code&gt; 메소드를 사용하여 해당 값이 원하는 값이 아닌 경우 요리사에게 클라이언트에게 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="bbf3ee9093adefb24a368fea7f2239a067c29d5c" translate="yes" xml:space="preserve">
          <source>For example, a database export in a .dump format can be made with the following syntax:</source>
          <target state="translated">예를 들어 .dump 형식의 데이터베이스 내보내기는 다음 구문을 사용하여 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="925e915792e7315e2be2eccaec291d100b500cc7" translate="yes" xml:space="preserve">
          <source>For example, a group of attributes for web servers might be:</source>
          <target state="translated">예를 들어, 웹 서버의 속성 그룹은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="360a4a74236e20f858d1dbe35f915c9a0671e574" translate="yes" xml:space="preserve">
          <source>For example, a handler for Growl needs to be enabled at the beginning of a Chef Infra Client run:</source>
          <target state="translated">예를 들어, Chef Infra Client 실행을 시작할 때 Growl에 대한 처리기를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="2256f4f461489850cf57f6b528113efa38080ef1" translate="yes" xml:space="preserve">
          <source>For example, a handler for Growl needs to be enabled at the beginning of the chef-client run:</source>
          <target state="translated">예를 들어, chef-client 실행이 시작될 때 Growl 처리기가 사용 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="0cdb180be8ca4b1cc2af8d42831ba73fedd8c115" translate="yes" xml:space="preserve">
          <source>For example, a package is installed:</source>
          <target state="translated">예를 들어 패키지가 설치되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c437689165a304673f2b145a8fec8d9b83d84966" translate="yes" xml:space="preserve">
          <source>For example, a resource that is &lt;strong&gt;not&lt;/strong&gt; doing lazy evaluation:</source>
          <target state="translated">예를 들어 지연 평가를 수행 &lt;strong&gt;하지 않는&lt;/strong&gt; 리소스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9398cc3e8e45c707a1c74450c90a031f8e572268" translate="yes" xml:space="preserve">
          <source>For example, a resource that is used to install a tar.gz package for version 1.16.1 may look something like this:</source>
          <target state="translated">예를 들어, 버전 1.16.1 용 tar.gz 패키지를 설치하는 데 사용되는 자원은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="caa2584a946c33bf3918e4f1f7153d1da26670c5" translate="yes" xml:space="preserve">
          <source>For example, a role named &lt;code&gt;baseline.rb&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;baseline.rb&lt;/code&gt; 라는 역할은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ddb92f06e6a0255853447f3f8e3ef4db914cc582" translate="yes" xml:space="preserve">
          <source>For example, a service is listening on default http port can be tested like this:</source>
          <target state="translated">예를 들어, 서비스가 기본 http 포트에서 수신 대기 중이면 다음과 같이 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eae3b7a8c28a7d2d8e84c0935ad9ad2efc2901e5" translate="yes" xml:space="preserve">
          <source>For example, a simple deployment:</source>
          <target state="translated">예를 들어 간단한 배포 :</target>
        </trans-unit>
        <trans-unit id="59bccb5c38edc5fd456ccf3a22e8a3541ff55d7a" translate="yes" xml:space="preserve">
          <source>For example, a simple template resource like this:</source>
          <target state="translated">예를 들어 다음과 같은 간단한 템플릿 리소스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8a0853035588098833d1ababd5064f25cc7f654" translate="yes" xml:space="preserve">
          <source>For example, a system with 32GB of memory can have its Elasticsearch heap size set to &lt;code&gt;16g&lt;/code&gt;; to do so, one would first create a TOML file that contains the partial configuration below, and then run &lt;code&gt;chef-automate config patch &amp;lt;/path/to/your-file.toml&amp;gt;&lt;/code&gt; to deploy the change.</source>
          <target state="translated">예를 들어 메모리가 32GB 인 시스템은 Elasticsearch 힙 크기를 &lt;code&gt;16g&lt;/code&gt; 로 설정할 수 있습니다 . 이렇게하려면 먼저 아래 부분 구성이 포함 된 TOML 파일을 만든 다음 &lt;code&gt;chef-automate config patch &amp;lt;/path/to/your-file.toml&amp;gt;&lt;/code&gt; 을 실행 하여 변경 사항을 배포합니다.</target>
        </trans-unit>
        <trans-unit id="a8db9bee468b1cb891a578fc6c57408c2ac0875e" translate="yes" xml:space="preserve">
          <source>For example, a user named &lt;code&gt;grantmc&lt;/code&gt;, with a first and last name of &lt;code&gt;Grant McLennan&lt;/code&gt;, an email address of &lt;code&gt;grantmc@chef.io&lt;/code&gt;, a poorly-chosen password, and with the USER.pem file saved to &lt;code&gt;/tmp/grantmc.key&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 사용자 이름 &lt;code&gt;grantmc&lt;/code&gt; 의 이름과 성을 가진, &lt;code&gt;Grant McLennan&lt;/code&gt; 의 이메일 주소 &lt;code&gt;grantmc@chef.io&lt;/code&gt; , 가난가 선택한 암호 및 USER.pem 파일로는 저장 &lt;code&gt;/tmp/grantmc.key&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="99891b12691bc78e1bc82c40285e8fa15d01c478" translate="yes" xml:space="preserve">
          <source>For example, a version constraint for &amp;ldquo;equals version 1.0.7&amp;rdquo; is expressed like this:</source>
          <target state="translated">예를 들어, &quot;동일 버전 1.0.7&quot;의 버전 제약 조건은 다음과 같이 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="b655cd799bb6838fe93a839bcb2c2e3152210704" translate="yes" xml:space="preserve">
          <source>For example, a very simple kitchen.yml file:</source>
          <target state="translated">예를 들어, 매우 간단한 kitchen.yml 파일 :</target>
        </trans-unit>
        <trans-unit id="3c47aeb0639cc928e6a17f3579fdae48ef5fd523" translate="yes" xml:space="preserve">
          <source>For example, after copying the SSL certificate files to the Chef Automate server, update the &lt;code&gt;delivery['ssl_certificates']&lt;/code&gt; hash settings to specify the paths to those files, and then (optionally) update the &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; and &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; settings to reflect the desired level of hardness for the Chef Automate server:</source>
          <target state="translated">예를 들어 SSL 인증서 파일을 Chef Automate 서버에 복사 한 후 &lt;code&gt;delivery['ssl_certificates']&lt;/code&gt; 해시 설정을 업데이트하여 해당 파일의 경로를 지정한 다음 (선택적으로) &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; 업데이트합니다. Chef Automate 서버에 대해 원하는 경도 수준을 반영하는 ssl_protocols '] 설정 :</target>
        </trans-unit>
        <trans-unit id="e68248db14fb8ca5801436deb53201813ba36dfc" translate="yes" xml:space="preserve">
          <source>For example, after copying the SSL certificate files to the Chef Infra Server, update the &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; and &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; settings to specify the paths to those files, and then (optionally) update the &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; and &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; settings to reflect the desired level of hardness for the Chef Infra Server:</source>
          <target state="translated">예를 들어 SSL 인증서 파일을 Chef Infra Server에 복사 한 후 &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; 설정을 업데이트하여 해당 파일의 경로를 지정한 다음 (선택적으로) &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; 업데이트합니다. '] 및 &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; 설정을 통해 Chef Infra Server에 대해 원하는 경도 수준을 반영합니다.</target>
        </trans-unit>
        <trans-unit id="7e0bda92be372b94de44885ac300c462789443af" translate="yes" xml:space="preserve">
          <source>For example, after copying the SSL certificate files to the Chef server, update the &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; and &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; settings to specify the paths to those files, and then (optionally) update the &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; and &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; settings to reflect the desired level of hardness for the Chef server:</source>
          <target state="translated">예를 들어 SSL 인증서 파일을 Chef 서버에 복사 한 후 &lt;code&gt;nginx['ssl_certificate']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_certificate_key']&lt;/code&gt; 설정을 업데이트하여 해당 파일의 경로를 지정한 다음 선택적으로 &lt;code&gt;nginx['ssl_ciphers']&lt;/code&gt; 및 &lt;code&gt;nginx['ssl_protocols']&lt;/code&gt; 설정은 Chef 서버의 원하는 경도 수준을 반영합니다.</target>
        </trans-unit>
        <trans-unit id="d542487d0381fd389a7917bc4937a122e68bdc41" translate="yes" xml:space="preserve">
          <source>For example, an application targeting linux, Linux kernel 2, and Windows may have the following structure:</source>
          <target state="translated">예를 들어 Linux, Linux 커널 2 및 Windows를 대상으로하는 애플리케이션은 다음 구조를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dcdb0409ef148369e3e21b98b4c9f0dc6893991" translate="yes" xml:space="preserve">
          <source>For example, an application that is deployed to a folder named &lt;code&gt;&quot;/path/to/application&quot;&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;&quot;/path/to/application&quot;&lt;/code&gt; 이라는 폴더에 배포 된 응용 프로그램은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8bb42af62ab878ca96ac931366ccb7ba28d761c5" translate="yes" xml:space="preserve">
          <source>For example, an organization named &lt;code&gt;chef&lt;/code&gt;, with a full name of &lt;code&gt;Chef Software, Inc.&lt;/code&gt;, and with the ORGANIZATION-validator.pem file saved to &lt;code&gt;/tmp/chef.key&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 이름이 &lt;code&gt;chef&lt;/code&gt; 이고 이름이 &lt;code&gt;Chef Software, Inc.&lt;/code&gt; 이고 ORGANIZATION-validator.pem 파일이 &lt;code&gt;/tmp/chef.key&lt;/code&gt; 에 저장된 조직은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d01bde408ad1e4aca25973627758dc7adb5e22cd" translate="yes" xml:space="preserve">
          <source>For example, assuming the &lt;code&gt;CertificateID&lt;/code&gt; is configured in the local configuration manager, the &lt;code&gt;SeaPower1@3&lt;/code&gt; object is created and embedded within the &lt;code&gt;seapower-user&lt;/code&gt; script:</source>
          <target state="translated">예를 들어, &lt;code&gt;CertificateID&lt;/code&gt; 가 로컬 구성 관리자에서 구성 되었다고 가정하면 &lt;code&gt;SeaPower1@3&lt;/code&gt; 오브젝트가 &lt;code&gt;seapower-user&lt;/code&gt; 스크립트 내에 작성되고 임베드됩니다 .</target>
        </trans-unit>
        <trans-unit id="c950c688b3c68f108f93df776b7c62689bdca1cd" translate="yes" xml:space="preserve">
          <source>For example, automatic attribute data similar to:</source>
          <target state="translated">예를 들어 다음과 유사한 자동 속성 데이터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9c60eb78a27d864279a155cbbe445923b07aa2a" translate="yes" xml:space="preserve">
          <source>For example, both of the following tests should have the same result:</source>
          <target state="translated">예를 들어 다음 테스트는 모두 동일한 결과를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="2f74813cd24cf50b40072c80e75e0e6aa45e4739" translate="yes" xml:space="preserve">
          <source>For example, both of the following tests will verify if WinRM is present on the target node. The first tests if WinRM belongs to the list of services running under the &lt;code&gt;win32_service&lt;/code&gt; class:</source>
          <target state="translated">예를 들어, 다음 테스트는 모두 WinRM이 대상 노드에 있는지 확인합니다. WinRM이 &lt;code&gt;win32_service&lt;/code&gt; 클래스에서 실행되는 서비스 목록에 속하는지 첫 번째 테스트 :</target>
        </trans-unit>
        <trans-unit id="deb2ac459389a9cc4b2bfe019447df9257418358" translate="yes" xml:space="preserve">
          <source>For example, consider the following script:</source>
          <target state="translated">예를 들어 다음 스크립트를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="795577c02e2fa2417afabcaad9c2c1fec882ad01" translate="yes" xml:space="preserve">
          <source>For example, every Ruby object has a &lt;code&gt;hash&lt;/code&gt; method which is expected to return a number. If a resource creates a property named &lt;code&gt;hash&lt;/code&gt; and stores a string instead, it could cause errors in your Chef run.</source>
          <target state="translated">예를 들어 모든 Ruby 객체에는 숫자를 반환 할 것으로 예상되는 &lt;code&gt;hash&lt;/code&gt; 메서드가 있습니다. 리소스가 &lt;code&gt;hash&lt;/code&gt; 라는 속성을 만들고 대신 문자열을 저장하면 Chef 실행에 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f53009d6ded956c301c1a285ad411d22c5eaf32" translate="yes" xml:space="preserve">
          <source>For example, for recipes:</source>
          <target state="translated">예를 들어, 레시피의 경우 :</target>
        </trans-unit>
        <trans-unit id="e6b955ab805e3fe133c18fa9bedb07af5a1a51e7" translate="yes" xml:space="preserve">
          <source>For example, for the following symlink:</source>
          <target state="translated">예를 들어, 다음 심볼릭 링크의 경우 :</target>
        </trans-unit>
        <trans-unit id="006bc6e2ec0302460783586af7d1723c87785c5b" translate="yes" xml:space="preserve">
          <source>For example, full output:</source>
          <target state="translated">예를 들어, 전체 출력 :</target>
        </trans-unit>
        <trans-unit id="914504a6a8b810b4ced1cd9ff3b1204cdbdb6fd5" translate="yes" xml:space="preserve">
          <source>For example, if a frontend host at 192.168.1.3 can reach a backend member over the network, but the backend&amp;rsquo;s local network is 192.168.2.x, you would add the following line to &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt;</source>
          <target state="translated">예를 들어 192.168.1.3의 프런트 엔드 호스트가 네트워크를 통해 백엔드 구성원에 도달 할 수 있지만 백엔드의 로컬 네트워크가 192.168.2.x 인 경우 다음 줄을 &lt;code&gt;/etc/chef-backend/chef-backend.rb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47e312852edc6ab3f62e5ad8169232bcde18636f" translate="yes" xml:space="preserve">
          <source>For example, if a kitchen.yml file contains the following:</source>
          <target state="translated">예를 들어 kitchen.yml 파일에 다음이 포함 된 경우 :</target>
        </trans-unit>
        <trans-unit id="6aeba66415c9ecfe38224c8de983a173f3abbdc1" translate="yes" xml:space="preserve">
          <source>For example, if cookbooks &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; both exist on the Chef Infra Server and both with versions &lt;code&gt;0.1.0&lt;/code&gt; and &lt;code&gt;0.2.0&lt;/code&gt;, the response is similar to:</source>
          <target state="translated">예를 들어 쿡북 &lt;code&gt;foo&lt;/code&gt; 및 &lt;code&gt;bar&lt;/code&gt; 가 모두 Chef Infra Server에 있고 둘 다 버전 &lt;code&gt;0.1.0&lt;/code&gt; 및 &lt;code&gt;0.2.0&lt;/code&gt; 인 경우 응답은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="22314d268bb30fc4a1bbda46379ad391eb9566a6" translate="yes" xml:space="preserve">
          <source>For example, if cookbooks &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; both exist on the Chef server and both with versions &lt;code&gt;0.1.0&lt;/code&gt; and &lt;code&gt;0.2.0&lt;/code&gt;, the response is similar to:</source>
          <target state="translated">예를 들어, 쿡북 &lt;code&gt;foo&lt;/code&gt; 와 &lt;code&gt;bar&lt;/code&gt; 가 Chef 서버와 &lt;code&gt;0.1.0&lt;/code&gt; 및 &lt;code&gt;0.2.0&lt;/code&gt; 모두에 존재하는 경우 응답은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="ec0dbe517689fbaf2509353fbbc93185e592e8a9" translate="yes" xml:space="preserve">
          <source>For example, if running &lt;code&gt;hostname --fqdn&lt;/code&gt; from your Automate server command line returns &lt;code&gt;automate-test&lt;/code&gt;, then that hostname will need to be in the local dns configuration on your workstation.</source>
          <target state="translated">예를 들어, Automate 서버 명령 줄에서 &lt;code&gt;hostname --fqdn&lt;/code&gt; 을 실행하면 &lt;code&gt;automate-test&lt;/code&gt; 가 반환 되면 해당 호스트 이름은 워크 스테이션의 로컬 DNS 구성에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="36e70fb8a278a83b4db9ff58acacc9e4f4b10253" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;chef&lt;/code&gt; enterprise has a &lt;code&gt;cookbooks&lt;/code&gt; organization with a &lt;code&gt;mysql&lt;/code&gt; project, it would have the naming schema:</source>
          <target state="translated">예를 들어 &lt;code&gt;chef&lt;/code&gt; 기업 에 &lt;code&gt;mysql&lt;/code&gt; 프로젝트 가있는 &lt;code&gt;cookbooks&lt;/code&gt; 조직 이있는 경우 이름 지정 스키마가 있습니다.</target>
        </trans-unit>
        <trans-unit id="aab66348da05df511c02f6875f5d4998cf59a45b" translate="yes" xml:space="preserve">
          <source>For example, if the config file contains:</source>
          <target state="translated">예를 들어 구성 파일에 다음이 포함 된 경우 :</target>
        </trans-unit>
        <trans-unit id="f95cfe5046e1cda57375d8eae4342722c168fd65" translate="yes" xml:space="preserve">
          <source>For example, if the current value is 350, there are four front end machines, and all add-ons are installed, then the formula looks like:</source>
          <target state="translated">예를 들어 현재 값이 350이면 프런트 엔드 시스템이 4 개이고 모든 애드온이 설치된 경우 수식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="237a93e0f6a15649bb67f0d2471fcd46dd7589a3" translate="yes" xml:space="preserve">
          <source>For example, if the following recipe is included in a cookbook named &lt;code&gt;my_app&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 레시피가 &lt;code&gt;my_app&lt;/code&gt; 라는 요리 책에 포함 된 경우 :</target>
        </trans-unit>
        <trans-unit id="2eacd71e7e0bd7d7a46ff7a7ae8aacf5a352e6e6" translate="yes" xml:space="preserve">
          <source>For example, if the following tag is set on a resource:</source>
          <target state="translated">예를 들어 다음 태그가 리소스에 설정된 경우 :</target>
        </trans-unit>
        <trans-unit id="ced719390a420f48626cfaf95b548d8bbc250b09" translate="yes" xml:space="preserve">
          <source>For example, if the project is in the &lt;code&gt;chef&lt;/code&gt; enterprise and is in the &lt;code&gt;CIA&lt;/code&gt; organization with a name of &lt;code&gt;chef-web-www&lt;/code&gt;, the encrypted data bag item would have the following name:</source>
          <target state="translated">예를 들어 프로젝트가 &lt;code&gt;chef&lt;/code&gt; 엔터프라이즈에 있고 이름이 &lt;code&gt;chef-web-www&lt;/code&gt; 인 &lt;code&gt;CIA&lt;/code&gt; 조직에있는 경우 암호화 된 데이터 백 항목의 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5318bd8fbc6122e3fe8579d2c4f8c80b4cde9200" translate="yes" xml:space="preserve">
          <source>For example, if the project is in the &lt;code&gt;chef&lt;/code&gt; enterprise and is in the &lt;code&gt;ORG&lt;/code&gt; organization with a name of &lt;code&gt;chef-web-www&lt;/code&gt;, the encrypted data bag item would have the following name:</source>
          <target state="translated">예를 들어 프로젝트가 &lt;code&gt;chef&lt;/code&gt; 엔터프라이즈에 있고 이름이 &lt;code&gt;chef-web-www&lt;/code&gt; 인 &lt;code&gt;ORG&lt;/code&gt; 조직에있는 경우 암호화 된 데이터 백 항목의 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6016cef2fdeff4fbe016ceba104393d3780e0896" translate="yes" xml:space="preserve">
          <source>For example, if the sign in using &lt;code&gt;jane:janespassword&lt;/code&gt; has resulted in a successful user search, returning &lt;code&gt;cn=jane,ou=People,dc=corp,dc=com&lt;/code&gt;, the next step will be to &lt;em&gt;bind again&lt;/em&gt; using that DN, and the password &lt;code&gt;janespassword&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;jane:janespassword&lt;/code&gt; 를 사용하여 로그인 한 결과 &lt;code&gt;cn=jane,ou=People,dc=corp,dc=com&lt;/code&gt; 을 반환하는 성공적인 사용자 검색이 발생한 경우 다음 단계는 해당 DN을 사용하여 &lt;em&gt;다시 바인딩&lt;/em&gt; 하는 것입니다. 비밀번호 &lt;code&gt;janespassword&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f0a56a9b048c93f06a93739ad16df3241002faa" translate="yes" xml:space="preserve">
          <source>For example, if the volume group has 10GB total, only 8GB should be allocated to the logical volume, which leaves 20% of the volume group available:</source>
          <target state="translated">예를 들어, 볼륨 그룹에 총 10GB가있는 경우 논리 볼륨에 8GB 만 할당하면 볼륨 그룹의 20 %가 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="8514eed4ca9fee13e41ff45ec7f92435713b0cbe" translate="yes" xml:space="preserve">
          <source>For example, if you want to unit test your project across multiple versions of Ubuntu, you could write something like:</source>
          <target state="translated">예를 들어 여러 버전의 Ubuntu에서 프로젝트를 단위 테스트하려는 경우 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46ef14b34b087fbc8cf54465531c739828b610aa" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to only allow people that were members of a specific Active Directory group to sign in to Chef Automate, you could define a &lt;code&gt;user_query_filter&lt;/code&gt; with multiple filters like:</source>
          <target state="translated">예를 들어 특정 Active Directory 그룹의 구성원 인 사용자 만 Chef Automate에 로그인 할 수 있도록 허용하려는 경우 다음 과 같은 여러 필터를 사용하여 &lt;code&gt;user_query_filter&lt;/code&gt; 를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7667a2dfcd94afd741fefe8470fa3650716fb10b" translate="yes" xml:space="preserve">
          <source>For example, if you were to write a resource to create volumes on a cloud provider you would need define properties such as &lt;code&gt;volume_name&lt;/code&gt;, &lt;code&gt;volume_size&lt;/code&gt;, and &lt;code&gt;volume_region&lt;/code&gt;. The state of these properties would determine if your resource needed to converge or not. For the resource to function you would also need to define properties such as &lt;code&gt;cloud_login&lt;/code&gt; and &lt;code&gt;cloud_password&lt;/code&gt;. These are necessary properties for interacting with the cloud provider, but their state has no impact on decision to converge the resource or not, so you would set &lt;code&gt;desired_state&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; for these properties.</source>
          <target state="translated">예를 들어 클라우드 공급자에서 볼륨을 생성하기 위해 리소스를 작성하려면 &lt;code&gt;volume_name&lt;/code&gt; , &lt;code&gt;volume_size&lt;/code&gt; , &lt;code&gt;volume_region&lt;/code&gt; 과 같은 속성을 정의해야합니다 . 이러한 속성의 상태에 따라 리소스가 수렴해야하는지 여부가 결정됩니다. 리소스가 작동하려면 &lt;code&gt;cloud_login&lt;/code&gt; 및 &lt;code&gt;cloud_password&lt;/code&gt; 와 같은 속성도 정의해야합니다 . 이들은 클라우드 공급자와 상호 작용하는 데 필요한 속성이지만 해당 상태는 리소스 수렴 여부 결정에 영향을 미치지 않으므로 이러한 속성에 대해 &lt;code&gt;desired_state&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="fa66265cd454e817fbba6ce7ef3b444b4c2f9ef6" translate="yes" xml:space="preserve">
          <source>For example, if your FQDN is &lt;code&gt;automate&lt;/code&gt;, then the file location is: &lt;code&gt;/hab/svc/automate-load-balancer/data/automate.cert&lt;/code&gt;.</source>
          <target state="translated">예를 들어 FQDN이 &lt;code&gt;automate&lt;/code&gt; 인 경우 파일 위치는 &lt;code&gt;/hab/svc/automate-load-balancer/data/automate.cert&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="23ca0501d3dc424c1a77d2792cd5b75bd390b437" translate="yes" xml:space="preserve">
          <source>For example, in &lt;code&gt;.chef/credentials&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;.chef/credentials&lt;/code&gt; 에서 :</target>
        </trans-unit>
        <trans-unit id="78926d1acbc83f938c163b518c357046dbfa745d" translate="yes" xml:space="preserve">
          <source>For example, in the Chef Habitat repository itself, this TOML states that the &lt;code&gt;hab-launcher&lt;/code&gt;, &lt;code&gt;hab-studio&lt;/code&gt;, and &lt;code&gt;hab-sup&lt;/code&gt; packages will be rebuilt if there are any changes in any of the specified &lt;code&gt;components&lt;/code&gt; sub-directories. Note that &lt;code&gt;hab-studio&lt;/code&gt; does not need to specify a &lt;code&gt;path&lt;/code&gt; because all of it&amp;rsquo;s files are within the &lt;code&gt;plan_path&lt;/code&gt; hierarchy, but that is not the case for the other projects.</source>
          <target state="translated">예를 들어 Chef Habitat 리포지토리 자체에서이 TOML 은 지정된 &lt;code&gt;components&lt;/code&gt; 하위 디렉터리에 변경 사항이있는 경우 &lt;code&gt;hab-launcher&lt;/code&gt; , &lt;code&gt;hab-studio&lt;/code&gt; 및 &lt;code&gt;hab-sup&lt;/code&gt; 패키지가 다시 빌드 될 것이라고 명시합니다 . 참고 &lt;code&gt;hab-studio&lt;/code&gt; 지정할 필요가없는 &lt;code&gt;path&lt;/code&gt; 그것의 모든 파일은 내이기 때문에 &lt;code&gt;plan_path&lt;/code&gt; 의 계층 구조,하지만 다른 프로젝트의 경우에는 해당되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="17f92461460ba9421050f5a120102adab4bd7d16" translate="yes" xml:space="preserve">
          <source>For example, in:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="6b7f9823efed80e8cd10d8e1608ea74f48e4db01" translate="yes" xml:space="preserve">
          <source>For example, installing multiple packages:</source>
          <target state="translated">예를 들어, 여러 패키지를 설치하는 경우 :</target>
        </trans-unit>
        <trans-unit id="82f6e8f45391e9c81775b34650ab0a227386fa7c" translate="yes" xml:space="preserve">
          <source>For example, name/version collisions can occur when users temporarily fork an upstream cookbook. Even if the user contributes their change and the maintainer is responsive, there may be a period of time where the user needs their fork in order to make progress. This situation presents a versioning dilemma: if the user doesn&amp;rsquo;t update their own version, they must overwrite the existing copy of that cookbook on the Chef Infra Server, wheres if they do update the version number it might conflict with the version number of the future release of that upstream cookbook.</source>
          <target state="translated">예를 들어 사용자가 업스트림 요리 책을 일시적으로 포크 할 때 이름 / 버전 충돌이 발생할 수 있습니다. 사용자가 변경 사항을 제공하고 유지 관리자가 응답하더라도 사용자가 진행하기 위해 포크가 필요한 기간이있을 수 있습니다. 이 상황은 버전 관리 딜레마를 제공합니다. 사용자가 자신의 버전을 업데이트하지 않으면 Chef Infra Server에서 해당 요리 책의 기존 복사본을 덮어 써야합니다. 버전 번호를 업데이트하면 버전 번호와 충돌 할 수 있습니다. 그 업스트림 요리 책의 향후 릴리스.</target>
        </trans-unit>
        <trans-unit id="833fa28c343cbd5216a048fc9f8af71bf4a25169" translate="yes" xml:space="preserve">
          <source>For example, normal attribute data similar to:</source>
          <target state="translated">예를 들어 다음과 유사한 일반 속성 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="9e27d3369b6f52ad75a4003115a48b46e28372cd" translate="yes" xml:space="preserve">
          <source>For example, run the following command:</source>
          <target state="translated">예를 들어 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="00b16bd7c51eda7f25cca21d9c011c2fd60775ab" translate="yes" xml:space="preserve">
          <source>For example, run the following:</source>
          <target state="translated">예를 들어 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9b121b178e7a03aa3cc967f2a93adc6ef9632894" translate="yes" xml:space="preserve">
          <source>For example, testing a site that doesn&amp;rsquo;t have https enabled:</source>
          <target state="translated">예를 들어 https가 활성화되지 않은 사이트를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="9a60a1d3b17c9c9e3d72ed4cd3fc3405993b790b" translate="yes" xml:space="preserve">
          <source>For example, testing if a site&amp;rsquo;s application pool inherits the settings of the parent application pool:</source>
          <target state="translated">예를 들어 사이트의 응용 프로그램 풀이 상위 응용 프로그램 풀의 설정을 상속하는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="770eeacdf785aac884fe2f40fe64c2460698f251" translate="yes" xml:space="preserve">
          <source>For example, that breaking change to project A got merged and broke project B again. Then, a bad change to project X was merged, which caused project X to fail. If project B is updated to address the breaking change from project A, one would expect projects A, B, and C to be able to ship, while X and Y would still be blocked. Because those project sets are not part of the same dependency graph, that is exactly what happens.</source>
          <target state="translated">예를 들어, 프로젝트 A의 주요 변경 사항이 병합되고 프로젝트 B가 다시 중단되었습니다. 그런 다음 프로젝트 X의 잘못된 변경 사항이 병합되어 프로젝트 X가 실패했습니다. 프로젝트 A의 주요 변경 사항을 해결하기 위해 프로젝트 B가 업데이트되면 프로젝트 A, B, C는 배송이 가능하지만 X와 Y는 여전히 차단됩니다. 이러한 프로젝트 세트는 동일한 종속성 그래프의 일부가 아니기 때문에 정확히 발생합니다.</target>
        </trans-unit>
        <trans-unit id="230c0086486f46f70d467278dd1278e8fda7693d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;action&lt;/code&gt; appears as a property when this custom resource is used in a recipe:</source>
          <target state="translated">예를 들어, 이 사용자 정의 자원이 레시피에 사용되면 &lt;code&gt;action&lt;/code&gt; 가 특성으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="96827965a76340a35851dda0765ae3a562af2f46" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;httpd.rb&lt;/code&gt; file in the &lt;code&gt;website&lt;/code&gt; cookbook could be assigned a custom resource name like this:</source>
          <target state="translated">예를 들어, &lt;code&gt;website&lt;/code&gt; 요리 책 에 있는 &lt;code&gt;httpd.rb&lt;/code&gt; 파일에는 다음 과 같이 사용자 지정 리소스 이름이 할당 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3be9a0fa90a580e8e26bf0a59cc4e2de6202652a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;not_if&lt;/code&gt; guard statement in the following resource example &lt;strong&gt;does not inherit&lt;/strong&gt; the &lt;code&gt;environment&lt;/code&gt; property:</source>
          <target state="translated">예를 들어 다음 자원 예제 의 &lt;code&gt;not_if&lt;/code&gt; guard 문 은 &lt;code&gt;environment&lt;/code&gt; 속성을 &lt;strong&gt;상속하지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ecc32745fd9a0f0c9256eb6b2b00905cf3a2c50a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;site.rb&lt;/code&gt; file in the &lt;code&gt;exampleco&lt;/code&gt; cookbook could be similar to:</source>
          <target state="translated">예를 들어 &lt;code&gt;exampleco&lt;/code&gt; 쿡북 의 &lt;code&gt;site.rb&lt;/code&gt; 파일은 다음 과 유사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fde7b39ae5e5a6eb7b1dd609f7e086b229cbe505" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;web.rb&lt;/code&gt; references the &lt;code&gt;baseline.rb&lt;/code&gt; role. The &lt;code&gt;web.rb&lt;/code&gt; file only provides a value for one attribute: &lt;code&gt;:startservers&lt;/code&gt;. When Chef Infra Client compares these attributes, the deep merge feature will ensure that &lt;code&gt;:startservers&lt;/code&gt; (and its value of &lt;code&gt;30&lt;/code&gt;) will be applied to any node for which the &lt;code&gt;web.rb&lt;/code&gt; attribute structure should be applied.</source>
          <target state="translated">예를 들어, &lt;code&gt;web.rb&lt;/code&gt; 는 &lt;code&gt;baseline.rb&lt;/code&gt; 역할을 참조합니다 . &lt;code&gt;web.rb&lt;/code&gt; 의 파일은 하나 개의 속성에 대한 값을 제공합니다 &lt;code&gt;:startservers&lt;/code&gt; . Chef Infra Client가 이러한 속성을 비교할 때 깊은 병합 기능은 &lt;code&gt;web.rb&lt;/code&gt; 속성 구조를 적용해야하는 모든 노드에 &lt;code&gt;:startservers&lt;/code&gt; (및 해당 값 &lt;code&gt;30&lt;/code&gt; )가 적용되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="207a12efe984804e04ea611b619e467d1fdaa85d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;web.rb&lt;/code&gt; references the &lt;code&gt;baseline.rb&lt;/code&gt; role. The &lt;code&gt;web.rb&lt;/code&gt; file only provides a value for one attribute: &lt;code&gt;:startservers&lt;/code&gt;. When the chef-client compares these attributes, the deep merge feature will ensure that &lt;code&gt;:startservers&lt;/code&gt; (and its value of &lt;code&gt;30&lt;/code&gt;) will be applied to any node for which the &lt;code&gt;web.rb&lt;/code&gt; attribute structure should be applied.</source>
          <target state="translated">예를 들어, &lt;code&gt;web.rb&lt;/code&gt; 는 &lt;code&gt;baseline.rb&lt;/code&gt; 역할을 참조합니다 . &lt;code&gt;web.rb&lt;/code&gt; 의 파일은 하나 개의 속성에 대한 값을 제공합니다 &lt;code&gt;:startservers&lt;/code&gt; . chef-client가 이러한 속성을 비교할 때 딥 병합 기능을 사용 하면 &lt;code&gt;web.rb&lt;/code&gt; 속성 구조를 적용해야하는 모든 노드에 &lt;code&gt;:startservers&lt;/code&gt; (및 값 &lt;code&gt;30&lt;/code&gt; )가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c7bb1861a67697dadc7c7408e1197347fbfaf76f" translate="yes" xml:space="preserve">
          <source>For example, the &lt;strong&gt;service&lt;/strong&gt; resource can be used to start a service. If the action is &lt;code&gt;:start&lt;/code&gt; and the service is not running, then start the service (if it is not running) and do nothing (if it is running). What about a service that is installed from a package? The chef-client cannot check to see if the service is running until after the package is installed. A simple question that why-run mode can answer is what the chef-client would say about the state of the service after installing the package because service actions often trigger notifications to other resources. So it can be important to know in advance that any notifications are being triggered correctly.</source>
          <target state="translated">예를 들어 &lt;strong&gt;서비스&lt;/strong&gt; 리소스를 사용하여 서비스를 시작할 수 있습니다. 조치가 &lt;code&gt;:start&lt;/code&gt; 이고 서비스가 실행 중이 아닌 경우 서비스를 시작하고 (실행 중이 아닌 경우) 아무 것도 (실행 중이 아닌 경우) 수행하십시오. 패키지에서 설치된 서비스는 어떻습니까? chef-client는 패키지가 설치 될 때까지 서비스가 실행 중인지 확인할 수 없습니다. 왜 실행 모드가 응답 할 수 있는지에 대한 간단한 질문은 서비스 조치가 종종 다른 자원에 대한 알림을 트리거하기 때문에 패키지를 설치 한 후 요리사 클라이언트가 서비스 상태에 대해 말하는 것입니다. 따라서 모든 알림이 올바르게 트리거되고 있는지 미리 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="a72fd5b64ab4c50ee7199053c928eed97f47e7d2" translate="yes" xml:space="preserve">
          <source>For example, the &lt;strong&gt;service&lt;/strong&gt; resource can be used to start a service. If the action is &lt;code&gt;:start&lt;/code&gt;, then the service will start if it isn&amp;rsquo;t running and do nothing if it is running. If a service is installed from a package, then Chef Infra Client cannot check to see if the service is running until after the package is installed. In that case, why-run mode will indicate what Chef Infra Client would do about the state of the service after installing a package. This is important because service actions often trigger notifications to other resources, so it is important to know that these notifications are triggered correctly.</source>
          <target state="translated">예를 들어 &lt;strong&gt;서비스&lt;/strong&gt; 리소스를 사용하여 서비스를 시작할 수 있습니다. 작업이 &lt;code&gt;:start&lt;/code&gt; 이면 서비스가 실행 중이 아니면 서비스가 시작되고 실행 중이면 아무 작업도 수행하지 않습니다. 패키지에서 서비스를 설치 한 경우 Chef Infra Client는 패키지가 설치 될 때까지 서비스가 실행 중인지 확인할 수 없습니다. 이 경우 why-run 모드는 패키지 설치 후 Chef Infra Client가 서비스 상태에 대해 수행 할 작업을 나타냅니다. 이는 서비스 작업이 종종 다른 리소스에 대한 알림을 트리거하기 때문에 중요하므로 이러한 알림이 올바르게 트리거된다는 것을 아는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="ba2c0e658db9be8faf084333ccae81088f205c46" translate="yes" xml:space="preserve">
          <source>For example, the Reporting start handler adds the following code to the top of the client.rb file:</source>
          <target state="translated">예를 들어,보고 시작 핸들러는 다음 코드를 client.rb 파일의 맨 위에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="be3f7018bd450c0ca4da2b73e63ce75fc8c5f6da" translate="yes" xml:space="preserve">
          <source>For example, the default bootstrap operation relies on an Internet connection to get the distribution to the target node. If a target node cannot access the Internet, then a custom template can be used to define a specific location for the distribution so that the target node may access it during the bootstrap operation.</source>
          <target state="translated">예를 들어, 기본 부트 스트랩 조작은 인터넷 연결을 사용하여 대상 노드로 분배를 가져옵니다. 대상 노드가 인터넷에 액세스 할 수없는 경우, 사용자 정의 템플리트를 사용하여 부트 스트랩 조작 중 대상 노드가 액세스 할 수 있도록 분배의 특정 위치를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1077b2126a1eb33ce05e30015f64cb4890eae688" translate="yes" xml:space="preserve">
          <source>For example, the default bootstrap operation relies on an Internet connection to get the distribution to the target node. If a target node cannot access the Internet, then a custom template can be used to define a specific location for the distribution so that the target node may access it during the bootstrap operation. The example below will show you how to create a bootstrap template that uses a custom artifact store for Chef packages and installation scripts, as well as a RubyGem mirror:</source>
          <target state="translated">예를 들어, 기본 부트 스트랩 작업은 인터넷 연결을 사용하여 대상 노드로 배포합니다. 대상 노드가 인터넷에 액세스 할 수없는 경우 사용자 지정 템플릿을 사용하여 배포에 대한 특정 위치를 정의하여 대상 노드가 부트 스트랩 작업 중에 액세스 할 수 있도록 할 수 있습니다. 아래 예는 Chef 패키지 및 설치 스크립트와 RubyGem 미러에 대한 사용자 지정 아티팩트 저장소를 사용하는 부트 스트랩 템플릿을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9dea18dd50c2308020e256b204205779f0eba682" translate="yes" xml:space="preserve">
          <source>For example, the following Postfix configuration:</source>
          <target state="translated">예를 들어, 다음 Postfix 구성 :</target>
        </trans-unit>
        <trans-unit id="ca55314a407f63cc793f95d6f7d079a92acdca6e" translate="yes" xml:space="preserve">
          <source>For example, the following attributes exist in a cookbook. Some are defined in a role file:</source>
          <target state="translated">예를 들어, 다음 속성은 요리 책에 존재합니다. 일부는 역할 파일에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e50ad86ef9cb92a7c0ec0eaddb68d83c14568af8" translate="yes" xml:space="preserve">
          <source>For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the chef-client:</source>
          <target state="translated">예를 들어 다음 코드 블록은 chef-client가 식별 한 기본 정수기를 사용하여 명령이 평가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="a6c244753ff63e4a22f5289ad227d9e26160fa0d" translate="yes" xml:space="preserve">
          <source>For example, the following code block will ensure the command is evaluated using the default interpreter as identified by Chef Infra Client:</source>
          <target state="translated">예를 들어 다음 코드 블록은 Chef Infra Client에서 식별 한 기본 인터프리터를 사용하여 명령이 평가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="dde28e2dc5a4d34216a5c3480ae9624932ab943d" translate="yes" xml:space="preserve">
          <source>For example, the following command:</source>
          <target state="translated">예를 들어, 다음 명령 :</target>
        </trans-unit>
        <trans-unit id="d79a4d9c6ddfe471efe157b1a0157043a5e40298" translate="yes" xml:space="preserve">
          <source>For example, the following custom resource creates and/or updates user properties, but not their password. The &lt;code&gt;property_is_set?&lt;/code&gt; method checks if the user has specified a password and then tells Chef Infra Client what to do if the password is not identical:</source>
          <target state="translated">예를 들어 다음 사용자 지정 리소스는 암호가 아닌 사용자 속성을 생성 및 / 또는 업데이트합니다. &lt;code&gt;property_is_set?&lt;/code&gt; 메소드는 사용자가 비밀번호를 지정했는지 확인한 다음 Chef Infra Client에 비밀번호가 동일하지 않은 경우 수행 할 작업을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="9b2f7aa9d553b3ca6139044efda1b018c5d2fe8f" translate="yes" xml:space="preserve">
          <source>For example, the following custom resource creates and/or updates user properties, but not their password. The &lt;code&gt;property_is_set?&lt;/code&gt; method checks if the user has specified a password and then tells the chef-client what to do if the password is not identical:</source>
          <target state="translated">예를 들어 다음 사용자 지정 리소스는 사용자 속성을 생성 및 / 또는 업데이트하지만 비밀번호는 업데이트하지 않습니다. &lt;code&gt;property_is_set?&lt;/code&gt; 메소드는 사용자가 비밀번호를 지정했는지 확인한 후 비밀번호가 동일하지 않은 경우 요리사 클라이언트에게 수행 할 작업을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="ac1bbff41ccba7201debfa7d6f1b25d3ef2b130f" translate="yes" xml:space="preserve">
          <source>For example, the following definition leverages the &lt;strong&gt;directory&lt;/strong&gt; resource to create a new directory, and then evaluate that within the context of the custom resource:</source>
          <target state="translated">예를 들어, 다음 정의는 &lt;strong&gt;디렉토리&lt;/strong&gt; 자원을 활용하여 새 디렉토리를 작성한 후 사용자 정의 자원의 컨텍스트 내에서이를 평가합니다.</target>
        </trans-unit>
        <trans-unit id="79a294f29b0cc1f06acbe7f323d0699c82ee2fab" translate="yes" xml:space="preserve">
          <source>For example, the following example specifies the rights for a directory:</source>
          <target state="translated">예를 들어 다음 예는 디렉토리에 대한 권한을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f10a78f5f9eebd62e0d1cbf360dbd652702be795" translate="yes" xml:space="preserve">
          <source>For example, the following plugin looks up data on virtual machines hosted in Amazon EC2, Google Compute Engine, Rackspace, Eucalyptus, Linode, OpenStack, and Microsoft Azure:</source>
          <target state="translated">예를 들어 다음 플러그인은 Amazon EC2, Google Compute Engine, Rackspace, Eucalyptus, Linode, OpenStack 및 Microsoft Azure에서 호스팅되는 가상 머신에서 데이터를 조회합니다.</target>
        </trans-unit>
        <trans-unit id="ae0c4fc8a2914d9a55e929145e94978f57de24dd" translate="yes" xml:space="preserve">
          <source>For example, the following properties define &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties with no default values specified, but with &lt;code&gt;identity&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; for the user name:</source>
          <target state="translated">예를 들어, 다음 특성은 기본값을 지정하지 않고 사용자 이름에 대해 &lt;code&gt;identity&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 &lt;code&gt;username&lt;/code&gt; 및 &lt;code&gt;password&lt;/code&gt; 특성을 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="9e274d0d3e7cf2273ca3c7c657430aca70ea9eed" translate="yes" xml:space="preserve">
          <source>For example, the following properties define &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties with no default values specified:</source>
          <target state="translated">예를 들어 다음 속성은 기본값이 지정되지 않은 &lt;code&gt;username&lt;/code&gt; 및 &lt;code&gt;password&lt;/code&gt; 속성을 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="c67c05a461572d43c16af85e4cb687efb092fffd" translate="yes" xml:space="preserve">
          <source>For example, the following properties define the &lt;code&gt;owner&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;mode&lt;/code&gt; properties for a file that already exists on the node, and with &lt;code&gt;desired_state&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 특성 은 노드에 이미 존재하고 &lt;code&gt;desired_state&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정된 파일 의 &lt;code&gt;owner&lt;/code&gt; , &lt;code&gt;group&lt;/code&gt; 및 &lt;code&gt;mode&lt;/code&gt; 특성을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="d5f02c9b3afcf8d5d380cd214633747d095dbb7d" translate="yes" xml:space="preserve">
          <source>For example, the following recipe will install the Apache web server, randomly choose PHP or Perl as the scripting language, and then install that scripting language:</source>
          <target state="translated">예를 들어 다음 레시피는 Apache 웹 서버를 설치하고 스크립팅 언어로 PHP 또는 Perl을 임의로 선택한 다음 해당 스크립팅 언어를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="21ea7133d8a05f88a03959682d134355b382bfca" translate="yes" xml:space="preserve">
          <source>For example, the following shared method is used to collect data about various cloud providers, depending on the cloud provider and the type of IP address:</source>
          <target state="translated">예를 들어 다음 공유 방법은 클라우드 공급자 및 IP 주소 유형에 따라 다양한 클라우드 공급자에 대한 데이터를 수집하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1748d03ebb59f931df003b908988c828ad9c2311" translate="yes" xml:space="preserve">
          <source>For example, the following shows a custom handler that sends an email that contains the exception data when a Chef Infra Client run fails:</source>
          <target state="translated">예를 들어 다음은 Chef Infra Client 실행이 실패 할 때 예외 데이터가 포함 된 이메일을 보내는 사용자 지정 핸들러를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e6b4d42e4c58a58b474a832c06e67a48caf97c52" translate="yes" xml:space="preserve">
          <source>For example, the following shows a custom handler that sends an email that contains the exception data when a chef-client run fails:</source>
          <target state="translated">예를 들어, 다음은 chef-client 실행이 실패 할 때 예외 데이터가 포함 된 이메일을 보내는 사용자 정의 핸들러를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7fc920f0981089a917c61bbc7a4b37a94fcb40a0" translate="yes" xml:space="preserve">
          <source>For example, the following template file and template resource settings can be used to manage a configuration file named &lt;code&gt;/etc/sudoers&lt;/code&gt;. Within a cookbook that uses sudo, the following resource could be added to &lt;code&gt;/recipes/default.rb&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 템플릿 파일 및 템플릿 리소스 설정을 사용하여 &lt;code&gt;/etc/sudoers&lt;/code&gt; 라는 구성 파일을 관리 할 수 ​​있습니다 . sudo를 사용하는 요리 책 내에서 &lt;code&gt;/recipes/default.rb&lt;/code&gt; 에 다음 자원을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49fb04e7a6fb9618a13ae9e44de9257e4f4f9eaf" translate="yes" xml:space="preserve">
          <source>For example, the hypothetical &lt;code&gt;car&lt;/code&gt; resource defines a &lt;code&gt;classy?&lt;/code&gt; method, which is exposed as the &lt;code&gt;be_classy&lt;/code&gt; matcher in Chef InSpec tests.</source>
          <target state="translated">예를 들어, 가상의 &lt;code&gt;car&lt;/code&gt; 리소스는 &lt;code&gt;classy?&lt;/code&gt; Chef InSpec 테스트에서 &lt;code&gt;be_classy&lt;/code&gt; 매 처로 노출되는 메서드 입니다.</target>
        </trans-unit>
        <trans-unit id="f2afd55db4c956aa4dfb01532d8b1ffc45a0af57" translate="yes" xml:space="preserve">
          <source>For example, the profile in &lt;a href=&quot;https://github.com/chef/inspec/tree/master/examples/profile&quot;&gt;&lt;code&gt;examples/profile&lt;/code&gt;&lt;/a&gt; in the Chef InSpec GitHub repository defines an &lt;a href=&quot;https://github.com/chef/inspec/blob/master/examples/profile/controls/example.rb&quot;&gt;&lt;code&gt;example_config&lt;/code&gt; resource&lt;/a&gt;. To use these resources within the Chef InSpec shell, you will need to download and specify them as a dependency.</source>
          <target state="translated">예를 들어 Chef InSpec GitHub 리포지토리의 &lt;a href=&quot;https://github.com/chef/inspec/tree/master/examples/profile&quot;&gt; &lt;code&gt;examples/profile&lt;/code&gt; &lt;/a&gt; 에있는 프로필 은 &lt;a href=&quot;https://github.com/chef/inspec/blob/master/examples/profile/controls/example.rb&quot;&gt; &lt;code&gt;example_config&lt;/code&gt; 리소스를&lt;/a&gt; 정의 합니다 . Chef InSpec 셸에서 이러한 리소스를 사용하려면 다운로드하여 종속성으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="86689b52a1016995df4026bf49086ffb43e01b18" translate="yes" xml:space="preserve">
          <source>For example, there are ten total nodes. If &lt;code&gt;--quorum 80%&lt;/code&gt; is used and eight of those nodes acknowledge the job request, the command will be run against all of the available nodes. If two of the nodes were unavailable, the command would still be run against the remaining eight available nodes because quorum was met.</source>
          <target state="translated">예를 들어 총 10 개의 노드가 있습니다. 경우 &lt;code&gt;--quorum 80%&lt;/code&gt; 사용하고 그 노드의 팔이 작업 요청을 인정하고,이 명령은 사용 가능한 모든 노드에 대해 실행됩니다. 노드 중 2 개를 사용할 수없는 경우 쿼럼이 충족 되었기 때문에 나머지 8 개의 사용 가능한 노드에 대해 명령이 계속 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="b0bf57f4f836f02251575841919fb84e0bdc55a5" translate="yes" xml:space="preserve">
          <source>For example, this page&amp;rsquo;s parent identifier is &lt;code&gt;overview/community&lt;/code&gt;, the page file is &lt;code&gt;style_guide.md&lt;/code&gt; and the page title is &lt;code&gt;Docs Style Guide&lt;/code&gt;, so the full page identifier is &lt;code&gt;overview/community/style_guide.md Docs Style Guide&lt;/code&gt;</source>
          <target state="translated">예를 &lt;code&gt;style_guide.md&lt;/code&gt; 페이지의 상위 식별자는 &lt;code&gt;overview/community&lt;/code&gt; , 페이지 파일은 style_guide.md , 페이지 제목은 &lt;code&gt;Docs Style Guide&lt;/code&gt; 이므로 전체 페이지 식별자는 &lt;code&gt;overview/community/style_guide.md Docs Style Guide&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47f87ea31d5c8489e2a7ed9301eb712c4d341055" translate="yes" xml:space="preserve">
          <source>For example, this should return &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="225929f65a69a76a61aa35be9e43fc3fd618afeb" translate="yes" xml:space="preserve">
          <source>For example, this:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="29eec27e834afe626ae915421209224e59fb814f" translate="yes" xml:space="preserve">
          <source>For example, to bump a version number, first make changes to the cookbook, and then upload and test it. Repeat this process as required, and then upload it using a knife command similar to:</source>
          <target state="translated">예를 들어, 버전 번호를 늘리려면 먼저 요리 책을 변경 한 다음 업로드하고 테스트하십시오. 필요에 따라이 프로세스를 반복 한 후 다음과 유사한 나이프 명령을 사용하여 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="a9dd727d9d26412e49790f9a3706c12d3998959e" translate="yes" xml:space="preserve">
          <source>For example, to change a user&amp;rsquo;s password, enter:</source>
          <target state="translated">예를 들어, 사용자 비밀번호를 변경하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="e857243666db106d08d3ada26500a1da2dca16a4" translate="yes" xml:space="preserve">
          <source>For example, to copy using ssh:</source>
          <target state="translated">예를 들어 ssh를 사용하여 복사하려면 :</target>
        </trans-unit>
        <trans-unit id="a1522af42745f447a359b467050a1bebdee9d7be" translate="yes" xml:space="preserve">
          <source>For example, to embed the long description within the field itself:</source>
          <target state="translated">예를 들어, 필드 자체에 긴 설명을 포함 시키려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="32b9132a0789f9ded84dfceab36df3b9d4e804e1" translate="yes" xml:space="preserve">
          <source>For example, to exclude rule &lt;code&gt;FC003&lt;/code&gt;:</source>
          <target state="translated">예를 들어 규칙 &lt;code&gt;FC003&lt;/code&gt; 을 제외 하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8488953a9c4afc34ec0ca5e5fb92df1382611cf" translate="yes" xml:space="preserve">
          <source>For example, to explicitly track an upstream repository&amp;rsquo;s master branch:</source>
          <target state="translated">예를 들어 업스트림 저장소의 마스터 분기를 명시 적으로 추적하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="44ce6a21606ee03cedd6ec92fef022a6817d1d89" translate="yes" xml:space="preserve">
          <source>For example, to freeze a cookbook version using knife, enter:</source>
          <target state="translated">예를 들어, 나이프를 사용하여 요리 책 버전을 고정하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="29d968b46163c0a9adf59ceef4cbc15c69d1938a" translate="yes" xml:space="preserve">
          <source>For example, to get all child items for a registry key:</source>
          <target state="translated">예를 들어 레지스트리 키에 대한 모든 하위 항목을 가져 오려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9ac616cc13a21c2e2d8c58dd98e61d5aac55ded7" translate="yes" xml:space="preserve">
          <source>For example, to get the data for a node named &amp;ldquo;Example_Node&amp;rdquo;:</source>
          <target state="translated">예를 들어, &quot;Example_Node&quot;라는 노드의 데이터를 가져 오려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6a40fdc94a3a5ebff424d50c2db1a6baa5f2680c" translate="yes" xml:space="preserve">
          <source>For example, to import all resources from a module named &lt;code&gt;cRDPEnabled&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;cRDPEnabled&lt;/code&gt; 라는 모듈에서 모든 자원을 가져 오려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae5c9fb7dd955e1c0f3a94e6d47353064d11f897" translate="yes" xml:space="preserve">
          <source>For example, to list all of the nodes in a configuration named &amp;ldquo;preprod&amp;rdquo;, enter:</source>
          <target state="translated">예를 들어, &quot;preprod&quot;라는 구성의 모든 노드를 나열하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="ff720e72520cd20b8d3239c338376e446a3ce643" translate="yes" xml:space="preserve">
          <source>For example, to list all of the nodes in a configuration named &amp;ldquo;preprod&amp;rdquo;:</source>
          <target state="translated">예를 들어,&amp;ldquo;preprod&amp;rdquo;라는 구성의 모든 노드를 나열하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="00fe31c6b55a210fa1de799c0bf79ae7162b753e" translate="yes" xml:space="preserve">
          <source>For example, to match any 12.x version of the chef-client, but not 11.x or 13.x:</source>
          <target state="translated">예를 들어 12.x 버전의 chef-client와 일치하지만 11.x 또는 13.x는 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5371f2425efc521ef88ccd1de46fba422c7bbba8" translate="yes" xml:space="preserve">
          <source>For example, to match any 14.x version of the Chef Client, but not 13.x or 15.x:</source>
          <target state="translated">예를 들어, 14.x 버전의 Chef Client와 일치하지만 13.x 또는 15.x와 일치하지 않으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="284a1796dc851b53fb76e1965abf67ef7a707167" translate="yes" xml:space="preserve">
          <source>For example, to match any 8.x version of Ohai, but not 7.x or 9.x:</source>
          <target state="translated">예를 들어, 8.x 버전의 Ohai와 일치하지만 7.x 또는 9.x는 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6381559c57bd632968c2e8255de9f238d3ca3b9" translate="yes" xml:space="preserve">
          <source>For example, to pass the required headers using curl:</source>
          <target state="translated">예를 들어 curl을 사용하여 필요한 헤더를 전달하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="d98446ae4c7e385834377c06adac8ded2b18a769" translate="yes" xml:space="preserve">
          <source>For example, to replace all the files in &lt;code&gt;node_modules/.bin&lt;/code&gt; that have &lt;code&gt;#!/usr/bin/env&lt;/code&gt; with the coreutils path to &lt;code&gt;bin/env&lt;/code&gt; (/hab/pkgs/core/coreutils/8.24/20160219013458/bin/env), you must quote the wildcard target as shown below.</source>
          <target state="translated">예를 들어, 모든 파일을 대체 할 &lt;code&gt;node_modules/.bin&lt;/code&gt; 이 되세요 &lt;code&gt;#!/usr/bin/env&lt;/code&gt; 에로 coreutils 경로 &lt;code&gt;bin/env&lt;/code&gt; (/hab/pkgs/core/coreutils/8.24/20160219013458/bin/env) 아래와 같이 와일드 카드 대상을 인용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a47a38f2085ab2a8beafa3ced9f93c224706a372" translate="yes" xml:space="preserve">
          <source>For example, to restore a backup in a .dump format, run:</source>
          <target state="translated">예를 들어, .dump 형식으로 백업을 복원하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="69ebeda4a32e919dd295104e1ab47c69ceaf0d91" translate="yes" xml:space="preserve">
          <source>For example, to restore your cookbook files, run:</source>
          <target state="translated">예를 들어 쿡북 파일을 복원하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c561c7a01ad1f44816b7a5bff8451925b27cb0e5" translate="yes" xml:space="preserve">
          <source>For example, to retrieve a value from a data bag based on a specific environment:</source>
          <target state="translated">예를 들어, 특정 환경을 기반으로 데이터 백에서 값을 검색하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="8175f87aa4313db8d6e36ea70a006819ac00ad49" translate="yes" xml:space="preserve">
          <source>For example, to set a dependency a cookbook named &lt;code&gt;cats&lt;/code&gt;:</source>
          <target state="translated">예를 들어 의존성을 설정하려면 &lt;code&gt;cats&lt;/code&gt; 라는 요리 책을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="450edcbf78a9b2c9d3dcfd5d8b67c081d9e937d6" translate="yes" xml:space="preserve">
          <source>For example, to show a fatal error in a plugin in the same way that it would be shown in knife do something similar to the following:</source>
          <target state="translated">예를 들어, knife에 표시되는 것과 동일한 방식으로 플러그인에 치명적인 오류를 표시하려면 다음과 유사한 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="538d293642619be7db567849b6fd4f79e7623416" translate="yes" xml:space="preserve">
          <source>For example, to support every version of Ubuntu:</source>
          <target state="translated">예를 들어, 모든 버전의 우분투를 지원하려면 :</target>
        </trans-unit>
        <trans-unit id="f74074d9a0d274e85ef0251b5791cc39e84e1c5a" translate="yes" xml:space="preserve">
          <source>For example, to target anything running Debian Linux, use:</source>
          <target state="translated">예를 들어 Debian Linux를 실행하는 모든 항목을 대상으로하려면 다음을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f640d083559385c7d0de973791b81f31cd3fa648" translate="yes" xml:space="preserve">
          <source>For example, to test for Darwin use:</source>
          <target state="translated">예를 들어 Darwin을 테스트하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="655fc0554da019a81a9ca76b2026b1e50db919e2" translate="yes" xml:space="preserve">
          <source>For example, to test if the SSH daemon is available on a Linux machine via the default port (22):</source>
          <target state="translated">예를 들어, 기본 포트 (22)를 통해 Linux 시스템에서 SSH 데몬을 사용할 수 있는지 테스트하려면 :</target>
        </trans-unit>
        <trans-unit id="11653331ab1cdbde051590aa51e4dea5716497c8" translate="yes" xml:space="preserve">
          <source>For example, to use the Effortless seed list to download &lt;code&gt;x86_64-linux&lt;/code&gt; packages from the &lt;code&gt;stable&lt;/code&gt; channel to the &lt;code&gt;builder_bootstrap&lt;/code&gt; directory:</source>
          <target state="translated">예를 들어, Effortless 시드 목록을 사용 하여 &lt;code&gt;stable&lt;/code&gt; 채널에서 &lt;code&gt;builder_bootstrap&lt;/code&gt; 디렉토리로 &lt;code&gt;x86_64-linux&lt;/code&gt; 패키지 를 다운로드 하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d0b7e484b379bbc8c886e223df489a968cdff69" translate="yes" xml:space="preserve">
          <source>For example, to view a list of roles on the Chef Infra Server:</source>
          <target state="translated">예를 들어 Chef Infra Server에서 역할 목록을 보려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b87c9008967f459bf82cc0de986171410fe1aa12" translate="yes" xml:space="preserve">
          <source>For example, to view a list of roles on the Chef server:</source>
          <target state="translated">예를 들어 Chef 서버에서 역할 목록을 보려면</target>
        </trans-unit>
        <trans-unit id="ba7eec77dafc45c8f7bd85697311d895b27e42d5" translate="yes" xml:space="preserve">
          <source>For example, to view the aggregate queue backlog, enter the following:</source>
          <target state="translated">예를 들어, 집계 큐 백 로그를 보려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="224de89fcd2302059abbf51323ae976244b2e047" translate="yes" xml:space="preserve">
          <source>For example, use the following to require a plugin named &lt;code&gt;bootstrap&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음을 사용하여 &lt;code&gt;bootstrap&lt;/code&gt; 이라는 플러그인이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="5b38c9c2d554e7e69205d2d89493d3637d27fa49" translate="yes" xml:space="preserve">
          <source>For example, using a &lt;code&gt;case&lt;/code&gt; statement with the &lt;code&gt;platform&lt;/code&gt; node attribute:</source>
          <target state="translated">예를 들어, &lt;code&gt;platform&lt;/code&gt; 노드 속성 과 함께 &lt;code&gt;case&lt;/code&gt; 문을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcf351b3f52f4cb4931cbec364fa8eb202c72df5" translate="yes" xml:space="preserve">
          <source>For example, using a &lt;code&gt;case&lt;/code&gt; statement with the &lt;code&gt;platform_family&lt;/code&gt; node attribute:</source>
          <target state="translated">예를 들어 &lt;code&gt;platform_family&lt;/code&gt; 노드 속성 과 함께 &lt;code&gt;case&lt;/code&gt; 문을 사용하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="937c820cb25fa936c4684fcb94d53d411d89a96b" translate="yes" xml:space="preserve">
          <source>For example, using an &lt;code&gt;if&lt;/code&gt; statement with the &lt;code&gt;platform&lt;/code&gt; node attribute:</source>
          <target state="translated">예를 들어, &lt;code&gt;platform&lt;/code&gt; 노드 속성 과 함께 &lt;code&gt;if&lt;/code&gt; 문을 사용 하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86ab92f1e029d4034e6c5303a250c0961bd291d9" translate="yes" xml:space="preserve">
          <source>For example, using the results of a search query within a variable:</source>
          <target state="translated">예를 들어, 변수 내에서 검색 결과를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="fa763c2611dffa0c486b83c9ac8d7aed55fb101d" translate="yes" xml:space="preserve">
          <source>For example, using the same example as from above, but this time adding the &lt;code&gt;guard_interpreter&lt;/code&gt; property and setting it to &lt;code&gt;:bash&lt;/code&gt;:</source>
          <target state="translated">예를 들어 위와 동일한 예제를 사용하지만 이번에는 &lt;code&gt;guard_interpreter&lt;/code&gt; 속성을 추가하고 이를 &lt;code&gt;:bash&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e280180e461b0bcc523e1b86b6c9d65c84f4288" translate="yes" xml:space="preserve">
          <source>For example, when using knife, the following configuration files would be loaded:</source>
          <target state="translated">예를 들어, knife를 사용할 때 다음 구성 파일이로드됩니다.</target>
        </trans-unit>
        <trans-unit id="b32c5faa97f8876da14a8050f84383b569a428fd" translate="yes" xml:space="preserve">
          <source>For example, without downloading the SSL certificate, the following knife command:</source>
          <target state="translated">예를 들어 SSL 인증서를 다운로드하지 않고 다음과 같은 knife 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="20b49db1b9d652623227d76d3c91d77762ce4bff" translate="yes" xml:space="preserve">
          <source>For example, write:</source>
          <target state="translated">예를 들어 다음과 같이 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6722da3ff6e7b2fe3705457c6db8de03f33dc560" translate="yes" xml:space="preserve">
          <source>For example: Against a supervisor running Chef Infra Server, run &lt;code&gt;echo &quot;chef_license.acceptance = accept&quot; | hab config apply server.default 100&lt;/code&gt;. See the &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#config-updates&quot;&gt;Habitat config updates documentation&lt;/a&gt; for more information about how to apply this configuration to a service group.</source>
          <target state="translated">예 : Chef Infra Server를 실행하는 감독자에 대해 &lt;code&gt;echo &quot;chef_license.acceptance = accept&quot; | hab config apply server.default 100&lt;/code&gt; . 이 구성을 서비스 그룹에 적용하는 방법에 대한 자세한 정보 는 &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#config-updates&quot;&gt;Habitat 구성 업데이트 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a3f550d2d1dd18f5cc202c2a07481332f706092a" translate="yes" xml:space="preserve">
          <source>For example: a user named &lt;code&gt;grantmc&lt;/code&gt;, with a first and last name of &lt;code&gt;Grant McLennan&lt;/code&gt;, an email address of &lt;code&gt;grantmc@chef.io&lt;/code&gt;, a poorly-chosen password, and a &lt;code&gt;USER.pem&lt;/code&gt; file saved to &lt;code&gt;/tmp/grantmc.key&lt;/code&gt;:</source>
          <target state="translated">예를 들어 사용자 이름 &lt;code&gt;grantmc&lt;/code&gt; 의 이름과 성을 가진, &lt;code&gt;Grant McLennan&lt;/code&gt; 의 이메일 주소 &lt;code&gt;grantmc@chef.io&lt;/code&gt; , 가난가 선택한 암호 및 &lt;code&gt;USER.pem&lt;/code&gt; 의 파일에 저장 &lt;code&gt;/tmp/grantmc.key&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e441511a6081d46a1d85af7f28f96c7b25d87552" translate="yes" xml:space="preserve">
          <source>For frequency &lt;code&gt;:daily&lt;/code&gt; valid values are 1 to 365</source>
          <target state="translated">빈도 &lt;code&gt;:daily&lt;/code&gt; 유효한 값은 1 ~ 365입니다.</target>
        </trans-unit>
        <trans-unit id="f72044d658b7c1274e90f2b0cb245c03deb646f1" translate="yes" xml:space="preserve">
          <source>For frequency &lt;code&gt;:hourly&lt;/code&gt; valid values are 1 to 23</source>
          <target state="translated">빈도 &lt;code&gt;:hourly&lt;/code&gt; 유효한 값은 1 ~ 23입니다.</target>
        </trans-unit>
        <trans-unit id="74223d5e012a49189fad4cb6287f317a48a349e6" translate="yes" xml:space="preserve">
          <source>For frequency &lt;code&gt;:minute&lt;/code&gt; valid values are 1 to 1439</source>
          <target state="translated">빈도 &lt;code&gt;:minute&lt;/code&gt; 유효 값은 1 ~ 1439입니다.</target>
        </trans-unit>
        <trans-unit id="a6e38e9ce1ddb2dcf97044a30246f8ec2332ccd7" translate="yes" xml:space="preserve">
          <source>For frequency &lt;code&gt;:monthly&lt;/code&gt; valid values are &lt;code&gt;('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST')&lt;/code&gt; OR &lt;code&gt;1-12&lt;/code&gt;.</source>
          <target state="translated">빈도의 경우 &lt;code&gt;:monthly&lt;/code&gt; 유효한 값은 &lt;code&gt;('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST')&lt;/code&gt; 또는 &lt;code&gt;1-12&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e0d8c09d039cf9ec53ac8c322e7e24a4bfcb322e" translate="yes" xml:space="preserve">
          <source>For frequency &lt;code&gt;:weekly&lt;/code&gt; valid values are 1 to 52</source>
          <target state="translated">빈도 &lt;code&gt;:weekly&lt;/code&gt; 유효한 값은 1 ~ 52입니다.</target>
        </trans-unit>
        <trans-unit id="6f4897b2e3384c8e6c57211211b49eb4427f2339" translate="yes" xml:space="preserve">
          <source>For front-end servers, ensure that ports marked as external (marked as &lt;code&gt;yes&lt;/code&gt; in the &lt;strong&gt;External&lt;/strong&gt; column) are open and accessible via any firewalls that are in use:</source>
          <target state="translated">프런트 엔드 서버의 경우, (로 표시 외부로 표시하는 포트를 확인 &lt;code&gt;yes&lt;/code&gt; 에서 &lt;strong&gt;외부&lt;/strong&gt; 열) 사용중인 모든 방화벽을 통해 개방형 액세스 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="123924bf80d048143f874926325d2154961ddcde" translate="yes" xml:space="preserve">
          <source>For further control over logging output, as well as the ability to change the configuration of a running Supervisor, a configuration file is needed. This file is processed by the &lt;a href=&quot;https://docs.rs/log4rs/&quot;&gt;log4rs&lt;/a&gt; crate, and shares many of the same concepts as the Log4J logging system of the Java ecosystem. The &lt;code&gt;log4rs&lt;/code&gt; configuration documentation can be found &lt;a href=&quot;https://docs.rs/log4rs/0.8.3/log4rs/#configuration&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">로깅 출력을 추가로 제어하고 실행중인 Supervisor의 구성을 변경하는 기능을 위해서는 구성 파일이 필요합니다. 이 파일은 &lt;a href=&quot;https://docs.rs/log4rs/&quot;&gt;log4rs&lt;/a&gt; 크레이트에 의해 처리되며 Java 에코 시스템의 Log4J 로깅 시스템과 동일한 개념을 많이 공유합니다. &lt;code&gt;log4rs&lt;/code&gt; 의 구성 문서를 찾을 수 있습니다 &lt;a href=&quot;https://docs.rs/log4rs/0.8.3/log4rs/#configuration&quot;&gt;여기에&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed7089359a712d063c1144cae5c14c14acf9dad2" translate="yes" xml:space="preserve">
          <source>For further details about these commands, including all the arguments and options they take, please consult &lt;a href=&quot;../habitat_cli/index&quot;&gt;the hab documentation&lt;/a&gt;.</source>
          <target state="translated">사용하는 모든 인수 및 옵션을 포함하여 이러한 명령에 대한 자세한 내용은 &lt;a href=&quot;../habitat_cli/index&quot;&gt;hab 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c8d2e703d7e136416486426e38a214324d9498c" translate="yes" xml:space="preserve">
          <source>For guidance on installing Chef Desktop, see the &lt;a href=&quot;../../desktop/desktop_setup_chef/index#install-chef-automate-and-chef-infra-server&quot;&gt;installing Chef Desktop documentation&lt;/a&gt;. The Desktop dashboard has no supported compliance profiles, and Chef Desktop installation includes no compliance profiles.</source>
          <target state="translated">요리사 데스크탑 설치에 대한 지침은 참조 &lt;a href=&quot;../../desktop/desktop_setup_chef/index#install-chef-automate-and-chef-infra-server&quot;&gt;설치 요리사 데스크톱 문서를&lt;/a&gt; . Desktop 대시 보드에는 지원되는 준수 프로필이 없으며 Chef Desktop 설치에는 준수 프로필이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e93038564bbf4fc82f6bdcb4072d7bcd70b77d5" translate="yes" xml:space="preserve">
          <source>For guidance, follow the &lt;a href=&quot;https://github.com/munki/munki/wiki/Demonstration-Setup&quot;&gt;Munki setup demonstration&lt;/a&gt;.</source>
          <target state="translated">지침은 &lt;a href=&quot;https://github.com/munki/munki/wiki/Demonstration-Setup&quot;&gt;Munki 설정 데모를&lt;/a&gt; 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="25dd5398a83cd1188634a079ee7eea380d44fe98" translate="yes" xml:space="preserve">
          <source>For hands-on examples, check out &lt;a href=&quot;https://learn.chef.io/modules/create-a-custom-profile#/&quot;&gt;Create a custom Chef InSpec profile&lt;/a&gt; on Learn Chef Rally.</source>
          <target state="translated">실습 예제 는 Learn Chef Rally에서 &lt;a href=&quot;https://learn.chef.io/modules/create-a-custom-profile#/&quot;&gt;사용자 지정 Chef InSpec 프로필 생성을&lt;/a&gt; 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7ad7c10a1220889cdcd5764b8d10867aa6fcf07" translate="yes" xml:space="preserve">
          <source>For help with Chef Habitat and these patterns, ask:</source>
          <target state="translated">Chef Habitat 및 이러한 패턴에 대한 도움이 필요하면 다음을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="56035248dbca3b5b3ae6cceb8b080c0bc0213c6a" translate="yes" xml:space="preserve">
          <source>For helper functions that you used to write in your provider code or used to mixin to your provider code, you have to use an &lt;code&gt;action_class.class_eval do ... end&lt;/code&gt; block.</source>
          <target state="translated">공급자 코드를 작성하는 데 사용했거나 공급자 코드에 &lt;code&gt;action_class.class_eval do ... end&lt;/code&gt; 하는 데 사용했던 도우미 함수의 경우 action_class.class_eval do ... end 블록 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a3a62be1b10341fc123070cf8008d94a9a161444" translate="yes" xml:space="preserve">
          <source>For illustration purposes, below we discuss two common scenarios:</source>
          <target state="translated">설명을 위해 아래에서 두 가지 일반적인 시나리오에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="fa890f6a591441de79c589776868e264357afe07" translate="yes" xml:space="preserve">
          <source>For information about the settings in this file, see the DRBD website: &lt;a href=&quot;http://www.drbd.org/users-guide/ch-admin.html&quot;&gt;http://www.drbd.org/users-guide/ch-admin.html&lt;/a&gt;.</source>
          <target state="translated">이 파일의 설정에 대한 정보는 DRBD 웹 사이트 ( &lt;a href=&quot;http://www.drbd.org/users-guide/ch-admin.html&quot;&gt;http://www.drbd.org/users-guide/ch-admin.html)를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7506e45d4298a7c103ffd8d4232091539000f7a3" translate="yes" xml:space="preserve">
          <source>For information on all that are available please refer to the &lt;a href=&quot;../../matchers/index&quot;&gt;Chef InSpec Matchers Reference&lt;/a&gt; page.</source>
          <target state="translated">사용 가능한 모든 것에 대한 정보는 &lt;a href=&quot;../../matchers/index&quot;&gt;Chef InSpec Matchers 참조&lt;/a&gt; 페이지를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="dc6dddadd9b42424240b5cbea295a4e2e56b23c8" translate="yes" xml:space="preserve">
          <source>For information on all the available settings, see the &lt;a href=&quot;../config_rb_backend/index&quot;&gt;chef-backend.rb documentation&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 모든 설정에 대한 정보는 &lt;a href=&quot;../config_rb_backend/index&quot;&gt;chef-backend.rb 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b1e148911116c217fc7c2f6d52a8eb289e7fa8d" translate="yes" xml:space="preserve">
          <source>For information on changing the output, please refer to the man page or run:</source>
          <target state="translated">출력 변경에 대한 정보는 man 페이지를 참조하거나 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0de4cbdd8ea6b078ffd4b9253a1a0b11bb4715e3" translate="yes" xml:space="preserve">
          <source>For information on how RSpec matchers are related o Chef InSpec matchers, see &lt;a href=&quot;../inspec_and_friends/index#rspec&quot;&gt;Chef InSpec and RSpec&lt;/a&gt;.</source>
          <target state="translated">RSpec 매 처가 어떻게 관련되는지에 대한 정보 o Chef InSpec 매처는 &lt;a href=&quot;../inspec_and_friends/index#rspec&quot;&gt;Chef InSpec 및 RSpec을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e0b8c83341f87f38b7166320271f53a12a562bf" translate="yes" xml:space="preserve">
          <source>For information on the contents of an installed package, see &lt;a href=&quot;../package_contents/index&quot;&gt;Package contents&lt;/a&gt;.</source>
          <target state="translated">설치된 패키지의 내용에 대한 정보는 &lt;a href=&quot;../package_contents/index&quot;&gt;패키지 내용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="20aa78e80e2f047f6721fe69c407f84b89a69557" translate="yes" xml:space="preserve">
          <source>For information on the integrated reporting capabilities in Chef Automate, see &lt;a href=&quot;../automate/reports/index&quot;&gt;Compliance Overview&lt;/a&gt;.</source>
          <target state="translated">Chef Automate의 통합보고 기능에 대한 정보는 &lt;a href=&quot;../automate/reports/index&quot;&gt;규정 준수 개요를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d02683403eb1cf6b6ae78d8a2722835ffd65ea78" translate="yes" xml:space="preserve">
          <source>For instance, if there are West coast and East coast data centers, it is best to have one Chef Infra Server instance in each datacenter. Deploys to each Chef Infra Server can be synchronized upstream by CI software. The primary limiting bottleneck for Chef Infra Server installations is almost always input/output operations per second (IOPS) performance for the database filesystem.</source>
          <target state="translated">예를 들어 서해안과 동해안 데이터 센터가있는 경우 각 데이터 센터에 Chef Infra Server 인스턴스를 하나씩 두는 것이 가장 좋습니다. 각 Chef Infra Server에 대한 배포는 CI 소프트웨어를 통해 업스트림으로 동기화 할 수 있습니다. Chef Infra Server 설치의 주요 제한 병목 현상은 거의 항상 데이터베이스 파일 시스템의 IOPS (초당 입력 / 출력 작업) 성능입니다.</target>
        </trans-unit>
        <trans-unit id="8a0b614b2d2cb09220f4d8a3a0cb30e4624016a4" translate="yes" xml:space="preserve">
          <source>For instance, if there are West coast and East coast data centers, it is best to have one Chef server instance in each datacenter. Deploys to each Chef server can be synchronized upstream by CI software. The primary limiting bottleneck for Chef server installations is almost always input/output operations per second (IOPS) performance for the database filesystem.</source>
          <target state="translated">예를 들어 West Coast 및 East Coast 데이터 센터가있는 경우 각 데이터 센터마다 하나의 Chef 서버 인스턴스가있는 것이 가장 좋습니다. CI 소프트웨어를 통해 각 Chef 서버에 배포를 업스트림 동기화 할 수 있습니다. Chef 서버 설치의 기본 제한 병목 현상은 거의 항상 데이터베이스 파일 시스템의 IOPS (입 / 출력 작업) 성능입니다.</target>
        </trans-unit>
        <trans-unit id="e5ea69ffac8d36acd4656fe700951b9008de8b3e" translate="yes" xml:space="preserve">
          <source>For internal TCP/UDP load balancing (i.e. load balancing scheme is INTERNAL and protocol is TCP/UDP), set this to true to allow packets addressed to any ports to be forwarded to the backends configured with this forwarding rule. Used with backend service. Cannot be set if port or portRange are set.</source>
          <target state="translated">내부 TCP / UDP 부하 분산의 경우 (즉, 부하 분산 체계가 내부이고 프로토콜이 TCP / UDP 임)이 전달 규칙으로 구성된 백엔드로 모든 포트로 주소가 지정된 패킷을 전달할 수 있도록하려면이 값을 true로 설정합니다. 백엔드 서비스와 함께 사용됩니다. port 또는 portRange가 설정된 경우 설정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fa96fbf41dd89ac331bbe3c3075624ba4bb35c07" translate="yes" xml:space="preserve">
          <source>For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used. This field is only used for INTERNAL load balancing.</source>
          <target state="translated">내부 부하 분산의 경우이 필드는 부하 분산 된 IP가이 전달 규칙에 속해야하는 네트워크를 식별합니다. 이 필드를 지정하지 않으면 기본 네트워크가 사용됩니다. 이 필드는 내부 부하 분산에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4b25398c879eeef26000cba0bda4b13564c25858" translate="yes" xml:space="preserve">
          <source>For knife, the private key is typically copied to &lt;code&gt;~/.chef/client_name.pem&lt;/code&gt; and referenced in the config.rb configuration file.</source>
          <target state="translated">knife의 경우 개인 키는 일반적으로 &lt;code&gt;~/.chef/client_name.pem&lt;/code&gt; 에 복사되고 config.rb 구성 파일에서 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="c293511c0ce9f3585a3035ea568fd878421528d4" translate="yes" xml:space="preserve">
          <source>For knife, the private key is typically copied to &lt;code&gt;~/.chef/client_name.pem&lt;/code&gt; and referenced in the knife.rb configuration file.</source>
          <target state="translated">knife의 경우 개인 키는 일반적으로 &lt;code&gt;~/.chef/client_name.pem&lt;/code&gt; 에 복사되고 knife.rb 구성 파일에서 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="e605a35e7633364282f3b89d3ccf2e4b80f81596" translate="yes" xml:space="preserve">
          <source>For less restrictive comparisons, please use &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="translated">덜 제한적인 비교를 위해서는 &lt;code&gt;cmp&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ace202eee936a681b43feb81ea79755206b4317" translate="yes" xml:space="preserve">
          <source>For macOS:</source>
          <target state="translated">macOS의 경우 :</target>
        </trans-unit>
        <trans-unit id="023189c8d9b367c8d89b4cd6e0e64db05edf73eb" translate="yes" xml:space="preserve">
          <source>For many users of Chef, the Chef development kit version of Ruby that is included in the Chef development kit should be configured as the default version of Ruby.</source>
          <target state="translated">Chef의 많은 사용자의 경우 Chef 개발 키트에 포함 된 Ruby의 Chef 개발 키트 버전의 Ruby가 기본 버전의 Ruby로 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="098736f47d42b9843279e7e80d946b8815d8a16e" translate="yes" xml:space="preserve">
          <source>For many users of Chef, the version of Ruby that is included in Chef Workstation should be configured as the default version of Ruby on your system.</source>
          <target state="translated">많은 Chef 사용자의 경우 Chef Workstation에 포함 된 Ruby 버전을 시스템에서 Ruby의 기본 버전으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe077c23be70275eee149ebbf49c30b4d19027c0" translate="yes" xml:space="preserve">
          <source>For more detail on &lt;code&gt;config.json&lt;/code&gt;, see its &lt;a href=&quot;../config_json_delivery/index&quot;&gt;config.json&lt;/a&gt;.</source>
          <target state="translated">에 대한 자세한 세부 내용은 &lt;code&gt;config.json&lt;/code&gt; , 그 참조 &lt;a href=&quot;../config_json_delivery/index&quot;&gt;config.json을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="100a1809d423ab8a3b20fb3d228711f4e810dc13" translate="yes" xml:space="preserve">
          <source>For more details on what the &lt;code&gt;plugin&lt;/code&gt; command can do, run &lt;code&gt;inspec plugin help&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;plugin&lt;/code&gt; 명령으로 수행 할 수있는 작업 에 대한 자세한 내용은 &lt;code&gt;inspec plugin help&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec91a8cf6a4e08f5a3c0aaa9bfb406d8a38daea8" translate="yes" xml:space="preserve">
          <source>For more examples, please check the &lt;a href=&quot;../../test/integration/verify/controls/aws_nat_gateway.rb&quot;&gt;integration tests&lt;/a&gt;.</source>
          <target state="translated">더 많은 예를 보려면 &lt;a href=&quot;../../test/integration/verify/controls/aws_nat_gateway.rb&quot;&gt;통합 테스트&lt;/a&gt; 를 확인하세요 .</target>
        </trans-unit>
        <trans-unit id="e19c1ee3dd4afde0afd4c63a4656560c6e704c4e" translate="yes" xml:space="preserve">
          <source>For more examples, please check the &lt;a href=&quot;../../test/integration/verify/controls/aws_nat_gateways.rb&quot;&gt;integration tests&lt;/a&gt;.</source>
          <target state="translated">더 많은 예를 보려면 &lt;a href=&quot;../../test/integration/verify/controls/aws_nat_gateways.rb&quot;&gt;통합 테스트&lt;/a&gt; 를 확인하세요 .</target>
        </trans-unit>
        <trans-unit id="3690b51402a8710ad7d39a8b7dc31410119f019c" translate="yes" xml:space="preserve">
          <source>For more info/help on regular expressions, we recommend &lt;a href=&quot;https://regexr.com/&quot;&gt;RegExr&lt;/a&gt;</source>
          <target state="translated">정규식에 대한 자세한 정보 / 도움말은 &lt;a href=&quot;https://regexr.com/&quot;&gt;RegExr&lt;/a&gt; 을 권장 합니다.</target>
        </trans-unit>
        <trans-unit id="ada5ebbcf93be59cb0d994bf64af2b43b37d3265" translate="yes" xml:space="preserve">
          <source>For more information &amp;amp;mldr;</source>
          <target state="translated">자세한 정보 &amp;amp; mldr;</target>
        </trans-unit>
        <trans-unit id="a8947513707a5ba02417a23a0067652f61386dd3" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;chef-vault&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;chef-vault&lt;/code&gt; 에 대한 자세한 정보 :</target>
        </trans-unit>
        <trans-unit id="759e29e4242dc7686d3e6c4cc1379df7cbadcb0e" translate="yes" xml:space="preserve">
          <source>For more information about Amazon Elastic Block Store (EBS), see &lt;a href=&quot;http://aws.amazon.com/ebs/&quot;&gt;http://aws.amazon.com/ebs/&lt;/a&gt;.</source>
          <target state="translated">Amazon Elastic Block Store (EBS)에 대한 자세한 내용은 &lt;a href=&quot;http://aws.amazon.com/ebs/&quot;&gt;http://aws.amazon.com/ebs/를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a71a67c94b2e41f54358b19930010b241573e8dd" translate="yes" xml:space="preserve">
          <source>For more information about Chef Infra Server Authorization, see &lt;a href=&quot;../server_orgs/index&quot;&gt;Organizations and Groups&lt;/a&gt;.</source>
          <target state="translated">Chef Infra 서버 인증에 대한 자세한 내용은 &lt;a href=&quot;../server_orgs/index&quot;&gt;조직 및 그룹을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f1106c9a9ef28a239967497aa3ba3b9cd943ba6" translate="yes" xml:space="preserve">
          <source>For more information about ChefSpec:</source>
          <target state="translated">ChefSpec에 대한 자세한 정보 :</target>
        </trans-unit>
        <trans-unit id="23abc8fe6acbb42396e081211a611112e7dde9a2" translate="yes" xml:space="preserve">
          <source>For more information about DRBD, see &lt;a href=&quot;http://www.drbd.org&quot;&gt;http://www.drbd.org&lt;/a&gt;.</source>
          <target state="translated">DRBD에 대한 자세한 정보는 &lt;a href=&quot;http://www.drbd.org&quot;&gt;http://www.drbd.org를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b844e092361888d3c09d7a924ec8fadbd7f2aad8" translate="yes" xml:space="preserve">
          <source>For more information about Foodcritic:</source>
          <target state="translated">Foodcritic에 대한 자세한 정보 :</target>
        </trans-unit>
        <trans-unit id="047e8efcdcaf9ee86099a3899fb43bf9d24b09fa" translate="yes" xml:space="preserve">
          <source>For more information about Policyfile, see &lt;a href=&quot;../policyfile/index&quot;&gt;About Policyfile&lt;/a&gt;</source>
          <target state="translated">Policyfile에 대한 자세한 내용은 다음을 참조 &lt;a href=&quot;../policyfile/index&quot;&gt;Policyfile 소개&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="934c374dd12f4cb801f3cc93dea6a244c77d48e7" translate="yes" xml:space="preserve">
          <source>For more information about cookbook versioning, see &lt;a href=&quot;../cookbook_versioning/index&quot;&gt;About Cookbook Versioning&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../cookbook_versioning/index&quot;&gt;쿡북 버전&lt;/a&gt; 관리에 대한 자세한 내용은 쿡북 버전 관리 정보를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="9bea8d2990fb70c8e68cd21cc8136c427d5a5730" translate="yes" xml:space="preserve">
          <source>For more information about data bags, see &lt;a href=&quot;../data_bags/index&quot;&gt;About Data Bags&lt;/a&gt;</source>
          <target state="translated">데이터 가방에 대한 자세한 내용은 &lt;a href=&quot;../data_bags/index&quot;&gt;데이터 가방 정보&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45158d120a815e292e5bcf812e10de11400e272a" translate="yes" xml:space="preserve">
          <source>For more information about environments, see &lt;a href=&quot;../environments/index&quot;&gt;About Environments&lt;/a&gt;</source>
          <target state="translated">환경에 대한 자세한 내용은 &lt;a href=&quot;../environments/index&quot;&gt;환경 정보&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="815496010f8acc5c832910a94099b37c961aa0fd" translate="yes" xml:space="preserve">
          <source>For more information about logical volume manager (LVM), see &lt;a href=&quot;http://www.tldp.org/HOWTO/LVM-HOWTO/&quot;&gt;http://www.tldp.org/HOWTO/LVM-HOWTO/&lt;/a&gt;. For more information about DRBD, see &lt;a href=&quot;http://drbd.linbit.com/users-guide/s-resizing.html&quot;&gt;http://drbd.linbit.com/users-guide/s-resizing.html&lt;/a&gt;.</source>
          <target state="translated">논리 볼륨 관리자 (LVM)에 대한 자세한 정보는 &lt;a href=&quot;http://www.tldp.org/HOWTO/LVM-HOWTO/&quot;&gt;http://www.tldp.org/HOWTO/LVM-HOWTO/를&lt;/a&gt; 참조 하십시오 . DRBD에 대한 자세한 내용은 &lt;a href=&quot;http://drbd.linbit.com/users-guide/s-resizing.html&quot;&gt;http://drbd.linbit.com/users-guide/s-resizing.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="95f2b936aa2c5c4c3f2516097a0c016dd2ce89d8" translate="yes" xml:space="preserve">
          <source>For more information about roles, see &lt;a href=&quot;../roles/index&quot;&gt;About Roles&lt;/a&gt;</source>
          <target state="translated">역할에 대한 자세한 내용은 &lt;a href=&quot;../roles/index&quot;&gt;역할에 대한&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="098501a1259fcf57ffbcfea89192bb13c6370b46" translate="yes" xml:space="preserve">
          <source>For more information about specific resources for specific platforms, see the following topics:</source>
          <target state="translated">특정 플랫폼의 특정 자원에 대한 자세한 정보는 다음 주제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2a14e8e9149dc02d72b07184e98e93d0050f7b20" translate="yes" xml:space="preserve">
          <source>For more information about test-driven development and Test Kitchen:</source>
          <target state="translated">테스트 주도 개발 및 Test Kitchen에 대한 자세한 정보 :</target>
        </trans-unit>
        <trans-unit id="cb6cdf6fb692a77c0cbe4fe330b677a9d372bf28" translate="yes" xml:space="preserve">
          <source>For more information about the &lt;code&gt;kitchen&lt;/code&gt; command line tool, see &lt;a href=&quot;../ctl_kitchen/index&quot;&gt;kitchen&lt;/a&gt;.</source>
          <target state="translated">에 대한 자세한 내용은 &lt;code&gt;kitchen&lt;/code&gt; 명령 줄 도구를 참조 &lt;a href=&quot;../ctl_kitchen/index&quot;&gt;부엌&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d45346c5befa38b44cb937cbebabf30f6010e6fb" translate="yes" xml:space="preserve">
          <source>For more information about the &lt;code&gt;kitchen&lt;/code&gt; command line tool, see &lt;a href=&quot;../workstation/ctl_kitchen/index&quot;&gt;kitchen&lt;/a&gt;.</source>
          <target state="translated">에 대한 자세한 내용은 &lt;code&gt;kitchen&lt;/code&gt; 명령 줄 도구를 참조 &lt;a href=&quot;../workstation/ctl_kitchen/index&quot;&gt;부엌&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fedb95e8ef38bd93ac74060e848c4acf21b2b1e" translate="yes" xml:space="preserve">
          <source>For more information about the Bully algorithm, see &lt;a href=&quot;https://dl.acm.org/doi/10.1109/TC.1982.1675885&quot;&gt;Elections in a Distributed Computing System&lt;/a&gt; by H&amp;eacute;ctor Garc&amp;iacute;a-Molina.</source>
          <target state="translated">Bully 알고리즘에 대한 자세한 내용은 H&amp;eacute;ctor Garc&amp;iacute;a-Molina의 &lt;a href=&quot;https://dl.acm.org/doi/10.1109/TC.1982.1675885&quot;&gt;Elections in a Distributed Computing System&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="997bb37d812f64b80dab134e6ecfca956bf26ad0" translate="yes" xml:space="preserve">
          <source>For more information about the Chef server API endpoints see &lt;a href=&quot;api_chef_server&quot;&gt;Chef Server API&lt;/a&gt;.</source>
          <target state="translated">Chef 서버 API 엔드 포인트에 대한 자세한 정보는 &lt;a href=&quot;api_chef_server&quot;&gt;Chef Server API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e93a4233b7e2ad926fbfb5a547f54532c530a88a" translate="yes" xml:space="preserve">
          <source>For more information about the Supermarket API, see &lt;a href=&quot;../supermarket_api/index&quot;&gt;Supermarket API&lt;/a&gt;.</source>
          <target state="translated">슈퍼마켓 API에 대한 자세한 내용은 &lt;a href=&quot;../supermarket_api/index&quot;&gt;슈퍼마켓 API를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4333c467ac7b96d680fc47c2b0af9ec3e52808d7" translate="yes" xml:space="preserve">
          <source>For more information about the Supermarket API, see &lt;a href=&quot;supermarket_api/index&quot;&gt;Supermarket API&lt;/a&gt;.</source>
          <target state="translated">슈퍼마켓 API에 대한 자세한 내용은 &lt;a href=&quot;supermarket_api/index&quot;&gt;슈퍼마켓 API를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58dd1fdf39879faa706fc9e7deba4f037db8dd3e" translate="yes" xml:space="preserve">
          <source>For more information about the kitchen.yml file, see &lt;a href=&quot;../config_yml_kitchen/index&quot;&gt;kitchen.yml&lt;/a&gt;.</source>
          <target state="translated">kitchen.yml 파일에 대한 자세한 내용은 &lt;a href=&quot;../config_yml_kitchen/index&quot;&gt;kitchen.yml을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fab954926edf7d6df76360c67c38099ab56ba08" translate="yes" xml:space="preserve">
          <source>For more information about the kitchen.yml file, see &lt;a href=&quot;../workstation/config_yml_kitchen/index&quot;&gt;kitchen.yml&lt;/a&gt;.</source>
          <target state="translated">kitchen.yml 파일에 대한 자세한 내용은 &lt;a href=&quot;../workstation/config_yml_kitchen/index&quot;&gt;kitchen.yml을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a209b0998115eb09b254d726ca1b0d8224179ce" translate="yes" xml:space="preserve">
          <source>For more information about the server configuration file, see &lt;a href=&quot;../../server/config_rb_server/index&quot;&gt;chef-server.rb&lt;/a&gt;.</source>
          <target state="translated">서버 구성 파일에 대한 자세한 정보는 &lt;a href=&quot;../../server/config_rb_server/index&quot;&gt;chef-server.rb를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bad1a73b2407361a72a3a7a9d6e4e5b72386901" translate="yes" xml:space="preserve">
          <source>For more information about the server configuration file, see &lt;a href=&quot;../server/config_rb_server/index&quot;&gt;chef-server.rb&lt;/a&gt;.</source>
          <target state="translated">서버 구성 파일에 대한 자세한 정보는 &lt;a href=&quot;../server/config_rb_server/index&quot;&gt;chef-server.rb를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="57e14f15cf5468aeb7732b66d259a7c8ce3c6077" translate="yes" xml:space="preserve">
          <source>For more information about the server configuration file, see &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb&lt;/a&gt;.</source>
          <target state="translated">서버 구성 파일에 대한 자세한 정보는 &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49bbba08ed7e37d54d57b8179c5acb04e8d239c9" translate="yes" xml:space="preserve">
          <source>For more information about the supermarket-ctl command line tool, see &lt;a href=&quot;../ctl_supermarket/index&quot;&gt;supermarket-ctl&lt;/a&gt;.</source>
          <target state="translated">슈퍼마켓-CTL 명령 줄 도구에 대한 자세한 내용은 &lt;a href=&quot;../ctl_supermarket/index&quot;&gt;슈퍼마켓-CTL을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0f7ca6d14bf8a798095c17369896e706ac4ab53" translate="yes" xml:space="preserve">
          <source>For more information about the supermarket-ctl command line tool, see &lt;a href=&quot;ctl_supermarket/index&quot;&gt;supermarket-ctl&lt;/a&gt;.</source>
          <target state="translated">슈퍼마켓-CTL 명령 줄 도구에 대한 자세한 내용은 &lt;a href=&quot;ctl_supermarket/index&quot;&gt;슈퍼마켓-CTL을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d3a6929a2dd67ffe903237a9104d82bc523f2bf" translate="yes" xml:space="preserve">
          <source>For more information about the supermarket.rb file, see &lt;a href=&quot;../config_rb_supermarket/index&quot;&gt;supermarket.rb&lt;/a&gt;.</source>
          <target state="translated">supermarket.rb 파일에 대한 자세한 내용은 &lt;a href=&quot;../config_rb_supermarket/index&quot;&gt;supermarket.rb을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf5b3452181ae555060b349dba176cbbe4222db1" translate="yes" xml:space="preserve">
          <source>For more information about the supermarket.rb file, see &lt;a href=&quot;config_rb_supermarket/index&quot;&gt;supermarket.rb&lt;/a&gt;.</source>
          <target state="translated">supermarket.rb 파일에 대한 자세한 내용은 &lt;a href=&quot;config_rb_supermarket/index&quot;&gt;supermarket.rb을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d7dfd698c3fed9e395880733cea9a274eca658e" translate="yes" xml:space="preserve">
          <source>For more information about these options, see the RubyGems documentation: &lt;a href=&quot;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&quot;&gt;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&lt;/a&gt;.</source>
          <target state="translated">이러한 옵션에 대한 자세한 내용은 젬 설명서를 참조 &lt;a href=&quot;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html&quot;&gt;http://rubygems.rubyforge.org/rubygems-update/Gem/DependencyInstaller.html를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="925fdc8514ab11b1e66ed0221192fb7d8e827055" translate="yes" xml:space="preserve">
          <source>For more information about using Chef Habitat Builder, see the section on &lt;a href=&quot;../builder_overview/index&quot;&gt;Using Builder&lt;/a&gt;.</source>
          <target state="translated">Chef Habitat Builder 사용에 대한 자세한 내용은 Builder &lt;a href=&quot;../builder_overview/index&quot;&gt;사용&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43084e11b0d8ea755e54f661454b6be2015e0c10" translate="yes" xml:space="preserve">
          <source>For more information about using the Chef Infra Server API endpoints see &lt;a href=&quot;../api_chef_server/index&quot;&gt;Chef Infra Server API&lt;/a&gt;.</source>
          <target state="translated">요리사 인프라 서버 API 엔드 포인트를 사용하는 방법에 대한 자세한 내용은 다음을 참조 &lt;a href=&quot;../api_chef_server/index&quot;&gt;요리사 인프라 서버 API를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a1c4080dead2bbec6d0d8413c1a61d64513e365" translate="yes" xml:space="preserve">
          <source>For more information about using the chef-vault cookbook, its helper methods and resources, see &lt;a href=&quot;https://github.com/chef-cookbooks/chef-vault&quot;&gt;https://github.com/chef-cookbooks/chef-vault&lt;/a&gt;</source>
          <target state="translated">chef-vault 요리 책, 도우미 방법 및 리소스 사용에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/chef-cookbooks/chef-vault&quot;&gt;https://github.com/chef-cookbooks/chef-vault를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="bcb677cf4b0684ce3dd79eb60ac493f8789fbd2c" translate="yes" xml:space="preserve">
          <source>For more information on Azure Ruby SDK resources, see:</source>
          <target state="translated">Azure Ruby SDK 리소스에 대한 자세한 내용은 다음을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="93b99a019bb7d77ac7777ddc18757859cfeb19a6" translate="yes" xml:space="preserve">
          <source>For more information on configuring your Chef Infra Server, see &lt;a href=&quot;../server/config_rb_server/index&quot;&gt;chef-server.rb Settings&lt;/a&gt; and &lt;a href=&quot;../server/config_rb_server_optional_settings/index&quot;&gt;chef-server.rb Optional Settings&lt;/a&gt;.</source>
          <target state="translated">Chef Infra 서버 구성에 대한 자세한 내용은 &lt;a href=&quot;../server/config_rb_server/index&quot;&gt;chef-server.rb 설정&lt;/a&gt; 및 &lt;a href=&quot;../server/config_rb_server_optional_settings/index&quot;&gt;chef-server.rb 선택적 설정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7efa4e8ba563202ecab507d5cf2e65e37fe9cddf" translate="yes" xml:space="preserve">
          <source>For more information on configuring your Chef Infra Server, see &lt;a href=&quot;server/config_rb_server/index&quot;&gt;chef-server.rb Settings&lt;/a&gt; and &lt;a href=&quot;server/config_rb_server_optional_settings/index&quot;&gt;chef-server.rb Optional Settings&lt;/a&gt;.</source>
          <target state="translated">Chef Infra 서버 구성에 대한 자세한 내용은 &lt;a href=&quot;server/config_rb_server/index&quot;&gt;chef-server.rb 설정&lt;/a&gt; 및 &lt;a href=&quot;server/config_rb_server_optional_settings/index&quot;&gt;chef-server.rb 선택적 설정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a3284fd7d1f1f89c774978c55067fe63d6c7e8e" translate="yes" xml:space="preserve">
          <source>For more information on configuring your Chef server, see &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb Settings&lt;/a&gt; and &lt;a href=&quot;config_rb_server_optional_settings&quot;&gt;chef-server.rb Optional Settings&lt;/a&gt;.</source>
          <target state="translated">Chef 서버 구성에 대한 자세한 정보는 &lt;a href=&quot;config_rb_server&quot;&gt;chef-server.rb 설정&lt;/a&gt; 및 &lt;a href=&quot;config_rb_server_optional_settings&quot;&gt;chef-server.rb 선택적 설정을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ac5d6c15a4b7fc670a41620eb4395a9409e5565" translate="yes" xml:space="preserve">
          <source>For more information on how the SaaS and On-Prem versions of Chef Habitat Builder work together, read the blog - &lt;a href=&quot;https://blog.chef.io/chef-habitat-product-announcement-builder-on-prem-enhancements-that-extend-support-to-airgap-environments-and-simplify-set-up/&quot;&gt;Chef Habitat Builder On-Prem Enhancements that Extend Support to Airgap Environments and Simplify Set-Up&lt;/a&gt;</source>
          <target state="translated">Chef Habitat Builder의 SaaS 및 On-Prem 버전이 함께 작동하는 방식에 대한 자세한 내용은 블로그 &lt;a href=&quot;https://blog.chef.io/chef-habitat-product-announcement-builder-on-prem-enhancements-that-extend-support-to-airgap-environments-and-simplify-set-up/&quot;&gt;-Airgap 환경으로 지원을 확장하고 설정을 단순화하는 Chef Habitat Builder On-Prem 개선 사항을 참조하십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="223d150f3f1884ec820d6049871e289daf3a19e0" translate="yes" xml:space="preserve">
          <source>For more information on how to set up the workstation, see &lt;a href=&quot;../../workstation/getting_started/index&quot;&gt;the Chef Workstation documentation&lt;/a&gt;.</source>
          <target state="translated">워크 스테이션 설정 방법에 대한 자세한 내용 &lt;a href=&quot;../../workstation/getting_started/index&quot;&gt;은 Chef Workstation 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e722159f39887e452ae5c3d4055760d00a2de8c" translate="yes" xml:space="preserve">
          <source>For more information on how to use channels, see &lt;a href=&quot;../pkg_promote/index&quot;&gt;Continuous Deployment Using Channels&lt;/a&gt;.</source>
          <target state="translated">채널 사용 방법에 대한 자세한 내용은 채널을 사용한 &lt;a href=&quot;../pkg_promote/index&quot;&gt;지속적인 배포를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="25a8982029c4d85ca5f224c462f97efc37879d9b" translate="yes" xml:space="preserve">
          <source>For more information on password generation, including a list of supported add-on versions, see &lt;a href=&quot;../server_security/index#chef-infra-server-credentials-management&quot;&gt;Chef Infra Server Credentials Management&lt;/a&gt;.</source>
          <target state="translated">지원되는 애드온 버전 목록을 포함하여 비밀번호 생성에 대한 자세한 내용은 &lt;a href=&quot;../server_security/index#chef-infra-server-credentials-management&quot;&gt;Chef Infra Server Credentials Management를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="15b5a0e5fc02971928a47a0fc8b8dc98155564ac" translate="yes" xml:space="preserve">
          <source>For more information on security, see &lt;a href=&quot;https://learn.chef.io/tracks/administering-chef-installation/&quot;&gt;How to be a Secure Chef&lt;/a&gt;.</source>
          <target state="translated">보안에 대한 자세한 내용은 &lt;a href=&quot;https://learn.chef.io/tracks/administering-chef-installation/&quot;&gt;How to be a Secure Chef를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="92848a422d2d10a3457d4bb4f980891fa0a52a9f" translate="yes" xml:space="preserve">
          <source>For more information on setting up Chef Habitat, see the Chef Habitat &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#service-groups&quot;&gt;Service Groups&lt;/a&gt; documentation.</source>
          <target state="translated">Chef Habitat 설정에 대한 자세한 정보는 Chef Habitat &lt;a href=&quot;https://www.habitat.sh/docs/using-habitat/#service-groups&quot;&gt;서비스 그룹&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7165d30359395ad03be706b870cdee1dbf63746a" translate="yes" xml:space="preserve">
          <source>For more information on these attributes see &lt;a href=&quot;https://docs.microsoft.com/en-us/rest/api/monitor/activitylogalerts/get#activitylogalertresource&quot;&gt;Azure REST API documentation&lt;/a&gt;.</source>
          <target state="translated">이러한 특성에 대한 자세한 내용은 &lt;a href=&quot;https://docs.microsoft.com/en-us/rest/api/monitor/activitylogalerts/get#activitylogalertresource&quot;&gt;Azure REST API 설명서를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="f7ede7923923266e1602358906932591a05f4379" translate="yes" xml:space="preserve">
          <source>For more information, check out this further explanation on how to &lt;a href=&quot;https://github.com/habitat-sh/on-prem-builder&quot;&gt;configure Builder to authenticate via Chef Automate&lt;/a&gt;.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;https://github.com/habitat-sh/on-prem-builder&quot;&gt;은 Chef Automate를 통해 인증하도록 Builder를 구성&lt;/a&gt; 하는 방법에 대한 추가 설명을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9a589182cf9d6d81ba07808f1bbee8bc85ab1e1" translate="yes" xml:space="preserve">
          <source>For more information, please see the &lt;a href=&quot;https://nixos.org/patchelf.html&quot;&gt;patchelf&lt;/a&gt; documentation.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://nixos.org/patchelf.html&quot;&gt;patchelf&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec0daa6ed482226e40a670dddb298831a73c945c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../../install_server/index&quot;&gt;Install Chef Infra Server&lt;/a&gt; and &lt;a href=&quot;../../install_server_pre/index&quot;&gt;Chef Infra Server Prerequisites&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../install_server/index&quot;&gt;Chef Infra 서버 설치&lt;/a&gt; 및 &lt;a href=&quot;../../install_server_pre/index&quot;&gt;Chef Infra 서버 필수 구성 요소를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="989c9e279287e9dd2b651d87f02ee3ea6d723b4f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../../workstation/install_workstation/index&quot;&gt;Install Chef Workstation&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../../workstation/install_workstation/index&quot;&gt;Chef Workstation 설치를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5eaf452d74e5a877599e5016e0b94b8acb26c0c7" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.servicenow.com/bundle/kingston-platform-administration/page/administer/users-and-groups/task/t_CreateAUser.html&quot;&gt;Creating users in ServiceNow&lt;/a&gt; and &lt;a href=&quot;https://docs.servicenow.com/bundle/kingston-platform-administration/page/administer/users-and-groups/task/t_AssignARoleToAUser.html&quot;&gt;Assigning roles in ServiceNow&lt;/a&gt;</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;https://docs.servicenow.com/bundle/kingston-platform-administration/page/administer/users-and-groups/task/t_CreateAUser.html&quot;&gt;은 ServiceNow에서 사용자 생성&lt;/a&gt; 및 &lt;a href=&quot;https://docs.servicenow.com/bundle/kingston-platform-administration/page/administer/users-and-groups/task/t_AssignARoleToAUser.html&quot;&gt;ServiceNow에서 역할 할당을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="435a48d28bac34fe8b67fa4d89640908e25de3a8" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;../habitat_cli/index#hab-origin-create&quot;&gt;&lt;code&gt;hab origin create&lt;/code&gt;&lt;/a&gt; CLI documentation.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../habitat_cli/index#hab-origin-create&quot;&gt; &lt;code&gt;hab origin create&lt;/code&gt; &lt;/a&gt; CLI 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="02f68c0ade29e55020f12caf6916ef6364d68cfe" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://www.habitat.sh/docs&quot;&gt;Chef Habitat documentation&lt;/a&gt;. In particular, see the entries on:</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://www.habitat.sh/docs&quot;&gt;Chef Habitat 문서를&lt;/a&gt; 참조하십시오 . 특히 다음 항목을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ffbabeccfdea0f3b0d8f3d9f67ce868bde6e39a" translate="yes" xml:space="preserve">
          <source>For more information, see the Chef Automate &lt;a href=&quot;https://automate.chef.io/docs/system-requirements/&quot;&gt;system requirements&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 Chef Automate &lt;a href=&quot;https://automate.chef.io/docs/system-requirements/&quot;&gt;시스템 요구 사항을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5812c628512771406d5ac313c5b2b87587f34dce" translate="yes" xml:space="preserve">
          <source>For more information, see the plugin demo on &lt;a href=&quot;https://www.youtube.com/watch?v=HlvoZ4Zdwc4&quot;&gt;YouTube&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.youtube.com/watch?v=HlvoZ4Zdwc4&quot;&gt;YouTube&lt;/a&gt; 의 플러그인 데모를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6c526ba47d96ccff74e702f340e7b0283477ccd" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc555f28a42d875d0f3d1ab19fc37ede676d4c7f" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx&quot;&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384187(v=vs.85).aspx를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1dfd548e7674f5e26aeff41ed6dd59f12709ebf" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&quot;&gt;Registry Reflection&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa384235(v=vs.85).aspx&quot;&gt;레지스트리 리플렉션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4387e95339b9650ebb2b56d1da4cd711dfe14dbe" translate="yes" xml:space="preserve">
          <source>For more information:</source>
          <target state="translated">자세한 내용은:</target>
        </trans-unit>
        <trans-unit id="48d43898988a7e5bcc2ffbc59c9208011ea7ce0a" translate="yes" xml:space="preserve">
          <source>For more structured ways of running the Chef Habitat Supervisor on servers, please see &lt;a href=&quot;../running_habitat_servers/index&quot;&gt;Running Chef Habitat on Servers&lt;/a&gt;.</source>
          <target state="translated">서버에서 Chef Habitat Supervisor를 실행하는보다 체계적인 방법은 서버에서 &lt;a href=&quot;../running_habitat_servers/index&quot;&gt;Chef Habitat 실행을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2cef8851f858e7d2db94216f7589e0f4258c0d78" translate="yes" xml:space="preserve">
          <source>For most cases, the migration to Chef InSpec is pretty straight forward. First, replace the current verifier in &lt;code&gt;kitchen.yml&lt;/code&gt; configuration with:</source>
          <target state="translated">대부분의 경우 Chef InSpec으로의 마이그레이션은 매우 간단합니다. 먼저 &lt;code&gt;kitchen.yml&lt;/code&gt; 구성 의 현재 검증기를 다음으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="d038ee1d335ff328eea0657e0ab41a9cd7327e33" translate="yes" xml:space="preserve">
          <source>For multiline environment variables, such as those in a TOML table or nested key value pairs, it can be easier to place your changes in a file and pass the file in. For example:</source>
          <target state="translated">TOML 테이블 또는 중첩 된 키 값 쌍과 같은 여러 줄 환경 변수의 경우 변경 사항을 파일에 배치하고 파일을 전달하는 것이 더 쉽습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9057c6be6c347ff9f4c9f7bef3999fe3e8034390" translate="yes" xml:space="preserve">
          <source>For nested stacks&amp;ndash;stacks created as resources for another stack&amp;ndash;the stack ID of the direct parent of this stack.</source>
          <target state="translated">중첩 스택 (다른 스택의 리소스로 생성 된 스택)의 경우이 스택의 직계 상위 스택 ID입니다.</target>
        </trans-unit>
        <trans-unit id="dc0babbe5f022568a27faf962f1d207aee874eb7" translate="yes" xml:space="preserve">
          <source>For nested stacks&amp;ndash;stacks created as resources for another stack&amp;ndash;the stack ID of the the top-level stack to which the nested stack ultimately belongs.</source>
          <target state="translated">중첩 된 스택 (다른 스택의 리소스로 생성 된 스택)의 경우 중첩 된 스택이 궁극적으로 속하는 최상위 스택의 스택 ID입니다.</target>
        </trans-unit>
        <trans-unit id="8b04370e596f20a21a79cc3544183d56c6e849b7" translate="yes" xml:space="preserve">
          <source>For new Microsoft Windows machines, Windows PowerShell scripts will not work until an administrator runs the following command:</source>
          <target state="translated">새 Microsoft Windows 컴퓨터의 경우 관리자가 다음 명령을 실행할 때까지 Windows PowerShell 스크립트가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6a8cab74593026bb7b49e7a27997e24312de24d3" translate="yes" xml:space="preserve">
          <source>For new Microsoft Windows machines, commands cannot be appended to &lt;code&gt;$PROFILE&lt;/code&gt; if the folder does not exist or if there is a new user profile, an error similar to the following may be returned:</source>
          <target state="translated">새 Microsoft Windows 시스템의 경우, 폴더가 없거나 새 사용자 프로파일이 있으면 &lt;code&gt;$PROFILE&lt;/code&gt; 명령을 추가 할 수 없습니다 . 다음과 유사한 오류가 리턴 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b98d39c0ebcbdcf7c6f3f92e7e85ec8320d065b" translate="yes" xml:space="preserve">
          <source>For new users, we strongly recommend using &lt;a href=&quot;../../policyfile/index&quot;&gt;Policyfiles&lt;/a&gt; rather than Berkshelf. Policyfiles provide more predictability, since dependencies are only resolved once, and a much improved way of promoting cookbooks from dev to testing, and then to production.</source>
          <target state="translated">신규 사용자의 경우 &lt;a href=&quot;../../policyfile/index&quot;&gt;Berkshelf&lt;/a&gt; 대신 Policyfile을 사용하는 것이 좋습니다 . 정책 파일은 종속성이 한 번만 해결되기 때문에 더 많은 예측 가능성을 제공하고 개발에서 테스트로, 그런 다음 프로덕션으로 쿡북을 승격시키는 훨씬 향상된 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5c4a094c9c014ca41b853316fa612c4a35a0877d" translate="yes" xml:space="preserve">
          <source>For normal attributes:</source>
          <target state="translated">일반 속성의 경우 :</target>
        </trans-unit>
        <trans-unit id="36d442ba33972440114c4ef99146790624e59e45" translate="yes" xml:space="preserve">
          <source>For other platforms, follow the steps provided under &lt;a href=&quot;#installing&quot;&gt;Installing&lt;/a&gt;.</source>
          <target state="translated">다른 플랫폼의 경우 &lt;a href=&quot;#installing&quot;&gt;설치에&lt;/a&gt; 제공된 단계를 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="2b8e54d1c66c157665fd58257b223737e3f52b54" translate="yes" xml:space="preserve">
          <source>For override attributes:</source>
          <target state="translated">재정의 속성의 경우 :</target>
        </trans-unit>
        <trans-unit id="6a01524008e2a38b0b428215ab279a4137081de2" translate="yes" xml:space="preserve">
          <source>For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.</source>
          <target state="translated">비공개로 표시되는 영역의 경우 영역이 표시되는 Virtual Private Cloud 리소스 세트입니다.</target>
        </trans-unit>
        <trans-unit id="30cdfb3b5ddf6b833ce0a80ae924d5f03d7fac1d" translate="yes" xml:space="preserve">
          <source>For pushing new values onto a multi-valued environment variable (like &lt;code&gt;PATH&lt;/code&gt;), use the following functions:</source>
          <target state="translated">새 값을 다중 값 환경 변수 (예 : &lt;code&gt;PATH&lt;/code&gt; ) 에 푸시 하려면 다음 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7e1386c4c91542b502776fecfdb36e6e7d36f41b" translate="yes" xml:space="preserve">
          <source>For releases of the chef-client prior to 12.5 (chef-client 12.4 and earlier) the correct syntax is:</source>
          <target state="translated">12.5 이전 (chef-client 12.4 이하) 이전 chef-client 릴리스의 경우 올바른 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3fa6aa91f2a780908a5b3fc090e709c2222c30d8" translate="yes" xml:space="preserve">
          <source>For services that do not follow this layout, you should select environment and application names that help you find and filter the application data and are relevant to your typical job tasks.</source>
          <target state="translated">이 레이아웃을 따르지 않는 서비스의 경우 애플리케이션 데이터를 찾고 필터링하는 데 도움이되고 일반적인 작업 태스크와 관련된 환경 및 애플리케이션 이름을 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="b997df764715ba796ce425ebaaff16fd1f1e1c75" translate="yes" xml:space="preserve">
          <source>For simplicity&amp;rsquo;s sake or if you are running Chef Infra Client 15.x, you should run a cronjob. Call the &lt;code&gt;chef_client_cron&lt;/code&gt; resource and set the &lt;code&gt;:add&lt;/code&gt; action in your own recipe for your initial run-list. In Chef Infra Client 16.x, do the same but you will not need the chef-client cookbook as the resource is available natively.</source>
          <target state="translated">단순성을 위해 또는 Chef Infra Client 15.x를 실행하는 경우 cronjob을 실행해야합니다. &lt;code&gt;chef_client_cron&lt;/code&gt; 리소스를 호출하고 초기 실행 목록에 대한 자체 레시피에서 &lt;code&gt;:add&lt;/code&gt; 작업을 설정 합니다. Chef Infra Client 16.x에서 동일한 작업을 수행하지만 리소스를 기본적으로 사용할 수 있으므로 chef-client 쿡북이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="02626aaddadcb77075752300b71979cecf1b711d" translate="yes" xml:space="preserve">
          <source>For some Push Jobs API endpoints, you need to specify certain headers. To do that you simply pass a hash into the command.</source>
          <target state="translated">일부 Push Jobs API 엔드 포인트의 경우 특정 헤더를 지정해야합니다. 이를 위해 명령에 해시를 전달하면됩니다.</target>
        </trans-unit>
        <trans-unit id="e516c02f933b9d1d4cb86742c0f316782436786e" translate="yes" xml:space="preserve">
          <source>For substituting an array with a hash:</source>
          <target state="translated">해시로 배열을 대체하는 경우 :</target>
        </trans-unit>
        <trans-unit id="bbc78b723cf10aad005cf5fe613e92bb583c3b07" translate="yes" xml:space="preserve">
          <source>For substituting an existing boolean using a hash:</source>
          <target state="translated">해시를 사용하여 기존 부울을 대체하는 경우 :</target>
        </trans-unit>
        <trans-unit id="621aee7b18fe269abf021f21bd6ea4addef6e6e9" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;chef-client&lt;/code&gt; command line tool, see &lt;a href=&quot;../ctl_chef_client/index&quot;&gt;chef-client(executable)&lt;/a&gt; The Chef Infra Client executable can be run as a daemon.</source>
          <target state="translated">를 들어 &lt;code&gt;chef-client&lt;/code&gt; 명령 행 도구를 참조 &lt;a href=&quot;../ctl_chef_client/index&quot;&gt;요리사 클라이언트 (실행 파일)&lt;/a&gt; 주방장 인프라 클라이언트 실행 파일은 데몬으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c88e51143768b2984d639cc5c7a3711e6c1bee2" translate="yes" xml:space="preserve">
          <source>For the Acceptance stage, a common approach is to provision one or more nodes that test the deployment. The Acceptance stage nodes for a project are usually dedicated to that project and can be either persistent, or they can be created and destroyed every time the Acceptance stage runs.</source>
          <target state="translated">수락 단계의 경우 일반적인 접근 방식은 배포를 테스트하는 하나 이상의 노드를 프로비저닝하는 것입니다. 프로젝트의 수락 단계 노드는 일반적으로 해당 프로젝트 전용이며 영구적이거나 수락 단계가 실행될 때마다 생성 및 삭제 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f14e6c98bd7faaef141b018aa9e68df212cfd40" translate="yes" xml:space="preserve">
          <source>For the Debian platform, do the following:</source>
          <target state="translated">Debian 플랫폼의 경우 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="6f7bcc37fabf284d53ddf56f70f8f187f088f1c6" translate="yes" xml:space="preserve">
          <source>For the action, defining the steps to configure the system using resources that are built into Chef</source>
          <target state="translated">조치의 경우 Chef에 내장 된 자원을 사용하여 시스템을 구성하는 단계 정의</target>
        </trans-unit>
        <trans-unit id="2145d3f327296130749f1f4238758f40d5176453" translate="yes" xml:space="preserve">
          <source>For the action, defining the steps to configure the system using resources that are built into Chef Infra</source>
          <target state="translated">작업을 위해 Chef Infra에 내장 된 리소스를 사용하여 시스템을 구성하는 단계 정의</target>
        </trans-unit>
        <trans-unit id="28868dddd2be617112c6cdd4ac8d1cbb26c80f59" translate="yes" xml:space="preserve">
          <source>For the chef-client, the private key should be copied to the system as &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="translated">chef-client의 경우 개인 키는 시스템에 &lt;code&gt;/etc/chef/client.pem&lt;/code&gt; 으로 복사되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7ab7b782ea481f6822d8485a3e12b62d1daedb52" translate="yes" xml:space="preserve">
          <source>For the chef-client, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a JSON file that is stored on the Chef server. The chef-client gets a copy of the node object from the Chef server during each chef-client run and places an updated copy on the Chef server at the end of each chef-client run.</source>
          <target state="translated">chef-client의 경우 노드의 두 가지 중요한 측면은 속성 그룹과 실행 목록입니다. 속성은 네트워크 인터페이스, 파일 시스템, 노드에서 실행되는 서비스가 수용 할 수있는 클라이언트 수 등 노드에 대한 특정 데이터입니다. 실행 목록은 정확한 순서로 실행되는 레시피 및 / 또는 역할의 정렬 된 목록입니다. 노드 오브젝트는 실행 목록 및 노드 속성으로 구성되며 이는 Chef 서버에 저장된 JSON 파일입니다. chef-client는 각 chef-client 실행 중에 Chef 서버로부터 노드 오브젝트의 사본을 가져오고 각 chef-client 실행이 끝날 때 Chef 서버에 업데이트 된 사본을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="842e85e6c052b171769ba69ae9eacc24f6df790e" translate="yes" xml:space="preserve">
          <source>For the complete recipe, see &lt;a href=&quot;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&quot;&gt;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&lt;/a&gt;.</source>
          <target state="translated">전체 레시피는 &lt;a href=&quot;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&quot;&gt;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="56b97dc0067f71f52430faecc6ad1c90bd388688" translate="yes" xml:space="preserve">
          <source>For the entire recipe, see &lt;a href=&quot;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&quot;&gt;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&lt;/a&gt;.</source>
          <target state="translated">전체 레시피는 &lt;a href=&quot;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb&quot;&gt;https://github.com/onehealth-cookbooks/apache2/blob/68bdfba4680e70b3e90f77e40223dd535bf22c17/recipes/mod_apreq2.rb를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="71616cc7c7e190fb0cd43ee31c51981de87d4cb4" translate="yes" xml:space="preserve">
          <source>For the example shown above:</source>
          <target state="translated">위에 표시된 예제의 경우 :</target>
        </trans-unit>
        <trans-unit id="bfb74401137381fa36a45afa4f416948a8e41402" translate="yes" xml:space="preserve">
          <source>For the majority of use cases, &lt;code&gt;chef-server-ctl backup&lt;/code&gt; is the recommended way to take backups of the Chef Infra Server. Use the following commands for managing backups of Chef Infra Server data, and for restoring those backups.</source>
          <target state="translated">대부분의 사용 사례에서 &lt;code&gt;chef-server-ctl backup&lt;/code&gt; 은 Chef Infra Server의 백업을 수행하는 데 권장되는 방법입니다. Chef Infra Server 데이터의 백업을 관리하고 해당 백업을 복원하려면 다음 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0274db6565e004d0726050eb5ef807f917f69e3e" translate="yes" xml:space="preserve">
          <source>For the near term, &lt;code&gt;hab&lt;/code&gt; and the Supervisor are still distributed separately, as &lt;code&gt;core/hab&lt;/code&gt; and &lt;code&gt;core/hab-sup&lt;/code&gt;, respectively. To interact with 0.56.0 or later Supervisors, users will need to use an 0.56.0 or later &lt;code&gt;hab&lt;/code&gt; binary, even if they wish to continue interacting with their Supervisors only locally. This may require a manual upgrade for the &lt;code&gt;hab&lt;/code&gt; binary, which can be done by running &lt;code&gt;hab pkg install core/hab -b -f&lt;/code&gt;. In the near future, we hope to consolidate all of Chef Habitat&amp;rsquo;s functionality into a single package (if not a single binary), which will make it easier to manage going forward.</source>
          <target state="translated">단기적으로 &lt;code&gt;hab&lt;/code&gt; 및 Supervisor는 여전히 각각 &lt;code&gt;core/hab&lt;/code&gt; 및 &lt;code&gt;core/hab-sup&lt;/code&gt; 으로 별도로 배포됩니다 . 0.56.0 이상의 수퍼바이저와 상호 작용하려면 사용자가 로컬에서만 수퍼바이저와 계속 상호 작용하려는 경우에도 0.56.0 이상의 &lt;code&gt;hab&lt;/code&gt; 바이너리 를 사용해야합니다 . 이를 위해서는 &lt;code&gt;hab&lt;/code&gt; 바이너리에 대한 수동 업그레이드가 필요할 수 있으며, &lt;code&gt;hab pkg install core/hab -b -f&lt;/code&gt; 를 실행하여 수행 할 수 있습니다 . 가까운 장래에 Chef Habitat의 모든 기능을 단일 패키지 (단일 바이너리가 아닌 경우)로 통합하여 향후 관리를 더 쉽게 할 수 있기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="1ce77e3503554674a8ff229b9ceceeebf7bf425b" translate="yes" xml:space="preserve">
          <source>For the purpose of this section, a &lt;strong&gt;partition&lt;/strong&gt; refers to the loss of network connectivity between two nodes. From the perspective of other nodes in the cluster, it is impossible to tell whether a node is down or has been partitioned. However, because a partition is often characterized by the node and the software on the node still being up, this section covers some special care to take when recovering a cluster that has been partitioned at the network level.</source>
          <target state="translated">이 섹션에서 &lt;strong&gt;파티션&lt;/strong&gt; 은 두 노드 간의 네트워크 연결이 끊어지는 것을 의미합니다. 클러스터의 다른 노드의 관점에서 볼 때 노드가 다운되었는지 또는 분할되었는지 여부를 알 수 없습니다. 그러나 파티션은 종종 노드와 노드의 소프트웨어가 여전히 작동중인 것으로 특성화되기 때문에이 섹션에서는 네트워크 수준에서 파티션 된 클러스터를 복구 할 때 몇 가지 특별한주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="62fa9fecdfca1aed905401554c755b86ca839a07" translate="yes" xml:space="preserve">
          <source>For the purposes of this demonstration, we recommend installing Chef Automate and Chef Infra Server together on the same host. Talk to your account representative to decide if you should follow a different deployment pattern in production.</source>
          <target state="translated">이 데모의 목적을 위해 Chef Automate와 Chef Infra Server를 동일한 호스트에 함께 설치하는 것이 좋습니다. 프로덕션에서 다른 배포 패턴을 따라야하는지 여부를 결정하려면 계정 담당자에게 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="32051c90650761cba400f8ba119a6d854588ee2f" translate="yes" xml:space="preserve">
          <source>For the quickest way to get started using Chef Infra:</source>
          <target state="translated">Chef Infra를 사용하는 가장 빠른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="53bc559294bf4f0fdb2f5c94bcd89284a6e8b78b" translate="yes" xml:space="preserve">
          <source>For the second rule, choose resource type &lt;code&gt;Event&lt;/code&gt;. Fill in the first condition with attribute &lt;code&gt;Chef Server&lt;/code&gt;, operator &lt;code&gt;member of&lt;/code&gt;, and value &lt;code&gt;devops.pizza, devops.dog&lt;/code&gt;, or any values matching your data set.</source>
          <target state="translated">두 번째 규칙의 경우 리소스 유형 &lt;code&gt;Event&lt;/code&gt; 를 선택합니다 . 첫 번째 조건을 &lt;code&gt;Chef Server&lt;/code&gt; 속성 ,의 운영자 &lt;code&gt;member of&lt;/code&gt; 및 값 &lt;code&gt;devops.pizza, devops.dog&lt;/code&gt; 또는 데이터 세트와 일치하는 값으로 채우 십시오.</target>
        </trans-unit>
        <trans-unit id="c0839c2a44fc270af30db0cc2850ed35ecbdf9c0" translate="yes" xml:space="preserve">
          <source>For the shared pipeline (Union, Rehearsal, and Delivered), it makes sense to have persistent infrastructure dedicated to each of the stages. Infrastructure environments mapped to Union and Rehearsal should ideally be identical in topology and should correspond as closely as possible to the live infrastructure of the Delivered stage.</source>
          <target state="translated">공유 파이프 라인 (Union, Rehearsal 및 Delivered)의 경우 각 단계에 전용의 지속적인 인프라를 보유하는 것이 좋습니다. Union 및 Rehearsal에 매핑 된 인프라 환경은 이상적으로는 토폴로지가 동일해야하며 Delivered 단계의 라이브 인프라와 최대한 가깝게 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b6ae6ec21eda173c7f2ac95ab2c5301937495120" translate="yes" xml:space="preserve">
          <source>For the user, the private key should be copied to the system as &lt;code&gt;/etc/chef/client.pem&lt;/code&gt;.</source>
          <target state="translated">사용자의 경우 개인 키는 &lt;code&gt;/etc/chef/client.pem&lt;/code&gt; 으로 시스템에 복사해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e68bbf5ee9acbad123ce76898cf277e7a02ab2aa" translate="yes" xml:space="preserve">
          <source>For this demonstration, you need:</source>
          <target state="translated">이 데모에는 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ca2a851df399c6d1491210bdbc6cd1e3bef56d07" translate="yes" xml:space="preserve">
          <source>For this particular example, you want the cookbook uploaded at the very end of the workflow pipeline, in the &lt;strong&gt;Functional&lt;/strong&gt; phase of the &lt;strong&gt;Delivered&lt;/strong&gt; Stage. This requires that you modify the &lt;strong&gt;Functional&lt;/strong&gt; recipe (&lt;code&gt;recipes/functional.rb&lt;/code&gt;) of the &lt;code&gt;build-cookbook&lt;/code&gt; within your project, as shown below.</source>
          <target state="translated">이 특정 예제 의 경우, &lt;strong&gt;전달&lt;/strong&gt; 단계 의 &lt;strong&gt;기능&lt;/strong&gt; 단계 에서 워크 플로 파이프 라인의 맨 끝에 쿡북을 업로드하려고합니다 . 이를 위해서는 아래와 같이 프로젝트 내 에서 &lt;code&gt;build-cookbook&lt;/code&gt; 의 &lt;strong&gt;기능&lt;/strong&gt; 레시피 ( &lt;code&gt;recipes/functional.rb&lt;/code&gt; ) 를 수정해야 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c381f79fa0ea419363d690fe6cc355036afae493" translate="yes" xml:space="preserve">
          <source>For this particular example, you want the cookbook uploaded at the very end of the workflow pipeline, in the &lt;strong&gt;Functional&lt;/strong&gt; phase of the &lt;strong&gt;Delivered&lt;/strong&gt; Stage. This requires that you modify the &lt;strong&gt;Functional&lt;/strong&gt; recipe (&lt;code&gt;recipes/functional.rb&lt;/code&gt;) of the &lt;strong&gt;build-cookbook&lt;/strong&gt; within your project, as shown below.</source>
          <target state="translated">이 특정 예제 의 경우, &lt;strong&gt;전달&lt;/strong&gt; 단계 의 &lt;strong&gt;기능&lt;/strong&gt; 단계 에서 워크 플로 파이프 라인의 맨 끝에 쿡북을 업로드하려고합니다 . 이를 위해서는 아래와 같이 프로젝트 내 에서 &lt;strong&gt;빌드 요리 책&lt;/strong&gt; 의 &lt;strong&gt;기능&lt;/strong&gt; 레시피 ( &lt;code&gt;recipes/functional.rb&lt;/code&gt; ) 를 수정해야 합니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10f7dd86b84d25ab69b4d9d4424c35b4bc14dcf1" translate="yes" xml:space="preserve">
          <source>For this process, you need the existing token (let&amp;rsquo;s call it &lt;code&gt;A1_DC_TOKEN&lt;/code&gt;), and access to the machine running the &lt;code&gt;chef-automate&lt;/code&gt; CLI client.</source>
          <target state="translated">이 프로세스를 위해서는 기존 토큰 ( &lt;code&gt;A1_DC_TOKEN&lt;/code&gt; )과 &lt;code&gt;chef-automate&lt;/code&gt; CLI 클라이언트를 실행하는 머신에 대한 액세스가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="a07667570bf1b0bfcde0d88e25d6e12f12983002" translate="yes" xml:space="preserve">
          <source>For this resource, &lt;code&gt;exist&lt;/code&gt; is true if a Security Identifier (SID) exists on the target host for the specified trustee.</source>
          <target state="translated">이 리소스의 경우 지정된 트러스티의 대상 호스트에 SID (보안 식별자)가 있으면 &lt;code&gt;exist&lt;/code&gt; 가 true입니다.</target>
        </trans-unit>
        <trans-unit id="59271895a7d48a8198790dda2fc9a5af224475a5" translate="yes" xml:space="preserve">
          <source>For those that like to keep things succinct, the above advice can be summed up thusly:</source>
          <target state="translated">간결하게 유지하려는 사람들을 위해 위의 조언을 요약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="035fe47f31252f6811c25c69288f9ee77a5c3380" translate="yes" xml:space="preserve">
          <source>For those who do not use Microsoft AD or require greater control over their configuration, Chef Automate has the following customizable LDAP configuration settings:</source>
          <target state="translated">Microsoft AD를 사용하지 않거나 구성에 대한 더 많은 제어가 필요한 사용자를 위해 Chef Automate에는 다음과 같은 사용자 지정 가능한 LDAP 구성 설정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="53d8fca93bbe02d81a4e01ae8470d92053112b69" translate="yes" xml:space="preserve">
          <source>For units that are services, this action reloads the configuration of the service without restarting, if possible; otherwise, it will restart the service so the new configuration is applied.</source>
          <target state="translated">서비스 인 장치의 경우이 조치는 가능하면 다시 시작하지 않고 서비스 구성을 다시로드합니다. 그렇지 않으면 서비스가 다시 시작되어 새 구성이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8f5ee629d6d59edf982be9b26ca753e6922d3ddc" translate="yes" xml:space="preserve">
          <source>For units that are services, this action reloads the configuration of the service without restarting, if possible; otherwise, it will try to restart the service so the new configuration is applied.</source>
          <target state="translated">서비스 인 장치의 경우이 조치는 가능하면 다시 시작하지 않고 서비스 구성을 다시로드합니다. 그렇지 않으면 새 구성이 적용되도록 서비스를 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="70b22f2c5de8374322c5e8e99d3e087aceff9567" translate="yes" xml:space="preserve">
          <source>For use with 3rd party certificate providers, for example, Verisign.</source>
          <target state="translated">타사 인증서 공급자 (예 : Verisign)와 함께 사용합니다.</target>
        </trans-unit>
        <trans-unit id="caf6208706739b4e7f467a6c49dac14056befd12" translate="yes" xml:space="preserve">
          <source>For users running Chef Automate 2 in EC2, we invite you to try out our &amp;ldquo;AWS-EC2 Credential-less Scanning&amp;rdquo;! Please note that credential-less scanning is not supported for AWS GovCloud.</source>
          <target state="translated">EC2에서 Chef Automate 2를 실행하는 사용자를 위해 &quot;AWS-EC2 Credential-less Scanning&quot;을 사용해보십시오! 자격 증명없는 스캔은 AWS GovCloud에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e1a4149e9dd9c969d8cd799e0d96e64d391138b" translate="yes" xml:space="preserve">
          <source>For users that manage their Chef Infra Client installation using the &lt;code&gt;chef-client&lt;/code&gt; cookbook, we added a new attribute that can be specified. Specify the node attribute &lt;code&gt;node['chef_client']['chef_license'] = 'accept'&lt;/code&gt; when running the cookbook to apply the license acceptance in a backwards-compatible way.</source>
          <target state="translated">&lt;code&gt;chef-client&lt;/code&gt; 쿡북을 사용하여 Chef Infra Client 설치를 관리하는 사용자를 위해 지정할 수있는 새 속성을 추가했습니다. &lt;code&gt;node['chef_client']['chef_license'] = 'accept'&lt;/code&gt; 때 노드 속성 node [ 'chef_client'] [ 'chef_license'] = 'accept' 를 지정하여 이전 버전과 호환되는 방식으로 라이선스 수락을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="c6237b864af8e4e754b5d2ede4d119d274707ea6" translate="yes" xml:space="preserve">
          <source>For users that require the &lt;code&gt;deploy&lt;/code&gt; or &lt;code&gt;deploy_revision&lt;/code&gt; resources, they are now part of the &lt;a href=&quot;https://supermarket.chef.io/cookbooks/deploy_resource&quot;&gt;deploy_resource&lt;/a&gt; backwards compatibility cookbook available on the Supermarket.</source>
          <target state="translated">&lt;code&gt;deploy&lt;/code&gt; 또는 &lt;code&gt;deploy_revision&lt;/code&gt; 리소스 가 필요한 사용자의 경우 이제 Supermarket에서 사용할 수 있는 &lt;a href=&quot;https://supermarket.chef.io/cookbooks/deploy_resource&quot;&gt;deploy_resource&lt;/a&gt; 이전 버전과의 호환성 쿡북 의 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="8b0f74203cb3d0804f8e8e6c2ddf6a7dcbe47444" translate="yes" xml:space="preserve">
          <source>For users that wish to scan nodes that are not otherwise discoverable via integrations, we provide a &lt;code&gt;manually added nodes manager&lt;/code&gt;. Users may add nodes via ui or api, specifying the node&amp;rsquo;s ip/hostname, port configuration, and sudo requirement (if any). In order to be able to run a scan job on a node, the correct set of ssh, winrm, and/or sudo credentials must be associated with that node. This is done by associating the desired credential ids with the node.</source>
          <target state="translated">통합을 통해 검색 할 수없는 노드를 스캔하려는 사용자를 위해 &lt;code&gt;manually added nodes manager&lt;/code&gt; 제공합니다 . 사용자는 노드의 ip / hostname, 포트 구성 및 sudo 요구 사항 (있는 경우)을 지정하여 ui 또는 api를 통해 노드를 추가 할 수 있습니다. 노드에서 검색 작업을 실행할 수 있으려면 올바른 ssh, winrm 및 / 또는 sudo 자격 증명 집합이 해당 노드와 연결되어야합니다. 원하는 자격 증명 ID를 노드와 연결하면됩니다.</target>
        </trans-unit>
        <trans-unit id="aa96ebb5524d07b473bbd105e08ab9de8f97f08e" translate="yes" xml:space="preserve">
          <source>For version 0 (default, through Chef Client 10.18):</source>
          <target state="translated">버전 0의 경우 (기본값, Chef Client 10.18을 통해) :</target>
        </trans-unit>
        <trans-unit id="dd7c2498fd02af98b57798d57719346c537e7da7" translate="yes" xml:space="preserve">
          <source>For version 1 (default, starting with Chef Client 11.0):</source>
          <target state="translated">버전 1의 경우 (기본값, Chef Client 11.0부터 시작) :</target>
        </trans-unit>
        <trans-unit id="de3210da1a35190b405531baa8a1bd4abe7cb25e" translate="yes" xml:space="preserve">
          <source>For version 2 (available, starting with Chef Client 11.6):</source>
          <target state="translated">버전 2의 경우 (Chef Client 11.6부터 사용 가능) :</target>
        </trans-unit>
        <trans-unit id="cb32a497c0fbd6d3972514439aac97feae5797be" translate="yes" xml:space="preserve">
          <source>Forbidden. The user who made the request is not authorized to perform the action.</source>
          <target state="translated">금지되어 있습니다. 요청한 사용자는 조치를 수행 할 권한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c42883938631758a61ef4b7f140cd1e97542a8fc" translate="yes" xml:space="preserve">
          <source>Force all users in a local user group to change passwords at next logon</source>
          <target state="translated">로컬 사용자 그룹의 모든 사용자가 다음에 로그온 할 때 암호를 변경하도록합니다.</target>
        </trans-unit>
        <trans-unit id="e2955ec6b85a8c240ff4c5c4ab7f427151a081ec" translate="yes" xml:space="preserve">
          <source>Force connections to use SSL. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">SSL을 사용하도록 강제 연결합니다. 기본값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c29eddd69ec7fc2a75d403e2b314ebfca6a8349" translate="yes" xml:space="preserve">
          <source>Force creation of the key even if the same key already exists on the node.</source>
          <target state="translated">노드에 동일한 키가 이미있는 경우에도 강제로 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="18566b49ef67997dde8a440117ef3757ea3a3b13" translate="yes" xml:space="preserve">
          <source>Force set license (default: false)</source>
          <target state="translated">강제 설정 라이센스 (기본값 : false)</target>
        </trans-unit>
        <trans-unit id="8bd4f60ba28c0dc918b5dba307868c01ac79ba5d" translate="yes" xml:space="preserve">
          <source>Force the creation of the repository cache. This is also done automatically when a repository is updated.</source>
          <target state="translated">리포지토리 캐시를 강제로 생성합니다. 이것은 또한 저장소가 업데이트 될 때 자동으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="dd08712d614f1591568e372dcde770be50cf3a9e" translate="yes" xml:space="preserve">
          <source>Force the deletion of the client when it is also a chef-validator.</source>
          <target state="translated">요리사 유효성 검사기 인 경우 클라이언트를 강제로 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="c292918b7399b1064fd09013fdc93f2f12f32442" translate="yes" xml:space="preserve">
          <source>Force the removal of a user from the organization&amp;rsquo;s &lt;code&gt;admins&lt;/code&gt; and &lt;code&gt;billing-admins&lt;/code&gt; groups.</source>
          <target state="translated">조직의 &lt;code&gt;admins&lt;/code&gt; 및 &lt;code&gt;billing-admins&lt;/code&gt; 그룹 에서 사용자를 강제로 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="145e6b039db6e3a94defb2964a64423840cf279d" translate="yes" xml:space="preserve">
          <source>Force the removal of a user. May be used only with the &lt;code&gt;:remove&lt;/code&gt; action.</source>
          <target state="translated">사용자를 강제로 제거하십시오. &lt;code&gt;:remove&lt;/code&gt; 조치 와 함께 만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fda970a46887016dc3817eaf0651496cbaa80bc9" translate="yes" xml:space="preserve">
          <source>Force the upload of files even if they haven&amp;rsquo;t been changed. Default: &lt;code&gt;--no-force&lt;/code&gt;.</source>
          <target state="translated">파일이 변경되지 않은 경우에도 파일을 강제로 업로드합니다. 기본값 : &lt;code&gt;--no-force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="006a7621448b15272ffdac7b35481051b594d2fb" translate="yes" xml:space="preserve">
          <source>Force this node to rejoin the backend HA cluster if it has been removed via the &lt;code&gt;chef-backend-ctl remove-node&lt;/code&gt; or &lt;code&gt;chef-backend-ctl bootstrap --with-quorum-recovery&lt;/code&gt; commands.</source>
          <target state="translated">이 노드가 &lt;code&gt;chef-backend-ctl remove-node&lt;/code&gt; 또는 &lt;code&gt;chef-backend-ctl bootstrap --with-quorum-recovery&lt;/code&gt; 명령을 통해 제거 된 경우 백엔드 HA 클러스터에 강제로 다시 참여 합니다.</target>
        </trans-unit>
        <trans-unit id="ee5d0ace7ab770e450853fa33f99439db9cf75b8" translate="yes" xml:space="preserve">
          <source>Fork the &lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; repository to your GitHub account.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/chef/chef&quot;&gt;https://github.com/chef/chef&lt;/a&gt; 저장소를 GitHub 계정으로 포크하십시오 .</target>
        </trans-unit>
        <trans-unit id="afce2f1b93cfa2f279dc2ebf4e125f68a82ddd5b" translate="yes" xml:space="preserve">
          <source>Fork the project repository to your own GitHub account.</source>
          <target state="translated">프로젝트 저장소를 자신의 GitHub 계정으로 포크하십시오.</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="f892b32a2ab007b383a5e35c805686e8337f3b88" translate="yes" xml:space="preserve">
          <source>Format and mount the new volume with the following series of commands:</source>
          <target state="translated">다음 일련의 명령을 사용하여 새 볼륨을 포맷하고 마운트하십시오.</target>
        </trans-unit>
        <trans-unit id="066657fae741648d1bd534695ab41ab8c2ed50cf" translate="yes" xml:space="preserve">
          <source>Format for decrypted output</source>
          <target state="translated">복호화 된 출력 형식</target>
        </trans-unit>
        <trans-unit id="dae91474839a9021c0a1a7cc8dd5cad9e8a0f754" translate="yes" xml:space="preserve">
          <source>Format to return when running the &lt;code&gt;automate-ctl list-backups&lt;/code&gt; command. Options are &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;json&lt;/code&gt;. Default value: &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;automate-ctl list-backups&lt;/code&gt; 명령을 실행할 때 반환 할 형식 입니다. 옵션은 &lt;code&gt;text&lt;/code&gt; 및 &lt;code&gt;json&lt;/code&gt; 입니다. 기본값 : &lt;code&gt;text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="166dcb5c0459c5f16d6bcabaf8a2ffb0cbb93add" translate="yes" xml:space="preserve">
          <source>Forwarding path for this TargetNameServer. If unset or &lt;code&gt;default&lt;/code&gt; Cloud DNS will make forwarding decision based on address ranges, i.e. RFC1918 addresses go to the VPC, Non-RFC1918 addresses go to the Internet. When set to &lt;code&gt;private&lt;/code&gt;, Cloud DNS will always send queries through VPC for this target</source>
          <target state="translated">이 TargetNameServer의 전달 경로입니다. 설정되지 않거나 &lt;code&gt;default&lt;/code&gt; Cloud DNS는 주소 범위를 기반으로 전달 결정을 내립니다. 즉, RFC1918 주소는 VPC로 이동하고 비 RFC1918 주소는 인터넷으로 이동합니다. &lt;code&gt;private&lt;/code&gt; 로 설정하면 Cloud DNS는 항상이 대상에 대해 VPC를 통해 쿼리를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="9732df0b8218e068e16e2a42b06b1df34117ad01" translate="yes" xml:space="preserve">
          <source>Foundation Tabs Container</source>
          <target state="translated">재단 탭 컨테이너</target>
        </trans-unit>
        <trans-unit id="c779c89b9ecabaf323f15c07424a47253e5271e0" translate="yes" xml:space="preserve">
          <source>Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.</source>
          <target state="translated">자동 확장 처리가 유지해야하는 백엔드 용량 사용률 (HTTP (s) 부하 분산 구성에서 설정) 비율입니다. 양수 부동 값이어야합니다. 정의되지 않은 경우 기본값은 0.8입니다.</target>
        </trans-unit>
        <trans-unit id="b845fdaff1bf49c014dff506cfa6bdc63dadd835" translate="yes" xml:space="preserve">
          <source>FreeBSD</source>
          <target state="translated">FreeBSD</target>
        </trans-unit>
        <trans-unit id="959a4329ff2c25061b9a1f5b47287a4dfaf8aa42" translate="yes" xml:space="preserve">
          <source>FreeBSD 10-STABLE</source>
          <target state="translated">FreeBSD 10 안정</target>
        </trans-unit>
        <trans-unit id="911b6d8b09e4750e864742d9120621ee02433f22" translate="yes" xml:space="preserve">
          <source>FreeBSD 11-STABLE</source>
          <target state="translated">FreeBSD 11-STABLE</target>
        </trans-unit>
        <trans-unit id="cf8d841d396090396092981e7add914ac5a3a29c" translate="yes" xml:space="preserve">
          <source>FreeBSD. All platform variants of FreeBSD return &lt;code&gt;freebsd&lt;/code&gt;.</source>
          <target state="translated">FreeBSD. FreeBSD의 모든 플랫폼 변형은 &lt;code&gt;freebsd&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="c83a452a618e4d4e11cd028e0d2744ad5079223d" translate="yes" xml:space="preserve">
          <source>Freeze Versions</source>
          <target state="translated">프리즈 버전</target>
        </trans-unit>
        <trans-unit id="71c25ba66b47a130022df292baede33df11d4e9d" translate="yes" xml:space="preserve">
          <source>Frequency of how often in seconds that the Chef Infra Client runs. Default is &lt;code&gt;1800&lt;/code&gt;</source>
          <target state="translated">Chef Infra Client가 실행되는 빈도 (초)입니다. 기본값은 &lt;code&gt;1800&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b7712ed7c3155b27a1c5862360a9086c40ff33f7" translate="yes" xml:space="preserve">
          <source>Frequency with which to run the task.</source>
          <target state="translated">작업을 실행할 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="1f6f2ea9ee3b2804911c4e1b2382820eb2b92ddb" translate="yes" xml:space="preserve">
          <source>Freshening the stage1 Tarball</source>
          <target state="translated">Stage1 Tarball 새로 고침</target>
        </trans-unit>
        <trans-unit id="153423f57bbce45d40de549ae32ed8df64d4c3c8" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;../environment_variables/index&quot;&gt;environment variables&lt;/a&gt;, if they exist</source>
          <target state="translated">에서 &lt;a href=&quot;../environment_variables/index&quot;&gt;환경 변수&lt;/a&gt; 가 존재하는 경우,</target>
        </trans-unit>
        <trans-unit id="17d72fb3227d9d01a5ad839048d40b1f00d0ebc7" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;~/.chef/config.rb&lt;/code&gt; (macOS and Linux platforms) or &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\.chef&lt;/code&gt; (Microsoft Windows platform)</source>
          <target state="translated">에서 &lt;code&gt;~/.chef/config.rb&lt;/code&gt; (맥 OS와 리눅스 플랫폼) 또는 &lt;code&gt;c:\Users\&amp;lt;username&amp;gt;\.chef&lt;/code&gt; (Microsoft Windows 플랫폼)</target>
        </trans-unit>
        <trans-unit id="764961ae7f9d75d68274670aaa148f33ae96a65e" translate="yes" xml:space="preserve">
          <source>From Chef Automate:</source>
          <target state="translated">Chef Automate에서 :</target>
        </trans-unit>
        <trans-unit id="0e8d7dee52377c4449f4cfd57e99a0cc5aa2e610" translate="yes" xml:space="preserve">
          <source>From Chef Server 12</source>
          <target state="translated">Chef Server 12에서</target>
        </trans-unit>
        <trans-unit id="34fdf2d164adf387122655d2ad537d3dbec799c5" translate="yes" xml:space="preserve">
          <source>From Chef Workstation</source>
          <target state="translated">Chef Workstation에서</target>
        </trans-unit>
        <trans-unit id="60bf5ff9b54c5ddba402753e3e42216712368847" translate="yes" xml:space="preserve">
          <source>From ChefDK</source>
          <target state="translated">ChefDK에서</target>
        </trans-unit>
        <trans-unit id="217f9603d0d7ac1bd1eebee60f0dc7d4564be933" translate="yes" xml:space="preserve">
          <source>From Enterprise Chef</source>
          <target state="translated">Enterprise Chef에서</target>
        </trans-unit>
        <trans-unit id="1d6ab328521b7ab79a3a2e69abdad6b85dfa1206" translate="yes" xml:space="preserve">
          <source>From Open Source Chef</source>
          <target state="translated">오픈 소스 요리사에서</target>
        </trans-unit>
        <trans-unit id="6a962e64400db2766e4597d7a726c6e5c0881717" translate="yes" xml:space="preserve">
          <source>From a &lt;code&gt;config.rb&lt;/code&gt; file within a &lt;code&gt;.chef&lt;/code&gt; directory in the current working directory, e.g., &lt;code&gt;./.chef/config.rb&lt;/code&gt;</source>
          <target state="translated">A로부터 &lt;code&gt;config.rb&lt;/code&gt; 의 내 파일 &lt;code&gt;.chef&lt;/code&gt; 현재 작업 디렉토리에있는 디렉토리, 예를 들어, &lt;code&gt;./.chef/config.rb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5acdc3940c1507c5ed3c1c8948e5969eea245fdc" translate="yes" xml:space="preserve">
          <source>From a &lt;code&gt;config.rb&lt;/code&gt; file within a &lt;code&gt;.chef&lt;/code&gt; directory located one directory above the current working directory, e.g., &lt;code&gt;../.chef/config.rb&lt;/code&gt;</source>
          <target state="translated">A로부터 &lt;code&gt;config.rb&lt;/code&gt; 의 내 파일 &lt;code&gt;.chef&lt;/code&gt; 현재 작업 디렉토리 위의 디렉토리에 위치한 하나의 디렉토리, 예를 들어, &lt;code&gt;../.chef/config.rb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4b20efd2e9adcc02e98065b36ed5c54b41bb5c3" translate="yes" xml:space="preserve">
          <source>From a &lt;code&gt;config.rb&lt;/code&gt; file within the current working directory, e.g., &lt;code&gt;./config.rb&lt;/code&gt;</source>
          <target state="translated">A로부터 &lt;code&gt;config.rb&lt;/code&gt; 의 현재 작업 디렉토리에있는 파일, 예를 들어, &lt;code&gt;./config.rb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3259f48fcec76453278313ca9da47d8e9c795b3b" translate="yes" xml:space="preserve">
          <source>From a follower node, run the following command:</source>
          <target state="translated">팔로어 노드에서 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7fc32a290c43c2b755323c58f7cdcc7cb082e629" translate="yes" xml:space="preserve">
          <source>From a local checkout of a Chef Automate project, run the appropriate Chef Automate command that associates a GitHub user with a Chef Automate user.</source>
          <target state="translated">Chef Automate 프로젝트의 로컬 체크 아웃에서 GitHub 사용자를 Chef Automate 사용자와 연결하는 적절한 Chef Automate 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="3cbcf00bea33fb416195e2be5ca6d12239519e75" translate="yes" xml:space="preserve">
          <source>From a root shell type:</source>
          <target state="translated">루트 쉘 유형에서 :</target>
        </trans-unit>
        <trans-unit id="a13d989e858ba84f07744641ebf41b6e92567490" translate="yes" xml:space="preserve">
          <source>From a specified location given the &lt;code&gt;$KNIFE_HOME&lt;/code&gt; environment variable, if set</source>
          <target state="translated">&lt;code&gt;$KNIFE_HOME&lt;/code&gt; 환경 변수 가 지정된 지정된 위치에서 ( 설정된 경우)</target>
        </trans-unit>
        <trans-unit id="deacfb4af6b723e5f092ba74fabef1a6b9367c1d" translate="yes" xml:space="preserve">
          <source>From a specified location given the &lt;code&gt;--config&lt;/code&gt; flag</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; 플래그 가 지정된 지정된 위치에서</target>
        </trans-unit>
        <trans-unit id="2e0a85e64e62e52b9511962df8bb2e696d1d7ba8" translate="yes" xml:space="preserve">
          <source>From a workstation, create a cookbooks directory, &lt;code&gt;$COOKBOOKS_DIR&lt;/code&gt;:</source>
          <target state="translated">워크 스테이션에서 &lt;code&gt;$COOKBOOKS_DIR&lt;/code&gt; 쿡북 디렉토리를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="00800e9f16fb5176996a94bebf8cdf7a3301ea9d" translate="yes" xml:space="preserve">
          <source>From building packages to running services, everything in Chef Habitat is done through the hab command-line interface (CLI) tool. To get started using Chef Habitat, you need to download and install the hab CLI tool that corresponds to your workstation OS. hr</source>
          <target state="translated">패키지 빌드에서 서비스 실행에 이르기까지 Chef Habitat의 모든 작업은 hab 명령 줄 인터페이스 (CLI) 도구를 통해 수행됩니다. Chef Habitat 사용을 시작하려면 워크 스테이션 OS에 해당하는 hab CLI 도구를 다운로드하여 설치해야합니다. 시간</target>
        </trans-unit>
        <trans-unit id="c8a122e6672e148d3506385e86de0374398bd49d" translate="yes" xml:space="preserve">
          <source>From settings passed from the &lt;a href=&quot;../habitat_cli/index#hab-sup-run&quot;&gt;&lt;code&gt;hab sup run&lt;/code&gt; command&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../habitat_cli/index#hab-sup-run&quot;&gt; &lt;code&gt;hab sup run&lt;/code&gt; &lt;/a&gt; 명령 에서 전달 된 설정에서</target>
        </trans-unit>
        <trans-unit id="c8a82dae59e151b21de994179ce448cfee25a169" translate="yes" xml:space="preserve">
          <source>From the &lt;code&gt;chef/&lt;/code&gt; directory, add a remote named &lt;code&gt;chef&lt;/code&gt;:</source>
          <target state="translated">로부터 &lt;code&gt;chef/&lt;/code&gt; 디렉토리, 원격 이름을 추가 &lt;code&gt;chef&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="95631f735c84683144effa94f04994a7ea6ca8ba" translate="yes" xml:space="preserve">
          <source>From the &lt;em&gt;Notifications&lt;/em&gt; page, select the notification name to open its detail page.</source>
          <target state="translated">로부터 &lt;em&gt;알림&lt;/em&gt; 페이지의 세부 정보 페이지를 엽니 통지 이름을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="7004473072cb12624aee89d8acb12d929b3215f9" translate="yes" xml:space="preserve">
          <source>From the &lt;strong&gt;Actions&lt;/strong&gt; dropdown, select &lt;strong&gt;Instance State&lt;/strong&gt;, and then &lt;strong&gt;Stop&lt;/strong&gt;.</source>
          <target state="translated">로부터 &lt;strong&gt;작업&lt;/strong&gt; 드롭 다운 선택 &lt;strong&gt;인스턴스 주&lt;/strong&gt; 후와 &lt;strong&gt;중지를&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="43d126687ecf86ee5bd51afacfaa26dc1cb4a6fe" translate="yes" xml:space="preserve">
          <source>From the &lt;strong&gt;Actions&lt;/strong&gt; dropdown, select &lt;strong&gt;Instance State&lt;/strong&gt;, and then click &lt;strong&gt;Start&lt;/strong&gt;.</source>
          <target state="translated">로부터 &lt;strong&gt;작업&lt;/strong&gt; 드롭 다운 선택 &lt;strong&gt;인스턴스 상태&lt;/strong&gt; , 다음을 클릭합니다 &lt;strong&gt;시작&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0cd9c38d68efea5bf779d349599f1818df632267" translate="yes" xml:space="preserve">
          <source>From the &lt;strong&gt;Scan Jobs&lt;/strong&gt; tab, select the &amp;ldquo;Create new job&amp;rdquo; button.</source>
          <target state="translated">로부터 &lt;strong&gt;스캔 작업&lt;/strong&gt; 탭에서 &quot;새 작업 만들기&quot;버튼을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="ca2d6a860e34107a0690ffde4311a096eacc4503" translate="yes" xml:space="preserve">
          <source>From the DC/OS web interface, launch the Marathon Service.</source>
          <target state="translated">DC / OS 웹 인터페이스에서 Marathon 서비스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="08fc9f93eeeae948c9f5f644d590d3ff31b51839" translate="yes" xml:space="preserve">
          <source>From the Downloads tab, install the Chef Automate Incident Creation application</source>
          <target state="translated">다운로드 탭에서 Chef Automate Incident Creation 애플리케이션을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="b012cdfd2d0b7ab231c0a02039a1e2b01f3ce76b" translate="yes" xml:space="preserve">
          <source>From the Downloads tab, select the Chef Automate Incident Creation link</source>
          <target state="translated">다운로드 탭에서 Chef Automate Incident Creation 링크를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a3beda71e67bbd562d7ea0b02281c9d39105982d" translate="yes" xml:space="preserve">
          <source>From the Notifications page, select &lt;strong&gt;Delete&lt;/strong&gt; from the menu at the end of the table row.</source>
          <target state="translated">알림 페이지 의 테이블 행 끝에있는 메뉴에서 &lt;strong&gt;삭제&lt;/strong&gt; 를 선택 합니다.</target>
        </trans-unit>
        <trans-unit id="934f1735c14510a58fe83118c7ab3769ecd2ff6e" translate="yes" xml:space="preserve">
          <source>From the Web Interface</source>
          <target state="translated">웹 인터페이스에서</target>
        </trans-unit>
        <trans-unit id="9fcd3ea92f6d8c3d6a9de3f2cc592f8a8511d615" translate="yes" xml:space="preserve">
          <source>From the Workflow UI, select &lt;strong&gt;Workflow Orgs&lt;/strong&gt; on the left</source>
          <target state="translated">워크 플로 UI 에서 왼쪽에있는 &lt;strong&gt;워크 플로 조직&lt;/strong&gt; 을 선택 합니다.</target>
        </trans-unit>
        <trans-unit id="639a3297cecf2bc5116ccee9d8cffe79bf1015ec" translate="yes" xml:space="preserve">
          <source>From the Workflow UI, select the &lt;em&gt;Admin&lt;/em&gt; tab on top</source>
          <target state="translated">워크 플로 UI 에서 상단 의 &lt;em&gt;관리&lt;/em&gt; 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="e2489ba54118c1f74f1e14144803a3630ef1886d" translate="yes" xml:space="preserve">
          <source>From the command line in your root folder (c:\ or ~/), run:</source>
          <target state="translated">루트 폴더 (c : \ 또는 ~ /)의 명령 줄에서 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="428ecc4dcddac8361147c1dda2e4a8d9dfd1f598" translate="yes" xml:space="preserve">
          <source>From the command line, browse to the &lt;code&gt;chef/&lt;/code&gt; directory:</source>
          <target state="translated">명령 행에서 &lt;code&gt;chef/&lt;/code&gt; 디렉토리를 찾아보십시오 .</target>
        </trans-unit>
        <trans-unit id="f43e3267b599d3145fa7eb8583fe56e335169fc4" translate="yes" xml:space="preserve">
          <source>From the command line, run:</source>
          <target state="translated">명령 줄에서 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="49e9b13da8b81a050d319adf792901d8cd55819a" translate="yes" xml:space="preserve">
          <source>From the drop-down list next to your username, select &lt;strong&gt;My Profile&lt;/strong&gt;.</source>
          <target state="translated">사용자 이름 옆의 드롭 다운 목록에서 &lt;strong&gt;내 프로필을&lt;/strong&gt; 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="70e3fa43ceec92cef715c926ff1c5f56e1f8dbab" translate="yes" xml:space="preserve">
          <source>From the dropdown, de-select the categories of events for which notifications should no longer be sent. De-select all categories to stop receiving all notifications.</source>
          <target state="translated">드롭 다운에서 알림을 더 이상 보내지 않을 이벤트 카테고리를 선택 취소합니다. 모든 알림 수신을 중지하려면 모든 카테고리를 선택 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="cc09f55eb458c2579c77d124e9754ed3cf6ad298" translate="yes" xml:space="preserve">
          <source>From the dropdown, select the categories of events for which notifications should be sent.</source>
          <target state="translated">드롭 다운에서 알림을 보낼 이벤트 범주를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="848a5137aa4f51212e062a667965f34f81b3ae95" translate="yes" xml:space="preserve">
          <source>From the dropdown, select the desired instance size, and then click &lt;strong&gt;Apply&lt;/strong&gt;.</source>
          <target state="translated">드롭 다운에서 원하는 인스턴스 크기를 선택한 다음 &lt;strong&gt;적용&lt;/strong&gt; 을 클릭 합니다.</target>
        </trans-unit>
        <trans-unit id="24a8be5efceb3912a002eb8b7f24e839bd463034" translate="yes" xml:space="preserve">
          <source>From the example, the &lt;code&gt;mongo&lt;/code&gt; and &lt;code&gt;national-parks&lt;/code&gt; services use the Docker images from the ECR. The &lt;code&gt;links&lt;/code&gt; entry manages the deployment order of the container and according to the &lt;a href=&quot;https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/#/updating-the-etchosts-file&quot;&gt;Docker Compose documentation&lt;/a&gt;&lt;code&gt;links&lt;/code&gt; should create &lt;code&gt;/etc/hosts&lt;/code&gt; entries. This does not appear to currently work with ECS so we assign the &lt;code&gt;hostname: &quot;mongodb&quot;&lt;/code&gt;.</source>
          <target state="translated">이 예에서 &lt;code&gt;mongo&lt;/code&gt; 및 &lt;code&gt;national-parks&lt;/code&gt; 서비스는 ECR의 Docker 이미지를 사용합니다. &lt;code&gt;links&lt;/code&gt; 항목은 컨테이너의 배치 순서를 관리하고에 따라 &lt;a href=&quot;https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/#/updating-the-etchosts-file&quot;&gt;도커 작성 문서 &lt;/a&gt; &lt;code&gt;links&lt;/code&gt; 만들어야합니다 &lt;code&gt;/etc/hosts&lt;/code&gt; 파일의 항목을. 현재 ECS에서 작동하지 않는 것으로 보이므로 &lt;code&gt;hostname: &quot;mongodb&quot;&lt;/code&gt; 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="6e94d155ac178ef0ca74e77aaf129f1d795be56b" translate="yes" xml:space="preserve">
          <source>From the first frontend node configured in Step 5, copy the following files from the first frontend to &lt;code&gt;/etc/opscode&lt;/code&gt; on the new frontend node:</source>
          <target state="translated">5 단계에서 구성된 첫 번째 프런트 엔드 노드에서 첫 번째 프런트 엔드의 다음 파일을 새 프런트 엔드 노드의 &lt;code&gt;/etc/opscode&lt;/code&gt; 로 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="991145a8df4890f43a35c0bbebb1daaf2ab09875" translate="yes" xml:space="preserve">
          <source>From the first frontend node, copy &lt;code&gt;/var/opt/opscode/upgrades/migration-level&lt;/code&gt; to the same location on the new node.</source>
          <target state="translated">첫 번째 프런트 엔드 노드에서 &lt;code&gt;/var/opt/opscode/upgrades/migration-level&lt;/code&gt; 을 새 노드의 동일한 위치에 복사 합니다.</target>
        </trans-unit>
        <trans-unit id="adc94672cf8afc751a1ac1003b7a70182dc589e3" translate="yes" xml:space="preserve">
          <source>From the leader node, run the following command:</source>
          <target state="translated">리더 노드에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="aeddb449fb00fdda4f1928e77b40e879d832c9e8" translate="yes" xml:space="preserve">
          <source>From the left navigation, click &lt;code&gt;SCM Setup&lt;/code&gt;.</source>
          <target state="translated">왼쪽 탐색에서 &lt;code&gt;SCM Setup&lt;/code&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb0117008ef5989c166e78252748da3f30e83cf4" translate="yes" xml:space="preserve">
          <source>From the left navigation, click &lt;code&gt;Scm Setup&lt;/code&gt;.</source>
          <target state="translated">왼쪽 탐색에서 &lt;code&gt;Scm Setup&lt;/code&gt; 클릭 합니다.</target>
        </trans-unit>
        <trans-unit id="9cecf7a48479b694a95bbcf2eaf27dcdb286d986" translate="yes" xml:space="preserve">
          <source>From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, Chef Infra Client will skip creating them. If the files are deleted, then:</source>
          <target state="translated">출력에서 되감기 된 실행 목록이 표시되지만 리소스가 다시 실행되면 파일이 있는지 확인을 반복합니다. 존재하는 경우 Chef Infra Client는 생성을 건너 뜁니다. 파일이 삭제 된 경우 :</target>
        </trans-unit>
        <trans-unit id="15606d3c44314d85f147f69b4d6b85c43baf3600" translate="yes" xml:space="preserve">
          <source>From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the chef-client will skip creating them. If the files are deleted, then:</source>
          <target state="translated">출력에서 rewound run-list가 표시되지만 자원이 다시 실행될 때 파일 존재 여부에 대한 점검을 반복합니다. 존재하는 경우 요리사 클라이언트는 생성을 건너 뜁니다. 파일이 삭제되면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="be4f6c2456a271f88c5e372e94fece0d196c4983" translate="yes" xml:space="preserve">
          <source>From the psql session, enter &lt;code&gt;postgres=# show ssl;&lt;/code&gt; which will show if ssl is enabled:</source>
          <target state="translated">psql 세션에서 &lt;code&gt;postgres=# show ssl;&lt;/code&gt; 입력 합니다. SSL이 활성화 된 경우 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5121e307510e61bc83de22d9288bb9d8aa7de065" translate="yes" xml:space="preserve">
          <source>From the root of your project&amp;rsquo;s directory, do the following:</source>
          <target state="translated">프로젝트 디렉토리의 루트에서 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7d49633e72821cd136b63b79ed12c394e5f991bb" translate="yes" xml:space="preserve">
          <source>From there, begin using the secrets by calling the &lt;code&gt;get_project_secrets&lt;/code&gt; method. For example:</source>
          <target state="translated">거기에서 &lt;code&gt;get_project_secrets&lt;/code&gt; 메소드 를 호출하여 비밀 사용을 시작하십시오 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="ec1f9da16a54de85300044deea1d5e7dbe686273" translate="yes" xml:space="preserve">
          <source>From your workstation, configure the server and the &lt;code&gt;client.rb&lt;/code&gt; file for your node. &lt;code&gt;S90T7HK2&lt;/code&gt; is an example node serial number.</source>
          <target state="translated">워크 스테이션에서 노드에 대한 서버 및 &lt;code&gt;client.rb&lt;/code&gt; 파일을 구성하십시오. &lt;code&gt;S90T7HK2&lt;/code&gt; 는 노드 일련 번호의 예입니다.</target>
        </trans-unit>
        <trans-unit id="0f6c859dee70e6673aef9a035f86ab6429a59f96" translate="yes" xml:space="preserve">
          <source>Front End</source>
          <target state="translated">프런트 엔드</target>
        </trans-unit>
        <trans-unit id="584b0ca8b1bffd60eae9337a282b85f645c97b50" translate="yes" xml:space="preserve">
          <source>Front-end machines are scaled horizontally, and then load balanced using a hardware load balancer, SSL off-loading, and round-robin as the load balancing algorithm.</source>
          <target state="translated">프런트 엔드 시스템은 수평으로 확장 된 다음로드 밸런싱 알고리즘으로 하드웨어로드 밸런서, SSL 오프로드 및 라운드 로빈을 사용하여로드 밸런싱됩니다.</target>
        </trans-unit>
        <trans-unit id="66f7e73f495c0215265a3d73656fba1fe390e16f" translate="yes" xml:space="preserve">
          <source>Front-end machines handle requests to the Chef server API and access to the web user interface. Front-end machines should be load balanced and scaled horizontally by increasing the number of servers available to handle requests.</source>
          <target state="translated">프런트 엔드 시스템은 Chef 서버 API에 대한 요청과 웹 사용자 인터페이스에 대한 액세스를 처리합니다. 프런트 엔드 시스템은 요청을 처리하는 데 사용할 수있는 서버 수를 늘려서 수평으로로드 밸런싱 및 확장해야합니다.</target>
        </trans-unit>
        <trans-unit id="152d1cf2d912c0b47ab85242e86450251a763f9b" translate="yes" xml:space="preserve">
          <source>Frontend</source>
          <target state="translated">Frontend</target>
        </trans-unit>
        <trans-unit id="8a29a7b80cd0645879634cbf7ed3778a9973ee96" translate="yes" xml:space="preserve">
          <source>Frontend Installation</source>
          <target state="translated">프론트 엔드 설치</target>
        </trans-unit>
        <trans-unit id="bfecd037150db102bb5b9cd958ba39a8272f1f40" translate="yes" xml:space="preserve">
          <source>Full &lt;code&gt;core&lt;/code&gt;: the full contents of the upstream &lt;code&gt;core&lt;/code&gt; origin. The x86_64 Linux set expands to 12GB, the Linux kernel2 set to 1GB, and the Windows set to 3.5GB.</source>
          <target state="translated">전체 &lt;code&gt;core&lt;/code&gt; : 업스트림 &lt;code&gt;core&lt;/code&gt; 원본 의 전체 콘텐츠입니다 . x86_64 Linux 세트는 12GB로, Linux kernel2는 1GB로, Windows는 3.5GB로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="281cbc061f163cdb9f5b94f0e91456393eb0c96b" translate="yes" xml:space="preserve">
          <source>Full Assignment</source>
          <target state="translated">완전 할당</target>
        </trans-unit>
        <trans-unit id="499e85b781eb3a3870766ca4737f8455e5cda379" translate="yes" xml:space="preserve">
          <source>Full MSAD Configuration</source>
          <target state="translated">전체 MSAD 구성</target>
        </trans-unit>
        <trans-unit id="0d458805e8a6427429ff2867e2fc5970afdbfeaf" translate="yes" xml:space="preserve">
          <source>Full or partial URL of the accelerator type resource to expose to this instance.</source>
          <target state="translated">이 인스턴스에 노출 할 가속기 유형 리소스의 전체 또는 부분 URL입니다.</target>
        </trans-unit>
        <trans-unit id="a6f1ba1972bd6c0e633e4dcf4ca80a08106343f3" translate="yes" xml:space="preserve">
          <source>Full path to the Version resource in the API. Example, &amp;ldquo;v1&amp;rdquo;.</source>
          <target state="translated">API의 버전 리소스에 대한 전체 경로입니다. 예 :&amp;ldquo;v1&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="977ffe3cf72e60f8226db330a0bdc55c19a84fa3" translate="yes" xml:space="preserve">
          <source>Fully assigned attributes</source>
          <target state="translated">완전히 할당 된 속성</target>
        </trans-unit>
        <trans-unit id="9802a25d05e57b3ac9022ef35d3bd53833038a3e" translate="yes" xml:space="preserve">
          <source>Fully assigned attributes.</source>
          <target state="translated">완전히 할당 된 속성.</target>
        </trans-unit>
        <trans-unit id="f463676da0f89898ba1f4cd28f770e248e79d6e2" translate="yes" xml:space="preserve">
          <source>Fully qualified domain name of the node.</source>
          <target state="translated">노드의 완전한 도메인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="75052dad72245d8618bfd140e997883c92cbc9d4" translate="yes" xml:space="preserve">
          <source>Fully qualified domain names</source>
          <target state="translated">정규화 된 도메인 이름</target>
        </trans-unit>
        <trans-unit id="7ad4feeb11b9e0d53a8507b14beb6063ad131cde" translate="yes" xml:space="preserve">
          <source>Fully qualified resource ID for the resource, e.g.</source>
          <target state="translated">리소스의 정규화 된 리소스 ID, 예 :</target>
        </trans-unit>
        <trans-unit id="15d25ab9807ce8bc2465a7d23d320ea7dc20e3a7" translate="yes" xml:space="preserve">
          <source>Fully-qualified package identifier (FQPI) - Uses four components in the following format: &lt;code&gt;origin/name/version/release&lt;/code&gt;. For example, &lt;code&gt;core/glibc/2.22/20160310192356&lt;/code&gt;.</source>
          <target state="translated">FQPI (Fully-qualified Package Identifier)-origin &lt;code&gt;origin/name/version/release&lt;/code&gt; 형식의 네 가지 구성 요소를 사용합니다 . 예 : &lt;code&gt;core/glibc/2.22/20160310192356&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1cc3469df7bbd828b3d28791af9929f6cca534d" translate="yes" xml:space="preserve">
          <source>Fully-qualified package identifiers of any build dependencies that your package depends on. These are listed in the root plan.sh file of your plan directory.</source>
          <target state="translated">패키지가 의존하는 모든 빌드 종속성의 정규화 된 패키지 식별자입니다. 이는 계획 디렉토리의 루트 plan.sh 파일에 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="ad1862a6843a97ddfd353c99bcdf8f3311877bce" translate="yes" xml:space="preserve">
          <source>Fully-qualified package identifiers of any runtime dependencies that the build dependencies for your project depend on. This is essentially a flattened tree of dependencies all the way up to the root dependency (&lt;code&gt;linux-headers&lt;/code&gt; in most cases).</source>
          <target state="translated">프로젝트의 빌드 종속성이 의존하는 모든 런타임 종속성의 정규화 된 패키지 식별자입니다. 이것은 본질적으로 루트 종속성 ( 대부분의 경우 &lt;code&gt;linux-headers&lt;/code&gt; ) 까지 확장 된 종속성 트리입니다 .</target>
        </trans-unit>
        <trans-unit id="42f70870c2bbdaec53b4892e5059cb72bed53384" translate="yes" xml:space="preserve">
          <source>Fully-qualified package identifiers of any runtime dependencies that the runtime dependencies for your project depend on. This is essentially a flattened tree of dependencies all the way up to the root dependency (&lt;code&gt;linux-headers&lt;/code&gt; in most cases).</source>
          <target state="translated">프로젝트의 런타임 종속성이 의존하는 모든 런타임 종속성의 정규화 된 패키지 식별자입니다. 이것은 본질적으로 루트 종속성 ( 대부분의 경우 &lt;code&gt;linux-headers&lt;/code&gt; ) 까지 확장 된 종속성 트리입니다 .</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="102f83664c30ee3ead82fe1c266bf1c7ee1b3b02" translate="yes" xml:space="preserve">
          <source>Functional</source>
          <target state="translated">Functional</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">추가 읽기</target>
        </trans-unit>
        <trans-unit id="6e127ddab33e2295ab46734775462f2303d72e9f" translate="yes" xml:space="preserve">
          <source>Further access control information is &lt;a href=&quot;https://cloud.google.com/container-registry/docs/access-control&quot;&gt;available here&lt;/a&gt;.</source>
          <target state="translated">추가 액세스 제어 정보는 &lt;a href=&quot;https://cloud.google.com/container-registry/docs/access-control&quot;&gt;여기에서 확인할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69c25d3382693097f4ee01b8b77967c5ef7e79d1" translate="yes" xml:space="preserve">
          <source>Future Enhancements</source>
          <target state="translated">향후 개선 사항</target>
        </trans-unit>
        <trans-unit id="0d53b300755da45ade860477b0bf50b22e46e6b4" translate="yes" xml:space="preserve">
          <source>Fuzzy Matching</source>
          <target state="translated">퍼지 매칭</target>
        </trans-unit>
        <trans-unit id="a4184e917f5d9d291072b425c3eea1b6e2750ce7" translate="yes" xml:space="preserve">
          <source>Fuzzy matching can be used with all commands because kitchen uses regular expressions to search. For example, a fully qualified name:</source>
          <target state="translated">kitchen은 검색에 정규식을 사용하기 때문에 모든 명령에 퍼지 일치를 사용할 수 있습니다. 예를 들어, 정규화 된 이름 :</target>
        </trans-unit>
        <trans-unit id="b840ebf240f19d160e8d0c3b90b5eff17293f607" translate="yes" xml:space="preserve">
          <source>GA</source>
          <target state="translated">GA</target>
        </trans-unit>
        <trans-unit id="dfa08e9884b1a270405f4f511232dd92982fa21f" translate="yes" xml:space="preserve">
          <source>GAUGE</source>
          <target state="translated">GAUGE</target>
        </trans-unit>
        <trans-unit id="0b4b22ff53f7830edd4a94653ba636939831bdc0" translate="yes" xml:space="preserve">
          <source>GCE_ENDPOINT</source>
          <target state="translated">GCE_ENDPOINT</target>
        </trans-unit>
        <trans-unit id="7db7362a24bb560901cef9e0f6aff328f4432b76" translate="yes" xml:space="preserve">
          <source>GCE_QUOTA_EXCEEDED</source>
          <target state="translated">GCE_QUOTA_EXCEEDED</target>
        </trans-unit>
        <trans-unit id="269bb3e206bb28c50ef6011e8afa4d1e9574a2e8" translate="yes" xml:space="preserve">
          <source>GCE_STOCKOUT</source>
          <target state="translated">GCE_STOCKOUT</target>
        </trans-unit>
        <trans-unit id="5ba8f1042f285719bc7df4b3d8ed223d03a561d1" translate="yes" xml:space="preserve">
          <source>GCE_VM_IP_PORT</source>
          <target state="translated">GCE_VM_IP_PORT</target>
        </trans-unit>
        <trans-unit id="9faf6f80df3995ca80574fb3342ac28e64510a04" translate="yes" xml:space="preserve">
          <source>GCP</source>
          <target state="translated">GCP</target>
        </trans-unit>
        <trans-unit id="8fbaba3b7ed3f930349249da281f31f92dde982a" translate="yes" xml:space="preserve">
          <source>GCP Permissions</source>
          <target state="translated">GCP 권한</target>
        </trans-unit>
        <trans-unit id="5c3fa8fcf7c14ebaccd3f492c8ca6fc479ad94b0" translate="yes" xml:space="preserve">
          <source>GCP Platform Support in InSpec</source>
          <target state="translated">InSpec의 GCP 플랫폼 지원</target>
        </trans-unit>
        <trans-unit id="ab2605776b0225dd424a10a84bd12f7780f48bac" translate="yes" xml:space="preserve">
          <source>GCP services that are subject to the Service Perimeter restrictions. Must contain a list of services. For example, if &lt;code&gt;storage.googleapis.com&lt;/code&gt; is specified, access to the storage buckets inside the perimeter must meet the perimeter&amp;rsquo;s access restrictions.</source>
          <target state="translated">서비스 경계 제한이 적용되는 GCP 서비스. 서비스 목록을 포함해야합니다. 예를 들어 &lt;code&gt;storage.googleapis.com&lt;/code&gt; 이 지정된 경우 경계 내부의 저장소 버킷에 대한 액세스는 경계의 액세스 제한을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="32d8a98393676e866ba7e6fc013ec9f0567f1e66" translate="yes" xml:space="preserve">
          <source>GENERATED*COOKIE</source>
          <target state="translated">GENERATED*COOKIE</target>
        </trans-unit>
        <trans-unit id="e42566c576ecfbec4707832abf2ac317f52436ac" translate="yes" xml:space="preserve">
          <source>GENERATED_COOKIE</source>
          <target state="translated">GENERATED_COOKIE</target>
        </trans-unit>
        <trans-unit id="f030bbbd32966cde41037b98a8849c46b76e4bc1" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="translated">GET</target>
        </trans-unit>
        <trans-unit id="b9a48a85ee936735f2b3e1c236d05bf5a6248830" translate="yes" xml:space="preserve">
          <source>GET - Make sure it has the READ permission checked PUT - Make sure it has the UPDATE permission checked DELETE - Make sure it has the DELETE permission checked</source>
          <target state="translated">GET-READ 권한이 선택되었는지 확인 PUT-UPDATE 권한이 선택되었는지 확인 DELETE-DELETE 권한이 선택되었는지 확인</target>
        </trans-unit>
        <trans-unit id="1fe6dd31246917ecc68d132eac6e1e80e06b85c9" translate="yes" xml:space="preserve">
          <source>GET - Under the group section, make sure it has the LIST permission checked POST - Under the group section, make sure it has the CREATE permission checked</source>
          <target state="translated">GET-그룹 섹션에서 LIST 권한이 선택되어 있는지 확인하십시오. POST-그룹 섹션에서 CREATE 권한이 선택되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b295909e0209b49969d3046df8d964a8f6e89e9f" translate="yes" xml:space="preserve">
          <source>GET /clients/CLIENT/keys</source>
          <target state="translated">GET / clients / CLIENT / keys</target>
        </trans-unit>
        <trans-unit id="ebc3e787d72b260ff44457fe5f672ede8a63623c" translate="yes" xml:space="preserve">
          <source>GET /clients/CLIENT/keys/KEY</source>
          <target state="translated">/ 클라이언트 / 클라이언트 / 키 / 키</target>
        </trans-unit>
        <trans-unit id="59f01f566a99efb49759e7f6d9c9a7789aaf22ae" translate="yes" xml:space="preserve">
          <source>GET /users/USER/keys</source>
          <target state="translated">/ users / USER / keys를 얻습니다</target>
        </trans-unit>
        <trans-unit id="21d1a82a95ab5bfa783ac7c5e3440efaae7e1d9e" translate="yes" xml:space="preserve">
          <source>GET /users/USER/keys/</source>
          <target state="translated">/ users / USER / keys /를 얻습니다</target>
        </trans-unit>
        <trans-unit id="2ac58af6b46c98a5746de9cdf0346209d0b5fc62" translate="yes" xml:space="preserve">
          <source>GKE_SERVICE_ACCOUNT_DELETED</source>
          <target state="translated">GKE_SERVICE_ACCOUNT_DELETED</target>
        </trans-unit>
        <trans-unit id="db6486702756155b84091f45f65d700a7e9f5b88" translate="yes" xml:space="preserve">
          <source>GLOBAL</source>
          <target state="translated">GLOBAL</target>
        </trans-unit>
        <trans-unit id="f615bc601da04a619e007995a71eff42f32ff43b" translate="yes" xml:space="preserve">
          <source>GOOGLE_SHEETS</source>
          <target state="translated">GOOGLE_SHEETS</target>
        </trans-unit>
        <trans-unit id="a86e7d263cf651ae7d959070d1abdfca0e601a1f" translate="yes" xml:space="preserve">
          <source>GRE Tunnels</source>
          <target state="translated">GRE 터널</target>
        </trans-unit>
        <trans-unit id="c0a0df7086cece5998142ac057f6fc84ddc5c9a2" translate="yes" xml:space="preserve">
          <source>GZIP</source>
          <target state="translated">GZIP</target>
        </trans-unit>
        <trans-unit id="9bd02f1243457f4129fa4ad14176dd0d63b9da55" translate="yes" xml:space="preserve">
          <source>Gather system diagnostics and logs</source>
          <target state="translated">시스템 진단 및 로그 수집</target>
        </trans-unit>
        <trans-unit id="1f5d1ed88e3f7c8ed371179eda97e85d3f2c128d" translate="yes" xml:space="preserve">
          <source>GatherLogsError</source>
          <target state="translated">GatherLogsError</target>
        </trans-unit>
        <trans-unit id="d55c1cc9d29bbb4103546bf651a80164dbd4e697" translate="yes" xml:space="preserve">
          <source>Gathering Tasknames</source>
          <target state="translated">작업 이름 수집</target>
        </trans-unit>
        <trans-unit id="a1cecf5d1c4586412b4706622e28564cafcacece" translate="yes" xml:space="preserve">
          <source>Gem Package Options</source>
          <target state="translated">보석 패키지 옵션</target>
        </trans-unit>
        <trans-unit id="7f466df6bf4ee843903705a872f218e58ac64507" translate="yes" xml:space="preserve">
          <source>Gem package options should only be used when gems are installed into the system-wide instance of Ruby, and not the instance of Ruby dedicated to the chef-client.</source>
          <target state="translated">gem 패키지 옵션은 gem이 chef-client 전용 인 Ruby 인스턴스가 아닌 시스템 전체 Ruby 인스턴스에 설치된 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">General</target>
        </trans-unit>
        <trans-unit id="5838758d67bec82300a154f7d2a65cc1ec74421c" translate="yes" xml:space="preserve">
          <source>General Commands</source>
          <target state="translated">일반 명령</target>
        </trans-unit>
        <trans-unit id="629870d2e09d1d6722eee32ad65f735e1c9558f8" translate="yes" xml:space="preserve">
          <source>General Connection Options</source>
          <target state="translated">일반 연결 옵션</target>
        </trans-unit>
        <trans-unit id="705125c41206844afba7045c9f470f781dd82978" translate="yes" xml:space="preserve">
          <source>General Elasticsearch Configuration</source>
          <target state="translated">일반 Elasticsearch 구성</target>
        </trans-unit>
        <trans-unit id="2fd12e2022bff36a8529b09a84b00aba5beeee1a" translate="yes" xml:space="preserve">
          <source>General Follower Recovery Process</source>
          <target state="translated">일반 팔로워 복구 프로세스</target>
        </trans-unit>
        <trans-unit id="b73a1e78a5a89a3ac904fc680a96828ab0221a24" translate="yes" xml:space="preserve">
          <source>General Properties</source>
          <target state="translated">일반 속성</target>
        </trans-unit>
        <trans-unit id="5e7e1ddc1890344c2f5ea995de6e42b6f6d779fb" translate="yes" xml:space="preserve">
          <source>General Purpose Plugins</source>
          <target state="translated">범용 플러그인</target>
        </trans-unit>
        <trans-unit id="71dd223f6b38a8b983e4066aae39ce5cdce9265a" translate="yes" xml:space="preserve">
          <source>General Settings</source>
          <target state="translated">일반 설정</target>
        </trans-unit>
        <trans-unit id="ff5f49a842feb61a52cfb0a75124770f07a53174" translate="yes" xml:space="preserve">
          <source>General Support Ends</source>
          <target state="translated">일반 지원 종료</target>
        </trans-unit>
        <trans-unit id="89acc648d8ceae4e16323bd57731b15cb259ae4e" translate="yes" xml:space="preserve">
          <source>Generally Available (GA)</source>
          <target state="translated">일반적으로 사용 가능 (GA)</target>
        </trans-unit>
        <trans-unit id="090685f3f2645a3354f7d45ea20f33d20a4e51bd" translate="yes" xml:space="preserve">
          <source>Generally, it&amp;rsquo;s best to let the chef-client choose the provider, and this is (by far) the most common approach. However, in some cases, specifying a provider may be desirable. There are two approaches:</source>
          <target state="translated">일반적으로 요리사 클라이언트가 공급자를 선택하도록하는 것이 가장 좋습니다. 이는 가장 일반적인 접근 방식입니다. 그러나 경우에 따라 공급자를 지정하는 것이 바람직 할 수 있습니다. 두 가지 접근 방식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc45f9b7a9a6e8b48f0e28821ec1981804dd1eb6" translate="yes" xml:space="preserve">
          <source>Generate</source>
          <target state="translated">Generate</target>
        </trans-unit>
        <trans-unit id="68c1bb440536f263b019aacba33dd3618151110c" translate="yes" xml:space="preserve">
          <source>Generate Origin Keys</source>
          <target state="translated">오리진 키 생성</target>
        </trans-unit>
        <trans-unit id="2465e480cf5a52fa0902dcc10148013a1e111aaf" translate="yes" xml:space="preserve">
          <source>Generate Origin Keys with the CLI</source>
          <target state="translated">CLI를 사용하여 오리진 키 생성</target>
        </trans-unit>
        <trans-unit id="231e9ef665d00dd52669f6d34ec18a4924db65ba" translate="yes" xml:space="preserve">
          <source>Generate a Chef Automate v2 configuration file from Chef Automate v1</source>
          <target state="translated">Chef Automate v1에서 Chef Automate v2 구성 파일 생성</target>
        </trans-unit>
        <trans-unit id="52faa64be5a0c7993bd5755f04e13a78b8265e5c" translate="yes" xml:space="preserve">
          <source>Generate a Chef Habitat on-prem Builder Personal Access Token</source>
          <target state="translated">Chef Habitat 온 프레미스 빌더 개인 액세스 토큰 생성</target>
        </trans-unit>
        <trans-unit id="ecdbdce488f3221b7a84407eba66cb84e5fe01fa" translate="yes" xml:space="preserve">
          <source>Generate a Policyfile:</source>
          <target state="translated">정책 파일 생성 :</target>
        </trans-unit>
        <trans-unit id="62e3cf2a1e5f24dc7ad60fc460f271532b932e46" translate="yes" xml:space="preserve">
          <source>Generate a Supervisor configuration file and use it to set any of the 40+ Supervisor configuration settings instead of configuring them on the command line.</source>
          <target state="translated">Supervisor 구성 파일을 생성하고 명령 줄에서 구성하는 대신 40 개 이상의 Supervisor 구성 설정 중 하나를 설정하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1b8481c38092ad5278dafc0c0ecf83f4caa491bd" translate="yes" xml:space="preserve">
          <source>Generate a config file</source>
          <target state="translated">구성 파일 생성</target>
        </trans-unit>
        <trans-unit id="c693dbe151a5ed7d2f70300201e7888e171da8e6" translate="yes" xml:space="preserve">
          <source>Generate a cookbook</source>
          <target state="translated">요리 책 생성</target>
        </trans-unit>
        <trans-unit id="0e69997ee13c736d0182847f792fafe8422abc78" translate="yes" xml:space="preserve">
          <source>Generate a cookbook under &lt;code&gt;/cookbooks&lt;/code&gt; in the project directory:</source>
          <target state="translated">프로젝트 디렉토리의 &lt;code&gt;/cookbooks&lt;/code&gt; cookbooks 아래에 요리 책을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="29e6e65df7e4d648283cdce1f1c39ee5c36ecf6c" translate="yes" xml:space="preserve">
          <source>Generate a cookbook:</source>
          <target state="translated">요리 책 생성 :</target>
        </trans-unit>
        <trans-unit id="8d3fc7d7f221f2b091ff77fdeac0b1d45fb15f5a" translate="yes" xml:space="preserve">
          <source>Generate a delivery config file and build cookbook inside the new cookbook. Default value: disabled. This option is disabled. It has no effect and exists only for compatibility with past releases</source>
          <target state="translated">배달 구성 파일을 생성하고 새 쿡북 내에 쿡북을 빌드합니다. 기본값 : 비활성화 됨. 이 옵션은 비활성화되어 있습니다. 효과가 없으며 이전 릴리스와의 호환성을 위해서만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="0909af4f44e23ecd07293af4e799e69689c19003" translate="yes" xml:space="preserve">
          <source>Generate a new &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; from any of the backend nodes via</source>
          <target state="translated">다음을 통해 백엔드 노드에서 새 &lt;code&gt;/etc/opscode/chef-server.rb&lt;/code&gt; 를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6eec1dd44f7a6d41e5fdaf554298824295641f07" translate="yes" xml:space="preserve">
          <source>Generate a new EC private key with prime256v1 key curve and aes-128-cbc cipher</source>
          <target state="translated">prime256v1 키 곡선 및 aes-128-cbc 암호를 사용하여 새 EC 개인 키 생성</target>
        </trans-unit>
        <trans-unit id="099bac9dd43431e924a795f6e51282a7ff68476a" translate="yes" xml:space="preserve">
          <source>Generate a new ec privatekey with prime256v1 key curve and default des3 cipher</source>
          <target state="translated">prime256v1 키 곡선 및 기본 des3 암호를 사용하여 새 EC 개인 키 생성</target>
        </trans-unit>
        <trans-unit id="8000993eb762dd03859049185e4781b38522bb42" translate="yes" xml:space="preserve">
          <source>Generate a new public/private key pair and replace an existing public key with the newly-generated public key. To replace the public key with an existing public key, use &lt;code&gt;--public-key&lt;/code&gt; instead.</source>
          <target state="translated">새로운 공개 / 개인 키 쌍을 생성하고 기존 공개 키를 새로 생성 된 공개 키로 바꿉니다. 공개 키를 기존 공개 키로 바꾸려면 대신 &lt;code&gt;--public-key&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b4845627575f72b9df4a5a938467622d374a5db0" translate="yes" xml:space="preserve">
          <source>Generate a personal access token</source>
          <target state="translated">개인 액세스 토큰 생성</target>
        </trans-unit>
        <trans-unit id="a927d759389f6b45701084e3d12a6e87d74ad7de" translate="yes" xml:space="preserve">
          <source>Generate a private key and certificate for the Supervisor&amp;rsquo;s Control Gateway TLS connection</source>
          <target state="translated">Supervisor의 Control Gateway TLS 연결을위한 개인 키 및 인증서 생성</target>
        </trans-unit>
        <trans-unit id="507fada13ad58ece54f774dfc6b755db64d2aa73" translate="yes" xml:space="preserve">
          <source>Generate a report that only includes cookbooks that are not included in any node&amp;rsquo;s runlist.</source>
          <target state="translated">노드의 실행 목록에 포함되지 않은 요리 책 만 포함하는 보고서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="03f94ad8111642bb3eebbded013de9b983cc8de2" translate="yes" xml:space="preserve">
          <source>Generate a ring key using the &lt;code&gt;hab&lt;/code&gt; command-line tool. This can be done on your workstation. The generated key has the &lt;code&gt;.sym.key&lt;/code&gt; extension, indicating that it is a symmetric pre-shared key, and is stored in the &lt;code&gt;$HOME/.hab/cache/keys&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;hab&lt;/code&gt; 명령 줄 도구를 사용하여 링 키를 생성합니다 . 이 작업은 워크 스테이션에서 수행 할 수 있습니다. 생성 된 키에는 &lt;code&gt;.sym.key&lt;/code&gt; 확장자가 있으며 이는 대칭 사전 공유 키 &lt;code&gt;$HOME/.hab/cache/keys&lt;/code&gt; 디렉토리에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="a0e69d61b69919846555cf7922047c35eae241dc" translate="yes" xml:space="preserve">
          <source>Generate a secret key to use as a Supervisor&amp;rsquo;s Control Gateway secret</source>
          <target state="translated">Supervisor의 Control Gateway 비밀로 사용할 비밀 키 생성</target>
        </trans-unit>
        <trans-unit id="7f6371d584b38bb81ceef2ef226e9edf291b371f" translate="yes" xml:space="preserve">
          <source>Generate a service group key using the &lt;code&gt;hab&lt;/code&gt; command-line tool. This can be done on your workstation. Because asymmetric encryption is being used, two files will be generated: a file with a &lt;code&gt;.box.key&lt;/code&gt; extension, which is the service group&amp;rsquo;s private key, and a file with a &lt;code&gt;.pub&lt;/code&gt; extension, which is the service group&amp;rsquo;s public key.</source>
          <target state="translated">&lt;code&gt;hab&lt;/code&gt; 명령 줄 도구를 사용하여 서비스 그룹 키를 생성합니다 . 이 작업은 워크 스테이션에서 수행 할 수 있습니다. 비대칭 암호화가 사용되기 때문에 서비스 그룹의 개인 키인 &lt;code&gt;.box.key&lt;/code&gt; 확장자를 가진 파일과 서비스 그룹의 공개 키인 &lt;code&gt;.pub&lt;/code&gt; 확장자를 가진 파일의 두 파일이 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="dd22e8e3e0c27f5a0e43abd045d82ed6262e39ce" translate="yes" xml:space="preserve">
          <source>Generate a token</source>
          <target state="translated">토큰 생성</target>
        </trans-unit>
        <trans-unit id="66d6f32cdf55ecde541052b46875bc43d87e4725" translate="yes" xml:space="preserve">
          <source>Generate a token and add it to the chef-managed admin policy (default: false)</source>
          <target state="translated">토큰을 생성하고 요리사가 관리하는 관리자 정책에 추가합니다 (기본값 : false).</target>
        </trans-unit>
        <trans-unit id="92cd09b12211702147e90be0bce1445ea9ecbbca" translate="yes" xml:space="preserve">
          <source>Generate a token:</source>
          <target state="translated">토큰 생성 :</target>
        </trans-unit>
        <trans-unit id="3b2abd287ac9e0a631994d105c57bfd56c92b845" translate="yes" xml:space="preserve">
          <source>Generate a user key using the &lt;code&gt;hab&lt;/code&gt; command-line tool. This can be done on your workstation. Because asymmetric encryption is being used, two files will be generated: a file with a &lt;code&gt;.box.key&lt;/code&gt; extension, which is the user&amp;rsquo;s private key, and a file with a &lt;code&gt;.pub&lt;/code&gt; extension, which is the user&amp;rsquo;s public key.</source>
          <target state="translated">&lt;code&gt;hab&lt;/code&gt; 명령 줄 도구를 사용하여 사용자 키를 생성합니다 . 이 작업은 워크 스테이션에서 수행 할 수 있습니다. 비대칭 암호화가 사용되기 때문에 사용자의 개인 키인 &lt;code&gt;.box.key&lt;/code&gt; 확장자를 가진 파일과 사용자의 공개 키인 &lt;code&gt;.pub&lt;/code&gt; 확장자를 가진 파일의 두 파일이 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="0fca2523e2bfcf9dd9e4e463e4a78da2ee2376f5" translate="yes" xml:space="preserve">
          <source>Generate metadata for all cookbooks.</source>
          <target state="translated">모든 요리 책에 대한 메타 데이터를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="36ac7ac98520652ca8302d334011bb9bc97957fb" translate="yes" xml:space="preserve">
          <source>Generate new 1024bit key with the aes-128-cbc cipher</source>
          <target state="translated">aes-128-cbc 암호를 사용하여 새 1024 비트 키 생성</target>
        </trans-unit>
        <trans-unit id="3ca0510b4b48045b5aee9c36884d82b383f969d9" translate="yes" xml:space="preserve">
          <source>Generate new 2048bit key with the default des3 cipher</source>
          <target state="translated">기본 des3 암호로 새로운 2048 비트 키 생성</target>
        </trans-unit>
        <trans-unit id="4121b5a14c0d89ad8ddc1f86baa5dc6c0a9c5493" translate="yes" xml:space="preserve">
          <source>Generate new EC public key from a private key on disk</source>
          <target state="translated">디스크의 개인 키에서 새 EC 공개 키 생성</target>
        </trans-unit>
        <trans-unit id="1d6d3ca2964cac47874d98b1e5434a4d5391102c" translate="yes" xml:space="preserve">
          <source>Generate new ec public key by passing in a private key</source>
          <target state="translated">개인 키를 전달하여 새 EC 공개 키 생성</target>
        </trans-unit>
        <trans-unit id="4360dff1e70e029694635b9058e9979647733685" translate="yes" xml:space="preserve">
          <source>Generate new public key by passing in a private key</source>
          <target state="translated">개인 키를 전달하여 새 공개 키 생성</target>
        </trans-unit>
        <trans-unit id="d10a14edd05e159be4ef9422dbca6b92a09df067" translate="yes" xml:space="preserve">
          <source>Generate new public key from a private key on disk</source>
          <target state="translated">디스크의 개인 키에서 새 공개 키 생성</target>
        </trans-unit>
        <trans-unit id="cfed846be5285bf30f3d4ca878526b5dd77f6647" translate="yes" xml:space="preserve">
          <source>Generate the cookbook:</source>
          <target state="translated">요리 책을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="92039bc56bdf01f486d02e209efb1e0a09bb5f3c" translate="yes" xml:space="preserve">
          <source>Generates a Habitat origin key pair</source>
          <target state="translated">Habitat 오리진 키 쌍을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3fe22c2f44a28380c1007f192ef0cec2c6414895" translate="yes" xml:space="preserve">
          <source>Generates a Habitat ring key</source>
          <target state="translated">Habitat 링 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="42448001a282eec1fa50a3f1d8151361a2124306" translate="yes" xml:space="preserve">
          <source>Generates a Habitat service key</source>
          <target state="translated">Habitat 서비스 키 생성</target>
        </trans-unit>
        <trans-unit id="5de5168af4a0bd28ce9ec6e4fcb45f35b7015a4b" translate="yes" xml:space="preserve">
          <source>Generates a Habitat user key</source>
          <target state="translated">Habitat 사용자 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cb7d19ad22c1744a87c4e699735dd4b63013ffa1" translate="yes" xml:space="preserve">
          <source>Generates a blake2b hashsum from a target at any given filepath</source>
          <target state="translated">주어진 파일 경로의 대상에서 blake2b 해시 섬을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1a03bd377c119aa98c7905b386b18d280c895500" translate="yes" xml:space="preserve">
          <source>Generates a large amount of data about a Chef Infra Client run.</source>
          <target state="translated">Chef Infra Client 실행에 대한 많은 양의 데이터를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ba76cd056427dbee6a8fcff803a08711e2480c1f" translate="yes" xml:space="preserve">
          <source>Generates a large amount of data about the chef-client run</source>
          <target state="translated">chef-client run에 대한 대량의 데이터를 생성합니다</target>
        </trans-unit>
        <trans-unit id="035e2d261b0bb4b257e14469305894f26ceb5424" translate="yes" xml:space="preserve">
          <source>Generates common package specific configuration files. Executing without argument will create a habitat directory in</source>
          <target state="translated">공통 패키지 특정 구성 파일을 생성합니다. 인수없이 실행하면 다음 위치에 서식지 디렉토리가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b4b561e7b3830b462d1ca381f0d0ef7c0e71cafd" translate="yes" xml:space="preserve">
          <source>Generates common package specific configuration files. Executing without argument will create a habitat directory in your current folder for the plan. If PKG_NAME is specified it will create a folder with that name. Environment variables (those starting with &amp;lsquo;pkg_') that are set will be used in the generated plan</source>
          <target state="translated">공통 패키지 특정 구성 파일을 생성합니다. 인수없이 실행하면 계획의 현재 폴더에 서식지 디렉토리가 생성됩니다. PKG_NAME이 지정되면 해당 이름으로 폴더가 생성됩니다. 설정된 환경 변수 ( 'pkg_'로 시작하는 변수)는 생성 된 계획에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f66cd96cae363a734f352451fa2819ef9f3b495c" translate="yes" xml:space="preserve">
          <source>Generates repositories, cookbooks, recipes, attributes, templates, and custom resources.</source>
          <target state="translated">리포지토리, 요리 책, 레시피, 속성, 템플릿 및 사용자 지정 리소스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5a023207cde582cdcb557dc6aebd3771e4e41b28" translate="yes" xml:space="preserve">
          <source>Generating Service Group Keys</source>
          <target state="translated">서비스 그룹 키 생성</target>
        </trans-unit>
        <trans-unit id="1e63bc287aa97afc0321d398d2f29f7c073ca637" translate="yes" xml:space="preserve">
          <source>Generating User Keys</source>
          <target state="translated">사용자 키 생성</target>
        </trans-unit>
        <trans-unit id="0987d57d1ea81ae59d2fa8b4ed9b840dcfedcd1a" translate="yes" xml:space="preserve">
          <source>Generating a Ring Key</source>
          <target state="translated">링 키 생성</target>
        </trans-unit>
        <trans-unit id="3238a5ff9e151771e238bc43c1b6f3049a093c02" translate="yes" xml:space="preserve">
          <source>Generating a config.rb File</source>
          <target state="translated">config.rb 파일 생성</target>
        </trans-unit>
        <trans-unit id="be851d70fa0bbcb1759428f90927765e04b903e2" translate="yes" xml:space="preserve">
          <source>Generic file watcher</source>
          <target state="translated">일반 파일 감시자</target>
        </trans-unit>
        <trans-unit id="6b44987fa3307256a0f5d4bcfa6dabc741a557cc" translate="yes" xml:space="preserve">
          <source>Gentoo</source>
          <target state="translated">Gentoo</target>
        </trans-unit>
        <trans-unit id="797ffcea52b47df31dae3335c00725ae36d2c4d0" translate="yes" xml:space="preserve">
          <source>Get All Available Profiles</source>
          <target state="translated">사용 가능한 모든 프로필 가져 오기</target>
        </trans-unit>
        <trans-unit id="4b2ea534ad9955bc392096474cf5b1036c0e8123" translate="yes" xml:space="preserve">
          <source>Get All Installed Profiles</source>
          <target state="translated">설치된 모든 프로필 가져 오기</target>
        </trans-unit>
        <trans-unit id="95b04b72b7c7d4d5546f4f50bffce67a99126095" translate="yes" xml:space="preserve">
          <source>Get Chef Automate Installer and Admin Tool</source>
          <target state="translated">Chef Automate 설치 프로그램 및 관리 도구 받기</target>
        </trans-unit>
        <trans-unit id="3f4c6d28a5692297a4671cd7f9159de109c01a5f" translate="yes" xml:space="preserve">
          <source>Get Chef Habitat</source>
          <target state="translated">Chef Habitat 받기</target>
        </trans-unit>
        <trans-unit id="80a6649b3180613a70a07bc8719a5af8b2c3cf88" translate="yes" xml:space="preserve">
          <source>Get Config Files</source>
          <target state="translated">구성 파일 가져 오기</target>
        </trans-unit>
        <trans-unit id="858c8b6149fcc41de195c34fbea681ed49b9658e" translate="yes" xml:space="preserve">
          <source>Get Kernel Values</source>
          <target state="translated">커널 값 얻기</target>
        </trans-unit>
        <trans-unit id="5fbf0d226580fdc0c3ce0d1e5451beb6cf663b9c" translate="yes" xml:space="preserve">
          <source>Get Package, Run Installer</source>
          <target state="translated">패키지 가져 오기, 설치 관리자 실행</target>
        </trans-unit>
        <trans-unit id="a8c35b06eb4046b422d38612cfbcad8d7f54e9b7" translate="yes" xml:space="preserve">
          <source>Get SSL Certificates</source>
          <target state="translated">SSL 인증서 받기</target>
        </trans-unit>
        <trans-unit id="6a12f52218f3d82c127b37a1b067cac4e59878da" translate="yes" xml:space="preserve">
          <source>Get SSL certificates from the Chef server</source>
          <target state="translated">Chef 서버에서 SSL 인증서 받기</target>
        </trans-unit>
        <trans-unit id="b67c95b6787344c13d5fd6dc16d2750fc49e9000" translate="yes" xml:space="preserve">
          <source>Get Specific Nodes</source>
          <target state="translated">특정 노드 가져 오기</target>
        </trans-unit>
        <trans-unit id="d2fb656b3d934a0ceb56a67429d71c99cda08e01" translate="yes" xml:space="preserve">
          <source>Get Started with Chef Automate and Chef Habitat On-prem</source>
          <target state="translated">Chef Automate 및 Chef Habitat On-prem 시작하기</target>
        </trans-unit>
        <trans-unit id="9a1624fa9ddd8d1b8efc910b700b05be32bcf6f5" translate="yes" xml:space="preserve">
          <source>Get a License</source>
          <target state="translated">라이센스 받기</target>
        </trans-unit>
        <trans-unit id="9b0f2b7fd5e0819c5c67b16b3bacb3cc440f1ba2" translate="yes" xml:space="preserve">
          <source>Get a custom search query from the &lt;code&gt;config.json&lt;/code&gt; file. By default, the &lt;code&gt;deploy.rb&lt;/code&gt; recipe triggers a Chef Infra Client run via Chef Push Jobs against all nodes that belong to the current environment in Chef Automate and have modified cookbooks in the run-list.</source>
          <target state="translated">&lt;code&gt;config.json&lt;/code&gt; 파일 에서 사용자 지정 검색 쿼리를 가져옵니다 . 기본적으로 &lt;code&gt;deploy.rb&lt;/code&gt; 레시피는 Chef Automate의 현재 환경에 속하고 실행 목록에서 쿡북을 수정 한 모든 노드에 대해 Chef 푸시 작업을 통해 실행되는 Chef Infra Client를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="bd3eb498ef56cadbf0c3d0c395743525ff0f74c1" translate="yes" xml:space="preserve">
          <source>Get a list of Foodcritic tags (rule identifiers) to be run. This looks in the &lt;code&gt;config.json&lt;/code&gt; file for the &lt;code&gt;foodcritic&lt;/code&gt; block to see if the &lt;code&gt;only_rules&lt;/code&gt; and/or &lt;code&gt;ignore_rules&lt;/code&gt; settings have been specified.</source>
          <target state="translated">실행할 Foodcritic 태그 (규칙 식별자) 목록을 가져옵니다. 이것은 &lt;code&gt;config.json&lt;/code&gt; 파일에서 &lt;code&gt;foodcritic&lt;/code&gt; 블록을 &lt;code&gt;only_rules&lt;/code&gt; 및 / 또는 &lt;code&gt;ignore_rules&lt;/code&gt; 설정이 지정되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="336b445f89e1d3eccd420c0ed901b654da8c8cbf" translate="yes" xml:space="preserve">
          <source>Get a list of cookbooks that have been modified.</source>
          <target state="translated">수정 된 요리 책 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="56f4770e3237d57f03edbc385563519b9d1ac731" translate="yes" xml:space="preserve">
          <source>Get a list of directories against which Foodcritic rules should not be run. This looks in the &lt;code&gt;config.json&lt;/code&gt; file for the &lt;code&gt;foodcritic&lt;/code&gt; block to see if the &lt;code&gt;excludes&lt;/code&gt; setting has been specified.</source>
          <target state="translated">Foodcritic 규칙이 실행되지 않아야하는 디렉터리 목록을 가져옵니다. 에서이 모습 &lt;code&gt;config.json&lt;/code&gt; 의 의 파일 &lt;code&gt;foodcritic&lt;/code&gt; 경우 생성 블록 볼 &lt;code&gt;excludes&lt;/code&gt; 설정이 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="3d38e41f24bd084f7802ae2eb5b041c66d907269" translate="yes" xml:space="preserve">
          <source>Get a list of files that have been modified.</source>
          <target state="translated">수정 된 파일 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e2f92e67cece349a73bda9857536b309db91359e" translate="yes" xml:space="preserve">
          <source>Get all groups of Administrator user</source>
          <target state="translated">관리자 사용자의 모든 그룹 가져 오기</target>
        </trans-unit>
        <trans-unit id="f302826b53658cd573e0172db15873bd4bc236a5" translate="yes" xml:space="preserve">
          <source>Get an Account</source>
          <target state="translated">계정 받기</target>
        </trans-unit>
        <trans-unit id="a213c6b5a533eb28e1ef72411e64f1fbafd8d6cd" translate="yes" xml:space="preserve">
          <source>Get attributes for a defined project application.</source>
          <target state="translated">정의 된 프로젝트 애플리케이션에 대한 속성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3b594aadd19eb12083fb5997ab15b5a7d23eb9ac" translate="yes" xml:space="preserve">
          <source>Get origin keys</source>
          <target state="translated">오리진 키 가져 오기</target>
        </trans-unit>
        <trans-unit id="0cb77ec0bdaa1e94230a5b203d07a92aa990d5e8" translate="yes" xml:space="preserve">
          <source>Get started by reviewing the &lt;a href=&quot;https://github.com/munki/munki&quot;&gt;Munki documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/munki/munki&quot;&gt;Munki 문서&lt;/a&gt; 를 검토하여 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="d186dec0b13299761cf521274eee3084a0afdd5d" translate="yes" xml:space="preserve">
          <source>Get status information about the Chef Automate server&amp;rsquo;s &lt;code&gt;_status&lt;/code&gt; endpoint, API response time, and additional information depending on the server&amp;rsquo;s configuration.</source>
          <target state="translated">Chef Automate 서버의 &lt;code&gt;_status&lt;/code&gt; 엔드 포인트, API 응답 시간 및 서버 구성에 따른 추가 정보에 대한 상태 정보를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="83ca4c9441d5aab4396443986d05f9fe0e9741b3" translate="yes" xml:space="preserve">
          <source>Get system information for example.com</source>
          <target state="translated">example.com에 대한 시스템 정보 얻기</target>
        </trans-unit>
        <trans-unit id="e9b3c9404526e06175e85fb423a9ff2a059bc6ff" translate="yes" xml:space="preserve">
          <source>Get template settings from a local file</source>
          <target state="translated">로컬 파일에서 템플릿 설정 가져 오기</target>
        </trans-unit>
        <trans-unit id="34a98afdcb7c3ec8e266c5fc0d3a9529d42b2713" translate="yes" xml:space="preserve">
          <source>Get the .pem files and knife.rb files</source>
          <target state="translated">.pem 파일과 knife.rb 파일 가져 오기</target>
        </trans-unit>
        <trans-unit id="a82c1bc8b320db9c5053b6f11556ad2a2b0adb09" translate="yes" xml:space="preserve">
          <source>Get the Chef Automate Incident Creation application</source>
          <target state="translated">Chef Automate Incident Creation 애플리케이션 다운로드</target>
        </trans-unit>
        <trans-unit id="81b94a5bc901e70a5edf8d3070816858388630ac" translate="yes" xml:space="preserve">
          <source>Get the contents of the &lt;code&gt;delivery-secrets&lt;/code&gt; data bag from the Chef Infra Server. This data bag contains secrets that enable cookbooks to be published to a Chef Supermarket, an open source git repository, a repository on GitHub.</source>
          <target state="translated">Chef Infra Server에서 &lt;code&gt;delivery-secrets&lt;/code&gt; 데이터 백의 내용을 가져옵니다 . 이 데이터 백에는 쿡북을 GitHub의 저장소 인 오픈 소스 git 저장소 인 Chef Supermarket에 게시 할 수있는 비밀이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2210d6e817bc7f49d188b9a201047ca0581957cc" translate="yes" xml:space="preserve">
          <source>Get the name of the acceptance environment.</source>
          <target state="translated">수락 환경의 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3b021852b79052d562bcde9b4b30ea9a0cf570b2" translate="yes" xml:space="preserve">
          <source>Get the name of the active unit:</source>
          <target state="translated">활성 장치의 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="95c411ab1e7ab8e9e19a9f3db98f159fa9f2b6fb" translate="yes" xml:space="preserve">
          <source>Get the name of the standard environment.</source>
          <target state="translated">표준 환경의 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="cc766c483e09053d3ced4cb0e3b76d3644d470f6" translate="yes" xml:space="preserve">
          <source>Get the package from a remote location, but only if the package does not already exist on the target system</source>
          <target state="translated">패키지가 대상 시스템에없는 경우에만 원격 위치에서 패키지를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="008731292a307de99dd72437579d50d7911155f5" translate="yes" xml:space="preserve">
          <source>Get the priority mapping for a provider.</source>
          <target state="translated">공급자의 우선 순위 매핑을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="48fa124e69ecb4cb664f5ee991bbd5496e9ad8c2" translate="yes" xml:space="preserve">
          <source>Get the priority mapping for a resource.</source>
          <target state="translated">자원에 대한 우선 순위 맵핑을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1cbbe57ed163b77504de475b592ff76520bda921" translate="yes" xml:space="preserve">
          <source>Get the serial number of your &amp;lsquo;test node&amp;rsquo;</source>
          <target state="translated">'테스트 노드'의 일련 번호 얻기</target>
        </trans-unit>
        <trans-unit id="8ce422c016257a4e19d9f460aeaad92213923918" translate="yes" xml:space="preserve">
          <source>Get the status of one or more job groups</source>
          <target state="translated">하나 이상의 작업 그룹 상태 가져 오기</target>
        </trans-unit>
        <trans-unit id="a764011d5550d2e32270b19d4c88780e2ae07cf6" translate="yes" xml:space="preserve">
          <source>Get upgrade status of Chef Automate</source>
          <target state="translated">Chef Automate의 업그레이드 상태 얻기</target>
        </trans-unit>
        <trans-unit id="5dcedc25fbf113957bfec315a32360d335d10752" translate="yes" xml:space="preserve">
          <source>Get your Slack webhook address by using the &lt;strong&gt;What&amp;rsquo;s this?&lt;/strong&gt; link, which opens an external Slack site.</source>
          <target state="translated">&lt;strong&gt;What 's this?를&lt;/strong&gt; 사용하여 Slack 웹훅 주소를 가져옵니다 &lt;strong&gt;. &lt;/strong&gt;링크는 외부 Slack 사이트를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="f9e225a452006fb23f2e159a18bb43380cec2fb9" translate="yes" xml:space="preserve">
          <source>Get-AzureVMChefExtension</source>
          <target state="translated">Get-AzureVMChefExtension</target>
        </trans-unit>
        <trans-unit id="2a092e78069d5ca1378bba14443f9ee507632830" translate="yes" xml:space="preserve">
          <source>Gets the Nginx file from a remote location</source>
          <target state="translated">원격 위치에서 Nginx 파일을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="e12a0f618cdb9889e9631ceb12788e6839dc5e4f" translate="yes" xml:space="preserve">
          <source>Getting Started with Test Kitchen</source>
          <target state="translated">Test Kitchen 시작하기</target>
        </trans-unit>
        <trans-unit id="e45f7c422af62514c38e1474824a2ff8be6dd9bb" translate="yes" xml:space="preserve">
          <source>Getting started with Chef InSpec</source>
          <target state="translated">Chef InSpec 시작하기</target>
        </trans-unit>
        <trans-unit id="489a1ca4853fd2d88a8b3b375efe2b9d736394bf" translate="yes" xml:space="preserve">
          <source>Git access for the delivery-cli and workflow</source>
          <target state="translated">Delivery-cli 및 워크 플로에 대한 Git 액세스</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="04773aea601233cd81a2132b3510cdc144d3b3a5" translate="yes" xml:space="preserve">
          <source>GitHub Atom - (free/open source)</source>
          <target state="translated">GitHub Atom-(무료 / 오픈 소스)</target>
        </trans-unit>
        <trans-unit id="de649978d45cb18100eb6b95e6c13143d1ac3ece" translate="yes" xml:space="preserve">
          <source>GitHub account</source>
          <target state="translated">GitHub 계정</target>
        </trans-unit>
        <trans-unit id="4fa0b670ccbbd3a854153a9d98eaf4ee3321d7e2" translate="yes" xml:space="preserve">
          <source>Give a user access to read &lt;code&gt;/etc/chef&lt;/code&gt; and also the files accessed by the Chef Infra Client. This requires super user privileges and, as such, is not a recommended approach</source>
          <target state="translated">사용자에게 &lt;code&gt;/etc/chef&lt;/code&gt; 및 Chef Infra Client에서 액세스 한 파일 을 읽을 수있는 액세스 권한을 부여하십시오 . 이를 위해서는 슈퍼 사용자 권한이 필요하므로 권장되는 방법이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="56e20169782d583c1df4ddd05b797afa8ba88805" translate="yes" xml:space="preserve">
          <source>Give a user access to read &lt;code&gt;/etc/chef&lt;/code&gt; and also the files accessed by the chef-client. This requires super user privileges and, as such, is not a recommended approach</source>
          <target state="translated">&lt;code&gt;/etc/chef&lt;/code&gt; 및 chef-client가 액세스 한 파일 을 읽을 수있는 권한을 사용자에게 제공하십시오 . 여기에는 수퍼 유저 권한이 필요하므로 권장되는 접근 방식이 아닙니다</target>
        </trans-unit>
        <trans-unit id="7e4cbdfa5e6994b3523c0769d0738dd08a48237e" translate="yes" xml:space="preserve">
          <source>Give pipeline a descriptive name and input the base branch.</source>
          <target state="translated">파이프 라인에 설명이 포함 된 이름을 지정하고 기본 분기를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="76030270dee610b11eaf36d21b78bbb28dfedc6b" translate="yes" xml:space="preserve">
          <source>Give the new pipeline a descriptive name and input the base branch.</source>
          <target state="translated">새 파이프 라인에 설명이 포함 된 이름을 지정하고 기본 분기를 입력합니다.</target>
        </trans-unit>
        <trans-unit id="e82b7469f38210719862b643ba469580e5220fca" translate="yes" xml:space="preserve">
          <source>Given a default.toml that looks like:</source>
          <target state="translated">다음과 같은 default.toml이 주어집니다.</target>
        </trans-unit>
        <trans-unit id="e450819118ed13701f8c00767921432c4e0f046e" translate="yes" xml:space="preserve">
          <source>Given a more structured directory service layout, including multiple trees of groups, further options become possible: Assuming the layout is like</source>
          <target state="translated">여러 그룹 트리를 포함하여보다 구조화 된 디렉토리 서비스 레이아웃이 주어지면 추가 옵션이 가능해집니다. 레이아웃이 다음과 같다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="e90210bba20c20d8ac207b8641dbb17bdcee1847" translate="yes" xml:space="preserve">
          <source>Given a non-empty membership list, the Supervisor can begin probing the members of that list to see if they are still alive and running. Supervisor A sends a message to Supervisor B, effectively asking &amp;ldquo;are you still there?&amp;rdquo;. If Supervisor B &lt;em&gt;is&lt;/em&gt; available, it will reply to Supervisor A, also sending contact information for up to five Supervisors that &lt;em&gt;it&lt;/em&gt; has in its membership lists (Supervisor A sends these introductions in its initial message, as well). In this way, Supervisors can both maintain and &lt;em&gt;grow&lt;/em&gt; their membership lists. In short order, Supervisor A will come to know of all the other Supervisors in the network, and they, too, will come to know of Supervisor A.</source>
          <target state="translated">비어 있지 않은 멤버십 목록이 주어지면 감독자는 해당 목록의 멤버가 아직 살아 있고 실행 중인지 확인하기 위해 검색을 시작할 수 있습니다. 감독자 A는 감독자 B에게 &quot;아직 거기 있나?&quot;라는 메시지를 보냅니다. 감독자 B는 경우 &lt;em&gt;입니다&lt;/em&gt; 사용할 수, 그것은 또한 최대 5 감독자의 연락처 정보를 전송, 관리자 A를 응답 할 것이다 &lt;em&gt;는&lt;/em&gt; 자사의 회원 목록에 있습니다 (관리자 A는 물론, 초기 메시지에서 이러한 소개를 보낸다). 이러한 방식으로 감독자는 멤버십 목록을 유지하고 &lt;em&gt;늘릴&lt;/em&gt; 수 있습니다 . 곧 수퍼바이저 A는 네트워크의 다른 모든 수퍼바이저를 알게되고 그들 역시 수퍼바이저 A를 알게됩니다.</target>
        </trans-unit>
        <trans-unit id="67bb4d0fe70eb2f4e030714e8730f6a5a892a138" translate="yes" xml:space="preserve">
          <source>Given the following code structure under &lt;code&gt;'foo'&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;'foo'&lt;/code&gt; 아래에 다음 코드 구조가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="f933f46a5a77bfefa8a5f38ed83eefeec8838fa4" translate="yes" xml:space="preserve">
          <source>Given the following code structure, which has an override attribute:</source>
          <target state="translated">재정의 속성이있는 다음 코드 구조가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2697f771a6cea46253b23224000de0dda772fdc0" translate="yes" xml:space="preserve">
          <source>Given the following code structure:</source>
          <target state="translated">다음과 같은 코드 구조가 주어집니다.</target>
        </trans-unit>
        <trans-unit id="d318dc697865ef1773ad16a8a4115298a2d1ae62" translate="yes" xml:space="preserve">
          <source>Gives a list of OS disk names for all the virtual machines in the resource group.</source>
          <target state="translated">리소스 그룹의 모든 가상 머신에 대한 OS 디스크 이름 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="859c09914f73b90a35cda7a21352ab8c00e05bb2" translate="yes" xml:space="preserve">
          <source>Gives a list of all the subnet names in the virtual network.</source>
          <target state="translated">가상 네트워크의 모든 서브넷 이름 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="27d4640cf5fa4204534f9a9ac3c13f84681baa7f" translate="yes" xml:space="preserve">
          <source>Gives a list of all the virtual machine names in the resource group.</source>
          <target state="translated">리소스 그룹의 모든 가상 머신 이름 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a424377a7aa5c6975892c3deb2e86256d7887d58" translate="yes" xml:space="preserve">
          <source>Gives a list of all the virtual network names in the resource group.</source>
          <target state="translated">리소스 그룹의 모든 가상 네트워크 이름 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d776a975e3eb3e3cd5cd71750a471360b65be492" translate="yes" xml:space="preserve">
          <source>Gives a list of data disks for all the virtual machines in the resource group.</source>
          <target state="translated">리소스 그룹의 모든 가상 머신에 대한 데이터 디스크 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3f7e2a93d9e85aef8d97342005ec5613fc0829d5" translate="yes" xml:space="preserve">
          <source>Global Endpoints</source>
          <target state="translated">글로벌 엔드 포인트</target>
        </trans-unit>
        <trans-unit id="deee1c826dbed9bc411c827e5e3b567d9463ed89" translate="yes" xml:space="preserve">
          <source>Global Log Level</source>
          <target state="translated">글로벌 로그 수준</target>
        </trans-unit>
        <trans-unit id="97fa0a5d6f5cbf067a98b0bd198984e13706b234" translate="yes" xml:space="preserve">
          <source>Global Options</source>
          <target state="translated">글로벌 옵션</target>
        </trans-unit>
        <trans-unit id="a6407cb2d1238f904e30de9a1de83ed6990f6d2a" translate="yes" xml:space="preserve">
          <source>Global Permissions</source>
          <target state="translated">글로벌 권한</target>
        </trans-unit>
        <trans-unit id="431d3ee9d814eff258b6e24e9a406500b57f7f18" translate="yes" xml:space="preserve">
          <source>Global configuration</source>
          <target state="translated">글로벌 구성</target>
        </trans-unit>
        <trans-unit id="2a46895dfdc046ba23b6fda3770c7be3a82a133b" translate="yes" xml:space="preserve">
          <source>Globally sets the default of the &lt;code&gt;clear_sources&lt;/code&gt; property on the &lt;code&gt;gem_package&lt;/code&gt; and &lt;code&gt;chef_gem&lt;/code&gt; resources. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">전 세계적으로는 기본 설정 &lt;code&gt;clear_sources&lt;/code&gt; 의 온 재산 &lt;code&gt;gem_package&lt;/code&gt; 및 &lt;code&gt;chef_gem&lt;/code&gt; 자원을. 기본값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="2e0b45f2a456e8db55f08d7b65e87593a3e9a140" translate="yes" xml:space="preserve">
          <source>Go</source>
          <target state="translated">Go</target>
        </trans-unit>
        <trans-unit id="f92ca6a0b2ce33ee32376dd3f69de230343105f8" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;http://www.chef.io/chef/install&quot;&gt;http://www.chef.io/chef/install&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.chef.io/chef/install&quot;&gt;http://www.chef.io/chef/install로&lt;/a&gt; 이동 하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa3a81c8e5756eb7987351bc5efb73cbe0a252e8" translate="yes" xml:space="preserve">
          <source>Go to Developer settings and click &lt;strong&gt;Personal access tokens&lt;/strong&gt;.</source>
          <target state="translated">개발자 설정으로 이동하여 &lt;strong&gt;개인 액세스 토큰을&lt;/strong&gt; 클릭 합니다.</target>
        </trans-unit>
        <trans-unit id="94cb003ea11f258568bf6d0f97e92ea1356be893" translate="yes" xml:space="preserve">
          <source>Go to the &lt;a href=&quot;https://manage.chef.io/signup&quot;&gt;Hosted Chef signup page&lt;/a&gt; and enter the requested information to create your account.</source>
          <target state="translated">&lt;a href=&quot;https://manage.chef.io/signup&quot;&gt;Hosted Chef 가입 페이지로&lt;/a&gt; 이동 하고 요청 된 정보를 입력하여 계정을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3e82341bd077d3654e0f998f0f356b4170aadc2a" translate="yes" xml:space="preserve">
          <source>Go to the following URL: &lt;a href=&quot;https://help.github.com/articles/set-up-git&quot;&gt;https://help.github.com/articles/set-up-git&lt;/a&gt;.</source>
          <target state="translated">다음 URL로 이동 &lt;a href=&quot;https://help.github.com/articles/set-up-git&quot;&gt;https://help.github.com/articles/set-up-git&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="607de9ae5c264b38835b7c927290945a26fb114c" translate="yes" xml:space="preserve">
          <source>Go to your storage account</source>
          <target state="translated">스토리지 계정으로 이동</target>
        </trans-unit>
        <trans-unit id="539e785fa4eaf6e19d28256725c74caf8e46ded6" translate="yes" xml:space="preserve">
          <source>Go to your test node and install the Chef Infra Client from an elevated PowerShell window, or use &lt;code&gt;sudo&lt;/code&gt; if you are installing it from MacOS. For additional information, see the &lt;a href=&quot;../../chef_install_script/index&quot;&gt;Chef Install Script&lt;/a&gt; documentation.</source>
          <target state="translated">테스트 노드로 이동하여 관리자 권한 PowerShell 창에서 Chef Infra Client를 설치하거나 MacOS에서 설치하는 경우 &lt;code&gt;sudo&lt;/code&gt; 를 사용 합니다. 추가 정보는 &lt;a href=&quot;../../chef_install_script/index&quot;&gt;Chef 설치 스크립트&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fbcd5f566969c2c5a948559960375f38813dc60" translate="yes" xml:space="preserve">
          <source>Gone. Unable to update private key.</source>
          <target state="translated">지나간. 개인 키를 업데이트 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5c3ef6766b36b7e8534a40881ffe04fa3651ffbb" translate="yes" xml:space="preserve">
          <source>Good cookbook examples:</source>
          <target state="translated">좋은 요리 책 예 :</target>
        </trans-unit>
        <trans-unit id="04c04dfd51d0bbc10a80798976a51285c87fe50a" translate="yes" xml:space="preserve">
          <source>Google Analytics</source>
          <target state="translated">Google Analytics</target>
        </trans-unit>
        <trans-unit id="54df5fe34f7778e8cf2061c8e1a2379fc5c9170a" translate="yes" xml:space="preserve">
          <source>Google Cloud Platform Account Scanning with Chef Automate</source>
          <target state="translated">Chef Automate를 사용한 Google Cloud Platform 계정 스캔</target>
        </trans-unit>
        <trans-unit id="19120141ccf3d864ad6be70ac78217464a2345a3" translate="yes" xml:space="preserve">
          <source>Google Cloud Platform is a suite of cloud computing services that run on the same infrastructure that Google uses internally for its end-user products, such as Google Search and YouTube. Alongside a set of management tools, it provides a series of modular cloud services including computing, data storage, data analytics, and machine learning. This page outlines the different tools that can be used to integrate Chef with the Google Cloud Platform.</source>
          <target state="translated">Google Cloud Platform은 Google이 Google 검색 및 YouTube와 같은 최종 사용자 제품에 내부적으로 사용하는 것과 동일한 인프라에서 실행되는 클라우드 컴퓨팅 서비스 모음입니다. 일련의 관리 도구와 함께 컴퓨팅, 데이터 스토리지, 데이터 분석 및 기계 학습을 포함한 일련의 모듈 식 클라우드 서비스를 제공합니다. 이 페이지에서는 Chef를 Google Cloud Platform과 통합하는 데 사용할 수있는 다양한 도구를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2a699f8246ac2faf2f740e048a3e96f2a5220328" translate="yes" xml:space="preserve">
          <source>Google Compute Engine is a cloud hosting platform that offers scalable and flexible virtual machine computing. The &lt;code&gt;knife google&lt;/code&gt; subcommand is used to manage API-driven cloud servers that are hosted by Google Compute Engine.</source>
          <target state="translated">Google Compute Engine은 확장 가능하고 유연한 가상 머신 컴퓨팅을 제공하는 클라우드 호스팅 플랫폼입니다. &lt;code&gt;knife google&lt;/code&gt; 하위 명령은 구글 컴퓨 트 엔진에 의해 호스팅되는 API 기반의 클라우드 서버를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9bf7351ae104211986ee317583e3a51c3a73817a" translate="yes" xml:space="preserve">
          <source>Google Container Registry</source>
          <target state="translated">Google Container Registry</target>
        </trans-unit>
        <trans-unit id="a53dd978050d9497d6a36d5382a3988e494a817e" translate="yes" xml:space="preserve">
          <source>Google Container Registry (GCR)</source>
          <target state="translated">Google Container Registry (GCR)</target>
        </trans-unit>
        <trans-unit id="2825b43603ff24b5dcec61c2dafd21d74e41b45e" translate="yes" xml:space="preserve">
          <source>Google organization policies can restrict certain GCP services. For more information see &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/organization-policy/understanding-constraints&quot;&gt;https://cloud.google.com/resource-manager/docs/organization-policy/understanding-constraints&lt;/a&gt;</source>
          <target state="translated">Google 조직 정책은 특정 GCP 서비스를 제한 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/organization-policy/understanding-constraints&quot;&gt;https://cloud.google.com/resource-manager/docs/organization-policy/understanding-constraints를&lt;/a&gt; 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="7fcea8011036ba5078db8d7b4e1889d04b0b6826" translate="yes" xml:space="preserve">
          <source>Gorilla</source>
          <target state="translated">Gorilla</target>
        </trans-unit>
        <trans-unit id="48247ce2ff6d2cc9f2a7a1f368573d2a36f128d0" translate="yes" xml:space="preserve">
          <source>Gorilla Documentation</source>
          <target state="translated">Gorilla 문서</target>
        </trans-unit>
        <trans-unit id="bbba5f57794510e5444fd86d9974ce2e0d16e5ff" translate="yes" xml:space="preserve">
          <source>Gorilla is an &lt;a href=&quot;https://github.com/1dustindavis/gorilla&quot;&gt;open source project&lt;/a&gt;. It is a set of tools for managing applications on Windows computers.</source>
          <target state="translated">Gorilla는 &lt;a href=&quot;https://github.com/1dustindavis/gorilla&quot;&gt;오픈 소스 프로젝트&lt;/a&gt; 입니다. Windows 컴퓨터에서 응용 프로그램을 관리하기위한 도구 집합입니다.</target>
        </trans-unit>
        <trans-unit id="3bc02c02992959bd85d47e83013b1e925c3570af" translate="yes" xml:space="preserve">
          <source>Gossip</source>
          <target state="translated">Gossip</target>
        </trans-unit>
        <trans-unit id="0a1436367d3c32eb3d6ccda259911b5619b34d10" translate="yes" xml:space="preserve">
          <source>Graceful Transitions</source>
          <target state="translated">우아한 전환</target>
        </trans-unit>
        <trans-unit id="27108962425f60d82f0c8d09592d29b271e0b4ec" translate="yes" xml:space="preserve">
          <source>Gracefully accept constructive criticism</source>
          <target state="translated">건설적인 비판을 우아하게 받아들이십시오</target>
        </trans-unit>
        <trans-unit id="98b8f8f1f5b1ed75fb03e9f00dc77c796facfb48" translate="yes" xml:space="preserve">
          <source>Gracefully terminate the Habitat Supervisor and all of its running services</source>
          <target state="translated">Habitat Supervisor 및 실행중인 모든 서비스를 정상적으로 종료합니다.</target>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Grammar</target>
        </trans-unit>
        <trans-unit id="c02329c48f348eb633688f33c499b18b31dcb947" translate="yes" xml:space="preserve">
          <source>Grant</source>
          <target state="translated">Grant</target>
        </trans-unit>
        <trans-unit id="220c98deb1482e5b5361b123b929ee8e4ac1e18d" translate="yes" xml:space="preserve">
          <source>Graphite</source>
          <target state="translated">Graphite</target>
        </trans-unit>
        <trans-unit id="4288130658d66f05be05bfa6ba67696ede548920" translate="yes" xml:space="preserve">
          <source>Graylog2 GELF</source>
          <target state="translated">Graylog2 GELF</target>
        </trans-unit>
        <trans-unit id="599294f23ef04a992bc69ba465066344c3c7cf34" translate="yes" xml:space="preserve">
          <source>Greater than</source>
          <target state="translated">보다 큰</target>
        </trans-unit>
        <trans-unit id="a2919540599e9df0beb579ca8d46bdc142657611" translate="yes" xml:space="preserve">
          <source>Greater than or equal to</source>
          <target state="translated">크거나 같음</target>
        </trans-unit>
        <trans-unit id="d4c2485379cd22756ddc3555e69ff90784a92ddb" translate="yes" xml:space="preserve">
          <source>Greater than:</source>
          <target state="translated">보다 큰:</target>
        </trans-unit>
        <trans-unit id="171a0606f7c74580fd3982cf57c49d604104120a" translate="yes" xml:space="preserve">
          <source>Group</source>
          <target state="translated">Group</target>
        </trans-unit>
        <trans-unit id="df5f737213a0155fea22e87a8d8452056836f477" translate="yes" xml:space="preserve">
          <source>Group Account</source>
          <target state="translated">그룹 계정</target>
        </trans-unit>
        <trans-unit id="5da4477f788802259068cf519051fcde6c62c634" translate="yes" xml:space="preserve">
          <source>Group Accounts</source>
          <target state="translated">그룹 계정</target>
        </trans-unit>
        <trans-unit id="e995c401b234a688359a283f7f55d2f454524959" translate="yes" xml:space="preserve">
          <source>Group Search</source>
          <target state="translated">그룹 검색</target>
        </trans-unit>
        <trans-unit id="7bc785e7bd93eef63d1b9c39d4be4dbfe70ad402" translate="yes" xml:space="preserve">
          <source>Group(s) to provide sudo privileges to. This property accepts either an array or a comma separated list. Leading % on group names is optional.</source>
          <target state="translated">sudo 권한을 제공 할 그룹입니다. 이 속성은 배열 또는 쉼표로 구분 된 목록을 허용합니다. 그룹 이름의 선행 %는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="33491e28c62744ec32e8ac766a0e2d110e232ce2" translate="yes" xml:space="preserve">
          <source>Grouped Events</source>
          <target state="translated">그룹화 된 이벤트</target>
        </trans-unit>
        <trans-unit id="ae9629f4ebb82c6331c0809fa9a0e54b00e578e6" translate="yes" xml:space="preserve">
          <source>Groups</source>
          <target state="translated">Groups</target>
        </trans-unit>
        <trans-unit id="650788b32835503c074f7e9dd3734310b027cc69" translate="yes" xml:space="preserve">
          <source>Groups can also be specified inline:</source>
          <target state="translated">그룹을 인라인으로 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8c227681ad4ce3fb3bbc8841e1c0dca0c33cd70" translate="yes" xml:space="preserve">
          <source>Groups can be defined via blocks:</source>
          <target state="translated">그룹은 블록을 통해 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03032b10666394badfd1a09f44a3c79861da2c42" translate="yes" xml:space="preserve">
          <source>Growl</source>
          <target state="translated">Growl</target>
        </trans-unit>
        <trans-unit id="c8dd1f8f0f8d0680c4b518537bf7d503259f91ca" translate="yes" xml:space="preserve">
          <source>Grub is a boot loader on the Linux platform used to load and then transfer control to an operating system kernel, after which that kernel initializes the rest of the operating system. Use the &lt;code&gt;grub_conf&lt;/code&gt; Chef InSpec audit resource to test boot loader configuration settings that are defined in the &lt;code&gt;grub.conf&lt;/code&gt; configuration file.</source>
          <target state="translated">Grub은 운영 체제 커널을로드 한 다음 제어를 전송하는 데 사용되는 Linux 플랫폼의 부트 로더입니다. 그런 다음 해당 커널은 나머지 운영 체제를 초기화합니다. &lt;code&gt;grub_conf&lt;/code&gt; Chef InSpec 감사 리소스를 사용하여 &lt;code&gt;grub.conf&lt;/code&gt; 구성 파일에 정의 된 부트 로더 구성 설정을 테스트 하십시오.</target>
        </trans-unit>
        <trans-unit id="dcf61cbfe7658ab735c77b095fa93aac1cfaedfe" translate="yes" xml:space="preserve">
          <source>Guard Interpreter</source>
          <target state="translated">경비 통역</target>
        </trans-unit>
        <trans-unit id="5cd655bf4877b3f364e7e81e852c43660089692e" translate="yes" xml:space="preserve">
          <source>Guard Interpreters</source>
          <target state="translated">경비 통역</target>
        </trans-unit>
        <trans-unit id="67de3c63a9bd94b74bfc86944368ab7bcdf6d849" translate="yes" xml:space="preserve">
          <source>Guards</source>
          <target state="translated">Guards</target>
        </trans-unit>
        <trans-unit id="9667e8ea57916e541aa28607221b2c49e22fd76d" translate="yes" xml:space="preserve">
          <source>H1</source>
          <target state="translated">H1</target>
        </trans-unit>
        <trans-unit id="462283b75d291bb64865b6b85994f212b2581e9c" translate="yes" xml:space="preserve">
          <source>H2</source>
          <target state="translated">H2</target>
        </trans-unit>
        <trans-unit id="21193cf4b299d4d4826bc09e939b2615cbc03460" translate="yes" xml:space="preserve">
          <source>H3</source>
          <target state="translated">H3</target>
        </trans-unit>
        <trans-unit id="19a441149160edb8a63d1a158c6e6c73e6189efa" translate="yes" xml:space="preserve">
          <source>H4</source>
          <target state="translated">H4</target>
        </trans-unit>
        <trans-unit id="e31986591eda0d62f361d34ac7ec90221e290c27" translate="yes" xml:space="preserve">
          <source>HAB_CACHE_ARTIFACT_PATH</source>
          <target state="translated">HAB_CACHE_ARTIFACT_PATH</target>
        </trans-unit>
        <trans-unit id="9de47dd2626c293e14c7b534cad7667bcc3a8bb6" translate="yes" xml:space="preserve">
          <source>HAB_CACHE_SRC_PATH</source>
          <target state="translated">HAB_CACHE_SRC_PATH</target>
        </trans-unit>
        <trans-unit id="6eb5369555a7625d84c5d81418d8ebd4673a7f28" translate="yes" xml:space="preserve">
          <source>HAB_PKG_PATH</source>
          <target state="translated">HAB_PKG_PATH</target>
        </trans-unit>
        <trans-unit id="ddb49a34c7e46c6d0d2803fd8259d8ec6ce90971" translate="yes" xml:space="preserve">
          <source>HBASE</source>
          <target state="translated">HBASE</target>
        </trans-unit>
        <trans-unit id="7138a51661947b19b5088da5a2bfede2876f49b9" translate="yes" xml:space="preserve">
          <source>HEAD</source>
          <target state="translated">HEAD</target>
        </trans-unit>
        <trans-unit id="ac2b3cf0ea878088962865028e3baa2da38c4730" translate="yes" xml:space="preserve">
          <source>HEADER_FIELD</source>
          <target state="translated">HEADER_FIELD</target>
        </trans-unit>
        <trans-unit id="046a037390e26e3bd03e8d7210f8b85c9e60a27f" translate="yes" xml:space="preserve">
          <source>HG</source>
          <target state="translated">HG</target>
        </trans-unit>
        <trans-unit id="5c60b7f3dcc68e7afd53ebc05af61fb37fc78696" translate="yes" xml:space="preserve">
          <source>HIVE_WEBHCAT</source>
          <target state="translated">HIVE_WEBHCAT</target>
        </trans-unit>
        <trans-unit id="4e2ba50ceeca382f63626bd892fb3b9cd9f4607f" translate="yes" xml:space="preserve">
          <source>HOWEVER, very small contributions such as fixing spelling errors, where the content is small enough to not be considered intellectual property, can be submitted by a contributor as a patch, without a DCO sign-off. If you submit an obvious fix without a DCO sign-off, then you are agreeing that your submission is not independently copyrightable. The purpose of this exception is to lower the barrier for new contributors to make contributions while retaining the integrity of the project and our community.</source>
          <target state="translated">그러나 콘텐츠가 지적 재산으로 간주되지 않을만큼 작은 철자 오류 수정과 같은 아주 작은 기여는 DCO 승인없이 기고자가 패치로 제출할 수 있습니다. DCO 승인없이 명백한 수정 사항을 제출하는 경우 제출 한 내용이 독립적으로 저작권이 없음에 동의하는 것입니다. 이 예외의 목적은 프로젝트와 커뮤니티의 무결성을 유지하면서 새로운 기여자가 기여할 수있는 장벽을 낮추는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f3016496db2ad1fdb08b4956d98b96972580e19d" translate="yes" xml:space="preserve">
          <source>HP-UX. All platform variants of HP-UX return &lt;code&gt;hpux&lt;/code&gt;.</source>
          <target state="translated">HP-UX. HP-UX의 모든 플랫폼 변형은 &lt;code&gt;hpux&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="bada21b96a1a0c20cb227d7e2e38c648af233185" translate="yes" xml:space="preserve">
          <source>HSM</source>
          <target state="translated">HSM</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="e50eef21841c1ceeaa97fcb79b07227af8c090c0" translate="yes" xml:space="preserve">
          <source>HTTP 500 is a non-specific error message. The full error message for the error Chef Infra Client is receiving can be found in one of the following log files:</source>
          <target state="translated">HTTP 500은 특정하지 않은 오류 메시지입니다. Chef Infra Client가 수신하는 오류에 대한 전체 오류 메시지는 다음 로그 파일 중 하나에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a09d4add5ce36427f6386470b1f5c9f99882c2d5" translate="yes" xml:space="preserve">
          <source>HTTP request body. A request body is allowed only if the HTTP method is POST or PUT. It will result in invalid argument error to set a body on a job with an incompatible HttpMethod.</source>
          <target state="translated">HTTP 요청 본문. 요청 본문은 HTTP 메서드가 POST 또는 PUT 인 경우에만 허용됩니다. 호환되지 않는 HttpMethod가있는 작업에 본문을 설정하면 잘못된 인수 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="21ccff43083a539435240f109d79cbaa1bfd152b" translate="yes" xml:space="preserve">
          <source>HTTP request body. A request body is allowed only if the HTTP method is POST, PUT, or PATCH. It is an error to set body on a job with an incompatible HttpMethod.</source>
          <target state="translated">HTTP 요청 본문. 요청 본문은 HTTP 메소드가 POST, PUT 또는 PATCH 인 경우에만 허용됩니다. 호환되지 않는 HttpMethod가있는 작업에 본문을 설정하는 것은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="0bbdaee6ef47a2f929c89ef05643fd2ccc6f2738" translate="yes" xml:space="preserve">
          <source>HTTP request headers. This map contains the header field names and values. Headers can be set when the job is created.</source>
          <target state="translated">HTTP 요청 헤더. 이 맵에는 헤더 필드 이름과 값이 포함됩니다. 작업이 생성 될 때 헤더를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db2bb0ae832922609a1db1950c8dfd256d16a83c" translate="yes" xml:space="preserve">
          <source>HTTP target. If the job providers a http_target the cron will send a request to the targeted url</source>
          <target state="translated">HTTP 대상. 작업 공급자가 http_target이면 크론은 대상 URL로 요청을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="9f041fc4517fb03cd6a78bdf8d2ca04be4046a43" translate="yes" xml:space="preserve">
          <source>HTTP threads that responds to monitoring and leadership status requests from HAProxy.</source>
          <target state="translated">HAProxy의 모니터링 및 리더십 상태 요청에 응답하는 HTTP 스레드입니다.</target>
        </trans-unit>
        <trans-unit id="4bad4230eabe60df9b8ef1966ad6ea3871b50c61" translate="yes" xml:space="preserve">
          <source>HTTP2</source>
          <target state="translated">HTTP2</target>
        </trans-unit>
        <trans-unit id="f52698c28f0d2036450e02a85451ee4f5be02442" translate="yes" xml:space="preserve">
          <source>HTTPS</source>
          <target state="translated">HTTPS</target>
        </trans-unit>
        <trans-unit id="04663097731176b056a8ac1ee2cf79232ab7ed6f" translate="yes" xml:space="preserve">
          <source>HTTPS connection</source>
          <target state="translated">HTTPS 연결</target>
        </trans-unit>
        <trans-unit id="9aab6fba95f5d8ba32dc48778b9cfdf62ab2192d" translate="yes" xml:space="preserve">
          <source>HTTPS connections are supported by providing the &lt;code&gt;--ssl&lt;/code&gt; flag.</source>
          <target state="translated">HTTPS 연결은 &lt;code&gt;--ssl&lt;/code&gt; 플래그 를 제공하여 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="0047c4ed11b73ccb1e763ca8dbbbbb33dfdcad1a" translate="yes" xml:space="preserve">
          <source>HTTPS for Chef Automate webui</source>
          <target state="translated">Chef Automate 웹 UI 용 HTTPS</target>
        </trans-unit>
        <trans-unit id="0dba9dd62e8de10148bd0d4a5232cd0b8e4c5769" translate="yes" xml:space="preserve">
          <source>HTTP_COOKIE</source>
          <target state="translated">HTTP_COOKIE</target>
        </trans-unit>
        <trans-unit id="c0145915e6ed4a65d709140c556d6a149c23a694" translate="yes" xml:space="preserve">
          <source>HabAPIError</source>
          <target state="translated">HabAPIError</target>
        </trans-unit>
        <trans-unit id="cc33d2e81fbd9d7b0b40480119afcfc84c6459de" translate="yes" xml:space="preserve">
          <source>HabCommandError</source>
          <target state="translated">HabCommandError</target>
        </trans-unit>
        <trans-unit id="750901ce53ec4404dd3a2d1f4112afd2a2b9bb07" translate="yes" xml:space="preserve">
          <source>HabUserAccessError</source>
          <target state="translated">HabUserAccessError</target>
        </trans-unit>
        <trans-unit id="eebe662bd8405e55eec01ca17aec369cb686e4e6" translate="yes" xml:space="preserve">
          <source>Habitat</source>
          <target state="translated">Habitat</target>
        </trans-unit>
        <trans-unit id="d53ab40f3d7026ef96c3b2bca6306f8bb04cdb2a" translate="yes" xml:space="preserve">
          <source>Habitat Services</source>
          <target state="translated">서식지 서비스</target>
        </trans-unit>
        <trans-unit id="ddbe059cd0624780f7099fdc33f2ecd2c40e8629" translate="yes" xml:space="preserve">
          <source>Habitat does not support changing the &lt;code&gt;PID&lt;/code&gt; of the underlying service in any lifecycle hook. If part of a service&amp;rsquo;s reconfiguration relies on changing the &lt;code&gt;PID&lt;/code&gt;, you should not provide a &lt;code&gt;reconfigure&lt;/code&gt; hook, and instead, use the default behavior of restarting the service for reconfiguration.</source>
          <target state="translated">Habitat은 라이프 사이클 후크에서 기본 서비스 의 &lt;code&gt;PID&lt;/code&gt; 변경을 지원하지 않습니다 . 서비스 재구성의 일부가 &lt;code&gt;PID&lt;/code&gt; 변경에 의존 하는 경우 &lt;code&gt;reconfigure&lt;/code&gt; 후크를 제공하지 말고 대신 재구성을 위해 서비스를 다시 시작하는 기본 동작을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7ce0321e67c950036709e04d813eaa2add00bc82" translate="yes" xml:space="preserve">
          <source>Habitat exposes certain data via the CLI, and other data via the HTTP Gateway API.</source>
          <target state="translated">Habitat은 CLI를 통해 특정 데이터를 노출하고 HTTP Gateway API를 통해 기타 데이터를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="8193c583b5f0c19d23cfeb0ae727b380e2e433d7" translate="yes" xml:space="preserve">
          <source>Habitat exposes certain data via the CLI, and other data via the HTTP Gateway API. This resource is not available via the API; you must provide CLI credentials to use the resource. See the &lt;a href=&quot;https://github.com/inspec/train-habitat&quot;&gt;train-habitat&lt;/a&gt; documentation for more details.</source>
          <target state="translated">Habitat은 CLI를 통해 특정 데이터를 노출하고 HTTP Gateway API를 통해 기타 데이터를 노출합니다. 이 리소스는 API를 통해 사용할 수 없습니다. 리소스를 사용하려면 CLI 자격 증명을 제공해야합니다. 자세한 내용은 &lt;a href=&quot;https://github.com/inspec/train-habitat&quot;&gt;train-habitat&lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="17aad61c643491548d3f7a4717ef6ce8953688aa" translate="yes" xml:space="preserve">
          <source>Habitat exposes certain data via the CLI, and other data via the HTTP Gateway API. To enjoy the full functionality of this resource, use a set of credentials that includes the API. Limited data is available by CLI. See the &lt;a href=&quot;https://github.com/inspec/train-habitat&quot;&gt;train-habitat&lt;/a&gt; documentation for more details.</source>
          <target state="translated">Habitat은 CLI를 통해 특정 데이터를 노출하고 HTTP Gateway API를 통해 기타 데이터를 노출합니다. 이 리소스의 모든 기능을 활용하려면 API가 포함 된 자격 증명 집합을 사용하십시오. CLI에서는 제한된 데이터를 사용할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://github.com/inspec/train-habitat&quot;&gt;train-habitat&lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7a8dc4d73f5784f26de453d0eef4d902e3f2fe61" translate="yes" xml:space="preserve">
          <source>Habitat reserves some names for internal use. You can set all of these values in your plan and use them as variables in your Habitat code.</source>
          <target state="translated">Habitat은 내부 사용을 위해 일부 이름을 예약합니다. 계획에서 이러한 모든 값을 설정하고 Habitat 코드에서 변수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1192e3314d36654b05fd186370a4bbeb45bbc6a4" translate="yes" xml:space="preserve">
          <source>Habitat will see a configuration change, automatically re-run your profile, and skip the control you specified in the &lt;code&gt;my_config.toml&lt;/code&gt; file.</source>
          <target state="translated">Habitat은 구성 변경 사항을 확인하고 자동으로 프로필을 다시 실행하며 &lt;code&gt;my_config.toml&lt;/code&gt; 파일에 지정한 제어를 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="94ab996087b4b662b17424f2c2d517e5cc808b8f" translate="yes" xml:space="preserve">
          <source>Had the services been in different groups, the configuration change would not have applied to both of them (it was targeted at &lt;code&gt;redis.prod&lt;/code&gt;). If the Supervisors has not been in gossip communication (achieved here through the use of the &lt;code&gt;--peer&lt;/code&gt; option when Supervisor B was started), the configuration rumor (injected into Supervisor A&amp;rsquo;s gossip network) would not have made it to &lt;code&gt;core/redis&lt;/code&gt; service running on Supervisor B.</source>
          <target state="translated">서비스가 다른 그룹에 있었다면 구성 변경이 두 그룹 모두에 적용되지 않았을 것입니다 ( &lt;code&gt;redis.prod&lt;/code&gt; 를 대상으로 함 ). 감독자가 가십 통신을하지 않았다면 ( 감독자 B가 시작될 때 &lt;code&gt;--peer&lt;/code&gt; 옵션을 사용하여 여기에서 달성 됨 ) 구성 루머 (감독자 A의 가십 네트워크에 주입 됨)가 &lt;code&gt;core/redis&lt;/code&gt; 서비스를 실행 하도록 만들지 않았을 것입니다. 감독자 B.</target>
        </trans-unit>
        <trans-unit id="2a82cdb2bf22193fd25a158d192b7b19e83646d2" translate="yes" xml:space="preserve">
          <source>Handle Failures</source>
          <target state="translated">실패 처리</target>
        </trans-unit>
        <trans-unit id="00c5cae612488cfa8115f9be1d61ad63d8ecf060" translate="yes" xml:space="preserve">
          <source>Handle cookbook_file and dnf_package resources in the same recipe</source>
          <target state="translated">동일한 레시피에서 cookbook_file 및 dnf_package 리소스 처리</target>
        </trans-unit>
        <trans-unit id="6dfabac50f072cacd7c2f5a20cd5861f960b3a13" translate="yes" xml:space="preserve">
          <source>Handle cookbook_file and package resources in the same recipe</source>
          <target state="translated">동일한 레시피에서 cookbook_file 및 패키지 리소스 처리</target>
        </trans-unit>
        <trans-unit id="be0212bf33313087973171061ef96d564becfb55" translate="yes" xml:space="preserve">
          <source>Handler</source>
          <target state="translated">Handler</target>
        </trans-unit>
        <trans-unit id="90f0cee7a78f4bbe8d8aa6ea2940690955d653fb" translate="yes" xml:space="preserve">
          <source>Handler DSL</source>
          <target state="translated">처리기 DSL</target>
        </trans-unit>
        <trans-unit id="cdbded94bcbae9390f7fbdcec1c8d417e99b5883" translate="yes" xml:space="preserve">
          <source>Handler Types</source>
          <target state="translated">처리기 유형</target>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="f7aa754afef944d41c295bad998a1e197b8a7d80" translate="yes" xml:space="preserve">
          <source>Handlers and Cookbooks</source>
          <target state="translated">핸들러와 요리 책</target>
        </trans-unit>
        <trans-unit id="9d9e5341305d3e1527d66eac79a63b7ff9880dac" translate="yes" xml:space="preserve">
          <source>Handling Incidents</source>
          <target state="translated">사고 처리</target>
        </trans-unit>
        <trans-unit id="5f594d409dc962d726b56cd6b1411419e0c478ce" translate="yes" xml:space="preserve">
          <source>Handling nodes reporting &lt;code&gt;partially_synced: true&lt;/code&gt;</source>
          <target state="translated">partial_synced를보고하는 노드 처리 &lt;code&gt;partially_synced: true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="665ab8be11af1a380a3b8a199e79d72ec7f43c9a" translate="yes" xml:space="preserve">
          <source>Happy Converging!</source>
          <target state="translated">행복한 수렴!</target>
        </trans-unit>
        <trans-unit id="d950f5d458bbc358c38552311f5b8aad8d00544e" translate="yes" xml:space="preserve">
          <source>Harassment comes in many forms, including but not limited to:</source>
          <target state="translated">괴롭힘은 다음을 포함하되 이에 국한되지 않는 다양한 형태로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5035594a9c0db183ef8b7b1af6e318460be9683e" translate="yes" xml:space="preserve">
          <source>Hard drive encryption</source>
          <target state="translated">하드 드라이브 암호화</target>
        </trans-unit>
        <trans-unit id="2048bb9a0fc4cb9a099820c30d66927c78d84dd5" translate="yes" xml:space="preserve">
          <source>Hard limits are maintained by the kernel and defines the maximum number of allowed file handles</source>
          <target state="translated">하드 제한은 커널에 의해 유지되며 허용되는 최대 파일 핸들 수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="b76ab65957a69ff57e8c72352794d437fd34c788" translate="yes" xml:space="preserve">
          <source>Hardware</source>
          <target state="translated">Hardware</target>
        </trans-unit>
        <trans-unit id="e3ecbfa37901fa0f91f3cd23d90f80cba503bd68" translate="yes" xml:space="preserve">
          <source>Hardware Requirements</source>
          <target state="translated">하드웨어 요구 사항</target>
        </trans-unit>
        <trans-unit id="91a35f9ab82b0673f83d6f3a09a00d205976b177" translate="yes" xml:space="preserve">
          <source>Hardware Requirements for Single-Host Installation</source>
          <target state="translated">단일 호스트 설치를위한 하드웨어 요구 사항</target>
        </trans-unit>
        <trans-unit id="0fb356db7983e251e1e5661a467a5dda7f1aa207" translate="yes" xml:space="preserve">
          <source>Has a dependency on the &lt;code&gt;ruby-prof&lt;/code&gt; gem, which is packaged as part of Chef and Chef Workstation.</source>
          <target state="translated">Chef 및 Chef Workstation의 일부로 패키지 된 &lt;code&gt;ruby-prof&lt;/code&gt; gem 에 대한 종속성 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="29f60059e22f3dd50bf372bb5b94c7fa3c98401c" translate="yes" xml:space="preserve">
          <source>Has a dependency on the &lt;code&gt;ruby-prof&lt;/code&gt; gem, which is packaged as part of Chef and the Chef development kit</source>
          <target state="translated">Chef 및 Chef 개발 키트의 일부로 패키지 된 &lt;code&gt;ruby-prof&lt;/code&gt; gem 에 종속됩니다.</target>
        </trans-unit>
        <trans-unit id="ded3f6857c06e0691edf844bf6ac52b4b5e85243" translate="yes" xml:space="preserve">
          <source>Has a package identifier of &lt;code&gt;core/hab-backline/0.56.0/20180322160653&lt;/code&gt;. In general, the &lt;code&gt;/&lt;/code&gt; characters in a package identifier become &lt;code&gt;-&lt;/code&gt; characters in an artifact name, and you drop the target info (i.e. &lt;code&gt;x86_64&lt;/code&gt;) and file extension. For the remainder of this guide, let&amp;rsquo;s assume that your fully-qualified package identifier is &lt;code&gt;core/hab-backline/0.56.0/20180322160653&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;core/hab-backline/0.56.0/20180322160653&lt;/code&gt; 패키지 식별자가 있습니다. 일반적으로 패키지 식별자 의 &lt;code&gt;/&lt;/code&gt; 문자 는 아티팩트 이름의 &lt;code&gt;-&lt;/code&gt; 문자 가되고 대상 정보 (예 : &lt;code&gt;x86_64&lt;/code&gt; ) 및 파일 확장자를 삭제합니다. 이 가이드의 나머지 부분에서는 정규화 된 패키지 식별자가 &lt;code&gt;core/hab-backline/0.56.0/20180322160653&lt;/code&gt; 이라고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="ac134935d7237ae61ebd1477e6afbd9695645f6e" translate="yes" xml:space="preserve">
          <source>Has read-only access by default</source>
          <target state="translated">기본적으로 읽기 전용 액세스 권한이 있습니다</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="694262b88f33568aaabfcae64ccbc02d7f0286c4" translate="yes" xml:space="preserve">
          <source>Hash is based on HTTP Cookie. This field describes a HTTP cookie that will be used as the hash key for the consistent hash load balancer. If the cookie is not present, it will be generated. This field is applicable if the sessionAffinity is set to HTTP_COOKIE.</source>
          <target state="translated">해시는 HTTP 쿠키를 기반으로합니다. 이 필드는 일관된 해시로드 밸런서의 해시 키로 사용될 HTTP 쿠키를 설명합니다. 쿠키가 없으면 생성됩니다. 이 필드는 sessionAffinity가 HTTP_COOKIE로 설정된 경우 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fb24371cfa1adef22d7b34ee4e0b9525584a240e" translate="yes" xml:space="preserve">
          <source>Hash of X509 Extensions entries, in format &lt;code&gt;{ 'keyUsage' =&amp;gt; { 'values' =&amp;gt; %w( keyEncipherment digitalSignature), 'critical' =&amp;gt; true } }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ 'keyUsage' =&amp;gt; { 'values' =&amp;gt; %w( keyEncipherment digitalSignature), 'critical' =&amp;gt; true } }&lt;/code&gt; 형식의 X509 확장 항목의 해시 .</target>
        </trans-unit>
        <trans-unit id="e7ac85674b39259ce3fc8bfa50c71e1e37cf29a6" translate="yes" xml:space="preserve">
          <source>Hash of the shared secret.</source>
          <target state="translated">공유 비밀의 해시.</target>
        </trans-unit>
        <trans-unit id="577d3eb449cdaa489cb45aef1db0f84eea1f14e9" translate="yes" xml:space="preserve">
          <source>Hash the hostname and addresses in the ssh_known_hosts file for privacy.</source>
          <target state="translated">개인 정보 보호를 위해 ssh_known_hosts 파일에서 호스트 이름과 주소를 해시하십시오.</target>
        </trans-unit>
        <trans-unit id="7011fd19a12a61e05f68652428adb06b84e5cd2b" translate="yes" xml:space="preserve">
          <source>Hash type was added in Chef client 12.14.</source>
          <target state="translated">해시 유형이 Chef 클라이언트 12.14에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="efa40f2fad4c416fab28539c4eee57fd595d8157" translate="yes" xml:space="preserve">
          <source>Hash. Returns a set of options that can be passed directly to &lt;code&gt;habitat_service&lt;/code&gt; (singular) to load an individual service for in-depth analysis.</source>
          <target state="translated">해시시. 심층 분석을 위해 개별 서비스를로드 하기 위해 &lt;code&gt;habitat_service&lt;/code&gt; (단일)에 직접 전달할 수있는 옵션 세트를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0393bd5b2d867255ea30c5a5c4bc74aeccd165bc" translate="yes" xml:space="preserve">
          <source>Have an unprivileged user (for example: &lt;code&gt;opscode&lt;/code&gt;) be the owner of the &lt;code&gt;deploy&lt;/code&gt; directory and another unprivileged user (for example: &lt;code&gt;opscodeapp&lt;/code&gt;) run the application. Most often, this is the solution that works best</source>
          <target state="translated">권한이없는 사용자 (예 : &lt;code&gt;opscode&lt;/code&gt; )가 &lt;code&gt;deploy&lt;/code&gt; 디렉토리 의 소유자가되고 권한이없는 다른 사용자 (예 : &lt;code&gt;opscodeapp&lt;/code&gt; )가 애플리케이션을 실행하게하십시오. 대부분이 솔루션이 가장 효과적입니다</target>
        </trans-unit>
        <trans-unit id="43f5d8a3934256cbc91b18bc8d4ff0a2b4f62c2c" translate="yes" xml:space="preserve">
          <source>Have direct logins disabled, as indicated by an asterisk (&lt;code&gt;*&lt;/code&gt;)</source>
          <target state="translated">별표 ( &lt;code&gt;*&lt;/code&gt; ) 로 표시된대로 직접 로그인을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="916fa10d5937c532a7e5aaf4f519121855e10e34" translate="yes" xml:space="preserve">
          <source>Have files been changed?</source>
          <target state="translated">파일이 변경 되었습니까?</target>
        </trans-unit>
        <trans-unit id="94965823c26b9009c23c6e56303e4927b1969094" translate="yes" xml:space="preserve">
          <source>Have the target branch (usually master) of a Bitbucket project repository be managed by Workflow. When a change is approved in Workflow, it will perform the merge in Bitbucket</source>
          <target state="translated">Workflow에서 Bitbucket 프로젝트 저장소의 대상 분기 (일반적으로 마스터)를 관리하도록합니다. Workflow에서 변경이 승인되면 Bitbucket에서 병합을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3dcfd4f12e2d7bd08705a94752042988b8fbeba7" translate="yes" xml:space="preserve">
          <source>Have the target branch (usually master) of your GitHub project repository managed by Workflow. When a change is approved in Workflow, it will perform the merge in GitHub.</source>
          <target state="translated">워크 플로에서 관리하는 GitHub 프로젝트 저장소의 대상 브랜치 (일반적으로 마스터)를 갖습니다. Workflow에서 변경이 승인되면 GitHub에서 병합을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="20ee09e68e100ade42a51b245948cfb81ed30ea5" translate="yes" xml:space="preserve">
          <source>Have the user log into the Chef Automate web UI and add their SSH public key to their profile.</source>
          <target state="translated">사용자가 Chef Automate 웹 UI에 로그인하고 SSH 공개 키를 프로필에 추가하도록합니다.</target>
        </trans-unit>
        <trans-unit id="a63c054b48a739a4f4ffbc85abdd4e2bf35facb1" translate="yes" xml:space="preserve">
          <source>Have the user that you want to add clone the repo for the project you want them to join. Ensure that they have write permissions to the repo if you want to allow them to submit pull requests.</source>
          <target state="translated">추가하려는 사용자가 참여할 프로젝트의 저장소를 복제하도록하십시오. 끌어 오기 요청을 제출할 수 있도록 허용하려면 저장소에 대한 쓰기 권한이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e0eeeea2b06f5bebe49dec7e2d461ded99c69cf1" translate="yes" xml:space="preserve">
          <source>Having multiple pipelines allows the project to target different branches for different changes. A potential use case is maintaining different versions of a project on different branches, enabling you to target a change (for instance, a security fix) against multiple versions quickly and easily.</source>
          <target state="translated">파이프 라인이 여러 개 있으면 프로젝트에서 다른 변경 사항에 대해 다른 분기를 대상으로 지정할 수 있습니다. 잠재적 인 사용 사례는 여러 가지 버전에 대한 변경 사항 (예 : 보안 수정)을 빠르고 쉽게 대상으로 지정할 수 있도록 여러 가지 프로젝트 버전을 서로 다른 분기에 유지하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="aa167b4517816c18eaf9d125721b6b9200072547" translate="yes" xml:space="preserve">
          <source>Having only the group and not the corresponding users present during a chef-server-ctl reconfigure is unsupported and may lead to an error in the reconfiguration run.</source>
          <target state="translated">chef-server-ctl 재구성 중에 해당 사용자가 아닌 그룹 만있는 것은 지원되지 않으며 재구성 실행에 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99ef8ea2de34fd10dcbb8986885ed8df58f0d987" translate="yes" xml:space="preserve">
          <source>Head over to the Chef Habitat Builder sign-in page at &lt;a href=&quot;https://bldr.habitat.sh/#/sign-in&quot;&gt;https://bldr.habitat.sh/#/sign-in&lt;/a&gt; to get started.</source>
          <target state="translated">시작 &lt;a href=&quot;https://bldr.habitat.sh/#/sign-in&quot;&gt;하려면 https://bldr.habitat.sh/#/sign-in&lt;/a&gt; 의 Chef Habitat Builder 로그인 페이지로 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="31341c6f0c7af677ffb8fadcb92038e8ac2b6193" translate="yes" xml:space="preserve">
          <source>Header</source>
          <target state="translated">Header</target>
        </trans-unit>
        <trans-unit id="d77cec7263d74aa4c2c95a68f4c6cd16d571747d" translate="yes" xml:space="preserve">
          <source>Header Format</source>
          <target state="translated">헤더 형식</target>
        </trans-unit>
        <trans-unit id="c8b52f598058c5f4e0f0933ce36234b98790c7c4" translate="yes" xml:space="preserve">
          <source>Headers that the HTTP/S load balancer should add to proxied requests.</source>
          <target state="translated">HTTP / S 부하 분산기가 프록시 요청에 추가해야하는 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="c30e705884d6b2dd43ad2a8cfe083b9fac95a087" translate="yes" xml:space="preserve">
          <source>Headers to add the response prior to sending the response back to the client.</source>
          <target state="translated">응답을 클라이언트로 다시 보내기 전에 응답을 추가하는 헤더.</target>
        </trans-unit>
        <trans-unit id="9213d5737fa471b3aec4b5d9f5c68fe50cd04fd2" translate="yes" xml:space="preserve">
          <source>Headers to add to a matching request prior to forwarding the request to the backendService.</source>
          <target state="translated">요청을 backendService로 전달하기 전에 일치하는 요청에 추가 할 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="6948360d8cb1e12e5ebf12b8a2f7a24f6ca2e064" translate="yes" xml:space="preserve">
          <source>Headless Unattended Install</source>
          <target state="translated">헤드리스 무인 설치</target>
        </trans-unit>
        <trans-unit id="3703cd216881d3303a10a898fe54439bf05685b6" translate="yes" xml:space="preserve">
          <source>Health</source>
          <target state="translated">Health</target>
        </trans-unit>
        <trans-unit id="3f62546baab4ba700a29d9fd8b3273c0c06b4b3c" translate="yes" xml:space="preserve">
          <source>Health Check - Critical</source>
          <target state="translated">상태 확인-중요</target>
        </trans-unit>
        <trans-unit id="b667b5820a223ba19c1cb792fe5863f2333d6091" translate="yes" xml:space="preserve">
          <source>Health Check - Unknown</source>
          <target state="translated">상태 확인-알 수 없음</target>
        </trans-unit>
        <trans-unit id="64c6caa5bd34fb1d67bc1d3f21648da03579831c" translate="yes" xml:space="preserve">
          <source>Heat</source>
          <target state="translated">Heat</target>
        </trans-unit>
        <trans-unit id="291973af2c418920f5a3168e6a25e102304eb19b" translate="yes" xml:space="preserve">
          <source>Hello and welcome to Chef Automate! This Quickstart guides you through the initial installation and trial activation.</source>
          <target state="translated">안녕하세요, Chef Automate에 오신 것을 환영합니다! 이 빠른 시작은 초기 설치 및 평가판 활성화를 안내합니다.</target>
        </trans-unit>
        <trans-unit id="3978084d74dbf6cd84cb571c84adee75046966f7" translate="yes" xml:space="preserve">
          <source>Help you obtain and organize the cookbooks you need to converge the node</source>
          <target state="translated">노드를 수렴하는 데 필요한 요리 책을 얻고 구성하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="1e7eebdb08c9dbf27c7668e2badd51e667707d3c" translate="yes" xml:space="preserve">
          <source>Helper</source>
          <target state="translated">Helper</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="7f2d9e6b46047e8d62d639533cc27cbaecc9a55f" translate="yes" xml:space="preserve">
          <source>Helpers can also be nested and used together in block expressions. Here is another example from the redis.config file where the &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;with&lt;/code&gt; helpers are used together to set up &lt;code&gt;core/redis&lt;/code&gt; Chef Habitat services in a leader-follower topology.</source>
          <target state="translated">도우미는 중첩되어 블록 식에서 함께 사용할 수도 있습니다. 다음은 리더-팔로어 토폴로지에서 &lt;code&gt;core/redis&lt;/code&gt; Chef Habitat 서비스 를 설정하기 위해 &lt;code&gt;if&lt;/code&gt; 및 &lt;code&gt;with&lt;/code&gt; helper를 함께 사용 하는 redis.config 파일의 또 다른 예입니다 .</target>
        </trans-unit>
        <trans-unit id="81195dfe6097047580026e85d86760acb076bf23" translate="yes" xml:space="preserve">
          <source>Helping every member of a team author similarly structured code.</source>
          <target state="translated">팀의 모든 구성원이 유사한 구조의 코드를 작성하도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c1b5278e5d0f780903a30af94f981ffd2807606a" translate="yes" xml:space="preserve">
          <source>Here are examples of the old and new format of the cloud data:</source>
          <target state="translated">다음은 클라우드 데이터의 이전 형식과 새 형식의 예입니다.</target>
        </trans-unit>
        <trans-unit id="57d65383ab30349d5cc1150cf3385aab5e5784ca" translate="yes" xml:space="preserve">
          <source>Here are some examples of how to apply configuration changes through both the shell and through a TOML file.</source>
          <target state="translated">다음은 셸과 TOML 파일을 통해 구성 변경 사항을 적용하는 방법에 대한 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="0ae2b7b2b6bd7f699c26ea6b00fbf82a0ca286ec" translate="yes" xml:space="preserve">
          <source>Here are the stages of a Chef Automate pipeline.</source>
          <target state="translated">다음은 Chef Automate 파이프 라인의 단계입니다.</target>
        </trans-unit>
        <trans-unit id="1fefe4aec0ff987262cf91480c3c546c72722b43" translate="yes" xml:space="preserve">
          <source>Here are the stages of a Workflow pipeline.</source>
          <target state="translated">다음은 워크 플로 파이프 라인의 단계입니다.</target>
        </trans-unit>
        <trans-unit id="b7433a29ca8d1809adcbc22fdc496819c9a2d80f" translate="yes" xml:space="preserve">
          <source>Here is a list of all of the supported specific operating systems:</source>
          <target state="translated">다음은 지원되는 특정 운영 체제의 모든 목록입니다.</target>
        </trans-unit>
        <trans-unit id="76ef68de3ed0d9dfd8c8c1f88e50eb0acb96129e" translate="yes" xml:space="preserve">
          <source>Here is a sample &lt;code&gt;pg_hba.conf&lt;/code&gt; file with hostssl connections for Chef Infra Server (the contents of your &lt;code&gt;pg_hba.conf&lt;/code&gt; will be different):</source>
          <target state="translated">다음은 샘플입니다 &lt;code&gt;pg_hba.conf&lt;/code&gt; 요리사 인프라 서버에 대한 hostssl 연결 (당신의 내용으로 파일이 &lt;code&gt;pg_hba.conf&lt;/code&gt; 다를 수 있습니다) :</target>
        </trans-unit>
        <trans-unit id="f4c15dbbcaddc84d5c0e4f22d36096accd7978c7" translate="yes" xml:space="preserve">
          <source>Here is an example configuration file that mimics the default logging configuration of the Supervisor. It emits UTC timestamped message lines to standard output at the &lt;code&gt;error&lt;/code&gt; level.</source>
          <target state="translated">다음은 Supervisor의 기본 로깅 구성을 모방 한 구성 파일의 예입니다. &lt;code&gt;error&lt;/code&gt; 수준 에서 표준 출력에 UTC 타임 스탬프 메시지 줄을 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="90e280468a738d503c94ffa4b87b5ee4ae306c22" translate="yes" xml:space="preserve">
          <source>Here is an example for reading and testing a list of ports. The folder structure is:</source>
          <target state="translated">다음은 포트 목록을 읽고 테스트하는 예입니다. 폴더 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6eb4e1dd28d233052c084a3d373ad90a949c3ab2" translate="yes" xml:space="preserve">
          <source>Here is an example of a build cookbook recipe that runs JUnit tests with Maven. For example:</source>
          <target state="translated">다음은 Maven으로 JUnit 테스트를 실행하는 빌드 쿡북 레시피의 예입니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="57e329f92c2a9c45af08f02a6200f8d55ae09400" translate="yes" xml:space="preserve">
          <source>Here is an example of the Chef Automate dashboard.</source>
          <target state="translated">다음은 Chef Automate 대시 보드의 예입니다.</target>
        </trans-unit>
        <trans-unit id="1dd1da074789f5ac4d4173d9715634ee67d7b8b1" translate="yes" xml:space="preserve">
          <source>Here it is represented graphically:</source>
          <target state="translated">여기에 그래픽으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bdb9227812a6575f275cfe9abc64585a758bc494" translate="yes" xml:space="preserve">
          <source>Here the plan is building an application written in Rust. So it overrides &lt;code&gt;Invoke-Build&lt;/code&gt; and uses the &lt;code&gt;cargo&lt;/code&gt; utility included in its buildtime dependency on &lt;code&gt;core/rust&lt;/code&gt;.</source>
          <target state="translated">여기서 계획은 Rust로 작성된 애플리케이션을 구축하는 것입니다. 따라서 &lt;code&gt;Invoke-Build&lt;/code&gt; 를 재정의 하고 &lt;code&gt;core/rust&lt;/code&gt; 에 대한 빌드 시간 종속성에 포함 된 &lt;code&gt;cargo&lt;/code&gt; 유틸리티를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ef5cdb9d2c49e268f65fda28ce9561ae1324534d" translate="yes" xml:space="preserve">
          <source>Here we&amp;rsquo;re also base64 encoding our validator key which is a recommended approach when using the Azure Chef extension in an ARM template</source>
          <target state="translated">여기에서는 ARM 템플릿에서 Azure Chef 확장을 사용할 때 권장되는 접근 방식 인 유효성 검사기 키를 base64로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="321476002d3e0c32015f97b7c25f1571f777a1f7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a sample Chef InSpec control that uses Ruby variables to instantiate a Chef InSpec resource once and use the content in multiple tests.</source>
          <target state="translated">다음은 Ruby 변수를 사용하여 Chef InSpec 리소스를 한 번 인스턴스화하고 여러 테스트에서 콘텐츠를 사용하는 샘플 Chef InSpec 컨트롤입니다.</target>
        </trans-unit>
        <trans-unit id="fcdc562cb1722850a858a353b8c64a3296266b72" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a mapping TOML file named &lt;code&gt;cf-mapping.toml&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;cf-mapping.toml&lt;/code&gt; 이라는 매핑 TOML 파일의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="2fdcada8054032227904c3f7d9a85e1404d987a6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a vanilla Plan such as &lt;code&gt;sed&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;sed&lt;/code&gt; 와 같은 바닐라 플랜의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="d1e3942e4c43090399f233c5237a7954a85647b1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to make a configuration element user-tunable. Assume that we have a native configuration file named &lt;code&gt;service.conf&lt;/code&gt;. In &lt;code&gt;service.conf&lt;/code&gt;, the following configuration element is defined:</source>
          <target state="translated">다음은 구성 요소를 사용자 조정 가능하게 만드는 방법의 예입니다. &lt;code&gt;service.conf&lt;/code&gt; 라는 기본 구성 파일이 있다고 가정합니다 . 에서는 &lt;code&gt;service.conf&lt;/code&gt; 다음 구성 요소가 정의된다 :</target>
        </trans-unit>
        <trans-unit id="1ccd19e2cf792cba7a8f28fd381304a8cdb2a8ff" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of how to use this function to retrieve the path to the perl binary in the core/perl package:</source>
          <target state="translated">다음은이 함수를 사용하여 core / perl 패키지의 perl 바이너리 경로를 검색하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="1857d0224bf4b0e2ce1ec28ff0e558520472543a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that will only write out configuration for the unixsocket tunable if a value was set by the user:</source>
          <target state="translated">다음은 사용자가 값을 설정 한 경우에만 unixsocket 튜너 블에 대한 구성을 작성하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="7a5d1b7a0d8c6af9d76e1fc160cf2eeef6f3a017" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using each to render multiple server entries:</source>
          <target state="translated">다음은 각각을 사용하여 여러 서버 항목을 렌더링하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="3682d85dfd8d267faf3ab178b961c06817ec809d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to tell for sure when the configured certificate doesn&amp;rsquo;t match the key</source>
          <target state="translated">구성된 인증서가 키와 일치하지 않는 경우를 확인하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2e48eed10f62bfdc735b90c9365d95f8dc3badf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what we&amp;rsquo;d add to our project&amp;rsquo;s &lt;code&gt;default.toml&lt;/code&gt; file to provide a default value for the &lt;code&gt;recv_buffer&lt;/code&gt; tunable:</source>
          <target state="translated">다음 은 &lt;code&gt;recv_buffer&lt;/code&gt; 튜너 블에 대한 기본값을 제공하기 위해 프로젝트의 &lt;code&gt;default.toml&lt;/code&gt; 파일에 추가 한 내용입니다 .</target>
        </trans-unit>
        <trans-unit id="2340e8d49ac92ed17002e42aff3710fe6c1006e9" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;(color: blue)&lt;/code&gt; is a single filter criterion being used with a filter statement in method-call syntax.</source>
          <target state="translated">여기에서 &lt;code&gt;(color: blue)&lt;/code&gt; 는 메서드 호출 구문에서 필터 문과 함께 사용되는 단일 필터 기준입니다.</target>
        </trans-unit>
        <trans-unit id="1cf530030881e2f9636b68e0bcd8e8df94e105bd" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;be_classy&lt;/code&gt; is a resource-specific matcher operating directly on the &lt;code&gt;car&lt;/code&gt;, while &lt;code&gt;cmp&lt;/code&gt; is a universal matcher operating on the &lt;code&gt;manufacturer&lt;/code&gt; property.</source>
          <target state="translated">여기에서 &lt;code&gt;be_classy&lt;/code&gt; 는 &lt;code&gt;car&lt;/code&gt; 에서 직접 작동하는 리소스 별 일치 자 이고 &lt;code&gt;cmp&lt;/code&gt; 는 &lt;code&gt;manufacturer&lt;/code&gt; 속성 에서 작동하는 범용 일치 자 입니다.</target>
        </trans-unit>
        <trans-unit id="1bf18510b456d6f2f6267d971d73143e68b3d03b" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;bind.&amp;lt;BINDING_NAME&amp;gt;&lt;/code&gt; will be &amp;ldquo;truthy&amp;rdquo; (and can thus be used in boolean expressions) only if the bind has been satisfied, and &lt;code&gt;bind.&amp;lt;BINDING_NAME&amp;gt;.members&lt;/code&gt; will be an array of only active members.</source>
          <target state="translated">여기서 &lt;code&gt;bind.&amp;lt;BINDING_NAME&amp;gt;&lt;/code&gt; 은 바인드가 충족 된 경우에만 &quot;truthy&quot;(부울 표현식에 사용될 수 있음)가되고 &lt;code&gt;bind.&amp;lt;BINDING_NAME&amp;gt;.members&lt;/code&gt; 는 활성 멤버 만 배열됩니다.</target>
        </trans-unit>
        <trans-unit id="a6c55caaef74fb2a28b017bb51bf27033bb04b4e" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;car&lt;/code&gt; is a resource.</source>
          <target state="translated">여기서 &lt;code&gt;car&lt;/code&gt; 는 자원입니다.</target>
        </trans-unit>
        <trans-unit id="0c789ff0550c1a8f5109995225ad32f80bff3936" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;cars&lt;/code&gt; is a plural resource.</source>
          <target state="translated">여기서 &lt;code&gt;cars&lt;/code&gt; 는 복수의 자원입니다.</target>
        </trans-unit>
        <trans-unit id="09f3741348b3d5fb7f5ad42770405b8bd63a51e0" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;core/redis:latest&lt;/code&gt; would be the image exported from the &lt;code&gt;core/redis&lt;/code&gt; Chef Habitat package. The Supervisor will run as normal, with supervised processes running as the desired user.</source>
          <target state="translated">여기서 &lt;code&gt;core/redis:latest&lt;/code&gt; 는 &lt;code&gt;core/redis&lt;/code&gt; Chef Habitat 패키지 에서 내 보낸 이미지 입니다. 감독자는 원하는 사용자로 실행되는 감독 된 프로세스와 함께 정상적으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="698684f73434a40612cb389ee44529a9aa6935f5" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;it { should ... }&lt;/code&gt; declares a test, calling the &lt;code&gt;classy?&lt;/code&gt; matcher on Tony Clifton&amp;rsquo;s car.</source>
          <target state="translated">여기서 &lt;code&gt;it { should ... }&lt;/code&gt; 는 &lt;code&gt;classy?&lt;/code&gt; 호출하는 테스트를 선언합니다 . 토니 클리프 턴의 차에서 매처.</target>
        </trans-unit>
        <trans-unit id="29c0df06c1a0bcc2391d72e1e33add0272a3eee4" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;its('fuzzy_dice') { should ... }&lt;/code&gt; declares a test, testing against the &lt;code&gt;fuzzy_dice&lt;/code&gt; property of Tony Clifton&amp;rsquo;s car. Let&amp;rsquo;s assume - Tony being Tony - that &lt;code&gt;fuzzy_dice&lt;/code&gt; will return an Array.</source>
          <target state="translated">여기에서 &lt;code&gt;its('fuzzy_dice') { should ... }&lt;/code&gt; 는 Tony Clifton 자동차 의 &lt;code&gt;fuzzy_dice&lt;/code&gt; 속성에 대해 테스트하는 테스트를 선언합니다 . Tony가 Tony 인 경우 &lt;code&gt;fuzzy_dice&lt;/code&gt; 가 Array를 반환 한다고 가정 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="8a1a248015b97059c84d1815c896d02f61c29742" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;loggers&lt;/code&gt; is a map of maps. Map keys are module paths (as described above in the &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable documentation), while the values are maps with additional configuration. Here, we are only setting the logging level, but more advanced configurations are possible.</source>
          <target state="translated">여기서 &lt;code&gt;loggers&lt;/code&gt; 는지도의지도입니다. 맵 키는 모듈 경로 (위의 &lt;code&gt;RUST_LOG&lt;/code&gt; 환경 변수 문서에 설명 됨)이고 값은 추가 구성이있는 맵입니다. 여기서는 로깅 수준 만 설정하지만 더 고급 구성이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="09b7657380aa3bfd25bb876ff22f8d9f79267b64" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;manufacturer&lt;/code&gt; is a property of the &lt;code&gt;car&lt;/code&gt; resource.</source>
          <target state="translated">여기서 &lt;code&gt;manufacturer&lt;/code&gt; 는 &lt;code&gt;car&lt;/code&gt; 자원 의 자산입니다 .</target>
        </trans-unit>
        <trans-unit id="67b182cd2218094c3e31a8cfd98597bccbe871b6" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;owner: 'Tony Clifton'&lt;/code&gt; is a resource parameter.</source>
          <target state="translated">여기에서 &lt;code&gt;owner: 'Tony Clifton'&lt;/code&gt; 은 리소스 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="3b61eda8c097d1dcfaf1927f6959f8dfd17a36c6" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;pkg_binds&lt;/code&gt; is an associative array. The key (&amp;ldquo;database&amp;rdquo;) is the binding name, while the value (&amp;ldquo;port ssl-port&amp;rdquo;) is a space-delimited list of the exported configuration the binding requires. A consumer can specify multiple binds; each would be an individual entry in this associative array. Judging from this, the producer we described above would be a good candidate for this application server to bind to, because it exports both a &amp;ldquo;port&amp;rdquo; and an &amp;ldquo;ssl-port&amp;rdquo;.</source>
          <target state="translated">여기서 &lt;code&gt;pkg_binds&lt;/code&gt; 는 연관 배열입니다. 키 ( &quot;database&quot;)는 바인딩 이름이고 값 ( &quot;port ssl-port&quot;)은 바인딩에 필요한 내 보낸 구성의 공백으로 구분 된 목록입니다. 소비자는 여러 바인딩을 지정할 수 있습니다. 각각은이 연관 배열의 개별 항목입니다. 이 점을 고려할 때 위에서 설명한 생산자는 &quot;port&quot;와 &quot;ssl-port&quot;를 모두 내보내므로이 응용 프로그램 서버가 바인딩하기에 좋은 후보가 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="74a2be415a753a3e09ee60ab0ba92578fee1ddc4" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;{ engine_cylinders &amp;gt;= 6 }&lt;/code&gt; is a block-syntax filter statement referring to one filter criterion.</source>
          <target state="translated">여기서 &lt;code&gt;{ engine_cylinders &amp;gt;= 6 }&lt;/code&gt; 은 하나의 필터 기준을 참조하는 블록 구문 필터 문입니다.</target>
        </trans-unit>
        <trans-unit id="81a0520110e10c74e534f70b4d725fd83fb0f7ae" translate="yes" xml:space="preserve">
          <source>Here, we access the &amp;lsquo;color&amp;rsquo; property, then use the &lt;code&gt;cmp&lt;/code&gt; universal matcher to compare the property to the &amp;lsquo;black&amp;rsquo; &lt;a href=&quot;#expected-result&quot;&gt;expected result&lt;/a&gt;.</source>
          <target state="translated">여기에서 'color'속성에 액세스 한 다음 &lt;code&gt;cmp&lt;/code&gt; 범용 매처를 사용하여 속성을 'black' &lt;a href=&quot;#expected-result&quot;&gt;예상 결과&lt;/a&gt; 와 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="1ec3d4aabce0000a3d2ab55dacb5380bec67fc7c" translate="yes" xml:space="preserve">
          <source>Here, we&amp;rsquo;ll discuss how this is implemented, how it can be enabled in your Chef Habitat deployments, and how it can be used.</source>
          <target state="translated">여기에서는 이것이 구현되는 방법, Chef Habitat 배포에서 활성화하는 방법 및 사용 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0085a07dec8e1ba3eca0917b233068a42497e623" translate="yes" xml:space="preserve">
          <source>Hide nodes on which a Chef Infra Client run has occurred within the previous hour.</source>
          <target state="translated">Chef Infra Client가 지난 1 시간 동안 실행 된 노드를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="169f61f0710ffb0816223c11a40e7f7748ef045e" translate="yes" xml:space="preserve">
          <source>Hide nodes on which a chef-client run has occurred within the previous hour.</source>
          <target state="translated">이전 1 시간 동안 요리사 클라이언트 실행이 발생한 노드를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="e95d9d74f9cbff883e32169845e085df738e2cb6" translate="yes" xml:space="preserve">
          <source>Hide nodes that have performed a successful Chef Infra Client run within the last specified number of minutes. The number of minutes to hide is provided as an integer, such as &lt;code&gt;--hide-by-mins 10&lt;/code&gt;.</source>
          <target state="translated">마지막 지정된 시간 (분) 내에 성공적인 Chef Infra Client 실행을 수행 한 노드를 숨 깁니다. 숨길 시간 (분)은 &lt;code&gt;--hide-by-mins 10&lt;/code&gt; 과 같이 정수로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="ffcadc3bbf92f4882971ddc3bc8286e63dfa62c0" translate="yes" xml:space="preserve">
          <source>High Availability</source>
          <target state="translated">고 가용성</target>
        </trans-unit>
        <trans-unit id="ff90d92716dc096a6cf23642b253f7bac0c93542" translate="yes" xml:space="preserve">
          <source>High Availability (DEPRECATED)</source>
          <target state="translated">고 가용성 (DEPRECATED)</target>
        </trans-unit>
        <trans-unit id="52e7ce6537672867640f926774861d3c990ea4d0" translate="yes" xml:space="preserve">
          <source>High Availability using Backend Cluster</source>
          <target state="translated">백엔드 클러스터를 사용한 고 가용성</target>
        </trans-unit>
        <trans-unit id="aa11d87b48b78aaab7c51c351dd4828aee56c331" translate="yes" xml:space="preserve">
          <source>High Availability: AWS (DEPRECATED)</source>
          <target state="translated">고 가용성 : AWS (DEPRECATED)</target>
        </trans-unit>
        <trans-unit id="608ee48358e8d5a3c29f09befb0d4e39442d61e4" translate="yes" xml:space="preserve">
          <source>High Availability: Chef Backend</source>
          <target state="translated">고 가용성 : Chef 백엔드</target>
        </trans-unit>
        <trans-unit id="00ab419a2f903b4d604fb0c936d1335919fa9024" translate="yes" xml:space="preserve">
          <source>High Availability: DRBD (DEPRECATED)</source>
          <target state="translated">고 가용성 : DRBD (DEPRECATED)</target>
        </trans-unit>
        <trans-unit id="574ccaa7794f4f5a2773eece3e4eef47c9fcf9d8" translate="yes" xml:space="preserve">
          <source>High Availability: Upgrade to Chef Backend 2</source>
          <target state="translated">고 가용성 : Chef Backend 2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="ab980f940bf998146c0fa880620fefad5393e441" translate="yes" xml:space="preserve">
          <source>High availability</source>
          <target state="translated">고 가용성</target>
        </trans-unit>
        <trans-unit id="61c443eb3eeb9890fac720fe84e8dbc238cd6d6f" translate="yes" xml:space="preserve">
          <source>Hint files are located in the &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt; directory by default. Use the &lt;code&gt;Ohai.config[:hints_path]&lt;/code&gt; setting in the &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt; to customize this location.</source>
          <target state="translated">힌트 파일은 기본적으로 &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt; 디렉토리에 있습니다. &lt;a href=&quot;../config_rb_client/index&quot;&gt;client.rb 구성 파일&lt;/a&gt; 의 &lt;code&gt;Ohai.config[:hints_path]&lt;/code&gt; 설정을 사용 하여이 위치를 사용자 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2c8c1ebbfe0ebf688955a7e8239985711b97e66e" translate="yes" xml:space="preserve">
          <source>Hint files are located in the &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt; directory by default. Use the &lt;code&gt;Ohai.config[:hints_path]&lt;/code&gt; setting in the &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb configuration file&lt;/a&gt; to customize this location.</source>
          <target state="translated">힌트 파일은 기본적으로 &lt;code&gt;/etc/chef/ohai/hints/&lt;/code&gt; 디렉토리에 있습니다. &lt;a href=&quot;config_rb_client/index&quot;&gt;client.rb 구성 파일&lt;/a&gt; 의 &lt;code&gt;Ohai.config[:hints_path]&lt;/code&gt; 설정을 사용 하여이 위치를 사용자 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9abca25a56844a4e08eed22d0d40b2f903c18a72" translate="yes" xml:space="preserve">
          <source>Hint option names to be set in Ohai configuration the target node. Values: &lt;code&gt;vm_name&lt;/code&gt;, &lt;code&gt;public_fqdn&lt;/code&gt; and platform. User can pass any comma separated combination of these values like &lt;code&gt;vm_name,public_fqdn&lt;/code&gt;. Default: &lt;code&gt;default&lt;/code&gt; which corresponds to supported values list mentioned here.</source>
          <target state="translated">Ohai 구성에서 설정 될 힌트 옵션 이름은 대상 노드입니다. 값 : &lt;code&gt;vm_name&lt;/code&gt; , &lt;code&gt;public_fqdn&lt;/code&gt; 및 platform. 사용자는 &lt;code&gt;vm_name,public_fqdn&lt;/code&gt; 과 같이 이러한 값의 쉼표로 구분 된 조합을 전달할 수 있습니다 . 기본값 : 여기에 언급 된 지원되는 값 목록에 해당하는 &lt;code&gt;default&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f3972a2f1d1dcf0c9ac7be60ea768c205415d031" translate="yes" xml:space="preserve">
          <source>Hint: You can pass multiple paths separated with a colon &lt;code&gt;/path/to/perl5/lib:/usr/share/perl5/vendor_perl/lib/perl5&lt;/code&gt;</source>
          <target state="translated">힌트 : 콜론 &lt;code&gt;/path/to/perl5/lib:/usr/share/perl5/vendor_perl/lib/perl5&lt;/code&gt; 로 구분 된 여러 경로를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eef8e89aeb708a408921fec1b9e87c4d04faaced" translate="yes" xml:space="preserve">
          <source>Hints</source>
          <target state="translated">Hints</target>
        </trans-unit>
        <trans-unit id="d1b8f76c81db19501772efefc5e285f3b872a4b5" translate="yes" xml:space="preserve">
          <source>Hints to &lt;code&gt;launchctl&lt;/code&gt; to not submit this job to launchd.</source>
          <target state="translated">이 작업을 launchd에 제출하지 않도록 &lt;code&gt;launchctl&lt;/code&gt; 에 대한 힌트 입니다.</target>
        </trans-unit>
        <trans-unit id="720b68a32b2e5195e4d85d56b5357e04822a7a16" translate="yes" xml:space="preserve">
          <source>Hints to &lt;code&gt;launchctl&lt;/code&gt; to not submit this job to launchd. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 작업을 실행에 제출하지 않으 려면 &lt;code&gt;launchctl&lt;/code&gt; 을 힌트로 사용하십시오 . 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="829fbcec3f2f8cc8b4f7605491ce51aae21bf1db" translate="yes" xml:space="preserve">
          <source>HipChat</source>
          <target state="translated">HipChat</target>
        </trans-unit>
        <trans-unit id="e56bc8d383258cb7345fbe3eb2e24e295b0040be" translate="yes" xml:space="preserve">
          <source>HipChat Notifications</source>
          <target state="translated">HipChat 알림</target>
        </trans-unit>
        <trans-unit id="b24cd4dd561003744f6839bba6f0b01af01e9c66" translate="yes" xml:space="preserve">
          <source>Homebrew</source>
          <target state="translated">Homebrew</target>
        </trans-unit>
        <trans-unit id="0be795fc07804694d3bc397d7e613b9bbe40f8a4" translate="yes" xml:space="preserve">
          <source>Hopefully, the above discussion has given you a better idea of how Chef Habitat&amp;rsquo;s networking works, and how you can best take advantage of it to provide a robust network foundation for the services you run.</source>
          <target state="translated">위의 논의를 통해 Chef Habitat의 네트워킹 작동 방식에 대한 더 나은 아이디어를 얻고이를 활용하여 실행하는 서비스에 강력한 네트워크 기반을 제공하는 방법을 알 수 있기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="2b4140c0e8164d58572721cdd7798da6e949fd59" translate="yes" xml:space="preserve">
          <source>Host Loopback Network</source>
          <target state="translated">호스트 루프백 네트워크</target>
        </trans-unit>
        <trans-unit id="f9864e71e5682e5ff62565af220b93439af6503c" translate="yes" xml:space="preserve">
          <source>Host Notation</source>
          <target state="translated">호스트 표기법</target>
        </trans-unit>
        <trans-unit id="6d1a86a244a1b4e10a27517b9baf5fd9ce5618fc" translate="yes" xml:space="preserve">
          <source>Host Specifications</source>
          <target state="translated">호스트 사양</target>
        </trans-unit>
        <trans-unit id="f79cb81c6002a1452eb31106658630ecd7bf8ae8" translate="yes" xml:space="preserve">
          <source>Host for starting chef-zero.</source>
          <target state="translated">Chef-zero를 시작하는 호스트입니다.</target>
        </trans-unit>
        <trans-unit id="96e5189bf2afc355f638dd1917e64af9e2dafb57" translate="yes" xml:space="preserve">
          <source>Host name of this node.</source>
          <target state="translated">이 노드의 호스트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ee9ca7b782fc6f45279f284b825060c0a5a108ec" translate="yes" xml:space="preserve">
          <source>Host names</source>
          <target state="translated">호스트 이름</target>
        </trans-unit>
        <trans-unit id="ce55853fe6d6da8a848bad74639f2f2ca1b45c1b" translate="yes" xml:space="preserve">
          <source>Host to start chef-zero on</source>
          <target state="translated">Chef-zero를 시작할 호스트</target>
        </trans-unit>
        <trans-unit id="84f73e26f5150e5d639de0de5493112ce85b21a9" translate="yes" xml:space="preserve">
          <source>Hosted Chef Infra Server</source>
          <target state="translated">Hosted Chef Infra 서버</target>
        </trans-unit>
        <trans-unit id="0c413db8e12ba32ddac9189f2f90307de1b73421" translate="yes" xml:space="preserve">
          <source>Hostname for the automate TLS certificate</source>
          <target state="translated">자동화 TLS 인증서의 호스트 이름</target>
        </trans-unit>
        <trans-unit id="0ba8fe7e12b5443001ab4369bd51ae58150893d0" translate="yes" xml:space="preserve">
          <source>Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.</source>
          <target state="translated">클라이언트가 서비스에 연결하는 데 사용하는 노출 된 Redis 엔드 포인트의 호스트 이름 또는 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="4dbcd60ec442a8199dd9b177f7c5e1831d33732d" translate="yes" xml:space="preserve">
          <source>Hostnames</source>
          <target state="translated">Hostnames</target>
        </trans-unit>
        <trans-unit id="db8c34d83c7eb54ecd858b1cb6e0758033d9910d" translate="yes" xml:space="preserve">
          <source>How Chef Infra Client handles certain situations when the target file turns out not to be a file. For example, when a target file is actually a symlink. Set to &lt;code&gt;true&lt;/code&gt; for Chef Infra Client delete the non-file target and replace it with the specified file. Set to &lt;code&gt;false&lt;/code&gt; for Chef Infra Client to raise an error.</source>
          <target state="translated">Chef Infra Client가 대상 파일이 파일이 아닌 것으로 판명 된 특정 상황을 처리하는 방법. 예를 들어 대상 파일이 실제로 심볼릭 링크 인 경우입니다. Chef Infra Client에 대해 &lt;code&gt;true&lt;/code&gt; 로 설정하면 파일이 아닌 대상을 삭제하고 지정된 파일로 바꿉니다. Chef Infra Client에서 오류를 발생 시키 려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="aadb833f8509c5d3db7c5c37726525e89bed0f58" translate="yes" xml:space="preserve">
          <source>How Chef Infra Client handles certain situations when the target file turns out not to be a file. For example, when a target file is actually a symlink. Set to &lt;code&gt;true&lt;/code&gt; for Chef Infra Client to delete the non-file target and replace it with the specified file. Set to &lt;code&gt;false&lt;/code&gt; for Chef Infra Client to raise an error.</source>
          <target state="translated">Chef Infra Client가 대상 파일이 파일이 아닌 것으로 판명 된 특정 상황을 처리하는 방법. 예를 들어 대상 파일이 실제로 심볼릭 링크 인 경우입니다. Chef Infra Client가 파일이 아닌 대상을 삭제하고 지정된 파일로 바꾸 려면 &lt;code&gt;true&lt;/code&gt; 로 설정 하십시오. Chef Infra Client에서 오류를 발생 시키 려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf148988e7d06cad028844753a85db5727ed889f" translate="yes" xml:space="preserve">
          <source>How Gorilla Operates</source>
          <target state="translated">Gorilla의 운영 방식</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="41ae527fe3bef6a4774663bc0dbead7baf6fd063" translate="yes" xml:space="preserve">
          <source>How NAT should be configured per Subnetwork. If &lt;code&gt;ALL_SUBNETWORKS_ALL_IP_RANGES&lt;/code&gt;, all of the IP ranges in every Subnetwork are allowed to Nat. If &lt;code&gt;ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES&lt;/code&gt;, all of the primary IP ranges in every Subnetwork are allowed to Nat. &lt;code&gt;LIST_OF_SUBNETWORKS&lt;/code&gt;: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below). Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other RouterNat section in any Router for this network in this region.</source>
          <target state="translated">서브 네트워크별로 NAT를 구성하는 방법. 경우 &lt;code&gt;ALL_SUBNETWORKS_ALL_IP_RANGES&lt;/code&gt; , 모든 서브 네트워크의 IP 범위의 모든 냇로 사용할 수 있습니다. 경우 &lt;code&gt;ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES&lt;/code&gt; , 모든 서브 네트워크의 기본 IP 범위의 모든 냇로 사용할 수 있습니다. &lt;code&gt;LIST_OF_SUBNETWORKS&lt;/code&gt; : 하위 네트워크 목록이 Nat에 허용됩니다 (아래 하위 네트워크 필드에 지정됨). 이 필드에 ALL_SUBNETWORKS_ALL_IP_RANGES 또는 ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES가 포함 된 경우이 영역의이 네트워크에 대한 라우터에 다른 RouterNat 섹션이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="a7d93f54c17a9de6df2f4f4f171aea88988abbb0" translate="yes" xml:space="preserve">
          <source>How Scaffolding Works</source>
          <target state="translated">비계의 작동 원리</target>
        </trans-unit>
        <trans-unit id="7b60ba9abb48468b01f74473fcb853811cc926ef" translate="yes" xml:space="preserve">
          <source>How We Use Your Data</source>
          <target state="translated">귀하의 데이터를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="367f68984376e357dc5c53336173f0d6fed354d3" translate="yes" xml:space="preserve">
          <source>How can I set Inputs?</source>
          <target state="translated">입력은 어떻게 설정합니까?</target>
        </trans-unit>
        <trans-unit id="1e9071c0c96e1aa8f231ecdab8b99c907c73d6bd" translate="yes" xml:space="preserve">
          <source>How do I find out which plugins are available?</source>
          <target state="translated">어떤 플러그인을 사용할 수 있는지 어떻게 알 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="191602e5936ab44c95e1ef9aa7a547f63fb54230" translate="yes" xml:space="preserve">
          <source>How do I install and manage plugins?</source>
          <target state="translated">플러그인을 어떻게 설치하고 관리하나요?</target>
        </trans-unit>
        <trans-unit id="60d58ad45368984172400c6dfaed7b7992f6e361" translate="yes" xml:space="preserve">
          <source>How do I migrate my Serverspec tests to InSpec</source>
          <target state="translated">Serverspec 테스트를 InSpec으로 마이그레이션하는 방법</target>
        </trans-unit>
        <trans-unit id="b944547fd4e6441f303f5a3e450b892ef762aaa6" translate="yes" xml:space="preserve">
          <source>How do I use a different Gem server?</source>
          <target state="translated">다른 Gem 서버를 어떻게 사용하나요?</target>
        </trans-unit>
        <trans-unit id="05bfa808b9ac409826c4795c3812efb1bef56f7a" translate="yes" xml:space="preserve">
          <source>How do I write a plugin?</source>
          <target state="translated">플러그인은 어떻게 작성합니까?</target>
        </trans-unit>
        <trans-unit id="d9a3577d21f965330880ee386afae1eb7414aeeb" translate="yes" xml:space="preserve">
          <source>How do developers run the application locally?</source>
          <target state="translated">개발자는 응용 프로그램을 로컬에서 어떻게 실행합니까?</target>
        </trans-unit>
        <trans-unit id="f2418b2398aec3dc28ccd6328e3038dcefabfc7c" translate="yes" xml:space="preserve">
          <source>How does Input precedence work?</source>
          <target state="translated">입력 우선 순위는 어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="7f26031702ce5d048f4533c86f2edb7661c72723" translate="yes" xml:space="preserve">
          <source>How does the Obvious Fix Rule Work?</source>
          <target state="translated">명백한 수정 규칙은 어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="a9fe4d75563492b062ea2ad4d57142894aeae639" translate="yes" xml:space="preserve">
          <source>How external IPs should be allocated for this NAT. Valid values are &lt;code&gt;AUTO_ONLY&lt;/code&gt; for only allowing NAT IPs allocated by Google Cloud Platform, or &lt;code&gt;MANUAL_ONLY&lt;/code&gt; for only user-allocated NAT IP addresses.</source>
          <target state="translated">이 NAT에 대해 외부 IP를 할당하는 방법. 유효한 값은 Google Cloud Platform에서 할당 한 NAT IP 만 허용하는 경우 &lt;code&gt;AUTO_ONLY&lt;/code&gt; , 사용자가 할당 한 NAT IP 주소 만 &lt;code&gt;MANUAL_ONLY&lt;/code&gt; 하는 경우 MANUAL_ONLY 입니다.</target>
        </trans-unit>
        <trans-unit id="bf72a0adb11a1aafec90936ce27a0f29eed21cc8" translate="yes" xml:space="preserve">
          <source>How file staging (via temporary files) is done. When &lt;code&gt;true&lt;/code&gt;, temporary files are created in the directory in which files will reside. When &lt;code&gt;false&lt;/code&gt;, temporary files are created under &lt;code&gt;ENV['TMP']&lt;/code&gt;</source>
          <target state="translated">파일 스테이징 (임시 파일을 통해)이 수행되는 방법. 때 &lt;code&gt;true&lt;/code&gt; , 임시 파일 디렉토리에 생성되는 파일이 존재합니다. 때 &lt;code&gt;false&lt;/code&gt; , 임시 파일에 생성되는 &lt;code&gt;ENV['TMP']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ccdae44004b89b4b3255106c01505ef3baecb11" translate="yes" xml:space="preserve">
          <source>How file staging (via temporary files) is done. When &lt;code&gt;true&lt;/code&gt;, temporary files are created in the directory in which files will reside. When &lt;code&gt;false&lt;/code&gt;, temporary files are created under &lt;code&gt;ENV['TMP']&lt;/code&gt;. Default value: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">임시 파일을 통한 파일 준비 방법 때 &lt;code&gt;true&lt;/code&gt; , 임시 파일 디렉토리에 생성되는 파일이 존재합니다. 때 &lt;code&gt;false&lt;/code&gt; , 임시 파일에 생성되는 &lt;code&gt;ENV['TMP']&lt;/code&gt; . 기본 값 : &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89d995e05d28c71aae983666409f711c37cd419d" translate="yes" xml:space="preserve">
          <source>How frequently to poll the service for health status in seconds. We recommend setting this to at least 5 times the value of &lt;code&gt;leaderl.leader_ttl_seconds&lt;/code&gt;.</source>
          <target state="translated">상태에 대해 서비스를 폴링하는 빈도 (초)입니다. 이 값을 &lt;code&gt;leaderl.leader_ttl_seconds&lt;/code&gt; 값의 최소 5 배로 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1b75a81a96b1e8dc48c65dc88d2f30916a35fd86" translate="yes" xml:space="preserve">
          <source>How is Chef InSpec different from Serverspec</source>
          <target state="translated">Chef InSpec과 Serverspec의 차이점</target>
        </trans-unit>
        <trans-unit id="3acc80c76a36b42b4be5d83864a9f6124077aa01" translate="yes" xml:space="preserve">
          <source>How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.</source>
          <target state="translated">실패를 주장하기 전에 대기하는 시간 (초)입니다. 기본값은 5 초입니다. timeoutSec이 checkIntervalSec보다 큰 값을 갖는 것은 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b551bbdb9d4287b1607da56d46b443c0f5d1f684" translate="yes" xml:space="preserve">
          <source>How long ago, in days, since the user last used their console password. Returns &lt;code&gt;-1&lt;/code&gt; if the password has never been used.</source>
          <target state="translated">사용자가 콘솔 비밀번호를 마지막으로 사용한 이후 며칠 전입니다. 암호를 사용한 적이 없으면 &lt;code&gt;-1&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7ce724d389213388cd14a4322964bacad7586d07" translate="yes" xml:space="preserve">
          <source>How long to retain unacknowledged messages in the subscription&amp;rsquo;s backlog, from the moment a message is published. If retainAckedMessages is true, then this also configures the retention of acknowledged messages, and thus configures how far back in time a subscriptions.seek can be done. Defaults to 7 days. Cannot be more than 7 days (&lt;code&gt;&quot;604800s&quot;&lt;/code&gt;) or less than 10 minutes (&lt;code&gt;&quot;600s&quot;&lt;/code&gt;). A duration in seconds with up to nine fractional digits, terminated by &amp;rsquo;s'. Example: &lt;code&gt;&quot;600.5s&quot;&lt;/code&gt;.</source>
          <target state="translated">메시지가 게시 된 시점부터 구독의 백 로그에 미확인 메시지를 보관하는 기간입니다. preserveAckedMessages가 true이면 확인 된 메시지의 보존도 구성하므로 subscriptions.seek를 수행 할 수있는 시간을 얼마나 거슬러 올라갈 수 있는지 구성합니다. 기본값은 7 일입니다. 7 일 ( &lt;code&gt;&quot;604800s&quot;&lt;/code&gt; )을 초과하거나 10 분 ( &lt;code&gt;&quot;600s&quot;&lt;/code&gt; ) 미만일 수 없습니다 . 's'로 끝나는 최대 9 개의 소수 자릿수가있는 기간 (초)입니다. 예 : &lt;code&gt;&quot;600.5s&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d177fc804e3be947166f925eb09565af347438f6" translate="yes" xml:space="preserve">
          <source>How long to wait for a operation to complete before raising an error (default: 120)</source>
          <target state="translated">오류가 발생하기 전에 작업이 완료 될 때까지 기다리는 시간 (기본값 : 120)</target>
        </trans-unit>
        <trans-unit id="36f862b5c3c1be45be26905275a59a160d4bd63a" translate="yes" xml:space="preserve">
          <source>How long to wait for a operation to complete before raising an error (default: 60)</source>
          <target state="translated">오류가 발생하기 전에 작업이 완료 될 때까지 기다리는 시간 (기본값 : 60)</target>
        </trans-unit>
        <trans-unit id="9061185bcfd0f6d324cdf69d719413fb0cfe5eb7" translate="yes" xml:space="preserve">
          <source>How long to wait for a operation to complete before raising an error (default: 7200)</source>
          <target state="translated">오류가 발생하기 전에 작업이 완료 될 때까지 기다리는 시간 (기본값 : 7200)</target>
        </trans-unit>
        <trans-unit id="e5720e115a9505cedd59876d9eab559ff2bcd00e" translate="yes" xml:space="preserve">
          <source>How many days ago the Access Key was created.</source>
          <target state="translated">액세스 키가 생성 된 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="bcad77a18382940f026cc73916e19cdc69c3f977" translate="yes" xml:space="preserve">
          <source>How many days ago the Key was last used.</source>
          <target state="translated">키가 마지막으로 사용 된 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="e6b83a92091aa96251c6caec66fa975f69215eb8" translate="yes" xml:space="preserve">
          <source>How many hours ago the Access Key was created.</source>
          <target state="translated">액세스 키가 생성 된 시간입니다.</target>
        </trans-unit>
        <trans-unit id="730b1fae5e446f40124ce064932a7d26870452be" translate="yes" xml:space="preserve">
          <source>How many hours ago the Key was last used.</source>
          <target state="translated">키가 마지막으로 사용 된 시간입니다.</target>
        </trans-unit>
        <trans-unit id="df3993d551e92ae9b5cdef61c61ebedf8d346b7c" translate="yes" xml:space="preserve">
          <source>How many seconds to wait between polling for status updates (default: 2)</source>
          <target state="translated">상태 업데이트를위한 폴링 사이에 대기 할 시간 (초) (기본값 : 2)</target>
        </trans-unit>
        <trans-unit id="27225d127e1164f54b83bbe542ff40461794d9df" translate="yes" xml:space="preserve">
          <source>How many seconds to wait between polling requests while waiting for Elasticsearch operations. Default value &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">Elasticsearch 작업을 기다리는 동안 폴링 요청 사이에 대기하는 시간 (초)입니다. 기본값 &lt;code&gt;5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ca41bcb7c8be8be082b8443dbe26706799b3160" translate="yes" xml:space="preserve">
          <source>How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds. Valid range is [1, 86400].</source>
          <target state="translated">실패한 요청으로 간주하기 전에 백엔드를 기다리는 시간 (초)입니다. 기본값은 30 초입니다. 유효한 범위는 [1, 86400]입니다.</target>
        </trans-unit>
        <trans-unit id="e9358e913155d8faff64080693ca5d839e10d65f" translate="yes" xml:space="preserve">
          <source>How many seconds to wait for the status to be healthy before returning an error (default: 600)</source>
          <target state="translated">오류를 반환하기 전에 상태가 정상이 될 때까지 기다리는 시간 (초) (기본값 : 600)</target>
        </trans-unit>
        <trans-unit id="95cde97f786d0e0f265679b9b05c50ac8b17e90f" translate="yes" xml:space="preserve">
          <source>How many times a given rumor has been shared with a given member</source>
          <target state="translated">주어진 소문이 주어진 회원과 공유 된 횟수</target>
        </trans-unit>
        <trans-unit id="b6649a499893d04f77af5fc93ea2549f6a0cfc66" translate="yes" xml:space="preserve">
          <source>How members should be appended and/or removed from a group. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;members&lt;/code&gt; are appended and &lt;code&gt;excluded_members&lt;/code&gt; are removed. When &lt;code&gt;false&lt;/code&gt;, group members are reset to the value of the &lt;code&gt;members&lt;/code&gt; property.</source>
          <target state="translated">그룹에서 구성원을 추가 및 / 또는 제거하는 방법. 때 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;members&lt;/code&gt; 추가됩니다 및 &lt;code&gt;excluded_members&lt;/code&gt; 이 제거됩니다. 때 &lt;code&gt;false&lt;/code&gt; , 그룹 구성원의 값으로 재설정됩니다 &lt;code&gt;members&lt;/code&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="253bf9513b0026db986c6931ef4e64c47a45272b" translate="yes" xml:space="preserve">
          <source>How members should be appended and/or removed from a group. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;members&lt;/code&gt; are appended and &lt;code&gt;excluded_members&lt;/code&gt; are removed. When &lt;code&gt;false&lt;/code&gt;, group members are reset to the value of the &lt;code&gt;members&lt;/code&gt; property. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">그룹에서 구성원을 추가 및 / 또는 제거하는 방법 때 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;members&lt;/code&gt; 추가됩니다 및 &lt;code&gt;excluded_members&lt;/code&gt; 이 제거됩니다. 때 &lt;code&gt;false&lt;/code&gt; , 그룹 구성원의 값으로 재설정됩니다 &lt;code&gt;members&lt;/code&gt; 속성입니다. 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d879bb0c59a71338c8f7b2e25ee381197088233" translate="yes" xml:space="preserve">
          <source>How often (in seconds) to send a health check. The default value is 5 seconds.</source>
          <target state="translated">상태 확인을 보내는 빈도 (초)입니다. 기본값은 5 초입니다.</target>
        </trans-unit>
        <trans-unit id="9121f49ea12e0e58b4e9d4e291eb71c38683c004" translate="yes" xml:space="preserve">
          <source>How often Chef Infra Server should cull aged-out Chef Automate HTTP workers that have exceeded their &lt;code&gt;http_max_age&lt;/code&gt;, specified as an Erlang tuple.</source>
          <target state="translated">Chef Infra Server가 Erlang 튜플로 지정된 &lt;code&gt;http_max_age&lt;/code&gt; 를 초과 한 만료 된 Chef Automate HTTP 작업자를 제거해야하는 빈도 입니다.</target>
        </trans-unit>
        <trans-unit id="cbbaca139b739e247b2d58d3f34a43a805ac6c7e" translate="yes" xml:space="preserve">
          <source>How often etcd is updated with the leader service&amp;rsquo;s current status in seconds.</source>
          <target state="translated">리더 서비스의 현재 상태로 etcd가 업데이트되는 빈도 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="44e00dbcd08f38571227e355446294cfdcb69dc8" translate="yes" xml:space="preserve">
          <source>How often in seconds that &lt;code&gt;inspec&lt;/code&gt; runs. Default is &lt;code&gt;1800&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;inspec&lt;/code&gt; 이 실행되는 빈도 (초) . 기본값은 &lt;code&gt;1800&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="79132fd5e3459264e2a0d95e549dd66bb6df27ea" translate="yes" xml:space="preserve">
          <source>How often should the Gorilla client check for updates.</source>
          <target state="translated">Gorilla 클라이언트가 업데이트를 확인하는 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="30daf1cca2aae0e7c316afaa670643d8bb8ebab9" translate="yes" xml:space="preserve">
          <source>How often to check that leaderl is registered with the Erlang Port Mapping Daemon (epmd) in milliseconds.</source>
          <target state="translated">leaderl이 밀리 초 단위로 Epmd (Erlang Port Mapping Daemon)에 등록되어 있는지 확인하는 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="3ffac7aa061e93227e625147dd97af75fc0310f5" translate="yes" xml:space="preserve">
          <source>How often to scan for marked nodes for deletion and removal.</source>
          <target state="translated">삭제 및 제거를 위해 표시된 노드를 스캔하는 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="2d40cc2eefc08b5436db756df74b93c10b5e4dfc" translate="yes" xml:space="preserve">
          <source>How often to scan the nodes to check if they are missing.</source>
          <target state="translated">노드가 누락되었는지 확인하기 위해 노드를 스캔하는 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="0028bb194f38293333ccd9a45b46e5da885c8438" translate="yes" xml:space="preserve">
          <source>How often we check for a change in the leader service&amp;rsquo;s status in seconds.</source>
          <target state="translated">리더 서비스의 상태 변경을 확인하는 빈도 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="1cdb67bc3e9f2fd6f3870d0f2318dd78eb16c807" translate="yes" xml:space="preserve">
          <source>How stages of the pipeline are associated with actual infrastructure environments is flexible. For example, you can have dedicated infrastructure for each stage. This allows each stage to operate independently.</source>
          <target state="translated">파이프 라인의 단계가 실제 인프라 환경과 연결되는 방식은 유연합니다. 예를 들어 각 단계에 대한 전용 인프라를 가질 수 있습니다. 이를 통해 각 단계가 독립적으로 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d3f978e1bcc72cb7822285624f55e96d3e2731b" translate="yes" xml:space="preserve">
          <source>How the chef-client handles certain situations when the target file turns out not to be a file. For example, when a target file is actually a symlink. Set to &lt;code&gt;true&lt;/code&gt; for the chef-client delete the non-file target and replace it with the specified file. Set to &lt;code&gt;false&lt;/code&gt; for the chef-client to raise an error. Default value: &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">대상 파일이 파일이 아닌 것으로 판명 될 때 요리사 클라이언트가 특정 상황을 처리하는 방법 예를 들어, 대상 파일이 실제로 심볼릭 링크 인 경우입니다. chef-client가 파일이 아닌 대상을 삭제하고 지정된 파일로 바꾸 려면 &lt;code&gt;true&lt;/code&gt; 로 설정 하십시오. 요리사 클라이언트가 오류를 발생 시키 려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 . 기본 값 : &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86eaefde863f7d297941182c9b215cf4a7397450" translate="yes" xml:space="preserve">
          <source>How the disk was created. Typically for data disks, this will be the string value &amp;lsquo;Empty&amp;rsquo;.</source>
          <target state="translated">디스크가 생성 된 방법. 일반적으로 데이터 디스크의 경우 문자열 값 'Empty'가됩니다.</target>
        </trans-unit>
        <trans-unit id="360dc953f63a8230b9c58166442fc3605040e2ce" translate="yes" xml:space="preserve">
          <source>How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.</source>
          <target state="translated">이 저장소가 Cloud Pub / Sub를 통해 저장소에 변경 사항을 게시하는 방법입니다. 주제 이름으로 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="c2401c51ca15457441cc0c6df874a2e3ddbf7ca4" translate="yes" xml:space="preserve">
          <source>How to Add an Environment Value for Project Assignment</source>
          <target state="translated">프로젝트 할당을위한 환경 값을 추가하는 방법</target>
        </trans-unit>
        <trans-unit id="4f7d4de6f52e1048963590c1c637b76e80dbf2b6" translate="yes" xml:space="preserve">
          <source>How to combine the results of multiple conditions to determine if an incident should be opened.</source>
          <target state="translated">여러 조건의 결과를 결합하여 인시던트를 개시해야하는지 결정하는 방법.</target>
        </trans-unit>
        <trans-unit id="25cd0662514e5683c1de0a532907ef3d06e8d150" translate="yes" xml:space="preserve">
          <source>How to enable FIPS mode for the Chef Automate server</source>
          <target state="translated">Chef Automate 서버에 대해 FIPS 모드를 활성화하는 방법</target>
        </trans-unit>
        <trans-unit id="89a9a3b39559862c7288df653f48b5e7aff43164" translate="yes" xml:space="preserve">
          <source>How to enable FIPS mode for the Chef Infra Client</source>
          <target state="translated">Chef Infra Client에 대해 FIPS 모드를 활성화하는 방법</target>
        </trans-unit>
        <trans-unit id="7ccd988fb667d48be96b3f52707322ff2707bba0" translate="yes" xml:space="preserve">
          <source>How to enable FIPS mode for the Chef Infra Server</source>
          <target state="translated">Chef Infra Server에 대해 FIPS 모드를 활성화하는 방법</target>
        </trans-unit>
        <trans-unit id="5a156a5196d21b423d9ebf00a3c55f637f853fde" translate="yes" xml:space="preserve">
          <source>How to enable FIPS mode for workstations</source>
          <target state="translated">워크 스테이션에 대해 FIPS 모드를 활성화하는 방법</target>
        </trans-unit>
        <trans-unit id="c733c3c4ce352937574d92d790c7047bb8b9ad02" translate="yes" xml:space="preserve">
          <source>How to enable FIPS mode in the Operating System</source>
          <target state="translated">운영 체제에서 FIPS 모드를 활성화하는 방법</target>
        </trans-unit>
        <trans-unit id="1b4784ad438640a9b20e02ab2b6fde43afcba443" translate="yes" xml:space="preserve">
          <source>How to run the DevSec Docker baseline profile</source>
          <target state="translated">DevSec Docker 기준 프로필을 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="bb58864b2d99865b5d5dcac7454995241854ed4f" translate="yes" xml:space="preserve">
          <source>How you connect to a remote host via &lt;code&gt;chef-run&lt;/code&gt;, either WinRM or SSH.</source>
          <target state="translated">WinRM 또는 SSH 를 통해 &lt;code&gt;chef-run&lt;/code&gt; 을 통해 원격 호스트에 연결하는 방법 .</target>
        </trans-unit>
        <trans-unit id="cb10766b7c41fd11874401098fe0a2196f35d07b" translate="yes" xml:space="preserve">
          <source>However if the failing node cannot be brought back online, it must be replaced:</source>
          <target state="translated">그러나 실패한 노드를 온라인으로 되돌릴 수없는 경우 교체해야합니다.</target>
        </trans-unit>
        <trans-unit id="b00c659e2a433ff177278be5616625cb097e9494" translate="yes" xml:space="preserve">
          <source>However if you&amp;rsquo;re not an existing Hosted Chef user, you&amp;rsquo;ve most likely created your cookbooks within another repository with its own Knife configuration. Instead of modifying your workstation setup, simply add the path to your cookbook repository under the &lt;code&gt;cookbook_path&lt;/code&gt; setting in your Hosted Chef chef-repo. For example:</source>
          <target state="translated">그러나 기존 Hosted Chef 사용자가 아닌 경우 고유 한 Knife 구성을 사용하여 다른 리포지토리 내에 요리 책을 만들었을 가능성이 높습니다. 워크 스테이션 설정을 수정하는 대신 Hosted Chef chef-repo 의 &lt;code&gt;cookbook_path&lt;/code&gt; 설정 아래에 쿡북 저장소 경로를 추가하기 만하면 됩니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="40961c48ac665479b486b68e30f76e0043f668a2" translate="yes" xml:space="preserve">
          <source>However, contrary to how &lt;em&gt;User Search&lt;/em&gt; works, an empty result from &lt;em&gt;Group Search&lt;/em&gt; will not inhibit sign in, it will merely not populate the user&amp;rsquo;s internal record with any groups.</source>
          <target state="translated">그러나 &lt;em&gt;사용자 검색의&lt;/em&gt; 작동 방식과 달리 &lt;em&gt;그룹 검색&lt;/em&gt; 의 빈 결과는 로그인을 금지하지 않으며 사용자의 내부 레코드를 그룹으로 채우지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5d12dc3f259a2c862ad58945afe31f0cf6466d0e" translate="yes" xml:space="preserve">
          <source>However, during the first Chef Infra Client run, this private key does not exist. Instead, Chef Infra Client attempts to use the private key assigned to the chef-validator, located in &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt;. (If, for any reason, the chef-validator is unable to make an authenticated request to the Chef Infra Server, the initial Chef Infra Client run will fail.)</source>
          <target state="translated">그러나 첫 번째 Chef Infra Client 실행 중에는이 개인 키가 존재하지 않습니다. 대신 Chef Infra Client는 &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt; 에있는 chef-validator에 할당 된 개인 키를 사용하려고 시도합니다 . (어떤 이유로 든 chef-validator가 Chef Infra Server에 인증 된 요청을 할 수없는 경우 초기 Chef Infra Client 실행이 실패합니다.)</target>
        </trans-unit>
        <trans-unit id="4b7fdf536e98c1d8644488901d77f0f0605682d5" translate="yes" xml:space="preserve">
          <source>However, during the first chef-client run, this private key does not exist. Instead, the chef-client will attempt to use the private key assigned to the chef-validator, located in &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt;. (If, for any reason, the chef-validator is unable to make an authenticated request to the Chef server, the initial chef-client run will fail.)</source>
          <target state="translated">그러나 첫 요리사-클라이언트 실행 중에는이 개인 키가 존재하지 않습니다. 대신 chef-client는 &lt;code&gt;/etc/chef/validation.pem&lt;/code&gt; 에있는 chef-validator에 지정된 개인 키를 사용하려고 시도합니다 . (어떤 이유로 요리사 유효성 검사기가 Chef 서버에 인증 된 요청을 할 수없는 경우 초기 chef-client 실행은 실패합니다.)</target>
        </trans-unit>
        <trans-unit id="e97b2038dac052a19bd7b7445ee653b33bb56113" translate="yes" xml:space="preserve">
          <source>However, if readability of code is desired, such as ensuring that a reader understands what the default action is for a custom resource or stating the action for a resource whose default may not be immediately obvious to the reader, specifying the default action is recommended:</source>
          <target state="translated">그러나 독자가 사용자 정의 자원에 대한 기본 조치가 무엇인지 이해하도록하거나, 디폴트가 독자에게 즉시 명확하지 않을 수있는 자원에 대한 조치를 설명하는 것과 같이 코드의 가독성이 필요한 경우 기본 조치를 지정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cca1ac4f8a76e02304a51de387dcb242d4dfc93b" translate="yes" xml:space="preserve">
          <source>However, if you wish to integrate with an LDAP server with TLS disabled:</source>
          <target state="translated">그러나 TLS가 비활성화 된 LDAP 서버와 통합하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="e6fb922c34e266f0a3b5d1f6a477a59b8ef5bd1f" translate="yes" xml:space="preserve">
          <source>However, if your schema looks like this &amp;ndash; with no list of members in your group entries:</source>
          <target state="translated">그러나 스키마가 다음과 같으면 그룹 항목에 구성원 목록이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6077e3b0ef8457d7e561ade253ceb4a1ba6cefc0" translate="yes" xml:space="preserve">
          <source>Human readable title. Does not affect behavior.</source>
          <target state="translated">사람이 읽을 수있는 제목입니다. 행동에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c628e9b6759a1b6af8be6e642e3081565c24d6c" translate="yes" xml:space="preserve">
          <source>Human readable title. Must be unique within the Policy.</source>
          <target state="translated">사람이 읽을 수있는 제목입니다. 정책 내에서 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="e36dad753ea4d2e74c07329bab38e7b986dbe99c" translate="yes" xml:space="preserve">
          <source>Human-friendly representation of the condition</source>
          <target state="translated">인간 친화적 인 상태 표현</target>
        </trans-unit>
        <trans-unit id="92bfe0468f0946d6d3157c3b72b290ed619aed56" translate="yes" xml:space="preserve">
          <source>Human-readable description for the role</source>
          <target state="translated">역할에 대한 사람이 읽을 수있는 설명</target>
        </trans-unit>
        <trans-unit id="7007a4b9b989cb2f07ef354bfc4f2ebc31f531c1" translate="yes" xml:space="preserve">
          <source>Human-readable description of the trigger.</source>
          <target state="translated">사람이 읽을 수있는 트리거 설명입니다.</target>
        </trans-unit>
        <trans-unit id="d72acaa56106c5e19ca50b361e5c465627e20e1e" translate="yes" xml:space="preserve">
          <source>Hyper-V Containers</source>
          <target state="translated">Hyper-V 컨테이너</target>
        </trans-unit>
        <trans-unit id="4448080bae662e380d7a34fbdebe48389e20527e" translate="yes" xml:space="preserve">
          <source>I don&amp;rsquo;t see a way to select the version of the API in the Azure documents. If you notice a newer version being referenced in the official documentation please open an issue or submit a pull request using the updated version.</source>
          <target state="translated">Azure 문서에서 API 버전을 선택하는 방법이 보이지 않습니다. 공식 문서에서 최신 버전이 참조되는 것을 발견하면 문제를 열거 나 업데이트 된 버전을 사용하여 풀 요청을 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="574fec2130cbf8693a8940133201b68a63e48f96" translate="yes" xml:space="preserve">
          <source>I scheduled a job to run against my aws-ec2 instances once a day. What happens when I add new instances to the account, or remove some?</source>
          <target state="translated">하루에 한 번 aws-ec2 인스턴스에 대해 실행되도록 작업을 예약했습니다. 계정에 새 인스턴스를 추가하거나 일부를 제거하면 어떻게됩니까?</target>
        </trans-unit>
        <trans-unit id="b893c11203c15b778038ad64b9c1077ffbea9e4a" translate="yes" xml:space="preserve">
          <source>IAM Action</source>
          <target state="translated">IAM 작업</target>
        </trans-unit>
        <trans-unit id="05582c88b1274c539782367c54ced7bb38c7a53c" translate="yes" xml:space="preserve">
          <source>IAM Actions</source>
          <target state="translated">IAM 작업</target>
        </trans-unit>
        <trans-unit id="94c7179de30ba9eaef102a38556f013e5abfdad6" translate="yes" xml:space="preserve">
          <source>IAM Overview</source>
          <target state="translated">IAM 개요</target>
        </trans-unit>
        <trans-unit id="a44ab55c9ad21c710aa10f4a33cedbcfaa960dc2" translate="yes" xml:space="preserve">
          <source>IAM Users Guide</source>
          <target state="translated">IAM 사용 설명서</target>
        </trans-unit>
        <trans-unit id="51a61a7e5dd91a06c938c8832e84709709fd958e" translate="yes" xml:space="preserve">
          <source>IAM distinguishes two types of policies: &lt;em&gt;Chef-managed&lt;/em&gt; and &lt;em&gt;Custom&lt;/em&gt;. Chef provides &lt;em&gt;Chef-managed&lt;/em&gt; policies, which are integral to the operation of Chef Automate. You cannot change the policy statements in Chef-managed policies. &lt;em&gt;Custom&lt;/em&gt; policies are policies that you create for your own needs. You can add, edit, and delete policy statements in your custom policies.</source>
          <target state="translated">IAM은 &lt;em&gt;Chef 관리 형&lt;/em&gt; 과 &lt;em&gt;Custom&lt;/em&gt; 이라는 두 가지 유형의 정책을 구분 합니다. Chef는 Chef Automate 운영에 필수적인 &lt;em&gt;Chef 관리&lt;/em&gt; 정책을 제공합니다 . Chef 관리 형 정책에서는 정책 설명을 변경할 수 없습니다. &lt;em&gt;사용자 지정&lt;/em&gt; 정책은 자신의 필요에 맞게 만드는 정책입니다. 사용자 지정 정책에서 정책 설명을 추가, 편집 및 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ee681f729468ea38bc65570db23050e83d1d930" translate="yes" xml:space="preserve">
          <source>IAM projects are collections of resources either created in Chef Automate or ingested from external data providers, such as Chef Infra and Chef InSpec. Projects used in a policy reduce the scope of that policy&amp;rsquo;s permissions to only the resources assigned to the given projects.</source>
          <target state="translated">IAM 프로젝트는 Chef Automate에서 생성되거나 Chef Infra 및 Chef InSpec과 같은 외부 데이터 제공 업체에서 수집 된 리소스 모음입니다. 정책에 사용되는 프로젝트는 해당 정책의 권한 범위를 지정된 프로젝트에 할당 된 리소스로만 줄입니다.</target>
        </trans-unit>
        <trans-unit id="b760505fcff6a36b18864a50c45fbe72e245fd9b" translate="yes" xml:space="preserve">
          <source>IAM uses multi-statement policies that support complex permissions. Each statement in a policy specifies a single permission. Chef Automate determines a policy&amp;rsquo;s net effect through the evaluation and combinations of permission statements. If at least one statement allows access, and none denies it, then the policy allows access. Otherwise, access denied.</source>
          <target state="translated">IAM은 복잡한 권한을 지원하는 다중 문 정책을 사용합니다. 정책의 각 문은 단일 권한을 지정합니다. Chef Automate는 권한 설명의 평가 및 조합을 통해 정책의 순 효과를 결정합니다. 하나 이상의 문이 액세스를 허용하고 거부하는 문이 없으면 정책이 액세스를 허용합니다. 그렇지 않으면 액세스가 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="04edada7de5c937075ece01e26a32c17f9a92645" translate="yes" xml:space="preserve">
          <source>IAM v2 policy &lt;em&gt;membership&lt;/em&gt; is separate and distinct from policy &lt;em&gt;definition&lt;/em&gt;. (Notice that members were &lt;strong&gt;not&lt;/strong&gt; included as part of the &lt;a href=&quot;index#policy-definition&quot;&gt;Policy Definition&lt;/a&gt;.) You can edit policy membership for any policy, but you can adjust only the policy definition for &lt;em&gt;Custom&lt;/em&gt; policies.</source>
          <target state="translated">IAM v2 정책 &lt;em&gt;멤버십&lt;/em&gt; 은 정책 &lt;em&gt;정의&lt;/em&gt; 와 별개이며 구별 &lt;em&gt;됩니다&lt;/em&gt; . (구성원은 &lt;a href=&quot;index#policy-definition&quot;&gt;정책 정의의&lt;/a&gt; 일부로 포함 &lt;strong&gt;되지 않았습니다&lt;/strong&gt; .) 모든 정책에 대한 정책 구성원을 편집 할 수 있지만 &lt;em&gt;사용자 지정&lt;/em&gt; 정책에 대한 정책 정의 만 조정할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bff0c6ac047e56876d00f06b13f76e7d36c0cdb8" translate="yes" xml:space="preserve">
          <source>IBM AIX</source>
          <target state="translated">IBM AIX</target>
        </trans-unit>
        <trans-unit id="0c9764cf02c2602fa0fc3a4c516114145d0695da" translate="yes" xml:space="preserve">
          <source>IBM AIX 6.1</source>
          <target state="translated">IBM AIX 6.1</target>
        </trans-unit>
        <trans-unit id="99f48f9da1df032aa4755874f3cf148a6cf70607" translate="yes" xml:space="preserve">
          <source>IBM End of Support Date</source>
          <target state="translated">IBM 지원 종료 날짜</target>
        </trans-unit>
        <trans-unit id="05eceda6422a03ec5753d0eadfaabf336216fa00" translate="yes" xml:space="preserve">
          <source>ICMP</source>
          <target state="translated">ICMP</target>
        </trans-unit>
        <trans-unit id="89f89c02cf47e091e726a4e07b88af0966806897" translate="yes" xml:space="preserve">
          <source>ID</source>
          <target state="translated">ID</target>
        </trans-unit>
        <trans-unit id="db31b320544af3b37bad3d8837da175609e0e7e3" translate="yes" xml:space="preserve">
          <source>ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.</source>
          <target state="translated">Cloud Source Repository를 소유 한 프로젝트의 ID입니다. 생략하면 빌드를 요청하는 프로젝트 ID로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="22b30a46810b9cd854141de0f7bb0c240d29bfd5" translate="yes" xml:space="preserve">
          <source>IDENT</source>
          <target state="translated">IDENT</target>
        </trans-unit>
        <trans-unit id="61a7855db1cb90c89e9207b3991fb3d116862cb8" translate="yes" xml:space="preserve">
          <source>IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version is 2.</source>
          <target state="translated">피어 VPN 게이트웨이로 VPN 터널을 설정할 때 사용할 IKE 프로토콜 버전입니다. 허용되는 IKE 버전은 1 또는 2입니다. 기본 버전은 2입니다.</target>
        </trans-unit>
        <trans-unit id="ec656408a58006b8d446cf264849aac20d520e81" translate="yes" xml:space="preserve">
          <source>INCLUDE_ALL_METADATA</source>
          <target state="translated">INCLUDE_ALL_METADATA</target>
        </trans-unit>
        <trans-unit id="605ce09e79536894d52c0a930e0a91605fd2861d" translate="yes" xml:space="preserve">
          <source>INGRESS</source>
          <target state="translated">INGRESS</target>
        </trans-unit>
        <trans-unit id="c35391cc7b82f6ccca4793a8e8e896ee6abb21d2" translate="yes" xml:space="preserve">
          <source>INT64</source>
          <target state="translated">INT64</target>
        </trans-unit>
        <trans-unit id="0fe37e40e5dab3ac411c2ddca6d21991e811acfa" translate="yes" xml:space="preserve">
          <source>INTEGER</source>
          <target state="translated">INTEGER</target>
        </trans-unit>
        <trans-unit id="bc0a7fedf606734e8b8a7a6a0423b5fd26cf0e94" translate="yes" xml:space="preserve">
          <source>INTERNAL</source>
          <target state="translated">INTERNAL</target>
        </trans-unit>
        <trans-unit id="086dc151ac7e3f456aa55ce5921971f8f125bb89" translate="yes" xml:space="preserve">
          <source>INTERNAL_HTTPS_LOAD_BALANCER</source>
          <target state="translated">INTERNAL_HTTPS_LOAD_BALANCER</target>
        </trans-unit>
        <trans-unit id="dfccefc1a062bbc6bea8a073cd7a0da4f4faf11c" translate="yes" xml:space="preserve">
          <source>INTERNAL_MANAGED</source>
          <target state="translated">INTERNAL_MANAGED</target>
        </trans-unit>
        <trans-unit id="682e7876cfae14f4c49aa2fd779e6668e6a6ab3c" translate="yes" xml:space="preserve">
          <source>INTERNAL_SELF_MANAGED</source>
          <target state="translated">INTERNAL_SELF_MANAGED</target>
        </trans-unit>
        <trans-unit id="80d1891d211053d6c9e93eed8691fefafb2dcecb" translate="yes" xml:space="preserve">
          <source>INTERPRETERS</source>
          <target state="translated">INTERPRETERS</target>
        </trans-unit>
        <trans-unit id="32c1d98029e224d8505f941b1a6c3435ca833989" translate="yes" xml:space="preserve">
          <source>INTERVAL_10_MIN</source>
          <target state="translated">INTERVAL_10_MIN</target>
        </trans-unit>
        <trans-unit id="a2c3947da8664262388d4c18819f59d8eb8df0f9" translate="yes" xml:space="preserve">
          <source>INTERVAL_15_MIN</source>
          <target state="translated">INTERVAL_15_MIN</target>
        </trans-unit>
        <trans-unit id="4367ec77d501c9f09a3d78483778795c08c2d2fe" translate="yes" xml:space="preserve">
          <source>INTERVAL_1_MIN</source>
          <target state="translated">INTERVAL_1_MIN</target>
        </trans-unit>
        <trans-unit id="885774e487b811e2f468bf7bef9882b4b1c6e24b" translate="yes" xml:space="preserve">
          <source>INTERVAL_30_SEC</source>
          <target state="translated">INTERVAL_30_SEC</target>
        </trans-unit>
        <trans-unit id="87796d161bd1e818106000a6ecf161b53ec27d14" translate="yes" xml:space="preserve">
          <source>INTERVAL_5_MIN</source>
          <target state="translated">INTERVAL_5_MIN</target>
        </trans-unit>
        <trans-unit id="d035b655be0076a9e307620b9f7eadc97c51b252" translate="yes" xml:space="preserve">
          <source>INTERVAL_5_SEC</source>
          <target state="translated">INTERVAL_5_SEC</target>
        </trans-unit>
        <trans-unit id="9c1e3933f811fe29849ef8d1d0cbb0de0a661cec" translate="yes" xml:space="preserve">
          <source>IN_USE</source>
          <target state="translated">IN_USE</target>
        </trans-unit>
        <trans-unit id="ea424d38af72dd1366a08aad1f47eca3e7ec3d24" translate="yes" xml:space="preserve">
          <source>IP</source>
          <target state="translated">IP</target>
        </trans-unit>
        <trans-unit id="2ccb5c6f3f5eedcfc4714430d8777d910b94fd71" translate="yes" xml:space="preserve">
          <source>IP Addresses</source>
          <target state="translated">IP 주소</target>
        </trans-unit>
        <trans-unit id="75964ef30c683164a314529e3111c84a1c5129f6" translate="yes" xml:space="preserve">
          <source>IP address of the peer VPN gateway. Only IPv4 is supported.</source>
          <target state="translated">피어 VPN 게이트웨이의 IP 주소입니다. IPv4 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8e6db3c859f68dfa23cfb9c7ed02cb716becf75e" translate="yes" xml:space="preserve">
          <source>IP versions for which the instance has IP addresses assigned.</source>
          <target state="translated">인스턴스에 할당 된 IP 주소가있는 IP 버전입니다.</target>
        </trans-unit>
        <trans-unit id="088bce42e9c79d5b2385b27de19d46e8076d7f2a" translate="yes" xml:space="preserve">
          <source>IPV4</source>
          <target state="translated">IPV4</target>
        </trans-unit>
        <trans-unit id="759f1c1a036684d03fe174d3c3eeb3bbc6dee65c" translate="yes" xml:space="preserve">
          <source>IPV6</source>
          <target state="translated">IPV6</target>
        </trans-unit>
        <trans-unit id="f945be60a2f5d8c86a41515d7cf3108093a42d19" translate="yes" xml:space="preserve">
          <source>IPv4 address of a target name server.</source>
          <target state="translated">대상 이름 서버의 IPv4 주소입니다.</target>
        </trans-unit>
        <trans-unit id="150a051d166ffa3d5dd92fe0584d762b38e2ee2a" translate="yes" xml:space="preserve">
          <source>IRC Snitch</source>
          <target state="translated">IRC 스 니치</target>
        </trans-unit>
        <trans-unit id="e4d773805cf8a24c47b008dd036ad6936efd068b" translate="yes" xml:space="preserve">
          <source>ISO-8859-1</source>
          <target state="translated">ISO-8859-1</target>
        </trans-unit>
        <trans-unit id="835b15f38220cb98f7b3b573e1891bd3193fea95" translate="yes" xml:space="preserve">
          <source>IT, compliance, and security professional require metadata beyond what Serverspec offers, such as criticality, to fully describe controls.</source>
          <target state="translated">IT, 규정 준수 및 보안 전문가는 제어를 완전히 설명하기 위해 Serverspec이 제공하는 것 이상의 메타 데이터 (예 : 중요도)가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f1ef88b1520e9a02603fa86d1237f280ad70c7bb" translate="yes" xml:space="preserve">
          <source>Icon Legend</source>
          <target state="translated">아이콘 범례</target>
        </trans-unit>
        <trans-unit id="bf6e818d14201a38ccb3f0a43a5c953c5bbf9701" translate="yes" xml:space="preserve">
          <source>Icon to use for the shortcut. Accepts the format of &lt;code&gt;path, index&lt;/code&gt;, where index is the icon file to use. See Microsoft&amp;rsquo;s &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/3s9bx7at.aspx&quot;&gt;documentation&lt;/a&gt; for details</source>
          <target state="translated">바로 가기에 사용할 아이콘입니다. &lt;code&gt;path, index&lt;/code&gt; 의 형식을 허용합니다 . 여기서 index는 사용할 아이콘 파일입니다. 자세한 내용은 Microsoft &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/3s9bx7at.aspx&quot;&gt;설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="474ae52625b87d7628ae7b20a499329a99e07119" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>
        </trans-unit>
        <trans-unit id="acbd9eeb35ebb52d5e018626a9e345b59b3a6774" translate="yes" xml:space="preserve">
          <source>Id of the folder that this exclusion applies to.</source>
          <target state="translated">이 제외가 적용되는 폴더의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="3f7bed609fbc81a8297c3734b2848cf330156793" translate="yes" xml:space="preserve">
          <source>Id of the folder that this sink belongs to</source>
          <target state="translated">이 싱크가 속한 폴더의 ID</target>
        </trans-unit>
        <trans-unit id="0651f7a5c80fe9e4468689038b48d7da4fef7e7f" translate="yes" xml:space="preserve">
          <source>Id of the organization</source>
          <target state="translated">조직의 ID</target>
        </trans-unit>
        <trans-unit id="ad24fa70c4e4f481d65b3f44c34d952551fdf4dd" translate="yes" xml:space="preserve">
          <source>Id of the organization that this sink belongs to.</source>
          <target state="translated">이 싱크가 속한 조직의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="30ce03e8456348a19761737370945f3ed6251602" translate="yes" xml:space="preserve">
          <source>Id of the project that owns the service account.</source>
          <target state="translated">서비스 계정을 소유 한 프로젝트의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="273be972a6ddf39f2d8ddac5ae304d43ec8267f8" translate="yes" xml:space="preserve">
          <source>Id of the project that this exclusion applies to.</source>
          <target state="translated">이 제외가 적용되는 프로젝트의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="fc616ced99e4fe651cca3d51bffd5b189dc56546" translate="yes" xml:space="preserve">
          <source>Id of the project that this sink belongs to.</source>
          <target state="translated">이 싱크가 속한 프로젝트의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="1c6052f8157420a0e572b4353f9bae10f03c3667" translate="yes" xml:space="preserve">
          <source>Id will be in format:</source>
          <target state="translated">ID의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8f257ffc911b0bd26ebd05d3d60c3de67b4c0733" translate="yes" xml:space="preserve">
          <source>Id will be in the format:</source>
          <target state="translated">ID의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c05a29e3f92f24936fda5f35eec6779d6be929c0" translate="yes" xml:space="preserve">
          <source>Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed Chef Infra Client runs.</source>
          <target state="translated">이상적으로는 레시피를 디버깅하는 가장 좋은 방법은 처음부터 디버깅 할 필요가없는 것입니다. 즉, 다음 섹션에서는 레시피 디버깅 및 Chef Infra Client 실행 실패에 대한 다양한 접근 방식에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d48482b792e85357622920ed9cb11367d14172d8" translate="yes" xml:space="preserve">
          <source>Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed chef-client runs.</source>
          <target state="translated">레시피를 디버깅하는 가장 좋은 방법은 처음부터 레시피를 디버깅하지 않아도되는 것입니다. 다음 섹션에서는 레시피 디버깅 및 실패한 요리사 클라이언트 실행에 대한 다양한 접근 방식에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="6dac38b73c9cbb47ae1efc6757d3cb23893aea02" translate="yes" xml:space="preserve">
          <source>Identifier of the column family.</source>
          <target state="translated">column family의 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="4aa04ff73c699b424605f2e148b314eadb763dcc" translate="yes" xml:space="preserve">
          <source>Identifies the managed zone addressed by this request.</source>
          <target state="translated">이 요청으로 처리 된 관리 형 영역을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="2757b9a05a248070d988c1ace0cb7bd863be395c" translate="yes" xml:space="preserve">
          <source>Identifies the notification channels to which notifications should be sent when incidents are opened or closed or when new violations occur on an already opened incident. Each element of this array corresponds to the name field in each of the NotificationChannel objects that are returned from the notificationChannels.list method. The syntax of the entries in this field is &lt;code&gt;projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]&lt;/code&gt;</source>
          <target state="translated">인시던트가 열리거나 닫힐 때 또는 이미 열린 인시던트에 새 위반이 발생할 때 알림을 보내야하는 알림 채널을 식별합니다. 이 배열의 각 요소는 notificationChannels.list 메소드에서 리턴 된 각 NotificationChannel 오브젝트의 이름 필드에 해당합니다. 이 필드의 항목 구문은 &lt;code&gt;projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a6f39a969ec56897a223e2bf984ce7352135a8f4" translate="yes" xml:space="preserve">
          <source>Identifies what kind of resource this is</source>
          <target state="translated">이것이 어떤 종류의 자원인지 식별</target>
        </trans-unit>
        <trans-unit id="f8512a256744590f623b5866bee098581acdb3c8" translate="yes" xml:space="preserve">
          <source>Identify a &amp;lsquo;test node&amp;rsquo; - a virtual machine or laptop/desktop that you can test your working cookbook against</source>
          <target state="translated">작업 쿡북을 테스트 할 수있는 가상 머신 또는 랩톱 / 데스크톱 인 '테스트 노드'식별</target>
        </trans-unit>
        <trans-unit id="c57b0d9646e92e31c5971f56d756c00aceaa0b0b" translate="yes" xml:space="preserve">
          <source>Identify a Test Node</source>
          <target state="translated">테스트 노드 식별</target>
        </trans-unit>
        <trans-unit id="c14eb05897127bb21bef36ae4b8acacd1baea7b0" translate="yes" xml:space="preserve">
          <source>Identify each package to be installed (implied in this example, not shown)</source>
          <target state="translated">설치할 각 패키지를 식별하십시오 (표시되지 않은이 예에 포함됨)</target>
        </trans-unit>
        <trans-unit id="f2e7779b3ff1cda9620f94db814d0039ca93b8be" translate="yes" xml:space="preserve">
          <source>Identify the Chef server type: hosted or on-premises</source>
          <target state="translated">Chef 서버 유형 식별 : 호스팅 또는 온-프레미스</target>
        </trans-unit>
        <trans-unit id="aa49d2bcdbdb94c15eed345c15a3646102abfd32" translate="yes" xml:space="preserve">
          <source>Identify the FQDN or IP address of the target node. The &lt;code&gt;knife bootstrap&lt;/code&gt; command requires the FQDN or the IP address for the node in order to complete the bootstrap operation.</source>
          <target state="translated">대상 노드의 FQDN 또는 IP 주소를 식별하십시오. &lt;code&gt;knife bootstrap&lt;/code&gt; 명령은 FQDN 또는 부트 스트랩 작업을 완료하기 위해 노드의 IP 주소가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4a2c2f73e227d1950116baab3c5ff23f2e5f1d16" translate="yes" xml:space="preserve">
          <source>Identify the name of the original non-bootstrap backend server. This is the back end server that does &lt;strong&gt;not&lt;/strong&gt; have &lt;code&gt;:bootstrap =&amp;gt; true&lt;/code&gt; in &lt;code&gt;/etc/opscode/private-chef.rb&lt;/code&gt;.</source>
          <target state="translated">원래의 부트 스트랩이 아닌 백엔드 서버의 이름을 식별하십시오. 이 않는 백 엔드 서버 &lt;strong&gt;하지&lt;/strong&gt; 가 &lt;code&gt;:bootstrap =&amp;gt; true&lt;/code&gt; 에 &lt;code&gt;/etc/opscode/private-chef.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="028e1bea9d04ba19e6c475128db2f02baa1256ec" translate="yes" xml:space="preserve">
          <source>Identify the node with the &lt;strong&gt;leader&lt;/strong&gt; role using the &lt;code&gt;chef-backend-ctl cluster-status&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;chef-backend-ctl cluster-status&lt;/code&gt; 명령 을 사용하여 &lt;strong&gt;리더&lt;/strong&gt; 역할이 있는 노드를 식별합니다 .</target>
        </trans-unit>
        <trans-unit id="4c22595c04e31a9f737b07ac8c773033facf4e57" translate="yes" xml:space="preserve">
          <source>Identify your node or nodes with either the &lt;em&gt;node_id&lt;/em&gt; &amp;ndash;which is the UUID of the node as it appears in Chef Automate&amp;ndash;or the combination of &lt;em&gt;node name&lt;/em&gt;, &lt;em&gt;organization name&lt;/em&gt;, and &lt;em&gt;service hostname&lt;/em&gt;. The &lt;em&gt;service hostname&lt;/em&gt; is the &lt;code&gt;fqdn&lt;/code&gt; of your Chef Infra Server, or the &lt;code&gt;localhost&lt;/code&gt; of chef-solo nodes.</source>
          <target state="translated">Chef Automate에 표시되는 노드의 UUID 인 &lt;em&gt;node_id&lt;/em&gt; 또는 &lt;em&gt;노드 이름&lt;/em&gt; , &lt;em&gt;조직 이름&lt;/em&gt; 및 &lt;em&gt;서비스 호스트 &lt;/em&gt;&lt;em&gt;이름&lt;/em&gt; 의 조합을 사용 하여 노드를 식별합니다 . &lt;em&gt;서비스 호스트 이름&lt;/em&gt; 은 IS &lt;code&gt;fqdn&lt;/code&gt; 당신의 요리사 인프라 서버, 또는 &lt;code&gt;localhost&lt;/code&gt; 요리사 솔로 노드.</target>
        </trans-unit>
        <trans-unit id="91e54f42b3d3d4ea93384277e1341d747299c3bb" translate="yes" xml:space="preserve">
          <source>Identifying Key Types</source>
          <target state="translated">키 유형 식별</target>
        </trans-unit>
        <trans-unit id="0d9891697ce2c6d57a37dadc106b94b619e3e627" translate="yes" xml:space="preserve">
          <source>Identifying information (name, email address, Slack username, etc.) of the person doing the harassing.</source>
          <target state="translated">괴롭힘을하는 사람의 식별 정보 (이름, 이메일 주소, Slack 사용자 이름 등).</target>
        </trans-unit>
        <trans-unit id="d8a45e0b1c4b7b5ffaac86df7b7f17a072214e31" translate="yes" xml:space="preserve">
          <source>Identity and Access Management (IAM)</source>
          <target state="translated">ID 및 액세스 관리 (IAM)</target>
        </trans-unit>
        <trans-unit id="4f54ef30763009cc7446575e9eacddccea91ea47" translate="yes" xml:space="preserve">
          <source>Identity and Access Management policies manage the resources and actions used by identities. Policies are composed of statements that specify permissions.</source>
          <target state="translated">ID 및 액세스 관리 정책은 ID에서 사용하는 리소스와 작업을 관리합니다. 정책은 권한을 지정하는 문으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="2657ec7022c8426dec05fab14899a42b3a71afae" translate="yes" xml:space="preserve">
          <source>Identity and Access Management projects allow for filtering and segregation of your data among your user base.</source>
          <target state="translated">ID 및 액세스 관리 프로젝트를 사용하면 사용자 기반간에 데이터를 필터링하고 분리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="9c5343f7170c083751d63cd1f6241d106950f071" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$pkg_source&lt;/code&gt; is being used, download the software and place it in &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt;. If the source already exists in the cache, verify that the checksum is what we expect, and skip the download. Delegates most of the implementation to the &lt;code&gt;do_default_download()&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;$pkg_source&lt;/code&gt; 를 사용중인 경우 소프트웨어를 다운로드하여 &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt; 합니다. 소스가 이미 캐시에있는 경우 체크섬이 예상 한 값인지 확인하고 다운로드를 건너 뜁니다. 대부분의 구현을 &lt;code&gt;do_default_download()&lt;/code&gt; 함수에 위임 합니다.</target>
        </trans-unit>
        <trans-unit id="1cc74f760808bc91e1d328655295a72c8e3c16f4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$pkg_source&lt;/code&gt; is being used, verify that the package we have in &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt; has the &lt;code&gt;$pkg_shasum&lt;/code&gt; we expect. Delegates most of the implementation to the &lt;code&gt;do_default_verify()&lt;/code&gt; function.</source>
          <target state="translated">경우 &lt;code&gt;$pkg_source&lt;/code&gt; 사용하고, 우리가 가지고있는 패키지 있는지 확인 &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt; 가 &lt;code&gt;$pkg_shasum&lt;/code&gt; 우리가 기대합니다. 대부분의 구현을 &lt;code&gt;do_default_verify()&lt;/code&gt; 함수에 위임 합니다.</target>
        </trans-unit>
        <trans-unit id="4d02aaf7b7578a26e69849014528dd6817e7b26f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$pkg_source&lt;/code&gt; is being used, we take the &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt; from the download step and unpack it,as long as the method of extraction can be determined. This takes place in the $HAB_CACHE_SRC_PATH directory. Delegates most of the implementation to the &lt;code&gt;do_default_unpack()&lt;/code&gt; function.</source>
          <target state="translated">경우 &lt;code&gt;$pkg_source&lt;/code&gt; 사용되는, 우리는 걸릴 &lt;code&gt;$HAB_CACHE_SRC_PATH/$pkg_filename&lt;/code&gt; 한 추출 방법을 결정할 수로, 다운로드 단계에서 그것을 압축을 풉니 다. 이는 $ HAB_CACHE_SRC_PATH 디렉토리에서 발생합니다. 대부분의 구현을 &lt;code&gt;do_default_unpack()&lt;/code&gt; 함수에 위임 합니다.</target>
        </trans-unit>
        <trans-unit id="ffec4aa1b6b590ab5e5085707ee2d3877a9797ac" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:data&lt;/code&gt; is not specified, you get an error: &lt;code&gt;Missing data key in RegistryKey values hash&lt;/code&gt;</source>
          <target state="translated">경우 &lt;code&gt;:data&lt;/code&gt; 지정하지 않으면 오류가 발생합니다 : &lt;code&gt;Missing data key in RegistryKey values hash&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f5625101c1bad02d08cdefd8adf715a7530bf08" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;certificate&lt;/code&gt; and &lt;code&gt;certificate_key&lt;/code&gt; are nil, the SSL Certificate will be auto-generated using the other parameters provided. Otherwise, they are on-disk locations to user-provided certificate.</source>
          <target state="translated">경우 &lt;code&gt;certificate&lt;/code&gt; 및 &lt;code&gt;certificate_key&lt;/code&gt; 가 전무, SSL 인증서는 자동으로 생성 제공하는 다른 매개 변수를 사용하는 것입니다. 그렇지 않으면 사용자가 제공 한 인증서에 대한 디스크상의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="1532cc57e44ca4f61165b4f49f89daa640a8faf3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;chef-automate&lt;/code&gt; encounters an error during execution, it exits with a non-zero error code. Here&amp;rsquo;s what our error codes mean:</source>
          <target state="translated">경우 &lt;code&gt;chef-automate&lt;/code&gt; 실행 중에 오류가 발생, 0이 아닌 에러 코드와 함께 종료됩니다. 오류 코드의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8a7200ffb30f2e4ee2c9fde3f09b7ff2f8dd3aa0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data:&lt;/code&gt; is not specified, you get an error: &lt;code&gt;Missing data key in RegistryKey values hash&lt;/code&gt;</source>
          <target state="translated">경우 &lt;code&gt;data:&lt;/code&gt; : 지정되지 않은 오류 얻을 &lt;code&gt;Missing data key in RegistryKey values hash&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77418accde331d68a0ecb1c7904c45b7cb1fa00a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;delivery init --a2-mode&lt;/code&gt; results in:</source>
          <target state="translated">경우 &lt;code&gt;delivery init --a2-mode&lt;/code&gt; 결과에 :</target>
        </trans-unit>
        <trans-unit id="e53c11ac39940f5465ad4c7c301ef64efbcddb75" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;elasticsearch['urls']&lt;/code&gt; is specified with Amazon elasticsearch url then &lt;code&gt;elasticsearch['role_arn']&lt;/code&gt; value will be required.</source>
          <target state="translated">경우 &lt;code&gt;elasticsearch['urls']&lt;/code&gt; 아마존 지정된 URL elasticsearch 다음 &lt;code&gt;elasticsearch['role_arn']&lt;/code&gt; 값이 요구 될 것이다.</target>
        </trans-unit>
        <trans-unit id="17371e46008718ee13bf6dd52c7b526ef7ebebd4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;force_default!&lt;/code&gt; is written:</source>
          <target state="translated">&lt;code&gt;force_default!&lt;/code&gt; 경우 ! 쓰여지 다:</target>
        </trans-unit>
        <trans-unit id="bc4c2374374b8c83142165234c51b9f6a0a03b98" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, &lt;code&gt;ftp_proxy&lt;/code&gt;, or &lt;code&gt;no_proxy&lt;/code&gt; is set in the client.rb file but not set in the &lt;code&gt;ENV&lt;/code&gt;, Chef Infra Client will configure the &lt;code&gt;ENV&lt;/code&gt; variable based on these (and related) settings. For example:</source>
          <target state="translated">경우 &lt;code&gt;http_proxy&lt;/code&gt; , &lt;code&gt;https_proxy&lt;/code&gt; 를 , &lt;code&gt;ftp_proxy&lt;/code&gt; 또는 &lt;code&gt;no_proxy&lt;/code&gt; client.rb 파일에 설정되지만 설정되지 &lt;code&gt;ENV&lt;/code&gt; , 요리사 인프라 클라이언트는 구성합니다 &lt;code&gt;ENV&lt;/code&gt; 의 이러한 (관련) 설정에 따라 변수를. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="8dc7242bcdc4283d7168f331146494875f464cd5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;http_proxy&lt;/code&gt;, &lt;code&gt;https_proxy&lt;/code&gt;, &lt;code&gt;ftp_proxy&lt;/code&gt;, or &lt;code&gt;no_proxy&lt;/code&gt; is set in the client.rb file, the chef-client will configure the &lt;code&gt;ENV&lt;/code&gt; variable based on these (and related) settings. For example:</source>
          <target state="translated">경우 &lt;code&gt;http_proxy&lt;/code&gt; , &lt;code&gt;https_proxy&lt;/code&gt; 를 , &lt;code&gt;ftp_proxy&lt;/code&gt; 또는 &lt;code&gt;no_proxy&lt;/code&gt; client.rb 파일에 설정되어, 요리사 - 클라이언트가 구성합니다 &lt;code&gt;ENV&lt;/code&gt; 의 이러한 (관련) 설정에 따라 변수를. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="30662bf339ed8cdc5c30259729ebbc7e95737b6c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;item&lt;/code&gt; is encrypted, &lt;code&gt;data_bag_item&lt;/code&gt; will automatically decrypt it using the key specified above, or (if none is specified) by the &lt;code&gt;Chef::Config[:encrypted_data_bag_secret]&lt;/code&gt; method, which defaults to &lt;code&gt;/etc/chef/encrypted_data_bag_secret&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;item&lt;/code&gt; 암호화되어 &lt;code&gt;data_bag_item&lt;/code&gt; 가 가가 (지정하지 않은 경우) 키가 위의 지정 또는 사용하여 자동으로 암호 해독 &lt;code&gt;Chef::Config[:encrypted_data_bag_secret]&lt;/code&gt; 방법,하는 기본값 &lt;code&gt;/etc/chef/encrypted_data_bag_secret&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd059365d1dd5422ec8d11ad09eb528a88a307bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is not specified and if the file already exists, the existing mode on the file is used. If &lt;code&gt;mode&lt;/code&gt; is not specified, the file does not exist, and the &lt;code&gt;:create&lt;/code&gt; action is specified, Chef Infra Client assumes a mask value of &lt;code&gt;'0777'&lt;/code&gt; and then applies the umask for the system on which the file is to be created to the &lt;code&gt;mask&lt;/code&gt; value. For example, if the umask on a system is &lt;code&gt;'022'&lt;/code&gt;, Chef Infra Client uses the default value of &lt;code&gt;'0755'&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 파일이 이미 존재하는 경우, 파일의 기존 모드가 사용됩니다. 경우 &lt;code&gt;mode&lt;/code&gt; 지정하지 않으면 파일이 존재하고,하지 않습니다 &lt;code&gt;:create&lt;/code&gt; 작업을 지정, 요리사 인프라 클라이언트의 마스크 값 가정 &lt;code&gt;'0777'&lt;/code&gt; 를 다음 파일이 생성 될 것입니다되는 시스템의 umask를 적용 &lt;code&gt;mask&lt;/code&gt; 값. 예를 들어 시스템의 umask가 &lt;code&gt;'022'&lt;/code&gt; 인 경우 Chef Infra Client는 기본값 &lt;code&gt;'0755'&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="36ac838739ff832c502ae6013149443c33b4874f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is not specified and if the file already exists, the existing mode on the file is used. If &lt;code&gt;mode&lt;/code&gt; is not specified, the file does not exist, and the &lt;code&gt;:create&lt;/code&gt; action is specified, the chef-client assumes a mask value of &lt;code&gt;'0777'&lt;/code&gt; and then applies the umask for the system on which the file is to be created to the &lt;code&gt;mask&lt;/code&gt; value. For example, if the umask on a system is &lt;code&gt;'022'&lt;/code&gt;, the chef-client uses the default value of &lt;code&gt;'0755'&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 파일이 이미 존재하는 경우, 파일의 기존 모드가 사용됩니다. 경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 파일이 존재하지 않으며,이 &lt;code&gt;:create&lt;/code&gt; 지정 조치를, 요리사 - 클라이언트의 마스크 값 가정 &lt;code&gt;'0777'&lt;/code&gt; 를 다음 파일이 생성 될 것입니다되는 시스템의 umask를 적용 &lt;code&gt;mask&lt;/code&gt; 값. 예를 들어, 시스템의 umask가 &lt;code&gt;'022'&lt;/code&gt; 이면 chef-client는 기본값 &lt;code&gt;'0755'&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="8e54ec7cb725bfc6b90beafb074321e38af417ab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is not specified and if the file already exists, the existing mode on the file is used. If &lt;code&gt;mode&lt;/code&gt; is not specified, the file does not exist, and the &lt;code&gt;:create&lt;/code&gt; action is specified, the chef-client assumes a mask value of &lt;code&gt;'0777'&lt;/code&gt; and then applies the umask for the system on which the file is to be created to the &lt;code&gt;mask&lt;/code&gt; value. For example, if the umask on a system is &lt;code&gt;'022'&lt;/code&gt;, the chef-client uses the default value of &lt;code&gt;'0755'&lt;/code&gt;. Default value: &lt;code&gt;777&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 파일이 이미 존재하는 경우, 파일의 기존 모드가 사용됩니다. 경우 &lt;code&gt;mode&lt;/code&gt; 지정되지 않은 파일이 존재하지 않으며,이 &lt;code&gt;:create&lt;/code&gt; 지정 조치를, 요리사 - 클라이언트의 마스크 값 가정 &lt;code&gt;'0777'&lt;/code&gt; 를 다음 파일이 생성 될 것입니다되는 시스템의 umask를 적용 &lt;code&gt;mask&lt;/code&gt; 값. 예를 들어, 시스템의 umask가 &lt;code&gt;'022'&lt;/code&gt; 이면 chef-client는 기본값 &lt;code&gt;'0755'&lt;/code&gt; 를 사용 합니다. 기본 값 : &lt;code&gt;777&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec1c8b7a752ae684318ab9aecdf8589937fa1894" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; begins with &lt;code&gt;win&lt;/code&gt; then the &lt;code&gt;os_type&lt;/code&gt; defaults to &lt;code&gt;windows&lt;/code&gt;. The &lt;code&gt;winrm&lt;/code&gt; transport is the default on Windows operating systems. Here &lt;code&gt;elevated&lt;/code&gt; is true which runs windows commands via a scheduled task to imitate a local user.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 으로 시작 &lt;code&gt;win&lt;/code&gt; 후 &lt;code&gt;os_type&lt;/code&gt; 에 기본값을 &lt;code&gt;windows&lt;/code&gt; . &lt;code&gt;winrm&lt;/code&gt; 전송 윈도우 운영 체제의 기본이다. 여기서 &lt;code&gt;elevated&lt;/code&gt; 것은 로컬 사용자를 모방하기 위해 예약 된 작업을 통해 Windows 명령을 실행하는 사실입니다.</target>
        </trans-unit>
        <trans-unit id="d612471cde40c2c34304a52614b51ca9d30f7cef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pkg_interpreters&lt;/code&gt; is specified in your plan.sh, then this file will be generated and contain a list of absolute paths to any interpreters that a package can provide. Code in a &lt;code&gt;plan.sh&lt;/code&gt; may use the &lt;code&gt;fix_interpreter&lt;/code&gt; function to replace hard-coded instances of interpreters, such as &lt;code&gt;/bin/env&lt;/code&gt;. The location of interpreters in Chef Habitat will be nested under &lt;code&gt;/hab/pkgs/&lt;/code&gt;. For more information on interpreters, see the fix_interpreter description in &lt;a href=&quot;../build_helpers/index&quot;&gt;Plan helper functions&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;pkg_interpreters&lt;/code&gt; 이 당신의 plan.sh에 지정되어,이 파일이 생성 및 패키지가 제공 할 수있는 통역에 절대 경로의 목록이 포함됩니다. &lt;code&gt;plan.sh&lt;/code&gt; 의 코드 는 &lt;code&gt;fix_interpreter&lt;/code&gt; 함수를 사용하여 &lt;code&gt;/bin/env&lt;/code&gt; 와 같이 하드 코딩 된 인터프리터 인스턴스를 대체 할 수 있습니다 . Chef Habitat의 통역사 위치는 &lt;code&gt;/hab/pkgs/&lt;/code&gt; 아래에 중첩됩니다 . 인터프리터에 대한 자세한 정보는 &lt;a href=&quot;../build_helpers/index&quot;&gt;Plan helper functions&lt;/a&gt; 의 fix_interpreter 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fc7b721b6b466cf9f84ac8d966ce5cb5959f310" translate="yes" xml:space="preserve">
          <source>If Apache Qpid is installed, a response similar to the following is displayed:</source>
          <target state="translated">Apache Qpid가 설치된 경우 다음과 유사한 응답이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1d0646b0ac09407cff3cfbbc1bc0b57b7a0ed5f9" translate="yes" xml:space="preserve">
          <source>If Apache Solr is running out of memory, the &lt;code&gt;/var/log/opscode/opscode-solr4/current&lt;/code&gt; log file will contain a message similar to:</source>
          <target state="translated">Apache Solr의 메모리가 부족하면 &lt;code&gt;/var/log/opscode/opscode-solr4/current&lt;/code&gt; 로그 파일에 다음과 유사한 메시지가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="cd0fede30c87b9fa39fa28cc31c4a3e5e57e31ae" translate="yes" xml:space="preserve">
          <source>If Marathon is running the &lt;a href=&quot;https://mesosphere.github.io/marathon/docs/artifact-store.html&quot;&gt;artifact store&lt;/a&gt;, support uploading the tarball directly into it.</source>
          <target state="translated">Marathon이 &lt;a href=&quot;https://mesosphere.github.io/marathon/docs/artifact-store.html&quot;&gt;아티팩트 저장소를&lt;/a&gt; 실행중인 경우 tarball을 직접 업로드하도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="69bd6c3aa732358cdbc9526df2f285c9466c87ce" translate="yes" xml:space="preserve">
          <source>If Subversion is being used as the version source control application, it is important not to upload certain files that Subversion uses to maintain the version history of each file. This is because the chef-client will never use it while configuring nodes, plus the amount of data in an upload that includes top-level Subversion data could be significant.</source>
          <target state="translated">Subversion을 버전 소스 제어 응용 프로그램으로 사용하는 경우 Subversion이 각 파일의 버전 기록을 유지하는 데 사용하는 특정 파일을 업로드하지 않는 것이 중요합니다. 이는 셰프 클라이언트가 노드를 구성하는 동안 절대 사용하지 않으며, 최상위 Subversion 데이터를 포함하는 업로드의 데이터 양이 상당 할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="394ad6add0db36b3ec54361760861b9adf9c2438" translate="yes" xml:space="preserve">
          <source>If Supermarket is not configured to use AWS S3 storage for cookbooks, then the local cookbook storage location on the Supermarket server will need to be backed up.</source>
          <target state="translated">Supermarket이 요리 책에 AWS S3 스토리지를 사용하도록 구성되지 않은 경우 Supermarket 서버의 로컬 요리 책 스토리지 위치를 백업해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b1a168ab58331a20da148da04605bcf4b595b64" translate="yes" xml:space="preserve">
          <source>If Supervisor A cannot establish contact with Supervisor B for some reason, it does not immediately consider it to be dead. This would be too strict, and could lead to unnecessary service &amp;ldquo;flapping&amp;rdquo;. Instead, Supervisor A will consider Supervisor B &amp;ldquo;suspect&amp;rdquo;. In this case, it will ask Supervisor C (another Supervisor in its membership list) if &lt;em&gt;it&lt;/em&gt; can contact Supervisor B. If Supervisor C can make contact, it relays that information back to Supervisor A, which will then consider Supervisor B to be alive again, and &lt;em&gt;not&lt;/em&gt; suspect. This scenario can arise, for example, if there is a network split between Supervisors A and B, but not between A and C, or B and C. Similarly, network congestion could delay messages such that Supervisor A&amp;rsquo;s request times out before Supervisor B&amp;rsquo;s reply can make it back.</source>
          <target state="translated">어떤 이유로 감독자 A가 감독자 B와 연락 할 수없는 경우 즉시 사망 한 것으로 간주하지 않습니다. 이것은 너무 엄격하고 불필요한 서비스 &quot;플 래핑&quot;으로 이어질 수 있습니다. 대신 감독자 A는 감독자 B를 &quot;용의자&quot;로 간주합니다. 이 경우 감독자 C (멤버십 목록에있는 다른 감독자)에게 감독자 B와 연락 &lt;em&gt;할&lt;/em&gt; 수 있는지 물어 봅니다. 감독자 C 가 연락 &lt;em&gt;할&lt;/em&gt; 수있는 경우 해당 정보를 감독자 A에게 다시 전달하고 감독자 B는 다시 살아있는 것으로 간주합니다. , &lt;em&gt;아닙니다&lt;/em&gt;용의자. 예를 들어,이 시나리오는 수퍼바이저 A와 B간에 네트워크 분할이 있지만 A와 C 또는 B와 C 간에는 분할되지 않은 경우 발생할 수 있습니다. 마찬가지로 네트워크 정체는 수퍼바이저 A의 요청이 수퍼바이저 B의 응답 전에 시간 초과되도록 메시지를 지연시킬 수 있습니다. 되돌릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d718f90c8483ca0f42d092a66aa99cfb815aa3b" translate="yes" xml:space="preserve">
          <source>If Windows PowerShell is installed on the workstation, along with the Azure Chef Extension, the &lt;code&gt;Get-AzureVMChefExtension&lt;/code&gt; and &lt;code&gt;Set-AzureVMChefExtension&lt;/code&gt; extensions may be used to manage Chef running on virtual machines in Microsoft Azure.</source>
          <target state="translated">Windows PowerShell이 ​​Azure Chef 확장과 함께 워크 스테이션에 설치된 경우 &lt;code&gt;Get-AzureVMChefExtension&lt;/code&gt; 및 &lt;code&gt;Set-AzureVMChefExtension&lt;/code&gt; 확장을 사용하여 Microsoft Azure의 가상 머신에서 실행되는 Chef를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="8293069e4b16f018bf0cb9cba797c4c28fee2b58" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Name&lt;/code&gt; tag is applied to the NAT gateway, this can be used to lookup the resource. This must be passed as a &lt;code&gt;name: 'value'&lt;/code&gt; key-value entry in a hash. If there are multiple NAT gateways with the same name, this resource will raise an error.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 태그가 NAT 게이트웨이에 적용된 경우 이를 사용하여 리소스를 조회 할 수 있습니다. &lt;code&gt;name: 'value'&lt;/code&gt; 으로 전달되어야합니다 : 해시의 'value' 키-값 항목. 이름이 같은 NAT 게이트웨이가 여러 개있는 경우이 리소스에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f53a9822dfc0b26c726f0054f5f3c73af3d9b798" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Name&lt;/code&gt; tag is applied to the internet gateway, this can be used to lookup the resource. This must be passed as a &lt;code&gt;name: 'value'&lt;/code&gt; key-value entry in a hash. If there are multiple internet gateways with the same name, this resource will raise an error.</source>
          <target state="translated">경우 &lt;code&gt;Name&lt;/code&gt; 태그가 인터넷 게이트웨이에 적용, 이것은 리소스를 조회 할 수 있습니다. &lt;code&gt;name: 'value'&lt;/code&gt; 으로 전달되어야합니다 : 해시의 'value' 키-값 항목. 이름이 같은 인터넷 게이트웨이가 여러 개있는 경우이 리소스에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d0785357ce60ca83e3089f8043cc13a939ee7d3b" translate="yes" xml:space="preserve">
          <source>If a CLI input value resembles a number, it will be converted to an Integer or Float. Scientific notation is not currently recognized.</source>
          <target state="translated">CLI 입력 값이 숫자와 유사하면 Integer 또는 Float로 변환됩니다. 과학적 표기법은 현재 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1eed7d93d6e09cb66f64ca7ff25ecb0a8c60cdc1" translate="yes" xml:space="preserve">
          <source>If a DSC script contains configuration data that takes parameters, those parameters may be passed using the &lt;code&gt;flags&lt;/code&gt; property. For example, the following Windows PowerShell script takes parameters for the &lt;code&gt;EditorChoice&lt;/code&gt; and &lt;code&gt;EditorFlags&lt;/code&gt; settings:</source>
          <target state="translated">DSC 스크립트에 매개 변수를 사용하는 구성 데이터가 포함 된 경우 &lt;code&gt;flags&lt;/code&gt; 속성을 사용하여 해당 매개 변수를 전달할 수 있습니다 . 예를 들어 다음 Windows PowerShell 스크립트는 &lt;code&gt;EditorChoice&lt;/code&gt; 및 &lt;code&gt;EditorFlags&lt;/code&gt; 설정에 대한 매개 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b01acde56a4ddcff2ad8be45e6704dbdbace680d" translate="yes" xml:space="preserve">
          <source>If a Event Hub Authorization Rule is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Namespace Name&lt;/code&gt;, &lt;code&gt;Event Hub Name&lt;/code&gt; or &lt;code&gt;Authorization Rule Name&lt;/code&gt;</source>
          <target state="translated">이벤트 허브 권한 부여 규칙이 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Namespace Name&lt;/code&gt; , &lt;code&gt;Event Hub Name&lt;/code&gt; 또는 &lt;code&gt;Authorization Rule Name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a768b9a760d23a2891d9aedb880fc9d74ffda02" translate="yes" xml:space="preserve">
          <source>If a Event Hub Event Hub is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Namespace Name&lt;/code&gt; and &lt;code&gt;Event Hub Name&lt;/code&gt;</source>
          <target state="translated">이벤트 허브 이벤트 허브가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Namespace Name&lt;/code&gt; 및 &lt;code&gt;Event Hub Name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d7bfca2b4155f2c158a263e1a546e43583e674d" translate="yes" xml:space="preserve">
          <source>If a IoT Hub Event Hub Consumer Groups is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Resource Name&lt;/code&gt; and &lt;code&gt;Event Hub Endpoint&lt;/code&gt;</source>
          <target state="translated">IoT Hub 이벤트 허브 소비자 그룹이 유효한 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Resource Name&lt;/code&gt; 및 &lt;code&gt;Event Hub Endpoint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59b0aaae209c6cd90024c2c647f1f31c08b5ca97" translate="yes" xml:space="preserve">
          <source>If a IoT Hub Event Hub Consumer Groups is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Resource Name&lt;/code&gt; or &lt;code&gt;Event Hub Endpoint&lt;/code&gt;</source>
          <target state="translated">IoT Hub 이벤트 허브 소비자 그룹이 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Resource Name&lt;/code&gt; 또는 &lt;code&gt;Event Hub Endpoint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf93115ebc19bd0e0c96d40d2a8cd31ebf9b7ef2" translate="yes" xml:space="preserve">
          <source>If a Key Vault Key is referenced with a valid &lt;code&gt;Vault Name&lt;/code&gt;, &lt;code&gt;Key Name&lt;/code&gt; and &lt;code&gt;Key Version&lt;/code&gt;</source>
          <target state="translated">Key Vault 키가 유효한 &lt;code&gt;Vault Name&lt;/code&gt; , &lt;code&gt;Key Name&lt;/code&gt; 및 &lt;code&gt;Key Version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8d0619d9290d73f2a6cdfb09b6973afd4887acc" translate="yes" xml:space="preserve">
          <source>If a Key Vault Key is referenced with an invalid &lt;code&gt;Vault Name&lt;/code&gt; or &lt;code&gt;Key Name&lt;/code&gt;</source>
          <target state="translated">Key Vault 키가 잘못된 &lt;code&gt;Vault Name&lt;/code&gt; 또는 &lt;code&gt;Key Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="73bdf16ad818d97e10c1760065e1c13cbb1c2a67" translate="yes" xml:space="preserve">
          <source>If a Key Vault Secret is referenced with a valid &lt;code&gt;Vault Name&lt;/code&gt;, &lt;code&gt;Secret Name&lt;/code&gt; and &lt;code&gt;Secret Version&lt;/code&gt;</source>
          <target state="translated">Key Vault 보안이 유효한 &lt;code&gt;Vault Name&lt;/code&gt; , &lt;code&gt;Secret Name&lt;/code&gt; 및 &lt;code&gt;Secret Version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdd5175034e8b1a727f989d1ad6cfe9a0103736c" translate="yes" xml:space="preserve">
          <source>If a Key Vault Secret is referenced with an invalid &lt;code&gt;Vault Name&lt;/code&gt; or &lt;code&gt;Secret Name&lt;/code&gt;</source>
          <target state="translated">Key Vault 보안이 잘못된 &lt;code&gt;Vault Name&lt;/code&gt; 또는 &lt;code&gt;Secret Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="2ede59172e36e8d9c9ef9c81d8747325703e897a" translate="yes" xml:space="preserve">
          <source>If a Key Vault is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;Vault Name&lt;/code&gt;</source>
          <target state="translated">Key Vault가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;Vault Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="42ccc70352ee4b128694b48655182185bd14d77b" translate="yes" xml:space="preserve">
          <source>If a Key Vault is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; or &lt;code&gt;Vault Name&lt;/code&gt;</source>
          <target state="translated">Key Vault가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 또는 &lt;code&gt;Vault Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="bd2776c9773ac93c44fb59cab8b52e7589ce5344" translate="yes" xml:space="preserve">
          <source>If a Load Balancer is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;Load balancer Name&lt;/code&gt;</source>
          <target state="translated">로드 밸런서가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;Load balancer Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="0f1d89172360d2484d5011b7f0ea18a057ad3247" translate="yes" xml:space="preserve">
          <source>If a Load Balancer is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; or &lt;code&gt;Load balancer Name&lt;/code&gt;</source>
          <target state="translated">로드 밸런서가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 또는 &lt;code&gt;Load balancer Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="505528a151368718942e463709613f124d8a0aa1" translate="yes" xml:space="preserve">
          <source>If a MySQL Database is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Server Name&lt;/code&gt; and &lt;code&gt;Database name&lt;/code&gt;</source>
          <target state="translated">MySQL 데이터베이스가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Server Name&lt;/code&gt; 및 &lt;code&gt;Database name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39295b98475766786dc75e471ad24a60a9f71efd" translate="yes" xml:space="preserve">
          <source>If a MySQL Database is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Server Name&lt;/code&gt; or &lt;code&gt;Database Name&lt;/code&gt;</source>
          <target state="translated">MySQL 데이터베이스가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Server Name&lt;/code&gt; 또는 &lt;code&gt;Database Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="d7b3669a7d46ada077d1447f8e360ad3be240271" translate="yes" xml:space="preserve">
          <source>If a NAMED_CONF is given, chef-shell will load ~/.chef/NAMED_CONF/chef_shell.rb</source>
          <target state="translated">NAMED_CONF가 주어지면 chef-shell은 ~ / .chef / NAMED_CONF / chef_shell.rb를로드합니다.</target>
        </trans-unit>
        <trans-unit id="19712b640ec21bb42ffa6103515034ca5f57bf58" translate="yes" xml:space="preserve">
          <source>If a Network Interface is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;Name&lt;/code&gt;</source>
          <target state="translated">네트워크 인터페이스가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="dc69636aec81ae3c8162ee57e49975361dfa30eb" translate="yes" xml:space="preserve">
          <source>If a Network Interface is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; or &lt;code&gt;Name&lt;/code&gt;</source>
          <target state="translated">네트워크 인터페이스가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 또는 &lt;code&gt;Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="72a1080bbebac032f984571a19e69fd55c63aaa0" translate="yes" xml:space="preserve">
          <source>If a PostgreSQL Database is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Server Name&lt;/code&gt; and &lt;code&gt;Database name&lt;/code&gt;</source>
          <target state="translated">PostgreSQL 데이터베이스가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Server Name&lt;/code&gt; 및 &lt;code&gt;Database name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac474e4965435fcc5cc8357630ca3106549c88d9" translate="yes" xml:space="preserve">
          <source>If a PostgreSQL Database is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Server Name&lt;/code&gt; or &lt;code&gt;Database Name&lt;/code&gt;</source>
          <target state="translated">PostgreSQL 데이터베이스가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Server Name&lt;/code&gt; 또는 &lt;code&gt;Database Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="1d587e5885001a1ac78d85ce0598646b8fe87427" translate="yes" xml:space="preserve">
          <source>If a PostgreSQL Server is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;Server Name&lt;/code&gt;</source>
          <target state="translated">PostgreSQL Server가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;Server Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="fbeacd710dd9bd40b516d56eccf572a1d555e60e" translate="yes" xml:space="preserve">
          <source>If a PostgreSQL Server is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; or &lt;code&gt;Server Name&lt;/code&gt;</source>
          <target state="translated">PostgreSQL Server가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 또는 &lt;code&gt;Server Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="dff891f66db595fe9dd06f72a38f35c3c5fc47f3" translate="yes" xml:space="preserve">
          <source>If a SQL Database is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Server Name&lt;/code&gt; and &lt;code&gt;Database name&lt;/code&gt;</source>
          <target state="translated">SQL 데이터베이스가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Server Name&lt;/code&gt; 및 &lt;code&gt;Database name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="947557dc2a1b1a9bc52d775f3e5927926e839fd5" translate="yes" xml:space="preserve">
          <source>If a SQL Database is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt;, &lt;code&gt;Server Name&lt;/code&gt; or &lt;code&gt;Database Name&lt;/code&gt;</source>
          <target state="translated">SQL 데이터베이스가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; , &lt;code&gt;Server Name&lt;/code&gt; 또는 &lt;code&gt;Database Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="dc6e0706e0831cbfdb96e363a848e70af0ba4c3a" translate="yes" xml:space="preserve">
          <source>If a SQL Server is referenced with a valid &lt;code&gt;Resource Group&lt;/code&gt; and &lt;code&gt;Server Name&lt;/code&gt;</source>
          <target state="translated">SQL Server가 유효한 &lt;code&gt;Resource Group&lt;/code&gt; 및 &lt;code&gt;Server Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="b7580c4f6ef049613f92f0cec01f2e81a0bcb723" translate="yes" xml:space="preserve">
          <source>If a SQL Server is referenced with an invalid &lt;code&gt;Resource Group&lt;/code&gt; or &lt;code&gt;Server Name&lt;/code&gt;</source>
          <target state="translated">SQL Server가 잘못된 &lt;code&gt;Resource Group&lt;/code&gt; 또는 &lt;code&gt;Server Name&lt;/code&gt; 참조되는 경우</target>
        </trans-unit>
        <trans-unit id="69debc6b40b825ce5a8cb0296e55c707ecd542c4" translate="yes" xml:space="preserve">
          <source>If a chef-shell.rb file is not found, chef-shell will attempt to load the client.rb file</source>
          <target state="translated">chef-shell.rb 파일을 찾을 수 없으면 chef-shell이 ​​client.rb 파일을로드하려고 시도합니다</target>
        </trans-unit>
        <trans-unit id="496c0d9b3159e8d27b7e33f784e5be2ae3b10fc0" translate="yes" xml:space="preserve">
          <source>If a chef-shell.rb file is not found, chef-shell will attempt to load the solo.rb file</source>
          <target state="translated">chef-shell.rb 파일을 찾을 수 없으면 chef-shell이 ​​solo.rb 파일을로드하려고 시도합니다</target>
        </trans-unit>
        <trans-unit id="9d8becfb217c7bf59f23491917ffe6672556bb0f" translate="yes" xml:space="preserve">
          <source>If a client makes an HTTP request to the server that returns a non-specific error message, this is typically an issue with the &lt;strong&gt;opscode-chef&lt;/strong&gt; or &lt;strong&gt;opscode-erchef&lt;/strong&gt; services. View the full error message for these services in their respective log files. The error is most often a stacktrace from the application error. In some cases, the error message will clearly indicate a problem with another service, which can then be investigated further. For non-obvious errors, please contact Chef support services.</source>
          <target state="translated">클라이언트가 비 특정 오류 메시지를 반환하는 서버에 HTTP 요청을하는 경우 이는 일반적으로 &lt;strong&gt;opscode-chef&lt;/strong&gt; 또는 &lt;strong&gt;opscode-erchef&lt;/strong&gt; 서비스의 문제입니다. 해당 서비스에 대한 전체 오류 메시지를 해당 로그 파일에서보십시오. 오류는 대부분 응용 프로그램 오류의 스택 추적입니다. 경우에 따라이 오류 메시지는 다른 서비스에 문제가 있음을 분명히 나타내며 이후에 더 자세히 조사 할 수 있습니다. 명백한 오류가 아닌 경우 Chef 지원 서비스에 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="3e2f089d49eec9489440e08821c1fc41aee25196" translate="yes" xml:space="preserve">
          <source>If a community member engages in unacceptable behavior, the community organizers may take action that they deem appropriate &amp;ndash; up to and including a temporary ban or permanent expulsion from the community &lt;em&gt;without warning&lt;/em&gt; (and without refund, in the case of a paid event). If you have been involved in unacceptable behavior with current Chef community members outside the boundaries of the Chef Community, the Community Organizers retain the right to treat those external incidents in the same manner as internal incidents.</source>
          <target state="translated">커뮤니티 회원이 용납 할 수없는 행동을하는 경우 커뮤니티 주최자는 &lt;em&gt;경고없이&lt;/em&gt; (유료 이벤트의 경우 환불없이) 커뮤니티에서 임시 금지 또는 영구 퇴학을 포함하여 적절하다고 판단되는 조치를 취할 수 있습니다 . Chef 커뮤니티의 경계를 벗어난 현재 Chef 커뮤니티 구성원과 용인 할 수없는 행동에 연루된 경우 커뮤니티 조직자는 내부 사고와 동일한 방식으로 이러한 외부 사고를 처리 할 권리를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="b39da1bd9b357e69ee60d9eae8717b6c0adb11a2" translate="yes" xml:space="preserve">
          <source>If a community member is in or appears to be in crisis, please refer to the &lt;a href=&quot;https://github.com/chef/chef-oss-practices/blob/master/communication/community-members-in-crisis.md&quot;&gt;Community Members in Crisis Guide&lt;/a&gt;.</source>
          <target state="translated">커뮤니티 회원이 위기에 처해 있거나 위기에 처해있는 것처럼 보이면 &lt;a href=&quot;https://github.com/chef/chef-oss-practices/blob/master/communication/community-members-in-crisis.md&quot;&gt;위기 가이드&lt;/a&gt; 의 커뮤니티 회원을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="0bd5d13ac7719890ac9d9968a717cd3dfdc5dee0" translate="yes" xml:space="preserve">
          <source>If a configuration file is specified using the &lt;code&gt;-c&lt;/code&gt; option, chef-shell will use the specified configuration file</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 옵션을 사용하여 구성 파일을 지정하면 chef-shell은 지정된 구성 파일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="74bb95df8f27fc8d4ee7d83c01f8e6cafd1af588" translate="yes" xml:space="preserve">
          <source>If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the metadata.rb file for that cookbook using the &lt;code&gt;depends&lt;/code&gt; keyword.</source>
          <target state="translated">요리 책이 다른 요리 책에 위치한 조리법에 대한 종속성이있는 경우, 그 의존성은 사용이 요리 책에 대한 metadata.rb 파일에 선언해야합니다 &lt;code&gt;depends&lt;/code&gt; 키워드.</target>
        </trans-unit>
        <trans-unit id="2fb44c74f78243d55f4fe4b3c35c53d3a10afefb" translate="yes" xml:space="preserve">
          <source>If a cookbook is deprecated, that status is noted by the &lt;code&gt;deprecated&lt;/code&gt; field (being &lt;code&gt;true&lt;/code&gt;):</source>
          <target state="translated">쿡북이 더 이상 사용되지 않는 경우 해당 상태는 &lt;code&gt;deprecated&lt;/code&gt; 필드 ( &lt;code&gt;true&lt;/code&gt; )로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e69995ec3fb52d79b80b6c34c28ba53fd42baee3" translate="yes" xml:space="preserve">
          <source>If a cookbook is frozen and the &lt;code&gt;--force&lt;/code&gt; option is not specified, knife will return an error message similar to the following:</source>
          <target state="translated">요리 책이 정지되고 &lt;code&gt;--force&lt;/code&gt; 옵션이 지정되지 않으면 knife는 다음과 유사한 오류 메시지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="53c198e829a60112452937634978568eb862f4c4" translate="yes" xml:space="preserve">
          <source>If a cookbook is in GitHub, you can use the &lt;code&gt;github:&lt;/code&gt; shorthand to refer to it:</source>
          <target state="translated">쿡북이 GitHub에있는 경우 &lt;code&gt;github:&lt;/code&gt; 약어를 사용하여 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b82a6d7f95f779f2ed6b36f1244ed9d9bdb5d94e" translate="yes" xml:space="preserve">
          <source>If a cookbook is not explicitly given a version constraint the environment will assume the cookbook has no version constraint and will use any version of that cookbook with any node in the environment.</source>
          <target state="translated">쿡북에 버전 제약 조건이 명시 적으로 지정되어 있지 않은 경우 환경에서는 해당 쿡북에 버전 제약 조건이 없다고 가정하고 해당 환경에 노드가있는 해당 쿡북 버전을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f9d441baa77045ac54aa3fb66af13ddd76e91e29" translate="yes" xml:space="preserve">
          <source>If a custom skeleton cookbook is located on a macOS desktop (and in this example, the &lt;code&gt;chef_generator&lt;/code&gt; cookbook is simply a copy of the same cookbook that ships in Chef Workstation), the following command will use the skeleton cookbook at the custom location to generate a cookbook into the repository from which the &lt;code&gt;chef&lt;/code&gt; command is run:</source>
          <target state="translated">사용자 지정 스켈레톤 쿡북이 macOS 데스크톱에있는 경우 (이 예에서 &lt;code&gt;chef_generator&lt;/code&gt; 쿡북은 단순히 Chef Workstation에 제공되는 동일한 쿡북의 복사본입니다) 다음 명령은 사용자 지정 위치에서 스켈레톤 쿡북을 사용하여 &lt;code&gt;chef&lt;/code&gt; 명령이 실행 되는 저장소에 쿡북을 추가합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
