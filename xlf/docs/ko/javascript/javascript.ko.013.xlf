<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="80e95e584fe4a9c41c818ef735c7a6fa1032d9bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; method creates a new &lt;code&gt;Array&lt;/code&gt; instance from a variable number of arguments, regardless of number or type of the arguments.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; 메소드는 새로운 생성 &lt;code&gt;Array&lt;/code&gt; 에 관계없이 인수의 수 또는 유형에 가변 인자로부터 인스턴스.</target>
        </trans-unit>
        <trans-unit id="ebdc6abf64c168a3b99e8e90aaa889f8930c0da8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; method creates a new &lt;code&gt;Array&lt;/code&gt; instance with a variable number of arguments, regardless of number or type of the arguments.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; 메소드는 새로운 생성 &lt;code&gt;Array&lt;/code&gt; 에 관계없이 인수의 수 또는 유형에 가변 인자와 인스턴스.</target>
        </trans-unit>
        <trans-unit id="86f9cf7a97869e22e3c5273aa72394c09152932b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ArrayBuffer.isView()&lt;/strong&gt;&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;arg&lt;/code&gt; is one of the &lt;code&gt;ArrayBuffer&lt;/code&gt; views, such as &lt;a href=&quot;../typedarray&quot;&gt;typed array objects&lt;/a&gt; or a &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;ArrayBuffer.isView()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 &lt;code&gt;true&lt;/code&gt; 하는 경우 &lt;code&gt;arg&lt;/code&gt; 의 하나 &lt;code&gt;ArrayBuffer&lt;/code&gt; 의 같은 뷰 &lt;a href=&quot;../typedarray&quot;&gt;형식화 된 배열 객체&lt;/a&gt; 또는 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; ; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d07fe5502a54ae08b28b6ba9f48bb8d5b4d4d83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ArrayBuffer[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;ArrayBuffer[@@species]&lt;/strong&gt;&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;ArrayBuffer&lt;/code&gt; 의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="9d18ada0947c935ce614504ae6316e8b14b00983" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Array[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;Array&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Array[@@species]&lt;/strong&gt;&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;Array&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="b0cad4910762ccf0bcde29cf2233af6321d58e4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Async&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;Function&lt;/code&gt; creates a new &lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async function&lt;/code&gt;&lt;/a&gt; object. In JavaScript every asynchronous function is actually an &lt;code&gt;AsyncFunction&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Async&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;Function&lt;/code&gt; 새로운 생성 &lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async function&lt;/code&gt; &lt;/a&gt; 개체. JavaScript에서 모든 비동기 함수는 실제로 &lt;code&gt;AsyncFunction&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="9cfb2b2e487e9bdef7907df1c559df89128e26e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;AsyncFunction.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;AsyncFunction.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성은 대표 &lt;a href=&quot;../asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; 의&lt;/a&gt; 프로토 타입 객체를.</target>
        </trans-unit>
        <trans-unit id="022d745013d4ec24a9bb2e1974367db0f07a2e8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;DataView&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;DataView&lt;/strong&gt;&lt;/code&gt; 를의 &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를의&lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="dd5212e006d89c2e494ceb1220c5eea40cdb51f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Error.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Error.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="1fd5363414ad126ad49c917ad1b59ae577358fa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;EvalError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype of the &lt;a href=&quot;../evalerror&quot;&gt;&lt;code&gt;EvalError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;EvalError.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성은의 프로토 타입을 나타내는 &lt;a href=&quot;../evalerror&quot;&gt; &lt;code&gt;EvalError&lt;/code&gt; 의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="c58c93a23f88432951a7d55895f33f658b20753c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Function.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Function.prototype&lt;/strong&gt;&lt;/code&gt; 속성은 표현 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; 프로토 타입 객체를.</target>
        </trans-unit>
        <trans-unit id="c351e5940a5fc0926fc9169b2f73783a4dd5d1c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Generator&lt;/strong&gt;&lt;/code&gt; object is returned by a &lt;a href=&quot;../statements/function*&quot;&gt;generator function&lt;/a&gt; and it conforms to both the &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt; and the &lt;a href=&quot;../iteration_protocols#The_iterator_protocol&quot;&gt;iterator protocol&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Generator&lt;/strong&gt;&lt;/code&gt; 목적은에서 반환 &lt;a href=&quot;../statements/function*&quot;&gt;생성기 기능&lt;/a&gt; 과는 모두 따르는 &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;반복 가능한 프로토콜&lt;/a&gt; 및 &lt;a href=&quot;../iteration_protocols#The_iterator_protocol&quot;&gt;반복자 프로토콜&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c62e2bf9b5b456a522f51409444800bb461063be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;GeneratorFunction.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;GeneratorFunction.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성은 대표 &lt;a href=&quot;../generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; 의&lt;/a&gt; 프로토 타입 객체를.</target>
        </trans-unit>
        <trans-unit id="243bee5444ab554f78ca33d1c1f2b1932cdd98cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Intl.DisplayNames.prototype.resolvedOptions()&lt;/strong&gt;&lt;/code&gt; method returns a new object with properties reflecting the locale and style formatting options computed during the construction of the current &lt;a href=&quot;../displaynames&quot;&gt;&lt;code&gt;DisplayNames&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Intl.DisplayNames.prototype.resolvedOptions()&lt;/strong&gt;&lt;/code&gt; 메소드가 리턴 로케일을 반영하는 속성과 현재의 건설 기간 동안 계산 된 스타일의 서식 옵션과 함께 새로운 객체 &lt;a href=&quot;../displaynames&quot;&gt; &lt;code&gt;DisplayNames&lt;/code&gt; 의&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="fd75a065903928867562900ef58af0e14a822e0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Intl.ListFormat.prototype.resolvedOptions()&lt;/strong&gt;&lt;/code&gt; method returns a new object with properties reflecting the locale and style formatting options computed during the construction of the current &lt;a href=&quot;../listformat&quot;&gt;&lt;code&gt;ListFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Intl.ListFormat.prototype.resolvedOptions()&lt;/strong&gt;&lt;/code&gt; 메소드가 리턴 로케일을 반영하는 속성과 현재의 건설 기간 동안 계산 된 스타일의 서식 옵션과 함께 새로운 객체 &lt;a href=&quot;../listformat&quot;&gt; &lt;code&gt;ListFormat&lt;/code&gt; 의&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="b71b1962ef300500d5ba66c1b574c580e312ef79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Intl.Locale&lt;/strong&gt;&lt;/code&gt; object was created to allow for easier manipulation of Unicode locales. Unicode represents locales with a string, called a &lt;em&gt;locale identifier&lt;/em&gt;. The locale identifier consists of a &lt;em&gt;language identifier&lt;/em&gt; and &lt;em&gt;extension tags&lt;/em&gt;. Language identifiers are the core of the locale, consisting of &lt;em&gt;language&lt;/em&gt;, &lt;em&gt;script&lt;/em&gt;, and &lt;em&gt;region subtags&lt;/em&gt;. Additional information about the locale is stored in the optional &lt;em&gt;extension tags&lt;/em&gt;. Extension tags hold information about locale aspects such as calendar type, clock type, and numbering system type.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Intl.Locale&lt;/strong&gt;&lt;/code&gt; 의 객체는 유니 코드 로켈 쉽게 조작 할 수 있도록 만들어졌습니다. 유니 코드는 &lt;em&gt;로케일 식별자&lt;/em&gt; 라는 문자열로 로케일을 나타냅니다 . 로케일 식별자는 &lt;em&gt;언어 식별자&lt;/em&gt; 와 &lt;em&gt;확장 태그 &lt;/em&gt;&lt;em&gt;로&lt;/em&gt; 구성됩니다 . 언어 식별자는 &lt;em&gt;언어&lt;/em&gt; , &lt;em&gt;스크립트&lt;/em&gt; , &lt;em&gt;지역 하위 태그&lt;/em&gt; 로 구성된 로케일의 핵심입니다 . 로케일에 대한 추가 정보는 선택적 &lt;em&gt;확장 태그에&lt;/em&gt; 저장됩니다 . 확장 태그는 달력 유형, 시계 유형 및 번호 매기기 시스템 유형과 같은 로케일 측면에 대한 정보를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="ce17b80ccdf8381337f4d67ed9f2e87ff426c5ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="eb39654455ba47e45c2f8c676b2f7a6c9e194dbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Map[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;Map&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Map[@@species]&lt;/strong&gt;&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;Map&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="d23a1b546063226377ddb340a9ad3d3691002082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.create()&lt;/strong&gt;&lt;/code&gt; method creates a new object, using an existing object as the prototype of the newly created object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.create()&lt;/strong&gt;&lt;/code&gt; 메소드는 새롭게 생성 된 객체의 프로토 타입과 같은 기존의 객체를 사용하여, 새로운 객체를 생성한다.</target>
        </trans-unit>
        <trans-unit id="67c6e43fc27262e783dff84b60530146224baa4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.defineProperties()&lt;/strong&gt;&lt;/code&gt; method defines new or modifies existing properties directly on an object, returning the object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.defineProperties()&lt;/strong&gt;&lt;/code&gt; 메소드는 객체를 반환하는 객체에 직접 새로운 또는 수정 기존 속성을 정의한다.</target>
        </trans-unit>
        <trans-unit id="bf4869de737caa50d2569492cea3bcdf6bf08347" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.entries()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own enumerable property &lt;code&gt;[key, value]&lt;/code&gt; pairs, in the same order as that provided by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (the difference being that a for-in loop enumerates properties in the prototype chain as well) . The order of the array returned by &lt;strong&gt;Object.entries()&lt;/strong&gt; does not depend on how an object is defined. If there is a need for certain ordering then the array needs to be sorted first like &lt;code&gt;Object.entries(obj).sort((a, b) =&amp;gt; a[0] - b[0]);&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.entries()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 객체 자체 열거 속성들의 어레이 반환 &lt;code&gt;[key, value]&lt;/code&gt; 에 의해 제공되는 것과 동일한 순서로 쌍을 &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; 루프 (차이가 존재한다는-용의 루프를 열거 프로토 타입 체인의 속성). &lt;strong&gt;Object.entries ()에&lt;/strong&gt; 의해 반환되는 배열의 순서 는 객체가 어떻게 정의되는지에 의존하지 않습니다. 특정 순서가 필요한 경우 먼저 &lt;code&gt;Object.entries(obj).sort((a, b) =&amp;gt; a[0] - b[0]);&lt;/code&gt; 과 같이 배열을 정렬해야합니다 . .</target>
        </trans-unit>
        <trans-unit id="e06a2f16b4e762f02c9e63c8a9969748188241c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.entries()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own enumerable string-keyed property &lt;code&gt;[&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;]&lt;/code&gt; pairs, in the same order as that provided by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop. (The only important difference is that a &lt;code&gt;for...in&lt;/code&gt; loop enumerates properties in the prototype chain as well).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.entries()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 지정된 객체 자체 열거 문자열 키잉 속성의 배열 &lt;code&gt;[&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;]&lt;/code&gt; a로 제공되는 것과 동일한 순서로 쌍 &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; 루프. (유일한 중요한 차이점은 &lt;code&gt;for...in&lt;/code&gt; 루프가 프로토 타입 체인의 속성도 열거 한다는 것입니다).</target>
        </trans-unit>
        <trans-unit id="44f950624b38bf86f06ce09d5431f6b23dbb8b65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.freeze()&lt;/strong&gt;&lt;/code&gt; method &lt;strong&gt;freezes&lt;/strong&gt; an object. A frozen object can no longer be changed; freezing an object prevents new properties from being added to it, existing properties from being removed, prevents changing the enumerability, configurability, or writability of existing properties, and prevents the values of existing properties from being changed. In addition, freezing an object also prevents its prototype from being changed. &lt;code&gt;freeze()&lt;/code&gt; returns the same object that was passed in.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.freeze()&lt;/strong&gt;&lt;/code&gt; 메소드는 &lt;strong&gt;정지&lt;/strong&gt; 개체. 고정 된 개체는 더 이상 변경할 수 없습니다. 개체를 고정하면 새 속성이 추가되지 않고 기존 속성이 제거되지 않고 기존 속성의 열거 성, 구성 가능성 또는 쓰기 가능성이 변경되지 않으며 기존 속성의 값이 변경되지 않습니다. 또한 객체를 고정하면 프로토 타입이 변경되지 않습니다. &lt;code&gt;freeze()&lt;/code&gt; 는 전달 된 것과 동일한 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="130599f1e9f136637870a0d5112ec846524e1279" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.fromEntries()&lt;/strong&gt;&lt;/code&gt; method transforms a list of key-value pairs into an object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.fromEntries()&lt;/strong&gt;&lt;/code&gt; 메소드는 객체에 키 - 값 쌍들의리스트를 변환한다.</target>
        </trans-unit>
        <trans-unit id="363b1ead95ca1743a42b9a5636621e6f3a777e62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptor()&lt;/strong&gt;&lt;/code&gt; method returns a property descriptor for an</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptor()&lt;/strong&gt;&lt;/code&gt; 메소드는 대한 속성 기술자를 돌려줍니다</target>
        </trans-unit>
        <trans-unit id="f6ee05c457db451d6a75b37aadb9168df6f82a6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptors()&lt;/strong&gt;&lt;/code&gt; method returns all own property descriptors of a given object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.getOwnPropertyDescriptors()&lt;/strong&gt;&lt;/code&gt; 메소드가 반환 주어진 객체의 모든 자신의 재산 설명.</target>
        </trans-unit>
        <trans-unit id="26323a9170c6aea4cfb0b881addbe0379934cd4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getOwnPropertySymbols()&lt;/strong&gt;&lt;/code&gt; method returns an array of all symbol properties found directly upon a given object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.getOwnPropertySymbols()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 모든 심볼 속성의 배열은 주어진 객체에 직접 알았다.</target>
        </trans-unit>
        <trans-unit id="8af503288b43d2cafbaf23080d7e0a089f0f9f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt;&lt;/code&gt; method returns the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 원형 (즉, 내부의 값 &lt;code&gt;[[Prototype]]&lt;/code&gt; 지정된 객체의 속성).</target>
        </trans-unit>
        <trans-unit id="057bf7b4df4e03abf594f1f3e32e85ff81a99d2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.is()&lt;/strong&gt;&lt;/code&gt; method determines whether two values are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;the same value&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.is()&lt;/strong&gt;&lt;/code&gt; 메소드는 두 값이 있는지 여부를 판단 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;동일한 값&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1ec977c1eabe5c44ed7634ee7a5f2fb34c990d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.isFrozen()&lt;/strong&gt;&lt;/code&gt; determines if an object is &lt;a href=&quot;freeze&quot;&gt;frozen&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.isFrozen()&lt;/strong&gt;&lt;/code&gt; 객체인지 판정 &lt;a href=&quot;freeze&quot;&gt;냉동&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fcf45adc71f7e7ab5c3e43b4403c055b396560b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.isSealed()&lt;/strong&gt;&lt;/code&gt; method determines if an object is sealed.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.isSealed()&lt;/strong&gt;&lt;/code&gt; 객체가 밀봉되어있는 경우에있어서 판정한다.</target>
        </trans-unit>
        <trans-unit id="4bc653e76ff1d31a7f2a948c704fe1193b24cfab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.keys()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own enumerable property &lt;strong&gt;names&lt;/strong&gt;, iterated in the same order that a normal loop would.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.keys()&lt;/strong&gt;&lt;/code&gt; 메소드가 반환 지정된 객체의 자신의 열거 속성의 배열 &lt;strong&gt;이름은&lt;/strong&gt; , 그 정상 루프 것 같은 순서로 반복.</target>
        </trans-unit>
        <trans-unit id="36087e4ac892e5616c46100e037009bf4e38cd08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.keys()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own property &lt;code&gt;names&lt;/code&gt;, in the same order as we get with a normal loop.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.keys()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 객체의 자신의 재산의 배열 반환 &lt;code&gt;names&lt;/code&gt; 우리는 보통 루프 수와 같은 순서로.</target>
        </trans-unit>
        <trans-unit id="298428fe46ce0b1c48eb7a1b10f164004e33bd23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.preventExtensions()&lt;/strong&gt;&lt;/code&gt; method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.preventExtensions()&lt;/strong&gt;&lt;/code&gt; 지금까지의 방법을 방지 새로운 특성 (객체에 대한 예를 방지 향후 확장) 객체에 추가.</target>
        </trans-unit>
        <trans-unit id="4c3fdc5d44e143424e5deec64819d579da6ce782" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.prototype&lt;/strong&gt;&lt;/code&gt; property represents the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.prototype&lt;/strong&gt;&lt;/code&gt; 에의 속성은 나타내는 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 프로토 타입 객체를.</target>
        </trans-unit>
        <trans-unit id="9389c8f5f80ae13160c2c9eb0d96875bf38c61f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.seal()&lt;/strong&gt;&lt;/code&gt; method seals an object, preventing new properties from being added to it and marking all existing properties as non-configurable. Values of present properties can still be changed as long as they are writable.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.seal()&lt;/strong&gt;&lt;/code&gt; 메소드가 추가되는 새로운 특성을 방지하고 구성 할 수없는 등의 기존 속성 표시, 객체를 밀봉한다. 현재 속성의 값은 쓰기 가능한 한 계속 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15d7c9deb3f9f0ebced38bd4d794fc27bad72061" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.setPrototypeOf()&lt;/strong&gt;&lt;/code&gt; method sets the prototype (i.e., the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of a specified object to another object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.setPrototypeOf()&lt;/strong&gt;&lt;/code&gt; 메소드 세트 원형 (즉, 내부 &lt;code&gt;[[Prototype]]&lt;/code&gt; 속성) 또는 다른 객체에 지정된 오브젝트의 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b54cda4b7ec66210bb7ccb918f13653abee8244" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.values()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own enumerable property values, in the same order as that provided by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.values()&lt;/strong&gt;&lt;/code&gt; 메소드에 의해 제공되는 것과 동일한 순서로, 지정된 객체 자체 열거 속성 값의 배열을 반환 &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; 루프 (차이가 존재하는 프로토 타입 체인에 루프를 열거 대한 인 성질 게다가).</target>
        </trans-unit>
        <trans-unit id="9075159d0207218965493eb10a02beb1d6219ccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object.values()&lt;/strong&gt;&lt;/code&gt; method returns an array of a given object's own enumerable property values, in the same order as that provided by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop. (The only difference is that a &lt;code&gt;for...in&lt;/code&gt; loop enumerates properties in the prototype chain as well.)</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object.values()&lt;/strong&gt;&lt;/code&gt; 하는 방법에 의해 제공되는 순서와 동일한 순서로, 지정된 객체 자체 열거 속성 값의 배열을 반환 &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; 루프. (유일한 차이점은 &lt;code&gt;for...in&lt;/code&gt; 루프가 프로토 타입 체인의 속성도 열거 한다는 것입니다.)</target>
        </trans-unit>
        <trans-unit id="56ea8a24bc2b3a78b10cab3dae0fe3756fd5027b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/code&gt; class represents one of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript's data types&lt;/a&gt;. It is used to store various keyed collections and more complex entities. Objects can be created using the &lt;a href=&quot;object/object&quot;&gt;&lt;code&gt;Object()&lt;/code&gt;&lt;/a&gt; constructor or the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer / literal syntax&lt;/a&gt;.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/code&gt; 클래스 중 하나를 나타냅니다&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt; 자바 스크립트의 데이터 타입&lt;/a&gt; . 다양한 키 컬렉션과 더 복잡한 엔터티를 저장하는 데 사용됩니다. 객체는&lt;a href=&quot;object/object&quot;&gt; &lt;code&gt;Object()&lt;/code&gt; &lt;/a&gt; 생성자 또는&lt;a href=&quot;../operators/object_initializer&quot;&gt; 객체 이니셜 라이저 / 리터럴 구문을&lt;/a&gt; 사용하여 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9a14b23a0940994b7ebf0c7f7ac0ec55a6939a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/code&gt; constructor creates an object wrapper.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;/code&gt; 생성자는 객체 래퍼를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="778f880d460be5407961d5162589190400e0fd33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.allSettled()&lt;/strong&gt;&lt;/code&gt; method returns a promise that resolves after all of the given promises have either fulfilled or rejected, with an array of objects that each describes the outcome of each promise.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Promise.allSettled()&lt;/strong&gt;&lt;/code&gt; 메소드는 주어진 약속의 결국 결의 중 하나를 각 각 약속의 결과를 설명하는 객체의 배열로, 성취 또는 거부 것을 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ecf0897b7850eb03bd0d3c68eb6021ec32710236" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.race()&lt;/strong&gt;&lt;/code&gt; method returns a promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or reason from that promise.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Promise.race()&lt;/strong&gt;&lt;/code&gt; 메소드가 반환 약속이 이행 또는 거부 한 빨리 그 약속의 값이나 이유가있는 반복 가능한 충족 또는 거부의 약속 중 하나.</target>
        </trans-unit>
        <trans-unit id="547cb65d30e5f02f662c5a30e6944ec9ab9bfbde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.race(iterable)&lt;/strong&gt;&lt;/code&gt; method returns a promise that resolves or rejects as soon as one of the promises in the iterable resolves or rejects, with the value or reason from that promise.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Promise.race(iterable)&lt;/strong&gt;&lt;/code&gt; 방법은 약속을 반환 곧 그 약속의 값이나 이유와 반복 가능한 결의 또는 거부에 약속 한만큼 결의 또는 거부합니다.</target>
        </trans-unit>
        <trans-unit id="1e378ec3d6432bd663bda595a237cbc567c1aae7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.reject(reason)&lt;/strong&gt;&lt;/code&gt; method returns a &lt;code&gt;Promise&lt;/code&gt; object that is rejected with the given reason.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Promise.reject(reason)&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;code&gt;Promise&lt;/code&gt; 주어진 이유 거부 개체.</target>
        </trans-unit>
        <trans-unit id="cc88cccd036f326715aabc488e79c57a99fb3f3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise.resolve(value)&lt;/strong&gt;&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; object that is resolved with the given value. If the value is a promise, that promise is returned; if the value is a thenable (i.e. has a &lt;a href=&quot;then&quot;&gt;&lt;code&gt;&quot;then&quot; method&lt;/code&gt;&lt;/a&gt;), the returned promise will &quot;follow&quot; that thenable, adopting its eventual state; otherwise the returned promise will be fulfilled with the value. This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Promise.resolve(value)&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 지정된 값 해결 개체. 값이 약속이면 해당 약속이 반환됩니다. 값이 그 다음에 가능하면 (즉, &lt;a href=&quot;then&quot;&gt; &lt;code&gt;&quot;then&quot; method&lt;/code&gt; &lt;/a&gt; ), 반환 된 약속은 그 다음 가능한 상태를 채택하여 그 다음 가능성을 &quot;따라&quot;수행합니다. 그렇지 않으면 반환 된 약속은 그 값으로 이행 될 것입니다. 이 함수는 약속 같은 객체의 중첩 된 계층 (예 : 무언가로 해석되는 약속으로 해석되는 약속)을 ​​단일 계층으로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="6f4ee1dd3a18c16777cd469bff851498236bfe68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="86dac5fe334f2c5b9cf4393628d8c0b97c1081b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Proxy()&lt;/strong&gt;&lt;/code&gt; constructor is used to create &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Proxy()&lt;/strong&gt;&lt;/code&gt; 생성자를 만드는 데 사용되는 &lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="78633312e20d28f473611b71840a942d5f9bd597" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Proxy.revocable()&lt;/strong&gt;&lt;/code&gt; method is used to create a revocable &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Proxy.revocable()&lt;/strong&gt;&lt;/code&gt; 메소드가 취소 만드는 데 사용되는 &lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="3e9f84859a7bff0cc3fb3d87e55f3f0e6f0f0e2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;RangeError()&lt;/strong&gt;&lt;/code&gt; constructor creates an error when a value is not in the set or range of allowed values.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;RangeError()&lt;/strong&gt;&lt;/code&gt; 값 세트 내에 있지 않거나 허용되는 값의 범위 일 때 생성자는 에러를 만든다.</target>
        </trans-unit>
        <trans-unit id="66d374725bf081f7864d82b75d413221333384ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;RangeError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype the &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;RangeError.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성은 프로토 타입 나타내는 &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="4ad5b85571108bbb13e9367f294bccfee678a3fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;RangeError&lt;/strong&gt;&lt;/code&gt; object indicates an error when a value is not in the set or range of allowed values.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;RangeError&lt;/strong&gt;&lt;/code&gt; 값을 설정하지 않거나 허용되는 값의 범위 일 때, 객체는 에러를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="c8bcd78f3cf8aac3e4b1787b4b0300ab38949d59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ReferenceError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;ReferenceError.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../referenceerror&quot;&gt; &lt;code&gt;ReferenceError&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="46e0ecdb23934e08f767ee2e50735f6b78ce91c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;ReferenceError&lt;/strong&gt;&lt;/code&gt; object represents an error when a non-existent variable is referenced.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;ReferenceError&lt;/strong&gt;&lt;/code&gt; 가에 존재하지 않는 변수를 참조 할 때 개체 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="49f2e713c70b0bc9006558e93dc784feeeab8aba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;RegExp[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;RegExp&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;RegExp[@@species]&lt;/strong&gt;&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;RegExp&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="6ddefdee90788be8c61805eb67e10d144dce001e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Set&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Set&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="31c98cdd0a9c7c39d172d0ede9fa89fa214e0274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Set[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the &lt;code&gt;Set&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Set[@@species]&lt;/strong&gt;&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;Set&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="7de4cb818d1bd9227cfa58635e4b42fbacace831" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;SharedArrayBuffer.prototype.slice()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; whose contents are a copy of &lt;code&gt;this SharedArrayBuffer&lt;/code&gt;'s bytes from begin, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning. This method has the same algorithm as &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;SharedArrayBuffer.prototype.slice()&lt;/strong&gt;&lt;/code&gt; 메소드는 새로운 반환 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 그 내용의 복사본입니다 &lt;code&gt;this SharedArrayBuffer&lt;/code&gt; 독점 결국 포함, 시작에서의 바이트를. begin 또는 end가 음수이면 처음과 반대로 배열 끝의 인덱스를 나타냅니다. 이 메소드에는 &lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘이 &lt;em&gt;있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3216481b5a87c9c4b426a3e52796af9aeb44d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.asyncIterator&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the default AsyncIterator for an object. If this property is set on an object, it is an async iterable and can be used in a &lt;code&gt;&lt;a href=&quot;../../statements/for-await...of&quot;&gt;for await...of&lt;/a&gt;&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.asyncIterator&lt;/strong&gt;&lt;/code&gt; 는 심볼 지정을 객체에 대한 기본 AsyncIterator 잘 알려져 있습니다. 이 속성이 객체에 설정되면 비동기 반복 가능하며 &lt;code&gt;&lt;a href=&quot;../../statements/for-await...of&quot;&gt;for await...of&lt;/a&gt;&lt;/code&gt; 루프 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed26cc7d57f9e2703bacb30bde6e73893c43e40d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.for(key)&lt;/strong&gt;&lt;/code&gt; method searches for existing symbols in a runtime-wide symbol registry with the given key and returns it if found. Otherwise a new symbol gets created in the global symbol registry with this key.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.for(key)&lt;/strong&gt;&lt;/code&gt; 지정된 키 반환 그것으로 런타임 전체 심볼 레지스트리의 기존 기호에 대한 방법을 검색 발견합니다. 그렇지 않으면이 키를 사용하여 전역 심볼 레지스트리에 새 심볼이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="e163a6f365b437b7c41a0efae0291cf57b620080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.iterator&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the default iterator for an object. Used by &lt;a href=&quot;../../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.iterator&lt;/strong&gt;&lt;/code&gt; 잘 알려진 기호는 객체에 대한 기본 반복자를 지정합니다. &lt;a href=&quot;../../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ca17467976b89b9ceb78b8f88b5c1bb7e39e625f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.keyFor(sym)&lt;/strong&gt;&lt;/code&gt; method retrieves a shared symbol key from the global symbol registry for the given symbol.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.keyFor(sym)&lt;/strong&gt;&lt;/code&gt; 방법은 주어진 심볼에 대한 전역 심볼 레지스트리에서 공유 기호 키를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="93b0b0b47306b23568566c6617c8f35dc63a788a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.match&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the matching of a regular expression against a string. This function is called by the &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.match&lt;/strong&gt;&lt;/code&gt; 는 심볼을 지정하는 문자열에 대하여 정규 표현 매칭을 공지. 이 함수는 &lt;a href=&quot;../string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="35cb40b2bf0ebe176040f458137ab0bbd97b0696" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.matchAll&lt;/strong&gt;&lt;/code&gt; well-known symbol returns an iterator, that yields matches of the regular expression against a string. This function is called by the &lt;a href=&quot;../string/matchall&quot;&gt;&lt;code&gt;String.prototype.matchAll()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.matchAll&lt;/strong&gt;&lt;/code&gt; 는 , 반복자 기호 수익률을 잘 알려진 그 문자열에 대한 정규 표현식의 수율의 일치. 이 함수는 &lt;a href=&quot;../string/matchall&quot;&gt; &lt;code&gt;String.prototype.matchAll()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f2ebd2c712d8bf71d4ca297be2eb3c503d2a290" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.replace&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the method that replaces matched substrings of a string. This function is called by the &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.replace&lt;/strong&gt;&lt;/code&gt; 심볼을 지정을 대체 문자열의 문자열과 일치하는 방법을 공지. 이 함수는 &lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="344c2fee3be36c230072d34b044e9a3332abb1eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.search&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the method that returns the index within a string that matches the regular expression. This function is called by the &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.search&lt;/strong&gt;&lt;/code&gt; 는 심볼 지정을하는 방법을 잘 알려진 반환하는 정규 표현식과 일치하는 문자열 내에서 인덱스입니다. 이 함수는 &lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="67e267722024a05d5d72a562633b67bb9ab6ea97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.split&lt;/strong&gt;&lt;/code&gt; well-known symbol specifies the method that splits a string at the indices that match a regular expression. This function is called by the &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.split&lt;/strong&gt;&lt;/code&gt; 잘 알려진 기호는 정규 표현식과 일치하는 인덱스에서 문자열을 분할하는 방법을 지정합니다. 이 함수는 &lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="de505c5bab809f89fb4d3dfbe1d8ad9baff89620" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol.toPrimitive&lt;/strong&gt;&lt;/code&gt; is a symbol that specifies a function valued property that is called to convert an object to a corresponding primitive value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol.toPrimitive&lt;/strong&gt;&lt;/code&gt; 는 대응하는 기본 값에 객체를 변환하는 함수 호출 속성 값을 지정하는 기호이다.</target>
        </trans-unit>
        <trans-unit id="a4977d713585cb75e9f5a645064291e9ad6b09e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;Symbol&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Symbol&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="3f219173bf2711e48744d5a1dd740b0ce38fa90a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;SyntaxError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;SyntaxError.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="efab498cf56dabb81e431f4de3e4c08b26d2c0c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;SyntaxError&lt;/strong&gt;&lt;/code&gt; object represents an error when trying to interpret syntactically invalid code.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;SyntaxError&lt;/strong&gt;&lt;/code&gt; 구문 적으로 유효하지 않은 코드를 해석 할 때 개체 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e953778c03cbbc04c4d3e75202360fef048ddbc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;SyntaxError&lt;/strong&gt;&lt;/code&gt; object represents an error when trying to interpret syntactically invalid code. It is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;SyntaxError&lt;/strong&gt;&lt;/code&gt; 구문 적으로 유효하지 않은 코드를 해석 할 때 개체 오류를 나타냅니다. JavaScript 엔진이 코드를 구문 분석 할 때 언어 구문을 따르지 않는 토큰 또는 토큰 순서를 발견하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0db547fad4c75e0d39fee3702365a5d285d9648f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypeError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;TypeError.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="85be849eddc57bc882fea549e57d426731335e72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypeError&lt;/strong&gt;&lt;/code&gt; object represents an error when a value is not of the expected type.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;TypeError&lt;/strong&gt;&lt;/code&gt; 값이 예상 된 형태가 아닌 경우 객체 에러를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="72235f1879713af75f18131ef606849b2fe22c59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypeError&lt;/strong&gt;&lt;/code&gt; object represents an error when an operation could not be performed, typically (but not exclusively) when a value is not of the expected type.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;TypeError&lt;/strong&gt;&lt;/code&gt; 객체가 오류를 나타내는 값이 예상 된 유형이 아닌 경우의 동작은 일반적으로 (그러나 배타적이지)을 수행 할 수 없을 때.</target>
        </trans-unit>
        <trans-unit id="7df7483265313b08d4cb6135ebce76e0d0779257" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypedArray.BYTES_PER_ELEMENT&lt;/strong&gt;&lt;/code&gt; property represents the size in bytes of each element in an typed array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;TypedArray.BYTES_PER_ELEMENT&lt;/strong&gt;&lt;/code&gt; 의 특성은 입력 된 어레이의 각 요소의 크기를 바이트 단위로 나타낸다.</target>
        </trans-unit>
        <trans-unit id="f942c2aa5c26d7b8ad11d6625d701c1d36fc72e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypedArray&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; constructors.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;TypedArray&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 표현 &lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="5427e7112bf7c1fa5f31aa401289885517975558" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypedArray[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the constructor of a &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;TypedArray[@@species]&lt;/strong&gt;&lt;/code&gt; 접근 속성을 리턴의 생성자 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d39b5053563526919416282556e9090c9b5b22ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;TypedArray[@@species]&lt;/strong&gt;&lt;/code&gt; accessor property returns the constructor of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt;.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;TypedArray[@@species]&lt;/strong&gt;&lt;/code&gt; 접근 속성을 리턴의 생성자&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt; 형식화 된 배열&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0706ea30c5b032bccf7a7f365d4a13a8858aa646" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;URIError.prototype&lt;/strong&gt;&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;URIError.prototype&lt;/strong&gt;&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; 의의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="bd57d69b1e752881944e96ed1d03d85a1f6f713a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;URIError&lt;/strong&gt;&lt;/code&gt; object represents an error when a global URI handling function was used in a wrong way.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;URIError&lt;/strong&gt;&lt;/code&gt; 의의 전역 URI 처리 함수가 잘못된 방식으로 사용되었을 때 개체 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7c5dd61a25a4cb9cd7406e446ac87d9344ce5d41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WeakMap&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WeakMap&lt;/strong&gt;&lt;/code&gt; 의 &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; 의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="3c09143a989b1327fddc94de6ab749e1acd1019c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WeakSet&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../weakset&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WeakSet&lt;/strong&gt;&lt;/code&gt; 의 &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../weakset&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; 의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="d4190fdcf2bda6e307d25b52b48c16cf975ad0fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.CompileError()&lt;/strong&gt;&lt;/code&gt; constructor creates a new WebAssembly &lt;code&gt;CompileError&lt;/code&gt; object, which indicates an error during WebAssembly decoding or validation.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.CompileError()&lt;/strong&gt;&lt;/code&gt; 생성자 새로운 WebAssembly 생성 &lt;code&gt;CompileError&lt;/code&gt; 의 WebAssembly 디코딩 또는 검증하는 동안 오류를 나타내는 개체.</target>
        </trans-unit>
        <trans-unit id="688c8289a8b02186e65779f949751337b32b6f4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.CompileError&lt;/strong&gt;&lt;/code&gt; object indicates an error during WebAssembly decoding or validation.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.CompileError&lt;/strong&gt;&lt;/code&gt; 의 객체는 WebAssembly 디코딩 또는 유효성 검사 중에 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="65aa602ee81fc51c56682ed002b6300ab197d1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Global&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../global&quot;&gt;&lt;code&gt;WebAssembly.Global()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Global&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타냅니다 &lt;a href=&quot;../global&quot;&gt; &lt;code&gt;WebAssembly.Global()&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="511ff9bc251a63c3967bc1f3b4c02c06598649a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Instance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Instance&lt;/strong&gt;&lt;/code&gt; 의 &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타냅니다 &lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="f10a6afe7890fc3ca844cc20a29ec7a64eb7498f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.LinkError()&lt;/strong&gt;&lt;/code&gt; constructor creates a new WebAssembly &lt;code&gt;LinkError&lt;/code&gt; object, which indicates an error during module instantiation (besides &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;traps&lt;/a&gt; from the start function).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.LinkError()&lt;/strong&gt;&lt;/code&gt; 생성자 새로운 WebAssembly 생성 &lt;code&gt;LinkError&lt;/code&gt; 에 (게다가 모듈 인스턴스 동안 오류를 나타내는 객체 &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;트랩&lt;/a&gt; 시작 기능을 행).</target>
        </trans-unit>
        <trans-unit id="9e30204e5330c8006f4b97f205d57c79ca6609d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.LinkError&lt;/strong&gt;&lt;/code&gt; object indicates an error during module instantiation (besides &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;traps&lt;/a&gt; from the start function).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.LinkError&lt;/strong&gt;&lt;/code&gt; 목적은 (또한 모듈 인스턴스 동안 오류를 나타내는 &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;트랩&lt;/a&gt; 시작 기능을 행).</target>
        </trans-unit>
        <trans-unit id="7c25b3db80e6d69b698f58bbc32b45cd685a2102" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Memory()&lt;/strong&gt;&lt;/code&gt; constructor creates a new &lt;code&gt;Memory&lt;/code&gt; object which is a resizable &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; that holds the raw bytes of memory accessed by a WebAssembly &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Memory()&lt;/strong&gt;&lt;/code&gt; 생성자는 새로 만들어 &lt;code&gt;Memory&lt;/code&gt; 크기 조정이다 오브젝트 &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; WebAssembly 액세스 메모리의 바이트 원료 보유 &lt;code&gt;Instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f34915c536b1f520d63dfdf380193232cf0cd8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Memory()&lt;/strong&gt;&lt;/code&gt; constructor creates a new &lt;code&gt;Memory&lt;/code&gt; object whose &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;buffer&lt;/code&gt;&lt;/a&gt; property is a resizable &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;SharedArrayBuffer&lt;/code&gt; that holds the raw bytes of memory accessed by a WebAssembly &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Memory()&lt;/strong&gt;&lt;/code&gt; 생성자는 새로 만들어 &lt;code&gt;Memory&lt;/code&gt; 그 오브젝트 &lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;buffer&lt;/code&gt; &lt;/a&gt; 속성 크기 조정이다 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; WebAssembly 액세스 메모리의 바이트 원료 보유 &lt;code&gt;Instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31c45c1189c7b976d1b08d0f9b4aa0b7bd0bae59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Memory&lt;/strong&gt;&lt;/code&gt; object is a resizable &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;&lt;a href=&quot;../sharedarraybuffer&quot;&gt;SharedArrayBuffer&lt;/a&gt;&lt;/code&gt; that holds the raw bytes of memory accessed by a WebAssembly &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Memory&lt;/strong&gt;&lt;/code&gt; 의 객체는 크기를 재조정 할 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;&lt;a href=&quot;../sharedarraybuffer&quot;&gt;SharedArrayBuffer&lt;/a&gt;&lt;/code&gt; WebAssembly 액세스 메모리의 바이트 원료 보유 &lt;code&gt;Instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a883235021c6f19a31679fcb8f9e75046da1ef9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Memory&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Memory&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타냅니다 &lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory()&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="a8cae44996512ed4d77d6fe59231084a39051d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Module&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Module&lt;/strong&gt;&lt;/code&gt; 의 &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타냅니다 &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module()&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="29f3467535ff5d19ae38d1bbca757ffa543f1013" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.RuntimeError()&lt;/strong&gt;&lt;/code&gt; constructor creates a new WebAssembly &lt;code&gt;RuntimeError&lt;/code&gt; object &amp;mdash; the type that is thrown whenever WebAssembly specifies a &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;trap&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.RuntimeError()&lt;/strong&gt;&lt;/code&gt; 생성자는 새 WebAssembly 생성 &lt;code&gt;RuntimeError&lt;/code&gt; 에의 WebAssembly가 지정 될 때마다 발생합니다 유형 - 객체 &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;트랩&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92e388a17a7f13d1290fd1b3acfd15cfebd67ccd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.RuntimeError&lt;/strong&gt;&lt;/code&gt; object is the error type that is thrown whenever WebAssembly specifies a &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;trap&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.RuntimeError&lt;/strong&gt;&lt;/code&gt; 객체는 WebAssembly가 지정 될 때마다 발생되는 오류 유형입니다 &lt;a href=&quot;http://webassembly.org/docs/semantics/#traps&quot;&gt;트랩&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d41095c5a35ef4eea635ab58e0b4d3c0864e3af0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Table()&lt;/strong&gt;&lt;/code&gt; constructor creates a new &lt;code&gt;Table&lt;/code&gt; object of the given size and element type.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Table()&lt;/strong&gt;&lt;/code&gt; 생성자 신규 작성 &lt;code&gt;Table&lt;/code&gt; 지정된 크기 및 요소 타입의 객체.</target>
        </trans-unit>
        <trans-unit id="146bd22c56b5c792580b61811b6a66757e6a2a76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Table()&lt;/strong&gt;&lt;/code&gt; object is a JavaScript wrapper object &amp;mdash; an array-like structure representing a WebAssembly Table, which stores function references. A table created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;WebAssembly.Table()&lt;/strong&gt;&lt;/code&gt; 객체는 자바 스크립트 래퍼 객체이다 - 어레이와 같은 저장 기능 참조 WebAssembly 테이블을 나타내는 구조. JavaScript 또는 WebAssembly 코드로 생성 된 테이블은 JavaScript와 WebAssembly 모두에서 액세스하고 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b67074bb46657ef63ba81f3afa148a0127482ad1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;WebAssembly.Table&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;WebAssembly.Table&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타냅니다 &lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table()&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="0dc99d3e1ce55209acc299639668888289d0ecd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; method converts a &lt;code&gt;Date&lt;/code&gt; object to a primitive value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; 메소드는 변환 &lt;code&gt;Date&lt;/code&gt; 프리미티브 값 개체.</target>
        </trans-unit>
        <trans-unit id="2deaa9c8a0812807e8be6c6b72b967874fe7855e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; method converts a Symbol object to a primitive value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;[@@toPrimitive]()&lt;/strong&gt;&lt;/code&gt; 메소드는 프리미티브 값 심볼 오브젝트로 변환한다.</target>
        </trans-unit>
        <trans-unit id="da6dd3e2a7e90e8a12bbc2cf94c624c9d4847197" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;__defineGetter__&lt;/strong&gt;&lt;/code&gt; method binds an object's property to a function to be called when that property is looked up.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;__defineGetter__&lt;/strong&gt;&lt;/code&gt; 의 해당 속성을 조회 할 때 메소드 바인딩은 함수 객체의 속성이라고합니다.</target>
        </trans-unit>
        <trans-unit id="13a2a1968b399ef8077d145e67393fe82c7a812c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;__defineSetter__&lt;/strong&gt;&lt;/code&gt; method binds an object's property to a function to be called when an attempt is made to set that property.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;__defineSetter__&lt;/strong&gt;&lt;/code&gt; 의 시도가 설정 해당 속성에 이루어질 때 메소드 바인딩은 함수 객체의 속성이라고합니다.</target>
        </trans-unit>
        <trans-unit id="f04ff755d2275049259c48d3ef5c5f290c308205" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; method appends a new element with a specified &lt;code&gt;value&lt;/code&gt; to the end of a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; 메소드로 지정된 새로운 요소에 추가 &lt;code&gt;value&lt;/code&gt; (A)의 단부에 &lt;code&gt;Set&lt;/code&gt; 오브젝트.</target>
        </trans-unit>
        <trans-unit id="086bc595d997a4e392d2d0d7fe9da4b45b08e842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; method appends a new object to the end of a &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;add()&lt;/strong&gt;&lt;/code&gt; 메소드는 끝에 새로운 객체 추가 &lt;code&gt;WeakSet&lt;/code&gt; 의 개체.</target>
        </trans-unit>
        <trans-unit id="6d0a5e33ecfdac2f0d7decc4a6a3a879ce3057d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;apply()&lt;/strong&gt;&lt;/code&gt; method calls a function with a given &lt;code&gt;this&lt;/code&gt; value, and &lt;code&gt;arguments&lt;/code&gt; provided as an array (or an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-like object&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;apply()&lt;/strong&gt;&lt;/code&gt; 메소드는 주어진 갖는 함수 호출 &lt;code&gt;this&lt;/code&gt; 값 및 &lt;code&gt;arguments&lt;/code&gt; 배열 (또는 제공 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;어레이 형상 물체&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cd09dd36ffd57fd2c73d0608a4da975c03f6c25b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;apply()&lt;/strong&gt;&lt;/code&gt; method calls a function with a given &lt;code&gt;this&lt;/code&gt; value, and &lt;code&gt;arguments&lt;/code&gt; provided as an array (or an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-like object&lt;/a&gt;).</source>
          <target state="translated">이 &lt;code&gt;&lt;strong&gt;apply()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 함수로 호출 &lt;code&gt;this&lt;/code&gt; 값과 &lt;code&gt;arguments&lt;/code&gt; 배열 (또는 제공 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;어레이 형상 물체&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f5a9f46c2da42e11852964d39b4b11e294bbfb56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;async function&lt;/strong&gt;&lt;/code&gt; declaration defines an &lt;strong&gt;asynchronous function&lt;/strong&gt;, which returns an &lt;a href=&quot;../global_objects/asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt; object. An asynchronous function is a function which operates asynchronously via the event loop, using an implicit &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; to return its result. But the syntax and structure of your code using async functions is much more like using standard synchronous functions.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;async function&lt;/strong&gt;&lt;/code&gt; 선언은 정의 &lt;strong&gt;비동기 기능&lt;/strong&gt; 반환 &lt;a href=&quot;../global_objects/asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; 의&lt;/a&gt; 개체를. 비동기 함수는 암시 적 &lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 를 사용하여 이벤트 루프를 통해 비동기 적으로 작동 하여 결과를 반환하는 함수입니다. 그러나 비동기 함수를 사용하는 코드의 구문과 구조는 표준 동기 함수를 사용하는 것과 훨씬 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="c038745f10c4633783cbf2218a5d21173224bb87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;bind()&lt;/strong&gt;&lt;/code&gt; method creates a new function that, when called, has its &lt;code&gt;this&lt;/code&gt; keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;bind()&lt;/strong&gt;&lt;/code&gt; 메소드를 호출 할 때, 그 기능을 갖는 새로운 생성 &lt;code&gt;this&lt;/code&gt; 새로운 함수가 호출 될 때 어떤 제공 선행 인자의 주어진 순서로 제공된 값 키워드 세트.</target>
        </trans-unit>
        <trans-unit id="482841445e09775c61594e569aac0ba06b23829f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; accessor property represents the length of an &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; in bytes.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; 프로퍼티 접근은의 길이를 나타냅니다 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 바이트를.</target>
        </trans-unit>
        <trans-unit id="6baeb4f0e10c869b6fa5ea4795eb172179732b77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; accessor property represents the length of an &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; in bytes.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;byteLength&lt;/strong&gt;&lt;/code&gt; 프로퍼티 접근은의 길이를 나타냅니다 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 바이트를.</target>
        </trans-unit>
        <trans-unit id="1c7d68ad8fc5711c65067516186c38d232e553f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;call()&lt;/strong&gt;&lt;/code&gt; method calls a function with a given &lt;code&gt;this&lt;/code&gt; value and arguments provided individually.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;call()&lt;/strong&gt;&lt;/code&gt; 메소드는 주어진 갖는 함수 호출 &lt;code&gt;this&lt;/code&gt; 개별적으로 제공된 값과 인수.</target>
        </trans-unit>
        <trans-unit id="42b2913dec60178038d62954b5026ba6c329d44f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;catch()&lt;/strong&gt;&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; and deals with rejected cases only. It behaves the same as calling &lt;a href=&quot;then&quot;&gt;&lt;code&gt;Promise.prototype.then(undefined, onRejected)&lt;/code&gt;&lt;/a&gt; (in fact, calling &lt;code&gt;obj.catch(onRejected)&lt;/code&gt; internally calls &lt;code&gt;obj.then(undefined, onRejected)&lt;/code&gt;). This means that you have to provide an &lt;code&gt;onRejected&lt;/code&gt; function even if you want to fall back to an &lt;code&gt;undefined&lt;/code&gt; result value - for example &lt;code&gt;obj.catch(() =&amp;gt; {})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;catch()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 만 거부의 경우와 거래를. &lt;a href=&quot;then&quot;&gt; &lt;code&gt;Promise.prototype.then(undefined, onRejected)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 동일하게 작동합니다 (사실 &lt;code&gt;obj.catch(onRejected)&lt;/code&gt; 호출 &lt;code&gt;obj.then(undefined, onRejected)&lt;/code&gt; 내부적으로 obj.then (undefined, onRejected)를 호출합니다 ). 즉 , &lt;code&gt;undefined&lt;/code&gt; 로 폴백하려는 경우에도 &lt;code&gt;onRejected&lt;/code&gt; 함수 를 제공해야합니다. 결과 값 &lt;code&gt;obj.catch(() =&amp;gt; {})&lt;/code&gt; 예 : obj.catch (() =&amp;gt; {})) .</target>
        </trans-unit>
        <trans-unit id="9beb8f529def4a9c8c930408a608785ae96536de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; method removes all elements from a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; 메소드는 모든 요소를 제거 &lt;code&gt;Map&lt;/code&gt; 오브젝트를.</target>
        </trans-unit>
        <trans-unit id="312e5ee716a7d47ec4cfada952c8248a0230b522" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; method removes all elements from a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;clear()&lt;/strong&gt;&lt;/code&gt; 메소드는 모든 요소를 제거합니다 &lt;code&gt;Set&lt;/code&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="3a04f7e212056fbc5cc9e5114ecf6a6bbb5255e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;concat()&lt;/strong&gt;&lt;/code&gt; method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a new array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;concat()&lt;/strong&gt;&lt;/code&gt; 메소드는 둘 이상의 어레이들을 병합하는데 사용된다. 이 메소드는 기존 배열을 변경하지 않고 대신 새 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8446431bde3b2f68f05e7445f74d561b2a79ba7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; method copies the sequence of array elements within the array to the position starting at &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt;. The copy is taken from the index positions of the second and third arguments &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt;. The &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; argument is optional and defaults to the length of the array. This method has the same algorithm as &lt;a href=&quot;../array/copywithin&quot;&gt;&lt;code&gt;Array.prototype.copyWithin&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; 메소드 복사 시작 위치에 배열 어레이 내의 요소들의 순서 &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; . 복사본은 두 번째 및 세 번째 인수 &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; 의 인덱스 위치에서 가져옵니다. &lt;code&gt;&lt;var&gt;end&lt;/var&gt;&lt;/code&gt; 인수는 선택 사항이며 배열의 길이로 기본 설정됩니다. 이 메서드는&lt;a href=&quot;../array/copywithin&quot;&gt; &lt;code&gt;Array.prototype.copyWithin&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 사용합니다. &lt;em&gt;TypedArray&lt;/em&gt; 는여기에서&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt; 형식화 된 배열 유형&lt;/a&gt; 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="c8c0a11cfdb704de7983c93489bd032b222ead36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; method copies the sequence of array elements within the array to the position starting at &lt;code&gt;target&lt;/code&gt;. The copy is taken from the index positions of the second and third arguments &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. The &lt;code&gt;end&lt;/code&gt; argument is optional and defaults to the length of the array. This method has the same algorithm as &lt;a href=&quot;../array/copywithin&quot;&gt;&lt;code&gt;Array.prototype.copyWithin&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; 메소드 복사 시작 위치에 배열 어레이 내의 요소들의 순서 &lt;code&gt;target&lt;/code&gt; . 사본은 두 번째 및 세 번째 인수 &lt;code&gt;start&lt;/code&gt; 및 &lt;code&gt;end&lt;/code&gt; 의 색인 위치에서 가져옵니다 . &lt;code&gt;end&lt;/code&gt; 인수는 선택 사항이며 배열의 길이로 기본 설정됩니다. 이 메소드는 &lt;a href=&quot;../array/copywithin&quot;&gt; &lt;code&gt;Array.prototype.copyWithin&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 갖습니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="7efa22b77579c6eb9dd1df02f460d0d9316c3770" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; method shallow copies part of an array to another location in the same array and returns it without modifying its length.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; 의 길이를 변경하지 않고 동일한 배열 복귀 그것을 다른 위치에 배열 방법 얕은 복사 부.</target>
        </trans-unit>
        <trans-unit id="d655e8cb4ff55a46631b3e7d9d2b508ebb330351" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; method shallow copies part of an array to another location in the same array and returns it, without modifying its size.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;copyWithin()&lt;/strong&gt;&lt;/code&gt; 의 크기를 변경하지 않고 동일한 배열 복귀 그것을 다른 위치에 배열 방법 얕은 복사 부.</target>
        </trans-unit>
        <trans-unit id="a3f7c80cf5e19bf37ddf264b62190016bc208225" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;decodeURI()&lt;/strong&gt;&lt;/code&gt; function decodes a Uniform Resource Identifier (URI) previously created by &lt;a href=&quot;encodeuri&quot;&gt;&lt;code&gt;encodeURI()&lt;/code&gt;&lt;/a&gt; or by a similar routine.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;decodeURI()&lt;/strong&gt;&lt;/code&gt; 함수는 이전에 만든이 URI (Uniform Resource Identifier) 디코딩 &lt;a href=&quot;encodeuri&quot;&gt; &lt;code&gt;encodeURI()&lt;/code&gt; &lt;/a&gt; 또는 이와 유사한 루틴을.</target>
        </trans-unit>
        <trans-unit id="cfa7d03f1274706ff18e0241e64d1f65671679a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;decodeURIComponent()&lt;/strong&gt;&lt;/code&gt; function decodes a Uniform Resource Identifier (URI) component previously created by &lt;a href=&quot;encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;&lt;/a&gt; or by a similar routine.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;decodeURIComponent()&lt;/strong&gt;&lt;/code&gt; 함수는 이전에 만든이 URI (Uniform Resource Identifier) 구성 요소 디코딩 &lt;a href=&quot;encodeuricomponent&quot;&gt; &lt;code&gt;encodeURIComponent&lt;/code&gt; &lt;/a&gt; 또는 유사한 루틴을.</target>
        </trans-unit>
        <trans-unit id="f372d28865b50fb2bef00e90e5663a78ef5c0a63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 메소드는에서 지정된 요소가 제거 &lt;code&gt;Map&lt;/code&gt; 오브젝트를.</target>
        </trans-unit>
        <trans-unit id="17bdf144b257e5d3ae06a6dc04eef903ba7e539f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 메소드는에서 지정된 요소가 제거 &lt;code&gt;Set&lt;/code&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="35541d97cf07da51fca3b3dea512d3db4a73ef03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 요소의 제거 &lt;code&gt;WeakMap&lt;/code&gt; 의 개체.</target>
        </trans-unit>
        <trans-unit id="452bb1b4c0445d3c4774d1eef2031016a0a87f0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; method removes the specified element from a &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;delete()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 요소의 제거 &lt;code&gt;WeakSet&lt;/code&gt; 의 개체.</target>
        </trans-unit>
        <trans-unit id="65297c673113570db2c54c092f19d86ecd01aa01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/code&gt; operator removes a given property from an object. On successful deletion, it will return &lt;code&gt;true&lt;/code&gt;, else &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/code&gt; 연산자는 객체에서 특정 속성을 제거합니다. 성공적으로 삭제되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다. 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0cb54800859da504cc81eadc343919171401b3fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/code&gt; operator removes a given property from an object. On successful deletion, it will return &lt;code&gt;true&lt;/code&gt;, else &lt;code&gt;false&lt;/code&gt; will be returned. However, it is important to consider the following scenarios:</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/code&gt; 연산자는 객체에서 특정 속성을 제거합니다. 삭제에 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다. 그러나 다음 시나리오를 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="05c5726d363f5f3782192dc1e75a438ea02681df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;encodeURI()&lt;/strong&gt;&lt;/code&gt; function encodes a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/URI&quot;&gt;URI&lt;/a&gt; by replacing each instance of certain characters by one, two, three, or four escape sequences representing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UTF-8&quot;&gt;UTF-8&lt;/a&gt; encoding of the character (will only be four escape sequences for characters composed of two &quot;surrogate&quot; characters).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;encodeURI()&lt;/strong&gt;&lt;/code&gt; 함수는 부호화 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/URI&quot;&gt;URI를&lt;/a&gt; 나타내는 1, 2, 3 또는 4 개의 이스케이프 시퀀스에서 특정 문자의 각 인스턴스로 대체함으로써 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UTF-8&quot;&gt;UTF-8&lt;/a&gt; (두 &quot;대리인&quot;으로 이루어지는 문자 네 이스케이프 시퀀스 될 문자 인코딩 문자).</target>
        </trans-unit>
        <trans-unit id="0260fc227d209690d7e2177a44ed92fc74ea7dbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;encodeURI()&lt;/strong&gt;&lt;/code&gt; function encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two &quot;surrogate&quot; characters).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;encodeURI()&lt;/strong&gt;&lt;/code&gt; 함수는 문자 UTF-8 인코딩을 나타내는 1, 2, 3 또는 4 개의 이스케이프 시퀀스에서 특정 문자의 각 인스턴스로 대체함으로써 균일 한 리소스 식별자 (URI)를 인코딩한다 (단 구성의 문자 네 이스케이프 시퀀스 것 &quot;대리&quot;문자 중 2 개).</target>
        </trans-unit>
        <trans-unit id="2fd19c0a53409fb682738f17f8d30a688cee651d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;encodeURIComponent()&lt;/strong&gt;&lt;/code&gt; function encodes a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/URI&quot;&gt;URI&lt;/a&gt; by replacing each instance of certain characters by one, two, three, or four escape sequences representing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UTF-8&quot;&gt;UTF-8&lt;/a&gt; encoding of the character (will only be four escape sequences for characters composed of two &quot;surrogate&quot; characters).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;encodeURIComponent()&lt;/strong&gt;&lt;/code&gt; 함수는 부호화 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/URI&quot;&gt;URI를&lt;/a&gt; 나타내는 1, 2, 3 또는 4 개의 이스케이프 시퀀스에서 특정 문자의 각 인스턴스로 대체함으로써 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UTF-8&quot;&gt;UTF-8&lt;/a&gt; (두 &quot;대리인&quot;으로 이루어지는 문자 네 이스케이프 시퀀스 될 문자 인코딩 문자).</target>
        </trans-unit>
        <trans-unit id="2489bd0d029c146067248a63b094e5c1a370ae35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;encodeURIComponent()&lt;/strong&gt;&lt;/code&gt; function encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two &quot;surrogate&quot; characters).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;encodeURIComponent()&lt;/strong&gt;&lt;/code&gt; 함수는 문자 UTF-8 인코딩을 나타내는 1, 2, 3 또는 4 개의 이스케이프 시퀀스에서 특정 문자의 각 인스턴스로 대체함으로써 균일 한 리소스 식별자 (URI) 성분을 부호화 (문자 만 네 이스케이프 시퀀스 것 두 개의 &quot;대리&quot;문자로 구성됨).</target>
        </trans-unit>
        <trans-unit id="acb82d337b7b4eae9393644ae7e20cf23a05ce12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt; object that contains&lt;code&gt;[value, value]&lt;/code&gt; for each element in the &lt;code&gt;Set&lt;/code&gt; object, in insertion order. For &lt;code&gt;Set&lt;/code&gt; objects there is no &lt;code&gt;key&lt;/code&gt; like in &lt;code&gt;Map&lt;/code&gt; objects. However, to keep the API similar to the &lt;code&gt;Map&lt;/code&gt; object, each &lt;em&gt;entry&lt;/em&gt; has the same value for its &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; here, so that an array &lt;code&gt;[value, value]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;반복자&lt;/a&gt; 포함 오브젝트 &lt;code&gt;[value, value]&lt;/code&gt; 각 요소 &lt;code&gt;Set&lt;/code&gt; 신청서의 개체. 에 대한 &lt;code&gt;Set&lt;/code&gt; 오브젝트에는 없다 &lt;code&gt;key&lt;/code&gt; 에 같은 &lt;code&gt;Map&lt;/code&gt; 객체가. 그러나 API를 &lt;code&gt;Map&lt;/code&gt; 객체 와 비슷하게 유지하기 위해 각 &lt;em&gt;항목&lt;/em&gt; 은 여기에서 &lt;em&gt;키&lt;/em&gt; 와 &lt;em&gt;값에&lt;/em&gt; 대해 동일한 값을 가지 므로 배열 &lt;code&gt;[value, value]&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fe6a4f4574b5084abecbe7f655efcb57f92d98d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; object that contains the key/value pairs for each index in the array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; 배열의 각 지수의 키 / 값 쌍을 포함 개체.</target>
        </trans-unit>
        <trans-unit id="f22ad6fa36b26f5bddf274c48d07a6f22f9a13af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains&lt;code&gt;[value, value]&lt;/code&gt; for each element in the &lt;code&gt;Set&lt;/code&gt; object, in insertion order. For &lt;code&gt;Set&lt;/code&gt; objects there is no &lt;code&gt;key&lt;/code&gt; like in &lt;code&gt;Map&lt;/code&gt; objects. However, to keep the API similar to the &lt;code&gt;Map&lt;/code&gt; object, each &lt;em&gt;entry&lt;/em&gt; has the same value for its &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; here, so that an array &lt;code&gt;[value, value]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;Iterator&lt;/code&gt; 포함 오브젝트 &lt;code&gt;[value, value]&lt;/code&gt; 각 요소 &lt;code&gt;Set&lt;/code&gt; 신청서의 개체. 대한 &lt;code&gt;Set&lt;/code&gt; 에는이없는 객체 &lt;code&gt;key&lt;/code&gt; 에 같은 &lt;code&gt;Map&lt;/code&gt; 객체가. 그러나 API를 &lt;code&gt;Map&lt;/code&gt; 객체 와 유사하게 유지하기 위해 각 &lt;em&gt;항목&lt;/em&gt; 의 &lt;em&gt;키&lt;/em&gt; 및 &lt;em&gt;값&lt;/em&gt; 값이 동일 하므로 배열 &lt;code&gt;[value, value]&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c1caebd711126afe75ec579c27d0b9befb883ceb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/strong&gt; object that contains the &lt;code&gt;[key, value]&lt;/code&gt; pairs for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;entries()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;반복기&lt;/a&gt;&lt;/strong&gt; 포함 오브젝트 &lt;code&gt;[key, value]&lt;/code&gt; 각 요소 쌍 &lt;code&gt;Map&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="97a96d7deba1a40e71307e1a562acfbfc5075b3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;eval()&lt;/strong&gt;&lt;/code&gt; function evaluates JavaScript code represented as a string.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;eval()&lt;/strong&gt;&lt;/code&gt; 함수는 문자열로 표현 자바 스크립트 코드를 평가합니다.</target>
        </trans-unit>
        <trans-unit id="7bf62a5fe06d464d0ebc135da3a94df7dcc92f9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; method tests whether all elements in the array pass the test implemented by the provided function.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; 에있어서 시험은 어레이의 모든 요소들은 제공된 기능에 의해 구현 된 시험 합격 여부.</target>
        </trans-unit>
        <trans-unit id="e43337a04a0cc85c2618d84e16aace85828c8d2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; method tests whether all elements in the typed array pass the test implemented by the provided function. This method has the same algorithm as &lt;a href=&quot;../array/every&quot;&gt;&lt;code&gt;Array.prototype.every()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; 메소드는 테스트 입력 된 어레이의 모든 요소들은 제공된 기능에 의해 구현 된 시험 합격 여부. 이 메소드는 &lt;a href=&quot;../array/every&quot;&gt; &lt;code&gt;Array.prototype.every()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖습니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="5edf62b15cb89d637e9869cdf94d7b11e66881d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; method tests whether all elements in the typed array pass the test implemented by the provided function. This method has the same algorithm as &lt;a href=&quot;../array/every&quot;&gt;&lt;code&gt;Array.prototype.every()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;every()&lt;/strong&gt;&lt;/code&gt; 메소드는 테스트 입력 된 어레이의 모든 요소들은 제공된 기능에 의해 구현 된 시험 합격 여부. 이 메서드는&lt;a href=&quot;../array/every&quot;&gt; &lt;code&gt;Array.prototype.every()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 가지고&lt;em&gt; 있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는여기에서&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt; 형식화 된 배열 유형&lt;/a&gt; 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="7f18fcbb011d6f7e26b9ded6a0a7fee1b73708c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; method changes all elements in an array to a static value, from a start index (default &lt;code&gt;0&lt;/code&gt;) to an end index (default &lt;code&gt;array.length&lt;/code&gt;). It returns the modified array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; 메소드는 시작 인덱스 (기본적으로 정적 값 어레이의 모든 요소 변경 &lt;code&gt;0&lt;/code&gt; 최종 지수 (기본까지) &lt;code&gt;array.length&lt;/code&gt; ). 수정 된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8ecdf41c0491005248c556bd286090d8248da574" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; method fills all the elements of a typed array from a start index to an end index with a static value. This method has the same algorithm as &lt;a href=&quot;../array/fill&quot;&gt;&lt;code&gt;Array.prototype.fill()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; 메소드는 정적 값 단부 인덱스 시작 인덱스로부터 입력 된 어레이의 모든 요소를 채운다. 이 메소드에는 &lt;a href=&quot;../array/fill&quot;&gt; &lt;code&gt;Array.prototype.fill()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘이 &lt;em&gt;있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="7a8884e933e5fdd62fc6119f9b3d062a87fa4fee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; method fills all the elements of a typed array from a start index to an end index with a static value. This method has the same algorithm as &lt;a href=&quot;../array/fill&quot;&gt;&lt;code&gt;Array.prototype.fill()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; 메소드는 정적 값 단부 인덱스 시작 인덱스로부터 입력 된 어레이의 모든 요소를 채운다. 이 메서드는&lt;a href=&quot;../array/fill&quot;&gt; &lt;code&gt;Array.prototype.fill()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 사용&lt;em&gt; 합니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;&lt;/a&gt; 여기 형식화 된 배열 유형 .</target>
        </trans-unit>
        <trans-unit id="924c5c22c07bf48dd256086ac21b5399a1cf169f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; method fills all the elements of an array from a start index to an end index with a static value. The end index is not included.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;fill()&lt;/strong&gt;&lt;/code&gt; 메소드는 정적 값 단부 인덱스 시작 인덱스로부터 어레이의 모든 요소를 채운다. 최종 지수는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cccea1705e72e3a82a77874b3fb32f80ee328b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; method creates a new array with all elements that pass the test implemented by the provided function.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; 메소드는 제공된 기능에 의해 구현 된 시험을 통과하는 모든 요소와 새로운 배열을 생성한다.</target>
        </trans-unit>
        <trans-unit id="783c10780d2829ea9908ded3d43f28231ac6810c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; method creates a new typed array with all elements that pass the test implemented by the provided function. This method has the same algorithm as &lt;a href=&quot;../array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;filter()&lt;/strong&gt;&lt;/code&gt; 메소드는 제공된 기능에 의해 구현 된 시험을 통과하는 모든 요소가 새로운 입력 된 어레이를 생성한다. 이 메소드에는 &lt;a href=&quot;../array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘이 &lt;em&gt;있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="dc7b7b494cbf171a0b0a8fb84205578687174e87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;finally()&lt;/strong&gt;&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. When the promise is settled, whether fulfilled or rejected, the specified callback function is executed. This provides a way for code that must be executed once the &lt;code&gt;Promise&lt;/code&gt; has been dealt with to be run whether the promise was fulfilled successfully or rejected.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;finally()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; . 약속이 이행되면, 이행 또는 거부 여부에 따라 지정된 콜백 함수가 실행됩니다. 이것은 한 번 실행해야합니다 코드에 대한 방법을 제공 &lt;code&gt;Promise&lt;/code&gt; 약속이 성공적으로 성취 또는 거부 여부를 실행하는 처리되었습니다.</target>
        </trans-unit>
        <trans-unit id="30dce2a3f973a0fbd23d1cec843ba7a0b7b99839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; method returns a &lt;strong&gt;value&lt;/strong&gt; in the typed array, if an element satisfies the provided testing function. Otherwise &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;strong&gt;값&lt;/strong&gt; 소자 만족시키는 테스트 기능을 제공하는 경우에는 입력 된 배열한다. 그렇지 않으면 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 가 반환됩니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="654db06ea972cea92e1738426e2ade4043995b59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; method returns the &lt;strong&gt;value&lt;/strong&gt; of the &lt;strong&gt;first element&lt;/strong&gt; in the array that satisfies the provided testing function. Otherwise &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;strong&gt;값&lt;/strong&gt; 의 &lt;strong&gt;첫 번째 요소를&lt;/strong&gt; 만족시키는 테스트 기능을 제공하는 어레이. 그렇지 않으면 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="24f577e3ea54253d2441d5094e45b3c538a5cd04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; method returns the &lt;strong&gt;value&lt;/strong&gt; of the &lt;strong&gt;first element&lt;/strong&gt; in the provided array that satisfies the provided testing function.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;find()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;strong&gt;값&lt;/strong&gt; 의 &lt;strong&gt;첫 번째 요소를&lt;/strong&gt; 제공된 배열 만족 제공된 테스트 함수.</target>
        </trans-unit>
        <trans-unit id="dfbcba4d1f7417f2f5396078dc4e7a06194fb006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; method returns an &lt;strong&gt;index&lt;/strong&gt; in the typed array, if an element in the typed array satisfies the provided testing function. Otherwise -1 is returned.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;strong&gt;인덱스를&lt;/strong&gt; 상기 입력 된 배열 경우 형식화 된 배열에 만족하는 요소 제공된 테스트 기능. 그렇지 않으면 -1이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="30a660ac24acc06063879fc837cb0751125c9616" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; method returns the &lt;strong&gt;index&lt;/strong&gt; of the first element in the array &lt;strong&gt;that satisfies the provided testing function&lt;/strong&gt;. Otherwise, it returns -1, indicating no element passed the test.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;strong&gt;인덱스&lt;/strong&gt; 배열의 첫 번째 요소를 &lt;strong&gt;만족 제공된 테스트 기능&lt;/strong&gt; . 그렇지 않으면 -1을 반환하여 테스트를 통과 한 요소가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="26c70d16fac6f8b87c0f70f44ae16d107aaffc84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; method returns the &lt;strong&gt;index&lt;/strong&gt; of the first element in the array &lt;strong&gt;that satisfies the provided testing function&lt;/strong&gt;. Otherwise, it returns &lt;code&gt;-1&lt;/code&gt;, indicating that no element passed the test.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환&lt;strong&gt; 인덱스&lt;/strong&gt; 배열의 첫 번째 요소를&lt;strong&gt; 만족 제공된 테스트 기능&lt;/strong&gt; . 그렇지 않으면테스트를 통과 한 요소가 없음을 나타내는 &lt;code&gt;-1&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d9a24b18a5bd8bf1e6c94f1e6052a1b8dc54de68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;flat()&lt;/strong&gt;&lt;/code&gt; method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;flat()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 깊이까지 재귀 그것에 연결된 모든 서브 어레이 요소와 새로운 배열을 생성한다.</target>
        </trans-unit>
        <trans-unit id="8b9cca1fb14a7135d3739ab98e3dc4284fff419d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;flatMap()&lt;/strong&gt;&lt;/code&gt; method first maps each element using a mapping function, then flattens the result into a new array. It is identical to a &lt;a href=&quot;map&quot;&gt;map&lt;/a&gt; followed by a &lt;a href=&quot;flat&quot;&gt;flat&lt;/a&gt; of depth 1, but &lt;code&gt;flatMap&lt;/code&gt; is often quite useful, as merging both into one method is slightly more efficient.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;flatMap()&lt;/strong&gt;&lt;/code&gt; 메소드는 우선 새로운 배열 결과를 병합하는 매핑 함수를 사용하여 각 원소를 매핑한다. 그것은 하나의 방법으로 병합하는 것이 약간 더 효율적이므로 &lt;a href=&quot;map&quot;&gt;맵&lt;/a&gt; 과 깊이 1 의 &lt;a href=&quot;flat&quot;&gt;평면&lt;/a&gt; 이 오는 것과 동일 하지만 &lt;code&gt;flatMap&lt;/code&gt; 이 종종 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cac119326922eaed12a8b2dbac89795593594d21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;flatMap()&lt;/strong&gt;&lt;/code&gt; method returns a new array formed by applying a given callback function to each element of the array, and then flattening the result by one level. It is identical to a &lt;a href=&quot;map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; followed by a &lt;a href=&quot;flat&quot;&gt;&lt;code&gt;flat()&lt;/code&gt;&lt;/a&gt; of depth 1, but slightly more efficient than calling those two methods separately.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;flatMap()&lt;/strong&gt;&lt;/code&gt; 메소드는 배열의 각 요소에 주어진 콜백 함수를 적용하고 한 단계 결과를 평탄화에 의해 형성된 새로운 배열을 반환한다. 이는&lt;a href=&quot;map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; 다음에깊이 1의&lt;a href=&quot;flat&quot;&gt; &lt;code&gt;flat()&lt;/code&gt; &lt;/a&gt; 이오는것과 동일하지만 두 메서드를 개별적으로 호출하는 것보다 약간 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="cc28a64b12811eb5f9279e472b3a40b70da4a261" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once for each array element.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 메소드는, 각각의 배열 요소 한번 제공된 기능을 실행한다.</target>
        </trans-unit>
        <trans-unit id="e755d12111864e226f33786c42b0cc67ef7e69ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once for each value in the &lt;code&gt;Set&lt;/code&gt; object, in insertion order.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 메소드는, 각각의 값에 대해 한번 실행 제공 기능 &lt;code&gt;Set&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="d747a26f0ff5717a959ce4b21d750ed098af885f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once per array element. This method has the same algorithm as &lt;a href=&quot;../array/foreach&quot;&gt;&lt;code&gt;Array.prototype.forEach()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 메소드는 어레이 소자 당 한번 제공된 기능을 실행한다. 이 메소드는 &lt;a href=&quot;../array/foreach&quot;&gt; &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖습니다 . &lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="88dcf3b4e9f83f797570b023487ea9a1ddcf03a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once per array element. This method has the same algorithm as &lt;a href=&quot;../array/foreach&quot;&gt;&lt;code&gt;Array.prototype.forEach()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 메소드는 어레이 소자 당 한번 제공된 기능을 실행한다. 이 방법은&lt;a href=&quot;../array/foreach&quot;&gt; &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; &lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; 는여기에서&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt; 형식화 된 배열 유형&lt;/a&gt; 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="704952741b52af56c132e3b4db9499c659bffb8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; method executes a provided function once per each key/value pair in the &lt;code&gt;Map&lt;/code&gt; object, in insertion order.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;forEach()&lt;/strong&gt;&lt;/code&gt; 메소드는 일단 각 키 / 값 쌍에 따라 제공된 기능을 실행 &lt;code&gt;Map&lt;/code&gt; 신청서에 개체.</target>
        </trans-unit>
        <trans-unit id="6fad2bbc616ee7594219f5917adf3cb670be9bab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;function*&lt;/strong&gt;&lt;/code&gt; declaration (&lt;code&gt;function&lt;/code&gt; keyword followed by an asterisk) defines a &lt;em&gt;generator function&lt;/em&gt;, which returns a &lt;a href=&quot;../global_objects/generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;function*&lt;/strong&gt;&lt;/code&gt; 선언 ( &lt;code&gt;function&lt;/code&gt; 키워드 다음에 별표)을 정의하고 &lt;em&gt;생성 함수&lt;/em&gt; 돌려 &lt;a href=&quot;../global_objects/generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="0fc7738752a9280dc91c4574c698736df1bc6ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;/code&gt; method returns a specified element from a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;/code&gt; 메소드는에서 지정된 요소를 반환 &lt;code&gt;Map&lt;/code&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="335acba5423d5b8363cfc0e4aa72f3f46f1955ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;/code&gt; method returns a specified element from a &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;/code&gt; 메소드는에서 지정된 요소를 반환 &lt;code&gt;WeakMap&lt;/code&gt; 의 개체를.</target>
        </trans-unit>
        <trans-unit id="1a850a6febb572a384a24c7df8e0457cc8614143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;/code&gt; prototype method of the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table()&lt;/code&gt;&lt;/a&gt; object retrieves a function reference stored at a given index.</source>
          <target state="translated">&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table()&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;code&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;/code&gt; 프로토 타입 메서드 는 지정된 인덱스에 저장된 함수 참조를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b4dde45797ad98c48dade2728b6c12eb8ce92911" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;grow()&lt;/strong&gt;&lt;/code&gt; prototype method of the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table&lt;/code&gt;&lt;/a&gt; object increases the size of the Table instance by a specified number of elements.</source>
          <target state="translated">&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;code&gt;&lt;strong&gt;grow()&lt;/strong&gt;&lt;/code&gt; 프로토 타입 메서드 는 지정된 수의 요소만큼 Table 인스턴스의 크기를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="708e9774fc732197d73d0380164496a19397a403" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.apply()&lt;/strong&gt;&lt;/code&gt; method is a trap for a function call.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.apply()&lt;/strong&gt;&lt;/code&gt; 메소드는 함수 호출에 대한 트랩이다.</target>
        </trans-unit>
        <trans-unit id="a6060c6c51098ef6c190fef62001acc66cdb61bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.apply&lt;/strong&gt;&lt;/code&gt; method is a trap for a function call.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.apply&lt;/strong&gt;&lt;/code&gt; 방법은 함수를 호출하기위한 트랩이다.</target>
        </trans-unit>
        <trans-unit id="ebeba589d24753e676940b4f5b81bb60a417fc4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.construct()&lt;/strong&gt;&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.construct()&lt;/strong&gt;&lt;/code&gt; 메소드는 대한 트랩 인 &lt;a href=&quot;../../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 오퍼레이터.</target>
        </trans-unit>
        <trans-unit id="041ce7b126e2eb7202c39c6d0b3f33189835e50c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.construct()&lt;/strong&gt;&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. In order for the new operation to be valid on the resulting Proxy object, the target used to initialize the proxy must itself have a &lt;code&gt;[[Construct]]&lt;/code&gt; internal method (i.e. &lt;code&gt;new target&lt;/code&gt; must be valid).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.construct()&lt;/strong&gt;&lt;/code&gt; 메소드는 대한 트랩 인 &lt;a href=&quot;../../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 오퍼레이터. 결과 Proxy 객체에서 새 작업이 유효하려면 프록시를 초기화하는 데 사용 된 대상 자체에 &lt;code&gt;[[Construct]]&lt;/code&gt; 내부 메소드가 있어야합니다 (즉, &lt;code&gt;new target&lt;/code&gt; 이 유효해야 함).</target>
        </trans-unit>
        <trans-unit id="3015fd2a9dbf9e98fd839a73112ceb5bfcc5b7d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.defineProperty()&lt;/strong&gt;&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.defineProperty()&lt;/strong&gt;&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cbf129d9dac36ff391a03a0f966618e51d99e51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.deleteProperty()&lt;/strong&gt;&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.deleteProperty()&lt;/strong&gt;&lt;/code&gt; 메소드는 대한 트랩 인 &lt;a href=&quot;../../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt; 연산자.</target>
        </trans-unit>
        <trans-unit id="3cebff2175db2bac9b86049a47ebdbcbd5eff9fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.get()&lt;/strong&gt;&lt;/code&gt; method is a trap for getting a property value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.get()&lt;/strong&gt;&lt;/code&gt; 메소드는 속성 값을 가져 오는 함정이다.</target>
        </trans-unit>
        <trans-unit id="0abd7c5d4ea92feb3c2b484121d4264aa2c11105" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.get&lt;/strong&gt;&lt;/code&gt; method is a trap for getting a property value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.get&lt;/strong&gt;&lt;/code&gt; 의 방법은 속성 값을 가져 오는 함정이다.</target>
        </trans-unit>
        <trans-unit id="59730d676349632026c5dc7ef0f38e06c3002e72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.getOwnPropertyDescriptor()&lt;/strong&gt;&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.getOwnPropertyDescriptor()&lt;/strong&gt;&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da27ef4be9f6b8029b84c88a133986e785d84492" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.has()&lt;/strong&gt;&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.has()&lt;/strong&gt;&lt;/code&gt; 메소드는 인위한 트랩 &lt;a href=&quot;../../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; 오퍼레이터.</target>
        </trans-unit>
        <trans-unit id="086a09b79cd37f0435c1774d7bfe36c00f745b79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.has&lt;/strong&gt;&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.has&lt;/strong&gt;&lt;/code&gt; 의 방법은하기위한 함정 &lt;a href=&quot;../../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; 오퍼레이터.</target>
        </trans-unit>
        <trans-unit id="a3cfd683d96a3e006c62de08bb3e8ec5e57e718a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.isExtensible()&lt;/strong&gt;&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.isExtensible()&lt;/strong&gt;&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c5931aef486dd853658845ce2aba9bdfdfdbc229" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.ownKeys()&lt;/strong&gt;&lt;/code&gt; method is a trap for &lt;a href=&quot;../../reflect/ownkeys&quot;&gt;&lt;code&gt;Reflect.ownKeys()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.ownKeys()&lt;/strong&gt;&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../reflect/ownkeys&quot;&gt; &lt;code&gt;Reflect.ownKeys()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d70ff38470c4a982db89266f128fe65328a719fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.preventExtensions()&lt;/strong&gt;&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.preventExtensions()&lt;/strong&gt;&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17de101f0f93ac7e750b7baf3762c51a200ff581" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.set()&lt;/strong&gt;&lt;/code&gt; method is a trap for setting a property value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.set()&lt;/strong&gt;&lt;/code&gt; 메소드는 속성 값을 설정하는 트랩이다.</target>
        </trans-unit>
        <trans-unit id="bbfab3592f3dafc9676bbe5e8671c6d9dff98fd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.set()&lt;/strong&gt;&lt;/code&gt; method is a trap for setting property value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.set()&lt;/strong&gt;&lt;/code&gt; 메소드는 속성 값을 설정하는 트랩이다.</target>
        </trans-unit>
        <trans-unit id="8f5642471ca7f980d4ea68a1666fcd226e0fb5d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.set&lt;/strong&gt;&lt;/code&gt; method is a trap for setting property value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.set&lt;/strong&gt;&lt;/code&gt; 의 방법은 속성 값을 설정하는 트랩이다.</target>
        </trans-unit>
        <trans-unit id="d1e16807ea989e358bbd4ded79487fa1827eb101" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.setPrototypeOf()&lt;/strong&gt;&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.setPrototypeOf()&lt;/strong&gt;&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf9458764a8481b8a0b61026ed10df0c6f1f5f21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;handler.setPrototypeOf&lt;/strong&gt;&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;handler.setPrototypeOf&lt;/strong&gt;&lt;/code&gt; 의 방법에 대한 트랩 인 &lt;a href=&quot;../../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a578a8c370f8fc817eaca6611c1b03d11a3e391" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; method returns a boolean indicating whether an element with the specified key exists in the &lt;code&gt;WeakMap&lt;/code&gt; object or not.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; 메소드는, 특정 키 요소가 존재하는지 여부를 나타내는 부울 반환 &lt;code&gt;WeakMap&lt;/code&gt; 의 물체의 유무.</target>
        </trans-unit>
        <trans-unit id="f9c19455950535277cbe042b5abeab5be486d60a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; method returns a boolean indicating whether an element with the specified key exists or not.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 부울 지정된 키 요소가 존재하는지 여부를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="bf4ee0492be4bf2ce00eecf3e84378a5d4ab8581" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; method returns a boolean indicating whether an element with the specified value exists in a &lt;code&gt;Set&lt;/code&gt; object or not.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; 부울 지정된 값을 가지는 요소가 존재하는지 여부를 나타내는 방법 복귀 &lt;code&gt;Set&lt;/code&gt; 오브젝트 여부.</target>
        </trans-unit>
        <trans-unit id="28dfec19ee609ef661e6aa5747bfddf893d3ff44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; method returns a boolean indicating whether an object exists in a &lt;code&gt;WeakSet&lt;/code&gt; or not.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;has()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 부울 개체가 존재하는지 여부를 나타내는 &lt;code&gt;WeakSet&lt;/code&gt; 여부.</target>
        </trans-unit>
        <trans-unit id="d7197f999777ef023242bba71e8f3dd708e89e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;hasOwnProperty()&lt;/strong&gt;&lt;/code&gt; method returns a boolean indicating whether the object has the specified property as its own property (as opposed to inheriting it).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;hasOwnProperty()&lt;/strong&gt;&lt;/code&gt; 메소드가 반환 부울는 (그것을 상속 반대) 객체가 자신의 속성으로 지정된 속성이 있는지 여부를 나타내는.</target>
        </trans-unit>
        <trans-unit id="000f5da8be099381243f544a9f373c3f7e662c92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; method determines whether a typed array includes a certain element, returning &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; as appropriate. This method has the same algorithm as &lt;a href=&quot;../array/includes&quot;&gt;&lt;code&gt;Array.prototype.includes()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">는 &lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; 있어서 입력이 어레이 반환 특정 요소를 포함하는지 여부를 판정 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 적절. 이 방법은&lt;a href=&quot;../array/includes&quot;&gt; &lt;code&gt;Array.prototype.includes()&lt;/code&gt; &lt;/a&gt;합니다. &lt;em&gt;TypedArray&lt;/em&gt; 는&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;&lt;/a&gt; 여기 형식화 된 배열 유형 .</target>
        </trans-unit>
        <trans-unit id="7726c9f5fd4376043b25b1884a2d1ede79735ece" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; method determines whether a typed array includes a certain element, returning &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; as appropriate. This method has the same algorithm as &lt;a href=&quot;../array/includes&quot;&gt;&lt;code&gt;Array.prototype.includes()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; 메소드는, 입력 된 어레이가 반환 특정 요소를 포함하는지 여부를 판정 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 적절. 이 메소드는 &lt;a href=&quot;../array/includes&quot;&gt; &lt;code&gt;Array.prototype.includes()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖습니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="b653c9e14a9e2e753822079edd73d5fee226066c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; method determines whether an array includes a certain element, returning &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; as appropriate.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; 메소드는 배열 반환 특정 요소를 포함하는지 여부를 판정 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 적절.</target>
        </trans-unit>
        <trans-unit id="6c0fb7d5147d297c64689d7e4025d02507ba35ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; method determines whether an array includes a certain value among its entries, returning &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; as appropriate.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;includes()&lt;/strong&gt;&lt;/code&gt; 방법 배열 복귀 해당 엔트리 중 어떤 값을 포함하는지 여부를 판정 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 적절.</target>
        </trans-unit>
        <trans-unit id="646c7e2b71ac8fde9d550f86accc5ba525a2b6d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;indexOf()&lt;/strong&gt;&lt;/code&gt; method returns the first index at which a given element can be found in the array, or -1 if it is not present.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;indexOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 소자가 배열에서 발견 될 수있는 또는 -1이 존재하지 않는 경우 최초의 인덱스를 반환한다.</target>
        </trans-unit>
        <trans-unit id="2f0b64e3f31e1a7f6d29db965d05f1ae1eab72cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;indexOf()&lt;/strong&gt;&lt;/code&gt; method returns the first index at which a given element can be found in the typed array, or -1 if it is not present. This method has the same algorithm as &lt;a href=&quot;../array/indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;indexOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 소자가 형식화 된 배열에서 발견 될 수있는 또는 -1이 존재하지 않는 경우 최초의 인덱스를 반환한다. 이 방법은&lt;a href=&quot;../array/indexof&quot;&gt; &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt; &lt;/a&gt;합니다. &lt;em&gt;TypedArray&lt;/em&gt; 는여기에서&lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt; 형식화 된 배열 유형&lt;/a&gt; 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="a3eea6400a846378f17241be6f13fd2cb91aeb1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;indexOf()&lt;/strong&gt;&lt;/code&gt; method returns the first index at which a given element can be found in the typed array, or -1 if it is not present. This method has the same algorithm as &lt;a href=&quot;../array/indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;indexOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 소자가 형식화 된 배열에서 발견 될 수있는 또는 -1이 존재하지 않는 경우 최초의 인덱스를 반환한다. 이 메소드는 &lt;a href=&quot;../array/indexof&quot;&gt; &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖습니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="ff9efaed1225c90e5674fd19f826898af8eebe1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;isNaN()&lt;/strong&gt;&lt;/code&gt; function determines whether a value is &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; or not. Note, coercion inside the &lt;code&gt;isNaN&lt;/code&gt; function has &lt;a href=&quot;#Description&quot;&gt;interesting&lt;/a&gt; rules; you may alternatively want to use &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;Number.isNaN()&lt;/code&gt;&lt;/a&gt;, as defined in ECMAScript 2015.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;isNaN()&lt;/strong&gt;&lt;/code&gt; 함수의 값인지 여부를 확인 &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 의&lt;/a&gt; 여부. &lt;code&gt;isNaN&lt;/code&gt; 내부의 강제 변환 함수 에는 &lt;a href=&quot;#Description&quot;&gt;흥미로운&lt;/a&gt; 규칙이 있습니다. ECMAScript 2015에 정의 된대로 &lt;a href=&quot;number/isnan&quot;&gt; &lt;code&gt;Number.isNaN()&lt;/code&gt; &lt;/a&gt; 을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1309d2331fb1e69c62dda54ace47f79d74d38ab7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;isNaN()&lt;/strong&gt;&lt;/code&gt; function determines whether a value is &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; or not. Note: coercion inside the &lt;code&gt;isNaN&lt;/code&gt; function has &lt;a href=&quot;#Description&quot;&gt;interesting&lt;/a&gt; rules; you may alternatively want to use &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;Number.isNaN()&lt;/code&gt;&lt;/a&gt;, as defined in ECMAScript 2015.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;isNaN()&lt;/strong&gt;&lt;/code&gt; 함수의 값인지 여부를 확인 &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 의&lt;/a&gt; 여부. 참고 : &lt;code&gt;isNaN&lt;/code&gt; 함수 내부의 강제 에는 &lt;a href=&quot;#Description&quot;&gt;흥미로운&lt;/a&gt; 규칙이 있습니다. ECMAScript 2015에 정의 된대로 &lt;a href=&quot;number/isnan&quot;&gt; &lt;code&gt;Number.isNaN()&lt;/code&gt; &lt;/a&gt; 을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c16094e78a9c4d4dd4c3193df98071909c221758" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;isPrototypeOf()&lt;/strong&gt;&lt;/code&gt; method checks if an object exists in another object's prototype chain.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;isPrototypeOf()&lt;/strong&gt;&lt;/code&gt; 메소드를 검사 물체가 다른 물체의 프로토 타입 체인에있는 경우.</target>
        </trans-unit>
        <trans-unit id="c84931dfa3aedb1e375bec4968382252b89985d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; method creates and returns a new string by concatenating all of the elements in an array (or an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-like object&lt;/a&gt;), separated by commas or a specified separator string.</source>
          <target state="translated">는 &lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; 메소드를 생성하고 반환 배열의 요소를 모두 연결하여 새로운 문자열 (또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;어레이 형상 물체&lt;/a&gt; ) 콤마 분리 지정된 문자열로 분리.</target>
        </trans-unit>
        <trans-unit id="035c0ff0803ce5ded5e3c13e0f0934b006c1f3dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; method creates and returns a new string by concatenating all of the elements in an array (or an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt;array-like object&lt;/a&gt;), separated by commas or a specified separator string. If the array has only one item, then that item will be returned without using the separator.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; 메소드가 생성하고 배열의 요소를 모두 연결하여 새로운 문자열을 리턴 (또는&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Indexed_collections#Working_with_array-like_objects&quot;&gt; 객체 어레이 형상&lt;/a&gt; ) 콤마 분리 지정된 문자열로 분리. 배열에 항목이 하나만 있으면 구분 기호를 사용하지 않고 해당 항목이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e89ed642d493aa56fa98b2de88ff611ae7b3de06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; method joins all elements of an array into a string. This method has the same algorithm as &lt;a href=&quot;../array/join&quot;&gt;&lt;code&gt;Array.prototype.join()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; 메소드는 문자열로 어레이의 모든 요소를 결합한다. 이 메소드에는 &lt;a href=&quot;../array/join&quot;&gt; &lt;code&gt;Array.prototype.join()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘이 &lt;em&gt;있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="6b455d012ef3ff815c4a87beb54513f108d4fbfa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; method joins all elements of an array into a string. This method has the same algorithm as &lt;a href=&quot;../array/join&quot;&gt;&lt;code&gt;Array.prototype.join()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;join()&lt;/strong&gt;&lt;/code&gt; 메소드는 문자열로 어레이의 모든 요소를 결합한다. 이 방법은&lt;a href=&quot;../array/join&quot;&gt; &lt;code&gt;Array.prototype.join()&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 있습니다.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기 에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="9a26f632b30ce857bf418ecdc5f8c983697f974a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;keys()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; object that contains the keys for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;keys()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 의 각 요소에 대한 키를 포함 오브젝트 &lt;code&gt;Map&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="76bb159eb6b9791e097386dc324574864b1432bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;keys()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; object that contains the keys for each index in the array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;keys()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;&lt;strong&gt;Array Iterator&lt;/strong&gt;&lt;/code&gt; 배열의 각 인덱스에 대한 키를 포함 개체.</target>
        </trans-unit>
        <trans-unit id="6c612445ee05f073466d078f3ce15332e66c2bd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;lastIndexOf()&lt;/strong&gt;&lt;/code&gt; method returns the last index at which a given element can be found in the array, or -1 if it is not present. The array is searched backwards, starting at &lt;code&gt;fromIndex&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;lastIndexOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 소자가 배열에서 발견 될 수있는 또는 -1이 없으면 마지막 인덱스를 반환한다. 배열은 &lt;code&gt;fromIndex&lt;/code&gt; 에서 시작하여 뒤로 검색 됩니다.</target>
        </trans-unit>
        <trans-unit id="4c7b7528d5730086c50d71ed25c5a93223c07420" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;lastIndexOf()&lt;/strong&gt;&lt;/code&gt; method returns the last index at which a given element can be found in the typed array, or -1 if it is not present. The typed array is searched backwards, starting at &lt;code&gt;fromIndex&lt;/code&gt;. This method has the same algorithm as &lt;a href=&quot;../array/lastindexof&quot;&gt;&lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;lastIndexOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 소자가 형식화 된 배열에서 발견 될 수있는 또는 -1이 없으면 마지막 인덱스를 반환한다. 입력 된 배열은 &lt;code&gt;fromIndex&lt;/code&gt; 에서 시작하여 역방향으로 검색됩니다. 됩니다. 이 메서드는 &lt;a href=&quot;../array/lastindexof&quot;&gt; &lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 사용합니다. . &lt;em&gt;TypedArray&lt;/em&gt; 는 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다. 여기 .</target>
        </trans-unit>
        <trans-unit id="aea8805086569e0d38da2523961661819a548ac9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;lastIndexOf()&lt;/strong&gt;&lt;/code&gt; method returns the last index at which a given element can be found in the typed array, or -1 if it is not present. The typed array is searched backwards, starting at &lt;code&gt;fromIndex&lt;/code&gt;. This method has the same algorithm as &lt;a href=&quot;../array/lastindexof&quot;&gt;&lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;lastIndexOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 소자가 형식화 된 배열에서 발견 될 수있는 또는 -1이 없으면 마지막 인덱스를 반환한다. 형식화 된 배열은 &lt;code&gt;fromIndex&lt;/code&gt; 에서 시작하여 뒤로 검색 됩니다. 이 메소드에는 &lt;a href=&quot;../array/lastindexof&quot;&gt; &lt;code&gt;Array.prototype.lastIndexOf()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘이 &lt;em&gt;있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="7f5e8c3de9785ec846493bfb4607e68760653c61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; property indicates the number of Parameters expected by the function.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; 속성은 함수가 예상 매개 변수의 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5e614ccc31e70daa3fef6a16bf753ec57010d8d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; property of an object which is an instance of type &lt;code&gt;Array&lt;/code&gt; sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 유형의 인스턴스 인 객체 의 &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; 속성은 해당 배열의 요소 수를 설정하거나 반환합니다. 값은 부호가없는 32 비트 정수이며 항상 배열에서 가장 높은 인덱스보다 숫자가 더 큽니다.</target>
        </trans-unit>
        <trans-unit id="e016f1881f16e6920b357efdcbe478a254dc61c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; prototype property of the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table&lt;/code&gt;&lt;/a&gt; object returns the length of the table, i.e. the number of elements in the table.</source>
          <target state="translated">&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;code&gt;&lt;strong&gt;length&lt;/strong&gt;&lt;/code&gt; 프로토 타입 속성은 테이블의 길이, 즉 테이블의 요소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f615e6ed7a43c35b63fd2c85ebfee11e64174142" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; method &lt;strong&gt;creates a new array&lt;/strong&gt; populated with the results of calling a provided function on every element in the calling array.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; 메소드는&lt;strong&gt; 새로운 배열 생성&lt;/strong&gt; 호출 어레이의 모든 요소에 대해 제공되는 함수 호출의 결과로 채워한다.</target>
        </trans-unit>
        <trans-unit id="eb9668d69effc5305fd7aab7ea6517a13800409a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; method creates a new array with the results of calling a provided function on every element in the calling array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; 메소드 호출 어레이의 모든 요소에 대해 제공되는 함수 호출의 결과로 새로운 배열을 생성한다.</target>
        </trans-unit>
        <trans-unit id="614bd51d4e9c7402f88af18d7b6e21940a9250b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; method creates a new typed array with the results of calling a provided function on every element in this typed array. This method has the same algorithm as &lt;a href=&quot;../array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; 메소드는이 입력 된 어레이의 모든 요소에 대해 제공되는 함수 호출의 결과로 새로운 형식화 된 배열을 생성한다. 이 메소드는 &lt;a href=&quot;../array/map&quot;&gt; &lt;code&gt;Array.prototype.map()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 갖습니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="9d75520715062c56e4c1dffc498885f047dd627d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; method creates a new typed array with the results of calling a provided function on every element in this typed array. This method has the same algorithm as &lt;a href=&quot;../array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;map()&lt;/strong&gt;&lt;/code&gt; 메소드는이 입력 된 어레이의 모든 요소에 대해 제공되는 함수 호출의 결과로 새로운 형식화 된 배열을 생성한다. 이 메서드는 &lt;a href=&quot;../array/map&quot;&gt; &lt;code&gt;Array.prototype.map()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 사용합니다.&lt;em&gt; 있습니다.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다. 여기 .</target>
        </trans-unit>
        <trans-unit id="18a4b2bf257ace2f33834f2cc8b05b61604a44f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;message&lt;/strong&gt;&lt;/code&gt; property is a human-readable description of the error.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;message&lt;/strong&gt;&lt;/code&gt; 속성은 오류의 사람이 읽을 수있는 설명입니다.</target>
        </trans-unit>
        <trans-unit id="0ad72babece34d72a19caabe0e4a753ecf029c1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/code&gt; property represents a name for the type of error. The initial value is &quot;Error&quot;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/code&gt; 속성은 오류의 유형에 대한 이름을 나타냅니다. 초기 값은 &quot;오류&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="ce94cb770544dfa60920742d4f5dac77d505498f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;next&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; method returns an object with two properties &lt;code&gt;done&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. You can also provide a parameter to the &lt;code&gt;next&lt;/code&gt; method to send a value to the generator.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;next&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; 메소드는 두 가지 속성을 가진 객체를 반환 &lt;code&gt;done&lt;/code&gt; 하고 &lt;code&gt;value&lt;/code&gt; . &lt;code&gt;next&lt;/code&gt; 메소드에 매개 변수를 제공 하여 생성기에 값을 보낼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1347e1b491aee2b407c8dabe4f3cb3031f248b0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;of&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; method receives a code and returns a string based on the locale and options provided when instantiating Intl.DisplayNames.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;of&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; 메소드는, 코드를 수신하고, 로케일 및 Intl.DisplayNames 인스턴스화 때 제공된 옵션에 따라 문자열을 반환한다.</target>
        </trans-unit>
        <trans-unit id="c647847376f607fe670b8298d6292ec92bd68563" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;parseFloat()&lt;/strong&gt;&lt;/code&gt; function parses an argument (converting it to a string first if needed) and returns a floating point number.</source>
          <target state="translated">그만큼 &lt;code&gt;&lt;strong&gt;parseFloat()&lt;/strong&gt;&lt;/code&gt; 함수는 인수 (필요한 경우 제 문자열로 변환)를 분석하고 부동 소수점 수를 반환한다.</target>
        </trans-unit>
        <trans-unit id="21999aa5050544f95a6e76a702a3f445bf0f43af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;parseFloat()&lt;/strong&gt;&lt;/code&gt; function parses an argument and returns a floating point number.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;parseFloat()&lt;/strong&gt;&lt;/code&gt; 함수는 인수를 구문 분석하고 부동 소수점 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cfece1c2d678f29dbe5d74602c7f12e51fdba6b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;parseInt()&lt;/strong&gt;&lt;/code&gt; function parses a string argument and returns an integer of the specified &lt;a href=&quot;https://en.wikipedia.org/wiki/Radix&quot;&gt;radix&lt;/a&gt; (the base in mathematical numeral systems).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;parseInt()&lt;/strong&gt;&lt;/code&gt; 함수는 문자열 인수를 구문 분석하고 특정의 정수를 반환 &lt;a href=&quot;https://en.wikipedia.org/wiki/Radix&quot;&gt;기수&lt;/a&gt; (수학적 숫자 시스템의 기본을).</target>
        </trans-unit>
        <trans-unit id="3dfd6913e9b4442f40861ed9599bb5d91ebf4080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;parseInt()&lt;/strong&gt;&lt;/code&gt; function parses a string argument and returns an integer of the specified radix (the base in mathematical numeral systems).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;parseInt()&lt;/strong&gt;&lt;/code&gt; 함수는 문자열 인수를 구문 분석하고 지정된 기수 (수학적 숫자 시스템베이스)의 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c90d1c205bf439b189bbf3642a6a17b570f4f81e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;pop()&lt;/strong&gt;&lt;/code&gt; method removes the &lt;strong&gt;last&lt;/strong&gt; element from an array and returns that element. This method changes the length of the array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;pop()&lt;/strong&gt;&lt;/code&gt; 메소드는 제거 &lt;strong&gt;마지막&lt;/strong&gt; 어레이 소자로부터 반환 소자. 이 방법은 배열의 길이를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="7e8345659fe75ce31a7dc4c435cd2dd9242e3e2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;propertyIsEnumerable()&lt;/strong&gt;&lt;/code&gt; method returns a Boolean indicating whether the specified property is enumerable and is the object's own property.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;propertyIsEnumerable()&lt;/strong&gt;&lt;/code&gt; 메소드가 반환 부울 지정된 속성을 열거하고 객체의 자신의 재산인지 여부를 나타내는.</target>
        </trans-unit>
        <trans-unit id="6e1c6dc676b89297060531361010c44a7f2dec4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;propertyIsEnumerable()&lt;/strong&gt;&lt;/code&gt; method returns a Boolean indicating whether the specified property is enumerable.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;propertyIsEnumerable()&lt;/strong&gt;&lt;/code&gt; 메소드가 반환 부울 지정된 속성을 열거 가능한지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f23900d5c68bc22503398f9c178ca4960a1a1092" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;push()&lt;/strong&gt;&lt;/code&gt; method adds one or more elements to the end of an array and returns the new length of the array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;push()&lt;/strong&gt;&lt;/code&gt; 메소드는 배열의 마지막 하나 개 이상의 요소를 추가하고 배열의 새로운 길이를 반환한다.</target>
        </trans-unit>
        <trans-unit id="476cae893735b439422b4179cf3399831bed3f65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; method applies a function against an accumulator and each value of the typed array (from left-to-right) has to reduce it to a single value. This method has the same algorithm as &lt;a href=&quot;../array/reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; 메소드는 어큐뮬레이터에 대해 기능 및 하나의 값으로 감소한다 (왼쪽에서 오른쪽)에 입력 된 어레이의 각 값을 적용한다. 이 메소드는 &lt;a href=&quot;../array/reduce&quot;&gt; &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖습니다 . &lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="6907712f4c83f8c48ac22e17aadce245ae6d313d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; method applies a function against an accumulator and each value of the typed array (from left-to-right) has to reduce it to a single value. This method has the same algorithm as &lt;a href=&quot;../array/reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; 메소드는 어큐뮬레이터에 대해 기능 및 하나의 값으로 감소한다 (왼쪽에서 오른쪽)에 입력 된 어레이의 각 값을 적용한다. 이 메서드는 &lt;a href=&quot;../array/reduce&quot;&gt; &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 사용 합니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 여기 에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="bd51712e09d38903e3136b7ff43a88860305476a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; method executes a &lt;strong&gt;reducer&lt;/strong&gt; function (that you provide) on each element of the array, resulting in single output value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; 메소드가 실행 &lt;strong&gt;감속기&lt;/strong&gt; 단일 출력 값을 생성 된 어레이의 각 요소에 (사용자가 제공하는) 기능.</target>
        </trans-unit>
        <trans-unit id="034f4b7413c524fd0d47e690c5d412bccf3ddaf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; method executes a &lt;strong&gt;reducer&lt;/strong&gt; function (that you provide) on each member of the array resulting in a single output value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reduce()&lt;/strong&gt;&lt;/code&gt; 메소드가 실행 &lt;strong&gt;감속기&lt;/strong&gt; 단일 출력 값을 생성 된 어레이의 각 구성원의 기능 (만약 제공하는).</target>
        </trans-unit>
        <trans-unit id="5229cb6830ae1ec04570147dbf431d6a0cff0861" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reduceRight()&lt;/strong&gt;&lt;/code&gt; method applies a function against an accumulator and each value of the array (from right-to-left) to reduce it to a single value.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reduceRight()&lt;/strong&gt;&lt;/code&gt; 메소드는 어큐뮬레이터에 대해 기능 및 배열의 각각의 값에 적용되는 (행을 오른쪽에서 왼쪽으로) 하나의 값으로 감소시킨다.</target>
        </trans-unit>
        <trans-unit id="9ea7d2d504b07bbb124916fce9aa44e2ec6dedb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reduceRight()&lt;/strong&gt;&lt;/code&gt; method applies a function against an accumulator and each value of the typed array (from right-to-left) has to reduce it to a single value. This method has the same algorithm as &lt;a href=&quot;../array/reduceright&quot;&gt;&lt;code&gt;Array.prototype.reduceRight()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reduceRight()&lt;/strong&gt;&lt;/code&gt; 메소드는 어큐뮬레이터에 대해 기능 및 하나의 값으로 감소한다 (오른쪽에서 왼쪽으로)에 입력 된 어레이의 각 값을 적용한다. 이 메소드는 &lt;a href=&quot;../array/reduceright&quot;&gt; &lt;code&gt;Array.prototype.reduceRight()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖습니다 . &lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="1b80a7d60ace5597c78ed46d0a84b461e42160d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reduceRight()&lt;/strong&gt;&lt;/code&gt; method applies a function against an accumulator and each value of the typed array (from right-to-left) has to reduce it to a single value. This method has the same algorithm as &lt;a href=&quot;../array/reduceright&quot;&gt;&lt;code&gt;Array.prototype.reduceRight()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reduceRight()&lt;/strong&gt;&lt;/code&gt; 메소드는 어큐뮬레이터에 대해 기능 및 하나의 값으로 감소한다 (오른쪽에서 왼쪽으로)에 입력 된 어레이의 각 값을 적용한다. 이 메서드는 &lt;a href=&quot;../array/reduceright&quot;&gt; &lt;code&gt;Array.prototype.reduceRight()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 사용 합니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 여기 에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="a790ac6e1294383154bc7b2978538f5eb94d6274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;return()&lt;/strong&gt;&lt;/code&gt; method returns the given value and finishes the generator.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;return()&lt;/strong&gt;&lt;/code&gt; 메소드는 소정의 값을 리턴하고, 발전기를 종료한다.</target>
        </trans-unit>
        <trans-unit id="bb2cca9fba0f9edb4c913142b6a0dc75a8858ab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reverse()&lt;/strong&gt;&lt;/code&gt; method reverses a typed array in place. The first typed array element becomes the last and the last becomes the first. This method has the same algorithm as &lt;a href=&quot;../array/reverse&quot;&gt;&lt;code&gt;Array.prototype.reverse()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reverse()&lt;/strong&gt;&lt;/code&gt; 메소드는 대신에 형식화 된 배열을 반대로. 유형이 지정된 첫 번째 배열 요소가 마지막 요소가되고 마지막 요소가 첫 번째 요소가됩니다. 이 메서드는 &lt;a href=&quot;../array/reverse&quot;&gt; &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 가지고 있습니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 여기 에서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="3c536cd88c53a52914f16d8cfa3831411cf0210d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reverse()&lt;/strong&gt;&lt;/code&gt; method reverses a typed array in place. The first typed array element becomes the last and the last becomes the first. This method has the same algorithm as &lt;a href=&quot;../array/reverse&quot;&gt;&lt;code&gt;Array.prototype.reverse()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reverse()&lt;/strong&gt;&lt;/code&gt; 메소드는 대신에 형식화 된 배열을 반대로. 첫 번째로 입력 된 배열 요소가 마지막이되고 마지막이 첫 번째가됩니다. 이 메소드는 &lt;a href=&quot;../array/reverse&quot;&gt; &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖습니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="a1e9a75dd821f1661fdaa1d44865d4df67bf3184" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;reverse()&lt;/strong&gt;&lt;/code&gt; method reverses an array &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in place&lt;/a&gt;&lt;/em&gt;. The first array element becomes the last, and the last array element becomes the first.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;reverse()&lt;/strong&gt;&lt;/code&gt; 메서드는 배열 &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;을&lt;/a&gt;&lt;/em&gt; 원래 &lt;em&gt;위치로&lt;/em&gt; 되돌립니다 . 첫 번째 배열 요소가 마지막이되고 마지막 배열 요소가 첫 번째가됩니다.</target>
        </trans-unit>
        <trans-unit id="c5867b40bdd16a340cfc615fb40e0bbd1a484ded" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;/code&gt; method adds a new element with a specified &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; to a &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;/code&gt; 메소드로 지정된 새로운 요소에 추가 &lt;code&gt;key&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; A와 &lt;code&gt;WeakMap&lt;/code&gt; 의 개체.</target>
        </trans-unit>
        <trans-unit id="9f3a35790c7d2a8ee211d6d1ce612f997e937471" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;/code&gt; method adds or updates an element with a specified &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; to a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;/code&gt; 메소드는 추가 또는 지정된 소자와 갱신 &lt;code&gt;key&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; (A)에 &lt;code&gt;Map&lt;/code&gt; 오브젝트.</target>
        </trans-unit>
        <trans-unit id="ea2e9a9480a1e9deaae663450236dfc2267ef78e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;/code&gt; prototype method of the &lt;a href=&quot;../table&quot;&gt;&lt;code&gt;WebAssembly.Table&lt;/code&gt;&lt;/a&gt; object mutates a reference stored at a given index to a different value.</source>
          <target state="translated">&lt;a href=&quot;../table&quot;&gt; &lt;code&gt;WebAssembly.Table&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;code&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;/code&gt; 프로토 타입 메서드 는 지정된 인덱스에 저장된 참조를 다른 값으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="229299e7a3f94fb998193be6f7ee48453e822fd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;shift()&lt;/strong&gt;&lt;/code&gt; method removes the &lt;strong&gt;first&lt;/strong&gt; element from an array and returns that removed element. This method changes the length of the array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;shift()&lt;/strong&gt;&lt;/code&gt; 메소드는 삭제 &lt;strong&gt;제&lt;/strong&gt; 배열 복귀 제거 소자로부터 소자. 이 방법은 배열의 길이를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="313011d9b2b52af018ebe510e386c7823ed7c020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;size&lt;/strong&gt;&lt;/code&gt; accessor property returns the number of elements in a &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;size&lt;/strong&gt;&lt;/code&gt; 프로퍼티 접근은 요소 수를 반환 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 오브젝트를.</target>
        </trans-unit>
        <trans-unit id="0385cfa03ce049ee131132676b239e05083bd039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;size&lt;/strong&gt;&lt;/code&gt; accessor property returns the number of elements in a &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;size&lt;/strong&gt;&lt;/code&gt; 접근 자 속성을 반환 A의 원소의 개수 &lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="2ef31edf22c840448a59a649b73d48c84f89ef3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;ArrayBuffer&lt;/code&gt; whose contents are a copy of this &lt;code&gt;ArrayBuffer&lt;/code&gt;'s bytes from &lt;code&gt;begin&lt;/code&gt;, inclusive, up to &lt;code&gt;end&lt;/code&gt;, exclusive.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; 메소드는 새로운 반환 &lt;code&gt;ArrayBuffer&lt;/code&gt; 그 내용이 사본입니다 &lt;code&gt;ArrayBuffer&lt;/code&gt; 에서의 바이트 &lt;code&gt;begin&lt;/code&gt; 까지 포함, &lt;code&gt;end&lt;/code&gt; 독점.</target>
        </trans-unit>
        <trans-unit id="532021405de3d8d5647133b36731d42355597faf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; method returns a new typed array (with a new underlying buffer), that contains a copy of a portion of the original typed array. This method has the same algorithm as &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 일본어 입력 된 어레이의 일부의 사본을 포함 (새로운 기본 버퍼) 새로운 형식화 된 배열. 이 메서드는 &lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 가지고 있습니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 여기 에서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="2e7095197fe13f285adf5209123fd1abb0c9fa52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; method returns a shallow copy of a portion of a typed array into a new typed array object. This method has the same algorithm as &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; 메소드는 새로운 형식화 된 배열 객체로 형식화 된 배열의 일부분의 얕은 사본을 돌려 준다. 이 메소드에는 &lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘이 &lt;em&gt;있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="43cc073d057693a01ec495da4dbef5af38eea0e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; method returns a shallow copy of a portion of an array into a new array object selected from &lt;code&gt;begin&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; (&lt;code&gt;end&lt;/code&gt; not included). The original array will not be modified.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;slice()&lt;/strong&gt;&lt;/code&gt; 메소드로부터 선택된 새로운 어레이 오브젝트에 배열 부분의 얕은 사본을 돌려 &lt;code&gt;begin&lt;/code&gt; 에 &lt;code&gt;end&lt;/code&gt; ( &lt;code&gt;end&lt;/code&gt; 포함하지 않음). 원래 배열은 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e826557cdea9d5add121c371e2c870aa1194038b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;some()&lt;/strong&gt;&lt;/code&gt; method tests whether at least one element in the array passes the test implemented by the provided function.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;some()&lt;/strong&gt;&lt;/code&gt; 어레이의 적어도 하나 개의 원소 제공된 기능에 의해 구현되는 테스트를 통과 여부 검사 방법.</target>
        </trans-unit>
        <trans-unit id="6a14810ab931e34a4371074da58f2bae48868a03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;some()&lt;/strong&gt;&lt;/code&gt; method tests whether some element in the typed array passes the test implemented by the provided function. This method has the same algorithm as &lt;a href=&quot;../array/some&quot;&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;some()&lt;/strong&gt;&lt;/code&gt; 타이핑 어레이의 일부 요소가 제공되는 기능에 의해 구현되는 테스트를 통과 여부 검사 방법. 이 메소드에는 &lt;a href=&quot;../array/some&quot;&gt; &lt;code&gt;Array.prototype.some()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘이 &lt;em&gt;있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="356f98b20b5abad793b357891471c56363c32c8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;some()&lt;/strong&gt;&lt;/code&gt; method tests whether some element in the typed array passes the test implemented by the provided function. This method has the same algorithm as &lt;a href=&quot;../array/some&quot;&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;some()&lt;/strong&gt;&lt;/code&gt; 타이핑 어레이의 일부 요소가 제공되는 기능에 의해 구현되는 테스트를 통과 여부 검사 방법. 이 메서드는 &lt;a href=&quot;../array/some&quot;&gt; &lt;code&gt;Array.prototype.some()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 가지고 &lt;em&gt;있습니다. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기 에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="5eac93ec585ef6a1c6e5b780d4fed597916453dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; method sorts the elements of a typed array numerically &lt;em&gt;in place&lt;/em&gt; and returns the typed array. This method has the same algorithm as &lt;a href=&quot;../array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt;, except that sorts the values numerically instead of as strings. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; 메소드는 수치 적으로 형식화 된 배열의 요소 정렬 &lt;em&gt;장소를&lt;/em&gt; 하고 형식화 된 배열을 반환합니다. 이 메서드는 값을 문자열 대신 숫자로 정렬한다는 점을 제외하면 &lt;a href=&quot;../array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘 을 사용합니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 여기 에서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="401523bcf7fcc84881c476c7d9734caaf27b63b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; method sorts the elements of a typed array numerically &lt;em&gt;in place&lt;/em&gt; and returns the typed array. This method has the same algorithm as &lt;a href=&quot;../array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt;, except that sorts the values numerically instead of as strings&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; 메소드는 수치 적으로 형식화 된 배열의 요소 정렬 &lt;em&gt;장소를&lt;/em&gt; 하고 형식화 된 배열을 반환합니다. 이 메소드는 &lt;a href=&quot;../array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 갖지만, 문자열 대신 숫자를 사용하여 값을 정렬합니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="d056cc137d408763936ae0e6e9c71d0fa1728ac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; method sorts the elements of an array &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in place&lt;/a&gt;&lt;/em&gt; and returns the array. The default sort order is built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; 메소드는 배열 요소 정렬 &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;대신하여&lt;/a&gt;&lt;/em&gt; 어레이를 리턴한다. 기본 정렬 순서는 요소를 문자열로 변환 한 다음 UTF-16 코드 단위 값 시퀀스를 비교할 때 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="d4a3cb17c78434def3a495841d501c973eba97d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; method sorts the elements of an array &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in place&lt;/a&gt;&lt;/em&gt; and returns the sorted array. The default sort order is ascending, built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;sort()&lt;/strong&gt;&lt;/code&gt; 메서드는 배열의 요소 정렬 &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;장소를&lt;/a&gt;&lt;/em&gt; 하고 정렬 된 배열을 반환합니다. 기본 정렬 순서는 오름차순이며, 요소를 문자열로 변환 한 다음 UTF-16 코드 단위 값의 시퀀스를 비교합니다.</target>
        </trans-unit>
        <trans-unit id="de56aea8fa54670e386932ea709cfe1cf1e1798d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;static&lt;/strong&gt;&lt;/code&gt; keyword defines a static method for a class. Static methods aren't called on instances of the class. Instead, they're called on the class itself. These are often utility functions, such as functions to create or clone objects.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;static&lt;/strong&gt;&lt;/code&gt; 키워드는 클래스의 정적 메서드를 정의합니다. 정적 메소드는 클래스의 인스턴스에서 호출되지 않습니다. 대신, 그들은 수업 자체에 부름을 받았습니다. 이들은 종종 객체를 생성하거나 복제하는 기능과 같은 유틸리티 기능입니다.</target>
        </trans-unit>
        <trans-unit id="642ba3ce4a9faa308949b0c7850ab65f1f118bfa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;static&lt;/strong&gt;&lt;/code&gt; keyword defines a static method or property for a class. Neither static methods nor static properties can be called on instances of the class. Instead, they're called on the class itself. Static methods are often utility functions, such as functions to create or clone objects, whereas static properties are useful for caches, fixed-configuration, or any other data you don't need to be replicated across instances.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;static&lt;/strong&gt;&lt;/code&gt; 키워드는 클래스의 정적 메서드 또는 속성을 정의합니다. 클래스의 인스턴스에서 정적 메서드 나 정적 속성을 호출 할 수 없습니다. 대신 클래스 자체에서 호출됩니다. 정적 메서드는 객체를 생성하거나 복제하는 함수와 같은 유틸리티 함수 인 경우가 많지만 정적 속성은 캐시, 고정 구성 또는 인스턴스간에 복제 할 필요가없는 기타 데이터에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ec65134d02f52de4e51aaac61a812cecb4844377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;then()&lt;/strong&gt;&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. It takes up to two arguments: callback functions for the success and failure cases of the &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;then()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 의 성공 및 실패 사례에 대한 콜백 함수라는 최대 두 개의 인수가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="97131a8fde25db2419457b98595cec0e63b8e38a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;then()&lt;/strong&gt;&lt;/code&gt; method returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. It takes up to two arguments: callback functions for the success and failure cases of the &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;then()&lt;/strong&gt;&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Promise&lt;/code&gt; 의 성공 및 실패 사례에 대한 콜백 함수에는 최대 두 개의 인수가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="32b163d7592cd21a3cef3e0bbec84026237c2cbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;throw()&lt;/strong&gt;&lt;/code&gt; method resumes the execution of a generator by throwing an error into it and returns an object with two properties &lt;code&gt;done&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;throw()&lt;/strong&gt;&lt;/code&gt; 메소드는 그것에 에러를 발생시켜 발전기의 실행을 재개 두 특성을 갖는 객체를 반환 &lt;code&gt;done&lt;/code&gt; 및 &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a27864056b05cb6d65d10b6fd4fc69ea0bfb69d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toLocaleString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the elements of the array. The elements are converted to Strings using their &lt;code&gt;toLocaleString&lt;/code&gt; methods and these Strings are separated by a locale-specific String (such as a comma &amp;ldquo;,&amp;rdquo;).</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toLocaleString()&lt;/strong&gt;&lt;/code&gt; 에있어서, 상기 배열의 요소를 나타내는 문자열을 반환한다. 요소는 &lt;code&gt;toLocaleString&lt;/code&gt; 메소드를 사용하여 문자열로 변환 되며 이러한 문자열은 로케일 특정 문자열 (예 : 쉼표 &quot;,&quot;)로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="b605bc8e35e3f59ed456cdbc1085ec83b2b02f6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toLocaleString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the elements of the typed array. The elements are converted to strings and are separated by a locale-specific string (such as a comma &amp;ldquo;,&amp;rdquo;). This method has the same algorithm as &lt;a href=&quot;../array/tolocalestring&quot;&gt;&lt;code&gt;Array.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; and, as the typed array elements are numbers, the same algorithm as &lt;a href=&quot;../number/tolocalestring&quot;&gt;&lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; applies for each element. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toLocaleString()&lt;/strong&gt;&lt;/code&gt; 메소드는, 입력 된 배열의 요소를 나타내는 문자열을 반환한다. 요소는 문자열로 변환되고 로케일 특정 문자열 (예 : 쉼표&amp;ldquo;,&amp;rdquo;)로 구분됩니다. 이 메서드는 &lt;a href=&quot;../array/tolocalestring&quot;&gt; &lt;code&gt;Array.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 &lt;a href=&quot;../number/tolocalestring&quot;&gt; &lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt; 형식화 된 배열 요소가 숫자이므로 Number.prototype.toLocaleString () 과 동일한 알고리즘 이 각 요소에 적용됩니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="7dfd5ee925b0c99d73ec512ba8fa1ebd89f29c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toLocaleString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the object. This method is meant to be overridden by derived objects for locale-specific purposes.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toLocaleString()&lt;/strong&gt;&lt;/code&gt; 메서드는 개체를 나타내는 문자열을 반환합니다. 이 메서드는 로캘 별 목적으로 파생 된 개체로 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="91b928eb50588710e2a4597c5783c62b17ddd758" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; 메서드는 개체를 나타내는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6e85c2a1af60ac5b65d1d94bc0fe001f9d669432" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the source code of the function.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; 메소드는 함수의 소스 코드를 나타내는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="022795b56bb8cf198957356a9dac9f4f2481d4bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the specified &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 나타내는 문자열 반환 &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="7911e7b2a10371eaf4073ef2535ba2537d07e540" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the specified &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 나타내는 문자열 반환 &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="7b8623479f106befa5e18eb45cb1059e5f32bcb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the specified Boolean object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; 메서드는 지정된 Boolean 객체를 나타내는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a04aaef31f20bb3cf4bdfb78b3cfe2b84ce61e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the specified array and its elements.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 배열의 요소를 나타내는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="192703e31b3b7b413086f3a38c9cc3705e7c710a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; method returns a string representing the specified array and its elements. This method has the same algorithm as &lt;a href=&quot;../array/tostring&quot;&gt;&lt;code&gt;Array.prototype.toString()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;toString()&lt;/strong&gt;&lt;/code&gt; 메소드는 지정된 배열의 요소를 나타내는 문자열을 반환합니다. 이 메소드는 &lt;a href=&quot;../array/tostring&quot;&gt; &lt;code&gt;Array.prototype.toString()&lt;/code&gt; &lt;/a&gt; 과 동일한 알고리즘을 갖습니다 &lt;em&gt;. &lt;/em&gt;&lt;em&gt;TypedArray&lt;/em&gt; 는 여기서 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;형식화 된 배열 유형&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="d267261388589c501414274d6e9126947d38aba2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;uneval()&lt;/strong&gt;&lt;/code&gt; function creates a string representation of the source code of an Object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;uneval()&lt;/strong&gt;&lt;/code&gt; 함수는 객체의 소스 코드의 스트링 표현을 생성한다.</target>
        </trans-unit>
        <trans-unit id="b926e52c01652669c02278301d217c157917d6e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;unshift()&lt;/strong&gt;&lt;/code&gt; method adds one or more elements to the beginning of an array and returns the new length of the array.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;unshift()&lt;/strong&gt;&lt;/code&gt; 메소드는 배열의 선두 요소를 추가하고 배열의 새로운 길이를 반환한다.</target>
        </trans-unit>
        <trans-unit id="499de83f7f41f334be396bc8f3ea1dfea79d7d14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;unwatch()&lt;/strong&gt;&lt;/code&gt; method removes a watchpoint set with the &lt;a href=&quot;watch&quot;&gt;&lt;code&gt;watch()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;unwatch()&lt;/strong&gt;&lt;/code&gt; 메소드와 감시 점 세트 제거 &lt;a href=&quot;watch&quot;&gt; &lt;code&gt;watch()&lt;/code&gt; &lt;/a&gt; 메소드를.</target>
        </trans-unit>
        <trans-unit id="7e217ffdbfd7b09bd5b6b41d867eb4de145af8f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;valueOf()&lt;/strong&gt;&lt;/code&gt; method returns the primitive value of a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;valueOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 프리미티브의 반환 값 &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="ad7e757caa0d53a4a93724609133ec5424859830" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;valueOf()&lt;/strong&gt;&lt;/code&gt; method returns the primitive value of a Symbol object.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;valueOf()&lt;/strong&gt;&lt;/code&gt; 메소드는 심볼 객체의 프리미티브 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="c7ac2ff9d04658e4dfa1c74a21f139c1399cac29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;values()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains the values for each element in the &lt;code&gt;Set&lt;/code&gt; object in insertion order.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;values()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;Iterator&lt;/code&gt; 각 요소의 값을 포함하는 오브젝트 &lt;code&gt;Set&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="920978b0337a6e007b81c3f6fce745458e110e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;values()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/strong&gt; object that contains the values for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;values()&lt;/strong&gt;&lt;/code&gt; 메소드가 복귀 새로운 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;반복자&lt;/a&gt;&lt;/strong&gt; 각 요소의 값을 포함하는 오브젝트 &lt;code&gt;Map&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="6ea39c43c18a974ed813a6094426dc4acb932dc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;strong&gt;watch()&lt;/strong&gt;&lt;/code&gt; method watches for a property to be assigned a value and runs a function when that occurs.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;watch()&lt;/strong&gt;&lt;/code&gt; 속성에 대한 방법 시계는 값이 할당하고가 발생하면 함수를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="65a888f9fb88295ed894cc25ccbd8229e821e0b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function accepts the following arguments:</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 함수는 다음 인수를 받아 들인다 :</target>
        </trans-unit>
        <trans-unit id="79c46c7cfa311ea312c77afe42ae2efc3e190ac5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;function&lt;/var&gt;.caller&lt;/code&gt; property returns the function that invoked the specified function. It returns &lt;code&gt;null&lt;/code&gt; for strict, async function and generator function callers.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;function&lt;/var&gt;.caller&lt;/code&gt; 속성은 지정된 함수를 호출하는 기능을 반환합니다. 엄격한 비동기 함수 및 생성기 함수 호출자에 대해 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b246aa23e22196a058941eb7c24ae40cf5b83a98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments are not supported in all browsers yet.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; 인수는 아직 모든 브라우저에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d91e166a0750c2e68e8b15b521cbf169adffb5d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments are not supported in all browsers yet. To check whether an implementation supports them already, you can use the requirement that illegal language tags are rejected with a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception:</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; 인수는 아직 모든 브라우저에서 지원되지 않습니다. 구현에서 이미이를 지원하는지 확인하려면 &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; 예외 와 함께 잘못된 언어 태그를 거부해야한다는 요구 사항을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33fc6ca066b8676431fc092c9f6b48922a2c486c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments customize the behavior of the function and let applications specify the language whose formatting conventions should be used. In implementations, which ignore the &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation dependent.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; 인수는 함수의 동작을 사용자와 응용 프로그램이 그 서식 규칙에 사용하는 언어를 지정할 수 있습니다. &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; 인수 를 무시하는 구현에서 사용되는 로케일 과 반환되는 문자열의 형식은 전적으로 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="93e9d8952e207e725f994a48b3bb8d221461111b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;proto&lt;/var&gt;&lt;/code&gt; parameter has to be either</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;proto&lt;/var&gt;&lt;/code&gt; 매개 변수 중 하나이어야한다</target>
        </trans-unit>
        <trans-unit id="2c7a15781fe38c8061517d82930e570fb9e75955" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; parameter can be either a function or an array.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; 파라미터 함수 또는 배열 일 수있다.</target>
        </trans-unit>
        <trans-unit id="b299e69fc0678138861176f2b0202656f0831f87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; must be a callable itself. That is, it must be a function object.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; 자체가 호출을해야합니다. 즉, 함수 객체 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5f46ff61ac697c1ff957fd2efb358eb93c680511" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;??&lt;/code&gt; is a logical operator that returns its right-hand side operand when its left-hand side operand is &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, and otherwise returns its left-hand side operand.</source>
          <target state="translated">&lt;code&gt;??&lt;/code&gt; 왼쪽 피연산자가 &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 일 때 오른쪽 피연산자를 반환하고 그렇지 않으면 왼쪽 피연산자를 반환하는 논리 연산자입니다 .</target>
        </trans-unit>
        <trans-unit id="283c12603649b3462865df7f0024166c551ecdb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@@isConcatSpreadable&lt;/code&gt; symbol (&lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt;) can be defined as an own or inherited property and its value is a boolean. It can control behavior for arrays and array-like objects:</source>
          <target state="translated">&lt;code&gt;@@isConcatSpreadable&lt;/code&gt; 기호 ( &lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt; 은 )는 자신 또는 상속 속성으로 정의 할 수 있고, 그 값은 부울 값이다. 배열 및 배열 유사 객체의 동작을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc65c6de076d42ba499770b56887d3eb47ca601c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@@unscopables&lt;/code&gt; symbol (&lt;code&gt;Symbol.unscopables&lt;/code&gt;) can be defined on any object to exclude property names from being exposed as lexical variables in with &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; environment bindings. Note that if using &lt;a href=&quot;../../strict_mode&quot;&gt;Strict mode&lt;/a&gt;, &lt;code&gt;with&lt;/code&gt; statements are not available and will likely also not need this symbol.</source>
          <target state="translated">&lt;code&gt;@@unscopables&lt;/code&gt; 심볼 ( &lt;code&gt;Symbol.unscopables&lt;/code&gt; 는 )와 사전에 변수로 노출되는 속성 명을 제외하는 모든 오브젝트에 대해 정의 될 수 &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; 환경 바인딩. 사용하는 경우 참고 &lt;a href=&quot;../../strict_mode&quot;&gt;엄격한 모드&lt;/a&gt; , &lt;code&gt;with&lt;/code&gt; 문을 사용할 수 없습니다 또한이 기호를 필요로하지 전망이다.</target>
        </trans-unit>
        <trans-unit id="0b7ac34062a9115159c33f7fb36df12a058abfb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array()&lt;/code&gt; constructor is used to create &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Array()&lt;/code&gt; 생성자를 만드는 데 사용되는 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="d440604706f8d64b5747fd6b1564ef1153563ad6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; constructor's length property whose value is 1.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 값이 생성자의 길이 속성은 1입니다.</target>
        </trans-unit>
        <trans-unit id="edf9e4f179d242c1ffd58b27418557b27ba28b48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer()&lt;/code&gt; constructor is used to create &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer()&lt;/code&gt; 생성자를 만드는 데 사용됩니다 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 의&lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="009934b2a260db5530ba35147a9b98d14a46727b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer.isView()&lt;/code&gt; method determines whether the passed value is one of the &lt;code&gt;ArrayBuffer&lt;/code&gt; views, such as &lt;a href=&quot;../typedarray&quot;&gt;typed array objects&lt;/a&gt; or a &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer.isView()&lt;/code&gt; 메소드는 전달 된 값 중 하나인지 여부를 결정 &lt;code&gt;ArrayBuffer&lt;/code&gt; 의 같은 뷰 &lt;a href=&quot;../typedarray&quot;&gt;형식화 된 배열 객체&lt;/a&gt; 또는 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0b8901e6f9fc11f606262ccc7196ea062692d5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 의&lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="16e25d8346c656e25fff7c636bb66557bf0a41ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer.transfer()&lt;/code&gt; method allows you to grow and detach &lt;code&gt;ArrayBuffer&lt;/code&gt; objects. The ability to grow an &lt;code&gt;ArrayBuffer&lt;/code&gt; without copying has the advantage of being much faster for large buffers (similar to realloc). The ability to detach an &lt;code&gt;ArrayBuffer&lt;/code&gt; gives the developer explicit control over when the underlying memory is released. This avoids having to drop all references and wait for garbage collection.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer.transfer()&lt;/code&gt; 메서드를 사용하면 확장 할 수 있으며 분리 &lt;code&gt;ArrayBuffer&lt;/code&gt; 는 객체. 복사하지 않고 &lt;code&gt;ArrayBuffer&lt;/code&gt; 를 확장하는 기능 은 큰 버퍼 (realloc과 유사)의 경우 훨씬 더 빠르다는 장점이 있습니다. &lt;code&gt;ArrayBuffer&lt;/code&gt; 를 분리하는 기능 은 개발자에게 기본 메모리가 해제되는 시점을 명시 적으로 제어 할 수있게합니다. 이렇게하면 모든 참조를 삭제하지 않고 가비지 콜렉션을 기다릴 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c7798863e6e21e4386b76ed95ddae500d73c0f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor creates a new &lt;code&gt;ArrayBuffer&lt;/code&gt; of the given length in bytes.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer&lt;/code&gt; 의 생성자는 새로운 생성 &lt;code&gt;ArrayBuffer&lt;/code&gt; 바이트의 주어진 길이를.</target>
        </trans-unit>
        <trans-unit id="7ef2a45ac041790c4ea1d3aefd4331e7987f9343" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor's length property whose value is 1.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer&lt;/code&gt; 의 값이 생성자의 길이 속성은 1입니다.</target>
        </trans-unit>
        <trans-unit id="3a61a5592a5e6c5d99df4dfd4b969e7f567f1cc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer&lt;/code&gt; object is used to represent a generic, fixed-length raw binary data buffer.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer&lt;/code&gt; 의 목적은 일반 고정 길이 원시 이진 데이터 버퍼를 나타내는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="6b1774c4b4c02e44b8e0aac74afed99897b9b23a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer&lt;/code&gt; object is used to represent a generic, fixed-length raw binary data buffer. You cannot directly manipulate the contents of an &lt;code&gt;ArrayBuffer&lt;/code&gt;; instead, you create one of the &lt;a href=&quot;typedarray&quot;&gt;typed array objects&lt;/a&gt; or a &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer&lt;/code&gt; 의 목적은 일반 고정 길이 원시 이진 데이터 버퍼를 나타내는 데 사용된다. &lt;code&gt;ArrayBuffer&lt;/code&gt; 의 내용을 직접 조작 할 수는 없습니다 . 대신, &lt;a href=&quot;typedarray&quot;&gt;형식&lt;/a&gt; 이 지정된 배열 객체 중 하나 또는 특정 형식으로 버퍼를 나타내는 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; 객체를 만들고이를 사용하여 버퍼의 내용을 읽고 씁니다.</target>
        </trans-unit>
        <trans-unit id="c4176857e9a07c3243eab0ecacefddafd0cead32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayBuffer[@@species]&lt;/code&gt; accessor property returns the &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer[@@species]&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;ArrayBuffer&lt;/code&gt; 의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="2351df33789e2038fad7874944fbf78532d76f6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array[@@species]&lt;/code&gt; accessor property returns the &lt;code&gt;Array&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Array[@@species]&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;Array&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="dd55341d100e7a3a053ee01170efee3a7d53d666" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AsyncFunction&lt;/code&gt; constructor's length property whose value is 1.</source>
          <target state="translated">&lt;code&gt;AsyncFunction&lt;/code&gt; 의 값이 생성자의 길이 속성은 1입니다.</target>
        </trans-unit>
        <trans-unit id="83b7ed4527423cceceb7343ad3c2097c9e001037" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AsyncFunction&lt;/code&gt; creates a new &lt;a href=&quot;../statements/async_function&quot;&gt;async function&lt;/a&gt; object. In JavaScript, every asynchronous function is actually an &lt;code&gt;AsyncFunction&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;AsyncFunction&lt;/code&gt; 은 새로운 생성 &lt;a href=&quot;../statements/async_function&quot;&gt;비동기 함수&lt;/a&gt; 개체를. JavaScript에서 모든 비동기 함수는 실제로 &lt;code&gt;AsyncFunction&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="7bc72f459fb8c1fe609cfdd161b355d4c1a81fcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Atomics&lt;/code&gt; object is always available.</source>
          <target state="translated">&lt;code&gt;Atomics&lt;/code&gt; 객체는 항상 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e490809ee1c07da9de2281ad1dd02d8cd6306b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Atomics&lt;/code&gt; object provides atomic operations as static methods. They are used with &lt;a href=&quot;sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Atomics&lt;/code&gt; 목적은 정적 방법으로 원자 연산을 제공한다. &lt;a href=&quot;sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 객체 와 함께 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="fa46dc694c81367a99ea8f930dd75cbd6894fcbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Atomics&lt;/code&gt; object provides atomic operations as static methods. They are used with &lt;a href=&quot;sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Atomics&lt;/code&gt; 목적은 정적 방법으로 원자 연산을 제공한다. &lt;a href=&quot;sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 객체 와 함께 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="f6d22da150d718b789b1e725cf330e418bc6f007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt()&lt;/code&gt; constructor returns a value of type &lt;strong&gt;bigint&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;BigInt()&lt;/code&gt; 생성자는 형의 값 반환 &lt;strong&gt;BIGINT를&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="086537be5dbc533d9b7edf8e31a7b772ecd574dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt.asIntN()&lt;/code&gt; method can be useful to stay in the range of 64-bit arithmetic.</source>
          <target state="translated">&lt;code&gt;BigInt.asIntN()&lt;/code&gt; 메소드는, 64 비트 산술 연산의 범위 내에서 유지하는 것이 유용 할 수있다.</target>
        </trans-unit>
        <trans-unit id="d16ef0f07e8b7b0e50eeca11999d9ed033c39549" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt.asIntN&lt;/code&gt; static method is used to wrap a BigInt value to a signed integer between -2&lt;sup&gt;width-1&lt;/sup&gt; and 2&lt;sup&gt;width-1&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;BigInt.asIntN&lt;/code&gt; 의 정적 메소드 간의 -2 부호 정수로의 BIGINT 값을 포장하는 데 사용되는 &lt;sup&gt;폭 1&lt;/sup&gt; 및도 2 &lt;sup&gt;폭 1&lt;/sup&gt; -1.</target>
        </trans-unit>
        <trans-unit id="67dc088c70b39caf59c7f278f8815028af3bab27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt.asUintN()&lt;/code&gt; method can be useful to stay in the range of 64-bit arithmetic.</source>
          <target state="translated">&lt;code&gt;BigInt.asUintN()&lt;/code&gt; 메소드는, 64 비트 산술 연산의 범위 내에서 유지하는 것이 유용 할 수있다.</target>
        </trans-unit>
        <trans-unit id="19e176b086dceb89552c010fff02ceaa645447cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt.asUintN&lt;/code&gt; static method is used to wrap a BigInt value to an unsigned integer between 0 and 2&lt;sup&gt;width&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;BigInt.asUintN&lt;/code&gt; 의 고정 방법은, 0과 2 사이의 부호없는 정수로의 BIGINT 값을 포장하는 데 사용되는 &lt;sup&gt;폭&lt;/sup&gt; -1.</target>
        </trans-unit>
        <trans-unit id="6592dec33b7ee8f86e1787cdd6a328a2a4fcc27f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt64Array()&lt;/code&gt; typed array constructor creates a new &lt;a href=&quot;../bigint64array&quot;&gt;&lt;code&gt;BigInt64Array&lt;/code&gt;&lt;/a&gt; object, which is, an array of 64-bit signed integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0n&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;BigInt64Array()&lt;/code&gt; 타이핑 어레이 생성자는 새로 생성 &lt;a href=&quot;../bigint64array&quot;&gt; &lt;code&gt;BigInt64Array&lt;/code&gt; 의&lt;/a&gt; 인 객체 플랫폼 바이트 순서로 64 비트 부호있는 정수의 배열. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0n&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b20a28f3aa43ad853db3dde1f8a412c1cd239ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigInt64Array&lt;/code&gt; typed array represents an array of 64-bit signed integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0n&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;BigInt64Array&lt;/code&gt; 는 어레이 플랫폼 바이트 순서로 64 비트 부호있는 정수 배열을 나타내는 입력. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0n&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f92632e8ac8e4ce52204fcaa94fb102f182341a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigUint64Array()&lt;/code&gt; typed array constructor creates a new &lt;a href=&quot;../biguint64array&quot;&gt;&lt;code&gt;BigUint64Array&lt;/code&gt;&lt;/a&gt; object, which is, an array of 64-bit unsigned integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0n&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;BigUint64Array()&lt;/code&gt; 타이핑 어레이 생성자는 새로 생성 &lt;a href=&quot;../biguint64array&quot;&gt; &lt;code&gt;BigUint64Array&lt;/code&gt; 의&lt;/a&gt; 인 객체 플랫폼 바이트 순서로 64 비트 부호없는 정수의 배열. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0n&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4db54fb1f5c4b6be79277472a219b44ed080dd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigUint64Array&lt;/code&gt; typed array represents an array of 64-bit unsigned integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0n&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;BigUint64Array&lt;/code&gt; 는 어레이 플랫폼 바이트 순서로 64 비트의 부호없는 정수 배열을 나타내는 입력. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0n&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15d1db370556ed02a72b0b3bfe32adf231ed82c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean()&lt;/code&gt; constructor is used to create &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Boolean()&lt;/code&gt; 생성자를 만드는 데 사용되는 &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="a7e596b718f486754c0b60ce4ad8e194715210d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Boolean.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="f808eb0c2990139c56c9c9646eb837d890e99678" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object is an object wrapper for a boolean value.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 목적은 부울 값 객체 래퍼이다.</target>
        </trans-unit>
        <trans-unit id="2ce43b8b0687fcf7a466534b83b50368fe578eca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataView()&lt;/code&gt; constructor is used to create &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;DataView()&lt;/code&gt; 생성자를 만드는 데 사용됩니다 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를의&lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="eb4fe7936e991cf8cac6bfe1ff9a3583f860269a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataView&lt;/code&gt; view provides a low-level interface for reading and writing multiple number types in a binary &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;, without having to care about the platform's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;endianness&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DataView&lt;/code&gt; 를의 보기는 읽기와 바이너리에 여러 개의 번호 유형을 작성하기위한 낮은 수준의 인터페이스를 제공 &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 을&lt;/a&gt; 플랫폼의 걱정하지 않고, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;엔디 언&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04d0efdbac0d6874eef917d3f3b34d67598265f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Date.UTC()&lt;/code&gt; method accepts parameters similar to the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor, but treats them as UTC. It returns the number of milliseconds since January 1, 1970, 00:00:00 UTC.</source>
          <target state="translated">&lt;code&gt;Date.UTC()&lt;/code&gt; 메소드는 유사 매개 변수를 받아 &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 생성자하지만 UTC와 같은 취급을. 1970 년 1 월 1 일 00:00:00 UTC 이후의 밀리 초 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff166af089f3634c010f854cade55b13339404e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Date.UTC()&lt;/code&gt; method accepts the same parameters as the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor, but treats them as UTC. It returns the number of milliseconds since January 1, 1970, 00:00:00 UTC.</source>
          <target state="translated">&lt;code&gt;Date.UTC()&lt;/code&gt; 메소드는 동일한 같은 매개 변수를 받아들이는 &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; UTC로 생성자 만 취급을. 1970 년 1 월 1 일 00:00:00 UTC 이후의 밀리 초 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="94ea236eb60b2a87910dba439ce76e913ed81428" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Date.now()&lt;/code&gt; method returns the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC.</source>
          <target state="translated">&lt;code&gt;Date.now()&lt;/code&gt; 메소드가 반환 (밀리 초) 1970 년 1 월 1 일 0시 0 분 0 초 (UTC)부터 경과.</target>
        </trans-unit>
        <trans-unit id="2fd70be910414d05682135739f98ad747175718f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Date.parse()&lt;/code&gt; method parses a string representation of a date, and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC or &lt;code&gt;NaN&lt;/code&gt; if the string is unrecognized or, in some cases, contains illegal date values (e.g. 2015-02-31).</source>
          <target state="translated">&lt;code&gt;Date.parse()&lt;/code&gt; 메서드는 날짜의 문자열 표현을 구문 분석하고, 1970 년 1 월 1 일 이후의 밀리 초 수를 반환 00:00:00 UTC로 &lt;code&gt;NaN&lt;/code&gt; 의 문자열이 인식 할 수없는 경우, 또는, 어떤 경우에는, 불법 날짜 값을 포함 (예 : 2015-02-31).</target>
        </trans-unit>
        <trans-unit id="64bc06f8e96147763877ef296f66c5ad039e983e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Date.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Date.prototype&lt;/code&gt; 하기의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="ef55f178e7909f6ce70b17d6b7c9f73f26fc56c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EPSILON&lt;/code&gt; property has a value of approximately &lt;code&gt;2.2204460492503130808472633361816E-16&lt;/code&gt;, or &lt;code&gt;2&lt;sup&gt;-52&lt;/sup&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EPSILON&lt;/code&gt; 의 속성 약 값 갖는다 &lt;code&gt;2.2204460492503130808472633361816E-16&lt;/code&gt; , 또는 &lt;code&gt;2&lt;sup&gt;-52&lt;/sup&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47c7c566dc712369742d8df40df29dd5a705b988" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Error&lt;/code&gt; constructor creates an error object.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 생성자는 오류 개체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7931f45154020c0f6a612370bd2020e49a7038ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Error&lt;/code&gt; constructor creates an error object. Instances of &lt;code&gt;Error&lt;/code&gt; objects are thrown when runtime errors occur. The &lt;code&gt;Error&lt;/code&gt; object can also be used as a base object for user-defined exceptions. See below for standard built-in error types.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 생성자는 오류 개체를 만듭니다. 런타임 오류가 발생하면 &lt;code&gt;Error&lt;/code&gt; 객체의 인스턴스 가 발생합니다. &lt;code&gt;Error&lt;/code&gt; 객체는 사용자 정의 예외에 대한 기본 객체로 사용할 수 있습니다. 표준 내장 오류 유형은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e9e9081ac2985d6d68a6dd7231269c3fa8c042f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EvalError&lt;/code&gt; constructor creates a new error regarding the global &lt;a href=&quot;../eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; function. This exception is not thrown by JavaScript anymore, however the &lt;code&gt;EvalError&lt;/code&gt; object remains for compatibility.</source>
          <target state="translated">&lt;code&gt;EvalError&lt;/code&gt; 의 생성자는 세계에 대한 새로운 오류가 생성 &lt;a href=&quot;../eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 함수를. 이 예외는 더 이상 JavaScript에서 발생하지 않지만 호환성을 위해 &lt;code&gt;EvalError&lt;/code&gt; 객체가 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="af6eaa4eee0613c64cc6fc28b3637cc80c1af151" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EvalError&lt;/code&gt; object indicates an error regarding the global &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; function. This exception is not thrown by JavaScript anymore, however the &lt;code&gt;EvalError&lt;/code&gt; object remains for compatibility.</source>
          <target state="translated">&lt;code&gt;EvalError&lt;/code&gt; 의 목적은 전역 대한 오류를 나타내는 &lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 함수. 이 예외는 더 이상 JavaScript에서 발생하지 않지만 &lt;code&gt;EvalError&lt;/code&gt; 객체는 호환성을 위해 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="031ddfcae4598f4a8601743034015b7911bc569a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FinalizationRegistry&lt;/code&gt; constructor creates a &lt;a href=&quot;../finalizationregistry&quot;&gt;&lt;code&gt;FinalizationRegistry&lt;/code&gt;&lt;/a&gt; object that uses the given callback.</source>
          <target state="translated">&lt;code&gt;FinalizationRegistry&lt;/code&gt; 의 생성자는 생성 &lt;a href=&quot;../finalizationregistry&quot;&gt; &lt;code&gt;FinalizationRegistry&lt;/code&gt; 에서&lt;/a&gt; 주어진 콜백을 사용하여 개체.</target>
        </trans-unit>
        <trans-unit id="20a22dff3ba28b43b16a0cc45af4fc6dad75493b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float32Array()&lt;/code&gt; typed array constructor creates a new &lt;a href=&quot;../float32array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; object, which is, an array of 32-bit floating point numbers (corresponding to the C &lt;code&gt;float&lt;/code&gt; data type) in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Float32Array()&lt;/code&gt; 타이핑 어레이 생성자는 새로 생성 &lt;a href=&quot;../float32array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; 의&lt;/a&gt; 인 오브젝트 (는 C에 대응하는 32 비트 부동 소수점 수의 어레이 &lt;code&gt;float&lt;/code&gt; 플랫폼 바이트 순서 데이터 형식). 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed981ea7fa087278317dd34d4188d2ef63c76871" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float32Array&lt;/code&gt; typed array represents an array of 32-bit floating point numbers (corresponding to the C &lt;code&gt;float&lt;/code&gt; data type) in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Float32Array&lt;/code&gt; 는 어레이 (는 C에 대응하는 32 비트 부동 소수점 수의 어레이 나타내는 입력 &lt;code&gt;float&lt;/code&gt; 플랫폼 바이트 순서 데이터 형식). 바이트 순서를 제어해야하는 경우 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="992c9e457ff8fee29acd19df99d92dcc26ec9997" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float64Array()&lt;/code&gt; typed array constructor creates a new &lt;a href=&quot;../float64array&quot;&gt;&lt;code&gt;Float64Array&lt;/code&gt;&lt;/a&gt; object, which is, an array of 64-bit floating point numbers (corresponding to the C &lt;code&gt;double&lt;/code&gt; data type) in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Float64Array()&lt;/code&gt; 타이핑 어레이 생성자는 새로 생성 &lt;a href=&quot;../float64array&quot;&gt; &lt;code&gt;Float64Array&lt;/code&gt; 의&lt;/a&gt; 인 오브젝트 (는 C에 대응하는 64 비트 부동 소수점 수의 어레이 &lt;code&gt;double&lt;/code&gt; 플랫폼 바이트 순서 데이터 형식). 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6af88321151d21a75dde1d9456dd53c65f47509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float64Array&lt;/code&gt; typed array represents an array of 64-bit floating point numbers (corresponding to the C &lt;code&gt;double&lt;/code&gt; data type) in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Float64Array&lt;/code&gt; 는 어레이 64 비트 부동 소수점 수의 어레이 (는 C에 대응하는 입력 나타내는 &lt;code&gt;double&lt;/code&gt; 플랫폼 바이트 순서 데이터 형식). 바이트 순서를 제어해야하는 경우 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e2a9b42d0d50788b48d5fa46232bbfae15ea093" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Function&lt;/code&gt; constructor</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 생성자</target>
        </trans-unit>
        <trans-unit id="7c44cf1deb778cfc6fb4fb3c2c8717c2a3303fef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Function&lt;/code&gt; creates a new &lt;code&gt;Function&lt;/code&gt; object. Calling the constructor directly can create functions dynamically, but suffers from security and similar (but far less significant) performance issues to &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;. However, unlike eval, the Function constructor creates functions which execute in the global scope only.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 새로운 생성 &lt;code&gt;Function&lt;/code&gt; 개체를. 생성자를 직접 호출하면 함수가 동적으로 생성 될 수 있지만 &lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; 과 유사한 보안 문제 (그러나 훨씬 덜 중요한) 성능 문제가 발생합니다 . 그러나 eval과 달리 Function 생성자는 전역 범위에서만 실행되는 함수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b52e4b7097e278a3cd6b2c1395fa93af959eee54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Function&lt;/code&gt; creates a new &lt;code&gt;Function&lt;/code&gt;&lt;strong&gt;object&lt;/strong&gt;. Calling the constructor directly can create functions dynamically, but suffers from security and similar (but far less significant) performance issues to &lt;a href=&quot;../eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;. However, unlike eval, the &lt;code&gt;Function&lt;/code&gt; constructor creates functions which execute in the global scope only.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 새로운 생성 &lt;code&gt;Function&lt;/code&gt; &lt;strong&gt;개체를&lt;/strong&gt; . 생성자를 직접 호출하면 동적으로 함수를 만들 수 있지만 보안 및 &lt;a href=&quot;../eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; 과 유사한 (그러나 훨씬 덜 중요한) 성능 문제가 있습니다. 그러나 eval과 달리 &lt;code&gt;Function&lt;/code&gt; 생성자는 전역 범위에서만 실행되는 함수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="32ec1baff187da5dbe10927d09b669f9f1adfa1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor</source>
          <target state="translated">&lt;code&gt;GeneratorFunction&lt;/code&gt; 의 생성자</target>
        </trans-unit>
        <trans-unit id="59abf0f6e298917eba3d8ef1a0bff1e34e283128" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor's length property whose value is 1.</source>
          <target state="translated">&lt;code&gt;GeneratorFunction&lt;/code&gt; 의 값이 생성자의 길이 속성은 1입니다.</target>
        </trans-unit>
        <trans-unit id="87a8e025058f3fe8d553a9626cd39169afab5b31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneratorFunction&lt;/code&gt; creates a new &lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;generator function&lt;/code&gt;&lt;/a&gt; object. In JavaScript every generator function is actually a &lt;code&gt;GeneratorFunction&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;GeneratorFunction&lt;/code&gt; 는 새로운 생성 &lt;a href=&quot;../statements/function*&quot;&gt; &lt;code&gt;generator function&lt;/code&gt; &lt;/a&gt; 개체. JavaScript에서 모든 생성기 함수는 실제로 &lt;code&gt;GeneratorFunction&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="9741decaa97f95a8bb790fdff5f8ff5a6e02ac77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneratorFunction&lt;/code&gt; creates a new &lt;a href=&quot;../statements/function*&quot;&gt;generator function&lt;/a&gt; object. In JavaScript, every generator function is actually a &lt;code&gt;GeneratorFunction&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;GeneratorFunction&lt;/code&gt; 는 새로운 생성 &lt;a href=&quot;../statements/function*&quot;&gt;발생기 기능&lt;/a&gt; 개체. JavaScript에서 모든 생성기 함수는 실제로 &lt;code&gt;GeneratorFunction&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="75028808bccd28100e5115af27ca937e5576e785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Int16Array()&lt;/code&gt; typed array constructor creates an array of twos-complement 16-bit signed integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Int16Array()&lt;/code&gt; 타이핑 어레이 생성자의 배열 생성 플랫폼 바이트 순서로 16 비트 부호있는 정수를 조로-보완. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28ae646bea19e4d833aab812af7d3f0537a33cb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Int16Array&lt;/code&gt; typed array represents an array of twos-complement 16-bit signed integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Int16Array&lt;/code&gt; 는 배열 플랫폼 바이트 순서의 보수 16 비트 부호있는 정수의 배열을 나타냅니다 입력했습니다. 바이트 순서를 제어해야하는 경우 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5459fe0962d9c583e71b426de4f0116410c4c14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Int32Array()&lt;/code&gt; typed array constructor creates an array of twos-complement 32-bit signed integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Int32Array()&lt;/code&gt; 타이핑 어레이 생성자의 배열 생성 플랫폼 바이트 순서로 32 비트 부호있는 정수를 조로-보완. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03d15a415e6c33dea3c5020c4032db9e78ae055c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Int32Array()&lt;/code&gt; typed array constructor creates an array of twos-complement 32-bit signed integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Int32Array()&lt;/code&gt; 타이핑 어레이 생성자의 배열 생성 플랫폼 바이트 순서로 32 비트 부호있는 정수를 조로-보완. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="325065478761dec46c8e43c1bb706efac29c0299" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Int32Array&lt;/code&gt; typed array represents an array of twos-complement 32-bit signed integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Int32Array&lt;/code&gt; 는 어레이 플랫폼 바이트 순서의 보수 32 비트 부호있는 정수 배열을 나타내는 입력. 바이트 순서를 제어해야하는 경우 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="532347b52c729001a42c6ce973e72a996f610897" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Int8Array()&lt;/code&gt; constructor creates a typed array of twos-complement 8-bit signed integers. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Int8Array()&lt;/code&gt; 생성자의 보수 8 비트 부호있는 정수의 형식화 된 배열을 만듭니다. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="891fa823bae7aa088eb1194224b013cf774a6a47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Int8Array&lt;/code&gt; typed array represents an array of twos-complement 8-bit signed integers. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Int8Array&lt;/code&gt; 는 배열의 보수 8 비트 부호있는 정수의 배열을 나타냅니다 입력했습니다. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fa860e6cc2fe6007800dec07692403f2181442a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator.prototype.compare()&lt;/code&gt; method compares two strings according to the sort order of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.Collator.prototype.compare()&lt;/code&gt; 메소드는이 정렬 순서에 따른 두 문자열을 비교 &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="af81d2d38d363ace398fbc1e421544179af912eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator.prototype.compare&lt;/code&gt; property returns a function that compares two strings according to the sort order of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.Collator.prototype.compare&lt;/code&gt; 의 속성이 정렬 순서에 따른 두 문자열을 비교하는 함수 반환 &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="272a6c3a7d60877b1c869914ecf7c277bb5a3af7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator.prototype.resolvedOptions()&lt;/code&gt; method returns a new object with properties reflecting the locale and collation options computed during initialization of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.Collator.prototype.resolvedOptions()&lt;/code&gt; 메서드가 반환이 초기화시 계산 된 로케일 및 정렬 옵션을 반영하는 특성을 가진 새로운 객체 &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; 객체를.</target>
        </trans-unit>
        <trans-unit id="ffd097940ae82397c8bf3f2f5237f8e029da868c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator.prototype&lt;/code&gt; property represents the prototype object for the &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Intl.Collator&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Intl.Collator.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입 객체 나타내는 &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Intl.Collator&lt;/code&gt; 의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="819a653bd9f195fc3bcc00a8e0b90359c1639beb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator.supportedLocalesOf()&lt;/code&gt; method returns an array containing those of the provided locales that are supported in collation without having to fall back to the runtime's default locale.</source>
          <target state="translated">&lt;code&gt;Intl.Collator.supportedLocalesOf()&lt;/code&gt; 메소드는 런타임의 기본 로케일로 후퇴하지 않고 조합에서 지원되는 제공된 로케일의 사람들을 포함하는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af6623b71c624d05792333d55bb545b7d54f9830" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator&lt;/code&gt; object has the following properties and methods:</source>
          <target state="translated">&lt;code&gt;Intl.Collator&lt;/code&gt; 의 객체에는 다음과 같은 속성과 메소드가 있습니다</target>
        </trans-unit>
        <trans-unit id="80111b8a70cd58e3c8afeff0e4043d4fff18da6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator&lt;/code&gt; object is a constructor for collators, objects that enable language sensitive string comparison.</source>
          <target state="translated">&lt;code&gt;Intl.Collator&lt;/code&gt; 의 목적은 코레 이타 언어 인식 문자열 비교를 가능 객체의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="e4f71234cb40f8a1b44376e44c79d9f275679970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Collator&lt;/code&gt; objects enable language sensitive string comparison.</source>
          <target state="translated">&lt;code&gt;Intl.Collator&lt;/code&gt; 의 객체는 언어 인식 문자열 비교를 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93c5192573c6553639d3a5ea319a901443a540fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat()&lt;/code&gt; constructor for objects that enable language-sensitive date and time formatting.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat()&lt;/code&gt; 언어에 맞는 날짜와 시간 포맷을 가능 객체 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="e40a2b617da3295e415349d93c38c438a200df34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.prototype.format()&lt;/code&gt; method formats a date according to the locale and formatting options of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype.format()&lt;/code&gt; 메소드는 로케일이 옵션의 포맷에 따른 날짜 포맷 &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="3d4e6137125f5916ae76205d08a1ab73a524c339" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.prototype.format&lt;/code&gt; property returns a getter function that formats a date according to the locale and formatting options of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype.format&lt;/code&gt; 의 속성은 로케일이의 서식 옵션에 따라 날짜를 포맷하는 getter 함수 반환 &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; 의&lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="d7c435431500e251a6453b7edc8b6ce155d83088" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.prototype.formatRange()&lt;/code&gt; formats a date range in the most concise way based on the &lt;code&gt;locale&lt;/code&gt; and &lt;code&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/code&gt; provided when instantiating &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype.formatRange()&lt;/code&gt; 에 기초하여 가장 간결한 방법에서 날짜 범위 포맷 &lt;code&gt;locale&lt;/code&gt; 및 &lt;code&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/code&gt; 인스턴스화 할 때 제공 &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; 의&lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="af5cb5bf79a45ebef83be2d3d33824360243087a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.prototype.formatRangeToParts()&lt;/code&gt; method allows locale-specific tokens representing each part of the formatted date range produced by &lt;code&gt;&lt;a href=&quot;../datetimeformat&quot;&gt;DateTimeFormat&lt;/a&gt;&lt;/code&gt; formatters.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype.formatRangeToParts()&lt;/code&gt; 방법 로케일 특정 허용 의해 생성 된 포맷 기간의 각 부분을 나타내는 토큰 &lt;code&gt;&lt;a href=&quot;../datetimeformat&quot;&gt;DateTimeFormat&lt;/a&gt;&lt;/code&gt; 의 포맷터.</target>
        </trans-unit>
        <trans-unit id="827b13c5aa9c4dec3eab430890de485d22a04892" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.prototype.formatToParts()&lt;/code&gt; method allows locale-aware formatting of strings produced by &lt;code&gt;DateTimeFormat&lt;/code&gt; formatters.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype.formatToParts()&lt;/code&gt; 방법에 의해 생성 된 문자열 로케일 인식 포맷 허용 &lt;code&gt;DateTimeFormat&lt;/code&gt; 의 포맷터.</target>
        </trans-unit>
        <trans-unit id="b66b9447f5c9239d68ec7f4ac962b72f2a9766fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.prototype.resolvedOptions()&lt;/code&gt; method returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype.resolvedOptions()&lt;/code&gt; 메서드가 반환이 초기화시 계산 옵션 서식 로케일 및 날짜와 시간을 반영하는 특성을 가진 새로운 객체 &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; 의&lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="ce32b4be32d6b141f0a059bea36eaf6cb30b27de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.prototype&lt;/code&gt; property represents the prototype object for the &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입 객체 나타내는 &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; 의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="45f08d1a87a417d8a3d5b0c4ec978877b18473ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat.supportedLocalesOf()&lt;/code&gt; method returns an array containing those of the provided locales that are supported in date and time formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.supportedLocalesOf()&lt;/code&gt; 메소드가 반환하지 않고 날짜와 포맷 시간에서 지원되는 제공된 로케일의 사람들을 포함하는 배열은 런타임의 기본 로케일로 다시 가을.</target>
        </trans-unit>
        <trans-unit id="f66ae3a8ee78181e3f3a1efcf6577955630e42a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; object is a constructor for objects that enable language-sensitive date and time formatting.</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; 의 목적은 언어에 민감한 날짜와 시간 포맷을 가능 객체의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="79e0c420fce58959d1f89fd89eec9e0713f811f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DisplayNames()&lt;/code&gt; constructor creates objects that enables the consistent translation of language, region and script display names.</source>
          <target state="translated">&lt;code&gt;Intl.DisplayNames()&lt;/code&gt; 생성자는 언어, 지역 및 스크립트 표시 이름의 일관성있는 번역을 할 수 개체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="142a1f88aa14ee2472bf092e6fd96cf3c7a57665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DisplayNames.supportedLocalesOf()&lt;/code&gt; method returns an array containing those of the provided locales that are supported in date and time formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">&lt;code&gt;Intl.DisplayNames.supportedLocalesOf()&lt;/code&gt; 메소드가 반환하지 않고 날짜와 포맷 시간에서 지원되는 제공된 로케일의 사람들을 포함하는 배열은 런타임의 기본 로케일로 다시 가을.</target>
        </trans-unit>
        <trans-unit id="ab1e445da284d3bbadc0c2416b8648cf0bcb282f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.DisplayNames&lt;/code&gt; object is a constructor for objects that enables the consistent translation of language, region and script display names.</source>
          <target state="translated">&lt;code&gt;Intl.DisplayNames&lt;/code&gt; 의 목적은 언어, 지역 및 스크립트 표시 이름의 일관성있는 번역을 가능 객체의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="4e19f9c71a93e43ba5fe2ec0f64f9ba5cbc9a00d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.ListFormat()&lt;/code&gt; constructor creates objects that enable language-sensitive list formatting.</source>
          <target state="translated">&lt;code&gt;Intl.ListFormat()&lt;/code&gt; 생성자는 언어에 민감한 목록 서식을 가능하게 개체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cfdc7860d04fd67a1f260544a50a72a26df768e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.ListFormat.prototype.formatToParts()&lt;/code&gt; method returns an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects representing the different components that can be used to format a list of values in a locale-aware fashion.</source>
          <target state="translated">&lt;code&gt;Intl.ListFormat.prototype.formatToParts()&lt;/code&gt; 메서드는 반환 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 로케일 인식 방식으로 값 목록을 포맷하는 데 사용할 수있는 다양한 구성 요소를 나타내는 개체를.</target>
        </trans-unit>
        <trans-unit id="62a270aaf9e6a9cd2233721e7f8f89e803a649fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.ListFormat.supportedLocalesOf()&lt;/code&gt; method returns an array containing those of the provided locales that are supported in date and time formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">&lt;code&gt;Intl.ListFormat.supportedLocalesOf()&lt;/code&gt; 메소드가 반환하지 않고 날짜와 포맷 시간에서 지원되는 제공된 로케일의 사람들을 포함하는 배열은 런타임의 기본 로케일로 다시 가을.</target>
        </trans-unit>
        <trans-unit id="e2906294c79405f3b2f80739055aecd938ab9900" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.ListFormat&lt;/code&gt; object is a constructor for objects that enable language-sensitive list formatting.</source>
          <target state="translated">&lt;code&gt;Intl.ListFormat&lt;/code&gt; 의 목적은 언어에 민감한 목록 서식을 가능 객체의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="df6b523e7e397eb6bb26d7563f3095a1d1eb2f3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.baseName&lt;/code&gt; property returns a substring of the &lt;code&gt;Locale&lt;/code&gt;'s string representation, containing core information about the &lt;code&gt;Locale&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.baseName&lt;/code&gt; 의 속성의 문자열 반환 &lt;code&gt;Locale&lt;/code&gt; 에 대한 핵심 정보를 포함하는의 캐릭터 라인 표현을 &lt;code&gt;Locale&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d44adeb80f4fea8f9406761b8c4f3c62b6a1a226" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.calendar&lt;/code&gt; property is an accessor property which returns the type of calendar used in the &lt;code&gt;Locale&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.calendar&lt;/code&gt; 의 속성에 사용되는 달력의 유형을 반환하는 접근 자 속성이다 &lt;code&gt;Locale&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93f4883aaa145e6e3da3fb213e74df9c15aaf2d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.caseFirst&lt;/code&gt; property is an accessor property that returns whether case is taken into account for the locale's collation rules.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.caseFirst&lt;/code&gt; 의 속성은 접근 자 속성 인 경우, 로케일의 조합 룰에 대한 고려 여부를 반환하는.</target>
        </trans-unit>
        <trans-unit id="e8f9ca3d2890103be82fb8a29280e75419ac6e57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.collation&lt;/code&gt; property is an accessor property that returns the &lt;a href=&quot;https://www.unicode.org/reports/tr35/tr35-collation.html#CLDR_Collation&quot;&gt;collation type&lt;/a&gt; for the &lt;code&gt;Locale&lt;/code&gt;, which is used to order strings according to the locale's rules.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.collation&lt;/code&gt; 의 속성은 반환하는 접근 자 속성 인 &lt;a href=&quot;https://www.unicode.org/reports/tr35/tr35-collation.html#CLDR_Collation&quot;&gt;정렬 유형&lt;/a&gt; 에 대한 &lt;code&gt;Locale&lt;/code&gt; 로케일의 규칙에 따라 주문 문자열로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2144c29b435d2aff6e0a6198e1cdf0dfbf18d316" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.hourCycle&lt;/code&gt; property is an accessor property that returns the time keeping format convention used by the locale.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.hourCycle&lt;/code&gt; 의 속성은 반환 시간 유지 형식 규칙은 로케일에 의해 사용되는 것을 접근 자 속성입니다.</target>
        </trans-unit>
        <trans-unit id="b81e3f3de4d4473c13ae9d3ee35d05d0ad0115f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.language&lt;/code&gt; property is an accessor property that returns the language associated with the locale.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.language&lt;/code&gt; 의 속성은 로케일과 연관된 언어를 반환하는 접근 자 속성입니다.</target>
        </trans-unit>
        <trans-unit id="2f937c4f91294a657a62507901b4e23fb5ad0e24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.maximize()&lt;/code&gt; method gets the most likely values for the language, script, and region of the locale based on existing values.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.maximize()&lt;/code&gt; 메서드는 기존의 값을 기준으로 로케일의 언어, 스크립트 및 지역의 가능성이 가장 높은 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0abb55785663111c38826bb0290ef77666282546" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.minimize()&lt;/code&gt; method attempts to remove information about the locale that would be added by calling &lt;a href=&quot;maximize&quot;&gt;&lt;code&gt;Locale.maximize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.minimize()&lt;/code&gt; 메소드 시도를 호출하여 추가됩니다 로케일에 대한 정보를 제거하는 &lt;a href=&quot;maximize&quot;&gt; &lt;code&gt;Locale.maximize()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1b1051ad508a3bb8c9ac640fd80ceaaa0f9d17f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.numberingSystem&lt;/code&gt; property is an accessor property that returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Numeral_system&quot;&gt;numeral system&lt;/a&gt; used by the locale.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.numberingSystem&lt;/code&gt; 의 속성은 반환하는 접근 자 속성 인 &lt;a href=&quot;https://en.wikipedia.org/wiki/Numeral_system&quot;&gt;숫자 시스템&lt;/a&gt; 로케일에서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cd2abb4c628c3f0cd4e9a2f0e2d43d31d3394ffe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.numeric&lt;/code&gt; property is an accessor property that returns whether the locale has special collation handling for numeric characters.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.numeric&lt;/code&gt; 속성은 로케일이 숫자에 대한 특별한 정렬 처리를 반환이 있는지 여부를한다는 접근 속성입니다.</target>
        </trans-unit>
        <trans-unit id="24a028bce53f7dafbbe04f19ece75bfa36d35ab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.region&lt;/code&gt; property is an accessor property that returns the region of the world (usually a country) associated with the locale.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.region&lt;/code&gt; 의 속성은 로케일과 관련된 세계의 지역 (보통 국가를) 반환하는 접근 자 속성입니다.</target>
        </trans-unit>
        <trans-unit id="5442815ba0e5cb509d736e94f8d8402928bef946" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.script&lt;/code&gt; property is an accessor property which returns the script used for writing the particular language used in the locale.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.script&lt;/code&gt; 의 속성은 로케일에 사용되는 특정 언어를 쓰기에 사용되는 스크립트를 반환하는 접근 자 속성입니다.</target>
        </trans-unit>
        <trans-unit id="65ca22dc6c7448cdc4bfc8afdc45cc729d631b5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale.prototype.toString()&lt;/code&gt; returns the Locale's full &lt;a href=&quot;https://www.unicode.org/reports/tr35/#Unicode_locale_identifier&quot;&gt;locale identifier string&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Intl.Locale.prototype.toString()&lt;/code&gt; 로케일의 완전한 반환 &lt;a href=&quot;https://www.unicode.org/reports/tr35/#Unicode_locale_identifier&quot;&gt;로케일 식별자 문자열&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35a1b2de63e72d3e5f00a0d05dbb8be7649fcd3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale&lt;/code&gt; constructor is a standard built-in property of the Intl object that represents a Unicode locale identifier.</source>
          <target state="translated">&lt;code&gt;Intl.Locale&lt;/code&gt; 의 생성자 내장 유니 로케일 식별자를 나타내는 국제 객체의 속성의 표준이다.</target>
        </trans-unit>
        <trans-unit id="da9bbb1e1876c081ba7a7af7d032ae9cb295d729" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Locale&lt;/code&gt; object is a standard built-in property of the Intl object that represents a Unicode locale identifier.</source>
          <target state="translated">&lt;code&gt;Intl.Locale&lt;/code&gt; 의 목적은 내장 유니 로케일 식별자를 나타내는 국제 객체의 속성의 표준이다.</target>
        </trans-unit>
        <trans-unit id="c55937d415a030d1b1645e4a5e78947e56e1c251" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.NumberFormat()&lt;/code&gt; constructor creates objects that enable language sensitive number formatting.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat()&lt;/code&gt; 생성자는 언어 인식 숫자 서식을 가능하게 개체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e05cd16ace0f14369bae3a0a9addd34382422b95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.NumberFormat.prototype.format()&lt;/code&gt; method formats a number according to the locale and formatting options of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat.prototype.format()&lt;/code&gt; 메소드는 로케일이 옵션의 포맷에 따라 숫자 포맷 &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="5afc45e19c4e91c235fc91239ceb165d6d29dbf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.NumberFormat.prototype.format&lt;/code&gt; property returns a getter function that formats a number according to the locale and formatting options of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat.prototype.format&lt;/code&gt; 의 속성은 로케일이의 서식 옵션에 따라 숫자를 포맷하는 getter 함수를 반환 &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; 객체를.</target>
        </trans-unit>
        <trans-unit id="e49d7b85f01ac1ff877966dad32b47f71e8591df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.NumberFormat.prototype.resolvedOptions()&lt;/code&gt; method returns a new object with properties reflecting the locale and number formatting options computed during initialization of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat.prototype.resolvedOptions()&lt;/code&gt; 메소드가 복귀 로케일 반사 특성이 초기화시 계산 된 수 포맷 옵션 새로운 객체 &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="ec31c442949adbd76df6c61725256709aa923321" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.NumberFormat.prototype&lt;/code&gt; property represents the prototype object for the &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;Intl.NumberFormat&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입 객체 나타내는 &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;Intl.NumberFormat&lt;/code&gt; 의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="f751d24db3a576bc70d1c2a8c92ca22cbf0ab486" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.NumberFormat.supportedLocalesOf()&lt;/code&gt; method returns an array containing those of the provided locales that are supported in number formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat.supportedLocalesOf()&lt;/code&gt; 메소드가 반환하지 않고 서식 숫자에서 지원되는 제공된 로케일의 사람들을 포함하는 배열은 런타임의 기본 로케일로 다시 가을.</target>
        </trans-unit>
        <trans-unit id="557fde9f4a9efb876f4eac88cf3301ed491abed9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.NumberFormat&lt;/code&gt; object is a constructor for objects that enable language sensitive number formatting.</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat&lt;/code&gt; 의 객체는 언어 인식 숫자 서식을 가능 객체의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="1c2c8999b982c19884585b5ad6105ca25139598a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Numberformat.prototype.formatToParts()&lt;/code&gt; method allows locale-aware formatting of strings produced by &lt;code&gt;NumberFormat&lt;/code&gt; formatters.</source>
          <target state="translated">&lt;code&gt;Intl.Numberformat.prototype.formatToParts()&lt;/code&gt; 메소드에 의해 생성 된 문자열 로케일 인식 포맷있게 &lt;code&gt;NumberFormat&lt;/code&gt; 포맷터.</target>
        </trans-unit>
        <trans-unit id="fbf01e65cc876868c83e46a1fc778c101bb65165" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.Numberformat.prototype.formatToParts()&lt;/code&gt; method allows locale-aware formatting of strings produced by &lt;code&gt;NumberTimeFormat&lt;/code&gt; formatters.</source>
          <target state="translated">&lt;code&gt;Intl.Numberformat.prototype.formatToParts()&lt;/code&gt; 메소드에 의해 생성 된 문자열 로케일 인식 포맷 허용 &lt;code&gt;NumberTimeFormat&lt;/code&gt; 의 포맷터.</target>
        </trans-unit>
        <trans-unit id="d5e73068e89bdd3b3c68294048857cc8b590b0a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.PluralRules()&lt;/code&gt; constructor creates &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;Intl.PluralRules&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules()&lt;/code&gt; 생성자는 생성 &lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;Intl.PluralRules&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="150cf40025fc4f735dfaaac10b628060aa4c4195" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.PluralRules.prototype.resolvedOptions()&lt;/code&gt; method returns a new object with properties reflecting the locale and plural formatting options computed during initialization of this &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;PluralRules&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules.prototype.resolvedOptions()&lt;/code&gt; 메소드가 복귀 로케일 반사 특성을 갖는 새로운 객체 복수이 초기화시 계산 옵션 포맷 &lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;PluralRules&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="f841b3bcc9465a5f44c5f253a0e7d0f81550121f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.PluralRules.prototype.select&lt;/code&gt; method returns a String indicating which plural rule to use for locale-aware formatting.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules.prototype.select&lt;/code&gt; 의 방법은 문자열 로케일 인식 형식에 사용할 복수의 규칙을 나타내는 반환합니다.</target>
        </trans-unit>
        <trans-unit id="83257ff29ba302a990881c5f4e65242dd823bf9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.PluralRules.prototype&lt;/code&gt; property represents the prototype object for the &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;Intl.PluralRules&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입 객체 나타내는 &lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;Intl.PluralRules&lt;/code&gt; 의&lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="f7d51efcb1f98ad73709b9a4f50ddcd7b465e033" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.PluralRules.supportedLocalesOf()&lt;/code&gt; method returns an array containing those of the provided locales that are supported in plural formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules.supportedLocalesOf()&lt;/code&gt; 메소드가 반환하지 않고 복수의 형식에서 지원되는 제공된 로케일의 사람들을 포함하는 배열은 런타임의 기본 로케일로 다시 가을.</target>
        </trans-unit>
        <trans-unit id="a71a61f937a05817de59c13e8c032568d7e8ace5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.PluralRules&lt;/code&gt; object enables plural-sensitive formatting and plural-related language rules.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules&lt;/code&gt; 의 객체 - 복수의 민감한 서식 및 복수의 관련 언어 규칙을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de59eaa070333ae43b6eb54897dd9ddfc59086a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.PluralRules&lt;/code&gt; object is a constructor for objects that enable plural sensitive formatting and plural language rules.</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules&lt;/code&gt; 의 목적은 복수의 민감한 서식 및 복수의 언어 규칙을 사용하도록 객체의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="f31ed9c8e849a263ae0a41c208d0227606ff5cf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.RelativeTimeFormat()&lt;/code&gt; constructor creates &lt;a href=&quot;../relativetimeformat&quot;&gt;&lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Intl.RelativeTimeFormat()&lt;/code&gt; 생성자는 생성 &lt;a href=&quot;../relativetimeformat&quot;&gt; &lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="c3a26e08c95b9e9ebffa29bf933ebcf5616475da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.RelativeTimeFormat.prototype.format()&lt;/code&gt; method formats a &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;unit&lt;/code&gt; according to the locale and formatting options of this &lt;a href=&quot;../relativetimeformat&quot;&gt;&lt;code&gt;RelativeTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.RelativeTimeFormat.prototype.format()&lt;/code&gt; 메소드는 포맷 &lt;code&gt;value&lt;/code&gt; 및 &lt;code&gt;unit&lt;/code&gt; 로케일에 따라이 옵션의 포맷 &lt;a href=&quot;../relativetimeformat&quot;&gt; &lt;code&gt;RelativeTimeFormat&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="39d48b8d9bd48907630c59aa503a8d64d08fc23b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.RelativeTimeFormat.prototype.formatToParts()&lt;/code&gt; method returns an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects representing the relative time format in parts that can be used for custom locale-aware formatting.</source>
          <target state="translated">&lt;code&gt;Intl.RelativeTimeFormat.prototype.formatToParts()&lt;/code&gt; 메서드는 반환 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 사용자 정의 로케일 인식 형식에 사용할 수있는 부분에 상대적인 시간 형식을 나타내는 개체를.</target>
        </trans-unit>
        <trans-unit id="ba2b9c9047dd97bb56137d8c49ee5e61b4778502" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.RelativeTimeFormat.prototype.formatToParts&lt;/code&gt; method is a version of the format method which it returns an array of objects which represent &quot;parts&quot; of the object, separating the formatted number into its consituent parts and separating it from other surrounding text. These objects have two properties: type a &lt;code&gt;NumberFormat&lt;/code&gt; formatToParts type, and value, which is the String which is the component of the output. If a &quot;part&quot; came from &lt;code&gt;NumberFormat&lt;/code&gt;, it will have a unit property which indicates the unit being formatted; literals which are part of the larger frame will not have this property.</source>
          <target state="translated">&lt;code&gt;Intl.RelativeTimeFormat.prototype.formatToParts&lt;/code&gt; 의 방법은 그것 consituent 부품으로 포맷 된 번호를 분리하여 다른 주변 텍스트로부터 분리 개체의 「부」의 표시 오브젝트의 배열을 반환 포맷 방법의 버전이다. 이러한 객체에는 &lt;code&gt;NumberFormat&lt;/code&gt; formatToParts 유형을 입력하고 출력의 구성 요소 인 String 인 value 라는 두 가지 속성이 있습니다 . &quot;part&quot;가 &lt;code&gt;NumberFormat&lt;/code&gt; 에서 온 경우에는 형식화되는 단위를 나타내는 단위 속성이 있습니다. 더 큰 프레임의 일부인 리터럴에는이 속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6bd60080eadfb08f64abc9620897c2392ea61cee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.RelativeTimeFormat.prototype.resolvedOptions()&lt;/code&gt; method returns a new object with properties reflecting the locale and relative time formatting options computed during initialization of this &lt;a href=&quot;../relativetimeformat&quot;&gt;&lt;code&gt;RelativeTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Intl.RelativeTimeFormat.prototype.resolvedOptions()&lt;/code&gt; 메소드 리턴이 초기화시 계산 옵션 포맷 로케일 및 상대 시간 반사 특성을 갖는 새로운 객체 &lt;a href=&quot;../relativetimeformat&quot;&gt; &lt;code&gt;RelativeTimeFormat&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="0faae247c03cbbd8a828e38c13fc3b6bb05950b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.RelativeTimeFormat.supportedLocalesOf()&lt;/code&gt; method returns an array containing those of the provided locales that are supported in date and time formatting without having to fall back to the runtime's default locale.</source>
          <target state="translated">&lt;code&gt;Intl.RelativeTimeFormat.supportedLocalesOf()&lt;/code&gt; 메소드가 반환하지 않고 날짜와 포맷 시간에서 지원되는 제공된 로케일의 사람들을 포함하는 배열은 런타임의 기본 로케일로 다시 가을.</target>
        </trans-unit>
        <trans-unit id="a47eb7ced518348ef82e9cac98e61796a39106e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt; object enables language-sensitive relative time formatting.</source>
          <target state="translated">&lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt; 의 목적은 언어에 민감한 상대 시간 서식을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3882d167c04f285a222b74818008c457eaf560eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl.getCanonicalLocales()&lt;/code&gt; method returns an array containing the canonical locale names. Duplicates will be omitted and elements will be validated as structurally valid language tags.</source>
          <target state="translated">&lt;code&gt;Intl.getCanonicalLocales()&lt;/code&gt; 메소드는 표준 장소 이름을 포함하는 배열을 반환한다. 중복은 생략되고 요소는 구조적으로 유효한 언어 태그로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="ec5993206ad99cb9636793751ae1c86cb4a196d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl&lt;/code&gt; object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting. The &lt;code&gt;Intl&lt;/code&gt; object provides access to several constructors as well as functionality common to the internationalization constructors and other language sensitive functions.</source>
          <target state="translated">&lt;code&gt;Intl&lt;/code&gt; 객체는 ECMAScript를 국제화 번호가 서식 언어 인식 문자열 비교를 제공하는 API, 그리고 날짜와 시간 포맷에 대한 네임 스페이스입니다. &lt;code&gt;Intl&lt;/code&gt; 객체는 국제화 생성자와 다른 언어 인식 기능에 여러 생성자에 액세스 할뿐만 아니라 기능의 일반적인을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9883dc65c62c7940615fb93418b9103125f683b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Intl&lt;/code&gt; object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting. The constructors for &lt;a href=&quot;collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; objects are properties of the &lt;code&gt;Intl&lt;/code&gt; object. This page documents these properties as well as functionality common to the internationalization constructors and other language sensitive functions.</source>
          <target state="translated">&lt;code&gt;Intl&lt;/code&gt; 객체는 ECMAScript를 국제화 번호가 서식 언어 인식 문자열 비교를 제공하는 API, 그리고 날짜와 시간 포맷에 대한 네임 스페이스입니다. &lt;a href=&quot;collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt; 객체 의 생성자 는 &lt;code&gt;Intl&lt;/code&gt; 객체의 속성입니다 . 이 페이지에는 이러한 속성과 국제화 생성자 및 기타 언어 구분 함수에 공통적 인 기능이 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="89afb46cfc82dfbbdb5c7ec457655306ed4715c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON.parse()&lt;/code&gt; method parses a JSON string, constructing the JavaScript value or object described by the string. An optional &lt;strong&gt;reviver&lt;/strong&gt; function can be provided to perform a transformation on the resulting object before it is returned.</source>
          <target state="translated">&lt;code&gt;JSON.parse()&lt;/code&gt; 메소드는 JSON 문자열, 문자열로 기술 된 스크립트 값 또는 개체를 구성를 파싱한다. 결과 객체가 반환되기 전에 변환을 수행하기 위해 선택적 &lt;strong&gt;reviver&lt;/strong&gt; 함수를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b48f840a4d5a62a5f6b73ac28487ab68c361cab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON.stringify()&lt;/code&gt; method converts a JavaScript object or value to a JSON string, optionally replacing values if a replacer function is specified or optionally including only the specified properties if a replacer array is specified.</source>
          <target state="translated">&lt;code&gt;JSON.stringify()&lt;/code&gt; 메소드는 대체물 함수가 지정된 경우 임의의 값을 교체하거나 대체물 어레이가 지정된 경우에만 임의로 지정된 특성을 포함한 JSON 열을 자바 스크립트 객체 또는 값을 변환한다.</target>
        </trans-unit>
        <trans-unit id="282dab3b27dcf6633f10d03d043d31cb8ce13e25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON&lt;/code&gt; object contains methods for parsing &lt;a href=&quot;https://json.org/&quot;&gt;JavaScript Object Notation&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;) and converting values to JSON. It can't be called or constructed, and aside from its two method properties, it has no interesting functionality of its own.</source>
          <target state="translated">&lt;code&gt;JSON&lt;/code&gt; 의 목적은 분석 방법이 포함 &lt;a href=&quot;https://json.org/&quot;&gt;JavaScript 객체 노테이션&lt;/a&gt; ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON을&lt;/a&gt; ) 및 JSON 값을 변환한다. 호출하거나 구성 할 수 없으며 두 가지 메서드 속성 외에는 흥미로운 기능이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0a2413e0ca64440bb67b792e663e3870bd20c88b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; object is a JavaScript representation of a concept Unicode locale identifier. Information about a particular locale (language, script, calendar type, etc.) can be encoded in a locale identifier string. To make it easier to work with these locale identifiers, the &lt;code&gt;Locale&lt;/code&gt; object was introduced to JavaScript. Calling the &lt;code&gt;toString&lt;/code&gt; method on a Locale object will return the identifier string for that particular Locale. The &lt;code&gt;toString&lt;/code&gt; method allows &lt;code&gt;Locale&lt;/code&gt; instances to be provided as an argument to existing &lt;code&gt;Intl&lt;/code&gt; constructors, serialized in JSON, or any other context where an exact string representation is useful.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 오브젝트 개념 유니 로케일 식별자 자바 스크립트 표현이다. 특정 로케일 (언어, 스크립트, 달력 유형 등)에 대한 정보는 로케일 식별자 문자열로 인코딩 될 수 있습니다. 이러한 로케일 식별자로 더 쉽게 작업 할 수 있도록 &lt;code&gt;Locale&lt;/code&gt; 객체가 JavaScript에 도입되었습니다. Locale 개체 에서 &lt;code&gt;toString&lt;/code&gt; 메서드를 호출하면 해당 특정 Locale에 대한 식별자 문자열이 반환됩니다. &lt;code&gt;toString&lt;/code&gt; 방법은 허용 &lt;code&gt;Locale&lt;/code&gt; 경우 기존에 인수로 제공 될 &lt;code&gt;Intl&lt;/code&gt; JSON에 연재 생성자, 또는 정확한 문자열 표현이 유용 다른 상황.</target>
        </trans-unit>
        <trans-unit id="dcc82f6027a9d9969db463edb18fcdad26796631" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MAX_SAFE_INTEGER&lt;/code&gt; constant has a value of &lt;code&gt;9007199254740991&lt;/code&gt; (9,007,199,254,740,991 or ~9 quadrillion). The reasoning behind that number is that JavaScript uses &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;double-precision floating-point format numbers&lt;/a&gt; as specified in &lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; and can only safely represent integers between &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; and &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MAX_SAFE_INTEGER&lt;/code&gt; 의 상수 값 갖는다 &lt;code&gt;9007199254740991&lt;/code&gt; (9,007,199,254,740,991 또는 천조 ~ 9 참조). 그 숫자 뒤에 이유는 자바 스크립트를 사용한다는 것입니다 &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;배정 밀도 부동 소수점 형식 번호&lt;/a&gt; 에 지정된 &lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; 만 안전하게 사이의 정수를 나타낼 수 &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; 및 &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e129086723a303edc098859842bdfa440c65192" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MAX_SAFE_INTEGER&lt;/code&gt; constant has a value of &lt;code&gt;9007199254740991&lt;/code&gt; (9,007,199,254,740,991 or ~9 quadrillion). The reasoning behind that number is that JavaScript uses &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;double-precision floating-point format numbers&lt;/a&gt; as specified in &lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; and can only safely represent numbers between &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; and &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MAX_SAFE_INTEGER&lt;/code&gt; 의 상수 값 갖는다 &lt;code&gt;9007199254740991&lt;/code&gt; (9,007,199,254,740,991 또는 천조 ~ 9 참조). 그 숫자 뒤에 이유는 자바 스크립트를 사용한다는 것입니다 &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;배정 밀도 부동 소수점 형식 번호&lt;/a&gt; 에 지정된 &lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; 만 안전하게 사이의 숫자를 나타낼 수 &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; 및 &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fadc95ce85c2b565bfdeaf904c61b94fca77acf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MAX_VALUE&lt;/code&gt; property has a value of approximately &lt;code&gt;1.79E+308&lt;/code&gt;, or 2&lt;sup&gt;1024&lt;/sup&gt;. Values larger than &lt;code&gt;MAX_VALUE&lt;/code&gt; are represented as &quot;&lt;code&gt;Infinity&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;MAX_VALUE&lt;/code&gt; 의 속성 약 값 갖는다 &lt;code&gt;1.79E+308&lt;/code&gt; , 또는 (2) &lt;sup&gt;(1024)&lt;/sup&gt; . &lt;code&gt;MAX_VALUE&lt;/code&gt; 보다 큰 값 은 &quot; &lt;code&gt;Infinity&lt;/code&gt; &quot; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="cff77eaf51e21015c086c00ecb8556752ac88ae3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MAX_VALUE&lt;/code&gt; property has a value of approximately &lt;code&gt;1.79E+308&lt;/code&gt;, or 2&lt;sup&gt;1024&lt;/sup&gt;. Values larger than &lt;code&gt;MAX_VALUE&lt;/code&gt; are represented as &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MAX_VALUE&lt;/code&gt; 의 속성 약 값 갖는다 &lt;code&gt;1.79E+308&lt;/code&gt; , 또는 (2) &lt;sup&gt;(1024)&lt;/sup&gt; . &lt;code&gt;MAX_VALUE&lt;/code&gt; 보다 큰 값 은 &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="51138e87dd8afa0c248cf646ff6fba440aa07574" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MIN_SAFE_INTEGER&lt;/code&gt; constant has a value of &lt;code&gt;-9007199254740991&lt;/code&gt; (-9,007,199,254,740,991 or about -9 quadrillion). The reasoning behind that number is that JavaScript uses &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;double-precision floating-point format numbers&lt;/a&gt; as specified in &lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; and can only safely represent numbers between &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; and &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt;. See &lt;a href=&quot;issafeinteger&quot;&gt;&lt;code&gt;Number.isSafeInteger()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;MIN_SAFE_INTEGER&lt;/code&gt; 의 상수 값 갖는다 &lt;code&gt;-9007199254740991&lt;/code&gt; (-9,007,199,254,740,991 또는 대해 -13 천조 참조). 그 숫자 뒤에 이유는 자바 스크립트를 사용한다는 것입니다 &lt;a href=&quot;http://en.wikipedia.org/wiki/Double_precision_floating-point_format&quot;&gt;배정 밀도 부동 소수점 형식 번호&lt;/a&gt; 에 지정된 &lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; 만 안전하게 사이의 숫자를 나타낼 수 &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; 및 &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; . 자세한 내용은 &lt;a href=&quot;issafeinteger&quot;&gt; &lt;code&gt;Number.isSafeInteger()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2edd7ede8c6ff2cb8e59eff68ecbdb126e29569e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MIN_VALUE&lt;/code&gt; property is the number closest to 0, not the most negative number, that JavaScript can represent.</source>
          <target state="translated">&lt;code&gt;MIN_VALUE&lt;/code&gt; 의 속성은 자바 스크립트를 나타낼 수 있음을, 0이 아닌 가장 부정적인 번호에 가장 가까운 수입니다.</target>
        </trans-unit>
        <trans-unit id="97b70b8e54c9948576019e153328f83ff1fc9bbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map()&lt;/code&gt; creates &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Map()&lt;/code&gt; 생성 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 오브젝트.</target>
        </trans-unit>
        <trans-unit id="d0c964aed5ec320d75e2a45199d447ce687d7cda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; object holds key-value pairs and remembers the original insertion order of the keys. Any value (both objects and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt;) may be used as either a key or a value.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 오브젝트는 키 - 값 쌍을 보유하고있는 키의 원래의 삽입 순서를 기억한다. 임의의 값 (객체 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;프리미티브 값&lt;/a&gt; 모두 )을 키 또는 값으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88182ac6e810e4db29e4f4ca99dd5f46cbb85788" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="58cbcb90a3afa037d35ea732b297c2c6e6cf19ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map[@@species]&lt;/code&gt; accessor property returns the &lt;code&gt;Map&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Map[@@species]&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;Map&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="e1bc1fc4fdbe497780e3d4e463f6104aa51a7aed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map[@@toStringTag]&lt;/code&gt; property has an initial value of &quot;Map&quot;.</source>
          <target state="translated">&lt;code&gt;Map[@@toStringTag]&lt;/code&gt; 속성은 &quot;맵&quot;의 초기 값을 갖는다.</target>
        </trans-unit>
        <trans-unit id="3bbde0f7b7ef75ccc2709ef492ef3e5714515a85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.E&lt;/code&gt; property represents the base of natural logarithms, e, approximately 2.718.</source>
          <target state="translated">&lt;code&gt;Math.E&lt;/code&gt; 를의 특성은 자연 대수, 즉, 약 2.718의베이스를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="0e9d214144756719d648c3dc2c1301f19276447c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.LN10&lt;/code&gt; property represents the natural logarithm of 10, approximately 2.302:</source>
          <target state="translated">&lt;code&gt;Math.LN10&lt;/code&gt; 의 속성 (10)의 자연 로그, 약 2.302을 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="8db0f1faf59a2ac2c578484cf3b24e6f4c214ed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.LN2&lt;/code&gt; property represents the natural logarithm of 2, approximately 0.693:</source>
          <target state="translated">&lt;code&gt;Math.LN2&lt;/code&gt; 의 속성은 2의 자연 로그, 약 0.693을 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="cdf7f2ecf0017b27e7a6141dc1ed457384dd58e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.LOG10E&lt;/code&gt; property represents the base 10 logarithm of e, approximately 0.434:</source>
          <target state="translated">&lt;code&gt;Math.LOG10E&lt;/code&gt; 속성은 전자의 기본 10 대수를 나타내는 약 0.434 :</target>
        </trans-unit>
        <trans-unit id="d5c9e3c0689448a1a9df15e39f7d754a2992a927" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.LOG2E&lt;/code&gt; property represents the base 2 logarithm of e, approximately 1.442:</source>
          <target state="translated">&lt;code&gt;Math.LOG2E&lt;/code&gt; 의 속성은 전자의 기본이 로그를 나타내며, 약 1.442 :</target>
        </trans-unit>
        <trans-unit id="63cd40ab11d7a3a27a7c89ce217a526e42186596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.PI&lt;/code&gt; property represents the ratio of the circumference of a circle to its diameter, approximately 3.14159:</source>
          <target state="translated">&lt;code&gt;Math.PI&lt;/code&gt; 로의 특성이 원주와 그 직경의 비를 나타내고, 약 3.14159 :</target>
        </trans-unit>
        <trans-unit id="2e8337ecf94f86624ee273c9827f2a26f251ff2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.SQRT1_2&lt;/code&gt; property represents the square root of 1/2 which is approximately 0.707:</source>
          <target state="translated">&lt;code&gt;Math.SQRT1_2&lt;/code&gt; 의 속성은 약 0.707이다 1/2의 제곱근을 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="a26902a9e42f526f3ae90dbfb5a8226a1c70fb8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.SQRT2&lt;/code&gt; property represents the square root of 2, approximately 1.414:</source>
          <target state="translated">&lt;code&gt;Math.SQRT2&lt;/code&gt; 의 속성은 2의 제곱근, 약 1.414을 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="eae6f5b844e3d6d91260924e40ec029c879a9923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.abs()&lt;/code&gt; function returns the absolute value of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.abs()&lt;/code&gt; 함수가 반환 번호의 절대 값이며</target>
        </trans-unit>
        <trans-unit id="f1f2a5f19a3e5516861af947471fe4ec8a980466" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.acos()&lt;/code&gt; function returns the arccosine (in radians) of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.acos()&lt;/code&gt; 함수는 숫자 (라디안) 코사인을 반환한다</target>
        </trans-unit>
        <trans-unit id="23e53e5610b8e2bffb508c5cb59181c802697a1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.acos()&lt;/code&gt; method returns a numeric value between 0 and &amp;pi; radians for &lt;code&gt;x&lt;/code&gt; between -1 and 1. If the value of &lt;code&gt;x&lt;/code&gt; is outside this range, it returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Math.acos()&lt;/code&gt; 메소드가 복귀 0 라디안과 &amp;pi; 사이의 수치 값 &lt;code&gt;x&lt;/code&gt; 의 값 사이의 경우 -1과 1 &lt;code&gt;x&lt;/code&gt; 는 외부의 범위이고, 그 반환 &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 이이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f1359f0c5180f313c713a239ff7586a8b6ed071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.acosh()&lt;/code&gt; function returns the hyperbolic arc-cosine of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.acosh()&lt;/code&gt; 함수, 즉 다수의 쌍곡선 아크 코사인을 반환</target>
        </trans-unit>
        <trans-unit id="77ea6d905eac5b576ffa3e8e68dd6623c41fd8de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.asin()&lt;/code&gt; function returns the arcsine (in radians) of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.asin()&lt;/code&gt; 함수, 즉 다수의 (라디안) 아크 사인을 돌려</target>
        </trans-unit>
        <trans-unit id="1201f0735d6c0d6605da2162314daa4a1383fe06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.asin()&lt;/code&gt; method returns a numeric value between</source>
          <target state="translated">&lt;code&gt;Math.asin()&lt;/code&gt; 메소드 사이의 수치 값을 반환</target>
        </trans-unit>
        <trans-unit id="4f24cc302535514a7789482772fb7228bbe3c1b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.asinh()&lt;/code&gt; function returns the hyperbolic arcsine of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.asinh()&lt;/code&gt; 함수는 즉, 숫자의 쌍곡선 아크 사인을 반환</target>
        </trans-unit>
        <trans-unit id="274e9068ecd50879d6acc911f659025f3fc40267" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.atan()&lt;/code&gt; function returns the arctangent (in radians) of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.atan()&lt;/code&gt; 함수, 즉 다수의 (라디안) 아크 탄젠트를 반환</target>
        </trans-unit>
        <trans-unit id="19e0ae310ffca0a95d08a532386a65fa4b83741a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.atan()&lt;/code&gt; method returns a numeric value between</source>
          <target state="translated">&lt;code&gt;Math.atan()&lt;/code&gt; 메소드 사이의 수치 값을 반환</target>
        </trans-unit>
        <trans-unit id="1efa67754ea28c885fc086cb93e6069cc3a67fe6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.atan2()&lt;/code&gt; function returns the angle in the plane (in radians) between the positive x-axis and the ray from (0,0) to the point (x,y), for &lt;code&gt;Math.atan2(y,x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Math.atan2()&lt;/code&gt; 함수는 차례로 양의 X 축과 (0,0) 사이의 선 (라디안) 평면의 각을 (X, Y)에 대한 &lt;code&gt;Math.atan2(y,x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e63a17c9cbf24acc790a9e888ccb35c7a83dfe8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.atan2()&lt;/code&gt; method returns a numeric value between -&amp;pi; and &amp;pi; representing the angle theta of an &lt;code&gt;(x, y)&lt;/code&gt; point. This is the counterclockwise angle, measured in radians, between the positive X axis, and the point &lt;code&gt;(x, y)&lt;/code&gt;. Note that the arguments to this function pass the y-coordinate first and the x-coordinate second.</source>
          <target state="translated">&lt;code&gt;Math.atan2()&lt;/code&gt; 메소드는 -&amp;pi; 사이 및 각도 세타 &amp;pi; 나타내는 수치 반환 &lt;code&gt;(x, y)&lt;/code&gt; 포인트. 이것은 양의 X 축과 점 &lt;code&gt;(x, y)&lt;/code&gt; 사이의 라디안으로 측정 된 반 시계 방향 각도 입니다. 이 함수에 대한 인수는 y 좌표를 먼저 전달하고 x 좌표를 두 번째로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="77c207e19c5f9f4f46bab9f5091528b80eb08a44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.atan2()&lt;/code&gt; method returns a numeric value between -&amp;pi; and &amp;pi; representing the angle theta of an &lt;code&gt;(x,&amp;nbsp;y)&lt;/code&gt; point. This is the counterclockwise angle, measured in radians, between the positive X axis, and the point &lt;code&gt;(x,&amp;nbsp;y)&lt;/code&gt;. Note that the arguments to this function pass the y-coordinate first and the x-coordinate second.</source>
          <target state="translated">&lt;code&gt;Math.atan2()&lt;/code&gt; 메소드는 -&amp;pi; 사이 및 각도 세타 &amp;pi; 나타내는 수치 반환 &lt;code&gt;(x,&amp;nbsp;y)&lt;/code&gt; 포인트. 양의 X 축과 점 &lt;code&gt;(x,&amp;nbsp;y)&lt;/code&gt; 사이의 라디안 단위로 측정되는 반 시계 방향 각도 입니다. 이 함수의 인수는 y 좌표를 먼저, x 좌표를 두 번째로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="401089a6230e9c0e59b469731579b2c037b6d9d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.atanh()&lt;/code&gt; function returns the hyperbolic arctangent of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.atanh()&lt;/code&gt; 함수는 즉, 숫자의 쌍곡선 아크 탄젠트를 반환</target>
        </trans-unit>
        <trans-unit id="2d1450b678d6cdc0ae70a87335e790c92ef781be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.cbrt()&lt;/code&gt; function returns the cube root of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.cbrt()&lt;/code&gt; 함수는 즉, 숫자의 큐브 루트를 반환</target>
        </trans-unit>
        <trans-unit id="11bc3b132f12be50fda196d8f44ed1e1e7aed1b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.ceil()&lt;/code&gt; function always rounds a number up to the next largest integer.</source>
          <target state="translated">&lt;code&gt;Math.ceil()&lt;/code&gt; 함수는 항상 다음으로 큰 정수로 숫자를 반올림합니다.</target>
        </trans-unit>
        <trans-unit id="e853adf2395dd36708d65c7b793868c0402ab685" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.ceil()&lt;/code&gt; function returns the smallest integer greater than or equal to a given number.</source>
          <target state="translated">&lt;code&gt;Math.ceil()&lt;/code&gt; 함수가 리턴 소정 개수 작은 정수 이상인.</target>
        </trans-unit>
        <trans-unit id="1f46b5999ff7482155c968a0bfe7d2ac290cd792" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.clz32()&lt;/code&gt; function returns the number of leading zero bits in the 32-bit binary representation of a number.</source>
          <target state="translated">&lt;code&gt;Math.clz32()&lt;/code&gt; 함수는 숫자의 32 비트 이진 표현의 리딩 제로 비트들의 수를 리턴한다.</target>
        </trans-unit>
        <trans-unit id="f34d1fcee66df36e2155cbe5c0adec85c2bcec1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.cos()&lt;/code&gt; method returns a numeric value between -1 and 1, which represents the cosine of the angle.</source>
          <target state="translated">&lt;code&gt;Math.cos()&lt;/code&gt; 메소드는 각도의 코사인 값을 나타내는 수치와 -1과 1을 반환한다.</target>
        </trans-unit>
        <trans-unit id="1982921bfd23b352614e4487bb825af16d5cac08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.cos()&lt;/code&gt; static function returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/cosine&quot;&gt;cosine&lt;/a&gt; of the specified angle, which must be specified in &lt;a href=&quot;https://en.wikipedia.org/wiki/radians&quot;&gt;radians&lt;/a&gt;. This value is</source>
          <target state="translated">&lt;code&gt;Math.cos()&lt;/code&gt; 정적 함수 복귀 &lt;a href=&quot;https://en.wikipedia.org/wiki/cosine&quot;&gt;코사인&lt;/a&gt; 으로 지정해야 지정된 각도, &lt;a href=&quot;https://en.wikipedia.org/wiki/radians&quot;&gt;라디안&lt;/a&gt; . 이 값은</target>
        </trans-unit>
        <trans-unit id="a555d20b1f19ec5103b77931d479fb6e8b4dbb3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.cosh()&lt;/code&gt; function returns the hyperbolic cosine of a number, that can be expressed using the &lt;a href=&quot;e&quot;&gt;constant e&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;Math.cosh()&lt;/code&gt; 함수를 사용하여 표현 될 수있는 다수의 쌍곡선 코사인 리턴 &lt;a href=&quot;e&quot;&gt;상수를 전자&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2bfea75be247f3daec71554eaad766c96c0db251" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.exp()&lt;/code&gt; function returns &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt;&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is the argument, and &lt;code&gt;e&lt;/code&gt; is &lt;a href=&quot;e&quot;&gt;Euler's number (also known as Napier's constant)&lt;/a&gt;, the base of the natural logarithms.</source>
          <target state="translated">&lt;code&gt;Math.exp()&lt;/code&gt; 함수가 리턴 &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt;&lt;/code&gt; , 여기서 &lt;code&gt;x&lt;/code&gt; 인수이고, &lt;code&gt;e&lt;/code&gt; 있다 &lt;a href=&quot;e&quot;&gt;(또한, 네이피어 상수라고도 함) 오일러의 수&lt;/a&gt; , 자연 로그의 밑수.</target>
        </trans-unit>
        <trans-unit id="18eee299904532f2ffd28d81c9ac6c8227771f9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.expm1()&lt;/code&gt; function returns &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt; - 1&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is the argument, and &lt;a href=&quot;e&quot;&gt;e&lt;/a&gt; the base of the natural logarithms.</source>
          <target state="translated">&lt;code&gt;Math.expm1()&lt;/code&gt; 함수 반환 &lt;code&gt;e&lt;sup&gt;x&lt;/sup&gt; - 1&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; 는 인수이고, &lt;a href=&quot;e&quot;&gt;전자&lt;/a&gt; 자연 대수의 바닥을.</target>
        </trans-unit>
        <trans-unit id="e8824a7825bf37b6f9c96fb23ed3ac4b27945d51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.floor()&lt;/code&gt; function returns the largest integer less than or equal to a given number.</source>
          <target state="translated">&lt;code&gt;Math.floor()&lt;/code&gt; 함수는보다 작은 최대의 정수를 반환하거나 소정의 수와 동일.</target>
        </trans-unit>
        <trans-unit id="6deb8300fe3b12748184940073bb02e071851e53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.fround()&lt;/code&gt; function returns the nearest &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision%20floating-point%20format&quot;&gt;32-bit single precision&lt;/a&gt; float representation of a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Math.fround()&lt;/code&gt; 함수가 반환 가장 가까운 &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision%20floating-point%20format&quot;&gt;32 비트 단 정밀도&lt;/a&gt; (A)의 부동 소수점 표현 &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e73fd876183d4897911545affeaa2f0c199ea36d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.fround()&lt;/code&gt; function returns the nearest &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;32-bit single precision&lt;/a&gt; float representation of a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Math.fround()&lt;/code&gt; 함수가 반환 가장 가까운 &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;32 비트 단 정밀도&lt;/a&gt; (A)의 부동 소수점 표현 &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3acae50845ea68e690e7b7727178f6ef8b66df64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.hypot()&lt;/code&gt; function returns the square root of the sum of squares of its arguments, that is</source>
          <target state="translated">&lt;code&gt;Math.hypot()&lt;/code&gt; 함수는 인수의 제곱의 합의 제곱근을 반환, 즉</target>
        </trans-unit>
        <trans-unit id="3023f098b48e98bd81ddd62213e5b7103907fed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.hypot()&lt;/code&gt; function returns the square root of the sum of squares of its arguments, that is:</source>
          <target state="translated">&lt;code&gt;Math.hypot()&lt;/code&gt; 함수는 인수의 제곱의 합,의 제곱근을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="1783d7acae54f32c226e638343bf0fad7c634c55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.imul()&lt;/code&gt; function returns the result of the C-like 32-bit multiplication of the two parameters.</source>
          <target state="translated">&lt;code&gt;Math.imul()&lt;/code&gt; 함수는 두 개의 파라미터들의 32 비트 C 형 곱의 결과를 반환한다.</target>
        </trans-unit>
        <trans-unit id="0fbb4c724848b0a53ecbfacba61326cab66e211b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.log()&lt;/code&gt; function returns the natural logarithm (base &lt;a href=&quot;e&quot;&gt;&lt;code&gt;e&lt;/code&gt;&lt;/a&gt;) of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.log()&lt;/code&gt; 함수는 자연 로그 (베이스 반환 &lt;a href=&quot;e&quot;&gt; &lt;code&gt;e&lt;/code&gt; &lt;/a&gt; 즉, 번호)를</target>
        </trans-unit>
        <trans-unit id="4936dafff05a90c9d111b4b30e42a197099af9dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.log10()&lt;/code&gt; function returns the base 10 logarithm of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.log10()&lt;/code&gt; 함수, 즉 다수의 기지국 (10) 로그를 반환</target>
        </trans-unit>
        <trans-unit id="b09f211d660ff7375eef3abee35fe3455dd2f781" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.log1p()&lt;/code&gt; function returns the natural logarithm (base &lt;a href=&quot;e&quot;&gt;&lt;code&gt;e&lt;/code&gt;&lt;/a&gt;) of 1 + a number, that is</source>
          <target state="translated">&lt;code&gt;Math.log1p()&lt;/code&gt; 함수는 자연 로그 (베이스 반환 &lt;a href=&quot;e&quot;&gt; &lt;code&gt;e&lt;/code&gt; &lt;/a&gt; 1 +의 개수를), 즉</target>
        </trans-unit>
        <trans-unit id="9de4bd7bfcecd8d7baebf0daf3b3529ba48f3549" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.log2()&lt;/code&gt; function returns the base 2 logarithm of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.log2()&lt;/code&gt; 함수 즉, 다수의베이스 2 로그를 반환</target>
        </trans-unit>
        <trans-unit id="0612aca2e37102e4cb7f302047f02b57b544e2dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.max()&lt;/code&gt; function returns the largest of the zero or more numbers given as input parameters.</source>
          <target state="translated">&lt;code&gt;Math.max()&lt;/code&gt; 함수가 반환 입력 파라미터로 주어진 0 이상의 수의 최대.</target>
        </trans-unit>
        <trans-unit id="b33a199cd22e3ee41631af09205653506adc3bdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.max()&lt;/code&gt; function returns the largest of zero or more numbers.</source>
          <target state="translated">&lt;code&gt;Math.max()&lt;/code&gt; 함수는 0 개 이상의 숫자의 가장 큰 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5d539152c2638e6029d43cecd951b1a069b14fd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.pow()&lt;/code&gt; function returns the &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt; to the &lt;code&gt;&lt;var&gt;exponent&lt;/var&gt;&lt;/code&gt; power, that is, &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt;, the &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt; and the &lt;code&gt;&lt;var&gt;exponent&lt;/var&gt;&lt;/code&gt; are in decimal numeral system.</source>
          <target state="translated">&lt;code&gt;Math.pow()&lt;/code&gt; 함수 복귀 &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt; 받는 &lt;code&gt;&lt;var&gt;exponent&lt;/var&gt;&lt;/code&gt; 인 파워, &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;var&gt;exponent&lt;/var&gt;&lt;/code&gt; 의 10 진수 체계이다.</target>
        </trans-unit>
        <trans-unit id="908a39fb8c5373392e8ca792510bbef2d4bca8ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.pow()&lt;/code&gt; function returns the &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt; to the &lt;code&gt;&lt;var&gt;exponent&lt;/var&gt;&lt;/code&gt; power, that is, &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Math.pow()&lt;/code&gt; 함수는 수익 &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt; 받는 &lt;code&gt;&lt;var&gt;exponent&lt;/var&gt;&lt;/code&gt; 인 파워, &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62674bee19df406bc1fdbd14f622d63ce4c011e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.pow()&lt;/code&gt; function returns the &lt;code&gt;base&lt;/code&gt; to the &lt;code&gt;exponent&lt;/code&gt; power, that is, &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Math.pow()&lt;/code&gt; 함수는 수익 &lt;code&gt;base&lt;/code&gt; 받는 &lt;code&gt;exponent&lt;/code&gt; 인 파워, &lt;code&gt;base&lt;sup&gt;exponent&lt;/sup&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c82cadd6e4d3e54422e419e76746d87c755f18ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.random()&lt;/code&gt; function returns a floating-point, pseudo-random number in the range 0 to less than 1 (inclusive of 0, but not 1) with approximately uniform distribution over that range &amp;mdash; which you can then scale to your desired range. The implementation selects the initial seed to the random number generation algorithm; it cannot be chosen or reset by the user.</source>
          <target state="translated">&lt;code&gt;Math.random()&lt;/code&gt; 함수가 반환하는 범위에서 거의 균일 한 분포로 부동 소수점, 의사 난수의 범위는 0 미만 1 수 (포함 0 있지만 1) - 당신이 다음 원하는까지 확장 할 수 범위. 구현은 난수 생성 알고리즘에 대한 초기 시드를 선택합니다. 사용자가 선택하거나 재설정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d936ed23a8c7935bde0bf4037eb8c8f483a83a7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.random()&lt;/code&gt; function returns a floating-point, pseudo-random number in the range 0&amp;ndash;1 (inclusive of 0, but not 1) with approximately uniform distribution over that range &amp;mdash; which you can then scale to your desired range. The implementation selects the initial seed to the random number generation algorithm; it cannot be chosen or reset by the user.</source>
          <target state="translated">&lt;code&gt;Math.random()&lt;/code&gt; 함수가 반환하는 범위에서 거의 균일 한 분포로 부동 소수점, 의사 난수의 범위 0-1의 번호 (0 포함, 그러나 1) - 당신이 다음 원하는 범위를 확장 할 수 있습니다. 구현은 초기 시드를 난수 생성 알고리즘으로 선택합니다. 사용자가 선택하거나 재설정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="af02360b60e878aed2709cd3f773108e1aa2625a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.round()&lt;/code&gt; function returns the value of a number rounded to the nearest integer.</source>
          <target state="translated">&lt;code&gt;Math.round()&lt;/code&gt; 함수 복귀 숫자의 값에 가장 가까운 정수로 반올림.</target>
        </trans-unit>
        <trans-unit id="a5d5344eb6668dc4a5a5e746122cd718cb824bdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.sign()&lt;/code&gt; function returns either a &lt;strong&gt;positive&lt;/strong&gt; or &lt;strong&gt;negative&lt;/strong&gt; +/- 1, indicating the sign of a number passed into the argument. If the number passed into &lt;code&gt;Math.sign()&lt;/code&gt; is 0, it will return a +/- 0. Note that if the number is positive, an explicit (+) will &lt;strong&gt;not&lt;/strong&gt; be returned.</source>
          <target state="translated">&lt;code&gt;Math.sign()&lt;/code&gt; 함수가 반환 중 &lt;strong&gt;긍정적&lt;/strong&gt; 또는 &lt;strong&gt;부정적인&lt;/strong&gt; 인수로 전달 숫자의 부호를 나타내는 +/- 1. &lt;code&gt;Math.sign()&lt;/code&gt; 전달 된 숫자 가 0이면 +/- 0을 반환합니다. 숫자가 양수이면 명시 적 (+)이 반환 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="da8b8ae5b73735a996356de7c47d8dacefce3df1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.sign()&lt;/code&gt; function returns the sign of a number, indicating whether the number is positive, negative or zero.</source>
          <target state="translated">&lt;code&gt;Math.sign()&lt;/code&gt; 함수는 양수, 음수거나 제로인지의 여부를 나타내는 다수의 표시를 리턴한다.</target>
        </trans-unit>
        <trans-unit id="dde4deb7799dcc763f16a0179238397eb20e4b9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.sin()&lt;/code&gt; function returns the sine of a number.</source>
          <target state="translated">&lt;code&gt;Math.sin()&lt;/code&gt; 함수는 수의 사인을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76d76cf0a5feac65ad2cb021f11849024f28eeb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.sin()&lt;/code&gt; method returns a numeric value between -1 and 1, which represents the sine of the angle given in radians.</source>
          <target state="translated">&lt;code&gt;Math.sin()&lt;/code&gt; 메소드는 라디안으로 소정 각도의 사인 값을 나타내는 수치와 -1과 1을 반환한다.</target>
        </trans-unit>
        <trans-unit id="564f79a1eff02a3d9293260681dc7c21beb64171" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.sinh()&lt;/code&gt; function returns the hyperbolic sine of a number, that can be expressed using the &lt;a href=&quot;e&quot;&gt;constant e&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;Math.sinh()&lt;/code&gt; 함수를 사용하여 표현 될 수있는 다수의 쌍곡선 사인 리턴 &lt;a href=&quot;e&quot;&gt;상수를 전자&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="106bcb416cbdd429ad7933d6dc31d26364d03dad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.sqrt()&lt;/code&gt; function returns the square root of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.sqrt()&lt;/code&gt; 함수를 즉, 숫자의 제곱근을 반환</target>
        </trans-unit>
        <trans-unit id="fdc14b01c600a83941368feb4762d6c7ab8c3902" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.tan()&lt;/code&gt; function returns the tangent of a number.</source>
          <target state="translated">&lt;code&gt;Math.tan()&lt;/code&gt; 함수는 숫자의 탄젠트를 반환한다.</target>
        </trans-unit>
        <trans-unit id="d6a42ec70f0ea0607606e14849e66ec68b4c61ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.tan()&lt;/code&gt; method returns a numeric value that represents the tangent of the angle.</source>
          <target state="translated">&lt;code&gt;Math.tan()&lt;/code&gt; 에있어서, 상기 각도의 탄젠트를 나타내는 숫자 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="02ff2998fa9285454da319330dee3f30e6cd32c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.tanh()&lt;/code&gt; function returns the hyperbolic tangent of a number, that is</source>
          <target state="translated">&lt;code&gt;Math.tanh()&lt;/code&gt; 함수, 즉 다수의 쌍곡선 탄젠트를 반환</target>
        </trans-unit>
        <trans-unit id="f27db3f3a41ec46f179c587df8a34363b782a28c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Math.trunc()&lt;/code&gt; function returns the integer part of a number by removing any fractional digits.</source>
          <target state="translated">&lt;code&gt;Math.trunc()&lt;/code&gt; 함수는 소수점 이하를 제거하여 다수의 정수 부분을 반환한다.</target>
        </trans-unit>
        <trans-unit id="ba8562459904181b3ed736f7cbd1e34ce2c56111" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number()&lt;/code&gt; creates a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Number()&lt;/code&gt; 생성 &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="4fa18c0132666e17849d60724c9ad3039600e31b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.EPSILON&lt;/code&gt; property represents the difference between 1 and the smallest floating point number greater than 1.</source>
          <target state="translated">&lt;code&gt;Number.EPSILON&lt;/code&gt; 의 속성은 1 내지 1보다 작은 부동 소수점 수의 큰 차이를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="05ff1ee697d3c5c3e0b67d8245da7a9116b43c49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; constant represents the maximum safe integer in JavaScript (&lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; 의 상수는 자바 스크립트의 최대 안전 정수 (나타내는 &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4ca43227a25c5f381fd5c0e2898671ab9a49919b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.MAX_VALUE&lt;/code&gt; property represents the maximum numeric value representable in JavaScript.</source>
          <target state="translated">&lt;code&gt;Number.MAX_VALUE&lt;/code&gt; 속성은 자바 스크립트의 최대 수치 표현할 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bf526ed1de12696fb61cc3e08aab8fcda9ea33ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.MIN_SAFE_INTEGER&lt;/code&gt; constant represents the minimum safe integer in JavaScript (&lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Number.MIN_SAFE_INTEGER&lt;/code&gt; 의 상수는 자바 스크립트의 최소 안전 정수 나타낸다 ( &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f7381448634e0f31bd5201bcea50a9d1e174d800" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.MIN_VALUE&lt;/code&gt; property represents the smallest positive numeric value representable in JavaScript.</source>
          <target state="translated">&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; 의 속성은 자바 스크립트에서 가장 작은 양의 숫자 값을 표현할 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5aec2d9b31c88e5aa46d62d6093ad29565e0dd29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; property represents the negative Infinity value.</source>
          <target state="translated">&lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; 와의 특성은 음의 무한대 값을 나타낸다.</target>
        </trans-unit>
        <trans-unit id="c9ae0e314f4a7ce76ee0711a747131d463602ac9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.NaN&lt;/code&gt; property represents Not-A-Number. Equivalent of &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Number.NaN&lt;/code&gt; 의 속성은 숫자가 아닌 값을 나타냅니다. &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 과&lt;/a&gt; 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d0a8de008582132cc9e6cc742bf738dcafc19037" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; property represents the positive Infinity value.</source>
          <target state="translated">&lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; 와의 속성은 무한대 값을 나타낸다.</target>
        </trans-unit>
        <trans-unit id="e6bb24737690fdbd512282fceb5798657c3e520d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.isFinite()&lt;/code&gt; method determines whether the passed value is a finite number &amp;mdash; that is, it checks that a number is neither positive nor negative &lt;a href=&quot;../infinity&quot;&gt;Infinity&lt;/a&gt;, since JavaScript has both.</source>
          <target state="translated">&lt;code&gt;Number.isFinite()&lt;/code&gt; 의 숫자도 긍정적이나 부정적인 즉, 체크 -에있어서, 상기 전달 된 값이 유한 수 있는지 여부를 결정 &lt;a href=&quot;../infinity&quot;&gt;무한대&lt;/a&gt; JavaScript를 모두 갖고 있기 때문에.</target>
        </trans-unit>
        <trans-unit id="30fd7b6f3053abaff3bf2a0464c281e23ec072c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.isFinite()&lt;/code&gt; method determines whether the passed value is a finite number.</source>
          <target state="translated">&lt;code&gt;Number.isFinite()&lt;/code&gt; 메소드는 전달 된 값이 유한 수 있는지 여부를 판정한다.</target>
        </trans-unit>
        <trans-unit id="6702ce32a97290f8e908e26ff226fd16b8db7bc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.isInteger()&lt;/code&gt; method determines whether the passed value is an integer.</source>
          <target state="translated">&lt;code&gt;Number.isInteger()&lt;/code&gt; 메소드는 전달 된 값이 정수인지를 판단한다.</target>
        </trans-unit>
        <trans-unit id="5e9f4d261b9a45b076a155c11abbd5aac9e031d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.isNaN()&lt;/code&gt; method determines whether the passed value is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; and its type is &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;. It is a more robust version of the original, global &lt;a href=&quot;../isnan&quot;&gt;&lt;code&gt;isNaN()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Number.isNaN()&lt;/code&gt; 메소드는 전달 된 값인지를 결정 &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 이&lt;/a&gt; 그 타입이 &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; . 원래의 글로벌 &lt;a href=&quot;../isnan&quot;&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;/a&gt; 보다 강력한 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="9914bbce6f34a5629b45e57a04521135a21f3d24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.isSafeInteger()&lt;/code&gt; method determines whether the provided value is a number that is a</source>
          <target state="translated">&lt;code&gt;Number.isSafeInteger()&lt;/code&gt; 메소드는 제공된 값이 인 번호인지를 판정한다</target>
        </trans-unit>
        <trans-unit id="f9aa47102986c689ecc518ad79ea95d634627d70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.parseFloat()&lt;/code&gt; method parses a string argument and returns a floating point number. This method behaves identically to the global function &lt;a href=&quot;../parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; and is part of ECMAScript 2015 (its purpose is modularization of globals).</source>
          <target state="translated">&lt;code&gt;Number.parseFloat()&lt;/code&gt; 메서드는 문자열 인수를 구문 분석하고 부동 소수점 수를 반환합니다. 이 메소드는 전역 함수 &lt;a href=&quot;../parsefloat&quot;&gt; &lt;code&gt;parseFloat()&lt;/code&gt; &lt;/a&gt; 와 동일하게 작동하며 ECMAScript 2015의 일부입니다 (그 목적은 전역 모듈화입니다).</target>
        </trans-unit>
        <trans-unit id="9f5f39e943bf4d74685770ed9337d825ceb61a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.parseFloat()&lt;/code&gt; method parses an argument and returns a floating point number. If a number cannot be parsed from the argument, it returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Number.parseFloat()&lt;/code&gt; 메소드는 인수를 구문 분석하고 부동 소수점 수를 반환합니다. 인수에서 숫자를 구문 분석 할 수없는 경우 &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 을 반환&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="53ff239b6aba38919ddab96f4de82953204c8139" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.parseInt()&lt;/code&gt; method parses a string argument and returns an integer of the specified radix or base.</source>
          <target state="translated">&lt;code&gt;Number.parseInt()&lt;/code&gt; 메서드는 문자열 인수 반환 지정된 기수 또는 기본의 정수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="df593d41968f688ad83a119c51c4284dfcfd496e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Number.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="00ade8ef2452f453af0fa56020df4de938b0c743" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number&lt;/code&gt; JavaScript object is a wrapper object allowing you to work with numerical values. A &lt;code&gt;Number&lt;/code&gt; object is created using the &lt;code&gt;Number()&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 자바 스크립트 객체를 사용하면 숫자 값으로 작업 할 수 있도록 래퍼 객체입니다. &lt;code&gt;Number&lt;/code&gt; 개체가 사용하여 생성되는 &lt;code&gt;Number()&lt;/code&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="113736fb24faf4d3d1186ae074c4f530a7bd2c41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number&lt;/code&gt; constructor contains constants and methods for working with numbers. Values of other types can be converted to numbers using the&lt;code&gt;Number()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 생성자는 숫자 작업을위한 상수 및 메서드가 포함되어 있습니다. 다른 유형의 값은 &lt;code&gt;Number()&lt;/code&gt; 사용하여 숫자로 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfc0920606f66c86916b03a4a090f5eb964e43fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.assign()&lt;/code&gt; method copies all &lt;a href=&quot;propertyisenumerable&quot;&gt;enumerable&lt;/a&gt;&lt;a href=&quot;hasownproperty&quot;&gt;own properties&lt;/a&gt; from one or more &lt;em&gt;source objects&lt;/em&gt; to a &lt;em&gt;target object&lt;/em&gt;. It returns the target object.</source>
          <target state="translated">&lt;code&gt;Object.assign()&lt;/code&gt; 메소드 카피 모두 &lt;a href=&quot;propertyisenumerable&quot;&gt;열거 &lt;/a&gt;&lt;a href=&quot;hasownproperty&quot;&gt;고유 특성을&lt;/a&gt; 하나 또는 그 이상에서 &lt;em&gt;소스 객체&lt;/em&gt; (A)에 &lt;em&gt;대상물&lt;/em&gt; . 대상 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33e9c7709d72fc16e777d20479de2eee0376b010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.assign()&lt;/code&gt; method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.</source>
          <target state="translated">&lt;code&gt;Object.assign()&lt;/code&gt; 메소드는 대상체에 하나 이상의 소스 개체로부터 자신의 모든 열거 속성 값을 복사하는 데 사용된다. 대상 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0b3f7e325edbbe8fa49b1079ba1e9ba9b819fc70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.assign()&lt;/code&gt; method only copies &lt;em&gt;enumerable&lt;/em&gt; and &lt;em&gt;own&lt;/em&gt; properties from a source object to a target object. It uses &lt;code&gt;[[Get]]&lt;/code&gt; on the source and &lt;code&gt;[[Set]]&lt;/code&gt; on the target, so it will invoke &lt;a href=&quot;../../functions/get&quot;&gt;getters&lt;/a&gt; and &lt;a href=&quot;../../functions/set&quot;&gt;setters&lt;/a&gt;. Therefore it &lt;em&gt;assigns&lt;/em&gt; properties, versus copying or defining new properties. This may make it unsuitable for merging new properties into a prototype if the merge sources contain getters.</source>
          <target state="translated">&lt;code&gt;Object.assign()&lt;/code&gt; 메소드는 복사 &lt;em&gt;열거&lt;/em&gt; 하고 &lt;em&gt;자신의&lt;/em&gt; 대상체에 소스 객체 속성. 소스에서 &lt;code&gt;[[Get]]&lt;/code&gt; 을 사용 하고 대상에서 &lt;code&gt;[[Set]]&lt;/code&gt; 를 사용하므로 &lt;a href=&quot;../../functions/get&quot;&gt;getter&lt;/a&gt; 및 &lt;a href=&quot;../../functions/set&quot;&gt;setter를&lt;/a&gt; 호출 합니다. 따라서 새 속성을 복사하거나 정의하는 대신 속성 을 &lt;em&gt;할당&lt;/em&gt; 합니다. 병합 소스에 게터가 포함 된 경우 새 속성을 프로토 타입으로 병합하는 데 적합하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0507ba624ef552980aa74cae51b4f564b83468d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.assign()&lt;/code&gt; method only copies &lt;em&gt;enumerable&lt;/em&gt; and &lt;em&gt;own&lt;/em&gt; properties from a source object to a target object. It uses &lt;code&gt;[[Get]]&lt;/code&gt; on the source and &lt;code&gt;[[Set]]&lt;/code&gt; on the target, so it will invoke getters and setters. Therefore it &lt;em&gt;assigns&lt;/em&gt; properties versus just copying or defining new properties. This may make it unsuitable for merging new properties into a prototype if the merge sources contain getters. For copying property definitions, including their enumerability, into prototypes &lt;a href=&quot;getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">&lt;code&gt;Object.assign()&lt;/code&gt; 메소드는 복사 &lt;em&gt;열거&lt;/em&gt; 하고 &lt;em&gt;자신의&lt;/em&gt; 대상체에 소스 객체 속성. 소스에서 &lt;code&gt;[[Get]]&lt;/code&gt; 을 사용 하고 대상에서 &lt;code&gt;[[Set]]&lt;/code&gt; 를 사용하므로 getter 및 setter를 호출합니다. 따라서 새 속성을 복사하거나 정의하는 것보다 속성 을 &lt;em&gt;할당&lt;/em&gt; 합니다. 병합 소스에 게터가 포함되어 있으면 새 속성을 프로토 타입에 병합하는 데 적합하지 않을 수 있습니다. 열거 형을 포함하여 속성 정의를 프로토 타입에 복사하려면 대신 &lt;a href=&quot;getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="83bd06a63d652407f1ebeb94e4b86892e6d04aec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.defineProperties()&lt;/code&gt; method defines new or modifies existing properties directly on an object, returning the object.</source>
          <target state="translated">&lt;code&gt;Object.defineProperties()&lt;/code&gt; 메소드는 객체를 반환하는 객체에 직접 새로운 또는 수정 기존 속성을 정의한다.</target>
        </trans-unit>
        <trans-unit id="e14de3855af35d97b2ebf25374631842bd03f5bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.fromEntries()&lt;/code&gt; method takes a list of key-value pairs and returns a new object whose properties are given by those entries. The &lt;var&gt;iterable&lt;/var&gt; argument is expected to be an object that implements an &lt;code&gt;@@iterator&lt;/code&gt; method, that returns an iterator object, that produces a two element array-like object, whose first element is a value that will be used as a property key, and whose second element is the value to associate with that property key.</source>
          <target state="translated">&lt;code&gt;Object.fromEntries()&lt;/code&gt; 메소드는 키 - 값 쌍들의리스트를 취하고, 그 사람들 특성 항목에서 주어진 새로운 객체를 반환한다. &lt;var&gt;iterable&lt;/var&gt; 인수 대상이되는 것으로 예상된다 구현하는 &lt;code&gt;@@iterator&lt;/code&gt; 있어서, 그 복귀 두 요소를 생성하는 반복기 객체 어레이 형상 모국어 소자 특성 키로서 사용되는 값이며, 그 개체 두 번째 요소는 해당 속성 키와 관련된 값입니다.</target>
        </trans-unit>
        <trans-unit id="4510e08bf1dd8c1847fcb7ede79cb2a545f40497" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; method returns an object describing the configuration of a specific property on a given object (that is, one directly present on an object and not in the object's prototype chain). The object returned is mutable but mutating it has no effect on the original property's configuration.</source>
          <target state="translated">&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; 메소드가 복귀 지정된 객체의 특정 속성의 구성을 설명하는 오브젝트 (즉, 직접적으로 물체 상에 존재하지 객체의 프로토 사슬이다). 반환 된 객체는 변경 가능하지만 변경해도 원래 속성의 구성에는 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83c886659af8759625cee34b1b5a144964eeb5f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; method returns an array of all properties (including &lt;em&gt;non-&lt;/em&gt;enumerable properties except for those which use Symbol) found directly upon a given object.</source>
          <target state="translated">&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; 메소드가 복귀 (비롯한 모든 특성의 배열 &lt;em&gt;이 아닌&lt;/em&gt; 기호를 사용하는 것을 제외 열거 특성) 지정된 객체에 직접 알았다.</target>
        </trans-unit>
        <trans-unit id="d4c4b31328b020bf10a818288f2e813947fe50b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; method returns an array of all properties (including non-enumerable properties except for those which use Symbol) found directly in a given object.</source>
          <target state="translated">&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; 메소드가 복귀 (기호를 사용하는 것을 제외하고 비 열거 속성을 포함)의 모든 특성의 배열은 주어진 객체에 직접 알았다.</target>
        </trans-unit>
        <trans-unit id="415f3d75a7f6ff5060a80371bc0d6e1b4a896bec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt; method returns an array of all symbol properties found directly upon a given object.</source>
          <target state="translated">&lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt; 메소드가 복귀 모든 심볼 속성의 배열은 주어진 객체에 직접 알았다.</target>
        </trans-unit>
        <trans-unit id="48fc25e133022b2186fccb5f966c8cfbaca0276c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; method returns the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; 메소드가 복귀 원형 (즉, 내부의 값 &lt;code&gt;[[Prototype]]&lt;/code&gt; 지정된 객체의 속성).</target>
        </trans-unit>
        <trans-unit id="3428c9aa87a04216edbb824ee8892e58ddd8a933" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.is()&lt;/code&gt; method determines whether two values are &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;the same value&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Object.is()&lt;/code&gt; 메소드는 두 값이 있는지 여부를 판단 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;동일한 값&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7806b442903437f717194b67dd57fdab9f58a7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.isExtensible()&lt;/code&gt; method determines if an object is extensible (whether it can have new properties added to it).</source>
          <target state="translated">&lt;code&gt;Object.isExtensible()&lt;/code&gt; 객체 (그것이 첨가 새로운 특성을 가질 수 있는지 여부) 확장의 경우에있어서 판정한다.</target>
        </trans-unit>
        <trans-unit id="3f477f69bdbd7229d6d9e11675bb1867295966ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.isFrozen()&lt;/code&gt; determines if an object is &lt;a href=&quot;freeze&quot;&gt;frozen&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Object.isFrozen()&lt;/code&gt; 객체인지 판정 &lt;a href=&quot;freeze&quot;&gt;냉동&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eeba25d26c98f783ba1e8cf94784a3241cebbece" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.isSealed()&lt;/code&gt; method determines if an object is sealed.</source>
          <target state="translated">&lt;code&gt;Object.isSealed()&lt;/code&gt; 객체가 밀봉되어있는 경우에있어서 판정한다.</target>
        </trans-unit>
        <trans-unit id="cc4654b314bd321bae3d1ba9b627104c82795026" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object.preventExtensions()&lt;/code&gt; method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object).</source>
          <target state="translated">&lt;code&gt;Object.preventExtensions()&lt;/code&gt; 지금까지의 방법을 방지 새로운 특성 (객체에 대한 예를 방지 향후 확장) 객체에 추가.</target>
        </trans-unit>
        <trans-unit id="fd9a526806ed44908addf01366cc9372b7c5d547" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; constructor creates an object wrapper for the given value.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 생성자는 지정된 값의 오브젝트 래퍼를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="9f6b67810c2518bd202a149b5865b7c11bb99c60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; constructor creates an object wrapper for the given value. If the value is &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, it will create and return an empty object, otherwise, it will return an object of a Type that corresponds to the given value. If the value is an object already, it will return the value.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 생성자는 지정된 값의 오브젝트 래퍼를 작성합니다. 값이 &lt;a href=&quot;null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 인 경우 빈 객체를 만들어 반환하고, 그렇지 않으면 주어진 값에 해당하는 Type 객체를 반환합니다. 값이 이미 개체 인 경우 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c284c7f2a902728b9621ac5064a888d542045bb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; creates an object wrapper for the given value.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 지정된 값의 오브젝트 래퍼를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1e11a9b306da33aa4b7799fc4c3826850c409e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Promise.all()&lt;/code&gt; method takes an iterable of promises as an input, and returns a single &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to an array of the results of the input promises. This returned promise will resolve when all of the input's promises have resolved, or if the input iterable contains no promises. It rejects immediately upon any of the input promises rejecting or non-promises throwing an error, and will reject with this first rejection message / error.</source>
          <target state="translated">&lt;code&gt;Promise.all()&lt;/code&gt; 메소드는, 입력으로서 약속의 반복 가능한 소요 번의 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 그 입력 약속 결과의 배열을 해결한다. 이 반환 된 promise는 입력의 모든 promise가 해결되었거나 입력 iterable에 promise가없는 경우 해결됩니다. 입력 약속 거부 또는 비 약속 오류가 발생하면 즉시 거부하고이 첫 번째 거부 메시지 / 오류로 거부합니다.</target>
        </trans-unit>
        <trans-unit id="0ecd1d83517590405260a28595c7ce53cb4fe8be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Promise.all(&lt;var&gt;iterable&lt;/var&gt;)&lt;/code&gt; method returns a single &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves when all of the promises in the &lt;var&gt;iterable&lt;/var&gt; argument have resolved or when the &lt;var&gt;iterable&lt;/var&gt; argument contains no promises. It rejects with the reason of the first promise that rejects.</source>
          <target state="translated">&lt;code&gt;Promise.all(&lt;var&gt;iterable&lt;/var&gt;)&lt;/code&gt; 방법은 하나의 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 결의가있는 약속의 모든 때 &lt;var&gt;iterable&lt;/var&gt; 인수는 해결 한거나 할 때 &lt;var&gt;iterable&lt;/var&gt; 인수가 어떤 약속을 포함하지 않는다. 그것은 거절 한 첫 번째 약속의 이유로 거절합니다.</target>
        </trans-unit>
        <trans-unit id="c9e1c6113521c1e61087698204553431ccaac13d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Promise.reject()&lt;/code&gt; method returns a &lt;code&gt;Promise&lt;/code&gt; object that is rejected with a given reason.</source>
          <target state="translated">&lt;code&gt;Promise.reject()&lt;/code&gt; 메소드는 반환 &lt;code&gt;Promise&lt;/code&gt; 주어진 이유 거부 개체.</target>
        </trans-unit>
        <trans-unit id="a1da7411facc4840547f93d17608f33f889b5baf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Promise.resolve()&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; object that is resolved with a given value. If the value is a promise, that promise is returned; if the value is a thenable (i.e. has a &lt;a href=&quot;then&quot;&gt;&lt;code&gt;&quot;then&quot; method&lt;/code&gt;&lt;/a&gt;), the returned promise will &quot;follow&quot; that thenable, adopting its eventual state; otherwise the returned promise will be fulfilled with the value. This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.</source>
          <target state="translated">&lt;code&gt;Promise.resolve()&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 특정 값으로 해결 개체. 값이 promise이면 해당 promise가 반환됩니다. 값이 thenable이면 (즉, &lt;a href=&quot;then&quot;&gt; &lt;code&gt;&quot;then&quot; method&lt;/code&gt; &lt;/a&gt; ), 반환 된 promise는 thenable을 &quot;따라&quot;최종 상태를 채택합니다. 그렇지 않으면 반환 된 약속이 값으로 이행됩니다. 이 함수는 약속과 유사한 객체의 중첩 된 레이어 (예 : 무언가를 해결하는 약속으로 확인되는 약속)를 단일 레이어로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="8f0bc6a47e2a8986b6de9a813a8d8c873ab37301" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Promise&lt;/code&gt; constructor is primarily used to wrap functions that do not already support promises.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 생성자는 주로 이미 약속을 지원하지 않는 기능을 포장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="49549d6d270c3b7b53fa6586948f676b1f56bc0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Promise&lt;/code&gt; object represents the eventual completion (or failure) of an asynchronous operation and its resulting value.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 목적은 최종 완성 (또는 실패) 비동기 동작 및 결과 값을 나타낸다.</target>
        </trans-unit>
        <trans-unit id="39c2c4a2b5c12a456ec7e8862269d084744f1772" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Promise&lt;/code&gt; object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 목적은 최종 완성 (또는 실패) 비동기 동작하고, 그 결과 값을 나타낸다.</target>
        </trans-unit>
        <trans-unit id="21dc946d1b1308243a379f270f2eb260fdc34f34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Proxy&lt;/code&gt; object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 개체를 차단하고 해당 객체에 대한 기본 동작을 다시 정의 할 수있는 또 다른 객체에 대한 프록시를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6913db20f07c1e8df7d9d80bf5280739de0a06be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ReferenceError&lt;/code&gt; object represents an error when a non-existent variable is referenced.</source>
          <target state="translated">&lt;code&gt;ReferenceError&lt;/code&gt; 가에 존재하지 않는 변수를 참조 할 때 개체 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="318ea5baaf062d85eb4545793a6a066d3fc803d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.&lt;/code&gt;getOwnPropertyDescriptor method returns a property descriptor of the given property if it exists on the object, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise. The only difference to &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt; is how non-object targets are handled.</source>
          <target state="translated">은 &lt;code&gt;Reflect.&lt;/code&gt; getOwnPropertyDescriptor 메소드는 주어진 특성의 특성 디스크립터가 오브젝트에 존재하는 경우이를 리턴하고 그렇지 않으면 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 않습니다. &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; 유일한 차이점 은 객체가 아닌 대상을 처리하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a33bbe15250b58ff2ee2b3186da5ace119ecefbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.defineProperty&lt;/code&gt; method allows precise addition to or modification of a property on an object. For more details see the &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt; which is similar. &lt;code&gt;Object.defineProperty&lt;/code&gt; returns the object or throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the property has not been successfully defined. &lt;code&gt;Reflect.defineProperty&lt;/code&gt;, however, simply returns a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property was successfully defined.</source>
          <target state="translated">&lt;code&gt;Reflect.defineProperty&lt;/code&gt; 의 방법은 객체의 속성 외에 정확한 또는 변형 할 수있다. 자세한 내용 은 비슷한 &lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 . &lt;code&gt;Object.defineProperty&lt;/code&gt; 는 객체를 반환하거나 속성이 성공적으로 정의되지 않은 경우 &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를&lt;/a&gt; 발생시킵니다. 그러나 &lt;code&gt;Reflect.defineProperty&lt;/code&gt; 는 단순히 속성이 성공적으로 정의되었는지 여부를 나타내는 &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a2488ae3f70e71e4502ebe80ff968c63b4332e19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.defineProperty&lt;/code&gt; method allows precise addition to or modification of a property on an object. For more details, see the &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt; which is similar.</source>
          <target state="translated">&lt;code&gt;Reflect.defineProperty&lt;/code&gt; 의 방법은 객체의 속성 외에 정확한 또는 변형 할 수있다. 자세한 내용 은 유사한 &lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ff84b74ad3cfee0a4a3dcba8f32def3b8e5293a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.deleteProperty&lt;/code&gt; method allows you to delete a property on an object. It returns a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property was successfully deleted. It is almost identical to the non-strict &lt;a href=&quot;../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt; operator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Reflect.deleteProperty&lt;/code&gt; 의 방법을 사용하면 객체에 속성을 삭제할 수 있습니다. 속성이 성공적으로 삭제되었는지 여부를 나타내는 &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 반환합니다 . 엄격하지 않은 &lt;a href=&quot;../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; 연산자&lt;/a&gt; 와 거의 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="dc745270437f9326849c6d9b5e5b62f40bfa51e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.get&lt;/code&gt; method allows you to get a property on an object. It is like the &lt;a href=&quot;../../operators/property_accessors&quot;&gt;property accessor&lt;/a&gt; syntax as a function.</source>
          <target state="translated">&lt;code&gt;Reflect.get&lt;/code&gt; 의 방법을 사용하면 객체에 속성을 얻을 수 있습니다. 그것은 같다 &lt;a href=&quot;../../operators/property_accessors&quot;&gt;속성 액세서&lt;/a&gt; 함수로서 구.</target>
        </trans-unit>
        <trans-unit id="d01941e3fd30da01cb70c5999cef0bee5e2f42be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.getOwnPropertyDescriptor&lt;/code&gt; method returns a property descriptor of the given property if it exists in the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; object, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise. The only difference to &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt; is how non-object targets are handled.</source>
          <target state="translated">&lt;code&gt;Reflect.getOwnPropertyDescriptor&lt;/code&gt; 의 가 존재하는 경우에있어서, 상기 소정의 속성의 속성 디스크립터를 반환 &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; 객체 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 그렇지. &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; 의 유일한 차이점 은 비 객체 대상이 처리되는 방식입니다.</target>
        </trans-unit>
        <trans-unit id="e6d720aac72b2b70bad97973f531686e62380121" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt; method returns the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="translated">&lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt; 에 있어서 되돌아 원형 (즉, 내부의 값 &lt;code&gt;[[Prototype]]&lt;/code&gt; 지정된 객체의 속성).</target>
        </trans-unit>
        <trans-unit id="6bd85fe113e748e1f2e229506163759fcafb2d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.has&lt;/code&gt; method allows you to check if a property is in an object. It works like the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; as a function.</source>
          <target state="translated">&lt;code&gt;Reflect.has&lt;/code&gt; 방법은 속성이 객체에 있는지 확인할 수 있습니다. &lt;a href=&quot;../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; 연산자&lt;/a&gt; 처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="06008423ce51bcc45055fb5e581199b41a3ba3f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.isExtensible&lt;/code&gt; method allows you determine if an object is extensible (whether it can have new properties added to it). It is the same method as &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Reflect.isExtensible&lt;/code&gt; 방법은 객체 (그것에 추가 된 새 속성을 가질 수 있는지 여부를) 확장 할 수 있는지 확인할 수 있습니다. &lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; 과 같은 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="4bafb8c68aee3e151d4f28965b428323aeebacd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.ownKeys&lt;/code&gt; method returns an array of the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; object's own property keys. Its return value is equivalent to &lt;code&gt;&lt;a href=&quot;../object/getownpropertynames&quot;&gt;Object.getOwnPropertyNames(target)&lt;/a&gt;.concat(&lt;a href=&quot;../object/getownpropertysymbols&quot;&gt;Object.getOwnPropertySymbols(target)&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reflect.ownKeys&lt;/code&gt; 의 방법은 배열 반환 &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; 객체 자신의 프로퍼티 키를. 반환 값은 &lt;code&gt;&lt;a href=&quot;../object/getownpropertynames&quot;&gt;Object.getOwnPropertyNames(target)&lt;/a&gt;.concat(&lt;a href=&quot;../object/getownpropertysymbols&quot;&gt;Object.getOwnPropertySymbols(target)&lt;/a&gt;)&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8c4e704125f2bd3945bb47344c139beffed30016" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.ownKeys&lt;/code&gt; method returns an array of the &lt;code&gt;target&lt;/code&gt; object's own property keys. Its return value is equivalent to &lt;code&gt;&lt;a href=&quot;../object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;&lt;/a&gt;(target).concat(&lt;a href=&quot;../object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/a&gt;(target))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reflect.ownKeys&lt;/code&gt; 의 방법은 배열 반환 &lt;code&gt;target&lt;/code&gt; 객체 자신의 프로퍼티 키를. 반환 값은 &lt;code&gt;&lt;a href=&quot;../object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;&lt;/a&gt;(target).concat(&lt;a href=&quot;../object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/a&gt;(target))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97151df8d00197ea212a5c2dac74aafdac4f5e4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.preventExtensions()&lt;/code&gt; method allows you to prevent new properties from ever being added to an object (i.e., prevents future extensions to the object). It is similar to &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Reflect.preventExtensions()&lt;/code&gt; 방법은 당신이 이제까지 오브젝트 (객체에 대한 즉, 방지 미래 확장)에 추가되는 새로운 속성을 방지 할 수 있습니다. &lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="1d0090758332458ff4b1b71b18d3d9db1d3029bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.preventExtensions&lt;/code&gt; method allows you to prevent new properties from ever being added to an object (i.e. prevents future extensions to the object). It is the same method as &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Reflect.preventExtensions&lt;/code&gt; 의 방법은 당신이 이제까지 (객체에 대한 예를 방지 향후 확장) 객체에 추가되는 새 속성을 방지 할 수 있습니다. &lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; 와 같은 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="941c3446a3199bbb99c92b8d422a069acbe089ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.set&lt;/code&gt; method allows you to set a property on an object. It does property assignment and is like the &lt;a href=&quot;../../operators/property_accessors&quot;&gt;property accessor&lt;/a&gt; syntax as a function.</source>
          <target state="translated">&lt;code&gt;Reflect.set&lt;/code&gt; 의 방법을 사용하면 객체에 속성을 설정할 수 있습니다. 속성 할당을 수행하며 함수로서 &lt;a href=&quot;../../operators/property_accessors&quot;&gt;속성 접근 자&lt;/a&gt; 구문과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b304e4df14207b021ae9f7976187625bee6b192e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt; method changes the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="translated">&lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt; 에 있어서, 상기 프로토 타입 (즉, 내부의 값 변경 &lt;code&gt;[[Prototype]]&lt;/code&gt; 지정된 객체의 속성).</target>
        </trans-unit>
        <trans-unit id="28768566b9ebbc5b1f7805df7f78edafa41f4934" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect&lt;/code&gt; object provides the following static functions which have the same names as the &lt;a href=&quot;proxy/handler&quot;&gt;proxy handler methods&lt;/a&gt;. Some of these methods are the same as corresponding methods on &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">은 &lt;code&gt;Reflect&lt;/code&gt; 물체가 동일한 이름이 다음 정적 기능 제공 &lt;a href=&quot;proxy/handler&quot;&gt;프록시 처리기 방법&lt;/a&gt; . 이러한 메소드 중 일부는 &lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;/a&gt; 해당 메소드와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="9883464ebb9364cde1ee7894df3ff2f0c4972f27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reflect&lt;/code&gt; object provides the following static functions which have the same names as the &lt;a href=&quot;proxy/proxy&quot;&gt;proxy handler methods&lt;/a&gt;.</source>
          <target state="translated">은 &lt;code&gt;Reflect&lt;/code&gt; 물체가 동일한 이름이 다음 정적 기능 제공 &lt;a href=&quot;proxy/proxy&quot;&gt;프록시 처리기 방법&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ee5beb66ffe8f09c8a228966b2f72b5e2e48241" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegExp.prototype&lt;/code&gt; property represents the prototype object for the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;RegExp.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입 객체 나타내는 &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 생성자를.</target>
        </trans-unit>
        <trans-unit id="570d3e4c661a27c8a8ead271959b5f089f9878f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegExp&lt;/code&gt; constructor creates a regular expression object for matching text with a pattern.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; 생성자 패턴 텍스트와 일치하는 정규 표현 오브젝트를 생성한다.</target>
        </trans-unit>
        <trans-unit id="60b96d37624533a85e7433edd6782b3fbb87a5b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegExp&lt;/code&gt; constructor no longer throws when the first argument is a &lt;code&gt;RegExp&lt;/code&gt; and the second argument is present. Introduces Unicode and sticky flags.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; 첫번째 인수가되면 생성자가 더 이상 발생하지 &lt;code&gt;RegExp&lt;/code&gt; 과 두 번째 인자가 존재한다. 유니 코드 및 스티커 플래그를 소개합니다.</target>
        </trans-unit>
        <trans-unit id="73df72d656482bb1360b483525d953f651e42210" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegExp&lt;/code&gt; object is used for matching text with a pattern.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; 목적은 텍스트 패턴 매칭에 사용된다.</target>
        </trans-unit>
        <trans-unit id="4c40c57708cb7de081ace3164ef9c8a8c9d5a310" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegExp&lt;/code&gt; object must have the &lt;code&gt;/g&lt;/code&gt; flag, otherwise a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; 개체가 있어야합니다 &lt;code&gt;/g&lt;/code&gt; 그렇지 않으면, 플래그 &lt;code&gt;TypeError&lt;/code&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="655b660e90df6384c18a2226eb426133b84eae99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RegExp[@@species]&lt;/code&gt; accessor property returns the &lt;code&gt;RegExp&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;RegExp[@@species]&lt;/code&gt; 속성을 반환 접근 &lt;code&gt;RegExp&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="5e2198ec631b23c3a344779780debe7b84c5223b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResultObject&lt;/code&gt;'s instance member is then accessed, and the contained exported function invoked.</source>
          <target state="translated">그런 다음 &lt;code&gt;ResultObject&lt;/code&gt; 의 인스턴스 멤버에 액세스하고 포함 된 내 보낸 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="286309882110ef6ed2f9b97cd3919d42104fa4a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; lets you create &lt;code&gt;Set&lt;/code&gt; objects that store unique values of any type, whether &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt; or object references.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 당신이 만들 수 있습니다 &lt;code&gt;Set&lt;/code&gt; 모든 유형의 고유 한 값이든 저장하는 객체 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;원시 값&lt;/a&gt; 또는 객체 참조.</target>
        </trans-unit>
        <trans-unit id="4ea8be37a07ffe14772a2854fd53fa75fb450212" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; object lets you store unique values of any type, whether &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt; or object references.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 객체는 모든 유형의 고유 한 값이든 저장할 수 있습니다 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;원시 값&lt;/a&gt; 또는 객체 참조.</target>
        </trans-unit>
        <trans-unit id="796ab0dfbbb83314179261f515128b7717ec5bdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; object which &lt;code&gt;forEach()&lt;/code&gt; was called upon.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; 가 호출 된 &lt;code&gt;Set&lt;/code&gt; 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="34880c0508906d43d019cb591c6da56579f52f0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a598c08aaa8ecf5c7c480e2837e96572304b6cef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt;&lt;strong&gt;iterator&lt;/strong&gt; function, which is the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; &lt;strong&gt;반복자&lt;/strong&gt; 는 IS 함수 &lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; 기본적으로 기능.</target>
        </trans-unit>
        <trans-unit id="147e872841333d181d608227361f4bec45e8981b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set[Symbol.species]&lt;/code&gt; accessor property returns the &lt;code&gt;Set&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Set[Symbol.species]&lt;/code&gt; 접근 속성 반환 &lt;code&gt;Set&lt;/code&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="81523bbefaafc18e0987a2352e1bdf2a44b9e080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedArrayBuffer()&lt;/code&gt; is used to create a &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; object representing a generic, fixed-length raw binary data buffer, similar to the &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer()&lt;/code&gt; 크리에이트하는데 사용된다 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 을&lt;/a&gt; 받는 유사 일반적인 고정 길이 원시 이진 데이터 버퍼 나타내는 객체 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="01a5488148b5e6462d30ec89c8731cd374291c9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedArrayBuffer.prototype.slice()&lt;/code&gt; method returns a new &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; whose contents are a copy of this &lt;code&gt;SharedArrayBuffer&lt;/code&gt;'s bytes from begin, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning. This method has the same algorithm as &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer.prototype.slice()&lt;/code&gt; 메소드는 새로운 반환 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 그 내용이 사본입니다 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 독점 결국 포함, 시작에서의 바이트를. begin 또는 end가 음수이면 처음부터가 아니라 배열 끝의 인덱스를 참조합니다. 이 메서드는 &lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice()&lt;/code&gt; &lt;/a&gt; 와 동일한 알고리즘을 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c71fb0fbfa27a6157213819367f7b11882997d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt; property represents the prototype for the &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt; 의 속성에 대한 프로토 타입을 나타내는 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 의&lt;/a&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="ea06a3e12d4141d776d10f098513731c0cdd10c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedArrayBuffer&lt;/code&gt; constructor's length property whose value is 1.</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; 의 값이 생성자의 길이 속성은 1입니다.</target>
        </trans-unit>
        <trans-unit id="672f134bc8206393caf4630923f5c2950d97f1fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedArrayBuffer&lt;/code&gt; object is used to represent a generic, fixed-length raw binary data buffer, similar to the &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; object, but in a way that they can be used to create views on shared memory. Unlike an &lt;code&gt;ArrayBuffer&lt;/code&gt;, a &lt;code&gt;SharedArrayBuffer&lt;/code&gt; cannot become detached.</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; 의 목적은 유사한 일반적인 고정 길이 원시 이진 데이터 버퍼 나타내는데 사용 &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 의&lt;/a&gt; 객체 있지만 공유 메모리 뷰를 생성하는 데 사용될 수있는 방법이다. 달리 &lt;code&gt;ArrayBuffer&lt;/code&gt; 하는 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 은 분리 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3e42b1e82361d73652e4e379fc1cf63cf780e1fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String.fromCodePoint()&lt;/code&gt; method has been added to ECMAScript 2015 and may not be supported in all web browsers or environments yet.</source>
          <target state="translated">&lt;code&gt;String.fromCodePoint()&lt;/code&gt; 메서드는 ECMAScript를 2015에 추가되었습니다 아직 모든 웹 브라우저 나 환경에서 지원되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88ef77a0e9fb197ba353ecea29e41bbe0a4b15c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String.fromCodePoint&lt;/code&gt; method has been added to ECMAScript 2015 and may not be supported in all web browsers or environments yet. Use the code below for a polyfill:</source>
          <target state="translated">&lt;code&gt;String.fromCodePoint&lt;/code&gt; 의 방법은 ECMAScript를 2015에 추가되었습니다 아직 모든 웹 브라우저 나 환경에서 지원되지 않을 수 있습니다. 폴리 필에 아래 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ba63f93ea5376f91b5fd6a2f50242a83a2779f6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String.prototype&lt;/code&gt; property represents the &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; prototype object.</source>
          <target state="translated">&lt;code&gt;String.prototype&lt;/code&gt; 의 속성은 나타내는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 프로토 타입 객체를.</target>
        </trans-unit>
        <trans-unit id="53bd59e1968f09eee2339962606bb51072d132f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; constructor is used to create a new &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object. When called instead as a function, it performs type conversion to a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/string&quot;&gt;primitive string&lt;/a&gt;, which is usually more useful.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 생성자는 새 만드는 데 사용되는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 개체를. 대신 함수로 호출되면 일반적으로 더 유용한 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/string&quot;&gt;기본 문자열로&lt;/a&gt; 유형 변환을 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="5e7d31df8e58e56f31f727605912a01954afb65e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; global object is a constructor for strings or a sequence of characters.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 전역 객체는 문자열 생성자 또는 일련의 문자입니다.</target>
        </trans-unit>
        <trans-unit id="4ab9d2be63079545f5c322e7a163da5705fd8972" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; instance methods are also available in Firefox as of JavaScript 1.6 (&lt;strong&gt;not&lt;/strong&gt; part of the ECMAScript standard) on the &lt;code&gt;String&lt;/code&gt; object for applying &lt;code&gt;String&lt;/code&gt; methods to any object:</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 인스턴스 메소드는 자바 스크립트 1.6 (의 파이어 폭스에서도 사용할 수 &lt;strong&gt;없습니다&lt;/strong&gt; 온 ECMA 스크립트 표준의 일부) &lt;code&gt;String&lt;/code&gt; 적용 대상 &lt;code&gt;String&lt;/code&gt; 개체에 방법 :</target>
        </trans-unit>
        <trans-unit id="b0ba6d5927f986730418dbf03af02e8eb7c1616d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; object is used to represent and manipulate a sequence of characters.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 객체는 표현과 문자의 순서를 조작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9382bc502130b7ceefa741efaf5838ffae3c5115" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Symbol()&lt;/code&gt; constructor returns a value of type &lt;strong&gt;symbol&lt;/strong&gt;, but is incomplete as a constructor because it does not support the syntax &quot;&lt;code&gt;new Symbol()&lt;/code&gt;&quot; and it is not intended to be subclassed. It may be used as the value of an &lt;code&gt;&lt;a href=&quot;../../classes/extends&quot;&gt;extends&lt;/a&gt;&lt;/code&gt; clause of a &lt;code&gt;class&lt;/code&gt; definition but a &lt;code&gt;&lt;a href=&quot;../../operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt; call to it will cause an exception.</source>
          <target state="translated">&lt;code&gt;Symbol()&lt;/code&gt; 생성자는 타입의 값을 반환 &lt;strong&gt;기호를&lt;/strong&gt; 하지만 구문 &quot;지원하지 않기 때문에 생성자로 불완전 &lt;code&gt;new Symbol()&lt;/code&gt; &quot;그것은 서브 클래스 수 없습니다. &lt;code&gt;class&lt;/code&gt; 정의 의 &lt;code&gt;&lt;a href=&quot;../../classes/extends&quot;&gt;extends&lt;/a&gt;&lt;/code&gt; 절의 값으로 사용할 수 있지만 &lt;code&gt;&lt;a href=&quot;../../operators/super&quot;&gt;super&lt;/a&gt;&lt;/code&gt; 호출로 인해 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9dbc42b5210da7f1b1f51151e4fb3f0d147cb43a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Symbol()&lt;/code&gt; function returns a value of type &lt;strong&gt;symbol&lt;/strong&gt;, has static properties that expose several members of built-in objects, has static methods that expose the global symbol registry, and resembles a built-in object class but is incomplete as a constructor because it does not support the syntax &quot;&lt;code&gt;new Symbol()&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;Symbol()&lt;/code&gt; 함수는 형의 값 반환 &lt;strong&gt;기호를&lt;/strong&gt; 객체에 내장 된 글로벌 기호 레지스트리를 노출 정적 메서드가 여러 멤버를 노출 정적 속성을 가지고 있으며,이 개체 클래스 내장하지만 생성자 때문으로 불완전 유사 &quot; &lt;code&gt;new Symbol()&lt;/code&gt; &quot; 구문을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7f402ed2103fd798248e6b7e2814e0b76ad10715" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Symbol.asyncIterator&lt;/code&gt; symbol is a builtin symbol that is used to access an object's &lt;code&gt;@@asyncIterator&lt;/code&gt; method. In order for an object to be async iterable, it must have a &lt;code&gt;Symbol.asyncIterator&lt;/code&gt; key.</source>
          <target state="translated">&lt;code&gt;Symbol.asyncIterator&lt;/code&gt; 의 기호는 액세스 개체의 사용되는 내장 심볼이고 &lt;code&gt;@@asyncIterator&lt;/code&gt; 방법. 객체가 비동기 반복 가능이 &lt;code&gt;Symbol.asyncIterator&lt;/code&gt; 키 가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2eeb1bb20ef431cf563f2cbfb734b8f4577eedef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Symbol.hasInstance&lt;/code&gt; well-known symbol is used to determine if a constructor object recognizes an object as its instance. The &lt;a href=&quot;../../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt;&lt;/a&gt; operator's behavior can be customized by this symbol.</source>
          <target state="translated">&lt;code&gt;Symbol.hasInstance&lt;/code&gt; 잘 알려진 기호는 생성자 객체가 인스턴스와 객체를 인식하는지 확인하는 데 사용됩니다. &lt;a href=&quot;../../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;/a&gt; 연산자의 행동이 기호로 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b60212268a8a6dfd5a6005f758a9d98574b86f91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt; well-known symbol is used to configure if an object should be flattened to its array elements when using the &lt;a href=&quot;../array/concat&quot;&gt;&lt;code&gt;Array.prototype.concat()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt; 은 USING 때 오브젝트의 배열 요소 평탄화되어야 하는지를 잘 알려진 기호 구성하는 데 사용된다 &lt;a href=&quot;../array/concat&quot;&gt; &lt;code&gt;Array.prototype.concat()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="2fdffdb2718df5708641e8ddf4fc5c7a72a9011e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Symbol.toStringTag&lt;/code&gt; well-known symbol is a string valued property that is used in the creation of the default string description of an object. It is accessed internally by the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;Symbol.toStringTag&lt;/code&gt; 잘 알려진 심볼은 객체의 기본 문자열 설명의 생성에 사용되는 문자열 값의 속성입니다. &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 내부적으로 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="17673a228ad0e13eb800ae35d1753fe2069b9f68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Symbol.unscopables&lt;/code&gt; well-known symbol is used to specify an object value of whose own and inherited property names are excluded from the &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; environment bindings of the associated object.</source>
          <target state="translated">&lt;code&gt;Symbol.unscopables&lt;/code&gt; 잘 알려진 기호는 그 자신의 상속 재산의 이름에서 제외의 대상 값을 지정하는 데 사용됩니다 &lt;code&gt;&lt;a href=&quot;../../statements/with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; 관련된 개체의 환경 바인딩.</target>
        </trans-unit>
        <trans-unit id="575e669cab82f29ea2dad362d220a9cfb2ff182b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyntaxError&lt;/code&gt; constructor creates a new error object that represents an error when trying to interpret syntactically invalid code.</source>
          <target state="translated">&lt;code&gt;SyntaxError&lt;/code&gt; 생성자는 문법적으로 잘못된 코드를 해석하려고 할 때 오류를 나타내는 새로운 오류 개체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5eaa926aa4c244424800f47f7645d57e2f021b42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypeError()&lt;/code&gt; constructor creates a new error when an operation could not be performed, typically (but not exclusively) when a value is not of the expected type.</source>
          <target state="translated">&lt;code&gt;TypeError()&lt;/code&gt; 생성자가 새로운 오류가 생성하는 값은 예상 된 유형이 아닌 경우의 동작은 일반적으로 (그러나 배타적이지)을 수행 할 수 없을 때.</target>
        </trans-unit>
        <trans-unit id="575d092b96b480ed475a1f84962d0f70fd04b05b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URIError()&lt;/code&gt; constructor creates an error when a global URI handling function was used in a wrong way.</source>
          <target state="translated">&lt;code&gt;URIError()&lt;/code&gt; 전역 URI 처리 함수가 잘못된 방식으로 사용되었을 때 생성자는 오류를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cc62c15ca64f49d9999d62a4fd880330e76b59d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTC()&lt;/code&gt; method differs from the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor in two ways.</source>
          <target state="translated">&lt;code&gt;UTC()&lt;/code&gt; 로부터 방법 다릅니다 &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 두 가지 방법으로 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="e96e7c1ba3af6bf597b02dacb5e14c5345ce82be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTC()&lt;/code&gt; method differs from the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor in two ways:</source>
          <target state="translated">&lt;code&gt;UTC()&lt;/code&gt; 로부터 방법 다릅니다 &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 두 가지 방법으로 생성자 :</target>
        </trans-unit>
        <trans-unit id="6609eff18840916757c7523476758db63621856d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint16Array()&lt;/code&gt; typed array constructor creates an array of 16-bit unsigned integers in the platform byte order.</source>
          <target state="translated">&lt;code&gt;Uint16Array()&lt;/code&gt; 타이핑 어레이 생성자 플랫폼 바이트 순서로 부호없는 16 비트 정수 배열을 생성한다.</target>
        </trans-unit>
        <trans-unit id="fb9add2976643133bf509837ed16ab111d325c38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint16Array()&lt;/code&gt; typed array constructor creates an array of 16-bit unsigned integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint16Array()&lt;/code&gt; 타이핑 어레이 생성자 플랫폼 바이트 순서로 부호없는 16 비트 정수 배열을 생성한다. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f501e8c0da96de248d7c2768914219561bac1f65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint16Array&lt;/code&gt; typed array represents an array of 16-bit unsigned integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint16Array&lt;/code&gt; 는 어레이 플랫폼 바이트 순서로 부호없는 16 비트 정수 배열을 나타내는 입력. 바이트 순서를 제어해야하는 경우 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="732363fc84de78882dd70c2390a6778526d4145b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint32Array()&lt;/code&gt; typed array constructor creates an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint32Array()&lt;/code&gt; 타이핑 어레이 생성자 플랫폼 바이트 순서로 부호없는 32 비트 정수 배열을 생성한다. 바이트 순서에 대한 제어가 필요한 경우 대신 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a55ce5fe99c56fdceacc73b4b134514a93c3d78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint32Array&lt;/code&gt; typed array represents an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instead. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint32Array&lt;/code&gt; 는 어레이 플랫폼 바이트 순서로 부호없는 32 비트 정수 배열을 나타내는 입력. 바이트 순서를 제어해야하는 경우 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e7a10faa037f79f963358f6dd6a1541074b7162" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint8Array()&lt;/code&gt; constructor creates a typed array of 8-bit unsigned integers. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint8Array()&lt;/code&gt; 생성자는 8 비트 부호없는 정수의 형식화 된 배열을 생성한다. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6758579c79dd87294c5dc236825268d167d8b7b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint8Array&lt;/code&gt; typed array represents an array of 8-bit unsigned integers. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint8Array&lt;/code&gt; 는 어레이 8 비트 부호없는 정수의 배열을 나타내는 입력. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6abebccbeb1e104295e95f1f632033454d2017d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint8ClampedArray()&lt;/code&gt; constructor creates a typed array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of [0,255], 0 or 255 will be set instead; if you specify a non-integer, the nearest integer will be set. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint8ClampedArray()&lt;/code&gt; 생성자 0-255 클램핑 8 비트 부호없는 정수의 형식화 된 배열을 생성; [0,255] 범위를 벗어난 값을 지정한 경우 0 또는 255가 대신 설정됩니다. 정수가 아닌 값을 지정하면 가장 가까운 정수가 설정됩니다. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문 (즉, 대괄호 표기법 사용)을 사용하여 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="becefe67b2c4fe9672fcfd14c35de7d3fc5a570d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Uint8ClampedArray&lt;/code&gt; typed array represents an array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of [0,255], 0 or 255 will be set instead; if you specify a non-integer, the nearest integer will be set. The contents are initialized to &lt;code&gt;0&lt;/code&gt;. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</source>
          <target state="translated">&lt;code&gt;Uint8ClampedArray&lt;/code&gt; 는 어레이 0-255 클램핑 8 비트 부호없는 정수의 배열을 나타내는 입력; [0,255] 범위를 벗어난 값을 지정하면 0 또는 255가 대신 설정됩니다. 정수가 아닌 값을 지정하면 가장 가까운 정수가 설정됩니다. 내용은 &lt;code&gt;0&lt;/code&gt; 으로 초기화됩니다 . 일단 설정되면 객체의 메서드를 사용하거나 표준 배열 인덱스 구문을 사용하여 (즉, 대괄호 표기법을 사용하여) 배열의 요소를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fb2bd22750ac4c244ecb35867c5c213cdfa5820" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ValidationError&lt;/code&gt; class doesn't need an explicit constructor, because it doesn't need to do any custom initialization. The default constructor then takes care of initializing the parent &lt;code&gt;Error&lt;/code&gt; from the argument it is given.</source>
          <target state="translated">&lt;code&gt;ValidationError&lt;/code&gt; 의 이 모든 사용자 지정 초기화를 할 필요가 없기 때문에 클래스는 명시 적으로 생성자를 필요로하지 않는다. 그런 다음 기본 생성자 는 주어진 인수에서 부모 &lt;code&gt;Error&lt;/code&gt; 를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="4d8ab9cc4d54446f3c9b497ac9c05163adefc031" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakMap()&lt;/code&gt; creates &lt;code&gt;WeakMap&lt;/code&gt; objects which are a collections of key/value pairs in which the keys are weakly referenced. The keys must be objects and the values can be arbitrary values.</source>
          <target state="translated">&lt;code&gt;WeakMap()&lt;/code&gt; 생성 &lt;code&gt;WeakMap&lt;/code&gt; 키 약하게 참조되는 키 / 값 쌍의 집합 인 오브젝트. 키는 객체 여야하며 값은 임의의 값이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df457713e029746440c719b5ccfea9d29d4cb9ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakMap&lt;/code&gt; object is a collection of key/value pairs in which the keys are weakly referenced. The keys must be objects and the values can be arbitrary values.</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; 의 목적은 키가 약하게 참조되는 키 / 값 쌍의 컬렉션이다. 키는 객체 여야하며 값은 임의의 값일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d06504624ab1755b379a233018475c52e069789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; 의 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f2a82c927fc811246f634f6e76320e7fe3f1f7ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakRef&lt;/code&gt; constructor creates a &lt;a href=&quot;../weakref&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt; object referring to a given target object.</source>
          <target state="translated">&lt;code&gt;WeakRef&lt;/code&gt; 의 생성자는 생성 &lt;a href=&quot;../weakref&quot;&gt; &lt;code&gt;WeakRef&lt;/code&gt; 의&lt;/a&gt; 특정 대상체 참조 개체.</target>
        </trans-unit>
        <trans-unit id="c236d3c5f2543073737a857eeef52803e7b3451d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakSet&lt;/code&gt; constructor lets you create &lt;code&gt;WeakSet&lt;/code&gt; objects that store weakly held &lt;em&gt;objects&lt;/em&gt; in a collection.</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; 의 생성자는 만들 수 있습니다 &lt;code&gt;WeakSet&lt;/code&gt; 는 해당 저장소 약하게 열린 개체 &lt;em&gt;개체를&lt;/em&gt; 컬렉션의.</target>
        </trans-unit>
        <trans-unit id="05a967de80b7c1341e2bcd47fd9edf8ff831ef11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakSet&lt;/code&gt; is &lt;em&gt;weak&lt;/em&gt;, meaning references to objects in a &lt;code&gt;WeakSet&lt;/code&gt; are held &lt;em&gt;weakly&lt;/em&gt;. If no other references to an object stored in the &lt;code&gt;WeakSet&lt;/code&gt; exist, those objects can be garbage collected.</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; 는 이다 &lt;em&gt;약한&lt;/em&gt; A의 객체에 대한 참조 의미 &lt;code&gt;WeakSet&lt;/code&gt; 를 개최 &lt;em&gt;약하게&lt;/em&gt; . &lt;code&gt;WeakSet&lt;/code&gt; 에 저장된 객체에 대한 다른 참조가없는 경우 해당 객체는 가비지 수집 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c11f82ca68af9ed6ac53fcd220f3d8dbaaaf72d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakSet&lt;/code&gt; is &lt;em&gt;weak&lt;/em&gt;: References to objects in the collection are held weakly. If there is no other reference to an object stored in the &lt;code&gt;WeakSet&lt;/code&gt;, they can be garbage collected. That also means that there is no list of current objects stored in the collection. &lt;code&gt;WeakSets&lt;/code&gt; are not enumerable.</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; 는 이다 &lt;em&gt;약한&lt;/em&gt; : 컬렉션의 개체에 대한 참조가 약하게 개최됩니다. &lt;code&gt;WeakSet&lt;/code&gt; 에 저장된 객체에 대한 다른 참조가 없으면 가비지 수집 될 수 있습니다. 또한 컬렉션에 저장된 현재 객체 목록이 없음을 의미합니다. &lt;code&gt;WeakSets&lt;/code&gt; 은 열거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d5058fc0aed6629cbc33fced5d309e3ee1f7316d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakSet&lt;/code&gt; object lets you store weakly held &lt;em&gt;objects&lt;/em&gt; in a collection.</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; 의 객체는 약하게 개최 저장할 수 있습니다 &lt;em&gt;개체를&lt;/em&gt; 컬렉션의.</target>
        </trans-unit>
        <trans-unit id="01d56084580640fa957fcf6427c5232652a130db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; 의 객체입니다.</target>
        </trans-unit>
        <trans-unit id="07c57fbf736027f84dfdd50fe853c7768433eede" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; constructor creates a new &lt;code&gt;Instance&lt;/code&gt; object which is a stateful, executable instance of a &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebAssembly.Instance()&lt;/code&gt; 생성자 신규 작성 &lt;code&gt;Instance&lt;/code&gt; (A)의 상태, 실행 인스턴스 오브젝트 &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5de9fd3cc6e8dabdd717bd904e42dfedd0a6bdd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; constructor function can be called to synchronously instantiate a given &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object, for example:</source>
          <target state="translated">&lt;code&gt;WebAssembly.Instance()&lt;/code&gt; 생성자 함수는 동기 소정의 인스턴스를 호출 할 수 &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; 의&lt;/a&gt; 예를 들면, 오브젝트 :</target>
        </trans-unit>
        <trans-unit id="6b19167d8691315b3dbece31c2ced0d71b37d413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; constructor function can be called to synchronously instantiate a given &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object, for example:</source>
          <target state="translated">&lt;code&gt;WebAssembly.Instance()&lt;/code&gt; 생성자 함수는 동기 소정의 인스턴스를 호출 할 수 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; 의&lt;/a&gt; 예를 들면, 오브젝트 :</target>
        </trans-unit>
        <trans-unit id="a8c89dc484707bb11be96fc5d01e0a0063acb5ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.Instance()&lt;/code&gt; constructor function can be called to synchronously instantiate a given &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object. However, the primary way to get an &lt;code&gt;Instance&lt;/code&gt; is through the asynchronous &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;code&gt;WebAssembly.Instance()&lt;/code&gt; 생성자 함수는 동기 소정의 인스턴스를 호출 할 수 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; 의&lt;/a&gt; 개체. 그러나 &lt;code&gt;Instance&lt;/code&gt; 를 얻는 기본 방법 은 비동기 &lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; 함수를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c474af89d48dbd8dc6e33361f4dae8dcb36afb6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.Module()&lt;/code&gt; constructor function can be called to synchronously compile given WebAssembly binary code. However, the primary way to get a &lt;code&gt;Module&lt;/code&gt; is through an asynchronous compilation function like &lt;a href=&quot;../compile&quot;&gt;&lt;code&gt;WebAssembly.compile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebAssembly.Module()&lt;/code&gt; 생성자 함수는 동 기적으로 컴파일 주어진 WebAssembly 바이너리 코드로 호출 할 수 있습니다. 그러나 &lt;code&gt;Module&lt;/code&gt; 을 얻는 기본 방법 은 &lt;a href=&quot;../compile&quot;&gt; &lt;code&gt;WebAssembly.compile()&lt;/code&gt; &lt;/a&gt; 과 같은 비동기 컴파일 함수를 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="1779e4a491c4f3df0ac84833467090497eb4acd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.Module.exports()&lt;/code&gt; function returns an array containing descriptions of all the declared exports of the given &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebAssembly.Module.exports()&lt;/code&gt; 함수는 주어진 모든 선언 수출에 대한 설명이 포함 된 배열을 반환 &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="746454bbc6aa0029ec241e2f0b5fa6b446439790" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.compile()&lt;/code&gt; function compiles WebAssembly binary code into a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object. This function is useful if it is necessary to a compile a module before it can be instantiated (otherwise, the &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt; function should be used).</source>
          <target state="translated">&lt;code&gt;WebAssembly.compile()&lt;/code&gt; 함수는로 WebAssembly 바이너리 코드를 컴파일 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; 의&lt;/a&gt; 객체입니다. 이 함수는 인스턴스화되기 전에 모듈을 컴파일 &lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt; 경우 유용합니다 (그렇지 않으면 WebAssembly.instantiate () 함수를 사용해야합니다).</target>
        </trans-unit>
        <trans-unit id="431715582373fc3771aab674c546503fbe9712d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.compile()&lt;/code&gt; function compiles a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; from WebAssembly binary code. This function is useful if it is necessary to a compile a module before it can be instantiated (otherwise, the &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt; function should be used).</source>
          <target state="translated">&lt;code&gt;WebAssembly.compile()&lt;/code&gt; 함수는 컴파일 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; WebAssembly 바이너리 코드에서합니다. 이 함수는 모듈을 인스턴스화하기 전에 모듈을 컴파일 &lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt; 경우에 유용합니다 (그렇지 않으면 WebAssembly.instantiate () 함수를 사용해야 함).</target>
        </trans-unit>
        <trans-unit id="88cbd7022f0dc142a0272f425d6433132bf50d15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; function compiles a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; directly from a streamed underlying source. This function is useful if it is necessary to a compile a module before it can be instantiated (otherwise, the &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; function should be used).</source>
          <target state="translated">&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; 함수는 컴파일 &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; A는 기본 소스를 스트리밍에서 직접합니다. 이 함수는 모듈을 인스턴스화하기 전에 모듈을 컴파일 &lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; 경우에 유용합니다 (그렇지 않으면 WebAssembly.instantiateStreaming () 함수를 사용해야 함).</target>
        </trans-unit>
        <trans-unit id="08567726bd617fa9035a47d055a4d3216e2c81e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.customSections()&lt;/code&gt; function returns a copy of the contents of all custom sections in the given module with the given string name.</source>
          <target state="translated">&lt;code&gt;WebAssembly.customSections()&lt;/code&gt; 함수는 주어진 문자열 이름으로 주어진 모듈에서 모든 사용자 지정 섹션의 내용의 카피를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="e0625c0520f6ee2a799a7c133d2cafd74185c195" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.exports()&lt;/code&gt; function returns an array containing descriptions of all the declared exports of the given &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebAssembly.exports()&lt;/code&gt; 함수는 주어진 모든 선언 수출에 대한 설명이 포함 된 배열을 반환 &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="160b1badc18cb49f8201fc4bef67fddd7d3b9e66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.imports()&lt;/code&gt; function returns an array containing descriptions of all the declared imports of the given &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebAssembly.imports()&lt;/code&gt; 함수는 소정의 선언 된 모든 수입품의 설명 포함한 배열 반환 &lt;code&gt;Module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e6f8615f0734b1d5bb89170d09bfbbcd77c103b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; function allows you to compile and instantiate WebAssembly code. This function has two overloads:</source>
          <target state="translated">&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; 함수를 사용하고 인스턴스화 WebAssembly 코드를 컴파일 할 수 있습니다. 이 기능에는 두 가지 과부하가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f11662796a3c2b4d0cc4297914cb2e15741dc2ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; function compiles and instantiates a WebAssembly module directly from a streamed underlying source. This is the most efficient, optimized way to load wasm code.</source>
          <target state="translated">&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; 함수를 컴파일하고,이 기본 스트리밍 소스로부터 직접 WebAssembly 모듈을 인스턴스화. 이것은 wasm 코드를로드하는 가장 효율적이고 최적화 된 방법입니다.</target>
        </trans-unit>
        <trans-unit id="513a4a761419c3c18faafd5f4a429e08153aa790" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.validate()&lt;/code&gt; function validates a given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; of WebAssembly binary code, returning whether the bytes form a valid wasm module (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;WebAssembly.validate()&lt;/code&gt; 함수는 주어진 유효화 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;입력 어레이&lt;/a&gt; 바이트가 유효한 wasm 모듈 (형성 여부 복귀 WebAssembly 이진 코드가 &lt;code&gt;true&lt;/code&gt; ) 아닌지 ( &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e05f127fcbbc412eb71c1d7d878b0b2b4490a0f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly.validate()&lt;/code&gt; function validates a given &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; of WebAssembly binary code, returning whether the bytes form a valid wasm module (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;WebAssembly.validate()&lt;/code&gt; 함수는 주어진 유효화 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;입력 어레이&lt;/a&gt; 바이트가 유효한 wasm 모듈 (형성 여부 복귀 WebAssembly 이진 코드가 &lt;code&gt;true&lt;/code&gt; ) 아닌지 ( &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b7b528dd62767beb2683a49d53c7b5236878ea86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebAssembly&lt;/code&gt; JavaScript object acts as the namespace for all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;-related functionality.</source>
          <target state="translated">&lt;code&gt;WebAssembly&lt;/code&gt; 자바 스크립트 객체는 모든 네임 스페이스 역할을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly&quot;&gt;WebAssembly&lt;/a&gt; - 관련 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5f7a8cc3a9371437a23053a36f921a1730e516bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@iterator]()&lt;/code&gt; method returns a new &lt;code&gt;Iterator&lt;/code&gt; object that iterates over the code points of a String value, returning each code point as a String value.</source>
          <target state="translated">&lt;code&gt;[@@iterator]()&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;Iterator&lt;/code&gt; 문자열 값의 코드 점을 반복은 문자열 값으로 각 코드 포인트를 반환한다는 목적.</target>
        </trans-unit>
        <trans-unit id="bfc2d57abb1c246e016242de058c7fba1308173e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@matchAll]&lt;/code&gt; method returns all matches of the regular expression against a string.</source>
          <target state="translated">&lt;code&gt;[@@matchAll]&lt;/code&gt; 방법은 문자열에 대한 정규 표현식의 모든 일치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7edbb6e8ed718ecee2482e335fb5718a48701f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@match]()&lt;/code&gt; method retrieves the matches when matching a &lt;em&gt;string&lt;/em&gt; against a &lt;em&gt;regular expression&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;[@@match]()&lt;/code&gt; 일치하는 경우에있어서, 상기 일치하는 검색 &lt;em&gt;문자열&lt;/em&gt; 대하여 &lt;em&gt;정규 표현&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5803ecea92c3c2ee4eed4f00d6d6c5bc4cd46f5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@replace]()&lt;/code&gt; method replaces some or all matches of a &lt;code&gt;this&lt;/code&gt; pattern in a string by a &lt;code&gt;replacement&lt;/code&gt;, and returns the result of the replacement as a new string. The &lt;code&gt;replacement&lt;/code&gt; can be a string or a function to be called for each match.</source>
          <target state="translated">&lt;code&gt;[@@replace]()&lt;/code&gt; 메소드는 일부 또는 전부 일치 대체 &lt;code&gt;this&lt;/code&gt; a로 문자열 패턴을 &lt;code&gt;replacement&lt;/code&gt; 하고, 새로운 캐릭터로 여분의 결과를 반환한다. &lt;code&gt;replacement&lt;/code&gt; 문자열이나 함수가 각각 경기를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="702debe49ebbe75d5bd74b0679e78ca35620a7da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@search]()&lt;/code&gt; method executes a search for a match between a &lt;code&gt;this&lt;/code&gt; regular expression and a string.</source>
          <target state="translated">&lt;code&gt;[@@search]()&lt;/code&gt; 메소드는가 일치하는 검색 실행 &lt;code&gt;this&lt;/code&gt; 정규 표현식, 문자열.</target>
        </trans-unit>
        <trans-unit id="6b8c4cfaddc77f1249280ab915686e7bb63bc284" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@split]()&lt;/code&gt; method splits a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object into an array of strings by separating the string into substrings.</source>
          <target state="translated">&lt;code&gt;[@@split]()&lt;/code&gt; 메소드는 분할 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 문자열에 문자열을 분리하여 문자열 배열로 개체.</target>
        </trans-unit>
        <trans-unit id="57d0711b727cf96106cc06a9d3206ed0c607874f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; method of &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; returns the primitive value of a Symbol object as a Symbol data type. The &lt;code&gt;&lt;var&gt;hint&lt;/var&gt;&lt;/code&gt; argument is not used.</source>
          <target state="translated">&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; 메서드 는 Symbol 객체의 프리미티브 값을 Symbol 데이터 유형으로 반환합니다. &lt;code&gt;&lt;var&gt;hint&lt;/var&gt;&lt;/code&gt; 인수는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a9e1a3950618acc993f18874eb3cd0cc985d8f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; method of &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; returns the primitive value of a Symbol object as a Symbol data type. The &lt;code&gt;hint&lt;/code&gt; argument is not used.</source>
          <target state="translated">&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; 메서드 는 Symbol 객체의 프리미티브 값을 Symbol 데이터 형식으로 반환합니다. &lt;code&gt;hint&lt;/code&gt; 인수는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad1db902e858dd1bcd93073c9aef8c9165d1cf55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; method of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object returns a primitive value, that is either of type number or of type string.</source>
          <target state="translated">&lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;code&gt;[@@toPrimitive]()&lt;/code&gt; 메서드는 숫자 유형 또는 문자열 유형의 기본 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b28a29fc756fcf0025c3db9b78afd42a0d22df6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__defineGetter__&lt;/code&gt; allows a &lt;a href=&quot;../../functions/get&quot;&gt;getter&lt;/a&gt; to be defined on a pre-existing object.</source>
          <target state="translated">&lt;code&gt;__defineGetter__&lt;/code&gt; 는 수 &lt;a href=&quot;../../functions/get&quot;&gt;게터는&lt;/a&gt; 기존의 객체를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae55b862b874f5aa4c190fb07cb31113ac34fd4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__defineGetter__&lt;/code&gt; allows a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/get&quot;&gt;getter&lt;/a&gt; to be defined on a pre-existing object.</source>
          <target state="translated">&lt;code&gt;__defineGetter__&lt;/code&gt; 는 수 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/get&quot;&gt;게터는&lt;/a&gt; 기존의 객체를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1157c7003683b6c311dbe7eca970ea264556f2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__defineSetter__&lt;/code&gt; method allows a &lt;a href=&quot;../../functions/set&quot;&gt;setter&lt;/a&gt; to be defined on a pre-existing object.</source>
          <target state="translated">&lt;code&gt;__defineSetter__&lt;/code&gt; 의 방법은 허용 &lt;a href=&quot;../../functions/set&quot;&gt;세터&lt;/a&gt; 기존 객체에 정의된다.</target>
        </trans-unit>
        <trans-unit id="df282761b2e5875f7eb96f9bb6d34ddc61ba61d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__defineSetter__&lt;/code&gt; method allows a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/set&quot;&gt;setter&lt;/a&gt; to be defined on a pre-existing object.</source>
          <target state="translated">&lt;code&gt;__defineSetter__&lt;/code&gt; 의 방법은 허용 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/set&quot;&gt;세터&lt;/a&gt; 기존 객체에 정의된다.</target>
        </trans-unit>
        <trans-unit id="91949a7e1639439b8baf4901779dad2c5580d19c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__lookupGetter__&lt;/code&gt; method returns the function bound as a getter to the specified property.</source>
          <target state="translated">&lt;code&gt;__lookupGetter__&lt;/code&gt; 의 메소드가 리턴 지정된 속성에 게터로 바인딩 기능.</target>
        </trans-unit>
        <trans-unit id="ec6e37c056caa5cf74a1e15165b33080dd8a98c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__lookupSetter__&lt;/code&gt; method returns the function bound as a setter to the specified property.</source>
          <target state="translated">&lt;code&gt;__lookupSetter__&lt;/code&gt; 의 메소드가 리턴 지정된 속성에 세터로 바인딩 기능.</target>
        </trans-unit>
        <trans-unit id="9e83b869ae8eb811d6cb6be8d47b29da6a842e66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; getter function exposes the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object. For objects created using an object literal, this value is &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt;. For objects created using array literals, this value is &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt;. For functions, this value is &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;. For objects created using &lt;code&gt;new fun&lt;/code&gt;, where &lt;code&gt;fun&lt;/code&gt; is one of the built-in constructor functions provided by JavaScript (&lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and so on &amp;mdash; including new constructors added as JavaScript evolves), this value is always &lt;code&gt;fun.prototype&lt;/code&gt;. For objects created using &lt;code&gt;new fun&lt;/code&gt;, where &lt;code&gt;fun&lt;/code&gt; is a function defined in a script, this value is the value of &lt;code&gt;fun.prototype&lt;/code&gt;. (That is, if the constructor didn't return an other object explicitly, or the &lt;code&gt;fun.prototype&lt;/code&gt; has been reassigned since the instance was created.)</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; 의 게터 기능은 내부의 노출 값 &lt;code&gt;[[Prototype]]&lt;/code&gt; 물체한다. 객체 리터럴을 사용하여 생성 된 객체의 경우이 값은 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 입니다. 배열 리터럴을 사용하여 생성 된 객체의 경우이 값은 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype&quot;&gt; &lt;code&gt;Array.prototype&lt;/code&gt; &lt;/a&gt; 입니다. 함수의 경우이 값은 &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;/a&gt; 입니다. &lt;code&gt;new fun&lt;/code&gt; 을 사용하여 만든 객체의 경우, &lt;code&gt;fun&lt;/code&gt; 은 JavaScript에서 제공하는 내장 생성자 함수 중 하나입니다 ( &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;등 &lt;code&gt;fun.prototype&lt;/code&gt; 가 발전함에 따라 추가 된 새 생성자를 포함하여)이 값은 항상 fun.prototype 입니다. &lt;code&gt;new fun&lt;/code&gt; 을 사용하여 생성 된 객체의 경우 &lt;code&gt;fun&lt;/code&gt; 이 스크립트에 정의 된 함수 인 경우이 값은 &lt;code&gt;fun.prototype&lt;/code&gt; 의 값입니다 . (즉, 생성자가 명시 적으로 다른 객체를 반환하지 않았거나 인스턴스가 생성 된 이후에 &lt;code&gt;fun.prototype&lt;/code&gt; 이 재 할당 된 경우)</target>
        </trans-unit>
        <trans-unit id="88656395b7a7a6c591f6a0068a0e8a228ecb8c3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; getter function exposes the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object. For objects created using an object literal, this value is &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt;. For objects created using array literals, this value is &lt;a href=&quot;../array/prototype&quot;&gt;&lt;code&gt;Array.prototype&lt;/code&gt;&lt;/a&gt;. For functions, this value is &lt;a href=&quot;../function/prototype&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;. For objects created using &lt;code&gt;new fun&lt;/code&gt;, where &lt;code&gt;fun&lt;/code&gt; is one of the built-in constructor functions provided by JavaScript (&lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and so on &amp;mdash; including new constructors added as JavaScript evolves), this value is always &lt;code&gt;fun.prototype&lt;/code&gt;. For objects created using &lt;code&gt;new fun&lt;/code&gt;, where &lt;code&gt;fun&lt;/code&gt; is a function defined in a script, this value is the value of &lt;code&gt;fun.prototype&lt;/code&gt;. (That is, if the constructor didn't return an other object explicitly, or the &lt;code&gt;fun.prototype&lt;/code&gt; has been reassigned since the instance was created).</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; 의 게터 기능은 내부의 노출 값 &lt;code&gt;[[Prototype]]&lt;/code&gt; 물체한다. 객체 리터럴을 사용하여 생성 된 객체의 경우이 값은 &lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 입니다. 배열 리터럴을 사용하여 생성 된 객체의 경우이 값은 &lt;a href=&quot;../array/prototype&quot;&gt; &lt;code&gt;Array.prototype&lt;/code&gt; &lt;/a&gt; 입니다. 함수의 경우이 값은 &lt;a href=&quot;../function/prototype&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;/a&gt; 입니다. &lt;code&gt;new fun&lt;/code&gt; 사용하여 만든 객체의 경우 &lt;code&gt;fun&lt;/code&gt; 은 JavaScript에서 제공하는 내장 생성자 함수 중 하나입니다 ( &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;JavaScript가 발전함에 따라 추가 된 새로운 생성자를 포함하여)이 값은 항상 &lt;code&gt;fun.prototype&lt;/code&gt; 입니다. 사용하여 생성 된 객체의 &lt;code&gt;new fun&lt;/code&gt; , &lt;code&gt;fun&lt;/code&gt; 스크립트에서 정의 된 함수입니다,이 값은의 값입니다 &lt;code&gt;fun.prototype&lt;/code&gt; 은 . 즉, 생성자가 다른 객체를 명시 적으로 반환하지 않았거나 인스턴스가 생성 된 후 &lt;code&gt;fun.prototype&lt;/code&gt; 이 다시 할당 된 경우입니다.</target>
        </trans-unit>
        <trans-unit id="9a4587848d9799cdf3cf0840f3aad39f67d2da66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; property can also be used in an object literal definition to set the object &lt;code&gt;[[Prototype]]&lt;/code&gt; on creation, as an alternative to &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;. See: &lt;a href=&quot;../../operators/object_initializer&quot;&gt;object initializer / literal syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; 속성은 또한 개체를 설정하는 것을 목적으로 문자 정의에 사용될 수있다 &lt;code&gt;[[Prototype]]&lt;/code&gt; 생성에 대한 대안으로서 &lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../../operators/object_initializer&quot;&gt;객체 이니셜 라이저 / 리터럴 구문을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f01554c07978243a327d32cc0fb3e81ab8df53a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; property is a simple accessor property on &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; consisting of a getter and setter function. A property access for &lt;code&gt;__proto__&lt;/code&gt; that eventually consults &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; will find this property, but an access that does not consult &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; will not. If some other &lt;code&gt;__proto__&lt;/code&gt; property is found before &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; is consulted, that property will hide the one found on &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; 속성에 간단한 접근 속성이다 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; 에&lt;/a&gt; 게터와 세터 기능 이루어지는. 결국 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 을 참조하는 &lt;code&gt;__proto__&lt;/code&gt; 에 대한 속성 액세스 는 이 속성을 찾을 수 있지만 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 을 참조하지 않는 액세스 는 그렇지 않습니다. &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 이 참조 되기 전에 다른 &lt;code&gt;__proto__&lt;/code&gt; 속성이 발견 되면 해당 속성은 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 에서 찾은 속성을 숨 깁니다 .</target>
        </trans-unit>
        <trans-unit id="d227e2d5482783082d004650b511f91313f8e959" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; property is a simple accessor property on &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; consisting of a getter and setter function. A property access for &lt;code&gt;__proto__&lt;/code&gt; that eventually consults &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; will find this property, but an access that does not consult &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; will not find it. If some other &lt;code&gt;__proto__&lt;/code&gt; property is found before &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; is consulted, that property will hide the one found on &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; 속성에 간단한 접근 속성이다 &lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; 에&lt;/a&gt; 게터와 세터 기능 이루어지는. &lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 을 참조하는 &lt;code&gt;__proto__&lt;/code&gt; 에 대한 속성 액세스 는 이 속성을 찾을 수 있지만 &lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 을 참조하지 않는 액세스는 찾을 수 없습니다. &lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 을 참조 하기 전에 다른 &lt;code&gt;__proto__&lt;/code&gt; 속성을 찾은 경우 해당 속성은 &lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 에서 찾은 속성을 숨 깁니다 .</target>
        </trans-unit>
        <trans-unit id="13e34525ec53941304dfb09e50672808ce8fef34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; property of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; is an accessor property (a getter function and a setter function) that exposes the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; (either an object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;) of the object through which it is accessed.</source>
          <target state="translated">&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;__proto__&lt;/code&gt; 속성은 액세스되는 객체 의 내부 &lt;code&gt;[[Prototype]]&lt;/code&gt; (객체 또는 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; ) 을 노출하는 접근 자 속성 (게터 함수 및 setter 함수)입니다 .</target>
        </trans-unit>
        <trans-unit id="79b845be957203ffd43b7971d99febd2b76a1f2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; property of &lt;a href=&quot;prototype&quot;&gt;&lt;code&gt;Object.prototype&lt;/code&gt;&lt;/a&gt; is an accessor property (a getter function and a setter function) that exposes the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; (either an object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;) of the object through which it is accessed.</source>
          <target state="translated">&lt;a href=&quot;prototype&quot;&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;__proto__&lt;/code&gt; 속성은 접근하는 객체 의 내부 &lt;code&gt;[[Prototype]]&lt;/code&gt; (객체 또는 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; ) 을 노출하는 접근 자 속성 (게터 함수 및 세터 함수)입니다 .</target>
        </trans-unit>
        <trans-unit id="073f9279702f70da18b8d56744e49fc289cd7b00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__proto__&lt;/code&gt; setter allows the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object to be mutated. The object must be extensible according to &lt;a href=&quot;isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;: if it is not, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown. The value provided must be an object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;. Providing any other value will do nothing.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; 세터는 허용 &lt;code&gt;[[Prototype]]&lt;/code&gt; 물체의 변이한다. &lt;a href=&quot;isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; 에 따라 객체를 확장 할 수 있어야합니다 . 그렇지 않은 경우 &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 제공된 값은 객체이거나 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 이어야합니다 . 다른 가치를 제공하는 것은 아무 것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c07147f2b9048881cd5e4b8396d70019ad6825b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add()&lt;/code&gt; method appends a new element with a specified value to the end of a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;add()&lt;/code&gt; 메소드는 (A)의 단부에 소정의 값을 갖는 새로운 요소에 추가 &lt;code&gt;Set&lt;/code&gt; 오브젝트.</target>
        </trans-unit>
        <trans-unit id="6e1095545cb3cf8f590cf6c8c8ea4694fabc7da9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;anchor()&lt;/code&gt; method creates a string beginning with an &lt;code&gt;&amp;lt;a name=&quot;...&quot;&amp;gt;&lt;/code&gt; start tag, then some text, and then an &lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt; end tag.</source>
          <target state="translated">&lt;code&gt;anchor()&lt;/code&gt; 메소드는로 시작하는 문자열을 생성 &lt;code&gt;&amp;lt;a name=&quot;...&quot;&amp;gt;&lt;/code&gt; 태그를 시작한 다음 텍스트 한 다음 &lt;code&gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 에 종료 태그를.</target>
        </trans-unit>
        <trans-unit id="bcffaf9d58caee22bc68a42b2ea1dc4874960802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;anchor()&lt;/code&gt; method creates an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML anchor element that is used as a hypertext target.</source>
          <target state="translated">&lt;code&gt;anchor()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; 하이퍼 대상으로 사용되는 HTML 앵커 요소.</target>
        </trans-unit>
        <trans-unit id="6b5ded0c0c3484ec99d783e3d117fef2a429d15f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply()&lt;/code&gt; method can return any value.</source>
          <target state="translated">&lt;code&gt;apply()&lt;/code&gt; 메소드는 임의의 값을 반환 할 수있다.</target>
        </trans-unit>
        <trans-unit id="301e17caff65a70e4a97e5350f7b3f0e8277e90f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply&lt;/code&gt; method can return any value.</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; 방법은 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="651ec3657f151b026dde895f6eebe20fcc7c3a26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments.callee&lt;/code&gt; property contains the currently executing function.</source>
          <target state="translated">&lt;code&gt;arguments.callee&lt;/code&gt; 를 속성은 현재 실행중인 기능이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1aa534c48a7543729c424e8c8ec09cadd669f68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments.length&lt;/code&gt; property contains the number of arguments passed to the function.</source>
          <target state="translated">&lt;code&gt;arguments.length&lt;/code&gt; 속성은 함수에 전달 된 인수의 수를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="59bbb7f7119de36cfcf32641ad6d77b38553ba5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="cddfc2bc8a7e8c4c52b64a81d0fc5361db444af6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object can be used in conjunction with &lt;a href=&quot;rest_parameters&quot;&gt;rest&lt;/a&gt;, &lt;a href=&quot;default_parameters&quot;&gt;default&lt;/a&gt;, and &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;destructured&lt;/a&gt; parameters.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 객체와 함께 사용할 수 있습니다 &lt;a href=&quot;rest_parameters&quot;&gt;나머지&lt;/a&gt; , &lt;a href=&quot;default_parameters&quot;&gt;기본&lt;/a&gt; 및 &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;탈구&lt;/a&gt; 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="877c208f7d002dc141da387b6f4f9923eebda614" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object has additional functionality specific to itself (like the &lt;code&gt;callee&lt;/code&gt; property).</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 목적 (등 자체 추가 기능의 특정이 &lt;code&gt;callee&lt;/code&gt; 속성).</target>
        </trans-unit>
        <trans-unit id="de7416d2f1a54cc00d34e4090f0804f480035d05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object is &lt;strong&gt;not a real array&lt;/strong&gt;, while rest parameters are &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; instances, meaning methods like &lt;a href=&quot;../global_objects/array/sort&quot;&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/array/pop&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; can be applied on it directly;</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 목적은 &lt;strong&gt;실제 배열이 아닌&lt;/strong&gt; 나머지 매개 변수가있는 동안, &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 인스턴스를 의미하는 방법이 좋아, &lt;a href=&quot;../global_objects/array/sort&quot;&gt; &lt;code&gt;sort&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/array/foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../global_objects/array/pop&quot;&gt; &lt;code&gt;pop&lt;/code&gt; &lt;/a&gt; 직접 적용 할 수있다;</target>
        </trans-unit>
        <trans-unit id="a141af77cbe04a88a45af296fd49cc1fdd744329" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object is a local variable available within all non-&lt;a href=&quot;arrow_functions&quot;&gt;arrow&lt;/a&gt; functions. You can refer to a function's arguments inside that function by using its &lt;code&gt;arguments&lt;/code&gt; object. It has entries for each argument the function was called with, with the first entry's index at 0.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 목적은 모든 가능한 비 내의 로컬 변수 &lt;a href=&quot;arrow_functions&quot;&gt;화살표&lt;/a&gt; 기능한다. &lt;code&gt;arguments&lt;/code&gt; 객체 를 사용하여 해당 함수 내에서 함수의 인수를 참조 할 수 있습니다 . 함수가 호출 된 각 인수에 대한 항목이 있으며 첫 번째 항목의 색인은 0입니다.</target>
        </trans-unit>
        <trans-unit id="58b05581959157635335b3f8d2066b814108ef88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object is a local variable available within all non-&lt;a href=&quot;arrow_functions&quot;&gt;arrow&lt;/a&gt; functions. You can refer to a function's arguments inside that function by using its &lt;code&gt;arguments&lt;/code&gt; object. It has entries for each argument the function was called with, with the first entry's index at &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 목적은 모든 가능한 비 내의 로컬 변수 &lt;a href=&quot;arrow_functions&quot;&gt;화살표&lt;/a&gt; 기능한다. &lt;code&gt;arguments&lt;/code&gt; 객체 를 사용하여 해당 함수 내에서 함수의 인수를 참조 할 수 있습니다 . 함수가 호출 된 각 인수에 대한 항목이 있으며 첫 번째 항목의 인덱스는 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="60575e89f78ff2e0d50e081c0acd7b31a68e8313" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object is not an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. It is similar, but does not have any &lt;code&gt;Array&lt;/code&gt; properties except &lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;. For example, it does not have the &lt;code&gt;&lt;a href=&quot;../global_objects/array/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; method. However, it can be converted to a real &lt;code&gt;Array&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 객체가 아닌 &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; . 비슷하지만 &lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 이외의 &lt;code&gt;Array&lt;/code&gt; 속성 은 없습니다 . 예를 들어, &lt;code&gt;&lt;a href=&quot;../global_objects/array/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 메소드 가 없습니다 . 그러나 실제 &lt;code&gt;Array&lt;/code&gt; 로 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0bd501ab0bd99f424367a9ed9b4e1ad0fc70bd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object is not an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. It is similar, but lacks all &lt;code&gt;Array&lt;/code&gt; properties except &lt;a href=&quot;../global_objects/array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;. For example, it does not have the &lt;a href=&quot;../global_objects/array/pop&quot;&gt;&lt;code&gt;pop()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 객체가 아닌 &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; . 비슷하지만 &lt;a href=&quot;../global_objects/array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; 를&lt;/a&gt; 제외한 모든 &lt;code&gt;Array&lt;/code&gt; 속성 이 없습니다 . 예를 들어, &lt;a href=&quot;../global_objects/array/pop&quot;&gt; &lt;code&gt;pop()&lt;/code&gt; &lt;/a&gt; 메서드 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b0c13cabda17c26833593c14b4caf83a6b7368d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object is useful for functions called with more arguments than they are formally declared to accept. This technique is useful for functions that can be passed a variable number of arguments, such as &lt;a href=&quot;../global_objects/math/min&quot;&gt;&lt;code&gt;Math.min()&lt;/code&gt;&lt;/a&gt;. This example function accepts any number of string arguments and returns the longest one:</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 목적은 공식적으로 받아 들일 선언보다 더 많은 인수로 호출되는 함수에 유용합니다. 이 기술은 &lt;a href=&quot;../global_objects/math/min&quot;&gt; &lt;code&gt;Math.min()&lt;/code&gt; &lt;/a&gt; 과 같이 가변 개수의 인수를 전달할 수있는 함수에 유용합니다 . 이 예제 함수는 여러 문자열 인수를 허용하고 가장 긴 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3dd0f883876fb508ee5f1ca7705e886193257634" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;arguments&lt;/code&gt; object is useful for functions called with more arguments than they are formally declared to accept. This technique is useful for functions that can be passed a variable number of arguments, such as &lt;code&gt;&lt;a href=&quot;../global_objects/math/min&quot;&gt;Math.min()&lt;/a&gt;&lt;/code&gt;. This example function accepts any number of string arguments and returns the longest one:</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 목적은 공식적으로 받아 들일 선언보다 더 많은 인수로 호출되는 함수에 유용합니다. 이 기술은 &lt;code&gt;&lt;a href=&quot;../global_objects/math/min&quot;&gt;Math.min()&lt;/a&gt;&lt;/code&gt; 과 같이 다양한 개수의 인수를 전달할 수있는 함수에 유용합니다 . 이 예제 함수는 많은 수의 문자열 인수를 허용하고 가장 긴 인수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="50f2fe5d7c6bfb8cfe3c7ec7d417908818ff38e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;async function&lt;/code&gt; defines an async function expression.</source>
          <target state="translated">&lt;code&gt;async function&lt;/code&gt; 비동기 함수 표현식을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e4765d37e0ea2da1075b6c56191e186797071e82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;async function&lt;/code&gt; keyword can be used to define &lt;code&gt;async&lt;/code&gt; functions inside expressions.</source>
          <target state="translated">&lt;code&gt;async function&lt;/code&gt; 키워드는 정의 할 수 있습니다 &lt;code&gt;async&lt;/code&gt; 식의 내부 기능을.</target>
        </trans-unit>
        <trans-unit id="41545b3d9faec85b5211c3d912f75615a0f76938" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;await&lt;/code&gt; expression causes &lt;code&gt;async&lt;/code&gt; function execution to pause until a &lt;code&gt;Promise&lt;/code&gt; is resolved, that is fulfilled or rejected, and to resume execution of the &lt;code&gt;async&lt;/code&gt; function after fulfillment. When resumed, the value of the &lt;code&gt;await&lt;/code&gt; expression is that of the fulfilled &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; 를 표현 원인 &lt;code&gt;async&lt;/code&gt; 때까지 함수 실행을 일시 중지 &lt;code&gt;Promise&lt;/code&gt; 성취 또는 거부하고, 실행 다시 시작되는, 해결 &lt;code&gt;async&lt;/code&gt; 이행 후 기능. 재개되면 &lt;code&gt;await&lt;/code&gt; 식 의 값은 이행 된 &lt;code&gt;Promise&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="8ef7016143e60d983133d74b3bae74ea5accedab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;await&lt;/code&gt; expression causes &lt;code&gt;async&lt;/code&gt; function execution to pause until a &lt;code&gt;Promise&lt;/code&gt; is settled (that is, fulfilled or rejected), and to resume execution of the &lt;code&gt;async&lt;/code&gt; function after fulfillment. When resumed, the value of the &lt;code&gt;await&lt;/code&gt; expression is that of the fulfilled &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; 식은 발생 &lt;code&gt;async&lt;/code&gt; 기능의 실행이 일시까지 &lt;code&gt;Promise&lt;/code&gt; 정착된다 (성취되거나 거부된다), 및 실행 재개 &lt;code&gt;async&lt;/code&gt; 이행 후에 기능. 재개되면 &lt;code&gt;await&lt;/code&gt; 표현식 의 값은 이행 된 &lt;code&gt;Promise&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="8cfeb0eda29b84ea7635cf75fd27033e73ee3c55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;await&lt;/code&gt; keyword is only valid inside async functions. If you use it outside of an async function's body, you will get a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; 를 키워드는 유효 내부 비동기 기능입니다. 비동기 함수의 본문 외부에서 사용하면 &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3c1fc437d45803033cc9f40384b0bba97c9f9319" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;await&lt;/code&gt; operator is used to wait for a &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. It can only be used inside an &lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; 운전자는 기다리는 데 사용되는 &lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async function&lt;/code&gt; &lt;/a&gt; 내에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b476f578e38d80f45dbe153e1487f74e1f2f140" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;big()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt;&lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in a big font.</source>
          <target state="translated">&lt;code&gt;big()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt; &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; &lt;/a&gt; 큰 폰트에 표시되는 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="6cf4b219e7051fd22d421c7f26c2bf459b1d1838" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;big()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt;&lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in a big font.</source>
          <target state="translated">&lt;code&gt;big()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt; &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; &lt;/a&gt; 큰 폰트에 표시되는 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="3af4ea81fb69059eb53ae61ff126bfcb192cbde2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;big()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;big&amp;gt;str&amp;lt;/big&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;big()&lt;/code&gt; 메소드는 문자열 내장 &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; 태그를 : &lt;code&gt;&quot;&amp;lt;big&amp;gt;str&amp;lt;/big&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65f0cf40ac04891057dcdb289b20c987b9e72ac0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bind()&lt;/code&gt; function creates a new &lt;strong&gt;bound function&lt;/strong&gt;, which is an &lt;em&gt;exotic function object&lt;/em&gt; (a term from ECMAScript 2015) that wraps the original function object. Calling the bound function generally results in the execution of its wrapped function.</source>
          <target state="translated">&lt;code&gt;bind()&lt;/code&gt; 함수는 새로 생성 &lt;strong&gt;경계 기능&lt;/strong&gt; 이다 &lt;em&gt;외래 함수 오브젝트&lt;/em&gt; 원래 함수 객체를 래핑 (ECMAScript를 2,015에서 용어). 바인딩 된 함수를 호출하면 일반적으로 래핑 된 함수가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2a8e00a25499e30efadb3dddfe9a14410a06bc7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bind&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;bind&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="8132b3a6967af37f37dd3ef765aab50d8c11c583" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blink()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt;&lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to blink.</source>
          <target state="translated">&lt;code&gt;blink()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt; &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; &lt;/a&gt; 깜박 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="586e8746ca2b78acc65cbafe4c9d63fb64132f0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blink()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt;&lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to blink.</source>
          <target state="translated">&lt;code&gt;blink()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/blink&quot;&gt; &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; &lt;/a&gt; 깜박 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="3cd0f81d248508c433f8fce895a74aa073df7ead" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blink()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;blink&amp;gt;str&amp;lt;/blink&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;blink()&lt;/code&gt; 메소드는 문자열 매립 &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; 태그 : &lt;code&gt;&quot;&amp;lt;blink&amp;gt;str&amp;lt;/blink&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d21b9bdcf585076eb4f96378bf162b67dd2602a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bold()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as bold.</source>
          <target state="translated">&lt;code&gt;bold()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt; &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; &lt;/a&gt; 굵게 표시 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="c070e250023ede42a9e053c7ac295ff337d44de7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bold()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as bold.</source>
          <target state="translated">&lt;code&gt;bold()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt; &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; &lt;/a&gt; 굵게 표시 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="711ba8bfc713db15b64fe905729caa25c32b4e76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bold()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;b&amp;gt;str&amp;lt;/b&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bold()&lt;/code&gt; 메소드는 문자열 매립 &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; 태그 : &lt;code&gt;&quot;&amp;lt;b&amp;gt;str&amp;lt;/b&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7441f09fd242afe09a0870fa34657501f6b21c35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;break&lt;/code&gt; statement includes an optional label that allows the program to break out of a labeled statement. The &lt;code&gt;break&lt;/code&gt; statement needs to be nested within the referenced label. The labeled statement can be any &lt;a href=&quot;block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; statement; it does not have to be preceded by a loop statement.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 문은 프로그램이 표시된 문으로 탈출 할 수있는 옵션 라벨이 포함되어 있습니다. &lt;code&gt;break&lt;/code&gt; 문은 참조 라벨 내에 중첩 될 필요가있다. 레이블이 지정된 명령문은 모든 &lt;a href=&quot;block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; 명령문 일 수 있습니다 . 루프 문 앞에 올 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="bcfd22f0b33f7ee140e39aa421b9f2aabdc979a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;break&lt;/code&gt; statement includes an optional label that allows the program to break out of a labeled statement. The &lt;code&gt;break&lt;/code&gt; statement needs to be nested within the referenced label. The labeled statement can be any &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement; it does not have to be preceded by a loop statement.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 문은 프로그램이 표시된 문으로 탈출 할 수있는 옵션 라벨이 포함되어 있습니다. &lt;code&gt;break&lt;/code&gt; 문은 참조 라벨 내에 중첩 될 필요가있다. 레이블이있는 문은 모든 &lt;a href=&quot;block&quot;&gt;블록&lt;/a&gt; 문이 될 수 있습니다 . 루프 문이 앞에 올 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="e5276b3adb805e0bffdcfdd6240ed6284e46842a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;break&lt;/code&gt; terminates the current loop, &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;label&quot;&gt;label&lt;/a&gt; statement and transfers program control to the statement following the terminated statement.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 전류 루프, 종료 &lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;label&quot;&gt;라벨&lt;/a&gt; 종료 된 문 다음의 문으로 전송합니다 프로그램 제어합니다.</target>
        </trans-unit>
        <trans-unit id="206dae9becb9d9cba3f7116dc25d9ec0b751721a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buffer&lt;/code&gt; accessor property represents the &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by the &lt;code&gt;DataView&lt;/code&gt; at construction time.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 접근 속성을 나타내는 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 가&lt;/a&gt; 의해 참조 &lt;code&gt;DataView&lt;/code&gt; 를 시공시.</target>
        </trans-unit>
        <trans-unit id="77529542568f7acca92b139773062db33079b177" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buffer&lt;/code&gt; accessor property represents the &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by a &lt;em&gt;TypedArray&lt;/em&gt; at construction time.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 접근 속성을 나타내는 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; a로 언급 &lt;em&gt;하는 TypedArray&lt;/em&gt; 시공시한다.</target>
        </trans-unit>
        <trans-unit id="dd4770c8b1ba9535e191c0571cc7297624275087" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buffer&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when the &lt;code&gt;DataView&lt;/code&gt; is constructed and cannot be changed.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 속성은 그 설정 액세서 함수 접근 속성 인 &lt;code&gt;undefined&lt;/code&gt; 만이 등록 정보를 읽을 수있는 것을 의미한다. 값은 &lt;code&gt;DataView&lt;/code&gt; 가 구성 될 때 설정 되며 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f46fe19984b1ea8a0fee47a449a7734c0f702ff4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buffer&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when the &lt;em&gt;TypedArray&lt;/em&gt; is constructed and cannot be changed. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray objects&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 속성은 그 설정 액세서 함수 접근 속성 인 &lt;code&gt;undefined&lt;/code&gt; 만이 등록 정보를 읽을 수있는 것을 의미한다. 이 값은 &lt;em&gt;TypedArray&lt;/em&gt; 가 구성 될 때 설정 되며 변경할 수 없습니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray 객체&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="0d469f3ab1c1fda1015c3a249f1826aba6d64de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buffer&lt;/code&gt; prototype property of the &lt;a href=&quot;../memory&quot;&gt;&lt;code&gt;WebAssembly.Memory&lt;/code&gt;&lt;/a&gt; object returns the buffer contained in the memory.</source>
          <target state="translated">&lt;a href=&quot;../memory&quot;&gt; &lt;code&gt;WebAssembly.Memory&lt;/code&gt; &lt;/a&gt; 개체 의 &lt;code&gt;buffer&lt;/code&gt; 프로토 타입 속성은 메모리에 포함 된 버퍼를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc8aa27ef1110bedfc53d88715e356c0dad6c6ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buffer&lt;/code&gt; prototype property of the &lt;code&gt;&lt;a href=&quot;../memory&quot;&gt;Memory&lt;/a&gt;&lt;/code&gt; object returns the buffer contained in the memory.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../memory&quot;&gt;Memory&lt;/a&gt;&lt;/code&gt; 객체 의 &lt;code&gt;buffer&lt;/code&gt; prototype 속성은 메모리에 포함 된 버퍼를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b3644bd31d44382ba2f6d01348490277a56018e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteLength&lt;/code&gt; accessor property represents the length (in bytes) of a typed array.</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt; 속성 접근은 형식화 된 배열의 바이트 단위의 길이를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="6460908b1dcbbf48b93d019df7de155e9901924c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteLength&lt;/code&gt; accessor property represents the length (in bytes) of this view from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt; 속성 접근은 개시로부터이 뷰 (바이트) 길이를 나타낸다 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61cc8a4ac2b4a8b2b0354b2210fe0f98f5d7804f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteLength&lt;/code&gt; accessor property represents the length of an &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; in bytes.</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt; 프로퍼티 접근은의 길이를 나타냅니다 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 바이트를.</target>
        </trans-unit>
        <trans-unit id="2d892f875b973935b0c6f518125a00e538ba61fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteLength&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when a &lt;em&gt;TypedArray&lt;/em&gt; is constructed and cannot be changed. If the &lt;em&gt;TypedArray&lt;/em&gt; is not specifying an &lt;code&gt;byteOffset&lt;/code&gt; or a &lt;code&gt;length&lt;/code&gt;, the &lt;code&gt;length&lt;/code&gt; of the referenced &lt;code&gt;ArrayBuffer&lt;/code&gt; will be returned. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray objects&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt; 속성은 그 설정 접근 기능을하는 접근 자 속성입니다 &lt;code&gt;undefined&lt;/code&gt; 경우에만이 속성을 읽을 수 있다는 것을 의미한다. 이 값은 &lt;em&gt;TypedArray&lt;/em&gt; 가 구성되어 있으며 변경할 수 없을 때 설정됩니다 . 는 IF &lt;em&gt;하는 TypedArray가&lt;/em&gt; 지정되지 &lt;code&gt;byteOffset&lt;/code&gt; 또는 &lt;code&gt;length&lt;/code&gt; 의 &lt;code&gt;length&lt;/code&gt; 참조의 &lt;code&gt;ArrayBuffer&lt;/code&gt; 이 반환됩니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray 객체&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="32d789cb64c689b28b5b83a993c479ec1cc29f74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteLength&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when an &lt;code&gt;DataView&lt;/code&gt; is constructed and cannot be changed. If the &lt;code&gt;DataView&lt;/code&gt; is not specifying an offset or a &lt;code&gt;byteLength&lt;/code&gt;, the &lt;code&gt;byteLength&lt;/code&gt; of the referenced &lt;code&gt;ArrayBuffer&lt;/code&gt; or &lt;code&gt;SharedArrayBuffer&lt;/code&gt; will be returned.</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt; 속성은 그 설정 접근 기능을하는 접근 자 속성입니다 &lt;code&gt;undefined&lt;/code&gt; 경우에만이 속성을 읽을 수 있다는 것을 의미한다. 이 값은 &lt;code&gt;DataView&lt;/code&gt; 가 구성 될 때 설정 되며 변경할 수 없습니다. 는 IF &lt;code&gt;DataView&lt;/code&gt; 를가 오프셋 또는 지정되지 &lt;code&gt;byteLength&lt;/code&gt; 의 &lt;code&gt;byteLength&lt;/code&gt; 참조의 &lt;code&gt;ArrayBuffer&lt;/code&gt; 또는 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f1e3f9e18e74ee4d925dabffe6ff8099c025b2c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteLength&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when the array is constructed and cannot be changed. This property returns 0 if this &lt;code&gt;ArrayBuffer&lt;/code&gt; has been detached.</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt; 속성은 그 설정 접근 기능을하는 접근 자 속성입니다 &lt;code&gt;undefined&lt;/code&gt; 경우에만이 속성을 읽을 수 있다는 것을 의미한다. 값은 배열이 구성 될 때 설정되며 변경할 수 없습니다. 이 &lt;code&gt;ArrayBuffer&lt;/code&gt; 가 분리 된 경우이 속성은 0을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a60b2d52d1d421a0ddac5ec533cb34b372b79c3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteLength&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when the shared array is constructed and cannot be changed.</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt; 속성은 그 설정 접근 기능을하는 접근 자 속성입니다 &lt;code&gt;undefined&lt;/code&gt; 경우에만이 속성을 읽을 수 있다는 것을 의미한다. 이 값은 공유 어레이가 구성되어 있으며 변경할 수 없을 때 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b9fd260a7fdf1f5db1cc7053ed22822cdd5c08a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteOffset&lt;/code&gt; accessor property represents the offset (in bytes) of a typed array from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;byteOffset&lt;/code&gt; 의 접근 속성은 그것의 개시로부터 입력 된 어레이 (바이트) 오프셋을 나타낸다 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01cb971b3e065fee20d5145cfdcd4f713fe96188" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteOffset&lt;/code&gt; accessor property represents the offset (in bytes) of this view from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;byteOffset&lt;/code&gt; 의 접근 속성은 그것의 시작으로부터 본 도면 (바이트) 오프셋을 나타내는 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0f989a6f1df903483f4b9431daa5f4336e5b6b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteOffset&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when a &lt;em&gt;TypedArray&lt;/em&gt; is constructed and cannot be changed.&lt;em&gt; TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray objects&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;byteOffset&lt;/code&gt; 의 속성은 그 설정 접근 기능을하는 접근 자 속성입니다 &lt;code&gt;undefined&lt;/code&gt; 경우에만이 속성을 읽을 수 있다는 것을 의미한다. 이 값은 &lt;em&gt;TypedArray&lt;/em&gt; 가 구성되어 있으며 변경할 수 없을 때 설정됩니다 . &lt;em&gt;TypedArray&lt;/em&gt; 는 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray 객체&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="8ed209723f3feab21d710369cd62044e2b939437" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;byteOffset&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when an &lt;code&gt;DataView&lt;/code&gt; is constructed and cannot be changed.</source>
          <target state="translated">&lt;code&gt;byteOffset&lt;/code&gt; 의 속성은 그 설정 접근 기능을하는 접근 자 속성입니다 &lt;code&gt;undefined&lt;/code&gt; 경우에만이 속성을 읽을 수 있다는 것을 의미한다. 값은 언제 확립 &lt;code&gt;DataView&lt;/code&gt; 를가 구성되어 있으며, 변경할 수 없다.</target>
        </trans-unit>
        <trans-unit id="80078bb3c2464715c90fef2d726d075a4dd19df3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;calendar&lt;/code&gt; property returns the part of the &lt;code&gt;Locale&lt;/code&gt; that indicates the &lt;code&gt;Locale&lt;/code&gt;'s calendar era. While most of the world uses the Gregorian calendar, there are several regional calendar eras used around the world. The following table shows all the valid Unicode calendar key strings, along with a description of the calendar era they represent.</source>
          <target state="translated">&lt;code&gt;calendar&lt;/code&gt; 속성의 일부를 반환 &lt;code&gt;Locale&lt;/code&gt; 나타냅니다 &lt;code&gt;Locale&lt;/code&gt; 의 달력 시대. 전 세계 대부분이 그레고리력을 사용하지만 전 세계에서 사용되는 여러 지역 달력 시대가 있습니다. 다음 표는 모든 유효한 유니 코드 달력 키 문자열과 이들이 나타내는 달력 연대에 대한 설명을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8161aa547f93cb84296896d4e7446939d30f0ca5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;call()&lt;/code&gt; allows for a function/method belonging to one object to be assigned and called for a different object.</source>
          <target state="translated">&lt;code&gt;call()&lt;/code&gt; 다른 목적을 위해 할당되고 호출 할 하나의 객체에 속하는 기능 / 방법을 허용한다.</target>
        </trans-unit>
        <trans-unit id="43da70a23074296619f70d5b37415327e2012b90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;catch&lt;/code&gt; block specifies an identifier (&lt;code&gt;e&lt;/code&gt; in the example above) that holds the value specified by the &lt;code&gt;throw&lt;/code&gt; statement. The &lt;code&gt;catch&lt;/code&gt; block is unique in that JavaScript creates this identifier when the &lt;code&gt;catch&lt;/code&gt; block is entered and it adds it to the current scope; the identifier lasts only for the duration of the &lt;code&gt;catch&lt;/code&gt; block; after the &lt;code&gt;catch&lt;/code&gt; block finishes executing, the identifier is no longer available.</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 블록 식별자 (지정 &lt;code&gt;e&lt;/code&gt; 에 의해 지정된 값을 가지고 위의 예에서) &lt;code&gt;throw&lt;/code&gt; 문. &lt;code&gt;catch&lt;/code&gt; 때 블록은 자바 스크립트이 식별자를 생성하는 고유의 &lt;code&gt;catch&lt;/code&gt; 블록이 입력되고 현재의 범위에 추가; 식별자는 &lt;code&gt;catch&lt;/code&gt; 블록 기간 동안 만 지속된다 ; 애프터 &lt;code&gt;catch&lt;/code&gt; 실행 블록 완료, 식별자는 더 이상 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="544645a4f8e160c0d4fe0eb4fec710546ee40c34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;catch&lt;/code&gt; method can be useful for error handling in your promise composition.</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 방법은 약속 조성 오류 처리하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="733a689e90a17d1ad14713cac13ac822aab5f354" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;catch&lt;/code&gt; method is used for error handling in promise composition. Since it returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;, it &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#Chaining_after_a_catch&quot;&gt;can be chained&lt;/a&gt; in the same way as its sister method, &lt;a href=&quot;then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 방법은 약속 조성 오류 처리에 사용됩니다. 그것은 반환 이후 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; ,이 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#Chaining_after_a_catch&quot;&gt;체인 될 수있다&lt;/a&gt; , 자매 방법과 같은 방법으로 &lt;a href=&quot;then&quot;&gt; &lt;code&gt;then()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="508b2dcb70de9c24c5acf9fa8299343ea9c6603c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;catch&lt;/code&gt;-block specifies an identifier (&lt;code&gt;e&lt;/code&gt; in the example above) that holds the value of the exception; this value is only available in the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt; of the &lt;code&gt;catch&lt;/code&gt;-block.</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; - 블록은 식별자 (지정 &lt;code&gt;e&lt;/code&gt; 예외의 값을 유지 위의 예에서)를; 이 값은에서만 사용할 수 있습니다 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;범위&lt;/a&gt; 의 &lt;code&gt;catch&lt;/code&gt; - 블록.</target>
        </trans-unit>
        <trans-unit id="1b097bed40408ec71f2a18fa311697e6832b1b0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charCodeAt()&lt;/code&gt; method returns an integer between 0 and 65535 representing the UTF-16 code unit at the given index.</source>
          <target state="translated">&lt;code&gt;charCodeAt()&lt;/code&gt; 메소드는 소정의 인덱스에서 UTF-16 코드 단위를 나타내는 0과 65,535 사이의 정수를 반환한다.</target>
        </trans-unit>
        <trans-unit id="09123d44db729966b8b24b1dbc5829e84a536632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charCodeAt()&lt;/code&gt; method returns an integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;65535&lt;/code&gt; representing the UTF-16 code unit at the given index.</source>
          <target state="translated">&lt;code&gt;charCodeAt()&lt;/code&gt; 메소드의 정수를 반환 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;65535&lt;/code&gt; 주어진 인덱스에서 UTF-16 코드 유닛을 대표한다.</target>
        </trans-unit>
        <trans-unit id="0eeb5286b919a18fcb89a20219f0d1f136b62b5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class&lt;/code&gt; keyword defines a class expression.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 키워드는 클래스 표현을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9ada3bcfa6827219cf3dcc9406b42d977265ad86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear()&lt;/code&gt; method removes all elements from a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;clear()&lt;/code&gt; 메소드는 모든 요소를 제거 &lt;code&gt;Map&lt;/code&gt; 오브젝트를.</target>
        </trans-unit>
        <trans-unit id="6747e63be9b85f094d2fd76790348cfc0b07d1a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear()&lt;/code&gt; method removes all elements from a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;clear()&lt;/code&gt; 메소드는 모든 요소를 제거합니다 &lt;code&gt;Set&lt;/code&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="2be735ed0a35b77cab8f8d2f57f40f94584c088e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;code&lt;/code&gt; to provide depends on the &lt;code&gt;type&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; 제공하기 위해이에 따라 &lt;code&gt;type&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="95985bdbf42d6b4738085044d60000c9b3583fe0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;codePointAt()&lt;/code&gt; method returns a non-negative integer that is the Unicode code point value.</source>
          <target state="translated">&lt;code&gt;codePointAt()&lt;/code&gt; 메소드는 유니 코드 코드 포인트 값 인 음이 아닌 정수를 반환한다.</target>
        </trans-unit>
        <trans-unit id="04671540c1ed0ecc205795bbccd8bbfcb851099c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compare&lt;/code&gt; getter function returns a number indicating how &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt; compare to each other according to the sort order of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object: a negative value if &lt;code&gt;string1&lt;/code&gt; comes before &lt;code&gt;string2&lt;/code&gt;; a positive value if &lt;code&gt;string1&lt;/code&gt; comes after &lt;code&gt;string2&lt;/code&gt;; 0 if they are considered equal.</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; getter 함수는 방법을 나타내는 숫자를 반환 &lt;code&gt;string1&lt;/code&gt; 과 &lt;code&gt;string2&lt;/code&gt; 이 정렬 순서로 서로있어서 비교 &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; 객체 다음의 경우 음의 값 &lt;code&gt;string1&lt;/code&gt; 앞에 오는 &lt;code&gt;string2&lt;/code&gt; ; &lt;code&gt;string1&lt;/code&gt; 이 &lt;code&gt;string2&lt;/code&gt; 뒤에 오면 양수 값 ; 동일하다고 간주되는 경우 0입니다.</target>
        </trans-unit>
        <trans-unit id="0d96a91dc2004ac17b71f0aef23a3c77e87bd1b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compareFunction&lt;/code&gt; can be invoked multiple times per element within the array. Depending on the &lt;code&gt;compareFunction&lt;/code&gt;'s nature, this may yield a high overhead. The more work a &lt;code&gt;compareFunction&lt;/code&gt; does and the more elements there are to sort, it may be more efficient to use &lt;a href=&quot;map&quot;&gt;map&lt;/a&gt; for sorting. The idea is to traverse the array once to extract the actual values used for sorting into a temporary array, sort the temporary array, and then traverse the temporary array to achieve the right order.</source>
          <target state="translated">&lt;code&gt;compareFunction&lt;/code&gt; 배열 내의 요소마다 여러 번 호출 할 수 있습니다. &lt;code&gt;compareFunction&lt;/code&gt; 의 특성 에 따라 높은 오버 헤드가 발생할 수 있습니다. &lt;code&gt;compareFunction&lt;/code&gt; 이 더 많은 작업을 수행하고 정렬 할 요소가 많을수록 정렬에 &lt;a href=&quot;map&quot;&gt;맵&lt;/a&gt; 을 사용하는 것이 더 효율적일 수 있습니다 . 아이디어는 배열을 한 번 탐색하여 정렬에 사용 된 실제 값을 임시 배열로 추출하고 임시 배열을 정렬 한 다음 임시 배열을 탐색하여 올바른 순서를 얻는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9f095881f298e599ebed8633ac85c15b6650d5c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compareFunction&lt;/code&gt; can be invoked multiple times per element within the array. Depending on the &lt;code&gt;compareFunction&lt;/code&gt;'s nature, this may yield a high overhead. The more work a &lt;code&gt;compareFunction&lt;/code&gt; does and the more elements there are to sort, the wiser it may be to consider using a &lt;a href=&quot;map&quot;&gt;map&lt;/a&gt; for sorting. The idea is to traverse the array once to extract the actual values used for sorting into a temporary array, sort the temporary array and then traverse the temporary array to achieve the right order.</source>
          <target state="translated">&lt;code&gt;compareFunction&lt;/code&gt; 배열 내의 요소마다 여러 번 호출 할 수 있습니다. &lt;code&gt;compareFunction&lt;/code&gt; 의 특성 에 따라 오버 헤드가 높아질 수 있습니다. &lt;code&gt;compareFunction&lt;/code&gt; 이 수행하는 작업이 많을수록 정렬 할 요소가 많을수록 정렬에 &lt;a href=&quot;map&quot;&gt;맵&lt;/a&gt; 을 사용하는 것이 더 현명 할 수 있습니다 . 아이디어는 배열을 한 번 순회하여 임시 배열로 정렬하는 데 사용 된 실제 값을 추출하고 임시 배열을 정렬 한 다음 임시 배열을 순회하여 올바른 순서를 달성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cf4d7fdca68be4460dc0d605575caa1e51184ec2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compile&lt;/code&gt; method is deprecated. You can just use the &lt;code&gt;RegExp&lt;/code&gt; constructor to achieve the same effect.</source>
          <target state="translated">&lt;code&gt;compile&lt;/code&gt; 방법은 사용되지 않습니다. &lt;code&gt;RegExp&lt;/code&gt; 생성자를 사용 하여 동일한 효과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed78a62e414bf745e8366f04f85a2a82e55ed1ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concat()&lt;/code&gt; function concatenates the string arguments to the calling string and returns a new string. Changes to the original string or the returned string don't affect the other.</source>
          <target state="translated">&lt;code&gt;concat()&lt;/code&gt; 함수가 호출 문자열로 문자열 인수를 연결하여 새 문자열을 반환합니다. 원래 문자열이나 반환 된 문자열에 대한 변경 사항은 다른 문자열에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d59dd5e2aefdc347b412f036231fce35bb1e6ab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concat()&lt;/code&gt; function concatenates the string arguments to the calling string and returns a new string. Changes to the original string or the returned string don't affect the other. If the arguments are not of the type string, they are converted to string values before concatenating.</source>
          <target state="translated">&lt;code&gt;concat()&lt;/code&gt; 함수가 호출 문자열로 문자열 인수를 연결하여 새 문자열을 반환합니다. 원래 문자열이나 반환 된 문자열을 변경해도 다른 문자열에는 영향을 미치지 않습니다. 인수가 문자열 유형이 아닌 경우 연결하기 전에 문자열 값으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="261563fef63b3d1ff27f440311aef252e6157691" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concat()&lt;/code&gt; method concatenates the string arguments to the calling string and returns a new string.</source>
          <target state="translated">&lt;code&gt;concat()&lt;/code&gt; 메소드는 호출 문자열로 문자열 인수를 연결하여 새 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8565512ca78d2e185bde3d8a44e3082d5f9dcf70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concat&lt;/code&gt; method creates a new array consisting of the elements in the object on which it is called, followed in order by, for each argument, the elements of that argument (if the argument is an array) or the argument itself (if the argument is not an array). It does not recurse into nested array arguments.</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; 방법은 각각 인수 순서로 다음에 호출되는 객체의 원소로 이루어진 새로운 배열, 즉 인수의 요소 (배열 인자 인 경우) 또는 인자 자체 (인수 경우 작성 배열이 아닙니다). 중첩 배열 인수로 되풀이되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d162ddc220f1ea4dd29d37ec734816bb9aecd40e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concat&lt;/code&gt; method does not alter &lt;code&gt;this&lt;/code&gt; or any of the arrays provided as arguments but instead returns a shallow copy that contains copies of the same elements combined from the original arrays. Elements of the original arrays are copied into the new array as follows:</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; 방법은 변경하지 않습니다 &lt;code&gt;this&lt;/code&gt; 또는 인수로 제공되는 배열 중 하나를 대신 원래의 배열에서 결합 같은 요소의 사본을 포함하는 얕은 복사본을 반환합니다. 원래 배열의 요소는 다음과 같이 새 배열로 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="d8988f26c17a8216d8f55ba340fae86fc60ab716" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configurable&lt;/code&gt; attribute controls at the same time whether the property can be deleted from the object and whether its attributes (other than &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;writable&lt;/code&gt;) can be changed.</source>
          <target state="translated">&lt;code&gt;configurable&lt;/code&gt; 속성은 (그 이외의 속성 객체로부터 삭제 될 수 있는지 여부를 동시에 제어 속성 &lt;code&gt;value&lt;/code&gt; 과 &lt;code&gt;writable&lt;/code&gt; )로 변경 될 수있다.</target>
        </trans-unit>
        <trans-unit id="fb22a15f343741bfd47f5d5f28aba62a3655278a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configurable&lt;/code&gt; attribute controls whether the property can be deleted from the object and whether its attributes (other than &lt;code&gt;writable&lt;/code&gt;) can be changed.</source>
          <target state="translated">&lt;code&gt;configurable&lt;/code&gt; 속성이 (이외의 속성 객체에서 여부 삭제 될 수 있는지 여부를 속성 컨트롤을 &lt;code&gt;writable&lt;/code&gt; ) 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc29c78e83267e7702095c83fcdd3aeb6a054197" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configurable&lt;/code&gt; attribute of this property is now &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 프로퍼티 의 &lt;code&gt;configurable&lt;/code&gt; 속성은 이제 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90c9cedb1a84402afafc02708ba8084b18fc0e40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;const&lt;/code&gt; creates a read-only reference to a value. It does &lt;strong&gt;not&lt;/strong&gt; mean the value it holds is immutable&amp;mdash;just that the variable identifier cannot be reassigned. For instance, in the case where the content is an object, this means the object's contents (e.g., its properties) can be altered.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 값을 읽기 전용 기준을 생성한다. 보유한 값이 변경 불가능하다는 의미 가 &lt;strong&gt;아니라&lt;/strong&gt; 변수 식별자를 다시 할당 할 수 없다는 의미입니다. 예를 들어 콘텐츠가 객체 인 경우 이는 객체의 내용 (예 : 속성)이 변경 될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7b996e34fbe9ae41a70f1d418fb5bd2ed2ed2d98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;const&lt;/code&gt; declaration creates a read-only reference to a value. It does &lt;strong&gt;not&lt;/strong&gt; mean the value it holds is immutable, just that the variable identifier cannot be reassigned. For instance, in case the content is an object, this means the object itself can still be altered. This means that you can't mutate the value stored in a variable:</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 선언 값을 읽기 전용 기준을 생성한다. 변수 식별자를 재 할당 할 수 없다는 것만으로 보유한 값이 변경 불가능하다는 의미 는 &lt;strong&gt;아닙니다&lt;/strong&gt; . 예를 들어 내용이 객체 인 경우 객체 자체를 계속 변경할 수 있습니다. 이는 변수에 저장된 값을 변경할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4c8eefc6ebfd279fcb1745f81c375b6511d887ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;construct&lt;/code&gt; method must return an object.</source>
          <target state="translated">&lt;code&gt;construct&lt;/code&gt; 방법은 객체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="ff6581a6663ce2d74d4d31e6e537b38321d0c910" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;constructor&lt;/code&gt; method is a special method for creating and initializing an object created within a &lt;code&gt;&lt;a href=&quot;../statements/class&quot;&gt;class&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 방법은 생성하고 내에서 생성 된 객체 초기화를위한 특별한 방법으로 &lt;code&gt;&lt;a href=&quot;../statements/class&quot;&gt;class&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7eaa36a6fe1e95403f4adcece6f85aba8fad9a1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;constructor&lt;/code&gt; method is a special method of a &lt;a href=&quot;../statements/class&quot;&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt; for creating and initializing an object of that class.</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 방법은 특별한 방법으로 &lt;a href=&quot;../statements/class&quot;&gt; &lt;code&gt;class&lt;/code&gt; &lt;/a&gt; 그 클래스의 객체를 생성하고 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="aad147e244592088e37d5bd7791ca50750a2520a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;constructor&lt;/code&gt; method is optional. Classes generated with class expressions will always respond to &lt;a href=&quot;typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; with the value &quot;&lt;code&gt;function&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 방법은 선택 사항입니다. 클래스 표현식으로 생성 된 클래스는 항상 &quot; &lt;code&gt;function&lt;/code&gt; &quot; 값 으로 &lt;a href=&quot;typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; 에&lt;/a&gt; 응답합니다 .</target>
        </trans-unit>
        <trans-unit id="ebfb9619e53d484d6f208328e4a82e8e0970e40a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;constructor&lt;/code&gt; property returns a reference to the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; constructor function that created the instance object. Note that the value of this property is a reference to &lt;em&gt;the function itself&lt;/em&gt;, not a string containing the function's name.</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 속성에 대한 참조를 반환 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 인스턴스 객체를 생성 생성자 함수를. 이 속성의 값은 함수 이름이 포함 된 문자열이 아니라 &lt;em&gt;함수 자체에&lt;/em&gt; 대한 참조 입니다.</target>
        </trans-unit>
        <trans-unit id="e503dd29e531e8ca49601627a2d04a566f54a02a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;constructor&lt;/code&gt; property returns a reference to the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; constructor function that created the instance object. Note that the value of this property is a reference to the function itself, not a string containing the function's name. The value is only read-only for primitive values such as &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;&quot;test&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;constructor&lt;/code&gt; 속성에 대한 참조를 반환 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 인스턴스 객체를 생성 생성자 함수를. 이 속성의 값은 함수 이름을 포함하는 문자열이 아니라 함수 자체에 대한 참조입니다. 이 값은 &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; 및 &lt;code&gt;&quot;test&quot;&lt;/code&gt; 와 같은 기본 값에 대해서만 읽기 전용입니다 .</target>
        </trans-unit>
        <trans-unit id="e0686ce826b772555a78940c3dad4d0af25e6214" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;continue&lt;/code&gt; statement can include an optional label that allows the program to jump to the next iteration of a labeled loop statement instead of the current loop. In this case, the &lt;code&gt;continue&lt;/code&gt; statement needs to be nested within this labeled statement.</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; 문은 프로그램이 표시 루프 문 대신 전류 루프의 다음 반복으로 이동할 수있는 옵션 라벨을 포함 할 수 있습니다. 이 경우 &lt;code&gt;continue&lt;/code&gt; 문은이 레이블이 지정된 명령문 내에 중첩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="838ddbf2dc9e762c22d9aa2fb58ab8177992e2ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;continue&lt;/code&gt; terminates execution of the statements in the current iteration of the current or labeled loop, and continues execution of the loop with the next iteration.</source>
          <target state="translated">는 &lt;code&gt;continue&lt;/code&gt; 현재 또는 라벨 루프의 현재 반복의 문 종료 실행하고 다음 반복으로 루프의 실행을 계속합니다.</target>
        </trans-unit>
        <trans-unit id="01fb7109701916242ce2205e739220de803bdf91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copyWithin&lt;/code&gt; function is intentionally &lt;em&gt;generic&lt;/em&gt;, it does not require that its &lt;code&gt;this&lt;/code&gt; value be an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;copyWithin&lt;/code&gt; 의 기능은 의도적으로 &lt;em&gt;제네릭&lt;/em&gt; , 그것의 필요가 없습니다 &lt;code&gt;this&lt;/code&gt; 값이 될 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="201f718694e9ec434f428677d87b5f3b92f0a1f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copyWithin&lt;/code&gt; method is a mutable method. It does not alter the length of &lt;code&gt;this&lt;/code&gt;, but it will change its content and create new properties, if necessary.</source>
          <target state="translated">&lt;code&gt;copyWithin&lt;/code&gt; 에 있어서 변경 가능한 방법이다. 그것은의 길이를 변경하지 않습니다 &lt;code&gt;this&lt;/code&gt; 있지만 필요한 경우는, 그 내용을 변경하고 새 속성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9e1e66df1bad7208bb9b957a4907ea02459e4247" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copyWithin&lt;/code&gt; method is a mutable method. It does not alter the length of &lt;code&gt;this&lt;/code&gt;, but will change its content and create new properties if necessary.</source>
          <target state="translated">&lt;code&gt;copyWithin&lt;/code&gt; 에 있어서 변경 가능한 방법이다. 그것은의 길이를 변경하지 않습니다 &lt;code&gt;this&lt;/code&gt; 있지만, 그 내용을 변경하고 필요한 경우 새 속성을 만들 것입니다.</target>
        </trans-unit>
        <trans-unit id="0d4e4a2f5912a9e57cc607207bc577c011f3c5ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copyWithin&lt;/code&gt; works like C and C++'s &lt;code&gt;memmove&lt;/code&gt;, and is a high-performance method to shift the data of an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. This especially applies to the &lt;a href=&quot;../typedarray/copywithin&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; method of the same name. The sequence is copied and pasted as one operation; pasted sequence will have the copied values even when the copy and paste region overlap.</source>
          <target state="translated">&lt;code&gt;copyWithin&lt;/code&gt; 은 C 및 C ++의처럼 작동 &lt;code&gt;memmove&lt;/code&gt; 를 , 및 데이터의 시프트 고성능 방법 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; . 이것은 특히 같은 이름 의 &lt;a href=&quot;../typedarray/copywithin&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; 메서드에 적용됩니다 . 시퀀스는 하나의 작업으로 복사 및 붙여 넣기됩니다. 붙여 넣은 시퀀스는 복사 및 붙여 넣기 영역이 겹치는 경우에도 복사 된 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="b1ad2da2466bc7c65b1d4fdb1ca297753e580c92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; parameter defaults to &lt;code&gt;0&lt;/code&gt; instead of the later-specified &lt;code&gt;+Infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 에 매개 변수의 기본값은 &lt;code&gt;0&lt;/code&gt; 대신 나중에 지정의 &lt;code&gt;+Infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6459290abb22692aeaf643f0b0875963a2637158" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; parameter of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wake&quot;&gt;&lt;code&gt;Atomics.wake()&lt;/code&gt;&lt;/a&gt; method has been changed: it now defaults to &lt;code&gt;+Infinity&lt;/code&gt;, not &lt;code&gt;0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1253350&quot;&gt;bug 1253350&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wake&quot;&gt; &lt;code&gt;Atomics.wake()&lt;/code&gt; &lt;/a&gt; 메서드 의 &lt;code&gt;count&lt;/code&gt; 매개 변수 가 변경되었습니다. 이제 기본값은 &lt;code&gt;0&lt;/code&gt; 이 아닌 &lt;code&gt;+Infinity&lt;/code&gt; 로 설정되었습니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1253350&quot;&gt;버그 1253350&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="33ddf9ce0f64d44996c713a96ead93608aa87c28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debugger&lt;/code&gt; invokes any available debugging functionality, such as setting a breakpoint. If no debugging functionality is available, this statement has no effect.</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; 이러한 중단 점을 설정하는 등, 가능한 디버깅 기능을 호출합니다. 디버깅 기능을 사용할 수없는 경우이 문은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2be9b03c7c3f217dabbe97690b19e7835670676d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defineProperty()&lt;/code&gt; method must return a &lt;a href=&quot;../../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property has been successfully defined.</source>
          <target state="translated">&lt;code&gt;defineProperty()&lt;/code&gt; 메서드는 반환해야 &lt;a href=&quot;../../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 속성이 성공적으로 정의되어 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="579abc478417cce04b67170481387cc4f0379da4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defineProperty&lt;/code&gt; method must return a &lt;a href=&quot;../../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property has been successfully defined.</source>
          <target state="translated">&lt;code&gt;defineProperty&lt;/code&gt; 의 방법은 반환해야 &lt;a href=&quot;../../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 속성이 성공적으로 정의되어 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1570d00ce6bcd69b74eb8614e6df170f2ac77005" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete()&lt;/code&gt; method removes the specified element from a &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;delete()&lt;/code&gt; 메소드는 지정된 요소의 제거 &lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; 의&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="99415d446a871a58f3dec9e1f3dfd281f697246e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete()&lt;/code&gt; method removes the specified element from a &lt;code&gt;Map&lt;/code&gt; object by key.</source>
          <target state="translated">&lt;code&gt;delete()&lt;/code&gt; 메소드는에서 지정된 요소가 제거 &lt;code&gt;Map&lt;/code&gt; 키를 기준으로 개체를.</target>
        </trans-unit>
        <trans-unit id="a8841e517a7b0478d9955368d2aba697d1b310f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete()&lt;/code&gt; method removes the specified element from a &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;delete()&lt;/code&gt; 메소드는에서 지정된 요소가 제거 &lt;code&gt;Set&lt;/code&gt; 개체를.</target>
        </trans-unit>
        <trans-unit id="6530a82b22bc71d60cb9bacd1498831151d9b328" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete()&lt;/code&gt; method removes the specified element from a &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;delete()&lt;/code&gt; 메소드는 지정된 요소의 제거 &lt;code&gt;WeakSet&lt;/code&gt; 의 개체.</target>
        </trans-unit>
        <trans-unit id="d51c50dc1f17fb2d3d9a387e4984d9886950112d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; operator can only delete properties on an object. Object properties are &quot;qualified&quot; if they are configurable.</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 연산자는 객체의 속성을 삭제할 수 있습니다. 구성 가능한 개체 속성은 &quot;자격을 갖춘&quot;것입니다.</target>
        </trans-unit>
        <trans-unit id="eaff799ffb5f4c865de5bbeb223a7f16c1c96408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; operator deletes a property from an object.</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 연산자는 객체의 속성을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="3381368ec98bada9955255427c050b2b7bca9f31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deleteProperty()&lt;/code&gt; method must return a &lt;a href=&quot;../../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property has been successfully deleted.</source>
          <target state="translated">&lt;code&gt;deleteProperty()&lt;/code&gt; 메서드는 반환해야 &lt;a href=&quot;../../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 속성이 성공적으로 삭제되었는지 여부를 나타내는.</target>
        </trans-unit>
        <trans-unit id="448e313ceb8a1786b1ec9c45f3df2f4ae6950a88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deleteProperty&lt;/code&gt; method must return a &lt;a href=&quot;../../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property has been successfully deleted.</source>
          <target state="translated">&lt;code&gt;deleteProperty&lt;/code&gt; 의 방법은 반환해야 &lt;a href=&quot;../../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 속성이 성공적으로 삭제되었는지 여부를 나타내는.</target>
        </trans-unit>
        <trans-unit id="88225bf265c83829660a8af9e8d2d686c619703c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deref&lt;/code&gt; method returns the &lt;a href=&quot;../weakref&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt; instance's target object, or &lt;code&gt;undefined&lt;/code&gt; if the target object has been garbage-collected.</source>
          <target state="translated">&lt;code&gt;deref&lt;/code&gt; 방법은 반환 &lt;a href=&quot;../weakref&quot;&gt; &lt;code&gt;WeakRef&lt;/code&gt; 의&lt;/a&gt; 인스턴스의 대상 객체, 또는 &lt;code&gt;undefined&lt;/code&gt; 대상 개체가 가비지 수집 된 경우.</target>
        </trans-unit>
        <trans-unit id="f6789f932dde468998ab0bb363aafb7105ef4664" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;direct&lt;/code&gt; collation type has been deprected. Do not use.</source>
          <target state="translated">&lt;code&gt;direct&lt;/code&gt; 데이터 정렬 유형은 deprected되었습니다. 사용하지 마세요.</target>
        </trans-unit>
        <trans-unit id="fcd2de562ed07e7f7a0f74cee6c831e37c07da25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do...while&lt;/code&gt; creates a loop that executes a specified statement until the test condition evaluates to false. The condition is evaluated after executing the statement, resulting in the specified statement executing at least once.</source>
          <target state="translated">는 &lt;code&gt;do...while&lt;/code&gt; false로 테스트 조건들을 평가까지 지정된 문을 실행 루프를 만듭니다. 명령문을 실행 한 후 조건이 평가되어 지정된 명령문이 한 번 이상 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="4c1bcd6cc3e212a384df30e696e6f6901b761d4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dotAll&lt;/code&gt; property indicates whether or not the &quot;&lt;code&gt;s&lt;/code&gt;&quot; flag is used with the regular expression. &lt;code&gt;dotAll&lt;/code&gt; is a read-only property of an individual regular expression instance.</source>
          <target state="translated">&lt;code&gt;dotAll&lt;/code&gt; 속성은 &quot;여부를 나타냅니다 &lt;code&gt;s&lt;/code&gt; &quot;플래그가 정규 표현식 사용됩니다. &lt;code&gt;dotAll&lt;/code&gt; 은 개별 정규식 인스턴스의 읽기 전용 속성입니다.</target>
        </trans-unit>
        <trans-unit id="cafc1c80ecc27bb3a72c0d0cb5a2aa1041336d66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encodeURI()&lt;/code&gt; function does not encode characters that have special meaning (reserved characters) for a URI. The following example shows all the parts that a URI &quot;scheme&quot; can possibly contain. Note how certain characters are used to signify special meaning:</source>
          <target state="translated">&lt;code&gt;encodeURI()&lt;/code&gt; 함수는 URI에 대한 특별한 의미 (예약 된 문자)가 없습니다 인코딩 문자를한다. 다음 예제는 URI &quot;scheme&quot;에 포함될 수있는 모든 부분을 보여줍니다. 특정 문자가 특별한 의미를 나타내는 데 사용되는 방법에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="9b037595b9a4b32697b21b81f6d685a6b7b0cc69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endsWith()&lt;/code&gt; method determines whether a string ends with the characters of a specified string, returning &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; as appropriate.</source>
          <target state="translated">&lt;code&gt;endsWith()&lt;/code&gt; 메소드가 복귀 여부를 결정 지정된 문자열의 문자 스트링 단부 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 적절.</target>
        </trans-unit>
        <trans-unit id="f2b0ab0f5ccb2224397cb0e32e16b7fd20efdcbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entries()&lt;/code&gt; method returns a new &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; iterator object that contains the key/value pairs for each index in the array.</source>
          <target state="translated">&lt;code&gt;entries()&lt;/code&gt; 메소드가 복귀 새로운 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 배열의 각 지수의 키 / 값 쌍을 포함 반복자 객체.</target>
        </trans-unit>
        <trans-unit id="6b9e346adfa1b501f7258a884c4f52ebb1fce163" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entries()&lt;/code&gt; method returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the key/value pairs for each index in the array.</source>
          <target state="translated">&lt;code&gt;entries()&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;Array Iterator&lt;/code&gt; 배열의 각 지수의 키 / 값 쌍을 포함 개체.</target>
        </trans-unit>
        <trans-unit id="d036220d6658628ee5e94806cbf8fc74109a09c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entries()&lt;/code&gt; method returns a new &lt;strong&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/strong&gt; object that contains the &lt;code&gt;[key, value]&lt;/code&gt; pairs for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">&lt;code&gt;entries()&lt;/code&gt; 메소드가 복귀 새로운 &lt;strong&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;반복기&lt;/a&gt;&lt;/strong&gt; 포함 오브젝트 &lt;code&gt;[key, value]&lt;/code&gt; 각 요소 쌍 &lt;code&gt;Map&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="87b09108ef664e6dfa16ce85f1b2411faaed8092" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entries()&lt;/code&gt; method returns a new &lt;strong&gt;Array Iterator&lt;/strong&gt; object that contains the key/value pairs for each index in the array.</source>
          <target state="translated">&lt;code&gt;entries()&lt;/code&gt; 메소드가 복귀 새로운 &lt;strong&gt;배열 반복기&lt;/strong&gt; 배열의 각 지수의 키 / 값 쌍을 포함 개체.</target>
        </trans-unit>
        <trans-unit id="769b265003faa6091f017d7147f12f3732022a92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enum&lt;/code&gt; identifier is generally reserved.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; 식별자는 일반적으로 예약된다.</target>
        </trans-unit>
        <trans-unit id="248a7d9a5873cc3f556301fa757159e374622ac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enumerable&lt;/code&gt; property attribute defines whether the property is picked by &lt;a href=&quot;assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;spread &lt;/a&gt;operator. For non-&lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbols&lt;/code&gt;&lt;/a&gt; properties it also defines whether it shows up in a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop and &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt; or not.</source>
          <target state="translated">&lt;code&gt;enumerable&lt;/code&gt; 속성 특성은 재산권에 의해 촬상되는지 여부를 정의 &lt;a href=&quot;assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;확산&lt;/a&gt; 연산자. &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbols&lt;/code&gt; &lt;/a&gt; 아닌 속성의 경우 &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; 루프 및 &lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;/a&gt;에 표시되는지 여부도 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="262f6845d838ab7895857d8dab6ec4e384ed3f75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enumerate&lt;/code&gt; handler has been removed.</source>
          <target state="translated">&lt;code&gt;enumerate&lt;/code&gt; 핸들러가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="c58c301365e002ef6e195d4ad19d6e3601592065" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;every()&lt;/code&gt; method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.</source>
          <target state="translated">&lt;code&gt;every()&lt;/code&gt; 에있어서 시험은 어레이의 모든 요소들은 제공된 기능에 의해 구현 된 시험 합격 여부. 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aceb70200f127a63e6b59e215ef165605a5adee9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;every&lt;/code&gt; method executes the provided &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for each element present in the array until it finds the one where &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; returns a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; value. If such an element is found, the &lt;code&gt;every&lt;/code&gt; method immediately returns &lt;code&gt;false&lt;/code&gt;. Otherwise, if &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; returns a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; value for all elements, &lt;code&gt;every&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; 방법은 제공된 실행 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 은 하나가 발견 될 때까지, 상기 어레이의 각 요소에 대한 본 번 함수 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 반환 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; 값. 그러한 요소가 발견되면 &lt;code&gt;every&lt;/code&gt; 메서드는 즉시 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇지 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;않고 &lt;/a&gt; &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 이 모든 요소에 대해 정확한 값을 반환하면 &lt;code&gt;every&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="60cda406b7503937cb4bcba89ffc4774b591579c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;every&lt;/code&gt; method executes the provided &lt;code&gt;callback&lt;/code&gt; function once for each element present in the array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; value. If such an element is found, the &lt;code&gt;every&lt;/code&gt; method immediately returns &lt;code&gt;false&lt;/code&gt;. Otherwise, if &lt;code&gt;callback&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; value for all elements, &lt;code&gt;every&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values.</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; 방법은 제공된 실행 &lt;code&gt;callback&lt;/code&gt; 은 하나가 발견 될 때까지, 상기 어레이의 각 요소에 대한 본 번 함수 &lt;code&gt;callback&lt;/code&gt; 반환 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; 값. 이러한 요소가 발견되면 &lt;code&gt;every&lt;/code&gt; 메소드는 즉시 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 그렇지 않으면, 경우 &lt;code&gt;callback&lt;/code&gt; 반환 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy의&lt;/a&gt; 모든 요소에 대한 값을 &lt;code&gt;every&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; . &lt;code&gt;callback&lt;/code&gt; 은 값이 할당 된 배열의 인덱스에 대해서만 호출됩니다. 삭제되었거나 값이 할당되지 않은 인덱스에 대해서는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fe726a22b9fe9e4b71733bdecdeba4c970f7e0e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;every&lt;/code&gt; method executes the provided &lt;code&gt;callback&lt;/code&gt; function once for each element present in the typed array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a &lt;em&gt;falsy&lt;/em&gt; value (a value that becomes false when converted to a Boolean). If such an element is found, the &lt;code&gt;every&lt;/code&gt; method immediately returns &lt;code&gt;false&lt;/code&gt;. Otherwise, if &lt;code&gt;callback&lt;/code&gt; returned a true value for all elements, &lt;code&gt;every&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; 방법은 제공된 실행 &lt;code&gt;callback&lt;/code&gt; 은 하나 찾을 때까지 입력 된 배열의 각 요소 본 한번씩 함수 &lt;code&gt;callback&lt;/code&gt; 반환 &lt;em&gt;falsy&lt;/em&gt; 값 (부울로 변환 할 때 거짓이되는 값). 이러한 요소가 발견되면 &lt;code&gt;every&lt;/code&gt; 메소드는 즉시 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 그렇지 않은 경우, &lt;code&gt;callback&lt;/code&gt; 모든 요소에 대한 진정한 가치를 반환, &lt;code&gt;every&lt;/code&gt; 반환됩니다 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5502d324148be748c13c8b24bf2ff1dfda3fd2ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exec()&lt;/code&gt; method executes a search for a match in a specified string. Returns a result array, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;exec()&lt;/code&gt; 메소드는 지정된 문자열에서 일치 검색을 실행합니다. 결과 배열 또는 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; 을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="efdba96cff56395729ef4e9257785e2d9d724e76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; has no meaningful return value. It communicates via the side-effect caused by &lt;code&gt;resolutionFunc&lt;/code&gt; or &lt;code&gt;rejectionFunc&lt;/code&gt;. The side-effect is that the &lt;code&gt;promiseObj&lt;/code&gt; becomes &quot;resolved.&quot;</source>
          <target state="translated">&lt;code&gt;executor&lt;/code&gt; 의미있는 반환 값이 없습니다. &lt;code&gt;resolutionFunc&lt;/code&gt; 또는 &lt;code&gt;rejectionFunc&lt;/code&gt; 로 인한 부작용을 통해 통신합니다 . 부작용은 &lt;code&gt;promiseObj&lt;/code&gt; 가 &quot;해결&quot; 된다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="514cf52cee92af741272314e4239cd9d8ed665b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; might also include a &lt;code&gt;try{} catch()&lt;/code&gt; block that invokes &lt;code&gt;rejectionFunc&lt;/code&gt; upon error.</source>
          <target state="translated">&lt;code&gt;executor&lt;/code&gt; 또한 포함 할 수 있습니다 &lt;code&gt;try{} catch()&lt;/code&gt; 블록 즉 발동 할 &lt;code&gt;rejectionFunc&lt;/code&gt; 오류시를.</target>
        </trans-unit>
        <trans-unit id="9da67b0a2bf1e2e56acd5e6a00e10cd0f9ba6fad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;export&lt;/code&gt; statement is used when creating JavaScript modules to export functions, objects, or primitive values from the module so they can be used by other programs with the &lt;a href=&quot;import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">&lt;code&gt;export&lt;/code&gt; 그들이 다른 프로그램에서 사용할 수 있도록 모듈에서 기능, 객체 또는 원시 값을 내보낼 자바 스크립트 모듈을 만들 때 문이 사용되는 &lt;a href=&quot;import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 문.</target>
        </trans-unit>
        <trans-unit id="ac08c0dd3d98a97c893ac5332305a8eb01806efb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;export&lt;/code&gt; statement is used when creating JavaScript modules to export live bindings to functions, objects, or primitive values from the module so they can be used by other programs with the &lt;a href=&quot;import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement. Bindings that are exported can still be modified locally; when imported, although they can only be read by the importing module the value updates whenever it is updated by the exporting module.</source>
          <target state="translated">&lt;code&gt;export&lt;/code&gt; 그들이 다른 프로그램에서 사용할 수 있도록 모듈에서 기능, 객체 또는 기본 값으로 라이브 바인딩을 내보낼 자바 스크립트 모듈을 만들 때 문이 사용되는 &lt;a href=&quot;import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; 문. 내 보낸 바인딩은 여전히 ​​로컬에서 수정할 수 있습니다. 가져올 때 가져 오는 모듈에서만 읽을 수 있지만 값은 내보내기 모듈에서 업데이트 할 때마다 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="1d121d7c83043915b62c3d026d20e9eb9ce0263a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exports&lt;/code&gt; readonly property of the &lt;a href=&quot;../instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; object prototype returns an object containing as its members all the functions exported from the WebAssembly module instance, to allow them to be accessed and used by JavaScript.</source>
          <target state="translated">&lt;a href=&quot;../instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt; 객체 프로토 타입 의 &lt;code&gt;exports&lt;/code&gt; 읽기 전용 속성은 WebAssembly 모듈 인스턴스에서 내 보낸 모든 함수를 멤버로 포함하는 객체를 반환하여 JavaScript에서 액세스하고 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="398bb44428230207be4b29663c2d907af05f08fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exports[0]&lt;/code&gt; output looks like this:</source>
          <target state="translated">&lt;code&gt;exports[0]&lt;/code&gt; 이 같은 출력 같다 :</target>
        </trans-unit>
        <trans-unit id="1248c8ee5b9877f2e85da9ce2ebd273eed344846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; keyword can be used to subclass custom classes as well as built-in objects.</source>
          <target state="translated">는 &lt;code&gt;extends&lt;/code&gt; 뿐만 아니라 내장 된 물체 키워드가 서브 클래스 사용자 정의 클래스에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3405692b8c6bf150e1b3404da95112532c97688" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; keyword is used in &lt;a href=&quot;../statements/class&quot;&gt;class declarations&lt;/a&gt; or &lt;a href=&quot;../operators/class&quot;&gt;class expressions&lt;/a&gt; to create a class that is a child of another class.</source>
          <target state="translated">는 &lt;code&gt;extends&lt;/code&gt; 키워드에 사용되는 &lt;a href=&quot;../statements/class&quot;&gt;클래스 선언&lt;/a&gt; 또는 &lt;a href=&quot;../operators/class&quot;&gt;클래스 식&lt;/a&gt; 다른 클래스의 하위 클래스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8be240467cc255fa80e8a5d40e5248d61e3121d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; keyword is used in &lt;a href=&quot;../statements/class&quot;&gt;class declarations&lt;/a&gt; or &lt;a href=&quot;../operators/class&quot;&gt;class expressions&lt;/a&gt; to create a class which is a child of another class.</source>
          <target state="translated">는 &lt;code&gt;extends&lt;/code&gt; 키워드에 사용되는 &lt;a href=&quot;../statements/class&quot;&gt;클래스 선언&lt;/a&gt; 또는 &lt;a href=&quot;../operators/class&quot;&gt;클래스 식&lt;/a&gt; 다른 클래스의 하위 클래스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9c6fff34eb2957d22e20e462d2759e3b630de74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fill&lt;/code&gt; method takes up to three arguments &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; arguments are optional with default values of &lt;code&gt;0&lt;/code&gt; and the &lt;code&gt;length&lt;/code&gt; of the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;fill&lt;/code&gt; 방법은 세 가지 인수에 소요 &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; . &lt;code&gt;start&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 인수는 디폴트의 값을 선택적 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;length&lt;/code&gt; 의 &lt;code&gt;this&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="38ddded712b39d8bf6b80e4c1d87c203842eb7d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter()&lt;/code&gt; method &lt;strong&gt;creates a new array&lt;/strong&gt; with all elements that pass the test implemented by the provided function.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; 메소드는 &lt;strong&gt;새로운 배열 생성&lt;/strong&gt; 제공된 기능에 의해 구현 된 시험을 통과하는 모든 요소를.</target>
        </trans-unit>
        <trans-unit id="0e3b582ede252bcf25aebee36e7e68677d22aa38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter()&lt;/code&gt; method calls a provided &lt;code&gt;callback&lt;/code&gt; function once for each element in a typed array, and constructs a new typed array of all the values for which &lt;code&gt;callback&lt;/code&gt; returns a true value. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the typed array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values. Typed array elements which do not pass the &lt;code&gt;callback&lt;/code&gt; test are simply skipped, and are not included in the new typed array.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; 메소드는 제공된 호출 &lt;code&gt;callback&lt;/code&gt; 형식화 어레이의 각 요소의 기능을 한번하고있는 값보다도 새로운 형식화 된 배열 구축 &lt;code&gt;callback&lt;/code&gt; 되돌 진정한 값. &lt;code&gt;callback&lt;/code&gt; 은 값이 할당 된 형식화 된 배열의 인덱스에 대해서만 호출됩니다. 삭제되었거나 값이 할당되지 않은 인덱스에 대해서는 호출되지 않습니다. &lt;code&gt;callback&lt;/code&gt; 테스트를 통과하지 못한 형식화 된 배열 요소 는 단순히 건너 뛰고 새로운 형식의 배열에는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b5f309c0b5856c39cb9b939d27f25e1d4dbdaffc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally()&lt;/code&gt; method can be useful if you want to do some processing or cleanup once the promise is settled, regardless of its outcome.</source>
          <target state="translated">&lt;code&gt;finally()&lt;/code&gt; 에 관계없이 그 결과의 약속이 정착되면 일부 처리 또는 정리 작업을 수행하려는 경우 방법이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3ad5f90671b6ba01a9367d357180093e59e7e7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally()&lt;/code&gt; method is very similar to calling &lt;code&gt;.then(onFinally, onFinally)&lt;/code&gt; however there are a couple of differences:</source>
          <target state="translated">&lt;code&gt;finally()&lt;/code&gt; 메소드 호출과 매우 유사하다 &lt;code&gt;.then(onFinally, onFinally)&lt;/code&gt; 그러나 차이가 몇 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ca2b8cacac1a430149bebcb16b2ae7b2f9d5b2df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally()&lt;/code&gt; method is very similar to calling &lt;code&gt;.then(onFinally, onFinally)&lt;/code&gt; however there are couple of differences:</source>
          <target state="translated">&lt;code&gt;finally()&lt;/code&gt; 메소드 호출과 매우 유사하다 &lt;code&gt;.then(onFinally, onFinally)&lt;/code&gt; 그러나 차이의 커플이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="196471a16c914a13d2fbfcd335eef8ea1355f403" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally()&lt;/code&gt; method returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. When the promise is settled, i.e either fulfilled or rejected, the specified callback function is executed. This provides a way for code to be run whether the promise was fulfilled successfully or rejected once the &lt;code&gt;Promise&lt;/code&gt; has been dealt with.</source>
          <target state="translated">&lt;code&gt;finally()&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; . 약속이 성립되면 즉, 이행되거나 거부되면 지정된 콜백 함수가 실행됩니다. 이를 통해 &lt;code&gt;Promise&lt;/code&gt; 가 성공적으로 이행되었는지 아니면 Promise 가 처리 된 후 거부되었는지 여부에 관계없이 코드를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="afb8460fbc1a6af0566d608676e595d2980214bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally&lt;/code&gt; clause</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 절</target>
        </trans-unit>
        <trans-unit id="493a6b259c76f8e49c9fb9f85cb6a55f07cd517c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally&lt;/code&gt; clause contains statements to execute after the &lt;code&gt;try&lt;/code&gt; block and &lt;code&gt;catch&lt;/code&gt; clause(s) execute, but before the statements following the &lt;code&gt;try..catch..finally&lt;/code&gt; block. Note that the &lt;code&gt;finally&lt;/code&gt; clause executes regardless of whether an exception is thrown. Also, if an exception is thrown, the statements in the &lt;code&gt;finally&lt;/code&gt; clause execute even if no &lt;code&gt;catch&lt;/code&gt; clause handles the exception.</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 절은 후 실행 문이 포함되어 &lt;code&gt;try&lt;/code&gt; 블록과 &lt;code&gt;catch&lt;/code&gt; 절 (들)을 실행을하지만, 문 전은 다음 &lt;code&gt;try..catch..finally&lt;/code&gt; 를 차단합니다. 있습니다 &lt;code&gt;finally&lt;/code&gt; 절은 예외 발생과 상관없이 실행합니다. 또한 예외가 발생 하면 &lt;code&gt;catch&lt;/code&gt; 절이 예외를 처리 하지 않아도 &lt;code&gt;finally&lt;/code&gt; 절의 문이 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="ae0af582c79ba9fdaa1e4be03ccddb06832fa849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally&lt;/code&gt; clause executes after the &lt;code&gt;try&lt;/code&gt; block and &lt;code&gt;catch&lt;/code&gt; clause(s) execute but before the statements following the &lt;code&gt;try&lt;/code&gt; statement. It always executes, regardless of whether an exception was thrown or caught.</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 애프터 조항이 실행 &lt;code&gt;try&lt;/code&gt; 블록과 &lt;code&gt;catch&lt;/code&gt; 절 (들)을 실행하지만, 문 앞에 다음과 같은 &lt;code&gt;try&lt;/code&gt; 문을. 예외 발생 여부에 관계없이 항상 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1be008f714d4ec026b632f157f6e05c96576c3b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally&lt;/code&gt;-block contains statements to execute after the &lt;code&gt;try&lt;/code&gt;-block and &lt;code&gt;catch&lt;/code&gt;-block(s) execute, but before the statements following the &lt;code&gt;try...catch...finally&lt;/code&gt;-block. Note that the &lt;code&gt;finally&lt;/code&gt;-block executes regardless of whether an exception is thrown. Also, if an exception is thrown, the statements in the &lt;code&gt;finally&lt;/code&gt;-block execute even if no &lt;code&gt;catch&lt;/code&gt;-block handles the exception.</source>
          <target state="translated">은 &lt;code&gt;finally&lt;/code&gt; - 블록 애프터 실행 문이 포함되어 &lt;code&gt;try&lt;/code&gt; - 블록 및 &lt;code&gt;catch&lt;/code&gt; - 블록 (들)을 실행을하지만, 다음과 같은 문장 전에 &lt;code&gt;try...catch...finally&lt;/code&gt; - 블록. 참고 그 &lt;code&gt;finally&lt;/code&gt; - 블록이 실행에 관계없이 예외가 발생하는지 여부. 또한 예외가 발생 하면 &lt;code&gt;catch&lt;/code&gt; -block이 예외를 처리 하지 않더라도 &lt;code&gt;finally&lt;/code&gt; -block 의 문이 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f98af3e850c9dab0f8826d3fc96e031ca648d0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finally&lt;/code&gt;-block will always execute after the &lt;code&gt;try&lt;/code&gt;-block and &lt;code&gt;catch&lt;/code&gt;-block(s) have finished executing. It always executes, regardless of whether an exception was thrown or caught.</source>
          <target state="translated">는 &lt;code&gt;finally&lt;/code&gt; 애프터 - 블록 항상 실행됩니다 &lt;code&gt;try&lt;/code&gt; - 블록 및 &lt;code&gt;catch&lt;/code&gt; - 블록 (들)을 실행 완료. 예외가 발생했는지 포착되었는지에 관계없이 항상 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e5f6713723c7619c7300bf101bc438adb98d7784" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method does not mutate the array on which it is called, but the function provided to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; can. If so, the elements processed by &lt;code&gt;find&lt;/code&gt; are set &lt;em&gt;before&lt;/em&gt; the first invocation of &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. Therefore:</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; 메소드가 호출되는 배열되지만 제공 기능하지 않는 돌연변이 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 캔. 그렇다면 &lt;code&gt;find&lt;/code&gt; 에 의해 처리 된 요소 는 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 의 첫 번째 호출 &lt;em&gt;전에&lt;/em&gt; 설정 됩니다 . 따라서:</target>
        </trans-unit>
        <trans-unit id="514ea0ec90480ac5d69556ad71762316c6ff8ee8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method executes the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for each index of the array until the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; returns a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; value. If so, &lt;code&gt;find&lt;/code&gt; immediately returns the value of that element. Otherwise, &lt;code&gt;find&lt;/code&gt; returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; 방법은 실행 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 까지 상기 어레이의 각각의 인덱스에 대한 함수 번 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 리턴 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy의&lt;/a&gt; 값. 그렇다면 &lt;code&gt;find&lt;/code&gt; 는 즉시 해당 요소의 값을 반환합니다. 그렇지 않으면 &lt;code&gt;find&lt;/code&gt; 는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ebb9ff3b4d2328dc13d0f5dbf5fefaf6cb770084" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method executes the &lt;code&gt;callback&lt;/code&gt; function once for each element present in the typed array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a true value. If such an element is found, &lt;code&gt;find&lt;/code&gt; immediately returns the value of that element. Otherwise, &lt;code&gt;find&lt;/code&gt; returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the typed array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values.</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; 방법은 실행 &lt;code&gt;callback&lt;/code&gt; 은 하나 찾을 때까지 입력 된 배열의 각 요소 본 한번씩 함수 &lt;code&gt;callback&lt;/code&gt; 참 값을 리턴한다. 이러한 요소를 찾으면 &lt;code&gt;find&lt;/code&gt; 는 해당 요소의 값을 즉시 리턴합니다. 그렇지 않으면 &lt;code&gt;find&lt;/code&gt; 는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; 를&lt;/a&gt; 반환합니다 . &lt;code&gt;callback&lt;/code&gt; 은 값이 할당 된 형식화 된 배열의 인덱스에 대해서만 호출됩니다. 삭제되었거나 값이 할당되지 않은 인덱스에 대해서는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a2f6dbc0e7d561f4adb48c5a0084b12e047f565d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method executes the &lt;code&gt;callback&lt;/code&gt; function once for each index of the array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a true value. If such an element is found, &lt;code&gt;find&lt;/code&gt; immediately returns the value of that element. Otherwise, &lt;code&gt;find&lt;/code&gt; returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;callback&lt;/code&gt; is invoked for every index of the array from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;length - 1&lt;/code&gt; and is invoked for all indexes, not just those that have been assigned values. This may mean that it's less efficient for sparse arrays than other methods that only visit indexes that have been assigned a value.</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; 방법은 실행 &lt;code&gt;callback&lt;/code&gt; 은 하나가 발견 될 때까지, 상기 어레이의 각 인덱스에 대해 한 번 함수 &lt;code&gt;callback&lt;/code&gt; 참 값을 리턴한다. 이러한 요소를 찾으면 &lt;code&gt;find&lt;/code&gt; 는 해당 요소의 값을 즉시 리턴합니다. 그렇지 않으면 &lt;code&gt;find&lt;/code&gt; 는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; 를&lt;/a&gt; 반환합니다 . &lt;code&gt;callback&lt;/code&gt; 은 배열의 모든 인덱스에 대해 &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;length - 1&lt;/code&gt; 까지 호출되며 값이 할당 된 인덱스뿐만 아니라 모든 인덱스에 대해 호출됩니다. 이는 값이 할당 된 인덱스 만 방문하는 다른 방법보다 희소 배열의 효율성이 낮음을 의미 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d49eff4e3f55cea93c281cab820db2d8a8142e7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findIndex()&lt;/code&gt; method executes the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for every index in the array until it finds the one where &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; returns a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; value.</source>
          <target state="translated">&lt;code&gt;findIndex()&lt;/code&gt; 메소드가 실행 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 은 하나가 발견 될 때까지, 상기 어레이의 모든 인덱스에 대한 함수를 한번 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 반환 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy의&lt;/a&gt; 값.</target>
        </trans-unit>
        <trans-unit id="7a8b983e2f4829e511b41212dc899b30c721853a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findIndex&lt;/code&gt; method executes the &lt;code&gt;callback&lt;/code&gt; function once for each element present in the typed array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a true value. If such an element is found, &lt;code&gt;findIndex&lt;/code&gt; immediately returns the index of that element. Otherwise, &lt;code&gt;findIndex&lt;/code&gt; returns -1. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the typed array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values.</source>
          <target state="translated">&lt;code&gt;findIndex&lt;/code&gt; 의 방법은 실행 &lt;code&gt;callback&lt;/code&gt; 은 하나 찾을 때까지 입력 된 배열의 각 요소 본 한번씩 함수 &lt;code&gt;callback&lt;/code&gt; 참 값을 리턴한다. 이러한 요소가 발견되면 &lt;code&gt;findIndex&lt;/code&gt; 는 즉시 해당 요소의 색인을 리턴합니다. 그렇지 않으면 &lt;code&gt;findIndex&lt;/code&gt; 는 -1을 반환합니다. &lt;code&gt;callback&lt;/code&gt; 은 값이 할당 된 형식화 된 배열의 인덱스에 대해서만 호출됩니다. 삭제되었거나 값이 할당되지 않은 인덱스에 대해서는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e184dccaa01d8c1336c503c32e412ef6fedc68a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findIndex&lt;/code&gt; method executes the &lt;code&gt;callback&lt;/code&gt; function once for every array index &lt;code&gt;0..length-1&lt;/code&gt; (inclusive) in the array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a truthy value (a value that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Type_Conversion&quot;&gt;coerces&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;findIndex&lt;/code&gt; 의 방법은 실행 &lt;code&gt;callback&lt;/code&gt; 마다 배열 인덱스에 대해 한 번 함수 &lt;code&gt;0..length-1&lt;/code&gt; 은 하나의 위치를 찾을 때까지 배열 (포함) &lt;code&gt;callback&lt;/code&gt; 리턴 truthy 값 (값이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Type_Conversion&quot;&gt;강제 변환&lt;/a&gt; 에 &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ddb6a4717e869f31b8dfea822bc35fc297019a9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fixed()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt;&lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in fixed-pitch font.</source>
          <target state="translated">&lt;code&gt;fixed()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt; &lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt; &lt;/a&gt; 고정 피치 폰트로 표시되는 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="b7b984a41c2f05d5db054f11b7904e35bf50ab0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fixed()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt;&lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in fixed-pitch font.</source>
          <target state="translated">&lt;code&gt;fixed()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/tt&quot;&gt; &lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt; &lt;/a&gt; 고정 피치 폰트로 표시되는 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="c48c22c4579ce5d02046766c641cc1ca194ff818" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fixed()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;tt&amp;gt;str&amp;lt;/tt&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fixed()&lt;/code&gt; 메소드는 문자열 매립 &lt;code&gt;&amp;lt;tt&amp;gt;&lt;/code&gt; 태그 : &lt;code&gt;&quot;&amp;lt;tt&amp;gt;str&amp;lt;/tt&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da6f1c858ec71b5323356048afb4ff01ac37b5e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; property returns a string consisting of the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Advanced_searching_with_flags_2&quot;&gt;flags&lt;/a&gt; of the current regular expression object.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 속성은 구성된 문자열 반환 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Advanced_searching_with_flags_2&quot;&gt;플래그&lt;/a&gt; 현재 정규 표현식 개체를.</target>
        </trans-unit>
        <trans-unit id="a1f38db68a6bd39288ff7c228bab4de71e507f4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; property returns a string consisting of the flags of the current regular expression object.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 속성은 현재 정규 표현식 객체의 플래그 구성된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fe01e45b472a17933803d2bb3045c805fc95c57b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fontcolor()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in the specified font color.</source>
          <target state="translated">&lt;code&gt;fontcolor()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt; &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; &lt;/a&gt; 문자열 지정된 폰트 색상으로 표시되도록 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="f7f2c0991f28ca83bb7e3d0f0827ddb3f9cec109" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fontcolor()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in the specified font color.</source>
          <target state="translated">&lt;code&gt;fontcolor()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt; &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; &lt;/a&gt; 문자열 지정된 폰트 색상으로 표시되도록 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="e049850efda23e9baaf754634772c96f3d0e907b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fontsize()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in the specified font size.</source>
          <target state="translated">&lt;code&gt;fontsize()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt; &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; &lt;/a&gt; 문자열 지정된 폰트 크기로 표시되도록 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="521a847e6e060219e80f814bcc437df39f4b2a22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fontsize()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in the specified font size.</source>
          <target state="translated">&lt;code&gt;fontsize()&lt;/code&gt; 메소드는 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt; &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; &lt;/a&gt; 문자열 지정된 폰트 크기로 표시되도록 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="6dca382d5df8b29c68f4df5290889d7f8837998d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for await...of&lt;/code&gt; creates a loop iterating over async iterable objects as well as on sync iterables, including: built-in &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Array&lt;/code&gt;-like objects (e.g., &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt;), &lt;a href=&quot;../global_objects/typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, and user-defined async/sync iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object. Like the &lt;a href=&quot;../operators/await&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; operator, the statement can only be used inside an &lt;a href=&quot;async_function&quot;&gt;async function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;for await...of&lt;/code&gt; 다음 을 포함 하여 비동기 반복 가능 객체와 동기화 반복 가능 객체를 반복하는 루프 를 만듭니다. 내장 &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Array&lt;/code&gt; 객체 (예를 들어, -like&lt;a href=&quot;../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; 를&lt;/a&gt; )&lt;a href=&quot;../global_objects/typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../global_objects/set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 하고, 사용자 정의 비동기 / 동기화 반복 가능. 개체의 각 고유 속성 값에 대해 실행될 문으로 사용자 지정 반복 후크를 호출합니다.&lt;a href=&quot;../operators/await&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt; 연산자와 마찬가지로문은&lt;a href=&quot;async_function&quot;&gt; 비동기 함수&lt;/a&gt; 내에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07795950e389f56d946a676fa471420cef5f0fe3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for await...of&lt;/code&gt;creates a loop iterating over async iterable objects as well as on sync iterables, including: built-in &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Array&lt;/code&gt;-like objects (e.g., &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt;), &lt;a href=&quot;../global_objects/typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, and user-defined async/sync iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object.</source>
          <target state="translated">&lt;code&gt;for await...of&lt;/code&gt; 다음 을 포함 하여 비동기 반복 가능 오브젝트와 동기화 반복 가능 오브젝트를 반복하는 루프 를 작성합니다. 내장 &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Array&lt;/code&gt; 객체 (예를 들어, -like &lt;a href=&quot;../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; 를&lt;/a&gt; ) &lt;a href=&quot;../global_objects/typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 하고, 사용자 정의 비동기 / 동기화 이터 러블. 객체의 각 고유 속성 값에 대해 실행될 명령문으로 사용자 정의 반복 후크를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="92018a29351b2499a5caaa78a8fec107cbde8ac4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for each...in&lt;/code&gt; statement is deprecated as the part of ECMA-357 (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Archive/Web/E4X&quot;&gt;E4X&lt;/a&gt;) standard. E4X support has been removed. Consider using &lt;a href=&quot;for...of&quot;&gt;for...of&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;for each...in&lt;/code&gt; 문은 ECMA-357 (의 일부로 사용되지 않습니다 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Archive/Web/E4X&quot;&gt;E4X&lt;/a&gt; ) 표준입니다. E4X 지원이 제거되었습니다. 사용을 고려 &lt;a href=&quot;for...of&quot;&gt;의 ...을 위해&lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="45b44bc223e93fde9be7711839a6a03e587c9324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for...in&lt;/code&gt; iterates over all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; of an object that are keyed by strings (ignoring ones keyed by &lt;a href=&quot;../global_objects/symbol&quot;&gt;Symbol&lt;/a&gt;s), including inherited enumerable properties.</source>
          <target state="translated">을 &lt;code&gt;for...in&lt;/code&gt; 모든 것을 반복 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;열거 속성&lt;/a&gt; (에 의해 키가 사람 무시 문자열에 의해 키가 있습니다 개체의 &lt;a href=&quot;../global_objects/symbol&quot;&gt;기호&lt;/a&gt; 들), 열거 속성을 상속 포함.</target>
        </trans-unit>
        <trans-unit id="eb90258c1a74d909c7a02e4a5cd78322b013bc9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for...in&lt;/code&gt; iterates over all non-&lt;a href=&quot;../global_objects/symbol&quot;&gt;Symbol&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; of an object.</source>
          <target state="translated">&lt;code&gt;for...in&lt;/code&gt; 모든 비을 반복 &lt;a href=&quot;../global_objects/symbol&quot;&gt;기호&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;열거 속성&lt;/a&gt; 객체의.</target>
        </trans-unit>
        <trans-unit id="29406bf57a33a30a4b6f597e7fe2d7356f5eca8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for...in&lt;/code&gt; loop below iterates over all of the object's enumerable, non-Symbol properties and logs a string of the property names and their values.</source>
          <target state="translated">아래 의 &lt;code&gt;for...in&lt;/code&gt; 루프는 열거 가능한 모든 비 기호 속성에 대해 반복하고 속성 이름과 해당 값의 문자열을 기록합니다.</target>
        </trans-unit>
        <trans-unit id="c7ebace24c7f62cbe16da0220016e8a4b83c20c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for...of&lt;/code&gt; creates a loop iterating over &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable objects&lt;/a&gt;, including: built-in &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, array-like objects (e.g., &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt;), &lt;a href=&quot;../global_objects/typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, and user-defined iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object.</source>
          <target state="translated">&lt;code&gt;for...of&lt;/code&gt; 반복 루프 생성 &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;반복 가능한 객체를&lt;/a&gt; 포함 : 내장 된 &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , 배열과 같은 객체 (예를 들어, &lt;a href=&quot;../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; 를&lt;/a&gt; ) &lt;a href=&quot;../global_objects/typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 및 사용자 정의 반복 가능 객체. 개체의 각 고유 속성 값에 대해 실행될 문으로 사용자 지정 반복 후크를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f712afa8e9cb3754589a55d82fe83b933ad6717c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for...of&lt;/code&gt; statement iterates over data that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;iterable object&lt;/a&gt; defines to be iterated over.</source>
          <target state="translated">는 &lt;code&gt;for...of&lt;/code&gt; 문이 데이터를 통해 반복 할 것을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;반복 가능한 객체&lt;/a&gt; 를 정의는 이상 반복한다.</target>
        </trans-unit>
        <trans-unit id="f52f83d19eec812208fd9be18a819fe22d72b13f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for...of&lt;/code&gt; statement iterates over values that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;iterable object&lt;/a&gt; defines to be iterated over.</source>
          <target state="translated">는 &lt;code&gt;for...of&lt;/code&gt; 문이 값을 통해 반복 (Iteration) 것을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;반복 가능한 객체&lt;/a&gt; 를 정의는 이상 반복한다.</target>
        </trans-unit>
        <trans-unit id="c497a43bf18e1ae3f58f4b70fa1313f082991044" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for...of&lt;/code&gt;creates a loop iterating over &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable objects&lt;/a&gt;, including: built-in &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Array&lt;/code&gt;-like objects (e.g., &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt;), &lt;a href=&quot;../global_objects/typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, and user-defined iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object.</source>
          <target state="translated">&lt;code&gt;for...of&lt;/code&gt; 를 통해 루프 반복하는을 만들어 &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;반복 가능한 객체&lt;/a&gt; 를 포함 : 내장 &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;Array&lt;/code&gt; 예를 들어 객체 -like (,&lt;a href=&quot;../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; 를&lt;/a&gt; )&lt;a href=&quot;../global_objects/typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../global_objects/set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; 및 사용자 정의 반복 가능 객체. 객체의 각 고유 속성 값에 대해 실행될 명령문으로 사용자 정의 반복 후크를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d7a0d5c49560f1f4936019a26d87f27a98d42526" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forEach()&lt;/code&gt; method executes a provided function once for each value in the &lt;code&gt;Set&lt;/code&gt; object, in insertion order.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; 메소드는, 각각의 값에 대해 한번 실행 제공 기능 &lt;code&gt;Set&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="5efc2dbcd98d5f6d4b3b86e9305c209a61fb28ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forEach()&lt;/code&gt; method executes a provided function once per each key/value pair in the &lt;code&gt;Map&lt;/code&gt; object, in insertion order.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; 메소드는 일단 각 키 / 값 쌍에 따라 제공된 기능을 실행 &lt;code&gt;Map&lt;/code&gt; 신청서에 개체.</target>
        </trans-unit>
        <trans-unit id="a08b0d1748d341e624fb81448feb1197fc9de8a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forEach()&lt;/code&gt; method executes the provided &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; once for each value which actually exists in the &lt;code&gt;Set&lt;/code&gt; object. It is not invoked for values which have been deleted. However, it is executed for values which are present but have the value &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; 메소드가 실행 제공 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 실제로 존재하는 각 값에 대해 한 번 &lt;code&gt;Set&lt;/code&gt; 오브젝트. 삭제 된 값에 대해서는 호출되지 않습니다. 그러나 존재하지만 값이 &lt;code&gt;undefined&lt;/code&gt; 인 값에 대해 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="6da8bd4887945e1df08e947192a941ac0562f0b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forEach()&lt;/code&gt; method executes the provided &lt;code&gt;callback&lt;/code&gt; once for each element present in the typed array in ascending order. It is not invoked for indexes that have been deleted or elided. However, it is executed for elements that are present and have the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; 메소드가 실행 제공 &lt;code&gt;callback&lt;/code&gt; 오름차순으로 형식화 된 배열 내의 각 요소를 본 한번씩. 삭제되거나 제거 된 인덱스에 대해서는 호출되지 않습니다. 그러나 존재하고 값이 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; 인&lt;/a&gt; 요소에 대해 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="db182815806ced5ebb493f02e1d099d07a63467b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forEach()&lt;/code&gt; method executes the provided &lt;code&gt;callback&lt;/code&gt; once for each value which actually exists in the &lt;code&gt;Set&lt;/code&gt; object. It is not invoked for values which have been deleted. However, it is executed for values which are present but have the value &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; 메소드가 실행 제공 &lt;code&gt;callback&lt;/code&gt; 실제로 존재하는 각 값에 대해 한 번 &lt;code&gt;Set&lt;/code&gt; 오브젝트. 삭제 된 값에 대해서는 호출되지 않습니다. 그러나 존재하지만 값이 &lt;code&gt;undefined&lt;/code&gt; 인 값에 대해 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="624846b98d4ad01a43e4a2d063d0286252bcb587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forEach&lt;/code&gt; method executes the provided &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; once for each key of the map which actually exist. It is not invoked for keys which have been deleted. However, it is executed for values which are present but have the value &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forEach&lt;/code&gt; 방법 제공된 실행 &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; 실제로 존재 맵의 각 키를 한번. 삭제 된 키에 대해서는 호출되지 않습니다. 그러나 존재하지만 값이 &lt;code&gt;undefined&lt;/code&gt; 인 값에 대해 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9f7e05c5fd62de0070b06e49a72a216e6f80b94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forEach&lt;/code&gt; method executes the provided &lt;code&gt;callback&lt;/code&gt; once for each key of the map which actually exist. It is not invoked for keys which have been deleted. However, it is executed for values which are present but have the value &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forEach&lt;/code&gt; 방법 제공된 실행 &lt;code&gt;callback&lt;/code&gt; 실제로 존재 맵의 각 키를 한번. 삭제 된 키에 대해서는 호출되지 않습니다. 그러나 존재하지만 값이 &lt;code&gt;undefined&lt;/code&gt; 인 값에 대해 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="3484ccead86795ec5227d7b97d89b2be0176b35d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format()&lt;/code&gt; method returns a string that has been formatted based on parameters provided in the &lt;code&gt;Intl.ListFormat&lt;/code&gt; object. The &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters customize the behavior of &lt;code&gt;format()&lt;/code&gt; and let applications specify the language conventions that should be used to format the list.</source>
          <target state="translated">&lt;code&gt;format()&lt;/code&gt; 메서드는 서식이 제공 매개 변수를 기반으로 된 문자열을 반환 &lt;code&gt;Intl.ListFormat&lt;/code&gt; 의 개체를. &lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 매개 변수의 동작 사용자 정의 &lt;code&gt;format()&lt;/code&gt; 및 응용 프로그램 목록을 포맷에 사용하는 언어 규칙을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2730c14ff303a9fb4770bb1731471fa0c7c48d1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format()&lt;/code&gt; method returns a string with a language-specific representation of the list.</source>
          <target state="translated">&lt;code&gt;format()&lt;/code&gt; 메소드는리스트의 언어 별 표현 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3753fddb0edf80fd2603855a8733eb4631536042" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; getter formats a date into a string according to the locale and formatting options of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 게터는 로케일이의 서식 옵션에 따라 문자열로 날짜를 포맷 &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; 의&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f90f1555e24c5021efb0eefba1e8d6811a258e92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; getter function formats a number into a string according to the locale and formatting options of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 게터 기능은 로케일이 포맷의 선택에 따른 문자열로 번호를 포맷 &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="47707ac9c7ec07d1a6e52f111d6e71aac45b003f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatToParts()&lt;/code&gt; method is useful for custom formatting of date strings. It returns an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the locale-specific tokens from which it possible to build custom strings while preserving the locale-specific parts. The structure the &lt;code&gt;formatToParts()&lt;/code&gt; method returns, looks like this:</source>
          <target state="translated">&lt;code&gt;formatToParts()&lt;/code&gt; 메서드는 날짜 문자열의 형식을 정의하는 데 유용합니다. 로케일 특정 부분을 보존하면서 사용자 정의 문자열을 빌드 할 수있는 로케일 특정 토큰을 포함하는 객체 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . &lt;code&gt;formatToParts()&lt;/code&gt; 메서드가 반환 하는 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0ca7c3b42e910613bcd59048c92585787ffc8fa4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatToParts()&lt;/code&gt; method is useful for custom formatting of date strings. It returns an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the locale-specific tokens from which it possible to build custom strings while preserving the locale-specific parts. The structure the &lt;code&gt;formatToParts()&lt;/code&gt; method returns, looks like this:</source>
          <target state="translated">&lt;code&gt;formatToParts()&lt;/code&gt; 메서드는 날짜 문자열의 형식을 정의하는 데 유용합니다. 로케일 특정 부분을 유지하면서 사용자 정의 문자열을 빌드 할 수있는 로케일 특정 토큰이 포함 된 오브젝트 의 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 리턴합니다 . &lt;code&gt;formatToParts()&lt;/code&gt; 메소드가 리턴 하는 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1408ba60dcc7e05fdaa6f4c65c6d4db23d9ce26d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatToParts()&lt;/code&gt; method is useful for custom formatting of number strings. It returns an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the locale-specific tokens from which it possible to build custom strings while preserving the locale-specific parts. The structure the &lt;code&gt;formatToParts()&lt;/code&gt; method returns, looks like this:</source>
          <target state="translated">&lt;code&gt;formatToParts()&lt;/code&gt; 메소드 번호 문자열 포맷을 정의하는데 유용하다. 로케일 특정 부분을 보존하면서 사용자 정의 문자열을 빌드 할 수있는 로케일 특정 토큰을 포함하는 객체 &lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . &lt;code&gt;formatToParts()&lt;/code&gt; 메서드가 반환 하는 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fab0d98a022cfcafdbadc12bf113a20afcc1d6b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatToParts()&lt;/code&gt; method is useful for custom formatting of number strings. It returns an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of objects containing the locale-specific tokens from which it possible to build custom strings while preserving the locale-specific parts. The structure the &lt;code&gt;formatToParts()&lt;/code&gt; method returns, looks like this:</source>
          <target state="translated">그만큼 &lt;code&gt;formatToParts()&lt;/code&gt; 메소드 번호 문자열 포맷을 정의하는데 유용하다. 로케일 특정 부분을 유지하면서 사용자 정의 문자열을 빌드 할 수있는 로케일 특정 토큰이 포함 된 오브젝트 의 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 을 리턴합니다 . &lt;code&gt;formatToParts()&lt;/code&gt; 메소드가 리턴 하는 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd423370e6c4bf20906012c05a38d24688897b5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;function*&lt;/code&gt; keyword can be used to define a generator function inside an expression.</source>
          <target state="translated">&lt;code&gt;function*&lt;/code&gt; 키워드는 내부 식 발전기 함수를 정의 할 수있다.</target>
        </trans-unit>
        <trans-unit id="8f156c2704eb928c282ec963343ae475c9d3b08e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;function*&lt;/code&gt; keyword defines a generator function expression.</source>
          <target state="translated">&lt;code&gt;function*&lt;/code&gt; 키워드는 발전기 함수 표현식을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="33e827b4ed74885f2170b0ea61a127c1413e0b08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;function&lt;/code&gt; keyword can be used to define a function inside an expression.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 키워드 식 내부 함수를 정의 할 수있다.</target>
        </trans-unit>
        <trans-unit id="134d18d1ded106547a7ac40a53ef2d07abd2638f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;function&lt;/code&gt; keyword can be used to define a legacy generator function inside an expression. To make the function a legacy generator, the function body should contains at least one &lt;a href=&quot;operators/yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 키워드 식 내부 레거시 생성 함수를 정의 할 수있다. 함수를 레거시 생성기 (legacy generator)로 만들려면 함수 본문에 적어도 하나의 &lt;a href=&quot;operators/yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt; 표현식이 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="1376db3f2218216b073ab1cc640028ca29c50085" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;function&lt;/code&gt; keyword defines a function expression.</source>
          <target state="translated">그만큼 &lt;code&gt;function&lt;/code&gt; 키워드는 함수 표현식을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dcf7eade3d9e275e43dc8563858c380b56747cd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get()&lt;/code&gt; method can return any value.</source>
          <target state="translated">&lt;code&gt;get()&lt;/code&gt; 메서드는 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df79d683dec44cc903b1b6cef6eaba68473e6d3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get()&lt;/code&gt; method returns a specified element from a &lt;code&gt;Map&lt;/code&gt; object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;get()&lt;/code&gt; 메소드는에서 지정된 요소를 반환 &lt;code&gt;Map&lt;/code&gt; 개체를. 제공된 키에 연결된 값이 개체 인 경우 해당 개체에 대한 참조를 얻고 해당 개체에 대한 변경 사항은 &lt;code&gt;Map&lt;/code&gt; 개체 내에서 효과적으로 수정됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d607ceb9d63e2082cbe617a52d90396d1e27d2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get()&lt;/code&gt; method returns a specified element from a &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;get()&lt;/code&gt; 메소드는에서 지정된 요소를 반환 &lt;code&gt;WeakMap&lt;/code&gt; 의 개체를.</target>
        </trans-unit>
        <trans-unit id="22e2627431db302a628ff6fee1b32925f73fabfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method can return any value.</source>
          <target state="translated">그만큼 &lt;code&gt;get&lt;/code&gt; 메소드는 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13f27328229caf8369980cf45d2a8c6bb39118ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; syntax binds an object property to a function that will be called when that property is looked up.</source>
          <target state="translated">그만큼 &lt;code&gt;get&lt;/code&gt; 구문은 그 속성이 조회 될 때 호출되는 함수에 객체 속성을 결합한다.</target>
        </trans-unit>
        <trans-unit id="2591b453926a1d9db3a6ced2be7eb48647e0e062" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getBigInt64()&lt;/code&gt; method gets a signed 64-bit integer (long long) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getBigInt64()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호 64 비트 정수 (긴 길이) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c3f03751f7afc88e75ae65ec533691b3bfd119e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getBigUint64()&lt;/code&gt; method gets an unsigned 64-bit integer (unsigned long long) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getBigUint64()&lt;/code&gt; 메소드는 시작부터 오프셋에서 지정된 바이트 (긴 길이 부호없는) 부호없는 64 비트 정수 얻는다 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d05dd55ae668fc9f4dadca6fcd731e01110ff5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getDate()&lt;/code&gt; method returns the day of the month for the specified date according to local time.</source>
          <target state="translated">그만큼 &lt;code&gt;getDate()&lt;/code&gt; 메소드는 현지 시간에 따라 지정된 날짜의 월의 일을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e04f3a360c18901fbc4ea2940bf454193ab3666c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getDay()&lt;/code&gt; method returns the day of the week for the specified date according to local time, where 0 represents Sunday. For the day of the month see &lt;a href=&quot;getdate&quot;&gt;getDate()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getDay()&lt;/code&gt; 메서드는 0 일요일을 나타냅니다 현지 시간에 따라 지정된 날짜의 요일을 반환합니다. 해당 월의 일에 대해서는 &lt;a href=&quot;getdate&quot;&gt;getDate ()를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6c3d39b69af7b66e9c195fbcb8ad25201c81227" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getDay()&lt;/code&gt; method returns the day of the week for the specified date according to local time, where 0 represents Sunday. For the day of the month, see &lt;a href=&quot;getdate&quot;&gt;&lt;code&gt;Date.prototype.getDate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getDay()&lt;/code&gt; 메서드는 0 일요일을 나타냅니다 현지 시간에 따라 지정된 날짜의 요일을 반환합니다. 날짜는 &lt;a href=&quot;getdate&quot;&gt; &lt;code&gt;Date.prototype.getDate()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a9f9f676c0cc78ad67df96facf8f3f38aa56a43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getFloat32()&lt;/code&gt; method gets a signed 32-bit float (float) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getFloat32()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호 32 비트 플로우트 (플로트) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa36571f206932e93411e982c87c578947461a0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getFloat64()&lt;/code&gt; method gets a signed 64-bit float (double) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getFloat64()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호 64 비트 플로우트 (더블) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d9d146589515af1bb3daa9cd983a4603940525ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getFullYear()&lt;/code&gt; method returns the year of the specified date according to local time.</source>
          <target state="translated">&lt;code&gt;getFullYear()&lt;/code&gt; 메소드는 현지 시간에 따라 지정된 날짜의 연도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2847e189000182b336da2124e9513f819d01930f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getHours()&lt;/code&gt; method returns the hour for the specified date, according to local time.</source>
          <target state="translated">&lt;code&gt;getHours()&lt;/code&gt; 메소드는 로컬 시간에 지정된 기간에 대한 시간을 반환한다.</target>
        </trans-unit>
        <trans-unit id="52e82be3f6a954249303eaef82b3b7c60c752028" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getInt16()&lt;/code&gt; method gets a signed 16-bit integer (short) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getInt16()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호없는 16 비트 정수 (짧은) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="962649f728dba72ec76eb3806281dd1d21b5e028" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getInt32()&lt;/code&gt; method gets a signed 32-bit integer (long) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getInt32()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호없는 32 비트 정수 (long)를 얻는다 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="980cdc01daf7be300e5b8c69d8215b0716f5b04a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getInt8()&lt;/code&gt; method gets a signed 8-bit integer (byte) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getInt8()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호 8 비트 정수 (바이트) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36afd52250cf4065f352d5f83fdccdd94e509185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getMilliseconds()&lt;/code&gt; method returns the milliseconds in the specified date according to local time.</source>
          <target state="translated">&lt;code&gt;getMilliseconds()&lt;/code&gt; 메소드가 복귀 로컬 시간에 지정된 날짜의 밀리.</target>
        </trans-unit>
        <trans-unit id="e6bfe75388540e76a5084b891c3fdcbe40323576" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getMinutes()&lt;/code&gt; method returns the minutes in the specified date according to local time.</source>
          <target state="translated">&lt;code&gt;getMinutes()&lt;/code&gt; 메소드가 복귀 로컬 시간에 지정된 날짜의 분.</target>
        </trans-unit>
        <trans-unit id="403b1a9a59018c87ead2fc41704995448cbf8f1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getMonth()&lt;/code&gt; method returns the month in the specified date according to local time, as a zero-based value (where zero indicates the first month of the year).</source>
          <target state="translated">&lt;code&gt;getMonth()&lt;/code&gt; 메소드 (영 해의 첫 달 나타냄)는 제로 값으로, 로컬 시간에 지정된 날짜에 달을 반환한다.</target>
        </trans-unit>
        <trans-unit id="53bd2fb6d2dc36c91cbe35fb37db419fed2d1699" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOwnPropertyDescriptor()&lt;/code&gt; method must return an object or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getOwnPropertyDescriptor()&lt;/code&gt; 메소드는 객체 또는 반환해야 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea41ec984f65501c21f45f656c294aaab666ad64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; method must return an object or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; 의 방법은 개체 또는 반환해야합니다 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb43577f214e451e0124a66fd5821b427b71f671" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getPrototypeOf()&lt;/code&gt; method must return an object or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getPrototypeOf()&lt;/code&gt; 메소드는 객체 또는 반환해야 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8f23c761f1daf7cf770d343be0e8a0b70d781d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getPrototypeOf&lt;/code&gt; method must return an object or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getPrototypeOf&lt;/code&gt; 의 방법은 개체 또는 반환해야 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1106dd2a14afc0d3fc0d455fd9ea6f20293b1ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getSeconds()&lt;/code&gt; method returns the seconds in the specified date according to local time.</source>
          <target state="translated">&lt;code&gt;getSeconds()&lt;/code&gt; 메소드가 복귀 로컬 시간에 지정된 날짜의 초.</target>
        </trans-unit>
        <trans-unit id="1d2fdf1f99ad92258cb6d5067fc39d58b84ae1fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getTime()&lt;/code&gt; method returns the number of milliseconds* since the &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Epoch&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getTime()&lt;/code&gt; 메소드가 반환 (밀리 초)의 수는 이후 * &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;유닉스 신기원&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c4b0f5f01e52cdd348a4a4f41c9c6c66a9163f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getTime()&lt;/code&gt; method returns the numeric value corresponding to the time for the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getTime()&lt;/code&gt; 메소드 표준시에 따라 지정된 날짜의 시간에 대응하는 숫자 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="0cf6cd047165df1fea08b2a65982c5365eef255e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getTimezoneOffset()&lt;/code&gt; method returns the time zone difference, in minutes, from current locale (host system settings) to UTC.</source>
          <target state="translated">&lt;code&gt;getTimezoneOffset()&lt;/code&gt; 메서드는 UTC에 현재 로케일 (호스트 시스템 설정)에서 분 시간대 차이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02ca508407a71cfecf575e3fd69c13c522024d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCDate()&lt;/code&gt; method returns the day (date) of the month in the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getUTCDate()&lt;/code&gt; 메소드는 표준시에 따라 지정된 날짜에 그 달의 날짜 (날짜)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="493c502fcb475e5477fe59c8175e1122e3d2392f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCDate()&lt;/code&gt; method returns the day of the month(from 1 to 31) in the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getUTCDate()&lt;/code&gt; 를 표준시에 따라 지정된 날짜 메소드가 리턴 (1 ~ 31) 월의 일.</target>
        </trans-unit>
        <trans-unit id="6c5141384fd8dbcf7314b85412ffb1186ac3eb0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCDay()&lt;/code&gt; method returns the day of the week in the specified date according to universal time, where 0 represents Sunday.</source>
          <target state="translated">&lt;code&gt;getUTCDay()&lt;/code&gt; 메서드는 0 일요일을 나타냅니다 표준시에 따라 지정된 날짜에 요일을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="485ae8904d445cb931eaf57bc2f6fc5a75c956f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCFullYear()&lt;/code&gt; method returns the year in the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getUTCFullYear()&lt;/code&gt; 메서드는 표준시에 따라 지정된 날짜에서 연도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6e0f2c7e6cdce96b470e00d6dae64071d42f2714" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCHours()&lt;/code&gt; method returns the hours in the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getUTCHours()&lt;/code&gt; 메소드가 반환 표준시에 따라 지정된 날짜의 시간.</target>
        </trans-unit>
        <trans-unit id="792ad172d83482315cfaade158ab4b56a8070d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCMilliseconds()&lt;/code&gt; method returns the milliseconds in the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getUTCMilliseconds()&lt;/code&gt; 메소드가 반환 표준시에 따라 지정된 날짜의 밀리 초.</target>
        </trans-unit>
        <trans-unit id="5c2b02769e5e0eafbf4eedd3b4f2b3e75e8fe721" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCMilliseconds()&lt;/code&gt; method returns the milliseconds portion of the time object's value.</source>
          <target state="translated">&lt;code&gt;getUTCMilliseconds()&lt;/code&gt; 메소드는 객체의 시간 값의 밀리 세컨드 부분을 반환한다.</target>
        </trans-unit>
        <trans-unit id="4d6dc3e7a23a53a4431d50d20b4314fbf51e3b4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCMinutes()&lt;/code&gt; method returns the minutes in the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getUTCMinutes()&lt;/code&gt; 메소드가 반환 표준시에 따라 지정된 날짜의 분.</target>
        </trans-unit>
        <trans-unit id="a8e2240d70cd6c006b32d6d66bd2dc4e25e784b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCMonth()&lt;/code&gt; returns the month of the specified date according to universal time, as a zero-based value (where zero indicates the first month of the year).</source>
          <target state="translated">&lt;code&gt;getUTCMonth()&lt;/code&gt; (영 해의 첫 달을 나타냅니다) 0부터 시작하는 값으로, 표준시에 따라 지정된 날짜의 월을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4994a1c81f9b0ead2db9194632edcb867919d3e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUTCSeconds()&lt;/code&gt; method returns the seconds in the specified date according to universal time.</source>
          <target state="translated">&lt;code&gt;getUTCSeconds()&lt;/code&gt; 메소드가 반환 표준시에 따라 지정된 날짜에 초.</target>
        </trans-unit>
        <trans-unit id="b4cb9d2442b33b0752c362a8b69a2e4787f4d186" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUint16()&lt;/code&gt; method gets an unsigned 16-bit integer (unsigned short) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getUint16()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호없는 16 비트 정수 (부호 짧은) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31b4253c3ebb280c0d1c463c1ff695239fb52130" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUint32()&lt;/code&gt; method gets an unsigned 32-bit integer (unsigned long) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getUint32()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호없는 32 비트 정수 (unsigned long을) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c90ef7ca51d5a8571747710d9a0c566e95bd223d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getUint8()&lt;/code&gt; method gets an unsigned 8-bit integer (unsigned byte) at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getUint8()&lt;/code&gt; 메소드는 개시 오프셋 지정된 바이트의 부호없는 8 비트 정수 (부호 바이트) 도착 &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; 를이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fa148dd64b0a8e7a1016abebc50656723fcef9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getYear()&lt;/code&gt; method returns either a 2-digit or 4-digit year:</source>
          <target state="translated">&lt;code&gt;getYear()&lt;/code&gt; 메소드가 복귀 중 2 자리 또는 4 자리 년도 :</target>
        </trans-unit>
        <trans-unit id="8ff2e6a4770ec16ad8a2aef0bfc4093f6b09c7e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getYear()&lt;/code&gt; method returns the year in the specified date according to local time. Because &lt;code&gt;getYear()&lt;/code&gt; does not return full years (&quot;year 2000 problem&quot;), it is no longer used and has been replaced by the &lt;a href=&quot;getfullyear&quot;&gt;&lt;code&gt;getFullYear()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;getYear()&lt;/code&gt; 메소드는 현지 시간에 따라 지정된 날짜에서 연도를 반환합니다. &lt;code&gt;getYear()&lt;/code&gt; 는 전체 연도 ( &quot;2000 년 문제&quot;)를 반환하지 않기 때문에 더 이상 사용되지 않으며 &lt;a href=&quot;getfullyear&quot;&gt; &lt;code&gt;getFullYear()&lt;/code&gt; &lt;/a&gt; 메서드 로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ddeeb1a8c80dd55d495f18e4339394cdfaee1be6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;global&lt;/code&gt; property indicates whether or not the &quot;&lt;code&gt;g&lt;/code&gt;&quot; flag is used with the regular expression. &lt;code&gt;global&lt;/code&gt; is a read-only property of an individual regular expression instance.</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 속성은 &quot;여부를 나타냅니다 &lt;code&gt;g&lt;/code&gt; &quot;플래그가 정규 표현식 사용됩니다. &lt;code&gt;global&lt;/code&gt; 은 개별 정규식 인스턴스의 읽기 전용 속성입니다.</target>
        </trans-unit>
        <trans-unit id="e23d0d65eed45b30a1a33bf6fe0256654d3d0983" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalThis&lt;/code&gt; property provides a standard way of accessing the global &lt;code&gt;this&lt;/code&gt; value (and hence the global object itself) across environments. Unlike similar properties such as &lt;code&gt;window&lt;/code&gt; and &lt;code&gt;self&lt;/code&gt;, it's guaranteed to work in window and non-window contexts. In this way, you can access the global object in a consistent manner without having to know which environment the code is being run in. To help you remember the name, just remember that in global scope the &lt;code&gt;this&lt;/code&gt; value is &lt;code&gt;globalThis&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;globalThis&lt;/code&gt; 의 속성은 전역 액세스하는 표준 방법 제공 &lt;code&gt;this&lt;/code&gt; 환경에서 (따라서 세계 객체 자체) 값. &lt;code&gt;window&lt;/code&gt; 및 &lt;code&gt;self&lt;/code&gt; 와 같은 유사한 속성과 달리 window 및 non-window 컨텍스트에서 작동하는 것이 보장됩니다. 이런 식으로 코드가 실행되는 환경을 알 필요없이 일관된 방식으로 전역 개체에 액세스 할 수 있습니다. 이름을 기억하는 데 도움이되도록 전역 범위 &lt;code&gt;this&lt;/code&gt; 값은 &lt;code&gt;globalThis&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9c4ae749dfc02b57fa2a602ea8209b5a5af4898f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;grow()&lt;/code&gt; protoype method of the &lt;code&gt;&lt;a href=&quot;../memory&quot;&gt;Memory&lt;/a&gt;&lt;/code&gt; object increases the size of the memory instance by a specified number of WebAssembly pages.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../memory&quot;&gt;Memory&lt;/a&gt;&lt;/code&gt; 객체 의 &lt;code&gt;grow()&lt;/code&gt; protoype 메서드 는 지정된 수의 WebAssembly 페이지만큼 메모리 인스턴스의 크기를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="d9d2f55a6442ec009dff9f8791025ae6d16936c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.apply()&lt;/code&gt; method is a trap for a function call.</source>
          <target state="translated">&lt;code&gt;handler.apply()&lt;/code&gt; 메소드는 함수 호출에 대한 트랩이다.</target>
        </trans-unit>
        <trans-unit id="71e9b20ebc580ec5d8397d60b22e3e56f111d5a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.construct()&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. In order for the new operation to be valid on the resulting Proxy object, the target used to initialize the proxy must itself have a &lt;code&gt;[[Construct]]&lt;/code&gt; internal method (i.e. &lt;code&gt;new target&lt;/code&gt; must be valid).</source>
          <target state="translated">&lt;code&gt;handler.construct()&lt;/code&gt; 메소드는 대한 트랩 인 &lt;a href=&quot;../../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 오퍼레이터. 새 작업이 결과 Proxy 개체에서 유효하려면 프록시를 초기화하는 데 사용되는 대상 자체에 &lt;code&gt;[[Construct]]&lt;/code&gt; 내부 메서드가 있어야합니다 (즉, &lt;code&gt;new target&lt;/code&gt; 이 유효해야 함).</target>
        </trans-unit>
        <trans-unit id="da11e5195e97ea8a85450a5c62373ae9b040b9cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.defineProperty()&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handler.defineProperty()&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34e98c61053dec6731b28a1be2fcdf4dea2fcc94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.deleteProperty()&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;code&gt;handler.deleteProperty()&lt;/code&gt; 메소드는 대한 트랩 인 &lt;a href=&quot;../../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt; 연산자.</target>
        </trans-unit>
        <trans-unit id="7e5ab0de815a367d114d029c9082ded5622f891b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.get()&lt;/code&gt; method is a trap for getting a property value.</source>
          <target state="translated">&lt;code&gt;handler.get()&lt;/code&gt; 메소드는 속성 값을 가져 오는 함정이다.</target>
        </trans-unit>
        <trans-unit id="aa8b37133034564088222a099ba7d4fe7bbb28ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.getOwnPropertyDescriptor()&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handler.getOwnPropertyDescriptor()&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="662e490d239cf317ded669d86352248ee9c9afa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.getPrototypeOf()&lt;/code&gt; method is a trap for the &lt;code&gt;[[GetPrototypeOf]]&lt;/code&gt; internal method.</source>
          <target state="translated">&lt;code&gt;handler.getPrototypeOf()&lt;/code&gt; 메소드는 대한 트랩 인 &lt;code&gt;[[GetPrototypeOf]]&lt;/code&gt; 내부 방법.</target>
        </trans-unit>
        <trans-unit id="d144a88e59d6732706042d1b8eb2f35df5a2fd2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.getPrototypeOf()&lt;/code&gt; method is a trap for the&lt;code&gt; [[GetPrototypeOf]]&lt;/code&gt; internal method.</source>
          <target state="translated">&lt;code&gt;handler.getPrototypeOf()&lt;/code&gt; 메소드는 대한 트랩 인 &lt;code&gt; [[GetPrototypeOf]]&lt;/code&gt; 내부 방법.</target>
        </trans-unit>
        <trans-unit id="a5b4c65dd0b7a110d6c1535f91f335edae32cdce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.has()&lt;/code&gt; method is a trap for the &lt;a href=&quot;../../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">&lt;code&gt;handler.has()&lt;/code&gt; 메소드는 인위한 트랩 &lt;a href=&quot;../../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; 오퍼레이터.</target>
        </trans-unit>
        <trans-unit id="c6c293f67d7c5e7952172040332bf0247fedefa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.isExtensible()&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handler.isExtensible()&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cad75bca6dd2dae5242f0905ebba96efb71161d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.ownKeys()&lt;/code&gt; method is a trap for &lt;a href=&quot;../../reflect/ownkeys&quot;&gt;&lt;code&gt;Reflect.ownKeys()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handler.ownKeys()&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../reflect/ownkeys&quot;&gt; &lt;code&gt;Reflect.ownKeys()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e03465bf0925a432e723c9df7faaf10db9089082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.preventExtensions()&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handler.preventExtensions()&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53335859323da023e567e6e564dcfc079e4d9a14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.set()&lt;/code&gt; method is a trap for setting a property value.</source>
          <target state="translated">&lt;code&gt;handler.set()&lt;/code&gt; 메소드는 속성 값을 설정하는 트랩이다.</target>
        </trans-unit>
        <trans-unit id="b34c42feebcd0b8745a3409c30a53b81a69f04a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handler.setPrototypeOf()&lt;/code&gt; method is a trap for &lt;a href=&quot;../../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;handler.setPrototypeOf()&lt;/code&gt; 메소드에 대한 트랩 인 &lt;a href=&quot;../../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8471b9215fa821a45f187248ec1a13ab6809a916" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has()&lt;/code&gt; method must return a boolean value.</source>
          <target state="translated">&lt;code&gt;has()&lt;/code&gt; 메소드는 부울 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="fc46567c18590c07e578334b6722c6306d10a6bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has()&lt;/code&gt; method returns a boolean indicating whether an element with the specified key exists in the &lt;code&gt;WeakMap&lt;/code&gt; object or not.</source>
          <target state="translated">&lt;code&gt;has()&lt;/code&gt; 메소드는, 특정 키 요소가 존재하는지 여부를 나타내는 부울 반환 &lt;code&gt;WeakMap&lt;/code&gt; 의 물체의 유무.</target>
        </trans-unit>
        <trans-unit id="0f1bbf2d2540e249e86327be5216d12d7009dc1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has()&lt;/code&gt; method returns a boolean indicating whether an element with the specified key exists or not.</source>
          <target state="translated">&lt;code&gt;has()&lt;/code&gt; 메소드가 복귀 부울 지정된 키 요소가 존재하는지 여부를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="7a1c4de5a8d6cf3dbccaacd4ff5cc9311bf64483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has()&lt;/code&gt; method returns a boolean indicating whether an element with the specified value exists in a &lt;code&gt;Set&lt;/code&gt; object or not.</source>
          <target state="translated">그만큼 &lt;code&gt;has()&lt;/code&gt; 부울 지정된 값을 가지는 요소가 존재하는지 여부를 나타내는 방법 복귀 &lt;code&gt;Set&lt;/code&gt; 오브젝트 여부.</target>
        </trans-unit>
        <trans-unit id="af5b204376e81277e9a4986f6b810d11d819f710" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has()&lt;/code&gt; method returns a boolean indicating whether an object exists in a &lt;code&gt;WeakSet&lt;/code&gt; or not.</source>
          <target state="translated">그만큼 &lt;code&gt;has()&lt;/code&gt; 메소드가 복귀 부울 개체가 존재하는지 여부를 나타내는 &lt;code&gt;WeakSet&lt;/code&gt; 여부.</target>
        </trans-unit>
        <trans-unit id="fdfcd91dc8f4435cbfb2e13d27046695b20cb020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method must return a boolean value.</source>
          <target state="translated">&lt;code&gt;has&lt;/code&gt; 방법은 부울 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="bbd46b70455dd1f7722601b173db7e4ae3ff530a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hasOwnProperty()&lt;/code&gt; method returns a boolean indicating whether the object has the specified property as its own property (as opposed to inheriting it).</source>
          <target state="translated">&lt;code&gt;hasOwnProperty()&lt;/code&gt; 메소드가 반환 부울는 (그것을 상속 반대) 객체가 자신의 속성으로 지정된 속성이 있는지 여부를 나타내는.</target>
        </trans-unit>
        <trans-unit id="75ed48a069a521b293c113ddc34d6c83d44c843f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; executes a statement if a specified condition is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;. If the condition is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;, another statement can be executed.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 지정된 조건이있는 경우 실행하는 문&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt; truthy&lt;/a&gt; . 조건이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; 이면 다른 명령문을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7e2ffad18433efedfa98f68a218e08732672865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ignoreCase&lt;/code&gt; property indicates whether or not the &quot;&lt;code&gt;i&lt;/code&gt;&quot; flag is used with the regular expression. &lt;code&gt;ignoreCase&lt;/code&gt; is a read-only property of an individual regular expression instance.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; 속성은 &quot;여부를 나타냅니다 &lt;code&gt;i&lt;/code&gt; &quot;플래그가 정규 표현식 사용됩니다. &lt;code&gt;ignoreCase&lt;/code&gt; 는 개별 정규식 인스턴스의 읽기 전용 속성입니다.</target>
        </trans-unit>
        <trans-unit id="a02b27715b2fe21499d61100129116507cecde04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import.meta&lt;/code&gt; object consists of the keyword &lt;a href=&quot;import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt;, a dot, and a property name &lt;code&gt;meta&lt;/code&gt;. Normally &lt;code&gt;import.&lt;/code&gt; serves as the context for a property access, but here &lt;code&gt;import.&lt;/code&gt; is not really an object.</source>
          <target state="translated">&lt;code&gt;import.meta&lt;/code&gt; 객체는 키워드로 구성되어 &lt;a href=&quot;import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt; , 점 및 속성 이름의 &lt;code&gt;meta&lt;/code&gt; . 일반적으로 &lt;code&gt;import.&lt;/code&gt; 속성 액세스의 컨텍스트로 사용되지만 여기서는 &lt;code&gt;import.&lt;/code&gt; 실제로는 객체가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="bd4535c25176da8e60dbc4d09c2cfbb6d7252947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import.meta&lt;/code&gt; object is created by the ECMAScript implementation, with a &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; prototype. The object is extensible, and its properties are writable, configurable, and enumerable.</source>
          <target state="translated">&lt;code&gt;import.meta&lt;/code&gt; 객체는 더불어, ECMAScript를 구현하여 만든 &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 프로토 타입. 개체는 확장 가능하며 속성은 쓰기 가능하고 구성 가능하며 열거 가능합니다.</target>
        </trans-unit>
        <trans-unit id="137b89f6f10ee4ca89dff87eedc511ac09b31e96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; keyword may be called as a function to dynamically import a module. When used this way, it returns a promise.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 키워드는 동적 모듈을 가져올 수있는 함수로 호출 할 수있다. 이 방법을 사용하면 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cd958d3d8612c968975765e609ccc04caf5a63c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; operator always expects an object.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 연산자는 항상 객체를 기대하고있다.</target>
        </trans-unit>
        <trans-unit id="70177b29eb0e4bfc6a23b96b657fc326b3f6a005" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; operator determines whether an object has a given property.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 오퍼레이터는 객체가 특정 속성을 가지고 있는지 판단한다.</target>
        </trans-unit>
        <trans-unit id="2af3817320c5d2c460c7e767b6bbeb13970040f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; operator returns &lt;code&gt;true&lt;/code&gt; for properties in the prototype chain.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 연산자는 반환 &lt;code&gt;true&lt;/code&gt; 프로토 타입 체인에서 속성.</target>
        </trans-unit>
        <trans-unit id="9dc0f2e78ee2299ef5213df96ceb4f079649f5ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; operator returns &lt;code&gt;true&lt;/code&gt; for properties in the prototype chain. (If you want to check for only &lt;em&gt;non-inherited&lt;/em&gt; properties, use &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt;&lt;/a&gt; instead.)</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 연산자는 반환 &lt;code&gt;true&lt;/code&gt; 프로토 타입 체인에서 속성. ( &lt;em&gt;상속되지 않은 항목&lt;/em&gt; 만 확인하려는 경우&lt;em&gt;&lt;/em&gt; 속성 대신 &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; &lt;/a&gt; 사용하십시오.)</target>
        </trans-unit>
        <trans-unit id="6a74650f0698b0f9b31143ef19fdc774639b6c4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; operator will return &lt;code&gt;false&lt;/code&gt; for empty array slots. Even if accessing it directly returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 연산자는 반환 &lt;code&gt;false&lt;/code&gt; , 빈 상태 (empty)의 배열 슬롯. 직접 액세스하더라도 &lt;code&gt;undefined&lt;/code&gt; 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="b6fa64d07582785dd2131600f615794034736d53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the specified property is in the specified object or its prototype chain.</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; 반환 &lt;code&gt;true&lt;/code&gt; 지정된 속성이 지정된 개체 또는 프로토 타입 체인에있는 경우.</target>
        </trans-unit>
        <trans-unit id="8ea9fa669bb545ce5f8669d897d233f52c2bd048" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;includes()&lt;/code&gt; method determines whether one string may be found within another string, returning &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; as appropriate.</source>
          <target state="translated">&lt;code&gt;includes()&lt;/code&gt; 방법은 하나의 문자열을 반환 다른 문자열 내에서 발견 될 수 있는지를 판정 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 적절.</target>
        </trans-unit>
        <trans-unit id="925e8148dcbf1a40f32cb464d6ee31e7c75e6798" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;includes()&lt;/code&gt; method is case sensitive. For example, the following expression returns &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">(가) &lt;code&gt;includes()&lt;/code&gt; 메소드는 대소 문자를 구분한다. 예를 들어 다음 표현식은 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="57a47f7d9e0fe49d6c50e9dab172f8b6fc789ef2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;includes()&lt;/code&gt; method is case sensitive. For example, the following expression returns false:</source>
          <target state="translated">&lt;code&gt;includes()&lt;/code&gt; 메소드는 대소 문자를 구분한다. 예를 들어 다음 표현식은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da25ad1444fb168b26f9af841d880d06222f7db2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexOf()&lt;/code&gt; method is case sensitive. For example, the following expression returns -1:</source>
          <target state="translated">&lt;code&gt;indexOf()&lt;/code&gt; 메소드는 대소 문자를 구분한다. 예를 들어 다음 표현식은 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9bb4c1535f743918f7664c27cc431e608690d9ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexOf()&lt;/code&gt; method is case sensitive. For example, the following expression returns &lt;code&gt;-1&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;indexOf()&lt;/code&gt; 메소드는 대소 문자를 구분한다. 예를 들어 다음 표현식은 &lt;code&gt;-1&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="88275165e94dfa73163214733a74215098b67408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexOf()&lt;/code&gt; method returns the index within the calling &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the first occurrence of the specified value, starting the search at &lt;code&gt;fromIndex&lt;/code&gt;. Returns -1 if the value is not found.</source>
          <target state="translated">&lt;code&gt;indexOf()&lt;/code&gt; 메소드 호출 색인을 반환 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 의 검색 시작, 지정된 값의 처음 나타나는 객체 &lt;code&gt;fromIndex&lt;/code&gt; 의이 . 값을 찾지 못하면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a652d250727862d6242817936626a86e238bb54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexOf()&lt;/code&gt; method returns the index within the calling &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the first occurrence of the specified value, starting the search at &lt;code&gt;fromIndex&lt;/code&gt;. Returns &lt;code&gt;-1&lt;/code&gt; if the value is not found.</source>
          <target state="translated">&lt;code&gt;indexOf()&lt;/code&gt; 메소드 호출 색인을 반환 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 의 검색 시작, 지정된 값의 처음 나타나는 객체 &lt;code&gt;fromIndex&lt;/code&gt; 의이 . 값이 없으면 &lt;code&gt;-1&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1131810937b6ceba699e277ff01edd9ab93e559b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instanceof&lt;/code&gt; operator determines whether an object is an instance of another object.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 는 운영자 개체에서 다른 개체의 인스턴스인지의 여부를 판정한다.</target>
        </trans-unit>
        <trans-unit id="ba7f451ad995e3c3e9637f8edfe7a77caa5c3780" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instanceof&lt;/code&gt; operator tests the presence of &lt;code&gt;constructor.prototype&lt;/code&gt; in &lt;code&gt;&lt;var&gt;object&lt;/var&gt;&lt;/code&gt;'s prototype chain.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 연산자의 존재 테스트 &lt;code&gt;constructor.prototype&lt;/code&gt; 에서 &lt;code&gt;&lt;var&gt;object&lt;/var&gt;&lt;/code&gt; 의 프로토 타입 체인.</target>
        </trans-unit>
        <trans-unit id="db5f10dc6f232cd9e6844d01ffbc76f124d2050a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instanceof&lt;/code&gt; operator tests the presence of &lt;code&gt;constructor.prototype&lt;/code&gt; in &lt;code&gt;object&lt;/code&gt;'s prototype chain.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 연산자의 존재 테스트 &lt;code&gt;constructor.prototype&lt;/code&gt; 에서 &lt;code&gt;object&lt;/code&gt; 의 프로토 타입 체인.</target>
        </trans-unit>
        <trans-unit id="fdeeaeb0aa83bd4d8a84d9ae27a02160bf1142f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instanceof&lt;/code&gt; tests to see if the &lt;code&gt;prototype&lt;/code&gt; property of a constructor appears anywhere in the prototype chain of an object. The return value is a boolean value.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 경우 시험 볼 &lt;code&gt;prototype&lt;/code&gt; 생성자의 속성이 객체의 프로토 타입 체인에 어디 나타납니다. 반환 값은 부울 값입니다.</target>
        </trans-unit>
        <trans-unit id="05eb0faee90a55ba0e606a263c4af994fcd1c9e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instanceof&lt;/code&gt; tests whether the &lt;code&gt;prototype&lt;/code&gt; property of a constructor appears anywhere in the prototype chain of an object.</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; 를 테스트 여부를 &lt;code&gt;prototype&lt;/code&gt; 생성자의 속성은 객체의 프로토 타입 체인에 어디 나타납니다.</target>
        </trans-unit>
        <trans-unit id="dcdcc12bdde7be84ae03763f40fe2e1e4b768c16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isExtensible()&lt;/code&gt; method must return a boolean value.</source>
          <target state="translated">&lt;code&gt;isExtensible()&lt;/code&gt; 메소드는 부울 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="db62a1f4bb9f66603917c1a79ebcc8a346d4e545" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isExtensible&lt;/code&gt; method must return a boolean value.</source>
          <target state="translated">&lt;code&gt;isExtensible&lt;/code&gt; 의 방법은 부울 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="85e3a1f11e7e8776b457b403545f6b2ffc357c60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isPrototypeOf()&lt;/code&gt; method allows you to check whether or not an object exists within another object's prototype chain.</source>
          <target state="translated">&lt;code&gt;isPrototypeOf()&lt;/code&gt; 메서드를 사용하면 객체가 다른 객체의 프로토 타입 체인 내에 존재하는지 여부를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5f77159e23aee640f0f908a05a7baedd41cab00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;islamicc&lt;/code&gt; calendar key has been deprecated. Please use &lt;code&gt;islamic-civil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;islamicc&lt;/code&gt; 의 일정 키가 더 이상 사용되지 않습니다. &lt;code&gt;islamic-civil&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="22c6c3a68a3f263cb8242bb52bcd85136093befc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;italics()&lt;/code&gt; method creates an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt;&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be italic.</source>
          <target state="translated">&lt;code&gt;italics()&lt;/code&gt; 메소드가 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt; &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; &lt;/a&gt; 이탤릭체 될 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="85cbefabdf67268d60621dad802ca02bb3e920cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;italics()&lt;/code&gt; method creates an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt;&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be italic.</source>
          <target state="translated">&lt;code&gt;italics()&lt;/code&gt; 메소드가 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt; &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; &lt;/a&gt; 이탤릭체 될 문자열을 일으키는 HTML 요소.</target>
        </trans-unit>
        <trans-unit id="b11dee7a5962a98be4ee10fd5794342f2e33d45d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;italics()&lt;/code&gt; method embeds a string in an &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;i&amp;gt;str&amp;lt;/i&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;italics()&lt;/code&gt; 방법은 문자열을 매립 &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; 태그 : &lt;code&gt;&quot;&amp;lt;i&amp;gt;str&amp;lt;/i&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e74dd16f9858676902cde2900dd4949803073594" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys()&lt;/code&gt; method is an alias for this method (for similarity with &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; objects); it behaves exactly the same and returns &lt;strong&gt;values&lt;/strong&gt; of &lt;code&gt;Set&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;keys()&lt;/code&gt; 메소드 (과 유사성이 방법의 별칭 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 오브젝트); 정확히 동일하게 작동하며 &lt;code&gt;Set&lt;/code&gt; 요소의 &lt;strong&gt;값&lt;/strong&gt; 을 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="183d7350179b9311f6ab0cc773e01fa02ad51905" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys()&lt;/code&gt; method returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the keys for each index in the array.</source>
          <target state="translated">&lt;code&gt;keys()&lt;/code&gt; 메소드가 복귀 새로운 &lt;code&gt;Array Iterator&lt;/code&gt; 배열의 각 인덱스에 대한 키를 포함 개체.</target>
        </trans-unit>
        <trans-unit id="43bff9cc9dfe670cd11c15baf6aa84037c0c087f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys()&lt;/code&gt; method returns a new &lt;strong&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/strong&gt; object that contains the keys for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">&lt;code&gt;keys()&lt;/code&gt; 메서드가 반환하는 새로운 &lt;strong&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;반복자&lt;/a&gt;&lt;/strong&gt; 의 각 요소에 대한 키를 포함 오브젝트 &lt;code&gt;Map&lt;/code&gt; 신청서의 개체.</target>
        </trans-unit>
        <trans-unit id="c3de86fba85aaf3b1e0ba72ea91d8433bf560795" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys()&lt;/code&gt; method returns a new &lt;strong&gt;Array Iterator&lt;/strong&gt; object that contains the keys for each index in the array.</source>
          <target state="translated">&lt;code&gt;keys()&lt;/code&gt; 메서드가 반환하는 새를&lt;strong&gt; 배열 반복기&lt;/strong&gt; 배열의 각 인덱스에 대한 키를 포함 개체.</target>
        </trans-unit>
        <trans-unit id="f138711db135dc77545d537efaa0371b48630b42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lastIndex&lt;/code&gt; is a read/write integer property of regular expression instances that specifies the index at which to start the next match.</source>
          <target state="translated">&lt;code&gt;lastIndex&lt;/code&gt; 다음 경기를 시작하는 시점의 인덱스를 지정 정규 표현식 인스턴스의 읽기 / 쓰기 정수 속성입니다.</target>
        </trans-unit>
        <trans-unit id="23d7ea72aede6afa9bf6337e59208b0df9cc6a61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lastIndexOf()&lt;/code&gt; method is case sensitive. For example, the following expression returns -1:</source>
          <target state="translated">&lt;code&gt;lastIndexOf()&lt;/code&gt; 메소드는 대소 문자를 구분한다. 예를 들어 다음 표현식은 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1751eb907983e4a1719f7df70356294e62484e28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lastIndexOf()&lt;/code&gt; method is case sensitive. For example, the following expression returns &lt;code&gt;-1&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;lastIndexOf()&lt;/code&gt; 메소드는 대소 문자를 구분한다. 예를 들어 다음 표현식은 &lt;code&gt;-1&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="7aeaa3725e44aeaaab6aa2ed98bb6cb13ae6961c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lastIndexOf()&lt;/code&gt; method returns the index within the calling &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the last occurrence of the specified value, searching backwards from &lt;code&gt;fromIndex&lt;/code&gt;. Returns -1 if the value is not found.</source>
          <target state="translated">&lt;code&gt;lastIndexOf()&lt;/code&gt; 메소드가 반환 호출 내의 인덱스 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 지정된 값의 마지막에 나타나는 객체에서 뒤로 검색 &lt;code&gt;fromIndex&lt;/code&gt; 의 . 값을 찾지 못하면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c35d337ad6aecf7b8592e4b2bd55202f76c710c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lastIndexOf()&lt;/code&gt; method returns the index within the calling &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object of the last occurrence of the specified value, searching backwards from &lt;code&gt;fromIndex&lt;/code&gt;. Returns &lt;code&gt;-1&lt;/code&gt; if the value is not found.</source>
          <target state="translated">&lt;code&gt;lastIndexOf()&lt;/code&gt; 메소드가 반환 호출 내의 인덱스 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 지정된 값의 마지막에 나타나는 객체에서 뒤로 검색 &lt;code&gt;fromIndex&lt;/code&gt; 의 . 값이 없으면 &lt;code&gt;-1&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="113510bfe2eab0d5b0a61ea4c42047ebb99f5885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; accessor property represents the length (in elements) of a typed array.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 속성 접근은 형식화 된 배열 (요소)의 길이를 나타낸다.</target>
        </trans-unit>
        <trans-unit id="e0bea20ba4e8859881970c1644f0973360394902" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property indicates the number of parameters expected by the function.</source>
          <target state="translated">그만큼 &lt;code&gt;length&lt;/code&gt; 속성은 함수가 예상 매개 변수의 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c8dd28c3bf8fd7c77f8d27e10373d279d0f83b72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property is an accessor property whose set accessor function is &lt;code&gt;undefined&lt;/code&gt;, meaning that you can only read this property. The value is established when a &lt;em&gt;TypedArray&lt;/em&gt; is constructed and cannot be changed. If the &lt;em&gt;TypedArray&lt;/em&gt; is not specifying an &lt;code&gt;byteOffset&lt;/code&gt; or a &lt;code&gt;length&lt;/code&gt;, the length of the referenced &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; will be returned. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray objects&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 속성은 그 설정 접근 기능을하는 접근 자 속성입니다 &lt;code&gt;undefined&lt;/code&gt; 경우에만이 속성을 읽을 수 있다는 것을 의미한다. 이 값은 &lt;em&gt;TypedArray&lt;/em&gt; 가 생성되고 변경 될 수 없을 때 설정됩니다 . 는 IF &lt;em&gt;하는 TypedArray가&lt;/em&gt; 지정되지 &lt;code&gt;byteOffset&lt;/code&gt; 또는 &lt;code&gt;length&lt;/code&gt; , 참조의 길이 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; 가&lt;/a&gt; 반환됩니다. &lt;em&gt;TypedArray&lt;/em&gt; 는 &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;TypedArray 객체&lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="67eba41d1eaecbf768298e8ceab866cb03f91cfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object contains the length of the string, in UTF-16 code units. &lt;code&gt;length&lt;/code&gt; is a read-only data property of string instances.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 개체 의 &lt;code&gt;length&lt;/code&gt; 속성 에는 UTF-16 코드 단위로 된 문자열 길이가 포함됩니다. &lt;code&gt;length&lt;/code&gt; 는 문자열 인스턴스의 읽기 전용 데이터 속성입니다.</target>
        </trans-unit>
        <trans-unit id="17eb6c72a74d84b4b63d4970c73653ebdce9ee57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object indicates the length of a string, in UTF-16 code units.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;code&gt;length&lt;/code&gt; 속성은 문자열 길이를 UTF-16 코드 단위로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cb11bdfd638aa86f8289baf1a1d8a061b583b03c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property of the &lt;code&gt;from()&lt;/code&gt; method is 1.</source>
          <target state="translated">&lt;code&gt;from()&lt;/code&gt; 메소드 의 &lt;code&gt;length&lt;/code&gt; 특성 은 1입니다.</target>
        </trans-unit>
        <trans-unit id="6c44178cacae95ef8523d628c6f9643b429b3caa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property of the &lt;code&gt;from()&lt;/code&gt; method is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;from()&lt;/code&gt; 메서드 의 &lt;code&gt;length&lt;/code&gt; 속성은 다음 과 같습니다. &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="09c5fb288f65bc91b4b3473ba47a47fb653facb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; statement declares a block scope local variable, optionally initializing it to a value.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 문은 선택적 값으로 초기화 블록 범위 지역 변수를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="c5194467d352a7ad54a706486102d4a2bd7732cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; statement declares a block-scoped local variable, optionally initializing it to a value.</source>
          <target state="translated">그만큼 &lt;code&gt;let&lt;/code&gt; 문은 선택적 값으로 초기화 블록 범위의 지역 변수를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="0313466e501e9d2ee779cff6b6907eb58890ff94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link()&lt;/code&gt; method creates a string representing the code for an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element to be used as a hypertext link to another URL.</source>
          <target state="translated">&lt;code&gt;link()&lt;/code&gt; 메소드는 대한 코드 나타내는 캐릭터 생성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 를&lt;/a&gt; 다른 URL에 하이퍼 링크로 사용되는 HTML 요소를.</target>
        </trans-unit>
        <trans-unit id="b90aebce0a55530775011b772f9c319e9c75bb00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link()&lt;/code&gt; method creates a string representing the code for an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element to be used as a hypertext link to another URL.</source>
          <target state="translated">&lt;code&gt;link()&lt;/code&gt; 메소드는 대한 코드 나타내는 캐릭터 생성 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; 다른 URL에 하이퍼 링크로 사용되는 HTML 요소를.</target>
        </trans-unit>
        <trans-unit id="2c8a94c9b1f0a43763fc71db81d01f21c354f32a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locale&lt;/code&gt; parameter indicates the locale to be used to convert to lower case according to any locale-specific case mappings. If multiple locales are given in an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://tc39.github.io/ecma402/#sec-bestavailablelocale&quot;&gt;best available locale&lt;/a&gt; is used. The default locale is the host environment&amp;rsquo;s current locale.</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; 파라미터 로케일 로케일 특정 경우에 따라 맵핑 소문자로 변환하는 데 사용되는 나타낸다. 여러 로케일이 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 에 제공되면 &lt;a href=&quot;https://tc39.github.io/ecma402/#sec-bestavailablelocale&quot;&gt;사용 가능한 최상의 로케일&lt;/a&gt; 이 사용됩니다. 기본 로캘은 호스트 환경의 현재 로캘입니다.</target>
        </trans-unit>
        <trans-unit id="87a61fc61be3cb2fa6992be6f5681a169ebfa637" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locale&lt;/code&gt; parameter indicates the locale to be used to convert to upper case according to any locale-specific case mappings. If multiple locales are given in an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://tc39.github.io/ecma402/#sec-bestavailablelocale&quot;&gt;best available locale&lt;/a&gt; is used. The default locale is the host environment&amp;rsquo;s current locale.</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; 파라미터 로케일 로케일 특정 경우 맵핑에 따라 대문자로 변환하는 데 사용되는 나타낸다. 여러 로케일이 &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; 에 제공되면 &lt;a href=&quot;https://tc39.github.io/ecma402/#sec-bestavailablelocale&quot;&gt;사용 가능한 최상의 로케일&lt;/a&gt; 이 사용됩니다. 기본 로캘은 호스트 환경의 현재 로캘입니다.</target>
        </trans-unit>
        <trans-unit id="fe7114676e5794e2c52c5f0428da500dcc35a1ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;localeCompare()&lt;/code&gt; method returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.</source>
          <target state="translated">&lt;code&gt;localeCompare()&lt;/code&gt; 메소드가 반환 참조 문자열이 이전 또는 이후에 오는 또는 정렬 순서의 지정된 문자열과 동일 여부를 나타내는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="6aeed06e967ddc180ae946ef126b7b1864c9b969" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;localeCompare()&lt;/code&gt; method returns a number indicating whether a reference string comes before, or after, or is the same as the given string in sort order.</source>
          <target state="translated">그만큼 &lt;code&gt;localeCompare()&lt;/code&gt; 메소드가 반환 참조 문자열을 이전 또는 이후에 오는, 또는 정렬 순서의 지정된 문자열과 동일 여부를 나타내는 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="883114d59602c7b3b87638f37eefba80d5f928a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments are not supported in all browsers yet. To check for support in ES5.1 and later implementations, the requirement that illegal language tags are rejected with a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception can be used:</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 인수는 아직 모든 브라우저에서 지원되지 않습니다. ES5.1 이상의 구현에서 지원 여부를 확인하기 위해 &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; 예외 와 함께 잘못된 언어 태그를 거부해야하는 요구 사항을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea464ebe7443bcc1cbc7c7ecc9c241c36251a148" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments are not supported in all browsers yet. To check whether an implementation supports them already, you can use the requirement that illegal language tags are rejected with a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception:</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 인수는 아직 모든 브라우저에서 지원되지 않습니다. 구현에서 이미 지원하는지 확인하려면 &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; 예외 와 함께 잘못된 언어 태그를 거부해야한다는 요구 사항을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f572b1180fdbc7170369c39d485a6e7766dc9db9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments are not supported in all browsers yet. To check whether an implementation supports them, use the &quot;i&quot; argument (a requirement that illegal language tags are rejected) and look for a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception:</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 인수는 아직 모든 브라우저에서 지원되지 않습니다. 구현이이를 지원하는지 확인하려면 &quot;i&quot;인수 (잘못된 언어 태그를 거부해야 함)를 사용하고 &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; 예외를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="b570f3bd09b4a757a5be0f74ff4d689bb2ddac6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments customize the behavior of the function and let applications specify the language whose formatting conventions should be used. In implementations that ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation-dependent.</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 인수는 함수의 동작을 사용자와 응용 프로그램이 그 서식 규칙에 사용하는 언어를 지정할 수 있습니다. &lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 인수 를 무시하는 구현에서 사용되는 로케일과 반환되는 문자열의 형식은 전적으로 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b07f53a230f7d77d63cc16928aac1fdde601079d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments customize the behavior of the function and let applications specify the language whose formatting conventions should be used. In implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation dependent.</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 인수는 함수의 동작을 사용자와 응용 프로그램이 그 서식 규칙에 사용하는 언어를 지정할 수 있습니다. &lt;code&gt;locales&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 인수 를 무시하는 구현에서 사용되는 로케일 과 반환되는 문자열의 형식은 전적으로 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e3949bb7189796b1cf1238b59f777179eda6e077" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; argument must be either a string holding a &lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;BCP 47 language tag&lt;/a&gt;, or an array of such language tags. If the &lt;code&gt;locales&lt;/code&gt; argument is not provided or is undefined, the runtime's default locale is used.</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 인수는 들고 문자열이어야합니다 &lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;BCP 47 언어 태그를&lt;/a&gt; , 또는 언어 태그의 배열. 는 IF &lt;code&gt;locales&lt;/code&gt; 인수가 제공되지 않거나 정의되지 런타임의 기본 로케일이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dfa92c9c4fe3403370a0c38543d3695c91b131e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; argument requests that a particular locale (or a locale from a list of them) be considered for use in a given operation. A single locale may be specified by either an &lt;code&gt;&lt;a href=&quot;intl/locale&quot;&gt;Intl.Locale&lt;/a&gt;&lt;/code&gt; object or a string that is a &lt;a href=&quot;https://www.unicode.org/reports/tr35/tr35.html#BCP_47_Conformance&quot;&gt;Unicode BCP 47 locale identifier&lt;/a&gt;. Multiple locales may be specified (and a best-supported locale determined by evaluating each of them in order and comparing against the locales supported by the implementation) by passing an array (or array-like object, with a &lt;code&gt;length&lt;/code&gt; property and corresponding indexed elements) whose elements are either &lt;code&gt;&lt;a href=&quot;intl/locale&quot;&gt;Intl.Locale&lt;/a&gt;&lt;/code&gt; objects or values that convert to &lt;a href=&quot;https://www.unicode.org/reports/tr35/tr35.html#BCP_47_Conformance&quot;&gt;Unicode BCP 47 locale identifier &lt;/a&gt;strings. If the &lt;code&gt;locales&lt;/code&gt; argument is not provided or is undefined, the runtime's default locale is used.</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 인수는 특정 로케일 (또는 이들의 목록에서 로케일이) 주어진 작업에 사용하기 위해 고려해야 할 것을 요청합니다. 단일 로케일은 &lt;code&gt;&lt;a href=&quot;intl/locale&quot;&gt;Intl.Locale&lt;/a&gt;&lt;/code&gt; 객체 또는 &lt;a href=&quot;https://www.unicode.org/reports/tr35/tr35.html#BCP_47_Conformance&quot;&gt;유니 코드 BCP 47 로케일 식별자 인&lt;/a&gt; 문자열 로 지정할 수 있습니다 . 여러 로케일을 지정할 수 있습니다 (그리고 각 로케일을 순서대로 평가하고 구현에서 지원하는 로케일과 비교하여 결정됨). 배열 (또는 &lt;code&gt;length&lt;/code&gt; 속성 및 해당 색인 요소 가있는 배열 유사 객체)을 전달하여 지정 될 수 있습니다. 요소는 &lt;code&gt;&lt;a href=&quot;intl/locale&quot;&gt;Intl.Locale&lt;/a&gt;&lt;/code&gt; 개체이거나 &lt;a href=&quot;https://www.unicode.org/reports/tr35/tr35.html#BCP_47_Conformance&quot;&gt;유니 코드 BCP 47 로캘 식별자&lt;/a&gt; 문자열 로 변환되는 값입니다 . 경우] &lt;code&gt;locales&lt;/code&gt; 인수 제공되지 않거나 정의되지 않은 경우 런타임의 기본 로캘이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7086a2f95f0fc388bf0358b543f97d1674a54c6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locales&lt;/code&gt; argument, after stripping off all Unicode extensions, is interpreted as a prioritized request from the application. The runtime compares it against the locales it has available and picks the best one available. Two matching algorithms exist: the &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; matcher follows the Lookup algorithm specified in &lt;a href=&quot;http://tools.ietf.org/html/rfc4647#section-3.4&quot;&gt;BCP 47&lt;/a&gt;; the &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; matcher lets the runtime provide a locale that's at least, but possibly more, suited for the request than the result of the Lookup algorithm. If the application doesn't provide a &lt;code&gt;locales&lt;/code&gt; argument, or the runtime doesn't have a locale that matches the request, then the runtime's default locale is used. The matcher can be selected using a property of the &lt;code&gt;options&lt;/code&gt; argument (see below).</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; 인수는, 모든 유니 코드 확장을 제거 한 후, 응용 프로그램에서 우선 순위 요청으로 해석됩니다. 런타임은 사용 가능한 로케일과 비교하여 사용 가능한 최상의 로케일을 선택합니다. 두 개의 일치 알고리즘이 존재합니다. &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; 매처는 &lt;a href=&quot;http://tools.ietf.org/html/rfc4647#section-3.4&quot;&gt;BCP 47에&lt;/a&gt; 지정된 조회 알고리즘을 따릅니다 . &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; 정규 런타임이 조회 알고리즘의 결과보다 요구에 적합한 로케일 가능성이 더 그 최소한의, 그러나를 제공 할 수 있습니다. 응용 프로그램이 &lt;code&gt;locales&lt;/code&gt; 인수를 제공하지 않거나 런타임에 요청과 일치하는 로케일이없는 경우 런타임의 기본 로케일이 사용됩니다. &lt;code&gt;options&lt;/code&gt; 인수 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="5dccb87d08edc337f2f357cd2acafb6f2c13816f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;map()&lt;/code&gt; method calls a provided callback function (&lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt;) once for each element in a typed array, in order, and constructs a new typed array from the results.</source>
          <target state="translated">&lt;code&gt;map()&lt;/code&gt; 메소드는 제공 콜백 함수 (호출 &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt; 위해 형식화 된 배열의 각 요소에 대한 회)을하고, 그 결과로부터 새로운 형식화 된 배열을 구성한다.</target>
        </trans-unit>
        <trans-unit id="b08d877e6bf413fc13c3d37199506f7d0a1e0e66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;map&lt;/code&gt; method calls a provided &lt;code&gt;callback&lt;/code&gt; function once for each element in a typed array, in order, and constructs a new typed array from the results. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the typed array which have assigned values; it is not invoked for indexes that are undefined, those which have been deleted or which have never been assigned values.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 방법이 제공 호출 &lt;code&gt;callback&lt;/code&gt; 위해 형식화 된 어레이의 각 요소에 대해 한번 기능을하고, 그 결과로부터 새로운 형식화 된 배열을 구성한다. &lt;code&gt;callback&lt;/code&gt; 은 값이 할당 된 형식화 된 배열의 인덱스에 대해서만 호출됩니다. 정의되지 않은 인덱스, 삭제되었거나 값이 할당되지 않은 인덱스에 대해서는 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfae77744f16583101bc9d1e6d139a5d625553f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;match()&lt;/code&gt; method retrieves the matches when matching a &lt;em&gt;string&lt;/em&gt; against a &lt;em&gt;regular expression&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;match()&lt;/code&gt; 일치하는 경우 방법은 일치를 검색 &lt;em&gt;문자열&lt;/em&gt; 에 대한 &lt;em&gt;정규 표현식을&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="62b07c88c8ce8b1ed81ac4f82d472e7b18f1d2d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;match()&lt;/code&gt; method retrieves the result of matching a &lt;em&gt;string&lt;/em&gt; against a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;regular expression&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;match()&lt;/code&gt; 메소드는 매칭 결과 검색 &lt;em&gt;문자열&lt;/em&gt; 대하여 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;정규 표현&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e0c4ea3b93677397f306198157a58b3d636ecb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;matchAll()&lt;/code&gt; method returns an iterator of all results matching a &lt;var&gt;string&lt;/var&gt; against a &lt;em&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;regular expression&lt;/a&gt;&lt;/em&gt;, including &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges&quot;&gt;capturing groups&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;matchAll()&lt;/code&gt; 메소드는 일치하는 모든 결과 반복자 반환 &lt;var&gt;string&lt;/var&gt; 대해 &lt;em&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;정규 표현식&lt;/a&gt;&lt;/em&gt; 을 포함 &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges&quot;&gt;포착기를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1cd36e9e374ad9091fa6699ae6fe45d18730e8eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;multiline&lt;/code&gt; property indicates whether or not the &quot;&lt;code&gt;m&lt;/code&gt;&quot; flag is used with the regular expression. &lt;code&gt;multiline&lt;/code&gt; is a read-only property of an individual regular expression instance.</source>
          <target state="translated">&lt;code&gt;multiline&lt;/code&gt; 속성 &quot;여부를 나타내는 &lt;code&gt;m&lt;/code&gt; &quot;플래그는 일반 식으로 사용된다. &lt;code&gt;multiline&lt;/code&gt; 개별 정규 표현식 인스턴스의 읽기 전용 속성입니다.</target>
        </trans-unit>
        <trans-unit id="558f554fcdc8ea52cd4b8fe404a0f920fe941d72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; parameter is the name of the &quot;module object&quot; which will be used as a kind of namespace to refer to the exports. The &lt;code&gt;export&lt;/code&gt; parameters specify individual named exports, while the &lt;code&gt;import * as name&lt;/code&gt; syntax imports all of them. Below are examples to clarify the syntax.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 매개 변수는 수출을 참조하는 네임 스페이스의 일종으로 사용되는 &quot;모듈 객체&quot;의 이름입니다. &lt;code&gt;export&lt;/code&gt; 매개 변수는 개별라는 이름의 수출을 지정하는 동안 &lt;code&gt;import * as name&lt;/code&gt; 그들 모두의 구문 가져옵니다. 다음은 구문을 명확하게하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="c2fd4b993fc5004622c5bb00bf202352054f7967" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property returns the name of a function statement.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 속성은 함수 명령문의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2283ba7d359450bc81731af9b0a2b87f569352d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new.target&lt;/code&gt; property is a meta property that is available to all functions. In &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, &lt;code&gt;new.target&lt;/code&gt; refers to the &lt;code&gt;new.target&lt;/code&gt; of the surrounding function.</source>
          <target state="translated">&lt;code&gt;new.target&lt;/code&gt; 속성은 모든 기능을 사용할 수있는 메타 속성입니다. 에서는 &lt;a href=&quot;../functions/arrow_functions&quot;&gt;화살표 기능&lt;/a&gt; , &lt;code&gt;new.target&lt;/code&gt; 가 받는 지칭 &lt;code&gt;new.target&lt;/code&gt; 주변 기능.</target>
        </trans-unit>
        <trans-unit id="05d72bd7d6c2faf93d2bfa75c49ab72c07e3d655" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new.target&lt;/code&gt; pseudo-property is available in all functions.</source>
          <target state="translated">&lt;code&gt;new.target&lt;/code&gt; 의사 속성은 모든 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ce76926b68cdc3a461eccb5b461dabd528f74bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new.target&lt;/code&gt; syntax consists of the keyword &lt;code&gt;&quot;new&lt;/code&gt;&quot;, a dot, and a property name &lt;code&gt;&quot;target&quot;&lt;/code&gt;. Normally &quot;&lt;code&gt;new.&quot;&lt;/code&gt; serves as the context for a property access, but here &lt;code&gt;&quot;new.&quot;&lt;/code&gt; is not really an object. In constructor calls, however, &lt;code&gt;new.target&lt;/code&gt; refers to the constructor invoked by &lt;code&gt;new&lt;/code&gt; and so &quot;&lt;code&gt;new.&lt;/code&gt;&quot; becomes a virtual context.</source>
          <target state="translated">&lt;code&gt;new.target&lt;/code&gt; 구문 키워드로 구성되어 &lt;code&gt;&quot;new&lt;/code&gt; &quot;, 점 및 속성 이름 &lt;code&gt;&quot;target&quot;&lt;/code&gt; . 일반적으로 &quot; &lt;code&gt;new.&quot;&lt;/code&gt; 속성 액세스에 대한 컨텍스트 역할을하지만 여기서는 &lt;code&gt;&quot;new.&quot;&lt;/code&gt; 실제로는 객체가 아닙니다. 그러나 생성자 호출에서 &lt;code&gt;new.target&lt;/code&gt; 은 &lt;code&gt;new&lt;/code&gt; 에 의해 호출 된 생성자를 참조 하므로 &quot; &lt;code&gt;new.&lt;/code&gt; &quot;는 가상 컨텍스트가됩니다.</target>
        </trans-unit>
        <trans-unit id="a5874cb5dc6b171fd19f5df59c381687a5fb33db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new.target&lt;/code&gt; syntax consists of the keyword &lt;code&gt;new&lt;/code&gt;, a dot, and the identifier &lt;code&gt;target&lt;/code&gt;. Normally, the left-hand side of the dot is the object on which property access is performed, but here, &lt;code&gt;new&lt;/code&gt; is not an object.</source>
          <target state="translated">&lt;code&gt;new.target&lt;/code&gt; 구문 키워드 이루어져 &lt;code&gt;new&lt;/code&gt; 도트 및 식별자 &lt;code&gt;target&lt;/code&gt; . 일반적으로 점의 왼쪽은 속성 액세스가 수행되는 개체이지만 여기서는 &lt;code&gt;new&lt;/code&gt; 는 개체가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ef5a6e0bacf2e5d1583aab92e455acd5428dabb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; keyword does the following things:</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 키워드는 다음과 같은 작업을 수행합니다</target>
        </trans-unit>
        <trans-unit id="b6c4ae8e0eb36faba42bc6c19096d13e68106dc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; lets developers create an instance of a user-defined object type or of one of the built-in object types that has a constructor function.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 개발자가 사용자 정의 개체 형식의 인스턴스를 만들거나 할 수있는 생성자 기능이 내장 된 객체 유형 중 하나.</target>
        </trans-unit>
        <trans-unit id="9cd6623e561ade5b01d90352a992281d58b6ac45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; operator creates an instance of a constructor.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 오퍼레이터 생성자의 인스턴스를 생성한다.</target>
        </trans-unit>
        <trans-unit id="5ed10ac2bb10914a1fdba3a5113f074619f861c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next()&lt;/code&gt; method must always return an object with appropriate properties including &lt;code&gt;done&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. If a non-object value gets returned (such as &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;), a &lt;a href=&quot;global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;&quot;iterator.next() returned a non-object value&quot;&lt;/code&gt;) will be thrown.</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; 메소드는 항상 포함 적합한 특성을 가진 개체를 반환해야합니다 &lt;code&gt;done&lt;/code&gt; 하고 &lt;code&gt;value&lt;/code&gt; . 객체가 아닌 값 (예 : &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; ) 이 반환되면 &lt;a href=&quot;global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;&quot;iterator.next() returned a non-object value&quot;&lt;/code&gt; )이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="462d4bdc4b9f4c3dd5b515891749cd7ae8060390" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next()&lt;/code&gt; method returns an object with two properties &lt;code&gt;done&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. You can also provide a parameter to the &lt;code&gt;next&lt;/code&gt; method to send a value to the generator.</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; 메소드는 두 가지 속성을 가진 객체를 반환 &lt;code&gt;done&lt;/code&gt; 하고 &lt;code&gt;value&lt;/code&gt; . &lt;code&gt;next&lt;/code&gt; 메소드에 매개 변수를 제공 하여 생성기에 값을 보낼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e21521d991c151367409a72b02a44ae78a0be060" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; method always has to return an object with appropriate properties including &lt;code&gt;done&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. If a non-object value gets returned (such as &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;), a &lt;a href=&quot;global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;iterator.next() returned a non-object value&quot;) will be thrown.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 메소드는 항상 적절한 속성을 포함한 객체를 반환해야 &lt;code&gt;done&lt;/code&gt; 및 &lt;code&gt;value&lt;/code&gt; . 객체가 아닌 값이 반환되면 (예 : &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; ) &lt;a href=&quot;global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; ( &quot;iterator.next ()가 객체가 아닌 값을 반환 함&quot;)가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ef2d37084de751d87628b4d81e7e8295c61fe04e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize()&lt;/code&gt; method helps solve this problem by converting a string into a normalized form common for all sequences of code points that represent the same characters. There are two main normalization forms, one based on &lt;strong&gt;canonical equivalence&lt;/strong&gt; and the other based on &lt;strong&gt;compatibility&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;normalize()&lt;/code&gt; 메소드는 동일한 문자를 나타내는 코드 포인트의 모든 시퀀스에 대해 정규화 된 형태로 공통 열로 변환하여이 문제를 해결하는 데 도움을 준다. &lt;strong&gt;표준 동등성을&lt;/strong&gt; 기반으로 &lt;strong&gt;하는 것과 &lt;/strong&gt;&lt;strong&gt;호환성을&lt;/strong&gt; 기반으로하는 다른 두 가지 주요 정규화 형식이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f174fb73ba3588cb8caa57f832fa3eb95986aa78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize()&lt;/code&gt; method returns the Unicode Normalization Form of a given string (if the value isn't a string, it will be converted to one first).</source>
          <target state="translated">&lt;code&gt;normalize()&lt;/code&gt; 메소드가 복귀 주어진 문자열의 유니 코드 표준화 양식 (값이 문자열이 아닌 경우,이 첫번째로 변환한다).</target>
        </trans-unit>
        <trans-unit id="88b96eb2c80b76f415dea15686da060a9a241fdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize()&lt;/code&gt; method returns the Unicode Normalization Form of the string.</source>
          <target state="translated">&lt;code&gt;normalize()&lt;/code&gt; 메소드는 문자열의 유니 코드 표준화 양식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4aff30fdae8f257c106e47a8bb7dd1011781b3a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize()&lt;/code&gt; method returns the specified Unicode Normalization Form of the string. It does not affect the value of the string itself.</source>
          <target state="translated">&lt;code&gt;normalize()&lt;/code&gt; 메서드가 반환하는 문자열의 지정된 유니 코드 표준화 양식. 문자열 자체의 값에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8970c03025d4ded0d662a33a3f3917b925ab0b14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; argument must be an object with properties that vary between constructors and functions. If the &lt;code&gt;options&lt;/code&gt; argument is not provided or is undefined, default values are used for all properties.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 인수는 생성자와 기능 사이에서 변화하는 속성이있는 객체 여야합니다. 경우 &lt;code&gt;options&lt;/code&gt; 인수가 제공되지 않거나 정의되지, 기본 값은 모든 속성에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7719adbf278a24b0a2959d09a64c183dd7aadb86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownKeys()&lt;/code&gt; method must return an enumerable object.</source>
          <target state="translated">&lt;code&gt;ownKeys()&lt;/code&gt; 메소드는 열거 객체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="755c639a04dde41cfac04b322a645ce06eb3162a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownKeys&lt;/code&gt; method must return an enumerable object.</source>
          <target state="translated">&lt;code&gt;ownKeys&lt;/code&gt; 의 방법은 열거 객체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="ecbfd2872cecfb72bb48dc7cf45ebe8a9cf8640f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padEnd()&lt;/code&gt; method pads the current string with a given string (repeated, if needed) so that the resulting string reaches a given length. The padding is applied from the end (right) of the current string.</source>
          <target state="translated">&lt;code&gt;padEnd()&lt;/code&gt; 메소드 패드 주어진 문자열 (필요한 경우) 반복하여 현재 문자열되도록 결과 스트링은 주어진 길이에 도달한다. 패딩은 현재 문자열의 끝 (오른쪽)부터 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9a0f789f93aff090a4688a388b965b25001a2ebf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padEnd()&lt;/code&gt; method pads the current string with a given string (repeated, if needed) so that the resulting string reaches a given length. The padding is applied from the end of the current string.</source>
          <target state="translated">&lt;code&gt;padEnd()&lt;/code&gt; 메소드 패드 주어진 문자열 (필요한 경우) 반복하여 현재 문자열되도록 결과 스트링은 주어진 길이에 도달한다. 패딩은 현재 문자열의 끝부터 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="18cee9d88b83b975af2ab16ea8f8315d121feff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padStart()&lt;/code&gt; method pads the current string with another string (multiple times, if needed) until the resulting string reaches the given length. The padding is applied from the start (left) of the current string.</source>
          <target state="translated">&lt;code&gt;padStart()&lt;/code&gt; 생성 된 문자열 도달 주어진 길이까지있어서 패드 (필요하다면 여러 번)을 다른 문자열로 현재 스트링. 패딩은 현재 문자열의 시작 (왼쪽)부터 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e5c2e44c90045f75da840c8e507e807f042a0992" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padStart()&lt;/code&gt; method pads the current string with another string (multiple times, if needed) until the resulting string reaches the given length. The padding is applied from the start of the current string.</source>
          <target state="translated">&lt;code&gt;padStart()&lt;/code&gt; 생성 된 문자열 도달 주어진 길이까지있어서 패드 (필요하다면 여러 번)을 다른 문자열로 현재 스트링. 패딩은 현재 문자열의 시작 부분부터 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="4808f0c27dc8a30db41eae76935e7000392c6c7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse()&lt;/code&gt; method takes a date string (such as &quot;&lt;code&gt;2011-10-10T14:48:00&lt;/code&gt;&quot;) and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC.</source>
          <target state="translated">&lt;code&gt;parse()&lt;/code&gt; 메서드는 날짜 (예 : &quot;와 같은 문자열 소요 &lt;code&gt;2011-10-10T14:48:00&lt;/code&gt; 1970 년 1 월 1 일, 00:00:00 (UTC)부터 반환 (밀리 초)을&quot;).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
